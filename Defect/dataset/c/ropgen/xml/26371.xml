<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26371.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">qemu_gluster_parse_json</name><parameter_list pos:start="1:35" pos:end="3:63">(<parameter pos:start="1:36" pos:end="1:64"><decl pos:start="1:36" pos:end="1:64"><type pos:start="1:36" pos:end="1:64"><name pos:start="1:36" pos:end="1:57">BlockdevOptionsGluster</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:64">gconf</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:39">QDict</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:48">options</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:62"><decl pos:start="3:51" pos:end="3:62"><type pos:start="3:51" pos:end="3:62"><name pos:start="3:51" pos:end="3:55">Error</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier><modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="343:1">{<block_content pos:start="7:5" pos:end="341:18">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">SocketAddress</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:25">gsconf</name> <init pos:start="9:27" pos:end="9:32">= <expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">SocketAddressList</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:27">curr</name> <init pos:start="11:29" pos:end="11:34">= <expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">QDict</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:26">backing_options</name> <init pos:start="13:28" pos:end="13:33">= <expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:13">str</name> <init pos:start="17:15" pos:end="17:20">= <expr pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:20">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">char</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:19">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">size_t</name></type> <name pos:start="21:12" pos:end="21:22">num_servers</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>, <decl pos:start="23:12" pos:end="23:15"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:15">type</name></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:54">/* create opts info from runtime_json_opts list */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:71"><expr pos:start="29:5" pos:end="29:70"><name pos:start="29:5" pos:end="29:8">opts</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:70"><name pos:start="29:12" pos:end="29:27">qemu_opts_create</name><argument_list pos:start="29:28" pos:end="29:70">(<argument pos:start="29:29" pos:end="29:46"><expr pos:start="29:29" pos:end="29:46"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:46">runtime_json_opts</name></expr></argument>, <argument pos:start="29:49" pos:end="29:52"><expr pos:start="29:49" pos:end="29:52"><name pos:start="29:49" pos:end="29:52">NULL</name></expr></argument>, <argument pos:start="29:55" pos:end="29:55"><expr pos:start="29:55" pos:end="29:55"><literal type="number" pos:start="29:55" pos:end="29:55">0</literal></expr></argument>, <argument pos:start="29:58" pos:end="29:69"><expr pos:start="29:58" pos:end="29:69"><operator pos:start="29:58" pos:end="29:58">&amp;</operator><name pos:start="29:59" pos:end="29:69">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><call pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:26">qemu_opts_absorb_qdict</name><argument_list pos:start="31:27" pos:end="31:53">(<argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">opts</name></expr></argument>, <argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40">options</name></expr></argument>, <argument pos:start="31:43" pos:end="31:52"><expr pos:start="31:43" pos:end="31:52"><operator pos:start="31:43" pos:end="31:43">&amp;</operator><name pos:start="31:44" pos:end="31:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">local_err</name></expr>)</condition> <block pos:start="33:20" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:17">

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:75"><expr pos:start="41:5" pos:end="41:74"><name pos:start="41:5" pos:end="41:15">num_servers</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:74"><name pos:start="41:19" pos:end="41:37">qdict_array_entries</name><argument_list pos:start="41:38" pos:end="41:74">(<argument pos:start="41:39" pos:end="41:45"><expr pos:start="41:39" pos:end="41:45"><name pos:start="41:39" pos:end="41:45">options</name></expr></argument>, <argument pos:start="41:48" pos:end="41:73"><expr pos:start="41:48" pos:end="41:73"><name pos:start="41:48" pos:end="41:73">GLUSTER_OPT_SERVER_PATTERN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:19">num_servers</name> <operator pos:start="43:21" pos:end="43:21">&lt;</operator> <literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>)</condition> <block pos:start="43:26" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:17">

        <expr_stmt pos:start="45:9" pos:end="45:65"><expr pos:start="45:9" pos:end="45:64"><call pos:start="45:9" pos:end="45:64"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="45:64">(<argument pos:start="45:20" pos:end="45:29"><expr pos:start="45:20" pos:end="45:29"><operator pos:start="45:20" pos:end="45:20">&amp;</operator><name pos:start="45:21" pos:end="45:29">local_err</name></expr></argument>, <argument pos:start="45:32" pos:end="45:53"><expr pos:start="45:32" pos:end="45:53"><name pos:start="45:32" pos:end="45:53">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="45:56" pos:end="45:63"><expr pos:start="45:56" pos:end="45:63"><literal type="string" pos:start="45:56" pos:end="45:63">"server"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:17">goto <name pos:start="47:14" pos:end="47:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:49"><expr pos:start="53:5" pos:end="53:48"><name pos:start="53:5" pos:end="53:7">ptr</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:48"><name pos:start="53:11" pos:end="53:22">qemu_opt_get</name><argument_list pos:start="53:23" pos:end="53:48">(<argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">opts</name></expr></argument>, <argument pos:start="53:30" pos:end="53:47"><expr pos:start="53:30" pos:end="53:47"><name pos:start="53:30" pos:end="53:47">GLUSTER_OPT_VOLUME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:13">(<expr pos:start="55:9" pos:end="55:12"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:12">ptr</name></expr>)</condition> <block pos:start="55:15" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:17">

        <expr_stmt pos:start="57:9" pos:end="57:75"><expr pos:start="57:9" pos:end="57:74"><call pos:start="57:9" pos:end="57:74"><name pos:start="57:9" pos:end="57:18">error_setg</name><argument_list pos:start="57:19" pos:end="57:74">(<argument pos:start="57:20" pos:end="57:29"><expr pos:start="57:20" pos:end="57:29"><operator pos:start="57:20" pos:end="57:20">&amp;</operator><name pos:start="57:21" pos:end="57:29">local_err</name></expr></argument>, <argument pos:start="57:32" pos:end="57:53"><expr pos:start="57:32" pos:end="57:53"><name pos:start="57:32" pos:end="57:53">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="57:56" pos:end="57:73"><expr pos:start="57:56" pos:end="57:73"><name pos:start="57:56" pos:end="57:73">GLUSTER_OPT_VOLUME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:17">goto <name pos:start="59:14" pos:end="59:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:9">gconf</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:17">volume</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:28">g_strdup</name><argument_list pos:start="63:29" pos:end="63:33">(<argument pos:start="63:30" pos:end="63:32"><expr pos:start="63:30" pos:end="63:32"><name pos:start="63:30" pos:end="63:32">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:47"><expr pos:start="67:5" pos:end="67:46"><name pos:start="67:5" pos:end="67:7">ptr</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:46"><name pos:start="67:11" pos:end="67:22">qemu_opt_get</name><argument_list pos:start="67:23" pos:end="67:46">(<argument pos:start="67:24" pos:end="67:27"><expr pos:start="67:24" pos:end="67:27"><name pos:start="67:24" pos:end="67:27">opts</name></expr></argument>, <argument pos:start="67:30" pos:end="67:45"><expr pos:start="67:30" pos:end="67:45"><name pos:start="67:30" pos:end="67:45">GLUSTER_OPT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:13">(<expr pos:start="69:9" pos:end="69:12"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:12">ptr</name></expr>)</condition> <block pos:start="69:15" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <expr_stmt pos:start="71:9" pos:end="71:73"><expr pos:start="71:9" pos:end="71:72"><call pos:start="71:9" pos:end="71:72"><name pos:start="71:9" pos:end="71:18">error_setg</name><argument_list pos:start="71:19" pos:end="71:72">(<argument pos:start="71:20" pos:end="71:29"><expr pos:start="71:20" pos:end="71:29"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:29">local_err</name></expr></argument>, <argument pos:start="71:32" pos:end="71:53"><expr pos:start="71:32" pos:end="71:53"><name pos:start="71:32" pos:end="71:53">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="71:56" pos:end="71:71"><expr pos:start="71:56" pos:end="71:71"><name pos:start="71:56" pos:end="71:71">GLUSTER_OPT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:32"><expr pos:start="77:5" pos:end="77:31"><name pos:start="77:5" pos:end="77:15"><name pos:start="77:5" pos:end="77:9">gconf</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">path</name></name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:31"><name pos:start="77:19" pos:end="77:26">g_strdup</name><argument_list pos:start="77:27" pos:end="77:31">(<argument pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><name pos:start="77:28" pos:end="77:30">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:24"><expr pos:start="79:5" pos:end="79:23"><call pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:17">qemu_opts_del</name><argument_list pos:start="79:18" pos:end="79:23">(<argument pos:start="79:19" pos:end="79:22"><expr pos:start="79:19" pos:end="79:22"><name pos:start="79:19" pos:end="79:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="83:5" pos:end="319:5">for <control pos:start="83:9" pos:end="83:37">(<init pos:start="83:10" pos:end="83:15"><expr pos:start="83:10" pos:end="83:14"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</init> <condition pos:start="83:17" pos:end="83:32"><expr pos:start="83:17" pos:end="83:31"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <name pos:start="83:21" pos:end="83:31">num_servers</name></expr>;</condition> <incr pos:start="83:34" pos:end="83:36"><expr pos:start="83:34" pos:end="83:36"><name pos:start="83:34" pos:end="83:34">i</name><operator pos:start="83:35" pos:end="83:36">++</operator></expr></incr>)</control> <block pos:start="83:39" pos:end="319:5">{<block_content pos:start="85:9" pos:end="317:19">

        <expr_stmt pos:start="85:9" pos:end="85:66"><expr pos:start="85:9" pos:end="85:65"><name pos:start="85:9" pos:end="85:11">str</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:65"><name pos:start="85:15" pos:end="85:29">g_strdup_printf</name><argument_list pos:start="85:30" pos:end="85:65">(<argument pos:start="85:31" pos:end="85:61"><expr pos:start="85:31" pos:end="85:61"><name pos:start="85:31" pos:end="85:56">GLUSTER_OPT_SERVER_PATTERN</name><literal type="string" pos:start="85:57" pos:end="85:61">"%d."</literal></expr></argument>, <argument pos:start="85:64" pos:end="85:64"><expr pos:start="85:64" pos:end="85:64"><name pos:start="85:64" pos:end="85:64">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:63"><expr pos:start="87:9" pos:end="87:62"><call pos:start="87:9" pos:end="87:62"><name pos:start="87:9" pos:end="87:30">qdict_extract_subqdict</name><argument_list pos:start="87:31" pos:end="87:62">(<argument pos:start="87:32" pos:end="87:38"><expr pos:start="87:32" pos:end="87:38"><name pos:start="87:32" pos:end="87:38">options</name></expr></argument>, <argument pos:start="87:41" pos:end="87:56"><expr pos:start="87:41" pos:end="87:56"><operator pos:start="87:41" pos:end="87:41">&amp;</operator><name pos:start="87:42" pos:end="87:56">backing_options</name></expr></argument>, <argument pos:start="87:59" pos:end="87:61"><expr pos:start="87:59" pos:end="87:61"><name pos:start="87:59" pos:end="87:61">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="91:9" pos:end="91:58">/* create opts info from runtime_type_opts list */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:75"><expr pos:start="93:9" pos:end="93:74"><name pos:start="93:9" pos:end="93:12">opts</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <call pos:start="93:16" pos:end="93:74"><name pos:start="93:16" pos:end="93:31">qemu_opts_create</name><argument_list pos:start="93:32" pos:end="93:74">(<argument pos:start="93:33" pos:end="93:50"><expr pos:start="93:33" pos:end="93:50"><operator pos:start="93:33" pos:end="93:33">&amp;</operator><name pos:start="93:34" pos:end="93:50">runtime_type_opts</name></expr></argument>, <argument pos:start="93:53" pos:end="93:56"><expr pos:start="93:53" pos:end="93:56"><name pos:start="93:53" pos:end="93:56">NULL</name></expr></argument>, <argument pos:start="93:59" pos:end="93:59"><expr pos:start="93:59" pos:end="93:59"><literal type="number" pos:start="93:59" pos:end="93:59">0</literal></expr></argument>, <argument pos:start="93:62" pos:end="93:73"><expr pos:start="93:62" pos:end="93:73"><operator pos:start="93:62" pos:end="93:62">&amp;</operator><name pos:start="93:63" pos:end="93:73">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:66"><expr pos:start="95:9" pos:end="95:65"><call pos:start="95:9" pos:end="95:65"><name pos:start="95:9" pos:end="95:30">qemu_opts_absorb_qdict</name><argument_list pos:start="95:31" pos:end="95:65">(<argument pos:start="95:32" pos:end="95:35"><expr pos:start="95:32" pos:end="95:35"><name pos:start="95:32" pos:end="95:35">opts</name></expr></argument>, <argument pos:start="95:38" pos:end="95:52"><expr pos:start="95:38" pos:end="95:52"><name pos:start="95:38" pos:end="95:52">backing_options</name></expr></argument>, <argument pos:start="95:55" pos:end="95:64"><expr pos:start="95:55" pos:end="95:64"><operator pos:start="95:55" pos:end="95:55">&amp;</operator><name pos:start="95:56" pos:end="95:64">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="101:9"><if pos:start="97:9" pos:end="101:9">if <condition pos:start="97:12" pos:end="97:22">(<expr pos:start="97:13" pos:end="97:21"><name pos:start="97:13" pos:end="97:21">local_err</name></expr>)</condition> <block pos:start="97:24" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:21">

            <goto pos:start="99:13" pos:end="99:21">goto <name pos:start="99:18" pos:end="99:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:51"><expr pos:start="105:9" pos:end="105:50"><name pos:start="105:9" pos:end="105:11">ptr</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:50"><name pos:start="105:15" pos:end="105:26">qemu_opt_get</name><argument_list pos:start="105:27" pos:end="105:50">(<argument pos:start="105:28" pos:end="105:31"><expr pos:start="105:28" pos:end="105:31"><name pos:start="105:28" pos:end="105:31">opts</name></expr></argument>, <argument pos:start="105:34" pos:end="105:49"><expr pos:start="105:34" pos:end="105:49"><name pos:start="105:34" pos:end="105:49">GLUSTER_OPT_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="117:9"><if pos:start="107:9" pos:end="117:9">if <condition pos:start="107:12" pos:end="107:17">(<expr pos:start="107:13" pos:end="107:16"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:16">ptr</name></expr>)</condition> <block pos:start="107:19" pos:end="117:9">{<block_content pos:start="109:13" pos:end="113:21">

            <expr_stmt pos:start="109:13" pos:end="109:77"><expr pos:start="109:13" pos:end="109:76"><call pos:start="109:13" pos:end="109:76"><name pos:start="109:13" pos:end="109:22">error_setg</name><argument_list pos:start="109:23" pos:end="109:76">(<argument pos:start="109:24" pos:end="109:33"><expr pos:start="109:24" pos:end="109:33"><operator pos:start="109:24" pos:end="109:24">&amp;</operator><name pos:start="109:25" pos:end="109:33">local_err</name></expr></argument>, <argument pos:start="109:36" pos:end="109:57"><expr pos:start="109:36" pos:end="109:57"><name pos:start="109:36" pos:end="109:57">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="109:60" pos:end="109:75"><expr pos:start="109:60" pos:end="109:75"><name pos:start="109:60" pos:end="109:75">GLUSTER_OPT_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:62"><expr pos:start="111:13" pos:end="111:61"><call pos:start="111:13" pos:end="111:61"><name pos:start="111:13" pos:end="111:29">error_append_hint</name><argument_list pos:start="111:30" pos:end="111:61">(<argument pos:start="111:31" pos:end="111:40"><expr pos:start="111:31" pos:end="111:40"><operator pos:start="111:31" pos:end="111:31">&amp;</operator><name pos:start="111:32" pos:end="111:40">local_err</name></expr></argument>, <argument pos:start="111:43" pos:end="111:57"><expr pos:start="111:43" pos:end="111:57"><name pos:start="111:43" pos:end="111:57">GERR_INDEX_HINT</name></expr></argument>, <argument pos:start="111:60" pos:end="111:60"><expr pos:start="111:60" pos:end="111:60"><name pos:start="111:60" pos:end="111:60">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="113:13" pos:end="113:21">goto <name pos:start="113:18" pos:end="113:20">out</name>;</goto>



        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:42"><expr pos:start="119:9" pos:end="119:41"><name pos:start="119:9" pos:end="119:14">gsconf</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <call pos:start="119:18" pos:end="119:41"><name pos:start="119:18" pos:end="119:23">g_new0</name><argument_list pos:start="119:24" pos:end="119:41">(<argument pos:start="119:25" pos:end="119:37"><expr pos:start="119:25" pos:end="119:37"><name pos:start="119:25" pos:end="119:37">SocketAddress</name></expr></argument>, <argument pos:start="119:40" pos:end="119:40"><expr pos:start="119:40" pos:end="119:40"><literal type="number" pos:start="119:40" pos:end="119:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="125:9"><if pos:start="121:9" pos:end="125:9">if <condition pos:start="121:12" pos:end="121:32">(<expr pos:start="121:13" pos:end="121:31"><operator pos:start="121:13" pos:end="121:13">!</operator><call pos:start="121:14" pos:end="121:31"><name pos:start="121:14" pos:end="121:19">strcmp</name><argument_list pos:start="121:20" pos:end="121:31">(<argument pos:start="121:21" pos:end="121:23"><expr pos:start="121:21" pos:end="121:23"><name pos:start="121:21" pos:end="121:23">ptr</name></expr></argument>, <argument pos:start="121:26" pos:end="121:30"><expr pos:start="121:26" pos:end="121:30"><literal type="string" pos:start="121:26" pos:end="121:30">"tcp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:34" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:25">

            <expr_stmt pos:start="123:13" pos:end="123:25"><expr pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:15">ptr</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <literal type="string" pos:start="123:19" pos:end="123:24">"inet"</literal></expr>;</expr_stmt>       <comment type="block" pos:start="123:33" pos:end="123:57">/* accept legacy "tcp" */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="129:67"><expr pos:start="127:9" pos:end="129:66"><name pos:start="127:9" pos:end="127:12">type</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <call pos:start="127:16" pos:end="129:66"><name pos:start="127:16" pos:end="127:30">qapi_enum_parse</name><argument_list pos:start="127:31" pos:end="129:66">(<argument pos:start="127:32" pos:end="127:55"><expr pos:start="127:32" pos:end="127:55"><name pos:start="127:32" pos:end="127:55">SocketAddressType_lookup</name></expr></argument>, <argument pos:start="127:58" pos:end="127:60"><expr pos:start="127:58" pos:end="127:60"><name pos:start="127:58" pos:end="127:60">ptr</name></expr></argument>,

                               <argument pos:start="129:32" pos:end="129:55"><expr pos:start="129:32" pos:end="129:55"><name pos:start="129:32" pos:end="129:55">SOCKET_ADDRESS_TYPE__MAX</name></expr></argument>, <argument pos:start="129:58" pos:end="129:59"><expr pos:start="129:58" pos:end="129:59"><operator pos:start="129:58" pos:end="129:58">-</operator><literal type="number" pos:start="129:59" pos:end="129:59">1</literal></expr></argument>, <argument pos:start="129:62" pos:end="129:65"><expr pos:start="129:62" pos:end="129:65"><name pos:start="129:62" pos:end="129:65">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="145:9"><if pos:start="131:9" pos:end="145:9">if <condition pos:start="131:12" pos:end="133:48">(<expr pos:start="131:13" pos:end="133:47"><name pos:start="131:13" pos:end="131:16">type</name> <operator pos:start="131:18" pos:end="131:19">!=</operator> <name pos:start="131:21" pos:end="131:44">SOCKET_ADDRESS_TYPE_INET</name>

            <operator pos:start="133:13" pos:end="133:14">&amp;&amp;</operator> <name pos:start="133:16" pos:end="133:19">type</name> <operator pos:start="133:21" pos:end="133:22">!=</operator> <name pos:start="133:24" pos:end="133:47">SOCKET_ADDRESS_TYPE_UNIX</name></expr>)</condition> <block pos:start="133:50" pos:end="145:9">{<block_content pos:start="135:13" pos:end="143:21">

            <expr_stmt pos:start="135:13" pos:end="139:41"><expr pos:start="135:13" pos:end="139:40"><call pos:start="135:13" pos:end="139:40"><name pos:start="135:13" pos:end="135:22">error_setg</name><argument_list pos:start="135:23" pos:end="139:40">(<argument pos:start="135:24" pos:end="135:33"><expr pos:start="135:24" pos:end="135:33"><operator pos:start="135:24" pos:end="135:24">&amp;</operator><name pos:start="135:25" pos:end="135:33">local_err</name></expr></argument>,

                       <argument pos:start="137:24" pos:end="137:63"><expr pos:start="137:24" pos:end="137:63"><literal type="string" pos:start="137:24" pos:end="137:63">"Parameter '%s' may be 'inet' or 'unix'"</literal></expr></argument>,

                       <argument pos:start="139:24" pos:end="139:39"><expr pos:start="139:24" pos:end="139:39"><name pos:start="139:24" pos:end="139:39">GLUSTER_OPT_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:62"><expr pos:start="141:13" pos:end="141:61"><call pos:start="141:13" pos:end="141:61"><name pos:start="141:13" pos:end="141:29">error_append_hint</name><argument_list pos:start="141:30" pos:end="141:61">(<argument pos:start="141:31" pos:end="141:40"><expr pos:start="141:31" pos:end="141:40"><operator pos:start="141:31" pos:end="141:31">&amp;</operator><name pos:start="141:32" pos:end="141:40">local_err</name></expr></argument>, <argument pos:start="141:43" pos:end="141:57"><expr pos:start="141:43" pos:end="141:57"><name pos:start="141:43" pos:end="141:57">GERR_INDEX_HINT</name></expr></argument>, <argument pos:start="141:60" pos:end="141:60"><expr pos:start="141:60" pos:end="141:60"><name pos:start="141:60" pos:end="141:60">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="143:13" pos:end="143:21">goto <name pos:start="143:18" pos:end="143:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:28"><expr pos:start="147:9" pos:end="147:27"><name pos:start="147:9" pos:end="147:20"><name pos:start="147:9" pos:end="147:14">gsconf</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:20">type</name></name> <operator pos:start="147:22" pos:end="147:22">=</operator> <name pos:start="147:24" pos:end="147:27">type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:28"><expr pos:start="149:9" pos:end="149:27"><call pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:21">qemu_opts_del</name><argument_list pos:start="149:22" pos:end="149:27">(<argument pos:start="149:23" pos:end="149:26"><expr pos:start="149:23" pos:end="149:26"><name pos:start="149:23" pos:end="149:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="153:9" pos:end="285:9"><if pos:start="153:9" pos:end="251:9">if <condition pos:start="153:12" pos:end="153:53">(<expr pos:start="153:13" pos:end="153:52"><name pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:18">gsconf</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:24">type</name></name> <operator pos:start="153:26" pos:end="153:27">==</operator> <name pos:start="153:29" pos:end="153:52">SOCKET_ADDRESS_TYPE_INET</name></expr>)</condition> <block pos:start="153:55" pos:end="251:9">{<block_content pos:start="157:13" pos:end="249:32">

            <comment type="block" pos:start="155:13" pos:end="155:62">/* create opts info from runtime_inet_opts list */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:79"><expr pos:start="157:13" pos:end="157:78"><name pos:start="157:13" pos:end="157:16">opts</name> <operator pos:start="157:18" pos:end="157:18">=</operator> <call pos:start="157:20" pos:end="157:78"><name pos:start="157:20" pos:end="157:35">qemu_opts_create</name><argument_list pos:start="157:36" pos:end="157:78">(<argument pos:start="157:37" pos:end="157:54"><expr pos:start="157:37" pos:end="157:54"><operator pos:start="157:37" pos:end="157:37">&amp;</operator><name pos:start="157:38" pos:end="157:54">runtime_inet_opts</name></expr></argument>, <argument pos:start="157:57" pos:end="157:60"><expr pos:start="157:57" pos:end="157:60"><name pos:start="157:57" pos:end="157:60">NULL</name></expr></argument>, <argument pos:start="157:63" pos:end="157:63"><expr pos:start="157:63" pos:end="157:63"><literal type="number" pos:start="157:63" pos:end="157:63">0</literal></expr></argument>, <argument pos:start="157:66" pos:end="157:77"><expr pos:start="157:66" pos:end="157:77"><operator pos:start="157:66" pos:end="157:66">&amp;</operator><name pos:start="157:67" pos:end="157:77">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:70"><expr pos:start="159:13" pos:end="159:69"><call pos:start="159:13" pos:end="159:69"><name pos:start="159:13" pos:end="159:34">qemu_opts_absorb_qdict</name><argument_list pos:start="159:35" pos:end="159:69">(<argument pos:start="159:36" pos:end="159:39"><expr pos:start="159:36" pos:end="159:39"><name pos:start="159:36" pos:end="159:39">opts</name></expr></argument>, <argument pos:start="159:42" pos:end="159:56"><expr pos:start="159:42" pos:end="159:56"><name pos:start="159:42" pos:end="159:56">backing_options</name></expr></argument>, <argument pos:start="159:59" pos:end="159:68"><expr pos:start="159:59" pos:end="159:68"><operator pos:start="159:59" pos:end="159:59">&amp;</operator><name pos:start="159:60" pos:end="159:68">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="165:13"><if pos:start="161:13" pos:end="165:13">if <condition pos:start="161:16" pos:end="161:26">(<expr pos:start="161:17" pos:end="161:25"><name pos:start="161:17" pos:end="161:25">local_err</name></expr>)</condition> <block pos:start="161:28" pos:end="165:13">{<block_content pos:start="163:17" pos:end="163:25">

                <goto pos:start="163:17" pos:end="163:25">goto <name pos:start="163:22" pos:end="163:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="169:13" pos:end="169:55"><expr pos:start="169:13" pos:end="169:54"><name pos:start="169:13" pos:end="169:15">ptr</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:54"><name pos:start="169:19" pos:end="169:30">qemu_opt_get</name><argument_list pos:start="169:31" pos:end="169:54">(<argument pos:start="169:32" pos:end="169:35"><expr pos:start="169:32" pos:end="169:35"><name pos:start="169:32" pos:end="169:35">opts</name></expr></argument>, <argument pos:start="169:38" pos:end="169:53"><expr pos:start="169:38" pos:end="169:53"><name pos:start="169:38" pos:end="169:53">GLUSTER_OPT_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="181:13"><if pos:start="171:13" pos:end="181:13">if <condition pos:start="171:16" pos:end="171:21">(<expr pos:start="171:17" pos:end="171:20"><operator pos:start="171:17" pos:end="171:17">!</operator><name pos:start="171:18" pos:end="171:20">ptr</name></expr>)</condition> <block pos:start="171:23" pos:end="181:13">{<block_content pos:start="173:17" pos:end="179:25">

                <expr_stmt pos:start="173:17" pos:end="175:45"><expr pos:start="173:17" pos:end="175:44"><call pos:start="173:17" pos:end="175:44"><name pos:start="173:17" pos:end="173:26">error_setg</name><argument_list pos:start="173:27" pos:end="175:44">(<argument pos:start="173:28" pos:end="173:37"><expr pos:start="173:28" pos:end="173:37"><operator pos:start="173:28" pos:end="173:28">&amp;</operator><name pos:start="173:29" pos:end="173:37">local_err</name></expr></argument>, <argument pos:start="173:40" pos:end="173:61"><expr pos:start="173:40" pos:end="173:61"><name pos:start="173:40" pos:end="173:61">QERR_MISSING_PARAMETER</name></expr></argument>,

                           <argument pos:start="175:28" pos:end="175:43"><expr pos:start="175:28" pos:end="175:43"><name pos:start="175:28" pos:end="175:43">GLUSTER_OPT_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:66"><expr pos:start="177:17" pos:end="177:65"><call pos:start="177:17" pos:end="177:65"><name pos:start="177:17" pos:end="177:33">error_append_hint</name><argument_list pos:start="177:34" pos:end="177:65">(<argument pos:start="177:35" pos:end="177:44"><expr pos:start="177:35" pos:end="177:44"><operator pos:start="177:35" pos:end="177:35">&amp;</operator><name pos:start="177:36" pos:end="177:44">local_err</name></expr></argument>, <argument pos:start="177:47" pos:end="177:61"><expr pos:start="177:47" pos:end="177:61"><name pos:start="177:47" pos:end="177:61">GERR_INDEX_HINT</name></expr></argument>, <argument pos:start="177:64" pos:end="177:64"><expr pos:start="177:64" pos:end="177:64"><name pos:start="177:64" pos:end="177:64">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="179:17" pos:end="179:25">goto <name pos:start="179:22" pos:end="179:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:48"><expr pos:start="183:13" pos:end="183:47"><name pos:start="183:13" pos:end="183:31"><name pos:start="183:13" pos:end="183:18">gsconf</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:21">u</name><operator pos:start="183:22" pos:end="183:22">.</operator><name pos:start="183:23" pos:end="183:26">inet</name><operator pos:start="183:27" pos:end="183:27">.</operator><name pos:start="183:28" pos:end="183:31">host</name></name> <operator pos:start="183:33" pos:end="183:33">=</operator> <call pos:start="183:35" pos:end="183:47"><name pos:start="183:35" pos:end="183:42">g_strdup</name><argument_list pos:start="183:43" pos:end="183:47">(<argument pos:start="183:44" pos:end="183:46"><expr pos:start="183:44" pos:end="183:46"><name pos:start="183:44" pos:end="183:46">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:55"><expr pos:start="185:13" pos:end="185:54"><name pos:start="185:13" pos:end="185:15">ptr</name> <operator pos:start="185:17" pos:end="185:17">=</operator> <call pos:start="185:19" pos:end="185:54"><name pos:start="185:19" pos:end="185:30">qemu_opt_get</name><argument_list pos:start="185:31" pos:end="185:54">(<argument pos:start="185:32" pos:end="185:35"><expr pos:start="185:32" pos:end="185:35"><name pos:start="185:32" pos:end="185:35">opts</name></expr></argument>, <argument pos:start="185:38" pos:end="185:53"><expr pos:start="185:38" pos:end="185:53"><name pos:start="185:38" pos:end="185:53">GLUSTER_OPT_PORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="187:13" pos:end="197:13"><if pos:start="187:13" pos:end="197:13">if <condition pos:start="187:16" pos:end="187:21">(<expr pos:start="187:17" pos:end="187:20"><operator pos:start="187:17" pos:end="187:17">!</operator><name pos:start="187:18" pos:end="187:20">ptr</name></expr>)</condition> <block pos:start="187:23" pos:end="197:13">{<block_content pos:start="189:17" pos:end="195:25">

                <expr_stmt pos:start="189:17" pos:end="191:45"><expr pos:start="189:17" pos:end="191:44"><call pos:start="189:17" pos:end="191:44"><name pos:start="189:17" pos:end="189:26">error_setg</name><argument_list pos:start="189:27" pos:end="191:44">(<argument pos:start="189:28" pos:end="189:37"><expr pos:start="189:28" pos:end="189:37"><operator pos:start="189:28" pos:end="189:28">&amp;</operator><name pos:start="189:29" pos:end="189:37">local_err</name></expr></argument>, <argument pos:start="189:40" pos:end="189:61"><expr pos:start="189:40" pos:end="189:61"><name pos:start="189:40" pos:end="189:61">QERR_MISSING_PARAMETER</name></expr></argument>,

                           <argument pos:start="191:28" pos:end="191:43"><expr pos:start="191:28" pos:end="191:43"><name pos:start="191:28" pos:end="191:43">GLUSTER_OPT_PORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:66"><expr pos:start="193:17" pos:end="193:65"><call pos:start="193:17" pos:end="193:65"><name pos:start="193:17" pos:end="193:33">error_append_hint</name><argument_list pos:start="193:34" pos:end="193:65">(<argument pos:start="193:35" pos:end="193:44"><expr pos:start="193:35" pos:end="193:44"><operator pos:start="193:35" pos:end="193:35">&amp;</operator><name pos:start="193:36" pos:end="193:44">local_err</name></expr></argument>, <argument pos:start="193:47" pos:end="193:61"><expr pos:start="193:47" pos:end="193:61"><name pos:start="193:47" pos:end="193:61">GERR_INDEX_HINT</name></expr></argument>, <argument pos:start="193:64" pos:end="193:64"><expr pos:start="193:64" pos:end="193:64"><name pos:start="193:64" pos:end="193:64">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="195:17" pos:end="195:25">goto <name pos:start="195:22" pos:end="195:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:48"><expr pos:start="199:13" pos:end="199:47"><name pos:start="199:13" pos:end="199:31"><name pos:start="199:13" pos:end="199:18">gsconf</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:21">u</name><operator pos:start="199:22" pos:end="199:22">.</operator><name pos:start="199:23" pos:end="199:26">inet</name><operator pos:start="199:27" pos:end="199:27">.</operator><name pos:start="199:28" pos:end="199:31">port</name></name> <operator pos:start="199:33" pos:end="199:33">=</operator> <call pos:start="199:35" pos:end="199:47"><name pos:start="199:35" pos:end="199:42">g_strdup</name><argument_list pos:start="199:43" pos:end="199:47">(<argument pos:start="199:44" pos:end="199:46"><expr pos:start="199:44" pos:end="199:46"><name pos:start="199:44" pos:end="199:46">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="203:13" pos:end="207:15">/* defend for unsupported fields in InetSocketAddress,

             * i.e. @ipv4, @ipv6  and @to

             */</comment>

            <expr_stmt pos:start="209:13" pos:end="209:53"><expr pos:start="209:13" pos:end="209:52"><name pos:start="209:13" pos:end="209:15">ptr</name> <operator pos:start="209:17" pos:end="209:17">=</operator> <call pos:start="209:19" pos:end="209:52"><name pos:start="209:19" pos:end="209:30">qemu_opt_get</name><argument_list pos:start="209:31" pos:end="209:52">(<argument pos:start="209:32" pos:end="209:35"><expr pos:start="209:32" pos:end="209:35"><name pos:start="209:32" pos:end="209:35">opts</name></expr></argument>, <argument pos:start="209:38" pos:end="209:51"><expr pos:start="209:38" pos:end="209:51"><name pos:start="209:38" pos:end="209:51">GLUSTER_OPT_TO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="215:13"><if pos:start="211:13" pos:end="215:13">if <condition pos:start="211:16" pos:end="211:20">(<expr pos:start="211:17" pos:end="211:19"><name pos:start="211:17" pos:end="211:19">ptr</name></expr>)</condition> <block pos:start="211:22" pos:end="215:13">{<block_content pos:start="213:17" pos:end="213:45">

                <expr_stmt pos:start="213:17" pos:end="213:45"><expr pos:start="213:17" pos:end="213:44"><name pos:start="213:17" pos:end="213:37"><name pos:start="213:17" pos:end="213:22">gsconf</name><operator pos:start="213:23" pos:end="213:24">-&gt;</operator><name pos:start="213:25" pos:end="213:25">u</name><operator pos:start="213:26" pos:end="213:26">.</operator><name pos:start="213:27" pos:end="213:30">inet</name><operator pos:start="213:31" pos:end="213:31">.</operator><name pos:start="213:32" pos:end="213:37">has_to</name></name> <operator pos:start="213:39" pos:end="213:39">=</operator> <name pos:start="213:41" pos:end="213:44">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:55"><expr pos:start="217:13" pos:end="217:54"><name pos:start="217:13" pos:end="217:15">ptr</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <call pos:start="217:19" pos:end="217:54"><name pos:start="217:19" pos:end="217:30">qemu_opt_get</name><argument_list pos:start="217:31" pos:end="217:54">(<argument pos:start="217:32" pos:end="217:35"><expr pos:start="217:32" pos:end="217:35"><name pos:start="217:32" pos:end="217:35">opts</name></expr></argument>, <argument pos:start="217:38" pos:end="217:53"><expr pos:start="217:38" pos:end="217:53"><name pos:start="217:38" pos:end="217:53">GLUSTER_OPT_IPV4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="223:13"><if pos:start="219:13" pos:end="223:13">if <condition pos:start="219:16" pos:end="219:20">(<expr pos:start="219:17" pos:end="219:19"><name pos:start="219:17" pos:end="219:19">ptr</name></expr>)</condition> <block pos:start="219:22" pos:end="223:13">{<block_content pos:start="221:17" pos:end="221:47">

                <expr_stmt pos:start="221:17" pos:end="221:47"><expr pos:start="221:17" pos:end="221:46"><name pos:start="221:17" pos:end="221:39"><name pos:start="221:17" pos:end="221:22">gsconf</name><operator pos:start="221:23" pos:end="221:24">-&gt;</operator><name pos:start="221:25" pos:end="221:25">u</name><operator pos:start="221:26" pos:end="221:26">.</operator><name pos:start="221:27" pos:end="221:30">inet</name><operator pos:start="221:31" pos:end="221:31">.</operator><name pos:start="221:32" pos:end="221:39">has_ipv4</name></name> <operator pos:start="221:41" pos:end="221:41">=</operator> <name pos:start="221:43" pos:end="221:46">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:55"><expr pos:start="225:13" pos:end="225:54"><name pos:start="225:13" pos:end="225:15">ptr</name> <operator pos:start="225:17" pos:end="225:17">=</operator> <call pos:start="225:19" pos:end="225:54"><name pos:start="225:19" pos:end="225:30">qemu_opt_get</name><argument_list pos:start="225:31" pos:end="225:54">(<argument pos:start="225:32" pos:end="225:35"><expr pos:start="225:32" pos:end="225:35"><name pos:start="225:32" pos:end="225:35">opts</name></expr></argument>, <argument pos:start="225:38" pos:end="225:53"><expr pos:start="225:38" pos:end="225:53"><name pos:start="225:38" pos:end="225:53">GLUSTER_OPT_IPV6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="227:13" pos:end="231:13"><if pos:start="227:13" pos:end="231:13">if <condition pos:start="227:16" pos:end="227:20">(<expr pos:start="227:17" pos:end="227:19"><name pos:start="227:17" pos:end="227:19">ptr</name></expr>)</condition> <block pos:start="227:22" pos:end="231:13">{<block_content pos:start="229:17" pos:end="229:47">

                <expr_stmt pos:start="229:17" pos:end="229:47"><expr pos:start="229:17" pos:end="229:46"><name pos:start="229:17" pos:end="229:39"><name pos:start="229:17" pos:end="229:22">gsconf</name><operator pos:start="229:23" pos:end="229:24">-&gt;</operator><name pos:start="229:25" pos:end="229:25">u</name><operator pos:start="229:26" pos:end="229:26">.</operator><name pos:start="229:27" pos:end="229:30">inet</name><operator pos:start="229:31" pos:end="229:31">.</operator><name pos:start="229:32" pos:end="229:39">has_ipv6</name></name> <operator pos:start="229:41" pos:end="229:41">=</operator> <name pos:start="229:43" pos:end="229:46">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="233:13" pos:end="239:13"><if pos:start="233:13" pos:end="239:13">if <condition pos:start="233:16" pos:end="233:38">(<expr pos:start="233:17" pos:end="233:37"><name pos:start="233:17" pos:end="233:37"><name pos:start="233:17" pos:end="233:22">gsconf</name><operator pos:start="233:23" pos:end="233:24">-&gt;</operator><name pos:start="233:25" pos:end="233:25">u</name><operator pos:start="233:26" pos:end="233:26">.</operator><name pos:start="233:27" pos:end="233:30">inet</name><operator pos:start="233:31" pos:end="233:31">.</operator><name pos:start="233:32" pos:end="233:37">has_to</name></name></expr>)</condition> <block pos:start="233:40" pos:end="239:13">{<block_content pos:start="235:17" pos:end="237:25">

                <expr_stmt pos:start="235:17" pos:end="235:71"><expr pos:start="235:17" pos:end="235:70"><call pos:start="235:17" pos:end="235:70"><name pos:start="235:17" pos:end="235:26">error_setg</name><argument_list pos:start="235:27" pos:end="235:70">(<argument pos:start="235:28" pos:end="235:37"><expr pos:start="235:28" pos:end="235:37"><operator pos:start="235:28" pos:end="235:28">&amp;</operator><name pos:start="235:29" pos:end="235:37">local_err</name></expr></argument>, <argument pos:start="235:40" pos:end="235:69"><expr pos:start="235:40" pos:end="235:69"><literal type="string" pos:start="235:40" pos:end="235:69">"Parameter 'to' not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="237:17" pos:end="237:25">goto <name pos:start="237:22" pos:end="237:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="241:13" pos:end="247:13"><if pos:start="241:13" pos:end="247:13">if <condition pos:start="241:16" pos:end="241:67">(<expr pos:start="241:17" pos:end="241:66"><name pos:start="241:17" pos:end="241:39"><name pos:start="241:17" pos:end="241:22">gsconf</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:25">u</name><operator pos:start="241:26" pos:end="241:26">.</operator><name pos:start="241:27" pos:end="241:30">inet</name><operator pos:start="241:31" pos:end="241:31">.</operator><name pos:start="241:32" pos:end="241:39">has_ipv4</name></name> <operator pos:start="241:41" pos:end="241:42">||</operator> <name pos:start="241:44" pos:end="241:66"><name pos:start="241:44" pos:end="241:49">gsconf</name><operator pos:start="241:50" pos:end="241:51">-&gt;</operator><name pos:start="241:52" pos:end="241:52">u</name><operator pos:start="241:53" pos:end="241:53">.</operator><name pos:start="241:54" pos:end="241:57">inet</name><operator pos:start="241:58" pos:end="241:58">.</operator><name pos:start="241:59" pos:end="241:66">has_ipv6</name></name></expr>)</condition> <block pos:start="241:69" pos:end="247:13">{<block_content pos:start="243:17" pos:end="245:25">

                <expr_stmt pos:start="243:17" pos:end="243:79"><expr pos:start="243:17" pos:end="243:78"><call pos:start="243:17" pos:end="243:78"><name pos:start="243:17" pos:end="243:26">error_setg</name><argument_list pos:start="243:27" pos:end="243:78">(<argument pos:start="243:28" pos:end="243:37"><expr pos:start="243:28" pos:end="243:37"><operator pos:start="243:28" pos:end="243:28">&amp;</operator><name pos:start="243:29" pos:end="243:37">local_err</name></expr></argument>, <argument pos:start="243:40" pos:end="243:77"><expr pos:start="243:40" pos:end="243:77"><literal type="string" pos:start="243:40" pos:end="243:77">"Parameters 'ipv4/ipv6' not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="245:17" pos:end="245:25">goto <name pos:start="245:22" pos:end="245:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:32"><expr pos:start="249:13" pos:end="249:31"><call pos:start="249:13" pos:end="249:31"><name pos:start="249:13" pos:end="249:25">qemu_opts_del</name><argument_list pos:start="249:26" pos:end="249:31">(<argument pos:start="249:27" pos:end="249:30"><expr pos:start="249:27" pos:end="249:30"><name pos:start="249:27" pos:end="249:30">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="251:11" pos:end="285:9">else <block pos:start="251:16" pos:end="285:9">{<block_content pos:start="255:13" pos:end="283:32">

            <comment type="block" pos:start="253:13" pos:end="253:62">/* create opts info from runtime_unix_opts list */</comment>

            <expr_stmt pos:start="255:13" pos:end="255:79"><expr pos:start="255:13" pos:end="255:78"><name pos:start="255:13" pos:end="255:16">opts</name> <operator pos:start="255:18" pos:end="255:18">=</operator> <call pos:start="255:20" pos:end="255:78"><name pos:start="255:20" pos:end="255:35">qemu_opts_create</name><argument_list pos:start="255:36" pos:end="255:78">(<argument pos:start="255:37" pos:end="255:54"><expr pos:start="255:37" pos:end="255:54"><operator pos:start="255:37" pos:end="255:37">&amp;</operator><name pos:start="255:38" pos:end="255:54">runtime_unix_opts</name></expr></argument>, <argument pos:start="255:57" pos:end="255:60"><expr pos:start="255:57" pos:end="255:60"><name pos:start="255:57" pos:end="255:60">NULL</name></expr></argument>, <argument pos:start="255:63" pos:end="255:63"><expr pos:start="255:63" pos:end="255:63"><literal type="number" pos:start="255:63" pos:end="255:63">0</literal></expr></argument>, <argument pos:start="255:66" pos:end="255:77"><expr pos:start="255:66" pos:end="255:77"><operator pos:start="255:66" pos:end="255:66">&amp;</operator><name pos:start="255:67" pos:end="255:77">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:70"><expr pos:start="257:13" pos:end="257:69"><call pos:start="257:13" pos:end="257:69"><name pos:start="257:13" pos:end="257:34">qemu_opts_absorb_qdict</name><argument_list pos:start="257:35" pos:end="257:69">(<argument pos:start="257:36" pos:end="257:39"><expr pos:start="257:36" pos:end="257:39"><name pos:start="257:36" pos:end="257:39">opts</name></expr></argument>, <argument pos:start="257:42" pos:end="257:56"><expr pos:start="257:42" pos:end="257:56"><name pos:start="257:42" pos:end="257:56">backing_options</name></expr></argument>, <argument pos:start="257:59" pos:end="257:68"><expr pos:start="257:59" pos:end="257:68"><operator pos:start="257:59" pos:end="257:59">&amp;</operator><name pos:start="257:60" pos:end="257:68">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="259:13" pos:end="263:13"><if pos:start="259:13" pos:end="263:13">if <condition pos:start="259:16" pos:end="259:26">(<expr pos:start="259:17" pos:end="259:25"><name pos:start="259:17" pos:end="259:25">local_err</name></expr>)</condition> <block pos:start="259:28" pos:end="263:13">{<block_content pos:start="261:17" pos:end="261:25">

                <goto pos:start="261:17" pos:end="261:25">goto <name pos:start="261:22" pos:end="261:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="267:13" pos:end="267:57"><expr pos:start="267:13" pos:end="267:56"><name pos:start="267:13" pos:end="267:15">ptr</name> <operator pos:start="267:17" pos:end="267:17">=</operator> <call pos:start="267:19" pos:end="267:56"><name pos:start="267:19" pos:end="267:30">qemu_opt_get</name><argument_list pos:start="267:31" pos:end="267:56">(<argument pos:start="267:32" pos:end="267:35"><expr pos:start="267:32" pos:end="267:35"><name pos:start="267:32" pos:end="267:35">opts</name></expr></argument>, <argument pos:start="267:38" pos:end="267:55"><expr pos:start="267:38" pos:end="267:55"><name pos:start="267:38" pos:end="267:55">GLUSTER_OPT_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="269:13" pos:end="279:13"><if pos:start="269:13" pos:end="279:13">if <condition pos:start="269:16" pos:end="269:21">(<expr pos:start="269:17" pos:end="269:20"><operator pos:start="269:17" pos:end="269:17">!</operator><name pos:start="269:18" pos:end="269:20">ptr</name></expr>)</condition> <block pos:start="269:23" pos:end="279:13">{<block_content pos:start="271:17" pos:end="277:25">

                <expr_stmt pos:start="271:17" pos:end="273:47"><expr pos:start="271:17" pos:end="273:46"><call pos:start="271:17" pos:end="273:46"><name pos:start="271:17" pos:end="271:26">error_setg</name><argument_list pos:start="271:27" pos:end="273:46">(<argument pos:start="271:28" pos:end="271:37"><expr pos:start="271:28" pos:end="271:37"><operator pos:start="271:28" pos:end="271:28">&amp;</operator><name pos:start="271:29" pos:end="271:37">local_err</name></expr></argument>, <argument pos:start="271:40" pos:end="271:61"><expr pos:start="271:40" pos:end="271:61"><name pos:start="271:40" pos:end="271:61">QERR_MISSING_PARAMETER</name></expr></argument>,

                           <argument pos:start="273:28" pos:end="273:45"><expr pos:start="273:28" pos:end="273:45"><name pos:start="273:28" pos:end="273:45">GLUSTER_OPT_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:66"><expr pos:start="275:17" pos:end="275:65"><call pos:start="275:17" pos:end="275:65"><name pos:start="275:17" pos:end="275:33">error_append_hint</name><argument_list pos:start="275:34" pos:end="275:65">(<argument pos:start="275:35" pos:end="275:44"><expr pos:start="275:35" pos:end="275:44"><operator pos:start="275:35" pos:end="275:35">&amp;</operator><name pos:start="275:36" pos:end="275:44">local_err</name></expr></argument>, <argument pos:start="275:47" pos:end="275:61"><expr pos:start="275:47" pos:end="275:61"><name pos:start="275:47" pos:end="275:61">GERR_INDEX_HINT</name></expr></argument>, <argument pos:start="275:64" pos:end="275:64"><expr pos:start="275:64" pos:end="275:64"><name pos:start="275:64" pos:end="275:64">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="277:17" pos:end="277:25">goto <name pos:start="277:22" pos:end="277:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:50"><expr pos:start="281:13" pos:end="281:49"><name pos:start="281:13" pos:end="281:33"><name pos:start="281:13" pos:end="281:18">gsconf</name><operator pos:start="281:19" pos:end="281:20">-&gt;</operator><name pos:start="281:21" pos:end="281:21">u</name><operator pos:start="281:22" pos:end="281:22">.</operator><name pos:start="281:23" pos:end="281:28">q_unix</name><operator pos:start="281:29" pos:end="281:29">.</operator><name pos:start="281:30" pos:end="281:33">path</name></name> <operator pos:start="281:35" pos:end="281:35">=</operator> <call pos:start="281:37" pos:end="281:49"><name pos:start="281:37" pos:end="281:44">g_strdup</name><argument_list pos:start="281:45" pos:end="281:49">(<argument pos:start="281:46" pos:end="281:48"><expr pos:start="281:46" pos:end="281:48"><name pos:start="281:46" pos:end="281:48">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:32"><expr pos:start="283:13" pos:end="283:31"><call pos:start="283:13" pos:end="283:31"><name pos:start="283:13" pos:end="283:25">qemu_opts_del</name><argument_list pos:start="283:26" pos:end="283:31">(<argument pos:start="283:27" pos:end="283:30"><expr pos:start="283:27" pos:end="283:30"><name pos:start="283:27" pos:end="283:30">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="289:9" pos:end="305:9"><if pos:start="289:9" pos:end="297:9">if <condition pos:start="289:12" pos:end="289:34">(<expr pos:start="289:13" pos:end="289:33"><name pos:start="289:13" pos:end="289:25"><name pos:start="289:13" pos:end="289:17">gconf</name><operator pos:start="289:18" pos:end="289:19">-&gt;</operator><name pos:start="289:20" pos:end="289:25">server</name></name> <operator pos:start="289:27" pos:end="289:28">==</operator> <name pos:start="289:30" pos:end="289:33">NULL</name></expr>)</condition> <block pos:start="289:36" pos:end="297:9">{<block_content pos:start="291:13" pos:end="295:33">

            <expr_stmt pos:start="291:13" pos:end="291:57"><expr pos:start="291:13" pos:end="291:56"><name pos:start="291:13" pos:end="291:25"><name pos:start="291:13" pos:end="291:17">gconf</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:25">server</name></name> <operator pos:start="291:27" pos:end="291:27">=</operator> <call pos:start="291:29" pos:end="291:56"><name pos:start="291:29" pos:end="291:34">g_new0</name><argument_list pos:start="291:35" pos:end="291:56">(<argument pos:start="291:36" pos:end="291:52"><expr pos:start="291:36" pos:end="291:52"><name pos:start="291:36" pos:end="291:52">SocketAddressList</name></expr></argument>, <argument pos:start="291:55" pos:end="291:55"><expr pos:start="291:55" pos:end="291:55"><literal type="number" pos:start="291:55" pos:end="291:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:42"><expr pos:start="293:13" pos:end="293:41"><name pos:start="293:13" pos:end="293:32"><name pos:start="293:13" pos:end="293:17">gconf</name><operator pos:start="293:18" pos:end="293:19">-&gt;</operator><name pos:start="293:20" pos:end="293:25">server</name><operator pos:start="293:26" pos:end="293:27">-&gt;</operator><name pos:start="293:28" pos:end="293:32">value</name></name> <operator pos:start="293:34" pos:end="293:34">=</operator> <name pos:start="293:36" pos:end="293:41">gsconf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:33"><expr pos:start="295:13" pos:end="295:32"><name pos:start="295:13" pos:end="295:16">curr</name> <operator pos:start="295:18" pos:end="295:18">=</operator> <name pos:start="295:20" pos:end="295:32"><name pos:start="295:20" pos:end="295:24">gconf</name><operator pos:start="295:25" pos:end="295:26">-&gt;</operator><name pos:start="295:27" pos:end="295:32">server</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="297:11" pos:end="305:9">else <block pos:start="297:16" pos:end="305:9">{<block_content pos:start="299:13" pos:end="303:30">

            <expr_stmt pos:start="299:13" pos:end="299:54"><expr pos:start="299:13" pos:end="299:53"><name pos:start="299:13" pos:end="299:22"><name pos:start="299:13" pos:end="299:16">curr</name><operator pos:start="299:17" pos:end="299:18">-&gt;</operator><name pos:start="299:19" pos:end="299:22">next</name></name> <operator pos:start="299:24" pos:end="299:24">=</operator> <call pos:start="299:26" pos:end="299:53"><name pos:start="299:26" pos:end="299:31">g_new0</name><argument_list pos:start="299:32" pos:end="299:53">(<argument pos:start="299:33" pos:end="299:49"><expr pos:start="299:33" pos:end="299:49"><name pos:start="299:33" pos:end="299:49">SocketAddressList</name></expr></argument>, <argument pos:start="299:52" pos:end="299:52"><expr pos:start="299:52" pos:end="299:52"><literal type="number" pos:start="299:52" pos:end="299:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:39"><expr pos:start="301:13" pos:end="301:38"><name pos:start="301:13" pos:end="301:29"><name pos:start="301:13" pos:end="301:16">curr</name><operator pos:start="301:17" pos:end="301:18">-&gt;</operator><name pos:start="301:19" pos:end="301:22">next</name><operator pos:start="301:23" pos:end="301:24">-&gt;</operator><name pos:start="301:25" pos:end="301:29">value</name></name> <operator pos:start="301:31" pos:end="301:31">=</operator> <name pos:start="301:33" pos:end="301:38">gsconf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:30"><expr pos:start="303:13" pos:end="303:29"><name pos:start="303:13" pos:end="303:16">curr</name> <operator pos:start="303:18" pos:end="303:18">=</operator> <name pos:start="303:20" pos:end="303:29"><name pos:start="303:20" pos:end="303:23">curr</name><operator pos:start="303:24" pos:end="303:25">-&gt;</operator><name pos:start="303:26" pos:end="303:29">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:22"><expr pos:start="307:9" pos:end="307:21"><name pos:start="307:9" pos:end="307:14">gsconf</name> <operator pos:start="307:16" pos:end="307:16">=</operator> <name pos:start="307:18" pos:end="307:21">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="311:9" pos:end="311:33"><expr pos:start="311:9" pos:end="311:32"><call pos:start="311:9" pos:end="311:32"><name pos:start="311:9" pos:end="311:15">QDECREF</name><argument_list pos:start="311:16" pos:end="311:32">(<argument pos:start="311:17" pos:end="311:31"><expr pos:start="311:17" pos:end="311:31"><name pos:start="311:17" pos:end="311:31">backing_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:31"><expr pos:start="313:9" pos:end="313:30"><name pos:start="313:9" pos:end="313:23">backing_options</name> <operator pos:start="313:25" pos:end="313:25">=</operator> <name pos:start="313:27" pos:end="313:30">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:20"><expr pos:start="315:9" pos:end="315:19"><call pos:start="315:9" pos:end="315:19"><name pos:start="315:9" pos:end="315:14">g_free</name><argument_list pos:start="315:15" pos:end="315:19">(<argument pos:start="315:16" pos:end="315:18"><expr pos:start="315:16" pos:end="315:18"><name pos:start="315:16" pos:end="315:18">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:19"><expr pos:start="317:9" pos:end="317:18"><name pos:start="317:9" pos:end="317:11">str</name> <operator pos:start="317:13" pos:end="317:13">=</operator> <name pos:start="317:15" pos:end="317:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="323:5" pos:end="323:13">return <expr pos:start="323:12" pos:end="323:12"><literal type="number" pos:start="323:12" pos:end="323:12">0</literal></expr>;</return>



<label pos:start="327:1" pos:end="327:4"><name pos:start="327:1" pos:end="327:3">out</name>:</label>

    <expr_stmt pos:start="329:5" pos:end="329:37"><expr pos:start="329:5" pos:end="329:36"><call pos:start="329:5" pos:end="329:36"><name pos:start="329:5" pos:end="329:19">error_propagate</name><argument_list pos:start="329:20" pos:end="329:36">(<argument pos:start="329:21" pos:end="329:24"><expr pos:start="329:21" pos:end="329:24"><name pos:start="329:21" pos:end="329:24">errp</name></expr></argument>, <argument pos:start="329:27" pos:end="329:35"><expr pos:start="329:27" pos:end="329:35"><name pos:start="329:27" pos:end="329:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:36"><expr pos:start="331:5" pos:end="331:35"><call pos:start="331:5" pos:end="331:35"><name pos:start="331:5" pos:end="331:27">qapi_free_SocketAddress</name><argument_list pos:start="331:28" pos:end="331:35">(<argument pos:start="331:29" pos:end="331:34"><expr pos:start="331:29" pos:end="331:34"><name pos:start="331:29" pos:end="331:34">gsconf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:24"><expr pos:start="333:5" pos:end="333:23"><call pos:start="333:5" pos:end="333:23"><name pos:start="333:5" pos:end="333:17">qemu_opts_del</name><argument_list pos:start="333:18" pos:end="333:23">(<argument pos:start="333:19" pos:end="333:22"><expr pos:start="333:19" pos:end="333:22"><name pos:start="333:19" pos:end="333:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:16"><expr pos:start="335:5" pos:end="335:15"><call pos:start="335:5" pos:end="335:15"><name pos:start="335:5" pos:end="335:10">g_free</name><argument_list pos:start="335:11" pos:end="335:15">(<argument pos:start="335:12" pos:end="335:14"><expr pos:start="335:12" pos:end="335:14"><name pos:start="335:12" pos:end="335:14">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:29"><expr pos:start="337:5" pos:end="337:28"><call pos:start="337:5" pos:end="337:28"><name pos:start="337:5" pos:end="337:11">QDECREF</name><argument_list pos:start="337:12" pos:end="337:28">(<argument pos:start="337:13" pos:end="337:27"><expr pos:start="337:13" pos:end="337:27"><name pos:start="337:13" pos:end="337:27">backing_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:19"><expr pos:start="339:5" pos:end="339:18"><name pos:start="339:5" pos:end="339:9">errno</name> <operator pos:start="339:11" pos:end="339:11">=</operator> <name pos:start="339:13" pos:end="339:18">EINVAL</name></expr>;</expr_stmt>

    <return pos:start="341:5" pos:end="341:18">return <expr pos:start="341:12" pos:end="341:17"><operator pos:start="341:12" pos:end="341:12">-</operator><name pos:start="341:13" pos:end="341:17">errno</name></expr>;</return>

</block_content>}</block></function>
</unit>
