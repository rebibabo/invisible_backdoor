<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20678.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">read_quant_table</name><parameter_list pos:start="1:28" pos:end="1:75">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">RangeCoder</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><name pos:start="1:44" pos:end="1:50">int16_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:63">quant_table</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">scale</name></decl></parameter>)</parameter_list><block pos:start="1:76" pos:end="53:1">{<block_content pos:start="3:5" pos:end="51:19">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name><init pos:start="5:10" pos:end="5:11">=<expr pos:start="5:11" pos:end="5:11"><literal type="number" pos:start="5:11" pos:end="5:11">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:31"><name pos:start="7:13" pos:end="7:17">state</name><index pos:start="7:18" pos:end="7:31">[<expr pos:start="7:19" pos:end="7:30"><name pos:start="7:19" pos:end="7:30">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><call pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:10">memset</name><argument_list pos:start="11:11" pos:end="11:37">(<argument pos:start="11:12" pos:end="11:16"><expr pos:start="11:12" pos:end="11:16"><name pos:start="11:12" pos:end="11:16">state</name></expr></argument>, <argument pos:start="11:19" pos:end="11:21"><expr pos:start="11:19" pos:end="11:21"><literal type="number" pos:start="11:19" pos:end="11:21">128</literal></expr></argument>, <argument pos:start="11:24" pos:end="11:36"><expr pos:start="11:24" pos:end="11:36"><sizeof pos:start="11:24" pos:end="11:36">sizeof<argument_list pos:start="11:30" pos:end="11:36">(<argument pos:start="11:31" pos:end="11:35"><expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="15:5" pos:end="37:5">for<control pos:start="15:8" pos:end="15:25">(<init pos:start="15:9" pos:end="15:12"><expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:9">v</name><operator pos:start="15:10" pos:end="15:10">=</operator><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>;</init> <condition pos:start="15:14" pos:end="15:20"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name><operator pos:start="15:15" pos:end="15:15">&lt;</operator><literal type="number" pos:start="15:16" pos:end="15:18">128</literal></expr> ;</condition> <incr pos:start="15:22" pos:end="15:24"><expr pos:start="15:22" pos:end="15:24"><name pos:start="15:22" pos:end="15:22">v</name><operator pos:start="15:23" pos:end="15:24">++</operator></expr></incr>)</control><block pos:start="15:26" pos:end="37:5">{<block_content pos:start="17:9" pos:end="35:9">

        <decl_stmt pos:start="17:9" pos:end="17:45"><decl pos:start="17:9" pos:end="17:44"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:15">len</name><init pos:start="17:16" pos:end="17:44">= <expr pos:start="17:18" pos:end="17:44"><call pos:start="17:18" pos:end="17:40"><name pos:start="17:18" pos:end="17:27">get_symbol</name><argument_list pos:start="17:28" pos:end="17:40">(<argument pos:start="17:29" pos:end="17:29"><expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">c</name></expr></argument>, <argument pos:start="17:32" pos:end="17:36"><expr pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:36">state</name></expr></argument>, <argument pos:start="17:39" pos:end="17:39"><expr pos:start="17:39" pos:end="17:39"><literal type="number" pos:start="17:39" pos:end="17:39">0</literal></expr></argument>)</argument_list></call> <operator pos:start="17:42" pos:end="17:42">+</operator> <literal type="number" pos:start="17:44" pos:end="17:44">1</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="21:36"><if pos:start="21:9" pos:end="21:36">if<condition pos:start="21:11" pos:end="21:25">(<expr pos:start="21:12" pos:end="21:24"><name pos:start="21:12" pos:end="21:14">len</name> <operator pos:start="21:16" pos:end="21:16">+</operator> <name pos:start="21:18" pos:end="21:18">i</name> <operator pos:start="21:20" pos:end="21:20">&gt;</operator> <literal type="number" pos:start="21:22" pos:end="21:24">128</literal></expr>)</condition><block type="pseudo" pos:start="21:27" pos:end="21:36"><block_content pos:start="21:27" pos:end="21:36"> <return pos:start="21:27" pos:end="21:36">return <expr pos:start="21:34" pos:end="21:35"><operator pos:start="21:34" pos:end="21:34">-</operator><literal type="number" pos:start="21:35" pos:end="21:35">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <while pos:start="25:9" pos:end="35:9">while<condition pos:start="25:14" pos:end="25:20">(<expr pos:start="25:15" pos:end="25:19"><name pos:start="25:15" pos:end="25:17">len</name><operator pos:start="25:18" pos:end="25:19">--</operator></expr>)</condition><block pos:start="25:21" pos:end="35:9">{<block_content pos:start="27:13" pos:end="29:16">

            <expr_stmt pos:start="27:13" pos:end="27:37"><expr pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:23">quant_table</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><name pos:start="27:25" pos:end="27:25">i</name></expr>]</index></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:34">scale</name><operator pos:start="27:35" pos:end="27:35">*</operator><name pos:start="27:36" pos:end="27:36">v</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:16"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:13">i</name><operator pos:start="29:14" pos:end="29:15">++</operator></expr>;</expr_stmt>

<comment type="line" pos:start="31:1" pos:end="31:19">//printf("%2d ",v);</comment>

<comment type="line" pos:start="33:1" pos:end="33:27">//if(i%16==0) printf("\n");</comment>

        </block_content>}</block></while>

    </block_content>}</block></for>



    <for pos:start="41:5" pos:end="45:5">for<control pos:start="41:8" pos:end="41:24">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">1</literal></expr>;</init> <condition pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name><operator pos:start="41:15" pos:end="41:15">&lt;</operator><literal type="number" pos:start="41:16" pos:end="41:18">128</literal></expr>;</condition> <incr pos:start="41:21" pos:end="41:23"><expr pos:start="41:21" pos:end="41:23"><name pos:start="41:21" pos:end="41:21">i</name><operator pos:start="41:22" pos:end="41:23">++</operator></expr></incr>)</control><block pos:start="41:25" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:44">

        <expr_stmt pos:start="43:9" pos:end="43:44"><expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:19">quant_table</name><index pos:start="43:20" pos:end="43:26">[<expr pos:start="43:21" pos:end="43:25"><literal type="number" pos:start="43:21" pos:end="43:23">256</literal><operator pos:start="43:24" pos:end="43:24">-</operator><name pos:start="43:25" pos:end="43:25">i</name></expr>]</index></name><operator pos:start="43:27" pos:end="43:27">=</operator> <operator pos:start="43:29" pos:end="43:29">-</operator><name pos:start="43:30" pos:end="43:43"><name pos:start="43:30" pos:end="43:40">quant_table</name><index pos:start="43:41" pos:end="43:43">[<expr pos:start="43:42" pos:end="43:42"><name pos:start="43:42" pos:end="43:42">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:15">quant_table</name><index pos:start="47:16" pos:end="47:20">[<expr pos:start="47:17" pos:end="47:19"><literal type="number" pos:start="47:17" pos:end="47:19">128</literal></expr>]</index></name><operator pos:start="47:21" pos:end="47:21">=</operator> <operator pos:start="47:23" pos:end="47:23">-</operator><name pos:start="47:24" pos:end="47:39"><name pos:start="47:24" pos:end="47:34">quant_table</name><index pos:start="47:35" pos:end="47:39">[<expr pos:start="47:36" pos:end="47:38"><literal type="number" pos:start="47:36" pos:end="47:38">127</literal></expr>]</index></name></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:19">return <expr pos:start="51:12" pos:end="51:18"><literal type="number" pos:start="51:12" pos:end="51:12">2</literal><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:14">v</name> <operator pos:start="51:16" pos:end="51:16">-</operator> <literal type="number" pos:start="51:18" pos:end="51:18">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
