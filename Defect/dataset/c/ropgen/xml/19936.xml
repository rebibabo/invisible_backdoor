<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19936.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">slavio_check_interrupts</name><parameter_list pos:start="1:36" pos:end="1:49">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:42"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">SLAVIO_INTCTLState</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">pending</name> <init pos:start="9:22" pos:end="9:41">= <expr pos:start="9:24" pos:end="9:41"><name pos:start="9:24" pos:end="9:41"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:41">intregm_pending</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>, <decl pos:start="11:21" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:21" pos:end="11:21">j</name></decl>, <decl pos:start="11:24" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:24" pos:end="11:26">max</name> <init pos:start="11:28" pos:end="11:30">= <expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:11">pending</name> <operator pos:start="15:13" pos:end="15:14">&amp;=</operator> <operator pos:start="15:16" pos:end="15:16">~</operator><name pos:start="15:17" pos:end="15:35"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:35">intregm_disabled</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="73:91"><if pos:start="19:5" pos:end="69:5">if <condition pos:start="19:8" pos:end="19:55">(<expr pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:15">pending</name> <operator pos:start="19:17" pos:end="19:18">&amp;&amp;</operator> <operator pos:start="19:20" pos:end="19:20">!</operator><operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:40"><name pos:start="19:22" pos:end="19:22">s</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:40">intregm_disabled</name></name> <operator pos:start="19:42" pos:end="19:42">&amp;</operator> <literal type="number" pos:start="19:44" pos:end="19:53">0x80000000</literal><operator pos:start="19:54" pos:end="19:54">)</operator></expr>)</condition> <block pos:start="19:57" pos:end="69:5">{<block_content pos:start="21:9" pos:end="67:9">

	<for pos:start="21:9" pos:end="31:9">for <control pos:start="21:13" pos:end="21:32">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:27"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <literal type="number" pos:start="21:25" pos:end="21:26">32</literal></expr>;</condition> <incr pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:29">i</name><operator pos:start="21:30" pos:end="21:31">++</operator></expr></incr>)</control> <block pos:start="21:34" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:13">

	    <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if <condition pos:start="23:16" pos:end="23:35">(<expr pos:start="23:17" pos:end="23:34"><name pos:start="23:17" pos:end="23:23">pending</name> <operator pos:start="23:25" pos:end="23:25">&amp;</operator> <operator pos:start="23:27" pos:end="23:27">(</operator><literal type="number" pos:start="23:28" pos:end="23:28">1</literal> <operator pos:start="23:30" pos:end="23:31">&lt;&lt;</operator> <name pos:start="23:33" pos:end="23:33">i</name><operator pos:start="23:34" pos:end="23:34">)</operator></expr>)</condition> <block pos:start="23:37" pos:end="29:13">{<block_content pos:start="25:17" pos:end="27:48">

		<if_stmt pos:start="25:17" pos:end="27:48"><if pos:start="25:17" pos:end="27:48">if <condition pos:start="25:20" pos:end="25:48">(<expr pos:start="25:21" pos:end="25:47"><name pos:start="25:21" pos:end="25:23">max</name> <operator pos:start="25:25" pos:end="25:25">&lt;</operator> <name pos:start="25:27" pos:end="25:47"><name pos:start="25:27" pos:end="25:27">s</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:44">intbit_to_level</name><index pos:start="25:45" pos:end="25:47">[<expr pos:start="25:46" pos:end="25:46"><name pos:start="25:46" pos:end="25:46">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:48"><block_content pos:start="27:21" pos:end="27:48">

		    <expr_stmt pos:start="27:21" pos:end="27:48"><expr pos:start="27:21" pos:end="27:47"><name pos:start="27:21" pos:end="27:23">max</name> <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:47"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:44">intbit_to_level</name><index pos:start="27:45" pos:end="27:47">[<expr pos:start="27:46" pos:end="27:46"><name pos:start="27:46" pos:end="27:46">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    </block_content>}</block></if></if_stmt>

	</block_content>}</block></for>

        <expr_stmt pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:11">env</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:40"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">cpu_envs</name><index pos:start="33:26" pos:end="33:40">[<expr pos:start="33:27" pos:end="33:39"><name pos:start="33:27" pos:end="33:39"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:39">target_cpu</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="67:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:17">(<expr pos:start="35:13" pos:end="35:16"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:16">env</name></expr>)</condition> <block pos:start="35:19" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:87">

	    <expr_stmt pos:start="37:13" pos:end="37:87"><expr pos:start="37:13" pos:end="37:86"><call pos:start="37:13" pos:end="37:86"><name pos:start="37:13" pos:end="37:19">DPRINTF</name><argument_list pos:start="37:20" pos:end="37:86">(<argument pos:start="37:21" pos:end="37:61"><expr pos:start="37:21" pos:end="37:61"><literal type="string" pos:start="37:21" pos:end="37:61">"No CPU %d, not triggered (pending %x)\n"</literal></expr></argument>, <argument pos:start="37:64" pos:end="37:76"><expr pos:start="37:64" pos:end="37:76"><name pos:start="37:64" pos:end="37:76"><name pos:start="37:64" pos:end="37:64">s</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:76">target_cpu</name></name></expr></argument>, <argument pos:start="37:79" pos:end="37:85"><expr pos:start="37:79" pos:end="37:85"><name pos:start="37:79" pos:end="37:85">pending</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

	<else pos:start="41:9" pos:end="67:9">else <block pos:start="41:14" pos:end="67:9">{<block_content pos:start="43:13" pos:end="65:109">

            <if_stmt pos:start="43:13" pos:end="45:32"><if pos:start="43:13" pos:end="45:32">if <condition pos:start="43:16" pos:end="43:28">(<expr pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:19">env</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:27">halted</name></name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:32"><block_content pos:start="45:17" pos:end="45:32">

                <expr_stmt pos:start="45:17" pos:end="45:32"><expr pos:start="45:17" pos:end="45:31"><name pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:19">env</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:27">halted</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <literal type="number" pos:start="45:31" pos:end="45:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="47:13" pos:end="65:109"><if pos:start="47:13" pos:end="61:13">if <condition pos:start="47:16" pos:end="47:42">(<expr pos:start="47:17" pos:end="47:41"><name pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:19">env</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:36">interrupt_index</name></name> <operator pos:start="47:38" pos:end="47:39">==</operator> <literal type="number" pos:start="47:41" pos:end="47:41">0</literal></expr>)</condition> <block pos:start="47:44" pos:end="61:13">{<block_content pos:start="49:17" pos:end="59:55">

                <expr_stmt pos:start="49:17" pos:end="52:0"><expr pos:start="49:17" pos:end="49:72"><call pos:start="49:17" pos:end="49:72"><name pos:start="49:17" pos:end="49:23">DPRINTF</name><argument_list pos:start="49:24" pos:end="49:72">(<argument pos:start="49:25" pos:end="49:51"><expr pos:start="49:25" pos:end="49:51"><literal type="string" pos:start="49:25" pos:end="49:51">"Triggered CPU %d pil %d\n"</literal></expr></argument>, <argument pos:start="49:54" pos:end="49:66"><expr pos:start="49:54" pos:end="49:66"><name pos:start="49:54" pos:end="49:66"><name pos:start="49:54" pos:end="49:54">s</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:66">target_cpu</name></name></expr></argument>, <argument pos:start="49:69" pos:end="49:71"><expr pos:start="49:69" pos:end="49:71"><name pos:start="49:69" pos:end="49:71">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="51:1" pos:end="51:22">#<cpp:directive pos:start="51:2" pos:end="51:6">ifdef</cpp:directive> <name pos:start="51:8" pos:end="51:22">DEBUG_IRQ_COUNT</name></cpp:ifdef>

                <expr_stmt pos:start="53:17" pos:end="56:0"><expr pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:28">irq_count</name><index pos:start="53:29" pos:end="53:33">[<expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:32">max</name></expr>]</index></name><operator pos:start="53:34" pos:end="53:35">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="57:17" pos:end="57:55"><expr pos:start="57:17" pos:end="57:54"><name pos:start="57:17" pos:end="57:36"><name pos:start="57:17" pos:end="57:19">env</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:36">interrupt_index</name></name> <operator pos:start="57:38" pos:end="57:38">=</operator> <name pos:start="57:40" pos:end="57:48">TT_EXTINT</name> <operator pos:start="57:50" pos:end="57:50">|</operator> <name pos:start="57:52" pos:end="57:54">max</name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:55"><expr pos:start="59:17" pos:end="59:54"><call pos:start="59:17" pos:end="59:54"><name pos:start="59:17" pos:end="59:29">cpu_interrupt</name><argument_list pos:start="59:30" pos:end="59:54">(<argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><name pos:start="59:31" pos:end="59:33">env</name></expr></argument>, <argument pos:start="59:36" pos:end="59:53"><expr pos:start="59:36" pos:end="59:53"><name pos:start="59:36" pos:end="59:53">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="63:13" pos:end="65:109">else<block type="pseudo" pos:start="65:17" pos:end="65:109"><block_content pos:start="65:17" pos:end="65:109">

                <expr_stmt pos:start="65:17" pos:end="65:109"><expr pos:start="65:17" pos:end="65:108"><call pos:start="65:17" pos:end="65:108"><name pos:start="65:17" pos:end="65:23">DPRINTF</name><argument_list pos:start="65:24" pos:end="65:108">(<argument pos:start="65:25" pos:end="65:76"><expr pos:start="65:25" pos:end="65:76"><literal type="string" pos:start="65:25" pos:end="65:76">"Not triggered (pending %x), pending exception %x\n"</literal></expr></argument>, <argument pos:start="65:79" pos:end="65:85"><expr pos:start="65:79" pos:end="65:85"><name pos:start="65:79" pos:end="65:85">pending</name></expr></argument>, <argument pos:start="65:88" pos:end="65:107"><expr pos:start="65:88" pos:end="65:107"><name pos:start="65:88" pos:end="65:107"><name pos:start="65:88" pos:end="65:90">env</name><operator pos:start="65:91" pos:end="65:92">-&gt;</operator><name pos:start="65:93" pos:end="65:107">interrupt_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></if>

    <else pos:start="71:5" pos:end="73:91">else<block type="pseudo" pos:start="73:9" pos:end="73:91"><block_content pos:start="73:9" pos:end="73:91">

	<expr_stmt pos:start="73:9" pos:end="73:91"><expr pos:start="73:9" pos:end="73:90"><call pos:start="73:9" pos:end="73:90"><name pos:start="73:9" pos:end="73:15">DPRINTF</name><argument_list pos:start="73:16" pos:end="73:90">(<argument pos:start="73:17" pos:end="73:59"><expr pos:start="73:17" pos:end="73:59"><literal type="string" pos:start="73:17" pos:end="73:59">"Not triggered (pending %x), disabled %x\n"</literal></expr></argument>, <argument pos:start="73:62" pos:end="73:68"><expr pos:start="73:62" pos:end="73:68"><name pos:start="73:62" pos:end="73:68">pending</name></expr></argument>, <argument pos:start="73:71" pos:end="73:89"><expr pos:start="73:71" pos:end="73:89"><name pos:start="73:71" pos:end="73:89"><name pos:start="73:71" pos:end="73:71">s</name><operator pos:start="73:72" pos:end="73:73">-&gt;</operator><name pos:start="73:74" pos:end="73:89">intregm_disabled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    

    <for pos:start="77:5" pos:end="123:5">for <control pos:start="77:9" pos:end="77:34">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">i</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:29"><expr pos:start="77:17" pos:end="77:28"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:28">MAX_CPUS</name></expr>;</condition> <incr pos:start="77:31" pos:end="77:33"><expr pos:start="77:31" pos:end="77:33"><name pos:start="77:31" pos:end="77:31">i</name><operator pos:start="77:32" pos:end="77:33">++</operator></expr></incr>)</control> <block pos:start="77:36" pos:end="123:5">{<block_content pos:start="79:9" pos:end="121:9">

        <expr_stmt pos:start="79:9" pos:end="79:16"><expr pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:11">max</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <literal type="number" pos:start="79:15" pos:end="79:15">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:11">env</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:28"><name pos:start="81:15" pos:end="81:15">s</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:25">cpu_envs</name><index pos:start="81:26" pos:end="81:28">[<expr pos:start="81:27" pos:end="81:27"><name pos:start="81:27" pos:end="81:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:21"><if pos:start="83:9" pos:end="85:21">if <condition pos:start="83:12" pos:end="83:17">(<expr pos:start="83:13" pos:end="83:16"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:16">env</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:21"><block_content pos:start="85:13" pos:end="85:21">

            <continue pos:start="85:13" pos:end="85:21">continue;</continue></block_content></block></if></if_stmt>

        <for pos:start="87:9" pos:end="97:9">for <control pos:start="87:13" pos:end="87:33">(<init pos:start="87:14" pos:end="87:20"><expr pos:start="87:14" pos:end="87:19"><name pos:start="87:14" pos:end="87:14">j</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:19">17</literal></expr>;</init> <condition pos:start="87:22" pos:end="87:28"><expr pos:start="87:22" pos:end="87:27"><name pos:start="87:22" pos:end="87:22">j</name> <operator pos:start="87:24" pos:end="87:24">&lt;</operator> <literal type="number" pos:start="87:26" pos:end="87:27">32</literal></expr>;</condition> <incr pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><name pos:start="87:30" pos:end="87:30">j</name><operator pos:start="87:31" pos:end="87:32">++</operator></expr></incr>)</control> <block pos:start="87:35" pos:end="97:9">{<block_content pos:start="89:13" pos:end="95:13">

            <if_stmt pos:start="89:13" pos:end="95:13"><if pos:start="89:13" pos:end="95:13">if <condition pos:start="89:16" pos:end="89:48">(<expr pos:start="89:17" pos:end="89:47"><name pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:33">intreg_pending</name><index pos:start="89:34" pos:end="89:36">[<expr pos:start="89:35" pos:end="89:35"><name pos:start="89:35" pos:end="89:35">i</name></expr>]</index></name> <operator pos:start="89:38" pos:end="89:38">&amp;</operator> <operator pos:start="89:40" pos:end="89:40">(</operator><literal type="number" pos:start="89:41" pos:end="89:41">1</literal> <operator pos:start="89:43" pos:end="89:44">&lt;&lt;</operator> <name pos:start="89:46" pos:end="89:46">j</name><operator pos:start="89:47" pos:end="89:47">)</operator></expr>)</condition> <block pos:start="89:50" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:33">

                <if_stmt pos:start="91:17" pos:end="93:33"><if pos:start="91:17" pos:end="93:33">if <condition pos:start="91:20" pos:end="91:33">(<expr pos:start="91:21" pos:end="91:32"><name pos:start="91:21" pos:end="91:23">max</name> <operator pos:start="91:25" pos:end="91:25">&lt;</operator> <name pos:start="91:27" pos:end="91:27">j</name> <operator pos:start="91:29" pos:end="91:29">-</operator> <literal type="number" pos:start="91:31" pos:end="91:32">16</literal></expr>)</condition><block type="pseudo" pos:start="93:21" pos:end="93:33"><block_content pos:start="93:21" pos:end="93:33">

                    <expr_stmt pos:start="93:21" pos:end="93:33"><expr pos:start="93:21" pos:end="93:32"><name pos:start="93:21" pos:end="93:23">max</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:27">j</name> <operator pos:start="93:29" pos:end="93:29">-</operator> <literal type="number" pos:start="93:31" pos:end="93:32">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

	<if_stmt pos:start="99:9" pos:end="121:9"><if pos:start="99:9" pos:end="121:9">if <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">max</name> <operator pos:start="99:17" pos:end="99:17">&gt;</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition> <block pos:start="99:22" pos:end="121:9">{<block_content pos:start="101:13" pos:end="119:13">

            <if_stmt pos:start="101:13" pos:end="103:32"><if pos:start="101:13" pos:end="103:32">if <condition pos:start="101:16" pos:end="101:28">(<expr pos:start="101:17" pos:end="101:27"><name pos:start="101:17" pos:end="101:27"><name pos:start="101:17" pos:end="101:19">env</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:27">halted</name></name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:32"><block_content pos:start="103:17" pos:end="103:32">

                <expr_stmt pos:start="103:17" pos:end="103:32"><expr pos:start="103:17" pos:end="103:31"><name pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:19">env</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:27">halted</name></name> <operator pos:start="103:29" pos:end="103:29">=</operator> <literal type="number" pos:start="103:31" pos:end="103:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="105:13" pos:end="119:13"><if pos:start="105:13" pos:end="119:13">if <condition pos:start="105:16" pos:end="105:42">(<expr pos:start="105:17" pos:end="105:41"><name pos:start="105:17" pos:end="105:36"><name pos:start="105:17" pos:end="105:19">env</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:36">interrupt_index</name></name> <operator pos:start="105:38" pos:end="105:39">==</operator> <literal type="number" pos:start="105:41" pos:end="105:41">0</literal></expr>)</condition> <block pos:start="105:44" pos:end="119:13">{<block_content pos:start="107:17" pos:end="117:55">

                <expr_stmt pos:start="107:17" pos:end="110:0"><expr pos:start="107:17" pos:end="107:90"><call pos:start="107:17" pos:end="107:90"><name pos:start="107:17" pos:end="107:23">DPRINTF</name><argument_list pos:start="107:24" pos:end="107:90">(<argument pos:start="107:25" pos:end="107:72"><expr pos:start="107:25" pos:end="107:72"><literal type="string" pos:start="107:25" pos:end="107:72">"Triggered softint %d for cpu %d (pending %x)\n"</literal></expr></argument>, <argument pos:start="107:75" pos:end="107:77"><expr pos:start="107:75" pos:end="107:77"><name pos:start="107:75" pos:end="107:77">max</name></expr></argument>, <argument pos:start="107:80" pos:end="107:80"><expr pos:start="107:80" pos:end="107:80"><name pos:start="107:80" pos:end="107:80">i</name></expr></argument>, <argument pos:start="107:83" pos:end="107:89"><expr pos:start="107:83" pos:end="107:89"><name pos:start="107:83" pos:end="107:89">pending</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="109:1" pos:end="109:22">#<cpp:directive pos:start="109:2" pos:end="109:6">ifdef</cpp:directive> <name pos:start="109:8" pos:end="109:22">DEBUG_IRQ_COUNT</name></cpp:ifdef>

                <expr_stmt pos:start="111:17" pos:end="114:0"><expr pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:33"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:28">irq_count</name><index pos:start="111:29" pos:end="111:33">[<expr pos:start="111:30" pos:end="111:32"><name pos:start="111:30" pos:end="111:32">max</name></expr>]</index></name><operator pos:start="111:34" pos:end="111:35">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="115:17" pos:end="115:55"><expr pos:start="115:17" pos:end="115:54"><name pos:start="115:17" pos:end="115:36"><name pos:start="115:17" pos:end="115:19">env</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:36">interrupt_index</name></name> <operator pos:start="115:38" pos:end="115:38">=</operator> <name pos:start="115:40" pos:end="115:48">TT_EXTINT</name> <operator pos:start="115:50" pos:end="115:50">|</operator> <name pos:start="115:52" pos:end="115:54">max</name></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:55"><expr pos:start="117:17" pos:end="117:54"><call pos:start="117:17" pos:end="117:54"><name pos:start="117:17" pos:end="117:29">cpu_interrupt</name><argument_list pos:start="117:30" pos:end="117:54">(<argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">env</name></expr></argument>, <argument pos:start="117:36" pos:end="117:53"><expr pos:start="117:36" pos:end="117:53"><name pos:start="117:36" pos:end="117:53">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
