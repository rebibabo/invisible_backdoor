<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:17">do_sigreturn</name><parameter_list pos:start="1:18" pos:end="1:35">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:29">CPUPPCState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:30"><name pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:28">target_sigcontext</name></name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:32">sc</name> <init pos:start="5:34" pos:end="5:39">= <expr pos:start="5:36" pos:end="5:39"><name pos:start="5:36" pos:end="5:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">target_mcontext</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:30">sr</name> <init pos:start="7:32" pos:end="7:37">= <expr pos:start="7:34" pos:end="7:37"><name pos:start="7:34" pos:end="7:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:24">sr_addr</name> <init pos:start="9:26" pos:end="9:28">= <expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr></init></decl>, <decl pos:start="9:31" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:31" pos:end="9:37">sc_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">sigset_t</name></type> <name pos:start="11:14" pos:end="11:20">blocked</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">target_sigset_t</name></type> <name pos:start="13:21" pos:end="13:23">set</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:11">sc_addr</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:25"><name pos:start="17:15" pos:end="17:17">env</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">gpr</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">1</literal></expr>]</index></name> <operator pos:start="17:27" pos:end="17:27">+</operator> <name pos:start="17:29" pos:end="17:44">SIGNAL_FRAMESIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="26:0"><if pos:start="19:5" pos:end="26:0">if <condition pos:start="19:8" pos:end="19:55">(<expr pos:start="19:9" pos:end="19:54"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:54"><name pos:start="19:10" pos:end="19:25">lock_user_struct</name><argument_list pos:start="19:26" pos:end="19:54">(<argument pos:start="19:27" pos:end="19:37"><expr pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:37">VERIFY_READ</name></expr></argument>, <argument pos:start="19:40" pos:end="19:41"><expr pos:start="19:40" pos:end="19:41"><name pos:start="19:40" pos:end="19:41">sc</name></expr></argument>, <argument pos:start="19:44" pos:end="19:50"><expr pos:start="19:44" pos:end="19:50"><name pos:start="19:44" pos:end="19:50">sc_addr</name></expr></argument>, <argument pos:start="19:53" pos:end="19:53"><expr pos:start="19:53" pos:end="19:53"><literal type="number" pos:start="19:53" pos:end="19:53">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="26:0"><block_content pos:start="21:9" pos:end="26:0">

        <goto pos:start="21:9" pos:end="26:0">goto <name pos:start="21:14" pos:end="21:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="25:1" pos:end="25:25">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:11">defined</name><argument_list pos:start="25:12" pos:end="25:25">(<argument pos:start="25:13" pos:end="25:24"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:65"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:7">set</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:11">sig</name><index pos:start="27:12" pos:end="27:14">[<expr pos:start="27:13" pos:end="27:13"><literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>]</index></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:28"><name pos:start="27:18" pos:end="27:19">sc</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:28">oldmask</name></name> <operator pos:start="27:30" pos:end="27:30">+</operator> <operator pos:start="27:32" pos:end="27:32">(</operator><operator pos:start="27:33" pos:end="27:33">(</operator><name pos:start="27:34" pos:end="27:41">uint64_t</name><operator pos:start="27:42" pos:end="27:42">)</operator><operator pos:start="27:43" pos:end="27:43">(</operator><name pos:start="27:44" pos:end="27:57"><name pos:start="27:44" pos:end="27:45">sc</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:54">_unused</name><index pos:start="27:55" pos:end="27:57">[<expr pos:start="27:56" pos:end="27:56"><literal type="number" pos:start="27:56" pos:end="27:56">3</literal></expr>]</index></name><operator pos:start="27:58" pos:end="27:58">)</operator> <operator pos:start="27:60" pos:end="27:61">&lt;&lt;</operator> <literal type="number" pos:start="27:63" pos:end="27:64">32</literal><operator pos:start="27:65" pos:end="27:65">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><call pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:14">__get_user</name><argument_list pos:start="31:15" pos:end="31:40">(<argument pos:start="31:16" pos:end="31:25"><expr pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:18">set</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:22">sig</name><index pos:start="31:23" pos:end="31:25">[<expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:28" pos:end="31:39"><expr pos:start="31:28" pos:end="31:39"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:30">sc</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:39">oldmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="36:0"><expr pos:start="33:5" pos:end="33:43"><call pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:14">__get_user</name><argument_list pos:start="33:15" pos:end="33:43">(<argument pos:start="33:16" pos:end="33:25"><expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:18">set</name><operator pos:start="33:19" pos:end="33:19">.</operator><name pos:start="33:20" pos:end="33:22">sig</name><index pos:start="33:23" pos:end="33:25">[<expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:28" pos:end="33:42"><expr pos:start="33:28" pos:end="33:42"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:42"><name pos:start="33:29" pos:end="33:30">sc</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:39">_unused</name><index pos:start="33:40" pos:end="33:42">[<expr pos:start="33:41" pos:end="33:41"><literal type="number" pos:start="33:41" pos:end="33:41">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><call pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:34">target_to_host_sigset_internal</name><argument_list pos:start="37:35" pos:end="37:50">(<argument pos:start="37:36" pos:end="37:43"><expr pos:start="37:36" pos:end="37:43"><operator pos:start="37:36" pos:end="37:36">&amp;</operator><name pos:start="37:37" pos:end="37:43">blocked</name></expr></argument>, <argument pos:start="37:46" pos:end="37:49"><expr pos:start="37:46" pos:end="37:49"><operator pos:start="37:46" pos:end="37:46">&amp;</operator><name pos:start="37:47" pos:end="37:49">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><call pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:15">set_sigmask</name><argument_list pos:start="39:16" pos:end="39:25">(<argument pos:start="39:17" pos:end="39:24"><expr pos:start="39:17" pos:end="39:24"><operator pos:start="39:17" pos:end="39:17">&amp;</operator><name pos:start="39:18" pos:end="39:24">blocked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><call pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:14">__get_user</name><argument_list pos:start="43:15" pos:end="43:34">(<argument pos:start="43:16" pos:end="43:22"><expr pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:22">sr_addr</name></expr></argument>, <argument pos:start="43:25" pos:end="43:33"><expr pos:start="43:25" pos:end="43:33"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:33"><name pos:start="43:26" pos:end="43:27">sc</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:33">regs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:21"><if pos:start="45:5" pos:end="47:21">if <condition pos:start="45:8" pos:end="45:55">(<expr pos:start="45:9" pos:end="45:54"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:54"><name pos:start="45:10" pos:end="45:25">lock_user_struct</name><argument_list pos:start="45:26" pos:end="45:54">(<argument pos:start="45:27" pos:end="45:37"><expr pos:start="45:27" pos:end="45:37"><name pos:start="45:27" pos:end="45:37">VERIFY_READ</name></expr></argument>, <argument pos:start="45:40" pos:end="45:41"><expr pos:start="45:40" pos:end="45:41"><name pos:start="45:40" pos:end="45:41">sr</name></expr></argument>, <argument pos:start="45:44" pos:end="45:50"><expr pos:start="45:44" pos:end="45:50"><name pos:start="45:44" pos:end="45:50">sr_addr</name></expr></argument>, <argument pos:start="45:53" pos:end="45:53"><expr pos:start="45:53" pos:end="45:53"><literal type="number" pos:start="45:53" pos:end="45:53">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:21"><block_content pos:start="47:9" pos:end="47:21">

        <goto pos:start="47:9" pos:end="47:21">goto <name pos:start="47:14" pos:end="47:20">sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:34"><expr pos:start="49:5" pos:end="49:33"><call pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:21">restore_user_regs</name><argument_list pos:start="49:22" pos:end="49:33">(<argument pos:start="49:23" pos:end="49:25"><expr pos:start="49:23" pos:end="49:25"><name pos:start="49:23" pos:end="49:25">env</name></expr></argument>, <argument pos:start="49:28" pos:end="49:29"><expr pos:start="49:28" pos:end="49:29"><name pos:start="49:28" pos:end="49:29">sr</name></expr></argument>, <argument pos:start="49:32" pos:end="49:32"><expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><call pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:22">unlock_user_struct</name><argument_list pos:start="53:23" pos:end="53:38">(<argument pos:start="53:24" pos:end="53:25"><expr pos:start="53:24" pos:end="53:25"><name pos:start="53:24" pos:end="53:25">sr</name></expr></argument>, <argument pos:start="53:28" pos:end="53:34"><expr pos:start="53:28" pos:end="53:34"><name pos:start="53:28" pos:end="53:34">sr_addr</name></expr></argument>, <argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:39"><expr pos:start="55:5" pos:end="55:38"><call pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:22">unlock_user_struct</name><argument_list pos:start="55:23" pos:end="55:38">(<argument pos:start="55:24" pos:end="55:25"><expr pos:start="55:24" pos:end="55:25"><name pos:start="55:24" pos:end="55:25">sc</name></expr></argument>, <argument pos:start="55:28" pos:end="55:34"><expr pos:start="55:28" pos:end="55:34"><name pos:start="55:28" pos:end="55:34">sc_addr</name></expr></argument>, <argument pos:start="55:37" pos:end="55:37"><expr pos:start="55:37" pos:end="55:37"><literal type="number" pos:start="55:37" pos:end="55:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:35">return <expr pos:start="57:12" pos:end="57:34"><operator pos:start="57:12" pos:end="57:12">-</operator><name pos:start="57:13" pos:end="57:34">TARGET_QEMU_ESIGRETURN</name></expr>;</return>



<label pos:start="61:1" pos:end="61:8"><name pos:start="61:1" pos:end="61:7">sigsegv</name>:</label>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><call pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:22">unlock_user_struct</name><argument_list pos:start="63:23" pos:end="63:38">(<argument pos:start="63:24" pos:end="63:25"><expr pos:start="63:24" pos:end="63:25"><name pos:start="63:24" pos:end="63:25">sr</name></expr></argument>, <argument pos:start="63:28" pos:end="63:34"><expr pos:start="63:28" pos:end="63:34"><name pos:start="63:28" pos:end="63:34">sr_addr</name></expr></argument>, <argument pos:start="63:37" pos:end="63:37"><expr pos:start="63:37" pos:end="63:37"><literal type="number" pos:start="63:37" pos:end="63:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:39"><expr pos:start="65:5" pos:end="65:38"><call pos:start="65:5" pos:end="65:38"><name pos:start="65:5" pos:end="65:22">unlock_user_struct</name><argument_list pos:start="65:23" pos:end="65:38">(<argument pos:start="65:24" pos:end="65:25"><expr pos:start="65:24" pos:end="65:25"><name pos:start="65:24" pos:end="65:25">sc</name></expr></argument>, <argument pos:start="65:28" pos:end="65:34"><expr pos:start="65:28" pos:end="65:34"><name pos:start="65:28" pos:end="65:34">sc_addr</name></expr></argument>, <argument pos:start="65:37" pos:end="65:37"><expr pos:start="65:37" pos:end="65:37"><literal type="number" pos:start="65:37" pos:end="65:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><call pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:13">force_sig</name><argument_list pos:start="67:14" pos:end="67:29">(<argument pos:start="67:15" pos:end="67:28"><expr pos:start="67:15" pos:end="67:28"><name pos:start="67:15" pos:end="67:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
