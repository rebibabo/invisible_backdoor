<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15126.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">qemu_gluster_create</name><parameter_list pos:start="1:31" pos:end="3:51">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:51">filename</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:36"><decl pos:start="3:9" pos:end="3:36"><type pos:start="3:9" pos:end="3:36"><name pos:start="3:9" pos:end="3:27">QEMUOptionParameter</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:36">options</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:43">Error</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier><modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="121:1">{<block_content pos:start="7:5" pos:end="119:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:15">glfs</name></name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">glfs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:18">glfs_fd</name></name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">prealloc</name> <init pos:start="13:18" pos:end="13:20">= <expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:22">total_size</name> <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:56"><decl pos:start="17:5" pos:end="17:55"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">GlusterConf</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:22">gconf</name> <init pos:start="17:24" pos:end="17:55">= <expr pos:start="17:26" pos:end="17:55"><call pos:start="17:26" pos:end="17:55"><name pos:start="17:26" pos:end="17:34">g_malloc0</name><argument_list pos:start="17:35" pos:end="17:55">(<argument pos:start="17:36" pos:end="17:54"><expr pos:start="17:36" pos:end="17:54"><sizeof pos:start="17:36" pos:end="17:54">sizeof<argument_list pos:start="17:42" pos:end="17:54">(<argument pos:start="17:43" pos:end="17:53"><expr pos:start="17:43" pos:end="17:53"><name pos:start="17:43" pos:end="17:53">GlusterConf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:52"><expr pos:start="21:5" pos:end="21:51"><name pos:start="21:5" pos:end="21:8">glfs</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:51"><name pos:start="21:12" pos:end="21:28">qemu_gluster_init</name><argument_list pos:start="21:29" pos:end="21:51">(<argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34">gconf</name></expr></argument>, <argument pos:start="21:37" pos:end="21:44"><expr pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:44">filename</name></expr></argument>, <argument pos:start="21:47" pos:end="21:50"><expr pos:start="21:47" pos:end="21:50"><name pos:start="21:47" pos:end="21:50">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">glfs</name></expr>)</condition> <block pos:start="23:16" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:17">

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">-</operator><name pos:start="25:16" pos:end="25:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:17">goto <name pos:start="27:14" pos:end="27:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <while pos:start="33:5" pos:end="69:5">while <condition pos:start="33:11" pos:end="33:36">(<expr pos:start="33:12" pos:end="33:35"><name pos:start="33:12" pos:end="33:18">options</name> <operator pos:start="33:20" pos:end="33:21">&amp;&amp;</operator> <name pos:start="33:23" pos:end="33:35"><name pos:start="33:23" pos:end="33:29">options</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:35">name</name></name></expr>)</condition> <block pos:start="33:38" pos:end="69:5">{<block_content pos:start="35:9" pos:end="67:18">

        <if_stmt pos:start="35:9" pos:end="65:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:51">(<expr pos:start="35:13" pos:end="35:50"><operator pos:start="35:13" pos:end="35:13">!</operator><call pos:start="35:14" pos:end="35:50"><name pos:start="35:14" pos:end="35:19">strcmp</name><argument_list pos:start="35:20" pos:end="35:50">(<argument pos:start="35:21" pos:end="35:33"><expr pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:27">options</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:33">name</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:49"><expr pos:start="35:36" pos:end="35:49"><name pos:start="35:36" pos:end="35:49">BLOCK_OPT_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:53" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:61">

            <expr_stmt pos:start="37:13" pos:end="37:61"><expr pos:start="37:13" pos:end="37:60"><name pos:start="37:13" pos:end="37:22">total_size</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:41"><name pos:start="37:26" pos:end="37:32">options</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:39">value</name><operator pos:start="37:40" pos:end="37:40">.</operator><name pos:start="37:41" pos:end="37:41">n</name></name> <operator pos:start="37:43" pos:end="37:43">/</operator> <name pos:start="37:45" pos:end="37:60">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="65:9">else if <condition pos:start="39:19" pos:end="39:62">(<expr pos:start="39:20" pos:end="39:61"><operator pos:start="39:20" pos:end="39:20">!</operator><call pos:start="39:21" pos:end="39:61"><name pos:start="39:21" pos:end="39:26">strcmp</name><argument_list pos:start="39:27" pos:end="39:61">(<argument pos:start="39:28" pos:end="39:40"><expr pos:start="39:28" pos:end="39:40"><name pos:start="39:28" pos:end="39:40"><name pos:start="39:28" pos:end="39:34">options</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:40">name</name></name></expr></argument>, <argument pos:start="39:43" pos:end="39:60"><expr pos:start="39:43" pos:end="39:60"><name pos:start="39:43" pos:end="39:60">BLOCK_OPT_PREALLOC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:64" pos:end="65:9">{<block_content pos:start="41:13" pos:end="63:13">

            <if_stmt pos:start="41:13" pos:end="63:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:70">(<expr pos:start="41:17" pos:end="41:69"><operator pos:start="41:17" pos:end="41:17">!</operator><name pos:start="41:18" pos:end="41:33"><name pos:start="41:18" pos:end="41:24">options</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:31">value</name><operator pos:start="41:32" pos:end="41:32">.</operator><name pos:start="41:33" pos:end="41:33">s</name></name> <operator pos:start="41:35" pos:end="41:36">||</operator> <operator pos:start="41:38" pos:end="41:38">!</operator><call pos:start="41:39" pos:end="41:69"><name pos:start="41:39" pos:end="41:44">strcmp</name><argument_list pos:start="41:45" pos:end="41:69">(<argument pos:start="41:46" pos:end="41:61"><expr pos:start="41:46" pos:end="41:61"><name pos:start="41:46" pos:end="41:61"><name pos:start="41:46" pos:end="41:52">options</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:59">value</name><operator pos:start="41:60" pos:end="41:60">.</operator><name pos:start="41:61" pos:end="41:61">s</name></name></expr></argument>, <argument pos:start="41:64" pos:end="41:68"><expr pos:start="41:64" pos:end="41:68"><literal type="string" pos:start="41:64" pos:end="41:68">"off"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:72" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:29">

                <expr_stmt pos:start="43:17" pos:end="43:29"><expr pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:24">prealloc</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <literal type="number" pos:start="43:28" pos:end="43:28">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="45:15" pos:end="51:13">else if <condition pos:start="45:23" pos:end="47:48">(<expr pos:start="45:24" pos:end="47:47"><operator pos:start="45:24" pos:end="45:24">!</operator><call pos:start="45:25" pos:end="45:56"><name pos:start="45:25" pos:end="45:30">strcmp</name><argument_list pos:start="45:31" pos:end="45:56">(<argument pos:start="45:32" pos:end="45:47"><expr pos:start="45:32" pos:end="45:47"><name pos:start="45:32" pos:end="45:47"><name pos:start="45:32" pos:end="45:38">options</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:45">value</name><operator pos:start="45:46" pos:end="45:46">.</operator><name pos:start="45:47" pos:end="45:47">s</name></name></expr></argument>, <argument pos:start="45:50" pos:end="45:55"><expr pos:start="45:50" pos:end="45:55"><literal type="string" pos:start="45:50" pos:end="45:55">"full"</literal></expr></argument>)</argument_list></call> <operator pos:start="45:58" pos:end="45:59">&amp;&amp;</operator>

                    <call pos:start="47:21" pos:end="47:47"><name pos:start="47:21" pos:end="47:45">gluster_supports_zerofill</name><argument_list pos:start="47:46" pos:end="47:47">()</argument_list></call></expr>)</condition> <block pos:start="47:50" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:29">

                <expr_stmt pos:start="49:17" pos:end="49:29"><expr pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:24">prealloc</name> <operator pos:start="49:26" pos:end="49:26">=</operator> <literal type="number" pos:start="49:28" pos:end="49:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="51:15" pos:end="63:13">else <block pos:start="51:20" pos:end="63:13">{<block_content pos:start="53:17" pos:end="61:25">

                <expr_stmt pos:start="53:17" pos:end="57:45"><expr pos:start="53:17" pos:end="57:44"><call pos:start="53:17" pos:end="57:44"><name pos:start="53:17" pos:end="53:26">error_setg</name><argument_list pos:start="53:27" pos:end="57:44">(<argument pos:start="53:28" pos:end="53:31"><expr pos:start="53:28" pos:end="53:31"><name pos:start="53:28" pos:end="53:31">errp</name></expr></argument>, <argument pos:start="53:34" pos:end="55:64"><expr pos:start="53:34" pos:end="55:64"><literal type="string" pos:start="53:34" pos:end="53:67">"Invalid preallocation mode: '%s'"</literal>

                    <literal type="string" pos:start="55:21" pos:end="55:64">" or GlusterFS doesn't support zerofill API"</literal></expr></argument>,

                           <argument pos:start="57:28" pos:end="57:43"><expr pos:start="57:28" pos:end="57:43"><name pos:start="57:28" pos:end="57:43"><name pos:start="57:28" pos:end="57:34">options</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:41">value</name><operator pos:start="57:42" pos:end="57:42">.</operator><name pos:start="57:43" pos:end="57:43">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:30"><expr pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:19">ret</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <operator pos:start="59:23" pos:end="59:23">-</operator><name pos:start="59:24" pos:end="59:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="61:17" pos:end="61:25">goto <name pos:start="61:22" pos:end="61:24">out</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:18"><expr pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:15">options</name><operator pos:start="67:16" pos:end="67:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="73:5" pos:end="75:68"><expr pos:start="73:5" pos:end="75:67"><name pos:start="73:5" pos:end="73:6">fd</name> <operator pos:start="73:8" pos:end="73:8">=</operator> <call pos:start="73:10" pos:end="75:67"><name pos:start="73:10" pos:end="73:19">glfs_creat</name><argument_list pos:start="73:20" pos:end="75:67">(<argument pos:start="73:21" pos:end="73:24"><expr pos:start="73:21" pos:end="73:24"><name pos:start="73:21" pos:end="73:24">glfs</name></expr></argument>, <argument pos:start="73:27" pos:end="73:38"><expr pos:start="73:27" pos:end="73:38"><name pos:start="73:27" pos:end="73:38"><name pos:start="73:27" pos:end="73:31">gconf</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:38">image</name></name></expr></argument>,

        <argument pos:start="75:9" pos:end="75:47"><expr pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:16">O_WRONLY</name> <operator pos:start="75:18" pos:end="75:18">|</operator> <name pos:start="75:20" pos:end="75:26">O_CREAT</name> <operator pos:start="75:28" pos:end="75:28">|</operator> <name pos:start="75:30" pos:end="75:36">O_TRUNC</name> <operator pos:start="75:38" pos:end="75:38">|</operator> <name pos:start="75:40" pos:end="75:47">O_BINARY</name></expr></argument>, <argument pos:start="75:50" pos:end="75:66"><expr pos:start="75:50" pos:end="75:66"><name pos:start="75:50" pos:end="75:56">S_IRUSR</name> <operator pos:start="75:58" pos:end="75:58">|</operator> <name pos:start="75:60" pos:end="75:66">S_IWUSR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="107:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:12">(<expr pos:start="77:9" pos:end="77:11"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:11">fd</name></expr>)</condition> <block pos:start="77:14" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:21">

        <expr_stmt pos:start="79:9" pos:end="79:21"><expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <operator pos:start="79:15" pos:end="79:15">-</operator><name pos:start="79:16" pos:end="79:20">errno</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="107:5">else <block pos:start="81:12" pos:end="107:5">{<block_content pos:start="83:9" pos:end="105:9">

        <if_stmt pos:start="83:9" pos:end="97:9"><if pos:start="83:9" pos:end="93:9">if <condition pos:start="83:12" pos:end="83:63">(<expr pos:start="83:13" pos:end="83:62"><operator pos:start="83:13" pos:end="83:13">!</operator><call pos:start="83:14" pos:end="83:62"><name pos:start="83:14" pos:end="83:27">glfs_ftruncate</name><argument_list pos:start="83:28" pos:end="83:62">(<argument pos:start="83:29" pos:end="83:30"><expr pos:start="83:29" pos:end="83:30"><name pos:start="83:29" pos:end="83:30">fd</name></expr></argument>, <argument pos:start="83:33" pos:end="83:61"><expr pos:start="83:33" pos:end="83:61"><name pos:start="83:33" pos:end="83:42">total_size</name> <operator pos:start="83:44" pos:end="83:44">*</operator> <name pos:start="83:46" pos:end="83:61">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:65" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:13">

            <if_stmt pos:start="85:13" pos:end="91:13"><if pos:start="85:13" pos:end="91:13">if <condition pos:start="85:16" pos:end="87:51">(<expr pos:start="85:17" pos:end="87:50"><name pos:start="85:17" pos:end="85:24">prealloc</name> <operator pos:start="85:26" pos:end="85:27">&amp;&amp;</operator> <call pos:start="85:29" pos:end="87:50"><name pos:start="85:29" pos:end="85:49">qemu_gluster_zerofill</name><argument_list pos:start="85:50" pos:end="87:50">(<argument pos:start="85:51" pos:end="85:52"><expr pos:start="85:51" pos:end="85:52"><name pos:start="85:51" pos:end="85:52">fd</name></expr></argument>, <argument pos:start="85:55" pos:end="85:55"><expr pos:start="85:55" pos:end="85:55"><literal type="number" pos:start="85:55" pos:end="85:55">0</literal></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:49"><expr pos:start="87:21" pos:end="87:49"><name pos:start="87:21" pos:end="87:30">total_size</name> <operator pos:start="87:32" pos:end="87:32">*</operator> <name pos:start="87:34" pos:end="87:49">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:53" pos:end="91:13">{<block_content pos:start="89:17" pos:end="89:29">

                <expr_stmt pos:start="89:17" pos:end="89:29"><expr pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:19">ret</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <operator pos:start="89:23" pos:end="89:23">-</operator><name pos:start="89:24" pos:end="89:28">errno</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="97:9">else <block pos:start="93:16" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:25">

            <expr_stmt pos:start="95:13" pos:end="95:25"><expr pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <operator pos:start="95:19" pos:end="95:19">-</operator><name pos:start="95:20" pos:end="95:24">errno</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:32">(<expr pos:start="101:13" pos:end="101:31"><call pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:22">glfs_close</name><argument_list pos:start="101:23" pos:end="101:26">(<argument pos:start="101:24" pos:end="101:25"><expr pos:start="101:24" pos:end="101:25"><name pos:start="101:24" pos:end="101:25">fd</name></expr></argument>)</argument_list></call> <operator pos:start="101:28" pos:end="101:29">!=</operator> <literal type="number" pos:start="101:31" pos:end="101:31">0</literal></expr>)</condition> <block pos:start="101:34" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:25">

            <expr_stmt pos:start="103:13" pos:end="103:25"><expr pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <operator pos:start="103:19" pos:end="103:19">-</operator><name pos:start="103:20" pos:end="103:24">errno</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

<label pos:start="109:1" pos:end="109:4"><name pos:start="109:1" pos:end="109:3">out</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:35"><expr pos:start="111:5" pos:end="111:34"><call pos:start="111:5" pos:end="111:34"><name pos:start="111:5" pos:end="111:27">qemu_gluster_gconf_free</name><argument_list pos:start="111:28" pos:end="111:34">(<argument pos:start="111:29" pos:end="111:33"><expr pos:start="111:29" pos:end="111:33"><name pos:start="111:29" pos:end="111:33">gconf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:13">(<expr pos:start="113:9" pos:end="113:12"><name pos:start="113:9" pos:end="113:12">glfs</name></expr>)</condition> <block pos:start="113:15" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:24">

        <expr_stmt pos:start="115:9" pos:end="115:24"><expr pos:start="115:9" pos:end="115:23"><call pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:17">glfs_fini</name><argument_list pos:start="115:18" pos:end="115:23">(<argument pos:start="115:19" pos:end="115:22"><expr pos:start="115:19" pos:end="115:22"><name pos:start="115:19" pos:end="115:22">glfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="119:5" pos:end="119:15">return <expr pos:start="119:12" pos:end="119:14"><name pos:start="119:12" pos:end="119:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
