<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22975.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:32">rtl8139_io_readw</name><parameter_list pos:start="1:33" pos:end="1:60">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">uint8_t</name></type> <name pos:start="1:56" pos:end="1:59">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">RTL8139State</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">ret</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="147:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">addr</name></expr>)</condition>

    <block pos:start="13:5" pos:end="147:5">{<block_content pos:start="15:9" pos:end="145:18">

        <case pos:start="15:9" pos:end="15:39">case <expr pos:start="15:14" pos:end="15:38"><name pos:start="15:14" pos:end="15:20">TxAddr0</name> <operator pos:start="15:22" pos:end="15:24">...</operator> <name pos:start="15:26" pos:end="15:32">TxAddr0</name><operator pos:start="15:33" pos:end="15:33">+</operator><literal type="number" pos:start="15:34" pos:end="15:34">4</literal><operator pos:start="15:35" pos:end="15:35">*</operator><literal type="number" pos:start="15:36" pos:end="15:37">4</literal><operator pos:start="15:37" pos:end="15:37">-</operator><literal type="number" pos:start="15:38" pos:end="15:38">1</literal></expr>:</case>

            <expr_stmt pos:start="17:13" pos:end="17:52"><expr pos:start="17:13" pos:end="17:51"><name pos:start="17:13" pos:end="17:15">ret</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:51"><name pos:start="17:19" pos:end="17:39">rtl8139_TxStatus_read</name><argument_list pos:start="17:40" pos:end="17:51">(<argument pos:start="17:41" pos:end="17:41"><expr pos:start="17:41" pos:end="17:41"><name pos:start="17:41" pos:end="17:41">s</name></expr></argument>, <argument pos:start="17:44" pos:end="17:47"><expr pos:start="17:44" pos:end="17:47"><name pos:start="17:44" pos:end="17:47">addr</name></expr></argument>, <argument pos:start="17:50" pos:end="17:50"><expr pos:start="17:50" pos:end="17:50"><literal type="number" pos:start="17:50" pos:end="17:50">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="19:13" pos:end="19:18">break;</break>

        <case pos:start="21:9" pos:end="21:22">case <expr pos:start="21:14" pos:end="21:21"><name pos:start="21:14" pos:end="21:21">IntrMask</name></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:43"><expr pos:start="23:13" pos:end="23:42"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:42"><name pos:start="23:19" pos:end="23:39">rtl8139_IntrMask_read</name><argument_list pos:start="23:40" pos:end="23:42">(<argument pos:start="23:41" pos:end="23:41"><expr pos:start="23:41" pos:end="23:41"><name pos:start="23:41" pos:end="23:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>



        <case pos:start="29:9" pos:end="29:24">case <expr pos:start="29:14" pos:end="29:23"><name pos:start="29:14" pos:end="29:23">IntrStatus</name></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:45"><expr pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:44"><name pos:start="31:19" pos:end="31:41">rtl8139_IntrStatus_read</name><argument_list pos:start="31:42" pos:end="31:44">(<argument pos:start="31:43" pos:end="31:43"><expr pos:start="31:43" pos:end="31:43"><name pos:start="31:43" pos:end="31:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>



        <case pos:start="37:9" pos:end="37:23">case <expr pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:22">MultiIntr</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:44"><expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:43"><name pos:start="39:19" pos:end="39:40">rtl8139_MultiIntr_read</name><argument_list pos:start="39:41" pos:end="39:43">(<argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><name pos:start="39:42" pos:end="39:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>



        <case pos:start="45:9" pos:end="45:22">case <expr pos:start="45:14" pos:end="45:21"><name pos:start="45:14" pos:end="45:21">RxBufPtr</name></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:43"><expr pos:start="47:13" pos:end="47:42"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:42"><name pos:start="47:19" pos:end="47:39">rtl8139_RxBufPtr_read</name><argument_list pos:start="47:40" pos:end="47:42">(<argument pos:start="47:41" pos:end="47:41"><expr pos:start="47:41" pos:end="47:41"><name pos:start="47:41" pos:end="47:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>



        <case pos:start="53:9" pos:end="53:23">case <expr pos:start="53:14" pos:end="53:22"><name pos:start="53:14" pos:end="53:22">RxBufAddr</name></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:44"><expr pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:43"><name pos:start="55:19" pos:end="55:40">rtl8139_RxBufAddr_read</name><argument_list pos:start="55:41" pos:end="55:43">(<argument pos:start="55:42" pos:end="55:42"><expr pos:start="55:42" pos:end="55:42"><name pos:start="55:42" pos:end="55:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>



        <case pos:start="61:9" pos:end="61:27">case <expr pos:start="61:14" pos:end="61:26"><name pos:start="61:14" pos:end="61:26">BasicModeCtrl</name></expr>:</case>

            <expr_stmt pos:start="63:13" pos:end="63:48"><expr pos:start="63:13" pos:end="63:47"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:47"><name pos:start="63:19" pos:end="63:44">rtl8139_BasicModeCtrl_read</name><argument_list pos:start="63:45" pos:end="63:47">(<argument pos:start="63:46" pos:end="63:46"><expr pos:start="63:46" pos:end="63:46"><name pos:start="63:46" pos:end="63:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:29">case <expr pos:start="67:14" pos:end="67:28"><name pos:start="67:14" pos:end="67:28">BasicModeStatus</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:50"><expr pos:start="69:13" pos:end="69:49"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:49"><name pos:start="69:19" pos:end="69:46">rtl8139_BasicModeStatus_read</name><argument_list pos:start="69:47" pos:end="69:49">(<argument pos:start="69:48" pos:end="69:48"><expr pos:start="69:48" pos:end="69:48"><name pos:start="69:48" pos:end="69:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:24">case <expr pos:start="73:14" pos:end="73:23"><name pos:start="73:14" pos:end="73:23">NWayAdvert</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:31"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:31">NWayAdvert</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:60"><expr pos:start="77:13" pos:end="77:59"><call pos:start="77:13" pos:end="77:59"><name pos:start="77:13" pos:end="77:19">DPRINTF</name><argument_list pos:start="77:20" pos:end="77:59">(<argument pos:start="77:21" pos:end="77:53"><expr pos:start="77:21" pos:end="77:53"><literal type="string" pos:start="77:21" pos:end="77:53">"NWayAdvert read(w) val=0x%04x\n"</literal></expr></argument>, <argument pos:start="77:56" pos:end="77:58"><expr pos:start="77:56" pos:end="77:58"><name pos:start="77:56" pos:end="77:58">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:22">case <expr pos:start="81:14" pos:end="81:21"><name pos:start="81:14" pos:end="81:21">NWayLPAR</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <name pos:start="83:19" pos:end="83:29"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:29">NWayLPAR</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:58"><expr pos:start="85:13" pos:end="85:57"><call pos:start="85:13" pos:end="85:57"><name pos:start="85:13" pos:end="85:19">DPRINTF</name><argument_list pos:start="85:20" pos:end="85:57">(<argument pos:start="85:21" pos:end="85:51"><expr pos:start="85:21" pos:end="85:51"><literal type="string" pos:start="85:21" pos:end="85:51">"NWayLPAR read(w) val=0x%04x\n"</literal></expr></argument>, <argument pos:start="85:54" pos:end="85:56"><expr pos:start="85:54" pos:end="85:56"><name pos:start="85:54" pos:end="85:56">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:27">case <expr pos:start="89:14" pos:end="89:26"><name pos:start="89:14" pos:end="89:26">NWayExpansion</name></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:34"><name pos:start="91:19" pos:end="91:19">s</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:34">NWayExpansion</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:63"><expr pos:start="93:13" pos:end="93:62"><call pos:start="93:13" pos:end="93:62"><name pos:start="93:13" pos:end="93:19">DPRINTF</name><argument_list pos:start="93:20" pos:end="93:62">(<argument pos:start="93:21" pos:end="93:56"><expr pos:start="93:21" pos:end="93:56"><literal type="string" pos:start="93:21" pos:end="93:56">"NWayExpansion read(w) val=0x%04x\n"</literal></expr></argument>, <argument pos:start="93:59" pos:end="93:61"><expr pos:start="93:59" pos:end="93:61"><name pos:start="93:59" pos:end="93:61">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>



        <case pos:start="99:9" pos:end="99:19">case <expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:18">CpCmd</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:40"><expr pos:start="101:13" pos:end="101:39"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:39"><name pos:start="101:19" pos:end="101:36">rtl8139_CpCmd_read</name><argument_list pos:start="101:37" pos:end="101:39">(<argument pos:start="101:38" pos:end="101:38"><expr pos:start="101:38" pos:end="101:38"><name pos:start="101:38" pos:end="101:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>



        <case pos:start="107:9" pos:end="107:26">case <expr pos:start="107:14" pos:end="107:25"><name pos:start="107:14" pos:end="107:25">IntrMitigate</name></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:47"><expr pos:start="109:13" pos:end="109:46"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:46"><name pos:start="109:19" pos:end="109:43">rtl8139_IntrMitigate_read</name><argument_list pos:start="109:44" pos:end="109:46">(<argument pos:start="109:45" pos:end="109:45"><expr pos:start="109:45" pos:end="109:45"><name pos:start="109:45" pos:end="109:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>



        <case pos:start="115:9" pos:end="115:23">case <expr pos:start="115:14" pos:end="115:22"><name pos:start="115:14" pos:end="115:22">TxSummary</name></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:39"><expr pos:start="117:13" pos:end="117:38"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:38"><name pos:start="117:19" pos:end="117:35">rtl8139_TSAD_read</name><argument_list pos:start="117:36" pos:end="117:38">(<argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><name pos:start="117:37" pos:end="117:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>



        <case pos:start="123:9" pos:end="123:18">case <expr pos:start="123:14" pos:end="123:17"><name pos:start="123:14" pos:end="123:17">CSCR</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:39"><expr pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:38"><name pos:start="125:19" pos:end="125:35">rtl8139_CSCR_read</name><argument_list pos:start="125:36" pos:end="125:38">(<argument pos:start="125:37" pos:end="125:37"><expr pos:start="125:37" pos:end="125:37"><name pos:start="125:37" pos:end="125:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>



        <default pos:start="131:9" pos:end="131:16">default:</default>

            <expr_stmt pos:start="133:13" pos:end="133:68"><expr pos:start="133:13" pos:end="133:67"><call pos:start="133:13" pos:end="133:67"><name pos:start="133:13" pos:end="133:19">DPRINTF</name><argument_list pos:start="133:20" pos:end="133:67">(<argument pos:start="133:21" pos:end="133:60"><expr pos:start="133:21" pos:end="133:60"><literal type="string" pos:start="133:21" pos:end="133:60">"ioport read(w) addr=0x%x via read(b)\n"</literal></expr></argument>, <argument pos:start="133:63" pos:end="133:66"><expr pos:start="133:63" pos:end="133:66"><name pos:start="133:63" pos:end="133:66">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="137:13" pos:end="137:50"><expr pos:start="137:13" pos:end="137:49"><name pos:start="137:13" pos:end="137:15">ret</name>  <operator pos:start="137:18" pos:end="137:18">=</operator> <call pos:start="137:20" pos:end="137:49"><name pos:start="137:20" pos:end="137:35">rtl8139_io_readb</name><argument_list pos:start="137:36" pos:end="137:49">(<argument pos:start="137:37" pos:end="137:42"><expr pos:start="137:37" pos:end="137:42"><name pos:start="137:37" pos:end="137:42">opaque</name></expr></argument>, <argument pos:start="137:45" pos:end="137:48"><expr pos:start="137:45" pos:end="137:48"><name pos:start="137:45" pos:end="137:48">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:59"><expr pos:start="139:13" pos:end="139:58"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:18">|=</operator> <call pos:start="139:20" pos:end="139:53"><name pos:start="139:20" pos:end="139:35">rtl8139_io_readb</name><argument_list pos:start="139:36" pos:end="139:53">(<argument pos:start="139:37" pos:end="139:42"><expr pos:start="139:37" pos:end="139:42"><name pos:start="139:37" pos:end="139:42">opaque</name></expr></argument>, <argument pos:start="139:45" pos:end="139:52"><expr pos:start="139:45" pos:end="139:52"><name pos:start="139:45" pos:end="139:48">addr</name> <operator pos:start="139:50" pos:end="139:50">+</operator> <literal type="number" pos:start="139:52" pos:end="139:52">1</literal></expr></argument>)</argument_list></call> <operator pos:start="139:55" pos:end="139:56">&lt;&lt;</operator> <literal type="number" pos:start="139:58" pos:end="139:58">8</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:72"><expr pos:start="143:13" pos:end="143:71"><call pos:start="143:13" pos:end="143:71"><name pos:start="143:13" pos:end="143:19">DPRINTF</name><argument_list pos:start="143:20" pos:end="143:71">(<argument pos:start="143:21" pos:end="143:59"><expr pos:start="143:21" pos:end="143:59"><literal type="string" pos:start="143:21" pos:end="143:59">"ioport read(w) addr=0x%x val=0x%04x\n"</literal></expr></argument>, <argument pos:start="143:62" pos:end="143:65"><expr pos:start="143:62" pos:end="143:65"><name pos:start="143:62" pos:end="143:65">addr</name></expr></argument>, <argument pos:start="143:68" pos:end="143:70"><expr pos:start="143:68" pos:end="143:70"><name pos:start="143:68" pos:end="143:70">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

    </block_content>}</block></switch>



    <return pos:start="151:5" pos:end="151:15">return <expr pos:start="151:12" pos:end="151:14"><name pos:start="151:12" pos:end="151:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
