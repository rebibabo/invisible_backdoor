<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18396.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:42">vfp_exceptbits_from_host</name><parameter_list pos:start="1:43" pos:end="1:57">(<parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:46"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:56">host_bits</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:23">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">target_bits</name> <init pos:start="5:21" pos:end="5:23">= <expr pos:start="5:23" pos:end="5:23"><literal type="number" pos:start="5:23" pos:end="5:23">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:25"><if pos:start="9:5" pos:end="11:25">if <condition pos:start="9:8" pos:end="9:39">(<expr pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:17">host_bits</name> <operator pos:start="9:19" pos:end="9:19">&amp;</operator> <name pos:start="9:21" pos:end="9:38">float_flag_invalid</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:25"><block_content pos:start="11:9" pos:end="11:25">

        <expr_stmt pos:start="11:9" pos:end="11:25"><expr pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:19">target_bits</name> <operator pos:start="11:21" pos:end="11:22">|=</operator> <literal type="number" pos:start="11:24" pos:end="11:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="15:25"><if pos:start="13:5" pos:end="15:25">if <condition pos:start="13:8" pos:end="13:41">(<expr pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:17">host_bits</name> <operator pos:start="13:19" pos:end="13:19">&amp;</operator> <name pos:start="13:21" pos:end="13:40">float_flag_divbyzero</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:25"><block_content pos:start="15:9" pos:end="15:25">

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:19">target_bits</name> <operator pos:start="15:21" pos:end="15:22">|=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="19:25"><if pos:start="17:5" pos:end="19:25">if <condition pos:start="17:8" pos:end="17:40">(<expr pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:17">host_bits</name> <operator pos:start="17:19" pos:end="17:19">&amp;</operator> <name pos:start="17:21" pos:end="17:39">float_flag_overflow</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:25"><block_content pos:start="19:9" pos:end="19:25">

        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:19">target_bits</name> <operator pos:start="19:21" pos:end="19:22">|=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:25"><if pos:start="21:5" pos:end="23:25">if <condition pos:start="21:8" pos:end="21:41">(<expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:17">host_bits</name> <operator pos:start="21:19" pos:end="21:19">&amp;</operator> <name pos:start="21:21" pos:end="21:40">float_flag_underflow</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:25"><block_content pos:start="23:9" pos:end="23:25">

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:19">target_bits</name> <operator pos:start="23:21" pos:end="23:22">|=</operator> <literal type="number" pos:start="23:24" pos:end="23:24">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:28"><if pos:start="25:5" pos:end="27:28">if <condition pos:start="25:8" pos:end="25:39">(<expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:17">host_bits</name> <operator pos:start="25:19" pos:end="25:19">&amp;</operator> <name pos:start="25:21" pos:end="25:38">float_flag_inexact</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:28"><block_content pos:start="27:9" pos:end="27:28">

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:19">target_bits</name> <operator pos:start="27:21" pos:end="27:22">|=</operator> <literal type="number" pos:start="27:24" pos:end="27:27">0x10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="31:28"><if pos:start="29:5" pos:end="31:28">if <condition pos:start="29:8" pos:end="29:46">(<expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:17">host_bits</name> <operator pos:start="29:19" pos:end="29:19">&amp;</operator> <name pos:start="29:21" pos:end="29:45">float_flag_input_denormal</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:28"><block_content pos:start="31:9" pos:end="31:28">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:19">target_bits</name> <operator pos:start="31:21" pos:end="31:22">|=</operator> <literal type="number" pos:start="31:24" pos:end="31:27">0x80</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="33:5" pos:end="33:23">return <expr pos:start="33:12" pos:end="33:22"><name pos:start="33:12" pos:end="33:22">target_bits</name></expr>;</return>

</block_content>}</block></function>
</unit>
