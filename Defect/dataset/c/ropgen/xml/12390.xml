<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12390.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="7:45">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, 

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">ost</name></decl></parameter>, 

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">AVInputStream</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:44"><decl pos:start="7:26" pos:end="7:44"><type pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:34">AVPicture</name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:44">picture1</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="203:1">{<block_content pos:start="11:5" pos:end="201:19">

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">n1</name></decl>, <decl pos:start="11:13" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">n2</name></decl>, <decl pos:start="11:17" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:18">nb</name></decl>, <decl pos:start="11:21" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:21">i</name></decl>, <decl pos:start="11:24" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:24" pos:end="11:26">ret</name></decl>, <decl pos:start="11:29" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:29" pos:end="11:40">frame_number</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">AVPicture</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:22">picture</name></decl>, <decl pos:start="13:25" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:15"><modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:33">picture2</name></decl>, <decl pos:start="13:36" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:15"><modifier pos:start="13:36" pos:end="13:36">*</modifier></type><name pos:start="13:37" pos:end="13:40">pict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">AVPicture</name></type> <name pos:start="15:15" pos:end="15:26">picture_tmp1</name></decl>, <decl pos:start="15:29" pos:end="15:40"><type ref="prev" pos:start="15:5" pos:end="15:13"/><name pos:start="15:29" pos:end="15:40">picture_tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">UINT8</name></type> <name pos:start="17:11" pos:end="17:32"><name pos:start="17:11" pos:end="17:22">video_buffer</name><index pos:start="17:23" pos:end="17:32">[<expr pos:start="17:24" pos:end="17:31"><literal type="number" pos:start="17:24" pos:end="17:26">128</literal><operator pos:start="17:27" pos:end="17:27">*</operator><literal type="number" pos:start="17:28" pos:end="17:31">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">UINT8</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:14">buf</name> <init pos:start="19:16" pos:end="19:21">= <expr pos:start="19:18" pos:end="19:21"><name pos:start="19:18" pos:end="19:21">NULL</name></expr></init></decl>, <decl pos:start="19:24" pos:end="19:35"><type ref="prev" pos:start="19:5" pos:end="19:11"><modifier pos:start="19:24" pos:end="19:24">*</modifier></type><name pos:start="19:25" pos:end="19:28">buf1</name> <init pos:start="19:30" pos:end="19:35">= <expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:18">AVCodecContext</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:23">enc</name></decl>, <decl pos:start="21:26" pos:end="21:29"><type ref="prev" pos:start="21:5" pos:end="21:20"><modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:29">dec</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:7">enc</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <operator pos:start="25:11" pos:end="25:11">&amp;</operator><name pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:14">ost</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:18">st</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:25">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:7">dec</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <operator pos:start="27:11" pos:end="27:11">&amp;</operator><name pos:start="27:12" pos:end="27:25"><name pos:start="27:12" pos:end="27:14">ist</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:18">st</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:25">codec</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:16">frame_number</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:36"><name pos:start="31:20" pos:end="31:22">ist</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:36">frame_number</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:36">/* first drop frame if needed */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:67"><expr pos:start="35:5" pos:end="35:66"><name pos:start="35:5" pos:end="35:6">n1</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <operator pos:start="35:10" pos:end="35:10">(</operator><operator pos:start="35:11" pos:end="35:11">(</operator><name pos:start="35:12" pos:end="35:16">INT64</name><operator pos:start="35:17" pos:end="35:17">)</operator><name pos:start="35:18" pos:end="35:29">frame_number</name> <operator pos:start="35:31" pos:end="35:31">*</operator> <name pos:start="35:33" pos:end="35:47"><name pos:start="35:33" pos:end="35:35">enc</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:47">frame_rate</name></name><operator pos:start="35:48" pos:end="35:48">)</operator> <operator pos:start="35:50" pos:end="35:50">/</operator> <name pos:start="35:52" pos:end="35:66"><name pos:start="35:52" pos:end="35:54">dec</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:66">frame_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:73"><expr pos:start="37:5" pos:end="37:72"><name pos:start="37:5" pos:end="37:6">n2</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <operator pos:start="37:10" pos:end="37:10">(</operator><operator pos:start="37:11" pos:end="37:11">(</operator><operator pos:start="37:12" pos:end="37:12">(</operator><name pos:start="37:13" pos:end="37:17">INT64</name><operator pos:start="37:18" pos:end="37:18">)</operator><name pos:start="37:19" pos:end="37:30">frame_number</name> <operator pos:start="37:32" pos:end="37:32">+</operator> <literal type="number" pos:start="37:34" pos:end="37:34">1</literal><operator pos:start="37:35" pos:end="37:35">)</operator> <operator pos:start="37:37" pos:end="37:37">*</operator> <name pos:start="37:39" pos:end="37:53"><name pos:start="37:39" pos:end="37:41">enc</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:53">frame_rate</name></name><operator pos:start="37:54" pos:end="37:54">)</operator> <operator pos:start="37:56" pos:end="37:56">/</operator> <name pos:start="37:58" pos:end="37:72"><name pos:start="37:58" pos:end="37:60">dec</name><operator pos:start="37:61" pos:end="37:62">-&gt;</operator><name pos:start="37:63" pos:end="37:72">frame_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:17"><expr pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:6">nb</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <name pos:start="39:10" pos:end="39:11">n2</name> <operator pos:start="39:13" pos:end="39:13">-</operator> <name pos:start="39:15" pos:end="39:16">n1</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:15"><if pos:start="41:5" pos:end="43:15">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:10">nb</name> <operator pos:start="41:12" pos:end="41:13">&lt;=</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:15"><block_content pos:start="43:9" pos:end="43:15">

        <return pos:start="43:9" pos:end="43:15">return;</return></block_content></block></if></if_stmt>

    

    <comment type="block" pos:start="47:5" pos:end="47:54">/* deinterlace : must be done before any resize */</comment>

    <if_stmt pos:start="49:5" pos:end="91:5"><if pos:start="49:5" pos:end="87:5">if <condition pos:start="49:8" pos:end="49:23">(<expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:22">do_deinterlace</name></expr>)</condition> <block pos:start="49:25" pos:end="87:5">{<block_content pos:start="51:9" pos:end="85:9">

        <decl_stmt pos:start="51:9" pos:end="51:17"><decl pos:start="51:9" pos:end="51:16"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:16">size</name></decl>;</decl_stmt>



        <comment type="block" pos:start="55:9" pos:end="55:38">/* create temporary picture */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:73"><expr pos:start="57:9" pos:end="57:72"><name pos:start="57:9" pos:end="57:12">size</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:72"><name pos:start="57:16" pos:end="57:33">avpicture_get_size</name><argument_list pos:start="57:34" pos:end="57:72">(<argument pos:start="57:35" pos:end="57:46"><expr pos:start="57:35" pos:end="57:46"><name pos:start="57:35" pos:end="57:46"><name pos:start="57:35" pos:end="57:37">dec</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:46">pix_fmt</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:58"><expr pos:start="57:49" pos:end="57:58"><name pos:start="57:49" pos:end="57:58"><name pos:start="57:49" pos:end="57:51">dec</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:58">width</name></name></expr></argument>, <argument pos:start="57:61" pos:end="57:71"><expr pos:start="57:61" pos:end="57:71"><name pos:start="57:61" pos:end="57:71"><name pos:start="57:61" pos:end="57:63">dec</name><operator pos:start="57:64" pos:end="57:65">-&gt;</operator><name pos:start="57:66" pos:end="57:71">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:28"><expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:12">buf1</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:27"><name pos:start="59:16" pos:end="59:21">malloc</name><argument_list pos:start="59:22" pos:end="59:27">(<argument pos:start="59:23" pos:end="59:26"><expr pos:start="59:23" pos:end="59:26"><name pos:start="59:23" pos:end="59:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:19"><if pos:start="61:9" pos:end="63:19">if <condition pos:start="61:12" pos:end="61:18">(<expr pos:start="61:13" pos:end="61:17"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:17">buf1</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:19"><block_content pos:start="63:13" pos:end="63:19">

            <return pos:start="63:13" pos:end="63:19">return;</return></block_content></block></if></if_stmt>

        

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:16">picture2</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <operator pos:start="67:20" pos:end="67:20">&amp;</operator><name pos:start="67:21" pos:end="67:32">picture_tmp2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:78"><expr pos:start="69:9" pos:end="69:77"><call pos:start="69:9" pos:end="69:77"><name pos:start="69:9" pos:end="69:22">avpicture_fill</name><argument_list pos:start="69:23" pos:end="69:77">(<argument pos:start="69:24" pos:end="69:31"><expr pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:31">picture2</name></expr></argument>, <argument pos:start="69:34" pos:end="69:37"><expr pos:start="69:34" pos:end="69:37"><name pos:start="69:34" pos:end="69:37">buf1</name></expr></argument>, <argument pos:start="69:40" pos:end="69:51"><expr pos:start="69:40" pos:end="69:51"><name pos:start="69:40" pos:end="69:51"><name pos:start="69:40" pos:end="69:42">dec</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:51">pix_fmt</name></name></expr></argument>, <argument pos:start="69:54" pos:end="69:63"><expr pos:start="69:54" pos:end="69:63"><name pos:start="69:54" pos:end="69:63"><name pos:start="69:54" pos:end="69:56">dec</name><operator pos:start="69:57" pos:end="69:58">-&gt;</operator><name pos:start="69:59" pos:end="69:63">width</name></name></expr></argument>, <argument pos:start="69:66" pos:end="69:76"><expr pos:start="69:66" pos:end="69:76"><name pos:start="69:66" pos:end="69:76"><name pos:start="69:66" pos:end="69:68">dec</name><operator pos:start="69:69" pos:end="69:70">-&gt;</operator><name pos:start="69:71" pos:end="69:76">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="85:9"><if pos:start="73:9" pos:end="85:9">if <condition pos:start="73:12" pos:end="75:77">(<expr pos:start="73:13" pos:end="75:76"><call pos:start="73:13" pos:end="75:72"><name pos:start="73:13" pos:end="73:33">avpicture_deinterlace</name><argument_list pos:start="73:34" pos:end="75:72">(<argument pos:start="73:35" pos:end="73:42"><expr pos:start="73:35" pos:end="73:42"><name pos:start="73:35" pos:end="73:42">picture2</name></expr></argument>, <argument pos:start="73:45" pos:end="73:52"><expr pos:start="73:45" pos:end="73:52"><name pos:start="73:45" pos:end="73:52">picture1</name></expr></argument>, 

                                  <argument pos:start="75:35" pos:end="75:46"><expr pos:start="75:35" pos:end="75:46"><name pos:start="75:35" pos:end="75:46"><name pos:start="75:35" pos:end="75:37">dec</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:46">pix_fmt</name></name></expr></argument>, <argument pos:start="75:49" pos:end="75:58"><expr pos:start="75:49" pos:end="75:58"><name pos:start="75:49" pos:end="75:58"><name pos:start="75:49" pos:end="75:51">dec</name><operator pos:start="75:52" pos:end="75:53">-&gt;</operator><name pos:start="75:54" pos:end="75:58">width</name></name></expr></argument>, <argument pos:start="75:61" pos:end="75:71"><expr pos:start="75:61" pos:end="75:71"><name pos:start="75:61" pos:end="75:71"><name pos:start="75:61" pos:end="75:63">dec</name><operator pos:start="75:64" pos:end="75:65">-&gt;</operator><name pos:start="75:66" pos:end="75:71">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:74" pos:end="75:74">&lt;</operator> <literal type="number" pos:start="75:76" pos:end="75:76">0</literal></expr>)</condition> <block pos:start="75:79" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:32">

            <comment type="block" pos:start="77:13" pos:end="77:46">/* if error, do not deinterlace */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:23"><expr pos:start="79:13" pos:end="79:22"><call pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:16">free</name><argument_list pos:start="79:17" pos:end="79:22">(<argument pos:start="79:18" pos:end="79:21"><expr pos:start="79:18" pos:end="79:21"><name pos:start="79:18" pos:end="79:21">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:24"><expr pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:16">buf1</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:23">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:32"><expr pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:20">picture2</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:31">picture1</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="91:5">else <block pos:start="87:12" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:28">

        <expr_stmt pos:start="89:9" pos:end="89:28"><expr pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:16">picture2</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:27">picture1</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:40">/* convert pixel format if needed */</comment>

    <if_stmt pos:start="97:5" pos:end="135:5"><if pos:start="97:5" pos:end="131:5">if <condition pos:start="97:8" pos:end="97:37">(<expr pos:start="97:9" pos:end="97:36"><name pos:start="97:9" pos:end="97:20"><name pos:start="97:9" pos:end="97:11">enc</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:20">pix_fmt</name></name> <operator pos:start="97:22" pos:end="97:23">!=</operator> <name pos:start="97:25" pos:end="97:36"><name pos:start="97:25" pos:end="97:27">dec</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:36">pix_fmt</name></name></expr>)</condition> <block pos:start="97:39" pos:end="131:5">{<block_content pos:start="99:9" pos:end="129:9">

        <decl_stmt pos:start="99:9" pos:end="99:17"><decl pos:start="99:9" pos:end="99:16"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:16">size</name></decl>;</decl_stmt>



        <comment type="block" pos:start="103:9" pos:end="103:38">/* create temporary picture */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:73"><expr pos:start="105:9" pos:end="105:72"><name pos:start="105:9" pos:end="105:12">size</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <call pos:start="105:16" pos:end="105:72"><name pos:start="105:16" pos:end="105:33">avpicture_get_size</name><argument_list pos:start="105:34" pos:end="105:72">(<argument pos:start="105:35" pos:end="105:46"><expr pos:start="105:35" pos:end="105:46"><name pos:start="105:35" pos:end="105:46"><name pos:start="105:35" pos:end="105:37">enc</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:46">pix_fmt</name></name></expr></argument>, <argument pos:start="105:49" pos:end="105:58"><expr pos:start="105:49" pos:end="105:58"><name pos:start="105:49" pos:end="105:58"><name pos:start="105:49" pos:end="105:51">dec</name><operator pos:start="105:52" pos:end="105:53">-&gt;</operator><name pos:start="105:54" pos:end="105:58">width</name></name></expr></argument>, <argument pos:start="105:61" pos:end="105:71"><expr pos:start="105:61" pos:end="105:71"><name pos:start="105:61" pos:end="105:71"><name pos:start="105:61" pos:end="105:63">dec</name><operator pos:start="105:64" pos:end="105:65">-&gt;</operator><name pos:start="105:66" pos:end="105:71">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:27"><expr pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:11">buf</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:26"><name pos:start="107:15" pos:end="107:20">malloc</name><argument_list pos:start="107:21" pos:end="107:26">(<argument pos:start="107:22" pos:end="107:25"><expr pos:start="107:22" pos:end="107:25"><name pos:start="107:22" pos:end="107:25">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="111:19"><if pos:start="109:9" pos:end="111:19">if <condition pos:start="109:12" pos:end="109:17">(<expr pos:start="109:13" pos:end="109:16"><operator pos:start="109:13" pos:end="109:13">!</operator><name pos:start="109:14" pos:end="109:16">buf</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:19"><block_content pos:start="111:13" pos:end="111:19">

            <return pos:start="111:13" pos:end="111:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:29"><expr pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:12">pict</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <operator pos:start="113:16" pos:end="113:16">&amp;</operator><name pos:start="113:17" pos:end="113:28">picture_tmp1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:73"><expr pos:start="115:9" pos:end="115:72"><call pos:start="115:9" pos:end="115:72"><name pos:start="115:9" pos:end="115:22">avpicture_fill</name><argument_list pos:start="115:23" pos:end="115:72">(<argument pos:start="115:24" pos:end="115:27"><expr pos:start="115:24" pos:end="115:27"><name pos:start="115:24" pos:end="115:27">pict</name></expr></argument>, <argument pos:start="115:30" pos:end="115:32"><expr pos:start="115:30" pos:end="115:32"><name pos:start="115:30" pos:end="115:32">buf</name></expr></argument>, <argument pos:start="115:35" pos:end="115:46"><expr pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:37">enc</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:46">pix_fmt</name></name></expr></argument>, <argument pos:start="115:49" pos:end="115:58"><expr pos:start="115:49" pos:end="115:58"><name pos:start="115:49" pos:end="115:58"><name pos:start="115:49" pos:end="115:51">dec</name><operator pos:start="115:52" pos:end="115:53">-&gt;</operator><name pos:start="115:54" pos:end="115:58">width</name></name></expr></argument>, <argument pos:start="115:61" pos:end="115:71"><expr pos:start="115:61" pos:end="115:71"><name pos:start="115:61" pos:end="115:71"><name pos:start="115:61" pos:end="115:63">dec</name><operator pos:start="115:64" pos:end="115:65">-&gt;</operator><name pos:start="115:66" pos:end="115:71">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="119:9" pos:end="129:9"><if pos:start="119:9" pos:end="129:9">if <condition pos:start="119:12" pos:end="123:53">(<expr pos:start="119:13" pos:end="123:52"><call pos:start="119:13" pos:end="123:48"><name pos:start="119:13" pos:end="119:23">img_convert</name><argument_list pos:start="119:24" pos:end="123:48">(<argument pos:start="119:25" pos:end="119:28"><expr pos:start="119:25" pos:end="119:28"><name pos:start="119:25" pos:end="119:28">pict</name></expr></argument>, <argument pos:start="119:31" pos:end="119:42"><expr pos:start="119:31" pos:end="119:42"><name pos:start="119:31" pos:end="119:42"><name pos:start="119:31" pos:end="119:33">enc</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:42">pix_fmt</name></name></expr></argument>, 

                        <argument pos:start="121:25" pos:end="121:32"><expr pos:start="121:25" pos:end="121:32"><name pos:start="121:25" pos:end="121:32">picture2</name></expr></argument>, <argument pos:start="121:35" pos:end="121:46"><expr pos:start="121:35" pos:end="121:46"><name pos:start="121:35" pos:end="121:46"><name pos:start="121:35" pos:end="121:37">dec</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:46">pix_fmt</name></name></expr></argument>, 

                        <argument pos:start="123:25" pos:end="123:34"><expr pos:start="123:25" pos:end="123:34"><name pos:start="123:25" pos:end="123:34"><name pos:start="123:25" pos:end="123:27">dec</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:34">width</name></name></expr></argument>, <argument pos:start="123:37" pos:end="123:47"><expr pos:start="123:37" pos:end="123:47"><name pos:start="123:37" pos:end="123:47"><name pos:start="123:37" pos:end="123:39">dec</name><operator pos:start="123:40" pos:end="123:41">-&gt;</operator><name pos:start="123:42" pos:end="123:47">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:50" pos:end="123:50">&lt;</operator> <literal type="number" pos:start="123:52" pos:end="123:52">0</literal></expr>)</condition> <block pos:start="123:55" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:25">

            <expr_stmt pos:start="125:13" pos:end="125:69"><expr pos:start="125:13" pos:end="125:68"><call pos:start="125:13" pos:end="125:68"><name pos:start="125:13" pos:end="125:19">fprintf</name><argument_list pos:start="125:20" pos:end="125:68">(<argument pos:start="125:21" pos:end="125:26"><expr pos:start="125:21" pos:end="125:26"><name pos:start="125:21" pos:end="125:26">stderr</name></expr></argument>, <argument pos:start="125:29" pos:end="125:67"><expr pos:start="125:29" pos:end="125:67"><literal type="string" pos:start="125:29" pos:end="125:67">"pixel format conversion not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="127:13" pos:end="127:25">goto <name pos:start="127:18" pos:end="127:24">the_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="135:5">else <block pos:start="131:12" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:24">

        <expr_stmt pos:start="133:9" pos:end="133:24"><expr pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:12">pict</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <name pos:start="133:16" pos:end="133:23">picture2</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="139:5" pos:end="141:33">/* XXX: resampling could be done before raw format convertion in

       some cases to go faster */</comment>

    <comment type="block" pos:start="143:5" pos:end="143:37">/* XXX: only works for YUV420P */</comment>

    <if_stmt pos:start="145:5" pos:end="155:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="145:28">(<expr pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:11">ost</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:27">video_resample</name></name></expr>)</condition> <block pos:start="145:30" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:59">

        <expr_stmt pos:start="147:9" pos:end="147:33"><expr pos:start="147:9" pos:end="147:32"><name pos:start="147:9" pos:end="147:15">picture</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <operator pos:start="147:19" pos:end="147:19">&amp;</operator><name pos:start="147:20" pos:end="147:32"><name pos:start="147:20" pos:end="147:22">ost</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:32">pict_tmp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:59"><expr pos:start="149:9" pos:end="149:58"><call pos:start="149:9" pos:end="149:58"><name pos:start="149:9" pos:end="149:20">img_resample</name><argument_list pos:start="149:21" pos:end="149:58">(<argument pos:start="149:22" pos:end="149:42"><expr pos:start="149:22" pos:end="149:42"><name pos:start="149:22" pos:end="149:42"><name pos:start="149:22" pos:end="149:24">ost</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:42">img_resample_ctx</name></name></expr></argument>, <argument pos:start="149:45" pos:end="149:51"><expr pos:start="149:45" pos:end="149:51"><name pos:start="149:45" pos:end="149:51">picture</name></expr></argument>, <argument pos:start="149:54" pos:end="149:57"><expr pos:start="149:54" pos:end="149:57"><name pos:start="149:54" pos:end="149:57">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="151:7" pos:end="155:5">else <block pos:start="151:12" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:23">

        <expr_stmt pos:start="153:9" pos:end="153:23"><expr pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:15">picture</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <name pos:start="153:19" pos:end="153:22">pict</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="159:5" pos:end="159:36">/* duplicates frame if needed */</comment>

    <comment type="block" pos:start="161:5" pos:end="161:41">/* XXX: pb because no interleaving */</comment>

    <for pos:start="163:5" pos:end="191:5">for<control pos:start="163:8" pos:end="163:21">(<init pos:start="163:9" pos:end="163:12"><expr pos:start="163:9" pos:end="163:11"><name pos:start="163:9" pos:end="163:9">i</name><operator pos:start="163:10" pos:end="163:10">=</operator><literal type="number" pos:start="163:11" pos:end="163:11">0</literal></expr>;</init><condition pos:start="163:13" pos:end="163:17"><expr pos:start="163:13" pos:end="163:16"><name pos:start="163:13" pos:end="163:13">i</name><operator pos:start="163:14" pos:end="163:14">&lt;</operator><name pos:start="163:15" pos:end="163:16">nb</name></expr>;</condition><incr pos:start="163:18" pos:end="163:20"><expr pos:start="163:18" pos:end="163:20"><name pos:start="163:18" pos:end="163:18">i</name><operator pos:start="163:19" pos:end="163:20">++</operator></expr></incr>)</control> <block pos:start="163:23" pos:end="191:5">{<block_content pos:start="165:9" pos:end="189:9">

        <if_stmt pos:start="165:9" pos:end="189:9"><if pos:start="165:9" pos:end="185:9">if <condition pos:start="165:12" pos:end="165:47">(<expr pos:start="165:13" pos:end="165:46"><name pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:15">enc</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:25">codec_id</name></name> <operator pos:start="165:27" pos:end="165:28">!=</operator> <name pos:start="165:30" pos:end="165:46">CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="165:49" pos:end="185:9">{<block_content pos:start="171:13" pos:end="183:70">

            <comment type="block" pos:start="167:13" pos:end="169:40">/* handles sameq here. This is not correct because it may

               not be a global option */</comment>

            <if_stmt pos:start="171:13" pos:end="175:13"><if pos:start="171:13" pos:end="175:13">if <condition pos:start="171:16" pos:end="171:29">(<expr pos:start="171:17" pos:end="171:28"><name pos:start="171:17" pos:end="171:28">same_quality</name></expr>)</condition> <block pos:start="171:31" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:44">

                <expr_stmt pos:start="173:17" pos:end="173:44"><expr pos:start="173:17" pos:end="173:43"><name pos:start="173:17" pos:end="173:28"><name pos:start="173:17" pos:end="173:19">enc</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:28">quality</name></name> <operator pos:start="173:30" pos:end="173:30">=</operator> <name pos:start="173:32" pos:end="173:43"><name pos:start="173:32" pos:end="173:34">dec</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:43">quality</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="177:13" pos:end="181:48"><expr pos:start="177:13" pos:end="181:47"><name pos:start="177:13" pos:end="177:15">ret</name> <operator pos:start="177:17" pos:end="177:17">=</operator> <call pos:start="177:19" pos:end="181:47"><name pos:start="177:19" pos:end="177:38">avcodec_encode_video</name><argument_list pos:start="177:39" pos:end="181:47">(<argument pos:start="177:40" pos:end="177:42"><expr pos:start="177:40" pos:end="177:42"><name pos:start="177:40" pos:end="177:42">enc</name></expr></argument>, 

                                       <argument pos:start="179:40" pos:end="179:51"><expr pos:start="179:40" pos:end="179:51"><name pos:start="179:40" pos:end="179:51">video_buffer</name></expr></argument>, <argument pos:start="179:54" pos:end="179:73"><expr pos:start="179:54" pos:end="179:73"><sizeof pos:start="179:54" pos:end="179:73">sizeof<argument_list pos:start="179:60" pos:end="179:73">(<argument pos:start="179:61" pos:end="179:72"><expr pos:start="179:61" pos:end="179:72"><name pos:start="179:61" pos:end="179:72">video_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, 

                                       <argument pos:start="181:40" pos:end="181:46"><expr pos:start="181:40" pos:end="181:46"><name pos:start="181:40" pos:end="181:46">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:70"><expr pos:start="183:13" pos:end="183:69"><call pos:start="183:13" pos:end="183:69"><name pos:start="183:13" pos:end="183:35"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:21">format</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:35">write_packet</name></name><argument_list pos:start="183:36" pos:end="183:69">(<argument pos:start="183:37" pos:end="183:37"><expr pos:start="183:37" pos:end="183:37"><name pos:start="183:37" pos:end="183:37">s</name></expr></argument>, <argument pos:start="183:40" pos:end="183:49"><expr pos:start="183:40" pos:end="183:49"><name pos:start="183:40" pos:end="183:49"><name pos:start="183:40" pos:end="183:42">ost</name><operator pos:start="183:43" pos:end="183:44">-&gt;</operator><name pos:start="183:45" pos:end="183:49">index</name></name></expr></argument>, <argument pos:start="183:52" pos:end="183:63"><expr pos:start="183:52" pos:end="183:63"><name pos:start="183:52" pos:end="183:63">video_buffer</name></expr></argument>, <argument pos:start="183:66" pos:end="183:68"><expr pos:start="183:66" pos:end="183:68"><name pos:start="183:66" pos:end="183:68">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="185:11" pos:end="189:9">else <block pos:start="185:16" pos:end="189:9">{<block_content pos:start="187:13" pos:end="187:89">

            <expr_stmt pos:start="187:13" pos:end="187:89"><expr pos:start="187:13" pos:end="187:88"><call pos:start="187:13" pos:end="187:88"><name pos:start="187:13" pos:end="187:25">write_picture</name><argument_list pos:start="187:26" pos:end="187:88">(<argument pos:start="187:27" pos:end="187:27"><expr pos:start="187:27" pos:end="187:27"><name pos:start="187:27" pos:end="187:27">s</name></expr></argument>, <argument pos:start="187:30" pos:end="187:39"><expr pos:start="187:30" pos:end="187:39"><name pos:start="187:30" pos:end="187:39"><name pos:start="187:30" pos:end="187:32">ost</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:39">index</name></name></expr></argument>, <argument pos:start="187:42" pos:end="187:48"><expr pos:start="187:42" pos:end="187:48"><name pos:start="187:42" pos:end="187:48">picture</name></expr></argument>, <argument pos:start="187:51" pos:end="187:62"><expr pos:start="187:51" pos:end="187:62"><name pos:start="187:51" pos:end="187:62"><name pos:start="187:51" pos:end="187:53">enc</name><operator pos:start="187:54" pos:end="187:55">-&gt;</operator><name pos:start="187:56" pos:end="187:62">pix_fmt</name></name></expr></argument>, <argument pos:start="187:65" pos:end="187:74"><expr pos:start="187:65" pos:end="187:74"><name pos:start="187:65" pos:end="187:74"><name pos:start="187:65" pos:end="187:67">enc</name><operator pos:start="187:68" pos:end="187:69">-&gt;</operator><name pos:start="187:70" pos:end="187:74">width</name></name></expr></argument>, <argument pos:start="187:77" pos:end="187:87"><expr pos:start="187:77" pos:end="187:87"><name pos:start="187:77" pos:end="187:87"><name pos:start="187:77" pos:end="187:79">enc</name><operator pos:start="187:80" pos:end="187:81">-&gt;</operator><name pos:start="187:82" pos:end="187:87">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <label pos:start="193:5" pos:end="193:12"><name pos:start="193:5" pos:end="193:11">the_end</name>:</label>

    <if_stmt pos:start="195:5" pos:end="197:18"><if pos:start="195:5" pos:end="197:18">if <condition pos:start="195:8" pos:end="195:12">(<expr pos:start="195:9" pos:end="195:11"><name pos:start="195:9" pos:end="195:11">buf</name></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:18"><block_content pos:start="197:9" pos:end="197:18">

        <expr_stmt pos:start="197:9" pos:end="197:18"><expr pos:start="197:9" pos:end="197:17"><call pos:start="197:9" pos:end="197:17"><name pos:start="197:9" pos:end="197:12">free</name><argument_list pos:start="197:13" pos:end="197:17">(<argument pos:start="197:14" pos:end="197:16"><expr pos:start="197:14" pos:end="197:16"><name pos:start="197:14" pos:end="197:16">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="199:5" pos:end="201:19"><if pos:start="199:5" pos:end="201:19">if <condition pos:start="199:8" pos:end="199:13">(<expr pos:start="199:9" pos:end="199:12"><name pos:start="199:9" pos:end="199:12">buf1</name></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:19"><block_content pos:start="201:9" pos:end="201:19">

        <expr_stmt pos:start="201:9" pos:end="201:19"><expr pos:start="201:9" pos:end="201:18"><call pos:start="201:9" pos:end="201:18"><name pos:start="201:9" pos:end="201:12">free</name><argument_list pos:start="201:13" pos:end="201:18">(<argument pos:start="201:14" pos:end="201:17"><expr pos:start="201:14" pos:end="201:17"><name pos:start="201:14" pos:end="201:17">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
