<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20810.c" pos:tabs="8"><function pos:start="1:1" pos:end="259:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">uhci_handle_td</name><parameter_list pos:start="1:26" pos:end="3:41">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:35">UHCIState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:47">UHCI_TD</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">td</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:61">uint32_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:71">int_mask</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:40">completion</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="259:1">{<block_content pos:start="7:5" pos:end="257:5">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:15">pid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>, <decl pos:start="9:18" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:24">max_len</name></decl>, <decl pos:start="9:27" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:29">err</name></decl>, <decl pos:start="9:32" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:34">ret</name> <init pos:start="9:36" pos:end="9:38">= <expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:50">/* ??? This is wrong for async completion.  */</comment>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">td</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:16">ctrl</name></name> <operator pos:start="15:18" pos:end="15:18">&amp;</operator> <name pos:start="15:20" pos:end="15:30">TD_CTRL_IOC</name></expr>)</condition> <block pos:start="15:33" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:26">

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:17">int_mask</name> <operator pos:start="17:19" pos:end="17:20">|=</operator> <literal type="number" pos:start="17:22" pos:end="17:25">0x01</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="25:17"><if pos:start="23:5" pos:end="25:17">if <condition pos:start="23:8" pos:end="23:37">(<expr pos:start="23:9" pos:end="23:36"><operator pos:start="23:9" pos:end="23:9">!</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:18"><name pos:start="23:11" pos:end="23:12">td</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:18">ctrl</name></name> <operator pos:start="23:20" pos:end="23:20">&amp;</operator> <name pos:start="23:22" pos:end="23:35">TD_CTRL_ACTIVE</name><operator pos:start="23:36" pos:end="23:36">)</operator></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:17"><block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:22">/* TD is active */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:11">max_len</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <operator pos:start="31:15" pos:end="31:15">(</operator><operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:18">td</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:25">token</name></name> <operator pos:start="31:27" pos:end="31:28">&gt;&gt;</operator> <literal type="number" pos:start="31:30" pos:end="31:31">21</literal><operator pos:start="31:32" pos:end="31:32">)</operator> <operator pos:start="31:34" pos:end="31:34">+</operator> <literal type="number" pos:start="31:36" pos:end="31:36">1</literal><operator pos:start="31:37" pos:end="31:37">)</operator> <operator pos:start="31:39" pos:end="31:39">&amp;</operator> <literal type="number" pos:start="31:41" pos:end="31:45">0x7ff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:7">pid</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:19"><name pos:start="33:11" pos:end="33:12">td</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:19">token</name></name> <operator pos:start="33:21" pos:end="33:21">&amp;</operator> <literal type="number" pos:start="33:23" pos:end="33:26">0xff</literal></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="145:5"><if pos:start="37:5" pos:end="71:5">if <condition pos:start="37:8" pos:end="37:59">(<expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:18">completion</name> <operator pos:start="37:20" pos:end="37:21">&amp;&amp;</operator> <operator pos:start="37:23" pos:end="37:23">(</operator><name pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:24">s</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:34">async_qh</name></name> <operator pos:start="37:36" pos:end="37:37">||</operator> <name pos:start="37:39" pos:end="37:57"><name pos:start="37:39" pos:end="37:39">s</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:57">async_frame_addr</name></name><operator pos:start="37:58" pos:end="37:58">)</operator></expr>)</condition> <block pos:start="37:61" pos:end="71:5">{<block_content pos:start="39:9" pos:end="69:32">

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:31"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:27">usb_packet</name><operator pos:start="39:28" pos:end="39:28">.</operator><name pos:start="39:29" pos:end="39:31">len</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="65:9"><if pos:start="41:9" pos:end="61:9">if <condition pos:start="41:12" pos:end="41:21">(<expr pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:18">&gt;=</operator> <literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>)</condition> <block pos:start="41:23" pos:end="61:9">{<block_content pos:start="43:13" pos:end="59:13">

            <expr_stmt pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:15">len</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:21">ret</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="51:13"><if pos:start="45:13" pos:end="51:13">if <condition pos:start="45:16" pos:end="45:30">(<expr pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:19">len</name> <operator pos:start="45:21" pos:end="45:21">&gt;</operator> <name pos:start="45:23" pos:end="45:29">max_len</name></expr>)</condition> <block pos:start="45:32" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:37">

                <expr_stmt pos:start="47:17" pos:end="47:30"><expr pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:19">len</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:29">max_len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:37"><expr pos:start="49:17" pos:end="49:36"><name pos:start="49:17" pos:end="49:19">ret</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:36">USB_RET_BABBLE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:24">(<expr pos:start="53:17" pos:end="53:23"><name pos:start="53:17" pos:end="53:19">len</name> <operator pos:start="53:21" pos:end="53:21">&gt;</operator> <literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>)</condition> <block pos:start="53:26" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:71">

                <comment type="block" pos:start="55:17" pos:end="55:41">/* write the data back */</comment>

                <expr_stmt pos:start="57:17" pos:end="57:71"><expr pos:start="57:17" pos:end="57:70"><call pos:start="57:17" pos:end="57:70"><name pos:start="57:17" pos:end="57:41">cpu_physical_memory_write</name><argument_list pos:start="57:42" pos:end="57:70">(<argument pos:start="57:43" pos:end="57:52"><expr pos:start="57:43" pos:end="57:52"><name pos:start="57:43" pos:end="57:52"><name pos:start="57:43" pos:end="57:44">td</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:52">buffer</name></name></expr></argument>, <argument pos:start="57:55" pos:end="57:64"><expr pos:start="57:55" pos:end="57:64"><name pos:start="57:55" pos:end="57:64"><name pos:start="57:55" pos:end="57:55">s</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:64">usb_buf</name></name></expr></argument>, <argument pos:start="57:67" pos:end="57:69"><expr pos:start="57:67" pos:end="57:69"><name pos:start="57:67" pos:end="57:69">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="65:9">else <block pos:start="61:16" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:20">

            <expr_stmt pos:start="63:13" pos:end="63:20"><expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:15">len</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">async_qh</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:32"><expr pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:27">async_frame_addr</name></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <literal type="number" pos:start="69:31" pos:end="69:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="71:7" pos:end="145:5">else if <condition pos:start="71:15" pos:end="71:27">(<expr pos:start="71:16" pos:end="71:26"><operator pos:start="71:16" pos:end="71:16">!</operator><name pos:start="71:17" pos:end="71:26">completion</name></expr>)</condition> <block pos:start="71:29" pos:end="145:5">{<block_content pos:start="73:9" pos:end="143:9">

        <expr_stmt pos:start="73:9" pos:end="73:32"><expr pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:21">usb_packet</name><operator pos:start="73:22" pos:end="73:22">.</operator><name pos:start="73:23" pos:end="73:25">pid</name></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <name pos:start="73:29" pos:end="73:31">pid</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:56"><expr pos:start="75:9" pos:end="75:55"><name pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">usb_packet</name><operator pos:start="75:22" pos:end="75:22">.</operator><name pos:start="75:23" pos:end="75:29">devaddr</name></name> <operator pos:start="75:31" pos:end="75:31">=</operator> <operator pos:start="75:33" pos:end="75:33">(</operator><name pos:start="75:34" pos:end="75:42"><name pos:start="75:34" pos:end="75:35">td</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:42">token</name></name> <operator pos:start="75:44" pos:end="75:45">&gt;&gt;</operator> <literal type="number" pos:start="75:47" pos:end="75:47">8</literal><operator pos:start="75:48" pos:end="75:48">)</operator> <operator pos:start="75:50" pos:end="75:50">&amp;</operator> <literal type="number" pos:start="75:52" pos:end="75:55">0x7f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:54"><expr pos:start="77:9" pos:end="77:53"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:21">usb_packet</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:27">devep</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <operator pos:start="77:31" pos:end="77:31">(</operator><name pos:start="77:32" pos:end="77:40"><name pos:start="77:32" pos:end="77:33">td</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:40">token</name></name> <operator pos:start="77:42" pos:end="77:43">&gt;&gt;</operator> <literal type="number" pos:start="77:45" pos:end="77:46">15</literal><operator pos:start="77:47" pos:end="77:47">)</operator> <operator pos:start="77:49" pos:end="77:49">&amp;</operator> <literal type="number" pos:start="77:51" pos:end="77:53">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:40"><expr pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:21">usb_packet</name><operator pos:start="79:22" pos:end="79:22">.</operator><name pos:start="79:23" pos:end="79:26">data</name></name> <operator pos:start="79:28" pos:end="79:28">=</operator> <name pos:start="79:30" pos:end="79:39"><name pos:start="79:30" pos:end="79:30">s</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:39">usb_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:21">usb_packet</name><operator pos:start="81:22" pos:end="81:22">.</operator><name pos:start="81:23" pos:end="81:25">len</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:35">max_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:63"><expr pos:start="83:9" pos:end="83:62"><name pos:start="83:9" pos:end="83:33"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:21">usb_packet</name><operator pos:start="83:22" pos:end="83:22">.</operator><name pos:start="83:23" pos:end="83:33">complete_cb</name></name> <operator pos:start="83:35" pos:end="83:35">=</operator> <name pos:start="83:37" pos:end="83:62">uhci_async_complete_packet</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:42"><expr pos:start="85:9" pos:end="85:41"><name pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:21">usb_packet</name><operator pos:start="85:22" pos:end="85:22">.</operator><name pos:start="85:23" pos:end="85:37">complete_opaque</name></name> <operator pos:start="85:39" pos:end="85:39">=</operator> <name pos:start="85:41" pos:end="85:41">s</name></expr>;</expr_stmt>

        <switch pos:start="87:9" pos:end="143:9">switch<condition pos:start="87:15" pos:end="87:19">(<expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">pid</name></expr>)</condition> <block pos:start="87:21" pos:end="143:9">{<block_content pos:start="89:9" pos:end="141:22">

        <case pos:start="89:9" pos:end="89:27">case <expr pos:start="89:14" pos:end="89:26"><name pos:start="89:14" pos:end="89:26">USB_TOKEN_OUT</name></expr>:</case>

        <case pos:start="91:9" pos:end="91:29">case <expr pos:start="91:14" pos:end="91:28"><name pos:start="91:14" pos:end="91:28">USB_TOKEN_SETUP</name></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:70"><expr pos:start="93:13" pos:end="93:69"><call pos:start="93:13" pos:end="93:69"><name pos:start="93:13" pos:end="93:36">cpu_physical_memory_read</name><argument_list pos:start="93:37" pos:end="93:69">(<argument pos:start="93:38" pos:end="93:47"><expr pos:start="93:38" pos:end="93:47"><name pos:start="93:38" pos:end="93:47"><name pos:start="93:38" pos:end="93:39">td</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:47">buffer</name></name></expr></argument>, <argument pos:start="93:50" pos:end="93:59"><expr pos:start="93:50" pos:end="93:59"><name pos:start="93:50" pos:end="93:59"><name pos:start="93:50" pos:end="93:50">s</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:59">usb_buf</name></name></expr></argument>, <argument pos:start="93:62" pos:end="93:68"><expr pos:start="93:62" pos:end="93:68"><name pos:start="93:62" pos:end="93:68">max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:59"><expr pos:start="95:13" pos:end="95:58"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:58"><name pos:start="95:19" pos:end="95:39">uhci_broadcast_packet</name><argument_list pos:start="95:40" pos:end="95:58">(<argument pos:start="95:41" pos:end="95:41"><expr pos:start="95:41" pos:end="95:41"><name pos:start="95:41" pos:end="95:41">s</name></expr></argument>, <argument pos:start="95:44" pos:end="95:57"><expr pos:start="95:44" pos:end="95:57"><operator pos:start="95:44" pos:end="95:44">&amp;</operator><name pos:start="95:45" pos:end="95:57"><name pos:start="95:45" pos:end="95:45">s</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:57">usb_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:26"><expr pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:15">len</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:25">max_len</name></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:26">case <expr pos:start="101:14" pos:end="101:25"><name pos:start="101:14" pos:end="101:25">USB_TOKEN_IN</name></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:59"><expr pos:start="103:13" pos:end="103:58"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:58"><name pos:start="103:19" pos:end="103:39">uhci_broadcast_packet</name><argument_list pos:start="103:40" pos:end="103:58">(<argument pos:start="103:41" pos:end="103:41"><expr pos:start="103:41" pos:end="103:41"><name pos:start="103:41" pos:end="103:41">s</name></expr></argument>, <argument pos:start="103:44" pos:end="103:57"><expr pos:start="103:44" pos:end="103:57"><operator pos:start="103:44" pos:end="103:44">&amp;</operator><name pos:start="103:45" pos:end="103:57"><name pos:start="103:45" pos:end="103:45">s</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:57">usb_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="129:13"><if pos:start="105:13" pos:end="125:13">if <condition pos:start="105:16" pos:end="105:25">(<expr pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:19">ret</name> <operator pos:start="105:21" pos:end="105:22">&gt;=</operator> <literal type="number" pos:start="105:24" pos:end="105:24">0</literal></expr>)</condition> <block pos:start="105:27" pos:end="125:13">{<block_content pos:start="107:17" pos:end="123:17">

                <expr_stmt pos:start="107:17" pos:end="107:26"><expr pos:start="107:17" pos:end="107:25"><name pos:start="107:17" pos:end="107:19">len</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:25">ret</name></expr>;</expr_stmt>

                <if_stmt pos:start="109:17" pos:end="115:17"><if pos:start="109:17" pos:end="115:17">if <condition pos:start="109:20" pos:end="109:34">(<expr pos:start="109:21" pos:end="109:33"><name pos:start="109:21" pos:end="109:23">len</name> <operator pos:start="109:25" pos:end="109:25">&gt;</operator> <name pos:start="109:27" pos:end="109:33">max_len</name></expr>)</condition> <block pos:start="109:36" pos:end="115:17">{<block_content pos:start="111:21" pos:end="113:41">

                    <expr_stmt pos:start="111:21" pos:end="111:34"><expr pos:start="111:21" pos:end="111:33"><name pos:start="111:21" pos:end="111:23">len</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:33">max_len</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:41"><expr pos:start="113:21" pos:end="113:40"><name pos:start="113:21" pos:end="113:23">ret</name> <operator pos:start="113:25" pos:end="113:25">=</operator> <name pos:start="113:27" pos:end="113:40">USB_RET_BABBLE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="117:17" pos:end="123:17"><if pos:start="117:17" pos:end="123:17">if <condition pos:start="117:20" pos:end="117:28">(<expr pos:start="117:21" pos:end="117:27"><name pos:start="117:21" pos:end="117:23">len</name> <operator pos:start="117:25" pos:end="117:25">&gt;</operator> <literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr>)</condition> <block pos:start="117:30" pos:end="123:17">{<block_content pos:start="121:21" pos:end="121:75">

                    <comment type="block" pos:start="119:21" pos:end="119:45">/* write the data back */</comment>

                    <expr_stmt pos:start="121:21" pos:end="121:75"><expr pos:start="121:21" pos:end="121:74"><call pos:start="121:21" pos:end="121:74"><name pos:start="121:21" pos:end="121:45">cpu_physical_memory_write</name><argument_list pos:start="121:46" pos:end="121:74">(<argument pos:start="121:47" pos:end="121:56"><expr pos:start="121:47" pos:end="121:56"><name pos:start="121:47" pos:end="121:56"><name pos:start="121:47" pos:end="121:48">td</name><operator pos:start="121:49" pos:end="121:50">-&gt;</operator><name pos:start="121:51" pos:end="121:56">buffer</name></name></expr></argument>, <argument pos:start="121:59" pos:end="121:68"><expr pos:start="121:59" pos:end="121:68"><name pos:start="121:59" pos:end="121:68"><name pos:start="121:59" pos:end="121:59">s</name><operator pos:start="121:60" pos:end="121:61">-&gt;</operator><name pos:start="121:62" pos:end="121:68">usb_buf</name></name></expr></argument>, <argument pos:start="121:71" pos:end="121:73"><expr pos:start="121:71" pos:end="121:73"><name pos:start="121:71" pos:end="121:73">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="125:15" pos:end="129:13">else <block pos:start="125:20" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:24">

                <expr_stmt pos:start="127:17" pos:end="127:24"><expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">len</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        <default pos:start="133:9" pos:end="133:16">default:</default>

            <comment type="block" pos:start="135:13" pos:end="135:49">/* invalid pid : frame interrupted */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:41"><expr pos:start="137:13" pos:end="137:40"><name pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:21">status</name></name> <operator pos:start="137:23" pos:end="137:24">|=</operator> <name pos:start="137:26" pos:end="137:40">UHCI_STS_HCPERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:31"><expr pos:start="139:13" pos:end="139:30"><call pos:start="139:13" pos:end="139:30"><name pos:start="139:13" pos:end="139:27">uhci_update_irq</name><argument_list pos:start="139:28" pos:end="139:30">(<argument pos:start="139:29" pos:end="139:29"><expr pos:start="139:29" pos:end="139:29"><name pos:start="139:29" pos:end="139:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="141:13" pos:end="141:22">return <expr pos:start="141:20" pos:end="141:21"><operator pos:start="141:20" pos:end="141:20">-</operator><literal type="number" pos:start="141:21" pos:end="141:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="153:5"><if pos:start="149:5" pos:end="153:5">if <condition pos:start="149:8" pos:end="149:29">(<expr pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:14">==</operator> <name pos:start="149:16" pos:end="149:28">USB_RET_ASYNC</name></expr>)</condition> <block pos:start="149:31" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:17">

        <return pos:start="151:9" pos:end="151:17">return <expr pos:start="151:16" pos:end="151:16"><literal type="number" pos:start="151:16" pos:end="151:16">2</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="155:5" pos:end="157:36"><if pos:start="155:5" pos:end="157:36">if <condition pos:start="155:8" pos:end="155:31">(<expr pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:16"><name pos:start="155:9" pos:end="155:10">td</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:16">ctrl</name></name> <operator pos:start="155:18" pos:end="155:18">&amp;</operator> <name pos:start="155:20" pos:end="155:30">TD_CTRL_IOS</name></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:36"><block_content pos:start="157:9" pos:end="157:36">

        <expr_stmt pos:start="157:9" pos:end="157:36"><expr pos:start="157:9" pos:end="157:35"><name pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:10">td</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:16">ctrl</name></name> <operator pos:start="157:18" pos:end="157:19">&amp;=</operator> <operator pos:start="157:21" pos:end="157:21">~</operator><name pos:start="157:22" pos:end="157:35">TD_CTRL_ACTIVE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="159:5" pos:end="257:5"><if pos:start="159:5" pos:end="191:5">if <condition pos:start="159:8" pos:end="159:17">(<expr pos:start="159:9" pos:end="159:16"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:14">&gt;=</operator> <literal type="number" pos:start="159:16" pos:end="159:16">0</literal></expr>)</condition> <block pos:start="159:19" pos:end="191:5">{<block_content pos:start="161:9" pos:end="189:9">

        <expr_stmt pos:start="161:9" pos:end="161:61"><expr pos:start="161:9" pos:end="161:60"><name pos:start="161:9" pos:end="161:16"><name pos:start="161:9" pos:end="161:10">td</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:16">ctrl</name></name> <operator pos:start="161:18" pos:end="161:18">=</operator> <operator pos:start="161:20" pos:end="161:20">(</operator><name pos:start="161:21" pos:end="161:28"><name pos:start="161:21" pos:end="161:22">td</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:28">ctrl</name></name> <operator pos:start="161:30" pos:end="161:30">&amp;</operator> <operator pos:start="161:32" pos:end="161:32">~</operator><literal type="number" pos:start="161:33" pos:end="161:37">0x7ff</literal><operator pos:start="161:38" pos:end="161:38">)</operator> <operator pos:start="161:40" pos:end="161:40">|</operator> <operator pos:start="161:42" pos:end="161:42">(</operator><operator pos:start="161:43" pos:end="161:43">(</operator><name pos:start="161:44" pos:end="161:46">len</name> <operator pos:start="161:48" pos:end="161:48">-</operator> <literal type="number" pos:start="161:50" pos:end="161:50">1</literal><operator pos:start="161:51" pos:end="161:51">)</operator> <operator pos:start="161:53" pos:end="161:53">&amp;</operator> <literal type="number" pos:start="161:55" pos:end="161:59">0x7ff</literal><operator pos:start="161:60" pos:end="161:60">)</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="163:9" pos:end="167:24">/* The NAK bit may have been set by a previous frame, so clear it

           here.  The docs are somewhat unclear, but win2k relies on this

           behavior.  */</comment>

        <expr_stmt pos:start="169:9" pos:end="169:52"><expr pos:start="169:9" pos:end="169:51"><name pos:start="169:9" pos:end="169:16"><name pos:start="169:9" pos:end="169:10">td</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:16">ctrl</name></name> <operator pos:start="169:18" pos:end="169:19">&amp;=</operator> <operator pos:start="169:21" pos:end="169:21">~</operator><operator pos:start="169:22" pos:end="169:22">(</operator><name pos:start="169:23" pos:end="169:36">TD_CTRL_ACTIVE</name> <operator pos:start="169:38" pos:end="169:38">|</operator> <name pos:start="169:40" pos:end="169:50">TD_CTRL_NAK</name><operator pos:start="169:51" pos:end="169:51">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="189:9"><if pos:start="171:9" pos:end="183:9">if <condition pos:start="171:12" pos:end="175:26">(<expr pos:start="171:13" pos:end="175:25"><name pos:start="171:13" pos:end="171:15">pid</name> <operator pos:start="171:17" pos:end="171:18">==</operator> <name pos:start="171:20" pos:end="171:31">USB_TOKEN_IN</name> <operator pos:start="171:33" pos:end="171:34">&amp;&amp;</operator>

            <operator pos:start="173:13" pos:end="173:13">(</operator><name pos:start="173:14" pos:end="173:21"><name pos:start="173:14" pos:end="173:15">td</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:21">ctrl</name></name> <operator pos:start="173:23" pos:end="173:23">&amp;</operator> <name pos:start="173:25" pos:end="173:35">TD_CTRL_SPD</name><operator pos:start="173:36" pos:end="173:36">)</operator> <operator pos:start="173:38" pos:end="173:39">&amp;&amp;</operator>

            <name pos:start="175:13" pos:end="175:15">len</name> <operator pos:start="175:17" pos:end="175:17">&lt;</operator> <name pos:start="175:19" pos:end="175:25">max_len</name></expr>)</condition> <block pos:start="175:28" pos:end="183:9">{<block_content pos:start="177:13" pos:end="181:21">

            <expr_stmt pos:start="177:13" pos:end="177:30"><expr pos:start="177:13" pos:end="177:29"><operator pos:start="177:13" pos:end="177:13">*</operator><name pos:start="177:14" pos:end="177:21">int_mask</name> <operator pos:start="177:23" pos:end="177:24">|=</operator> <literal type="number" pos:start="177:26" pos:end="177:29">0x02</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="179:13" pos:end="179:48">/* short packet: do not update QH */</comment>

            <return pos:start="181:13" pos:end="181:21">return <expr pos:start="181:20" pos:end="181:20"><literal type="number" pos:start="181:20" pos:end="181:20">1</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="183:11" pos:end="189:9">else <block pos:start="183:16" pos:end="189:9">{<block_content pos:start="187:13" pos:end="187:21">

            <comment type="block" pos:start="185:13" pos:end="185:25">/* success */</comment>

            <return pos:start="187:13" pos:end="187:21">return <expr pos:start="187:20" pos:end="187:20"><literal type="number" pos:start="187:20" pos:end="187:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="191:7" pos:end="257:5">else <block pos:start="191:12" pos:end="257:5">{<block_content pos:start="193:9" pos:end="255:9">

        <switch pos:start="193:9" pos:end="255:9">switch<condition pos:start="193:15" pos:end="193:19">(<expr pos:start="193:16" pos:end="193:18"><name pos:start="193:16" pos:end="193:18">ret</name></expr>)</condition> <block pos:start="193:21" pos:end="255:9">{<block_content pos:start="195:9" pos:end="253:22">

        <default pos:start="195:9" pos:end="195:16">default:</default>

        <case pos:start="197:9" pos:end="197:27">case <expr pos:start="197:14" pos:end="197:26"><name pos:start="197:14" pos:end="197:26">USB_RET_NODEV</name></expr>:</case>

        <label pos:start="199:9" pos:end="199:19"><name pos:start="199:9" pos:end="199:18">do_timeout</name>:</label>

            <expr_stmt pos:start="201:13" pos:end="201:40"><expr pos:start="201:13" pos:end="201:39"><name pos:start="201:13" pos:end="201:20"><name pos:start="201:13" pos:end="201:14">td</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:20">ctrl</name></name> <operator pos:start="201:22" pos:end="201:23">|=</operator> <name pos:start="201:25" pos:end="201:39">TD_CTRL_TIMEOUT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:56"><expr pos:start="203:13" pos:end="203:55"><name pos:start="203:13" pos:end="203:15">err</name> <operator pos:start="203:17" pos:end="203:17">=</operator> <operator pos:start="203:19" pos:end="203:19">(</operator><name pos:start="203:20" pos:end="203:27"><name pos:start="203:20" pos:end="203:21">td</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:27">ctrl</name></name> <operator pos:start="203:29" pos:end="203:30">&gt;&gt;</operator> <name pos:start="203:32" pos:end="203:50">TD_CTRL_ERROR_SHIFT</name><operator pos:start="203:51" pos:end="203:51">)</operator> <operator pos:start="203:53" pos:end="203:53">&amp;</operator> <literal type="number" pos:start="203:55" pos:end="203:55">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="219:13"><if pos:start="205:13" pos:end="219:13">if <condition pos:start="205:16" pos:end="205:25">(<expr pos:start="205:17" pos:end="205:24"><name pos:start="205:17" pos:end="205:19">err</name> <operator pos:start="205:21" pos:end="205:22">!=</operator> <literal type="number" pos:start="205:24" pos:end="205:24">0</literal></expr>)</condition> <block pos:start="205:27" pos:end="219:13">{<block_content pos:start="207:17" pos:end="217:17">

                <expr_stmt pos:start="207:17" pos:end="207:22"><expr pos:start="207:17" pos:end="207:21"><name pos:start="207:17" pos:end="207:19">err</name><operator pos:start="207:20" pos:end="207:21">--</operator></expr>;</expr_stmt>

                <if_stmt pos:start="209:17" pos:end="217:17"><if pos:start="209:17" pos:end="217:17">if <condition pos:start="209:20" pos:end="209:29">(<expr pos:start="209:21" pos:end="209:28"><name pos:start="209:21" pos:end="209:23">err</name> <operator pos:start="209:25" pos:end="209:26">==</operator> <literal type="number" pos:start="209:28" pos:end="209:28">0</literal></expr>)</condition> <block pos:start="209:31" pos:end="217:17">{<block_content pos:start="211:21" pos:end="215:39">

                    <expr_stmt pos:start="211:21" pos:end="211:48"><expr pos:start="211:21" pos:end="211:47"><name pos:start="211:21" pos:end="211:28"><name pos:start="211:21" pos:end="211:22">td</name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:28">ctrl</name></name> <operator pos:start="211:30" pos:end="211:31">&amp;=</operator> <operator pos:start="211:33" pos:end="211:33">~</operator><name pos:start="211:34" pos:end="211:47">TD_CTRL_ACTIVE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="213:21" pos:end="213:49"><expr pos:start="213:21" pos:end="213:48"><name pos:start="213:21" pos:end="213:29"><name pos:start="213:21" pos:end="213:21">s</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:29">status</name></name> <operator pos:start="213:31" pos:end="213:32">|=</operator> <name pos:start="213:34" pos:end="213:48">UHCI_STS_USBERR</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:39"><expr pos:start="215:21" pos:end="215:38"><call pos:start="215:21" pos:end="215:38"><name pos:start="215:21" pos:end="215:35">uhci_update_irq</name><argument_list pos:start="215:36" pos:end="215:38">(<argument pos:start="215:37" pos:end="215:37"><expr pos:start="215:37" pos:end="215:37"><name pos:start="215:37" pos:end="215:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="221:13" pos:end="223:45"><expr pos:start="221:13" pos:end="223:44"><name pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:14">td</name><operator pos:start="221:15" pos:end="221:16">-&gt;</operator><name pos:start="221:17" pos:end="221:20">ctrl</name></name> <operator pos:start="221:22" pos:end="221:22">=</operator> <operator pos:start="221:24" pos:end="221:24">(</operator><name pos:start="221:25" pos:end="221:32"><name pos:start="221:25" pos:end="221:26">td</name><operator pos:start="221:27" pos:end="221:28">-&gt;</operator><name pos:start="221:29" pos:end="221:32">ctrl</name></name> <operator pos:start="221:34" pos:end="221:34">&amp;</operator> <operator pos:start="221:36" pos:end="221:36">~</operator><operator pos:start="221:37" pos:end="221:37">(</operator><literal type="number" pos:start="221:38" pos:end="221:38">3</literal> <operator pos:start="221:40" pos:end="221:41">&lt;&lt;</operator> <name pos:start="221:43" pos:end="221:61">TD_CTRL_ERROR_SHIFT</name><operator pos:start="221:62" pos:end="221:62">)</operator><operator pos:start="221:63" pos:end="221:63">)</operator> <operator pos:start="221:65" pos:end="221:65">|</operator>

                <operator pos:start="223:17" pos:end="223:17">(</operator><name pos:start="223:18" pos:end="223:20">err</name> <operator pos:start="223:22" pos:end="223:23">&lt;&lt;</operator> <name pos:start="223:25" pos:end="223:43">TD_CTRL_ERROR_SHIFT</name><operator pos:start="223:44" pos:end="223:44">)</operator></expr>;</expr_stmt>

            <return pos:start="225:13" pos:end="225:21">return <expr pos:start="225:20" pos:end="225:20"><literal type="number" pos:start="225:20" pos:end="225:20">1</literal></expr>;</return>

        <case pos:start="227:9" pos:end="227:25">case <expr pos:start="227:14" pos:end="227:24"><name pos:start="227:14" pos:end="227:24">USB_RET_NAK</name></expr>:</case>

            <expr_stmt pos:start="229:13" pos:end="229:36"><expr pos:start="229:13" pos:end="229:35"><name pos:start="229:13" pos:end="229:20"><name pos:start="229:13" pos:end="229:14">td</name><operator pos:start="229:15" pos:end="229:16">-&gt;</operator><name pos:start="229:17" pos:end="229:20">ctrl</name></name> <operator pos:start="229:22" pos:end="229:23">|=</operator> <name pos:start="229:25" pos:end="229:35">TD_CTRL_NAK</name></expr>;</expr_stmt>

            <if_stmt pos:start="231:13" pos:end="233:32"><if pos:start="231:13" pos:end="233:32">if <condition pos:start="231:16" pos:end="231:39">(<expr pos:start="231:17" pos:end="231:38"><name pos:start="231:17" pos:end="231:19">pid</name> <operator pos:start="231:21" pos:end="231:22">==</operator> <name pos:start="231:24" pos:end="231:38">USB_TOKEN_SETUP</name></expr>)</condition><block type="pseudo" pos:start="233:17" pos:end="233:32"><block_content pos:start="233:17" pos:end="233:32">

                <goto pos:start="233:17" pos:end="233:32">goto <name pos:start="233:22" pos:end="233:31">do_timeout</name>;</goto></block_content></block></if></if_stmt>

            <return pos:start="235:13" pos:end="235:21">return <expr pos:start="235:20" pos:end="235:20"><literal type="number" pos:start="235:20" pos:end="235:20">1</literal></expr>;</return>

        <case pos:start="237:9" pos:end="237:27">case <expr pos:start="237:14" pos:end="237:26"><name pos:start="237:14" pos:end="237:26">USB_RET_STALL</name></expr>:</case>

            <expr_stmt pos:start="239:13" pos:end="239:38"><expr pos:start="239:13" pos:end="239:37"><name pos:start="239:13" pos:end="239:20"><name pos:start="239:13" pos:end="239:14">td</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:20">ctrl</name></name> <operator pos:start="239:22" pos:end="239:23">|=</operator> <name pos:start="239:25" pos:end="239:37">TD_CTRL_STALL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:40"><expr pos:start="241:13" pos:end="241:39"><name pos:start="241:13" pos:end="241:20"><name pos:start="241:13" pos:end="241:14">td</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:20">ctrl</name></name> <operator pos:start="241:22" pos:end="241:23">&amp;=</operator> <operator pos:start="241:25" pos:end="241:25">~</operator><name pos:start="241:26" pos:end="241:39">TD_CTRL_ACTIVE</name></expr>;</expr_stmt>

            <return pos:start="243:13" pos:end="243:21">return <expr pos:start="243:20" pos:end="243:20"><literal type="number" pos:start="243:20" pos:end="243:20">1</literal></expr>;</return>

        <case pos:start="245:9" pos:end="245:28">case <expr pos:start="245:14" pos:end="245:27"><name pos:start="245:14" pos:end="245:27">USB_RET_BABBLE</name></expr>:</case>

            <expr_stmt pos:start="247:13" pos:end="247:55"><expr pos:start="247:13" pos:end="247:54"><name pos:start="247:13" pos:end="247:20"><name pos:start="247:13" pos:end="247:14">td</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:20">ctrl</name></name> <operator pos:start="247:22" pos:end="247:23">|=</operator> <name pos:start="247:25" pos:end="247:38">TD_CTRL_BABBLE</name> <operator pos:start="247:40" pos:end="247:40">|</operator> <name pos:start="247:42" pos:end="247:54">TD_CTRL_STALL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:40"><expr pos:start="249:13" pos:end="249:39"><name pos:start="249:13" pos:end="249:20"><name pos:start="249:13" pos:end="249:14">td</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:20">ctrl</name></name> <operator pos:start="249:22" pos:end="249:23">&amp;=</operator> <operator pos:start="249:25" pos:end="249:25">~</operator><name pos:start="249:26" pos:end="249:39">TD_CTRL_ACTIVE</name></expr>;</expr_stmt>

            <comment type="block" pos:start="251:13" pos:end="251:35">/* frame interrupted */</comment>

            <return pos:start="253:13" pos:end="253:22">return <expr pos:start="253:20" pos:end="253:21"><operator pos:start="253:20" pos:end="253:20">-</operator><literal type="number" pos:start="253:21" pos:end="253:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
