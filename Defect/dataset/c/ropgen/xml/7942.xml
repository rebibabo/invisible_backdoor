<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7942.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">init_blk_migration</name><parameter_list pos:start="1:31" pos:end="1:57">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:38">Monitor</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">mon</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:53">QEMUFile</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BlkMigDevState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">bmds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:19">sectors</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:19">block_mig_state</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:29">submitted</name></name> <operator pos:start="13:31" pos:end="13:31">=</operator> <literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:19">block_mig_state</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:29">read_done</name></name> <operator pos:start="15:31" pos:end="15:31">=</operator> <literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:19">block_mig_state</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:31">transferred</name></name> <operator pos:start="17:33" pos:end="17:33">=</operator> <literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:19">block_mig_state</name><operator pos:start="19:20" pos:end="19:20">.</operator><name pos:start="19:21" pos:end="19:36">total_sector_sum</name></name> <operator pos:start="19:38" pos:end="19:38">=</operator> <literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:19">block_mig_state</name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:33">prev_progress</name></name> <operator pos:start="21:35" pos:end="21:35">=</operator> <operator pos:start="21:37" pos:end="21:37">-</operator><literal type="number" pos:start="21:38" pos:end="21:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:19">block_mig_state</name><operator pos:start="23:20" pos:end="23:20">.</operator><name pos:start="23:21" pos:end="23:34">bulk_completed</name></name> <operator pos:start="23:36" pos:end="23:36">=</operator> <literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:19">block_mig_state</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:30">total_time</name></name> <operator pos:start="25:32" pos:end="25:32">=</operator> <literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:19">block_mig_state</name><operator pos:start="27:20" pos:end="27:20">.</operator><name pos:start="27:21" pos:end="27:25">reads</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="85:5">for <control pos:start="31:9" pos:end="31:52">(<init pos:start="31:10" pos:end="31:25"><expr pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:11">bs</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:24">bdrv_first</name></expr>;</init> <condition pos:start="31:27" pos:end="31:37"><expr pos:start="31:27" pos:end="31:36"><name pos:start="31:27" pos:end="31:28">bs</name> <operator pos:start="31:30" pos:end="31:31">!=</operator> <name pos:start="31:33" pos:end="31:36">NULL</name></expr>;</condition> <incr pos:start="31:39" pos:end="31:51"><expr pos:start="31:39" pos:end="31:51"><name pos:start="31:39" pos:end="31:40">bs</name> <operator pos:start="31:42" pos:end="31:42">=</operator> <name pos:start="31:44" pos:end="31:51"><name pos:start="31:44" pos:end="31:45">bs</name><operator pos:start="31:46" pos:end="31:47">-&gt;</operator><name pos:start="31:48" pos:end="31:51">next</name></name></expr></incr>)</control> <block pos:start="31:54" pos:end="85:5">{<block_content pos:start="33:9" pos:end="83:9">

        <if_stmt pos:start="33:9" pos:end="83:9"><if pos:start="33:9" pos:end="83:9">if <condition pos:start="33:12" pos:end="33:37">(<expr pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:14">bs</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:20">type</name></name> <operator pos:start="33:22" pos:end="33:23">==</operator> <name pos:start="33:25" pos:end="33:36">BDRV_TYPE_HD</name></expr>)</condition> <block pos:start="33:39" pos:end="83:9">{<block_content pos:start="35:13" pos:end="81:74">

            <expr_stmt pos:start="35:13" pos:end="35:61"><expr pos:start="35:13" pos:end="35:60"><name pos:start="35:13" pos:end="35:19">sectors</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:40"><name pos:start="35:23" pos:end="35:36">bdrv_getlength</name><argument_list pos:start="35:37" pos:end="35:40">(<argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">bs</name></expr></argument>)</argument_list></call> <operator pos:start="35:42" pos:end="35:43">&gt;&gt;</operator> <name pos:start="35:45" pos:end="35:60">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:29">(<expr pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:23">sectors</name> <operator pos:start="37:25" pos:end="37:26">==</operator> <literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>)</condition> <block pos:start="37:31" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:25">

                <continue pos:start="39:17" pos:end="39:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:56"><expr pos:start="45:13" pos:end="45:55"><name pos:start="45:13" pos:end="45:16">bmds</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:55"><name pos:start="45:20" pos:end="45:31">qemu_mallocz</name><argument_list pos:start="45:32" pos:end="45:55">(<argument pos:start="45:33" pos:end="45:54"><expr pos:start="45:33" pos:end="45:54"><sizeof pos:start="45:33" pos:end="45:54">sizeof<argument_list pos:start="45:39" pos:end="45:54">(<argument pos:start="45:40" pos:end="45:53"><expr pos:start="45:40" pos:end="45:53"><name pos:start="45:40" pos:end="45:53">BlkMigDevState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:16">bmds</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:20">bs</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:25">bs</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:37"><expr pos:start="49:13" pos:end="49:36"><name pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:16">bmds</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:32">bulk_completed</name></name> <operator pos:start="49:34" pos:end="49:34">=</operator> <literal type="number" pos:start="49:36" pos:end="49:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:42"><expr pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:16">bmds</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:31">total_sectors</name></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <name pos:start="51:35" pos:end="51:41">sectors</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:40"><expr pos:start="53:13" pos:end="53:39"><name pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:16">bmds</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:35">completed_sectors</name></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <literal type="number" pos:start="53:39" pos:end="53:39">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:60"><expr pos:start="55:13" pos:end="55:59"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:16">bmds</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:29">shared_base</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <name pos:start="55:33" pos:end="55:59"><name pos:start="55:33" pos:end="55:47">block_mig_state</name><operator pos:start="55:48" pos:end="55:48">.</operator><name pos:start="55:49" pos:end="55:59">shared_base</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:56"><expr pos:start="59:13" pos:end="59:55"><name pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:27">block_mig_state</name><operator pos:start="59:28" pos:end="59:28">.</operator><name pos:start="59:29" pos:end="59:44">total_sector_sum</name></name> <operator pos:start="59:46" pos:end="59:47">+=</operator> <name pos:start="59:49" pos:end="59:55">sectors</name></expr>;</expr_stmt>



            <if_stmt pos:start="63:13" pos:end="77:13"><if pos:start="63:13" pos:end="71:13">if <condition pos:start="63:16" pos:end="63:34">(<expr pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:20">bmds</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:33">shared_base</name></name></expr>)</condition> <block pos:start="63:36" pos:end="71:13">{<block_content pos:start="65:17" pos:end="69:48">

                <expr_stmt pos:start="65:17" pos:end="69:48"><expr pos:start="65:17" pos:end="69:47"><call pos:start="65:17" pos:end="69:47"><name pos:start="65:17" pos:end="65:30">monitor_printf</name><argument_list pos:start="65:31" pos:end="69:47">(<argument pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:34">mon</name></expr></argument>, <argument pos:start="65:37" pos:end="67:45"><expr pos:start="65:37" pos:end="67:45"><literal type="string" pos:start="65:37" pos:end="65:78">"Start migration for %s with shared base "</literal>

                                    <literal type="string" pos:start="67:37" pos:end="67:45">"image\n"</literal></expr></argument>,

                               <argument pos:start="69:32" pos:end="69:46"><expr pos:start="69:32" pos:end="69:46"><name pos:start="69:32" pos:end="69:46"><name pos:start="69:32" pos:end="69:33">bs</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:46">device_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="77:13">else <block pos:start="71:20" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:48">

                <expr_stmt pos:start="73:17" pos:end="75:48"><expr pos:start="73:17" pos:end="75:47"><call pos:start="73:17" pos:end="75:47"><name pos:start="73:17" pos:end="73:30">monitor_printf</name><argument_list pos:start="73:31" pos:end="75:47">(<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">mon</name></expr></argument>, <argument pos:start="73:37" pos:end="73:67"><expr pos:start="73:37" pos:end="73:67"><literal type="string" pos:start="73:37" pos:end="73:67">"Start full migration for %s\n"</literal></expr></argument>,

                               <argument pos:start="75:32" pos:end="75:46"><expr pos:start="75:32" pos:end="75:46"><name pos:start="75:32" pos:end="75:46"><name pos:start="75:32" pos:end="75:33">bs</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:46">device_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:74"><expr pos:start="81:13" pos:end="81:73"><call pos:start="81:13" pos:end="81:73"><name pos:start="81:13" pos:end="81:32">QSIMPLEQ_INSERT_TAIL</name><argument_list pos:start="81:33" pos:end="81:73">(<argument pos:start="81:34" pos:end="81:59"><expr pos:start="81:34" pos:end="81:59"><operator pos:start="81:34" pos:end="81:34">&amp;</operator><name pos:start="81:35" pos:end="81:59"><name pos:start="81:35" pos:end="81:49">block_mig_state</name><operator pos:start="81:50" pos:end="81:50">.</operator><name pos:start="81:51" pos:end="81:59">bmds_list</name></name></expr></argument>, <argument pos:start="81:62" pos:end="81:65"><expr pos:start="81:62" pos:end="81:65"><name pos:start="81:62" pos:end="81:65">bmds</name></expr></argument>, <argument pos:start="81:68" pos:end="81:72"><expr pos:start="81:68" pos:end="81:72"><name pos:start="81:68" pos:end="81:72">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
