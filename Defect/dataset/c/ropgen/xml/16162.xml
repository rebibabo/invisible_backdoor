<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16162.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vmdk_open_desc_file</name><parameter_list pos:start="1:31" pos:end="3:44">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:62">flags</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:73"><decl pos:start="1:65" pos:end="1:73"><type pos:start="1:65" pos:end="1:73"><name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">buf</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:36">Error</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier><modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:16"><name pos:start="9:10" pos:end="9:11">ct</name><index pos:start="9:12" pos:end="9:16">[<expr pos:start="9:13" pos:end="9:15"><literal type="number" pos:start="9:13" pos:end="9:15">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">BDRVVmdkState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:33">= <expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:25">bs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:66">(<expr pos:start="15:9" pos:end="15:65"><call pos:start="15:9" pos:end="15:65"><name pos:start="15:9" pos:end="15:30">vmdk_parse_description</name><argument_list pos:start="15:31" pos:end="15:65">(<argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">buf</name></expr></argument>, <argument pos:start="15:37" pos:end="15:48"><expr pos:start="15:37" pos:end="15:48"><literal type="string" pos:start="15:37" pos:end="15:48">"createType"</literal></expr></argument>, <argument pos:start="15:51" pos:end="15:52"><expr pos:start="15:51" pos:end="15:52"><name pos:start="15:51" pos:end="15:52">ct</name></expr></argument>, <argument pos:start="15:55" pos:end="15:64"><expr pos:start="15:55" pos:end="15:64"><sizeof pos:start="15:55" pos:end="15:64">sizeof<argument_list pos:start="15:61" pos:end="15:64">(<argument pos:start="15:62" pos:end="15:63"><expr pos:start="15:62" pos:end="15:63"><name pos:start="15:62" pos:end="15:63">ct</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:68" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:18">

        <expr_stmt pos:start="17:9" pos:end="17:58"><expr pos:start="17:9" pos:end="17:57"><call pos:start="17:9" pos:end="17:57"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:57">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:56"><expr pos:start="17:26" pos:end="17:56"><literal type="string" pos:start="17:26" pos:end="17:56">"invalid VMDK image descriptor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">-</operator><name pos:start="19:16" pos:end="19:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:18">goto <name pos:start="21:14" pos:end="21:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="41:5"><if pos:start="25:5" pos:end="41:5">if <condition pos:start="25:8" pos:end="33:41">(<expr pos:start="25:9" pos:end="33:40"><call pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:14">strcmp</name><argument_list pos:start="25:15" pos:end="25:36">(<argument pos:start="25:16" pos:end="25:17"><expr pos:start="25:16" pos:end="25:17"><name pos:start="25:16" pos:end="25:17">ct</name></expr></argument>, <argument pos:start="25:20" pos:end="25:35"><expr pos:start="25:20" pos:end="25:35"><literal type="string" pos:start="25:20" pos:end="25:35">"monolithicFlat"</literal></expr></argument>)</argument_list></call> <operator pos:start="25:38" pos:end="25:39">&amp;&amp;</operator>

        <call pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:14">strcmp</name><argument_list pos:start="27:15" pos:end="27:26">(<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">ct</name></expr></argument>, <argument pos:start="27:20" pos:end="27:25"><expr pos:start="27:20" pos:end="27:25"><literal type="string" pos:start="27:20" pos:end="27:25">"vmfs"</literal></expr></argument>)</argument_list></call> <operator pos:start="27:28" pos:end="27:29">&amp;&amp;</operator>

        <call pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:14">strcmp</name><argument_list pos:start="29:15" pos:end="29:32">(<argument pos:start="29:16" pos:end="29:17"><expr pos:start="29:16" pos:end="29:17"><name pos:start="29:16" pos:end="29:17">ct</name></expr></argument>, <argument pos:start="29:20" pos:end="29:31"><expr pos:start="29:20" pos:end="29:31"><literal type="string" pos:start="29:20" pos:end="29:31">"vmfsSparse"</literal></expr></argument>)</argument_list></call> <operator pos:start="29:34" pos:end="29:35">&amp;&amp;</operator>

        <call pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:14">strcmp</name><argument_list pos:start="31:15" pos:end="31:42">(<argument pos:start="31:16" pos:end="31:17"><expr pos:start="31:16" pos:end="31:17"><name pos:start="31:16" pos:end="31:17">ct</name></expr></argument>, <argument pos:start="31:20" pos:end="31:41"><expr pos:start="31:20" pos:end="31:41"><literal type="string" pos:start="31:20" pos:end="31:41">"twoGbMaxExtentSparse"</literal></expr></argument>)</argument_list></call> <operator pos:start="31:44" pos:end="31:45">&amp;&amp;</operator>

        <call pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:14">strcmp</name><argument_list pos:start="33:15" pos:end="33:40">(<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">ct</name></expr></argument>, <argument pos:start="33:20" pos:end="33:39"><expr pos:start="33:20" pos:end="33:39"><literal type="string" pos:start="33:20" pos:end="33:39">"twoGbMaxExtentFlat"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:43" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:18">

        <expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><call pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="35:59">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:54"><expr pos:start="35:26" pos:end="35:54"><literal type="string" pos:start="35:26" pos:end="35:54">"Unsupported image type '%s'"</literal></expr></argument>, <argument pos:start="35:57" pos:end="35:58"><expr pos:start="35:57" pos:end="35:58"><name pos:start="35:57" pos:end="35:58">ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">-</operator><name pos:start="37:16" pos:end="37:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:18">create_type</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:33"><name pos:start="43:22" pos:end="43:29">g_strdup</name><argument_list pos:start="43:30" pos:end="43:33">(<argument pos:start="43:31" pos:end="43:32"><expr pos:start="43:31" pos:end="43:32"><name pos:start="43:31" pos:end="43:32">ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:23"><expr pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:18">desc_offset</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:70"><expr pos:start="47:5" pos:end="47:69"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:69"><name pos:start="47:11" pos:end="47:28">vmdk_parse_extents</name><argument_list pos:start="47:29" pos:end="47:69">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">buf</name></expr></argument>, <argument pos:start="47:35" pos:end="47:36"><expr pos:start="47:35" pos:end="47:36"><name pos:start="47:35" pos:end="47:36">bs</name></expr></argument>, <argument pos:start="47:39" pos:end="47:62"><expr pos:start="47:39" pos:end="47:62"><name pos:start="47:39" pos:end="47:62"><name pos:start="47:39" pos:end="47:40">bs</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:46">file</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:62">exact_filename</name></name></expr></argument>, <argument pos:start="47:65" pos:end="47:68"><expr pos:start="47:65" pos:end="47:68"><name pos:start="47:65" pos:end="47:68">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="49:1" pos:end="49:5"><name pos:start="49:1" pos:end="49:4">exit</name>:</label>

    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
