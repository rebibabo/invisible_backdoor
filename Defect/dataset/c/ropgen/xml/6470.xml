<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6470.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:12">clk_setup_cb</name></type> <name pos:start="1:14" pos:end="1:28">cpu_ppc_tb_init</name> <parameter_list pos:start="1:30" pos:end="1:62">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:41">CPUPPCState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:61">freq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:31">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PowerPCCPU</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">cpu</name> <init pos:start="5:21" pos:end="5:42">= <expr pos:start="5:23" pos:end="5:42"><call pos:start="5:23" pos:end="5:42"><name pos:start="5:23" pos:end="5:37">ppc_env_get_cpu</name><argument_list pos:start="5:38" pos:end="5:42">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">ppc_tb_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:20">tb_env</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:10">tb_env</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <call pos:start="11:14" pos:end="11:40"><name pos:start="11:14" pos:end="11:22">g_malloc0</name><argument_list pos:start="11:23" pos:end="11:40">(<argument pos:start="11:24" pos:end="11:39"><expr pos:start="11:24" pos:end="11:39"><sizeof pos:start="11:24" pos:end="11:39">sizeof<argument_list pos:start="11:30" pos:end="11:39">(<argument pos:start="11:31" pos:end="11:38"><expr pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:38">ppc_tb_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:15">tb_env</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:24">tb_env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:10">tb_env</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">flags</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:48">PPC_DECR_UNDERFLOW_TRIGGERED</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:43">(<expr pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:11">env</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:24">insns_flags</name></name> <operator pos:start="17:26" pos:end="17:26">&amp;</operator> <name pos:start="17:28" pos:end="17:42">PPC_SEGMENT_64B</name></expr>)</condition> <block pos:start="17:45" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:50">

        <comment type="block" pos:start="19:9" pos:end="19:67">/* All Book3S 64bit CPUs implement level based DEC logic */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:14">tb_env</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">flags</name></name> <operator pos:start="21:23" pos:end="21:24">|=</operator> <name pos:start="21:26" pos:end="21:49">PPC_DECR_UNDERFLOW_LEVEL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:26">/* Create new timer */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:81"><expr pos:start="27:5" pos:end="27:80"><name pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:10">tb_env</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:22">decr_timer</name></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:80"><name pos:start="27:26" pos:end="27:37">timer_new_ns</name><argument_list pos:start="27:38" pos:end="27:80">(<argument pos:start="27:39" pos:end="27:56"><expr pos:start="27:39" pos:end="27:56"><name pos:start="27:39" pos:end="27:56">QEMU_CLOCK_VIRTUAL</name></expr></argument>, <argument pos:start="27:59" pos:end="27:74"><expr pos:start="27:59" pos:end="27:74"><operator pos:start="27:59" pos:end="27:59">&amp;</operator><name pos:start="27:60" pos:end="27:74">cpu_ppc_decr_cb</name></expr></argument>, <argument pos:start="27:77" pos:end="27:79"><expr pos:start="27:77" pos:end="27:79"><name pos:start="27:77" pos:end="27:79">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="43:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="29:10">(<expr pos:start="29:9" pos:end="29:9"><literal type="number" pos:start="29:9" pos:end="29:9">0</literal></expr>)</condition> <block pos:start="29:12" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:53">

        <comment type="block" pos:start="31:9" pos:end="33:11">/* XXX: find a suitable condition to enable the hypervisor decrementer

         */</comment>

        <expr_stmt pos:start="35:9" pos:end="37:53"><expr pos:start="35:9" pos:end="37:52"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:14">tb_env</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:27">hdecr_timer</name></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <call pos:start="35:31" pos:end="37:52"><name pos:start="35:31" pos:end="35:42">timer_new_ns</name><argument_list pos:start="35:43" pos:end="37:52">(<argument pos:start="35:44" pos:end="35:61"><expr pos:start="35:44" pos:end="35:61"><name pos:start="35:44" pos:end="35:61">QEMU_CLOCK_VIRTUAL</name></expr></argument>, <argument pos:start="35:64" pos:end="35:80"><expr pos:start="35:64" pos:end="35:80"><operator pos:start="35:64" pos:end="35:64">&amp;</operator><name pos:start="35:65" pos:end="35:80">cpu_ppc_hdecr_cb</name></expr></argument>,

                                                <argument pos:start="37:49" pos:end="37:51"><expr pos:start="37:49" pos:end="37:51"><name pos:start="37:49" pos:end="37:51">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:35">

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:14">tb_env</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:27">hdecr_timer</name></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:34">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><call pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:22">cpu_ppc_set_tb_clk</name><argument_list pos:start="45:23" pos:end="45:33">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">env</name></expr></argument>, <argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:32">freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:31">return <expr pos:start="49:12" pos:end="49:30"><operator pos:start="49:12" pos:end="49:12">&amp;</operator><name pos:start="49:13" pos:end="49:30">cpu_ppc_set_tb_clk</name></expr>;</return>

</block_content>}</block></function>
</unit>
