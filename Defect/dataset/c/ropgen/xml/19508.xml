<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19508.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">kvm_max_vcpus</name><parameter_list pos:start="1:25" pos:end="1:37">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:35"><name pos:start="1:26" pos:end="1:33">KVMState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="15:7">/* Find number of supported CPUs using the recommended

     * procedure from the kernel API documentation to cope with

     * older kernels that may be missing capabilities.

     */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:52"><expr pos:start="17:5" pos:end="17:51"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:51"><name pos:start="17:11" pos:end="17:29">kvm_check_extension</name><argument_list pos:start="17:30" pos:end="17:51">(<argument pos:start="17:31" pos:end="17:31"><expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">s</name></expr></argument>, <argument pos:start="17:34" pos:end="17:50"><expr pos:start="17:34" pos:end="17:50"><name pos:start="17:34" pos:end="17:50">KVM_CAP_MAX_VCPUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">ret</name></expr>)</condition> <block pos:start="19:14" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:50"><name pos:start="25:11" pos:end="25:29">kvm_check_extension</name><argument_list pos:start="25:30" pos:end="25:50">(<argument pos:start="25:31" pos:end="25:31"><expr pos:start="25:31" pos:end="25:31"><name pos:start="25:31" pos:end="25:31">s</name></expr></argument>, <argument pos:start="25:34" pos:end="25:49"><expr pos:start="25:34" pos:end="25:49"><name pos:start="25:34" pos:end="25:49">KVM_CAP_NR_VCPUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">ret</name></expr>)</condition> <block pos:start="27:14" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">4</literal></expr>;</return>

</block_content>}</block></function>
</unit>
