<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21299.c" pos:tabs="8"><function pos:start="1:1" pos:end="161:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">kmvc_decode_inter_8x8</name><parameter_list pos:start="1:34" pos:end="1:87">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:45">KmvcContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:51">ctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:72"><decl pos:start="1:54" pos:end="1:72"><type pos:start="1:54" pos:end="1:72"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type> <name pos:start="1:70" pos:end="1:72">src</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:79"><decl pos:start="1:75" pos:end="1:79"><type pos:start="1:75" pos:end="1:79"><name pos:start="1:75" pos:end="1:77">int</name></type> <name pos:start="1:79" pos:end="1:79">w</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:86"><decl pos:start="1:82" pos:end="1:86"><type pos:start="1:82" pos:end="1:86"><name pos:start="1:82" pos:end="1:84">int</name></type> <name pos:start="1:86" pos:end="1:86">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="161:1">{<block_content pos:start="5:5" pos:end="159:9">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">BitBuf</name></type> <name pos:start="5:12" pos:end="5:13">bb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">res</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">bx</name></decl>, <decl pos:start="11:13" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">by</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">l0x</name></decl>, <decl pos:start="13:14" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:16">l1x</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">l0y</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:26">l1y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">mx</name></decl>, <decl pos:start="15:13" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:14">my</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><call pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:21">kmvc_init_getbits</name><argument_list pos:start="19:22" pos:end="19:30">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">bb</name></expr></argument>, <argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="159:9">for <control pos:start="23:9" pos:end="23:33">(<init pos:start="23:10" pos:end="23:16"><expr pos:start="23:10" pos:end="23:15"><name pos:start="23:10" pos:end="23:11">by</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>;</init> <condition pos:start="23:18" pos:end="23:24"><expr pos:start="23:18" pos:end="23:23"><name pos:start="23:18" pos:end="23:19">by</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <name pos:start="23:23" pos:end="23:23">h</name></expr>;</condition> <incr pos:start="23:26" pos:end="23:32"><expr pos:start="23:26" pos:end="23:32"><name pos:start="23:26" pos:end="23:27">by</name> <operator pos:start="23:29" pos:end="23:30">+=</operator> <literal type="number" pos:start="23:32" pos:end="23:32">8</literal></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="159:9"><block_content pos:start="25:9" pos:end="159:9">

        <for pos:start="25:9" pos:end="159:9">for <control pos:start="25:13" pos:end="25:37">(<init pos:start="25:14" pos:end="25:20"><expr pos:start="25:14" pos:end="25:19"><name pos:start="25:14" pos:end="25:15">bx</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</init> <condition pos:start="25:22" pos:end="25:28"><expr pos:start="25:22" pos:end="25:27"><name pos:start="25:22" pos:end="25:23">bx</name> <operator pos:start="25:25" pos:end="25:25">&lt;</operator> <name pos:start="25:27" pos:end="25:27">w</name></expr>;</condition> <incr pos:start="25:30" pos:end="25:36"><expr pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:31">bx</name> <operator pos:start="25:33" pos:end="25:34">+=</operator> <literal type="number" pos:start="25:36" pos:end="25:36">8</literal></expr></incr>)</control> <block pos:start="25:39" pos:end="159:9">{<block_content pos:start="27:13" pos:end="157:13">

            <expr_stmt pos:start="27:13" pos:end="27:38"><expr pos:start="27:13" pos:end="27:37"><call pos:start="27:13" pos:end="27:37"><name pos:start="27:13" pos:end="27:23">kmvc_getbit</name><argument_list pos:start="27:24" pos:end="27:37">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">bb</name></expr></argument>, <argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">src</name></expr></argument>, <argument pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:36">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="157:13"><if pos:start="29:13" pos:end="51:13">if <condition pos:start="29:16" pos:end="29:21">(<expr pos:start="29:17" pos:end="29:20"><operator pos:start="29:17" pos:end="29:17">!</operator><name pos:start="29:18" pos:end="29:20">res</name></expr>)</condition> <block pos:start="29:23" pos:end="51:13">{<block_content pos:start="31:17" pos:end="49:17">

                <expr_stmt pos:start="31:17" pos:end="31:42"><expr pos:start="31:17" pos:end="31:41"><call pos:start="31:17" pos:end="31:41"><name pos:start="31:17" pos:end="31:27">kmvc_getbit</name><argument_list pos:start="31:28" pos:end="31:41">(<argument pos:start="31:29" pos:end="31:30"><expr pos:start="31:29" pos:end="31:30"><name pos:start="31:29" pos:end="31:30">bb</name></expr></argument>, <argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">src</name></expr></argument>, <argument pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:40">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="33:17" pos:end="49:17"><if pos:start="33:17" pos:end="41:17">if <condition pos:start="33:20" pos:end="33:25">(<expr pos:start="33:21" pos:end="33:24"><operator pos:start="33:21" pos:end="33:21">!</operator><name pos:start="33:22" pos:end="33:24">res</name></expr>)</condition> <block pos:start="33:27" pos:end="41:17">{<block_content pos:start="35:21" pos:end="39:75">     <comment type="line" pos:start="33:33" pos:end="33:55">// fill whole 8x8 block</comment>

                    <expr_stmt pos:start="35:21" pos:end="35:33"><expr pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:23">val</name> <operator pos:start="35:25" pos:end="35:25">=</operator> <operator pos:start="35:27" pos:end="35:27">*</operator><name pos:start="35:28" pos:end="35:30">src</name><operator pos:start="35:31" pos:end="35:32">++</operator></expr>;</expr_stmt>

                    <for pos:start="37:21" pos:end="39:75">for <control pos:start="37:25" pos:end="37:44">(<init pos:start="37:26" pos:end="37:31"><expr pos:start="37:26" pos:end="37:30"><name pos:start="37:26" pos:end="37:26">i</name> <operator pos:start="37:28" pos:end="37:28">=</operator> <literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr>;</init> <condition pos:start="37:33" pos:end="37:39"><expr pos:start="37:33" pos:end="37:38"><name pos:start="37:33" pos:end="37:33">i</name> <operator pos:start="37:35" pos:end="37:35">&lt;</operator> <literal type="number" pos:start="37:37" pos:end="37:38">64</literal></expr>;</condition> <incr pos:start="37:41" pos:end="37:43"><expr pos:start="37:41" pos:end="37:43"><name pos:start="37:41" pos:end="37:41">i</name><operator pos:start="37:42" pos:end="37:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:25" pos:end="39:75"><block_content pos:start="39:25" pos:end="39:75">

                        <expr_stmt pos:start="39:25" pos:end="39:75"><expr pos:start="39:25" pos:end="39:74"><call pos:start="39:25" pos:end="39:68"><name pos:start="39:25" pos:end="39:27">BLK</name><argument_list pos:start="39:28" pos:end="39:68">(<argument pos:start="39:29" pos:end="39:36"><expr pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:31">ctx</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:36">cur</name></name></expr></argument>, <argument pos:start="39:39" pos:end="39:52"><expr pos:start="39:39" pos:end="39:52"><name pos:start="39:39" pos:end="39:40">bx</name> <operator pos:start="39:42" pos:end="39:42">+</operator> <operator pos:start="39:44" pos:end="39:44">(</operator><name pos:start="39:45" pos:end="39:45">i</name> <operator pos:start="39:47" pos:end="39:47">&amp;</operator> <literal type="number" pos:start="39:49" pos:end="39:51">0x7</literal><operator pos:start="39:52" pos:end="39:52">)</operator></expr></argument>, <argument pos:start="39:55" pos:end="39:67"><expr pos:start="39:55" pos:end="39:67"><name pos:start="39:55" pos:end="39:56">by</name> <operator pos:start="39:58" pos:end="39:58">+</operator> <operator pos:start="39:60" pos:end="39:60">(</operator><name pos:start="39:61" pos:end="39:61">i</name> <operator pos:start="39:63" pos:end="39:64">&gt;&gt;</operator> <literal type="number" pos:start="39:66" pos:end="39:66">3</literal><operator pos:start="39:67" pos:end="39:67">)</operator></expr></argument>)</argument_list></call> <operator pos:start="39:70" pos:end="39:70">=</operator> <name pos:start="39:72" pos:end="39:74">val</name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if> <else pos:start="41:19" pos:end="49:17">else <block pos:start="41:24" pos:end="49:17">{<block_content pos:start="43:21" pos:end="47:74">        <comment type="line" pos:start="41:33" pos:end="41:65">// copy block from previous frame</comment>

                    <for pos:start="43:21" pos:end="47:74">for <control pos:start="43:25" pos:end="43:44">(<init pos:start="43:26" pos:end="43:31"><expr pos:start="43:26" pos:end="43:30"><name pos:start="43:26" pos:end="43:26">i</name> <operator pos:start="43:28" pos:end="43:28">=</operator> <literal type="number" pos:start="43:30" pos:end="43:30">0</literal></expr>;</init> <condition pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:38"><name pos:start="43:33" pos:end="43:33">i</name> <operator pos:start="43:35" pos:end="43:35">&lt;</operator> <literal type="number" pos:start="43:37" pos:end="43:38">64</literal></expr>;</condition> <incr pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><name pos:start="43:41" pos:end="43:41">i</name><operator pos:start="43:42" pos:end="43:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:25" pos:end="47:74"><block_content pos:start="45:25" pos:end="47:74">

                        <expr_stmt pos:start="45:25" pos:end="47:74"><expr pos:start="45:25" pos:end="47:73"><call pos:start="45:25" pos:end="45:68"><name pos:start="45:25" pos:end="45:27">BLK</name><argument_list pos:start="45:28" pos:end="45:68">(<argument pos:start="45:29" pos:end="45:36"><expr pos:start="45:29" pos:end="45:36"><name pos:start="45:29" pos:end="45:36"><name pos:start="45:29" pos:end="45:31">ctx</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:36">cur</name></name></expr></argument>, <argument pos:start="45:39" pos:end="45:52"><expr pos:start="45:39" pos:end="45:52"><name pos:start="45:39" pos:end="45:40">bx</name> <operator pos:start="45:42" pos:end="45:42">+</operator> <operator pos:start="45:44" pos:end="45:44">(</operator><name pos:start="45:45" pos:end="45:45">i</name> <operator pos:start="45:47" pos:end="45:47">&amp;</operator> <literal type="number" pos:start="45:49" pos:end="45:51">0x7</literal><operator pos:start="45:52" pos:end="45:52">)</operator></expr></argument>, <argument pos:start="45:55" pos:end="45:67"><expr pos:start="45:55" pos:end="45:67"><name pos:start="45:55" pos:end="45:56">by</name> <operator pos:start="45:58" pos:end="45:58">+</operator> <operator pos:start="45:60" pos:end="45:60">(</operator><name pos:start="45:61" pos:end="45:61">i</name> <operator pos:start="45:63" pos:end="45:64">&gt;&gt;</operator> <literal type="number" pos:start="45:66" pos:end="45:66">3</literal><operator pos:start="45:67" pos:end="45:67">)</operator></expr></argument>)</argument_list></call> <operator pos:start="45:70" pos:end="45:70">=</operator>

                            <call pos:start="47:29" pos:end="47:73"><name pos:start="47:29" pos:end="47:31">BLK</name><argument_list pos:start="47:32" pos:end="47:73">(<argument pos:start="47:33" pos:end="47:41"><expr pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:35">ctx</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:41">prev</name></name></expr></argument>, <argument pos:start="47:44" pos:end="47:57"><expr pos:start="47:44" pos:end="47:57"><name pos:start="47:44" pos:end="47:45">bx</name> <operator pos:start="47:47" pos:end="47:47">+</operator> <operator pos:start="47:49" pos:end="47:49">(</operator><name pos:start="47:50" pos:end="47:50">i</name> <operator pos:start="47:52" pos:end="47:52">&amp;</operator> <literal type="number" pos:start="47:54" pos:end="47:56">0x7</literal><operator pos:start="47:57" pos:end="47:57">)</operator></expr></argument>, <argument pos:start="47:60" pos:end="47:72"><expr pos:start="47:60" pos:end="47:72"><name pos:start="47:60" pos:end="47:61">by</name> <operator pos:start="47:63" pos:end="47:63">+</operator> <operator pos:start="47:65" pos:end="47:65">(</operator><name pos:start="47:66" pos:end="47:66">i</name> <operator pos:start="47:68" pos:end="47:69">&gt;&gt;</operator> <literal type="number" pos:start="47:71" pos:end="47:71">3</literal><operator pos:start="47:72" pos:end="47:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="51:15" pos:end="157:13">else <block pos:start="51:20" pos:end="157:13">{<block_content pos:start="53:17" pos:end="155:17">            <comment type="line" pos:start="51:33" pos:end="51:60">// handle four 4x4 subblocks</comment>

                <for pos:start="53:17" pos:end="155:17">for <control pos:start="53:21" pos:end="53:39">(<init pos:start="53:22" pos:end="53:27"><expr pos:start="53:22" pos:end="53:26"><name pos:start="53:22" pos:end="53:22">i</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>;</init> <condition pos:start="53:29" pos:end="53:34"><expr pos:start="53:29" pos:end="53:33"><name pos:start="53:29" pos:end="53:29">i</name> <operator pos:start="53:31" pos:end="53:31">&lt;</operator> <literal type="number" pos:start="53:33" pos:end="53:33">4</literal></expr>;</condition> <incr pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><name pos:start="53:36" pos:end="53:36">i</name><operator pos:start="53:37" pos:end="53:38">++</operator></expr></incr>)</control> <block pos:start="53:41" pos:end="155:17">{<block_content pos:start="55:21" pos:end="153:21">

                    <expr_stmt pos:start="55:21" pos:end="55:43"><expr pos:start="55:21" pos:end="55:42"><name pos:start="55:21" pos:end="55:23">l0x</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:28">bx</name> <operator pos:start="55:30" pos:end="55:30">+</operator> <operator pos:start="55:32" pos:end="55:32">(</operator><name pos:start="55:33" pos:end="55:33">i</name> <operator pos:start="55:35" pos:end="55:35">&amp;</operator> <literal type="number" pos:start="55:37" pos:end="55:37">1</literal><operator pos:start="55:38" pos:end="55:38">)</operator> <operator pos:start="55:40" pos:end="55:40">*</operator> <literal type="number" pos:start="55:42" pos:end="55:42">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:43"><expr pos:start="57:21" pos:end="57:42"><name pos:start="57:21" pos:end="57:23">l0y</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:28">by</name> <operator pos:start="57:30" pos:end="57:30">+</operator> <operator pos:start="57:32" pos:end="57:32">(</operator><name pos:start="57:33" pos:end="57:33">i</name> <operator pos:start="57:35" pos:end="57:35">&amp;</operator> <literal type="number" pos:start="57:37" pos:end="57:37">2</literal><operator pos:start="57:38" pos:end="57:38">)</operator> <operator pos:start="57:40" pos:end="57:40">*</operator> <literal type="number" pos:start="57:42" pos:end="57:42">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:46"><expr pos:start="59:21" pos:end="59:45"><call pos:start="59:21" pos:end="59:45"><name pos:start="59:21" pos:end="59:31">kmvc_getbit</name><argument_list pos:start="59:32" pos:end="59:45">(<argument pos:start="59:33" pos:end="59:34"><expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">bb</name></expr></argument>, <argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:39">src</name></expr></argument>, <argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="61:21" pos:end="153:21"><if pos:start="61:21" pos:end="89:21">if <condition pos:start="61:24" pos:end="61:29">(<expr pos:start="61:25" pos:end="61:28"><operator pos:start="61:25" pos:end="61:25">!</operator><name pos:start="61:26" pos:end="61:28">res</name></expr>)</condition> <block pos:start="61:31" pos:end="89:21">{<block_content pos:start="63:25" pos:end="87:25">

                        <expr_stmt pos:start="63:25" pos:end="63:50"><expr pos:start="63:25" pos:end="63:49"><call pos:start="63:25" pos:end="63:49"><name pos:start="63:25" pos:end="63:35">kmvc_getbit</name><argument_list pos:start="63:36" pos:end="63:49">(<argument pos:start="63:37" pos:end="63:38"><expr pos:start="63:37" pos:end="63:38"><name pos:start="63:37" pos:end="63:38">bb</name></expr></argument>, <argument pos:start="63:41" pos:end="63:43"><expr pos:start="63:41" pos:end="63:43"><name pos:start="63:41" pos:end="63:43">src</name></expr></argument>, <argument pos:start="63:46" pos:end="63:48"><expr pos:start="63:46" pos:end="63:48"><name pos:start="63:46" pos:end="63:48">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="65:25" pos:end="87:25"><if pos:start="65:25" pos:end="73:25">if <condition pos:start="65:28" pos:end="65:33">(<expr pos:start="65:29" pos:end="65:32"><operator pos:start="65:29" pos:end="65:29">!</operator><name pos:start="65:30" pos:end="65:32">res</name></expr>)</condition> <block pos:start="65:35" pos:end="73:25">{<block_content pos:start="67:29" pos:end="71:83">     <comment type="line" pos:start="65:41" pos:end="65:63">// fill whole 4x4 block</comment>

                            <expr_stmt pos:start="67:29" pos:end="67:41"><expr pos:start="67:29" pos:end="67:40"><name pos:start="67:29" pos:end="67:31">val</name> <operator pos:start="67:33" pos:end="67:33">=</operator> <operator pos:start="67:35" pos:end="67:35">*</operator><name pos:start="67:36" pos:end="67:38">src</name><operator pos:start="67:39" pos:end="67:40">++</operator></expr>;</expr_stmt>

                            <for pos:start="69:29" pos:end="71:83">for <control pos:start="69:33" pos:end="69:52">(<init pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:38"><name pos:start="69:34" pos:end="69:34">j</name> <operator pos:start="69:36" pos:end="69:36">=</operator> <literal type="number" pos:start="69:38" pos:end="69:38">0</literal></expr>;</init> <condition pos:start="69:41" pos:end="69:47"><expr pos:start="69:41" pos:end="69:46"><name pos:start="69:41" pos:end="69:41">j</name> <operator pos:start="69:43" pos:end="69:43">&lt;</operator> <literal type="number" pos:start="69:45" pos:end="69:46">16</literal></expr>;</condition> <incr pos:start="69:49" pos:end="69:51"><expr pos:start="69:49" pos:end="69:51"><name pos:start="69:49" pos:end="69:49">j</name><operator pos:start="69:50" pos:end="69:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:33" pos:end="71:83"><block_content pos:start="71:33" pos:end="71:83">

                                <expr_stmt pos:start="71:33" pos:end="71:83"><expr pos:start="71:33" pos:end="71:82"><call pos:start="71:33" pos:end="71:76"><name pos:start="71:33" pos:end="71:35">BLK</name><argument_list pos:start="71:36" pos:end="71:76">(<argument pos:start="71:37" pos:end="71:44"><expr pos:start="71:37" pos:end="71:44"><name pos:start="71:37" pos:end="71:44"><name pos:start="71:37" pos:end="71:39">ctx</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:44">cur</name></name></expr></argument>, <argument pos:start="71:47" pos:end="71:59"><expr pos:start="71:47" pos:end="71:59"><name pos:start="71:47" pos:end="71:49">l0x</name> <operator pos:start="71:51" pos:end="71:51">+</operator> <operator pos:start="71:53" pos:end="71:53">(</operator><name pos:start="71:54" pos:end="71:54">j</name> <operator pos:start="71:56" pos:end="71:56">&amp;</operator> <literal type="number" pos:start="71:58" pos:end="71:58">3</literal><operator pos:start="71:59" pos:end="71:59">)</operator></expr></argument>, <argument pos:start="71:62" pos:end="71:75"><expr pos:start="71:62" pos:end="71:75"><name pos:start="71:62" pos:end="71:64">l0y</name> <operator pos:start="71:66" pos:end="71:66">+</operator> <operator pos:start="71:68" pos:end="71:68">(</operator><name pos:start="71:69" pos:end="71:69">j</name> <operator pos:start="71:71" pos:end="71:72">&gt;&gt;</operator> <literal type="number" pos:start="71:74" pos:end="71:74">2</literal><operator pos:start="71:75" pos:end="71:75">)</operator></expr></argument>)</argument_list></call> <operator pos:start="71:78" pos:end="71:78">=</operator> <name pos:start="71:80" pos:end="71:82">val</name></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></if> <else pos:start="73:27" pos:end="87:25">else <block pos:start="73:32" pos:end="87:25">{<block_content pos:start="75:29" pos:end="85:92">        <comment type="line" pos:start="73:41" pos:end="73:53">// copy block</comment>

                            <expr_stmt pos:start="75:29" pos:end="75:41"><expr pos:start="75:29" pos:end="75:40"><name pos:start="75:29" pos:end="75:31">val</name> <operator pos:start="75:33" pos:end="75:33">=</operator> <operator pos:start="75:35" pos:end="75:35">*</operator><name pos:start="75:36" pos:end="75:38">src</name><operator pos:start="75:39" pos:end="75:40">++</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="77:29" pos:end="77:49"><expr pos:start="77:29" pos:end="77:48"><name pos:start="77:29" pos:end="77:30">mx</name> <operator pos:start="77:32" pos:end="77:32">=</operator> <operator pos:start="77:34" pos:end="77:34">(</operator><name pos:start="77:35" pos:end="77:37">val</name> <operator pos:start="77:39" pos:end="77:39">&amp;</operator> <literal type="number" pos:start="77:41" pos:end="77:43">0xF</literal><operator pos:start="77:44" pos:end="77:44">)</operator> <operator pos:start="77:46" pos:end="77:46">-</operator> <literal type="number" pos:start="77:48" pos:end="77:48">8</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="79:29" pos:end="79:48"><expr pos:start="79:29" pos:end="79:47"><name pos:start="79:29" pos:end="79:30">my</name> <operator pos:start="79:32" pos:end="79:32">=</operator> <operator pos:start="79:34" pos:end="79:34">(</operator><name pos:start="79:35" pos:end="79:37">val</name> <operator pos:start="79:39" pos:end="79:40">&gt;&gt;</operator> <literal type="number" pos:start="79:42" pos:end="79:42">4</literal><operator pos:start="79:43" pos:end="79:43">)</operator> <operator pos:start="79:45" pos:end="79:45">-</operator> <literal type="number" pos:start="79:47" pos:end="79:47">8</literal></expr>;</expr_stmt>

                            <for pos:start="81:29" pos:end="85:92">for <control pos:start="81:33" pos:end="81:52">(<init pos:start="81:34" pos:end="81:39"><expr pos:start="81:34" pos:end="81:38"><name pos:start="81:34" pos:end="81:34">j</name> <operator pos:start="81:36" pos:end="81:36">=</operator> <literal type="number" pos:start="81:38" pos:end="81:38">0</literal></expr>;</init> <condition pos:start="81:41" pos:end="81:47"><expr pos:start="81:41" pos:end="81:46"><name pos:start="81:41" pos:end="81:41">j</name> <operator pos:start="81:43" pos:end="81:43">&lt;</operator> <literal type="number" pos:start="81:45" pos:end="81:46">16</literal></expr>;</condition> <incr pos:start="81:49" pos:end="81:51"><expr pos:start="81:49" pos:end="81:51"><name pos:start="81:49" pos:end="81:49">j</name><operator pos:start="81:50" pos:end="81:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:33" pos:end="85:92"><block_content pos:start="83:33" pos:end="85:92">

                                <expr_stmt pos:start="83:33" pos:end="85:92"><expr pos:start="83:33" pos:end="85:91"><call pos:start="83:33" pos:end="83:76"><name pos:start="83:33" pos:end="83:35">BLK</name><argument_list pos:start="83:36" pos:end="83:76">(<argument pos:start="83:37" pos:end="83:44"><expr pos:start="83:37" pos:end="83:44"><name pos:start="83:37" pos:end="83:44"><name pos:start="83:37" pos:end="83:39">ctx</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:44">cur</name></name></expr></argument>, <argument pos:start="83:47" pos:end="83:59"><expr pos:start="83:47" pos:end="83:59"><name pos:start="83:47" pos:end="83:49">l0x</name> <operator pos:start="83:51" pos:end="83:51">+</operator> <operator pos:start="83:53" pos:end="83:53">(</operator><name pos:start="83:54" pos:end="83:54">j</name> <operator pos:start="83:56" pos:end="83:56">&amp;</operator> <literal type="number" pos:start="83:58" pos:end="83:58">3</literal><operator pos:start="83:59" pos:end="83:59">)</operator></expr></argument>, <argument pos:start="83:62" pos:end="83:75"><expr pos:start="83:62" pos:end="83:75"><name pos:start="83:62" pos:end="83:64">l0y</name> <operator pos:start="83:66" pos:end="83:66">+</operator> <operator pos:start="83:68" pos:end="83:68">(</operator><name pos:start="83:69" pos:end="83:69">j</name> <operator pos:start="83:71" pos:end="83:72">&gt;&gt;</operator> <literal type="number" pos:start="83:74" pos:end="83:74">2</literal><operator pos:start="83:75" pos:end="83:75">)</operator></expr></argument>)</argument_list></call> <operator pos:start="83:78" pos:end="83:78">=</operator>

                                    <call pos:start="85:37" pos:end="85:91"><name pos:start="85:37" pos:end="85:39">BLK</name><argument_list pos:start="85:40" pos:end="85:91">(<argument pos:start="85:41" pos:end="85:49"><expr pos:start="85:41" pos:end="85:49"><name pos:start="85:41" pos:end="85:49"><name pos:start="85:41" pos:end="85:43">ctx</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:49">prev</name></name></expr></argument>, <argument pos:start="85:52" pos:end="85:69"><expr pos:start="85:52" pos:end="85:69"><name pos:start="85:52" pos:end="85:54">l0x</name> <operator pos:start="85:56" pos:end="85:56">+</operator> <operator pos:start="85:58" pos:end="85:58">(</operator><name pos:start="85:59" pos:end="85:59">j</name> <operator pos:start="85:61" pos:end="85:61">&amp;</operator> <literal type="number" pos:start="85:63" pos:end="85:63">3</literal><operator pos:start="85:64" pos:end="85:64">)</operator> <operator pos:start="85:66" pos:end="85:66">+</operator> <name pos:start="85:68" pos:end="85:69">mx</name></expr></argument>, <argument pos:start="85:72" pos:end="85:90"><expr pos:start="85:72" pos:end="85:90"><name pos:start="85:72" pos:end="85:74">l0y</name> <operator pos:start="85:76" pos:end="85:76">+</operator> <operator pos:start="85:78" pos:end="85:78">(</operator><name pos:start="85:79" pos:end="85:79">j</name> <operator pos:start="85:81" pos:end="85:82">&gt;&gt;</operator> <literal type="number" pos:start="85:84" pos:end="85:84">2</literal><operator pos:start="85:85" pos:end="85:85">)</operator> <operator pos:start="85:87" pos:end="85:87">+</operator> <name pos:start="85:89" pos:end="85:90">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="89:23" pos:end="153:21">else <block pos:start="89:28" pos:end="153:21">{<block_content pos:start="91:25" pos:end="151:25">    <comment type="line" pos:start="89:33" pos:end="89:64">// descend to 2x2 sub-sub-blocks</comment>

                        <for pos:start="91:25" pos:end="151:25">for <control pos:start="91:29" pos:end="91:47">(<init pos:start="91:30" pos:end="91:35"><expr pos:start="91:30" pos:end="91:34"><name pos:start="91:30" pos:end="91:30">j</name> <operator pos:start="91:32" pos:end="91:32">=</operator> <literal type="number" pos:start="91:34" pos:end="91:34">0</literal></expr>;</init> <condition pos:start="91:37" pos:end="91:42"><expr pos:start="91:37" pos:end="91:41"><name pos:start="91:37" pos:end="91:37">j</name> <operator pos:start="91:39" pos:end="91:39">&lt;</operator> <literal type="number" pos:start="91:41" pos:end="91:41">4</literal></expr>;</condition> <incr pos:start="91:44" pos:end="91:46"><expr pos:start="91:44" pos:end="91:46"><name pos:start="91:44" pos:end="91:44">j</name><operator pos:start="91:45" pos:end="91:46">++</operator></expr></incr>)</control> <block pos:start="91:49" pos:end="151:25">{<block_content pos:start="93:29" pos:end="149:29">

                            <expr_stmt pos:start="93:29" pos:end="93:52"><expr pos:start="93:29" pos:end="93:51"><name pos:start="93:29" pos:end="93:31">l1x</name> <operator pos:start="93:33" pos:end="93:33">=</operator> <name pos:start="93:35" pos:end="93:37">l0x</name> <operator pos:start="93:39" pos:end="93:39">+</operator> <operator pos:start="93:41" pos:end="93:41">(</operator><name pos:start="93:42" pos:end="93:42">j</name> <operator pos:start="93:44" pos:end="93:44">&amp;</operator> <literal type="number" pos:start="93:46" pos:end="93:46">1</literal><operator pos:start="93:47" pos:end="93:47">)</operator> <operator pos:start="93:49" pos:end="93:49">*</operator> <literal type="number" pos:start="93:51" pos:end="93:51">2</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="95:29" pos:end="95:48"><expr pos:start="95:29" pos:end="95:47"><name pos:start="95:29" pos:end="95:31">l1y</name> <operator pos:start="95:33" pos:end="95:33">=</operator> <name pos:start="95:35" pos:end="95:37">l0y</name> <operator pos:start="95:39" pos:end="95:39">+</operator> <operator pos:start="95:41" pos:end="95:41">(</operator><name pos:start="95:42" pos:end="95:42">j</name> <operator pos:start="95:44" pos:end="95:44">&amp;</operator> <literal type="number" pos:start="95:46" pos:end="95:46">2</literal><operator pos:start="95:47" pos:end="95:47">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="97:29" pos:end="97:54"><expr pos:start="97:29" pos:end="97:53"><call pos:start="97:29" pos:end="97:53"><name pos:start="97:29" pos:end="97:39">kmvc_getbit</name><argument_list pos:start="97:40" pos:end="97:53">(<argument pos:start="97:41" pos:end="97:42"><expr pos:start="97:41" pos:end="97:42"><name pos:start="97:41" pos:end="97:42">bb</name></expr></argument>, <argument pos:start="97:45" pos:end="97:47"><expr pos:start="97:45" pos:end="97:47"><name pos:start="97:45" pos:end="97:47">src</name></expr></argument>, <argument pos:start="97:50" pos:end="97:52"><expr pos:start="97:50" pos:end="97:52"><name pos:start="97:50" pos:end="97:52">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="99:29" pos:end="149:29"><if pos:start="99:29" pos:end="139:29">if <condition pos:start="99:32" pos:end="99:37">(<expr pos:start="99:33" pos:end="99:36"><operator pos:start="99:33" pos:end="99:33">!</operator><name pos:start="99:34" pos:end="99:36">res</name></expr>)</condition> <block pos:start="99:39" pos:end="139:29">{<block_content pos:start="101:33" pos:end="137:33">

                                <expr_stmt pos:start="101:33" pos:end="101:58"><expr pos:start="101:33" pos:end="101:57"><call pos:start="101:33" pos:end="101:57"><name pos:start="101:33" pos:end="101:43">kmvc_getbit</name><argument_list pos:start="101:44" pos:end="101:57">(<argument pos:start="101:45" pos:end="101:46"><expr pos:start="101:45" pos:end="101:46"><name pos:start="101:45" pos:end="101:46">bb</name></expr></argument>, <argument pos:start="101:49" pos:end="101:51"><expr pos:start="101:49" pos:end="101:51"><name pos:start="101:49" pos:end="101:51">src</name></expr></argument>, <argument pos:start="101:54" pos:end="101:56"><expr pos:start="101:54" pos:end="101:56"><name pos:start="101:54" pos:end="101:56">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <if_stmt pos:start="103:33" pos:end="137:33"><if pos:start="103:33" pos:end="115:33">if <condition pos:start="103:36" pos:end="103:41">(<expr pos:start="103:37" pos:end="103:40"><operator pos:start="103:37" pos:end="103:37">!</operator><name pos:start="103:38" pos:end="103:40">res</name></expr>)</condition> <block pos:start="103:43" pos:end="115:33">{<block_content pos:start="105:37" pos:end="113:74">     <comment type="line" pos:start="103:49" pos:end="103:71">// fill whole 2x2 block</comment>

                                    <expr_stmt pos:start="105:37" pos:end="105:49"><expr pos:start="105:37" pos:end="105:48"><name pos:start="105:37" pos:end="105:39">val</name> <operator pos:start="105:41" pos:end="105:41">=</operator> <operator pos:start="105:43" pos:end="105:43">*</operator><name pos:start="105:44" pos:end="105:46">src</name><operator pos:start="105:47" pos:end="105:48">++</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="107:37" pos:end="107:66"><expr pos:start="107:37" pos:end="107:65"><call pos:start="107:37" pos:end="107:59"><name pos:start="107:37" pos:end="107:39">BLK</name><argument_list pos:start="107:40" pos:end="107:59">(<argument pos:start="107:41" pos:end="107:48"><expr pos:start="107:41" pos:end="107:48"><name pos:start="107:41" pos:end="107:48"><name pos:start="107:41" pos:end="107:43">ctx</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:48">cur</name></name></expr></argument>, <argument pos:start="107:51" pos:end="107:53"><expr pos:start="107:51" pos:end="107:53"><name pos:start="107:51" pos:end="107:53">l1x</name></expr></argument>, <argument pos:start="107:56" pos:end="107:58"><expr pos:start="107:56" pos:end="107:58"><name pos:start="107:56" pos:end="107:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="107:61" pos:end="107:61">=</operator> <name pos:start="107:63" pos:end="107:65">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="109:37" pos:end="109:70"><expr pos:start="109:37" pos:end="109:69"><call pos:start="109:37" pos:end="109:63"><name pos:start="109:37" pos:end="109:39">BLK</name><argument_list pos:start="109:40" pos:end="109:63">(<argument pos:start="109:41" pos:end="109:48"><expr pos:start="109:41" pos:end="109:48"><name pos:start="109:41" pos:end="109:48"><name pos:start="109:41" pos:end="109:43">ctx</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:48">cur</name></name></expr></argument>, <argument pos:start="109:51" pos:end="109:57"><expr pos:start="109:51" pos:end="109:57"><name pos:start="109:51" pos:end="109:53">l1x</name> <operator pos:start="109:55" pos:end="109:55">+</operator> <literal type="number" pos:start="109:57" pos:end="109:57">1</literal></expr></argument>, <argument pos:start="109:60" pos:end="109:62"><expr pos:start="109:60" pos:end="109:62"><name pos:start="109:60" pos:end="109:62">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="109:65" pos:end="109:65">=</operator> <name pos:start="109:67" pos:end="109:69">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="111:37" pos:end="111:70"><expr pos:start="111:37" pos:end="111:69"><call pos:start="111:37" pos:end="111:63"><name pos:start="111:37" pos:end="111:39">BLK</name><argument_list pos:start="111:40" pos:end="111:63">(<argument pos:start="111:41" pos:end="111:48"><expr pos:start="111:41" pos:end="111:48"><name pos:start="111:41" pos:end="111:48"><name pos:start="111:41" pos:end="111:43">ctx</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:48">cur</name></name></expr></argument>, <argument pos:start="111:51" pos:end="111:53"><expr pos:start="111:51" pos:end="111:53"><name pos:start="111:51" pos:end="111:53">l1x</name></expr></argument>, <argument pos:start="111:56" pos:end="111:62"><expr pos:start="111:56" pos:end="111:62"><name pos:start="111:56" pos:end="111:58">l1y</name> <operator pos:start="111:60" pos:end="111:60">+</operator> <literal type="number" pos:start="111:62" pos:end="111:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="111:65" pos:end="111:65">=</operator> <name pos:start="111:67" pos:end="111:69">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="113:37" pos:end="113:74"><expr pos:start="113:37" pos:end="113:73"><call pos:start="113:37" pos:end="113:67"><name pos:start="113:37" pos:end="113:39">BLK</name><argument_list pos:start="113:40" pos:end="113:67">(<argument pos:start="113:41" pos:end="113:48"><expr pos:start="113:41" pos:end="113:48"><name pos:start="113:41" pos:end="113:48"><name pos:start="113:41" pos:end="113:43">ctx</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:48">cur</name></name></expr></argument>, <argument pos:start="113:51" pos:end="113:57"><expr pos:start="113:51" pos:end="113:57"><name pos:start="113:51" pos:end="113:53">l1x</name> <operator pos:start="113:55" pos:end="113:55">+</operator> <literal type="number" pos:start="113:57" pos:end="113:57">1</literal></expr></argument>, <argument pos:start="113:60" pos:end="113:66"><expr pos:start="113:60" pos:end="113:66"><name pos:start="113:60" pos:end="113:62">l1y</name> <operator pos:start="113:64" pos:end="113:64">+</operator> <literal type="number" pos:start="113:66" pos:end="113:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="113:69" pos:end="113:69">=</operator> <name pos:start="113:71" pos:end="113:73">val</name></expr>;</expr_stmt>

                                </block_content>}</block></if> <else pos:start="115:35" pos:end="137:33">else <block pos:start="115:40" pos:end="137:33">{<block_content pos:start="117:37" pos:end="135:83">        <comment type="line" pos:start="115:49" pos:end="115:61">// copy block</comment>

                                    <expr_stmt pos:start="117:37" pos:end="117:49"><expr pos:start="117:37" pos:end="117:48"><name pos:start="117:37" pos:end="117:39">val</name> <operator pos:start="117:41" pos:end="117:41">=</operator> <operator pos:start="117:43" pos:end="117:43">*</operator><name pos:start="117:44" pos:end="117:46">src</name><operator pos:start="117:47" pos:end="117:48">++</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="119:37" pos:end="119:57"><expr pos:start="119:37" pos:end="119:56"><name pos:start="119:37" pos:end="119:38">mx</name> <operator pos:start="119:40" pos:end="119:40">=</operator> <operator pos:start="119:42" pos:end="119:42">(</operator><name pos:start="119:43" pos:end="119:45">val</name> <operator pos:start="119:47" pos:end="119:47">&amp;</operator> <literal type="number" pos:start="119:49" pos:end="119:51">0xF</literal><operator pos:start="119:52" pos:end="119:52">)</operator> <operator pos:start="119:54" pos:end="119:54">-</operator> <literal type="number" pos:start="119:56" pos:end="119:56">8</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="121:37" pos:end="121:56"><expr pos:start="121:37" pos:end="121:55"><name pos:start="121:37" pos:end="121:38">my</name> <operator pos:start="121:40" pos:end="121:40">=</operator> <operator pos:start="121:42" pos:end="121:42">(</operator><name pos:start="121:43" pos:end="121:45">val</name> <operator pos:start="121:47" pos:end="121:48">&gt;&gt;</operator> <literal type="number" pos:start="121:50" pos:end="121:50">4</literal><operator pos:start="121:51" pos:end="121:51">)</operator> <operator pos:start="121:53" pos:end="121:53">-</operator> <literal type="number" pos:start="121:55" pos:end="121:55">8</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="123:37" pos:end="123:97"><expr pos:start="123:37" pos:end="123:96"><call pos:start="123:37" pos:end="123:59"><name pos:start="123:37" pos:end="123:39">BLK</name><argument_list pos:start="123:40" pos:end="123:59">(<argument pos:start="123:41" pos:end="123:48"><expr pos:start="123:41" pos:end="123:48"><name pos:start="123:41" pos:end="123:48"><name pos:start="123:41" pos:end="123:43">ctx</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:48">cur</name></name></expr></argument>, <argument pos:start="123:51" pos:end="123:53"><expr pos:start="123:51" pos:end="123:53"><name pos:start="123:51" pos:end="123:53">l1x</name></expr></argument>, <argument pos:start="123:56" pos:end="123:58"><expr pos:start="123:56" pos:end="123:58"><name pos:start="123:56" pos:end="123:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="123:61" pos:end="123:61">=</operator> <call pos:start="123:63" pos:end="123:96"><name pos:start="123:63" pos:end="123:65">BLK</name><argument_list pos:start="123:66" pos:end="123:96">(<argument pos:start="123:67" pos:end="123:75"><expr pos:start="123:67" pos:end="123:75"><name pos:start="123:67" pos:end="123:75"><name pos:start="123:67" pos:end="123:69">ctx</name><operator pos:start="123:70" pos:end="123:71">-&gt;</operator><name pos:start="123:72" pos:end="123:75">prev</name></name></expr></argument>, <argument pos:start="123:78" pos:end="123:85"><expr pos:start="123:78" pos:end="123:85"><name pos:start="123:78" pos:end="123:80">l1x</name> <operator pos:start="123:82" pos:end="123:82">+</operator> <name pos:start="123:84" pos:end="123:85">mx</name></expr></argument>, <argument pos:start="123:88" pos:end="123:95"><expr pos:start="123:88" pos:end="123:95"><name pos:start="123:88" pos:end="123:90">l1y</name> <operator pos:start="123:92" pos:end="123:92">+</operator> <name pos:start="123:94" pos:end="123:95">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="125:37" pos:end="127:79"><expr pos:start="125:37" pos:end="127:78"><call pos:start="125:37" pos:end="125:63"><name pos:start="125:37" pos:end="125:39">BLK</name><argument_list pos:start="125:40" pos:end="125:63">(<argument pos:start="125:41" pos:end="125:48"><expr pos:start="125:41" pos:end="125:48"><name pos:start="125:41" pos:end="125:48"><name pos:start="125:41" pos:end="125:43">ctx</name><operator pos:start="125:44" pos:end="125:45">-&gt;</operator><name pos:start="125:46" pos:end="125:48">cur</name></name></expr></argument>, <argument pos:start="125:51" pos:end="125:57"><expr pos:start="125:51" pos:end="125:57"><name pos:start="125:51" pos:end="125:53">l1x</name> <operator pos:start="125:55" pos:end="125:55">+</operator> <literal type="number" pos:start="125:57" pos:end="125:57">1</literal></expr></argument>, <argument pos:start="125:60" pos:end="125:62"><expr pos:start="125:60" pos:end="125:62"><name pos:start="125:60" pos:end="125:62">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="125:65" pos:end="125:65">=</operator>

                                        <call pos:start="127:41" pos:end="127:78"><name pos:start="127:41" pos:end="127:43">BLK</name><argument_list pos:start="127:44" pos:end="127:78">(<argument pos:start="127:45" pos:end="127:53"><expr pos:start="127:45" pos:end="127:53"><name pos:start="127:45" pos:end="127:53"><name pos:start="127:45" pos:end="127:47">ctx</name><operator pos:start="127:48" pos:end="127:49">-&gt;</operator><name pos:start="127:50" pos:end="127:53">prev</name></name></expr></argument>, <argument pos:start="127:56" pos:end="127:67"><expr pos:start="127:56" pos:end="127:67"><name pos:start="127:56" pos:end="127:58">l1x</name> <operator pos:start="127:60" pos:end="127:60">+</operator> <literal type="number" pos:start="127:62" pos:end="127:64">1</literal> <operator pos:start="127:64" pos:end="127:64">+</operator> <name pos:start="127:66" pos:end="127:67">mx</name></expr></argument>, <argument pos:start="127:70" pos:end="127:77"><expr pos:start="127:70" pos:end="127:77"><name pos:start="127:70" pos:end="127:72">l1y</name> <operator pos:start="127:74" pos:end="127:74">+</operator> <name pos:start="127:76" pos:end="127:77">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="129:37" pos:end="131:79"><expr pos:start="129:37" pos:end="131:78"><call pos:start="129:37" pos:end="129:63"><name pos:start="129:37" pos:end="129:39">BLK</name><argument_list pos:start="129:40" pos:end="129:63">(<argument pos:start="129:41" pos:end="129:48"><expr pos:start="129:41" pos:end="129:48"><name pos:start="129:41" pos:end="129:48"><name pos:start="129:41" pos:end="129:43">ctx</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:48">cur</name></name></expr></argument>, <argument pos:start="129:51" pos:end="129:53"><expr pos:start="129:51" pos:end="129:53"><name pos:start="129:51" pos:end="129:53">l1x</name></expr></argument>, <argument pos:start="129:56" pos:end="129:62"><expr pos:start="129:56" pos:end="129:62"><name pos:start="129:56" pos:end="129:58">l1y</name> <operator pos:start="129:60" pos:end="129:60">+</operator> <literal type="number" pos:start="129:62" pos:end="129:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="129:65" pos:end="129:65">=</operator>

                                        <call pos:start="131:41" pos:end="131:78"><name pos:start="131:41" pos:end="131:43">BLK</name><argument_list pos:start="131:44" pos:end="131:78">(<argument pos:start="131:45" pos:end="131:53"><expr pos:start="131:45" pos:end="131:53"><name pos:start="131:45" pos:end="131:53"><name pos:start="131:45" pos:end="131:47">ctx</name><operator pos:start="131:48" pos:end="131:49">-&gt;</operator><name pos:start="131:50" pos:end="131:53">prev</name></name></expr></argument>, <argument pos:start="131:56" pos:end="131:63"><expr pos:start="131:56" pos:end="131:63"><name pos:start="131:56" pos:end="131:58">l1x</name> <operator pos:start="131:60" pos:end="131:60">+</operator> <name pos:start="131:62" pos:end="131:63">mx</name></expr></argument>, <argument pos:start="131:66" pos:end="131:77"><expr pos:start="131:66" pos:end="131:77"><name pos:start="131:66" pos:end="131:68">l1y</name> <operator pos:start="131:70" pos:end="131:70">+</operator> <literal type="number" pos:start="131:72" pos:end="131:74">1</literal> <operator pos:start="131:74" pos:end="131:74">+</operator> <name pos:start="131:76" pos:end="131:77">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="133:37" pos:end="135:83"><expr pos:start="133:37" pos:end="135:82"><call pos:start="133:37" pos:end="133:67"><name pos:start="133:37" pos:end="133:39">BLK</name><argument_list pos:start="133:40" pos:end="133:67">(<argument pos:start="133:41" pos:end="133:48"><expr pos:start="133:41" pos:end="133:48"><name pos:start="133:41" pos:end="133:48"><name pos:start="133:41" pos:end="133:43">ctx</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:48">cur</name></name></expr></argument>, <argument pos:start="133:51" pos:end="133:57"><expr pos:start="133:51" pos:end="133:57"><name pos:start="133:51" pos:end="133:53">l1x</name> <operator pos:start="133:55" pos:end="133:55">+</operator> <literal type="number" pos:start="133:57" pos:end="133:57">1</literal></expr></argument>, <argument pos:start="133:60" pos:end="133:66"><expr pos:start="133:60" pos:end="133:66"><name pos:start="133:60" pos:end="133:62">l1y</name> <operator pos:start="133:64" pos:end="133:64">+</operator> <literal type="number" pos:start="133:66" pos:end="133:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="133:69" pos:end="133:69">=</operator>

                                        <call pos:start="135:41" pos:end="135:82"><name pos:start="135:41" pos:end="135:43">BLK</name><argument_list pos:start="135:44" pos:end="135:82">(<argument pos:start="135:45" pos:end="135:53"><expr pos:start="135:45" pos:end="135:53"><name pos:start="135:45" pos:end="135:53"><name pos:start="135:45" pos:end="135:47">ctx</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:53">prev</name></name></expr></argument>, <argument pos:start="135:56" pos:end="135:67"><expr pos:start="135:56" pos:end="135:67"><name pos:start="135:56" pos:end="135:58">l1x</name> <operator pos:start="135:60" pos:end="135:60">+</operator> <literal type="number" pos:start="135:62" pos:end="135:64">1</literal> <operator pos:start="135:64" pos:end="135:64">+</operator> <name pos:start="135:66" pos:end="135:67">mx</name></expr></argument>, <argument pos:start="135:70" pos:end="135:81"><expr pos:start="135:70" pos:end="135:81"><name pos:start="135:70" pos:end="135:72">l1y</name> <operator pos:start="135:74" pos:end="135:74">+</operator> <literal type="number" pos:start="135:76" pos:end="135:78">1</literal> <operator pos:start="135:78" pos:end="135:78">+</operator> <name pos:start="135:80" pos:end="135:81">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></else></if_stmt>

                            </block_content>}</block></if> <else pos:start="139:31" pos:end="149:29">else <block pos:start="139:36" pos:end="149:29">{<block_content pos:start="141:33" pos:end="147:73">    <comment type="line" pos:start="139:41" pos:end="139:64">// read values for block</comment>

                                <expr_stmt pos:start="141:33" pos:end="141:65"><expr pos:start="141:33" pos:end="141:64"><call pos:start="141:33" pos:end="141:55"><name pos:start="141:33" pos:end="141:35">BLK</name><argument_list pos:start="141:36" pos:end="141:55">(<argument pos:start="141:37" pos:end="141:44"><expr pos:start="141:37" pos:end="141:44"><name pos:start="141:37" pos:end="141:44"><name pos:start="141:37" pos:end="141:39">ctx</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:44">cur</name></name></expr></argument>, <argument pos:start="141:47" pos:end="141:49"><expr pos:start="141:47" pos:end="141:49"><name pos:start="141:47" pos:end="141:49">l1x</name></expr></argument>, <argument pos:start="141:52" pos:end="141:54"><expr pos:start="141:52" pos:end="141:54"><name pos:start="141:52" pos:end="141:54">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="141:57" pos:end="141:57">=</operator> <operator pos:start="141:59" pos:end="141:59">*</operator><name pos:start="141:60" pos:end="141:62">src</name><operator pos:start="141:63" pos:end="141:64">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="143:33" pos:end="143:69"><expr pos:start="143:33" pos:end="143:68"><call pos:start="143:33" pos:end="143:59"><name pos:start="143:33" pos:end="143:35">BLK</name><argument_list pos:start="143:36" pos:end="143:59">(<argument pos:start="143:37" pos:end="143:44"><expr pos:start="143:37" pos:end="143:44"><name pos:start="143:37" pos:end="143:44"><name pos:start="143:37" pos:end="143:39">ctx</name><operator pos:start="143:40" pos:end="143:41">-&gt;</operator><name pos:start="143:42" pos:end="143:44">cur</name></name></expr></argument>, <argument pos:start="143:47" pos:end="143:53"><expr pos:start="143:47" pos:end="143:53"><name pos:start="143:47" pos:end="143:49">l1x</name> <operator pos:start="143:51" pos:end="143:51">+</operator> <literal type="number" pos:start="143:53" pos:end="143:53">1</literal></expr></argument>, <argument pos:start="143:56" pos:end="143:58"><expr pos:start="143:56" pos:end="143:58"><name pos:start="143:56" pos:end="143:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="143:61" pos:end="143:61">=</operator> <operator pos:start="143:63" pos:end="143:63">*</operator><name pos:start="143:64" pos:end="143:66">src</name><operator pos:start="143:67" pos:end="143:68">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="145:33" pos:end="145:69"><expr pos:start="145:33" pos:end="145:68"><call pos:start="145:33" pos:end="145:59"><name pos:start="145:33" pos:end="145:35">BLK</name><argument_list pos:start="145:36" pos:end="145:59">(<argument pos:start="145:37" pos:end="145:44"><expr pos:start="145:37" pos:end="145:44"><name pos:start="145:37" pos:end="145:44"><name pos:start="145:37" pos:end="145:39">ctx</name><operator pos:start="145:40" pos:end="145:41">-&gt;</operator><name pos:start="145:42" pos:end="145:44">cur</name></name></expr></argument>, <argument pos:start="145:47" pos:end="145:49"><expr pos:start="145:47" pos:end="145:49"><name pos:start="145:47" pos:end="145:49">l1x</name></expr></argument>, <argument pos:start="145:52" pos:end="145:58"><expr pos:start="145:52" pos:end="145:58"><name pos:start="145:52" pos:end="145:54">l1y</name> <operator pos:start="145:56" pos:end="145:56">+</operator> <literal type="number" pos:start="145:58" pos:end="145:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="145:61" pos:end="145:61">=</operator> <operator pos:start="145:63" pos:end="145:63">*</operator><name pos:start="145:64" pos:end="145:66">src</name><operator pos:start="145:67" pos:end="145:68">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="147:33" pos:end="147:73"><expr pos:start="147:33" pos:end="147:72"><call pos:start="147:33" pos:end="147:63"><name pos:start="147:33" pos:end="147:35">BLK</name><argument_list pos:start="147:36" pos:end="147:63">(<argument pos:start="147:37" pos:end="147:44"><expr pos:start="147:37" pos:end="147:44"><name pos:start="147:37" pos:end="147:44"><name pos:start="147:37" pos:end="147:39">ctx</name><operator pos:start="147:40" pos:end="147:41">-&gt;</operator><name pos:start="147:42" pos:end="147:44">cur</name></name></expr></argument>, <argument pos:start="147:47" pos:end="147:53"><expr pos:start="147:47" pos:end="147:53"><name pos:start="147:47" pos:end="147:49">l1x</name> <operator pos:start="147:51" pos:end="147:51">+</operator> <literal type="number" pos:start="147:53" pos:end="147:53">1</literal></expr></argument>, <argument pos:start="147:56" pos:end="147:62"><expr pos:start="147:56" pos:end="147:62"><name pos:start="147:56" pos:end="147:58">l1y</name> <operator pos:start="147:60" pos:end="147:60">+</operator> <literal type="number" pos:start="147:62" pos:end="147:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="147:65" pos:end="147:65">=</operator> <operator pos:start="147:67" pos:end="147:67">*</operator><name pos:start="147:68" pos:end="147:70">src</name><operator pos:start="147:71" pos:end="147:72">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for></block_content></block></for>

</block_content>}</block></function>
</unit>
