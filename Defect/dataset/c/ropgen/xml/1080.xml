<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1080.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:26">bmdma_read</name><parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:79"><decl pos:start="1:67" pos:end="1:79"><type pos:start="1:67" pos:end="1:79"><name pos:start="1:67" pos:end="1:74">unsigned</name></type> <name pos:start="1:76" pos:end="1:79">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">BMDMAState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">bm</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>)</condition> <block pos:start="11:20" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:47">

        <return pos:start="13:9" pos:end="13:47">return <expr pos:start="13:16" pos:end="13:46"><operator pos:start="13:16" pos:end="13:16">(</operator><operator pos:start="13:17" pos:end="13:17">(</operator><name pos:start="13:18" pos:end="13:25">uint64_t</name><operator pos:start="13:26" pos:end="13:26">)</operator><literal type="number" pos:start="13:27" pos:end="13:27">1</literal> <operator pos:start="13:29" pos:end="13:30">&lt;&lt;</operator> <operator pos:start="13:32" pos:end="13:32">(</operator><name pos:start="13:33" pos:end="13:36">size</name> <operator pos:start="13:38" pos:end="13:38">*</operator> <literal type="number" pos:start="13:40" pos:end="13:40">8</literal><operator pos:start="13:41" pos:end="13:41">)</operator><operator pos:start="13:42" pos:end="13:42">)</operator> <operator pos:start="13:44" pos:end="13:44">-</operator> <literal type="number" pos:start="13:46" pos:end="13:46">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="19:5" pos:end="42:0">switch<condition pos:start="19:11" pos:end="19:20">(<expr pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:15">addr</name> <operator pos:start="19:17" pos:end="19:17">&amp;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">3</literal></expr>)</condition> <block pos:start="19:22" pos:end="42:0">{<block_content pos:start="21:5" pos:end="37:14">

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:22"><expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:11">val</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:21"><name pos:start="23:15" pos:end="23:16">bm</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:21">cmd</name></name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">2</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:11">val</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:24"><name pos:start="29:15" pos:end="29:16">bm</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:24">status</name></name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <default pos:start="33:5" pos:end="33:12">default:</default>

        <expr_stmt pos:start="35:9" pos:end="35:19"><expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:11">val</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <literal type="number" pos:start="35:15" pos:end="35:18">0xff</literal></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    </block_content>}</block></switch>

<cpp:ifdef pos:start="41:1" pos:end="41:16">#<cpp:directive pos:start="41:2" pos:end="41:6">ifdef</cpp:directive> <name pos:start="41:8" pos:end="41:16">DEBUG_IDE</name></cpp:ifdef>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:64"><call pos:start="43:5" pos:end="43:64"><name pos:start="43:5" pos:end="43:10">printf</name><argument_list pos:start="43:11" pos:end="43:64">(<argument pos:start="43:12" pos:end="43:43"><expr pos:start="43:12" pos:end="43:43"><literal type="string" pos:start="43:12" pos:end="43:43">"bmdma: readb 0x%02x : 0x%02x\n"</literal></expr></argument>, <argument pos:start="43:46" pos:end="43:58"><expr pos:start="43:46" pos:end="43:58"><operator pos:start="43:46" pos:end="43:46">(</operator><name pos:start="43:47" pos:end="43:53">uint8_t</name><operator pos:start="43:54" pos:end="43:54">)</operator><name pos:start="43:55" pos:end="43:58">addr</name></expr></argument>, <argument pos:start="43:61" pos:end="43:63"><expr pos:start="43:61" pos:end="43:63"><name pos:start="43:61" pos:end="43:63">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
