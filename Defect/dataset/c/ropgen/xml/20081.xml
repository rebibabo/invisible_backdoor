<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20081.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">ObjectClass</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:43">alpha_cpu_class_by_name</name><parameter_list pos:start="1:44" pos:end="1:66">(<parameter pos:start="1:45" pos:end="1:65"><decl pos:start="1:45" pos:end="1:65"><type pos:start="1:45" pos:end="1:56"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:65">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:14">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">ObjectClass</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">oc</name> <init pos:start="5:21" pos:end="5:26">= <expr pos:start="5:23" pos:end="5:26"><name pos:start="5:23" pos:end="5:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:18">typename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:17">cpu_model</name> <operator pos:start="13:19" pos:end="13:20">==</operator> <name pos:start="13:22" pos:end="13:25">NULL</name></expr>)</condition> <block pos:start="13:28" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:6">oc</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:40"><name pos:start="21:10" pos:end="21:29">object_class_by_name</name><argument_list pos:start="21:30" pos:end="21:40">(<argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><name pos:start="21:31" pos:end="21:39">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="25:38">(<expr pos:start="23:9" pos:end="25:37"><name pos:start="23:9" pos:end="23:10">oc</name> <operator pos:start="23:12" pos:end="23:13">!=</operator> <name pos:start="23:15" pos:end="23:18">NULL</name> <operator pos:start="23:20" pos:end="23:21">&amp;&amp;</operator> <call pos:start="23:23" pos:end="23:67"><name pos:start="23:23" pos:end="23:47">object_class_dynamic_cast</name><argument_list pos:start="23:48" pos:end="23:67">(<argument pos:start="23:49" pos:end="23:50"><expr pos:start="23:49" pos:end="23:50"><name pos:start="23:49" pos:end="23:50">oc</name></expr></argument>, <argument pos:start="23:53" pos:end="23:66"><expr pos:start="23:53" pos:end="23:66"><name pos:start="23:53" pos:end="23:66">TYPE_ALPHA_CPU</name></expr></argument>)</argument_list></call> <operator pos:start="23:69" pos:end="23:70">!=</operator> <name pos:start="23:72" pos:end="23:75">NULL</name> <operator pos:start="23:77" pos:end="23:78">&amp;&amp;</operator>

        <operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:37"><name pos:start="25:10" pos:end="25:33">object_class_is_abstract</name><argument_list pos:start="25:34" pos:end="25:37">(<argument pos:start="25:35" pos:end="25:36"><expr pos:start="25:35" pos:end="25:36"><name pos:start="25:35" pos:end="25:36">oc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:40" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">oc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="33:5" pos:end="45:5">for <control pos:start="33:9" pos:end="33:55">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:50"><expr pos:start="33:17" pos:end="33:49"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <call pos:start="33:21" pos:end="33:49"><name pos:start="33:21" pos:end="33:30">ARRAY_SIZE</name><argument_list pos:start="33:31" pos:end="33:49">(<argument pos:start="33:32" pos:end="33:48"><expr pos:start="33:32" pos:end="33:48"><name pos:start="33:32" pos:end="33:48">alpha_cpu_aliases</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="33:52" pos:end="33:54"><expr pos:start="33:52" pos:end="33:54"><name pos:start="33:52" pos:end="33:52">i</name><operator pos:start="33:53" pos:end="33:54">++</operator></expr></incr>)</control> <block pos:start="33:57" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:9">

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:63">(<expr pos:start="35:13" pos:end="35:62"><call pos:start="35:13" pos:end="35:57"><name pos:start="35:13" pos:end="35:18">strcmp</name><argument_list pos:start="35:19" pos:end="35:57">(<argument pos:start="35:20" pos:end="35:28"><expr pos:start="35:20" pos:end="35:28"><name pos:start="35:20" pos:end="35:28">cpu_model</name></expr></argument>, <argument pos:start="35:31" pos:end="35:56"><expr pos:start="35:31" pos:end="35:56"><name pos:start="35:31" pos:end="35:50"><name pos:start="35:31" pos:end="35:47">alpha_cpu_aliases</name><index pos:start="35:48" pos:end="35:50">[<expr pos:start="35:49" pos:end="35:49"><name pos:start="35:49" pos:end="35:49">i</name></expr>]</index></name><operator pos:start="35:51" pos:end="35:51">.</operator><name pos:start="35:52" pos:end="35:56">alias</name></expr></argument>)</argument_list></call> <operator pos:start="35:59" pos:end="35:60">==</operator> <literal type="number" pos:start="35:62" pos:end="35:62">0</literal></expr>)</condition> <block pos:start="35:65" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:22">

            <expr_stmt pos:start="37:13" pos:end="37:69"><expr pos:start="37:13" pos:end="37:68"><name pos:start="37:13" pos:end="37:14">oc</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:68"><name pos:start="37:18" pos:end="37:37">object_class_by_name</name><argument_list pos:start="37:38" pos:end="37:68">(<argument pos:start="37:39" pos:end="37:67"><expr pos:start="37:39" pos:end="37:67"><name pos:start="37:39" pos:end="37:58"><name pos:start="37:39" pos:end="37:55">alpha_cpu_aliases</name><index pos:start="37:56" pos:end="37:58">[<expr pos:start="37:57" pos:end="37:57"><name pos:start="37:57" pos:end="37:57">i</name></expr>]</index></name><operator pos:start="37:59" pos:end="37:59">.</operator><name pos:start="37:60" pos:end="37:67">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:64"><expr pos:start="39:13" pos:end="39:63"><call pos:start="39:13" pos:end="39:63"><name pos:start="39:13" pos:end="39:18">assert</name><argument_list pos:start="39:19" pos:end="39:63">(<argument pos:start="39:20" pos:end="39:62"><expr pos:start="39:20" pos:end="39:62"><name pos:start="39:20" pos:end="39:21">oc</name> <operator pos:start="39:23" pos:end="39:24">!=</operator> <name pos:start="39:26" pos:end="39:29">NULL</name> <operator pos:start="39:31" pos:end="39:32">&amp;&amp;</operator> <operator pos:start="39:34" pos:end="39:34">!</operator><call pos:start="39:35" pos:end="39:62"><name pos:start="39:35" pos:end="39:58">object_class_is_abstract</name><argument_list pos:start="39:59" pos:end="39:62">(<argument pos:start="39:60" pos:end="39:61"><expr pos:start="39:60" pos:end="39:61"><name pos:start="39:60" pos:end="39:61">oc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><name pos:start="41:20" pos:end="41:21">oc</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="49:5" pos:end="49:64"><expr pos:start="49:5" pos:end="49:63"><name pos:start="49:5" pos:end="49:12">typename</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:63"><name pos:start="49:16" pos:end="49:30">g_strdup_printf</name><argument_list pos:start="49:31" pos:end="49:63">(<argument pos:start="49:32" pos:end="49:51"><expr pos:start="49:32" pos:end="49:51"><literal type="string" pos:start="49:32" pos:end="49:36">"%s-"</literal> <name pos:start="49:38" pos:end="49:51">TYPE_ALPHA_CPU</name></expr></argument>, <argument pos:start="49:54" pos:end="49:62"><expr pos:start="49:54" pos:end="49:62"><name pos:start="49:54" pos:end="49:62">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:6">oc</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <call pos:start="51:10" pos:end="51:39"><name pos:start="51:10" pos:end="51:29">object_class_by_name</name><argument_list pos:start="51:30" pos:end="51:39">(<argument pos:start="51:31" pos:end="51:38"><expr pos:start="51:31" pos:end="51:38"><name pos:start="51:31" pos:end="51:38">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:21"><expr pos:start="53:5" pos:end="53:20"><call pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:10">g_free</name><argument_list pos:start="53:11" pos:end="53:20">(<argument pos:start="53:12" pos:end="53:19"><expr pos:start="53:12" pos:end="53:19"><name pos:start="53:12" pos:end="53:19">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:51">(<expr pos:start="55:9" pos:end="55:50"><name pos:start="55:9" pos:end="55:10">oc</name> <operator pos:start="55:12" pos:end="55:13">!=</operator> <name pos:start="55:15" pos:end="55:18">NULL</name> <operator pos:start="55:20" pos:end="55:21">&amp;&amp;</operator> <call pos:start="55:23" pos:end="55:50"><name pos:start="55:23" pos:end="55:46">object_class_is_abstract</name><argument_list pos:start="55:47" pos:end="55:50">(<argument pos:start="55:48" pos:end="55:49"><expr pos:start="55:48" pos:end="55:49"><name pos:start="55:48" pos:end="55:49">oc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:53" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:18">

        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:10">oc</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <name pos:start="57:14" pos:end="57:17">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="61:5" pos:end="61:14">return <expr pos:start="61:12" pos:end="61:13"><name pos:start="61:12" pos:end="61:13">oc</name></expr>;</return>

</block_content>}</block></function>
</unit>
