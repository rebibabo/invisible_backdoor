<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16297.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">xenstore_update_be</name><parameter_list pos:start="1:31" pos:end="3:53">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">watch</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:54"><decl pos:start="1:45" pos:end="1:54"><type pos:start="1:45" pos:end="1:54"><name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">type</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">dom</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:52"><decl pos:start="3:32" pos:end="3:52"><type pos:start="3:32" pos:end="3:52"><name pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:37">struct</name> <name pos:start="3:39" pos:end="3:47">XenDevOps</name></name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:52">ops</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:5">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">XenDevice</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:28">xendev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:26"><name pos:start="9:10" pos:end="9:13">path</name><index pos:start="9:14" pos:end="9:26">[<expr pos:start="9:15" pos:end="9:25"><name pos:start="9:15" pos:end="9:25">XEN_BUFSIZE</name></expr>]</index></name></decl>, <decl pos:start="9:29" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:8"><modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:33">dom0</name></decl>, <decl pos:start="9:36" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:8"><modifier pos:start="9:36" pos:end="9:36">*</modifier></type><name pos:start="9:37" pos:end="9:42">bepath</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:20">len</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:23" pos:end="11:25">dev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:8">dom0</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:42"><name pos:start="15:12" pos:end="15:29">xs_get_domain_path</name><argument_list pos:start="15:30" pos:end="15:42">(<argument pos:start="15:31" pos:end="15:38"><expr pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:38">xenstore</name></expr></argument>, <argument pos:start="15:41" pos:end="15:41"><expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:76"><expr pos:start="17:5" pos:end="17:75"><name pos:start="17:5" pos:end="17:7">len</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:75"><name pos:start="17:11" pos:end="17:18">snprintf</name><argument_list pos:start="17:19" pos:end="17:75">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">path</name></expr></argument>, <argument pos:start="17:26" pos:end="17:37"><expr pos:start="17:26" pos:end="17:37"><sizeof pos:start="17:26" pos:end="17:37">sizeof<argument_list pos:start="17:32" pos:end="17:37">(<argument pos:start="17:33" pos:end="17:36"><expr pos:start="17:33" pos:end="17:36"><name pos:start="17:33" pos:end="17:36">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:40" pos:end="17:57"><expr pos:start="17:40" pos:end="17:57"><literal type="string" pos:start="17:40" pos:end="17:57">"%s/backend/%s/%d"</literal></expr></argument>, <argument pos:start="17:60" pos:end="17:63"><expr pos:start="17:60" pos:end="17:63"><name pos:start="17:60" pos:end="17:63">dom0</name></expr></argument>, <argument pos:start="17:66" pos:end="17:69"><expr pos:start="17:66" pos:end="17:69"><name pos:start="17:66" pos:end="17:69">type</name></expr></argument>, <argument pos:start="17:72" pos:end="17:74"><expr pos:start="17:72" pos:end="17:74"><name pos:start="17:72" pos:end="17:74">dom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:15"><expr pos:start="19:5" pos:end="19:14"><call pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:8">free</name><argument_list pos:start="19:9" pos:end="19:14">(<argument pos:start="19:10" pos:end="19:13"><expr pos:start="19:10" pos:end="19:13"><name pos:start="19:10" pos:end="19:13">dom0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:39">(<expr pos:start="21:9" pos:end="21:38"><call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:15">strncmp</name><argument_list pos:start="21:16" pos:end="21:33">(<argument pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:20"><name pos:start="21:17" pos:end="21:20">path</name></expr></argument>, <argument pos:start="21:23" pos:end="21:27"><expr pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:27">watch</name></expr></argument>, <argument pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">len</name></expr></argument>)</argument_list></call> <operator pos:start="21:35" pos:end="21:36">!=</operator> <literal type="number" pos:start="21:38" pos:end="21:38">0</literal></expr>)</condition> <block pos:start="21:41" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:56">(<expr pos:start="27:9" pos:end="27:55"><call pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:14">sscanf</name><argument_list pos:start="27:15" pos:end="27:50">(<argument pos:start="27:16" pos:end="27:24"><expr pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:20">watch</name><operator pos:start="27:21" pos:end="27:21">+</operator><name pos:start="27:22" pos:end="27:24">len</name></expr></argument>, <argument pos:start="27:27" pos:end="27:37"><expr pos:start="27:27" pos:end="27:37"><literal type="string" pos:start="27:27" pos:end="27:37">"/%u/%255s"</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:43"><expr pos:start="27:40" pos:end="27:43"><operator pos:start="27:40" pos:end="27:40">&amp;</operator><name pos:start="27:41" pos:end="27:43">dev</name></expr></argument>, <argument pos:start="27:46" pos:end="27:49"><expr pos:start="27:46" pos:end="27:49"><name pos:start="27:46" pos:end="27:49">path</name></expr></argument>)</argument_list></call> <operator pos:start="27:52" pos:end="27:53">!=</operator> <literal type="number" pos:start="27:55" pos:end="27:55">2</literal></expr>)</condition> <block pos:start="27:58" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:9">

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><call pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:14">strcpy</name><argument_list pos:start="29:15" pos:end="29:24">(<argument pos:start="29:16" pos:end="29:19"><expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">path</name></expr></argument>, <argument pos:start="29:22" pos:end="29:23"><expr pos:start="29:22" pos:end="29:23"><literal type="string" pos:start="29:22" pos:end="29:23">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:48">(<expr pos:start="31:13" pos:end="31:47"><call pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:18">sscanf</name><argument_list pos:start="31:19" pos:end="31:42">(<argument pos:start="31:20" pos:end="31:28"><expr pos:start="31:20" pos:end="31:28"><name pos:start="31:20" pos:end="31:24">watch</name><operator pos:start="31:25" pos:end="31:25">+</operator><name pos:start="31:26" pos:end="31:28">len</name></expr></argument>, <argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><literal type="string" pos:start="31:31" pos:end="31:35">"/%u"</literal></expr></argument>, <argument pos:start="31:38" pos:end="31:41"><expr pos:start="31:38" pos:end="31:41"><operator pos:start="31:38" pos:end="31:38">&amp;</operator><name pos:start="31:39" pos:end="31:41">dev</name></expr></argument>)</argument_list></call> <operator pos:start="31:44" pos:end="31:45">!=</operator> <literal type="number" pos:start="31:47" pos:end="31:47">1</literal></expr>)</condition> <block pos:start="31:50" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <expr_stmt pos:start="33:13" pos:end="33:21"><expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:15">dev</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <operator pos:start="33:19" pos:end="33:19">-</operator><literal type="number" pos:start="33:20" pos:end="33:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:18">(<expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:11">dev</name> <operator pos:start="39:13" pos:end="39:14">==</operator> <operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>)</condition> <block pos:start="39:20" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:15">

        <return pos:start="41:9" pos:end="41:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:52"><expr pos:start="47:5" pos:end="47:51"><name pos:start="47:5" pos:end="47:10">xendev</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:51"><name pos:start="47:14" pos:end="47:30">xen_be_get_xendev</name><argument_list pos:start="47:31" pos:end="47:51">(<argument pos:start="47:32" pos:end="47:35"><expr pos:start="47:32" pos:end="47:35"><name pos:start="47:32" pos:end="47:35">type</name></expr></argument>, <argument pos:start="47:38" pos:end="47:40"><expr pos:start="47:38" pos:end="47:40"><name pos:start="47:38" pos:end="47:40">dom</name></expr></argument>, <argument pos:start="47:43" pos:end="47:45"><expr pos:start="47:43" pos:end="47:45"><name pos:start="47:43" pos:end="47:45">dev</name></expr></argument>, <argument pos:start="47:48" pos:end="47:50"><expr pos:start="47:48" pos:end="47:50"><name pos:start="47:48" pos:end="47:50">ops</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="67:5"><if pos:start="49:5" pos:end="67:5">if <condition pos:start="49:8" pos:end="49:23">(<expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:14">xendev</name> <operator pos:start="49:16" pos:end="49:17">!=</operator> <name pos:start="49:19" pos:end="49:22">NULL</name></expr>)</condition> <block pos:start="49:25" pos:end="67:5">{<block_content pos:start="51:9" pos:end="65:9">

        <expr_stmt pos:start="51:9" pos:end="51:56"><expr pos:start="51:9" pos:end="51:55"><name pos:start="51:9" pos:end="51:14">bepath</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:55"><name pos:start="51:18" pos:end="51:24">xs_read</name><argument_list pos:start="51:25" pos:end="51:55">(<argument pos:start="51:26" pos:end="51:33"><expr pos:start="51:26" pos:end="51:33"><name pos:start="51:26" pos:end="51:33">xenstore</name></expr></argument>, <argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">0</literal></expr></argument>, <argument pos:start="51:39" pos:end="51:48"><expr pos:start="51:39" pos:end="51:48"><name pos:start="51:39" pos:end="51:48"><name pos:start="51:39" pos:end="51:44">xendev</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:48">be</name></name></expr></argument>, <argument pos:start="51:51" pos:end="51:54"><expr pos:start="51:51" pos:end="51:54"><operator pos:start="51:51" pos:end="51:51">&amp;</operator><name pos:start="51:52" pos:end="51:54">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="65:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:27">(<expr pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:18">bepath</name> <operator pos:start="53:20" pos:end="53:21">==</operator> <name pos:start="53:23" pos:end="53:26">NULL</name></expr>)</condition> <block pos:start="53:29" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:40">

            <expr_stmt pos:start="55:13" pos:end="55:40"><expr pos:start="55:13" pos:end="55:39"><call pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:29">xen_be_del_xendev</name><argument_list pos:start="55:30" pos:end="55:39">(<argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:33">dom</name></expr></argument>, <argument pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><name pos:start="55:36" pos:end="55:38">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="65:9">else <block pos:start="57:16" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:39">

            <expr_stmt pos:start="59:13" pos:end="59:25"><expr pos:start="59:13" pos:end="59:24"><call pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:16">free</name><argument_list pos:start="59:17" pos:end="59:24">(<argument pos:start="59:18" pos:end="59:23"><expr pos:start="59:18" pos:end="59:23"><name pos:start="59:18" pos:end="59:23">bepath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:49"><expr pos:start="61:13" pos:end="61:48"><call pos:start="61:13" pos:end="61:48"><name pos:start="61:13" pos:end="61:34">xen_be_backend_changed</name><argument_list pos:start="61:35" pos:end="61:48">(<argument pos:start="61:36" pos:end="61:41"><expr pos:start="61:36" pos:end="61:41"><name pos:start="61:36" pos:end="61:41">xendev</name></expr></argument>, <argument pos:start="61:44" pos:end="61:47"><expr pos:start="61:44" pos:end="61:47"><name pos:start="61:44" pos:end="61:47">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:39"><expr pos:start="63:13" pos:end="63:38"><call pos:start="63:13" pos:end="63:38"><name pos:start="63:13" pos:end="63:30">xen_be_check_state</name><argument_list pos:start="63:31" pos:end="63:38">(<argument pos:start="63:32" pos:end="63:37"><expr pos:start="63:32" pos:end="63:37"><name pos:start="63:32" pos:end="63:37">xendev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
