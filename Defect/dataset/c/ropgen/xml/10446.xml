<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10446.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:35">ff_msmpeg4_encode_init</name><parameter_list pos:start="1:36" pos:end="1:54">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">MpegEncContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:24">init_done</name><init pos:start="5:25" pos:end="5:26">=<expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:26">ff_msmpeg4_common_init</name><argument_list pos:start="11:27" pos:end="11:29">(<argument pos:start="11:28" pos:end="11:28"><expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if<condition pos:start="13:7" pos:end="13:29">(<expr pos:start="13:8" pos:end="13:28"><name pos:start="13:8" pos:end="13:25"><name pos:start="13:8" pos:end="13:8">s</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:25">msmpeg4_version</name></name><operator pos:start="13:26" pos:end="13:27">&gt;=</operator><literal type="number" pos:start="13:28" pos:end="13:28">4</literal></expr>)</condition><block pos:start="13:30" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:28">

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:21">min_qcoeff</name></name><operator pos:start="15:22" pos:end="15:22">=</operator> <operator pos:start="15:24" pos:end="15:24">-</operator><literal type="number" pos:start="15:25" pos:end="15:27">255</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:21">max_qcoeff</name></name><operator pos:start="17:22" pos:end="17:22">=</operator>  <literal type="number" pos:start="17:25" pos:end="17:27">255</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="63:5"><if pos:start="23:5" pos:end="63:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:18">init_done</name></expr>)</condition> <block pos:start="23:21" pos:end="63:5">{<block_content pos:start="27:9" pos:end="61:9">

        <comment type="block" pos:start="25:9" pos:end="25:42">/* init various encoding tables */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:17">init_done</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><call pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:21">init_mv_table</name><argument_list pos:start="29:22" pos:end="29:39">(<argument pos:start="29:23" pos:end="29:38"><expr pos:start="29:23" pos:end="29:38"><operator pos:start="29:23" pos:end="29:23">&amp;</operator><name pos:start="29:24" pos:end="29:38"><name pos:start="29:24" pos:end="29:35">ff_mv_tables</name><index pos:start="29:36" pos:end="29:38">[<expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:21">init_mv_table</name><argument_list pos:start="31:22" pos:end="31:39">(<argument pos:start="31:23" pos:end="31:38"><expr pos:start="31:23" pos:end="31:38"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:35">ff_mv_tables</name><index pos:start="31:36" pos:end="31:38">[<expr pos:start="31:37" pos:end="31:37"><literal type="number" pos:start="31:37" pos:end="31:37">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="35:69">for<control pos:start="33:12" pos:end="33:35">(<init pos:start="33:13" pos:end="33:16"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:13">i</name><operator pos:start="33:14" pos:end="33:14">=</operator><literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>;</init><condition pos:start="33:17" pos:end="33:31"><expr pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:17">i</name><operator pos:start="33:18" pos:end="33:18">&lt;</operator><name pos:start="33:19" pos:end="33:30">NB_RL_TABLES</name></expr>;</condition><incr pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:32">i</name><operator pos:start="33:33" pos:end="33:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:13" pos:end="35:69"><block_content pos:start="35:13" pos:end="35:69">

            <expr_stmt pos:start="35:13" pos:end="35:69"><expr pos:start="35:13" pos:end="35:68"><call pos:start="35:13" pos:end="35:68"><name pos:start="35:13" pos:end="35:22">ff_init_rl</name><argument_list pos:start="35:23" pos:end="35:68">(<argument pos:start="35:24" pos:end="35:38"><expr pos:start="35:24" pos:end="35:38"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:38"><name pos:start="35:25" pos:end="35:35">ff_rl_table</name><index pos:start="35:36" pos:end="35:38">[<expr pos:start="35:37" pos:end="35:37"><name pos:start="35:37" pos:end="35:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:41" pos:end="35:67"><expr pos:start="35:41" pos:end="35:67"><name pos:start="35:41" pos:end="35:67"><name pos:start="35:41" pos:end="35:64">ff_static_rl_table_store</name><index pos:start="35:65" pos:end="35:67">[<expr pos:start="35:66" pos:end="35:66"><name pos:start="35:66" pos:end="35:66">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="39:9" pos:end="61:9">for<control pos:start="39:12" pos:end="39:37">(<init pos:start="39:13" pos:end="39:16"><expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:13">i</name><operator pos:start="39:14" pos:end="39:14">=</operator><literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>;</init> <condition pos:start="39:18" pos:end="39:32"><expr pos:start="39:18" pos:end="39:31"><name pos:start="39:18" pos:end="39:18">i</name><operator pos:start="39:19" pos:end="39:19">&lt;</operator><name pos:start="39:20" pos:end="39:31">NB_RL_TABLES</name></expr>;</condition> <incr pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:34">i</name><operator pos:start="39:35" pos:end="39:36">++</operator></expr></incr>)</control><block pos:start="39:38" pos:end="61:9">{<block_content pos:start="41:13" pos:end="59:13">

            <decl_stmt pos:start="41:13" pos:end="41:22"><decl pos:start="41:13" pos:end="41:21"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:21">level</name></decl>;</decl_stmt>

            <for pos:start="43:13" pos:end="59:13">for <control pos:start="43:17" pos:end="43:56">(<init pos:start="43:18" pos:end="43:27"><expr pos:start="43:18" pos:end="43:26"><name pos:start="43:18" pos:end="43:22">level</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr>;</init> <condition pos:start="43:29" pos:end="43:47"><expr pos:start="43:29" pos:end="43:46"><name pos:start="43:29" pos:end="43:33">level</name> <operator pos:start="43:35" pos:end="43:36">&lt;=</operator> <name pos:start="43:38" pos:end="43:46">MAX_LEVEL</name></expr>;</condition> <incr pos:start="43:49" pos:end="43:55"><expr pos:start="43:49" pos:end="43:55"><name pos:start="43:49" pos:end="43:53">level</name><operator pos:start="43:54" pos:end="43:55">++</operator></expr></incr>)</control> <block pos:start="43:58" pos:end="59:13">{<block_content pos:start="45:17" pos:end="57:17">

                <decl_stmt pos:start="45:17" pos:end="45:24"><decl pos:start="45:17" pos:end="45:23"><type pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:19">int</name></type> <name pos:start="45:21" pos:end="45:23">run</name></decl>;</decl_stmt>

                <for pos:start="47:17" pos:end="57:17">for<control pos:start="47:20" pos:end="47:47">(<init pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:23">run</name><operator pos:start="47:24" pos:end="47:24">=</operator><literal type="number" pos:start="47:25" pos:end="47:25">0</literal></expr>;</init> <condition pos:start="47:28" pos:end="47:40"><expr pos:start="47:28" pos:end="47:39"><name pos:start="47:28" pos:end="47:30">run</name><operator pos:start="47:31" pos:end="47:32">&lt;=</operator><name pos:start="47:33" pos:end="47:39">MAX_RUN</name></expr>;</condition> <incr pos:start="47:42" pos:end="47:46"><expr pos:start="47:42" pos:end="47:46"><name pos:start="47:42" pos:end="47:44">run</name><operator pos:start="47:45" pos:end="47:46">++</operator></expr></incr>)</control><block pos:start="47:48" pos:end="57:17">{<block_content pos:start="49:21" pos:end="55:21">

                    <decl_stmt pos:start="49:21" pos:end="49:29"><decl pos:start="49:21" pos:end="49:28"><type pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">int</name></type> <name pos:start="49:25" pos:end="49:28">last</name></decl>;</decl_stmt>

                    <for pos:start="51:21" pos:end="55:21">for<control pos:start="51:24" pos:end="51:47">(<init pos:start="51:25" pos:end="51:31"><expr pos:start="51:25" pos:end="51:30"><name pos:start="51:25" pos:end="51:28">last</name><operator pos:start="51:29" pos:end="51:29">=</operator><literal type="number" pos:start="51:30" pos:end="51:30">0</literal></expr>;</init> <condition pos:start="51:33" pos:end="51:39"><expr pos:start="51:33" pos:end="51:38"><name pos:start="51:33" pos:end="51:36">last</name><operator pos:start="51:37" pos:end="51:37">&lt;</operator><literal type="number" pos:start="51:38" pos:end="51:38">2</literal></expr>;</condition> <incr pos:start="51:41" pos:end="51:46"><expr pos:start="51:41" pos:end="51:46"><name pos:start="51:41" pos:end="51:44">last</name><operator pos:start="51:45" pos:end="51:46">++</operator></expr></incr>)</control><block pos:start="51:48" pos:end="55:21">{<block_content pos:start="53:25" pos:end="53:116">

                        <expr_stmt pos:start="53:25" pos:end="53:116"><expr pos:start="53:25" pos:end="53:115"><name pos:start="53:25" pos:end="53:54"><name pos:start="53:25" pos:end="53:33">rl_length</name><index pos:start="53:34" pos:end="53:36">[<expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">i</name></expr>]</index><index pos:start="53:37" pos:end="53:43">[<expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">level</name></expr>]</index><index pos:start="53:44" pos:end="53:48">[<expr pos:start="53:45" pos:end="53:47"><name pos:start="53:45" pos:end="53:47">run</name></expr>]</index><index pos:start="53:49" pos:end="53:54">[<expr pos:start="53:50" pos:end="53:53"><name pos:start="53:50" pos:end="53:53">last</name></expr>]</index></name><operator pos:start="53:55" pos:end="53:55">=</operator> <call pos:start="53:57" pos:end="53:115"><name pos:start="53:57" pos:end="53:72">get_size_of_code</name><argument_list pos:start="53:73" pos:end="53:115">(<argument pos:start="53:74" pos:end="53:74"><expr pos:start="53:74" pos:end="53:74"><name pos:start="53:74" pos:end="53:74">s</name></expr></argument>, <argument pos:start="53:77" pos:end="53:93"><expr pos:start="53:77" pos:end="53:93"><operator pos:start="53:77" pos:end="53:77">&amp;</operator><name pos:start="53:78" pos:end="53:93"><name pos:start="53:78" pos:end="53:88">ff_rl_table</name><index pos:start="53:89" pos:end="53:93">[  <expr pos:start="53:92" pos:end="53:92"><name pos:start="53:92" pos:end="53:92">i</name></expr>]</index></name></expr></argument>, <argument pos:start="53:96" pos:end="53:99"><expr pos:start="53:96" pos:end="53:99"><name pos:start="53:96" pos:end="53:99">last</name></expr></argument>, <argument pos:start="53:102" pos:end="53:104"><expr pos:start="53:102" pos:end="53:104"><name pos:start="53:102" pos:end="53:104">run</name></expr></argument>, <argument pos:start="53:107" pos:end="53:111"><expr pos:start="53:107" pos:end="53:111"><name pos:start="53:107" pos:end="53:111">level</name></expr></argument>, <argument pos:start="53:114" pos:end="53:114"><expr pos:start="53:114" pos:end="53:114"><literal type="number" pos:start="53:114" pos:end="53:114">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
