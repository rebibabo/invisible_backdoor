<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2069.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">scsi_qdev_init</name><parameter_list pos:start="1:26" pos:end="1:44">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">qdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:14">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SCSIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">dev</name> <init pos:start="5:21" pos:end="5:39">= <expr pos:start="5:23" pos:end="5:39"><call pos:start="5:23" pos:end="5:39"><name pos:start="5:23" pos:end="5:33">SCSI_DEVICE</name><argument_list pos:start="5:34" pos:end="5:39">(<argument pos:start="5:35" pos:end="5:38"><expr pos:start="5:35" pos:end="5:38"><name pos:start="5:35" pos:end="5:38">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">SCSIBus</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">bus</name> <init pos:start="7:18" pos:end="7:65">= <expr pos:start="7:20" pos:end="7:65"><call pos:start="7:20" pos:end="7:65"><name pos:start="7:20" pos:end="7:28">DO_UPCAST</name><argument_list pos:start="7:29" pos:end="7:65">(<argument pos:start="7:30" pos:end="7:36"><expr pos:start="7:30" pos:end="7:36"><name pos:start="7:30" pos:end="7:36">SCSIBus</name></expr></argument>, <argument pos:start="7:39" pos:end="7:42"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">qbus</name></expr></argument>, <argument pos:start="7:45" pos:end="7:64"><expr pos:start="7:45" pos:end="7:64"><name pos:start="7:45" pos:end="7:64"><name pos:start="7:45" pos:end="7:47">dev</name><operator pos:start="7:48" pos:end="7:49">-&gt;</operator><name pos:start="7:50" pos:end="7:53">qdev</name><operator pos:start="7:54" pos:end="7:54">.</operator><name pos:start="7:55" pos:end="7:64">parent_bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">SCSIDevice</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name> <init pos:start="11:12" pos:end="11:15">= <expr pos:start="11:14" pos:end="11:15"><operator pos:start="11:14" pos:end="11:14">-</operator><literal type="number" pos:start="11:15" pos:end="11:15">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:46">(<expr pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">dev</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:20">channel</name></name> <operator pos:start="15:22" pos:end="15:22">&gt;</operator> <name pos:start="15:24" pos:end="15:45"><name pos:start="15:24" pos:end="15:26">bus</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:32">info</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:45">max_channel</name></name></expr>)</condition> <block pos:start="15:48" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:62"><expr pos:start="17:9" pos:end="17:61"><call pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="17:61">(<argument pos:start="17:22" pos:end="17:46"><expr pos:start="17:22" pos:end="17:46"><literal type="string" pos:start="17:22" pos:end="17:46">"bad scsi channel id: %d"</literal></expr></argument>, <argument pos:start="17:49" pos:end="17:60"><expr pos:start="17:49" pos:end="17:60"><name pos:start="17:49" pos:end="17:60"><name pos:start="17:49" pos:end="17:51">dev</name><operator pos:start="17:52" pos:end="17:53">-&gt;</operator><name pos:start="17:54" pos:end="17:60">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="19:9" pos:end="19:17">goto <name pos:start="19:14" pos:end="19:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:57">(<expr pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">dev</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:15">id</name></name> <operator pos:start="23:17" pos:end="23:18">!=</operator> <operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal> <operator pos:start="23:23" pos:end="23:24">&amp;&amp;</operator> <name pos:start="23:26" pos:end="23:32"><name pos:start="23:26" pos:end="23:28">dev</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:32">id</name></name> <operator pos:start="23:34" pos:end="23:34">&gt;</operator> <name pos:start="23:36" pos:end="23:56"><name pos:start="23:36" pos:end="23:38">bus</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:44">info</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:56">max_target</name></name></expr>)</condition> <block pos:start="23:59" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:17">

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="25:55">(<argument pos:start="25:22" pos:end="25:45"><expr pos:start="25:22" pos:end="25:45"><literal type="string" pos:start="25:22" pos:end="25:45">"bad scsi device id: %d"</literal></expr></argument>, <argument pos:start="25:48" pos:end="25:54"><expr pos:start="25:48" pos:end="25:54"><name pos:start="25:48" pos:end="25:54"><name pos:start="25:48" pos:end="25:50">dev</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:54">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:17">goto <name pos:start="27:14" pos:end="27:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:56">(<expr pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">dev</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:16">lun</name></name> <operator pos:start="31:18" pos:end="31:19">!=</operator> <operator pos:start="31:21" pos:end="31:21">-</operator><literal type="number" pos:start="31:22" pos:end="31:22">1</literal> <operator pos:start="31:24" pos:end="31:25">&amp;&amp;</operator> <name pos:start="31:27" pos:end="31:34"><name pos:start="31:27" pos:end="31:29">dev</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:34">lun</name></name> <operator pos:start="31:36" pos:end="31:36">&gt;</operator> <name pos:start="31:38" pos:end="31:55"><name pos:start="31:38" pos:end="31:40">bus</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:46">info</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:55">max_lun</name></name></expr>)</condition> <block pos:start="31:58" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:17">

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><call pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:20">error_report</name><argument_list pos:start="33:21" pos:end="33:57">(<argument pos:start="33:22" pos:end="33:46"><expr pos:start="33:22" pos:end="33:46"><literal type="string" pos:start="33:22" pos:end="33:46">"bad scsi device lun: %d"</literal></expr></argument>, <argument pos:start="33:49" pos:end="33:56"><expr pos:start="33:49" pos:end="33:56"><name pos:start="33:49" pos:end="33:56"><name pos:start="33:49" pos:end="33:51">dev</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:56">lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="101:5"><if pos:start="41:5" pos:end="67:5">if <condition pos:start="41:8" pos:end="41:22">(<expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">dev</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:15">id</name></name> <operator pos:start="41:17" pos:end="41:18">==</operator> <operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>)</condition> <block pos:start="41:24" pos:end="67:5">{<block_content pos:start="43:9" pos:end="65:21">

        <decl_stmt pos:start="43:9" pos:end="43:20"><decl pos:start="43:9" pos:end="43:19"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:14">id</name> <init pos:start="43:16" pos:end="43:19">= <expr pos:start="43:18" pos:end="43:19"><operator pos:start="43:18" pos:end="43:18">-</operator><literal type="number" pos:start="43:19" pos:end="43:19">1</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:27">(<expr pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:15">dev</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:20">lun</name></name> <operator pos:start="45:22" pos:end="45:23">==</operator> <operator pos:start="45:25" pos:end="45:25">-</operator><literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr>)</condition> <block pos:start="45:29" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:25">

            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:15">dev</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:20">lun</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <literal type="number" pos:start="47:24" pos:end="47:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <do pos:start="51:9" pos:end="55:72">do <block pos:start="51:12" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:68">

            <expr_stmt pos:start="53:13" pos:end="53:68"><expr pos:start="53:13" pos:end="53:67"><name pos:start="53:13" pos:end="53:13">d</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:67"><name pos:start="53:17" pos:end="53:32">scsi_device_find</name><argument_list pos:start="53:33" pos:end="53:67">(<argument pos:start="53:34" pos:end="53:36"><expr pos:start="53:34" pos:end="53:36"><name pos:start="53:34" pos:end="53:36">bus</name></expr></argument>, <argument pos:start="53:39" pos:end="53:50"><expr pos:start="53:39" pos:end="53:50"><name pos:start="53:39" pos:end="53:50"><name pos:start="53:39" pos:end="53:41">dev</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:50">channel</name></name></expr></argument>, <argument pos:start="53:53" pos:end="53:56"><expr pos:start="53:53" pos:end="53:56"><operator pos:start="53:53" pos:end="53:54">++</operator><name pos:start="53:55" pos:end="53:56">id</name></expr></argument>, <argument pos:start="53:59" pos:end="53:66"><expr pos:start="53:59" pos:end="53:66"><name pos:start="53:59" pos:end="53:66"><name pos:start="53:59" pos:end="53:61">dev</name><operator pos:start="53:62" pos:end="53:63">-&gt;</operator><name pos:start="53:64" pos:end="53:66">lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="55:17" pos:end="55:71">(<expr pos:start="55:18" pos:end="55:70"><name pos:start="55:18" pos:end="55:18">d</name> <operator pos:start="55:20" pos:end="55:21">&amp;&amp;</operator> <name pos:start="55:23" pos:end="55:28"><name pos:start="55:23" pos:end="55:23">d</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:28">lun</name></name> <operator pos:start="55:30" pos:end="55:31">==</operator> <name pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:35">dev</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:40">lun</name></name> <operator pos:start="55:42" pos:end="55:43">&amp;&amp;</operator> <name pos:start="55:45" pos:end="55:46">id</name> <operator pos:start="55:48" pos:end="55:48">&lt;</operator> <name pos:start="55:50" pos:end="55:70"><name pos:start="55:50" pos:end="55:52">bus</name><operator pos:start="55:53" pos:end="55:54">-&gt;</operator><name pos:start="55:55" pos:end="55:58">info</name><operator pos:start="55:59" pos:end="55:60">-&gt;</operator><name pos:start="55:61" pos:end="55:70">max_target</name></name></expr>)</condition>;</do>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:36">(<expr pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:13">d</name> <operator pos:start="57:15" pos:end="57:16">&amp;&amp;</operator> <name pos:start="57:18" pos:end="57:23"><name pos:start="57:18" pos:end="57:18">d</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:23">lun</name></name> <operator pos:start="57:25" pos:end="57:26">==</operator> <name pos:start="57:28" pos:end="57:35"><name pos:start="57:28" pos:end="57:30">dev</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:35">lun</name></name></expr>)</condition> <block pos:start="57:38" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:21">

            <expr_stmt pos:start="59:13" pos:end="59:43"><expr pos:start="59:13" pos:end="59:42"><call pos:start="59:13" pos:end="59:42"><name pos:start="59:13" pos:end="59:24">error_report</name><argument_list pos:start="59:25" pos:end="59:42">(<argument pos:start="59:26" pos:end="59:41"><expr pos:start="59:26" pos:end="59:41"><literal type="string" pos:start="59:26" pos:end="59:41">"no free target"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="61:13" pos:end="61:21">goto <name pos:start="61:18" pos:end="61:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:21"><expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">dev</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:15">id</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:20">id</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="87:5">else if <condition pos:start="67:15" pos:end="67:30">(<expr pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:18">dev</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:23">lun</name></name> <operator pos:start="67:25" pos:end="67:26">==</operator> <operator pos:start="67:28" pos:end="67:28">-</operator><literal type="number" pos:start="67:29" pos:end="67:29">1</literal></expr>)</condition> <block pos:start="67:32" pos:end="87:5">{<block_content pos:start="69:9" pos:end="85:23">

        <decl_stmt pos:start="69:9" pos:end="69:21"><decl pos:start="69:9" pos:end="69:20"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:15">lun</name> <init pos:start="69:17" pos:end="69:20">= <expr pos:start="69:19" pos:end="69:20"><operator pos:start="69:19" pos:end="69:19">-</operator><literal type="number" pos:start="69:20" pos:end="69:20">1</literal></expr></init></decl>;</decl_stmt>

        <do pos:start="71:9" pos:end="75:65">do <block pos:start="71:12" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:68">

            <expr_stmt pos:start="73:13" pos:end="73:68"><expr pos:start="73:13" pos:end="73:67"><name pos:start="73:13" pos:end="73:13">d</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:67"><name pos:start="73:17" pos:end="73:32">scsi_device_find</name><argument_list pos:start="73:33" pos:end="73:67">(<argument pos:start="73:34" pos:end="73:36"><expr pos:start="73:34" pos:end="73:36"><name pos:start="73:34" pos:end="73:36">bus</name></expr></argument>, <argument pos:start="73:39" pos:end="73:50"><expr pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:41">dev</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:50">channel</name></name></expr></argument>, <argument pos:start="73:53" pos:end="73:59"><expr pos:start="73:53" pos:end="73:59"><name pos:start="73:53" pos:end="73:59"><name pos:start="73:53" pos:end="73:55">dev</name><operator pos:start="73:56" pos:end="73:57">-&gt;</operator><name pos:start="73:58" pos:end="73:59">id</name></name></expr></argument>, <argument pos:start="73:62" pos:end="73:66"><expr pos:start="73:62" pos:end="73:66"><operator pos:start="73:62" pos:end="73:63">++</operator><name pos:start="73:64" pos:end="73:66">lun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="75:17" pos:end="75:64">(<expr pos:start="75:18" pos:end="75:63"><name pos:start="75:18" pos:end="75:18">d</name> <operator pos:start="75:20" pos:end="75:21">&amp;&amp;</operator> <name pos:start="75:23" pos:end="75:28"><name pos:start="75:23" pos:end="75:23">d</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:28">lun</name></name> <operator pos:start="75:30" pos:end="75:31">==</operator> <name pos:start="75:33" pos:end="75:35">lun</name> <operator pos:start="75:37" pos:end="75:38">&amp;&amp;</operator> <name pos:start="75:40" pos:end="75:42">lun</name> <operator pos:start="75:44" pos:end="75:44">&lt;</operator> <name pos:start="75:46" pos:end="75:63"><name pos:start="75:46" pos:end="75:48">bus</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:54">info</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:63">max_lun</name></name></expr>)</condition>;</do>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:31">(<expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:13">d</name> <operator pos:start="77:15" pos:end="77:16">&amp;&amp;</operator> <name pos:start="77:18" pos:end="77:23"><name pos:start="77:18" pos:end="77:18">d</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:23">lun</name></name> <operator pos:start="77:25" pos:end="77:26">==</operator> <name pos:start="77:28" pos:end="77:30">lun</name></expr>)</condition> <block pos:start="77:33" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:21">

            <expr_stmt pos:start="79:13" pos:end="79:40"><expr pos:start="79:13" pos:end="79:39"><call pos:start="79:13" pos:end="79:39"><name pos:start="79:13" pos:end="79:24">error_report</name><argument_list pos:start="79:25" pos:end="79:39">(<argument pos:start="79:26" pos:end="79:38"><expr pos:start="79:26" pos:end="79:38"><literal type="string" pos:start="79:26" pos:end="79:38">"no free lun"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="81:13" pos:end="81:21">goto <name pos:start="81:18" pos:end="81:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:23"><expr pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:11">dev</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:16">lun</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:22">lun</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="101:5">else <block pos:start="87:12" pos:end="101:5">{<block_content pos:start="89:9" pos:end="99:9">

        <expr_stmt pos:start="89:9" pos:end="89:67"><expr pos:start="89:9" pos:end="89:66"><name pos:start="89:9" pos:end="89:9">d</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <call pos:start="89:13" pos:end="89:66"><name pos:start="89:13" pos:end="89:28">scsi_device_find</name><argument_list pos:start="89:29" pos:end="89:66">(<argument pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><name pos:start="89:30" pos:end="89:32">bus</name></expr></argument>, <argument pos:start="89:35" pos:end="89:46"><expr pos:start="89:35" pos:end="89:46"><name pos:start="89:35" pos:end="89:46"><name pos:start="89:35" pos:end="89:37">dev</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:46">channel</name></name></expr></argument>, <argument pos:start="89:49" pos:end="89:55"><expr pos:start="89:49" pos:end="89:55"><name pos:start="89:49" pos:end="89:55"><name pos:start="89:49" pos:end="89:51">dev</name><operator pos:start="89:52" pos:end="89:53">-&gt;</operator><name pos:start="89:54" pos:end="89:55">id</name></name></expr></argument>, <argument pos:start="89:58" pos:end="89:65"><expr pos:start="89:58" pos:end="89:65"><name pos:start="89:58" pos:end="89:65"><name pos:start="89:58" pos:end="89:60">dev</name><operator pos:start="89:61" pos:end="89:62">-&gt;</operator><name pos:start="89:63" pos:end="89:65">lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:18"><expr pos:start="91:9" pos:end="91:17"><call pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:14">assert</name><argument_list pos:start="91:15" pos:end="91:17">(<argument pos:start="91:16" pos:end="91:16"><expr pos:start="91:16" pos:end="91:16"><name pos:start="91:16" pos:end="91:16">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:43">(<expr pos:start="93:13" pos:end="93:42"><name pos:start="93:13" pos:end="93:18"><name pos:start="93:13" pos:end="93:13">d</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:18">lun</name></name> <operator pos:start="93:20" pos:end="93:21">==</operator> <name pos:start="93:23" pos:end="93:30"><name pos:start="93:23" pos:end="93:25">dev</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:30">lun</name></name> <operator pos:start="93:32" pos:end="93:33">&amp;&amp;</operator> <name pos:start="93:35" pos:end="93:37">dev</name> <operator pos:start="93:39" pos:end="93:40">!=</operator> <name pos:start="93:42" pos:end="93:42">d</name></expr>)</condition> <block pos:start="93:45" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:21">

            <expr_stmt pos:start="95:13" pos:end="95:65"><expr pos:start="95:13" pos:end="95:64"><call pos:start="95:13" pos:end="95:64"><name pos:start="95:13" pos:end="95:24">error_report</name><argument_list pos:start="95:25" pos:end="95:64">(<argument pos:start="95:26" pos:end="95:51"><expr pos:start="95:26" pos:end="95:51"><literal type="string" pos:start="95:26" pos:end="95:51">"lun already used by '%s'"</literal></expr></argument>, <argument pos:start="95:54" pos:end="95:63"><expr pos:start="95:54" pos:end="95:63"><name pos:start="95:54" pos:end="95:63"><name pos:start="95:54" pos:end="95:54">d</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:60">qdev</name><operator pos:start="95:61" pos:end="95:61">.</operator><name pos:start="95:62" pos:end="95:63">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="97:13" pos:end="97:21">goto <name pos:start="97:18" pos:end="97:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:32"><expr pos:start="105:5" pos:end="105:31"><call pos:start="105:5" pos:end="105:31"><name pos:start="105:5" pos:end="105:15">QTAILQ_INIT</name><argument_list pos:start="105:16" pos:end="105:31">(<argument pos:start="105:17" pos:end="105:30"><expr pos:start="105:17" pos:end="105:30"><operator pos:start="105:17" pos:end="105:17">&amp;</operator><name pos:start="105:18" pos:end="105:30"><name pos:start="105:18" pos:end="105:20">dev</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:30">requests</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:31"><expr pos:start="107:5" pos:end="107:30"><name pos:start="107:5" pos:end="107:6">rc</name> <operator pos:start="107:8" pos:end="107:8">=</operator> <call pos:start="107:10" pos:end="107:30"><name pos:start="107:10" pos:end="107:25">scsi_device_init</name><argument_list pos:start="107:26" pos:end="107:30">(<argument pos:start="107:27" pos:end="107:29"><expr pos:start="107:27" pos:end="107:29"><name pos:start="107:27" pos:end="107:29">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:16">(<expr pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:10">rc</name> <operator pos:start="109:12" pos:end="109:13">==</operator> <literal type="number" pos:start="109:15" pos:end="109:15">0</literal></expr>)</condition> <block pos:start="109:18" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:62">

        <expr_stmt pos:start="111:9" pos:end="113:62"><expr pos:start="111:9" pos:end="113:61"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:11">dev</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:21">vmsentry</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <call pos:start="111:25" pos:end="113:61"><name pos:start="111:25" pos:end="111:56">qemu_add_vm_change_state_handler</name><argument_list pos:start="111:57" pos:end="113:61">(<argument pos:start="111:58" pos:end="111:76"><expr pos:start="111:58" pos:end="111:76"><name pos:start="111:58" pos:end="111:76">scsi_dma_restart_cb</name></expr></argument>,

                                                         <argument pos:start="113:58" pos:end="113:60"><expr pos:start="113:58" pos:end="113:60"><name pos:start="113:58" pos:end="113:60">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:27">(<expr pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:11">bus</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:17">info</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:26">hotplug</name></name></expr>)</condition> <block pos:start="119:29" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:37">

        <expr_stmt pos:start="121:9" pos:end="121:37"><expr pos:start="121:9" pos:end="121:36"><call pos:start="121:9" pos:end="121:36"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:11">bus</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:17">info</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:26">hotplug</name></name><argument_list pos:start="121:27" pos:end="121:36">(<argument pos:start="121:28" pos:end="121:30"><expr pos:start="121:28" pos:end="121:30"><name pos:start="121:28" pos:end="121:30">bus</name></expr></argument>, <argument pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:35">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="127:1" pos:end="127:4"><name pos:start="127:1" pos:end="127:3">err</name>:</label>

    <return pos:start="129:5" pos:end="129:14">return <expr pos:start="129:12" pos:end="129:13"><name pos:start="129:12" pos:end="129:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
