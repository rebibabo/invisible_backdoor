<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4726.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">set_encodings</name><parameter_list pos:start="1:26" pos:end="1:79">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:34">VncState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">vs</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><name pos:start="1:41" pos:end="1:47">int32_t</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:58">encodings</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:78"><decl pos:start="1:61" pos:end="1:78"><type pos:start="1:61" pos:end="1:78"><name pos:start="1:61" pos:end="1:66">size_t</name></type> <name pos:start="1:68" pos:end="1:78">n_encodings</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:56">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:20">enc</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><call pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:17">vnc_zlib_init</name><argument_list pos:start="11:18" pos:end="11:21">(<argument pos:start="11:19" pos:end="11:20"><expr pos:start="11:19" pos:end="11:20"><name pos:start="11:19" pos:end="11:20">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:6">vs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:16">features</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:6">vs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:20">vnc_encoding</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <operator pos:start="15:24" pos:end="15:24">-</operator><literal type="number" pos:start="15:25" pos:end="15:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:6">vs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:25">tight_compression</name></name> <operator pos:start="17:27" pos:end="17:27">=</operator> <literal type="number" pos:start="17:29" pos:end="17:29">9</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:6">vs</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:21">tight_quality</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <literal type="number" pos:start="19:25" pos:end="19:25">9</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:6">vs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:16">absolute</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="127:5">for <control pos:start="25:9" pos:end="25:42">(<init pos:start="25:10" pos:end="25:29"><expr pos:start="25:10" pos:end="25:28"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:24">n_encodings</name> <operator pos:start="25:26" pos:end="25:26">-</operator> <literal type="number" pos:start="25:28" pos:end="25:28">1</literal></expr>;</init> <condition pos:start="25:31" pos:end="25:37"><expr pos:start="25:31" pos:end="25:36"><name pos:start="25:31" pos:end="25:31">i</name> <operator pos:start="25:33" pos:end="25:34">&gt;=</operator> <literal type="number" pos:start="25:36" pos:end="25:36">0</literal></expr>;</condition> <incr pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:39">i</name><operator pos:start="25:40" pos:end="25:41">--</operator></expr></incr>)</control> <block pos:start="25:44" pos:end="127:5">{<block_content pos:start="27:9" pos:end="125:9">

        <expr_stmt pos:start="27:9" pos:end="27:27"><expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:11">enc</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:23">encodings</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><name pos:start="27:25" pos:end="27:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <switch pos:start="29:9" pos:end="125:9">switch <condition pos:start="29:16" pos:end="29:20">(<expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">enc</name></expr>)</condition> <block pos:start="29:22" pos:end="125:9">{<block_content pos:start="31:9" pos:end="123:18">

        <case pos:start="31:9" pos:end="31:30">case <expr pos:start="31:14" pos:end="31:29"><name pos:start="31:14" pos:end="31:29">VNC_ENCODING_RAW</name></expr>:</case>

            <if_stmt pos:start="33:13" pos:end="37:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:39">(<expr pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:18">vs</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:32">vnc_encoding</name></name> <operator pos:start="33:34" pos:end="33:35">!=</operator> <operator pos:start="33:37" pos:end="33:37">-</operator><literal type="number" pos:start="33:38" pos:end="33:38">1</literal></expr>)</condition> <block pos:start="33:41" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:39">

                <expr_stmt pos:start="35:17" pos:end="35:39"><expr pos:start="35:17" pos:end="35:38"><name pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:18">vs</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:32">vnc_encoding</name></name> <operator pos:start="35:34" pos:end="35:34">=</operator> <name pos:start="35:36" pos:end="35:38">enc</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:35">case <expr pos:start="41:14" pos:end="41:34"><name pos:start="41:14" pos:end="41:34">VNC_ENCODING_COPYRECT</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:54"><expr pos:start="43:13" pos:end="43:53"><name pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:14">vs</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:24">features</name></name> <operator pos:start="43:26" pos:end="43:27">|=</operator> <name pos:start="43:29" pos:end="43:53">VNC_FEATURE_COPYRECT_MASK</name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:34">case <expr pos:start="47:14" pos:end="47:33"><name pos:start="47:14" pos:end="47:33">VNC_ENCODING_HEXTILE</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:53"><expr pos:start="49:13" pos:end="49:52"><name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:14">vs</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:24">features</name></name> <operator pos:start="49:26" pos:end="49:27">|=</operator> <name pos:start="49:29" pos:end="49:52">VNC_FEATURE_HEXTILE_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="55:13"><if pos:start="51:13" pos:end="55:13">if <condition pos:start="51:16" pos:end="51:39">(<expr pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:32"><name pos:start="51:17" pos:end="51:18">vs</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:32">vnc_encoding</name></name> <operator pos:start="51:34" pos:end="51:35">!=</operator> <operator pos:start="51:37" pos:end="51:37">-</operator><literal type="number" pos:start="51:38" pos:end="51:38">1</literal></expr>)</condition> <block pos:start="51:41" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:39">

                <expr_stmt pos:start="53:17" pos:end="53:39"><expr pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:18">vs</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:32">vnc_encoding</name></name> <operator pos:start="53:34" pos:end="53:34">=</operator> <name pos:start="53:36" pos:end="53:38">enc</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:31">case <expr pos:start="59:14" pos:end="59:30"><name pos:start="59:14" pos:end="59:30">VNC_ENCODING_ZLIB</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:14">vs</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:24">features</name></name> <operator pos:start="61:26" pos:end="61:27">|=</operator> <name pos:start="61:29" pos:end="61:49">VNC_FEATURE_ZLIB_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="67:13"><if pos:start="63:13" pos:end="67:13">if <condition pos:start="63:16" pos:end="63:39">(<expr pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:18">vs</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:32">vnc_encoding</name></name> <operator pos:start="63:34" pos:end="63:35">!=</operator> <operator pos:start="63:37" pos:end="63:37">-</operator><literal type="number" pos:start="63:38" pos:end="63:38">1</literal></expr>)</condition> <block pos:start="63:41" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:39">

                <expr_stmt pos:start="65:17" pos:end="65:39"><expr pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:18">vs</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:32">vnc_encoding</name></name> <operator pos:start="65:34" pos:end="65:34">=</operator> <name pos:start="65:36" pos:end="65:38">enc</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:40">case <expr pos:start="71:14" pos:end="71:39"><name pos:start="71:14" pos:end="71:39">VNC_ENCODING_DESKTOPRESIZE</name></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:52"><expr pos:start="73:13" pos:end="73:51"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:14">vs</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:24">features</name></name> <operator pos:start="73:26" pos:end="73:27">|=</operator> <name pos:start="73:29" pos:end="73:51">VNC_FEATURE_RESIZE_MASK</name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:46">case <expr pos:start="77:14" pos:end="77:45"><name pos:start="77:14" pos:end="77:45">VNC_ENCODING_POINTER_TYPE_CHANGE</name></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:65"><expr pos:start="79:13" pos:end="79:64"><name pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:14">vs</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:24">features</name></name> <operator pos:start="79:26" pos:end="79:27">|=</operator> <name pos:start="79:29" pos:end="79:64">VNC_FEATURE_POINTER_TYPE_CHANGE_MASK</name></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:38">case <expr pos:start="83:14" pos:end="83:37"><name pos:start="83:14" pos:end="83:37">VNC_ENCODING_RICH_CURSOR</name></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:57"><expr pos:start="85:13" pos:end="85:56"><name pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:14">vs</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:24">features</name></name> <operator pos:start="85:26" pos:end="85:27">|=</operator> <name pos:start="85:29" pos:end="85:56">VNC_FEATURE_RICH_CURSOR_MASK</name></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:40">case <expr pos:start="89:14" pos:end="89:39"><name pos:start="89:14" pos:end="89:39">VNC_ENCODING_EXT_KEY_EVENT</name></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:39"><expr pos:start="91:13" pos:end="91:38"><call pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:34">send_ext_key_event_ack</name><argument_list pos:start="91:35" pos:end="91:38">(<argument pos:start="91:36" pos:end="91:37"><expr pos:start="91:36" pos:end="91:37"><name pos:start="91:36" pos:end="91:37">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:32">case <expr pos:start="95:14" pos:end="95:31"><name pos:start="95:14" pos:end="95:31">VNC_ENCODING_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:35"><expr pos:start="97:13" pos:end="97:34"><call pos:start="97:13" pos:end="97:34"><name pos:start="97:13" pos:end="97:30">send_ext_audio_ack</name><argument_list pos:start="97:31" pos:end="97:34">(<argument pos:start="97:32" pos:end="97:33"><expr pos:start="97:32" pos:end="97:33"><name pos:start="97:32" pos:end="97:33">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:31">case <expr pos:start="101:14" pos:end="101:30"><name pos:start="101:14" pos:end="101:30">VNC_ENCODING_WMVi</name></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:50"><expr pos:start="103:13" pos:end="103:49"><name pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:14">vs</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:24">features</name></name> <operator pos:start="103:26" pos:end="103:27">|=</operator> <name pos:start="103:29" pos:end="103:49">VNC_FEATURE_WMVI_MASK</name></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:77">case <expr pos:start="107:14" pos:end="107:76"><name pos:start="107:14" pos:end="107:40">VNC_ENCODING_COMPRESSLEVEL0</name> <operator pos:start="107:42" pos:end="107:44">...</operator> <name pos:start="107:46" pos:end="107:72">VNC_ENCODING_COMPRESSLEVEL0</name> <operator pos:start="107:74" pos:end="107:74">+</operator> <literal type="number" pos:start="107:76" pos:end="107:76">9</literal></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:49"><expr pos:start="109:13" pos:end="109:48"><name pos:start="109:13" pos:end="109:33"><name pos:start="109:13" pos:end="109:14">vs</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:33">tight_compression</name></name> <operator pos:start="109:35" pos:end="109:35">=</operator> <operator pos:start="109:37" pos:end="109:37">(</operator><name pos:start="109:38" pos:end="109:40">enc</name> <operator pos:start="109:42" pos:end="109:42">&amp;</operator> <literal type="number" pos:start="109:44" pos:end="109:47">0x0F</literal><operator pos:start="109:48" pos:end="109:48">)</operator></expr>;</expr_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        <case pos:start="113:9" pos:end="113:75">case <expr pos:start="113:14" pos:end="113:74"><name pos:start="113:14" pos:end="113:39">VNC_ENCODING_QUALITYLEVEL0</name> <operator pos:start="113:41" pos:end="113:43">...</operator> <name pos:start="113:45" pos:end="113:70">VNC_ENCODING_QUALITYLEVEL0</name> <operator pos:start="113:72" pos:end="113:72">+</operator> <literal type="number" pos:start="113:74" pos:end="113:74">9</literal></expr>:</case>

            <expr_stmt pos:start="115:13" pos:end="115:45"><expr pos:start="115:13" pos:end="115:44"><name pos:start="115:13" pos:end="115:29"><name pos:start="115:13" pos:end="115:14">vs</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:29">tight_quality</name></name> <operator pos:start="115:31" pos:end="115:31">=</operator> <operator pos:start="115:33" pos:end="115:33">(</operator><name pos:start="115:34" pos:end="115:36">enc</name> <operator pos:start="115:38" pos:end="115:38">&amp;</operator> <literal type="number" pos:start="115:40" pos:end="115:43">0x0F</literal><operator pos:start="115:44" pos:end="115:44">)</operator></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <default pos:start="119:9" pos:end="119:16">default:</default>

            <expr_stmt pos:start="121:13" pos:end="121:74"><expr pos:start="121:13" pos:end="121:73"><call pos:start="121:13" pos:end="121:73"><name pos:start="121:13" pos:end="121:21">VNC_DEBUG</name><argument_list pos:start="121:22" pos:end="121:73">(<argument pos:start="121:23" pos:end="121:59"><expr pos:start="121:23" pos:end="121:59"><literal type="string" pos:start="121:23" pos:end="121:59">"Unknown encoding: %d (0x%.8x): %d\n"</literal></expr></argument>, <argument pos:start="121:62" pos:end="121:62"><expr pos:start="121:62" pos:end="121:62"><name pos:start="121:62" pos:end="121:62">i</name></expr></argument>, <argument pos:start="121:65" pos:end="121:67"><expr pos:start="121:65" pos:end="121:67"><name pos:start="121:65" pos:end="121:67">enc</name></expr></argument>, <argument pos:start="121:70" pos:end="121:72"><expr pos:start="121:70" pos:end="121:72"><name pos:start="121:70" pos:end="121:72">enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <expr_stmt pos:start="129:5" pos:end="129:56"><expr pos:start="129:5" pos:end="129:55"><call pos:start="129:5" pos:end="129:55"><name pos:start="129:5" pos:end="129:29">check_pointer_type_change</name><argument_list pos:start="129:30" pos:end="129:55">(<argument pos:start="129:31" pos:end="129:54"><expr pos:start="129:31" pos:end="129:54"><operator pos:start="129:31" pos:end="129:31">&amp;</operator><name pos:start="129:32" pos:end="129:54"><name pos:start="129:32" pos:end="129:33">vs</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:54">mouse_mode_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
