<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/485.c" pos:tabs="8"><function pos:start="1:1" pos:end="339:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:38">ff_snow_horizontal_compose97i_mmx</name><parameter_list pos:start="1:39" pos:end="1:62">(<parameter pos:start="1:40" pos:end="1:50"><decl pos:start="1:40" pos:end="1:50"><type pos:start="1:40" pos:end="1:50"><name pos:start="1:40" pos:end="1:47">IDWTELEM</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">b</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:61">width</name></decl></parameter>)</parameter_list><block pos:start="1:63" pos:end="339:1">{<block_content pos:start="3:5" pos:end="337:5">

    <decl_stmt pos:start="3:5" pos:end="3:31"><decl pos:start="3:5" pos:end="3:30"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:16">w2</name><init pos:start="3:17" pos:end="3:30">= <expr pos:start="3:19" pos:end="3:30"><operator pos:start="3:19" pos:end="3:19">(</operator><name pos:start="3:20" pos:end="3:24">width</name><operator pos:start="3:25" pos:end="3:25">+</operator><literal type="number" pos:start="3:26" pos:end="3:26">1</literal><operator pos:start="3:27" pos:end="3:27">)</operator><operator pos:start="3:28" pos:end="3:29">&gt;&gt;</operator><literal type="number" pos:start="3:30" pos:end="3:30">1</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="5:5" pos:end="5:30"><expr pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:12">IDWTELEM</name> <name pos:start="5:14" pos:end="5:29"><name pos:start="5:14" pos:end="5:17">temp</name><index pos:start="5:18" pos:end="5:29">[<expr pos:start="5:19" pos:end="5:28"><name pos:start="5:19" pos:end="5:23">width</name> <operator pos:start="5:25" pos:end="5:26">&gt;&gt;</operator> <literal type="number" pos:start="5:28" pos:end="5:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:17">w_l</name><init pos:start="7:18" pos:end="7:29">= <expr pos:start="7:20" pos:end="7:29"><operator pos:start="7:20" pos:end="7:20">(</operator><name pos:start="7:21" pos:end="7:25">width</name><operator pos:start="7:26" pos:end="7:27">&gt;&gt;</operator><literal type="number" pos:start="7:28" pos:end="7:28">1</literal><operator pos:start="7:29" pos:end="7:29">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:17">w_r</name><init pos:start="9:18" pos:end="9:25">= <expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:21">w2</name> <operator pos:start="9:23" pos:end="9:23">-</operator> <literal type="number" pos:start="9:25" pos:end="9:25">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <block pos:start="15:5" pos:end="89:5">{<block_content pos:start="17:9" pos:end="87:93"> <comment type="line" pos:start="15:7" pos:end="15:15">// Lift 0</comment>

        <decl_stmt pos:start="17:9" pos:end="17:42"><decl pos:start="17:9" pos:end="17:41"><type pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:16">IDWTELEM</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier> <specifier pos:start="17:20" pos:end="17:24">const</specifier></type> <name pos:start="17:26" pos:end="17:28">ref</name> <init pos:start="17:30" pos:end="17:41">= <expr pos:start="17:32" pos:end="17:41"><name pos:start="17:32" pos:end="17:32">b</name> <operator pos:start="17:34" pos:end="17:34">+</operator> <name pos:start="17:36" pos:end="17:37">w2</name> <operator pos:start="17:39" pos:end="17:39">-</operator> <literal type="number" pos:start="17:41" pos:end="17:41">1</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">i</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <literal type="number" pos:start="21:13" pos:end="21:13">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:55"><expr pos:start="23:9" pos:end="23:54"><name pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:9">b</name><index pos:start="23:10" pos:end="23:12">[<expr pos:start="23:11" pos:end="23:11"><literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>]</index></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:16">b</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>]</index></name> <operator pos:start="23:21" pos:end="23:21">-</operator> <operator pos:start="23:23" pos:end="23:23">(</operator><operator pos:start="23:24" pos:end="23:24">(</operator><name pos:start="23:25" pos:end="23:28">W_DM</name> <operator pos:start="23:30" pos:end="23:30">*</operator> <literal type="number" pos:start="23:32" pos:end="23:32">2</literal> <operator pos:start="23:34" pos:end="23:34">*</operator> <name pos:start="23:36" pos:end="23:41"><name pos:start="23:36" pos:end="23:38">ref</name><index pos:start="23:39" pos:end="23:41">[<expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr>]</index></name><operator pos:start="23:42" pos:end="23:42">+</operator><name pos:start="23:43" pos:end="23:46">W_DO</name><operator pos:start="23:47" pos:end="23:47">)</operator><operator pos:start="23:48" pos:end="23:49">&gt;&gt;</operator><name pos:start="23:50" pos:end="23:53">W_DS</name><operator pos:start="23:54" pos:end="23:54">)</operator></expr>;</expr_stmt>

        <asm pos:start="25:9" pos:end="33:15">asm <specifier pos:start="25:13" pos:end="25:20">volatile</specifier>(

            "pcmpeqw    %%mm7, %%mm7         \n\t"

            "psllw        $15, %%mm7         \n\t"

            "psrlw        $14, %%mm7         \n\t"

           ::);</asm>

        <for pos:start="35:9" pos:end="85:9">for<control pos:start="35:12" pos:end="35:28">(<init pos:start="35:13" pos:end="35:13">;</init> <condition pos:start="35:15" pos:end="35:22"><expr pos:start="35:15" pos:end="35:21"><name pos:start="35:15" pos:end="35:15">i</name><operator pos:start="35:16" pos:end="35:16">&lt;</operator><name pos:start="35:17" pos:end="35:19">w_l</name><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">7</literal></expr>;</condition> <incr pos:start="35:24" pos:end="35:27"><expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">+=</operator><literal type="number" pos:start="35:27" pos:end="35:27">8</literal></expr></incr>)</control><block pos:start="35:29" pos:end="85:9">{<block_content pos:start="37:13" pos:end="83:17">

            <asm pos:start="37:13" pos:end="83:17">asm <specifier pos:start="37:17" pos:end="37:24">volatile</specifier>(

                "movq     (%1), %%mm2        \n\t"

                "movq    8(%1), %%mm6        \n\t"

                "paddw   2(%1), %%mm2        \n\t"

                "paddw  10(%1), %%mm6        \n\t"

                "movq    %%mm2, %%mm0        \n\t"

                "movq    %%mm6, %%mm4        \n\t"

                "psraw      $1, %%mm2        \n\t"

                "psraw      $1, %%mm6        \n\t"

                "paddw   %%mm0, %%mm2        \n\t"

                "paddw   %%mm4, %%mm6        \n\t"

                "paddw   %%mm7, %%mm2        \n\t"

                "paddw   %%mm7, %%mm6        \n\t"

                "psraw      $2, %%mm2        \n\t"

                "psraw      $2, %%mm6        \n\t"

                "movq     (%0), %%mm0        \n\t"

                "movq    8(%0), %%mm4        \n\t"

                "psubw   %%mm2, %%mm0        \n\t"

                "psubw   %%mm6, %%mm4        \n\t"

                "movq    %%mm0, (%0)         \n\t"

                "movq    %%mm4, 8(%0)        \n\t"

                :: "r"(&amp;b[i]), "r"(&amp;ref[i])

                 : "memory"

               );</asm>

        </block_content>}</block></for>

        <expr_stmt pos:start="87:9" pos:end="87:93"><expr pos:start="87:9" pos:end="87:92"><call pos:start="87:9" pos:end="87:92"><name pos:start="87:9" pos:end="87:45">snow_horizontal_compose_lift_lead_out</name><argument_list pos:start="87:46" pos:end="87:92">(<argument pos:start="87:47" pos:end="87:47"><expr pos:start="87:47" pos:end="87:47"><name pos:start="87:47" pos:end="87:47">i</name></expr></argument>, <argument pos:start="87:50" pos:end="87:50"><expr pos:start="87:50" pos:end="87:50"><name pos:start="87:50" pos:end="87:50">b</name></expr></argument>, <argument pos:start="87:53" pos:end="87:53"><expr pos:start="87:53" pos:end="87:53"><name pos:start="87:53" pos:end="87:53">b</name></expr></argument>, <argument pos:start="87:56" pos:end="87:58"><expr pos:start="87:56" pos:end="87:58"><name pos:start="87:56" pos:end="87:58">ref</name></expr></argument>, <argument pos:start="87:61" pos:end="87:65"><expr pos:start="87:61" pos:end="87:65"><name pos:start="87:61" pos:end="87:65">width</name></expr></argument>, <argument pos:start="87:68" pos:end="87:70"><expr pos:start="87:68" pos:end="87:70"><name pos:start="87:68" pos:end="87:70">w_l</name></expr></argument>, <argument pos:start="87:73" pos:end="87:73"><expr pos:start="87:73" pos:end="87:73"><literal type="number" pos:start="87:73" pos:end="87:73">0</literal></expr></argument>, <argument pos:start="87:76" pos:end="87:79"><expr pos:start="87:76" pos:end="87:79"><name pos:start="87:76" pos:end="87:79">W_DM</name></expr></argument>, <argument pos:start="87:82" pos:end="87:85"><expr pos:start="87:82" pos:end="87:85"><name pos:start="87:82" pos:end="87:85">W_DO</name></expr></argument>, <argument pos:start="87:88" pos:end="87:91"><expr pos:start="87:88" pos:end="87:91"><name pos:start="87:88" pos:end="87:91">W_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <block pos:start="93:5" pos:end="135:5">{<block_content pos:start="95:9" pos:end="133:95"> <comment type="line" pos:start="93:7" pos:end="93:15">// Lift 1</comment>

        <decl_stmt pos:start="95:9" pos:end="95:36"><decl pos:start="95:9" pos:end="95:35"><type pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:16">IDWTELEM</name> <modifier pos:start="95:18" pos:end="95:18">*</modifier> <specifier pos:start="95:20" pos:end="95:24">const</specifier></type> <name pos:start="95:26" pos:end="95:28">dst</name> <init pos:start="95:30" pos:end="95:35">= <expr pos:start="95:32" pos:end="95:35"><name pos:start="95:32" pos:end="95:32">b</name><operator pos:start="95:33" pos:end="95:33">+</operator><name pos:start="95:34" pos:end="95:35">w2</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:14"><expr pos:start="99:9" pos:end="99:13"><name pos:start="99:9" pos:end="99:9">i</name> <operator pos:start="99:11" pos:end="99:11">=</operator> <literal type="number" pos:start="99:13" pos:end="99:13">0</literal></expr>;</expr_stmt>

        <for pos:start="101:9" pos:end="131:9">for<control pos:start="101:12" pos:end="101:28">(<init pos:start="101:13" pos:end="101:13">;</init> <condition pos:start="101:15" pos:end="101:22"><expr pos:start="101:15" pos:end="101:21"><name pos:start="101:15" pos:end="101:15">i</name><operator pos:start="101:16" pos:end="101:16">&lt;</operator><name pos:start="101:17" pos:end="101:19">w_r</name><operator pos:start="101:20" pos:end="101:20">-</operator><literal type="number" pos:start="101:21" pos:end="101:21">7</literal></expr>;</condition> <incr pos:start="101:24" pos:end="101:27"><expr pos:start="101:24" pos:end="101:27"><name pos:start="101:24" pos:end="101:24">i</name><operator pos:start="101:25" pos:end="101:26">+=</operator><literal type="number" pos:start="101:27" pos:end="101:27">8</literal></expr></incr>)</control><block pos:start="101:29" pos:end="131:9">{<block_content pos:start="103:13" pos:end="129:17">

            <asm pos:start="103:13" pos:end="129:17">asm <specifier pos:start="103:17" pos:end="103:24">volatile</specifier>(

                "movq     (%1), %%mm2        \n\t"

                "movq    8(%1), %%mm6        \n\t"

                "paddw   2(%1), %%mm2        \n\t"

                "paddw  10(%1), %%mm6        \n\t"

                "movq     (%0), %%mm0        \n\t"

                "movq    8(%0), %%mm4        \n\t"

                "psubw   %%mm2, %%mm0        \n\t"

                "psubw   %%mm6, %%mm4        \n\t"

                "movq    %%mm0, (%0)         \n\t"

                "movq    %%mm4, 8(%0)        \n\t"

                :: "r"(&amp;dst[i]), "r"(&amp;b[i])

                 : "memory"

               );</asm>

        </block_content>}</block></for>

        <expr_stmt pos:start="133:9" pos:end="133:95"><expr pos:start="133:9" pos:end="133:94"><call pos:start="133:9" pos:end="133:94"><name pos:start="133:9" pos:end="133:45">snow_horizontal_compose_lift_lead_out</name><argument_list pos:start="133:46" pos:end="133:94">(<argument pos:start="133:47" pos:end="133:47"><expr pos:start="133:47" pos:end="133:47"><name pos:start="133:47" pos:end="133:47">i</name></expr></argument>, <argument pos:start="133:50" pos:end="133:52"><expr pos:start="133:50" pos:end="133:52"><name pos:start="133:50" pos:end="133:52">dst</name></expr></argument>, <argument pos:start="133:55" pos:end="133:57"><expr pos:start="133:55" pos:end="133:57"><name pos:start="133:55" pos:end="133:57">dst</name></expr></argument>, <argument pos:start="133:60" pos:end="133:60"><expr pos:start="133:60" pos:end="133:60"><name pos:start="133:60" pos:end="133:60">b</name></expr></argument>, <argument pos:start="133:63" pos:end="133:67"><expr pos:start="133:63" pos:end="133:67"><name pos:start="133:63" pos:end="133:67">width</name></expr></argument>, <argument pos:start="133:70" pos:end="133:72"><expr pos:start="133:70" pos:end="133:72"><name pos:start="133:70" pos:end="133:72">w_r</name></expr></argument>, <argument pos:start="133:75" pos:end="133:75"><expr pos:start="133:75" pos:end="133:75"><literal type="number" pos:start="133:75" pos:end="133:75">1</literal></expr></argument>, <argument pos:start="133:78" pos:end="133:81"><expr pos:start="133:78" pos:end="133:81"><name pos:start="133:78" pos:end="133:81">W_CM</name></expr></argument>, <argument pos:start="133:84" pos:end="133:87"><expr pos:start="133:84" pos:end="133:87"><name pos:start="133:84" pos:end="133:87">W_CO</name></expr></argument>, <argument pos:start="133:90" pos:end="133:93"><expr pos:start="133:90" pos:end="133:93"><name pos:start="133:90" pos:end="133:93">W_CS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <block pos:start="139:5" pos:end="205:5">{<block_content pos:start="141:9" pos:end="203:73"> <comment type="line" pos:start="139:7" pos:end="139:15">// Lift 2</comment>

        <decl_stmt pos:start="141:9" pos:end="141:40"><decl pos:start="141:9" pos:end="141:39"><type pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:16">IDWTELEM</name> <modifier pos:start="141:18" pos:end="141:18">*</modifier> <specifier pos:start="141:20" pos:end="141:24">const</specifier></type> <name pos:start="141:26" pos:end="141:28">ref</name> <init pos:start="141:30" pos:end="141:39">= <expr pos:start="141:32" pos:end="141:39"><name pos:start="141:32" pos:end="141:32">b</name><operator pos:start="141:33" pos:end="141:33">+</operator><name pos:start="141:34" pos:end="141:35">w2</name> <operator pos:start="141:37" pos:end="141:37">-</operator> <literal type="number" pos:start="141:39" pos:end="141:39">1</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:14"><expr pos:start="145:9" pos:end="145:13"><name pos:start="145:9" pos:end="145:9">i</name> <operator pos:start="145:11" pos:end="145:11">=</operator> <literal type="number" pos:start="145:13" pos:end="145:13">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:65"><expr pos:start="147:9" pos:end="147:64"><name pos:start="147:9" pos:end="147:12"><name pos:start="147:9" pos:end="147:9">b</name><index pos:start="147:10" pos:end="147:12">[<expr pos:start="147:11" pos:end="147:11"><literal type="number" pos:start="147:11" pos:end="147:11">0</literal></expr>]</index></name> <operator pos:start="147:14" pos:end="147:14">=</operator> <name pos:start="147:16" pos:end="147:19"><name pos:start="147:16" pos:end="147:16">b</name><index pos:start="147:17" pos:end="147:19">[<expr pos:start="147:18" pos:end="147:18"><literal type="number" pos:start="147:18" pos:end="147:18">0</literal></expr>]</index></name> <operator pos:start="147:21" pos:end="147:21">+</operator> <operator pos:start="147:23" pos:end="147:23">(</operator><operator pos:start="147:24" pos:end="147:24">(</operator><operator pos:start="147:25" pos:end="147:25">(</operator><literal type="number" pos:start="147:26" pos:end="147:26">2</literal> <operator pos:start="147:28" pos:end="147:28">*</operator> <name pos:start="147:30" pos:end="147:35"><name pos:start="147:30" pos:end="147:32">ref</name><index pos:start="147:33" pos:end="147:35">[<expr pos:start="147:34" pos:end="147:34"><literal type="number" pos:start="147:34" pos:end="147:34">1</literal></expr>]</index></name> <operator pos:start="147:37" pos:end="147:37">+</operator> <name pos:start="147:39" pos:end="147:42">W_BO</name><operator pos:start="147:43" pos:end="147:43">)</operator> <operator pos:start="147:45" pos:end="147:45">+</operator> <literal type="number" pos:start="147:47" pos:end="147:47">4</literal> <operator pos:start="147:49" pos:end="147:49">*</operator> <name pos:start="147:51" pos:end="147:54"><name pos:start="147:51" pos:end="147:51">b</name><index pos:start="147:52" pos:end="147:54">[<expr pos:start="147:53" pos:end="147:53"><literal type="number" pos:start="147:53" pos:end="147:53">0</literal></expr>]</index></name><operator pos:start="147:55" pos:end="147:55">)</operator> <operator pos:start="147:57" pos:end="147:58">&gt;&gt;</operator> <name pos:start="147:60" pos:end="147:63">W_BS</name><operator pos:start="147:64" pos:end="147:64">)</operator></expr>;</expr_stmt>

        <asm pos:start="149:9" pos:end="153:15">asm <specifier pos:start="149:13" pos:end="149:20">volatile</specifier>(

            "psllw          $2, %%mm7        \n\t"

           ::);</asm>

        <for pos:start="155:9" pos:end="201:9">for<control pos:start="155:12" pos:end="155:28">(<init pos:start="155:13" pos:end="155:13">;</init> <condition pos:start="155:15" pos:end="155:22"><expr pos:start="155:15" pos:end="155:21"><name pos:start="155:15" pos:end="155:15">i</name><operator pos:start="155:16" pos:end="155:16">&lt;</operator><name pos:start="155:17" pos:end="155:19">w_l</name><operator pos:start="155:20" pos:end="155:20">-</operator><literal type="number" pos:start="155:21" pos:end="155:21">7</literal></expr>;</condition> <incr pos:start="155:24" pos:end="155:27"><expr pos:start="155:24" pos:end="155:27"><name pos:start="155:24" pos:end="155:24">i</name><operator pos:start="155:25" pos:end="155:26">+=</operator><literal type="number" pos:start="155:27" pos:end="155:27">8</literal></expr></incr>)</control><block pos:start="155:29" pos:end="201:9">{<block_content pos:start="157:13" pos:end="199:17">

            <asm pos:start="157:13" pos:end="199:17">asm <specifier pos:start="157:17" pos:end="157:24">volatile</specifier>(

                "movq     (%1), %%mm0        \n\t"

                "movq    8(%1), %%mm4        \n\t"

                "paddw   2(%1), %%mm0        \n\t"

                "paddw  10(%1), %%mm4        \n\t"

                "paddw   %%mm7, %%mm0        \n\t"

                "paddw   %%mm7, %%mm4        \n\t"

                "psraw      $2, %%mm0        \n\t"

                "psraw      $2, %%mm4        \n\t"

                "movq     (%0), %%mm1        \n\t"

                "movq    8(%0), %%mm5        \n\t"

                "paddw   %%mm1, %%mm0        \n\t"

                "paddw   %%mm5, %%mm4        \n\t"

                "psraw      $2, %%mm0        \n\t"

                "psraw      $2, %%mm4        \n\t"

                "paddw   %%mm1, %%mm0        \n\t"

                "paddw   %%mm5, %%mm4        \n\t"

                "movq    %%mm0, (%0)         \n\t"

                "movq    %%mm4, 8(%0)        \n\t"

                :: "r"(&amp;b[i]), "r"(&amp;ref[i])

                 : "memory"

               );</asm>

        </block_content>}</block></for>

        <expr_stmt pos:start="203:9" pos:end="203:73"><expr pos:start="203:9" pos:end="203:72"><call pos:start="203:9" pos:end="203:72"><name pos:start="203:9" pos:end="203:46">snow_horizontal_compose_liftS_lead_out</name><argument_list pos:start="203:47" pos:end="203:72">(<argument pos:start="203:48" pos:end="203:48"><expr pos:start="203:48" pos:end="203:48"><name pos:start="203:48" pos:end="203:48">i</name></expr></argument>, <argument pos:start="203:51" pos:end="203:51"><expr pos:start="203:51" pos:end="203:51"><name pos:start="203:51" pos:end="203:51">b</name></expr></argument>, <argument pos:start="203:54" pos:end="203:54"><expr pos:start="203:54" pos:end="203:54"><name pos:start="203:54" pos:end="203:54">b</name></expr></argument>, <argument pos:start="203:57" pos:end="203:59"><expr pos:start="203:57" pos:end="203:59"><name pos:start="203:57" pos:end="203:59">ref</name></expr></argument>, <argument pos:start="203:62" pos:end="203:66"><expr pos:start="203:62" pos:end="203:66"><name pos:start="203:62" pos:end="203:66">width</name></expr></argument>, <argument pos:start="203:69" pos:end="203:71"><expr pos:start="203:69" pos:end="203:71"><name pos:start="203:69" pos:end="203:71">w_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <block pos:start="209:5" pos:end="259:5">{<block_content pos:start="211:9" pos:end="257:99"> <comment type="line" pos:start="209:7" pos:end="209:15">// Lift 3</comment>

        <decl_stmt pos:start="211:9" pos:end="211:36"><decl pos:start="211:9" pos:end="211:35"><type pos:start="211:9" pos:end="211:24"><name pos:start="211:9" pos:end="211:16">IDWTELEM</name> <modifier pos:start="211:18" pos:end="211:18">*</modifier> <specifier pos:start="211:20" pos:end="211:24">const</specifier></type> <name pos:start="211:26" pos:end="211:28">src</name> <init pos:start="211:30" pos:end="211:35">= <expr pos:start="211:32" pos:end="211:35"><name pos:start="211:32" pos:end="211:32">b</name><operator pos:start="211:33" pos:end="211:33">+</operator><name pos:start="211:34" pos:end="211:35">w2</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:14"><expr pos:start="213:9" pos:end="213:13"><name pos:start="213:9" pos:end="213:9">i</name> <operator pos:start="213:11" pos:end="213:11">=</operator> <literal type="number" pos:start="213:13" pos:end="213:13">0</literal></expr>;</expr_stmt>



        <for pos:start="217:9" pos:end="255:9">for<control pos:start="217:12" pos:end="217:28">(<init pos:start="217:13" pos:end="217:13">;</init> <condition pos:start="217:15" pos:end="217:22"><expr pos:start="217:15" pos:end="217:21"><name pos:start="217:15" pos:end="217:15">i</name><operator pos:start="217:16" pos:end="217:16">&lt;</operator><name pos:start="217:17" pos:end="217:19">w_r</name><operator pos:start="217:20" pos:end="217:20">-</operator><literal type="number" pos:start="217:21" pos:end="217:21">7</literal></expr>;</condition> <incr pos:start="217:24" pos:end="217:27"><expr pos:start="217:24" pos:end="217:27"><name pos:start="217:24" pos:end="217:24">i</name><operator pos:start="217:25" pos:end="217:26">+=</operator><literal type="number" pos:start="217:27" pos:end="217:27">8</literal></expr></incr>)</control><block pos:start="217:29" pos:end="255:9">{<block_content pos:start="219:13" pos:end="253:17">

            <asm pos:start="219:13" pos:end="253:17">asm <specifier pos:start="219:17" pos:end="219:24">volatile</specifier>(

                "movq    2(%1), %%mm2        \n\t"

                "movq   10(%1), %%mm6        \n\t"

                "paddw    (%1), %%mm2        \n\t"

                "paddw   8(%1), %%mm6        \n\t"

                "movq     (%0), %%mm0        \n\t"

                "movq    8(%0), %%mm4        \n\t"

                "paddw   %%mm2, %%mm0        \n\t"

                "paddw   %%mm6, %%mm4        \n\t"

                "psraw      $1, %%mm2        \n\t"

                "psraw      $1, %%mm6        \n\t"

                "paddw   %%mm0, %%mm2        \n\t"

                "paddw   %%mm4, %%mm6        \n\t"

                "movq    %%mm2, (%2)         \n\t"

                "movq    %%mm6, 8(%2)        \n\t"

                :: "r"(&amp;src[i]), "r"(&amp;b[i]), "r"(&amp;temp[i])

                 : "memory"

               );</asm>

        </block_content>}</block></for>

        <expr_stmt pos:start="257:9" pos:end="257:99"><expr pos:start="257:9" pos:end="257:98"><call pos:start="257:9" pos:end="257:98"><name pos:start="257:9" pos:end="257:45">snow_horizontal_compose_lift_lead_out</name><argument_list pos:start="257:46" pos:end="257:98">(<argument pos:start="257:47" pos:end="257:47"><expr pos:start="257:47" pos:end="257:47"><name pos:start="257:47" pos:end="257:47">i</name></expr></argument>, <argument pos:start="257:50" pos:end="257:53"><expr pos:start="257:50" pos:end="257:53"><name pos:start="257:50" pos:end="257:53">temp</name></expr></argument>, <argument pos:start="257:56" pos:end="257:58"><expr pos:start="257:56" pos:end="257:58"><name pos:start="257:56" pos:end="257:58">src</name></expr></argument>, <argument pos:start="257:61" pos:end="257:61"><expr pos:start="257:61" pos:end="257:61"><name pos:start="257:61" pos:end="257:61">b</name></expr></argument>, <argument pos:start="257:64" pos:end="257:68"><expr pos:start="257:64" pos:end="257:68"><name pos:start="257:64" pos:end="257:68">width</name></expr></argument>, <argument pos:start="257:71" pos:end="257:73"><expr pos:start="257:71" pos:end="257:73"><name pos:start="257:71" pos:end="257:73">w_r</name></expr></argument>, <argument pos:start="257:76" pos:end="257:76"><expr pos:start="257:76" pos:end="257:76"><literal type="number" pos:start="257:76" pos:end="257:76">1</literal></expr></argument>, <argument pos:start="257:79" pos:end="257:83"><expr pos:start="257:79" pos:end="257:83"><operator pos:start="257:79" pos:end="257:79">-</operator><name pos:start="257:80" pos:end="257:83">W_AM</name></expr></argument>, <argument pos:start="257:86" pos:end="257:91"><expr pos:start="257:86" pos:end="257:91"><name pos:start="257:86" pos:end="257:89">W_AO</name><operator pos:start="257:90" pos:end="257:90">+</operator><literal type="number" pos:start="257:91" pos:end="257:91">1</literal></expr></argument>, <argument pos:start="257:94" pos:end="257:97"><expr pos:start="257:94" pos:end="257:97"><name pos:start="257:94" pos:end="257:97">W_AS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <block pos:start="263:5" pos:end="337:5">{<block_content pos:start="265:9" pos:end="335:9">

        <expr_stmt pos:start="265:9" pos:end="265:56"><expr pos:start="265:9" pos:end="265:55"><call pos:start="265:9" pos:end="265:55"><name pos:start="265:9" pos:end="265:35">snow_interleave_line_header</name><argument_list pos:start="265:36" pos:end="265:55">(<argument pos:start="265:37" pos:end="265:38"><expr pos:start="265:37" pos:end="265:38"><operator pos:start="265:37" pos:end="265:37">&amp;</operator><name pos:start="265:38" pos:end="265:38">i</name></expr></argument>, <argument pos:start="265:41" pos:end="265:45"><expr pos:start="265:41" pos:end="265:45"><name pos:start="265:41" pos:end="265:45">width</name></expr></argument>, <argument pos:start="265:48" pos:end="265:48"><expr pos:start="265:48" pos:end="265:48"><name pos:start="265:48" pos:end="265:48">b</name></expr></argument>, <argument pos:start="265:51" pos:end="265:54"><expr pos:start="265:51" pos:end="265:54"><name pos:start="265:51" pos:end="265:54">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="269:9" pos:end="275:9">for <control pos:start="269:13" pos:end="269:40">(<init pos:start="269:14" pos:end="269:14">;</init> <condition pos:start="269:16" pos:end="269:34"><expr pos:start="269:16" pos:end="269:33"><operator pos:start="269:16" pos:end="269:16">(</operator><name pos:start="269:17" pos:end="269:17">i</name> <operator pos:start="269:19" pos:end="269:19">&amp;</operator> <literal type="number" pos:start="269:21" pos:end="269:24">0x1E</literal><operator pos:start="269:25" pos:end="269:25">)</operator> <operator pos:start="269:27" pos:end="269:28">!=</operator> <literal type="number" pos:start="269:30" pos:end="269:33">0x1E</literal></expr>;</condition> <incr pos:start="269:36" pos:end="269:39"><expr pos:start="269:36" pos:end="269:39"><name pos:start="269:36" pos:end="269:36">i</name><operator pos:start="269:37" pos:end="269:38">-=</operator><literal type="number" pos:start="269:39" pos:end="269:39">2</literal></expr></incr>)</control><block pos:start="269:41" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:27">

            <expr_stmt pos:start="271:13" pos:end="271:32"><expr pos:start="271:13" pos:end="271:31"><name pos:start="271:13" pos:end="271:18"><name pos:start="271:13" pos:end="271:13">b</name><index pos:start="271:14" pos:end="271:18">[<expr pos:start="271:15" pos:end="271:17"><name pos:start="271:15" pos:end="271:15">i</name><operator pos:start="271:16" pos:end="271:16">+</operator><literal type="number" pos:start="271:17" pos:end="271:17">1</literal></expr>]</index></name> <operator pos:start="271:20" pos:end="271:20">=</operator> <name pos:start="271:22" pos:end="271:31"><name pos:start="271:22" pos:end="271:25">temp</name><index pos:start="271:26" pos:end="271:31">[<expr pos:start="271:27" pos:end="271:30"><name pos:start="271:27" pos:end="271:27">i</name><operator pos:start="271:28" pos:end="271:29">&gt;&gt;</operator><literal type="number" pos:start="271:30" pos:end="271:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:27"><expr pos:start="273:13" pos:end="273:26"><name pos:start="273:13" pos:end="273:16"><name pos:start="273:13" pos:end="273:13">b</name><index pos:start="273:14" pos:end="273:16">[<expr pos:start="273:15" pos:end="273:15"><name pos:start="273:15" pos:end="273:15">i</name></expr>]</index></name> <operator pos:start="273:18" pos:end="273:18">=</operator> <name pos:start="273:20" pos:end="273:26"><name pos:start="273:20" pos:end="273:20">b</name><index pos:start="273:21" pos:end="273:26">[<expr pos:start="273:22" pos:end="273:25"><name pos:start="273:22" pos:end="273:22">i</name><operator pos:start="273:23" pos:end="273:24">&gt;&gt;</operator><literal type="number" pos:start="273:25" pos:end="273:25">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="277:9" pos:end="335:9">for <control pos:start="277:13" pos:end="277:32">(<init pos:start="277:14" pos:end="277:19"><expr pos:start="277:14" pos:end="277:18"><name pos:start="277:14" pos:end="277:14">i</name><operator pos:start="277:15" pos:end="277:16">-=</operator><literal type="number" pos:start="277:17" pos:end="277:18">30</literal></expr>;</init> <condition pos:start="277:21" pos:end="277:25"><expr pos:start="277:21" pos:end="277:24"><name pos:start="277:21" pos:end="277:21">i</name><operator pos:start="277:22" pos:end="277:23">&gt;=</operator><literal type="number" pos:start="277:24" pos:end="277:24">0</literal></expr>;</condition> <incr pos:start="277:27" pos:end="277:31"><expr pos:start="277:27" pos:end="277:31"><name pos:start="277:27" pos:end="277:27">i</name><operator pos:start="277:28" pos:end="277:29">-=</operator><literal type="number" pos:start="277:30" pos:end="277:31">32</literal></expr></incr>)</control><block pos:start="277:33" pos:end="335:9">{<block_content pos:start="279:13" pos:end="333:17">

            <asm pos:start="279:13" pos:end="333:17">asm <specifier pos:start="279:17" pos:end="279:24">volatile</specifier>(

                "movq        (%1), %%mm0       \n\t"

                "movq       8(%1), %%mm2       \n\t"

                "movq      16(%1), %%mm4       \n\t"

                "movq      24(%1), %%mm6       \n\t"

                "movq        (%1), %%mm1       \n\t"

                "movq       8(%1), %%mm3       \n\t"

                "movq      16(%1), %%mm5       \n\t"

                "movq      24(%1), %%mm7       \n\t"

                "punpcklwd   (%2), %%mm0       \n\t"

                "punpcklwd  8(%2), %%mm2       \n\t"

                "punpcklwd 16(%2), %%mm4       \n\t"

                "punpcklwd 24(%2), %%mm6       \n\t"

                "movq       %%mm0, (%0)        \n\t"

                "movq       %%mm2, 16(%0)      \n\t"

                "movq       %%mm4, 32(%0)      \n\t"

                "movq       %%mm6, 48(%0)      \n\t"

                "punpckhwd   (%2), %%mm1       \n\t"

                "punpckhwd  8(%2), %%mm3       \n\t"

                "punpckhwd 16(%2), %%mm5       \n\t"

                "punpckhwd 24(%2), %%mm7       \n\t"

                "movq       %%mm1, 8(%0)       \n\t"

                "movq       %%mm3, 24(%0)      \n\t"

                "movq       %%mm5, 40(%0)      \n\t"

                "movq       %%mm7, 56(%0)      \n\t"

                :: "r"(&amp;b[i]), "r"(&amp;b[i&gt;&gt;1]), "r"(&amp;temp[i&gt;&gt;1])

                 : "memory"

               );</asm>

        </block_content>}</block></for>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
