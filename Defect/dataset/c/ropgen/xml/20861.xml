<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20861.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">usb_net_handle_data</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">USBDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:56">USBPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:15">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">USBNetState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:40">= <expr pos:start="5:22" pos:end="5:40"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:33">USBNetState</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator> <name pos:start="5:38" pos:end="5:40">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="73:5">switch<condition pos:start="11:11" pos:end="11:18">(<expr pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:12">p</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:17">pid</name></name></expr>)</condition> <block pos:start="11:20" pos:end="73:5">{<block_content pos:start="13:5" pos:end="71:14">

    <case pos:start="13:5" pos:end="13:22">case <expr pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:21">USB_TOKEN_IN</name></expr>:</case>

        <switch pos:start="15:9" pos:end="37:9">switch <condition pos:start="15:16" pos:end="15:25">(<expr pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:17">p</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:24">devep</name></name></expr>)</condition> <block pos:start="15:27" pos:end="37:9">{<block_content pos:start="17:9" pos:end="35:22">

        <case pos:start="17:9" pos:end="17:15">case <expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">1</literal></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:48"><expr pos:start="19:13" pos:end="19:47"><name pos:start="19:13" pos:end="19:15">ret</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:47"><name pos:start="19:19" pos:end="19:41">usb_net_handle_statusin</name><argument_list pos:start="19:42" pos:end="19:47">(<argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">s</name></expr></argument>, <argument pos:start="19:46" pos:end="19:46"><expr pos:start="19:46" pos:end="19:46"><name pos:start="19:46" pos:end="19:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>



        <case pos:start="25:9" pos:end="25:15">case <expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">2</literal></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:46"><expr pos:start="27:13" pos:end="27:45"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:45"><name pos:start="27:19" pos:end="27:39">usb_net_handle_datain</name><argument_list pos:start="27:40" pos:end="27:45">(<argument pos:start="27:41" pos:end="27:41"><expr pos:start="27:41" pos:end="27:41"><name pos:start="27:41" pos:end="27:41">s</name></expr></argument>, <argument pos:start="27:44" pos:end="27:44"><expr pos:start="27:44" pos:end="27:44"><name pos:start="27:44" pos:end="27:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>



        <default pos:start="33:9" pos:end="33:16">default:</default>

            <goto pos:start="35:13" pos:end="35:22">goto <name pos:start="35:18" pos:end="35:21">fail</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="39:9" pos:end="39:14">break;</break>



    <case pos:start="43:5" pos:end="43:23">case <expr pos:start="43:10" pos:end="43:22"><name pos:start="43:10" pos:end="43:22">USB_TOKEN_OUT</name></expr>:</case>

        <switch pos:start="45:9" pos:end="59:9">switch <condition pos:start="45:16" pos:end="45:25">(<expr pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:17">p</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:24">devep</name></name></expr>)</condition> <block pos:start="45:27" pos:end="59:9">{<block_content pos:start="47:9" pos:end="57:22">

        <case pos:start="47:9" pos:end="47:15">case <expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">2</literal></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:47"><expr pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:46"><name pos:start="49:19" pos:end="49:40">usb_net_handle_dataout</name><argument_list pos:start="49:41" pos:end="49:46">(<argument pos:start="49:42" pos:end="49:42"><expr pos:start="49:42" pos:end="49:42"><name pos:start="49:42" pos:end="49:42">s</name></expr></argument>, <argument pos:start="49:45" pos:end="49:45"><expr pos:start="49:45" pos:end="49:45"><name pos:start="49:45" pos:end="49:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>



        <default pos:start="55:9" pos:end="55:16">default:</default>

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="61:9" pos:end="61:14">break;</break>



    <default pos:start="65:5" pos:end="65:12">default:</default>

    <label pos:start="67:5" pos:end="67:9"><name pos:start="67:5" pos:end="67:8">fail</name>:</label>

        <expr_stmt pos:start="69:9" pos:end="69:28"><expr pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="75:5" pos:end="81:50"><if pos:start="75:5" pos:end="81:50">if <condition pos:start="75:8" pos:end="75:29">(<expr pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:14">==</operator> <name pos:start="75:16" pos:end="75:28">USB_RET_STALL</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="81:50"><block_content pos:start="77:9" pos:end="81:50">

        <expr_stmt pos:start="77:9" pos:end="81:50"><expr pos:start="77:9" pos:end="81:49"><call pos:start="77:9" pos:end="81:49"><name pos:start="77:9" pos:end="77:15">fprintf</name><argument_list pos:start="77:16" pos:end="81:49">(<argument pos:start="77:17" pos:end="77:22"><expr pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:22">stderr</name></expr></argument>, <argument pos:start="77:25" pos:end="79:53"><expr pos:start="77:25" pos:end="79:53"><literal type="string" pos:start="77:25" pos:end="77:59">"usbnet: failed data transaction: "</literal>

                        <literal type="string" pos:start="79:25" pos:end="79:53">"pid 0x%x ep 0x%x len 0x%x\n"</literal></expr></argument>,

                        <argument pos:start="81:25" pos:end="81:30"><expr pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:25">p</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:30">pid</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:40"><expr pos:start="81:33" pos:end="81:40"><name pos:start="81:33" pos:end="81:40"><name pos:start="81:33" pos:end="81:33">p</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:40">devep</name></name></expr></argument>, <argument pos:start="81:43" pos:end="81:48"><expr pos:start="81:43" pos:end="81:48"><name pos:start="81:43" pos:end="81:48"><name pos:start="81:43" pos:end="81:43">p</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:48">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
