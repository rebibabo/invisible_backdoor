<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12480.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">create_pcie</name><parameter_list pos:start="1:24" pos:end="3:41">(<parameter pos:start="1:25" pos:end="1:48"><decl pos:start="1:25" pos:end="1:48"><type pos:start="1:25" pos:end="1:48"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:43">VirtBoardInfo</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">vbi</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">qemu_irq</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pic</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:40"><decl pos:start="3:25" pos:end="3:40"><type pos:start="3:25" pos:end="3:40"><name pos:start="3:25" pos:end="3:28">bool</name></type> <name pos:start="3:30" pos:end="3:40">use_highmem</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="193:1">{<block_content pos:start="7:5" pos:end="191:21">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">hwaddr</name></type> <name pos:start="7:12" pos:end="7:20">base_mmio</name> <init pos:start="7:22" pos:end="7:55">= <expr pos:start="7:24" pos:end="7:55"><name pos:start="7:24" pos:end="7:50"><name pos:start="7:24" pos:end="7:26">vbi</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">memmap</name><index pos:start="7:35" pos:end="7:50">[<expr pos:start="7:36" pos:end="7:49"><name pos:start="7:36" pos:end="7:49">VIRT_PCIE_MMIO</name></expr>]</index></name><operator pos:start="7:51" pos:end="7:51">.</operator><name pos:start="7:52" pos:end="7:55">base</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:20">size_mmio</name> <init pos:start="9:22" pos:end="9:55">= <expr pos:start="9:24" pos:end="9:55"><name pos:start="9:24" pos:end="9:50"><name pos:start="9:24" pos:end="9:26">vbi</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">memmap</name><index pos:start="9:35" pos:end="9:50">[<expr pos:start="9:36" pos:end="9:49"><name pos:start="9:36" pos:end="9:49">VIRT_PCIE_MMIO</name></expr>]</index></name><operator pos:start="9:51" pos:end="9:51">.</operator><name pos:start="9:52" pos:end="9:55">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:25">base_mmio_high</name> <init pos:start="11:27" pos:end="11:65">= <expr pos:start="11:29" pos:end="11:65"><name pos:start="11:29" pos:end="11:60"><name pos:start="11:29" pos:end="11:31">vbi</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:39">memmap</name><index pos:start="11:40" pos:end="11:60">[<expr pos:start="11:41" pos:end="11:59"><name pos:start="11:41" pos:end="11:59">VIRT_PCIE_MMIO_HIGH</name></expr>]</index></name><operator pos:start="11:61" pos:end="11:61">.</operator><name pos:start="11:62" pos:end="11:65">base</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:65"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">hwaddr</name></type> <name pos:start="13:12" pos:end="13:25">size_mmio_high</name> <init pos:start="13:27" pos:end="13:65">= <expr pos:start="13:29" pos:end="13:65"><name pos:start="13:29" pos:end="13:60"><name pos:start="13:29" pos:end="13:31">vbi</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:39">memmap</name><index pos:start="13:40" pos:end="13:60">[<expr pos:start="13:41" pos:end="13:59"><name pos:start="13:41" pos:end="13:59">VIRT_PCIE_MMIO_HIGH</name></expr>]</index></name><operator pos:start="13:61" pos:end="13:61">.</operator><name pos:start="13:62" pos:end="13:65">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:53"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">hwaddr</name></type> <name pos:start="15:12" pos:end="15:19">base_pio</name> <init pos:start="15:21" pos:end="15:53">= <expr pos:start="15:23" pos:end="15:53"><name pos:start="15:23" pos:end="15:48"><name pos:start="15:23" pos:end="15:25">vbi</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:33">memmap</name><index pos:start="15:34" pos:end="15:48">[<expr pos:start="15:35" pos:end="15:47"><name pos:start="15:35" pos:end="15:47">VIRT_PCIE_PIO</name></expr>]</index></name><operator pos:start="15:49" pos:end="15:49">.</operator><name pos:start="15:50" pos:end="15:53">base</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:54"><decl pos:start="17:5" pos:end="17:53"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">hwaddr</name></type> <name pos:start="17:12" pos:end="17:19">size_pio</name> <init pos:start="17:21" pos:end="17:53">= <expr pos:start="17:23" pos:end="17:53"><name pos:start="17:23" pos:end="17:48"><name pos:start="17:23" pos:end="17:25">vbi</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:33">memmap</name><index pos:start="17:34" pos:end="17:48">[<expr pos:start="17:35" pos:end="17:47"><name pos:start="17:35" pos:end="17:47">VIRT_PCIE_PIO</name></expr>]</index></name><operator pos:start="17:49" pos:end="17:49">.</operator><name pos:start="17:50" pos:end="17:53">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:56"><decl pos:start="19:5" pos:end="19:55"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">hwaddr</name></type> <name pos:start="19:12" pos:end="19:20">base_ecam</name> <init pos:start="19:22" pos:end="19:55">= <expr pos:start="19:24" pos:end="19:55"><name pos:start="19:24" pos:end="19:50"><name pos:start="19:24" pos:end="19:26">vbi</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:34">memmap</name><index pos:start="19:35" pos:end="19:50">[<expr pos:start="19:36" pos:end="19:49"><name pos:start="19:36" pos:end="19:49">VIRT_PCIE_ECAM</name></expr>]</index></name><operator pos:start="19:51" pos:end="19:51">.</operator><name pos:start="19:52" pos:end="19:55">base</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:56"><decl pos:start="21:5" pos:end="21:55"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">hwaddr</name></type> <name pos:start="21:12" pos:end="21:20">size_ecam</name> <init pos:start="21:22" pos:end="21:55">= <expr pos:start="21:24" pos:end="21:55"><name pos:start="21:24" pos:end="21:50"><name pos:start="21:24" pos:end="21:26">vbi</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:34">memmap</name><index pos:start="21:35" pos:end="21:50">[<expr pos:start="21:36" pos:end="21:49"><name pos:start="21:36" pos:end="21:49">VIRT_PCIE_ECAM</name></expr>]</index></name><operator pos:start="21:51" pos:end="21:51">.</operator><name pos:start="21:52" pos:end="21:55">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:10">hwaddr</name></type> <name pos:start="23:12" pos:end="23:15">base</name> <init pos:start="23:17" pos:end="23:27">= <expr pos:start="23:19" pos:end="23:27"><name pos:start="23:19" pos:end="23:27">base_mmio</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:56"><decl pos:start="25:5" pos:end="25:55"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:21">nr_pcie_buses</name> <init pos:start="25:23" pos:end="25:55">= <expr pos:start="25:25" pos:end="25:55"><name pos:start="25:25" pos:end="25:33">size_ecam</name> <operator pos:start="25:35" pos:end="25:35">/</operator> <name pos:start="25:37" pos:end="25:55">PCIE_MMCFG_SIZE_MIN</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:37"><decl pos:start="27:5" pos:end="27:36"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">irq</name> <init pos:start="27:13" pos:end="27:36">= <expr pos:start="27:15" pos:end="27:36"><name pos:start="27:15" pos:end="27:36"><name pos:start="27:15" pos:end="27:17">vbi</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:25">irqmap</name><index pos:start="27:26" pos:end="27:36">[<expr pos:start="27:27" pos:end="27:35"><name pos:start="27:27" pos:end="27:35">VIRT_PCIE</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:29"><decl pos:start="29:5" pos:end="29:28"><type pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:16">MemoryRegion</name> <modifier pos:start="29:18" pos:end="29:18">*</modifier></type><name pos:start="29:19" pos:end="29:28">mmio_alias</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:27"><decl pos:start="31:5" pos:end="31:26"><type pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:16">MemoryRegion</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier></type><name pos:start="31:19" pos:end="31:26">mmio_reg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:29"><decl pos:start="33:5" pos:end="33:28"><type pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:16">MemoryRegion</name> <modifier pos:start="33:18" pos:end="33:18">*</modifier></type><name pos:start="33:19" pos:end="33:28">ecam_alias</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:27"><decl pos:start="35:5" pos:end="35:26"><type pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:16">MemoryRegion</name> <modifier pos:start="35:18" pos:end="35:18">*</modifier></type><name pos:start="35:19" pos:end="35:26">ecam_reg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:21"><decl pos:start="37:5" pos:end="37:20"><type pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:15">DeviceState</name> <modifier pos:start="37:17" pos:end="37:17">*</modifier></type><name pos:start="37:18" pos:end="37:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:19"><decl pos:start="39:5" pos:end="39:18"><type pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:8">char</name> <modifier pos:start="39:10" pos:end="39:10">*</modifier></type><name pos:start="39:11" pos:end="39:18">nodename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:10"><decl pos:start="41:5" pos:end="41:9"><type pos:start="41:5" pos:end="41:7"><name pos:start="41:5" pos:end="41:7">int</name></type> <name pos:start="41:9" pos:end="41:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:7">dev</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:43"><name pos:start="45:11" pos:end="45:21">qdev_create</name><argument_list pos:start="45:22" pos:end="45:43">(<argument pos:start="45:23" pos:end="45:26"><expr pos:start="45:23" pos:end="45:26"><name pos:start="45:23" pos:end="45:26">NULL</name></expr></argument>, <argument pos:start="45:29" pos:end="45:42"><expr pos:start="45:29" pos:end="45:42"><name pos:start="45:29" pos:end="45:42">TYPE_GPEX_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><call pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:20">qdev_init_nofail</name><argument_list pos:start="47:21" pos:end="47:25">(<argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:58">/* Map only the first size_ecam bytes of ECAM space */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:14">ecam_alias</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="53:40"><name pos:start="53:18" pos:end="53:23">g_new0</name><argument_list pos:start="53:24" pos:end="53:40">(<argument pos:start="53:25" pos:end="53:36"><expr pos:start="53:25" pos:end="53:36"><name pos:start="53:25" pos:end="53:36">MemoryRegion</name></expr></argument>, <argument pos:start="53:39" pos:end="53:39"><expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:62"><expr pos:start="55:5" pos:end="55:61"><name pos:start="55:5" pos:end="55:12">ecam_reg</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="55:61"><name pos:start="55:16" pos:end="55:37">sysbus_mmio_get_region</name><argument_list pos:start="55:38" pos:end="55:61">(<argument pos:start="55:39" pos:end="55:57"><expr pos:start="55:39" pos:end="55:57"><call pos:start="55:39" pos:end="55:57"><name pos:start="55:39" pos:end="55:52">SYS_BUS_DEVICE</name><argument_list pos:start="55:53" pos:end="55:57">(<argument pos:start="55:54" pos:end="55:56"><expr pos:start="55:54" pos:end="55:56"><name pos:start="55:54" pos:end="55:56">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:60" pos:end="55:60"><expr pos:start="55:60" pos:end="55:60"><literal type="number" pos:start="55:60" pos:end="55:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:53"><expr pos:start="57:5" pos:end="59:52"><call pos:start="57:5" pos:end="59:52"><name pos:start="57:5" pos:end="57:28">memory_region_init_alias</name><argument_list pos:start="57:29" pos:end="59:52">(<argument pos:start="57:30" pos:end="57:39"><expr pos:start="57:30" pos:end="57:39"><name pos:start="57:30" pos:end="57:39">ecam_alias</name></expr></argument>, <argument pos:start="57:42" pos:end="57:52"><expr pos:start="57:42" pos:end="57:52"><call pos:start="57:42" pos:end="57:52"><name pos:start="57:42" pos:end="57:47">OBJECT</name><argument_list pos:start="57:48" pos:end="57:52">(<argument pos:start="57:49" pos:end="57:51"><expr pos:start="57:49" pos:end="57:51"><name pos:start="57:49" pos:end="57:51">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:55" pos:end="57:65"><expr pos:start="57:55" pos:end="57:65"><literal type="string" pos:start="57:55" pos:end="57:65">"pcie-ecam"</literal></expr></argument>,

                             <argument pos:start="59:30" pos:end="59:37"><expr pos:start="59:30" pos:end="59:37"><name pos:start="59:30" pos:end="59:37">ecam_reg</name></expr></argument>, <argument pos:start="59:40" pos:end="59:40"><expr pos:start="59:40" pos:end="59:40"><literal type="number" pos:start="59:40" pos:end="59:40">0</literal></expr></argument>, <argument pos:start="59:43" pos:end="59:51"><expr pos:start="59:43" pos:end="59:51"><name pos:start="59:43" pos:end="59:51">size_ecam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:76"><expr pos:start="61:5" pos:end="61:75"><call pos:start="61:5" pos:end="61:75"><name pos:start="61:5" pos:end="61:31">memory_region_add_subregion</name><argument_list pos:start="61:32" pos:end="61:75">(<argument pos:start="61:33" pos:end="61:51"><expr pos:start="61:33" pos:end="61:51"><call pos:start="61:33" pos:end="61:51"><name pos:start="61:33" pos:end="61:49">get_system_memory</name><argument_list pos:start="61:50" pos:end="61:51">()</argument_list></call></expr></argument>, <argument pos:start="61:54" pos:end="61:62"><expr pos:start="61:54" pos:end="61:62"><name pos:start="61:54" pos:end="61:62">base_ecam</name></expr></argument>, <argument pos:start="61:65" pos:end="61:74"><expr pos:start="61:65" pos:end="61:74"><name pos:start="61:65" pos:end="61:74">ecam_alias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="73:7">/* Map the MMIO window into system address space so as to expose

     * the section of PCI MMIO space which starts at the same base address

     * (ie 1:1 mapping for that part of PCI MMIO space visible through

     * the window).

     */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:41"><expr pos:start="75:5" pos:end="75:40"><name pos:start="75:5" pos:end="75:14">mmio_alias</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <call pos:start="75:18" pos:end="75:40"><name pos:start="75:18" pos:end="75:23">g_new0</name><argument_list pos:start="75:24" pos:end="75:40">(<argument pos:start="75:25" pos:end="75:36"><expr pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:36">MemoryRegion</name></expr></argument>, <argument pos:start="75:39" pos:end="75:39"><expr pos:start="75:39" pos:end="75:39"><literal type="number" pos:start="75:39" pos:end="75:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:62"><expr pos:start="77:5" pos:end="77:61"><name pos:start="77:5" pos:end="77:12">mmio_reg</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:61"><name pos:start="77:16" pos:end="77:37">sysbus_mmio_get_region</name><argument_list pos:start="77:38" pos:end="77:61">(<argument pos:start="77:39" pos:end="77:57"><expr pos:start="77:39" pos:end="77:57"><call pos:start="77:39" pos:end="77:57"><name pos:start="77:39" pos:end="77:52">SYS_BUS_DEVICE</name><argument_list pos:start="77:53" pos:end="77:57">(<argument pos:start="77:54" pos:end="77:56"><expr pos:start="77:54" pos:end="77:56"><name pos:start="77:54" pos:end="77:56">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:60" pos:end="77:60"><expr pos:start="77:60" pos:end="77:60"><literal type="number" pos:start="77:60" pos:end="77:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:61"><expr pos:start="79:5" pos:end="81:60"><call pos:start="79:5" pos:end="81:60"><name pos:start="79:5" pos:end="79:28">memory_region_init_alias</name><argument_list pos:start="79:29" pos:end="81:60">(<argument pos:start="79:30" pos:end="79:39"><expr pos:start="79:30" pos:end="79:39"><name pos:start="79:30" pos:end="79:39">mmio_alias</name></expr></argument>, <argument pos:start="79:42" pos:end="79:52"><expr pos:start="79:42" pos:end="79:52"><call pos:start="79:42" pos:end="79:52"><name pos:start="79:42" pos:end="79:47">OBJECT</name><argument_list pos:start="79:48" pos:end="79:52">(<argument pos:start="79:49" pos:end="79:51"><expr pos:start="79:49" pos:end="79:51"><name pos:start="79:49" pos:end="79:51">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:55" pos:end="79:65"><expr pos:start="79:55" pos:end="79:65"><literal type="string" pos:start="79:55" pos:end="79:65">"pcie-mmio"</literal></expr></argument>,

                             <argument pos:start="81:30" pos:end="81:37"><expr pos:start="81:30" pos:end="81:37"><name pos:start="81:30" pos:end="81:37">mmio_reg</name></expr></argument>, <argument pos:start="81:40" pos:end="81:48"><expr pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:48">base_mmio</name></expr></argument>, <argument pos:start="81:51" pos:end="81:59"><expr pos:start="81:51" pos:end="81:59"><name pos:start="81:51" pos:end="81:59">size_mmio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:76"><expr pos:start="83:5" pos:end="83:75"><call pos:start="83:5" pos:end="83:75"><name pos:start="83:5" pos:end="83:31">memory_region_add_subregion</name><argument_list pos:start="83:32" pos:end="83:75">(<argument pos:start="83:33" pos:end="83:51"><expr pos:start="83:33" pos:end="83:51"><call pos:start="83:33" pos:end="83:51"><name pos:start="83:33" pos:end="83:49">get_system_memory</name><argument_list pos:start="83:50" pos:end="83:51">()</argument_list></call></expr></argument>, <argument pos:start="83:54" pos:end="83:62"><expr pos:start="83:54" pos:end="83:62"><name pos:start="83:54" pos:end="83:62">base_mmio</name></expr></argument>, <argument pos:start="83:65" pos:end="83:74"><expr pos:start="83:65" pos:end="83:74"><name pos:start="83:65" pos:end="83:74">mmio_alias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="103:5"><if pos:start="87:5" pos:end="103:5">if <condition pos:start="87:8" pos:end="87:20">(<expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:19">use_highmem</name></expr>)</condition> <block pos:start="87:22" pos:end="103:5">{<block_content pos:start="91:9" pos:end="101:53">

        <comment type="block" pos:start="89:9" pos:end="89:33">/* Map high MMIO space */</comment>

        <decl_stmt pos:start="91:9" pos:end="91:64"><decl pos:start="91:9" pos:end="91:63"><type pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:20">MemoryRegion</name> <modifier pos:start="91:22" pos:end="91:22">*</modifier></type><name pos:start="91:23" pos:end="91:37">high_mmio_alias</name> <init pos:start="91:39" pos:end="91:63">= <expr pos:start="91:41" pos:end="91:63"><call pos:start="91:41" pos:end="91:63"><name pos:start="91:41" pos:end="91:46">g_new0</name><argument_list pos:start="91:47" pos:end="91:63">(<argument pos:start="91:48" pos:end="91:59"><expr pos:start="91:48" pos:end="91:59"><name pos:start="91:48" pos:end="91:59">MemoryRegion</name></expr></argument>, <argument pos:start="91:62" pos:end="91:62"><expr pos:start="91:62" pos:end="91:62"><literal type="number" pos:start="91:62" pos:end="91:62">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="95:9" pos:end="97:75"><expr pos:start="95:9" pos:end="97:74"><call pos:start="95:9" pos:end="97:74"><name pos:start="95:9" pos:end="95:32">memory_region_init_alias</name><argument_list pos:start="95:33" pos:end="97:74">(<argument pos:start="95:34" pos:end="95:48"><expr pos:start="95:34" pos:end="95:48"><name pos:start="95:34" pos:end="95:48">high_mmio_alias</name></expr></argument>, <argument pos:start="95:51" pos:end="95:61"><expr pos:start="95:51" pos:end="95:61"><call pos:start="95:51" pos:end="95:61"><name pos:start="95:51" pos:end="95:56">OBJECT</name><argument_list pos:start="95:57" pos:end="95:61">(<argument pos:start="95:58" pos:end="95:60"><expr pos:start="95:58" pos:end="95:60"><name pos:start="95:58" pos:end="95:60">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:64" pos:end="95:79"><expr pos:start="95:64" pos:end="95:79"><literal type="string" pos:start="95:64" pos:end="95:79">"pcie-mmio-high"</literal></expr></argument>,

                                 <argument pos:start="97:34" pos:end="97:41"><expr pos:start="97:34" pos:end="97:41"><name pos:start="97:34" pos:end="97:41">mmio_reg</name></expr></argument>, <argument pos:start="97:44" pos:end="97:57"><expr pos:start="97:44" pos:end="97:57"><name pos:start="97:44" pos:end="97:57">base_mmio_high</name></expr></argument>, <argument pos:start="97:60" pos:end="97:73"><expr pos:start="97:60" pos:end="97:73"><name pos:start="97:60" pos:end="97:73">size_mmio_high</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="101:53"><expr pos:start="99:9" pos:end="101:52"><call pos:start="99:9" pos:end="101:52"><name pos:start="99:9" pos:end="99:35">memory_region_add_subregion</name><argument_list pos:start="99:36" pos:end="101:52">(<argument pos:start="99:37" pos:end="99:55"><expr pos:start="99:37" pos:end="99:55"><call pos:start="99:37" pos:end="99:55"><name pos:start="99:37" pos:end="99:53">get_system_memory</name><argument_list pos:start="99:54" pos:end="99:55">()</argument_list></call></expr></argument>, <argument pos:start="99:58" pos:end="99:71"><expr pos:start="99:58" pos:end="99:71"><name pos:start="99:58" pos:end="99:71">base_mmio_high</name></expr></argument>,

                                    <argument pos:start="101:37" pos:end="101:51"><expr pos:start="101:37" pos:end="101:51"><name pos:start="101:37" pos:end="101:51">high_mmio_alias</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:27">/* Map IO port space */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:54"><expr pos:start="109:5" pos:end="109:53"><call pos:start="109:5" pos:end="109:53"><name pos:start="109:5" pos:end="109:19">sysbus_mmio_map</name><argument_list pos:start="109:20" pos:end="109:53">(<argument pos:start="109:21" pos:end="109:39"><expr pos:start="109:21" pos:end="109:39"><call pos:start="109:21" pos:end="109:39"><name pos:start="109:21" pos:end="109:34">SYS_BUS_DEVICE</name><argument_list pos:start="109:35" pos:end="109:39">(<argument pos:start="109:36" pos:end="109:38"><expr pos:start="109:36" pos:end="109:38"><name pos:start="109:36" pos:end="109:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:42" pos:end="109:42"><expr pos:start="109:42" pos:end="109:42"><literal type="number" pos:start="109:42" pos:end="109:42">2</literal></expr></argument>, <argument pos:start="109:45" pos:end="109:52"><expr pos:start="109:45" pos:end="109:52"><name pos:start="109:45" pos:end="109:52">base_pio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="113:5" pos:end="117:5">for <control pos:start="113:9" pos:end="113:39">(<init pos:start="113:10" pos:end="113:15"><expr pos:start="113:10" pos:end="113:14"><name pos:start="113:10" pos:end="113:10">i</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <literal type="number" pos:start="113:14" pos:end="113:14">0</literal></expr>;</init> <condition pos:start="113:17" pos:end="113:34"><expr pos:start="113:17" pos:end="113:33"><name pos:start="113:17" pos:end="113:17">i</name> <operator pos:start="113:19" pos:end="113:19">&lt;</operator> <name pos:start="113:21" pos:end="113:33">GPEX_NUM_IRQS</name></expr>;</condition> <incr pos:start="113:36" pos:end="113:38"><expr pos:start="113:36" pos:end="113:38"><name pos:start="113:36" pos:end="113:36">i</name><operator pos:start="113:37" pos:end="113:38">++</operator></expr></incr>)</control> <block pos:start="113:41" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:65">

        <expr_stmt pos:start="115:9" pos:end="115:65"><expr pos:start="115:9" pos:end="115:64"><call pos:start="115:9" pos:end="115:64"><name pos:start="115:9" pos:end="115:26">sysbus_connect_irq</name><argument_list pos:start="115:27" pos:end="115:64">(<argument pos:start="115:28" pos:end="115:46"><expr pos:start="115:28" pos:end="115:46"><call pos:start="115:28" pos:end="115:46"><name pos:start="115:28" pos:end="115:41">SYS_BUS_DEVICE</name><argument_list pos:start="115:42" pos:end="115:46">(<argument pos:start="115:43" pos:end="115:45"><expr pos:start="115:43" pos:end="115:45"><name pos:start="115:43" pos:end="115:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:49" pos:end="115:49"><expr pos:start="115:49" pos:end="115:49"><name pos:start="115:49" pos:end="115:49">i</name></expr></argument>, <argument pos:start="115:52" pos:end="115:63"><expr pos:start="115:52" pos:end="115:63"><name pos:start="115:52" pos:end="115:63"><name pos:start="115:52" pos:end="115:54">pic</name><index pos:start="115:55" pos:end="115:63">[<expr pos:start="115:56" pos:end="115:62"><name pos:start="115:56" pos:end="115:58">irq</name> <operator pos:start="115:60" pos:end="115:60">+</operator> <name pos:start="115:62" pos:end="115:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="121:5" pos:end="121:55"><expr pos:start="121:5" pos:end="121:54"><name pos:start="121:5" pos:end="121:12">nodename</name> <operator pos:start="121:14" pos:end="121:14">=</operator> <call pos:start="121:16" pos:end="121:54"><name pos:start="121:16" pos:end="121:30">g_strdup_printf</name><argument_list pos:start="121:31" pos:end="121:54">(<argument pos:start="121:32" pos:end="121:47"><expr pos:start="121:32" pos:end="121:47"><literal type="string" pos:start="121:32" pos:end="121:40">"/pcie@%"</literal> <name pos:start="121:42" pos:end="121:47">PRIx64</name></expr></argument>, <argument pos:start="121:50" pos:end="121:53"><expr pos:start="121:50" pos:end="121:53"><name pos:start="121:50" pos:end="121:53">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:45"><expr pos:start="123:5" pos:end="123:44"><call pos:start="123:5" pos:end="123:44"><name pos:start="123:5" pos:end="123:24">qemu_fdt_add_subnode</name><argument_list pos:start="123:25" pos:end="123:44">(<argument pos:start="123:26" pos:end="123:33"><expr pos:start="123:26" pos:end="123:33"><name pos:start="123:26" pos:end="123:33"><name pos:start="123:26" pos:end="123:28">vbi</name><operator pos:start="123:29" pos:end="123:30">-&gt;</operator><name pos:start="123:31" pos:end="123:33">fdt</name></name></expr></argument>, <argument pos:start="123:36" pos:end="123:43"><expr pos:start="123:36" pos:end="123:43"><name pos:start="123:36" pos:end="123:43">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="127:67"><expr pos:start="125:5" pos:end="127:66"><call pos:start="125:5" pos:end="127:66"><name pos:start="125:5" pos:end="125:27">qemu_fdt_setprop_string</name><argument_list pos:start="125:28" pos:end="127:66">(<argument pos:start="125:29" pos:end="125:36"><expr pos:start="125:29" pos:end="125:36"><name pos:start="125:29" pos:end="125:36"><name pos:start="125:29" pos:end="125:31">vbi</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:36">fdt</name></name></expr></argument>, <argument pos:start="125:39" pos:end="125:46"><expr pos:start="125:39" pos:end="125:46"><name pos:start="125:39" pos:end="125:46">nodename</name></expr></argument>,

                            <argument pos:start="127:29" pos:end="127:40"><expr pos:start="127:29" pos:end="127:40"><literal type="string" pos:start="127:29" pos:end="127:40">"compatible"</literal></expr></argument>, <argument pos:start="127:43" pos:end="127:65"><expr pos:start="127:43" pos:end="127:65"><literal type="string" pos:start="127:43" pos:end="127:65">"pci-host-ecam-generic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:70"><expr pos:start="129:5" pos:end="129:69"><call pos:start="129:5" pos:end="129:69"><name pos:start="129:5" pos:end="129:27">qemu_fdt_setprop_string</name><argument_list pos:start="129:28" pos:end="129:69">(<argument pos:start="129:29" pos:end="129:36"><expr pos:start="129:29" pos:end="129:36"><name pos:start="129:29" pos:end="129:36"><name pos:start="129:29" pos:end="129:31">vbi</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:36">fdt</name></name></expr></argument>, <argument pos:start="129:39" pos:end="129:46"><expr pos:start="129:39" pos:end="129:46"><name pos:start="129:39" pos:end="129:46">nodename</name></expr></argument>, <argument pos:start="129:49" pos:end="129:61"><expr pos:start="129:49" pos:end="129:61"><literal type="string" pos:start="129:49" pos:end="129:61">"device_type"</literal></expr></argument>, <argument pos:start="129:64" pos:end="129:68"><expr pos:start="129:64" pos:end="129:68"><literal type="string" pos:start="129:64" pos:end="129:68">"pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:67"><expr pos:start="131:5" pos:end="131:66"><call pos:start="131:5" pos:end="131:66"><name pos:start="131:5" pos:end="131:25">qemu_fdt_setprop_cell</name><argument_list pos:start="131:26" pos:end="131:66">(<argument pos:start="131:27" pos:end="131:34"><expr pos:start="131:27" pos:end="131:34"><name pos:start="131:27" pos:end="131:34"><name pos:start="131:27" pos:end="131:29">vbi</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:34">fdt</name></name></expr></argument>, <argument pos:start="131:37" pos:end="131:44"><expr pos:start="131:37" pos:end="131:44"><name pos:start="131:37" pos:end="131:44">nodename</name></expr></argument>, <argument pos:start="131:47" pos:end="131:62"><expr pos:start="131:47" pos:end="131:62"><literal type="string" pos:start="131:47" pos:end="131:62">"#address-cells"</literal></expr></argument>, <argument pos:start="131:65" pos:end="131:65"><expr pos:start="131:65" pos:end="131:65"><literal type="number" pos:start="131:65" pos:end="131:65">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:64"><expr pos:start="133:5" pos:end="133:63"><call pos:start="133:5" pos:end="133:63"><name pos:start="133:5" pos:end="133:25">qemu_fdt_setprop_cell</name><argument_list pos:start="133:26" pos:end="133:63">(<argument pos:start="133:27" pos:end="133:34"><expr pos:start="133:27" pos:end="133:34"><name pos:start="133:27" pos:end="133:34"><name pos:start="133:27" pos:end="133:29">vbi</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:34">fdt</name></name></expr></argument>, <argument pos:start="133:37" pos:end="133:44"><expr pos:start="133:37" pos:end="133:44"><name pos:start="133:37" pos:end="133:44">nodename</name></expr></argument>, <argument pos:start="133:47" pos:end="133:59"><expr pos:start="133:47" pos:end="133:59"><literal type="string" pos:start="133:47" pos:end="133:59">"#size-cells"</literal></expr></argument>, <argument pos:start="133:62" pos:end="133:62"><expr pos:start="133:62" pos:end="133:62"><literal type="number" pos:start="133:62" pos:end="133:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="137:46"><expr pos:start="135:5" pos:end="137:45"><call pos:start="135:5" pos:end="137:45"><name pos:start="135:5" pos:end="135:26">qemu_fdt_setprop_cells</name><argument_list pos:start="135:27" pos:end="137:45">(<argument pos:start="135:28" pos:end="135:35"><expr pos:start="135:28" pos:end="135:35"><name pos:start="135:28" pos:end="135:35"><name pos:start="135:28" pos:end="135:30">vbi</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:35">fdt</name></name></expr></argument>, <argument pos:start="135:38" pos:end="135:45"><expr pos:start="135:38" pos:end="135:45"><name pos:start="135:38" pos:end="135:45">nodename</name></expr></argument>, <argument pos:start="135:48" pos:end="135:58"><expr pos:start="135:48" pos:end="135:58"><literal type="string" pos:start="135:48" pos:end="135:58">"bus-range"</literal></expr></argument>, <argument pos:start="135:61" pos:end="135:61"><expr pos:start="135:61" pos:end="135:61"><literal type="number" pos:start="135:61" pos:end="135:61">0</literal></expr></argument>,

                           <argument pos:start="137:28" pos:end="137:44"><expr pos:start="137:28" pos:end="137:44"><name pos:start="137:28" pos:end="137:40">nr_pcie_buses</name> <operator pos:start="137:42" pos:end="137:42">-</operator> <literal type="number" pos:start="137:44" pos:end="137:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:79"><expr pos:start="141:5" pos:end="141:78"><call pos:start="141:5" pos:end="141:78"><name pos:start="141:5" pos:end="141:26">qemu_fdt_setprop_cells</name><argument_list pos:start="141:27" pos:end="141:78">(<argument pos:start="141:28" pos:end="141:35"><expr pos:start="141:28" pos:end="141:35"><name pos:start="141:28" pos:end="141:35"><name pos:start="141:28" pos:end="141:30">vbi</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:35">fdt</name></name></expr></argument>, <argument pos:start="141:38" pos:end="141:45"><expr pos:start="141:38" pos:end="141:45"><name pos:start="141:38" pos:end="141:45">nodename</name></expr></argument>, <argument pos:start="141:48" pos:end="141:59"><expr pos:start="141:48" pos:end="141:59"><literal type="string" pos:start="141:48" pos:end="141:59">"msi-parent"</literal></expr></argument>, <argument pos:start="141:62" pos:end="141:77"><expr pos:start="141:62" pos:end="141:77"><name pos:start="141:62" pos:end="141:77"><name pos:start="141:62" pos:end="141:64">vbi</name><operator pos:start="141:65" pos:end="141:66">-&gt;</operator><name pos:start="141:67" pos:end="141:77">v2m_phandle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="147:61"><expr pos:start="145:5" pos:end="147:60"><call pos:start="145:5" pos:end="147:60"><name pos:start="145:5" pos:end="145:32">qemu_fdt_setprop_sized_cells</name><argument_list pos:start="145:33" pos:end="147:60">(<argument pos:start="145:34" pos:end="145:41"><expr pos:start="145:34" pos:end="145:41"><name pos:start="145:34" pos:end="145:41"><name pos:start="145:34" pos:end="145:36">vbi</name><operator pos:start="145:37" pos:end="145:38">-&gt;</operator><name pos:start="145:39" pos:end="145:41">fdt</name></name></expr></argument>, <argument pos:start="145:44" pos:end="145:51"><expr pos:start="145:44" pos:end="145:51"><name pos:start="145:44" pos:end="145:51">nodename</name></expr></argument>, <argument pos:start="145:54" pos:end="145:58"><expr pos:start="145:54" pos:end="145:58"><literal type="string" pos:start="145:54" pos:end="145:58">"reg"</literal></expr></argument>,

                                 <argument pos:start="147:34" pos:end="147:34"><expr pos:start="147:34" pos:end="147:34"><literal type="number" pos:start="147:34" pos:end="147:34">2</literal></expr></argument>, <argument pos:start="147:37" pos:end="147:45"><expr pos:start="147:37" pos:end="147:45"><name pos:start="147:37" pos:end="147:45">base_ecam</name></expr></argument>, <argument pos:start="147:48" pos:end="147:48"><expr pos:start="147:48" pos:end="147:48"><literal type="number" pos:start="147:48" pos:end="147:48">2</literal></expr></argument>, <argument pos:start="147:51" pos:end="147:59"><expr pos:start="147:51" pos:end="147:59"><name pos:start="147:51" pos:end="147:59">size_ecam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="151:5" pos:end="181:5"><if pos:start="151:5" pos:end="169:5">if <condition pos:start="151:8" pos:end="151:20">(<expr pos:start="151:9" pos:end="151:19"><name pos:start="151:9" pos:end="151:19">use_highmem</name></expr>)</condition> <block pos:start="151:22" pos:end="169:5">{<block_content pos:start="153:9" pos:end="167:75">

        <expr_stmt pos:start="153:9" pos:end="167:75"><expr pos:start="153:9" pos:end="167:74"><call pos:start="153:9" pos:end="167:74"><name pos:start="153:9" pos:end="153:36">qemu_fdt_setprop_sized_cells</name><argument_list pos:start="153:37" pos:end="167:74">(<argument pos:start="153:38" pos:end="153:45"><expr pos:start="153:38" pos:end="153:45"><name pos:start="153:38" pos:end="153:45"><name pos:start="153:38" pos:end="153:40">vbi</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:45">fdt</name></name></expr></argument>, <argument pos:start="153:48" pos:end="153:55"><expr pos:start="153:48" pos:end="153:55"><name pos:start="153:48" pos:end="153:55">nodename</name></expr></argument>, <argument pos:start="153:58" pos:end="153:65"><expr pos:start="153:58" pos:end="153:65"><literal type="string" pos:start="153:58" pos:end="153:65">"ranges"</literal></expr></argument>,

                                     <argument pos:start="155:38" pos:end="155:38"><expr pos:start="155:38" pos:end="155:38"><literal type="number" pos:start="155:38" pos:end="155:38">1</literal></expr></argument>, <argument pos:start="155:41" pos:end="155:60"><expr pos:start="155:41" pos:end="155:60"><name pos:start="155:41" pos:end="155:60">FDT_PCI_RANGE_IOPORT</name></expr></argument>, <argument pos:start="155:63" pos:end="155:63"><expr pos:start="155:63" pos:end="155:63"><literal type="number" pos:start="155:63" pos:end="155:63">2</literal></expr></argument>, <argument pos:start="155:66" pos:end="155:66"><expr pos:start="155:66" pos:end="155:66"><literal type="number" pos:start="155:66" pos:end="155:66">0</literal></expr></argument>,

                                     <argument pos:start="157:38" pos:end="157:38"><expr pos:start="157:38" pos:end="157:38"><literal type="number" pos:start="157:38" pos:end="157:38">2</literal></expr></argument>, <argument pos:start="157:41" pos:end="157:48"><expr pos:start="157:41" pos:end="157:48"><name pos:start="157:41" pos:end="157:48">base_pio</name></expr></argument>, <argument pos:start="157:51" pos:end="157:51"><expr pos:start="157:51" pos:end="157:51"><literal type="number" pos:start="157:51" pos:end="157:51">2</literal></expr></argument>, <argument pos:start="157:54" pos:end="157:61"><expr pos:start="157:54" pos:end="157:61"><name pos:start="157:54" pos:end="157:61">size_pio</name></expr></argument>,

                                     <argument pos:start="159:38" pos:end="159:38"><expr pos:start="159:38" pos:end="159:38"><literal type="number" pos:start="159:38" pos:end="159:38">1</literal></expr></argument>, <argument pos:start="159:41" pos:end="159:58"><expr pos:start="159:41" pos:end="159:58"><name pos:start="159:41" pos:end="159:58">FDT_PCI_RANGE_MMIO</name></expr></argument>, <argument pos:start="159:61" pos:end="159:61"><expr pos:start="159:61" pos:end="159:61"><literal type="number" pos:start="159:61" pos:end="159:61">2</literal></expr></argument>, <argument pos:start="159:64" pos:end="159:72"><expr pos:start="159:64" pos:end="159:72"><name pos:start="159:64" pos:end="159:72">base_mmio</name></expr></argument>,

                                     <argument pos:start="161:38" pos:end="161:38"><expr pos:start="161:38" pos:end="161:38"><literal type="number" pos:start="161:38" pos:end="161:38">2</literal></expr></argument>, <argument pos:start="161:41" pos:end="161:49"><expr pos:start="161:41" pos:end="161:49"><name pos:start="161:41" pos:end="161:49">base_mmio</name></expr></argument>, <argument pos:start="161:52" pos:end="161:52"><expr pos:start="161:52" pos:end="161:52"><literal type="number" pos:start="161:52" pos:end="161:52">2</literal></expr></argument>, <argument pos:start="161:55" pos:end="161:63"><expr pos:start="161:55" pos:end="161:63"><name pos:start="161:55" pos:end="161:63">size_mmio</name></expr></argument>,

                                     <argument pos:start="163:38" pos:end="163:38"><expr pos:start="163:38" pos:end="163:38"><literal type="number" pos:start="163:38" pos:end="163:38">1</literal></expr></argument>, <argument pos:start="163:41" pos:end="163:64"><expr pos:start="163:41" pos:end="163:64"><name pos:start="163:41" pos:end="163:64">FDT_PCI_RANGE_MMIO_64BIT</name></expr></argument>,

                                     <argument pos:start="165:38" pos:end="165:38"><expr pos:start="165:38" pos:end="165:38"><literal type="number" pos:start="165:38" pos:end="165:38">2</literal></expr></argument>, <argument pos:start="165:41" pos:end="165:54"><expr pos:start="165:41" pos:end="165:54"><name pos:start="165:41" pos:end="165:54">base_mmio_high</name></expr></argument>,

                                     <argument pos:start="167:38" pos:end="167:38"><expr pos:start="167:38" pos:end="167:38"><literal type="number" pos:start="167:38" pos:end="167:38">2</literal></expr></argument>, <argument pos:start="167:41" pos:end="167:54"><expr pos:start="167:41" pos:end="167:54"><name pos:start="167:41" pos:end="167:54">base_mmio_high</name></expr></argument>, <argument pos:start="167:57" pos:end="167:57"><expr pos:start="167:57" pos:end="167:57"><literal type="number" pos:start="167:57" pos:end="167:57">2</literal></expr></argument>, <argument pos:start="167:60" pos:end="167:73"><expr pos:start="167:60" pos:end="167:73"><name pos:start="167:60" pos:end="167:73">size_mmio_high</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="169:7" pos:end="181:5">else <block pos:start="169:12" pos:end="181:5">{<block_content pos:start="171:9" pos:end="179:65">

        <expr_stmt pos:start="171:9" pos:end="179:65"><expr pos:start="171:9" pos:end="179:64"><call pos:start="171:9" pos:end="179:64"><name pos:start="171:9" pos:end="171:36">qemu_fdt_setprop_sized_cells</name><argument_list pos:start="171:37" pos:end="179:64">(<argument pos:start="171:38" pos:end="171:45"><expr pos:start="171:38" pos:end="171:45"><name pos:start="171:38" pos:end="171:45"><name pos:start="171:38" pos:end="171:40">vbi</name><operator pos:start="171:41" pos:end="171:42">-&gt;</operator><name pos:start="171:43" pos:end="171:45">fdt</name></name></expr></argument>, <argument pos:start="171:48" pos:end="171:55"><expr pos:start="171:48" pos:end="171:55"><name pos:start="171:48" pos:end="171:55">nodename</name></expr></argument>, <argument pos:start="171:58" pos:end="171:65"><expr pos:start="171:58" pos:end="171:65"><literal type="string" pos:start="171:58" pos:end="171:65">"ranges"</literal></expr></argument>,

                                     <argument pos:start="173:38" pos:end="173:38"><expr pos:start="173:38" pos:end="173:38"><literal type="number" pos:start="173:38" pos:end="173:38">1</literal></expr></argument>, <argument pos:start="173:41" pos:end="173:60"><expr pos:start="173:41" pos:end="173:60"><name pos:start="173:41" pos:end="173:60">FDT_PCI_RANGE_IOPORT</name></expr></argument>, <argument pos:start="173:63" pos:end="173:63"><expr pos:start="173:63" pos:end="173:63"><literal type="number" pos:start="173:63" pos:end="173:63">2</literal></expr></argument>, <argument pos:start="173:66" pos:end="173:66"><expr pos:start="173:66" pos:end="173:66"><literal type="number" pos:start="173:66" pos:end="173:66">0</literal></expr></argument>,

                                     <argument pos:start="175:38" pos:end="175:38"><expr pos:start="175:38" pos:end="175:38"><literal type="number" pos:start="175:38" pos:end="175:38">2</literal></expr></argument>, <argument pos:start="175:41" pos:end="175:48"><expr pos:start="175:41" pos:end="175:48"><name pos:start="175:41" pos:end="175:48">base_pio</name></expr></argument>, <argument pos:start="175:51" pos:end="175:51"><expr pos:start="175:51" pos:end="175:51"><literal type="number" pos:start="175:51" pos:end="175:51">2</literal></expr></argument>, <argument pos:start="175:54" pos:end="175:61"><expr pos:start="175:54" pos:end="175:61"><name pos:start="175:54" pos:end="175:61">size_pio</name></expr></argument>,

                                     <argument pos:start="177:38" pos:end="177:38"><expr pos:start="177:38" pos:end="177:38"><literal type="number" pos:start="177:38" pos:end="177:38">1</literal></expr></argument>, <argument pos:start="177:41" pos:end="177:58"><expr pos:start="177:41" pos:end="177:58"><name pos:start="177:41" pos:end="177:58">FDT_PCI_RANGE_MMIO</name></expr></argument>, <argument pos:start="177:61" pos:end="177:61"><expr pos:start="177:61" pos:end="177:61"><literal type="number" pos:start="177:61" pos:end="177:61">2</literal></expr></argument>, <argument pos:start="177:64" pos:end="177:72"><expr pos:start="177:64" pos:end="177:72"><name pos:start="177:64" pos:end="177:72">base_mmio</name></expr></argument>,

                                     <argument pos:start="179:38" pos:end="179:38"><expr pos:start="179:38" pos:end="179:38"><literal type="number" pos:start="179:38" pos:end="179:38">2</literal></expr></argument>, <argument pos:start="179:41" pos:end="179:49"><expr pos:start="179:41" pos:end="179:49"><name pos:start="179:41" pos:end="179:49">base_mmio</name></expr></argument>, <argument pos:start="179:52" pos:end="179:52"><expr pos:start="179:52" pos:end="179:52"><literal type="number" pos:start="179:52" pos:end="179:52">2</literal></expr></argument>, <argument pos:start="179:55" pos:end="179:63"><expr pos:start="179:55" pos:end="179:63"><name pos:start="179:55" pos:end="179:63">size_mmio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:69"><expr pos:start="185:5" pos:end="185:68"><call pos:start="185:5" pos:end="185:68"><name pos:start="185:5" pos:end="185:25">qemu_fdt_setprop_cell</name><argument_list pos:start="185:26" pos:end="185:68">(<argument pos:start="185:27" pos:end="185:34"><expr pos:start="185:27" pos:end="185:34"><name pos:start="185:27" pos:end="185:34"><name pos:start="185:27" pos:end="185:29">vbi</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:34">fdt</name></name></expr></argument>, <argument pos:start="185:37" pos:end="185:44"><expr pos:start="185:37" pos:end="185:44"><name pos:start="185:37" pos:end="185:44">nodename</name></expr></argument>, <argument pos:start="185:47" pos:end="185:64"><expr pos:start="185:47" pos:end="185:64"><literal type="string" pos:start="185:47" pos:end="185:64">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="185:67" pos:end="185:67"><expr pos:start="185:67" pos:end="185:67"><literal type="number" pos:start="185:67" pos:end="185:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:62"><expr pos:start="187:5" pos:end="187:61"><call pos:start="187:5" pos:end="187:61"><name pos:start="187:5" pos:end="187:23">create_pcie_irq_map</name><argument_list pos:start="187:24" pos:end="187:61">(<argument pos:start="187:25" pos:end="187:27"><expr pos:start="187:25" pos:end="187:27"><name pos:start="187:25" pos:end="187:27">vbi</name></expr></argument>, <argument pos:start="187:30" pos:end="187:45"><expr pos:start="187:30" pos:end="187:45"><name pos:start="187:30" pos:end="187:45"><name pos:start="187:30" pos:end="187:32">vbi</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:45">gic_phandle</name></name></expr></argument>, <argument pos:start="187:48" pos:end="187:50"><expr pos:start="187:48" pos:end="187:50"><name pos:start="187:48" pos:end="187:50">irq</name></expr></argument>, <argument pos:start="187:53" pos:end="187:60"><expr pos:start="187:53" pos:end="187:60"><name pos:start="187:53" pos:end="187:60">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:21"><expr pos:start="191:5" pos:end="191:20"><call pos:start="191:5" pos:end="191:20"><name pos:start="191:5" pos:end="191:10">g_free</name><argument_list pos:start="191:11" pos:end="191:20">(<argument pos:start="191:12" pos:end="191:19"><expr pos:start="191:12" pos:end="191:19"><name pos:start="191:12" pos:end="191:19">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
