<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24014.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mxf_write_footer</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:72"><expr pos:start="11:5" pos:end="11:71"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">mxf</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:17">duration</name></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:47"><name pos:start="11:21" pos:end="11:23">mxf</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:47">last_indexed_edit_unit</name></name> <operator pos:start="11:49" pos:end="11:49">+</operator> <name pos:start="11:51" pos:end="11:71"><name pos:start="11:51" pos:end="11:53">mxf</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:71">edit_units_count</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:22">mxf_write_klv_fill</name><argument_list pos:start="15:23" pos:end="15:25">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:7">mxf</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:32">footer_partition_offset</name></name> <operator pos:start="17:34" pos:end="17:34">=</operator> <call pos:start="17:36" pos:end="17:48"><name pos:start="17:36" pos:end="17:44">avio_tell</name><argument_list pos:start="17:45" pos:end="17:48">(<argument pos:start="17:46" pos:end="17:47"><expr pos:start="17:46" pos:end="17:47"><name pos:start="17:46" pos:end="17:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:34">(<expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:11">mxf</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:33">edit_unit_byte_count</name></name></expr>)</condition> <block pos:start="19:36" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:62"> <comment type="line" pos:start="19:38" pos:end="19:63">// no need to repeat index</comment>

        <expr_stmt pos:start="21:9" pos:end="21:62"><expr pos:start="21:9" pos:end="21:61"><call pos:start="21:9" pos:end="21:61"><name pos:start="21:9" pos:end="21:27">mxf_write_partition</name><argument_list pos:start="21:28" pos:end="21:61">(<argument pos:start="21:29" pos:end="21:29"><expr pos:start="21:29" pos:end="21:29"><name pos:start="21:29" pos:end="21:29">s</name></expr></argument>, <argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr></argument>, <argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr></argument>, <argument pos:start="21:38" pos:end="21:57"><expr pos:start="21:38" pos:end="21:57"><name pos:start="21:38" pos:end="21:57">footer_partition_key</name></expr></argument>, <argument pos:start="21:60" pos:end="21:60"><expr pos:start="21:60" pos:end="21:60"><literal type="number" pos:start="21:60" pos:end="21:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="33:5">else <block pos:start="23:12" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:41">

        <expr_stmt pos:start="25:9" pos:end="25:62"><expr pos:start="25:9" pos:end="25:61"><call pos:start="25:9" pos:end="25:61"><name pos:start="25:9" pos:end="25:27">mxf_write_partition</name><argument_list pos:start="25:28" pos:end="25:61">(<argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">s</name></expr></argument>, <argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr></argument>, <argument pos:start="25:35" pos:end="25:35"><expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">2</literal></expr></argument>, <argument pos:start="25:38" pos:end="25:57"><expr pos:start="25:38" pos:end="25:57"><name pos:start="25:38" pos:end="25:57">footer_partition_key</name></expr></argument>, <argument pos:start="25:60" pos:end="25:60"><expr pos:start="25:60" pos:end="25:60"><literal type="number" pos:start="25:60" pos:end="25:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><call pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:26">mxf_write_klv_fill</name><argument_list pos:start="29:27" pos:end="29:29">(<argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><name pos:start="29:28" pos:end="29:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><call pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:37">mxf_write_index_table_segment</name><argument_list pos:start="31:38" pos:end="31:40">(<argument pos:start="31:39" pos:end="31:39"><expr pos:start="31:39" pos:end="31:39"><name pos:start="31:39" pos:end="31:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><call pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:22">mxf_write_klv_fill</name><argument_list pos:start="37:23" pos:end="37:25">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><call pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:31">mxf_write_random_index_pack</name><argument_list pos:start="39:32" pos:end="39:34">(<argument pos:start="39:33" pos:end="39:33"><expr pos:start="39:33" pos:end="39:33"><name pos:start="39:33" pos:end="39:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="61:5"><if pos:start="43:5" pos:end="61:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:13">pb</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:23">seekable</name></name></expr>)</condition> <block pos:start="43:26" pos:end="61:5">{<block_content pos:start="45:9" pos:end="59:9">

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><call pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:17">avio_seek</name><argument_list pos:start="45:18" pos:end="45:34">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">pb</name></expr></argument>, <argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr></argument>, <argument pos:start="45:26" pos:end="45:33"><expr pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:33">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="59:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:38">(<expr pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:15">mxf</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:37">edit_unit_byte_count</name></name></expr>)</condition> <block pos:start="47:40" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:45">

            <expr_stmt pos:start="49:13" pos:end="49:73"><expr pos:start="49:13" pos:end="49:72"><call pos:start="49:13" pos:end="49:72"><name pos:start="49:13" pos:end="49:31">mxf_write_partition</name><argument_list pos:start="49:32" pos:end="49:72">(<argument pos:start="49:33" pos:end="49:33"><expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">s</name></expr></argument>, <argument pos:start="49:36" pos:end="49:36"><expr pos:start="49:36" pos:end="49:36"><literal type="number" pos:start="49:36" pos:end="49:36">1</literal></expr></argument>, <argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><literal type="number" pos:start="49:39" pos:end="49:39">2</literal></expr></argument>, <argument pos:start="49:42" pos:end="49:68"><expr pos:start="49:42" pos:end="49:68"><name pos:start="49:42" pos:end="49:68">header_closed_partition_key</name></expr></argument>, <argument pos:start="49:71" pos:end="49:71"><expr pos:start="49:71" pos:end="49:71"><literal type="number" pos:start="49:71" pos:end="49:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:34"><expr pos:start="51:13" pos:end="51:33"><call pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:30">mxf_write_klv_fill</name><argument_list pos:start="51:31" pos:end="51:33">(<argument pos:start="51:32" pos:end="51:32"><expr pos:start="51:32" pos:end="51:32"><name pos:start="51:32" pos:end="51:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:45"><expr pos:start="53:13" pos:end="53:44"><call pos:start="53:13" pos:end="53:44"><name pos:start="53:13" pos:end="53:41">mxf_write_index_table_segment</name><argument_list pos:start="53:42" pos:end="53:44">(<argument pos:start="53:43" pos:end="53:43"><expr pos:start="53:43" pos:end="53:43"><name pos:start="53:43" pos:end="53:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="59:9">else <block pos:start="55:16" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:73">

            <expr_stmt pos:start="57:13" pos:end="57:73"><expr pos:start="57:13" pos:end="57:72"><call pos:start="57:13" pos:end="57:72"><name pos:start="57:13" pos:end="57:31">mxf_write_partition</name><argument_list pos:start="57:32" pos:end="57:72">(<argument pos:start="57:33" pos:end="57:33"><expr pos:start="57:33" pos:end="57:33"><name pos:start="57:33" pos:end="57:33">s</name></expr></argument>, <argument pos:start="57:36" pos:end="57:36"><expr pos:start="57:36" pos:end="57:36"><literal type="number" pos:start="57:36" pos:end="57:36">0</literal></expr></argument>, <argument pos:start="57:39" pos:end="57:39"><expr pos:start="57:39" pos:end="57:39"><literal type="number" pos:start="57:39" pos:end="57:39">0</literal></expr></argument>, <argument pos:start="57:42" pos:end="57:68"><expr pos:start="57:42" pos:end="57:68"><name pos:start="57:42" pos:end="57:68">header_closed_partition_key</name></expr></argument>, <argument pos:start="57:71" pos:end="57:71"><expr pos:start="57:71" pos:end="57:71"><literal type="number" pos:start="57:71" pos:end="57:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:33"><expr pos:start="65:5" pos:end="65:32"><call pos:start="65:5" pos:end="65:32"><name pos:start="65:5" pos:end="65:29">ff_audio_interleave_close</name><argument_list pos:start="65:30" pos:end="65:32">(<argument pos:start="65:31" pos:end="65:31"><expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:34"><expr pos:start="69:5" pos:end="69:33"><call pos:start="69:5" pos:end="69:33"><name pos:start="69:5" pos:end="69:12">av_freep</name><argument_list pos:start="69:13" pos:end="69:33">(<argument pos:start="69:14" pos:end="69:32"><expr pos:start="69:14" pos:end="69:32"><operator pos:start="69:14" pos:end="69:14">&amp;</operator><name pos:start="69:15" pos:end="69:32"><name pos:start="69:15" pos:end="69:17">mxf</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:32">index_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:42"><expr pos:start="71:5" pos:end="71:41"><call pos:start="71:5" pos:end="71:41"><name pos:start="71:5" pos:end="71:12">av_freep</name><argument_list pos:start="71:13" pos:end="71:41">(<argument pos:start="71:14" pos:end="71:40"><expr pos:start="71:14" pos:end="71:40"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:40"><name pos:start="71:15" pos:end="71:17">mxf</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:40">body_partition_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:46"><expr pos:start="73:5" pos:end="73:45"><call pos:start="73:5" pos:end="73:45"><name pos:start="73:5" pos:end="73:12">av_freep</name><argument_list pos:start="73:13" pos:end="73:45">(<argument pos:start="73:14" pos:end="73:44"><expr pos:start="73:14" pos:end="73:44"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:44"><name pos:start="73:15" pos:end="73:17">mxf</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:33">timecode_track</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:44">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:35"><expr pos:start="75:5" pos:end="75:34"><call pos:start="75:5" pos:end="75:34"><name pos:start="75:5" pos:end="75:12">av_freep</name><argument_list pos:start="75:13" pos:end="75:34">(<argument pos:start="75:14" pos:end="75:33"><expr pos:start="75:14" pos:end="75:33"><operator pos:start="75:14" pos:end="75:14">&amp;</operator><name pos:start="75:15" pos:end="75:33"><name pos:start="75:15" pos:end="75:17">mxf</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:33">timecode_track</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:16"><expr pos:start="79:5" pos:end="79:15"><call pos:start="79:5" pos:end="79:15"><name pos:start="79:5" pos:end="79:12">mxf_free</name><argument_list pos:start="79:13" pos:end="79:15">(<argument pos:start="79:14" pos:end="79:14"><expr pos:start="79:14" pos:end="79:14"><name pos:start="79:14" pos:end="79:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
