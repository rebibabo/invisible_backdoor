<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25349.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">av_metadata_set</name><parameter_list pos:start="1:20" pos:end="1:72">(<parameter pos:start="1:21" pos:end="1:35"><decl pos:start="1:21" pos:end="1:35"><type pos:start="1:21" pos:end="1:35"><name pos:start="1:21" pos:end="1:30">AVMetadata</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier><modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">pm</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">key</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:71"><decl pos:start="1:55" pos:end="1:71"><type pos:start="1:55" pos:end="1:71"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVMetadata</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">m</name><init pos:start="5:18" pos:end="5:22">= <expr pos:start="5:20" pos:end="5:22"><operator pos:start="5:20" pos:end="5:20">*</operator><name pos:start="5:21" pos:end="5:22">pm</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:78"><decl pos:start="7:5" pos:end="7:77"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AVMetadataTag</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">tag</name><init pos:start="7:23" pos:end="7:77">= <expr pos:start="7:25" pos:end="7:77"><call pos:start="7:25" pos:end="7:77"><name pos:start="7:25" pos:end="7:39">av_metadata_get</name><argument_list pos:start="7:40" pos:end="7:77">(<argument pos:start="7:41" pos:end="7:41"><expr pos:start="7:41" pos:end="7:41"><name pos:start="7:41" pos:end="7:41">m</name></expr></argument>, <argument pos:start="7:44" pos:end="7:46"><expr pos:start="7:44" pos:end="7:46"><name pos:start="7:44" pos:end="7:46">key</name></expr></argument>, <argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">NULL</name></expr></argument>, <argument pos:start="7:55" pos:end="7:76"><expr pos:start="7:55" pos:end="7:76"><name pos:start="7:55" pos:end="7:76">AV_METADATA_MATCH_CASE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:38"><if pos:start="11:5" pos:end="13:38">if<condition pos:start="11:7" pos:end="11:10">(<expr pos:start="11:8" pos:end="11:9"><operator pos:start="11:8" pos:end="11:8">!</operator><name pos:start="11:9" pos:end="11:9">m</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:38"><block_content pos:start="13:9" pos:end="13:38">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:9">m</name><operator pos:start="13:10" pos:end="13:10">=</operator><operator pos:start="13:11" pos:end="13:11">*</operator><name pos:start="13:12" pos:end="13:13">pm</name><operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:37"><name pos:start="13:16" pos:end="13:25">av_mallocz</name><argument_list pos:start="13:26" pos:end="13:37">(<argument pos:start="13:27" pos:end="13:36"><expr pos:start="13:27" pos:end="13:36"><sizeof pos:start="13:27" pos:end="13:36">sizeof<argument_list pos:start="13:33" pos:end="13:36">(<argument pos:start="13:34" pos:end="13:35"><expr pos:start="13:34" pos:end="13:35"><operator pos:start="13:34" pos:end="13:34">*</operator><name pos:start="13:35" pos:end="13:35">m</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="25:5">if<condition pos:start="17:7" pos:end="17:11">(<expr pos:start="17:8" pos:end="17:10"><name pos:start="17:8" pos:end="17:10">tag</name></expr>)</condition><block pos:start="17:12" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:35">

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><call pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:15">av_free</name><argument_list pos:start="19:16" pos:end="19:27">(<argument pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:19">tag</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:15">av_free</name><argument_list pos:start="21:16" pos:end="21:25">(<argument pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:19">tag</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:24">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:12">tag</name><operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:34"><name pos:start="23:15" pos:end="23:15">m</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">elems</name><index pos:start="23:23" pos:end="23:34">[<expr pos:start="23:24" pos:end="23:33"><operator pos:start="23:24" pos:end="23:25">--</operator><name pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:26">m</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:33">count</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="25:6" pos:end="37:5">else<block pos:start="25:10" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:35">

        <decl_stmt pos:start="27:9" pos:end="27:83"><decl pos:start="27:9" pos:end="27:82"><type pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:21">AVMetadataTag</name> <modifier pos:start="27:23" pos:end="27:23">*</modifier></type><name pos:start="27:24" pos:end="27:26">tmp</name><init pos:start="27:27" pos:end="27:82">= <expr pos:start="27:29" pos:end="27:82"><call pos:start="27:29" pos:end="27:82"><name pos:start="27:29" pos:end="27:38">av_realloc</name><argument_list pos:start="27:39" pos:end="27:82">(<argument pos:start="27:40" pos:end="27:47"><expr pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:40">m</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:47">elems</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:81"><expr pos:start="27:50" pos:end="27:81"><operator pos:start="27:50" pos:end="27:50">(</operator><name pos:start="27:51" pos:end="27:58"><name pos:start="27:51" pos:end="27:51">m</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:58">count</name></name><operator pos:start="27:59" pos:end="27:59">+</operator><literal type="number" pos:start="27:60" pos:end="27:60">1</literal><operator pos:start="27:61" pos:end="27:61">)</operator> <operator pos:start="27:63" pos:end="27:63">*</operator> <sizeof pos:start="27:65" pos:end="27:81">sizeof<argument_list pos:start="27:71" pos:end="27:81">(<argument pos:start="27:72" pos:end="27:80"><expr pos:start="27:72" pos:end="27:80"><operator pos:start="27:72" pos:end="27:72">*</operator><name pos:start="27:73" pos:end="27:80"><name pos:start="27:73" pos:end="27:73">m</name><operator pos:start="27:74" pos:end="27:75">-&gt;</operator><name pos:start="27:76" pos:end="27:80">elems</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="29:9" pos:end="35:35"><if pos:start="29:9" pos:end="33:9">if<condition pos:start="29:11" pos:end="29:15">(<expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">tmp</name></expr>)</condition><block pos:start="29:16" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:26">

            <expr_stmt pos:start="31:13" pos:end="31:26"><expr pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:13">m</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">elems</name></name><operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:25">tmp</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="33:10" pos:end="35:35">else<block type="pseudo" pos:start="35:13" pos:end="35:35"><block_content pos:start="35:13" pos:end="35:35">

            <return pos:start="35:13" pos:end="35:35">return <expr pos:start="35:20" pos:end="35:34"><call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if<condition pos:start="39:7" pos:end="39:13">(<expr pos:start="39:8" pos:end="39:12"><name pos:start="39:8" pos:end="39:12">value</name></expr>)</condition><block pos:start="39:14" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:19">

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:9">m</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">elems</name><index pos:start="41:17" pos:end="41:26">[<expr pos:start="41:18" pos:end="41:25"><name pos:start="41:18" pos:end="41:25"><name pos:start="41:18" pos:end="41:18">m</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:25">count</name></name></expr>]</index></name><operator pos:start="41:27" pos:end="41:27">.</operator><name pos:start="41:28" pos:end="41:30">key</name>  <operator pos:start="41:33" pos:end="41:33">=</operator> <call pos:start="41:35" pos:end="41:50"><name pos:start="41:35" pos:end="41:43">av_strdup</name><argument_list pos:start="41:44" pos:end="41:50">(<argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">key</name></expr></argument>  )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:9">m</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:16">elems</name><index pos:start="43:17" pos:end="43:26">[<expr pos:start="43:18" pos:end="43:25"><name pos:start="43:18" pos:end="43:25"><name pos:start="43:18" pos:end="43:18">m</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:25">count</name></name></expr>]</index></name><operator pos:start="43:27" pos:end="43:27">.</operator><name pos:start="43:28" pos:end="43:32">value</name><operator pos:start="43:33" pos:end="43:33">=</operator> <call pos:start="43:35" pos:end="43:50"><name pos:start="43:35" pos:end="43:43">av_strdup</name><argument_list pos:start="43:44" pos:end="43:50">(<argument pos:start="43:45" pos:end="43:49"><expr pos:start="43:45" pos:end="43:49"><name pos:start="43:45" pos:end="43:49">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:19"><expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:9">m</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">count</name></name><operator pos:start="45:17" pos:end="45:18">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if<condition pos:start="49:7" pos:end="49:17">(<expr pos:start="49:8" pos:end="49:16"><operator pos:start="49:8" pos:end="49:8">!</operator><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:9">m</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:16">count</name></name></expr>)</condition> <block pos:start="49:19" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:21">

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><call pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:15">av_free</name><argument_list pos:start="51:16" pos:end="51:25">(<argument pos:start="51:17" pos:end="51:24"><expr pos:start="51:17" pos:end="51:24"><name pos:start="51:17" pos:end="51:24"><name pos:start="51:17" pos:end="51:17">m</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:24">elems</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><call pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:16">av_freep</name><argument_list pos:start="53:17" pos:end="53:20">(<argument pos:start="53:18" pos:end="53:19"><expr pos:start="53:18" pos:end="53:19"><name pos:start="53:18" pos:end="53:19">pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
