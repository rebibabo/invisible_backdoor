<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16773.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_cox</name><parameter_list pos:start="1:19" pos:end="1:69">(<parameter pos:start="1:20" pos:end="1:44"><decl pos:start="1:20" pos:end="1:44"><type pos:start="1:20" pos:end="1:44"><name pos:start="1:20" pos:end="1:41">Jpeg2000DecoderContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:65">Jpeg2000CodingStyle</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:16">byte</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:31"><if pos:start="9:5" pos:end="11:31">if <condition pos:start="9:8" pos:end="9:32">(<expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:18">buf_end</name></name> <operator pos:start="9:20" pos:end="9:20">-</operator> <name pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:27">buf</name></name> <operator pos:start="9:29" pos:end="9:29">&lt;</operator> <literal type="number" pos:start="9:31" pos:end="9:31">5</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:31"><block_content pos:start="11:9" pos:end="11:31">

        <return pos:start="11:9" pos:end="11:31">return <expr pos:start="11:16" pos:end="11:30"><call pos:start="11:16" pos:end="11:30"><name pos:start="11:16" pos:end="11:22">AVERROR</name><argument_list pos:start="11:23" pos:end="11:30">(<argument pos:start="11:24" pos:end="11:29"><expr pos:start="11:24" pos:end="11:29"><name pos:start="11:24" pos:end="11:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="13:5" pos:end="15:56">/*  nreslevels = number of resolution levels

                   = number of decomposition level +1 */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:5">c</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:17">nreslevels</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:48"><name pos:start="17:21" pos:end="17:39">bytestream_get_byte</name><argument_list pos:start="17:40" pos:end="17:48">(<argument pos:start="17:41" pos:end="17:47"><expr pos:start="17:41" pos:end="17:47"><operator pos:start="17:41" pos:end="17:41">&amp;</operator><name pos:start="17:42" pos:end="17:47"><name pos:start="17:42" pos:end="17:42">s</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:47">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:50" pos:end="17:50">+</operator> <literal type="number" pos:start="17:52" pos:end="17:52">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:35"><if pos:start="21:5" pos:end="23:35">if <condition pos:start="21:8" pos:end="21:47">(<expr pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:9">c</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:21">nreslevels</name></name> <operator pos:start="21:23" pos:end="21:23">&gt;</operator> <name pos:start="21:25" pos:end="21:46">JPEG2000_MAX_RESLEVELS</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:35"><block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:55">/* compute number of resolution levels to decode */</comment>

    <if_stmt pos:start="29:5" pos:end="35:67"><if pos:start="29:5" pos:end="31:33">if <condition pos:start="29:8" pos:end="29:44">(<expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:9">c</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:21">nreslevels</name></name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:43"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:43">reduction_factor</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:33"><block_content pos:start="31:9" pos:end="31:33">

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:9">c</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:28">nreslevels2decode</name></name> <operator pos:start="31:30" pos:end="31:30">=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="33:5" pos:end="35:67">else<block type="pseudo" pos:start="35:9" pos:end="35:67"><block_content pos:start="35:9" pos:end="35:67">

        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:9">c</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:28">nreslevels2decode</name></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <name pos:start="35:32" pos:end="35:44"><name pos:start="35:32" pos:end="35:32">c</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:44">nreslevels</name></name> <operator pos:start="35:46" pos:end="35:46">-</operator> <name pos:start="35:48" pos:end="35:66"><name pos:start="35:48" pos:end="35:48">s</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:66">reduction_factor</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:5">c</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:22">log2_cblk_width</name></name>  <operator pos:start="39:25" pos:end="39:25">=</operator> <call pos:start="39:27" pos:end="39:54"><name pos:start="39:27" pos:end="39:45">bytestream_get_byte</name><argument_list pos:start="39:46" pos:end="39:54">(<argument pos:start="39:47" pos:end="39:53"><expr pos:start="39:47" pos:end="39:53"><operator pos:start="39:47" pos:end="39:47">&amp;</operator><name pos:start="39:48" pos:end="39:53"><name pos:start="39:48" pos:end="39:48">s</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:53">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:56" pos:end="39:56">+</operator> <literal type="number" pos:start="39:58" pos:end="39:58">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="39:61" pos:end="39:73">// cblk width</comment>

    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:5">c</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:23">log2_cblk_height</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <call pos:start="41:27" pos:end="41:54"><name pos:start="41:27" pos:end="41:45">bytestream_get_byte</name><argument_list pos:start="41:46" pos:end="41:54">(<argument pos:start="41:47" pos:end="41:53"><expr pos:start="41:47" pos:end="41:53"><operator pos:start="41:47" pos:end="41:47">&amp;</operator><name pos:start="41:48" pos:end="41:53"><name pos:start="41:48" pos:end="41:48">s</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:53">buf</name></name></expr></argument>)</argument_list></call> <operator pos:start="41:56" pos:end="41:56">+</operator> <literal type="number" pos:start="41:58" pos:end="41:58">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="41:61" pos:end="41:74">// cblk height</comment>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="47:54">(<expr pos:start="45:9" pos:end="47:53"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:9">c</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:26">log2_cblk_width</name></name> <operator pos:start="45:28" pos:end="45:28">&gt;</operator> <literal type="number" pos:start="45:30" pos:end="45:31">10</literal> <operator pos:start="45:33" pos:end="45:34">||</operator> <name pos:start="45:36" pos:end="45:54"><name pos:start="45:36" pos:end="45:36">c</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:54">log2_cblk_height</name></name> <operator pos:start="45:56" pos:end="45:56">&gt;</operator> <literal type="number" pos:start="45:58" pos:end="45:59">10</literal> <operator pos:start="45:61" pos:end="45:62">||</operator>

        <name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:26">log2_cblk_width</name></name> <operator pos:start="47:28" pos:end="47:28">+</operator> <name pos:start="47:30" pos:end="47:48"><name pos:start="47:30" pos:end="47:30">c</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:48">log2_cblk_height</name></name> <operator pos:start="47:50" pos:end="47:50">&gt;</operator> <literal type="number" pos:start="47:52" pos:end="47:53">12</literal></expr>)</condition> <block pos:start="47:56" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35">

        <expr_stmt pos:start="49:9" pos:end="49:62"><expr pos:start="49:9" pos:end="49:61"><call pos:start="49:9" pos:end="49:61"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:61">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">avctx</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:40" pos:end="49:60"><expr pos:start="49:40" pos:end="49:60"><literal type="string" pos:start="49:40" pos:end="49:60">"cblk size invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:49"><expr pos:start="57:5" pos:end="57:48"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:5">c</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:17">cblk_style</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:48"><name pos:start="57:21" pos:end="57:39">bytestream_get_byte</name><argument_list pos:start="57:40" pos:end="57:48">(<argument pos:start="57:41" pos:end="57:47"><expr pos:start="57:41" pos:end="57:47"><operator pos:start="57:41" pos:end="57:41">&amp;</operator><name pos:start="57:42" pos:end="57:47"><name pos:start="57:42" pos:end="57:42">s</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:47">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:27">(<expr pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:9">c</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:21">cblk_style</name></name> <operator pos:start="59:23" pos:end="59:24">!=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>)</condition> <block pos:start="59:29" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:36"> <comment type="line" pos:start="59:31" pos:end="59:43">// cblk style</comment>

        <expr_stmt pos:start="61:9" pos:end="61:73"><expr pos:start="61:9" pos:end="61:72"><call pos:start="61:9" pos:end="61:72"><name pos:start="61:9" pos:end="61:29">avpriv_request_sample</name><argument_list pos:start="61:30" pos:end="61:72">(<argument pos:start="61:31" pos:end="61:38"><expr pos:start="61:31" pos:end="61:38"><name pos:start="61:31" pos:end="61:38"><name pos:start="61:31" pos:end="61:31">s</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:38">avctx</name></name></expr></argument>, <argument pos:start="61:41" pos:end="61:71"><expr pos:start="61:41" pos:end="61:71"><literal type="string" pos:start="61:41" pos:end="61:71">"Support for extra cblk styles"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:36">return <expr pos:start="63:16" pos:end="63:35"><name pos:start="63:16" pos:end="63:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:48"><expr pos:start="67:5" pos:end="67:47"><name pos:start="67:5" pos:end="67:16"><name pos:start="67:5" pos:end="67:5">c</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:16">transform</name></name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:47"><name pos:start="67:20" pos:end="67:38">bytestream_get_byte</name><argument_list pos:start="67:39" pos:end="67:47">(<argument pos:start="67:40" pos:end="67:46"><expr pos:start="67:40" pos:end="67:46"><operator pos:start="67:40" pos:end="67:40">&amp;</operator><name pos:start="67:41" pos:end="67:46"><name pos:start="67:41" pos:end="67:41">s</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:46">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="67:50" pos:end="67:75">// DWT transformation type</comment>

    <comment type="block" pos:start="69:5" pos:end="69:54">/* set integer 9/7 DWT in case of BITEXACT flag */</comment>

    <if_stmt pos:start="71:5" pos:end="73:36"><if pos:start="71:5" pos:end="73:36">if <condition pos:start="71:8" pos:end="71:78">(<expr pos:start="71:9" pos:end="71:77"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:24"><name pos:start="71:10" pos:end="71:10">s</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:17">avctx</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:24">flags</name></name> <operator pos:start="71:26" pos:end="71:26">&amp;</operator> <name pos:start="71:28" pos:end="71:46">CODEC_FLAG_BITEXACT</name><operator pos:start="71:47" pos:end="71:47">)</operator> <operator pos:start="71:49" pos:end="71:50">&amp;&amp;</operator> <operator pos:start="71:52" pos:end="71:52">(</operator><name pos:start="71:53" pos:end="71:64"><name pos:start="71:53" pos:end="71:53">c</name><operator pos:start="71:54" pos:end="71:55">-&gt;</operator><name pos:start="71:56" pos:end="71:64">transform</name></name> <operator pos:start="71:66" pos:end="71:67">==</operator> <name pos:start="71:69" pos:end="71:76">FF_DWT97</name><operator pos:start="71:77" pos:end="71:77">)</operator></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:36"><block_content pos:start="73:9" pos:end="73:36">

        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:9">c</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:20">transform</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:35">FF_DWT97_INT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="91:5"><if pos:start="77:5" pos:end="91:5">if <condition pos:start="77:8" pos:end="77:37">(<expr pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:9">c</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">csty</name></name> <operator pos:start="77:17" pos:end="77:17">&amp;</operator> <name pos:start="77:19" pos:end="77:36">JPEG2000_CSTY_PREC</name></expr>)</condition> <block pos:start="77:39" pos:end="91:5">{<block_content pos:start="79:9" pos:end="89:9">

        <decl_stmt pos:start="79:9" pos:end="79:14"><decl pos:start="79:9" pos:end="79:13"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:13">i</name></decl>;</decl_stmt>

        <for pos:start="81:9" pos:end="89:9">for <control pos:start="81:13" pos:end="81:43">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">i</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:38"><expr pos:start="81:21" pos:end="81:37"><name pos:start="81:21" pos:end="81:21">i</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:37"><name pos:start="81:25" pos:end="81:25">c</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:37">nreslevels</name></name></expr>;</condition> <incr pos:start="81:40" pos:end="81:42"><expr pos:start="81:40" pos:end="81:42"><name pos:start="81:40" pos:end="81:40">i</name><operator pos:start="81:41" pos:end="81:42">++</operator></expr></incr>)</control> <block pos:start="81:45" pos:end="89:9">{<block_content pos:start="83:13" pos:end="87:57">

            <expr_stmt pos:start="83:13" pos:end="83:48"><expr pos:start="83:13" pos:end="83:47"><name pos:start="83:13" pos:end="83:16">byte</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:47"><name pos:start="83:20" pos:end="83:38">bytestream_get_byte</name><argument_list pos:start="83:39" pos:end="83:47">(<argument pos:start="83:40" pos:end="83:46"><expr pos:start="83:40" pos:end="83:46"><operator pos:start="83:40" pos:end="83:40">&amp;</operator><name pos:start="83:41" pos:end="83:46"><name pos:start="83:41" pos:end="83:41">s</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:46">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:57"><expr pos:start="85:13" pos:end="85:56"><name pos:start="85:13" pos:end="85:34"><name pos:start="85:13" pos:end="85:13">c</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:31">log2_prec_widths</name><index pos:start="85:32" pos:end="85:34">[<expr pos:start="85:33" pos:end="85:33"><name pos:start="85:33" pos:end="85:33">i</name></expr>]</index></name>  <operator pos:start="85:37" pos:end="85:37">=</operator>  <name pos:start="85:40" pos:end="85:43">byte</name>       <operator pos:start="85:51" pos:end="85:51">&amp;</operator> <literal type="number" pos:start="85:53" pos:end="85:56">0x0F</literal></expr>;</expr_stmt>    <comment type="line" pos:start="85:62" pos:end="85:76">// precinct PPx</comment>

            <expr_stmt pos:start="87:13" pos:end="87:57"><expr pos:start="87:13" pos:end="87:56"><name pos:start="87:13" pos:end="87:35"><name pos:start="87:13" pos:end="87:13">c</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:32">log2_prec_heights</name><index pos:start="87:33" pos:end="87:35">[<expr pos:start="87:34" pos:end="87:34"><name pos:start="87:34" pos:end="87:34">i</name></expr>]</index></name> <operator pos:start="87:37" pos:end="87:37">=</operator> <operator pos:start="87:39" pos:end="87:39">(</operator><name pos:start="87:40" pos:end="87:43">byte</name> <operator pos:start="87:45" pos:end="87:46">&gt;&gt;</operator> <literal type="number" pos:start="87:48" pos:end="87:48">4</literal><operator pos:start="87:49" pos:end="87:49">)</operator> <operator pos:start="87:51" pos:end="87:51">&amp;</operator> <literal type="number" pos:start="87:53" pos:end="87:56">0x0F</literal></expr>;</expr_stmt>    <comment type="line" pos:start="87:62" pos:end="87:76">// precinct PPy</comment>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
