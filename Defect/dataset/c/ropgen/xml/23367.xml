<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23367.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">get_char</name><parameter_list pos:start="1:20" pos:end="1:32">(<parameter pos:start="1:21" pos:end="1:31"><decl pos:start="1:21" pos:end="1:31"><type pos:start="1:21" pos:end="1:30"><name pos:start="1:21" pos:end="1:28">GDBState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:14">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:14">ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="39:5">for<control pos:start="11:8" pos:end="11:11">(<init pos:start="11:9" pos:end="11:9">;</init><condition pos:start="11:10" pos:end="11:10">;</condition><incr/>)</control> <block pos:start="11:13" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:9">

        <expr_stmt pos:start="13:9" pos:end="13:42"><expr pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:41"><name pos:start="13:15" pos:end="13:23">qemu_recv</name><argument_list pos:start="13:24" pos:end="13:41">(<argument pos:start="13:25" pos:end="13:29"><expr pos:start="13:25" pos:end="13:29"><name pos:start="13:25" pos:end="13:29"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:29">fd</name></name></expr></argument>, <argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><operator pos:start="13:32" pos:end="13:32">&amp;</operator><name pos:start="13:33" pos:end="13:34">ch</name></expr></argument>, <argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">1</literal></expr></argument>, <argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="37:9"><if pos:start="15:9" pos:end="25:9">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:17">&lt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>)</condition> <block pos:start="15:22" pos:end="25:9">{<block_content pos:start="17:13" pos:end="23:26">

            <if_stmt pos:start="17:13" pos:end="19:27"><if pos:start="17:13" pos:end="19:27">if <condition pos:start="17:16" pos:end="17:36">(<expr pos:start="17:17" pos:end="17:35"><name pos:start="17:17" pos:end="17:21">errno</name> <operator pos:start="17:23" pos:end="17:24">==</operator> <name pos:start="17:26" pos:end="17:35">ECONNRESET</name></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:27"><block_content pos:start="19:17" pos:end="19:27">

                <expr_stmt pos:start="19:17" pos:end="19:27"><expr pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:21">fd</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <operator pos:start="19:25" pos:end="19:25">-</operator><literal type="number" pos:start="19:26" pos:end="19:26">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="21:13" pos:end="23:26"><if pos:start="21:13" pos:end="23:26">if <condition pos:start="21:16" pos:end="21:50">(<expr pos:start="21:17" pos:end="21:49"><name pos:start="21:17" pos:end="21:21">errno</name> <operator pos:start="21:23" pos:end="21:24">!=</operator> <name pos:start="21:26" pos:end="21:30">EINTR</name> <operator pos:start="21:32" pos:end="21:33">&amp;&amp;</operator> <name pos:start="21:35" pos:end="21:39">errno</name> <operator pos:start="21:41" pos:end="21:42">!=</operator> <name pos:start="21:44" pos:end="21:49">EAGAIN</name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:26"><block_content pos:start="23:17" pos:end="23:26">

                <return pos:start="23:17" pos:end="23:26">return <expr pos:start="23:24" pos:end="23:25"><operator pos:start="23:24" pos:end="23:24">-</operator><literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="25:11" pos:end="33:9">else if <condition pos:start="25:19" pos:end="25:28">(<expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:22">ret</name> <operator pos:start="25:24" pos:end="25:25">==</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>)</condition> <block pos:start="25:30" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:22">

            <expr_stmt pos:start="27:13" pos:end="27:25"><expr pos:start="27:13" pos:end="27:24"><call pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:17">close</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:23"><expr pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:19">s</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:23">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:17">fd</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <operator pos:start="29:21" pos:end="29:21">-</operator><literal type="number" pos:start="29:22" pos:end="29:22">1</literal></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="37:9">else <block pos:start="33:16" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="41:5" pos:end="41:14">return <expr pos:start="41:12" pos:end="41:13"><name pos:start="41:12" pos:end="41:13">ch</name></expr>;</return>

</block_content>}</block></function>
</unit>
