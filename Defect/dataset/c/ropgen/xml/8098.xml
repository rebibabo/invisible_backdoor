<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8098.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:38">iscsi_co_flush</name><parameter_list pos:start="1:39" pos:end="1:60">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:57"><name pos:start="1:40" pos:end="1:55">BlockDriverState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IscsiLun</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:22">iscsilun</name> <init pos:start="5:24" pos:end="5:35">= <expr pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:27">bs</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:35">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">IscsiTask</name></name></type> <name pos:start="7:22" pos:end="7:26">iTask</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><call pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:18">bdrv_is_sg</name><argument_list pos:start="11:19" pos:end="11:22">(<argument pos:start="11:20" pos:end="11:21"><expr pos:start="11:20" pos:end="11:21"><name pos:start="11:20" pos:end="11:21">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:25" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:36">(<expr pos:start="19:9" pos:end="19:35"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:35"><name pos:start="19:10" pos:end="19:17">iscsilun</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:35">force_next_flush</name></name></expr>)</condition> <block pos:start="19:38" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:12">iscsilun</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:30">force_next_flush</name></name> <operator pos:start="25:32" pos:end="25:32">=</operator> <name pos:start="25:34" pos:end="25:38">false</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><call pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:27">iscsi_co_init_iscsitask</name><argument_list pos:start="29:28" pos:end="29:45">(<argument pos:start="29:29" pos:end="29:36"><expr pos:start="29:29" pos:end="29:36"><name pos:start="29:29" pos:end="29:36">iscsilun</name></expr></argument>, <argument pos:start="29:39" pos:end="29:44"><expr pos:start="29:39" pos:end="29:44"><operator pos:start="29:39" pos:end="29:39">&amp;</operator><name pos:start="29:40" pos:end="29:44">iTask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="31:1" pos:end="31:6"><name pos:start="31:1" pos:end="31:5">retry</name>:</label>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="35:78">(<expr pos:start="33:9" pos:end="35:77"><call pos:start="33:9" pos:end="35:69"><name pos:start="33:9" pos:end="33:37">iscsi_synchronizecache10_task</name><argument_list pos:start="33:38" pos:end="35:69">(<argument pos:start="33:39" pos:end="33:53"><expr pos:start="33:39" pos:end="33:53"><name pos:start="33:39" pos:end="33:53"><name pos:start="33:39" pos:end="33:46">iscsilun</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:53">iscsi</name></name></expr></argument>, <argument pos:start="33:56" pos:end="33:68"><expr pos:start="33:56" pos:end="33:68"><name pos:start="33:56" pos:end="33:68"><name pos:start="33:56" pos:end="33:63">iscsilun</name><operator pos:start="33:64" pos:end="33:65">-&gt;</operator><name pos:start="33:66" pos:end="33:68">lun</name></name></expr></argument>, <argument pos:start="33:71" pos:end="33:71"><expr pos:start="33:71" pos:end="33:71"><literal type="number" pos:start="33:71" pos:end="33:71">0</literal></expr></argument>, <argument pos:start="33:74" pos:end="33:74"><expr pos:start="33:74" pos:end="33:74"><literal type="number" pos:start="33:74" pos:end="33:74">0</literal></expr></argument>, <argument pos:start="33:77" pos:end="33:77"><expr pos:start="33:77" pos:end="33:77"><literal type="number" pos:start="33:77" pos:end="33:77">0</literal></expr></argument>,

                                      <argument pos:start="35:39" pos:end="35:39"><expr pos:start="35:39" pos:end="35:39"><literal type="number" pos:start="35:39" pos:end="35:39">0</literal></expr></argument>, <argument pos:start="35:42" pos:end="35:60"><expr pos:start="35:42" pos:end="35:60"><name pos:start="35:42" pos:end="35:60">iscsi_co_generic_cb</name></expr></argument>, <argument pos:start="35:63" pos:end="35:68"><expr pos:start="35:63" pos:end="35:68"><operator pos:start="35:63" pos:end="35:63">&amp;</operator><name pos:start="35:64" pos:end="35:68">iTask</name></expr></argument>)</argument_list></call> <operator pos:start="35:71" pos:end="35:72">==</operator> <name pos:start="35:74" pos:end="35:77">NULL</name></expr>)</condition> <block pos:start="35:80" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:23">

        <return pos:start="37:9" pos:end="37:23">return <expr pos:start="37:16" pos:end="37:22"><operator pos:start="37:16" pos:end="37:16">-</operator><name pos:start="37:17" pos:end="37:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="43:5" pos:end="49:5">while <condition pos:start="43:11" pos:end="43:27">(<expr pos:start="43:12" pos:end="43:26"><operator pos:start="43:12" pos:end="43:12">!</operator><name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:17">iTask</name><operator pos:start="43:18" pos:end="43:18">.</operator><name pos:start="43:19" pos:end="43:26">complete</name></name></expr>)</condition> <block pos:start="43:29" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:31">

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><call pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:24">iscsi_set_events</name><argument_list pos:start="45:25" pos:end="45:34">(<argument pos:start="45:26" pos:end="45:33"><expr pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:33">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><call pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:28">qemu_coroutine_yield</name><argument_list pos:start="47:29" pos:end="47:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:13">iTask</name><operator pos:start="53:14" pos:end="53:14">.</operator><name pos:start="53:15" pos:end="53:18">task</name></name> <operator pos:start="53:20" pos:end="53:21">!=</operator> <name pos:start="53:23" pos:end="53:26">NULL</name></expr>)</condition> <block pos:start="53:29" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:26">

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><call pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:27">scsi_free_scsi_task</name><argument_list pos:start="55:28" pos:end="55:39">(<argument pos:start="55:29" pos:end="55:38"><expr pos:start="55:29" pos:end="55:38"><name pos:start="55:29" pos:end="55:38"><name pos:start="55:29" pos:end="55:33">iTask</name><operator pos:start="55:34" pos:end="55:34">.</operator><name pos:start="55:35" pos:end="55:38">task</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:13">iTask</name><operator pos:start="57:14" pos:end="57:14">.</operator><name pos:start="57:15" pos:end="57:18">task</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:25">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:23">(<expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:13">iTask</name><operator pos:start="63:14" pos:end="63:14">.</operator><name pos:start="63:15" pos:end="63:22">do_retry</name></name></expr>)</condition> <block pos:start="63:25" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:19">

        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:13">iTask</name><operator pos:start="65:14" pos:end="65:14">.</operator><name pos:start="65:15" pos:end="65:22">complete</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:19">goto <name pos:start="67:14" pos:end="67:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:41">(<expr pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:13">iTask</name><operator pos:start="73:14" pos:end="73:14">.</operator><name pos:start="73:15" pos:end="73:20">status</name></name> <operator pos:start="73:22" pos:end="73:23">!=</operator> <name pos:start="73:25" pos:end="73:40">SCSI_STATUS_GOOD</name></expr>)</condition> <block pos:start="73:43" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:20">

        <return pos:start="75:9" pos:end="75:20">return <expr pos:start="75:16" pos:end="75:19"><operator pos:start="75:16" pos:end="75:16">-</operator><name pos:start="75:17" pos:end="75:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
