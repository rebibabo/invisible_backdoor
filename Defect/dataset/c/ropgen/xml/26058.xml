<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26058.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:53"><name pos:start="1:1" pos:end="1:25">tight_detect_smooth_image</name><argument_list pos:start="1:26" pos:end="1:53">(<argument pos:start="1:27" pos:end="1:38">VncState *vs</argument>, <argument pos:start="1:41" pos:end="1:45">int w</argument>, <argument pos:start="1:48" pos:end="1:52">int h</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:65">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">uint</name></type> <name pos:start="5:10" pos:end="5:15">errors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">compression</name> <init pos:start="7:21" pos:end="7:43">= <expr pos:start="7:23" pos:end="7:43"><name pos:start="7:23" pos:end="7:43"><name pos:start="7:23" pos:end="7:24">vs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:31">tight</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:43">compression</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">quality</name> <init pos:start="9:17" pos:end="9:35">= <expr pos:start="9:19" pos:end="9:35"><name pos:start="9:19" pos:end="9:35"><name pos:start="9:19" pos:end="9:20">vs</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:27">tight</name><operator pos:start="9:28" pos:end="9:28">.</operator><name pos:start="9:29" pos:end="9:35">quality</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:22"><name pos:start="13:10" pos:end="13:11">vs</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:15">vd</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:22">lossy</name></name></expr>)</condition> <block pos:start="13:25" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="25:74">(<expr pos:start="21:9" pos:end="25:73"><call pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:30">ds_get_bytes_per_pixel</name><argument_list pos:start="21:31" pos:end="21:38">(<argument pos:start="21:32" pos:end="21:37"><expr pos:start="21:32" pos:end="21:37"><name pos:start="21:32" pos:end="21:37"><name pos:start="21:32" pos:end="21:33">vs</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:37">ds</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:40" pos:end="21:41">==</operator> <literal type="number" pos:start="21:43" pos:end="21:43">1</literal> <operator pos:start="21:45" pos:end="21:46">||</operator>

        <name pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:10">vs</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:20">clientds</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:23">pf</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:39">bytes_per_pixel</name></name> <operator pos:start="23:41" pos:end="23:42">==</operator> <literal type="number" pos:start="23:44" pos:end="23:44">1</literal> <operator pos:start="23:46" pos:end="23:47">||</operator>

        <name pos:start="25:9" pos:end="25:9">w</name> <operator pos:start="25:11" pos:end="25:11">&lt;</operator> <name pos:start="25:13" pos:end="25:38">VNC_TIGHT_DETECT_MIN_WIDTH</name> <operator pos:start="25:40" pos:end="25:41">||</operator> <name pos:start="25:43" pos:end="25:43">h</name> <operator pos:start="25:45" pos:end="25:45">&lt;</operator> <name pos:start="25:47" pos:end="25:73">VNC_TIGHT_DETECT_MIN_HEIGHT</name></expr>)</condition> <block pos:start="25:76" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="49:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:32">(<expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:10">vs</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:17">tight</name><operator pos:start="33:18" pos:end="33:18">.</operator><name pos:start="33:19" pos:end="33:25">quality</name></name> <operator pos:start="33:27" pos:end="33:28">!=</operator> <operator pos:start="33:30" pos:end="33:30">-</operator><literal type="number" pos:start="33:31" pos:end="33:31">1</literal></expr>)</condition> <block pos:start="33:34" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:9">

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:49">(<expr pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:13">w</name> <operator pos:start="35:15" pos:end="35:15">*</operator> <name pos:start="35:17" pos:end="35:17">h</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:48">VNC_TIGHT_JPEG_MIN_RECT_SIZE</name></expr>)</condition> <block pos:start="35:51" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:21">

            <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="49:5">else <block pos:start="41:12" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:9">

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:67">(<expr pos:start="43:13" pos:end="43:66"><name pos:start="43:13" pos:end="43:13">w</name> <operator pos:start="43:15" pos:end="43:15">*</operator> <name pos:start="43:17" pos:end="43:17">h</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:43"><name pos:start="43:21" pos:end="43:30">tight_conf</name><index pos:start="43:31" pos:end="43:43">[<expr pos:start="43:32" pos:end="43:42"><name pos:start="43:32" pos:end="43:42">compression</name></expr>]</index></name><operator pos:start="43:44" pos:end="43:44">.</operator><name pos:start="43:45" pos:end="43:66">gradient_min_rect_size</name></expr>)</condition> <block pos:start="43:69" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:21">

            <return pos:start="45:13" pos:end="45:21">return <expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="53:5" pos:end="77:5"><if pos:start="53:5" pos:end="73:5">if <condition pos:start="53:8" pos:end="53:45">(<expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:10">vs</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:20">clientds</name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:23">pf</name><operator pos:start="53:24" pos:end="53:24">.</operator><name pos:start="53:25" pos:end="53:39">bytes_per_pixel</name></name> <operator pos:start="53:41" pos:end="53:42">==</operator> <literal type="number" pos:start="53:44" pos:end="53:44">4</literal></expr>)</condition> <block pos:start="53:47" pos:end="73:5">{<block_content pos:start="55:9" pos:end="71:9">

        <if_stmt pos:start="55:9" pos:end="71:9"><if pos:start="55:9" pos:end="67:9">if <condition pos:start="55:12" pos:end="55:30">(<expr pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:14">vs</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:21">tight</name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:29">pixel24</name></name></expr>)</condition> <block pos:start="55:32" pos:end="67:9">{<block_content pos:start="57:13" pos:end="65:75">

            <expr_stmt pos:start="57:13" pos:end="57:59"><expr pos:start="57:13" pos:end="57:58"><name pos:start="57:13" pos:end="57:18">errors</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:58"><name pos:start="57:22" pos:end="57:48">tight_detect_smooth_image24</name><argument_list pos:start="57:49" pos:end="57:58">(<argument pos:start="57:50" pos:end="57:51"><expr pos:start="57:50" pos:end="57:51"><name pos:start="57:50" pos:end="57:51">vs</name></expr></argument>, <argument pos:start="57:54" pos:end="57:54"><expr pos:start="57:54" pos:end="57:54"><name pos:start="57:54" pos:end="57:54">w</name></expr></argument>, <argument pos:start="57:57" pos:end="57:57"><expr pos:start="57:57" pos:end="57:57"><name pos:start="57:57" pos:end="57:57">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="63:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:40">(<expr pos:start="59:17" pos:end="59:39"><name pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:18">vs</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:25">tight</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:33">quality</name></name> <operator pos:start="59:35" pos:end="59:36">!=</operator> <operator pos:start="59:38" pos:end="59:38">-</operator><literal type="number" pos:start="59:39" pos:end="59:39">1</literal></expr>)</condition> <block pos:start="59:42" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:71">

                <return pos:start="61:17" pos:end="61:71">return <expr pos:start="61:24" pos:end="61:70"><operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:30">errors</name> <operator pos:start="61:32" pos:end="61:32">&lt;</operator> <name pos:start="61:34" pos:end="61:52"><name pos:start="61:34" pos:end="61:43">tight_conf</name><index pos:start="61:44" pos:end="61:52">[<expr pos:start="61:45" pos:end="61:51"><name pos:start="61:45" pos:end="61:51">quality</name></expr>]</index></name><operator pos:start="61:53" pos:end="61:53">.</operator><name pos:start="61:54" pos:end="61:69">jpeg_threshold24</name><operator pos:start="61:70" pos:end="61:70">)</operator></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="65:13" pos:end="65:75">return <expr pos:start="65:20" pos:end="65:74"><operator pos:start="65:20" pos:end="65:20">(</operator><name pos:start="65:21" pos:end="65:26">errors</name> <operator pos:start="65:28" pos:end="65:28">&lt;</operator> <name pos:start="65:30" pos:end="65:52"><name pos:start="65:30" pos:end="65:39">tight_conf</name><index pos:start="65:40" pos:end="65:52">[<expr pos:start="65:41" pos:end="65:51"><name pos:start="65:41" pos:end="65:51">compression</name></expr>]</index></name><operator pos:start="65:53" pos:end="65:53">.</operator><name pos:start="65:54" pos:end="65:73">gradient_threshold24</name><operator pos:start="65:74" pos:end="65:74">)</operator></expr>;</return>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="71:9">else <block pos:start="67:16" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:59">

            <expr_stmt pos:start="69:13" pos:end="69:59"><expr pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:18">errors</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:58"><name pos:start="69:22" pos:end="69:48">tight_detect_smooth_image32</name><argument_list pos:start="69:49" pos:end="69:58">(<argument pos:start="69:50" pos:end="69:51"><expr pos:start="69:50" pos:end="69:51"><name pos:start="69:50" pos:end="69:51">vs</name></expr></argument>, <argument pos:start="69:54" pos:end="69:54"><expr pos:start="69:54" pos:end="69:54"><name pos:start="69:54" pos:end="69:54">w</name></expr></argument>, <argument pos:start="69:57" pos:end="69:57"><expr pos:start="69:57" pos:end="69:57"><name pos:start="69:57" pos:end="69:57">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="77:5">else <block pos:start="73:12" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:55">

        <expr_stmt pos:start="75:9" pos:end="75:55"><expr pos:start="75:9" pos:end="75:54"><name pos:start="75:9" pos:end="75:14">errors</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <call pos:start="75:18" pos:end="75:54"><name pos:start="75:18" pos:end="75:44">tight_detect_smooth_image16</name><argument_list pos:start="75:45" pos:end="75:54">(<argument pos:start="75:46" pos:end="75:47"><expr pos:start="75:46" pos:end="75:47"><name pos:start="75:46" pos:end="75:47">vs</name></expr></argument>, <argument pos:start="75:50" pos:end="75:50"><expr pos:start="75:50" pos:end="75:50"><name pos:start="75:50" pos:end="75:50">w</name></expr></argument>, <argument pos:start="75:53" pos:end="75:53"><expr pos:start="75:53" pos:end="75:53"><name pos:start="75:53" pos:end="75:53">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:22">(<expr pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:15">quality</name> <operator pos:start="79:17" pos:end="79:18">!=</operator> <operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>)</condition> <block pos:start="79:24" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:61">

        <return pos:start="81:9" pos:end="81:61">return <expr pos:start="81:16" pos:end="81:60"><operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:22">errors</name> <operator pos:start="81:24" pos:end="81:24">&lt;</operator> <name pos:start="81:26" pos:end="81:44"><name pos:start="81:26" pos:end="81:35">tight_conf</name><index pos:start="81:36" pos:end="81:44">[<expr pos:start="81:37" pos:end="81:43"><name pos:start="81:37" pos:end="81:43">quality</name></expr>]</index></name><operator pos:start="81:45" pos:end="81:45">.</operator><name pos:start="81:46" pos:end="81:59">jpeg_threshold</name><operator pos:start="81:60" pos:end="81:60">)</operator></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="85:5" pos:end="85:65">return <expr pos:start="85:12" pos:end="85:64"><operator pos:start="85:12" pos:end="85:12">(</operator><name pos:start="85:13" pos:end="85:18">errors</name> <operator pos:start="85:20" pos:end="85:20">&lt;</operator> <name pos:start="85:22" pos:end="85:44"><name pos:start="85:22" pos:end="85:31">tight_conf</name><index pos:start="85:32" pos:end="85:44">[<expr pos:start="85:33" pos:end="85:43"><name pos:start="85:33" pos:end="85:43">compression</name></expr>]</index></name><operator pos:start="85:45" pos:end="85:45">.</operator><name pos:start="85:46" pos:end="85:63">gradient_threshold</name><operator pos:start="85:64" pos:end="85:64">)</operator></expr>;</return>

</block_content>}</block>
</unit>
