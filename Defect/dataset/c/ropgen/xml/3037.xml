<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3037.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">PXA2xxState</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:24">pxa270_init</name><parameter_list pos:start="1:25" pos:end="1:71">(<parameter pos:start="1:26" pos:end="1:48"><decl pos:start="1:26" pos:end="1:48"><type pos:start="1:26" pos:end="1:48"><name pos:start="1:26" pos:end="1:33">unsigned</name> <name pos:start="1:35" pos:end="1:37">int</name></type> <name pos:start="1:39" pos:end="1:48">sdram_size</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:70"><decl pos:start="1:51" pos:end="1:70"><type pos:start="1:51" pos:end="1:70"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:70">revision</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">PXA2xxState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">iomemtype</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">DriveInfo</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">dinfo</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:58"><expr pos:start="11:5" pos:end="11:57"><name pos:start="11:5" pos:end="11:5">s</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:20">PXA2xxState</name> <operator pos:start="11:22" pos:end="11:22">*</operator><operator pos:start="11:23" pos:end="11:23">)</operator> <call pos:start="11:25" pos:end="11:57"><name pos:start="11:25" pos:end="11:36">qemu_mallocz</name><argument_list pos:start="11:37" pos:end="11:57">(<argument pos:start="11:38" pos:end="11:56"><expr pos:start="11:38" pos:end="11:56"><sizeof pos:start="11:38" pos:end="11:56">sizeof<argument_list pos:start="11:44" pos:end="11:56">(<argument pos:start="11:45" pos:end="11:55"><expr pos:start="11:45" pos:end="11:55"><name pos:start="11:45" pos:end="11:55">PXA2xxState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:50">(<expr pos:start="15:9" pos:end="15:49"><name pos:start="15:9" pos:end="15:16">revision</name> <operator pos:start="15:18" pos:end="15:19">&amp;&amp;</operator> <call pos:start="15:21" pos:end="15:49"><name pos:start="15:21" pos:end="15:27">strncmp</name><argument_list pos:start="15:28" pos:end="15:49">(<argument pos:start="15:29" pos:end="15:36"><expr pos:start="15:29" pos:end="15:36"><name pos:start="15:29" pos:end="15:36">revision</name></expr></argument>, <argument pos:start="15:39" pos:end="15:45"><expr pos:start="15:39" pos:end="15:45"><literal type="string" pos:start="15:39" pos:end="15:45">"pxa27"</literal></expr></argument>, <argument pos:start="15:48" pos:end="15:48"><expr pos:start="15:48" pos:end="15:48"><literal type="number" pos:start="15:48" pos:end="15:48">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:52" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:16">

        <expr_stmt pos:start="17:9" pos:end="17:66"><expr pos:start="17:9" pos:end="17:65"><call pos:start="17:9" pos:end="17:65"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:65">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:64"><expr pos:start="17:25" pos:end="17:64"><literal type="string" pos:start="17:25" pos:end="17:64">"Machine requires a PXA27x processor.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><call pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">exit</name><argument_list pos:start="19:13" pos:end="19:15">(<argument pos:start="19:14" pos:end="19:14"><expr pos:start="19:14" pos:end="19:14"><literal type="number" pos:start="19:14" pos:end="19:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:28"><if pos:start="23:5" pos:end="25:28">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:17">revision</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:28"><block_content pos:start="25:9" pos:end="25:28">

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:16">revision</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <literal type="string" pos:start="25:20" pos:end="25:27">"pxa270"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">env</name></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:31"><name pos:start="29:14" pos:end="29:21">cpu_init</name><argument_list pos:start="29:22" pos:end="29:31">(<argument pos:start="29:23" pos:end="29:30"><expr pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:30">revision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:15"><name pos:start="31:10" pos:end="31:10">s</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:15">env</name></name></expr>)</condition> <block pos:start="31:18" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:16">

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><call pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="33:58">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:57"><expr pos:start="33:25" pos:end="33:57"><literal type="string" pos:start="33:25" pos:end="33:57">"Unable to find CPU definition\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><call pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:12">exit</name><argument_list pos:start="35:13" pos:end="35:15">(<argument pos:start="35:14" pos:end="35:14"><expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:57"><expr pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:12">reset</name></name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:53"><name pos:start="39:16" pos:end="39:33">qemu_allocate_irqs</name><argument_list pos:start="39:34" pos:end="39:53">(<argument pos:start="39:35" pos:end="39:46"><expr pos:start="39:35" pos:end="39:46"><name pos:start="39:35" pos:end="39:46">pxa2xx_reset</name></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><name pos:start="39:49" pos:end="39:49">s</name></expr></argument>, <argument pos:start="39:52" pos:end="39:52"><expr pos:start="39:52" pos:end="39:52"><literal type="number" pos:start="39:52" pos:end="39:52">1</literal></expr></argument>)</argument_list></call><index pos:start="39:54" pos:end="39:56">[<expr pos:start="39:55" pos:end="39:55"><literal type="number" pos:start="39:55" pos:end="39:55">0</literal></expr>]</index></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:41">/* SDRAM &amp; Internal Memory Storage */</comment>

    <expr_stmt pos:start="45:5" pos:end="49:73"><expr pos:start="45:5" pos:end="49:72"><call pos:start="45:5" pos:end="49:72"><name pos:start="45:5" pos:end="45:32">cpu_register_physical_memory</name><argument_list pos:start="45:33" pos:end="49:72">(<argument pos:start="45:34" pos:end="45:50"><expr pos:start="45:34" pos:end="45:50"><name pos:start="45:34" pos:end="45:50">PXA2XX_SDRAM_BASE</name></expr></argument>,

                    <argument pos:start="47:21" pos:end="47:30"><expr pos:start="47:21" pos:end="47:30"><name pos:start="47:21" pos:end="47:30">sdram_size</name></expr></argument>, <argument pos:start="47:33" pos:end="49:71"><expr pos:start="47:33" pos:end="49:71"><call pos:start="47:33" pos:end="49:58"><name pos:start="47:33" pos:end="47:46">qemu_ram_alloc</name><argument_list pos:start="47:47" pos:end="49:58">(<argument pos:start="47:48" pos:end="47:51"><expr pos:start="47:48" pos:end="47:51"><name pos:start="47:48" pos:end="47:51">NULL</name></expr></argument>, <argument pos:start="47:54" pos:end="47:67"><expr pos:start="47:54" pos:end="47:67"><literal type="string" pos:start="47:54" pos:end="47:67">"pxa270.sdram"</literal></expr></argument>,

                                               <argument pos:start="49:48" pos:end="49:57"><expr pos:start="49:48" pos:end="49:57"><name pos:start="49:48" pos:end="49:57">sdram_size</name></expr></argument>)</argument_list></call> <operator pos:start="49:60" pos:end="49:60">|</operator> <name pos:start="49:62" pos:end="49:71">IO_MEM_RAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="55:67"><expr pos:start="51:5" pos:end="55:66"><call pos:start="51:5" pos:end="55:66"><name pos:start="51:5" pos:end="51:32">cpu_register_physical_memory</name><argument_list pos:start="51:33" pos:end="55:66">(<argument pos:start="51:34" pos:end="51:53"><expr pos:start="51:34" pos:end="51:53"><name pos:start="51:34" pos:end="51:53">PXA2XX_INTERNAL_BASE</name></expr></argument>,

                    <argument pos:start="53:21" pos:end="53:27"><expr pos:start="53:21" pos:end="53:27"><literal type="number" pos:start="53:21" pos:end="53:27">0x40000</literal></expr></argument>, <argument pos:start="53:30" pos:end="55:65"><expr pos:start="53:30" pos:end="55:65"><call pos:start="53:30" pos:end="55:52"><name pos:start="53:30" pos:end="53:43">qemu_ram_alloc</name><argument_list pos:start="53:44" pos:end="55:52">(<argument pos:start="53:45" pos:end="53:48"><expr pos:start="53:45" pos:end="53:48"><name pos:start="53:45" pos:end="53:48">NULL</name></expr></argument>, <argument pos:start="53:51" pos:end="53:67"><expr pos:start="53:51" pos:end="53:67"><literal type="string" pos:start="53:51" pos:end="53:67">"pxa270.internal"</literal></expr></argument>,

                                            <argument pos:start="55:45" pos:end="55:51"><expr pos:start="55:45" pos:end="55:51"><literal type="number" pos:start="55:45" pos:end="55:51">0x40000</literal></expr></argument>)</argument_list></call> <operator pos:start="55:54" pos:end="55:54">|</operator> <name pos:start="55:56" pos:end="55:65">IO_MEM_RAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:10"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:10">pic</name></name> <operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:48"><name pos:start="59:14" pos:end="59:28">pxa2xx_pic_init</name><argument_list pos:start="59:29" pos:end="59:48">(<argument pos:start="59:30" pos:end="59:39"><expr pos:start="59:30" pos:end="59:39"><literal type="number" pos:start="59:30" pos:end="59:39">0x40d00000</literal></expr></argument>, <argument pos:start="59:42" pos:end="59:47"><expr pos:start="59:42" pos:end="59:47"><name pos:start="59:42" pos:end="59:47"><name pos:start="59:42" pos:end="59:42">s</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:47">env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:65"><expr pos:start="63:5" pos:end="63:64"><name pos:start="63:5" pos:end="63:10"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:10">dma</name></name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:64"><name pos:start="63:14" pos:end="63:28">pxa27x_dma_init</name><argument_list pos:start="63:29" pos:end="63:64">(<argument pos:start="63:30" pos:end="63:39"><expr pos:start="63:30" pos:end="63:39"><literal type="number" pos:start="63:30" pos:end="63:39">0x40000000</literal></expr></argument>, <argument pos:start="63:42" pos:end="63:63"><expr pos:start="63:42" pos:end="63:63"><name pos:start="63:42" pos:end="63:63"><name pos:start="63:42" pos:end="63:42">s</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:47">pic</name><index pos:start="63:48" pos:end="63:63">[<expr pos:start="63:49" pos:end="63:62"><name pos:start="63:49" pos:end="63:62">PXA2XX_PIC_DMA</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="69:49"><expr pos:start="67:5" pos:end="69:48"><call pos:start="67:5" pos:end="69:48"><name pos:start="67:5" pos:end="67:21">pxa27x_timer_init</name><argument_list pos:start="67:22" pos:end="69:48">(<argument pos:start="67:23" pos:end="67:32"><expr pos:start="67:23" pos:end="67:32"><literal type="number" pos:start="67:23" pos:end="67:32">0x40a00000</literal></expr></argument>, <argument pos:start="67:35" pos:end="67:59"><expr pos:start="67:35" pos:end="67:59"><operator pos:start="67:35" pos:end="67:35">&amp;</operator><name pos:start="67:36" pos:end="67:59"><name pos:start="67:36" pos:end="67:36">s</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:41">pic</name><index pos:start="67:42" pos:end="67:59">[<expr pos:start="67:43" pos:end="67:58"><name pos:start="67:43" pos:end="67:58">PXA2XX_PIC_OST_0</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="69:21" pos:end="69:47"><expr pos:start="69:21" pos:end="69:47"><name pos:start="69:21" pos:end="69:47"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:26">pic</name><index pos:start="69:27" pos:end="69:47">[<expr pos:start="69:28" pos:end="69:46"><name pos:start="69:28" pos:end="69:46">PXA27X_PIC_OST_4_11</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:64"><expr pos:start="73:5" pos:end="73:63"><name pos:start="73:5" pos:end="73:11"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:11">gpio</name></name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:63"><name pos:start="73:15" pos:end="73:30">pxa2xx_gpio_init</name><argument_list pos:start="73:31" pos:end="73:63">(<argument pos:start="73:32" pos:end="73:41"><expr pos:start="73:32" pos:end="73:41"><literal type="number" pos:start="73:32" pos:end="73:41">0x40e00000</literal></expr></argument>, <argument pos:start="73:44" pos:end="73:49"><expr pos:start="73:44" pos:end="73:49"><name pos:start="73:44" pos:end="73:49"><name pos:start="73:44" pos:end="73:44">s</name><operator pos:start="73:45" pos:end="73:46">-&gt;</operator><name pos:start="73:47" pos:end="73:49">env</name></name></expr></argument>, <argument pos:start="73:52" pos:end="73:57"><expr pos:start="73:52" pos:end="73:57"><name pos:start="73:52" pos:end="73:57"><name pos:start="73:52" pos:end="73:52">s</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:57">pic</name></name></expr></argument>, <argument pos:start="73:60" pos:end="73:62"><expr pos:start="73:60" pos:end="73:62"><literal type="number" pos:start="73:60" pos:end="73:62">121</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:9">dinfo</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <call pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:21">drive_get</name><argument_list pos:start="77:22" pos:end="77:34">(<argument pos:start="77:23" pos:end="77:27"><expr pos:start="77:23" pos:end="77:27"><name pos:start="77:23" pos:end="77:27">IF_SD</name></expr></argument>, <argument pos:start="77:30" pos:end="77:30"><expr pos:start="77:30" pos:end="77:30"><literal type="number" pos:start="77:30" pos:end="77:30">0</literal></expr></argument>, <argument pos:start="77:33" pos:end="77:33"><expr pos:start="77:33" pos:end="77:33"><literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:15">(<expr pos:start="79:9" pos:end="79:14"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:14">dinfo</name></expr>)</condition> <block pos:start="79:17" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:16">

        <expr_stmt pos:start="81:9" pos:end="81:64"><expr pos:start="81:9" pos:end="81:63"><call pos:start="81:9" pos:end="81:63"><name pos:start="81:9" pos:end="81:15">fprintf</name><argument_list pos:start="81:16" pos:end="81:63">(<argument pos:start="81:17" pos:end="81:22"><expr pos:start="81:17" pos:end="81:22"><name pos:start="81:17" pos:end="81:22">stderr</name></expr></argument>, <argument pos:start="81:25" pos:end="81:62"><expr pos:start="81:25" pos:end="81:62"><literal type="string" pos:start="81:25" pos:end="81:62">"qemu: missing SecureDigital device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:16"><expr pos:start="83:9" pos:end="83:15"><call pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:12">exit</name><argument_list pos:start="83:13" pos:end="83:15">(<argument pos:start="83:14" pos:end="83:14"><expr pos:start="83:14" pos:end="83:14"><literal type="number" pos:start="83:14" pos:end="83:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:62"><expr pos:start="87:5" pos:end="89:61"><name pos:start="87:5" pos:end="87:10"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:10">mmc</name></name> <operator pos:start="87:12" pos:end="87:12">=</operator> <call pos:start="87:14" pos:end="89:61"><name pos:start="87:14" pos:end="87:29">pxa2xx_mmci_init</name><argument_list pos:start="87:30" pos:end="89:61">(<argument pos:start="87:31" pos:end="87:40"><expr pos:start="87:31" pos:end="87:40"><literal type="number" pos:start="87:31" pos:end="87:40">0x41100000</literal></expr></argument>, <argument pos:start="87:43" pos:end="87:53"><expr pos:start="87:43" pos:end="87:53"><name pos:start="87:43" pos:end="87:53"><name pos:start="87:43" pos:end="87:47">dinfo</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:53">bdrv</name></name></expr></argument>,

                              <argument pos:start="89:31" pos:end="89:52"><expr pos:start="89:31" pos:end="89:52"><name pos:start="89:31" pos:end="89:52"><name pos:start="89:31" pos:end="89:31">s</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:36">pic</name><index pos:start="89:37" pos:end="89:52">[<expr pos:start="89:38" pos:end="89:51"><name pos:start="89:38" pos:end="89:51">PXA2XX_PIC_MMC</name></expr>]</index></name></expr></argument>, <argument pos:start="89:55" pos:end="89:60"><expr pos:start="89:55" pos:end="89:60"><name pos:start="89:55" pos:end="89:60"><name pos:start="89:55" pos:end="89:55">s</name><operator pos:start="89:56" pos:end="89:57">-&gt;</operator><name pos:start="89:58" pos:end="89:60">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="93:5" pos:end="106:0">for <control pos:start="93:9" pos:end="93:47">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:41"><expr pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:32"><name pos:start="93:17" pos:end="93:29">pxa270_serial</name><index pos:start="93:30" pos:end="93:32">[<expr pos:start="93:31" pos:end="93:31"><name pos:start="93:31" pos:end="93:31">i</name></expr>]</index></name><operator pos:start="93:33" pos:end="93:33">.</operator><name pos:start="93:34" pos:end="93:40">io_base</name></expr>;</condition> <incr pos:start="93:43" pos:end="93:46"><expr pos:start="93:43" pos:end="93:46"><name pos:start="93:43" pos:end="93:43">i</name> <operator pos:start="93:45" pos:end="93:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:9" pos:end="106:0"><block_content pos:start="95:9" pos:end="106:0">

        <if_stmt pos:start="95:9" pos:end="106:0"><if pos:start="95:9" pos:end="106:0">if <condition pos:start="95:12" pos:end="98:0">(<expr pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:22">serial_hds</name><index pos:start="95:23" pos:end="95:25">[<expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="106:0"><block_content pos:start="99:13" pos:end="106:0">

<cpp:ifdef pos:start="97:1" pos:end="97:29">#<cpp:directive pos:start="97:2" pos:end="97:6">ifdef</cpp:directive> <name pos:start="97:8" pos:end="97:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

            <expr_stmt pos:start="99:13" pos:end="106:0"><expr pos:start="99:13" pos:end="103:47"><call pos:start="99:13" pos:end="103:47"><name pos:start="99:13" pos:end="99:26">serial_mm_init</name><argument_list pos:start="99:27" pos:end="103:47">(<argument pos:start="99:28" pos:end="99:51"><expr pos:start="99:28" pos:end="99:51"><name pos:start="99:28" pos:end="99:43"><name pos:start="99:28" pos:end="99:40">pxa270_serial</name><index pos:start="99:41" pos:end="99:43">[<expr pos:start="99:42" pos:end="99:42"><name pos:start="99:42" pos:end="99:42">i</name></expr>]</index></name><operator pos:start="99:44" pos:end="99:44">.</operator><name pos:start="99:45" pos:end="99:51">io_base</name></expr></argument>, <argument pos:start="99:54" pos:end="99:54"><expr pos:start="99:54" pos:end="99:54"><literal type="number" pos:start="99:54" pos:end="99:54">2</literal></expr></argument>,

                           <argument pos:start="101:28" pos:end="101:56"><expr pos:start="101:28" pos:end="101:56"><name pos:start="101:28" pos:end="101:56"><name pos:start="101:28" pos:end="101:28">s</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:33">pic</name><index pos:start="101:34" pos:end="101:56">[<expr pos:start="101:35" pos:end="101:55"><name pos:start="101:35" pos:end="101:50"><name pos:start="101:35" pos:end="101:47">pxa270_serial</name><index pos:start="101:48" pos:end="101:50">[<expr pos:start="101:49" pos:end="101:49"><name pos:start="101:49" pos:end="101:49">i</name></expr>]</index></name><operator pos:start="101:51" pos:end="101:51">.</operator><name pos:start="101:52" pos:end="101:55">irqn</name></expr>]</index></name></expr></argument>, <argument pos:start="101:59" pos:end="101:69"><expr pos:start="101:59" pos:end="101:69"><literal type="number" pos:start="101:59" pos:end="101:66">14857000</literal><operator pos:start="101:67" pos:end="101:67">/</operator><literal type="number" pos:start="101:68" pos:end="101:69">16</literal></expr></argument>,

                           <argument pos:start="103:28" pos:end="103:40"><expr pos:start="103:28" pos:end="103:40"><name pos:start="103:28" pos:end="103:40"><name pos:start="103:28" pos:end="103:37">serial_hds</name><index pos:start="103:38" pos:end="103:40">[<expr pos:start="103:39" pos:end="103:39"><name pos:start="103:39" pos:end="103:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="103:43" pos:end="103:43"><expr pos:start="103:43" pos:end="103:43"><literal type="number" pos:start="103:43" pos:end="103:43">1</literal></expr></argument>, <argument pos:start="103:46" pos:end="103:46"><expr pos:start="103:46" pos:end="103:46"><literal type="number" pos:start="103:46" pos:end="103:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

<cpp:else pos:start="105:1" pos:end="105:5">#<cpp:directive pos:start="105:2" pos:end="105:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="107:13" pos:end="114:0"><expr pos:start="107:13" pos:end="111:47"><call pos:start="107:13" pos:end="111:47"><name pos:start="107:13" pos:end="107:26">serial_mm_init</name><argument_list pos:start="107:27" pos:end="111:47">(<argument pos:start="107:28" pos:end="107:51"><expr pos:start="107:28" pos:end="107:51"><name pos:start="107:28" pos:end="107:43"><name pos:start="107:28" pos:end="107:40">pxa270_serial</name><index pos:start="107:41" pos:end="107:43">[<expr pos:start="107:42" pos:end="107:42"><name pos:start="107:42" pos:end="107:42">i</name></expr>]</index></name><operator pos:start="107:44" pos:end="107:44">.</operator><name pos:start="107:45" pos:end="107:51">io_base</name></expr></argument>, <argument pos:start="107:54" pos:end="107:54"><expr pos:start="107:54" pos:end="107:54"><literal type="number" pos:start="107:54" pos:end="107:54">2</literal></expr></argument>,

                           <argument pos:start="109:28" pos:end="109:56"><expr pos:start="109:28" pos:end="109:56"><name pos:start="109:28" pos:end="109:56"><name pos:start="109:28" pos:end="109:28">s</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:33">pic</name><index pos:start="109:34" pos:end="109:56">[<expr pos:start="109:35" pos:end="109:55"><name pos:start="109:35" pos:end="109:50"><name pos:start="109:35" pos:end="109:47">pxa270_serial</name><index pos:start="109:48" pos:end="109:50">[<expr pos:start="109:49" pos:end="109:49"><name pos:start="109:49" pos:end="109:49">i</name></expr>]</index></name><operator pos:start="109:51" pos:end="109:51">.</operator><name pos:start="109:52" pos:end="109:55">irqn</name></expr>]</index></name></expr></argument>, <argument pos:start="109:59" pos:end="109:69"><expr pos:start="109:59" pos:end="109:69"><literal type="number" pos:start="109:59" pos:end="109:66">14857000</literal><operator pos:start="109:67" pos:end="109:67">/</operator><literal type="number" pos:start="109:68" pos:end="109:69">16</literal></expr></argument>,

                           <argument pos:start="111:28" pos:end="111:40"><expr pos:start="111:28" pos:end="111:40"><name pos:start="111:28" pos:end="111:40"><name pos:start="111:28" pos:end="111:37">serial_hds</name><index pos:start="111:38" pos:end="111:40">[<expr pos:start="111:39" pos:end="111:39"><name pos:start="111:39" pos:end="111:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="111:43" pos:end="111:43"><expr pos:start="111:43" pos:end="111:43"><literal type="number" pos:start="111:43" pos:end="111:43">1</literal></expr></argument>, <argument pos:start="111:46" pos:end="111:46"><expr pos:start="111:46" pos:end="111:46"><literal type="number" pos:start="111:46" pos:end="111:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="115:9" pos:end="117:18"><else pos:start="115:9" pos:end="117:18">else<block type="pseudo" pos:start="117:13" pos:end="117:18"><block_content pos:start="117:13" pos:end="117:18">

            <break pos:start="117:13" pos:end="117:18">break;</break></block_content></block></else></if_stmt>

    <if_stmt pos:start="119:5" pos:end="123:47"><if pos:start="119:5" pos:end="123:47">if <condition pos:start="119:8" pos:end="119:22">(<expr pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:18">serial_hds</name><index pos:start="119:19" pos:end="119:21">[<expr pos:start="119:20" pos:end="119:20"><name pos:start="119:20" pos:end="119:20">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="123:47"><block_content pos:start="121:9" pos:end="123:47">

        <expr_stmt pos:start="121:9" pos:end="123:47"><expr pos:start="121:9" pos:end="123:46"><name pos:start="121:9" pos:end="121:14"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:14">fir</name></name> <operator pos:start="121:16" pos:end="121:16">=</operator> <call pos:start="121:18" pos:end="123:46"><name pos:start="121:18" pos:end="121:32">pxa2xx_fir_init</name><argument_list pos:start="121:33" pos:end="123:46">(<argument pos:start="121:34" pos:end="121:43"><expr pos:start="121:34" pos:end="121:43"><literal type="number" pos:start="121:34" pos:end="121:43">0x40800000</literal></expr></argument>, <argument pos:start="121:46" pos:end="121:67"><expr pos:start="121:46" pos:end="121:67"><name pos:start="121:46" pos:end="121:67"><name pos:start="121:46" pos:end="121:46">s</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:51">pic</name><index pos:start="121:52" pos:end="121:67">[<expr pos:start="121:53" pos:end="121:66"><name pos:start="121:53" pos:end="121:66">PXA2XX_PIC_ICP</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="123:25" pos:end="123:30"><expr pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:25">s</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:30">dma</name></name></expr></argument>, <argument pos:start="123:33" pos:end="123:45"><expr pos:start="123:33" pos:end="123:45"><name pos:start="123:33" pos:end="123:45"><name pos:start="123:33" pos:end="123:42">serial_hds</name><index pos:start="123:43" pos:end="123:45">[<expr pos:start="123:44" pos:end="123:44"><name pos:start="123:44" pos:end="123:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:66"><expr pos:start="127:5" pos:end="127:65"><name pos:start="127:5" pos:end="127:10"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:10">lcd</name></name> <operator pos:start="127:12" pos:end="127:12">=</operator> <call pos:start="127:14" pos:end="127:65"><name pos:start="127:14" pos:end="127:29">pxa2xx_lcdc_init</name><argument_list pos:start="127:30" pos:end="127:65">(<argument pos:start="127:31" pos:end="127:40"><expr pos:start="127:31" pos:end="127:40"><literal type="number" pos:start="127:31" pos:end="127:40">0x44000000</literal></expr></argument>, <argument pos:start="127:43" pos:end="127:64"><expr pos:start="127:43" pos:end="127:64"><name pos:start="127:43" pos:end="127:64"><name pos:start="127:43" pos:end="127:43">s</name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:48">pic</name><index pos:start="127:49" pos:end="127:64">[<expr pos:start="127:50" pos:end="127:63"><name pos:start="127:50" pos:end="127:63">PXA2XX_PIC_LCD</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:28"><expr pos:start="131:5" pos:end="131:27"><name pos:start="131:5" pos:end="131:14"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:14">cm_base</name></name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="number" pos:start="131:18" pos:end="131:27">0x41300000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:39"><expr pos:start="133:5" pos:end="133:38"><name pos:start="133:5" pos:end="133:25"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:14">cm_regs</name><index pos:start="133:15" pos:end="133:25">[<expr pos:start="133:16" pos:end="133:24"><name pos:start="133:16" pos:end="133:19">CCCR</name> <operator pos:start="133:21" pos:end="133:22">&gt;&gt;</operator> <literal type="number" pos:start="133:24" pos:end="133:24">2</literal></expr>]</index></name> <operator pos:start="133:27" pos:end="133:27">=</operator> <literal type="number" pos:start="133:29" pos:end="133:38">0x02000210</literal></expr>;</expr_stmt>	<comment type="block" pos:start="133:41" pos:end="133:55">/* 416.0 MHz */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:27"><expr pos:start="135:5" pos:end="135:26"><name pos:start="135:5" pos:end="135:13"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:13">clkcfg</name></name> <operator pos:start="135:15" pos:end="135:15">=</operator> <literal type="number" pos:start="135:17" pos:end="135:26">0x00000009</literal></expr>;</expr_stmt>		<comment type="block" pos:start="135:41" pos:end="135:63">/* Turbo mode active */</comment>

    <expr_stmt pos:start="137:5" pos:end="139:64"><expr pos:start="137:5" pos:end="139:63"><name pos:start="137:5" pos:end="137:13">iomemtype</name> <operator pos:start="137:15" pos:end="137:15">=</operator> <call pos:start="137:17" pos:end="139:63"><name pos:start="137:17" pos:end="137:38">cpu_register_io_memory</name><argument_list pos:start="137:39" pos:end="139:63">(<argument pos:start="137:40" pos:end="137:55"><expr pos:start="137:40" pos:end="137:55"><name pos:start="137:40" pos:end="137:55">pxa2xx_cm_readfn</name></expr></argument>,

                    <argument pos:start="139:21" pos:end="139:37"><expr pos:start="139:21" pos:end="139:37"><name pos:start="139:21" pos:end="139:37">pxa2xx_cm_writefn</name></expr></argument>, <argument pos:start="139:40" pos:end="139:40"><expr pos:start="139:40" pos:end="139:40"><name pos:start="139:40" pos:end="139:40">s</name></expr></argument>, <argument pos:start="139:43" pos:end="139:62"><expr pos:start="139:43" pos:end="139:62"><name pos:start="139:43" pos:end="139:62">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:64"><expr pos:start="141:5" pos:end="141:63"><call pos:start="141:5" pos:end="141:63"><name pos:start="141:5" pos:end="141:32">cpu_register_physical_memory</name><argument_list pos:start="141:33" pos:end="141:63">(<argument pos:start="141:34" pos:end="141:43"><expr pos:start="141:34" pos:end="141:43"><name pos:start="141:34" pos:end="141:43"><name pos:start="141:34" pos:end="141:34">s</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:43">cm_base</name></name></expr></argument>, <argument pos:start="141:46" pos:end="141:51"><expr pos:start="141:46" pos:end="141:51"><literal type="number" pos:start="141:46" pos:end="141:51">0x1000</literal></expr></argument>, <argument pos:start="141:54" pos:end="141:62"><expr pos:start="141:54" pos:end="141:62"><name pos:start="141:54" pos:end="141:62">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:80"><expr pos:start="143:5" pos:end="143:79"><call pos:start="143:5" pos:end="143:79"><name pos:start="143:5" pos:end="143:19">register_savevm</name><argument_list pos:start="143:20" pos:end="143:79">(<argument pos:start="143:21" pos:end="143:24"><expr pos:start="143:21" pos:end="143:24"><name pos:start="143:21" pos:end="143:24">NULL</name></expr></argument>, <argument pos:start="143:27" pos:end="143:37"><expr pos:start="143:27" pos:end="143:37"><literal type="string" pos:start="143:27" pos:end="143:37">"pxa2xx_cm"</literal></expr></argument>, <argument pos:start="143:40" pos:end="143:40"><expr pos:start="143:40" pos:end="143:40"><literal type="number" pos:start="143:40" pos:end="143:40">0</literal></expr></argument>, <argument pos:start="143:43" pos:end="143:43"><expr pos:start="143:43" pos:end="143:43"><literal type="number" pos:start="143:43" pos:end="143:43">0</literal></expr></argument>, <argument pos:start="143:46" pos:end="143:59"><expr pos:start="143:46" pos:end="143:59"><name pos:start="143:46" pos:end="143:59">pxa2xx_cm_save</name></expr></argument>, <argument pos:start="143:62" pos:end="143:75"><expr pos:start="143:62" pos:end="143:75"><name pos:start="143:62" pos:end="143:75">pxa2xx_cm_load</name></expr></argument>, <argument pos:start="143:78" pos:end="143:78"><expr pos:start="143:78" pos:end="143:78"><name pos:start="143:78" pos:end="143:78">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:74"><expr pos:start="147:5" pos:end="147:73"><call pos:start="147:5" pos:end="147:73"><name pos:start="147:5" pos:end="147:21">cpu_arm_set_cp_io</name><argument_list pos:start="147:22" pos:end="147:73">(<argument pos:start="147:23" pos:end="147:28"><expr pos:start="147:23" pos:end="147:28"><name pos:start="147:23" pos:end="147:28"><name pos:start="147:23" pos:end="147:23">s</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:28">env</name></name></expr></argument>, <argument pos:start="147:31" pos:end="147:32"><expr pos:start="147:31" pos:end="147:32"><literal type="number" pos:start="147:31" pos:end="147:32">14</literal></expr></argument>, <argument pos:start="147:35" pos:end="147:50"><expr pos:start="147:35" pos:end="147:50"><name pos:start="147:35" pos:end="147:50">pxa2xx_cp14_read</name></expr></argument>, <argument pos:start="147:53" pos:end="147:69"><expr pos:start="147:53" pos:end="147:69"><name pos:start="147:53" pos:end="147:69">pxa2xx_cp14_write</name></expr></argument>, <argument pos:start="147:72" pos:end="147:72"><expr pos:start="147:72" pos:end="147:72"><name pos:start="147:72" pos:end="147:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:28"><expr pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:14"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:14">mm_base</name></name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:27">0x48000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:40"><expr pos:start="153:5" pos:end="153:39"><name pos:start="153:5" pos:end="153:26"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:14">mm_regs</name><index pos:start="153:15" pos:end="153:26">[<expr pos:start="153:16" pos:end="153:25"><name pos:start="153:16" pos:end="153:20">MDMRS</name> <operator pos:start="153:22" pos:end="153:23">&gt;&gt;</operator> <literal type="number" pos:start="153:25" pos:end="153:25">2</literal></expr>]</index></name> <operator pos:start="153:28" pos:end="153:28">=</operator> <literal type="number" pos:start="153:30" pos:end="153:39">0x00020002</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:41"><expr pos:start="155:5" pos:end="155:40"><name pos:start="155:5" pos:end="155:27"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:14">mm_regs</name><index pos:start="155:15" pos:end="155:27">[<expr pos:start="155:16" pos:end="155:26"><name pos:start="155:16" pos:end="155:21">MDREFR</name> <operator pos:start="155:23" pos:end="155:24">&gt;&gt;</operator> <literal type="number" pos:start="155:26" pos:end="155:26">2</literal></expr>]</index></name> <operator pos:start="155:29" pos:end="155:29">=</operator> <literal type="number" pos:start="155:31" pos:end="155:40">0x03ca4000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:39"><expr pos:start="157:5" pos:end="157:38"><name pos:start="157:5" pos:end="157:25"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:14">mm_regs</name><index pos:start="157:15" pos:end="157:25">[<expr pos:start="157:16" pos:end="157:24"><name pos:start="157:16" pos:end="157:19">MECR</name> <operator pos:start="157:21" pos:end="157:22">&gt;&gt;</operator> <literal type="number" pos:start="157:24" pos:end="157:24">2</literal></expr>]</index></name> <operator pos:start="157:27" pos:end="157:27">=</operator> <literal type="number" pos:start="157:29" pos:end="157:38">0x00000001</literal></expr>;</expr_stmt>	<comment type="block" pos:start="157:41" pos:end="157:65">/* Two PC Card sockets */</comment>

    <expr_stmt pos:start="159:5" pos:end="161:64"><expr pos:start="159:5" pos:end="161:63"><name pos:start="159:5" pos:end="159:13">iomemtype</name> <operator pos:start="159:15" pos:end="159:15">=</operator> <call pos:start="159:17" pos:end="161:63"><name pos:start="159:17" pos:end="159:38">cpu_register_io_memory</name><argument_list pos:start="159:39" pos:end="161:63">(<argument pos:start="159:40" pos:end="159:55"><expr pos:start="159:40" pos:end="159:55"><name pos:start="159:40" pos:end="159:55">pxa2xx_mm_readfn</name></expr></argument>,

                    <argument pos:start="161:21" pos:end="161:37"><expr pos:start="161:21" pos:end="161:37"><name pos:start="161:21" pos:end="161:37">pxa2xx_mm_writefn</name></expr></argument>, <argument pos:start="161:40" pos:end="161:40"><expr pos:start="161:40" pos:end="161:40"><name pos:start="161:40" pos:end="161:40">s</name></expr></argument>, <argument pos:start="161:43" pos:end="161:62"><expr pos:start="161:43" pos:end="161:62"><name pos:start="161:43" pos:end="161:62">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:64"><expr pos:start="163:5" pos:end="163:63"><call pos:start="163:5" pos:end="163:63"><name pos:start="163:5" pos:end="163:32">cpu_register_physical_memory</name><argument_list pos:start="163:33" pos:end="163:63">(<argument pos:start="163:34" pos:end="163:43"><expr pos:start="163:34" pos:end="163:43"><name pos:start="163:34" pos:end="163:43"><name pos:start="163:34" pos:end="163:34">s</name><operator pos:start="163:35" pos:end="163:36">-&gt;</operator><name pos:start="163:37" pos:end="163:43">mm_base</name></name></expr></argument>, <argument pos:start="163:46" pos:end="163:51"><expr pos:start="163:46" pos:end="163:51"><literal type="number" pos:start="163:46" pos:end="163:51">0x1000</literal></expr></argument>, <argument pos:start="163:54" pos:end="163:62"><expr pos:start="163:54" pos:end="163:62"><name pos:start="163:54" pos:end="163:62">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:80"><expr pos:start="165:5" pos:end="165:79"><call pos:start="165:5" pos:end="165:79"><name pos:start="165:5" pos:end="165:19">register_savevm</name><argument_list pos:start="165:20" pos:end="165:79">(<argument pos:start="165:21" pos:end="165:24"><expr pos:start="165:21" pos:end="165:24"><name pos:start="165:21" pos:end="165:24">NULL</name></expr></argument>, <argument pos:start="165:27" pos:end="165:37"><expr pos:start="165:27" pos:end="165:37"><literal type="string" pos:start="165:27" pos:end="165:37">"pxa2xx_mm"</literal></expr></argument>, <argument pos:start="165:40" pos:end="165:40"><expr pos:start="165:40" pos:end="165:40"><literal type="number" pos:start="165:40" pos:end="165:40">0</literal></expr></argument>, <argument pos:start="165:43" pos:end="165:43"><expr pos:start="165:43" pos:end="165:43"><literal type="number" pos:start="165:43" pos:end="165:43">0</literal></expr></argument>, <argument pos:start="165:46" pos:end="165:59"><expr pos:start="165:46" pos:end="165:59"><name pos:start="165:46" pos:end="165:59">pxa2xx_mm_save</name></expr></argument>, <argument pos:start="165:62" pos:end="165:75"><expr pos:start="165:62" pos:end="165:75"><name pos:start="165:62" pos:end="165:75">pxa2xx_mm_load</name></expr></argument>, <argument pos:start="165:78" pos:end="165:78"><expr pos:start="165:78" pos:end="165:78"><name pos:start="165:78" pos:end="165:78">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:28"><expr pos:start="169:5" pos:end="169:27"><name pos:start="169:5" pos:end="169:14"><name pos:start="169:5" pos:end="169:5">s</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:14">pm_base</name></name> <operator pos:start="169:16" pos:end="169:16">=</operator> <literal type="number" pos:start="169:18" pos:end="169:27">0x40f00000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="173:64"><expr pos:start="171:5" pos:end="173:63"><name pos:start="171:5" pos:end="171:13">iomemtype</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <call pos:start="171:17" pos:end="173:63"><name pos:start="171:17" pos:end="171:38">cpu_register_io_memory</name><argument_list pos:start="171:39" pos:end="173:63">(<argument pos:start="171:40" pos:end="171:55"><expr pos:start="171:40" pos:end="171:55"><name pos:start="171:40" pos:end="171:55">pxa2xx_pm_readfn</name></expr></argument>,

                    <argument pos:start="173:21" pos:end="173:37"><expr pos:start="173:21" pos:end="173:37"><name pos:start="173:21" pos:end="173:37">pxa2xx_pm_writefn</name></expr></argument>, <argument pos:start="173:40" pos:end="173:40"><expr pos:start="173:40" pos:end="173:40"><name pos:start="173:40" pos:end="173:40">s</name></expr></argument>, <argument pos:start="173:43" pos:end="173:62"><expr pos:start="173:43" pos:end="173:62"><name pos:start="173:43" pos:end="173:62">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:63"><expr pos:start="175:5" pos:end="175:62"><call pos:start="175:5" pos:end="175:62"><name pos:start="175:5" pos:end="175:32">cpu_register_physical_memory</name><argument_list pos:start="175:33" pos:end="175:62">(<argument pos:start="175:34" pos:end="175:43"><expr pos:start="175:34" pos:end="175:43"><name pos:start="175:34" pos:end="175:43"><name pos:start="175:34" pos:end="175:34">s</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:43">pm_base</name></name></expr></argument>, <argument pos:start="175:46" pos:end="175:50"><expr pos:start="175:46" pos:end="175:50"><literal type="number" pos:start="175:46" pos:end="175:50">0x100</literal></expr></argument>, <argument pos:start="175:53" pos:end="175:61"><expr pos:start="175:53" pos:end="175:61"><name pos:start="175:53" pos:end="175:61">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:80"><expr pos:start="177:5" pos:end="177:79"><call pos:start="177:5" pos:end="177:79"><name pos:start="177:5" pos:end="177:19">register_savevm</name><argument_list pos:start="177:20" pos:end="177:79">(<argument pos:start="177:21" pos:end="177:24"><expr pos:start="177:21" pos:end="177:24"><name pos:start="177:21" pos:end="177:24">NULL</name></expr></argument>, <argument pos:start="177:27" pos:end="177:37"><expr pos:start="177:27" pos:end="177:37"><literal type="string" pos:start="177:27" pos:end="177:37">"pxa2xx_pm"</literal></expr></argument>, <argument pos:start="177:40" pos:end="177:40"><expr pos:start="177:40" pos:end="177:40"><literal type="number" pos:start="177:40" pos:end="177:40">0</literal></expr></argument>, <argument pos:start="177:43" pos:end="177:43"><expr pos:start="177:43" pos:end="177:43"><literal type="number" pos:start="177:43" pos:end="177:43">0</literal></expr></argument>, <argument pos:start="177:46" pos:end="177:59"><expr pos:start="177:46" pos:end="177:59"><name pos:start="177:46" pos:end="177:59">pxa2xx_pm_save</name></expr></argument>, <argument pos:start="177:62" pos:end="177:75"><expr pos:start="177:62" pos:end="177:75"><name pos:start="177:62" pos:end="177:75">pxa2xx_pm_load</name></expr></argument>, <argument pos:start="177:78" pos:end="177:78"><expr pos:start="177:78" pos:end="177:78"><name pos:start="177:78" pos:end="177:78">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="181:5" pos:end="181:45">for <control pos:start="181:9" pos:end="181:44">(<init pos:start="181:10" pos:end="181:15"><expr pos:start="181:10" pos:end="181:14"><name pos:start="181:10" pos:end="181:10">i</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <literal type="number" pos:start="181:14" pos:end="181:14">0</literal></expr>;</init> <condition pos:start="181:17" pos:end="181:38"><expr pos:start="181:17" pos:end="181:37"><name pos:start="181:17" pos:end="181:29"><name pos:start="181:17" pos:end="181:26">pxa27x_ssp</name><index pos:start="181:27" pos:end="181:29">[<expr pos:start="181:28" pos:end="181:28"><name pos:start="181:28" pos:end="181:28">i</name></expr>]</index></name><operator pos:start="181:30" pos:end="181:30">.</operator><name pos:start="181:31" pos:end="181:37">io_base</name></expr>;</condition> <incr pos:start="181:40" pos:end="181:43"><expr pos:start="181:40" pos:end="181:43"><name pos:start="181:40" pos:end="181:40">i</name> <operator pos:start="181:42" pos:end="181:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="181:45" pos:end="181:45"><block_content pos:start="181:45" pos:end="181:45"><empty_stmt pos:start="181:45" pos:end="181:45">;</empty_stmt></block_content></block></for>

    <expr_stmt pos:start="183:5" pos:end="183:59"><expr pos:start="183:5" pos:end="183:58"><name pos:start="183:5" pos:end="183:10"><name pos:start="183:5" pos:end="183:5">s</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:10">ssp</name></name> <operator pos:start="183:12" pos:end="183:12">=</operator> <operator pos:start="183:14" pos:end="183:14">(</operator><name pos:start="183:15" pos:end="183:20">SSIBus</name> <operator pos:start="183:22" pos:end="183:22">*</operator><operator pos:start="183:23" pos:end="183:23">*</operator><operator pos:start="183:24" pos:end="183:24">)</operator><call pos:start="183:25" pos:end="183:58"><name pos:start="183:25" pos:end="183:36">qemu_mallocz</name><argument_list pos:start="183:37" pos:end="183:58">(<argument pos:start="183:38" pos:end="183:57"><expr pos:start="183:38" pos:end="183:57"><sizeof pos:start="183:38" pos:end="183:53">sizeof<argument_list pos:start="183:44" pos:end="183:53">(<argument pos:start="183:45" pos:end="183:52"><expr pos:start="183:45" pos:end="183:52"><name pos:start="183:45" pos:end="183:50">SSIBus</name> <operator pos:start="183:52" pos:end="183:52">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="183:55" pos:end="183:55">*</operator> <name pos:start="183:57" pos:end="183:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="185:5" pos:end="195:5">for <control pos:start="185:9" pos:end="185:44">(<init pos:start="185:10" pos:end="185:15"><expr pos:start="185:10" pos:end="185:14"><name pos:start="185:10" pos:end="185:10">i</name> <operator pos:start="185:12" pos:end="185:12">=</operator> <literal type="number" pos:start="185:14" pos:end="185:14">0</literal></expr>;</init> <condition pos:start="185:17" pos:end="185:38"><expr pos:start="185:17" pos:end="185:37"><name pos:start="185:17" pos:end="185:29"><name pos:start="185:17" pos:end="185:26">pxa27x_ssp</name><index pos:start="185:27" pos:end="185:29">[<expr pos:start="185:28" pos:end="185:28"><name pos:start="185:28" pos:end="185:28">i</name></expr>]</index></name><operator pos:start="185:30" pos:end="185:30">.</operator><name pos:start="185:31" pos:end="185:37">io_base</name></expr>;</condition> <incr pos:start="185:40" pos:end="185:43"><expr pos:start="185:40" pos:end="185:43"><name pos:start="185:40" pos:end="185:40">i</name> <operator pos:start="185:42" pos:end="185:43">++</operator></expr></incr>)</control> <block pos:start="185:46" pos:end="195:5">{<block_content pos:start="187:9" pos:end="193:61">

        <decl_stmt pos:start="187:9" pos:end="187:25"><decl pos:start="187:9" pos:end="187:24"><type pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:19">DeviceState</name> <modifier pos:start="187:21" pos:end="187:21">*</modifier></type><name pos:start="187:22" pos:end="187:24">dev</name></decl>;</decl_stmt>

        <expr_stmt pos:start="189:9" pos:end="191:63"><expr pos:start="189:9" pos:end="191:62"><name pos:start="189:9" pos:end="189:11">dev</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <call pos:start="189:15" pos:end="191:62"><name pos:start="189:15" pos:end="189:34">sysbus_create_simple</name><argument_list pos:start="189:35" pos:end="191:62">(<argument pos:start="189:36" pos:end="189:47"><expr pos:start="189:36" pos:end="189:47"><literal type="string" pos:start="189:36" pos:end="189:47">"pxa2xx-ssp"</literal></expr></argument>, <argument pos:start="189:50" pos:end="189:70"><expr pos:start="189:50" pos:end="189:70"><name pos:start="189:50" pos:end="189:62"><name pos:start="189:50" pos:end="189:59">pxa27x_ssp</name><index pos:start="189:60" pos:end="189:62">[<expr pos:start="189:61" pos:end="189:61"><name pos:start="189:61" pos:end="189:61">i</name></expr>]</index></name><operator pos:start="189:63" pos:end="189:63">.</operator><name pos:start="189:64" pos:end="189:70">io_base</name></expr></argument>,

                                   <argument pos:start="191:36" pos:end="191:61"><expr pos:start="191:36" pos:end="191:61"><name pos:start="191:36" pos:end="191:61"><name pos:start="191:36" pos:end="191:36">s</name><operator pos:start="191:37" pos:end="191:38">-&gt;</operator><name pos:start="191:39" pos:end="191:41">pic</name><index pos:start="191:42" pos:end="191:61">[<expr pos:start="191:43" pos:end="191:60"><name pos:start="191:43" pos:end="191:55"><name pos:start="191:43" pos:end="191:52">pxa27x_ssp</name><index pos:start="191:53" pos:end="191:55">[<expr pos:start="191:54" pos:end="191:54"><name pos:start="191:54" pos:end="191:54">i</name></expr>]</index></name><operator pos:start="191:56" pos:end="191:56">.</operator><name pos:start="191:57" pos:end="191:60">irqn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:61"><expr pos:start="193:9" pos:end="193:60"><name pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:14">ssp</name><index pos:start="193:15" pos:end="193:17">[<expr pos:start="193:16" pos:end="193:16"><name pos:start="193:16" pos:end="193:16">i</name></expr>]</index></name> <operator pos:start="193:19" pos:end="193:19">=</operator> <operator pos:start="193:21" pos:end="193:21">(</operator><name pos:start="193:22" pos:end="193:27">SSIBus</name> <operator pos:start="193:29" pos:end="193:29">*</operator><operator pos:start="193:30" pos:end="193:30">)</operator><call pos:start="193:31" pos:end="193:60"><name pos:start="193:31" pos:end="193:48">qdev_get_child_bus</name><argument_list pos:start="193:49" pos:end="193:60">(<argument pos:start="193:50" pos:end="193:52"><expr pos:start="193:50" pos:end="193:52"><name pos:start="193:50" pos:end="193:52">dev</name></expr></argument>, <argument pos:start="193:55" pos:end="193:59"><expr pos:start="193:55" pos:end="193:59"><literal type="string" pos:start="193:55" pos:end="193:59">"ssi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="199:5" pos:end="205:5"><if pos:start="199:5" pos:end="205:5">if <condition pos:start="199:8" pos:end="199:20">(<expr pos:start="199:9" pos:end="199:19"><name pos:start="199:9" pos:end="199:19">usb_enabled</name></expr>)</condition> <block pos:start="199:22" pos:end="205:5">{<block_content pos:start="201:9" pos:end="203:55">

        <expr_stmt pos:start="201:9" pos:end="203:55"><expr pos:start="201:9" pos:end="203:54"><call pos:start="201:9" pos:end="203:54"><name pos:start="201:9" pos:end="201:28">sysbus_create_simple</name><argument_list pos:start="201:29" pos:end="203:54">(<argument pos:start="201:30" pos:end="201:42"><expr pos:start="201:30" pos:end="201:42"><literal type="string" pos:start="201:30" pos:end="201:42">"sysbus-ohci"</literal></expr></argument>, <argument pos:start="201:45" pos:end="201:54"><expr pos:start="201:45" pos:end="201:54"><literal type="number" pos:start="201:45" pos:end="201:54">0x4c000000</literal></expr></argument>,

                             <argument pos:start="203:30" pos:end="203:53"><expr pos:start="203:30" pos:end="203:53"><name pos:start="203:30" pos:end="203:53"><name pos:start="203:30" pos:end="203:30">s</name><operator pos:start="203:31" pos:end="203:32">-&gt;</operator><name pos:start="203:33" pos:end="203:35">pic</name><index pos:start="203:36" pos:end="203:53">[<expr pos:start="203:37" pos:end="203:52"><name pos:start="203:37" pos:end="203:52">PXA2XX_PIC_USBH1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:50"><expr pos:start="209:5" pos:end="209:49"><name pos:start="209:5" pos:end="209:16"><name pos:start="209:5" pos:end="209:5">s</name><operator pos:start="209:6" pos:end="209:7">-&gt;</operator><name pos:start="209:8" pos:end="209:13">pcmcia</name><index pos:start="209:14" pos:end="209:16">[<expr pos:start="209:15" pos:end="209:15"><literal type="number" pos:start="209:15" pos:end="209:15">0</literal></expr>]</index></name> <operator pos:start="209:18" pos:end="209:18">=</operator> <call pos:start="209:20" pos:end="209:49"><name pos:start="209:20" pos:end="209:37">pxa2xx_pcmcia_init</name><argument_list pos:start="209:38" pos:end="209:49">(<argument pos:start="209:39" pos:end="209:48"><expr pos:start="209:39" pos:end="209:48"><literal type="number" pos:start="209:39" pos:end="209:48">0x20000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:50"><expr pos:start="211:5" pos:end="211:49"><name pos:start="211:5" pos:end="211:16"><name pos:start="211:5" pos:end="211:5">s</name><operator pos:start="211:6" pos:end="211:7">-&gt;</operator><name pos:start="211:8" pos:end="211:13">pcmcia</name><index pos:start="211:14" pos:end="211:16">[<expr pos:start="211:15" pos:end="211:15"><literal type="number" pos:start="211:15" pos:end="211:15">1</literal></expr>]</index></name> <operator pos:start="211:18" pos:end="211:18">=</operator> <call pos:start="211:20" pos:end="211:49"><name pos:start="211:20" pos:end="211:37">pxa2xx_pcmcia_init</name><argument_list pos:start="211:38" pos:end="211:49">(<argument pos:start="211:39" pos:end="211:48"><expr pos:start="211:39" pos:end="211:48"><literal type="number" pos:start="211:39" pos:end="211:48">0x30000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:29"><expr pos:start="215:5" pos:end="215:28"><name pos:start="215:5" pos:end="215:15"><name pos:start="215:5" pos:end="215:5">s</name><operator pos:start="215:6" pos:end="215:7">-&gt;</operator><name pos:start="215:8" pos:end="215:15">rtc_base</name></name> <operator pos:start="215:17" pos:end="215:17">=</operator> <literal type="number" pos:start="215:19" pos:end="215:28">0x40900000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="219:65"><expr pos:start="217:5" pos:end="219:64"><name pos:start="217:5" pos:end="217:13">iomemtype</name> <operator pos:start="217:15" pos:end="217:15">=</operator> <call pos:start="217:17" pos:end="219:64"><name pos:start="217:17" pos:end="217:38">cpu_register_io_memory</name><argument_list pos:start="217:39" pos:end="219:64">(<argument pos:start="217:40" pos:end="217:56"><expr pos:start="217:40" pos:end="217:56"><name pos:start="217:40" pos:end="217:56">pxa2xx_rtc_readfn</name></expr></argument>,

                    <argument pos:start="219:21" pos:end="219:38"><expr pos:start="219:21" pos:end="219:38"><name pos:start="219:21" pos:end="219:38">pxa2xx_rtc_writefn</name></expr></argument>, <argument pos:start="219:41" pos:end="219:41"><expr pos:start="219:41" pos:end="219:41"><name pos:start="219:41" pos:end="219:41">s</name></expr></argument>, <argument pos:start="219:44" pos:end="219:63"><expr pos:start="219:44" pos:end="219:63"><name pos:start="219:44" pos:end="219:63">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:65"><expr pos:start="221:5" pos:end="221:64"><call pos:start="221:5" pos:end="221:64"><name pos:start="221:5" pos:end="221:32">cpu_register_physical_memory</name><argument_list pos:start="221:33" pos:end="221:64">(<argument pos:start="221:34" pos:end="221:44"><expr pos:start="221:34" pos:end="221:44"><name pos:start="221:34" pos:end="221:44"><name pos:start="221:34" pos:end="221:34">s</name><operator pos:start="221:35" pos:end="221:36">-&gt;</operator><name pos:start="221:37" pos:end="221:44">rtc_base</name></name></expr></argument>, <argument pos:start="221:47" pos:end="221:52"><expr pos:start="221:47" pos:end="221:52"><literal type="number" pos:start="221:47" pos:end="221:52">0x1000</literal></expr></argument>, <argument pos:start="221:55" pos:end="221:63"><expr pos:start="221:55" pos:end="221:63"><name pos:start="221:55" pos:end="221:63">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:23"><expr pos:start="223:5" pos:end="223:22"><call pos:start="223:5" pos:end="223:22"><name pos:start="223:5" pos:end="223:19">pxa2xx_rtc_init</name><argument_list pos:start="223:20" pos:end="223:22">(<argument pos:start="223:21" pos:end="223:21"><expr pos:start="223:21" pos:end="223:21"><name pos:start="223:21" pos:end="223:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="227:40"><expr pos:start="225:5" pos:end="227:39"><call pos:start="225:5" pos:end="227:39"><name pos:start="225:5" pos:end="225:19">register_savevm</name><argument_list pos:start="225:20" pos:end="227:39">(<argument pos:start="225:21" pos:end="225:24"><expr pos:start="225:21" pos:end="225:24"><name pos:start="225:21" pos:end="225:24">NULL</name></expr></argument>, <argument pos:start="225:27" pos:end="225:38"><expr pos:start="225:27" pos:end="225:38"><literal type="string" pos:start="225:27" pos:end="225:38">"pxa2xx_rtc"</literal></expr></argument>, <argument pos:start="225:41" pos:end="225:41"><expr pos:start="225:41" pos:end="225:41"><literal type="number" pos:start="225:41" pos:end="225:41">0</literal></expr></argument>, <argument pos:start="225:44" pos:end="225:44"><expr pos:start="225:44" pos:end="225:44"><literal type="number" pos:start="225:44" pos:end="225:44">0</literal></expr></argument>, <argument pos:start="225:47" pos:end="225:61"><expr pos:start="225:47" pos:end="225:61"><name pos:start="225:47" pos:end="225:61">pxa2xx_rtc_save</name></expr></argument>,

                    <argument pos:start="227:21" pos:end="227:35"><expr pos:start="227:21" pos:end="227:35"><name pos:start="227:21" pos:end="227:35">pxa2xx_rtc_load</name></expr></argument>, <argument pos:start="227:38" pos:end="227:38"><expr pos:start="227:38" pos:end="227:38"><name pos:start="227:38" pos:end="227:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:76"><expr pos:start="231:5" pos:end="231:75"><name pos:start="231:5" pos:end="231:13"><name pos:start="231:5" pos:end="231:5">s</name><operator pos:start="231:6" pos:end="231:7">-&gt;</operator><name pos:start="231:8" pos:end="231:10">i2c</name><index pos:start="231:11" pos:end="231:13">[<expr pos:start="231:12" pos:end="231:12"><literal type="number" pos:start="231:12" pos:end="231:12">0</literal></expr>]</index></name> <operator pos:start="231:15" pos:end="231:15">=</operator> <call pos:start="231:17" pos:end="231:75"><name pos:start="231:17" pos:end="231:31">pxa2xx_i2c_init</name><argument_list pos:start="231:32" pos:end="231:75">(<argument pos:start="231:33" pos:end="231:42"><expr pos:start="231:33" pos:end="231:42"><literal type="number" pos:start="231:33" pos:end="231:42">0x40301600</literal></expr></argument>, <argument pos:start="231:45" pos:end="231:66"><expr pos:start="231:45" pos:end="231:66"><name pos:start="231:45" pos:end="231:66"><name pos:start="231:45" pos:end="231:45">s</name><operator pos:start="231:46" pos:end="231:47">-&gt;</operator><name pos:start="231:48" pos:end="231:50">pic</name><index pos:start="231:51" pos:end="231:66">[<expr pos:start="231:52" pos:end="231:65"><name pos:start="231:52" pos:end="231:65">PXA2XX_PIC_I2C</name></expr>]</index></name></expr></argument>, <argument pos:start="231:69" pos:end="231:74"><expr pos:start="231:69" pos:end="231:74"><literal type="number" pos:start="231:69" pos:end="231:74">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:77"><expr pos:start="233:5" pos:end="233:76"><name pos:start="233:5" pos:end="233:13"><name pos:start="233:5" pos:end="233:5">s</name><operator pos:start="233:6" pos:end="233:7">-&gt;</operator><name pos:start="233:8" pos:end="233:10">i2c</name><index pos:start="233:11" pos:end="233:13">[<expr pos:start="233:12" pos:end="233:12"><literal type="number" pos:start="233:12" pos:end="233:12">1</literal></expr>]</index></name> <operator pos:start="233:15" pos:end="233:15">=</operator> <call pos:start="233:17" pos:end="233:76"><name pos:start="233:17" pos:end="233:31">pxa2xx_i2c_init</name><argument_list pos:start="233:32" pos:end="233:76">(<argument pos:start="233:33" pos:end="233:42"><expr pos:start="233:33" pos:end="233:42"><literal type="number" pos:start="233:33" pos:end="233:42">0x40f00100</literal></expr></argument>, <argument pos:start="233:45" pos:end="233:69"><expr pos:start="233:45" pos:end="233:69"><name pos:start="233:45" pos:end="233:69"><name pos:start="233:45" pos:end="233:45">s</name><operator pos:start="233:46" pos:end="233:47">-&gt;</operator><name pos:start="233:48" pos:end="233:50">pic</name><index pos:start="233:51" pos:end="233:69">[<expr pos:start="233:52" pos:end="233:68"><name pos:start="233:52" pos:end="233:68">PXA2XX_PIC_PWRI2C</name></expr>]</index></name></expr></argument>, <argument pos:start="233:72" pos:end="233:75"><expr pos:start="233:72" pos:end="233:75"><literal type="number" pos:start="233:72" pos:end="233:75">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="237:5" pos:end="237:73"><expr pos:start="237:5" pos:end="237:72"><name pos:start="237:5" pos:end="237:10"><name pos:start="237:5" pos:end="237:5">s</name><operator pos:start="237:6" pos:end="237:7">-&gt;</operator><name pos:start="237:8" pos:end="237:10">i2s</name></name> <operator pos:start="237:12" pos:end="237:12">=</operator> <call pos:start="237:14" pos:end="237:72"><name pos:start="237:14" pos:end="237:28">pxa2xx_i2s_init</name><argument_list pos:start="237:29" pos:end="237:72">(<argument pos:start="237:30" pos:end="237:39"><expr pos:start="237:30" pos:end="237:39"><literal type="number" pos:start="237:30" pos:end="237:39">0x40400000</literal></expr></argument>, <argument pos:start="237:42" pos:end="237:63"><expr pos:start="237:42" pos:end="237:63"><name pos:start="237:42" pos:end="237:63"><name pos:start="237:42" pos:end="237:42">s</name><operator pos:start="237:43" pos:end="237:44">-&gt;</operator><name pos:start="237:45" pos:end="237:47">pic</name><index pos:start="237:48" pos:end="237:63">[<expr pos:start="237:49" pos:end="237:62"><name pos:start="237:49" pos:end="237:62">PXA2XX_PIC_I2S</name></expr>]</index></name></expr></argument>, <argument pos:start="237:66" pos:end="237:71"><expr pos:start="237:66" pos:end="237:71"><name pos:start="237:66" pos:end="237:71"><name pos:start="237:66" pos:end="237:66">s</name><operator pos:start="237:67" pos:end="237:68">-&gt;</operator><name pos:start="237:69" pos:end="237:71">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:70"><expr pos:start="241:5" pos:end="241:69"><name pos:start="241:5" pos:end="241:9"><name pos:start="241:5" pos:end="241:5">s</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:9">kp</name></name> <operator pos:start="241:11" pos:end="241:11">=</operator> <call pos:start="241:13" pos:end="241:69"><name pos:start="241:13" pos:end="241:30">pxa27x_keypad_init</name><argument_list pos:start="241:31" pos:end="241:69">(<argument pos:start="241:32" pos:end="241:41"><expr pos:start="241:32" pos:end="241:41"><literal type="number" pos:start="241:32" pos:end="241:41">0x41500000</literal></expr></argument>, <argument pos:start="241:44" pos:end="241:68"><expr pos:start="241:44" pos:end="241:68"><name pos:start="241:44" pos:end="241:68"><name pos:start="241:44" pos:end="241:44">s</name><operator pos:start="241:45" pos:end="241:46">-&gt;</operator><name pos:start="241:47" pos:end="241:49">pic</name><index pos:start="241:50" pos:end="241:68">[<expr pos:start="241:51" pos:end="241:67"><name pos:start="241:51" pos:end="241:67">PXA2XX_PIC_KEYPAD</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="245:5" pos:end="245:36">/* GPIO1 resets the processor */</comment>

    <comment type="block" pos:start="247:5" pos:end="247:62">/* The handler can be overridden by board-specific code */</comment>

    <expr_stmt pos:start="249:5" pos:end="249:48"><expr pos:start="249:5" pos:end="249:47"><call pos:start="249:5" pos:end="249:47"><name pos:start="249:5" pos:end="249:25">qdev_connect_gpio_out</name><argument_list pos:start="249:26" pos:end="249:47">(<argument pos:start="249:27" pos:end="249:33"><expr pos:start="249:27" pos:end="249:33"><name pos:start="249:27" pos:end="249:33"><name pos:start="249:27" pos:end="249:27">s</name><operator pos:start="249:28" pos:end="249:29">-&gt;</operator><name pos:start="249:30" pos:end="249:33">gpio</name></name></expr></argument>, <argument pos:start="249:36" pos:end="249:36"><expr pos:start="249:36" pos:end="249:36"><literal type="number" pos:start="249:36" pos:end="249:36">1</literal></expr></argument>, <argument pos:start="249:39" pos:end="249:46"><expr pos:start="249:39" pos:end="249:46"><name pos:start="249:39" pos:end="249:46"><name pos:start="249:39" pos:end="249:39">s</name><operator pos:start="249:40" pos:end="249:41">-&gt;</operator><name pos:start="249:42" pos:end="249:46">reset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><name pos:start="251:12" pos:end="251:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
