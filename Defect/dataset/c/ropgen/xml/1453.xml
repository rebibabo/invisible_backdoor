<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1453.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ppc_tlb_invalidate_one</name> <parameter_list pos:start="1:29" pos:end="1:65">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:59">target_ulong</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="136:0">

<cpp:if pos:start="5:1" pos:end="5:28">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:28"><operator pos:start="5:5" pos:end="5:5">!</operator><call pos:start="5:6" pos:end="5:28"><name pos:start="5:6" pos:end="5:12">defined</name><argument_list pos:start="5:13" pos:end="5:28">(<argument pos:start="5:14" pos:end="5:27"><expr pos:start="5:14" pos:end="5:27"><name pos:start="5:14" pos:end="5:27">FLUSH_ALL_TLBS</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="7:29"><expr pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:8">addr</name> <operator pos:start="7:10" pos:end="7:11">&amp;=</operator> <name pos:start="7:13" pos:end="7:28">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <switch pos:start="9:5" pos:end="132:0">switch <condition pos:start="9:12" pos:end="9:27">(<expr pos:start="9:13" pos:end="9:26"><name pos:start="9:13" pos:end="9:26"><name pos:start="9:13" pos:end="9:15">env</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:26">mmu_model</name></name></expr>)</condition> <block pos:start="9:29" pos:end="132:0">{<block_content pos:start="11:5" pos:end="127:14">

    <case pos:start="11:5" pos:end="11:30">case <expr pos:start="11:10" pos:end="11:29"><name pos:start="11:10" pos:end="11:29">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

    <case pos:start="13:5" pos:end="13:31">case <expr pos:start="13:10" pos:end="13:30"><name pos:start="13:10" pos:end="13:30">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:49"><expr pos:start="15:9" pos:end="15:48"><call pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:34">ppc6xx_tlb_invalidate_virt</name><argument_list pos:start="15:35" pos:end="15:48">(<argument pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><name pos:start="15:36" pos:end="15:38">env</name></expr></argument>, <argument pos:start="15:41" pos:end="15:44"><expr pos:start="15:41" pos:end="15:44"><name pos:start="15:41" pos:end="15:44">addr</name></expr></argument>, <argument pos:start="15:47" pos:end="15:47"><expr pos:start="15:47" pos:end="15:47"><literal type="number" pos:start="15:47" pos:end="15:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:53"><if pos:start="17:9" pos:end="19:53">if <condition pos:start="17:12" pos:end="17:30">(<expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:15">env</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:24">id_tlbs</name></name> <operator pos:start="17:26" pos:end="17:27">==</operator> <literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:53"><block_content pos:start="19:13" pos:end="19:53">

            <expr_stmt pos:start="19:13" pos:end="19:53"><expr pos:start="19:13" pos:end="19:52"><call pos:start="19:13" pos:end="19:52"><name pos:start="19:13" pos:end="19:38">ppc6xx_tlb_invalidate_virt</name><argument_list pos:start="19:39" pos:end="19:52">(<argument pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><name pos:start="19:40" pos:end="19:42">env</name></expr></argument>, <argument pos:start="19:45" pos:end="19:48"><expr pos:start="19:45" pos:end="19:48"><name pos:start="19:45" pos:end="19:48">addr</name></expr></argument>, <argument pos:start="19:51" pos:end="19:51"><expr pos:start="19:51" pos:end="19:51"><literal type="number" pos:start="19:51" pos:end="19:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:30">case <expr pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:29">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:32">case <expr pos:start="25:10" pos:end="25:31"><name pos:start="25:10" pos:end="25:31">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><call pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:34">ppc4xx_tlb_invalidate_virt</name><argument_list pos:start="27:35" pos:end="27:68">(<argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">env</name></expr></argument>, <argument pos:start="27:41" pos:end="27:44"><expr pos:start="27:41" pos:end="27:44"><name pos:start="27:41" pos:end="27:44">addr</name></expr></argument>, <argument pos:start="27:47" pos:end="27:67"><expr pos:start="27:47" pos:end="27:67"><name pos:start="27:47" pos:end="27:67"><name pos:start="27:47" pos:end="27:49">env</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:54">spr</name><index pos:start="27:55" pos:end="27:67">[<expr pos:start="27:56" pos:end="27:66"><name pos:start="27:56" pos:end="27:66">SPR_40x_PID</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:30">case <expr pos:start="31:10" pos:end="31:29"><name pos:start="31:10" pos:end="31:29">POWERPC_MMU_REAL_4xx</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:64"><expr pos:start="33:9" pos:end="33:63"><call pos:start="33:9" pos:end="33:63"><name pos:start="33:9" pos:end="33:17">cpu_abort</name><argument_list pos:start="33:18" pos:end="33:63">(<argument pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><name pos:start="33:19" pos:end="33:21">env</name></expr></argument>, <argument pos:start="33:24" pos:end="33:62"><expr pos:start="33:24" pos:end="33:62"><literal type="string" pos:start="33:24" pos:end="33:62">"No TLB for PowerPC 4xx in real mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:27">case <expr pos:start="37:10" pos:end="37:26"><name pos:start="37:10" pos:end="37:26">POWERPC_MMU_BOOKE</name></expr>:</case>

        <comment type="block" pos:start="39:9" pos:end="39:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><call pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:17">cpu_abort</name><argument_list pos:start="41:18" pos:end="41:53">(<argument pos:start="41:19" pos:end="41:21"><expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">env</name></expr></argument>, <argument pos:start="41:24" pos:end="41:52"><expr pos:start="41:24" pos:end="41:52"><literal type="string" pos:start="41:24" pos:end="41:52">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:31">case <expr pos:start="45:10" pos:end="45:30"><name pos:start="45:10" pos:end="45:30">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="47:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:54"><expr pos:start="49:9" pos:end="49:53"><call pos:start="49:9" pos:end="49:53"><name pos:start="49:9" pos:end="49:17">cpu_abort</name><argument_list pos:start="49:18" pos:end="49:53">(<argument pos:start="49:19" pos:end="49:21"><expr pos:start="49:19" pos:end="49:21"><name pos:start="49:19" pos:end="49:21">env</name></expr></argument>, <argument pos:start="49:24" pos:end="49:52"><expr pos:start="49:24" pos:end="49:52"><literal type="string" pos:start="49:24" pos:end="49:52">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:25">case <expr pos:start="53:10" pos:end="53:24"><name pos:start="53:10" pos:end="53:24">POWERPC_MMU_32B</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:25">case <expr pos:start="55:10" pos:end="55:24"><name pos:start="55:10" pos:end="55:24">POWERPC_MMU_601</name></expr>:</case>

        <comment type="block" pos:start="57:9" pos:end="57:52">/* tlbie invalidate TLBs for all segments */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:42"><expr pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:12">addr</name> <operator pos:start="59:14" pos:end="59:15">&amp;=</operator> <operator pos:start="59:17" pos:end="59:17">~</operator><operator pos:start="59:18" pos:end="59:18">(</operator><operator pos:start="59:19" pos:end="59:19">(</operator><name pos:start="59:20" pos:end="59:31">target_ulong</name><operator pos:start="59:32" pos:end="59:32">)</operator><operator pos:start="59:33" pos:end="59:33">-</operator><literal type="number" pos:start="59:34" pos:end="59:34">1</literal> <operator pos:start="59:36" pos:end="59:37">&lt;&lt;</operator> <literal type="number" pos:start="59:39" pos:end="59:40">28</literal><operator pos:start="59:41" pos:end="59:41">)</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="61:9" pos:end="65:11">/* XXX: this case should be optimized,

         * giving a mask to tlb_flush_page

         */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:48"><expr pos:start="67:9" pos:end="67:47"><call pos:start="67:9" pos:end="67:47"><name pos:start="67:9" pos:end="67:22">tlb_flush_page</name><argument_list pos:start="67:23" pos:end="67:47">(<argument pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:26">env</name></expr></argument>, <argument pos:start="67:29" pos:end="67:46"><expr pos:start="67:29" pos:end="67:46"><name pos:start="67:29" pos:end="67:32">addr</name> <operator pos:start="67:34" pos:end="67:34">|</operator> <operator pos:start="67:36" pos:end="67:36">(</operator><literal type="number" pos:start="67:37" pos:end="67:39">0x0</literal> <operator pos:start="67:41" pos:end="67:42">&lt;&lt;</operator> <literal type="number" pos:start="67:44" pos:end="67:45">28</literal><operator pos:start="67:46" pos:end="67:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:48"><expr pos:start="69:9" pos:end="69:47"><call pos:start="69:9" pos:end="69:47"><name pos:start="69:9" pos:end="69:22">tlb_flush_page</name><argument_list pos:start="69:23" pos:end="69:47">(<argument pos:start="69:24" pos:end="69:26"><expr pos:start="69:24" pos:end="69:26"><name pos:start="69:24" pos:end="69:26">env</name></expr></argument>, <argument pos:start="69:29" pos:end="69:46"><expr pos:start="69:29" pos:end="69:46"><name pos:start="69:29" pos:end="69:32">addr</name> <operator pos:start="69:34" pos:end="69:34">|</operator> <operator pos:start="69:36" pos:end="69:36">(</operator><literal type="number" pos:start="69:37" pos:end="69:39">0x1</literal> <operator pos:start="69:41" pos:end="69:42">&lt;&lt;</operator> <literal type="number" pos:start="69:44" pos:end="69:45">28</literal><operator pos:start="69:46" pos:end="69:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><call pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:22">tlb_flush_page</name><argument_list pos:start="71:23" pos:end="71:47">(<argument pos:start="71:24" pos:end="71:26"><expr pos:start="71:24" pos:end="71:26"><name pos:start="71:24" pos:end="71:26">env</name></expr></argument>, <argument pos:start="71:29" pos:end="71:46"><expr pos:start="71:29" pos:end="71:46"><name pos:start="71:29" pos:end="71:32">addr</name> <operator pos:start="71:34" pos:end="71:34">|</operator> <operator pos:start="71:36" pos:end="71:36">(</operator><literal type="number" pos:start="71:37" pos:end="71:39">0x2</literal> <operator pos:start="71:41" pos:end="71:42">&lt;&lt;</operator> <literal type="number" pos:start="71:44" pos:end="71:45">28</literal><operator pos:start="71:46" pos:end="71:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:48"><expr pos:start="73:9" pos:end="73:47"><call pos:start="73:9" pos:end="73:47"><name pos:start="73:9" pos:end="73:22">tlb_flush_page</name><argument_list pos:start="73:23" pos:end="73:47">(<argument pos:start="73:24" pos:end="73:26"><expr pos:start="73:24" pos:end="73:26"><name pos:start="73:24" pos:end="73:26">env</name></expr></argument>, <argument pos:start="73:29" pos:end="73:46"><expr pos:start="73:29" pos:end="73:46"><name pos:start="73:29" pos:end="73:32">addr</name> <operator pos:start="73:34" pos:end="73:34">|</operator> <operator pos:start="73:36" pos:end="73:36">(</operator><literal type="number" pos:start="73:37" pos:end="73:39">0x3</literal> <operator pos:start="73:41" pos:end="73:42">&lt;&lt;</operator> <literal type="number" pos:start="73:44" pos:end="73:45">28</literal><operator pos:start="73:46" pos:end="73:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:48"><expr pos:start="75:9" pos:end="75:47"><call pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:22">tlb_flush_page</name><argument_list pos:start="75:23" pos:end="75:47">(<argument pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">env</name></expr></argument>, <argument pos:start="75:29" pos:end="75:46"><expr pos:start="75:29" pos:end="75:46"><name pos:start="75:29" pos:end="75:32">addr</name> <operator pos:start="75:34" pos:end="75:34">|</operator> <operator pos:start="75:36" pos:end="75:36">(</operator><literal type="number" pos:start="75:37" pos:end="75:39">0x4</literal> <operator pos:start="75:41" pos:end="75:42">&lt;&lt;</operator> <literal type="number" pos:start="75:44" pos:end="75:45">28</literal><operator pos:start="75:46" pos:end="75:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:48"><expr pos:start="77:9" pos:end="77:47"><call pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:22">tlb_flush_page</name><argument_list pos:start="77:23" pos:end="77:47">(<argument pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:26">env</name></expr></argument>, <argument pos:start="77:29" pos:end="77:46"><expr pos:start="77:29" pos:end="77:46"><name pos:start="77:29" pos:end="77:32">addr</name> <operator pos:start="77:34" pos:end="77:34">|</operator> <operator pos:start="77:36" pos:end="77:36">(</operator><literal type="number" pos:start="77:37" pos:end="77:39">0x5</literal> <operator pos:start="77:41" pos:end="77:42">&lt;&lt;</operator> <literal type="number" pos:start="77:44" pos:end="77:45">28</literal><operator pos:start="77:46" pos:end="77:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><call pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:22">tlb_flush_page</name><argument_list pos:start="79:23" pos:end="79:47">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">env</name></expr></argument>, <argument pos:start="79:29" pos:end="79:46"><expr pos:start="79:29" pos:end="79:46"><name pos:start="79:29" pos:end="79:32">addr</name> <operator pos:start="79:34" pos:end="79:34">|</operator> <operator pos:start="79:36" pos:end="79:36">(</operator><literal type="number" pos:start="79:37" pos:end="79:39">0x6</literal> <operator pos:start="79:41" pos:end="79:42">&lt;&lt;</operator> <literal type="number" pos:start="79:44" pos:end="79:45">28</literal><operator pos:start="79:46" pos:end="79:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:48"><expr pos:start="81:9" pos:end="81:47"><call pos:start="81:9" pos:end="81:47"><name pos:start="81:9" pos:end="81:22">tlb_flush_page</name><argument_list pos:start="81:23" pos:end="81:47">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">env</name></expr></argument>, <argument pos:start="81:29" pos:end="81:46"><expr pos:start="81:29" pos:end="81:46"><name pos:start="81:29" pos:end="81:32">addr</name> <operator pos:start="81:34" pos:end="81:34">|</operator> <operator pos:start="81:36" pos:end="81:36">(</operator><literal type="number" pos:start="81:37" pos:end="81:39">0x7</literal> <operator pos:start="81:41" pos:end="81:42">&lt;&lt;</operator> <literal type="number" pos:start="81:44" pos:end="81:45">28</literal><operator pos:start="81:46" pos:end="81:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:48"><expr pos:start="83:9" pos:end="83:47"><call pos:start="83:9" pos:end="83:47"><name pos:start="83:9" pos:end="83:22">tlb_flush_page</name><argument_list pos:start="83:23" pos:end="83:47">(<argument pos:start="83:24" pos:end="83:26"><expr pos:start="83:24" pos:end="83:26"><name pos:start="83:24" pos:end="83:26">env</name></expr></argument>, <argument pos:start="83:29" pos:end="83:46"><expr pos:start="83:29" pos:end="83:46"><name pos:start="83:29" pos:end="83:32">addr</name> <operator pos:start="83:34" pos:end="83:34">|</operator> <operator pos:start="83:36" pos:end="83:36">(</operator><literal type="number" pos:start="83:37" pos:end="83:39">0x8</literal> <operator pos:start="83:41" pos:end="83:42">&lt;&lt;</operator> <literal type="number" pos:start="83:44" pos:end="83:45">28</literal><operator pos:start="83:46" pos:end="83:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:48"><expr pos:start="85:9" pos:end="85:47"><call pos:start="85:9" pos:end="85:47"><name pos:start="85:9" pos:end="85:22">tlb_flush_page</name><argument_list pos:start="85:23" pos:end="85:47">(<argument pos:start="85:24" pos:end="85:26"><expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:26">env</name></expr></argument>, <argument pos:start="85:29" pos:end="85:46"><expr pos:start="85:29" pos:end="85:46"><name pos:start="85:29" pos:end="85:32">addr</name> <operator pos:start="85:34" pos:end="85:34">|</operator> <operator pos:start="85:36" pos:end="85:36">(</operator><literal type="number" pos:start="85:37" pos:end="85:39">0x9</literal> <operator pos:start="85:41" pos:end="85:42">&lt;&lt;</operator> <literal type="number" pos:start="85:44" pos:end="85:45">28</literal><operator pos:start="85:46" pos:end="85:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:48"><expr pos:start="87:9" pos:end="87:47"><call pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:22">tlb_flush_page</name><argument_list pos:start="87:23" pos:end="87:47">(<argument pos:start="87:24" pos:end="87:26"><expr pos:start="87:24" pos:end="87:26"><name pos:start="87:24" pos:end="87:26">env</name></expr></argument>, <argument pos:start="87:29" pos:end="87:46"><expr pos:start="87:29" pos:end="87:46"><name pos:start="87:29" pos:end="87:32">addr</name> <operator pos:start="87:34" pos:end="87:34">|</operator> <operator pos:start="87:36" pos:end="87:36">(</operator><literal type="number" pos:start="87:37" pos:end="87:39">0xA</literal> <operator pos:start="87:41" pos:end="87:42">&lt;&lt;</operator> <literal type="number" pos:start="87:44" pos:end="87:45">28</literal><operator pos:start="87:46" pos:end="87:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:48"><expr pos:start="89:9" pos:end="89:47"><call pos:start="89:9" pos:end="89:47"><name pos:start="89:9" pos:end="89:22">tlb_flush_page</name><argument_list pos:start="89:23" pos:end="89:47">(<argument pos:start="89:24" pos:end="89:26"><expr pos:start="89:24" pos:end="89:26"><name pos:start="89:24" pos:end="89:26">env</name></expr></argument>, <argument pos:start="89:29" pos:end="89:46"><expr pos:start="89:29" pos:end="89:46"><name pos:start="89:29" pos:end="89:32">addr</name> <operator pos:start="89:34" pos:end="89:34">|</operator> <operator pos:start="89:36" pos:end="89:36">(</operator><literal type="number" pos:start="89:37" pos:end="89:39">0xB</literal> <operator pos:start="89:41" pos:end="89:42">&lt;&lt;</operator> <literal type="number" pos:start="89:44" pos:end="89:45">28</literal><operator pos:start="89:46" pos:end="89:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><call pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:22">tlb_flush_page</name><argument_list pos:start="91:23" pos:end="91:47">(<argument pos:start="91:24" pos:end="91:26"><expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:26">env</name></expr></argument>, <argument pos:start="91:29" pos:end="91:46"><expr pos:start="91:29" pos:end="91:46"><name pos:start="91:29" pos:end="91:32">addr</name> <operator pos:start="91:34" pos:end="91:34">|</operator> <operator pos:start="91:36" pos:end="91:36">(</operator><literal type="number" pos:start="91:37" pos:end="91:39">0xC</literal> <operator pos:start="91:41" pos:end="91:42">&lt;&lt;</operator> <literal type="number" pos:start="91:44" pos:end="91:45">28</literal><operator pos:start="91:46" pos:end="91:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:48"><expr pos:start="93:9" pos:end="93:47"><call pos:start="93:9" pos:end="93:47"><name pos:start="93:9" pos:end="93:22">tlb_flush_page</name><argument_list pos:start="93:23" pos:end="93:47">(<argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">env</name></expr></argument>, <argument pos:start="93:29" pos:end="93:46"><expr pos:start="93:29" pos:end="93:46"><name pos:start="93:29" pos:end="93:32">addr</name> <operator pos:start="93:34" pos:end="93:34">|</operator> <operator pos:start="93:36" pos:end="93:36">(</operator><literal type="number" pos:start="93:37" pos:end="93:39">0xD</literal> <operator pos:start="93:41" pos:end="93:42">&lt;&lt;</operator> <literal type="number" pos:start="93:44" pos:end="93:45">28</literal><operator pos:start="93:46" pos:end="93:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:48"><expr pos:start="95:9" pos:end="95:47"><call pos:start="95:9" pos:end="95:47"><name pos:start="95:9" pos:end="95:22">tlb_flush_page</name><argument_list pos:start="95:23" pos:end="95:47">(<argument pos:start="95:24" pos:end="95:26"><expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:26">env</name></expr></argument>, <argument pos:start="95:29" pos:end="95:46"><expr pos:start="95:29" pos:end="95:46"><name pos:start="95:29" pos:end="95:32">addr</name> <operator pos:start="95:34" pos:end="95:34">|</operator> <operator pos:start="95:36" pos:end="95:36">(</operator><literal type="number" pos:start="95:37" pos:end="95:39">0xE</literal> <operator pos:start="95:41" pos:end="95:42">&lt;&lt;</operator> <literal type="number" pos:start="95:44" pos:end="95:45">28</literal><operator pos:start="95:46" pos:end="95:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:48"><expr pos:start="97:9" pos:end="97:47"><call pos:start="97:9" pos:end="97:47"><name pos:start="97:9" pos:end="97:22">tlb_flush_page</name><argument_list pos:start="97:23" pos:end="97:47">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">env</name></expr></argument>, <argument pos:start="97:29" pos:end="97:46"><expr pos:start="97:29" pos:end="97:46"><name pos:start="97:29" pos:end="97:32">addr</name> <operator pos:start="97:34" pos:end="97:34">|</operator> <operator pos:start="97:36" pos:end="97:36">(</operator><literal type="number" pos:start="97:37" pos:end="97:39">0xF</literal> <operator pos:start="97:41" pos:end="97:42">&lt;&lt;</operator> <literal type="number" pos:start="97:44" pos:end="97:45">28</literal><operator pos:start="97:46" pos:end="97:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="102:0">break;</break>

<cpp:if pos:start="101:1" pos:end="101:25">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:25"><call pos:start="101:5" pos:end="101:25"><name pos:start="101:5" pos:end="101:11">defined</name><argument_list pos:start="101:12" pos:end="101:25">(<argument pos:start="101:13" pos:end="101:24"><expr pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="103:5" pos:end="103:25">case <expr pos:start="103:10" pos:end="103:24"><name pos:start="103:10" pos:end="103:24">POWERPC_MMU_64B</name></expr>:</case>

        <comment type="block" pos:start="105:9" pos:end="105:52">/* tlbie invalidate TLBs for all segments */</comment>

        <comment type="block" pos:start="107:9" pos:end="113:11">/* XXX: given the fact that there are too many segments to invalidate,

         *      and we still don't have a tlb_flush_mask(env, n, mask) in Qemu,

         *      we just invalidate all TLBs

         */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:26"><expr pos:start="115:9" pos:end="115:25"><call pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:17">tlb_flush</name><argument_list pos:start="115:18" pos:end="115:25">(<argument pos:start="115:19" pos:end="115:21"><expr pos:start="115:19" pos:end="115:21"><name pos:start="115:19" pos:end="115:21">env</name></expr></argument>, <argument pos:start="115:24" pos:end="115:24"><expr pos:start="115:24" pos:end="115:24"><literal type="number" pos:start="115:24" pos:end="115:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="120:0">break;</break>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="119:8" pos:end="119:34">/* defined(TARGET_PPC64) */</comment>

    <default pos:start="121:5" pos:end="121:12">default:</default>

        <comment type="block" pos:start="123:9" pos:end="123:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:46"><expr pos:start="125:9" pos:end="125:45"><call pos:start="125:9" pos:end="125:45"><name pos:start="125:9" pos:end="125:17">cpu_abort</name><argument_list pos:start="125:18" pos:end="125:45">(<argument pos:start="125:19" pos:end="125:21"><expr pos:start="125:19" pos:end="125:21"><name pos:start="125:19" pos:end="125:21">env</name></expr></argument>, <argument pos:start="125:24" pos:end="125:44"><expr pos:start="125:24" pos:end="125:44"><literal type="string" pos:start="125:24" pos:end="125:44">"Unknown MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    </block_content>}</block></switch>

<cpp:else pos:start="131:1" pos:end="131:5">#<cpp:directive pos:start="131:2" pos:end="131:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="133:5" pos:end="136:0"><expr pos:start="133:5" pos:end="133:31"><call pos:start="133:5" pos:end="133:31"><name pos:start="133:5" pos:end="133:26">ppc_tlb_invalidate_all</name><argument_list pos:start="133:27" pos:end="133:31">(<argument pos:start="133:28" pos:end="133:30"><expr pos:start="133:28" pos:end="133:30"><name pos:start="133:28" pos:end="133:30">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="135:1" pos:end="135:6">#<cpp:directive pos:start="135:2" pos:end="135:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
