<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25399.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:27">qmp_guest_file_open</name><parameter_list pos:start="1:28" pos:end="3:41">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">path</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:50">bool</name></type> <name pos:start="1:52" pos:end="1:59">has_mode</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:77"><decl pos:start="1:62" pos:end="1:77"><type pos:start="1:62" pos:end="1:77"><specifier pos:start="1:62" pos:end="1:66">const</specifier> <name pos:start="1:68" pos:end="1:71">char</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">mode</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:33">Error</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier><modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:18">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">FILE</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">fh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">ret</name> <init pos:start="13:17" pos:end="13:20">= <expr pos:start="13:19" pos:end="13:20"><operator pos:start="13:19" pos:end="13:19">-</operator><literal type="number" pos:start="13:20" pos:end="13:20">1</literal></expr></init></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:23" pos:end="13:28">handle</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:17">has_mode</name></expr>)</condition> <block pos:start="17:20" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:19">

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:12">mode</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="string" pos:start="19:16" pos:end="19:18">"r"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:71"><expr pos:start="23:5" pos:end="23:70"><call pos:start="23:5" pos:end="23:70"><name pos:start="23:5" pos:end="23:8">slog</name><argument_list pos:start="23:9" pos:end="23:70">(<argument pos:start="23:10" pos:end="23:57"><expr pos:start="23:10" pos:end="23:57"><literal type="string" pos:start="23:10" pos:end="23:57">"guest-file-open called, filepath: %s, mode: %s"</literal></expr></argument>, <argument pos:start="23:60" pos:end="23:63"><expr pos:start="23:60" pos:end="23:63"><name pos:start="23:60" pos:end="23:63">path</name></expr></argument>, <argument pos:start="23:66" pos:end="23:69"><expr pos:start="23:66" pos:end="23:69"><name pos:start="23:66" pos:end="23:69">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:6">fh</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:52"><name pos:start="25:10" pos:end="25:28">safe_open_or_create</name><argument_list pos:start="25:29" pos:end="25:52">(<argument pos:start="25:30" pos:end="25:33"><expr pos:start="25:30" pos:end="25:33"><name pos:start="25:30" pos:end="25:33">path</name></expr></argument>, <argument pos:start="25:36" pos:end="25:39"><expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:39">mode</name></expr></argument>, <argument pos:start="25:42" pos:end="25:51"><expr pos:start="25:42" pos:end="25:51"><operator pos:start="25:42" pos:end="25:42">&amp;</operator><name pos:start="25:43" pos:end="25:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:26">(<expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:17">local_err</name> <operator pos:start="27:19" pos:end="27:20">!=</operator> <name pos:start="27:22" pos:end="27:25">NULL</name></expr>)</condition> <block pos:start="27:28" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:23">error_propagate</name><argument_list pos:start="29:24" pos:end="29:40">(<argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:28">errp</name></expr></argument>, <argument pos:start="29:31" pos:end="29:39"><expr pos:start="29:31" pos:end="29:39"><name pos:start="29:31" pos:end="29:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="41:7">/* set fd non-blocking to avoid common use cases (like reading from a

     * named pipe) from hanging the agent

     */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:6">fd</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <call pos:start="43:10" pos:end="43:19"><name pos:start="43:10" pos:end="43:15">fileno</name><argument_list pos:start="43:16" pos:end="43:19">(<argument pos:start="43:17" pos:end="43:18"><expr pos:start="43:17" pos:end="43:18"><name pos:start="43:17" pos:end="43:18">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:28"><name pos:start="45:11" pos:end="45:15">fcntl</name><argument_list pos:start="45:16" pos:end="45:28">(<argument pos:start="45:17" pos:end="45:18"><expr pos:start="45:17" pos:end="45:18"><name pos:start="45:17" pos:end="45:18">fd</name></expr></argument>, <argument pos:start="45:21" pos:end="45:27"><expr pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:27">F_GETFL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:47"><expr pos:start="47:5" pos:end="47:46"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:46"><name pos:start="47:11" pos:end="47:15">fcntl</name><argument_list pos:start="47:16" pos:end="47:46">(<argument pos:start="47:17" pos:end="47:18"><expr pos:start="47:17" pos:end="47:18"><name pos:start="47:17" pos:end="47:18">fd</name></expr></argument>, <argument pos:start="47:21" pos:end="47:27"><expr pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:27">F_SETFL</name></expr></argument>, <argument pos:start="47:30" pos:end="47:45"><expr pos:start="47:30" pos:end="47:45"><name pos:start="47:30" pos:end="47:32">ret</name> <operator pos:start="47:34" pos:end="47:34">|</operator> <name pos:start="47:36" pos:end="47:45">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:18">(<expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:14">==</operator> <operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>)</condition> <block pos:start="49:20" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:18">

        <expr_stmt pos:start="51:9" pos:end="53:31"><expr pos:start="51:9" pos:end="53:30"><call pos:start="51:9" pos:end="53:30"><name pos:start="51:9" pos:end="51:24">error_setg_errno</name><argument_list pos:start="51:25" pos:end="53:30">(<argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">errp</name></expr></argument>, <argument pos:start="51:32" pos:end="51:36"><expr pos:start="51:32" pos:end="51:36"><name pos:start="51:32" pos:end="51:36">errno</name></expr></argument>, <argument pos:start="51:39" pos:end="51:77"><expr pos:start="51:39" pos:end="51:77"><literal type="string" pos:start="51:39" pos:end="51:77">"failed to make file '%s' non-blocking"</literal></expr></argument>,

                         <argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><name pos:start="53:26" pos:end="53:29">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:19"><expr pos:start="55:9" pos:end="55:18"><call pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:14">fclose</name><argument_list pos:start="55:15" pos:end="55:18">(<argument pos:start="55:16" pos:end="55:17"><expr pos:start="55:16" pos:end="55:17"><name pos:start="55:16" pos:end="55:17">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:10">handle</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:44"><name pos:start="63:14" pos:end="63:34">guest_file_handle_add</name><argument_list pos:start="63:35" pos:end="63:44">(<argument pos:start="63:36" pos:end="63:37"><expr pos:start="63:36" pos:end="63:37"><name pos:start="63:36" pos:end="63:37">fh</name></expr></argument>, <argument pos:start="63:40" pos:end="63:43"><expr pos:start="63:40" pos:end="63:43"><name pos:start="63:40" pos:end="63:43">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:27">(<expr pos:start="65:9" pos:end="65:26"><call pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:20">error_is_set</name><argument_list pos:start="65:21" pos:end="65:26">(<argument pos:start="65:22" pos:end="65:25"><expr pos:start="65:22" pos:end="65:25"><name pos:start="65:22" pos:end="65:25">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:29" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:18">

        <expr_stmt pos:start="67:9" pos:end="67:19"><expr pos:start="67:9" pos:end="67:18"><call pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:14">fclose</name><argument_list pos:start="67:15" pos:end="67:18">(<argument pos:start="67:16" pos:end="67:17"><expr pos:start="67:16" pos:end="67:17"><name pos:start="67:16" pos:end="67:17">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:54"><expr pos:start="75:5" pos:end="75:53"><call pos:start="75:5" pos:end="75:53"><name pos:start="75:5" pos:end="75:8">slog</name><argument_list pos:start="75:9" pos:end="75:53">(<argument pos:start="75:10" pos:end="75:44"><expr pos:start="75:10" pos:end="75:44"><literal type="string" pos:start="75:10" pos:end="75:37">"guest-file-open, handle: %"</literal> <name pos:start="75:39" pos:end="75:44">PRId64</name></expr></argument>, <argument pos:start="75:47" pos:end="75:52"><expr pos:start="75:47" pos:end="75:52"><name pos:start="75:47" pos:end="75:52">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:18">return <expr pos:start="77:12" pos:end="77:17"><name pos:start="77:12" pos:end="77:17">handle</name></expr>;</return>

</block_content>}</block></function>
</unit>
