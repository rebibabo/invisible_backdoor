<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24658.c" pos:tabs="8"><function pos:start="1:1" pos:end="301:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">parse_chunks</name><parameter_list pos:start="1:24" pos:end="1:83">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:52"><decl pos:start="1:45" pos:end="1:52"><type pos:start="1:45" pos:end="1:52"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:52">mode</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:61">int64_t</name></type> <name pos:start="1:63" pos:end="1:68">seekts</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:73">int</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:82">len_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="301:1">{<block_content pos:start="5:5" pos:end="299:23">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">WtvContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">wtv</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:31">= <expr pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:27">wtv</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">pb</name></name></expr></init></decl>;</decl_stmt>

    <while pos:start="9:5" pos:end="297:5">while <condition pos:start="9:11" pos:end="9:25">(<expr pos:start="9:12" pos:end="9:24"><operator pos:start="9:12" pos:end="9:12">!</operator><call pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:20">url_feof</name><argument_list pos:start="9:21" pos:end="9:24">(<argument pos:start="9:22" pos:end="9:23"><expr pos:start="9:22" pos:end="9:23"><name pos:start="9:22" pos:end="9:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:27" pos:end="297:5">{<block_content pos:start="11:9" pos:end="295:48">

        <decl_stmt pos:start="11:9" pos:end="11:22"><decl pos:start="11:9" pos:end="11:21"><type pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:19">ff_asf_guid</name></type> <name pos:start="11:21" pos:end="11:21">g</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:31"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">len</name></decl>, <decl pos:start="13:18" pos:end="13:20"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:18" pos:end="13:20">sid</name></decl>, <decl pos:start="13:23" pos:end="13:30"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:23" pos:end="13:30">consumed</name></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><call pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:19">ff_get_guid</name><argument_list pos:start="17:20" pos:end="17:27">(<argument pos:start="17:21" pos:end="17:22"><expr pos:start="17:21" pos:end="17:22"><name pos:start="17:21" pos:end="17:22">pb</name></expr></argument>, <argument pos:start="17:25" pos:end="17:26"><expr pos:start="17:25" pos:end="17:26"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:26">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:22">get_le32</name><argument_list pos:start="19:23" pos:end="19:26">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:18"><if pos:start="21:9" pos:end="23:18">if <condition pos:start="21:12" pos:end="21:21">(<expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">len</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:20">32</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:18"><block_content pos:start="23:13" pos:end="23:18">

            <break pos:start="23:13" pos:end="23:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:11">sid</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:22">get_le32</name><argument_list pos:start="25:23" pos:end="25:26">(<argument pos:start="25:24" pos:end="25:25"><expr pos:start="25:24" pos:end="25:25"><name pos:start="25:24" pos:end="25:25">pb</name></expr></argument>)</argument_list></call> <operator pos:start="25:28" pos:end="25:28">&amp;</operator> <literal type="number" pos:start="25:30" pos:end="25:35">0x7FFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:17">url_fskip</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:16">consumed</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:21">32</literal></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="291:85"><if pos:start="33:9" pos:end="67:9">if <condition pos:start="33:12" pos:end="33:40">(<expr pos:start="33:13" pos:end="33:39"><operator pos:start="33:13" pos:end="33:13">!</operator><call pos:start="33:14" pos:end="33:39"><name pos:start="33:14" pos:end="33:23">ff_guidcmp</name><argument_list pos:start="33:24" pos:end="33:39">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">g</name></expr></argument>, <argument pos:start="33:28" pos:end="33:38"><expr pos:start="33:28" pos:end="33:38"><name pos:start="33:28" pos:end="33:38">stream_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:42" pos:end="67:9">{<block_content pos:start="35:13" pos:end="65:13">

            <if_stmt pos:start="35:13" pos:end="65:13"><if pos:start="35:13" pos:end="65:13">if <condition pos:start="35:16" pos:end="35:49">(<expr pos:start="35:17" pos:end="35:48"><call pos:start="35:17" pos:end="35:44"><name pos:start="35:17" pos:end="35:36">ff_find_stream_index</name><argument_list pos:start="35:37" pos:end="35:44">(<argument pos:start="35:38" pos:end="35:38"><expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">s</name></expr></argument>, <argument pos:start="35:41" pos:end="35:43"><expr pos:start="35:41" pos:end="35:43"><name pos:start="35:41" pos:end="35:43">sid</name></expr></argument>)</argument_list></call> <operator pos:start="35:46" pos:end="35:46">&lt;</operator> <literal type="number" pos:start="35:48" pos:end="35:48">0</literal></expr>)</condition> <block pos:start="35:51" pos:end="65:13">{<block_content pos:start="37:17" pos:end="63:17">

                <decl_stmt pos:start="37:17" pos:end="37:59"><decl pos:start="37:17" pos:end="37:37"><type pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:27">ff_asf_guid</name></type> <name pos:start="37:29" pos:end="37:37">mediatype</name></decl>, <decl pos:start="37:40" pos:end="37:46"><type ref="prev" pos:start="37:17" pos:end="37:27"/><name pos:start="37:40" pos:end="37:46">subtype</name></decl>, <decl pos:start="37:49" pos:end="37:58"><type ref="prev" pos:start="37:17" pos:end="37:27"/><name pos:start="37:49" pos:end="37:58">formattype</name></decl>;</decl_stmt>

                <decl_stmt pos:start="39:17" pos:end="39:25"><decl pos:start="39:17" pos:end="39:24"><type pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">int</name></type> <name pos:start="39:21" pos:end="39:24">size</name></decl>;</decl_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:31"><expr pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:24">consumed</name> <operator pos:start="41:26" pos:end="41:27">+=</operator> <literal type="number" pos:start="41:29" pos:end="41:30">20</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:34"><expr pos:start="43:17" pos:end="43:33"><call pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:25">url_fskip</name><argument_list pos:start="43:26" pos:end="43:33">(<argument pos:start="43:27" pos:end="43:28"><expr pos:start="43:27" pos:end="43:28"><name pos:start="43:27" pos:end="43:28">pb</name></expr></argument>, <argument pos:start="43:31" pos:end="43:32"><expr pos:start="43:31" pos:end="43:32"><literal type="number" pos:start="43:31" pos:end="43:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="45:17" pos:end="63:17"><if pos:start="45:17" pos:end="63:17">if <condition pos:start="45:20" pos:end="45:33">(<expr pos:start="45:21" pos:end="45:32"><call pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:28">get_le32</name><argument_list pos:start="45:29" pos:end="45:32">(<argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><name pos:start="45:30" pos:end="45:31">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:35" pos:end="63:17">{<block_content pos:start="47:21" pos:end="61:42">

                    <expr_stmt pos:start="47:21" pos:end="47:37"><expr pos:start="47:21" pos:end="47:36"><call pos:start="47:21" pos:end="47:36"><name pos:start="47:21" pos:end="47:29">url_fskip</name><argument_list pos:start="47:30" pos:end="47:36">(<argument pos:start="47:31" pos:end="47:32"><expr pos:start="47:31" pos:end="47:32"><name pos:start="47:31" pos:end="47:32">pb</name></expr></argument>, <argument pos:start="47:35" pos:end="47:35"><expr pos:start="47:35" pos:end="47:35"><literal type="number" pos:start="47:35" pos:end="47:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:48"><expr pos:start="49:21" pos:end="49:47"><call pos:start="49:21" pos:end="49:47"><name pos:start="49:21" pos:end="49:31">ff_get_guid</name><argument_list pos:start="49:32" pos:end="49:47">(<argument pos:start="49:33" pos:end="49:34"><expr pos:start="49:33" pos:end="49:34"><name pos:start="49:33" pos:end="49:34">pb</name></expr></argument>, <argument pos:start="49:37" pos:end="49:46"><expr pos:start="49:37" pos:end="49:46"><operator pos:start="49:37" pos:end="49:37">&amp;</operator><name pos:start="49:38" pos:end="49:46">mediatype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:46"><expr pos:start="51:21" pos:end="51:45"><call pos:start="51:21" pos:end="51:45"><name pos:start="51:21" pos:end="51:31">ff_get_guid</name><argument_list pos:start="51:32" pos:end="51:45">(<argument pos:start="51:33" pos:end="51:34"><expr pos:start="51:33" pos:end="51:34"><name pos:start="51:33" pos:end="51:34">pb</name></expr></argument>, <argument pos:start="51:37" pos:end="51:44"><expr pos:start="51:37" pos:end="51:44"><operator pos:start="51:37" pos:end="51:37">&amp;</operator><name pos:start="51:38" pos:end="51:44">subtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="53:21" pos:end="53:38"><expr pos:start="53:21" pos:end="53:37"><call pos:start="53:21" pos:end="53:37"><name pos:start="53:21" pos:end="53:29">url_fskip</name><argument_list pos:start="53:30" pos:end="53:37">(<argument pos:start="53:31" pos:end="53:32"><expr pos:start="53:31" pos:end="53:32"><name pos:start="53:31" pos:end="53:32">pb</name></expr></argument>, <argument pos:start="53:35" pos:end="53:36"><expr pos:start="53:35" pos:end="53:36"><literal type="number" pos:start="53:35" pos:end="53:36">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:49"><expr pos:start="55:21" pos:end="55:48"><call pos:start="55:21" pos:end="55:48"><name pos:start="55:21" pos:end="55:31">ff_get_guid</name><argument_list pos:start="55:32" pos:end="55:48">(<argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">pb</name></expr></argument>, <argument pos:start="55:37" pos:end="55:47"><expr pos:start="55:37" pos:end="55:47"><operator pos:start="55:37" pos:end="55:37">&amp;</operator><name pos:start="55:38" pos:end="55:47">formattype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:40"><expr pos:start="57:21" pos:end="57:39"><name pos:start="57:21" pos:end="57:24">size</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <call pos:start="57:28" pos:end="57:39"><name pos:start="57:28" pos:end="57:35">get_le32</name><argument_list pos:start="57:36" pos:end="57:39">(<argument pos:start="57:37" pos:end="57:38"><expr pos:start="57:37" pos:end="57:38"><name pos:start="57:37" pos:end="57:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:86"><expr pos:start="59:21" pos:end="59:85"><call pos:start="59:21" pos:end="59:85"><name pos:start="59:21" pos:end="59:36">parse_media_type</name><argument_list pos:start="59:37" pos:end="59:85">(<argument pos:start="59:38" pos:end="59:38"><expr pos:start="59:38" pos:end="59:38"><name pos:start="59:38" pos:end="59:38">s</name></expr></argument>, <argument pos:start="59:41" pos:end="59:41"><expr pos:start="59:41" pos:end="59:41"><literal type="number" pos:start="59:41" pos:end="59:41">0</literal></expr></argument>, <argument pos:start="59:44" pos:end="59:46"><expr pos:start="59:44" pos:end="59:46"><name pos:start="59:44" pos:end="59:46">sid</name></expr></argument>, <argument pos:start="59:49" pos:end="59:57"><expr pos:start="59:49" pos:end="59:57"><name pos:start="59:49" pos:end="59:57">mediatype</name></expr></argument>, <argument pos:start="59:60" pos:end="59:66"><expr pos:start="59:60" pos:end="59:66"><name pos:start="59:60" pos:end="59:66">subtype</name></expr></argument>, <argument pos:start="59:69" pos:end="59:78"><expr pos:start="59:69" pos:end="59:78"><name pos:start="59:69" pos:end="59:78">formattype</name></expr></argument>, <argument pos:start="59:81" pos:end="59:84"><expr pos:start="59:81" pos:end="59:84"><name pos:start="59:81" pos:end="59:84">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:42"><expr pos:start="61:21" pos:end="61:41"><name pos:start="61:21" pos:end="61:28">consumed</name> <operator pos:start="61:30" pos:end="61:31">+=</operator> <literal type="number" pos:start="61:33" pos:end="61:36">72</literal> <operator pos:start="61:36" pos:end="61:36">+</operator> <name pos:start="61:38" pos:end="61:41">size</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="67:11" pos:end="95:9">else if <condition pos:start="67:19" pos:end="67:48">(<expr pos:start="67:20" pos:end="67:47"><operator pos:start="67:20" pos:end="67:20">!</operator><call pos:start="67:21" pos:end="67:47"><name pos:start="67:21" pos:end="67:30">ff_guidcmp</name><argument_list pos:start="67:31" pos:end="67:47">(<argument pos:start="67:32" pos:end="67:32"><expr pos:start="67:32" pos:end="67:32"><name pos:start="67:32" pos:end="67:32">g</name></expr></argument>, <argument pos:start="67:35" pos:end="67:46"><expr pos:start="67:35" pos:end="67:46"><name pos:start="67:35" pos:end="67:46">stream2_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:50" pos:end="95:9">{<block_content pos:start="69:13" pos:end="93:13">

            <decl_stmt pos:start="69:13" pos:end="69:60"><decl pos:start="69:13" pos:end="69:59"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:28">stream_index</name> <init pos:start="69:30" pos:end="69:59">= <expr pos:start="69:32" pos:end="69:59"><call pos:start="69:32" pos:end="69:59"><name pos:start="69:32" pos:end="69:51">ff_find_stream_index</name><argument_list pos:start="69:52" pos:end="69:59">(<argument pos:start="69:53" pos:end="69:53"><expr pos:start="69:53" pos:end="69:53"><name pos:start="69:53" pos:end="69:53">s</name></expr></argument>, <argument pos:start="69:56" pos:end="69:58"><expr pos:start="69:56" pos:end="69:58"><name pos:start="69:56" pos:end="69:58">sid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="71:13" pos:end="93:13"><if pos:start="71:13" pos:end="93:13">if <condition pos:start="71:16" pos:end="71:99">(<expr pos:start="71:17" pos:end="71:98"><name pos:start="71:17" pos:end="71:28">stream_index</name> <operator pos:start="71:30" pos:end="71:31">&gt;=</operator> <literal type="number" pos:start="71:33" pos:end="71:33">0</literal> <operator pos:start="71:35" pos:end="71:36">&amp;&amp;</operator> <operator pos:start="71:38" pos:end="71:38">!</operator><operator pos:start="71:39" pos:end="71:39">(</operator><operator pos:start="71:40" pos:end="71:40">(</operator><name pos:start="71:41" pos:end="71:49">WtvStream</name><operator pos:start="71:50" pos:end="71:50">*</operator><operator pos:start="71:51" pos:end="71:51">)</operator><name pos:start="71:52" pos:end="71:75"><name pos:start="71:52" pos:end="71:52">s</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:61">streams</name><index pos:start="71:62" pos:end="71:75">[<expr pos:start="71:63" pos:end="71:74"><name pos:start="71:63" pos:end="71:74">stream_index</name></expr>]</index></name><operator pos:start="71:76" pos:end="71:77">-&gt;</operator><name pos:start="71:78" pos:end="71:86">priv_data</name><operator pos:start="71:87" pos:end="71:87">)</operator><operator pos:start="71:88" pos:end="71:89">-&gt;</operator><name pos:start="71:90" pos:end="71:98">seen_data</name></expr>)</condition> <block pos:start="71:101" pos:end="93:13">{<block_content pos:start="73:17" pos:end="91:38">

                <decl_stmt pos:start="73:17" pos:end="73:59"><decl pos:start="73:17" pos:end="73:37"><type pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:27">ff_asf_guid</name></type> <name pos:start="73:29" pos:end="73:37">mediatype</name></decl>, <decl pos:start="73:40" pos:end="73:46"><type ref="prev" pos:start="73:17" pos:end="73:27"/><name pos:start="73:40" pos:end="73:46">subtype</name></decl>, <decl pos:start="73:49" pos:end="73:58"><type ref="prev" pos:start="73:17" pos:end="73:27"/><name pos:start="73:49" pos:end="73:58">formattype</name></decl>;</decl_stmt>

                <decl_stmt pos:start="75:17" pos:end="75:25"><decl pos:start="75:17" pos:end="75:24"><type pos:start="75:17" pos:end="75:19"><name pos:start="75:17" pos:end="75:19">int</name></type> <name pos:start="75:21" pos:end="75:24">size</name></decl>;</decl_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:34"><expr pos:start="77:17" pos:end="77:33"><call pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:25">url_fskip</name><argument_list pos:start="77:26" pos:end="77:33">(<argument pos:start="77:27" pos:end="77:28"><expr pos:start="77:27" pos:end="77:28"><name pos:start="77:27" pos:end="77:28">pb</name></expr></argument>, <argument pos:start="77:31" pos:end="77:32"><expr pos:start="77:31" pos:end="77:32"><literal type="number" pos:start="77:31" pos:end="77:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:44"><expr pos:start="79:17" pos:end="79:43"><call pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:27">ff_get_guid</name><argument_list pos:start="79:28" pos:end="79:43">(<argument pos:start="79:29" pos:end="79:30"><expr pos:start="79:29" pos:end="79:30"><name pos:start="79:29" pos:end="79:30">pb</name></expr></argument>, <argument pos:start="79:33" pos:end="79:42"><expr pos:start="79:33" pos:end="79:42"><operator pos:start="79:33" pos:end="79:33">&amp;</operator><name pos:start="79:34" pos:end="79:42">mediatype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:42"><expr pos:start="81:17" pos:end="81:41"><call pos:start="81:17" pos:end="81:41"><name pos:start="81:17" pos:end="81:27">ff_get_guid</name><argument_list pos:start="81:28" pos:end="81:41">(<argument pos:start="81:29" pos:end="81:30"><expr pos:start="81:29" pos:end="81:30"><name pos:start="81:29" pos:end="81:30">pb</name></expr></argument>, <argument pos:start="81:33" pos:end="81:40"><expr pos:start="81:33" pos:end="81:40"><operator pos:start="81:33" pos:end="81:33">&amp;</operator><name pos:start="81:34" pos:end="81:40">subtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:34"><expr pos:start="83:17" pos:end="83:33"><call pos:start="83:17" pos:end="83:33"><name pos:start="83:17" pos:end="83:25">url_fskip</name><argument_list pos:start="83:26" pos:end="83:33">(<argument pos:start="83:27" pos:end="83:28"><expr pos:start="83:27" pos:end="83:28"><name pos:start="83:27" pos:end="83:28">pb</name></expr></argument>, <argument pos:start="83:31" pos:end="83:32"><expr pos:start="83:31" pos:end="83:32"><literal type="number" pos:start="83:31" pos:end="83:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:45"><expr pos:start="85:17" pos:end="85:44"><call pos:start="85:17" pos:end="85:44"><name pos:start="85:17" pos:end="85:27">ff_get_guid</name><argument_list pos:start="85:28" pos:end="85:44">(<argument pos:start="85:29" pos:end="85:30"><expr pos:start="85:29" pos:end="85:30"><name pos:start="85:29" pos:end="85:30">pb</name></expr></argument>, <argument pos:start="85:33" pos:end="85:43"><expr pos:start="85:33" pos:end="85:43"><operator pos:start="85:33" pos:end="85:33">&amp;</operator><name pos:start="85:34" pos:end="85:43">formattype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:36"><expr pos:start="87:17" pos:end="87:35"><name pos:start="87:17" pos:end="87:20">size</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:35"><name pos:start="87:24" pos:end="87:31">get_le32</name><argument_list pos:start="87:32" pos:end="87:35">(<argument pos:start="87:33" pos:end="87:34"><expr pos:start="87:33" pos:end="87:34"><name pos:start="87:33" pos:end="87:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:105"><expr pos:start="89:17" pos:end="89:104"><call pos:start="89:17" pos:end="89:104"><name pos:start="89:17" pos:end="89:32">parse_media_type</name><argument_list pos:start="89:33" pos:end="89:104">(<argument pos:start="89:34" pos:end="89:34"><expr pos:start="89:34" pos:end="89:34"><name pos:start="89:34" pos:end="89:34">s</name></expr></argument>, <argument pos:start="89:37" pos:end="89:60"><expr pos:start="89:37" pos:end="89:60"><name pos:start="89:37" pos:end="89:60"><name pos:start="89:37" pos:end="89:37">s</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:46">streams</name><index pos:start="89:47" pos:end="89:60">[<expr pos:start="89:48" pos:end="89:59"><name pos:start="89:48" pos:end="89:59">stream_index</name></expr>]</index></name></expr></argument>, <argument pos:start="89:63" pos:end="89:65"><expr pos:start="89:63" pos:end="89:65"><name pos:start="89:63" pos:end="89:65">sid</name></expr></argument>, <argument pos:start="89:68" pos:end="89:76"><expr pos:start="89:68" pos:end="89:76"><name pos:start="89:68" pos:end="89:76">mediatype</name></expr></argument>, <argument pos:start="89:79" pos:end="89:85"><expr pos:start="89:79" pos:end="89:85"><name pos:start="89:79" pos:end="89:85">subtype</name></expr></argument>, <argument pos:start="89:88" pos:end="89:97"><expr pos:start="89:88" pos:end="89:97"><name pos:start="89:88" pos:end="89:97">formattype</name></expr></argument>, <argument pos:start="89:100" pos:end="89:103"><expr pos:start="89:100" pos:end="89:103"><name pos:start="89:100" pos:end="89:103">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:38"><expr pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:24">consumed</name> <operator pos:start="91:26" pos:end="91:27">+=</operator> <literal type="number" pos:start="91:29" pos:end="91:32">76</literal> <operator pos:start="91:32" pos:end="91:32">+</operator> <name pos:start="91:34" pos:end="91:37">size</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="95:11" pos:end="147:9">else if <condition pos:start="95:19" pos:end="105:65">(<expr pos:start="95:20" pos:end="105:64"><operator pos:start="95:20" pos:end="95:20">!</operator><call pos:start="95:21" pos:end="95:71"><name pos:start="95:21" pos:end="95:30">ff_guidcmp</name><argument_list pos:start="95:31" pos:end="95:71">(<argument pos:start="95:32" pos:end="95:32"><expr pos:start="95:32" pos:end="95:32"><name pos:start="95:32" pos:end="95:32">g</name></expr></argument>, <argument pos:start="95:35" pos:end="95:70"><expr pos:start="95:35" pos:end="95:70"><name pos:start="95:35" pos:end="95:70">EVENTID_AudioDescriptorSpanningEvent</name></expr></argument>)</argument_list></call> <operator pos:start="95:73" pos:end="95:74">||</operator>

                   <operator pos:start="97:20" pos:end="97:20">!</operator><call pos:start="97:21" pos:end="97:70"><name pos:start="97:21" pos:end="97:30">ff_guidcmp</name><argument_list pos:start="97:31" pos:end="97:70">(<argument pos:start="97:32" pos:end="97:32"><expr pos:start="97:32" pos:end="97:32"><name pos:start="97:32" pos:end="97:32">g</name></expr></argument>, <argument pos:start="97:35" pos:end="97:69"><expr pos:start="97:35" pos:end="97:69"><name pos:start="97:35" pos:end="97:69">EVENTID_CtxADescriptorSpanningEvent</name></expr></argument>)</argument_list></call> <operator pos:start="97:72" pos:end="97:73">||</operator>

                   <operator pos:start="99:20" pos:end="99:20">!</operator><call pos:start="99:21" pos:end="99:68"><name pos:start="99:21" pos:end="99:30">ff_guidcmp</name><argument_list pos:start="99:31" pos:end="99:68">(<argument pos:start="99:32" pos:end="99:32"><expr pos:start="99:32" pos:end="99:32"><name pos:start="99:32" pos:end="99:32">g</name></expr></argument>, <argument pos:start="99:35" pos:end="99:67"><expr pos:start="99:35" pos:end="99:67"><name pos:start="99:35" pos:end="99:67">EVENTID_CSDescriptorSpanningEvent</name></expr></argument>)</argument_list></call> <operator pos:start="99:70" pos:end="99:71">||</operator>

                   <operator pos:start="101:20" pos:end="101:20">!</operator><call pos:start="101:21" pos:end="101:64"><name pos:start="101:21" pos:end="101:30">ff_guidcmp</name><argument_list pos:start="101:31" pos:end="101:64">(<argument pos:start="101:32" pos:end="101:32"><expr pos:start="101:32" pos:end="101:32"><name pos:start="101:32" pos:end="101:32">g</name></expr></argument>, <argument pos:start="101:35" pos:end="101:63"><expr pos:start="101:35" pos:end="101:63"><name pos:start="101:35" pos:end="101:63">EVENTID_StreamIDSpanningEvent</name></expr></argument>)</argument_list></call> <operator pos:start="101:66" pos:end="101:67">||</operator>

                   <operator pos:start="103:20" pos:end="103:20">!</operator><call pos:start="103:21" pos:end="103:64"><name pos:start="103:21" pos:end="103:30">ff_guidcmp</name><argument_list pos:start="103:31" pos:end="103:64">(<argument pos:start="103:32" pos:end="103:32"><expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">g</name></expr></argument>, <argument pos:start="103:35" pos:end="103:63"><expr pos:start="103:35" pos:end="103:63"><name pos:start="103:35" pos:end="103:63">EVENTID_SubtitleSpanningEvent</name></expr></argument>)</argument_list></call> <operator pos:start="103:66" pos:end="103:67">||</operator>

                   <operator pos:start="105:20" pos:end="105:20">!</operator><call pos:start="105:21" pos:end="105:64"><name pos:start="105:21" pos:end="105:30">ff_guidcmp</name><argument_list pos:start="105:31" pos:end="105:64">(<argument pos:start="105:32" pos:end="105:32"><expr pos:start="105:32" pos:end="105:32"><name pos:start="105:32" pos:end="105:32">g</name></expr></argument>, <argument pos:start="105:35" pos:end="105:63"><expr pos:start="105:35" pos:end="105:63"><name pos:start="105:35" pos:end="105:63">EVENTID_TeletextSpanningEvent</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:67" pos:end="147:9">{<block_content pos:start="107:13" pos:end="145:13">

            <decl_stmt pos:start="107:13" pos:end="107:60"><decl pos:start="107:13" pos:end="107:59"><type pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">int</name></type> <name pos:start="107:17" pos:end="107:28">stream_index</name> <init pos:start="107:30" pos:end="107:59">= <expr pos:start="107:32" pos:end="107:59"><call pos:start="107:32" pos:end="107:59"><name pos:start="107:32" pos:end="107:51">ff_find_stream_index</name><argument_list pos:start="107:52" pos:end="107:59">(<argument pos:start="107:53" pos:end="107:53"><expr pos:start="107:53" pos:end="107:53"><name pos:start="107:53" pos:end="107:53">s</name></expr></argument>, <argument pos:start="107:56" pos:end="107:58"><expr pos:start="107:56" pos:end="107:58"><name pos:start="107:56" pos:end="107:58">sid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="109:13" pos:end="145:13"><if pos:start="109:13" pos:end="145:13">if <condition pos:start="109:16" pos:end="109:34">(<expr pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:28">stream_index</name> <operator pos:start="109:30" pos:end="109:31">&gt;=</operator> <literal type="number" pos:start="109:33" pos:end="109:33">0</literal></expr>)</condition> <block pos:start="109:36" pos:end="145:13">{<block_content pos:start="111:17" pos:end="143:87">

                <decl_stmt pos:start="111:17" pos:end="111:56"><decl pos:start="111:17" pos:end="111:55"><type pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:24">AVStream</name> <modifier pos:start="111:26" pos:end="111:26">*</modifier></type><name pos:start="111:27" pos:end="111:28">st</name> <init pos:start="111:30" pos:end="111:55">= <expr pos:start="111:32" pos:end="111:55"><name pos:start="111:32" pos:end="111:55"><name pos:start="111:32" pos:end="111:32">s</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:41">streams</name><index pos:start="111:42" pos:end="111:55">[<expr pos:start="111:43" pos:end="111:54"><name pos:start="111:43" pos:end="111:54">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="113:17" pos:end="113:33"><decl pos:start="113:17" pos:end="113:32"><type pos:start="113:17" pos:end="113:23"><name pos:start="113:17" pos:end="113:23">uint8_t</name></type> <name pos:start="113:25" pos:end="113:32"><name pos:start="113:25" pos:end="113:27">buf</name><index pos:start="113:28" pos:end="113:32">[<expr pos:start="113:29" pos:end="113:31"><literal type="number" pos:start="113:29" pos:end="113:31">258</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="115:17" pos:end="115:42"><decl pos:start="115:17" pos:end="115:41"><type pos:start="115:17" pos:end="115:31"><specifier pos:start="115:17" pos:end="115:21">const</specifier> <name pos:start="115:23" pos:end="115:29">uint8_t</name> <modifier pos:start="115:31" pos:end="115:31">*</modifier></type><name pos:start="115:32" pos:end="115:35">pbuf</name> <init pos:start="115:37" pos:end="115:41">= <expr pos:start="115:39" pos:end="115:41"><name pos:start="115:39" pos:end="115:41">buf</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="117:17" pos:end="117:29"><decl pos:start="117:17" pos:end="117:28"><type pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:19">int</name></type> <name pos:start="117:21" pos:end="117:28">buf_size</name></decl>;</decl_stmt>



                <expr_stmt pos:start="121:17" pos:end="121:33"><expr pos:start="121:17" pos:end="121:32"><call pos:start="121:17" pos:end="121:32"><name pos:start="121:17" pos:end="121:25">url_fskip</name><argument_list pos:start="121:26" pos:end="121:32">(<argument pos:start="121:27" pos:end="121:28"><expr pos:start="121:27" pos:end="121:28"><name pos:start="121:27" pos:end="121:28">pb</name></expr></argument>, <argument pos:start="121:31" pos:end="121:31"><expr pos:start="121:31" pos:end="121:31"><literal type="number" pos:start="121:31" pos:end="121:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:30"><expr pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:24">consumed</name> <operator pos:start="123:26" pos:end="123:27">+=</operator> <literal type="number" pos:start="123:29" pos:end="123:29">8</literal></expr>;</expr_stmt>

                <if_stmt pos:start="125:17" pos:end="133:17"><if pos:start="125:17" pos:end="133:17">if <condition pos:start="125:20" pos:end="127:70">(<expr pos:start="125:21" pos:end="127:69"><operator pos:start="125:21" pos:end="125:21">!</operator><call pos:start="125:22" pos:end="125:71"><name pos:start="125:22" pos:end="125:31">ff_guidcmp</name><argument_list pos:start="125:32" pos:end="125:71">(<argument pos:start="125:33" pos:end="125:33"><expr pos:start="125:33" pos:end="125:33"><name pos:start="125:33" pos:end="125:33">g</name></expr></argument>, <argument pos:start="125:36" pos:end="125:70"><expr pos:start="125:36" pos:end="125:70"><name pos:start="125:36" pos:end="125:70">EVENTID_CtxADescriptorSpanningEvent</name></expr></argument>)</argument_list></call> <operator pos:start="125:73" pos:end="125:74">||</operator>

                    <operator pos:start="127:21" pos:end="127:21">!</operator><call pos:start="127:22" pos:end="127:69"><name pos:start="127:22" pos:end="127:31">ff_guidcmp</name><argument_list pos:start="127:32" pos:end="127:69">(<argument pos:start="127:33" pos:end="127:33"><expr pos:start="127:33" pos:end="127:33"><name pos:start="127:33" pos:end="127:33">g</name></expr></argument>, <argument pos:start="127:36" pos:end="127:68"><expr pos:start="127:36" pos:end="127:68"><name pos:start="127:36" pos:end="127:68">EVENTID_CSDescriptorSpanningEvent</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:72" pos:end="133:17">{<block_content pos:start="129:21" pos:end="131:34">

                    <expr_stmt pos:start="129:21" pos:end="129:37"><expr pos:start="129:21" pos:end="129:36"><call pos:start="129:21" pos:end="129:36"><name pos:start="129:21" pos:end="129:29">url_fskip</name><argument_list pos:start="129:30" pos:end="129:36">(<argument pos:start="129:31" pos:end="129:32"><expr pos:start="129:31" pos:end="129:32"><name pos:start="129:31" pos:end="129:32">pb</name></expr></argument>, <argument pos:start="129:35" pos:end="129:35"><expr pos:start="129:35" pos:end="129:35"><literal type="number" pos:start="129:35" pos:end="129:35">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:34"><expr pos:start="131:21" pos:end="131:33"><name pos:start="131:21" pos:end="131:28">consumed</name> <operator pos:start="131:30" pos:end="131:31">+=</operator> <literal type="number" pos:start="131:33" pos:end="131:33">6</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="137:17" pos:end="137:62"><expr pos:start="137:17" pos:end="137:61"><name pos:start="137:17" pos:end="137:24">buf_size</name> <operator pos:start="137:26" pos:end="137:26">=</operator> <call pos:start="137:28" pos:end="137:61"><name pos:start="137:28" pos:end="137:32">FFMIN</name><argument_list pos:start="137:33" pos:end="137:61">(<argument pos:start="137:34" pos:end="137:47"><expr pos:start="137:34" pos:end="137:47"><name pos:start="137:34" pos:end="137:36">len</name> <operator pos:start="137:38" pos:end="137:38">-</operator> <name pos:start="137:40" pos:end="137:47">consumed</name></expr></argument>, <argument pos:start="137:50" pos:end="137:60"><expr pos:start="137:50" pos:end="137:60"><sizeof pos:start="137:50" pos:end="137:60">sizeof<argument_list pos:start="137:56" pos:end="137:60">(<argument pos:start="137:57" pos:end="137:59"><expr pos:start="137:57" pos:end="137:59"><name pos:start="137:57" pos:end="137:59">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:46"><expr pos:start="139:17" pos:end="139:45"><call pos:start="139:17" pos:end="139:45"><name pos:start="139:17" pos:end="139:26">get_buffer</name><argument_list pos:start="139:27" pos:end="139:45">(<argument pos:start="139:28" pos:end="139:29"><expr pos:start="139:28" pos:end="139:29"><name pos:start="139:28" pos:end="139:29">pb</name></expr></argument>, <argument pos:start="139:32" pos:end="139:34"><expr pos:start="139:32" pos:end="139:34"><name pos:start="139:32" pos:end="139:34">buf</name></expr></argument>, <argument pos:start="139:37" pos:end="139:44"><expr pos:start="139:37" pos:end="139:44"><name pos:start="139:37" pos:end="139:44">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:37"><expr pos:start="141:17" pos:end="141:36"><name pos:start="141:17" pos:end="141:24">consumed</name> <operator pos:start="141:26" pos:end="141:27">+=</operator> <name pos:start="141:29" pos:end="141:36">buf_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:87"><expr pos:start="143:17" pos:end="143:86"><call pos:start="143:17" pos:end="143:86"><name pos:start="143:17" pos:end="143:41">ff_parse_mpeg2_descriptor</name><argument_list pos:start="143:42" pos:end="143:86">(<argument pos:start="143:43" pos:end="143:43"><expr pos:start="143:43" pos:end="143:43"><name pos:start="143:43" pos:end="143:43">s</name></expr></argument>, <argument pos:start="143:46" pos:end="143:47"><expr pos:start="143:46" pos:end="143:47"><name pos:start="143:46" pos:end="143:47">st</name></expr></argument>, <argument pos:start="143:50" pos:end="143:50"><expr pos:start="143:50" pos:end="143:50"><literal type="number" pos:start="143:50" pos:end="143:50">0</literal></expr></argument>, <argument pos:start="143:53" pos:end="143:57"><expr pos:start="143:53" pos:end="143:57"><operator pos:start="143:53" pos:end="143:53">&amp;</operator><name pos:start="143:54" pos:end="143:57">pbuf</name></expr></argument>, <argument pos:start="143:60" pos:end="143:73"><expr pos:start="143:60" pos:end="143:73"><name pos:start="143:60" pos:end="143:62">buf</name> <operator pos:start="143:64" pos:end="143:64">+</operator> <name pos:start="143:66" pos:end="143:73">buf_size</name></expr></argument>, <argument pos:start="143:76" pos:end="143:76"><expr pos:start="143:76" pos:end="143:76"><literal type="number" pos:start="143:76" pos:end="143:76">0</literal></expr></argument>, <argument pos:start="143:79" pos:end="143:79"><expr pos:start="143:79" pos:end="143:79"><literal type="number" pos:start="143:79" pos:end="143:79">0</literal></expr></argument>, <argument pos:start="143:82" pos:end="143:82"><expr pos:start="143:82" pos:end="143:82"><literal type="number" pos:start="143:82" pos:end="143:82">0</literal></expr></argument>, <argument pos:start="143:85" pos:end="143:85"><expr pos:start="143:85" pos:end="143:85"><literal type="number" pos:start="143:85" pos:end="143:85">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="147:11" pos:end="163:9">else if <condition pos:start="147:19" pos:end="147:77">(<expr pos:start="147:20" pos:end="147:76"><operator pos:start="147:20" pos:end="147:20">!</operator><call pos:start="147:21" pos:end="147:76"><name pos:start="147:21" pos:end="147:30">ff_guidcmp</name><argument_list pos:start="147:31" pos:end="147:76">(<argument pos:start="147:32" pos:end="147:32"><expr pos:start="147:32" pos:end="147:32"><name pos:start="147:32" pos:end="147:32">g</name></expr></argument>, <argument pos:start="147:35" pos:end="147:75"><expr pos:start="147:35" pos:end="147:75"><name pos:start="147:35" pos:end="147:75">EVENTID_DVBScramblingControlSpanningEvent</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:79" pos:end="163:9">{<block_content pos:start="149:13" pos:end="161:13">

            <decl_stmt pos:start="149:13" pos:end="149:60"><decl pos:start="149:13" pos:end="149:59"><type pos:start="149:13" pos:end="149:15"><name pos:start="149:13" pos:end="149:15">int</name></type> <name pos:start="149:17" pos:end="149:28">stream_index</name> <init pos:start="149:30" pos:end="149:59">= <expr pos:start="149:32" pos:end="149:59"><call pos:start="149:32" pos:end="149:59"><name pos:start="149:32" pos:end="149:51">ff_find_stream_index</name><argument_list pos:start="149:52" pos:end="149:59">(<argument pos:start="149:53" pos:end="149:53"><expr pos:start="149:53" pos:end="149:53"><name pos:start="149:53" pos:end="149:53">s</name></expr></argument>, <argument pos:start="149:56" pos:end="149:58"><expr pos:start="149:56" pos:end="149:58"><name pos:start="149:56" pos:end="149:58">sid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="151:13" pos:end="161:13"><if pos:start="151:13" pos:end="161:13">if <condition pos:start="151:16" pos:end="151:34">(<expr pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:28">stream_index</name> <operator pos:start="151:30" pos:end="151:31">&gt;=</operator> <literal type="number" pos:start="151:33" pos:end="151:33">0</literal></expr>)</condition> <block pos:start="151:36" pos:end="161:13">{<block_content pos:start="153:17" pos:end="159:31">

                <expr_stmt pos:start="153:17" pos:end="153:34"><expr pos:start="153:17" pos:end="153:33"><call pos:start="153:17" pos:end="153:33"><name pos:start="153:17" pos:end="153:25">url_fskip</name><argument_list pos:start="153:26" pos:end="153:33">(<argument pos:start="153:27" pos:end="153:28"><expr pos:start="153:27" pos:end="153:28"><name pos:start="153:27" pos:end="153:28">pb</name></expr></argument>, <argument pos:start="153:31" pos:end="153:32"><expr pos:start="153:31" pos:end="153:32"><literal type="number" pos:start="153:31" pos:end="153:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="155:17" pos:end="157:130"><if pos:start="155:17" pos:end="157:130">if <condition pos:start="155:20" pos:end="155:33">(<expr pos:start="155:21" pos:end="155:32"><call pos:start="155:21" pos:end="155:32"><name pos:start="155:21" pos:end="155:28">get_le32</name><argument_list pos:start="155:29" pos:end="155:32">(<argument pos:start="155:30" pos:end="155:31"><expr pos:start="155:30" pos:end="155:31"><name pos:start="155:30" pos:end="155:31">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="157:21" pos:end="157:130"><block_content pos:start="157:21" pos:end="157:130">

                    <expr_stmt pos:start="157:21" pos:end="157:130"><expr pos:start="157:21" pos:end="157:129"><call pos:start="157:21" pos:end="157:129"><name pos:start="157:21" pos:end="157:26">av_log</name><argument_list pos:start="157:27" pos:end="157:129">(<argument pos:start="157:28" pos:end="157:28"><expr pos:start="157:28" pos:end="157:28"><name pos:start="157:28" pos:end="157:28">s</name></expr></argument>, <argument pos:start="157:31" pos:end="157:44"><expr pos:start="157:31" pos:end="157:44"><name pos:start="157:31" pos:end="157:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="157:47" pos:end="157:114"><expr pos:start="157:47" pos:end="157:114"><literal type="string" pos:start="157:47" pos:end="157:114">"DVB scrambled stream detected (st:%d), decoding will likely fail\n"</literal></expr></argument>, <argument pos:start="157:117" pos:end="157:128"><expr pos:start="157:117" pos:end="157:128"><name pos:start="157:117" pos:end="157:128">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:31"><expr pos:start="159:17" pos:end="159:30"><name pos:start="159:17" pos:end="159:24">consumed</name> <operator pos:start="159:26" pos:end="159:27">+=</operator> <literal type="number" pos:start="159:29" pos:end="159:30">16</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="163:11" pos:end="189:9">else if <condition pos:start="163:19" pos:end="163:65">(<expr pos:start="163:20" pos:end="163:64"><operator pos:start="163:20" pos:end="163:20">!</operator><call pos:start="163:21" pos:end="163:64"><name pos:start="163:21" pos:end="163:30">ff_guidcmp</name><argument_list pos:start="163:31" pos:end="163:64">(<argument pos:start="163:32" pos:end="163:32"><expr pos:start="163:32" pos:end="163:32"><name pos:start="163:32" pos:end="163:32">g</name></expr></argument>, <argument pos:start="163:35" pos:end="163:63"><expr pos:start="163:35" pos:end="163:63"><name pos:start="163:35" pos:end="163:63">EVENTID_LanguageSpanningEvent</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:67" pos:end="189:9">{<block_content pos:start="165:13" pos:end="187:13">

            <decl_stmt pos:start="165:13" pos:end="165:60"><decl pos:start="165:13" pos:end="165:59"><type pos:start="165:13" pos:end="165:15"><name pos:start="165:13" pos:end="165:15">int</name></type> <name pos:start="165:17" pos:end="165:28">stream_index</name> <init pos:start="165:30" pos:end="165:59">= <expr pos:start="165:32" pos:end="165:59"><call pos:start="165:32" pos:end="165:59"><name pos:start="165:32" pos:end="165:51">ff_find_stream_index</name><argument_list pos:start="165:52" pos:end="165:59">(<argument pos:start="165:53" pos:end="165:53"><expr pos:start="165:53" pos:end="165:53"><name pos:start="165:53" pos:end="165:53">s</name></expr></argument>, <argument pos:start="165:56" pos:end="165:58"><expr pos:start="165:56" pos:end="165:58"><name pos:start="165:56" pos:end="165:58">sid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="167:13" pos:end="187:13"><if pos:start="167:13" pos:end="187:13">if <condition pos:start="167:16" pos:end="167:34">(<expr pos:start="167:17" pos:end="167:33"><name pos:start="167:17" pos:end="167:28">stream_index</name> <operator pos:start="167:30" pos:end="167:31">&gt;=</operator> <literal type="number" pos:start="167:33" pos:end="167:33">0</literal></expr>)</condition> <block pos:start="167:36" pos:end="187:13">{<block_content pos:start="169:17" pos:end="185:31">

                <decl_stmt pos:start="169:17" pos:end="169:56"><decl pos:start="169:17" pos:end="169:55"><type pos:start="169:17" pos:end="169:26"><name pos:start="169:17" pos:end="169:24">AVStream</name> <modifier pos:start="169:26" pos:end="169:26">*</modifier></type><name pos:start="169:27" pos:end="169:28">st</name> <init pos:start="169:30" pos:end="169:55">= <expr pos:start="169:32" pos:end="169:55"><name pos:start="169:32" pos:end="169:55"><name pos:start="169:32" pos:end="169:32">s</name><operator pos:start="169:33" pos:end="169:34">-&gt;</operator><name pos:start="169:35" pos:end="169:41">streams</name><index pos:start="169:42" pos:end="169:55">[<expr pos:start="169:43" pos:end="169:54"><name pos:start="169:43" pos:end="169:54">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="171:17" pos:end="171:36"><decl pos:start="171:17" pos:end="171:35"><type pos:start="171:17" pos:end="171:23"><name pos:start="171:17" pos:end="171:23">uint8_t</name></type> <name pos:start="171:25" pos:end="171:35"><name pos:start="171:25" pos:end="171:32">language</name><index pos:start="171:33" pos:end="171:35">[<expr pos:start="171:34" pos:end="171:34"><literal type="number" pos:start="171:34" pos:end="171:34">4</literal></expr>]</index></name></decl>;</decl_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:34"><expr pos:start="173:17" pos:end="173:33"><call pos:start="173:17" pos:end="173:33"><name pos:start="173:17" pos:end="173:25">url_fskip</name><argument_list pos:start="173:26" pos:end="173:33">(<argument pos:start="173:27" pos:end="173:28"><expr pos:start="173:27" pos:end="173:28"><name pos:start="173:27" pos:end="173:28">pb</name></expr></argument>, <argument pos:start="173:31" pos:end="173:32"><expr pos:start="173:31" pos:end="173:32"><literal type="number" pos:start="173:31" pos:end="173:32">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:44"><expr pos:start="175:17" pos:end="175:43"><call pos:start="175:17" pos:end="175:43"><name pos:start="175:17" pos:end="175:26">get_buffer</name><argument_list pos:start="175:27" pos:end="175:43">(<argument pos:start="175:28" pos:end="175:29"><expr pos:start="175:28" pos:end="175:29"><name pos:start="175:28" pos:end="175:29">pb</name></expr></argument>, <argument pos:start="175:32" pos:end="175:39"><expr pos:start="175:32" pos:end="175:39"><name pos:start="175:32" pos:end="175:39">language</name></expr></argument>, <argument pos:start="175:42" pos:end="175:42"><expr pos:start="175:42" pos:end="175:42"><literal type="number" pos:start="175:42" pos:end="175:42">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="177:17" pos:end="183:17"><if pos:start="177:17" pos:end="183:17">if <condition pos:start="177:20" pos:end="177:32">(<expr pos:start="177:21" pos:end="177:31"><name pos:start="177:21" pos:end="177:31"><name pos:start="177:21" pos:end="177:28">language</name><index pos:start="177:29" pos:end="177:31">[<expr pos:start="177:30" pos:end="177:30"><literal type="number" pos:start="177:30" pos:end="177:30">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="177:34" pos:end="183:17">{<block_content pos:start="179:21" pos:end="181:77">

                    <expr_stmt pos:start="179:21" pos:end="179:36"><expr pos:start="179:21" pos:end="179:35"><name pos:start="179:21" pos:end="179:31"><name pos:start="179:21" pos:end="179:28">language</name><index pos:start="179:29" pos:end="179:31">[<expr pos:start="179:30" pos:end="179:30"><literal type="number" pos:start="179:30" pos:end="179:30">3</literal></expr>]</index></name> <operator pos:start="179:33" pos:end="179:33">=</operator> <literal type="number" pos:start="179:35" pos:end="179:35">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="181:21" pos:end="181:77"><expr pos:start="181:21" pos:end="181:76"><call pos:start="181:21" pos:end="181:76"><name pos:start="181:21" pos:end="181:36">av_metadata_set2</name><argument_list pos:start="181:37" pos:end="181:76">(<argument pos:start="181:38" pos:end="181:50"><expr pos:start="181:38" pos:end="181:50"><operator pos:start="181:38" pos:end="181:38">&amp;</operator><name pos:start="181:39" pos:end="181:50"><name pos:start="181:39" pos:end="181:40">st</name><operator pos:start="181:41" pos:end="181:42">-&gt;</operator><name pos:start="181:43" pos:end="181:50">metadata</name></name></expr></argument>, <argument pos:start="181:53" pos:end="181:62"><expr pos:start="181:53" pos:end="181:62"><literal type="string" pos:start="181:53" pos:end="181:62">"language"</literal></expr></argument>, <argument pos:start="181:65" pos:end="181:72"><expr pos:start="181:65" pos:end="181:72"><name pos:start="181:65" pos:end="181:72">language</name></expr></argument>, <argument pos:start="181:75" pos:end="181:75"><expr pos:start="181:75" pos:end="181:75"><literal type="number" pos:start="181:75" pos:end="181:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:31"><expr pos:start="185:17" pos:end="185:30"><name pos:start="185:17" pos:end="185:24">consumed</name> <operator pos:start="185:26" pos:end="185:27">+=</operator> <literal type="number" pos:start="185:29" pos:end="185:30">15</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="189:11" pos:end="227:9">else if <condition pos:start="189:19" pos:end="189:50">(<expr pos:start="189:20" pos:end="189:49"><operator pos:start="189:20" pos:end="189:20">!</operator><call pos:start="189:21" pos:end="189:49"><name pos:start="189:21" pos:end="189:30">ff_guidcmp</name><argument_list pos:start="189:31" pos:end="189:49">(<argument pos:start="189:32" pos:end="189:32"><expr pos:start="189:32" pos:end="189:32"><name pos:start="189:32" pos:end="189:32">g</name></expr></argument>, <argument pos:start="189:35" pos:end="189:48"><expr pos:start="189:35" pos:end="189:48"><name pos:start="189:35" pos:end="189:48">timestamp_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:52" pos:end="227:9">{<block_content pos:start="191:13" pos:end="225:13">

            <decl_stmt pos:start="191:13" pos:end="191:60"><decl pos:start="191:13" pos:end="191:59"><type pos:start="191:13" pos:end="191:15"><name pos:start="191:13" pos:end="191:15">int</name></type> <name pos:start="191:17" pos:end="191:28">stream_index</name> <init pos:start="191:30" pos:end="191:59">= <expr pos:start="191:32" pos:end="191:59"><call pos:start="191:32" pos:end="191:59"><name pos:start="191:32" pos:end="191:51">ff_find_stream_index</name><argument_list pos:start="191:52" pos:end="191:59">(<argument pos:start="191:53" pos:end="191:53"><expr pos:start="191:53" pos:end="191:53"><name pos:start="191:53" pos:end="191:53">s</name></expr></argument>, <argument pos:start="191:56" pos:end="191:58"><expr pos:start="191:56" pos:end="191:58"><name pos:start="191:56" pos:end="191:58">sid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="193:13" pos:end="225:13"><if pos:start="193:13" pos:end="225:13">if <condition pos:start="193:16" pos:end="193:34">(<expr pos:start="193:17" pos:end="193:33"><name pos:start="193:17" pos:end="193:28">stream_index</name> <operator pos:start="193:30" pos:end="193:31">&gt;=</operator> <literal type="number" pos:start="193:33" pos:end="193:33">0</literal></expr>)</condition> <block pos:start="193:36" pos:end="225:13">{<block_content pos:start="195:17" pos:end="223:17">

                <expr_stmt pos:start="195:17" pos:end="195:33"><expr pos:start="195:17" pos:end="195:32"><call pos:start="195:17" pos:end="195:32"><name pos:start="195:17" pos:end="195:25">url_fskip</name><argument_list pos:start="195:26" pos:end="195:32">(<argument pos:start="195:27" pos:end="195:28"><expr pos:start="195:27" pos:end="195:28"><name pos:start="195:27" pos:end="195:28">pb</name></expr></argument>, <argument pos:start="195:31" pos:end="195:31"><expr pos:start="195:31" pos:end="195:31"><literal type="number" pos:start="195:31" pos:end="195:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:40"><expr pos:start="197:17" pos:end="197:39"><name pos:start="197:17" pos:end="197:24"><name pos:start="197:17" pos:end="197:19">wtv</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:24">pts</name></name> <operator pos:start="197:26" pos:end="197:26">=</operator> <call pos:start="197:28" pos:end="197:39"><name pos:start="197:28" pos:end="197:35">get_le64</name><argument_list pos:start="197:36" pos:end="197:39">(<argument pos:start="197:37" pos:end="197:38"><expr pos:start="197:37" pos:end="197:38"><name pos:start="197:37" pos:end="197:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:31"><expr pos:start="199:17" pos:end="199:30"><name pos:start="199:17" pos:end="199:24">consumed</name> <operator pos:start="199:26" pos:end="199:27">+=</operator> <literal type="number" pos:start="199:29" pos:end="199:30">16</literal></expr>;</expr_stmt>

                <if_stmt pos:start="201:17" pos:end="223:17"><if pos:start="201:17" pos:end="203:46">if <condition pos:start="201:20" pos:end="201:35">(<expr pos:start="201:21" pos:end="201:34"><name pos:start="201:21" pos:end="201:28"><name pos:start="201:21" pos:end="201:23">wtv</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:28">pts</name></name> <operator pos:start="201:30" pos:end="201:31">==</operator> <operator pos:start="201:33" pos:end="201:33">-</operator><literal type="number" pos:start="201:34" pos:end="201:34">1</literal></expr>)</condition><block type="pseudo" pos:start="203:21" pos:end="203:46"><block_content pos:start="203:21" pos:end="203:46">

                    <expr_stmt pos:start="203:21" pos:end="203:46"><expr pos:start="203:21" pos:end="203:45"><name pos:start="203:21" pos:end="203:28"><name pos:start="203:21" pos:end="203:23">wtv</name><operator pos:start="203:24" pos:end="203:25">-&gt;</operator><name pos:start="203:26" pos:end="203:28">pts</name></name> <operator pos:start="203:30" pos:end="203:30">=</operator> <name pos:start="203:32" pos:end="203:45">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="205:17" pos:end="223:17">else <block pos:start="205:22" pos:end="223:17">{<block_content pos:start="207:21" pos:end="221:17">

                    <expr_stmt pos:start="207:21" pos:end="207:51"><expr pos:start="207:21" pos:end="207:50"><name pos:start="207:21" pos:end="207:39"><name pos:start="207:21" pos:end="207:23">wtv</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:39">last_valid_pts</name></name> <operator pos:start="207:41" pos:end="207:41">=</operator> <name pos:start="207:43" pos:end="207:50"><name pos:start="207:43" pos:end="207:45">wtv</name><operator pos:start="207:46" pos:end="207:47">-&gt;</operator><name pos:start="207:48" pos:end="207:50">pts</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="209:21" pos:end="211:46"><if pos:start="209:21" pos:end="211:46">if <condition pos:start="209:24" pos:end="209:78">(<expr pos:start="209:25" pos:end="209:77"><name pos:start="209:25" pos:end="209:34"><name pos:start="209:25" pos:end="209:27">wtv</name><operator pos:start="209:28" pos:end="209:29">-&gt;</operator><name pos:start="209:30" pos:end="209:34">epoch</name></name> <operator pos:start="209:36" pos:end="209:37">==</operator> <name pos:start="209:39" pos:end="209:52">AV_NOPTS_VALUE</name> <operator pos:start="209:54" pos:end="209:55">||</operator> <name pos:start="209:57" pos:end="209:64"><name pos:start="209:57" pos:end="209:59">wtv</name><operator pos:start="209:60" pos:end="209:61">-&gt;</operator><name pos:start="209:62" pos:end="209:64">pts</name></name> <operator pos:start="209:66" pos:end="209:66">&lt;</operator> <name pos:start="209:68" pos:end="209:77"><name pos:start="209:68" pos:end="209:70">wtv</name><operator pos:start="209:71" pos:end="209:72">-&gt;</operator><name pos:start="209:73" pos:end="209:77">epoch</name></name></expr>)</condition><block type="pseudo" pos:start="211:25" pos:end="211:46"><block_content pos:start="211:25" pos:end="211:46">

                        <expr_stmt pos:start="211:25" pos:end="211:46"><expr pos:start="211:25" pos:end="211:45"><name pos:start="211:25" pos:end="211:34"><name pos:start="211:25" pos:end="211:27">wtv</name><operator pos:start="211:28" pos:end="211:29">-&gt;</operator><name pos:start="211:30" pos:end="211:34">epoch</name></name> <operator pos:start="211:36" pos:end="211:36">=</operator> <name pos:start="211:38" pos:end="211:45"><name pos:start="211:38" pos:end="211:40">wtv</name><operator pos:start="211:41" pos:end="211:42">-&gt;</operator><name pos:start="211:43" pos:end="211:45">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="213:17" pos:end="221:17"><if pos:start="213:17" pos:end="221:17">if <condition pos:start="213:20" pos:end="213:62">(<expr pos:start="213:21" pos:end="213:61"><name pos:start="213:21" pos:end="213:24">mode</name> <operator pos:start="213:26" pos:end="213:27">==</operator> <name pos:start="213:29" pos:end="213:39">SEEK_TO_PTS</name> <operator pos:start="213:41" pos:end="213:42">&amp;&amp;</operator> <name pos:start="213:44" pos:end="213:51"><name pos:start="213:44" pos:end="213:46">wtv</name><operator pos:start="213:47" pos:end="213:48">-&gt;</operator><name pos:start="213:49" pos:end="213:51">pts</name></name> <operator pos:start="213:53" pos:end="213:54">&gt;=</operator> <name pos:start="213:56" pos:end="213:61">seekts</name></expr>)</condition> <block pos:start="213:64" pos:end="221:17">{<block_content pos:start="217:21" pos:end="219:29">

<cpp:define pos:start="215:1" pos:end="215:36">#<cpp:directive pos:start="215:2" pos:end="215:7">define</cpp:directive> <cpp:macro pos:start="215:9" pos:end="215:19"><name pos:start="215:9" pos:end="215:16">WTV_PAD8</name><parameter_list pos:start="215:17" pos:end="215:19">(<parameter pos:start="215:18" pos:end="215:18"><type pos:start="215:18" pos:end="215:18"><name pos:start="215:18" pos:end="215:18">x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="215:21" pos:end="215:36">(((x) + 7) &amp; ~7)</cpp:value></cpp:define>

                    <expr_stmt pos:start="217:21" pos:end="217:60"><expr pos:start="217:21" pos:end="217:59"><call pos:start="217:21" pos:end="217:59"><name pos:start="217:21" pos:end="217:29">url_fskip</name><argument_list pos:start="217:30" pos:end="217:59">(<argument pos:start="217:31" pos:end="217:32"><expr pos:start="217:31" pos:end="217:32"><name pos:start="217:31" pos:end="217:32">pb</name></expr></argument>, <argument pos:start="217:35" pos:end="217:58"><expr pos:start="217:35" pos:end="217:58"><call pos:start="217:35" pos:end="217:47"><name pos:start="217:35" pos:end="217:42">WTV_PAD8</name><argument_list pos:start="217:43" pos:end="217:47">(<argument pos:start="217:44" pos:end="217:46"><expr pos:start="217:44" pos:end="217:46"><name pos:start="217:44" pos:end="217:46">len</name></expr></argument>)</argument_list></call> <operator pos:start="217:49" pos:end="217:49">-</operator> <name pos:start="217:51" pos:end="217:58">consumed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="219:21" pos:end="219:29">return <expr pos:start="219:28" pos:end="219:28"><literal type="number" pos:start="219:28" pos:end="219:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="227:11" pos:end="247:9">else if <condition pos:start="227:19" pos:end="227:45">(<expr pos:start="227:20" pos:end="227:44"><operator pos:start="227:20" pos:end="227:20">!</operator><call pos:start="227:21" pos:end="227:44"><name pos:start="227:21" pos:end="227:30">ff_guidcmp</name><argument_list pos:start="227:31" pos:end="227:44">(<argument pos:start="227:32" pos:end="227:32"><expr pos:start="227:32" pos:end="227:32"><name pos:start="227:32" pos:end="227:32">g</name></expr></argument>, <argument pos:start="227:35" pos:end="227:43"><expr pos:start="227:35" pos:end="227:43"><name pos:start="227:35" pos:end="227:43">data_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:47" pos:end="247:9">{<block_content pos:start="229:13" pos:end="245:13">

            <decl_stmt pos:start="229:13" pos:end="229:60"><decl pos:start="229:13" pos:end="229:59"><type pos:start="229:13" pos:end="229:15"><name pos:start="229:13" pos:end="229:15">int</name></type> <name pos:start="229:17" pos:end="229:28">stream_index</name> <init pos:start="229:30" pos:end="229:59">= <expr pos:start="229:32" pos:end="229:59"><call pos:start="229:32" pos:end="229:59"><name pos:start="229:32" pos:end="229:51">ff_find_stream_index</name><argument_list pos:start="229:52" pos:end="229:59">(<argument pos:start="229:53" pos:end="229:53"><expr pos:start="229:53" pos:end="229:53"><name pos:start="229:53" pos:end="229:53">s</name></expr></argument>, <argument pos:start="229:56" pos:end="229:58"><expr pos:start="229:56" pos:end="229:58"><name pos:start="229:56" pos:end="229:58">sid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="231:13" pos:end="245:13"><if pos:start="231:13" pos:end="245:13">if <condition pos:start="231:16" pos:end="231:58">(<expr pos:start="231:17" pos:end="231:57"><name pos:start="231:17" pos:end="231:20">mode</name> <operator pos:start="231:22" pos:end="231:23">==</operator> <name pos:start="231:25" pos:end="231:36">SEEK_TO_DATA</name> <operator pos:start="231:38" pos:end="231:39">&amp;&amp;</operator> <name pos:start="231:41" pos:end="231:52">stream_index</name> <operator pos:start="231:54" pos:end="231:55">&gt;=</operator> <literal type="number" pos:start="231:57" pos:end="231:57">0</literal></expr>)</condition> <block pos:start="231:60" pos:end="245:13">{<block_content pos:start="233:17" pos:end="243:36">

                <decl_stmt pos:start="233:17" pos:end="233:69"><decl pos:start="233:17" pos:end="233:68"><type pos:start="233:17" pos:end="233:27"><name pos:start="233:17" pos:end="233:25">WtvStream</name> <modifier pos:start="233:27" pos:end="233:27">*</modifier></type><name pos:start="233:28" pos:end="233:30">wst</name> <init pos:start="233:32" pos:end="233:68">= <expr pos:start="233:34" pos:end="233:68"><name pos:start="233:34" pos:end="233:57"><name pos:start="233:34" pos:end="233:34">s</name><operator pos:start="233:35" pos:end="233:36">-&gt;</operator><name pos:start="233:37" pos:end="233:43">streams</name><index pos:start="233:44" pos:end="233:57">[<expr pos:start="233:45" pos:end="233:56"><name pos:start="233:45" pos:end="233:56">stream_index</name></expr>]</index></name><operator pos:start="233:58" pos:end="233:59">-&gt;</operator><name pos:start="233:60" pos:end="233:68">priv_data</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:35"><expr pos:start="235:17" pos:end="235:34"><name pos:start="235:17" pos:end="235:30"><name pos:start="235:17" pos:end="235:19">wst</name><operator pos:start="235:20" pos:end="235:21">-&gt;</operator><name pos:start="235:22" pos:end="235:30">seen_data</name></name> <operator pos:start="235:32" pos:end="235:32">=</operator> <literal type="number" pos:start="235:34" pos:end="235:34">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="237:17" pos:end="241:17"><if pos:start="237:17" pos:end="241:17">if <condition pos:start="237:20" pos:end="237:28">(<expr pos:start="237:21" pos:end="237:27"><name pos:start="237:21" pos:end="237:27">len_ptr</name></expr>)</condition> <block pos:start="237:30" pos:end="241:17">{<block_content pos:start="239:21" pos:end="239:35">

                    <expr_stmt pos:start="239:21" pos:end="239:35"><expr pos:start="239:21" pos:end="239:34"><operator pos:start="239:21" pos:end="239:21">*</operator><name pos:start="239:22" pos:end="239:28">len_ptr</name> <operator pos:start="239:30" pos:end="239:30">=</operator> <name pos:start="239:32" pos:end="239:34">len</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <return pos:start="243:17" pos:end="243:36">return <expr pos:start="243:24" pos:end="243:35"><name pos:start="243:24" pos:end="243:35">stream_index</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="247:11" pos:end="289:9">else if <condition pos:start="247:19" pos:end="285:129">(

            <expr pos:start="249:13" pos:end="285:128"><operator pos:start="249:13" pos:end="249:13">!</operator><macro pos:start="249:14" pos:end="249:162"><name pos:start="249:14" pos:end="249:23">ff_guidcmp</name><argument_list pos:start="249:24" pos:end="249:162">(<argument pos:start="249:25" pos:end="249:25">g</argument>, <comment type="block" pos:start="249:28" pos:end="249:60">/* DSATTRIB_CAPTURE_STREAMTIME */</comment> <argument pos:start="249:62" pos:end="249:85">(const ff_asf_guid){<literal type="number" pos:start="249:82" pos:end="249:85">0x14</literal></argument>,<argument pos:start="249:87" pos:end="249:90"><literal type="number" pos:start="249:87" pos:end="249:90">0x56</literal></argument>,<argument pos:start="249:92" pos:end="249:95"><literal type="number" pos:start="249:92" pos:end="249:95">0x1A</literal></argument>,<argument pos:start="249:97" pos:end="249:100"><literal type="number" pos:start="249:97" pos:end="249:100">0x0C</literal></argument>,<argument pos:start="249:102" pos:end="249:105"><literal type="number" pos:start="249:102" pos:end="249:105">0xCD</literal></argument>,<argument pos:start="249:107" pos:end="249:110"><literal type="number" pos:start="249:107" pos:end="249:110">0x30</literal></argument>,<argument pos:start="249:112" pos:end="249:115"><literal type="number" pos:start="249:112" pos:end="249:115">0x40</literal></argument>,<argument pos:start="249:117" pos:end="249:120"><literal type="number" pos:start="249:117" pos:end="249:120">0x4F</literal></argument>,<argument pos:start="249:122" pos:end="249:125"><literal type="number" pos:start="249:122" pos:end="249:125">0xBC</literal></argument>,<argument pos:start="249:127" pos:end="249:130"><literal type="number" pos:start="249:127" pos:end="249:130">0xBF</literal></argument>,<argument pos:start="249:132" pos:end="249:135"><literal type="number" pos:start="249:132" pos:end="249:135">0xD0</literal></argument>,<argument pos:start="249:137" pos:end="249:140"><literal type="number" pos:start="249:137" pos:end="249:140">0x3E</literal></argument>,<argument pos:start="249:142" pos:end="249:145"><literal type="number" pos:start="249:142" pos:end="249:145">0x52</literal></argument>,<argument pos:start="249:147" pos:end="249:150"><literal type="number" pos:start="249:147" pos:end="249:150">0x30</literal></argument>,<argument pos:start="249:152" pos:end="249:155"><literal type="number" pos:start="249:152" pos:end="249:155">0x62</literal></argument>,<argument pos:start="249:157" pos:end="249:161"><literal type="number" pos:start="249:157" pos:end="249:160">0x07</literal>}</argument>)</argument_list></macro> <operator pos:start="249:164" pos:end="249:165">||</operator>

            <operator pos:start="251:13" pos:end="251:13">!</operator><macro pos:start="251:14" pos:end="251:156"><name pos:start="251:14" pos:end="251:23">ff_guidcmp</name><argument_list pos:start="251:24" pos:end="251:156">(<argument pos:start="251:25" pos:end="251:25">g</argument>, <comment type="block" pos:start="251:28" pos:end="251:54">/* DSATTRIB_PicSampleSeq */</comment> <argument pos:start="251:56" pos:end="251:79">(const ff_asf_guid){<literal type="number" pos:start="251:76" pos:end="251:79">0x02</literal></argument>,<argument pos:start="251:81" pos:end="251:84"><literal type="number" pos:start="251:81" pos:end="251:84">0xAE</literal></argument>,<argument pos:start="251:86" pos:end="251:89"><literal type="number" pos:start="251:86" pos:end="251:89">0x5B</literal></argument>,<argument pos:start="251:91" pos:end="251:94"><literal type="number" pos:start="251:91" pos:end="251:94">0x2F</literal></argument>,<argument pos:start="251:96" pos:end="251:99"><literal type="number" pos:start="251:96" pos:end="251:99">0x8F</literal></argument>,<argument pos:start="251:101" pos:end="251:104"><literal type="number" pos:start="251:101" pos:end="251:104">0x7B</literal></argument>,<argument pos:start="251:106" pos:end="251:109"><literal type="number" pos:start="251:106" pos:end="251:109">0x60</literal></argument>,<argument pos:start="251:111" pos:end="251:114"><literal type="number" pos:start="251:111" pos:end="251:114">0x4F</literal></argument>,<argument pos:start="251:116" pos:end="251:119"><literal type="number" pos:start="251:116" pos:end="251:119">0x82</literal></argument>,<argument pos:start="251:121" pos:end="251:124"><literal type="number" pos:start="251:121" pos:end="251:124">0xD6</literal></argument>,<argument pos:start="251:126" pos:end="251:129"><literal type="number" pos:start="251:126" pos:end="251:129">0xE4</literal></argument>,<argument pos:start="251:131" pos:end="251:134"><literal type="number" pos:start="251:131" pos:end="251:134">0xEA</literal></argument>,<argument pos:start="251:136" pos:end="251:139"><literal type="number" pos:start="251:136" pos:end="251:139">0x2F</literal></argument>,<argument pos:start="251:141" pos:end="251:144"><literal type="number" pos:start="251:141" pos:end="251:144">0x1F</literal></argument>,<argument pos:start="251:146" pos:end="251:149"><literal type="number" pos:start="251:146" pos:end="251:149">0x4C</literal></argument>,<argument pos:start="251:151" pos:end="251:155"><literal type="number" pos:start="251:151" pos:end="251:154">0x99</literal>}</argument>)</argument_list></macro> <operator pos:start="251:158" pos:end="251:159">||</operator>

            <operator pos:start="253:13" pos:end="253:13">!</operator><macro pos:start="253:14" pos:end="253:164"><name pos:start="253:14" pos:end="253:23">ff_guidcmp</name><argument_list pos:start="253:24" pos:end="253:164">(<argument pos:start="253:25" pos:end="253:25">g</argument>, <comment type="block" pos:start="253:28" pos:end="253:62">/* DSATTRIB_TRANSPORT_PROPERTIES */</comment> <argument pos:start="253:64" pos:end="253:87">(const ff_asf_guid){<literal type="number" pos:start="253:84" pos:end="253:87">0x12</literal></argument>,<argument pos:start="253:89" pos:end="253:92"><literal type="number" pos:start="253:89" pos:end="253:92">0xF6</literal></argument>,<argument pos:start="253:94" pos:end="253:97"><literal type="number" pos:start="253:94" pos:end="253:97">0x22</literal></argument>,<argument pos:start="253:99" pos:end="253:102"><literal type="number" pos:start="253:99" pos:end="253:102">0xB6</literal></argument>,<argument pos:start="253:104" pos:end="253:107"><literal type="number" pos:start="253:104" pos:end="253:107">0xAD</literal></argument>,<argument pos:start="253:109" pos:end="253:112"><literal type="number" pos:start="253:109" pos:end="253:112">0x47</literal></argument>,<argument pos:start="253:114" pos:end="253:117"><literal type="number" pos:start="253:114" pos:end="253:117">0x71</literal></argument>,<argument pos:start="253:119" pos:end="253:122"><literal type="number" pos:start="253:119" pos:end="253:122">0x46</literal></argument>,<argument pos:start="253:124" pos:end="253:127"><literal type="number" pos:start="253:124" pos:end="253:127">0xAD</literal></argument>,<argument pos:start="253:129" pos:end="253:132"><literal type="number" pos:start="253:129" pos:end="253:132">0x6C</literal></argument>,<argument pos:start="253:134" pos:end="253:137"><literal type="number" pos:start="253:134" pos:end="253:137">0x05</literal></argument>,<argument pos:start="253:139" pos:end="253:142"><literal type="number" pos:start="253:139" pos:end="253:142">0xA9</literal></argument>,<argument pos:start="253:144" pos:end="253:147"><literal type="number" pos:start="253:144" pos:end="253:147">0x8E</literal></argument>,<argument pos:start="253:149" pos:end="253:152"><literal type="number" pos:start="253:149" pos:end="253:152">0x65</literal></argument>,<argument pos:start="253:154" pos:end="253:157"><literal type="number" pos:start="253:154" pos:end="253:157">0xDE</literal></argument>,<argument pos:start="253:159" pos:end="253:163"><literal type="number" pos:start="253:159" pos:end="253:162">0x3A</literal>}</argument>)</argument_list></macro> <operator pos:start="253:166" pos:end="253:167">||</operator>

            <operator pos:start="255:13" pos:end="255:13">!</operator><macro pos:start="255:14" pos:end="255:160"><name pos:start="255:14" pos:end="255:23">ff_guidcmp</name><argument_list pos:start="255:24" pos:end="255:160">(<argument pos:start="255:25" pos:end="255:25">g</argument>, <comment type="block" pos:start="255:28" pos:end="255:58">/* dvr_ms_vid_frame_rep_data */</comment> <argument pos:start="255:60" pos:end="255:83">(const ff_asf_guid){<literal type="number" pos:start="255:80" pos:end="255:83">0xCC</literal></argument>,<argument pos:start="255:85" pos:end="255:88"><literal type="number" pos:start="255:85" pos:end="255:88">0x32</literal></argument>,<argument pos:start="255:90" pos:end="255:93"><literal type="number" pos:start="255:90" pos:end="255:93">0x64</literal></argument>,<argument pos:start="255:95" pos:end="255:98"><literal type="number" pos:start="255:95" pos:end="255:98">0xDD</literal></argument>,<argument pos:start="255:100" pos:end="255:103"><literal type="number" pos:start="255:100" pos:end="255:103">0x29</literal></argument>,<argument pos:start="255:105" pos:end="255:108"><literal type="number" pos:start="255:105" pos:end="255:108">0xE2</literal></argument>,<argument pos:start="255:110" pos:end="255:113"><literal type="number" pos:start="255:110" pos:end="255:113">0xDB</literal></argument>,<argument pos:start="255:115" pos:end="255:118"><literal type="number" pos:start="255:115" pos:end="255:118">0x40</literal></argument>,<argument pos:start="255:120" pos:end="255:123"><literal type="number" pos:start="255:120" pos:end="255:123">0x80</literal></argument>,<argument pos:start="255:125" pos:end="255:128"><literal type="number" pos:start="255:125" pos:end="255:128">0xF6</literal></argument>,<argument pos:start="255:130" pos:end="255:133"><literal type="number" pos:start="255:130" pos:end="255:133">0xD2</literal></argument>,<argument pos:start="255:135" pos:end="255:138"><literal type="number" pos:start="255:135" pos:end="255:138">0x63</literal></argument>,<argument pos:start="255:140" pos:end="255:143"><literal type="number" pos:start="255:140" pos:end="255:143">0x28</literal></argument>,<argument pos:start="255:145" pos:end="255:148"><literal type="number" pos:start="255:145" pos:end="255:148">0xD2</literal></argument>,<argument pos:start="255:150" pos:end="255:153"><literal type="number" pos:start="255:150" pos:end="255:153">0x76</literal></argument>,<argument pos:start="255:155" pos:end="255:159"><literal type="number" pos:start="255:155" pos:end="255:158">0x1F</literal>}</argument>)</argument_list></macro> <operator pos:start="255:162" pos:end="255:163">||</operator>

            <operator pos:start="257:13" pos:end="257:13">!</operator><macro pos:start="257:14" pos:end="257:165"><name pos:start="257:14" pos:end="257:23">ff_guidcmp</name><argument_list pos:start="257:24" pos:end="257:165">(<argument pos:start="257:25" pos:end="257:25">g</argument>, <comment type="block" pos:start="257:28" pos:end="257:63">/* EVENTID_AudioTypeSpanningEvent */</comment> <argument pos:start="257:65" pos:end="257:88">(const ff_asf_guid){<literal type="number" pos:start="257:85" pos:end="257:88">0xBE</literal></argument>,<argument pos:start="257:90" pos:end="257:93"><literal type="number" pos:start="257:90" pos:end="257:93">0xBF</literal></argument>,<argument pos:start="257:95" pos:end="257:98"><literal type="number" pos:start="257:95" pos:end="257:98">0x1C</literal></argument>,<argument pos:start="257:100" pos:end="257:103"><literal type="number" pos:start="257:100" pos:end="257:103">0x50</literal></argument>,<argument pos:start="257:105" pos:end="257:108"><literal type="number" pos:start="257:105" pos:end="257:108">0x49</literal></argument>,<argument pos:start="257:110" pos:end="257:113"><literal type="number" pos:start="257:110" pos:end="257:113">0xB8</literal></argument>,<argument pos:start="257:115" pos:end="257:118"><literal type="number" pos:start="257:115" pos:end="257:118">0xCE</literal></argument>,<argument pos:start="257:120" pos:end="257:123"><literal type="number" pos:start="257:120" pos:end="257:123">0x42</literal></argument>,<argument pos:start="257:125" pos:end="257:128"><literal type="number" pos:start="257:125" pos:end="257:128">0x9B</literal></argument>,<argument pos:start="257:130" pos:end="257:133"><literal type="number" pos:start="257:130" pos:end="257:133">0xE9</literal></argument>,<argument pos:start="257:135" pos:end="257:138"><literal type="number" pos:start="257:135" pos:end="257:138">0x3D</literal></argument>,<argument pos:start="257:140" pos:end="257:143"><literal type="number" pos:start="257:140" pos:end="257:143">0xB8</literal></argument>,<argument pos:start="257:145" pos:end="257:148"><literal type="number" pos:start="257:145" pos:end="257:148">0x69</literal></argument>,<argument pos:start="257:150" pos:end="257:153"><literal type="number" pos:start="257:150" pos:end="257:153">0xFB</literal></argument>,<argument pos:start="257:155" pos:end="257:158"><literal type="number" pos:start="257:155" pos:end="257:158">0x82</literal></argument>,<argument pos:start="257:160" pos:end="257:164"><literal type="number" pos:start="257:160" pos:end="257:163">0xB3</literal>}</argument>)</argument_list></macro> <operator pos:start="257:167" pos:end="257:168">||</operator>

            <operator pos:start="259:13" pos:end="259:13">!</operator><macro pos:start="259:14" pos:end="259:169"><name pos:start="259:14" pos:end="259:23">ff_guidcmp</name><argument_list pos:start="259:24" pos:end="259:169">(<argument pos:start="259:25" pos:end="259:25">g</argument>, <comment type="block" pos:start="259:28" pos:end="259:67">/* EVENTID_ChannelChangeSpanningEvent */</comment> <argument pos:start="259:69" pos:end="259:92">(const ff_asf_guid){<literal type="number" pos:start="259:89" pos:end="259:92">0xE5</literal></argument>,<argument pos:start="259:94" pos:end="259:97"><literal type="number" pos:start="259:94" pos:end="259:97">0xC5</literal></argument>,<argument pos:start="259:99" pos:end="259:102"><literal type="number" pos:start="259:99" pos:end="259:102">0x67</literal></argument>,<argument pos:start="259:104" pos:end="259:107"><literal type="number" pos:start="259:104" pos:end="259:107">0x90</literal></argument>,<argument pos:start="259:109" pos:end="259:112"><literal type="number" pos:start="259:109" pos:end="259:112">0x5C</literal></argument>,<argument pos:start="259:114" pos:end="259:117"><literal type="number" pos:start="259:114" pos:end="259:117">0x4C</literal></argument>,<argument pos:start="259:119" pos:end="259:122"><literal type="number" pos:start="259:119" pos:end="259:122">0x05</literal></argument>,<argument pos:start="259:124" pos:end="259:127"><literal type="number" pos:start="259:124" pos:end="259:127">0x42</literal></argument>,<argument pos:start="259:129" pos:end="259:132"><literal type="number" pos:start="259:129" pos:end="259:132">0x86</literal></argument>,<argument pos:start="259:134" pos:end="259:137"><literal type="number" pos:start="259:134" pos:end="259:137">0xC8</literal></argument>,<argument pos:start="259:139" pos:end="259:142"><literal type="number" pos:start="259:139" pos:end="259:142">0x7A</literal></argument>,<argument pos:start="259:144" pos:end="259:147"><literal type="number" pos:start="259:144" pos:end="259:147">0xFE</literal></argument>,<argument pos:start="259:149" pos:end="259:152"><literal type="number" pos:start="259:149" pos:end="259:152">0x20</literal></argument>,<argument pos:start="259:154" pos:end="259:157"><literal type="number" pos:start="259:154" pos:end="259:157">0xFE</literal></argument>,<argument pos:start="259:159" pos:end="259:162"><literal type="number" pos:start="259:159" pos:end="259:162">0x1E</literal></argument>,<argument pos:start="259:164" pos:end="259:168"><literal type="number" pos:start="259:164" pos:end="259:167">0xFA</literal>}</argument>)</argument_list></macro> <operator pos:start="259:171" pos:end="259:172">||</operator>

            <operator pos:start="261:13" pos:end="261:13">!</operator><macro pos:start="261:14" pos:end="261:167"><name pos:start="261:14" pos:end="261:23">ff_guidcmp</name><argument_list pos:start="261:24" pos:end="261:167">(<argument pos:start="261:25" pos:end="261:25">g</argument>, <comment type="block" pos:start="261:28" pos:end="261:65">/* EVENTID_ChannelInfoSpanningEvent */</comment> <argument pos:start="261:67" pos:end="261:90">(const ff_asf_guid){<literal type="number" pos:start="261:87" pos:end="261:90">0x80</literal></argument>,<argument pos:start="261:92" pos:end="261:95"><literal type="number" pos:start="261:92" pos:end="261:95">0x6D</literal></argument>,<argument pos:start="261:97" pos:end="261:100"><literal type="number" pos:start="261:97" pos:end="261:100">0xF3</literal></argument>,<argument pos:start="261:102" pos:end="261:105"><literal type="number" pos:start="261:102" pos:end="261:105">0x41</literal></argument>,<argument pos:start="261:107" pos:end="261:110"><literal type="number" pos:start="261:107" pos:end="261:110">0x32</literal></argument>,<argument pos:start="261:112" pos:end="261:115"><literal type="number" pos:start="261:112" pos:end="261:115">0x41</literal></argument>,<argument pos:start="261:117" pos:end="261:120"><literal type="number" pos:start="261:117" pos:end="261:120">0xC2</literal></argument>,<argument pos:start="261:122" pos:end="261:125"><literal type="number" pos:start="261:122" pos:end="261:125">0x4C</literal></argument>,<argument pos:start="261:127" pos:end="261:130"><literal type="number" pos:start="261:127" pos:end="261:130">0xB1</literal></argument>,<argument pos:start="261:132" pos:end="261:135"><literal type="number" pos:start="261:132" pos:end="261:135">0x21</literal></argument>,<argument pos:start="261:137" pos:end="261:140"><literal type="number" pos:start="261:137" pos:end="261:140">0x01</literal></argument>,<argument pos:start="261:142" pos:end="261:145"><literal type="number" pos:start="261:142" pos:end="261:145">0xA4</literal></argument>,<argument pos:start="261:147" pos:end="261:150"><literal type="number" pos:start="261:147" pos:end="261:150">0x32</literal></argument>,<argument pos:start="261:152" pos:end="261:155"><literal type="number" pos:start="261:152" pos:end="261:155">0x19</literal></argument>,<argument pos:start="261:157" pos:end="261:160"><literal type="number" pos:start="261:157" pos:end="261:160">0xD8</literal></argument>,<argument pos:start="261:162" pos:end="261:166"><literal type="number" pos:start="261:162" pos:end="261:165">0x1B</literal>}</argument>)</argument_list></macro> <operator pos:start="261:169" pos:end="261:170">||</operator>

            <operator pos:start="263:13" pos:end="263:13">!</operator><macro pos:start="263:14" pos:end="263:167"><name pos:start="263:14" pos:end="263:23">ff_guidcmp</name><argument_list pos:start="263:24" pos:end="263:167">(<argument pos:start="263:25" pos:end="263:25">g</argument>, <comment type="block" pos:start="263:28" pos:end="263:65">/* EVENTID_ChannelTypeSpanningEvent */</comment> <argument pos:start="263:67" pos:end="263:90">(const ff_asf_guid){<literal type="number" pos:start="263:87" pos:end="263:90">0x51</literal></argument>,<argument pos:start="263:92" pos:end="263:95"><literal type="number" pos:start="263:92" pos:end="263:95">0x1D</literal></argument>,<argument pos:start="263:97" pos:end="263:100"><literal type="number" pos:start="263:97" pos:end="263:100">0xAB</literal></argument>,<argument pos:start="263:102" pos:end="263:105"><literal type="number" pos:start="263:102" pos:end="263:105">0x72</literal></argument>,<argument pos:start="263:107" pos:end="263:110"><literal type="number" pos:start="263:107" pos:end="263:110">0xD2</literal></argument>,<argument pos:start="263:112" pos:end="263:115"><literal type="number" pos:start="263:112" pos:end="263:115">0x87</literal></argument>,<argument pos:start="263:117" pos:end="263:120"><literal type="number" pos:start="263:117" pos:end="263:120">0x9B</literal></argument>,<argument pos:start="263:122" pos:end="263:125"><literal type="number" pos:start="263:122" pos:end="263:125">0x48</literal></argument>,<argument pos:start="263:127" pos:end="263:130"><literal type="number" pos:start="263:127" pos:end="263:130">0xBA</literal></argument>,<argument pos:start="263:132" pos:end="263:135"><literal type="number" pos:start="263:132" pos:end="263:135">0x11</literal></argument>,<argument pos:start="263:137" pos:end="263:140"><literal type="number" pos:start="263:137" pos:end="263:140">0x0E</literal></argument>,<argument pos:start="263:142" pos:end="263:145"><literal type="number" pos:start="263:142" pos:end="263:145">0x08</literal></argument>,<argument pos:start="263:147" pos:end="263:150"><literal type="number" pos:start="263:147" pos:end="263:150">0xDC</literal></argument>,<argument pos:start="263:152" pos:end="263:155"><literal type="number" pos:start="263:152" pos:end="263:155">0x21</literal></argument>,<argument pos:start="263:157" pos:end="263:160"><literal type="number" pos:start="263:157" pos:end="263:160">0x02</literal></argument>,<argument pos:start="263:162" pos:end="263:166"><literal type="number" pos:start="263:162" pos:end="263:165">0x43</literal>}</argument>)</argument_list></macro> <operator pos:start="263:169" pos:end="263:170">||</operator>

            <operator pos:start="265:13" pos:end="265:13">!</operator><macro pos:start="265:14" pos:end="265:163"><name pos:start="265:14" pos:end="265:23">ff_guidcmp</name><argument_list pos:start="265:24" pos:end="265:163">(<argument pos:start="265:25" pos:end="265:25">g</argument>, <comment type="block" pos:start="265:28" pos:end="265:61">/* EVENTID_PIDListSpanningEvent */</comment> <argument pos:start="265:63" pos:end="265:86">(const ff_asf_guid){<literal type="number" pos:start="265:83" pos:end="265:86">0x65</literal></argument>,<argument pos:start="265:88" pos:end="265:91"><literal type="number" pos:start="265:88" pos:end="265:91">0x8F</literal></argument>,<argument pos:start="265:93" pos:end="265:96"><literal type="number" pos:start="265:93" pos:end="265:96">0xFC</literal></argument>,<argument pos:start="265:98" pos:end="265:101"><literal type="number" pos:start="265:98" pos:end="265:101">0x47</literal></argument>,<argument pos:start="265:103" pos:end="265:106"><literal type="number" pos:start="265:103" pos:end="265:106">0xBB</literal></argument>,<argument pos:start="265:108" pos:end="265:111"><literal type="number" pos:start="265:108" pos:end="265:111">0xE2</literal></argument>,<argument pos:start="265:113" pos:end="265:116"><literal type="number" pos:start="265:113" pos:end="265:116">0x34</literal></argument>,<argument pos:start="265:118" pos:end="265:121"><literal type="number" pos:start="265:118" pos:end="265:121">0x46</literal></argument>,<argument pos:start="265:123" pos:end="265:126"><literal type="number" pos:start="265:123" pos:end="265:126">0x9C</literal></argument>,<argument pos:start="265:128" pos:end="265:131"><literal type="number" pos:start="265:128" pos:end="265:131">0xEF</literal></argument>,<argument pos:start="265:133" pos:end="265:136"><literal type="number" pos:start="265:133" pos:end="265:136">0xFD</literal></argument>,<argument pos:start="265:138" pos:end="265:141"><literal type="number" pos:start="265:138" pos:end="265:141">0xBF</literal></argument>,<argument pos:start="265:143" pos:end="265:146"><literal type="number" pos:start="265:143" pos:end="265:146">0xE6</literal></argument>,<argument pos:start="265:148" pos:end="265:151"><literal type="number" pos:start="265:148" pos:end="265:151">0x26</literal></argument>,<argument pos:start="265:153" pos:end="265:156"><literal type="number" pos:start="265:153" pos:end="265:156">0x1D</literal></argument>,<argument pos:start="265:158" pos:end="265:162"><literal type="number" pos:start="265:158" pos:end="265:161">0x5C</literal>}</argument>)</argument_list></macro> <operator pos:start="265:165" pos:end="265:166">||</operator>

            <operator pos:start="267:13" pos:end="267:13">!</operator><macro pos:start="267:14" pos:end="267:178"><name pos:start="267:14" pos:end="267:23">ff_guidcmp</name><argument_list pos:start="267:24" pos:end="267:178">(<argument pos:start="267:25" pos:end="267:25">g</argument>, <comment type="block" pos:start="267:28" pos:end="267:76">/* EVENTID_SignalAndServiceStatusSpanningEvent */</comment> <argument pos:start="267:78" pos:end="267:101">(const ff_asf_guid){<literal type="number" pos:start="267:98" pos:end="267:101">0xCB</literal></argument>,<argument pos:start="267:103" pos:end="267:106"><literal type="number" pos:start="267:103" pos:end="267:106">0xC5</literal></argument>,<argument pos:start="267:108" pos:end="267:111"><literal type="number" pos:start="267:108" pos:end="267:111">0x68</literal></argument>,<argument pos:start="267:113" pos:end="267:116"><literal type="number" pos:start="267:113" pos:end="267:116">0x80</literal></argument>,<argument pos:start="267:118" pos:end="267:121"><literal type="number" pos:start="267:118" pos:end="267:121">0x04</literal></argument>,<argument pos:start="267:123" pos:end="267:126"><literal type="number" pos:start="267:123" pos:end="267:126">0x3C</literal></argument>,<argument pos:start="267:128" pos:end="267:131"><literal type="number" pos:start="267:128" pos:end="267:131">0x2B</literal></argument>,<argument pos:start="267:133" pos:end="267:136"><literal type="number" pos:start="267:133" pos:end="267:136">0x49</literal></argument>,<argument pos:start="267:138" pos:end="267:141"><literal type="number" pos:start="267:138" pos:end="267:141">0xB4</literal></argument>,<argument pos:start="267:143" pos:end="267:146"><literal type="number" pos:start="267:143" pos:end="267:146">0x7D</literal></argument>,<argument pos:start="267:148" pos:end="267:151"><literal type="number" pos:start="267:148" pos:end="267:151">0x03</literal></argument>,<argument pos:start="267:153" pos:end="267:156"><literal type="number" pos:start="267:153" pos:end="267:156">0x08</literal></argument>,<argument pos:start="267:158" pos:end="267:161"><literal type="number" pos:start="267:158" pos:end="267:161">0x82</literal></argument>,<argument pos:start="267:163" pos:end="267:166"><literal type="number" pos:start="267:163" pos:end="267:166">0x0D</literal></argument>,<argument pos:start="267:168" pos:end="267:171"><literal type="number" pos:start="267:168" pos:end="267:171">0xCE</literal></argument>,<argument pos:start="267:173" pos:end="267:177"><literal type="number" pos:start="267:173" pos:end="267:176">0x51</literal>}</argument>)</argument_list></macro> <operator pos:start="267:180" pos:end="267:181">||</operator>

            <operator pos:start="269:13" pos:end="269:13">!</operator><macro pos:start="269:14" pos:end="269:166"><name pos:start="269:14" pos:end="269:23">ff_guidcmp</name><argument_list pos:start="269:24" pos:end="269:166">(<argument pos:start="269:25" pos:end="269:25">g</argument>, <comment type="block" pos:start="269:28" pos:end="269:64">/* EVENTID_StreamTypeSpanningEvent */</comment> <argument pos:start="269:66" pos:end="269:89">(const ff_asf_guid){<literal type="number" pos:start="269:86" pos:end="269:89">0xBC</literal></argument>,<argument pos:start="269:91" pos:end="269:94"><literal type="number" pos:start="269:91" pos:end="269:94">0x2E</literal></argument>,<argument pos:start="269:96" pos:end="269:99"><literal type="number" pos:start="269:96" pos:end="269:99">0xAF</literal></argument>,<argument pos:start="269:101" pos:end="269:104"><literal type="number" pos:start="269:101" pos:end="269:104">0x82</literal></argument>,<argument pos:start="269:106" pos:end="269:109"><literal type="number" pos:start="269:106" pos:end="269:109">0xA6</literal></argument>,<argument pos:start="269:111" pos:end="269:114"><literal type="number" pos:start="269:111" pos:end="269:114">0x30</literal></argument>,<argument pos:start="269:116" pos:end="269:119"><literal type="number" pos:start="269:116" pos:end="269:119">0x64</literal></argument>,<argument pos:start="269:121" pos:end="269:124"><literal type="number" pos:start="269:121" pos:end="269:124">0x42</literal></argument>,<argument pos:start="269:126" pos:end="269:129"><literal type="number" pos:start="269:126" pos:end="269:129">0xA8</literal></argument>,<argument pos:start="269:131" pos:end="269:134"><literal type="number" pos:start="269:131" pos:end="269:134">0x0B</literal></argument>,<argument pos:start="269:136" pos:end="269:139"><literal type="number" pos:start="269:136" pos:end="269:139">0xAD</literal></argument>,<argument pos:start="269:141" pos:end="269:144"><literal type="number" pos:start="269:141" pos:end="269:144">0x2E</literal></argument>,<argument pos:start="269:146" pos:end="269:149"><literal type="number" pos:start="269:146" pos:end="269:149">0x13</literal></argument>,<argument pos:start="269:151" pos:end="269:154"><literal type="number" pos:start="269:151" pos:end="269:154">0x72</literal></argument>,<argument pos:start="269:156" pos:end="269:159"><literal type="number" pos:start="269:156" pos:end="269:159">0xAC</literal></argument>,<argument pos:start="269:161" pos:end="269:165"><literal type="number" pos:start="269:161" pos:end="269:164">0x60</literal>}</argument>)</argument_list></macro> <operator pos:start="269:168" pos:end="269:169">||</operator>

            <operator pos:start="271:13" pos:end="271:13">!</operator><macro pos:start="271:14" pos:end="271:128"><name pos:start="271:14" pos:end="271:23">ff_guidcmp</name><argument_list pos:start="271:24" pos:end="271:128">(<argument pos:start="271:25" pos:end="271:25">g</argument>, <argument pos:start="271:28" pos:end="271:51">(const ff_asf_guid){<literal type="number" pos:start="271:48" pos:end="271:51">0x1E</literal></argument>,<argument pos:start="271:53" pos:end="271:56"><literal type="number" pos:start="271:53" pos:end="271:56">0xBE</literal></argument>,<argument pos:start="271:58" pos:end="271:61"><literal type="number" pos:start="271:58" pos:end="271:61">0xC3</literal></argument>,<argument pos:start="271:63" pos:end="271:66"><literal type="number" pos:start="271:63" pos:end="271:66">0xC5</literal></argument>,<argument pos:start="271:68" pos:end="271:71"><literal type="number" pos:start="271:68" pos:end="271:71">0x43</literal></argument>,<argument pos:start="271:73" pos:end="271:76"><literal type="number" pos:start="271:73" pos:end="271:76">0x92</literal></argument>,<argument pos:start="271:78" pos:end="271:81"><literal type="number" pos:start="271:78" pos:end="271:81">0xDC</literal></argument>,<argument pos:start="271:83" pos:end="271:86"><literal type="number" pos:start="271:83" pos:end="271:86">0x11</literal></argument>,<argument pos:start="271:88" pos:end="271:91"><literal type="number" pos:start="271:88" pos:end="271:91">0x85</literal></argument>,<argument pos:start="271:93" pos:end="271:96"><literal type="number" pos:start="271:93" pos:end="271:96">0xE5</literal></argument>,<argument pos:start="271:98" pos:end="271:101"><literal type="number" pos:start="271:98" pos:end="271:101">0x00</literal></argument>,<argument pos:start="271:103" pos:end="271:106"><literal type="number" pos:start="271:103" pos:end="271:106">0x12</literal></argument>,<argument pos:start="271:108" pos:end="271:111"><literal type="number" pos:start="271:108" pos:end="271:111">0x3F</literal></argument>,<argument pos:start="271:113" pos:end="271:116"><literal type="number" pos:start="271:113" pos:end="271:116">0x6F</literal></argument>,<argument pos:start="271:118" pos:end="271:121"><literal type="number" pos:start="271:118" pos:end="271:121">0x73</literal></argument>,<argument pos:start="271:123" pos:end="271:127"><literal type="number" pos:start="271:123" pos:end="271:126">0xB9</literal>}</argument>)</argument_list></macro> <operator pos:start="271:130" pos:end="271:131">||</operator>

            <operator pos:start="273:13" pos:end="273:13">!</operator><macro pos:start="273:14" pos:end="273:128"><name pos:start="273:14" pos:end="273:23">ff_guidcmp</name><argument_list pos:start="273:24" pos:end="273:128">(<argument pos:start="273:25" pos:end="273:25">g</argument>, <argument pos:start="273:28" pos:end="273:51">(const ff_asf_guid){<literal type="number" pos:start="273:48" pos:end="273:51">0x3B</literal></argument>,<argument pos:start="273:53" pos:end="273:56"><literal type="number" pos:start="273:53" pos:end="273:56">0x86</literal></argument>,<argument pos:start="273:58" pos:end="273:61"><literal type="number" pos:start="273:58" pos:end="273:61">0xA2</literal></argument>,<argument pos:start="273:63" pos:end="273:66"><literal type="number" pos:start="273:63" pos:end="273:66">0xB1</literal></argument>,<argument pos:start="273:68" pos:end="273:71"><literal type="number" pos:start="273:68" pos:end="273:71">0xEB</literal></argument>,<argument pos:start="273:73" pos:end="273:76"><literal type="number" pos:start="273:73" pos:end="273:76">0x1E</literal></argument>,<argument pos:start="273:78" pos:end="273:81"><literal type="number" pos:start="273:78" pos:end="273:81">0xC3</literal></argument>,<argument pos:start="273:83" pos:end="273:86"><literal type="number" pos:start="273:83" pos:end="273:86">0x44</literal></argument>,<argument pos:start="273:88" pos:end="273:91"><literal type="number" pos:start="273:88" pos:end="273:91">0x8C</literal></argument>,<argument pos:start="273:93" pos:end="273:96"><literal type="number" pos:start="273:93" pos:end="273:96">0x88</literal></argument>,<argument pos:start="273:98" pos:end="273:101"><literal type="number" pos:start="273:98" pos:end="273:101">0x1C</literal></argument>,<argument pos:start="273:103" pos:end="273:106"><literal type="number" pos:start="273:103" pos:end="273:106">0xA3</literal></argument>,<argument pos:start="273:108" pos:end="273:111"><literal type="number" pos:start="273:108" pos:end="273:111">0xFF</literal></argument>,<argument pos:start="273:113" pos:end="273:116"><literal type="number" pos:start="273:113" pos:end="273:116">0xE3</literal></argument>,<argument pos:start="273:118" pos:end="273:121"><literal type="number" pos:start="273:118" pos:end="273:121">0xE7</literal></argument>,<argument pos:start="273:123" pos:end="273:127"><literal type="number" pos:start="273:123" pos:end="273:126">0x6A</literal>}</argument>)</argument_list></macro> <operator pos:start="273:130" pos:end="273:131">||</operator>

            <operator pos:start="275:13" pos:end="275:13">!</operator><macro pos:start="275:14" pos:end="275:128"><name pos:start="275:14" pos:end="275:23">ff_guidcmp</name><argument_list pos:start="275:24" pos:end="275:128">(<argument pos:start="275:25" pos:end="275:25">g</argument>, <argument pos:start="275:28" pos:end="275:51">(const ff_asf_guid){<literal type="number" pos:start="275:48" pos:end="275:51">0x4E</literal></argument>,<argument pos:start="275:53" pos:end="275:56"><literal type="number" pos:start="275:53" pos:end="275:56">0x7F</literal></argument>,<argument pos:start="275:58" pos:end="275:61"><literal type="number" pos:start="275:58" pos:end="275:61">0x4C</literal></argument>,<argument pos:start="275:63" pos:end="275:66"><literal type="number" pos:start="275:63" pos:end="275:66">0x5B</literal></argument>,<argument pos:start="275:68" pos:end="275:71"><literal type="number" pos:start="275:68" pos:end="275:71">0xC4</literal></argument>,<argument pos:start="275:73" pos:end="275:76"><literal type="number" pos:start="275:73" pos:end="275:76">0xD0</literal></argument>,<argument pos:start="275:78" pos:end="275:81"><literal type="number" pos:start="275:78" pos:end="275:81">0x38</literal></argument>,<argument pos:start="275:83" pos:end="275:86"><literal type="number" pos:start="275:83" pos:end="275:86">0x4B</literal></argument>,<argument pos:start="275:88" pos:end="275:91"><literal type="number" pos:start="275:88" pos:end="275:91">0xA8</literal></argument>,<argument pos:start="275:93" pos:end="275:96"><literal type="number" pos:start="275:93" pos:end="275:96">0x3E</literal></argument>,<argument pos:start="275:98" pos:end="275:101"><literal type="number" pos:start="275:98" pos:end="275:101">0x21</literal></argument>,<argument pos:start="275:103" pos:end="275:106"><literal type="number" pos:start="275:103" pos:end="275:106">0x7F</literal></argument>,<argument pos:start="275:108" pos:end="275:111"><literal type="number" pos:start="275:108" pos:end="275:111">0x7B</literal></argument>,<argument pos:start="275:113" pos:end="275:116"><literal type="number" pos:start="275:113" pos:end="275:116">0xBF</literal></argument>,<argument pos:start="275:118" pos:end="275:121"><literal type="number" pos:start="275:118" pos:end="275:121">0x52</literal></argument>,<argument pos:start="275:123" pos:end="275:127"><literal type="number" pos:start="275:123" pos:end="275:126">0xE7</literal>}</argument>)</argument_list></macro> <operator pos:start="275:130" pos:end="275:131">||</operator>

            <operator pos:start="277:13" pos:end="277:13">!</operator><macro pos:start="277:14" pos:end="277:128"><name pos:start="277:14" pos:end="277:23">ff_guidcmp</name><argument_list pos:start="277:24" pos:end="277:128">(<argument pos:start="277:25" pos:end="277:25">g</argument>, <argument pos:start="277:28" pos:end="277:51">(const ff_asf_guid){<literal type="number" pos:start="277:48" pos:end="277:51">0x63</literal></argument>,<argument pos:start="277:53" pos:end="277:56"><literal type="number" pos:start="277:53" pos:end="277:56">0x36</literal></argument>,<argument pos:start="277:58" pos:end="277:61"><literal type="number" pos:start="277:58" pos:end="277:61">0xEB</literal></argument>,<argument pos:start="277:63" pos:end="277:66"><literal type="number" pos:start="277:63" pos:end="277:66">0xFE</literal></argument>,<argument pos:start="277:68" pos:end="277:71"><literal type="number" pos:start="277:68" pos:end="277:71">0xA1</literal></argument>,<argument pos:start="277:73" pos:end="277:76"><literal type="number" pos:start="277:73" pos:end="277:76">0x7E</literal></argument>,<argument pos:start="277:78" pos:end="277:81"><literal type="number" pos:start="277:78" pos:end="277:81">0xD9</literal></argument>,<argument pos:start="277:83" pos:end="277:86"><literal type="number" pos:start="277:83" pos:end="277:86">0x11</literal></argument>,<argument pos:start="277:88" pos:end="277:91"><literal type="number" pos:start="277:88" pos:end="277:91">0x83</literal></argument>,<argument pos:start="277:93" pos:end="277:96"><literal type="number" pos:start="277:93" pos:end="277:96">0x08</literal></argument>,<argument pos:start="277:98" pos:end="277:101"><literal type="number" pos:start="277:98" pos:end="277:101">0x00</literal></argument>,<argument pos:start="277:103" pos:end="277:106"><literal type="number" pos:start="277:103" pos:end="277:106">0x07</literal></argument>,<argument pos:start="277:108" pos:end="277:111"><literal type="number" pos:start="277:108" pos:end="277:111">0xE9</literal></argument>,<argument pos:start="277:113" pos:end="277:116"><literal type="number" pos:start="277:113" pos:end="277:116">0x5E</literal></argument>,<argument pos:start="277:118" pos:end="277:121"><literal type="number" pos:start="277:118" pos:end="277:121">0xAD</literal></argument>,<argument pos:start="277:123" pos:end="277:127"><literal type="number" pos:start="277:123" pos:end="277:126">0x8D</literal>}</argument>)</argument_list></macro> <operator pos:start="277:130" pos:end="277:131">||</operator>

            <operator pos:start="279:13" pos:end="279:13">!</operator><macro pos:start="279:14" pos:end="279:128"><name pos:start="279:14" pos:end="279:23">ff_guidcmp</name><argument_list pos:start="279:24" pos:end="279:128">(<argument pos:start="279:25" pos:end="279:25">g</argument>, <argument pos:start="279:28" pos:end="279:51">(const ff_asf_guid){<literal type="number" pos:start="279:48" pos:end="279:51">0x70</literal></argument>,<argument pos:start="279:53" pos:end="279:56"><literal type="number" pos:start="279:53" pos:end="279:56">0xE9</literal></argument>,<argument pos:start="279:58" pos:end="279:61"><literal type="number" pos:start="279:58" pos:end="279:61">0xF1</literal></argument>,<argument pos:start="279:63" pos:end="279:66"><literal type="number" pos:start="279:63" pos:end="279:66">0xF8</literal></argument>,<argument pos:start="279:68" pos:end="279:71"><literal type="number" pos:start="279:68" pos:end="279:71">0x89</literal></argument>,<argument pos:start="279:73" pos:end="279:76"><literal type="number" pos:start="279:73" pos:end="279:76">0xA4</literal></argument>,<argument pos:start="279:78" pos:end="279:81"><literal type="number" pos:start="279:78" pos:end="279:81">0x4C</literal></argument>,<argument pos:start="279:83" pos:end="279:86"><literal type="number" pos:start="279:83" pos:end="279:86">0x4D</literal></argument>,<argument pos:start="279:88" pos:end="279:91"><literal type="number" pos:start="279:88" pos:end="279:91">0x83</literal></argument>,<argument pos:start="279:93" pos:end="279:96"><literal type="number" pos:start="279:93" pos:end="279:96">0x73</literal></argument>,<argument pos:start="279:98" pos:end="279:101"><literal type="number" pos:start="279:98" pos:end="279:101">0xB8</literal></argument>,<argument pos:start="279:103" pos:end="279:106"><literal type="number" pos:start="279:103" pos:end="279:106">0x12</literal></argument>,<argument pos:start="279:108" pos:end="279:111"><literal type="number" pos:start="279:108" pos:end="279:111">0xE0</literal></argument>,<argument pos:start="279:113" pos:end="279:116"><literal type="number" pos:start="279:113" pos:end="279:116">0xD5</literal></argument>,<argument pos:start="279:118" pos:end="279:121"><literal type="number" pos:start="279:118" pos:end="279:121">0xF8</literal></argument>,<argument pos:start="279:123" pos:end="279:127"><literal type="number" pos:start="279:123" pos:end="279:126">0x1E</literal>}</argument>)</argument_list></macro> <operator pos:start="279:130" pos:end="279:131">||</operator>

            <operator pos:start="281:13" pos:end="281:13">!</operator><macro pos:start="281:14" pos:end="281:128"><name pos:start="281:14" pos:end="281:23">ff_guidcmp</name><argument_list pos:start="281:24" pos:end="281:128">(<argument pos:start="281:25" pos:end="281:25">g</argument>, <argument pos:start="281:28" pos:end="281:51">(const ff_asf_guid){<literal type="number" pos:start="281:48" pos:end="281:51">0x96</literal></argument>,<argument pos:start="281:53" pos:end="281:56"><literal type="number" pos:start="281:53" pos:end="281:56">0xC3</literal></argument>,<argument pos:start="281:58" pos:end="281:61"><literal type="number" pos:start="281:58" pos:end="281:61">0xD2</literal></argument>,<argument pos:start="281:63" pos:end="281:66"><literal type="number" pos:start="281:63" pos:end="281:66">0xC2</literal></argument>,<argument pos:start="281:68" pos:end="281:71"><literal type="number" pos:start="281:68" pos:end="281:71">0x7E</literal></argument>,<argument pos:start="281:73" pos:end="281:76"><literal type="number" pos:start="281:73" pos:end="281:76">0x9A</literal></argument>,<argument pos:start="281:78" pos:end="281:81"><literal type="number" pos:start="281:78" pos:end="281:81">0xDA</literal></argument>,<argument pos:start="281:83" pos:end="281:86"><literal type="number" pos:start="281:83" pos:end="281:86">0x11</literal></argument>,<argument pos:start="281:88" pos:end="281:91"><literal type="number" pos:start="281:88" pos:end="281:91">0x8B</literal></argument>,<argument pos:start="281:93" pos:end="281:96"><literal type="number" pos:start="281:93" pos:end="281:96">0xF7</literal></argument>,<argument pos:start="281:98" pos:end="281:101"><literal type="number" pos:start="281:98" pos:end="281:101">0x00</literal></argument>,<argument pos:start="281:103" pos:end="281:106"><literal type="number" pos:start="281:103" pos:end="281:106">0x07</literal></argument>,<argument pos:start="281:108" pos:end="281:111"><literal type="number" pos:start="281:108" pos:end="281:111">0xE9</literal></argument>,<argument pos:start="281:113" pos:end="281:116"><literal type="number" pos:start="281:113" pos:end="281:116">0x5E</literal></argument>,<argument pos:start="281:118" pos:end="281:121"><literal type="number" pos:start="281:118" pos:end="281:121">0xAD</literal></argument>,<argument pos:start="281:123" pos:end="281:127"><literal type="number" pos:start="281:123" pos:end="281:126">0x8D</literal>}</argument>)</argument_list></macro> <operator pos:start="281:130" pos:end="281:131">||</operator>

            <operator pos:start="283:13" pos:end="283:13">!</operator><macro pos:start="283:14" pos:end="283:128"><name pos:start="283:14" pos:end="283:23">ff_guidcmp</name><argument_list pos:start="283:24" pos:end="283:128">(<argument pos:start="283:25" pos:end="283:25">g</argument>, <argument pos:start="283:28" pos:end="283:51">(const ff_asf_guid){<literal type="number" pos:start="283:48" pos:end="283:51">0x97</literal></argument>,<argument pos:start="283:53" pos:end="283:56"><literal type="number" pos:start="283:53" pos:end="283:56">0xC3</literal></argument>,<argument pos:start="283:58" pos:end="283:61"><literal type="number" pos:start="283:58" pos:end="283:61">0xD2</literal></argument>,<argument pos:start="283:63" pos:end="283:66"><literal type="number" pos:start="283:63" pos:end="283:66">0xC2</literal></argument>,<argument pos:start="283:68" pos:end="283:71"><literal type="number" pos:start="283:68" pos:end="283:71">0x7E</literal></argument>,<argument pos:start="283:73" pos:end="283:76"><literal type="number" pos:start="283:73" pos:end="283:76">0x9A</literal></argument>,<argument pos:start="283:78" pos:end="283:81"><literal type="number" pos:start="283:78" pos:end="283:81">0xDA</literal></argument>,<argument pos:start="283:83" pos:end="283:86"><literal type="number" pos:start="283:83" pos:end="283:86">0x11</literal></argument>,<argument pos:start="283:88" pos:end="283:91"><literal type="number" pos:start="283:88" pos:end="283:91">0x8B</literal></argument>,<argument pos:start="283:93" pos:end="283:96"><literal type="number" pos:start="283:93" pos:end="283:96">0xF7</literal></argument>,<argument pos:start="283:98" pos:end="283:101"><literal type="number" pos:start="283:98" pos:end="283:101">0x00</literal></argument>,<argument pos:start="283:103" pos:end="283:106"><literal type="number" pos:start="283:103" pos:end="283:106">0x07</literal></argument>,<argument pos:start="283:108" pos:end="283:111"><literal type="number" pos:start="283:108" pos:end="283:111">0xE9</literal></argument>,<argument pos:start="283:113" pos:end="283:116"><literal type="number" pos:start="283:113" pos:end="283:116">0x5E</literal></argument>,<argument pos:start="283:118" pos:end="283:121"><literal type="number" pos:start="283:118" pos:end="283:121">0xAD</literal></argument>,<argument pos:start="283:123" pos:end="283:127"><literal type="number" pos:start="283:123" pos:end="283:126">0x8D</literal>}</argument>)</argument_list></macro> <operator pos:start="283:130" pos:end="283:131">||</operator>

            <operator pos:start="285:13" pos:end="285:13">!</operator><macro pos:start="285:14" pos:end="285:128"><name pos:start="285:14" pos:end="285:23">ff_guidcmp</name><argument_list pos:start="285:24" pos:end="285:128">(<argument pos:start="285:25" pos:end="285:25">g</argument>, <argument pos:start="285:28" pos:end="285:51">(const ff_asf_guid){<literal type="number" pos:start="285:48" pos:end="285:51">0xA1</literal></argument>,<argument pos:start="285:53" pos:end="285:56"><literal type="number" pos:start="285:53" pos:end="285:56">0xC3</literal></argument>,<argument pos:start="285:58" pos:end="285:61"><literal type="number" pos:start="285:58" pos:end="285:61">0xD2</literal></argument>,<argument pos:start="285:63" pos:end="285:66"><literal type="number" pos:start="285:63" pos:end="285:66">0xC2</literal></argument>,<argument pos:start="285:68" pos:end="285:71"><literal type="number" pos:start="285:68" pos:end="285:71">0x7E</literal></argument>,<argument pos:start="285:73" pos:end="285:76"><literal type="number" pos:start="285:73" pos:end="285:76">0x9A</literal></argument>,<argument pos:start="285:78" pos:end="285:81"><literal type="number" pos:start="285:78" pos:end="285:81">0xDA</literal></argument>,<argument pos:start="285:83" pos:end="285:86"><literal type="number" pos:start="285:83" pos:end="285:86">0x11</literal></argument>,<argument pos:start="285:88" pos:end="285:91"><literal type="number" pos:start="285:88" pos:end="285:91">0x8B</literal></argument>,<argument pos:start="285:93" pos:end="285:96"><literal type="number" pos:start="285:93" pos:end="285:96">0xF7</literal></argument>,<argument pos:start="285:98" pos:end="285:101"><literal type="number" pos:start="285:98" pos:end="285:101">0x00</literal></argument>,<argument pos:start="285:103" pos:end="285:106"><literal type="number" pos:start="285:103" pos:end="285:106">0x07</literal></argument>,<argument pos:start="285:108" pos:end="285:111"><literal type="number" pos:start="285:108" pos:end="285:111">0xE9</literal></argument>,<argument pos:start="285:113" pos:end="285:116"><literal type="number" pos:start="285:113" pos:end="285:116">0x5E</literal></argument>,<argument pos:start="285:118" pos:end="285:121"><literal type="number" pos:start="285:118" pos:end="285:121">0xAD</literal></argument>,<argument pos:start="285:123" pos:end="285:127"><literal type="number" pos:start="285:123" pos:end="285:126">0x8D</literal>}</argument>)</argument_list></macro></expr>)</condition> <block pos:start="285:131" pos:end="289:9">{<block_content>

            <comment type="line" pos:start="287:13" pos:end="287:32">//ignore known guids</comment>

        </block_content>}</block></if> <else pos:start="289:11" pos:end="291:85">else<block type="pseudo" pos:start="291:13" pos:end="291:85"><block_content pos:start="291:13" pos:end="291:85">

            <expr_stmt pos:start="291:13" pos:end="291:85"><expr pos:start="291:13" pos:end="291:84"><call pos:start="291:13" pos:end="291:84"><name pos:start="291:13" pos:end="291:18">av_log</name><argument_list pos:start="291:19" pos:end="291:84">(<argument pos:start="291:20" pos:end="291:20"><expr pos:start="291:20" pos:end="291:20"><name pos:start="291:20" pos:end="291:20">s</name></expr></argument>, <argument pos:start="291:23" pos:end="291:36"><expr pos:start="291:23" pos:end="291:36"><name pos:start="291:23" pos:end="291:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="291:39" pos:end="291:70"><expr pos:start="291:39" pos:end="291:70"><literal type="string" pos:start="291:39" pos:end="291:58">"unsupported chunk:"</literal><name pos:start="291:59" pos:end="291:66">PRI_GUID</name><literal type="string" pos:start="291:67" pos:end="291:70">"\n"</literal></expr></argument>, <argument pos:start="291:73" pos:end="291:83"><expr pos:start="291:73" pos:end="291:83"><call pos:start="291:73" pos:end="291:83"><name pos:start="291:73" pos:end="291:80">ARG_GUID</name><argument_list pos:start="291:81" pos:end="291:83">(<argument pos:start="291:82" pos:end="291:82"><expr pos:start="291:82" pos:end="291:82"><name pos:start="291:82" pos:end="291:82">g</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="295:9" pos:end="295:48"><expr pos:start="295:9" pos:end="295:47"><call pos:start="295:9" pos:end="295:47"><name pos:start="295:9" pos:end="295:17">url_fskip</name><argument_list pos:start="295:18" pos:end="295:47">(<argument pos:start="295:19" pos:end="295:20"><expr pos:start="295:19" pos:end="295:20"><name pos:start="295:19" pos:end="295:20">pb</name></expr></argument>, <argument pos:start="295:23" pos:end="295:46"><expr pos:start="295:23" pos:end="295:46"><call pos:start="295:23" pos:end="295:35"><name pos:start="295:23" pos:end="295:30">WTV_PAD8</name><argument_list pos:start="295:31" pos:end="295:35">(<argument pos:start="295:32" pos:end="295:34"><expr pos:start="295:32" pos:end="295:34"><name pos:start="295:32" pos:end="295:34">len</name></expr></argument>)</argument_list></call> <operator pos:start="295:37" pos:end="295:37">-</operator> <name pos:start="295:39" pos:end="295:46">consumed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="299:5" pos:end="299:23">return <expr pos:start="299:12" pos:end="299:22"><name pos:start="299:12" pos:end="299:22">AVERROR_EOF</name></expr>;</return>

</block_content>}</block></function>
</unit>
