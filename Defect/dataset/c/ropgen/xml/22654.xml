<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22654.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">xics_alloc</name><parameter_list pos:start="1:15" pos:end="1:63">(<parameter pos:start="1:16" pos:end="1:29"><decl pos:start="1:16" pos:end="1:29"><type pos:start="1:16" pos:end="1:29"><name pos:start="1:16" pos:end="1:24">XICSState</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">icp</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:38"><decl pos:start="1:32" pos:end="1:38"><type pos:start="1:32" pos:end="1:38"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:38">src</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:52">irq_hint</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:62"><decl pos:start="1:55" pos:end="1:62"><type pos:start="1:55" pos:end="1:62"><name pos:start="1:55" pos:end="1:58">bool</name></type> <name pos:start="1:60" pos:end="1:62">lsi</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">ICSState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">ics</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:24">icp</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:29">ics</name><index pos:start="5:30" pos:end="5:34">[<expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">src</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">irq</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="39:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">irq_hint</name></expr>)</condition> <block pos:start="11:19" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:23">

        <expr_stmt pos:start="13:9" pos:end="13:55"><expr pos:start="13:9" pos:end="13:54"><call pos:start="13:9" pos:end="13:54"><name pos:start="13:9" pos:end="13:14">assert</name><argument_list pos:start="13:15" pos:end="13:54">(<argument pos:start="13:16" pos:end="13:53"><expr pos:start="13:16" pos:end="13:53"><name pos:start="13:16" pos:end="13:18">src</name> <operator pos:start="13:20" pos:end="13:21">==</operator> <call pos:start="13:23" pos:end="13:53"><name pos:start="13:23" pos:end="13:38">xics_find_source</name><argument_list pos:start="13:39" pos:end="13:53">(<argument pos:start="13:40" pos:end="13:42"><expr pos:start="13:40" pos:end="13:42"><name pos:start="13:40" pos:end="13:42">icp</name></expr></argument>, <argument pos:start="13:45" pos:end="13:52"><expr pos:start="13:45" pos:end="13:52"><name pos:start="13:45" pos:end="13:52">irq_hint</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:55">(<expr pos:start="15:13" pos:end="15:54"><operator pos:start="15:13" pos:end="15:13">!</operator><call pos:start="15:14" pos:end="15:54"><name pos:start="15:14" pos:end="15:25">ICS_IRQ_FREE</name><argument_list pos:start="15:26" pos:end="15:54">(<argument pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:29">ics</name></expr></argument>, <argument pos:start="15:32" pos:end="15:53"><expr pos:start="15:32" pos:end="15:53"><name pos:start="15:32" pos:end="15:39">irq_hint</name> <operator pos:start="15:41" pos:end="15:41">-</operator> <name pos:start="15:43" pos:end="15:53"><name pos:start="15:43" pos:end="15:45">ics</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:53">offset</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:57" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:22">

            <expr_stmt pos:start="17:13" pos:end="17:56"><expr pos:start="17:13" pos:end="17:55"><call pos:start="17:13" pos:end="17:55"><name pos:start="17:13" pos:end="17:40">trace_xics_alloc_failed_hint</name><argument_list pos:start="17:41" pos:end="17:55">(<argument pos:start="17:42" pos:end="17:44"><expr pos:start="17:42" pos:end="17:44"><name pos:start="17:42" pos:end="17:44">src</name></expr></argument>, <argument pos:start="17:47" pos:end="17:54"><expr pos:start="17:47" pos:end="17:54"><name pos:start="17:47" pos:end="17:54">irq_hint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="19:13" pos:end="19:22">return <expr pos:start="19:20" pos:end="19:21"><operator pos:start="19:20" pos:end="19:20">-</operator><literal type="number" pos:start="19:21" pos:end="19:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">irq</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:22">irq_hint</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="39:5">else <block pos:start="25:12" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:27">

        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:11">irq</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:44"><name pos:start="27:15" pos:end="27:33">ics_find_free_block</name><argument_list pos:start="27:34" pos:end="27:44">(<argument pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:37">ics</name></expr></argument>, <argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">1</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:43"><expr pos:start="27:43" pos:end="27:43"><literal type="number" pos:start="27:43" pos:end="27:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">irq</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:22">

            <expr_stmt pos:start="31:13" pos:end="31:49"><expr pos:start="31:13" pos:end="31:48"><call pos:start="31:13" pos:end="31:48"><name pos:start="31:13" pos:end="31:43">trace_xics_alloc_failed_no_left</name><argument_list pos:start="31:44" pos:end="31:48">(<argument pos:start="31:45" pos:end="31:47"><expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:47">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:11">irq</name> <operator pos:start="37:13" pos:end="37:14">+=</operator> <name pos:start="37:16" pos:end="37:26"><name pos:start="37:16" pos:end="37:18">ics</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:26">offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><call pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:20">ics_set_irq_type</name><argument_list pos:start="43:21" pos:end="43:49">(<argument pos:start="43:22" pos:end="43:24"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:24">ics</name></expr></argument>, <argument pos:start="43:27" pos:end="43:43"><expr pos:start="43:27" pos:end="43:43"><name pos:start="43:27" pos:end="43:29">irq</name> <operator pos:start="43:31" pos:end="43:31">-</operator> <name pos:start="43:33" pos:end="43:43"><name pos:start="43:33" pos:end="43:35">ics</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:43">offset</name></name></expr></argument>, <argument pos:start="43:46" pos:end="43:48"><expr pos:start="43:46" pos:end="43:48"><name pos:start="43:46" pos:end="43:48">lsi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><call pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:20">trace_xics_alloc</name><argument_list pos:start="45:21" pos:end="45:30">(<argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:24">src</name></expr></argument>, <argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">irq</name></expr>;</return>

</block_content>}</block></function>
</unit>
