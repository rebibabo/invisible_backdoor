<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17762.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">ram_find_and_save_block</name><parameter_list pos:start="1:35" pos:end="1:65">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:43">RAMState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">rs</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:53">bool</name></type> <name pos:start="1:55" pos:end="1:64">last_stage</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:17">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20">PageSearchStatus</name></type> <name pos:start="5:22" pos:end="5:24">pss</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">pages</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:14">again</name></decl>, <decl pos:start="9:17" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:17" pos:end="9:21">found</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">ram_addr_t</name></type> <name pos:start="11:16" pos:end="11:28">dirty_ram_abs</name></decl>;</decl_stmt> <comment type="block" pos:start="11:31" pos:end="13:52">/* Address of the start of the dirty page in

                                 ram_addr_t space */</comment>



    <comment type="block" pos:start="17:5" pos:end="17:44">/* No dirty page as there is zero RAM */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:26"><name pos:start="19:10" pos:end="19:24">ram_bytes_total</name><argument_list pos:start="19:25" pos:end="19:26">()</argument_list></call></expr>)</condition> <block pos:start="19:29" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:21">

        <return pos:start="21:9" pos:end="21:21">return <expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">pages</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">pss</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:13">block</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:35"><name pos:start="27:17" pos:end="27:18">rs</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:35">last_seen_block</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:7">pss</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:14">offset</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:32"><name pos:start="29:18" pos:end="29:19">rs</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:32">last_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:7">pss</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:22">complete_round</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:30">false</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:19">(<expr pos:start="35:9" pos:end="35:18"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:12">pss</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:18">block</name></name></expr>)</condition> <block pos:start="35:21" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:54">

        <expr_stmt pos:start="37:9" pos:end="37:54"><expr pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:11">pss</name><operator pos:start="37:12" pos:end="37:12">.</operator><name pos:start="37:13" pos:end="37:17">block</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:53"><name pos:start="37:21" pos:end="37:35">QLIST_FIRST_RCU</name><argument_list pos:start="37:36" pos:end="37:53">(<argument pos:start="37:37" pos:end="37:52"><expr pos:start="37:37" pos:end="37:52"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:52"><name pos:start="37:38" pos:end="37:45">ram_list</name><operator pos:start="37:46" pos:end="37:46">.</operator><name pos:start="37:47" pos:end="37:52">blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <do pos:start="43:5" pos:end="67:30">do <block pos:start="43:8" pos:end="67:5">{<block_content pos:start="45:9" pos:end="65:9">

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:13">again</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:20">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:13">found</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:57"><name pos:start="47:17" pos:end="47:31">get_queued_page</name><argument_list pos:start="47:32" pos:end="47:57">(<argument pos:start="47:33" pos:end="47:34"><expr pos:start="47:33" pos:end="47:34"><name pos:start="47:33" pos:end="47:34">rs</name></expr></argument>, <argument pos:start="47:37" pos:end="47:40"><expr pos:start="47:37" pos:end="47:40"><operator pos:start="47:37" pos:end="47:37">&amp;</operator><name pos:start="47:38" pos:end="47:40">pss</name></expr></argument>, <argument pos:start="47:43" pos:end="47:56"><expr pos:start="47:43" pos:end="47:56"><operator pos:start="47:43" pos:end="47:43">&amp;</operator><name pos:start="47:44" pos:end="47:56">dirty_ram_abs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:19">(<expr pos:start="51:13" pos:end="51:18"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:18">found</name></expr>)</condition> <block pos:start="51:21" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:71">

            <comment type="block" pos:start="53:13" pos:end="53:74">/* priority queue empty, so just search for something dirty */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:71"><expr pos:start="55:13" pos:end="55:70"><name pos:start="55:13" pos:end="55:17">found</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="55:70"><name pos:start="55:21" pos:end="55:36">find_dirty_block</name><argument_list pos:start="55:37" pos:end="55:70">(<argument pos:start="55:38" pos:end="55:39"><expr pos:start="55:38" pos:end="55:39"><name pos:start="55:38" pos:end="55:39">rs</name></expr></argument>, <argument pos:start="55:42" pos:end="55:45"><expr pos:start="55:42" pos:end="55:45"><operator pos:start="55:42" pos:end="55:42">&amp;</operator><name pos:start="55:43" pos:end="55:45">pss</name></expr></argument>, <argument pos:start="55:48" pos:end="55:53"><expr pos:start="55:48" pos:end="55:53"><operator pos:start="55:48" pos:end="55:48">&amp;</operator><name pos:start="55:49" pos:end="55:53">again</name></expr></argument>, <argument pos:start="55:56" pos:end="55:69"><expr pos:start="55:56" pos:end="55:69"><operator pos:start="55:56" pos:end="55:56">&amp;</operator><name pos:start="55:57" pos:end="55:69">dirty_ram_abs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:18">(<expr pos:start="61:13" pos:end="61:17"><name pos:start="61:13" pos:end="61:17">found</name></expr>)</condition> <block pos:start="61:20" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:76">

            <expr_stmt pos:start="63:13" pos:end="63:76"><expr pos:start="63:13" pos:end="63:75"><name pos:start="63:13" pos:end="63:17">pages</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:75"><name pos:start="63:21" pos:end="63:38">ram_save_host_page</name><argument_list pos:start="63:39" pos:end="63:75">(<argument pos:start="63:40" pos:end="63:41"><expr pos:start="63:40" pos:end="63:41"><name pos:start="63:40" pos:end="63:41">rs</name></expr></argument>, <argument pos:start="63:44" pos:end="63:47"><expr pos:start="63:44" pos:end="63:47"><operator pos:start="63:44" pos:end="63:44">&amp;</operator><name pos:start="63:45" pos:end="63:47">pss</name></expr></argument>, <argument pos:start="63:50" pos:end="63:59"><expr pos:start="63:50" pos:end="63:59"><name pos:start="63:50" pos:end="63:59">last_stage</name></expr></argument>, <argument pos:start="63:62" pos:end="63:74"><expr pos:start="63:62" pos:end="63:74"><name pos:start="63:62" pos:end="63:74">dirty_ram_abs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="67:13" pos:end="67:29">(<expr pos:start="67:14" pos:end="67:28"><operator pos:start="67:14" pos:end="67:14">!</operator><name pos:start="67:15" pos:end="67:19">pages</name> <operator pos:start="67:21" pos:end="67:22">&amp;&amp;</operator> <name pos:start="67:24" pos:end="67:28">again</name></expr>)</condition>;</do>



    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:6">rs</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:23">last_seen_block</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:35"><name pos:start="71:27" pos:end="71:29">pss</name><operator pos:start="71:30" pos:end="71:30">.</operator><name pos:start="71:31" pos:end="71:35">block</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:33"><expr pos:start="73:5" pos:end="73:32"><name pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:6">rs</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:19">last_offset</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:32"><name pos:start="73:23" pos:end="73:25">pss</name><operator pos:start="73:26" pos:end="73:26">.</operator><name pos:start="73:27" pos:end="73:32">offset</name></name></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:17">return <expr pos:start="77:12" pos:end="77:16"><name pos:start="77:12" pos:end="77:16">pages</name></expr>;</return>

</block_content>}</block></function>
</unit>
