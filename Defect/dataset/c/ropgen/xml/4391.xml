<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4391.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">vnc_init_basic_info</name><parameter_list pos:start="1:32" pos:end="5:45">(<parameter pos:start="1:33" pos:end="1:57"><decl pos:start="1:33" pos:end="1:57"><type pos:start="1:33" pos:end="1:57"><name pos:start="1:33" pos:end="1:51">SocketAddressLegacy</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">addr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><name pos:start="3:33" pos:end="3:44">VncBasicInfo</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">info</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:44"><decl pos:start="5:33" pos:end="5:44"><type pos:start="5:33" pos:end="5:44"><name pos:start="5:33" pos:end="5:37">Error</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier><modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="63:1">{<block_content pos:start="9:5" pos:end="61:11">

    <switch pos:start="9:5" pos:end="57:5">switch <condition pos:start="9:12" pos:end="9:23">(<expr pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:16">addr</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:22">type</name></name></expr>)</condition> <block pos:start="9:25" pos:end="57:5">{<block_content pos:start="11:5" pos:end="55:16">

    <case pos:start="11:5" pos:end="11:41">case <expr pos:start="11:10" pos:end="11:40"><name pos:start="11:10" pos:end="11:40">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:55"><expr pos:start="13:9" pos:end="13:54"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:12">info</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:18">host</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <call pos:start="13:22" pos:end="13:54"><name pos:start="13:22" pos:end="13:29">g_strdup</name><argument_list pos:start="13:30" pos:end="13:54">(<argument pos:start="13:31" pos:end="13:53"><expr pos:start="13:31" pos:end="13:53"><name pos:start="13:31" pos:end="13:53"><name pos:start="13:31" pos:end="13:34">addr</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:37">u</name><operator pos:start="13:38" pos:end="13:38">.</operator><name pos:start="13:39" pos:end="13:42">inet</name><operator pos:start="13:43" pos:end="13:43">.</operator><name pos:start="13:44" pos:end="13:47">data</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:53">host</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:58"><expr pos:start="15:9" pos:end="15:57"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:12">info</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:21">service</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <call pos:start="15:25" pos:end="15:57"><name pos:start="15:25" pos:end="15:32">g_strdup</name><argument_list pos:start="15:33" pos:end="15:57">(<argument pos:start="15:34" pos:end="15:56"><expr pos:start="15:34" pos:end="15:56"><name pos:start="15:34" pos:end="15:56"><name pos:start="15:34" pos:end="15:37">addr</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:40">u</name><operator pos:start="15:41" pos:end="15:41">.</operator><name pos:start="15:42" pos:end="15:45">inet</name><operator pos:start="15:46" pos:end="15:46">.</operator><name pos:start="15:47" pos:end="15:50">data</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:56">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:36">(<expr pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:16">addr</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:19">u</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:24">inet</name><operator pos:start="17:25" pos:end="17:25">.</operator><name pos:start="17:26" pos:end="17:29">data</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:35">ipv6</name></name></expr>)</condition> <block pos:start="17:38" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:55">

            <expr_stmt pos:start="19:13" pos:end="19:55"><expr pos:start="19:13" pos:end="19:54"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:16">info</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:24">family</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:54">NETWORK_ADDRESS_FAMILY_IPV6</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="25:9">else <block pos:start="21:16" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:55">

            <expr_stmt pos:start="23:13" pos:end="23:55"><expr pos:start="23:13" pos:end="23:54"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:16">info</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:24">family</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:54">NETWORK_ADDRESS_FAMILY_IPV4</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>



    <case pos:start="31:5" pos:end="31:41">case <expr pos:start="31:10" pos:end="31:40"><name pos:start="31:10" pos:end="31:40">SOCKET_ADDRESS_LEGACY_KIND_UNIX</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:12">info</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:18">host</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <call pos:start="33:22" pos:end="33:33"><name pos:start="33:22" pos:end="33:29">g_strdup</name><argument_list pos:start="33:30" pos:end="33:33">(<argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><literal type="string" pos:start="33:31" pos:end="33:32">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:12">info</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:21">service</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:59"><name pos:start="35:25" pos:end="35:32">g_strdup</name><argument_list pos:start="35:33" pos:end="35:59">(<argument pos:start="35:34" pos:end="35:58"><expr pos:start="35:34" pos:end="35:58"><name pos:start="35:34" pos:end="35:58"><name pos:start="35:34" pos:end="35:37">addr</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:40">u</name><operator pos:start="35:41" pos:end="35:41">.</operator><name pos:start="35:42" pos:end="35:47">q_unix</name><operator pos:start="35:48" pos:end="35:48">.</operator><name pos:start="35:49" pos:end="35:52">data</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:58">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:12">info</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:20">family</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:50">NETWORK_ADDRESS_FAMILY_UNIX</name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>



    <case pos:start="43:5" pos:end="43:42">case <expr pos:start="43:10" pos:end="43:41"><name pos:start="43:10" pos:end="43:41">SOCKET_ADDRESS_LEGACY_KIND_VSOCK</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:39">case <expr pos:start="45:10" pos:end="45:38"><name pos:start="45:10" pos:end="45:38">SOCKET_ADDRESS_LEGACY_KIND_FD</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="49:63"><expr pos:start="47:9" pos:end="49:62"><call pos:start="47:9" pos:end="49:62"><name pos:start="47:9" pos:end="47:18">error_setg</name><argument_list pos:start="47:19" pos:end="49:62">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">errp</name></expr></argument>, <argument pos:start="47:26" pos:end="47:61"><expr pos:start="47:26" pos:end="47:61"><literal type="string" pos:start="47:26" pos:end="47:61">"Unsupported socket address type %s"</literal></expr></argument>,

                   <argument pos:start="49:20" pos:end="49:61"><expr pos:start="49:20" pos:end="49:61"><name pos:start="49:20" pos:end="49:61"><name pos:start="49:20" pos:end="49:49">SocketAddressLegacyKind_lookup</name><index pos:start="49:50" pos:end="49:61">[<expr pos:start="49:51" pos:end="49:60"><name pos:start="49:51" pos:end="49:60"><name pos:start="49:51" pos:end="49:54">addr</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:60">type</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <default pos:start="53:5" pos:end="53:12">default:</default>

        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><call pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:13">abort</name><argument_list pos:start="55:14" pos:end="55:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="61:5" pos:end="61:11">return;</return>

</block_content>}</block></function>
</unit>
