<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11083.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="3:40">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:52">void</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:74"><decl pos:start="1:61" pos:end="1:74"><type pos:start="1:61" pos:end="1:74"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:74">got_frame</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:32">AVPacket</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="203:1">{<block_content pos:start="7:5" pos:end="201:23">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:15">KmvcContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier><specifier pos:start="7:18" pos:end="7:22">const</specifier></type> <name pos:start="7:24" pos:end="7:26">ctx</name> <init pos:start="7:28" pos:end="7:45">= <expr pos:start="7:30" pos:end="7:45"><name pos:start="7:30" pos:end="7:45"><name pos:start="7:30" pos:end="7:34">avctx</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">frame</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">out</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">blocksize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:83"><decl pos:start="19:5" pos:end="19:82"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:22">pal</name> <init pos:start="19:24" pos:end="19:82">= <expr pos:start="19:26" pos:end="19:82"><call pos:start="19:26" pos:end="19:82"><name pos:start="19:26" pos:end="19:48">av_packet_get_side_data</name><argument_list pos:start="19:49" pos:end="19:82">(<argument pos:start="19:50" pos:end="19:54"><expr pos:start="19:50" pos:end="19:54"><name pos:start="19:50" pos:end="19:54">avpkt</name></expr></argument>, <argument pos:start="19:57" pos:end="19:75"><expr pos:start="19:57" pos:end="19:75"><name pos:start="19:57" pos:end="19:75">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="19:78" pos:end="19:81"><expr pos:start="19:78" pos:end="19:81"><name pos:start="19:78" pos:end="19:81">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:56"><expr pos:start="23:5" pos:end="23:55"><call pos:start="23:5" pos:end="23:55"><name pos:start="23:5" pos:end="23:20">bytestream2_init</name><argument_list pos:start="23:21" pos:end="23:55">(<argument pos:start="23:22" pos:end="23:28"><expr pos:start="23:22" pos:end="23:28"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:28"><name pos:start="23:23" pos:end="23:25">ctx</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:28">g</name></name></expr></argument>, <argument pos:start="23:31" pos:end="23:41"><expr pos:start="23:31" pos:end="23:41"><name pos:start="23:31" pos:end="23:41"><name pos:start="23:31" pos:end="23:35">avpkt</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:41">data</name></name></expr></argument>, <argument pos:start="23:44" pos:end="23:54"><expr pos:start="23:44" pos:end="23:54"><name pos:start="23:44" pos:end="23:54"><name pos:start="23:44" pos:end="23:48">avpkt</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="29:19"><if pos:start="27:5" pos:end="29:19">if <condition pos:start="27:8" pos:end="27:51">(<expr pos:start="27:9" pos:end="27:50"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">ret</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:45"><name pos:start="27:16" pos:end="27:28">ff_get_buffer</name><argument_list pos:start="27:29" pos:end="27:45">(<argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34">avctx</name></expr></argument>, <argument pos:start="27:37" pos:end="27:41"><expr pos:start="27:37" pos:end="27:41"><name pos:start="27:37" pos:end="27:41">frame</name></expr></argument>, <argument pos:start="27:44" pos:end="27:44"><expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="27:46" pos:end="27:46">)</operator> <operator pos:start="27:48" pos:end="27:48">&lt;</operator> <literal type="number" pos:start="27:50" pos:end="27:50">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:19"><block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:10">header</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:42"><name pos:start="33:14" pos:end="33:33">bytestream2_get_byte</name><argument_list pos:start="33:34" pos:end="33:42">(<argument pos:start="33:35" pos:end="33:41"><expr pos:start="33:35" pos:end="33:41"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:41"><name pos:start="33:36" pos:end="33:38">ctx</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:41">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:54">/* blocksize 127 is really palette change event */</comment>

    <if_stmt pos:start="39:5" pos:end="53:5"><if pos:start="39:5" pos:end="53:5">if <condition pos:start="39:8" pos:end="39:46">(<expr pos:start="39:9" pos:end="39:45"><call pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:29">bytestream2_peek_byte</name><argument_list pos:start="39:30" pos:end="39:38">(<argument pos:start="39:31" pos:end="39:37"><expr pos:start="39:31" pos:end="39:37"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:34">ctx</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:37">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:40" pos:end="39:41">==</operator> <literal type="number" pos:start="39:43" pos:end="39:45">127</literal></expr>)</condition> <block pos:start="39:48" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:58">

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><call pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:24">bytestream2_skip</name><argument_list pos:start="41:25" pos:end="41:36">(<argument pos:start="41:26" pos:end="41:32"><expr pos:start="41:26" pos:end="41:32"><operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:32"><name pos:start="41:27" pos:end="41:29">ctx</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:32">g</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="43:9" pos:end="49:9">for <control pos:start="43:13" pos:end="43:33">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:28"><expr pos:start="43:21" pos:end="43:27"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <literal type="number" pos:start="43:25" pos:end="43:27">127</literal></expr>;</condition> <incr pos:start="43:30" pos:end="43:32"><expr pos:start="43:30" pos:end="43:32"><name pos:start="43:30" pos:end="43:30">i</name><operator pos:start="43:31" pos:end="43:32">++</operator></expr></incr>)</control> <block pos:start="43:35" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:41">

            <expr_stmt pos:start="45:13" pos:end="45:88"><expr pos:start="45:13" pos:end="45:87"><name pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:15">ctx</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:20">pal</name><index pos:start="45:21" pos:end="45:41">[<expr pos:start="45:22" pos:end="45:40"><name pos:start="45:22" pos:end="45:22">i</name> <operator pos:start="45:24" pos:end="45:24">+</operator> <operator pos:start="45:26" pos:end="45:26">(</operator><name pos:start="45:27" pos:end="45:32">header</name> <operator pos:start="45:34" pos:end="45:34">&amp;</operator> <literal type="number" pos:start="45:36" pos:end="45:39">0x81</literal><operator pos:start="45:40" pos:end="45:40">)</operator></expr>]</index></name> <operator pos:start="45:43" pos:end="45:43">=</operator> <literal type="number" pos:start="45:45" pos:end="45:49">0xFFU</literal> <operator pos:start="45:51" pos:end="45:52">&lt;&lt;</operator> <literal type="number" pos:start="45:54" pos:end="45:55">24</literal> <operator pos:start="45:57" pos:end="45:57">|</operator> <call pos:start="45:59" pos:end="45:87"><name pos:start="45:59" pos:end="45:78">bytestream2_get_be24</name><argument_list pos:start="45:79" pos:end="45:87">(<argument pos:start="45:80" pos:end="45:86"><expr pos:start="45:80" pos:end="45:86"><operator pos:start="45:80" pos:end="45:80">&amp;</operator><name pos:start="45:81" pos:end="45:86"><name pos:start="45:81" pos:end="45:83">ctx</name><operator pos:start="45:84" pos:end="45:85">-&gt;</operator><name pos:start="45:86" pos:end="45:86">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><call pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:28">bytestream2_skip</name><argument_list pos:start="47:29" pos:end="47:40">(<argument pos:start="47:30" pos:end="47:36"><expr pos:start="47:30" pos:end="47:36"><operator pos:start="47:30" pos:end="47:30">&amp;</operator><name pos:start="47:31" pos:end="47:36"><name pos:start="47:31" pos:end="47:33">ctx</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:36">g</name></name></expr></argument>, <argument pos:start="47:39" pos:end="47:39"><expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><call pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:24">bytestream2_seek</name><argument_list pos:start="51:25" pos:end="51:57">(<argument pos:start="51:26" pos:end="51:32"><expr pos:start="51:26" pos:end="51:32"><operator pos:start="51:26" pos:end="51:26">&amp;</operator><name pos:start="51:27" pos:end="51:32"><name pos:start="51:27" pos:end="51:29">ctx</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:32">g</name></name></expr></argument>, <argument pos:start="51:35" pos:end="51:46"><expr pos:start="51:35" pos:end="51:46"><operator pos:start="51:35" pos:end="51:35">-</operator><literal type="number" pos:start="51:36" pos:end="51:38">127</literal> <operator pos:start="51:40" pos:end="51:40">*</operator> <literal type="number" pos:start="51:42" pos:end="51:44">4</literal> <operator pos:start="51:44" pos:end="51:44">-</operator> <literal type="number" pos:start="51:46" pos:end="51:46">3</literal></expr></argument>, <argument pos:start="51:49" pos:end="51:56"><expr pos:start="51:49" pos:end="51:56"><name pos:start="51:49" pos:end="51:56">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="69:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:31">(<expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:14">header</name> <operator pos:start="57:16" pos:end="57:16">&amp;</operator> <name pos:start="57:18" pos:end="57:30">KMVC_KEYFRAME</name></expr>)</condition> <block pos:start="57:33" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:45">

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:13">frame</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:24">key_frame</name></name> <operator pos:start="59:26" pos:end="59:26">=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:13">frame</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:24">pict_type</name></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="69:5">else <block pos:start="63:12" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:45">

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:13">frame</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:24">key_frame</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <literal type="number" pos:start="65:28" pos:end="65:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:13">frame</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:24">pict_type</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:44">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="73:5" pos:end="85:5"><if pos:start="73:5" pos:end="85:5">if <condition pos:start="73:8" pos:end="73:30">(<expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:14">header</name> <operator pos:start="73:16" pos:end="73:16">&amp;</operator> <name pos:start="73:18" pos:end="73:29">KMVC_PALETTE</name></expr>)</condition> <block pos:start="73:32" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:9">

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:13">frame</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:34">palette_has_changed</name></name> <operator pos:start="75:36" pos:end="75:36">=</operator> <literal type="number" pos:start="75:38" pos:end="75:38">1</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="77:9" pos:end="77:58">// palette starts from index 1 and has 127 entries</comment>

        <for pos:start="79:9" pos:end="83:9">for <control pos:start="79:13" pos:end="79:43">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">1</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:38"><expr pos:start="79:21" pos:end="79:37"><name pos:start="79:21" pos:end="79:21">i</name> <operator pos:start="79:23" pos:end="79:24">&lt;=</operator> <name pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:28">ctx</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:37">palsize</name></name></expr>;</condition> <incr pos:start="79:40" pos:end="79:42"><expr pos:start="79:40" pos:end="79:42"><name pos:start="79:40" pos:end="79:40">i</name><operator pos:start="79:41" pos:end="79:42">++</operator></expr></incr>)</control> <block pos:start="79:45" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:70">

            <expr_stmt pos:start="81:13" pos:end="81:70"><expr pos:start="81:13" pos:end="81:69"><name pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:15">ctx</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:20">pal</name><index pos:start="81:21" pos:end="81:23">[<expr pos:start="81:22" pos:end="81:22"><name pos:start="81:22" pos:end="81:22">i</name></expr>]</index></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <literal type="number" pos:start="81:27" pos:end="81:31">0xFFU</literal> <operator pos:start="81:33" pos:end="81:34">&lt;&lt;</operator> <literal type="number" pos:start="81:36" pos:end="81:37">24</literal> <operator pos:start="81:39" pos:end="81:39">|</operator> <call pos:start="81:41" pos:end="81:69"><name pos:start="81:41" pos:end="81:60">bytestream2_get_be24</name><argument_list pos:start="81:61" pos:end="81:69">(<argument pos:start="81:62" pos:end="81:68"><expr pos:start="81:62" pos:end="81:68"><operator pos:start="81:62" pos:end="81:62">&amp;</operator><name pos:start="81:63" pos:end="81:68"><name pos:start="81:63" pos:end="81:65">ctx</name><operator pos:start="81:66" pos:end="81:67">-&gt;</operator><name pos:start="81:68" pos:end="81:68">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:12">(<expr pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">pal</name></expr>)</condition> <block pos:start="89:14" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:46">

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:13">frame</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:34">palette_has_changed</name></name> <operator pos:start="91:36" pos:end="91:36">=</operator> <literal type="number" pos:start="91:38" pos:end="91:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:46"><expr pos:start="93:9" pos:end="93:45"><call pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:14">memcpy</name><argument_list pos:start="93:15" pos:end="93:45">(<argument pos:start="93:16" pos:end="93:23"><expr pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:18">ctx</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:23">pal</name></name></expr></argument>, <argument pos:start="93:26" pos:end="93:28"><expr pos:start="93:26" pos:end="93:28"><name pos:start="93:26" pos:end="93:28">pal</name></expr></argument>, <argument pos:start="93:31" pos:end="93:44"><expr pos:start="93:31" pos:end="93:44"><name pos:start="93:31" pos:end="93:44">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:20">(<expr pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:11">ctx</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:19">setpal</name></name></expr>)</condition> <block pos:start="99:22" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:39">

        <expr_stmt pos:start="101:9" pos:end="101:24"><expr pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:11">ctx</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:19">setpal</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:39"><expr pos:start="103:9" pos:end="103:38"><name pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:13">frame</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:34">palette_has_changed</name></name> <operator pos:start="103:36" pos:end="103:36">=</operator> <literal type="number" pos:start="103:38" pos:end="103:38">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:51">/* make the palette available on the way out */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:43"><expr pos:start="111:5" pos:end="111:42"><call pos:start="111:5" pos:end="111:42"><name pos:start="111:5" pos:end="111:10">memcpy</name><argument_list pos:start="111:11" pos:end="111:42">(<argument pos:start="111:12" pos:end="111:25"><expr pos:start="111:12" pos:end="111:25"><name pos:start="111:12" pos:end="111:25"><name pos:start="111:12" pos:end="111:16">frame</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:22">data</name><index pos:start="111:23" pos:end="111:25">[<expr pos:start="111:24" pos:end="111:24"><literal type="number" pos:start="111:24" pos:end="111:24">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="111:28" pos:end="111:35"><expr pos:start="111:28" pos:end="111:35"><name pos:start="111:28" pos:end="111:35"><name pos:start="111:28" pos:end="111:30">ctx</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:35">pal</name></name></expr></argument>, <argument pos:start="111:38" pos:end="111:41"><expr pos:start="111:38" pos:end="111:41"><literal type="number" pos:start="111:38" pos:end="111:41">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:46"><expr pos:start="115:5" pos:end="115:45"><name pos:start="115:5" pos:end="115:13">blocksize</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <call pos:start="115:17" pos:end="115:45"><name pos:start="115:17" pos:end="115:36">bytestream2_get_byte</name><argument_list pos:start="115:37" pos:end="115:45">(<argument pos:start="115:38" pos:end="115:44"><expr pos:start="115:38" pos:end="115:44"><operator pos:start="115:38" pos:end="115:38">&amp;</operator><name pos:start="115:39" pos:end="115:44"><name pos:start="115:39" pos:end="115:41">ctx</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:44">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="119:5" pos:end="125:5"><if pos:start="119:5" pos:end="125:5">if <condition pos:start="119:8" pos:end="119:43">(<expr pos:start="119:9" pos:end="119:42"><name pos:start="119:9" pos:end="119:17">blocksize</name> <operator pos:start="119:19" pos:end="119:20">!=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">8</literal> <operator pos:start="119:24" pos:end="119:25">&amp;&amp;</operator> <name pos:start="119:27" pos:end="119:35">blocksize</name> <operator pos:start="119:37" pos:end="119:38">!=</operator> <literal type="number" pos:start="119:40" pos:end="119:42">127</literal></expr>)</condition> <block pos:start="119:45" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:35">

        <expr_stmt pos:start="121:9" pos:end="121:68"><expr pos:start="121:9" pos:end="121:67"><call pos:start="121:9" pos:end="121:67"><name pos:start="121:9" pos:end="121:14">av_log</name><argument_list pos:start="121:15" pos:end="121:67">(<argument pos:start="121:16" pos:end="121:20"><expr pos:start="121:16" pos:end="121:20"><name pos:start="121:16" pos:end="121:20">avctx</name></expr></argument>, <argument pos:start="121:23" pos:end="121:34"><expr pos:start="121:23" pos:end="121:34"><name pos:start="121:23" pos:end="121:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:37" pos:end="121:55"><expr pos:start="121:37" pos:end="121:55"><literal type="string" pos:start="121:37" pos:end="121:55">"Block size = %i\n"</literal></expr></argument>, <argument pos:start="121:58" pos:end="121:66"><expr pos:start="121:58" pos:end="121:66"><name pos:start="121:58" pos:end="121:66">blocksize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="123:9" pos:end="123:35">return <expr pos:start="123:16" pos:end="123:34"><name pos:start="123:16" pos:end="123:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:35"><expr pos:start="127:5" pos:end="127:34"><call pos:start="127:5" pos:end="127:34"><name pos:start="127:5" pos:end="127:10">memset</name><argument_list pos:start="127:11" pos:end="127:34">(<argument pos:start="127:12" pos:end="127:19"><expr pos:start="127:12" pos:end="127:19"><name pos:start="127:12" pos:end="127:19"><name pos:start="127:12" pos:end="127:14">ctx</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:19">cur</name></name></expr></argument>, <argument pos:start="127:22" pos:end="127:22"><expr pos:start="127:22" pos:end="127:22"><literal type="number" pos:start="127:22" pos:end="127:22">0</literal></expr></argument>, <argument pos:start="127:25" pos:end="127:33"><expr pos:start="127:25" pos:end="127:33"><literal type="number" pos:start="127:25" pos:end="127:27">320</literal> <operator pos:start="127:29" pos:end="127:29">*</operator> <literal type="number" pos:start="127:31" pos:end="127:33">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="129:5" pos:end="157:5">switch <condition pos:start="129:12" pos:end="129:33">(<expr pos:start="129:13" pos:end="129:32"><name pos:start="129:13" pos:end="129:18">header</name> <operator pos:start="129:20" pos:end="129:20">&amp;</operator> <name pos:start="129:22" pos:end="129:32">KMVC_METHOD</name></expr>)</condition> <block pos:start="129:35" pos:end="157:5">{<block_content pos:start="131:5" pos:end="155:35">

    <case pos:start="131:5" pos:end="131:11">case <expr pos:start="131:10" pos:end="131:10"><literal type="number" pos:start="131:10" pos:end="131:10">0</literal></expr>:</case>

    <case pos:start="133:5" pos:end="133:11">case <expr pos:start="133:10" pos:end="133:10"><literal type="number" pos:start="133:10" pos:end="133:10">1</literal></expr>:</case> <comment type="line" pos:start="133:13" pos:end="133:44">// used in palette changed event</comment>

        <expr_stmt pos:start="135:9" pos:end="135:47"><expr pos:start="135:9" pos:end="135:46"><call pos:start="135:9" pos:end="135:46"><name pos:start="135:9" pos:end="135:14">memcpy</name><argument_list pos:start="135:15" pos:end="135:46">(<argument pos:start="135:16" pos:end="135:23"><expr pos:start="135:16" pos:end="135:23"><name pos:start="135:16" pos:end="135:23"><name pos:start="135:16" pos:end="135:18">ctx</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:23">cur</name></name></expr></argument>, <argument pos:start="135:26" pos:end="135:34"><expr pos:start="135:26" pos:end="135:34"><name pos:start="135:26" pos:end="135:34"><name pos:start="135:26" pos:end="135:28">ctx</name><operator pos:start="135:29" pos:end="135:30">-&gt;</operator><name pos:start="135:31" pos:end="135:34">prev</name></name></expr></argument>, <argument pos:start="135:37" pos:end="135:45"><expr pos:start="135:37" pos:end="135:45"><literal type="number" pos:start="135:37" pos:end="135:39">320</literal> <operator pos:start="135:41" pos:end="135:41">*</operator> <literal type="number" pos:start="135:43" pos:end="135:45">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:11">case <expr pos:start="139:10" pos:end="139:10"><literal type="number" pos:start="139:10" pos:end="139:10">3</literal></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:64"><expr pos:start="141:9" pos:end="141:63"><call pos:start="141:9" pos:end="141:63"><name pos:start="141:9" pos:end="141:29">kmvc_decode_intra_8x8</name><argument_list pos:start="141:30" pos:end="141:63">(<argument pos:start="141:31" pos:end="141:33"><expr pos:start="141:31" pos:end="141:33"><name pos:start="141:31" pos:end="141:33">ctx</name></expr></argument>, <argument pos:start="141:36" pos:end="141:47"><expr pos:start="141:36" pos:end="141:47"><name pos:start="141:36" pos:end="141:47"><name pos:start="141:36" pos:end="141:40">avctx</name><operator pos:start="141:41" pos:end="141:42">-&gt;</operator><name pos:start="141:43" pos:end="141:47">width</name></name></expr></argument>, <argument pos:start="141:50" pos:end="141:62"><expr pos:start="141:50" pos:end="141:62"><name pos:start="141:50" pos:end="141:62"><name pos:start="141:50" pos:end="141:54">avctx</name><operator pos:start="141:55" pos:end="141:56">-&gt;</operator><name pos:start="141:57" pos:end="141:62">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <case pos:start="145:5" pos:end="145:11">case <expr pos:start="145:10" pos:end="145:10"><literal type="number" pos:start="145:10" pos:end="145:10">4</literal></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="147:64"><expr pos:start="147:9" pos:end="147:63"><call pos:start="147:9" pos:end="147:63"><name pos:start="147:9" pos:end="147:29">kmvc_decode_inter_8x8</name><argument_list pos:start="147:30" pos:end="147:63">(<argument pos:start="147:31" pos:end="147:33"><expr pos:start="147:31" pos:end="147:33"><name pos:start="147:31" pos:end="147:33">ctx</name></expr></argument>, <argument pos:start="147:36" pos:end="147:47"><expr pos:start="147:36" pos:end="147:47"><name pos:start="147:36" pos:end="147:47"><name pos:start="147:36" pos:end="147:40">avctx</name><operator pos:start="147:41" pos:end="147:42">-&gt;</operator><name pos:start="147:43" pos:end="147:47">width</name></name></expr></argument>, <argument pos:start="147:50" pos:end="147:62"><expr pos:start="147:50" pos:end="147:62"><name pos:start="147:50" pos:end="147:62"><name pos:start="147:50" pos:end="147:54">avctx</name><operator pos:start="147:55" pos:end="147:56">-&gt;</operator><name pos:start="147:57" pos:end="147:62">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <default pos:start="151:5" pos:end="151:12">default:</default>

        <expr_stmt pos:start="153:9" pos:end="153:93"><expr pos:start="153:9" pos:end="153:92"><call pos:start="153:9" pos:end="153:92"><name pos:start="153:9" pos:end="153:14">av_log</name><argument_list pos:start="153:15" pos:end="153:92">(<argument pos:start="153:16" pos:end="153:20"><expr pos:start="153:16" pos:end="153:20"><name pos:start="153:16" pos:end="153:20">avctx</name></expr></argument>, <argument pos:start="153:23" pos:end="153:34"><expr pos:start="153:23" pos:end="153:34"><name pos:start="153:23" pos:end="153:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:37" pos:end="153:69"><expr pos:start="153:37" pos:end="153:69"><literal type="string" pos:start="153:37" pos:end="153:69">"Unknown compression method %i\n"</literal></expr></argument>, <argument pos:start="153:72" pos:end="153:91"><expr pos:start="153:72" pos:end="153:91"><name pos:start="153:72" pos:end="153:77">header</name> <operator pos:start="153:79" pos:end="153:79">&amp;</operator> <name pos:start="153:81" pos:end="153:91">KMVC_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="155:35">return <expr pos:start="155:16" pos:end="155:34"><name pos:start="155:16" pos:end="155:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="161:5" pos:end="161:25"><expr pos:start="161:5" pos:end="161:24"><name pos:start="161:5" pos:end="161:7">out</name> <operator pos:start="161:9" pos:end="161:9">=</operator> <name pos:start="161:11" pos:end="161:24"><name pos:start="161:11" pos:end="161:15">frame</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:21">data</name><index pos:start="161:22" pos:end="161:24">[<expr pos:start="161:23" pos:end="161:23"><literal type="number" pos:start="161:23" pos:end="161:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:19"><expr pos:start="163:5" pos:end="163:18"><name pos:start="163:5" pos:end="163:7">src</name> <operator pos:start="163:9" pos:end="163:9">=</operator> <name pos:start="163:11" pos:end="163:18"><name pos:start="163:11" pos:end="163:13">ctx</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:18">cur</name></name></expr>;</expr_stmt>

    <for pos:start="165:5" pos:end="173:5">for <control pos:start="165:9" pos:end="165:39">(<init pos:start="165:10" pos:end="165:15"><expr pos:start="165:10" pos:end="165:14"><name pos:start="165:10" pos:end="165:10">i</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <literal type="number" pos:start="165:14" pos:end="165:14">0</literal></expr>;</init> <condition pos:start="165:17" pos:end="165:34"><expr pos:start="165:17" pos:end="165:33"><name pos:start="165:17" pos:end="165:17">i</name> <operator pos:start="165:19" pos:end="165:19">&lt;</operator> <name pos:start="165:21" pos:end="165:33"><name pos:start="165:21" pos:end="165:25">avctx</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:33">height</name></name></expr>;</condition> <incr pos:start="165:36" pos:end="165:38"><expr pos:start="165:36" pos:end="165:38"><name pos:start="165:36" pos:end="165:36">i</name><operator pos:start="165:37" pos:end="165:38">++</operator></expr></incr>)</control> <block pos:start="165:41" pos:end="173:5">{<block_content pos:start="167:9" pos:end="171:34">

        <expr_stmt pos:start="167:9" pos:end="167:39"><expr pos:start="167:9" pos:end="167:38"><call pos:start="167:9" pos:end="167:38"><name pos:start="167:9" pos:end="167:14">memcpy</name><argument_list pos:start="167:15" pos:end="167:38">(<argument pos:start="167:16" pos:end="167:18"><expr pos:start="167:16" pos:end="167:18"><name pos:start="167:16" pos:end="167:18">out</name></expr></argument>, <argument pos:start="167:21" pos:end="167:23"><expr pos:start="167:21" pos:end="167:23"><name pos:start="167:21" pos:end="167:23">src</name></expr></argument>, <argument pos:start="167:26" pos:end="167:37"><expr pos:start="167:26" pos:end="167:37"><name pos:start="167:26" pos:end="167:37"><name pos:start="167:26" pos:end="167:30">avctx</name><operator pos:start="167:31" pos:end="167:32">-&gt;</operator><name pos:start="167:33" pos:end="167:37">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:19"><expr pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:11">src</name> <operator pos:start="169:13" pos:end="169:14">+=</operator> <literal type="number" pos:start="169:16" pos:end="169:18">320</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:34"><expr pos:start="171:9" pos:end="171:33"><name pos:start="171:9" pos:end="171:11">out</name> <operator pos:start="171:13" pos:end="171:14">+=</operator> <name pos:start="171:16" pos:end="171:33"><name pos:start="171:16" pos:end="171:20">frame</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:30">linesize</name><index pos:start="171:31" pos:end="171:33">[<expr pos:start="171:32" pos:end="171:32"><literal type="number" pos:start="171:32" pos:end="171:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="177:5" pos:end="177:22">/* flip buffers */</comment>

    <if_stmt pos:start="179:5" pos:end="191:5"><if pos:start="179:5" pos:end="185:5">if <condition pos:start="179:8" pos:end="179:30">(<expr pos:start="179:9" pos:end="179:29"><name pos:start="179:9" pos:end="179:16"><name pos:start="179:9" pos:end="179:11">ctx</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:16">cur</name></name> <operator pos:start="179:18" pos:end="179:19">==</operator> <name pos:start="179:21" pos:end="179:29"><name pos:start="179:21" pos:end="179:23">ctx</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:29">frm0</name></name></expr>)</condition> <block pos:start="179:32" pos:end="185:5">{<block_content pos:start="181:9" pos:end="183:30">

        <expr_stmt pos:start="181:9" pos:end="181:29"><expr pos:start="181:9" pos:end="181:28"><name pos:start="181:9" pos:end="181:16"><name pos:start="181:9" pos:end="181:11">ctx</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:16">cur</name></name> <operator pos:start="181:18" pos:end="181:18">=</operator> <name pos:start="181:20" pos:end="181:28"><name pos:start="181:20" pos:end="181:22">ctx</name><operator pos:start="181:23" pos:end="181:24">-&gt;</operator><name pos:start="181:25" pos:end="181:28">frm1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:30"><expr pos:start="183:9" pos:end="183:29"><name pos:start="183:9" pos:end="183:17"><name pos:start="183:9" pos:end="183:11">ctx</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:17">prev</name></name> <operator pos:start="183:19" pos:end="183:19">=</operator> <name pos:start="183:21" pos:end="183:29"><name pos:start="183:21" pos:end="183:23">ctx</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:29">frm0</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="185:7" pos:end="191:5">else <block pos:start="185:12" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:30">

        <expr_stmt pos:start="187:9" pos:end="187:29"><expr pos:start="187:9" pos:end="187:28"><name pos:start="187:9" pos:end="187:16"><name pos:start="187:9" pos:end="187:11">ctx</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:16">cur</name></name> <operator pos:start="187:18" pos:end="187:18">=</operator> <name pos:start="187:20" pos:end="187:28"><name pos:start="187:20" pos:end="187:22">ctx</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:28">frm0</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:30"><expr pos:start="189:9" pos:end="189:29"><name pos:start="189:9" pos:end="189:17"><name pos:start="189:9" pos:end="189:11">ctx</name><operator pos:start="189:12" pos:end="189:13">-&gt;</operator><name pos:start="189:14" pos:end="189:17">prev</name></name> <operator pos:start="189:19" pos:end="189:19">=</operator> <name pos:start="189:21" pos:end="189:29"><name pos:start="189:21" pos:end="189:23">ctx</name><operator pos:start="189:24" pos:end="189:25">-&gt;</operator><name pos:start="189:26" pos:end="189:29">frm1</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:19"><expr pos:start="195:5" pos:end="195:18"><operator pos:start="195:5" pos:end="195:5">*</operator><name pos:start="195:6" pos:end="195:14">got_frame</name> <operator pos:start="195:16" pos:end="195:16">=</operator> <literal type="number" pos:start="195:18" pos:end="195:18">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="199:5" pos:end="199:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="201:5" pos:end="201:23">return <expr pos:start="201:12" pos:end="201:22"><name pos:start="201:12" pos:end="201:22"><name pos:start="201:12" pos:end="201:16">avpkt</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator><name pos:start="201:19" pos:end="201:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
