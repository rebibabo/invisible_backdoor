<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13756.c" pos:tabs="8"><function pos:start="1:1" pos:end="379:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">kvm_put_msrs</name><parameter_list pos:start="1:24" pos:end="1:47">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:30">X86CPU</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">cpu</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:46">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="379:1">{<block_content pos:start="5:5" pos:end="377:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUX86State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">cpu</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:21">kvm_msr_buf_reset</name><argument_list pos:start="13:22" pos:end="13:26">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:67"><expr pos:start="17:5" pos:end="17:66"><call pos:start="17:5" pos:end="17:66"><name pos:start="17:5" pos:end="17:21">kvm_msr_entry_add</name><argument_list pos:start="17:22" pos:end="17:66">(<argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:25">cpu</name></expr></argument>, <argument pos:start="17:28" pos:end="17:47"><expr pos:start="17:28" pos:end="17:47"><name pos:start="17:28" pos:end="17:47">MSR_IA32_SYSENTER_CS</name></expr></argument>, <argument pos:start="17:50" pos:end="17:65"><expr pos:start="17:50" pos:end="17:65"><name pos:start="17:50" pos:end="17:65"><name pos:start="17:50" pos:end="17:52">env</name><operator pos:start="17:53" pos:end="17:54">-&gt;</operator><name pos:start="17:55" pos:end="17:65">sysenter_cs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:69"><expr pos:start="19:5" pos:end="19:68"><call pos:start="19:5" pos:end="19:68"><name pos:start="19:5" pos:end="19:21">kvm_msr_entry_add</name><argument_list pos:start="19:22" pos:end="19:68">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">cpu</name></expr></argument>, <argument pos:start="19:28" pos:end="19:48"><expr pos:start="19:28" pos:end="19:48"><name pos:start="19:28" pos:end="19:48">MSR_IA32_SYSENTER_ESP</name></expr></argument>, <argument pos:start="19:51" pos:end="19:67"><expr pos:start="19:51" pos:end="19:67"><name pos:start="19:51" pos:end="19:67"><name pos:start="19:51" pos:end="19:53">env</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:67">sysenter_esp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:69"><expr pos:start="21:5" pos:end="21:68"><call pos:start="21:5" pos:end="21:68"><name pos:start="21:5" pos:end="21:21">kvm_msr_entry_add</name><argument_list pos:start="21:22" pos:end="21:68">(<argument pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:25">cpu</name></expr></argument>, <argument pos:start="21:28" pos:end="21:48"><expr pos:start="21:28" pos:end="21:48"><name pos:start="21:28" pos:end="21:48">MSR_IA32_SYSENTER_EIP</name></expr></argument>, <argument pos:start="21:51" pos:end="21:67"><expr pos:start="21:51" pos:end="21:67"><name pos:start="21:51" pos:end="21:67"><name pos:start="21:51" pos:end="21:53">env</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:67">sysenter_eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><call pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:21">kvm_msr_entry_add</name><argument_list pos:start="23:22" pos:end="23:45">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">cpu</name></expr></argument>, <argument pos:start="23:28" pos:end="23:34"><expr pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:34">MSR_PAT</name></expr></argument>, <argument pos:start="23:37" pos:end="23:44"><expr pos:start="23:37" pos:end="23:44"><name pos:start="23:37" pos:end="23:44"><name pos:start="23:37" pos:end="23:39">env</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:44">pat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:20">has_msr_star</name></expr>)</condition> <block pos:start="25:23" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:52">

        <expr_stmt pos:start="27:9" pos:end="27:52"><expr pos:start="27:9" pos:end="27:51"><call pos:start="27:9" pos:end="27:51"><name pos:start="27:9" pos:end="27:25">kvm_msr_entry_add</name><argument_list pos:start="27:26" pos:end="27:51">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">cpu</name></expr></argument>, <argument pos:start="27:32" pos:end="27:39"><expr pos:start="27:32" pos:end="27:39"><name pos:start="27:32" pos:end="27:39">MSR_STAR</name></expr></argument>, <argument pos:start="27:42" pos:end="27:50"><expr pos:start="27:42" pos:end="27:50"><name pos:start="27:42" pos:end="27:50"><name pos:start="27:42" pos:end="27:44">env</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:50">star</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:25">(<expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:24">has_msr_hsave_pa</name></expr>)</condition> <block pos:start="31:27" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:63">

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:25">kvm_msr_entry_add</name><argument_list pos:start="33:26" pos:end="33:62">(<argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">cpu</name></expr></argument>, <argument pos:start="33:32" pos:end="33:46"><expr pos:start="33:32" pos:end="33:46"><name pos:start="33:32" pos:end="33:46">MSR_VM_HSAVE_PA</name></expr></argument>, <argument pos:start="33:49" pos:end="33:61"><expr pos:start="33:49" pos:end="33:61"><name pos:start="33:49" pos:end="33:61"><name pos:start="33:49" pos:end="33:51">env</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:61">vm_hsave</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:24">(<expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:23">has_msr_tsc_aux</name></expr>)</condition> <block pos:start="37:26" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:58">

        <expr_stmt pos:start="39:9" pos:end="39:58"><expr pos:start="39:9" pos:end="39:57"><call pos:start="39:9" pos:end="39:57"><name pos:start="39:9" pos:end="39:25">kvm_msr_entry_add</name><argument_list pos:start="39:26" pos:end="39:57">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">cpu</name></expr></argument>, <argument pos:start="39:32" pos:end="39:42"><expr pos:start="39:32" pos:end="39:42"><name pos:start="39:32" pos:end="39:42">MSR_TSC_AUX</name></expr></argument>, <argument pos:start="39:45" pos:end="39:56"><expr pos:start="39:45" pos:end="39:56"><name pos:start="39:45" pos:end="39:56"><name pos:start="39:45" pos:end="39:47">env</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:56">tsc_aux</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:27">(<expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:26">has_msr_tsc_adjust</name></expr>)</condition> <block pos:start="43:29" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:64">

        <expr_stmt pos:start="45:9" pos:end="45:64"><expr pos:start="45:9" pos:end="45:63"><call pos:start="45:9" pos:end="45:63"><name pos:start="45:9" pos:end="45:25">kvm_msr_entry_add</name><argument_list pos:start="45:26" pos:end="45:63">(<argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">cpu</name></expr></argument>, <argument pos:start="45:32" pos:end="45:45"><expr pos:start="45:32" pos:end="45:45"><name pos:start="45:32" pos:end="45:45">MSR_TSC_ADJUST</name></expr></argument>, <argument pos:start="45:48" pos:end="45:62"><expr pos:start="45:48" pos:end="45:62"><name pos:start="45:48" pos:end="45:62"><name pos:start="45:48" pos:end="45:50">env</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:62">tsc_adjust</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:28">(<expr pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:27">has_msr_misc_enable</name></expr>)</condition> <block pos:start="49:30" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:53">

        <expr_stmt pos:start="51:9" pos:end="53:53"><expr pos:start="51:9" pos:end="53:52"><call pos:start="51:9" pos:end="53:52"><name pos:start="51:9" pos:end="51:25">kvm_msr_entry_add</name><argument_list pos:start="51:26" pos:end="53:52">(<argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">cpu</name></expr></argument>, <argument pos:start="51:32" pos:end="51:51"><expr pos:start="51:32" pos:end="51:51"><name pos:start="51:32" pos:end="51:51">MSR_IA32_MISC_ENABLE</name></expr></argument>,

                          <argument pos:start="53:27" pos:end="53:51"><expr pos:start="53:27" pos:end="53:51"><name pos:start="53:27" pos:end="53:51"><name pos:start="53:27" pos:end="53:29">env</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:51">msr_ia32_misc_enable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:23">(<expr pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:22">has_msr_smbase</name></expr>)</condition> <block pos:start="57:25" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:61">

        <expr_stmt pos:start="59:9" pos:end="59:61"><expr pos:start="59:9" pos:end="59:60"><call pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:25">kvm_msr_entry_add</name><argument_list pos:start="59:26" pos:end="59:60">(<argument pos:start="59:27" pos:end="59:29"><expr pos:start="59:27" pos:end="59:29"><name pos:start="59:27" pos:end="59:29">cpu</name></expr></argument>, <argument pos:start="59:32" pos:end="59:46"><expr pos:start="59:32" pos:end="59:46"><name pos:start="59:32" pos:end="59:46">MSR_IA32_SMBASE</name></expr></argument>, <argument pos:start="59:49" pos:end="59:59"><expr pos:start="59:49" pos:end="59:59"><name pos:start="59:49" pos:end="59:59"><name pos:start="59:49" pos:end="59:51">env</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:59">smbase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:24">(<expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:23">has_msr_bndcfgs</name></expr>)</condition> <block pos:start="63:26" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:67">

        <expr_stmt pos:start="65:9" pos:end="65:67"><expr pos:start="65:9" pos:end="65:66"><call pos:start="65:9" pos:end="65:66"><name pos:start="65:9" pos:end="65:25">kvm_msr_entry_add</name><argument_list pos:start="65:26" pos:end="65:66">(<argument pos:start="65:27" pos:end="65:29"><expr pos:start="65:27" pos:end="65:29"><name pos:start="65:27" pos:end="65:29">cpu</name></expr></argument>, <argument pos:start="65:32" pos:end="65:47"><expr pos:start="65:32" pos:end="65:47"><name pos:start="65:32" pos:end="65:47">MSR_IA32_BNDCFGS</name></expr></argument>, <argument pos:start="65:50" pos:end="65:65"><expr pos:start="65:50" pos:end="65:65"><name pos:start="65:50" pos:end="65:65"><name pos:start="65:50" pos:end="65:52">env</name><operator pos:start="65:53" pos:end="65:54">-&gt;</operator><name pos:start="65:55" pos:end="65:65">msr_bndcfgs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="76:0"><if pos:start="69:5" pos:end="76:0">if <condition pos:start="69:8" pos:end="69:20">(<expr pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:19">has_msr_xss</name></expr>)</condition> <block pos:start="69:22" pos:end="76:0">{<block_content pos:start="71:9" pos:end="71:55">

        <expr_stmt pos:start="71:9" pos:end="71:55"><expr pos:start="71:9" pos:end="71:54"><call pos:start="71:9" pos:end="71:54"><name pos:start="71:9" pos:end="71:25">kvm_msr_entry_add</name><argument_list pos:start="71:26" pos:end="71:54">(<argument pos:start="71:27" pos:end="71:29"><expr pos:start="71:27" pos:end="71:29"><name pos:start="71:27" pos:end="71:29">cpu</name></expr></argument>, <argument pos:start="71:32" pos:end="71:43"><expr pos:start="71:32" pos:end="71:43"><name pos:start="71:32" pos:end="71:43">MSR_IA32_XSS</name></expr></argument>, <argument pos:start="71:46" pos:end="71:53"><expr pos:start="71:46" pos:end="71:53"><name pos:start="71:46" pos:end="71:53"><name pos:start="71:46" pos:end="71:48">env</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:53">xss</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="75:1" pos:end="75:20">#<cpp:directive pos:start="75:2" pos:end="75:6">ifdef</cpp:directive> <name pos:start="75:8" pos:end="75:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="77:5" pos:end="90:0"><if pos:start="77:5" pos:end="90:0">if <condition pos:start="77:8" pos:end="77:26">(<expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:25">lm_capable_kernel</name></expr>)</condition> <block pos:start="77:28" pos:end="90:0">{<block_content pos:start="79:9" pos:end="85:54">

        <expr_stmt pos:start="79:9" pos:end="79:54"><expr pos:start="79:9" pos:end="79:53"><call pos:start="79:9" pos:end="79:53"><name pos:start="79:9" pos:end="79:25">kvm_msr_entry_add</name><argument_list pos:start="79:26" pos:end="79:53">(<argument pos:start="79:27" pos:end="79:29"><expr pos:start="79:27" pos:end="79:29"><name pos:start="79:27" pos:end="79:29">cpu</name></expr></argument>, <argument pos:start="79:32" pos:end="79:40"><expr pos:start="79:32" pos:end="79:40"><name pos:start="79:32" pos:end="79:40">MSR_CSTAR</name></expr></argument>, <argument pos:start="79:43" pos:end="79:52"><expr pos:start="79:43" pos:end="79:52"><name pos:start="79:43" pos:end="79:52"><name pos:start="79:43" pos:end="79:45">env</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:52">cstar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:68"><expr pos:start="81:9" pos:end="81:67"><call pos:start="81:9" pos:end="81:67"><name pos:start="81:9" pos:end="81:25">kvm_msr_entry_add</name><argument_list pos:start="81:26" pos:end="81:67">(<argument pos:start="81:27" pos:end="81:29"><expr pos:start="81:27" pos:end="81:29"><name pos:start="81:27" pos:end="81:29">cpu</name></expr></argument>, <argument pos:start="81:32" pos:end="81:47"><expr pos:start="81:32" pos:end="81:47"><name pos:start="81:32" pos:end="81:47">MSR_KERNELGSBASE</name></expr></argument>, <argument pos:start="81:50" pos:end="81:66"><expr pos:start="81:50" pos:end="81:66"><name pos:start="81:50" pos:end="81:66"><name pos:start="81:50" pos:end="81:52">env</name><operator pos:start="81:53" pos:end="81:54">-&gt;</operator><name pos:start="81:55" pos:end="81:66">kernelgsbase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:54"><expr pos:start="83:9" pos:end="83:53"><call pos:start="83:9" pos:end="83:53"><name pos:start="83:9" pos:end="83:25">kvm_msr_entry_add</name><argument_list pos:start="83:26" pos:end="83:53">(<argument pos:start="83:27" pos:end="83:29"><expr pos:start="83:27" pos:end="83:29"><name pos:start="83:27" pos:end="83:29">cpu</name></expr></argument>, <argument pos:start="83:32" pos:end="83:40"><expr pos:start="83:32" pos:end="83:40"><name pos:start="83:32" pos:end="83:40">MSR_FMASK</name></expr></argument>, <argument pos:start="83:43" pos:end="83:52"><expr pos:start="83:43" pos:end="83:52"><name pos:start="83:43" pos:end="83:52"><name pos:start="83:43" pos:end="83:45">env</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:52">fmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:54"><expr pos:start="85:9" pos:end="85:53"><call pos:start="85:9" pos:end="85:53"><name pos:start="85:9" pos:end="85:25">kvm_msr_entry_add</name><argument_list pos:start="85:26" pos:end="85:53">(<argument pos:start="85:27" pos:end="85:29"><expr pos:start="85:27" pos:end="85:29"><name pos:start="85:27" pos:end="85:29">cpu</name></expr></argument>, <argument pos:start="85:32" pos:end="85:40"><expr pos:start="85:32" pos:end="85:40"><name pos:start="85:32" pos:end="85:40">MSR_LSTAR</name></expr></argument>, <argument pos:start="85:43" pos:end="85:52"><expr pos:start="85:43" pos:end="85:52"><name pos:start="85:43" pos:end="85:52"><name pos:start="85:43" pos:end="85:45">env</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:52">lstar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="91:5" pos:end="97:7">/*

     * The following MSRs have side effects on the guest or are too heavy

     * for normal writeback. Limit them to reset or full state updates.

     */</comment>

    <if_stmt pos:start="99:5" pos:end="337:5"><if pos:start="99:5" pos:end="337:5">if <condition pos:start="99:8" pos:end="99:37">(<expr pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:13">level</name> <operator pos:start="99:15" pos:end="99:16">&gt;=</operator> <name pos:start="99:18" pos:end="99:36">KVM_PUT_RESET_STATE</name></expr>)</condition> <block pos:start="99:39" pos:end="337:5">{<block_content pos:start="101:9" pos:end="329:9">

        <expr_stmt pos:start="101:9" pos:end="101:55"><expr pos:start="101:9" pos:end="101:54"><call pos:start="101:9" pos:end="101:54"><name pos:start="101:9" pos:end="101:25">kvm_msr_entry_add</name><argument_list pos:start="101:26" pos:end="101:54">(<argument pos:start="101:27" pos:end="101:29"><expr pos:start="101:27" pos:end="101:29"><name pos:start="101:27" pos:end="101:29">cpu</name></expr></argument>, <argument pos:start="101:32" pos:end="101:43"><expr pos:start="101:32" pos:end="101:43"><name pos:start="101:32" pos:end="101:43">MSR_IA32_TSC</name></expr></argument>, <argument pos:start="101:46" pos:end="101:53"><expr pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:48">env</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:53">tsc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:74"><expr pos:start="103:9" pos:end="103:73"><call pos:start="103:9" pos:end="103:73"><name pos:start="103:9" pos:end="103:25">kvm_msr_entry_add</name><argument_list pos:start="103:26" pos:end="103:73">(<argument pos:start="103:27" pos:end="103:29"><expr pos:start="103:27" pos:end="103:29"><name pos:start="103:27" pos:end="103:29">cpu</name></expr></argument>, <argument pos:start="103:32" pos:end="103:50"><expr pos:start="103:32" pos:end="103:50"><name pos:start="103:32" pos:end="103:50">MSR_KVM_SYSTEM_TIME</name></expr></argument>, <argument pos:start="103:53" pos:end="103:72"><expr pos:start="103:53" pos:end="103:72"><name pos:start="103:53" pos:end="103:72"><name pos:start="103:53" pos:end="103:55">env</name><operator pos:start="103:56" pos:end="103:57">-&gt;</operator><name pos:start="103:58" pos:end="103:72">system_time_msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:72"><expr pos:start="105:9" pos:end="105:71"><call pos:start="105:9" pos:end="105:71"><name pos:start="105:9" pos:end="105:25">kvm_msr_entry_add</name><argument_list pos:start="105:26" pos:end="105:71">(<argument pos:start="105:27" pos:end="105:29"><expr pos:start="105:27" pos:end="105:29"><name pos:start="105:27" pos:end="105:29">cpu</name></expr></argument>, <argument pos:start="105:32" pos:end="105:49"><expr pos:start="105:32" pos:end="105:49"><name pos:start="105:32" pos:end="105:49">MSR_KVM_WALL_CLOCK</name></expr></argument>, <argument pos:start="105:52" pos:end="105:70"><expr pos:start="105:52" pos:end="105:70"><name pos:start="105:52" pos:end="105:70"><name pos:start="105:52" pos:end="105:54">env</name><operator pos:start="105:55" pos:end="105:56">-&gt;</operator><name pos:start="105:57" pos:end="105:70">wall_clock_msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:32">(<expr pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:31">has_msr_async_pf_en</name></expr>)</condition> <block pos:start="107:34" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:78">

            <expr_stmt pos:start="109:13" pos:end="109:78"><expr pos:start="109:13" pos:end="109:77"><call pos:start="109:13" pos:end="109:77"><name pos:start="109:13" pos:end="109:29">kvm_msr_entry_add</name><argument_list pos:start="109:30" pos:end="109:77">(<argument pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:33">cpu</name></expr></argument>, <argument pos:start="109:36" pos:end="109:54"><expr pos:start="109:36" pos:end="109:54"><name pos:start="109:36" pos:end="109:54">MSR_KVM_ASYNC_PF_EN</name></expr></argument>, <argument pos:start="109:57" pos:end="109:76"><expr pos:start="109:57" pos:end="109:76"><name pos:start="109:57" pos:end="109:76"><name pos:start="109:57" pos:end="109:59">env</name><operator pos:start="109:60" pos:end="109:61">-&gt;</operator><name pos:start="109:62" pos:end="109:76">async_pf_en_msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="113:9" pos:end="117:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:30">(<expr pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:29">has_msr_pv_eoi_en</name></expr>)</condition> <block pos:start="113:32" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:74">

            <expr_stmt pos:start="115:13" pos:end="115:74"><expr pos:start="115:13" pos:end="115:73"><call pos:start="115:13" pos:end="115:73"><name pos:start="115:13" pos:end="115:29">kvm_msr_entry_add</name><argument_list pos:start="115:30" pos:end="115:73">(<argument pos:start="115:31" pos:end="115:33"><expr pos:start="115:31" pos:end="115:33"><name pos:start="115:31" pos:end="115:33">cpu</name></expr></argument>, <argument pos:start="115:36" pos:end="115:52"><expr pos:start="115:36" pos:end="115:52"><name pos:start="115:36" pos:end="115:52">MSR_KVM_PV_EOI_EN</name></expr></argument>, <argument pos:start="115:55" pos:end="115:72"><expr pos:start="115:55" pos:end="115:72"><name pos:start="115:55" pos:end="115:72"><name pos:start="115:55" pos:end="115:57">env</name><operator pos:start="115:58" pos:end="115:59">-&gt;</operator><name pos:start="115:60" pos:end="115:72">pv_eoi_en_msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="119:9" pos:end="123:9"><if pos:start="119:9" pos:end="123:9">if <condition pos:start="119:12" pos:end="119:35">(<expr pos:start="119:13" pos:end="119:34"><name pos:start="119:13" pos:end="119:34">has_msr_kvm_steal_time</name></expr>)</condition> <block pos:start="119:37" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:76">

            <expr_stmt pos:start="121:13" pos:end="121:76"><expr pos:start="121:13" pos:end="121:75"><call pos:start="121:13" pos:end="121:75"><name pos:start="121:13" pos:end="121:29">kvm_msr_entry_add</name><argument_list pos:start="121:30" pos:end="121:75">(<argument pos:start="121:31" pos:end="121:33"><expr pos:start="121:31" pos:end="121:33"><name pos:start="121:31" pos:end="121:33">cpu</name></expr></argument>, <argument pos:start="121:36" pos:end="121:53"><expr pos:start="121:36" pos:end="121:53"><name pos:start="121:36" pos:end="121:53">MSR_KVM_STEAL_TIME</name></expr></argument>, <argument pos:start="121:56" pos:end="121:74"><expr pos:start="121:56" pos:end="121:74"><name pos:start="121:56" pos:end="121:74"><name pos:start="121:56" pos:end="121:58">env</name><operator pos:start="121:59" pos:end="121:60">-&gt;</operator><name pos:start="121:61" pos:end="121:74">steal_time_msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="177:9"><if pos:start="125:9" pos:end="177:9">if <condition pos:start="125:12" pos:end="125:38">(<expr pos:start="125:13" pos:end="125:37"><name pos:start="125:13" pos:end="125:37">has_msr_architectural_pmu</name></expr>)</condition> <block pos:start="125:40" pos:end="177:9">{<block_content pos:start="129:13" pos:end="175:52">

            <comment type="block" pos:start="127:13" pos:end="127:36">/* Stop the counter.  */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:68"><expr pos:start="129:13" pos:end="129:67"><call pos:start="129:13" pos:end="129:67"><name pos:start="129:13" pos:end="129:29">kvm_msr_entry_add</name><argument_list pos:start="129:30" pos:end="129:67">(<argument pos:start="129:31" pos:end="129:33"><expr pos:start="129:31" pos:end="129:33"><name pos:start="129:31" pos:end="129:33">cpu</name></expr></argument>, <argument pos:start="129:36" pos:end="129:63"><expr pos:start="129:36" pos:end="129:63"><name pos:start="129:36" pos:end="129:63">MSR_CORE_PERF_FIXED_CTR_CTRL</name></expr></argument>, <argument pos:start="129:66" pos:end="129:66"><expr pos:start="129:66" pos:end="129:66"><literal type="number" pos:start="129:66" pos:end="129:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:65"><expr pos:start="131:13" pos:end="131:64"><call pos:start="131:13" pos:end="131:64"><name pos:start="131:13" pos:end="131:29">kvm_msr_entry_add</name><argument_list pos:start="131:30" pos:end="131:64">(<argument pos:start="131:31" pos:end="131:33"><expr pos:start="131:31" pos:end="131:33"><name pos:start="131:31" pos:end="131:33">cpu</name></expr></argument>, <argument pos:start="131:36" pos:end="131:60"><expr pos:start="131:36" pos:end="131:60"><name pos:start="131:36" pos:end="131:60">MSR_CORE_PERF_GLOBAL_CTRL</name></expr></argument>, <argument pos:start="131:63" pos:end="131:63"><expr pos:start="131:63" pos:end="131:63"><literal type="number" pos:start="131:63" pos:end="131:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="135:13" pos:end="135:42">/* Set the counter values.  */</comment>

            <for pos:start="137:13" pos:end="143:13">for <control pos:start="137:17" pos:end="137:52">(<init pos:start="137:18" pos:end="137:23"><expr pos:start="137:18" pos:end="137:22"><name pos:start="137:18" pos:end="137:18">i</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <literal type="number" pos:start="137:22" pos:end="137:22">0</literal></expr>;</init> <condition pos:start="137:25" pos:end="137:47"><expr pos:start="137:25" pos:end="137:46"><name pos:start="137:25" pos:end="137:25">i</name> <operator pos:start="137:27" pos:end="137:27">&lt;</operator> <name pos:start="137:29" pos:end="137:46">MAX_FIXED_COUNTERS</name></expr>;</condition> <incr pos:start="137:49" pos:end="137:51"><expr pos:start="137:49" pos:end="137:51"><name pos:start="137:49" pos:end="137:49">i</name><operator pos:start="137:50" pos:end="137:51">++</operator></expr></incr>)</control> <block pos:start="137:54" pos:end="143:13">{<block_content pos:start="139:17" pos:end="141:62">

                <expr_stmt pos:start="139:17" pos:end="141:62"><expr pos:start="139:17" pos:end="141:61"><call pos:start="139:17" pos:end="141:61"><name pos:start="139:17" pos:end="139:33">kvm_msr_entry_add</name><argument_list pos:start="139:34" pos:end="141:61">(<argument pos:start="139:35" pos:end="139:37"><expr pos:start="139:35" pos:end="139:37"><name pos:start="139:35" pos:end="139:37">cpu</name></expr></argument>, <argument pos:start="139:40" pos:end="139:67"><expr pos:start="139:40" pos:end="139:67"><name pos:start="139:40" pos:end="139:63">MSR_CORE_PERF_FIXED_CTR0</name> <operator pos:start="139:65" pos:end="139:65">+</operator> <name pos:start="139:67" pos:end="139:67">i</name></expr></argument>,

                                  <argument pos:start="141:35" pos:end="141:60"><expr pos:start="141:35" pos:end="141:60"><name pos:start="141:35" pos:end="141:60"><name pos:start="141:35" pos:end="141:37">env</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:57">msr_fixed_counters</name><index pos:start="141:58" pos:end="141:60">[<expr pos:start="141:59" pos:end="141:59"><name pos:start="141:59" pos:end="141:59">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="145:13" pos:end="155:13">for <control pos:start="145:17" pos:end="145:64">(<init pos:start="145:18" pos:end="145:23"><expr pos:start="145:18" pos:end="145:22"><name pos:start="145:18" pos:end="145:18">i</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <literal type="number" pos:start="145:22" pos:end="145:22">0</literal></expr>;</init> <condition pos:start="145:25" pos:end="145:59"><expr pos:start="145:25" pos:end="145:58"><name pos:start="145:25" pos:end="145:25">i</name> <operator pos:start="145:27" pos:end="145:27">&lt;</operator> <name pos:start="145:29" pos:end="145:58">num_architectural_pmu_counters</name></expr>;</condition> <incr pos:start="145:61" pos:end="145:63"><expr pos:start="145:61" pos:end="145:63"><name pos:start="145:61" pos:end="145:61">i</name><operator pos:start="145:62" pos:end="145:63">++</operator></expr></incr>)</control> <block pos:start="145:66" pos:end="155:13">{<block_content pos:start="147:17" pos:end="153:57">

                <expr_stmt pos:start="147:17" pos:end="149:59"><expr pos:start="147:17" pos:end="149:58"><call pos:start="147:17" pos:end="149:58"><name pos:start="147:17" pos:end="147:33">kvm_msr_entry_add</name><argument_list pos:start="147:34" pos:end="149:58">(<argument pos:start="147:35" pos:end="147:37"><expr pos:start="147:35" pos:end="147:37"><name pos:start="147:35" pos:end="147:37">cpu</name></expr></argument>, <argument pos:start="147:40" pos:end="147:58"><expr pos:start="147:40" pos:end="147:58"><name pos:start="147:40" pos:end="147:54">MSR_P6_PERFCTR0</name> <operator pos:start="147:56" pos:end="147:56">+</operator> <name pos:start="147:58" pos:end="147:58">i</name></expr></argument>,

                                  <argument pos:start="149:35" pos:end="149:57"><expr pos:start="149:35" pos:end="149:57"><name pos:start="149:35" pos:end="149:57"><name pos:start="149:35" pos:end="149:37">env</name><operator pos:start="149:38" pos:end="149:39">-&gt;</operator><name pos:start="149:40" pos:end="149:54">msr_gp_counters</name><index pos:start="149:55" pos:end="149:57">[<expr pos:start="149:56" pos:end="149:56"><name pos:start="149:56" pos:end="149:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="153:57"><expr pos:start="151:17" pos:end="153:56"><call pos:start="151:17" pos:end="153:56"><name pos:start="151:17" pos:end="151:33">kvm_msr_entry_add</name><argument_list pos:start="151:34" pos:end="153:56">(<argument pos:start="151:35" pos:end="151:37"><expr pos:start="151:35" pos:end="151:37"><name pos:start="151:35" pos:end="151:37">cpu</name></expr></argument>, <argument pos:start="151:40" pos:end="151:58"><expr pos:start="151:40" pos:end="151:58"><name pos:start="151:40" pos:end="151:54">MSR_P6_EVNTSEL0</name> <operator pos:start="151:56" pos:end="151:56">+</operator> <name pos:start="151:58" pos:end="151:58">i</name></expr></argument>,

                                  <argument pos:start="153:35" pos:end="153:55"><expr pos:start="153:35" pos:end="153:55"><name pos:start="153:35" pos:end="153:55"><name pos:start="153:35" pos:end="153:37">env</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:52">msr_gp_evtsel</name><index pos:start="153:53" pos:end="153:55">[<expr pos:start="153:54" pos:end="153:54"><name pos:start="153:54" pos:end="153:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="157:13" pos:end="159:54"><expr pos:start="157:13" pos:end="159:53"><call pos:start="157:13" pos:end="159:53"><name pos:start="157:13" pos:end="157:29">kvm_msr_entry_add</name><argument_list pos:start="157:30" pos:end="159:53">(<argument pos:start="157:31" pos:end="157:33"><expr pos:start="157:31" pos:end="157:33"><name pos:start="157:31" pos:end="157:33">cpu</name></expr></argument>, <argument pos:start="157:36" pos:end="157:62"><expr pos:start="157:36" pos:end="157:62"><name pos:start="157:36" pos:end="157:62">MSR_CORE_PERF_GLOBAL_STATUS</name></expr></argument>,

                              <argument pos:start="159:31" pos:end="159:52"><expr pos:start="159:31" pos:end="159:52"><name pos:start="159:31" pos:end="159:52"><name pos:start="159:31" pos:end="159:33">env</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:52">msr_global_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="163:56"><expr pos:start="161:13" pos:end="163:55"><call pos:start="161:13" pos:end="163:55"><name pos:start="161:13" pos:end="161:29">kvm_msr_entry_add</name><argument_list pos:start="161:30" pos:end="163:55">(<argument pos:start="161:31" pos:end="161:33"><expr pos:start="161:31" pos:end="161:33"><name pos:start="161:31" pos:end="161:33">cpu</name></expr></argument>, <argument pos:start="161:36" pos:end="161:64"><expr pos:start="161:36" pos:end="161:64"><name pos:start="161:36" pos:end="161:64">MSR_CORE_PERF_GLOBAL_OVF_CTRL</name></expr></argument>,

                              <argument pos:start="163:31" pos:end="163:54"><expr pos:start="163:31" pos:end="163:54"><name pos:start="163:31" pos:end="163:54"><name pos:start="163:31" pos:end="163:33">env</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:54">msr_global_ovf_ctrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="167:13" pos:end="167:37">/* Now start the PMU.  */</comment>

            <expr_stmt pos:start="169:13" pos:end="171:55"><expr pos:start="169:13" pos:end="171:54"><call pos:start="169:13" pos:end="171:54"><name pos:start="169:13" pos:end="169:29">kvm_msr_entry_add</name><argument_list pos:start="169:30" pos:end="171:54">(<argument pos:start="169:31" pos:end="169:33"><expr pos:start="169:31" pos:end="169:33"><name pos:start="169:31" pos:end="169:33">cpu</name></expr></argument>, <argument pos:start="169:36" pos:end="169:63"><expr pos:start="169:36" pos:end="169:63"><name pos:start="169:36" pos:end="169:63">MSR_CORE_PERF_FIXED_CTR_CTRL</name></expr></argument>,

                              <argument pos:start="171:31" pos:end="171:53"><expr pos:start="171:31" pos:end="171:53"><name pos:start="171:31" pos:end="171:53"><name pos:start="171:31" pos:end="171:33">env</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:53">msr_fixed_ctr_ctrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="175:52"><expr pos:start="173:13" pos:end="175:51"><call pos:start="173:13" pos:end="175:51"><name pos:start="173:13" pos:end="173:29">kvm_msr_entry_add</name><argument_list pos:start="173:30" pos:end="175:51">(<argument pos:start="173:31" pos:end="173:33"><expr pos:start="173:31" pos:end="173:33"><name pos:start="173:31" pos:end="173:33">cpu</name></expr></argument>, <argument pos:start="173:36" pos:end="173:60"><expr pos:start="173:36" pos:end="173:60"><name pos:start="173:36" pos:end="173:60">MSR_CORE_PERF_GLOBAL_CTRL</name></expr></argument>,

                              <argument pos:start="175:31" pos:end="175:50"><expr pos:start="175:31" pos:end="175:50"><name pos:start="175:31" pos:end="175:50"><name pos:start="175:31" pos:end="175:33">env</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:50">msr_global_ctrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="179:9" pos:end="189:9"><if pos:start="179:9" pos:end="189:9">if <condition pos:start="179:12" pos:end="179:33">(<expr pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:32">has_msr_hv_hypercall</name></expr>)</condition> <block pos:start="179:35" pos:end="189:9">{<block_content pos:start="181:13" pos:end="187:53">

            <expr_stmt pos:start="181:13" pos:end="183:55"><expr pos:start="181:13" pos:end="183:54"><call pos:start="181:13" pos:end="183:54"><name pos:start="181:13" pos:end="181:29">kvm_msr_entry_add</name><argument_list pos:start="181:30" pos:end="183:54">(<argument pos:start="181:31" pos:end="181:33"><expr pos:start="181:31" pos:end="181:33"><name pos:start="181:31" pos:end="181:33">cpu</name></expr></argument>, <argument pos:start="181:36" pos:end="181:57"><expr pos:start="181:36" pos:end="181:57"><name pos:start="181:36" pos:end="181:57">HV_X64_MSR_GUEST_OS_ID</name></expr></argument>,

                              <argument pos:start="183:31" pos:end="183:53"><expr pos:start="183:31" pos:end="183:53"><name pos:start="183:31" pos:end="183:53"><name pos:start="183:31" pos:end="183:33">env</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:53">msr_hv_guest_os_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="187:53"><expr pos:start="185:13" pos:end="187:52"><call pos:start="185:13" pos:end="187:52"><name pos:start="185:13" pos:end="185:29">kvm_msr_entry_add</name><argument_list pos:start="185:30" pos:end="187:52">(<argument pos:start="185:31" pos:end="185:33"><expr pos:start="185:31" pos:end="185:33"><name pos:start="185:31" pos:end="185:33">cpu</name></expr></argument>, <argument pos:start="185:36" pos:end="185:55"><expr pos:start="185:36" pos:end="185:55"><name pos:start="185:36" pos:end="185:55">HV_X64_MSR_HYPERCALL</name></expr></argument>,

                              <argument pos:start="187:31" pos:end="187:51"><expr pos:start="187:31" pos:end="187:51"><name pos:start="187:31" pos:end="187:51"><name pos:start="187:31" pos:end="187:33">env</name><operator pos:start="187:34" pos:end="187:35">-&gt;</operator><name pos:start="187:36" pos:end="187:51">msr_hv_hypercall</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="191:9" pos:end="197:9"><if pos:start="191:9" pos:end="197:9">if <condition pos:start="191:12" pos:end="191:29">(<expr pos:start="191:13" pos:end="191:28"><name pos:start="191:13" pos:end="191:28">has_msr_hv_vapic</name></expr>)</condition> <block pos:start="191:31" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:49">

            <expr_stmt pos:start="193:13" pos:end="195:49"><expr pos:start="193:13" pos:end="195:48"><call pos:start="193:13" pos:end="195:48"><name pos:start="193:13" pos:end="193:29">kvm_msr_entry_add</name><argument_list pos:start="193:30" pos:end="195:48">(<argument pos:start="193:31" pos:end="193:33"><expr pos:start="193:31" pos:end="193:33"><name pos:start="193:31" pos:end="193:33">cpu</name></expr></argument>, <argument pos:start="193:36" pos:end="193:62"><expr pos:start="193:36" pos:end="193:62"><name pos:start="193:36" pos:end="193:62">HV_X64_MSR_APIC_ASSIST_PAGE</name></expr></argument>,

                              <argument pos:start="195:31" pos:end="195:47"><expr pos:start="195:31" pos:end="195:47"><name pos:start="195:31" pos:end="195:47"><name pos:start="195:31" pos:end="195:33">env</name><operator pos:start="195:34" pos:end="195:35">-&gt;</operator><name pos:start="195:36" pos:end="195:47">msr_hv_vapic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="203:9"><if pos:start="199:9" pos:end="203:9">if <condition pos:start="199:12" pos:end="199:27">(<expr pos:start="199:13" pos:end="199:26"><name pos:start="199:13" pos:end="199:26">has_msr_hv_tsc</name></expr>)</condition> <block pos:start="199:29" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:78">

            <expr_stmt pos:start="201:13" pos:end="201:78"><expr pos:start="201:13" pos:end="201:77"><call pos:start="201:13" pos:end="201:77"><name pos:start="201:13" pos:end="201:29">kvm_msr_entry_add</name><argument_list pos:start="201:30" pos:end="201:77">(<argument pos:start="201:31" pos:end="201:33"><expr pos:start="201:31" pos:end="201:33"><name pos:start="201:31" pos:end="201:33">cpu</name></expr></argument>, <argument pos:start="201:36" pos:end="201:59"><expr pos:start="201:36" pos:end="201:59"><name pos:start="201:36" pos:end="201:59">HV_X64_MSR_REFERENCE_TSC</name></expr></argument>, <argument pos:start="201:62" pos:end="201:76"><expr pos:start="201:62" pos:end="201:76"><name pos:start="201:62" pos:end="201:76"><name pos:start="201:62" pos:end="201:64">env</name><operator pos:start="201:65" pos:end="201:66">-&gt;</operator><name pos:start="201:67" pos:end="201:76">msr_hv_tsc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="205:9" pos:end="223:9"><if pos:start="205:9" pos:end="223:9">if <condition pos:start="205:12" pos:end="205:29">(<expr pos:start="205:13" pos:end="205:28"><name pos:start="205:13" pos:end="205:28">has_msr_hv_crash</name></expr>)</condition> <block pos:start="205:31" pos:end="223:9">{<block_content pos:start="207:13" pos:end="221:59">

            <decl_stmt pos:start="207:13" pos:end="207:18"><decl pos:start="207:13" pos:end="207:17"><type pos:start="207:13" pos:end="207:15"><name pos:start="207:13" pos:end="207:15">int</name></type> <name pos:start="207:17" pos:end="207:17">j</name></decl>;</decl_stmt>



            <for pos:start="211:13" pos:end="215:63">for <control pos:start="211:17" pos:end="211:57">(<init pos:start="211:18" pos:end="211:23"><expr pos:start="211:18" pos:end="211:22"><name pos:start="211:18" pos:end="211:18">j</name> <operator pos:start="211:20" pos:end="211:20">=</operator> <literal type="number" pos:start="211:22" pos:end="211:22">0</literal></expr>;</init> <condition pos:start="211:25" pos:end="211:52"><expr pos:start="211:25" pos:end="211:51"><name pos:start="211:25" pos:end="211:25">j</name> <operator pos:start="211:27" pos:end="211:27">&lt;</operator> <name pos:start="211:29" pos:end="211:51">HV_X64_MSR_CRASH_PARAMS</name></expr>;</condition> <incr pos:start="211:54" pos:end="211:56"><expr pos:start="211:54" pos:end="211:56"><name pos:start="211:54" pos:end="211:54">j</name><operator pos:start="211:55" pos:end="211:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="213:17" pos:end="215:63"><block_content pos:start="213:17" pos:end="215:63">

                <expr_stmt pos:start="213:17" pos:end="215:63"><expr pos:start="213:17" pos:end="215:62"><call pos:start="213:17" pos:end="215:62"><name pos:start="213:17" pos:end="213:33">kvm_msr_entry_add</name><argument_list pos:start="213:34" pos:end="215:62">(<argument pos:start="213:35" pos:end="213:37"><expr pos:start="213:35" pos:end="213:37"><name pos:start="213:35" pos:end="213:37">cpu</name></expr></argument>, <argument pos:start="213:40" pos:end="213:62"><expr pos:start="213:40" pos:end="213:62"><name pos:start="213:40" pos:end="213:58">HV_X64_MSR_CRASH_P0</name> <operator pos:start="213:60" pos:end="213:60">+</operator> <name pos:start="213:62" pos:end="213:62">j</name></expr></argument>,

                                  <argument pos:start="215:35" pos:end="215:61"><expr pos:start="215:35" pos:end="215:61"><name pos:start="215:35" pos:end="215:61"><name pos:start="215:35" pos:end="215:37">env</name><operator pos:start="215:38" pos:end="215:39">-&gt;</operator><name pos:start="215:40" pos:end="215:58">msr_hv_crash_params</name><index pos:start="215:59" pos:end="215:61">[<expr pos:start="215:60" pos:end="215:60"><name pos:start="215:60" pos:end="215:60">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="219:13" pos:end="221:59"><expr pos:start="219:13" pos:end="221:58"><call pos:start="219:13" pos:end="221:58"><name pos:start="219:13" pos:end="219:29">kvm_msr_entry_add</name><argument_list pos:start="219:30" pos:end="221:58">(<argument pos:start="219:31" pos:end="219:33"><expr pos:start="219:31" pos:end="219:33"><name pos:start="219:31" pos:end="219:33">cpu</name></expr></argument>, <argument pos:start="219:36" pos:end="219:55"><expr pos:start="219:36" pos:end="219:55"><name pos:start="219:36" pos:end="219:55">HV_X64_MSR_CRASH_CTL</name></expr></argument>,

                              <argument pos:start="221:31" pos:end="221:57"><expr pos:start="221:31" pos:end="221:57"><name pos:start="221:31" pos:end="221:57">HV_X64_MSR_CRASH_CTL_NOTIFY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="225:9" pos:end="229:9"><if pos:start="225:9" pos:end="229:9">if <condition pos:start="225:12" pos:end="225:31">(<expr pos:start="225:13" pos:end="225:30"><name pos:start="225:13" pos:end="225:30">has_msr_hv_runtime</name></expr>)</condition> <block pos:start="225:33" pos:end="229:9">{<block_content pos:start="227:13" pos:end="227:79">

            <expr_stmt pos:start="227:13" pos:end="227:79"><expr pos:start="227:13" pos:end="227:78"><call pos:start="227:13" pos:end="227:78"><name pos:start="227:13" pos:end="227:29">kvm_msr_entry_add</name><argument_list pos:start="227:30" pos:end="227:78">(<argument pos:start="227:31" pos:end="227:33"><expr pos:start="227:31" pos:end="227:33"><name pos:start="227:31" pos:end="227:33">cpu</name></expr></argument>, <argument pos:start="227:36" pos:end="227:56"><expr pos:start="227:36" pos:end="227:56"><name pos:start="227:36" pos:end="227:56">HV_X64_MSR_VP_RUNTIME</name></expr></argument>, <argument pos:start="227:59" pos:end="227:77"><expr pos:start="227:59" pos:end="227:77"><name pos:start="227:59" pos:end="227:77"><name pos:start="227:59" pos:end="227:61">env</name><operator pos:start="227:62" pos:end="227:63">-&gt;</operator><name pos:start="227:64" pos:end="227:77">msr_hv_runtime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="231:9" pos:end="263:9"><if pos:start="231:9" pos:end="263:9">if <condition pos:start="231:12" pos:end="231:30">(<expr pos:start="231:13" pos:end="231:29"><name pos:start="231:13" pos:end="231:29"><name pos:start="231:13" pos:end="231:15">cpu</name><operator pos:start="231:16" pos:end="231:17">-&gt;</operator><name pos:start="231:18" pos:end="231:29">hyperv_synic</name></name></expr>)</condition> <block pos:start="231:32" pos:end="263:9">{<block_content pos:start="233:13" pos:end="261:13">

            <decl_stmt pos:start="233:13" pos:end="233:18"><decl pos:start="233:13" pos:end="233:17"><type pos:start="233:13" pos:end="233:15"><name pos:start="233:13" pos:end="233:15">int</name></type> <name pos:start="233:17" pos:end="233:17">j</name></decl>;</decl_stmt>



            <expr_stmt pos:start="237:13" pos:end="239:57"><expr pos:start="237:13" pos:end="239:56"><call pos:start="237:13" pos:end="239:56"><name pos:start="237:13" pos:end="237:29">kvm_msr_entry_add</name><argument_list pos:start="237:30" pos:end="239:56">(<argument pos:start="237:31" pos:end="237:33"><expr pos:start="237:31" pos:end="237:33"><name pos:start="237:31" pos:end="237:33">cpu</name></expr></argument>, <argument pos:start="237:36" pos:end="237:54"><expr pos:start="237:36" pos:end="237:54"><name pos:start="237:36" pos:end="237:54">HV_X64_MSR_SCONTROL</name></expr></argument>,

                              <argument pos:start="239:31" pos:end="239:55"><expr pos:start="239:31" pos:end="239:55"><name pos:start="239:31" pos:end="239:55"><name pos:start="239:31" pos:end="239:33">env</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:55">msr_hv_synic_control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="243:57"><expr pos:start="241:13" pos:end="243:56"><call pos:start="241:13" pos:end="243:56"><name pos:start="241:13" pos:end="241:29">kvm_msr_entry_add</name><argument_list pos:start="241:30" pos:end="243:56">(<argument pos:start="241:31" pos:end="241:33"><expr pos:start="241:31" pos:end="241:33"><name pos:start="241:31" pos:end="241:33">cpu</name></expr></argument>, <argument pos:start="241:36" pos:end="241:54"><expr pos:start="241:36" pos:end="241:54"><name pos:start="241:36" pos:end="241:54">HV_X64_MSR_SVERSION</name></expr></argument>,

                              <argument pos:start="243:31" pos:end="243:55"><expr pos:start="243:31" pos:end="243:55"><name pos:start="243:31" pos:end="243:55"><name pos:start="243:31" pos:end="243:33">env</name><operator pos:start="243:34" pos:end="243:35">-&gt;</operator><name pos:start="243:36" pos:end="243:55">msr_hv_synic_version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="247:58"><expr pos:start="245:13" pos:end="247:57"><call pos:start="245:13" pos:end="247:57"><name pos:start="245:13" pos:end="245:29">kvm_msr_entry_add</name><argument_list pos:start="245:30" pos:end="247:57">(<argument pos:start="245:31" pos:end="245:33"><expr pos:start="245:31" pos:end="245:33"><name pos:start="245:31" pos:end="245:33">cpu</name></expr></argument>, <argument pos:start="245:36" pos:end="245:51"><expr pos:start="245:36" pos:end="245:51"><name pos:start="245:36" pos:end="245:51">HV_X64_MSR_SIEFP</name></expr></argument>,

                              <argument pos:start="247:31" pos:end="247:56"><expr pos:start="247:31" pos:end="247:56"><name pos:start="247:31" pos:end="247:56"><name pos:start="247:31" pos:end="247:33">env</name><operator pos:start="247:34" pos:end="247:35">-&gt;</operator><name pos:start="247:36" pos:end="247:56">msr_hv_synic_evt_page</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="251:58"><expr pos:start="249:13" pos:end="251:57"><call pos:start="249:13" pos:end="251:57"><name pos:start="249:13" pos:end="249:29">kvm_msr_entry_add</name><argument_list pos:start="249:30" pos:end="251:57">(<argument pos:start="249:31" pos:end="249:33"><expr pos:start="249:31" pos:end="249:33"><name pos:start="249:31" pos:end="249:33">cpu</name></expr></argument>, <argument pos:start="249:36" pos:end="249:50"><expr pos:start="249:36" pos:end="249:50"><name pos:start="249:36" pos:end="249:50">HV_X64_MSR_SIMP</name></expr></argument>,

                              <argument pos:start="251:31" pos:end="251:56"><expr pos:start="251:31" pos:end="251:56"><name pos:start="251:31" pos:end="251:56"><name pos:start="251:31" pos:end="251:33">env</name><operator pos:start="251:34" pos:end="251:35">-&gt;</operator><name pos:start="251:36" pos:end="251:56">msr_hv_synic_msg_page</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="255:13" pos:end="261:13">for <control pos:start="255:17" pos:end="255:68">(<init pos:start="255:18" pos:end="255:23"><expr pos:start="255:18" pos:end="255:22"><name pos:start="255:18" pos:end="255:18">j</name> <operator pos:start="255:20" pos:end="255:20">=</operator> <literal type="number" pos:start="255:22" pos:end="255:22">0</literal></expr>;</init> <condition pos:start="255:25" pos:end="255:63"><expr pos:start="255:25" pos:end="255:62"><name pos:start="255:25" pos:end="255:25">j</name> <operator pos:start="255:27" pos:end="255:27">&lt;</operator> <call pos:start="255:29" pos:end="255:62"><name pos:start="255:29" pos:end="255:38">ARRAY_SIZE</name><argument_list pos:start="255:39" pos:end="255:62">(<argument pos:start="255:40" pos:end="255:61"><expr pos:start="255:40" pos:end="255:61"><name pos:start="255:40" pos:end="255:61"><name pos:start="255:40" pos:end="255:42">env</name><operator pos:start="255:43" pos:end="255:44">-&gt;</operator><name pos:start="255:45" pos:end="255:61">msr_hv_synic_sint</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="255:65" pos:end="255:67"><expr pos:start="255:65" pos:end="255:67"><name pos:start="255:65" pos:end="255:65">j</name><operator pos:start="255:66" pos:end="255:67">++</operator></expr></incr>)</control> <block pos:start="255:70" pos:end="261:13">{<block_content pos:start="257:17" pos:end="259:61">

                <expr_stmt pos:start="257:17" pos:end="259:61"><expr pos:start="257:17" pos:end="259:60"><call pos:start="257:17" pos:end="259:60"><name pos:start="257:17" pos:end="257:33">kvm_msr_entry_add</name><argument_list pos:start="257:34" pos:end="259:60">(<argument pos:start="257:35" pos:end="257:37"><expr pos:start="257:35" pos:end="257:37"><name pos:start="257:35" pos:end="257:37">cpu</name></expr></argument>, <argument pos:start="257:40" pos:end="257:59"><expr pos:start="257:40" pos:end="257:59"><name pos:start="257:40" pos:end="257:55">HV_X64_MSR_SINT0</name> <operator pos:start="257:57" pos:end="257:57">+</operator> <name pos:start="257:59" pos:end="257:59">j</name></expr></argument>,

                                  <argument pos:start="259:35" pos:end="259:59"><expr pos:start="259:35" pos:end="259:59"><name pos:start="259:35" pos:end="259:59"><name pos:start="259:35" pos:end="259:37">env</name><operator pos:start="259:38" pos:end="259:39">-&gt;</operator><name pos:start="259:40" pos:end="259:56">msr_hv_synic_sint</name><index pos:start="259:57" pos:end="259:59">[<expr pos:start="259:58" pos:end="259:58"><name pos:start="259:58" pos:end="259:58">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="265:9" pos:end="289:9"><if pos:start="265:9" pos:end="289:9">if <condition pos:start="265:12" pos:end="265:30">(<expr pos:start="265:13" pos:end="265:29"><name pos:start="265:13" pos:end="265:29">has_msr_hv_stimer</name></expr>)</condition> <block pos:start="265:32" pos:end="289:9">{<block_content pos:start="267:13" pos:end="287:13">

            <decl_stmt pos:start="267:13" pos:end="267:18"><decl pos:start="267:13" pos:end="267:17"><type pos:start="267:13" pos:end="267:15"><name pos:start="267:13" pos:end="267:15">int</name></type> <name pos:start="267:17" pos:end="267:17">j</name></decl>;</decl_stmt>



            <for pos:start="271:13" pos:end="277:13">for <control pos:start="271:17" pos:end="271:71">(<init pos:start="271:18" pos:end="271:23"><expr pos:start="271:18" pos:end="271:22"><name pos:start="271:18" pos:end="271:18">j</name> <operator pos:start="271:20" pos:end="271:20">=</operator> <literal type="number" pos:start="271:22" pos:end="271:22">0</literal></expr>;</init> <condition pos:start="271:25" pos:end="271:66"><expr pos:start="271:25" pos:end="271:65"><name pos:start="271:25" pos:end="271:25">j</name> <operator pos:start="271:27" pos:end="271:27">&lt;</operator> <call pos:start="271:29" pos:end="271:65"><name pos:start="271:29" pos:end="271:38">ARRAY_SIZE</name><argument_list pos:start="271:39" pos:end="271:65">(<argument pos:start="271:40" pos:end="271:64"><expr pos:start="271:40" pos:end="271:64"><name pos:start="271:40" pos:end="271:64"><name pos:start="271:40" pos:end="271:42">env</name><operator pos:start="271:43" pos:end="271:44">-&gt;</operator><name pos:start="271:45" pos:end="271:64">msr_hv_stimer_config</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="271:68" pos:end="271:70"><expr pos:start="271:68" pos:end="271:70"><name pos:start="271:68" pos:end="271:68">j</name><operator pos:start="271:69" pos:end="271:70">++</operator></expr></incr>)</control> <block pos:start="271:73" pos:end="277:13">{<block_content pos:start="273:17" pos:end="275:62">

                <expr_stmt pos:start="273:17" pos:end="275:62"><expr pos:start="273:17" pos:end="275:61"><call pos:start="273:17" pos:end="275:61"><name pos:start="273:17" pos:end="273:33">kvm_msr_entry_add</name><argument_list pos:start="273:34" pos:end="275:61">(<argument pos:start="273:35" pos:end="273:37"><expr pos:start="273:35" pos:end="273:37"><name pos:start="273:35" pos:end="273:37">cpu</name></expr></argument>, <argument pos:start="273:40" pos:end="273:72"><expr pos:start="273:40" pos:end="273:72"><name pos:start="273:40" pos:end="273:64">HV_X64_MSR_STIMER0_CONFIG</name> <operator pos:start="273:66" pos:end="273:66">+</operator> <name pos:start="273:68" pos:end="273:68">j</name> <operator pos:start="273:70" pos:end="273:70">*</operator> <literal type="number" pos:start="273:72" pos:end="273:72">2</literal></expr></argument>,

                                <argument pos:start="275:33" pos:end="275:60"><expr pos:start="275:33" pos:end="275:60"><name pos:start="275:33" pos:end="275:60"><name pos:start="275:33" pos:end="275:35">env</name><operator pos:start="275:36" pos:end="275:37">-&gt;</operator><name pos:start="275:38" pos:end="275:57">msr_hv_stimer_config</name><index pos:start="275:58" pos:end="275:60">[<expr pos:start="275:59" pos:end="275:59"><name pos:start="275:59" pos:end="275:59">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <for pos:start="281:13" pos:end="287:13">for <control pos:start="281:17" pos:end="281:70">(<init pos:start="281:18" pos:end="281:23"><expr pos:start="281:18" pos:end="281:22"><name pos:start="281:18" pos:end="281:18">j</name> <operator pos:start="281:20" pos:end="281:20">=</operator> <literal type="number" pos:start="281:22" pos:end="281:22">0</literal></expr>;</init> <condition pos:start="281:25" pos:end="281:65"><expr pos:start="281:25" pos:end="281:64"><name pos:start="281:25" pos:end="281:25">j</name> <operator pos:start="281:27" pos:end="281:27">&lt;</operator> <call pos:start="281:29" pos:end="281:64"><name pos:start="281:29" pos:end="281:38">ARRAY_SIZE</name><argument_list pos:start="281:39" pos:end="281:64">(<argument pos:start="281:40" pos:end="281:63"><expr pos:start="281:40" pos:end="281:63"><name pos:start="281:40" pos:end="281:63"><name pos:start="281:40" pos:end="281:42">env</name><operator pos:start="281:43" pos:end="281:44">-&gt;</operator><name pos:start="281:45" pos:end="281:63">msr_hv_stimer_count</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="281:67" pos:end="281:69"><expr pos:start="281:67" pos:end="281:69"><name pos:start="281:67" pos:end="281:67">j</name><operator pos:start="281:68" pos:end="281:69">++</operator></expr></incr>)</control> <block pos:start="281:72" pos:end="287:13">{<block_content pos:start="283:17" pos:end="285:61">

                <expr_stmt pos:start="283:17" pos:end="285:61"><expr pos:start="283:17" pos:end="285:60"><call pos:start="283:17" pos:end="285:60"><name pos:start="283:17" pos:end="283:33">kvm_msr_entry_add</name><argument_list pos:start="283:34" pos:end="285:60">(<argument pos:start="283:35" pos:end="283:37"><expr pos:start="283:35" pos:end="283:37"><name pos:start="283:35" pos:end="283:37">cpu</name></expr></argument>, <argument pos:start="283:40" pos:end="283:71"><expr pos:start="283:40" pos:end="283:71"><name pos:start="283:40" pos:end="283:63">HV_X64_MSR_STIMER0_COUNT</name> <operator pos:start="283:65" pos:end="283:65">+</operator> <name pos:start="283:67" pos:end="283:67">j</name> <operator pos:start="283:69" pos:end="283:69">*</operator> <literal type="number" pos:start="283:71" pos:end="283:71">2</literal></expr></argument>,

                                <argument pos:start="285:33" pos:end="285:59"><expr pos:start="285:33" pos:end="285:59"><name pos:start="285:33" pos:end="285:59"><name pos:start="285:33" pos:end="285:35">env</name><operator pos:start="285:36" pos:end="285:37">-&gt;</operator><name pos:start="285:38" pos:end="285:56">msr_hv_stimer_count</name><index pos:start="285:57" pos:end="285:59">[<expr pos:start="285:58" pos:end="285:58"><name pos:start="285:58" pos:end="285:58">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="291:9" pos:end="329:9"><if pos:start="291:9" pos:end="329:9">if <condition pos:start="291:12" pos:end="291:25">(<expr pos:start="291:13" pos:end="291:24"><name pos:start="291:13" pos:end="291:24">has_msr_mtrr</name></expr>)</condition> <block pos:start="291:27" pos:end="329:9">{<block_content pos:start="293:13" pos:end="327:13">

            <expr_stmt pos:start="293:13" pos:end="293:71"><expr pos:start="293:13" pos:end="293:70"><call pos:start="293:13" pos:end="293:70"><name pos:start="293:13" pos:end="293:29">kvm_msr_entry_add</name><argument_list pos:start="293:30" pos:end="293:70">(<argument pos:start="293:31" pos:end="293:33"><expr pos:start="293:31" pos:end="293:33"><name pos:start="293:31" pos:end="293:33">cpu</name></expr></argument>, <argument pos:start="293:36" pos:end="293:50"><expr pos:start="293:36" pos:end="293:50"><name pos:start="293:36" pos:end="293:50">MSR_MTRRdefType</name></expr></argument>, <argument pos:start="293:53" pos:end="293:69"><expr pos:start="293:53" pos:end="293:69"><name pos:start="293:53" pos:end="293:69"><name pos:start="293:53" pos:end="293:55">env</name><operator pos:start="293:56" pos:end="293:57">-&gt;</operator><name pos:start="293:58" pos:end="293:69">mtrr_deftype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:77"><expr pos:start="295:13" pos:end="295:76"><call pos:start="295:13" pos:end="295:76"><name pos:start="295:13" pos:end="295:29">kvm_msr_entry_add</name><argument_list pos:start="295:30" pos:end="295:76">(<argument pos:start="295:31" pos:end="295:33"><expr pos:start="295:31" pos:end="295:33"><name pos:start="295:31" pos:end="295:33">cpu</name></expr></argument>, <argument pos:start="295:36" pos:end="295:55"><expr pos:start="295:36" pos:end="295:55"><name pos:start="295:36" pos:end="295:55">MSR_MTRRfix64K_00000</name></expr></argument>, <argument pos:start="295:58" pos:end="295:75"><expr pos:start="295:58" pos:end="295:75"><name pos:start="295:58" pos:end="295:75"><name pos:start="295:58" pos:end="295:60">env</name><operator pos:start="295:61" pos:end="295:62">-&gt;</operator><name pos:start="295:63" pos:end="295:72">mtrr_fixed</name><index pos:start="295:73" pos:end="295:75">[<expr pos:start="295:74" pos:end="295:74"><literal type="number" pos:start="295:74" pos:end="295:74">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:77"><expr pos:start="297:13" pos:end="297:76"><call pos:start="297:13" pos:end="297:76"><name pos:start="297:13" pos:end="297:29">kvm_msr_entry_add</name><argument_list pos:start="297:30" pos:end="297:76">(<argument pos:start="297:31" pos:end="297:33"><expr pos:start="297:31" pos:end="297:33"><name pos:start="297:31" pos:end="297:33">cpu</name></expr></argument>, <argument pos:start="297:36" pos:end="297:55"><expr pos:start="297:36" pos:end="297:55"><name pos:start="297:36" pos:end="297:55">MSR_MTRRfix16K_80000</name></expr></argument>, <argument pos:start="297:58" pos:end="297:75"><expr pos:start="297:58" pos:end="297:75"><name pos:start="297:58" pos:end="297:75"><name pos:start="297:58" pos:end="297:60">env</name><operator pos:start="297:61" pos:end="297:62">-&gt;</operator><name pos:start="297:63" pos:end="297:72">mtrr_fixed</name><index pos:start="297:73" pos:end="297:75">[<expr pos:start="297:74" pos:end="297:74"><literal type="number" pos:start="297:74" pos:end="297:74">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:77"><expr pos:start="299:13" pos:end="299:76"><call pos:start="299:13" pos:end="299:76"><name pos:start="299:13" pos:end="299:29">kvm_msr_entry_add</name><argument_list pos:start="299:30" pos:end="299:76">(<argument pos:start="299:31" pos:end="299:33"><expr pos:start="299:31" pos:end="299:33"><name pos:start="299:31" pos:end="299:33">cpu</name></expr></argument>, <argument pos:start="299:36" pos:end="299:55"><expr pos:start="299:36" pos:end="299:55"><name pos:start="299:36" pos:end="299:55">MSR_MTRRfix16K_A0000</name></expr></argument>, <argument pos:start="299:58" pos:end="299:75"><expr pos:start="299:58" pos:end="299:75"><name pos:start="299:58" pos:end="299:75"><name pos:start="299:58" pos:end="299:60">env</name><operator pos:start="299:61" pos:end="299:62">-&gt;</operator><name pos:start="299:63" pos:end="299:72">mtrr_fixed</name><index pos:start="299:73" pos:end="299:75">[<expr pos:start="299:74" pos:end="299:74"><literal type="number" pos:start="299:74" pos:end="299:74">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:76"><expr pos:start="301:13" pos:end="301:75"><call pos:start="301:13" pos:end="301:75"><name pos:start="301:13" pos:end="301:29">kvm_msr_entry_add</name><argument_list pos:start="301:30" pos:end="301:75">(<argument pos:start="301:31" pos:end="301:33"><expr pos:start="301:31" pos:end="301:33"><name pos:start="301:31" pos:end="301:33">cpu</name></expr></argument>, <argument pos:start="301:36" pos:end="301:54"><expr pos:start="301:36" pos:end="301:54"><name pos:start="301:36" pos:end="301:54">MSR_MTRRfix4K_C0000</name></expr></argument>, <argument pos:start="301:57" pos:end="301:74"><expr pos:start="301:57" pos:end="301:74"><name pos:start="301:57" pos:end="301:74"><name pos:start="301:57" pos:end="301:59">env</name><operator pos:start="301:60" pos:end="301:61">-&gt;</operator><name pos:start="301:62" pos:end="301:71">mtrr_fixed</name><index pos:start="301:72" pos:end="301:74">[<expr pos:start="301:73" pos:end="301:73"><literal type="number" pos:start="301:73" pos:end="301:73">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:76"><expr pos:start="303:13" pos:end="303:75"><call pos:start="303:13" pos:end="303:75"><name pos:start="303:13" pos:end="303:29">kvm_msr_entry_add</name><argument_list pos:start="303:30" pos:end="303:75">(<argument pos:start="303:31" pos:end="303:33"><expr pos:start="303:31" pos:end="303:33"><name pos:start="303:31" pos:end="303:33">cpu</name></expr></argument>, <argument pos:start="303:36" pos:end="303:54"><expr pos:start="303:36" pos:end="303:54"><name pos:start="303:36" pos:end="303:54">MSR_MTRRfix4K_C8000</name></expr></argument>, <argument pos:start="303:57" pos:end="303:74"><expr pos:start="303:57" pos:end="303:74"><name pos:start="303:57" pos:end="303:74"><name pos:start="303:57" pos:end="303:59">env</name><operator pos:start="303:60" pos:end="303:61">-&gt;</operator><name pos:start="303:62" pos:end="303:71">mtrr_fixed</name><index pos:start="303:72" pos:end="303:74">[<expr pos:start="303:73" pos:end="303:73"><literal type="number" pos:start="303:73" pos:end="303:73">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:76"><expr pos:start="305:13" pos:end="305:75"><call pos:start="305:13" pos:end="305:75"><name pos:start="305:13" pos:end="305:29">kvm_msr_entry_add</name><argument_list pos:start="305:30" pos:end="305:75">(<argument pos:start="305:31" pos:end="305:33"><expr pos:start="305:31" pos:end="305:33"><name pos:start="305:31" pos:end="305:33">cpu</name></expr></argument>, <argument pos:start="305:36" pos:end="305:54"><expr pos:start="305:36" pos:end="305:54"><name pos:start="305:36" pos:end="305:54">MSR_MTRRfix4K_D0000</name></expr></argument>, <argument pos:start="305:57" pos:end="305:74"><expr pos:start="305:57" pos:end="305:74"><name pos:start="305:57" pos:end="305:74"><name pos:start="305:57" pos:end="305:59">env</name><operator pos:start="305:60" pos:end="305:61">-&gt;</operator><name pos:start="305:62" pos:end="305:71">mtrr_fixed</name><index pos:start="305:72" pos:end="305:74">[<expr pos:start="305:73" pos:end="305:73"><literal type="number" pos:start="305:73" pos:end="305:73">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:76"><expr pos:start="307:13" pos:end="307:75"><call pos:start="307:13" pos:end="307:75"><name pos:start="307:13" pos:end="307:29">kvm_msr_entry_add</name><argument_list pos:start="307:30" pos:end="307:75">(<argument pos:start="307:31" pos:end="307:33"><expr pos:start="307:31" pos:end="307:33"><name pos:start="307:31" pos:end="307:33">cpu</name></expr></argument>, <argument pos:start="307:36" pos:end="307:54"><expr pos:start="307:36" pos:end="307:54"><name pos:start="307:36" pos:end="307:54">MSR_MTRRfix4K_D8000</name></expr></argument>, <argument pos:start="307:57" pos:end="307:74"><expr pos:start="307:57" pos:end="307:74"><name pos:start="307:57" pos:end="307:74"><name pos:start="307:57" pos:end="307:59">env</name><operator pos:start="307:60" pos:end="307:61">-&gt;</operator><name pos:start="307:62" pos:end="307:71">mtrr_fixed</name><index pos:start="307:72" pos:end="307:74">[<expr pos:start="307:73" pos:end="307:73"><literal type="number" pos:start="307:73" pos:end="307:73">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:76"><expr pos:start="309:13" pos:end="309:75"><call pos:start="309:13" pos:end="309:75"><name pos:start="309:13" pos:end="309:29">kvm_msr_entry_add</name><argument_list pos:start="309:30" pos:end="309:75">(<argument pos:start="309:31" pos:end="309:33"><expr pos:start="309:31" pos:end="309:33"><name pos:start="309:31" pos:end="309:33">cpu</name></expr></argument>, <argument pos:start="309:36" pos:end="309:54"><expr pos:start="309:36" pos:end="309:54"><name pos:start="309:36" pos:end="309:54">MSR_MTRRfix4K_E0000</name></expr></argument>, <argument pos:start="309:57" pos:end="309:74"><expr pos:start="309:57" pos:end="309:74"><name pos:start="309:57" pos:end="309:74"><name pos:start="309:57" pos:end="309:59">env</name><operator pos:start="309:60" pos:end="309:61">-&gt;</operator><name pos:start="309:62" pos:end="309:71">mtrr_fixed</name><index pos:start="309:72" pos:end="309:74">[<expr pos:start="309:73" pos:end="309:73"><literal type="number" pos:start="309:73" pos:end="309:73">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:76"><expr pos:start="311:13" pos:end="311:75"><call pos:start="311:13" pos:end="311:75"><name pos:start="311:13" pos:end="311:29">kvm_msr_entry_add</name><argument_list pos:start="311:30" pos:end="311:75">(<argument pos:start="311:31" pos:end="311:33"><expr pos:start="311:31" pos:end="311:33"><name pos:start="311:31" pos:end="311:33">cpu</name></expr></argument>, <argument pos:start="311:36" pos:end="311:54"><expr pos:start="311:36" pos:end="311:54"><name pos:start="311:36" pos:end="311:54">MSR_MTRRfix4K_E8000</name></expr></argument>, <argument pos:start="311:57" pos:end="311:74"><expr pos:start="311:57" pos:end="311:74"><name pos:start="311:57" pos:end="311:74"><name pos:start="311:57" pos:end="311:59">env</name><operator pos:start="311:60" pos:end="311:61">-&gt;</operator><name pos:start="311:62" pos:end="311:71">mtrr_fixed</name><index pos:start="311:72" pos:end="311:74">[<expr pos:start="311:73" pos:end="311:73"><literal type="number" pos:start="311:73" pos:end="311:73">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:76"><expr pos:start="313:13" pos:end="313:75"><call pos:start="313:13" pos:end="313:75"><name pos:start="313:13" pos:end="313:29">kvm_msr_entry_add</name><argument_list pos:start="313:30" pos:end="313:75">(<argument pos:start="313:31" pos:end="313:33"><expr pos:start="313:31" pos:end="313:33"><name pos:start="313:31" pos:end="313:33">cpu</name></expr></argument>, <argument pos:start="313:36" pos:end="313:54"><expr pos:start="313:36" pos:end="313:54"><name pos:start="313:36" pos:end="313:54">MSR_MTRRfix4K_F0000</name></expr></argument>, <argument pos:start="313:57" pos:end="313:74"><expr pos:start="313:57" pos:end="313:74"><name pos:start="313:57" pos:end="313:74"><name pos:start="313:57" pos:end="313:59">env</name><operator pos:start="313:60" pos:end="313:61">-&gt;</operator><name pos:start="313:62" pos:end="313:71">mtrr_fixed</name><index pos:start="313:72" pos:end="313:74">[<expr pos:start="313:73" pos:end="313:73"><literal type="number" pos:start="313:73" pos:end="313:73">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:77"><expr pos:start="315:13" pos:end="315:76"><call pos:start="315:13" pos:end="315:76"><name pos:start="315:13" pos:end="315:29">kvm_msr_entry_add</name><argument_list pos:start="315:30" pos:end="315:76">(<argument pos:start="315:31" pos:end="315:33"><expr pos:start="315:31" pos:end="315:33"><name pos:start="315:31" pos:end="315:33">cpu</name></expr></argument>, <argument pos:start="315:36" pos:end="315:54"><expr pos:start="315:36" pos:end="315:54"><name pos:start="315:36" pos:end="315:54">MSR_MTRRfix4K_F8000</name></expr></argument>, <argument pos:start="315:57" pos:end="315:75"><expr pos:start="315:57" pos:end="315:75"><name pos:start="315:57" pos:end="315:75"><name pos:start="315:57" pos:end="315:59">env</name><operator pos:start="315:60" pos:end="315:61">-&gt;</operator><name pos:start="315:62" pos:end="315:71">mtrr_fixed</name><index pos:start="315:72" pos:end="315:75">[<expr pos:start="315:73" pos:end="315:74"><literal type="number" pos:start="315:73" pos:end="315:74">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="317:13" pos:end="327:13">for <control pos:start="317:17" pos:end="317:50">(<init pos:start="317:18" pos:end="317:23"><expr pos:start="317:18" pos:end="317:22"><name pos:start="317:18" pos:end="317:18">i</name> <operator pos:start="317:20" pos:end="317:20">=</operator> <literal type="number" pos:start="317:22" pos:end="317:22">0</literal></expr>;</init> <condition pos:start="317:25" pos:end="317:45"><expr pos:start="317:25" pos:end="317:44"><name pos:start="317:25" pos:end="317:25">i</name> <operator pos:start="317:27" pos:end="317:27">&lt;</operator> <name pos:start="317:29" pos:end="317:44">MSR_MTRRcap_VCNT</name></expr>;</condition> <incr pos:start="317:47" pos:end="317:49"><expr pos:start="317:47" pos:end="317:49"><name pos:start="317:47" pos:end="317:47">i</name><operator pos:start="317:48" pos:end="317:49">++</operator></expr></incr>)</control> <block pos:start="317:52" pos:end="327:13">{<block_content pos:start="319:17" pos:end="325:57">

                <expr_stmt pos:start="319:17" pos:end="321:57"><expr pos:start="319:17" pos:end="321:56"><call pos:start="319:17" pos:end="321:56"><name pos:start="319:17" pos:end="319:33">kvm_msr_entry_add</name><argument_list pos:start="319:34" pos:end="321:56">(<argument pos:start="319:35" pos:end="319:37"><expr pos:start="319:35" pos:end="319:37"><name pos:start="319:35" pos:end="319:37">cpu</name></expr></argument>, <argument pos:start="319:40" pos:end="319:58"><expr pos:start="319:40" pos:end="319:58"><call pos:start="319:40" pos:end="319:58"><name pos:start="319:40" pos:end="319:55">MSR_MTRRphysBase</name><argument_list pos:start="319:56" pos:end="319:58">(<argument pos:start="319:57" pos:end="319:57"><expr pos:start="319:57" pos:end="319:57"><name pos:start="319:57" pos:end="319:57">i</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="321:35" pos:end="321:55"><expr pos:start="321:35" pos:end="321:55"><name pos:start="321:35" pos:end="321:50"><name pos:start="321:35" pos:end="321:37">env</name><operator pos:start="321:38" pos:end="321:39">-&gt;</operator><name pos:start="321:40" pos:end="321:47">mtrr_var</name><index pos:start="321:48" pos:end="321:50">[<expr pos:start="321:49" pos:end="321:49"><name pos:start="321:49" pos:end="321:49">i</name></expr>]</index></name><operator pos:start="321:51" pos:end="321:51">.</operator><name pos:start="321:52" pos:end="321:55">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="323:17" pos:end="325:57"><expr pos:start="323:17" pos:end="325:56"><call pos:start="323:17" pos:end="325:56"><name pos:start="323:17" pos:end="323:33">kvm_msr_entry_add</name><argument_list pos:start="323:34" pos:end="325:56">(<argument pos:start="323:35" pos:end="323:37"><expr pos:start="323:35" pos:end="323:37"><name pos:start="323:35" pos:end="323:37">cpu</name></expr></argument>, <argument pos:start="323:40" pos:end="323:58"><expr pos:start="323:40" pos:end="323:58"><call pos:start="323:40" pos:end="323:58"><name pos:start="323:40" pos:end="323:55">MSR_MTRRphysMask</name><argument_list pos:start="323:56" pos:end="323:58">(<argument pos:start="323:57" pos:end="323:57"><expr pos:start="323:57" pos:end="323:57"><name pos:start="323:57" pos:end="323:57">i</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="325:35" pos:end="325:55"><expr pos:start="325:35" pos:end="325:55"><name pos:start="325:35" pos:end="325:50"><name pos:start="325:35" pos:end="325:37">env</name><operator pos:start="325:38" pos:end="325:39">-&gt;</operator><name pos:start="325:40" pos:end="325:47">mtrr_var</name><index pos:start="325:48" pos:end="325:50">[<expr pos:start="325:49" pos:end="325:49"><name pos:start="325:49" pos:end="325:49">i</name></expr>]</index></name><operator pos:start="325:51" pos:end="325:51">.</operator><name pos:start="325:52" pos:end="325:55">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="333:9" pos:end="335:48">/* Note: MSR_IA32_FEATURE_CONTROL is written separately, see

         *       kvm_put_msr_feature_control. */</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="339:5" pos:end="361:5"><if pos:start="339:5" pos:end="361:5">if <condition pos:start="339:8" pos:end="339:21">(<expr pos:start="339:9" pos:end="339:20"><name pos:start="339:9" pos:end="339:20"><name pos:start="339:9" pos:end="339:11">env</name><operator pos:start="339:12" pos:end="339:13">-&gt;</operator><name pos:start="339:14" pos:end="339:20">mcg_cap</name></name></expr>)</condition> <block pos:start="339:23" pos:end="361:5">{<block_content pos:start="341:9" pos:end="359:9">

        <decl_stmt pos:start="341:9" pos:end="341:14"><decl pos:start="341:9" pos:end="341:13"><type pos:start="341:9" pos:end="341:11"><name pos:start="341:9" pos:end="341:11">int</name></type> <name pos:start="341:13" pos:end="341:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="345:9" pos:end="345:64"><expr pos:start="345:9" pos:end="345:63"><call pos:start="345:9" pos:end="345:63"><name pos:start="345:9" pos:end="345:25">kvm_msr_entry_add</name><argument_list pos:start="345:26" pos:end="345:63">(<argument pos:start="345:27" pos:end="345:29"><expr pos:start="345:27" pos:end="345:29"><name pos:start="345:27" pos:end="345:29">cpu</name></expr></argument>, <argument pos:start="345:32" pos:end="345:45"><expr pos:start="345:32" pos:end="345:45"><name pos:start="345:32" pos:end="345:45">MSR_MCG_STATUS</name></expr></argument>, <argument pos:start="345:48" pos:end="345:62"><expr pos:start="345:48" pos:end="345:62"><name pos:start="345:48" pos:end="345:62"><name pos:start="345:48" pos:end="345:50">env</name><operator pos:start="345:51" pos:end="345:52">-&gt;</operator><name pos:start="345:53" pos:end="345:62">mcg_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:58"><expr pos:start="347:9" pos:end="347:57"><call pos:start="347:9" pos:end="347:57"><name pos:start="347:9" pos:end="347:25">kvm_msr_entry_add</name><argument_list pos:start="347:26" pos:end="347:57">(<argument pos:start="347:27" pos:end="347:29"><expr pos:start="347:27" pos:end="347:29"><name pos:start="347:27" pos:end="347:29">cpu</name></expr></argument>, <argument pos:start="347:32" pos:end="347:42"><expr pos:start="347:32" pos:end="347:42"><name pos:start="347:32" pos:end="347:42">MSR_MCG_CTL</name></expr></argument>, <argument pos:start="347:45" pos:end="347:56"><expr pos:start="347:45" pos:end="347:56"><name pos:start="347:45" pos:end="347:56"><name pos:start="347:45" pos:end="347:47">env</name><operator pos:start="347:48" pos:end="347:49">-&gt;</operator><name pos:start="347:50" pos:end="347:56">mcg_ctl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="349:9" pos:end="353:9"><if pos:start="349:9" pos:end="353:9">if <condition pos:start="349:12" pos:end="349:32">(<expr pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:31">has_msr_mcg_ext_ctl</name></expr>)</condition> <block pos:start="349:34" pos:end="353:9">{<block_content pos:start="351:13" pos:end="351:70">

            <expr_stmt pos:start="351:13" pos:end="351:70"><expr pos:start="351:13" pos:end="351:69"><call pos:start="351:13" pos:end="351:69"><name pos:start="351:13" pos:end="351:29">kvm_msr_entry_add</name><argument_list pos:start="351:30" pos:end="351:69">(<argument pos:start="351:31" pos:end="351:33"><expr pos:start="351:31" pos:end="351:33"><name pos:start="351:31" pos:end="351:33">cpu</name></expr></argument>, <argument pos:start="351:36" pos:end="351:50"><expr pos:start="351:36" pos:end="351:50"><name pos:start="351:36" pos:end="351:50">MSR_MCG_EXT_CTL</name></expr></argument>, <argument pos:start="351:53" pos:end="351:68"><expr pos:start="351:53" pos:end="351:68"><name pos:start="351:53" pos:end="351:68"><name pos:start="351:53" pos:end="351:55">env</name><operator pos:start="351:56" pos:end="351:57">-&gt;</operator><name pos:start="351:58" pos:end="351:68">mcg_ext_ctl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="355:9" pos:end="359:9">for <control pos:start="355:13" pos:end="355:55">(<init pos:start="355:14" pos:end="355:19"><expr pos:start="355:14" pos:end="355:18"><name pos:start="355:14" pos:end="355:14">i</name> <operator pos:start="355:16" pos:end="355:16">=</operator> <literal type="number" pos:start="355:18" pos:end="355:18">0</literal></expr>;</init> <condition pos:start="355:21" pos:end="355:50"><expr pos:start="355:21" pos:end="355:49"><name pos:start="355:21" pos:end="355:21">i</name> <operator pos:start="355:23" pos:end="355:23">&lt;</operator> <operator pos:start="355:25" pos:end="355:25">(</operator><name pos:start="355:26" pos:end="355:37"><name pos:start="355:26" pos:end="355:28">env</name><operator pos:start="355:29" pos:end="355:30">-&gt;</operator><name pos:start="355:31" pos:end="355:37">mcg_cap</name></name> <operator pos:start="355:39" pos:end="355:39">&amp;</operator> <literal type="number" pos:start="355:41" pos:end="355:44">0xff</literal><operator pos:start="355:45" pos:end="355:45">)</operator> <operator pos:start="355:47" pos:end="355:47">*</operator> <literal type="number" pos:start="355:49" pos:end="355:49">4</literal></expr>;</condition> <incr pos:start="355:52" pos:end="355:54"><expr pos:start="355:52" pos:end="355:54"><name pos:start="355:52" pos:end="355:52">i</name><operator pos:start="355:53" pos:end="355:54">++</operator></expr></incr>)</control> <block pos:start="355:57" pos:end="359:9">{<block_content pos:start="357:13" pos:end="357:71">

            <expr_stmt pos:start="357:13" pos:end="357:71"><expr pos:start="357:13" pos:end="357:70"><call pos:start="357:13" pos:end="357:70"><name pos:start="357:13" pos:end="357:29">kvm_msr_entry_add</name><argument_list pos:start="357:30" pos:end="357:70">(<argument pos:start="357:31" pos:end="357:33"><expr pos:start="357:31" pos:end="357:33"><name pos:start="357:31" pos:end="357:33">cpu</name></expr></argument>, <argument pos:start="357:36" pos:end="357:50"><expr pos:start="357:36" pos:end="357:50"><name pos:start="357:36" pos:end="357:46">MSR_MC0_CTL</name> <operator pos:start="357:48" pos:end="357:48">+</operator> <name pos:start="357:50" pos:end="357:50">i</name></expr></argument>, <argument pos:start="357:53" pos:end="357:69"><expr pos:start="357:53" pos:end="357:69"><name pos:start="357:53" pos:end="357:69"><name pos:start="357:53" pos:end="357:55">env</name><operator pos:start="357:56" pos:end="357:57">-&gt;</operator><name pos:start="357:58" pos:end="357:66">mce_banks</name><index pos:start="357:67" pos:end="357:69">[<expr pos:start="357:68" pos:end="357:68"><name pos:start="357:68" pos:end="357:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="365:5" pos:end="365:67"><expr pos:start="365:5" pos:end="365:66"><name pos:start="365:5" pos:end="365:7">ret</name> <operator pos:start="365:9" pos:end="365:9">=</operator> <call pos:start="365:11" pos:end="365:66"><name pos:start="365:11" pos:end="365:24">kvm_vcpu_ioctl</name><argument_list pos:start="365:25" pos:end="365:66">(<argument pos:start="365:26" pos:end="365:33"><expr pos:start="365:26" pos:end="365:33"><call pos:start="365:26" pos:end="365:33"><name pos:start="365:26" pos:end="365:28">CPU</name><argument_list pos:start="365:29" pos:end="365:33">(<argument pos:start="365:30" pos:end="365:32"><expr pos:start="365:30" pos:end="365:32"><name pos:start="365:30" pos:end="365:32">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="365:36" pos:end="365:47"><expr pos:start="365:36" pos:end="365:47"><name pos:start="365:36" pos:end="365:47">KVM_SET_MSRS</name></expr></argument>, <argument pos:start="365:50" pos:end="365:65"><expr pos:start="365:50" pos:end="365:65"><name pos:start="365:50" pos:end="365:65"><name pos:start="365:50" pos:end="365:52">cpu</name><operator pos:start="365:53" pos:end="365:54">-&gt;</operator><name pos:start="365:55" pos:end="365:65">kvm_msr_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="367:5" pos:end="371:5"><if pos:start="367:5" pos:end="371:5">if <condition pos:start="367:8" pos:end="367:16">(<expr pos:start="367:9" pos:end="367:15"><name pos:start="367:9" pos:end="367:11">ret</name> <operator pos:start="367:13" pos:end="367:13">&lt;</operator> <literal type="number" pos:start="367:15" pos:end="367:15">0</literal></expr>)</condition> <block pos:start="367:18" pos:end="371:5">{<block_content pos:start="369:9" pos:end="369:19">

        <return pos:start="369:9" pos:end="369:19">return <expr pos:start="369:16" pos:end="369:18"><name pos:start="369:16" pos:end="369:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="375:5" pos:end="375:43"><expr pos:start="375:5" pos:end="375:42"><call pos:start="375:5" pos:end="375:42"><name pos:start="375:5" pos:end="375:10">assert</name><argument_list pos:start="375:11" pos:end="375:42">(<argument pos:start="375:12" pos:end="375:41"><expr pos:start="375:12" pos:end="375:41"><name pos:start="375:12" pos:end="375:14">ret</name> <operator pos:start="375:16" pos:end="375:17">==</operator> <name pos:start="375:19" pos:end="375:41"><name pos:start="375:19" pos:end="375:21">cpu</name><operator pos:start="375:22" pos:end="375:23">-&gt;</operator><name pos:start="375:24" pos:end="375:34">kvm_msr_buf</name><operator pos:start="375:35" pos:end="375:36">-&gt;</operator><name pos:start="375:37" pos:end="375:41">nmsrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="377:5" pos:end="377:13">return <expr pos:start="377:12" pos:end="377:12"><literal type="number" pos:start="377:12" pos:end="377:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
