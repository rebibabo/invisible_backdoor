<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2071.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">dump_metadata</name><parameter_list pos:start="1:26" pos:end="1:73">(<parameter pos:start="1:27" pos:end="1:35"><decl pos:start="1:27" pos:end="1:35"><type pos:start="1:27" pos:end="1:35"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">ctx</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:49">AVDictionary</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">m</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:72">indent</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:5">

    <if_stmt pos:start="5:5" pos:end="47:5"><if pos:start="5:5" pos:end="47:5">if<condition pos:start="5:7" pos:end="5:68">(<expr pos:start="5:8" pos:end="5:67"><name pos:start="5:8" pos:end="5:8">m</name> <operator pos:start="5:10" pos:end="5:11">&amp;&amp;</operator> <operator pos:start="5:13" pos:end="5:13">!</operator><operator pos:start="5:14" pos:end="5:14">(</operator><name pos:start="5:15" pos:end="5:22"><name pos:start="5:15" pos:end="5:15">m</name><operator pos:start="5:16" pos:end="5:17">-&gt;</operator><name pos:start="5:18" pos:end="5:22">count</name></name> <operator pos:start="5:24" pos:end="5:25">==</operator> <literal type="number" pos:start="5:27" pos:end="5:27">1</literal> <operator pos:start="5:29" pos:end="5:30">&amp;&amp;</operator> <call pos:start="5:32" pos:end="5:66"><name pos:start="5:32" pos:end="5:42">av_dict_get</name><argument_list pos:start="5:43" pos:end="5:66">(<argument pos:start="5:44" pos:end="5:44"><expr pos:start="5:44" pos:end="5:44"><name pos:start="5:44" pos:end="5:44">m</name></expr></argument>, <argument pos:start="5:47" pos:end="5:56"><expr pos:start="5:47" pos:end="5:56"><literal type="string" pos:start="5:47" pos:end="5:56">"language"</literal></expr></argument>, <argument pos:start="5:59" pos:end="5:62"><expr pos:start="5:59" pos:end="5:62"><name pos:start="5:59" pos:end="5:62">NULL</name></expr></argument>, <argument pos:start="5:65" pos:end="5:65"><expr pos:start="5:65" pos:end="5:65"><literal type="number" pos:start="5:65" pos:end="5:65">0</literal></expr></argument>)</argument_list></call><operator pos:start="5:67" pos:end="5:67">)</operator></expr>)</condition><block pos:start="5:69" pos:end="47:5">{<block_content pos:start="7:9" pos:end="45:9">

        <decl_stmt pos:start="7:9" pos:end="7:36"><decl pos:start="7:9" pos:end="7:35"><type pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:25">AVDictionaryEntry</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">tag</name><init pos:start="7:31" pos:end="7:35">=<expr pos:start="7:32" pos:end="7:35"><name pos:start="7:32" pos:end="7:35">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="11:9" pos:end="11:58"><expr pos:start="11:9" pos:end="11:57"><call pos:start="11:9" pos:end="11:57"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:57">(<argument pos:start="11:16" pos:end="11:18"><expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">ctx</name></expr></argument>, <argument pos:start="11:21" pos:end="11:31"><expr pos:start="11:21" pos:end="11:31"><name pos:start="11:21" pos:end="11:31">AV_LOG_INFO</name></expr></argument>, <argument pos:start="11:34" pos:end="11:48"><expr pos:start="11:34" pos:end="11:48"><literal type="string" pos:start="11:34" pos:end="11:48">"%sMetadata:\n"</literal></expr></argument>, <argument pos:start="11:51" pos:end="11:56"><expr pos:start="11:51" pos:end="11:56"><name pos:start="11:51" pos:end="11:56">indent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="13:9" pos:end="45:9">while<condition pos:start="13:14" pos:end="13:67">(<expr pos:start="13:15" pos:end="13:66"><operator pos:start="13:15" pos:end="13:15">(</operator><name pos:start="13:16" pos:end="13:18">tag</name><operator pos:start="13:19" pos:end="13:19">=</operator><call pos:start="13:20" pos:end="13:65"><name pos:start="13:20" pos:end="13:30">av_dict_get</name><argument_list pos:start="13:31" pos:end="13:65">(<argument pos:start="13:32" pos:end="13:32"><expr pos:start="13:32" pos:end="13:32"><name pos:start="13:32" pos:end="13:32">m</name></expr></argument>, <argument pos:start="13:35" pos:end="13:36"><expr pos:start="13:35" pos:end="13:36"><literal type="string" pos:start="13:35" pos:end="13:36">""</literal></expr></argument>, <argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">tag</name></expr></argument>, <argument pos:start="13:44" pos:end="13:64"><expr pos:start="13:44" pos:end="13:64"><name pos:start="13:44" pos:end="13:64">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="13:66" pos:end="13:66">)</operator></expr>)</condition> <block pos:start="13:69" pos:end="45:9">{<block_content pos:start="15:13" pos:end="43:13">

            <if_stmt pos:start="15:13" pos:end="43:13"><if pos:start="15:13" pos:end="43:13">if<condition pos:start="15:15" pos:end="15:44">(<expr pos:start="15:16" pos:end="15:43"><call pos:start="15:16" pos:end="15:43"><name pos:start="15:16" pos:end="15:21">strcmp</name><argument_list pos:start="15:22" pos:end="15:43">(<argument pos:start="15:23" pos:end="15:32"><expr pos:start="15:23" pos:end="15:32"><literal type="string" pos:start="15:23" pos:end="15:32">"language"</literal></expr></argument>, <argument pos:start="15:35" pos:end="15:42"><expr pos:start="15:35" pos:end="15:42"><name pos:start="15:35" pos:end="15:42"><name pos:start="15:35" pos:end="15:37">tag</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:42">key</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="15:45" pos:end="43:13">{<block_content pos:start="17:17" pos:end="41:47">

                <decl_stmt pos:start="17:17" pos:end="17:43"><decl pos:start="17:17" pos:end="17:42"><type pos:start="17:17" pos:end="17:28"><specifier pos:start="17:17" pos:end="17:21">const</specifier> <name pos:start="17:23" pos:end="17:26">char</name> <modifier pos:start="17:28" pos:end="17:28">*</modifier></type><name pos:start="17:29" pos:end="17:29">p</name> <init pos:start="17:31" pos:end="17:42">= <expr pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:35">tag</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:42">value</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="19:17" pos:end="19:74"><expr pos:start="19:17" pos:end="19:73"><call pos:start="19:17" pos:end="19:73"><name pos:start="19:17" pos:end="19:22">av_log</name><argument_list pos:start="19:23" pos:end="19:73">(<argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">ctx</name></expr></argument>, <argument pos:start="19:29" pos:end="19:39"><expr pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:39">AV_LOG_INFO</name></expr></argument>, <argument pos:start="19:42" pos:end="19:54"><expr pos:start="19:42" pos:end="19:54"><literal type="string" pos:start="19:42" pos:end="19:54">"%s  %-16s: "</literal></expr></argument>, <argument pos:start="19:57" pos:end="19:62"><expr pos:start="19:57" pos:end="19:62"><name pos:start="19:57" pos:end="19:62">indent</name></expr></argument>, <argument pos:start="19:65" pos:end="19:72"><expr pos:start="19:65" pos:end="19:72"><name pos:start="19:65" pos:end="19:72"><name pos:start="19:65" pos:end="19:67">tag</name><operator pos:start="19:68" pos:end="19:69">-&gt;</operator><name pos:start="19:70" pos:end="19:72">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="21:17" pos:end="39:17">while<condition pos:start="21:22" pos:end="21:25">(<expr pos:start="21:23" pos:end="21:24"><operator pos:start="21:23" pos:end="21:23">*</operator><name pos:start="21:24" pos:end="21:24">p</name></expr>)</condition> <block pos:start="21:27" pos:end="39:17">{<block_content pos:start="23:21" pos:end="37:32">

                    <decl_stmt pos:start="23:21" pos:end="23:34"><decl pos:start="23:21" pos:end="23:33"><type pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:24">char</name></type> <name pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:28">tmp</name><index pos:start="23:29" pos:end="23:33">[<expr pos:start="23:30" pos:end="23:32"><literal type="number" pos:start="23:30" pos:end="23:32">256</literal></expr>]</index></name></decl>;</decl_stmt>

                    <decl_stmt pos:start="25:21" pos:end="25:54"><decl pos:start="25:21" pos:end="25:53"><type pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:26">size_t</name></type> <name pos:start="25:28" pos:end="25:30">len</name> <init pos:start="25:32" pos:end="25:53">= <expr pos:start="25:34" pos:end="25:53"><call pos:start="25:34" pos:end="25:53"><name pos:start="25:34" pos:end="25:40">strcspn</name><argument_list pos:start="25:41" pos:end="25:53">(<argument pos:start="25:42" pos:end="25:42"><expr pos:start="25:42" pos:end="25:42"><name pos:start="25:42" pos:end="25:42">p</name></expr></argument>, <argument pos:start="25:45" pos:end="25:52"><expr pos:start="25:45" pos:end="25:52"><literal type="string" pos:start="25:45" pos:end="25:52">"\xd\xa"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="27:21" pos:end="27:66"><expr pos:start="27:21" pos:end="27:65"><call pos:start="27:21" pos:end="27:65"><name pos:start="27:21" pos:end="27:30">av_strlcpy</name><argument_list pos:start="27:31" pos:end="27:65">(<argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">tmp</name></expr></argument>, <argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><name pos:start="27:37" pos:end="27:37">p</name></expr></argument>, <argument pos:start="27:40" pos:end="27:64"><expr pos:start="27:40" pos:end="27:64"><call pos:start="27:40" pos:end="27:64"><name pos:start="27:40" pos:end="27:44">FFMIN</name><argument_list pos:start="27:45" pos:end="27:64">(<argument pos:start="27:46" pos:end="27:56"><expr pos:start="27:46" pos:end="27:56"><sizeof pos:start="27:46" pos:end="27:56">sizeof<argument_list pos:start="27:52" pos:end="27:56">(<argument pos:start="27:53" pos:end="27:55"><expr pos:start="27:53" pos:end="27:55"><name pos:start="27:53" pos:end="27:55">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:59" pos:end="27:63"><expr pos:start="27:59" pos:end="27:63"><name pos:start="27:59" pos:end="27:61">len</name><operator pos:start="27:62" pos:end="27:62">+</operator><literal type="number" pos:start="27:63" pos:end="27:63">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="29:21" pos:end="29:56"><expr pos:start="29:21" pos:end="29:55"><call pos:start="29:21" pos:end="29:55"><name pos:start="29:21" pos:end="29:26">av_log</name><argument_list pos:start="29:27" pos:end="29:55">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">ctx</name></expr></argument>, <argument pos:start="29:33" pos:end="29:43"><expr pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:43">AV_LOG_INFO</name></expr></argument>, <argument pos:start="29:46" pos:end="29:49"><expr pos:start="29:46" pos:end="29:49"><literal type="string" pos:start="29:46" pos:end="29:49">"%s"</literal></expr></argument>, <argument pos:start="29:52" pos:end="29:54"><expr pos:start="29:52" pos:end="29:54"><name pos:start="29:52" pos:end="29:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="31:21" pos:end="31:29"><expr pos:start="31:21" pos:end="31:28"><name pos:start="31:21" pos:end="31:21">p</name> <operator pos:start="31:23" pos:end="31:24">+=</operator> <name pos:start="31:26" pos:end="31:28">len</name></expr>;</expr_stmt>

                    <if_stmt pos:start="33:21" pos:end="33:65"><if pos:start="33:21" pos:end="33:65">if <condition pos:start="33:24" pos:end="33:34">(<expr pos:start="33:25" pos:end="33:33"><operator pos:start="33:25" pos:end="33:25">*</operator><name pos:start="33:26" pos:end="33:26">p</name> <operator pos:start="33:28" pos:end="33:29">==</operator> <literal type="number" pos:start="33:31" pos:end="33:33">0xd</literal></expr>)</condition><block type="pseudo" pos:start="33:36" pos:end="33:65"><block_content pos:start="33:36" pos:end="33:65"> <expr_stmt pos:start="33:36" pos:end="33:65"><expr pos:start="33:36" pos:end="33:64"><call pos:start="33:36" pos:end="33:64"><name pos:start="33:36" pos:end="33:41">av_log</name><argument_list pos:start="33:42" pos:end="33:64">(<argument pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:45">ctx</name></expr></argument>, <argument pos:start="33:48" pos:end="33:58"><expr pos:start="33:48" pos:end="33:58"><name pos:start="33:48" pos:end="33:58">AV_LOG_INFO</name></expr></argument>, <argument pos:start="33:61" pos:end="33:63"><expr pos:start="33:61" pos:end="33:63"><literal type="string" pos:start="33:61" pos:end="33:63">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="35:21" pos:end="35:89"><if pos:start="35:21" pos:end="35:89">if <condition pos:start="35:24" pos:end="35:34">(<expr pos:start="35:25" pos:end="35:33"><operator pos:start="35:25" pos:end="35:25">*</operator><name pos:start="35:26" pos:end="35:26">p</name> <operator pos:start="35:28" pos:end="35:29">==</operator> <literal type="number" pos:start="35:31" pos:end="35:33">0xa</literal></expr>)</condition><block type="pseudo" pos:start="35:36" pos:end="35:89"><block_content pos:start="35:36" pos:end="35:89"> <expr_stmt pos:start="35:36" pos:end="35:89"><expr pos:start="35:36" pos:end="35:88"><call pos:start="35:36" pos:end="35:88"><name pos:start="35:36" pos:end="35:41">av_log</name><argument_list pos:start="35:42" pos:end="35:88">(<argument pos:start="35:43" pos:end="35:45"><expr pos:start="35:43" pos:end="35:45"><name pos:start="35:43" pos:end="35:45">ctx</name></expr></argument>, <argument pos:start="35:48" pos:end="35:58"><expr pos:start="35:48" pos:end="35:58"><name pos:start="35:48" pos:end="35:58">AV_LOG_INFO</name></expr></argument>, <argument pos:start="35:61" pos:end="35:75"><expr pos:start="35:61" pos:end="35:75"><literal type="string" pos:start="35:61" pos:end="35:75">"\n%s  %-16s: "</literal></expr></argument>, <argument pos:start="35:78" pos:end="35:83"><expr pos:start="35:78" pos:end="35:83"><name pos:start="35:78" pos:end="35:83">indent</name></expr></argument>, <argument pos:start="35:86" pos:end="35:87"><expr pos:start="35:86" pos:end="35:87"><literal type="string" pos:start="35:86" pos:end="35:87">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="37:21" pos:end="37:32"><if pos:start="37:21" pos:end="37:32">if <condition pos:start="37:24" pos:end="37:27">(<expr pos:start="37:25" pos:end="37:26"><operator pos:start="37:25" pos:end="37:25">*</operator><name pos:start="37:26" pos:end="37:26">p</name></expr>)</condition><block type="pseudo" pos:start="37:29" pos:end="37:32"><block_content pos:start="37:29" pos:end="37:32"> <expr_stmt pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:29">p</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></while>

                <expr_stmt pos:start="41:17" pos:end="41:47"><expr pos:start="41:17" pos:end="41:46"><call pos:start="41:17" pos:end="41:46"><name pos:start="41:17" pos:end="41:22">av_log</name><argument_list pos:start="41:23" pos:end="41:46">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">ctx</name></expr></argument>, <argument pos:start="41:29" pos:end="41:39"><expr pos:start="41:29" pos:end="41:39"><name pos:start="41:29" pos:end="41:39">AV_LOG_INFO</name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><literal type="string" pos:start="41:42" pos:end="41:45">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
