<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3864.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">theora_decode_header</name><parameter_list pos:start="1:32" pos:end="1:73">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:72"><decl pos:start="1:56" pos:end="1:72"><type pos:start="1:56" pos:end="1:72"><name pos:start="1:56" pos:end="1:68">GetBitContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">Vp3DecodeContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:21">visible_width</name></decl>, <decl pos:start="7:24" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:37">visible_height</name></decl>, <decl pos:start="7:40" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:49">colorspace</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">offset_x</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>, <decl pos:start="9:23" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:30">offset_y</name> <init pos:start="9:32" pos:end="9:34">= <expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">AVRational</name></type> <name pos:start="11:16" pos:end="11:18">fps</name></decl>, <decl pos:start="11:21" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:21" pos:end="11:26">aspect</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:13">theora</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:37"><name pos:start="15:17" pos:end="15:29">get_bits_long</name><argument_list pos:start="15:30" pos:end="15:37">(<argument pos:start="15:31" pos:end="15:32"><expr pos:start="15:31" pos:end="15:32"><name pos:start="15:31" pos:end="15:32">gb</name></expr></argument>, <argument pos:start="15:35" pos:end="15:36"><expr pos:start="15:35" pos:end="15:36"><literal type="number" pos:start="15:35" pos:end="15:36">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:76"><expr pos:start="17:5" pos:end="17:75"><call pos:start="17:5" pos:end="17:75"><name pos:start="17:5" pos:end="17:10">av_log</name><argument_list pos:start="17:11" pos:end="17:75">(<argument pos:start="17:12" pos:end="17:16"><expr pos:start="17:12" pos:end="17:16"><name pos:start="17:12" pos:end="17:16">avctx</name></expr></argument>, <argument pos:start="17:19" pos:end="17:30"><expr pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="17:33" pos:end="17:63"><expr pos:start="17:33" pos:end="17:63"><literal type="string" pos:start="17:33" pos:end="17:63">"Theora bitstream version %X\n"</literal></expr></argument>, <argument pos:start="17:66" pos:end="17:74"><expr pos:start="17:66" pos:end="17:74"><name pos:start="17:66" pos:end="17:74"><name pos:start="17:66" pos:end="17:66">s</name><operator pos:start="17:67" pos:end="17:68">-&gt;</operator><name pos:start="17:69" pos:end="17:74">theora</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:73">/* 3.2.0 aka alpha3 has the same frame orientation as original vp3 */</comment>

    <comment type="block" pos:start="23:5" pos:end="23:70">/* but previous versions have the image flipped relative to vp3 */</comment>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:17">theora</name></name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:28">0x030200</literal></expr>)</condition>

    <block pos:start="27:5" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:87">

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:24">flipped_image</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:87"><expr pos:start="31:9" pos:end="31:86"><call pos:start="31:9" pos:end="31:86"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:86">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="31:37" pos:end="31:85"><expr pos:start="31:37" pos:end="31:85"><literal type="string" pos:start="31:37" pos:end="31:85">"Old (&lt;alpha3) Theora bitstream, flipped image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:17">visible_width</name>  <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:29">width</name></name>  <operator pos:start="37:32" pos:end="37:32">=</operator> <call pos:start="37:34" pos:end="37:49"><name pos:start="37:34" pos:end="37:41">get_bits</name><argument_list pos:start="37:42" pos:end="37:49">(<argument pos:start="37:43" pos:end="37:44"><expr pos:start="37:43" pos:end="37:44"><name pos:start="37:43" pos:end="37:44">gb</name></expr></argument>, <argument pos:start="37:47" pos:end="37:48"><expr pos:start="37:47" pos:end="37:48"><literal type="number" pos:start="37:47" pos:end="37:48">16</literal></expr></argument>)</argument_list></call> <operator pos:start="37:51" pos:end="37:52">&lt;&lt;</operator> <literal type="number" pos:start="37:54" pos:end="37:54">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:55"><expr pos:start="39:5" pos:end="39:54"><name pos:start="39:5" pos:end="39:18">visible_height</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:30"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:30">height</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <call pos:start="39:34" pos:end="39:49"><name pos:start="39:34" pos:end="39:41">get_bits</name><argument_list pos:start="39:42" pos:end="39:49">(<argument pos:start="39:43" pos:end="39:44"><expr pos:start="39:43" pos:end="39:44"><name pos:start="39:43" pos:end="39:44">gb</name></expr></argument>, <argument pos:start="39:47" pos:end="39:48"><expr pos:start="39:47" pos:end="39:48"><literal type="number" pos:start="39:47" pos:end="39:48">16</literal></expr></argument>)</argument_list></call> <operator pos:start="39:51" pos:end="39:52">&lt;&lt;</operator> <literal type="number" pos:start="39:54" pos:end="39:54">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if<condition pos:start="43:7" pos:end="43:58">(<expr pos:start="43:8" pos:end="43:57"><call pos:start="43:8" pos:end="43:57"><name pos:start="43:8" pos:end="43:26">av_image_check_size</name><argument_list pos:start="43:27" pos:end="43:57">(<argument pos:start="43:28" pos:end="43:35"><expr pos:start="43:28" pos:end="43:35"><name pos:start="43:28" pos:end="43:35"><name pos:start="43:28" pos:end="43:28">s</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:35">width</name></name></expr></argument>, <argument pos:start="43:38" pos:end="43:46"><expr pos:start="43:38" pos:end="43:46"><name pos:start="43:38" pos:end="43:46"><name pos:start="43:38" pos:end="43:38">s</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:46">height</name></name></expr></argument>, <argument pos:start="43:49" pos:end="43:49"><expr pos:start="43:49" pos:end="43:49"><literal type="number" pos:start="43:49" pos:end="43:49">0</literal></expr></argument>, <argument pos:start="43:52" pos:end="43:56"><expr pos:start="43:52" pos:end="43:56"><name pos:start="43:52" pos:end="43:56">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="43:59" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:18">

        <expr_stmt pos:start="45:9" pos:end="45:89"><expr pos:start="45:9" pos:end="45:88"><call pos:start="45:9" pos:end="45:88"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:88">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:66"><expr pos:start="45:37" pos:end="45:66"><literal type="string" pos:start="45:37" pos:end="45:66">"Invalid dimensions (%dx%d)\n"</literal></expr></argument>, <argument pos:start="45:69" pos:end="45:76"><expr pos:start="45:69" pos:end="45:76"><name pos:start="45:69" pos:end="45:76"><name pos:start="45:69" pos:end="45:69">s</name><operator pos:start="45:70" pos:end="45:71">-&gt;</operator><name pos:start="45:72" pos:end="45:76">width</name></name></expr></argument>, <argument pos:start="45:79" pos:end="45:87"><expr pos:start="45:79" pos:end="45:87"><name pos:start="45:79" pos:end="45:87"><name pos:start="45:79" pos:end="45:79">s</name><operator pos:start="45:80" pos:end="45:81">-&gt;</operator><name pos:start="45:82" pos:end="45:87">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">width</name></name><operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:27"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:27">height</name></name><operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="67:5"><if pos:start="55:5" pos:end="67:5">if <condition pos:start="55:8" pos:end="55:30">(<expr pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:17">theora</name></name> <operator pos:start="55:19" pos:end="55:20">&gt;=</operator> <literal type="number" pos:start="55:22" pos:end="55:29">0x030200</literal></expr>)</condition> <block pos:start="55:32" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:35">

        <expr_stmt pos:start="57:9" pos:end="57:47"><expr pos:start="57:9" pos:end="57:46"><name pos:start="57:9" pos:end="57:21">visible_width</name>  <operator pos:start="57:24" pos:end="57:24">=</operator> <call pos:start="57:26" pos:end="57:46"><name pos:start="57:26" pos:end="57:38">get_bits_long</name><argument_list pos:start="57:39" pos:end="57:46">(<argument pos:start="57:40" pos:end="57:41"><expr pos:start="57:40" pos:end="57:41"><name pos:start="57:40" pos:end="57:41">gb</name></expr></argument>, <argument pos:start="57:44" pos:end="57:45"><expr pos:start="57:44" pos:end="57:45"><literal type="number" pos:start="57:44" pos:end="57:45">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:22">visible_height</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="59:46"><name pos:start="59:26" pos:end="59:38">get_bits_long</name><argument_list pos:start="59:39" pos:end="59:46">(<argument pos:start="59:40" pos:end="59:41"><expr pos:start="59:40" pos:end="59:41"><name pos:start="59:40" pos:end="59:41">gb</name></expr></argument>, <argument pos:start="59:44" pos:end="59:45"><expr pos:start="59:44" pos:end="59:45"><literal type="number" pos:start="59:44" pos:end="59:45">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:16">offset_x</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:34"><name pos:start="63:20" pos:end="63:27">get_bits</name><argument_list pos:start="63:28" pos:end="63:34">(<argument pos:start="63:29" pos:end="63:30"><expr pos:start="63:29" pos:end="63:30"><name pos:start="63:29" pos:end="63:30">gb</name></expr></argument>, <argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:37" pos:end="63:50">/* offset x */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:16">offset_y</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:27">get_bits</name><argument_list pos:start="65:28" pos:end="65:34">(<argument pos:start="65:29" pos:end="65:30"><expr pos:start="65:29" pos:end="65:30"><name pos:start="65:29" pos:end="65:30">gb</name></expr></argument>, <argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><literal type="number" pos:start="65:33" pos:end="65:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:37" pos:end="65:63">/* offset y, from bottom */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:11"><name pos:start="71:5" pos:end="71:7">fps</name><operator pos:start="71:8" pos:end="71:8">.</operator><name pos:start="71:9" pos:end="71:11">num</name></name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:35"><name pos:start="71:15" pos:end="71:27">get_bits_long</name><argument_list pos:start="71:28" pos:end="71:35">(<argument pos:start="71:29" pos:end="71:30"><expr pos:start="71:29" pos:end="71:30"><name pos:start="71:29" pos:end="71:30">gb</name></expr></argument>, <argument pos:start="71:33" pos:end="71:34"><expr pos:start="71:33" pos:end="71:34"><literal type="number" pos:start="71:33" pos:end="71:34">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:11"><name pos:start="73:5" pos:end="73:7">fps</name><operator pos:start="73:8" pos:end="73:8">.</operator><name pos:start="73:9" pos:end="73:11">den</name></name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:35"><name pos:start="73:15" pos:end="73:27">get_bits_long</name><argument_list pos:start="73:28" pos:end="73:35">(<argument pos:start="73:29" pos:end="73:30"><expr pos:start="73:29" pos:end="73:30"><name pos:start="73:29" pos:end="73:30">gb</name></expr></argument>, <argument pos:start="73:33" pos:end="73:34"><expr pos:start="73:33" pos:end="73:34"><literal type="number" pos:start="73:33" pos:end="73:34">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:27">(<expr pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:11">fps</name><operator pos:start="75:12" pos:end="75:12">.</operator><name pos:start="75:13" pos:end="75:15">num</name></name> <operator pos:start="75:17" pos:end="75:18">&amp;&amp;</operator> <name pos:start="75:20" pos:end="75:26"><name pos:start="75:20" pos:end="75:22">fps</name><operator pos:start="75:23" pos:end="75:23">.</operator><name pos:start="75:24" pos:end="75:26">den</name></name></expr>)</condition> <block pos:start="75:29" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:43">

        <expr_stmt pos:start="77:9" pos:end="79:43"><expr pos:start="77:9" pos:end="79:42"><call pos:start="77:9" pos:end="79:42"><name pos:start="77:9" pos:end="77:17">av_reduce</name><argument_list pos:start="77:18" pos:end="79:42">(<argument pos:start="77:19" pos:end="77:39"><expr pos:start="77:19" pos:end="77:39"><operator pos:start="77:19" pos:end="77:19">&amp;</operator><name pos:start="77:20" pos:end="77:39"><name pos:start="77:20" pos:end="77:24">avctx</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:35">time_base</name><operator pos:start="77:36" pos:end="77:36">.</operator><name pos:start="77:37" pos:end="77:39">num</name></name></expr></argument>, <argument pos:start="77:42" pos:end="77:62"><expr pos:start="77:42" pos:end="77:62"><operator pos:start="77:42" pos:end="77:42">&amp;</operator><name pos:start="77:43" pos:end="77:62"><name pos:start="77:43" pos:end="77:47">avctx</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:58">time_base</name><operator pos:start="77:59" pos:end="77:59">.</operator><name pos:start="77:60" pos:end="77:62">den</name></name></expr></argument>,

                  <argument pos:start="79:19" pos:end="79:25"><expr pos:start="79:19" pos:end="79:25"><name pos:start="79:19" pos:end="79:25"><name pos:start="79:19" pos:end="79:21">fps</name><operator pos:start="79:22" pos:end="79:22">.</operator><name pos:start="79:23" pos:end="79:25">den</name></name></expr></argument>, <argument pos:start="79:28" pos:end="79:34"><expr pos:start="79:28" pos:end="79:34"><name pos:start="79:28" pos:end="79:34"><name pos:start="79:28" pos:end="79:30">fps</name><operator pos:start="79:31" pos:end="79:31">.</operator><name pos:start="79:32" pos:end="79:34">num</name></name></expr></argument>, <argument pos:start="79:37" pos:end="79:41"><expr pos:start="79:37" pos:end="79:41"><literal type="number" pos:start="79:37" pos:end="79:37">1</literal><operator pos:start="79:38" pos:end="79:39">&lt;&lt;</operator><literal type="number" pos:start="79:40" pos:end="79:41">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:10">aspect</name><operator pos:start="85:11" pos:end="85:11">.</operator><name pos:start="85:12" pos:end="85:14">num</name></name> <operator pos:start="85:16" pos:end="85:16">=</operator> <call pos:start="85:18" pos:end="85:38"><name pos:start="85:18" pos:end="85:30">get_bits_long</name><argument_list pos:start="85:31" pos:end="85:38">(<argument pos:start="85:32" pos:end="85:33"><expr pos:start="85:32" pos:end="85:33"><name pos:start="85:32" pos:end="85:33">gb</name></expr></argument>, <argument pos:start="85:36" pos:end="85:37"><expr pos:start="85:36" pos:end="85:37"><literal type="number" pos:start="85:36" pos:end="85:37">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:39"><expr pos:start="87:5" pos:end="87:38"><name pos:start="87:5" pos:end="87:14"><name pos:start="87:5" pos:end="87:10">aspect</name><operator pos:start="87:11" pos:end="87:11">.</operator><name pos:start="87:12" pos:end="87:14">den</name></name> <operator pos:start="87:16" pos:end="87:16">=</operator> <call pos:start="87:18" pos:end="87:38"><name pos:start="87:18" pos:end="87:30">get_bits_long</name><argument_list pos:start="87:31" pos:end="87:38">(<argument pos:start="87:32" pos:end="87:33"><expr pos:start="87:32" pos:end="87:33"><name pos:start="87:32" pos:end="87:33">gb</name></expr></argument>, <argument pos:start="87:36" pos:end="87:37"><expr pos:start="87:36" pos:end="87:37"><literal type="number" pos:start="87:36" pos:end="87:37">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:33">(<expr pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:14">aspect</name><operator pos:start="89:15" pos:end="89:15">.</operator><name pos:start="89:16" pos:end="89:18">num</name></name> <operator pos:start="89:20" pos:end="89:21">&amp;&amp;</operator> <name pos:start="89:23" pos:end="89:32"><name pos:start="89:23" pos:end="89:28">aspect</name><operator pos:start="89:29" pos:end="89:29">.</operator><name pos:start="89:30" pos:end="89:32">den</name></name></expr>)</condition> <block pos:start="89:35" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:49">

        <expr_stmt pos:start="91:9" pos:end="95:49"><expr pos:start="91:9" pos:end="95:48"><call pos:start="91:9" pos:end="95:48"><name pos:start="91:9" pos:end="91:17">av_reduce</name><argument_list pos:start="91:18" pos:end="95:48">(<argument pos:start="91:19" pos:end="91:49"><expr pos:start="91:19" pos:end="91:49"><operator pos:start="91:19" pos:end="91:19">&amp;</operator><name pos:start="91:20" pos:end="91:49"><name pos:start="91:20" pos:end="91:24">avctx</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:45">sample_aspect_ratio</name><operator pos:start="91:46" pos:end="91:46">.</operator><name pos:start="91:47" pos:end="91:49">num</name></name></expr></argument>,

                  <argument pos:start="93:19" pos:end="93:49"><expr pos:start="93:19" pos:end="93:49"><operator pos:start="93:19" pos:end="93:19">&amp;</operator><name pos:start="93:20" pos:end="93:49"><name pos:start="93:20" pos:end="93:24">avctx</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:45">sample_aspect_ratio</name><operator pos:start="93:46" pos:end="93:46">.</operator><name pos:start="93:47" pos:end="93:49">den</name></name></expr></argument>,

                  <argument pos:start="95:19" pos:end="95:28"><expr pos:start="95:19" pos:end="95:28"><name pos:start="95:19" pos:end="95:28"><name pos:start="95:19" pos:end="95:24">aspect</name><operator pos:start="95:25" pos:end="95:25">.</operator><name pos:start="95:26" pos:end="95:28">num</name></name></expr></argument>, <argument pos:start="95:31" pos:end="95:40"><expr pos:start="95:31" pos:end="95:40"><name pos:start="95:31" pos:end="95:40"><name pos:start="95:31" pos:end="95:36">aspect</name><operator pos:start="95:37" pos:end="95:37">.</operator><name pos:start="95:38" pos:end="95:40">den</name></name></expr></argument>, <argument pos:start="95:43" pos:end="95:47"><expr pos:start="95:43" pos:end="95:47"><literal type="number" pos:start="95:43" pos:end="95:43">1</literal><operator pos:start="95:44" pos:end="95:45">&lt;&lt;</operator><literal type="number" pos:start="95:46" pos:end="95:47">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="103:25"><if pos:start="101:5" pos:end="103:25">if <condition pos:start="101:8" pos:end="101:29">(<expr pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:17">theora</name></name> <operator pos:start="101:19" pos:end="101:19">&lt;</operator> <literal type="number" pos:start="101:21" pos:end="101:28">0x030200</literal></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:25"><block_content pos:start="103:9" pos:end="103:25">

        <expr_stmt pos:start="103:9" pos:end="103:25"><expr pos:start="103:9" pos:end="103:24"><call pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:17">skip_bits</name><argument_list pos:start="103:18" pos:end="103:24">(<argument pos:start="103:19" pos:end="103:20"><expr pos:start="103:19" pos:end="103:20"><name pos:start="103:19" pos:end="103:20">gb</name></expr></argument>, <argument pos:start="103:23" pos:end="103:23"><expr pos:start="103:23" pos:end="103:23"><literal type="number" pos:start="103:23" pos:end="103:23">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="103:27" pos:end="103:56">/* keyframe frequency force */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:33"><expr pos:start="105:5" pos:end="105:32"><name pos:start="105:5" pos:end="105:14">colorspace</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:32"><name pos:start="105:18" pos:end="105:25">get_bits</name><argument_list pos:start="105:26" pos:end="105:32">(<argument pos:start="105:27" pos:end="105:28"><expr pos:start="105:27" pos:end="105:28"><name pos:start="105:27" pos:end="105:28">gb</name></expr></argument>, <argument pos:start="105:31" pos:end="105:31"><expr pos:start="105:31" pos:end="105:31"><literal type="number" pos:start="105:31" pos:end="105:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:22"><expr pos:start="107:5" pos:end="107:21"><call pos:start="107:5" pos:end="107:21"><name pos:start="107:5" pos:end="107:13">skip_bits</name><argument_list pos:start="107:14" pos:end="107:21">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">gb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:20"><expr pos:start="107:19" pos:end="107:20"><literal type="number" pos:start="107:19" pos:end="107:20">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:24" pos:end="107:36">/* bitrate */</comment>



    <expr_stmt pos:start="111:5" pos:end="111:21"><expr pos:start="111:5" pos:end="111:20"><call pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:13">skip_bits</name><argument_list pos:start="111:14" pos:end="111:20">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">gb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:19"><expr pos:start="111:19" pos:end="111:19"><literal type="number" pos:start="111:19" pos:end="111:19">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:23" pos:end="111:40">/* quality hint */</comment>



    <if_stmt pos:start="115:5" pos:end="133:5"><if pos:start="115:5" pos:end="133:5">if <condition pos:start="115:8" pos:end="115:30">(<expr pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:17">theora</name></name> <operator pos:start="115:19" pos:end="115:20">&gt;=</operator> <literal type="number" pos:start="115:22" pos:end="115:29">0x030200</literal></expr>)</condition>

    <block pos:start="117:5" pos:end="133:5">{<block_content pos:start="119:9" pos:end="131:25">

        <expr_stmt pos:start="119:9" pos:end="119:25"><expr pos:start="119:9" pos:end="119:24"><call pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:17">skip_bits</name><argument_list pos:start="119:18" pos:end="119:24">(<argument pos:start="119:19" pos:end="119:20"><expr pos:start="119:19" pos:end="119:20"><name pos:start="119:19" pos:end="119:20">gb</name></expr></argument>, <argument pos:start="119:23" pos:end="119:23"><expr pos:start="119:23" pos:end="119:23"><literal type="number" pos:start="119:23" pos:end="119:23">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="119:27" pos:end="119:56">/* keyframe frequency force */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:58"><expr pos:start="121:9" pos:end="121:57"><name pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:13">avctx</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:22">pix_fmt</name></name> <operator pos:start="121:24" pos:end="121:24">=</operator> <name pos:start="121:26" pos:end="121:57"><name pos:start="121:26" pos:end="121:40">theora_pix_fmts</name><index pos:start="121:41" pos:end="121:57">[<expr pos:start="121:42" pos:end="121:56"><call pos:start="121:42" pos:end="121:56"><name pos:start="121:42" pos:end="121:49">get_bits</name><argument_list pos:start="121:50" pos:end="121:56">(<argument pos:start="121:51" pos:end="121:52"><expr pos:start="121:51" pos:end="121:52"><name pos:start="121:51" pos:end="121:52">gb</name></expr></argument>, <argument pos:start="121:55" pos:end="121:55"><expr pos:start="121:55" pos:end="121:55"><literal type="number" pos:start="121:55" pos:end="121:55">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:46">(<expr pos:start="123:13" pos:end="123:45"><name pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:17">avctx</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:26">pix_fmt</name></name> <operator pos:start="123:28" pos:end="123:29">==</operator> <name pos:start="123:31" pos:end="123:45">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="123:48" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:39">

            <expr_stmt pos:start="125:13" pos:end="125:66"><expr pos:start="125:13" pos:end="125:65"><call pos:start="125:13" pos:end="125:65"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:65">(<argument pos:start="125:20" pos:end="125:24"><expr pos:start="125:20" pos:end="125:24"><name pos:start="125:20" pos:end="125:24">avctx</name></expr></argument>, <argument pos:start="125:27" pos:end="125:38"><expr pos:start="125:27" pos:end="125:38"><name pos:start="125:27" pos:end="125:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:41" pos:end="125:64"><expr pos:start="125:41" pos:end="125:64"><literal type="string" pos:start="125:41" pos:end="125:64">"Invalid pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:39">return <expr pos:start="127:20" pos:end="127:38"><name pos:start="127:20" pos:end="127:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:25"><expr pos:start="131:9" pos:end="131:24"><call pos:start="131:9" pos:end="131:24"><name pos:start="131:9" pos:end="131:17">skip_bits</name><argument_list pos:start="131:18" pos:end="131:24">(<argument pos:start="131:19" pos:end="131:20"><expr pos:start="131:19" pos:end="131:20"><name pos:start="131:19" pos:end="131:20">gb</name></expr></argument>, <argument pos:start="131:23" pos:end="131:23"><expr pos:start="131:23" pos:end="131:23"><literal type="number" pos:start="131:23" pos:end="131:23">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="131:27" pos:end="131:40">/* reserved */</comment>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="137:1" pos:end="137:25">//    align_get_bits(gb);</comment>



    <if_stmt pos:start="141:5" pos:end="151:59"><if pos:start="141:5" pos:end="147:69">if <condition pos:start="141:8" pos:end="145:65">(   <expr pos:start="141:12" pos:end="145:64"><name pos:start="141:12" pos:end="141:24">visible_width</name>  <operator pos:start="141:27" pos:end="141:28">&lt;=</operator> <name pos:start="141:30" pos:end="141:37"><name pos:start="141:30" pos:end="141:30">s</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:37">width</name></name>  <operator pos:start="141:40" pos:end="141:41">&amp;&amp;</operator> <name pos:start="141:43" pos:end="141:55">visible_width</name>  <operator pos:start="141:58" pos:end="141:58">&gt;</operator> <name pos:start="141:60" pos:end="141:67"><name pos:start="141:60" pos:end="141:60">s</name><operator pos:start="141:61" pos:end="141:62">-&gt;</operator><name pos:start="141:63" pos:end="141:67">width</name></name><operator pos:start="141:68" pos:end="141:68">-</operator><literal type="number" pos:start="141:69" pos:end="141:70">16</literal>

        <operator pos:start="143:9" pos:end="143:10">&amp;&amp;</operator> <name pos:start="143:12" pos:end="143:25">visible_height</name> <operator pos:start="143:27" pos:end="143:28">&lt;=</operator> <name pos:start="143:30" pos:end="143:38"><name pos:start="143:30" pos:end="143:30">s</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:38">height</name></name> <operator pos:start="143:40" pos:end="143:41">&amp;&amp;</operator> <name pos:start="143:43" pos:end="143:56">visible_height</name> <operator pos:start="143:58" pos:end="143:58">&gt;</operator> <name pos:start="143:60" pos:end="143:68"><name pos:start="143:60" pos:end="143:60">s</name><operator pos:start="143:61" pos:end="143:62">-&gt;</operator><name pos:start="143:63" pos:end="143:68">height</name></name><operator pos:start="143:69" pos:end="143:69">-</operator><literal type="number" pos:start="143:70" pos:end="143:71">16</literal>

        <operator pos:start="145:9" pos:end="145:10">&amp;&amp;</operator> <operator pos:start="145:12" pos:end="145:12">!</operator><name pos:start="145:13" pos:end="145:20">offset_x</name> <operator pos:start="145:22" pos:end="145:23">&amp;&amp;</operator> <operator pos:start="145:25" pos:end="145:25">(</operator><name pos:start="145:26" pos:end="145:33">offset_y</name> <operator pos:start="145:35" pos:end="145:36">==</operator> <name pos:start="145:38" pos:end="145:46"><name pos:start="145:38" pos:end="145:38">s</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:46">height</name></name> <operator pos:start="145:48" pos:end="145:48">-</operator> <name pos:start="145:50" pos:end="145:63">visible_height</name><operator pos:start="145:64" pos:end="145:64">)</operator></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:69"><block_content pos:start="147:9" pos:end="147:69">

        <expr_stmt pos:start="147:9" pos:end="147:69"><expr pos:start="147:9" pos:end="147:68"><call pos:start="147:9" pos:end="147:68"><name pos:start="147:9" pos:end="147:30">avcodec_set_dimensions</name><argument_list pos:start="147:31" pos:end="147:68">(<argument pos:start="147:32" pos:end="147:36"><expr pos:start="147:32" pos:end="147:36"><name pos:start="147:32" pos:end="147:36">avctx</name></expr></argument>, <argument pos:start="147:39" pos:end="147:51"><expr pos:start="147:39" pos:end="147:51"><name pos:start="147:39" pos:end="147:51">visible_width</name></expr></argument>, <argument pos:start="147:54" pos:end="147:67"><expr pos:start="147:54" pos:end="147:67"><name pos:start="147:54" pos:end="147:67">visible_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="149:5" pos:end="151:59">else<block type="pseudo" pos:start="151:9" pos:end="151:59"><block_content pos:start="151:9" pos:end="151:59">

        <expr_stmt pos:start="151:9" pos:end="151:59"><expr pos:start="151:9" pos:end="151:58"><call pos:start="151:9" pos:end="151:58"><name pos:start="151:9" pos:end="151:30">avcodec_set_dimensions</name><argument_list pos:start="151:31" pos:end="151:58">(<argument pos:start="151:32" pos:end="151:36"><expr pos:start="151:32" pos:end="151:36"><name pos:start="151:32" pos:end="151:36">avctx</name></expr></argument>, <argument pos:start="151:39" pos:end="151:46"><expr pos:start="151:39" pos:end="151:46"><name pos:start="151:39" pos:end="151:46"><name pos:start="151:39" pos:end="151:39">s</name><operator pos:start="151:40" pos:end="151:41">-&gt;</operator><name pos:start="151:42" pos:end="151:46">width</name></name></expr></argument>, <argument pos:start="151:49" pos:end="151:57"><expr pos:start="151:49" pos:end="151:57"><name pos:start="151:49" pos:end="151:57"><name pos:start="151:49" pos:end="151:49">s</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="155:5" pos:end="163:5"><if pos:start="155:5" pos:end="159:5">if <condition pos:start="155:8" pos:end="155:24">(<expr pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:18">colorspace</name> <operator pos:start="155:20" pos:end="155:21">==</operator> <literal type="number" pos:start="155:23" pos:end="155:23">1</literal></expr>)</condition> <block pos:start="155:26" pos:end="159:5">{<block_content pos:start="157:9" pos:end="157:50">

        <expr_stmt pos:start="157:9" pos:end="157:50"><expr pos:start="157:9" pos:end="157:49"><name pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:13">avctx</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:30">color_primaries</name></name> <operator pos:start="157:32" pos:end="157:32">=</operator> <name pos:start="157:34" pos:end="157:49">AVCOL_PRI_BT470M</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="159:7" pos:end="163:5">else if <condition pos:start="159:15" pos:end="159:31">(<expr pos:start="159:16" pos:end="159:30"><name pos:start="159:16" pos:end="159:25">colorspace</name> <operator pos:start="159:27" pos:end="159:28">==</operator> <literal type="number" pos:start="159:30" pos:end="159:30">2</literal></expr>)</condition> <block pos:start="159:33" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:51">

        <expr_stmt pos:start="161:9" pos:end="161:51"><expr pos:start="161:9" pos:end="161:50"><name pos:start="161:9" pos:end="161:30"><name pos:start="161:9" pos:end="161:13">avctx</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:30">color_primaries</name></name> <operator pos:start="161:32" pos:end="161:32">=</operator> <name pos:start="161:34" pos:end="161:50">AVCOL_PRI_BT470BG</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="165:5" pos:end="171:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="165:43">(<expr pos:start="165:9" pos:end="165:42"><name pos:start="165:9" pos:end="165:18">colorspace</name> <operator pos:start="165:20" pos:end="165:21">==</operator> <literal type="number" pos:start="165:23" pos:end="165:23">1</literal> <operator pos:start="165:25" pos:end="165:26">||</operator> <name pos:start="165:28" pos:end="165:37">colorspace</name> <operator pos:start="165:39" pos:end="165:40">==</operator> <literal type="number" pos:start="165:42" pos:end="165:42">2</literal></expr>)</condition> <block pos:start="165:45" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:44">

        <expr_stmt pos:start="167:9" pos:end="167:46"><expr pos:start="167:9" pos:end="167:45"><name pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:13">avctx</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:25">colorspace</name></name> <operator pos:start="167:27" pos:end="167:27">=</operator> <name pos:start="167:29" pos:end="167:45">AVCOL_SPC_BT470BG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:44"><expr pos:start="169:9" pos:end="169:43"><name pos:start="169:9" pos:end="169:24"><name pos:start="169:9" pos:end="169:13">avctx</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:24">color_trc</name></name>  <operator pos:start="169:27" pos:end="169:27">=</operator> <name pos:start="169:29" pos:end="169:43">AVCOL_TRC_BT709</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
