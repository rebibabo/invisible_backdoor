<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22719.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">spatial_compose97i_dy_buffered</name><parameter_list pos:start="1:43" pos:end="1:120">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:56">dwt_compose_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">cs</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:79"><decl pos:start="1:63" pos:end="1:79"><type pos:start="1:63" pos:end="1:79"><name pos:start="1:63" pos:end="1:74">slice_buffer</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type> <name pos:start="1:78" pos:end="1:79">sb</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:90"><decl pos:start="1:82" pos:end="1:90"><type pos:start="1:82" pos:end="1:90"><name pos:start="1:82" pos:end="1:84">int</name></type> <name pos:start="1:86" pos:end="1:90">width</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:102"><decl pos:start="1:93" pos:end="1:102"><type pos:start="1:93" pos:end="1:102"><name pos:start="1:93" pos:end="1:95">int</name></type> <name pos:start="1:97" pos:end="1:102">height</name></decl></parameter>, <parameter pos:start="1:105" pos:end="1:119"><decl pos:start="1:105" pos:end="1:119"><type pos:start="1:105" pos:end="1:119"><name pos:start="1:105" pos:end="1:107">int</name></type> <name pos:start="1:109" pos:end="1:119">stride_line</name></decl></parameter>)</parameter_list><block pos:start="1:121" pos:end="79:1">{<block_content pos:start="3:5" pos:end="77:15">

    <decl_stmt pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">y</name> <init pos:start="3:11" pos:end="3:17">= <expr pos:start="3:13" pos:end="3:17"><name pos:start="3:13" pos:end="3:17"><name pos:start="3:13" pos:end="3:14">cs</name><operator pos:start="3:15" pos:end="3:16">-&gt;</operator><name pos:start="3:17" pos:end="3:17">y</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">mirror0</name> <init pos:start="7:17" pos:end="7:43">= <expr pos:start="7:19" pos:end="7:43"><call pos:start="7:19" pos:end="7:43"><name pos:start="7:19" pos:end="7:24">mirror</name><argument_list pos:start="7:25" pos:end="7:43">(<argument pos:start="7:26" pos:end="7:30"><expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">y</name> <operator pos:start="7:28" pos:end="7:28">-</operator> <literal type="number" pos:start="7:30" pos:end="7:30">1</literal></expr></argument>, <argument pos:start="7:33" pos:end="7:42"><expr pos:start="7:33" pos:end="7:42"><name pos:start="7:33" pos:end="7:38">height</name> <operator pos:start="7:40" pos:end="7:40">-</operator> <literal type="number" pos:start="7:42" pos:end="7:42">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">mirror1</name> <init pos:start="9:17" pos:end="9:43">= <expr pos:start="9:19" pos:end="9:43"><call pos:start="9:19" pos:end="9:43"><name pos:start="9:19" pos:end="9:24">mirror</name><argument_list pos:start="9:25" pos:end="9:43">(<argument pos:start="9:26" pos:end="9:30"><expr pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">y</name> <operator pos:start="9:28" pos:end="9:28">+</operator> <literal type="number" pos:start="9:30" pos:end="9:30">0</literal></expr></argument>, <argument pos:start="9:33" pos:end="9:42"><expr pos:start="9:33" pos:end="9:42"><name pos:start="9:33" pos:end="9:38">height</name> <operator pos:start="9:40" pos:end="9:40">-</operator> <literal type="number" pos:start="9:42" pos:end="9:42">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">mirror2</name> <init pos:start="11:17" pos:end="11:43">= <expr pos:start="11:19" pos:end="11:43"><call pos:start="11:19" pos:end="11:43"><name pos:start="11:19" pos:end="11:24">mirror</name><argument_list pos:start="11:25" pos:end="11:43">(<argument pos:start="11:26" pos:end="11:30"><expr pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:26">y</name> <operator pos:start="11:28" pos:end="11:28">+</operator> <literal type="number" pos:start="11:30" pos:end="11:30">1</literal></expr></argument>, <argument pos:start="11:33" pos:end="11:42"><expr pos:start="11:33" pos:end="11:42"><name pos:start="11:33" pos:end="11:38">height</name> <operator pos:start="11:40" pos:end="11:40">-</operator> <literal type="number" pos:start="11:42" pos:end="11:42">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">mirror3</name> <init pos:start="13:17" pos:end="13:43">= <expr pos:start="13:19" pos:end="13:43"><call pos:start="13:19" pos:end="13:43"><name pos:start="13:19" pos:end="13:24">mirror</name><argument_list pos:start="13:25" pos:end="13:43">(<argument pos:start="13:26" pos:end="13:30"><expr pos:start="13:26" pos:end="13:30"><name pos:start="13:26" pos:end="13:26">y</name> <operator pos:start="13:28" pos:end="13:28">+</operator> <literal type="number" pos:start="13:30" pos:end="13:30">2</literal></expr></argument>, <argument pos:start="13:33" pos:end="13:42"><expr pos:start="13:33" pos:end="13:42"><name pos:start="13:33" pos:end="13:38">height</name> <operator pos:start="13:40" pos:end="13:40">-</operator> <literal type="number" pos:start="13:42" pos:end="13:42">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">mirror4</name> <init pos:start="15:17" pos:end="15:43">= <expr pos:start="15:19" pos:end="15:43"><call pos:start="15:19" pos:end="15:43"><name pos:start="15:19" pos:end="15:24">mirror</name><argument_list pos:start="15:25" pos:end="15:43">(<argument pos:start="15:26" pos:end="15:30"><expr pos:start="15:26" pos:end="15:30"><name pos:start="15:26" pos:end="15:26">y</name> <operator pos:start="15:28" pos:end="15:28">+</operator> <literal type="number" pos:start="15:30" pos:end="15:30">3</literal></expr></argument>, <argument pos:start="15:33" pos:end="15:42"><expr pos:start="15:33" pos:end="15:42"><name pos:start="15:33" pos:end="15:38">height</name> <operator pos:start="15:40" pos:end="15:40">-</operator> <literal type="number" pos:start="15:42" pos:end="15:42">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:43"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">mirror5</name> <init pos:start="17:17" pos:end="17:43">= <expr pos:start="17:19" pos:end="17:43"><call pos:start="17:19" pos:end="17:43"><name pos:start="17:19" pos:end="17:24">mirror</name><argument_list pos:start="17:25" pos:end="17:43">(<argument pos:start="17:26" pos:end="17:30"><expr pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:26">y</name> <operator pos:start="17:28" pos:end="17:28">+</operator> <literal type="number" pos:start="17:30" pos:end="17:30">4</literal></expr></argument>, <argument pos:start="17:33" pos:end="17:42"><expr pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:38">height</name> <operator pos:start="17:40" pos:end="17:40">-</operator> <literal type="number" pos:start="17:42" pos:end="17:42">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">DWTELEM</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:15">b0</name><init pos:start="19:16" pos:end="19:23">= <expr pos:start="19:18" pos:end="19:23"><name pos:start="19:18" pos:end="19:23"><name pos:start="19:18" pos:end="19:19">cs</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:23">b0</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">DWTELEM</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:15">b1</name><init pos:start="21:16" pos:end="21:23">= <expr pos:start="21:18" pos:end="21:23"><name pos:start="21:18" pos:end="21:23"><name pos:start="21:18" pos:end="21:19">cs</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:23">b1</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">DWTELEM</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:15">b2</name><init pos:start="23:16" pos:end="23:23">= <expr pos:start="23:18" pos:end="23:23"><name pos:start="23:18" pos:end="23:23"><name pos:start="23:18" pos:end="23:19">cs</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:23">b2</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">DWTELEM</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:15">b3</name><init pos:start="25:16" pos:end="25:23">= <expr pos:start="25:18" pos:end="25:23"><name pos:start="25:18" pos:end="25:23"><name pos:start="25:18" pos:end="25:19">cs</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:23">b3</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:66"><decl pos:start="27:5" pos:end="27:65"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">DWTELEM</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:15">b4</name><init pos:start="27:16" pos:end="27:65">= <expr pos:start="27:18" pos:end="27:65"><call pos:start="27:18" pos:end="27:65"><name pos:start="27:18" pos:end="27:38">slice_buffer_get_line</name><argument_list pos:start="27:39" pos:end="27:65">(<argument pos:start="27:40" pos:end="27:41"><expr pos:start="27:40" pos:end="27:41"><name pos:start="27:40" pos:end="27:41">sb</name></expr></argument>, <argument pos:start="27:44" pos:end="27:64"><expr pos:start="27:44" pos:end="27:64"><name pos:start="27:44" pos:end="27:50">mirror4</name> <operator pos:start="27:52" pos:end="27:52">*</operator> <name pos:start="27:54" pos:end="27:64">stride_line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:66"><decl pos:start="29:5" pos:end="29:65"><type pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:11">DWTELEM</name> <modifier pos:start="29:13" pos:end="29:13">*</modifier></type><name pos:start="29:14" pos:end="29:15">b5</name><init pos:start="29:16" pos:end="29:65">= <expr pos:start="29:18" pos:end="29:65"><call pos:start="29:18" pos:end="29:65"><name pos:start="29:18" pos:end="29:38">slice_buffer_get_line</name><argument_list pos:start="29:39" pos:end="29:65">(<argument pos:start="29:40" pos:end="29:41"><expr pos:start="29:40" pos:end="29:41"><name pos:start="29:40" pos:end="29:41">sb</name></expr></argument>, <argument pos:start="29:44" pos:end="29:64"><expr pos:start="29:44" pos:end="29:64"><name pos:start="29:44" pos:end="29:50">mirror5</name> <operator pos:start="29:52" pos:end="29:52">*</operator> <name pos:start="29:54" pos:end="29:64">stride_line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<block pos:start="33:1" pos:end="53:35">{<block_content pos:start="33:2" pos:end="53:34"><macro pos:start="33:2" pos:end="33:12"><name pos:start="33:2" pos:end="33:12">START_TIMER</name></macro>

    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="39:5">if<condition pos:start="35:7" pos:end="35:25">(<expr pos:start="35:8" pos:end="35:24"><name pos:start="35:8" pos:end="35:8">y</name><operator pos:start="35:9" pos:end="35:9">&gt;</operator><literal type="number" pos:start="35:10" pos:end="35:10">0</literal> <operator pos:start="35:12" pos:end="35:13">&amp;&amp;</operator> <name pos:start="35:15" pos:end="35:15">y</name><operator pos:start="35:16" pos:end="35:16">+</operator><literal type="number" pos:start="35:17" pos:end="35:17">4</literal><operator pos:start="35:18" pos:end="35:18">&lt;</operator><name pos:start="35:19" pos:end="35:24">height</name></expr>)</condition><block pos:start="35:26" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:59">

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><call pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:27">vertical_compose97i</name><argument_list pos:start="37:28" pos:end="37:58">(<argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><name pos:start="37:29" pos:end="37:30">b0</name></expr></argument>, <argument pos:start="37:33" pos:end="37:34"><expr pos:start="37:33" pos:end="37:34"><name pos:start="37:33" pos:end="37:34">b1</name></expr></argument>, <argument pos:start="37:37" pos:end="37:38"><expr pos:start="37:37" pos:end="37:38"><name pos:start="37:37" pos:end="37:38">b2</name></expr></argument>, <argument pos:start="37:41" pos:end="37:42"><expr pos:start="37:41" pos:end="37:42"><name pos:start="37:41" pos:end="37:42">b3</name></expr></argument>, <argument pos:start="37:45" pos:end="37:46"><expr pos:start="37:45" pos:end="37:46"><name pos:start="37:45" pos:end="37:46">b4</name></expr></argument>, <argument pos:start="37:49" pos:end="37:50"><expr pos:start="37:49" pos:end="37:50"><name pos:start="37:49" pos:end="37:50">b5</name></expr></argument>, <argument pos:start="37:53" pos:end="37:57"><expr pos:start="37:53" pos:end="37:57"><name pos:start="37:53" pos:end="37:57">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="39:6" pos:end="49:5">else<block pos:start="39:10" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:72">

        <if_stmt pos:start="41:9" pos:end="41:72"><if pos:start="41:9" pos:end="41:72">if<condition pos:start="41:11" pos:end="41:30">(<expr pos:start="41:12" pos:end="41:29"><name pos:start="41:12" pos:end="41:18">mirror3</name> <operator pos:start="41:20" pos:end="41:21">&lt;=</operator> <name pos:start="41:23" pos:end="41:29">mirror5</name></expr>)</condition><block type="pseudo" pos:start="41:32" pos:end="41:72"><block_content pos:start="41:32" pos:end="41:72"> <expr_stmt pos:start="41:32" pos:end="41:72"><expr pos:start="41:32" pos:end="41:71"><call pos:start="41:32" pos:end="41:71"><name pos:start="41:32" pos:end="41:52">vertical_compose97iL1</name><argument_list pos:start="41:53" pos:end="41:71">(<argument pos:start="41:54" pos:end="41:55"><expr pos:start="41:54" pos:end="41:55"><name pos:start="41:54" pos:end="41:55">b3</name></expr></argument>, <argument pos:start="41:58" pos:end="41:59"><expr pos:start="41:58" pos:end="41:59"><name pos:start="41:58" pos:end="41:59">b4</name></expr></argument>, <argument pos:start="41:62" pos:end="41:63"><expr pos:start="41:62" pos:end="41:63"><name pos:start="41:62" pos:end="41:63">b5</name></expr></argument>, <argument pos:start="41:66" pos:end="41:70"><expr pos:start="41:66" pos:end="41:70"><name pos:start="41:66" pos:end="41:70">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="43:72"><if pos:start="43:9" pos:end="43:72">if<condition pos:start="43:11" pos:end="43:30">(<expr pos:start="43:12" pos:end="43:29"><name pos:start="43:12" pos:end="43:18">mirror2</name> <operator pos:start="43:20" pos:end="43:21">&lt;=</operator> <name pos:start="43:23" pos:end="43:29">mirror4</name></expr>)</condition><block type="pseudo" pos:start="43:32" pos:end="43:72"><block_content pos:start="43:32" pos:end="43:72"> <expr_stmt pos:start="43:32" pos:end="43:72"><expr pos:start="43:32" pos:end="43:71"><call pos:start="43:32" pos:end="43:71"><name pos:start="43:32" pos:end="43:52">vertical_compose97iH1</name><argument_list pos:start="43:53" pos:end="43:71">(<argument pos:start="43:54" pos:end="43:55"><expr pos:start="43:54" pos:end="43:55"><name pos:start="43:54" pos:end="43:55">b2</name></expr></argument>, <argument pos:start="43:58" pos:end="43:59"><expr pos:start="43:58" pos:end="43:59"><name pos:start="43:58" pos:end="43:59">b3</name></expr></argument>, <argument pos:start="43:62" pos:end="43:63"><expr pos:start="43:62" pos:end="43:63"><name pos:start="43:62" pos:end="43:63">b4</name></expr></argument>, <argument pos:start="43:66" pos:end="43:70"><expr pos:start="43:66" pos:end="43:70"><name pos:start="43:66" pos:end="43:70">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="45:72"><if pos:start="45:9" pos:end="45:72">if<condition pos:start="45:11" pos:end="45:30">(<expr pos:start="45:12" pos:end="45:29"><name pos:start="45:12" pos:end="45:18">mirror1</name> <operator pos:start="45:20" pos:end="45:21">&lt;=</operator> <name pos:start="45:23" pos:end="45:29">mirror3</name></expr>)</condition><block type="pseudo" pos:start="45:32" pos:end="45:72"><block_content pos:start="45:32" pos:end="45:72"> <expr_stmt pos:start="45:32" pos:end="45:72"><expr pos:start="45:32" pos:end="45:71"><call pos:start="45:32" pos:end="45:71"><name pos:start="45:32" pos:end="45:52">vertical_compose97iL0</name><argument_list pos:start="45:53" pos:end="45:71">(<argument pos:start="45:54" pos:end="45:55"><expr pos:start="45:54" pos:end="45:55"><name pos:start="45:54" pos:end="45:55">b1</name></expr></argument>, <argument pos:start="45:58" pos:end="45:59"><expr pos:start="45:58" pos:end="45:59"><name pos:start="45:58" pos:end="45:59">b2</name></expr></argument>, <argument pos:start="45:62" pos:end="45:63"><expr pos:start="45:62" pos:end="45:63"><name pos:start="45:62" pos:end="45:63">b3</name></expr></argument>, <argument pos:start="45:66" pos:end="45:70"><expr pos:start="45:66" pos:end="45:70"><name pos:start="45:66" pos:end="45:70">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="47:72"><if pos:start="47:9" pos:end="47:72">if<condition pos:start="47:11" pos:end="47:30">(<expr pos:start="47:12" pos:end="47:29"><name pos:start="47:12" pos:end="47:18">mirror0</name> <operator pos:start="47:20" pos:end="47:21">&lt;=</operator> <name pos:start="47:23" pos:end="47:29">mirror2</name></expr>)</condition><block type="pseudo" pos:start="47:32" pos:end="47:72"><block_content pos:start="47:32" pos:end="47:72"> <expr_stmt pos:start="47:32" pos:end="47:72"><expr pos:start="47:32" pos:end="47:71"><call pos:start="47:32" pos:end="47:71"><name pos:start="47:32" pos:end="47:52">vertical_compose97iH0</name><argument_list pos:start="47:53" pos:end="47:71">(<argument pos:start="47:54" pos:end="47:55"><expr pos:start="47:54" pos:end="47:55"><name pos:start="47:54" pos:end="47:55">b0</name></expr></argument>, <argument pos:start="47:58" pos:end="47:59"><expr pos:start="47:58" pos:end="47:59"><name pos:start="47:58" pos:end="47:59">b1</name></expr></argument>, <argument pos:start="47:62" pos:end="47:63"><expr pos:start="47:62" pos:end="47:63"><name pos:start="47:62" pos:end="47:63">b2</name></expr></argument>, <argument pos:start="47:66" pos:end="47:70"><expr pos:start="47:66" pos:end="47:70"><name pos:start="47:66" pos:end="47:70">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

<if_stmt pos:start="51:1" pos:end="53:34"><if pos:start="51:1" pos:end="53:34">if<condition pos:start="51:3" pos:end="51:13">(<expr pos:start="51:4" pos:end="51:12"><name pos:start="51:4" pos:end="51:8">width</name><operator pos:start="51:9" pos:end="51:9">&gt;</operator><literal type="number" pos:start="51:10" pos:end="51:12">400</literal></expr>)</condition><block pos:start="51:14" pos:end="53:34">{<block_content pos:start="53:1" pos:end="53:33">

<macro pos:start="53:1" pos:end="53:33"><name pos:start="53:1" pos:end="53:10">STOP_TIMER</name><argument_list pos:start="53:11" pos:end="53:33">(<argument pos:start="53:12" pos:end="53:32"><literal type="string" pos:start="53:12" pos:end="53:32">"vertical_compose97i"</literal></argument>)</argument_list></macro></block_content>}</block></if></if_stmt></block_content>}</block>



<block pos:start="57:1" pos:end="65:37">{<block_content pos:start="57:2" pos:end="65:36"><macro pos:start="57:2" pos:end="57:12"><name pos:start="57:2" pos:end="57:12">START_TIMER</name></macro>

        <if_stmt pos:start="59:9" pos:end="59:54"><if pos:start="59:9" pos:end="59:54">if<condition pos:start="59:11" pos:end="59:20">(<expr pos:start="59:12" pos:end="59:19"><name pos:start="59:12" pos:end="59:12">y</name><operator pos:start="59:13" pos:end="59:13">-</operator><literal type="number" pos:start="59:14" pos:end="59:14">1</literal><operator pos:start="59:15" pos:end="59:16">&gt;=</operator>  <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>)</condition><block type="pseudo" pos:start="59:22" pos:end="59:54"><block_content pos:start="59:22" pos:end="59:54"> <expr_stmt pos:start="59:22" pos:end="59:54"><expr pos:start="59:22" pos:end="59:53"><call pos:start="59:22" pos:end="59:53"><name pos:start="59:22" pos:end="59:42">horizontal_compose97i</name><argument_list pos:start="59:43" pos:end="59:53">(<argument pos:start="59:44" pos:end="59:45"><expr pos:start="59:44" pos:end="59:45"><name pos:start="59:44" pos:end="59:45">b0</name></expr></argument>, <argument pos:start="59:48" pos:end="59:52"><expr pos:start="59:48" pos:end="59:52"><name pos:start="59:48" pos:end="59:52">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="61:64"><if pos:start="61:9" pos:end="61:64">if<condition pos:start="61:11" pos:end="61:30">(<expr pos:start="61:12" pos:end="61:29"><name pos:start="61:12" pos:end="61:18">mirror0</name> <operator pos:start="61:20" pos:end="61:21">&lt;=</operator> <name pos:start="61:23" pos:end="61:29">mirror2</name></expr>)</condition><block type="pseudo" pos:start="61:32" pos:end="61:64"><block_content pos:start="61:32" pos:end="61:64"> <expr_stmt pos:start="61:32" pos:end="61:64"><expr pos:start="61:32" pos:end="61:63"><call pos:start="61:32" pos:end="61:63"><name pos:start="61:32" pos:end="61:52">horizontal_compose97i</name><argument_list pos:start="61:53" pos:end="61:63">(<argument pos:start="61:54" pos:end="61:55"><expr pos:start="61:54" pos:end="61:55"><name pos:start="61:54" pos:end="61:55">b1</name></expr></argument>, <argument pos:start="61:58" pos:end="61:62"><expr pos:start="61:58" pos:end="61:62"><name pos:start="61:58" pos:end="61:62">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt pos:start="63:1" pos:end="65:36"><if pos:start="63:1" pos:end="65:36">if<condition pos:start="63:3" pos:end="63:35">(<expr pos:start="63:4" pos:end="63:34"><name pos:start="63:4" pos:end="63:8">width</name><operator pos:start="63:9" pos:end="63:9">&gt;</operator><literal type="number" pos:start="63:10" pos:end="63:12">400</literal> <operator pos:start="63:14" pos:end="63:15">&amp;&amp;</operator> <name pos:start="63:17" pos:end="63:23">mirror0</name> <operator pos:start="63:25" pos:end="63:26">&lt;=</operator> <name pos:start="63:28" pos:end="63:34">mirror2</name></expr>)</condition><block pos:start="63:36" pos:end="65:36">{<block_content pos:start="65:1" pos:end="65:35">

<macro pos:start="65:1" pos:end="65:35"><name pos:start="65:1" pos:end="65:10">STOP_TIMER</name><argument_list pos:start="65:11" pos:end="65:35">(<argument pos:start="65:12" pos:end="65:34"><literal type="string" pos:start="65:12" pos:end="65:34">"horizontal_compose97i"</literal></argument>)</argument_list></macro></block_content>}</block></if></if_stmt></block_content>}</block>



    <expr_stmt pos:start="69:5" pos:end="69:14"><expr pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:10"><name pos:start="69:5" pos:end="69:6">cs</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:10">b0</name></name><operator pos:start="69:11" pos:end="69:11">=</operator><name pos:start="69:12" pos:end="69:13">b2</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:14"><expr pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:10"><name pos:start="71:5" pos:end="71:6">cs</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:10">b1</name></name><operator pos:start="71:11" pos:end="71:11">=</operator><name pos:start="71:12" pos:end="71:13">b3</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:14"><expr pos:start="73:5" pos:end="73:13"><name pos:start="73:5" pos:end="73:10"><name pos:start="73:5" pos:end="73:6">cs</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:10">b2</name></name><operator pos:start="73:11" pos:end="73:11">=</operator><name pos:start="73:12" pos:end="73:13">b4</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:14"><expr pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:10"><name pos:start="75:5" pos:end="75:6">cs</name><operator pos:start="75:7" pos:end="75:8">-&gt;</operator><name pos:start="75:9" pos:end="75:10">b3</name></name><operator pos:start="75:11" pos:end="75:11">=</operator><name pos:start="75:12" pos:end="75:13">b5</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:15"><expr pos:start="77:5" pos:end="77:14"><name pos:start="77:5" pos:end="77:9"><name pos:start="77:5" pos:end="77:6">cs</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:9">y</name></name> <operator pos:start="77:11" pos:end="77:12">+=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">2</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
