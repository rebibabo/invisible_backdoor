<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23539.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:29">parse_keyword</name><parameter_list pos:start="1:30" pos:end="1:54">(<parameter pos:start="1:31" pos:end="1:53"><decl pos:start="1:31" pos:end="1:53"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:47">JSONParserContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">ctxt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:16">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QObject</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">token</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:9">token</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <call pos:start="11:13" pos:end="11:42"><name pos:start="11:13" pos:end="11:36">parser_context_pop_token</name><argument_list pos:start="11:37" pos:end="11:42">(<argument pos:start="11:38" pos:end="11:41"><expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:59"><expr pos:start="13:5" pos:end="13:58"><call pos:start="13:5" pos:end="13:58"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:58">(<argument pos:start="13:12" pos:end="13:57"><expr pos:start="13:12" pos:end="13:57"><name pos:start="13:12" pos:end="13:16">token</name> <operator pos:start="13:18" pos:end="13:19">&amp;&amp;</operator> <call pos:start="13:21" pos:end="13:41"><name pos:start="13:21" pos:end="13:34">token_get_type</name><argument_list pos:start="13:35" pos:end="13:41">(<argument pos:start="13:36" pos:end="13:40"><expr pos:start="13:36" pos:end="13:40"><name pos:start="13:36" pos:end="13:40">token</name></expr></argument>)</argument_list></call> <operator pos:start="13:43" pos:end="13:44">==</operator> <name pos:start="13:46" pos:end="13:57">JSON_KEYWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:7">val</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:32"><name pos:start="15:11" pos:end="15:25">token_get_value</name><argument_list pos:start="15:26" pos:end="15:32">(<argument pos:start="15:27" pos:end="15:31"><expr pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:31">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:29">(<expr pos:start="19:9" pos:end="19:28"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:28"><name pos:start="19:10" pos:end="19:15">strcmp</name><argument_list pos:start="19:16" pos:end="19:28">(<argument pos:start="19:17" pos:end="19:19"><expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">val</name></expr></argument>, <argument pos:start="19:22" pos:end="19:27"><expr pos:start="19:22" pos:end="19:27"><literal type="string" pos:start="19:22" pos:end="19:27">"true"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:31" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:46">

        <return pos:start="21:9" pos:end="21:46">return <expr pos:start="21:16" pos:end="21:45"><call pos:start="21:16" pos:end="21:45"><name pos:start="21:16" pos:end="21:22">QOBJECT</name><argument_list pos:start="21:23" pos:end="21:45">(<argument pos:start="21:24" pos:end="21:44"><expr pos:start="21:24" pos:end="21:44"><call pos:start="21:24" pos:end="21:44"><name pos:start="21:24" pos:end="21:38">qbool_from_bool</name><argument_list pos:start="21:39" pos:end="21:44">(<argument pos:start="21:40" pos:end="21:43"><expr pos:start="21:40" pos:end="21:43"><name pos:start="21:40" pos:end="21:43">true</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="27:5">else if <condition pos:start="23:15" pos:end="23:37">(<expr pos:start="23:16" pos:end="23:36"><operator pos:start="23:16" pos:end="23:16">!</operator><call pos:start="23:17" pos:end="23:36"><name pos:start="23:17" pos:end="23:22">strcmp</name><argument_list pos:start="23:23" pos:end="23:36">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">val</name></expr></argument>, <argument pos:start="23:29" pos:end="23:35"><expr pos:start="23:29" pos:end="23:35"><literal type="string" pos:start="23:29" pos:end="23:35">"false"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:39" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:47">

        <return pos:start="25:9" pos:end="25:47">return <expr pos:start="25:16" pos:end="25:46"><call pos:start="25:16" pos:end="25:46"><name pos:start="25:16" pos:end="25:22">QOBJECT</name><argument_list pos:start="25:23" pos:end="25:46">(<argument pos:start="25:24" pos:end="25:45"><expr pos:start="25:24" pos:end="25:45"><call pos:start="25:24" pos:end="25:45"><name pos:start="25:24" pos:end="25:38">qbool_from_bool</name><argument_list pos:start="25:39" pos:end="25:45">(<argument pos:start="25:40" pos:end="25:44"><expr pos:start="25:40" pos:end="25:44"><name pos:start="25:40" pos:end="25:44">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="31:5">else if <condition pos:start="27:15" pos:end="27:36">(<expr pos:start="27:16" pos:end="27:35"><operator pos:start="27:16" pos:end="27:16">!</operator><call pos:start="27:17" pos:end="27:35"><name pos:start="27:17" pos:end="27:22">strcmp</name><argument_list pos:start="27:23" pos:end="27:35">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">val</name></expr></argument>, <argument pos:start="27:29" pos:end="27:34"><expr pos:start="27:29" pos:end="27:34"><literal type="string" pos:start="27:29" pos:end="27:34">"null"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:38" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><call pos:start="29:16" pos:end="29:22"><name pos:start="29:16" pos:end="29:20">qnull</name><argument_list pos:start="29:21" pos:end="29:22">()</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><call pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:15">parse_error</name><argument_list pos:start="33:16" pos:end="33:57">(<argument pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">ctxt</name></expr></argument>, <argument pos:start="33:23" pos:end="33:27"><expr pos:start="33:23" pos:end="33:27"><name pos:start="33:23" pos:end="33:27">token</name></expr></argument>, <argument pos:start="33:30" pos:end="33:51"><expr pos:start="33:30" pos:end="33:51"><literal type="string" pos:start="33:30" pos:end="33:51">"invalid keyword '%s'"</literal></expr></argument>, <argument pos:start="33:54" pos:end="33:56"><expr pos:start="33:54" pos:end="33:56"><name pos:start="33:54" pos:end="33:56">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:16">return <expr pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
