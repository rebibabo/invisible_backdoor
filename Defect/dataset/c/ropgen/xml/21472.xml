<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21472.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">iothread_stop_all</name><parameter_list pos:start="1:23" pos:end="1:28">(<parameter pos:start="1:24" pos:end="1:27"><decl pos:start="1:24" pos:end="1:27"><type pos:start="1:24" pos:end="1:27"><name pos:start="1:24" pos:end="1:27">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:57">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">Object</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:21">container</name> <init pos:start="5:23" pos:end="5:49">= <expr pos:start="5:25" pos:end="5:49"><call pos:start="5:25" pos:end="5:49"><name pos:start="5:25" pos:end="5:47">object_get_objects_root</name><argument_list pos:start="5:48" pos:end="5:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">BdrvNextIterator</name></type> <name pos:start="9:22" pos:end="9:23">it</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="29:5">for <control pos:start="13:9" pos:end="13:55">(<init pos:start="13:10" pos:end="13:30"><expr pos:start="13:10" pos:end="13:29"><name pos:start="13:10" pos:end="13:11">bs</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:29"><name pos:start="13:15" pos:end="13:24">bdrv_first</name><argument_list pos:start="13:25" pos:end="13:29">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:28">it</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:33"><name pos:start="13:32" pos:end="13:33">bs</name></expr>;</condition> <incr pos:start="13:36" pos:end="13:54"><expr pos:start="13:36" pos:end="13:54"><name pos:start="13:36" pos:end="13:37">bs</name> <operator pos:start="13:39" pos:end="13:39">=</operator> <call pos:start="13:41" pos:end="13:54"><name pos:start="13:41" pos:end="13:49">bdrv_next</name><argument_list pos:start="13:50" pos:end="13:54">(<argument pos:start="13:51" pos:end="13:53"><expr pos:start="13:51" pos:end="13:53"><operator pos:start="13:51" pos:end="13:51">&amp;</operator><name pos:start="13:52" pos:end="13:53">it</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="13:57" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:33">

        <decl_stmt pos:start="15:9" pos:end="15:51"><decl pos:start="15:9" pos:end="15:50"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">AioContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">ctx</name> <init pos:start="15:25" pos:end="15:50">= <expr pos:start="15:27" pos:end="15:50"><call pos:start="15:27" pos:end="15:50"><name pos:start="15:27" pos:end="15:46">bdrv_get_aio_context</name><argument_list pos:start="15:47" pos:end="15:50">(<argument pos:start="15:48" pos:end="15:49"><expr pos:start="15:48" pos:end="15:49"><name pos:start="15:48" pos:end="15:49">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:42">(<expr pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:15">ctx</name> <operator pos:start="17:17" pos:end="17:18">==</operator> <call pos:start="17:20" pos:end="17:41"><name pos:start="17:20" pos:end="17:39">qemu_get_aio_context</name><argument_list pos:start="17:40" pos:end="17:41">()</argument_list></call></expr>)</condition> <block pos:start="17:44" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><call pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:27">aio_context_acquire</name><argument_list pos:start="23:28" pos:end="23:32">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><call pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:28">bdrv_set_aio_context</name><argument_list pos:start="25:29" pos:end="25:56">(<argument pos:start="25:30" pos:end="25:31"><expr pos:start="25:30" pos:end="25:31"><name pos:start="25:30" pos:end="25:31">bs</name></expr></argument>, <argument pos:start="25:34" pos:end="25:55"><expr pos:start="25:34" pos:end="25:55"><call pos:start="25:34" pos:end="25:55"><name pos:start="25:34" pos:end="25:53">qemu_get_aio_context</name><argument_list pos:start="25:54" pos:end="25:55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:27">aio_context_release</name><argument_list pos:start="27:28" pos:end="27:32">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><call pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:24">object_child_foreach</name><argument_list pos:start="33:25" pos:end="33:56">(<argument pos:start="33:26" pos:end="33:34"><expr pos:start="33:26" pos:end="33:34"><name pos:start="33:26" pos:end="33:34">container</name></expr></argument>, <argument pos:start="33:37" pos:end="33:49"><expr pos:start="33:37" pos:end="33:49"><name pos:start="33:37" pos:end="33:49">iothread_stop</name></expr></argument>, <argument pos:start="33:52" pos:end="33:55"><expr pos:start="33:52" pos:end="33:55"><name pos:start="33:52" pos:end="33:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
