<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26769.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:5">GList</name> <modifier pos:start="1:7" pos:end="1:7">*</modifier></type><name pos:start="1:8" pos:end="1:24">range_list_insert</name><parameter_list pos:start="1:25" pos:end="1:50">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:36"><name pos:start="1:26" pos:end="1:30">GList</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:36">list</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:43">Range</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:16">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">GList</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:12">l</name></decl>, <decl pos:start="5:15" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:11"><modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">next</name> <init pos:start="5:21" pos:end="5:26">= <expr pos:start="5:23" pos:end="5:26"><name pos:start="5:23" pos:end="5:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Range</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:12">r</name></decl>, <decl pos:start="7:15" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">nextr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">list</name></expr>)</condition> <block pos:start="11:16" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:20">

        <expr_stmt pos:start="13:9" pos:end="13:63"><expr pos:start="13:9" pos:end="13:62"><name pos:start="13:9" pos:end="13:12">list</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:62"><name pos:start="13:16" pos:end="13:35">g_list_insert_sorted</name><argument_list pos:start="13:36" pos:end="13:62">(<argument pos:start="13:37" pos:end="13:40"><expr pos:start="13:37" pos:end="13:40"><name pos:start="13:37" pos:end="13:40">list</name></expr></argument>, <argument pos:start="13:43" pos:end="13:46"><expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">data</name></expr></argument>, <argument pos:start="13:49" pos:end="13:61"><expr pos:start="13:49" pos:end="13:61"><name pos:start="13:49" pos:end="13:61">range_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">list</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:9">nextr</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:16">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:5">l</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <name pos:start="23:9" pos:end="23:12">list</name></expr>;</expr_stmt>

    <while pos:start="25:5" pos:end="53:5">while <condition pos:start="25:11" pos:end="25:35">(<expr pos:start="25:12" pos:end="25:34"><name pos:start="25:12" pos:end="25:12">l</name> <operator pos:start="25:14" pos:end="25:15">&amp;&amp;</operator> <name pos:start="25:17" pos:end="25:17">l</name> <operator pos:start="25:19" pos:end="25:20">!=</operator> <name pos:start="25:22" pos:end="25:25">next</name> <operator pos:start="25:27" pos:end="25:28">&amp;&amp;</operator> <name pos:start="25:30" pos:end="25:34">nextr</name></expr>)</condition> <block pos:start="25:37" pos:end="53:5">{<block_content pos:start="27:9" pos:end="51:9">

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:13">l</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">data</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="51:9"><if pos:start="29:9" pos:end="47:9">if <condition pos:start="29:12" pos:end="29:39">(<expr pos:start="29:13" pos:end="29:38"><call pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:28">ranges_can_merge</name><argument_list pos:start="29:29" pos:end="29:38">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">r</name></expr></argument>, <argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37">nextr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:41" pos:end="47:9">{<block_content pos:start="31:13" pos:end="45:13">

            <expr_stmt pos:start="31:13" pos:end="31:34"><expr pos:start="31:13" pos:end="31:33"><call pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:23">range_merge</name><argument_list pos:start="31:24" pos:end="31:33">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">r</name></expr></argument>, <argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:32">nextr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:44"><expr pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:13">l</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:34">g_list_remove_link</name><argument_list pos:start="33:35" pos:end="33:43">(<argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><name pos:start="33:36" pos:end="33:36">l</name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:34"><expr pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:16">next</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:33"><name pos:start="35:20" pos:end="35:30">g_list_next</name><argument_list pos:start="35:31" pos:end="35:33">(<argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="45:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:21">(<expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:20">next</name></expr>)</condition> <block pos:start="37:23" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:35">

                <expr_stmt pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:21">nextr</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:34"><name pos:start="39:25" pos:end="39:28">next</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:34">data</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="41:15" pos:end="45:13">else <block pos:start="41:20" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:29">

                <expr_stmt pos:start="43:17" pos:end="43:29"><expr pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:21">nextr</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:28">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:31">

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:13">l</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:27">g_list_next</name><argument_list pos:start="49:28" pos:end="49:30">(<argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:11">(<expr pos:start="57:9" pos:end="57:10"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:10">l</name></expr>)</condition> <block pos:start="57:13" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:63">

        <expr_stmt pos:start="59:9" pos:end="59:63"><expr pos:start="59:9" pos:end="59:62"><name pos:start="59:9" pos:end="59:12">list</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:62"><name pos:start="59:16" pos:end="59:35">g_list_insert_sorted</name><argument_list pos:start="59:36" pos:end="59:62">(<argument pos:start="59:37" pos:end="59:40"><expr pos:start="59:37" pos:end="59:40"><name pos:start="59:37" pos:end="59:40">list</name></expr></argument>, <argument pos:start="59:43" pos:end="59:46"><expr pos:start="59:43" pos:end="59:46"><name pos:start="59:43" pos:end="59:46">data</name></expr></argument>, <argument pos:start="59:49" pos:end="59:61"><expr pos:start="59:49" pos:end="59:61"><name pos:start="59:49" pos:end="59:61">range_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="65:5" pos:end="65:16">return <expr pos:start="65:12" pos:end="65:15"><name pos:start="65:12" pos:end="65:15">list</name></expr>;</return>

</block_content>}</block></function>
</unit>
