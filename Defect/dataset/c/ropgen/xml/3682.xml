<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3682.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">parse_keyframes_index</name><parameter_list pos:start="1:33" pos:end="1:106">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><name pos:start="1:54" pos:end="1:64">AVIOContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">ioc</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:88"><decl pos:start="1:72" pos:end="1:88"><type pos:start="1:72" pos:end="1:88"><name pos:start="1:72" pos:end="1:79">AVStream</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:88">vstream</name></decl></parameter>, <parameter pos:start="1:91" pos:end="1:105"><decl pos:start="1:91" pos:end="1:105"><type pos:start="1:91" pos:end="1:105"><name pos:start="1:91" pos:end="1:97">int64_t</name></type> <name pos:start="1:99" pos:end="1:105">max_pos</name></decl></parameter>)</parameter_list> <block pos:start="1:108" pos:end="157:1">{<block_content pos:start="3:5" pos:end="155:15">

    <decl_stmt pos:start="3:5" pos:end="3:63"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:12">unsigned</name> <name pos:start="3:14" pos:end="3:16">int</name></type> <name pos:start="3:18" pos:end="3:25">arraylen</name> <init pos:start="3:27" pos:end="3:29">= <expr pos:start="3:29" pos:end="3:29"><literal type="number" pos:start="3:29" pos:end="3:29">0</literal></expr></init></decl>, <decl pos:start="3:32" pos:end="3:43"><type ref="prev" pos:start="3:5" pos:end="3:16"/><name pos:start="3:32" pos:end="3:39">timeslen</name> <init pos:start="3:41" pos:end="3:43">= <expr pos:start="3:43" pos:end="3:43"><literal type="number" pos:start="3:43" pos:end="3:43">0</literal></expr></init></decl>, <decl pos:start="3:46" pos:end="3:59"><type ref="prev" pos:start="3:5" pos:end="3:16"/><name pos:start="3:46" pos:end="3:55">fileposlen</name> <init pos:start="3:57" pos:end="3:59">= <expr pos:start="3:59" pos:end="3:59"><literal type="number" pos:start="3:59" pos:end="3:59">0</literal></expr></init></decl>, <decl pos:start="3:62" pos:end="3:62"><type ref="prev" pos:start="3:5" pos:end="3:16"/><name pos:start="3:62" pos:end="3:62">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">double</name></type> <name pos:start="5:12" pos:end="5:18">num_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:21"><name pos:start="7:10" pos:end="7:16">str_val</name><index pos:start="7:17" pos:end="7:21">[<expr pos:start="7:18" pos:end="7:20"><literal type="number" pos:start="7:18" pos:end="7:20">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int64_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">times</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int64_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:26">filepositions</name> <init pos:start="11:28" pos:end="11:33">= <expr pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:29">= <expr pos:start="13:15" pos:end="13:29"><call pos:start="13:15" pos:end="13:29"><name pos:start="13:15" pos:end="13:21">AVERROR</name><argument_list pos:start="13:22" pos:end="13:29">(<argument pos:start="13:23" pos:end="13:28"><expr pos:start="13:23" pos:end="13:28"><name pos:start="13:23" pos:end="13:28">ENOSYS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:23">initial_pos</name> <init pos:start="15:25" pos:end="15:40">= <expr pos:start="15:27" pos:end="15:40"><call pos:start="15:27" pos:end="15:40"><name pos:start="15:27" pos:end="15:35">avio_tell</name><argument_list pos:start="15:36" pos:end="15:40">(<argument pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">ioc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="19:54"><decl pos:start="17:5" pos:end="19:53"><type pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:21">AVDictionaryEntry</name> <modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:30">creator</name> <init pos:start="17:32" pos:end="19:53">= <expr pos:start="17:34" pos:end="19:53"><call pos:start="17:34" pos:end="19:53"><name pos:start="17:34" pos:end="17:44">av_dict_get</name><argument_list pos:start="17:45" pos:end="19:53">(<argument pos:start="17:46" pos:end="17:56"><expr pos:start="17:46" pos:end="17:56"><name pos:start="17:46" pos:end="17:56"><name pos:start="17:46" pos:end="17:46">s</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:56">metadata</name></name></expr></argument>, <argument pos:start="17:59" pos:end="17:75"><expr pos:start="17:59" pos:end="17:75"><literal type="string" pos:start="17:59" pos:end="17:75">"metadatacreator"</literal></expr></argument>,

                                             <argument pos:start="19:46" pos:end="19:49"><expr pos:start="19:46" pos:end="19:49"><name pos:start="19:46" pos:end="19:49">NULL</name></expr></argument>, <argument pos:start="19:52" pos:end="19:52"><expr pos:start="19:52" pos:end="19:52"><literal type="number" pos:start="19:52" pos:end="19:52">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:51">(<expr pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:15">creator</name> <operator pos:start="23:17" pos:end="23:18">&amp;&amp;</operator> <operator pos:start="23:20" pos:end="23:20">!</operator><call pos:start="23:21" pos:end="23:50"><name pos:start="23:21" pos:end="23:26">strcmp</name><argument_list pos:start="23:27" pos:end="23:50">(<argument pos:start="23:28" pos:end="23:41"><expr pos:start="23:28" pos:end="23:41"><name pos:start="23:28" pos:end="23:41"><name pos:start="23:28" pos:end="23:34">creator</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:41">value</name></name></expr></argument>, <argument pos:start="23:44" pos:end="23:49"><expr pos:start="23:44" pos:end="23:49"><literal type="string" pos:start="23:44" pos:end="23:49">"MEGA"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:53" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:17">

        <comment type="block" pos:start="25:9" pos:end="35:69">/* Files with this metadatacreator tag seem to have filepositions

         * pointing at the 4 trailer bytes of the previous packet,

         * which isn't the norm (nor what we expect here, nor what

         * jwplayer + lighttpd expect, nor what flvtool2 produces).

         * Just ignore the index in this case, instead of risking trying

         * to adjust it to something that might or might not work. */</comment>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="43:5" pos:end="125:5">while <condition pos:start="43:11" pos:end="43:93">(<expr pos:start="43:12" pos:end="43:92"><call pos:start="43:12" pos:end="43:25"><name pos:start="43:12" pos:end="43:20">avio_tell</name><argument_list pos:start="43:21" pos:end="43:25">(<argument pos:start="43:22" pos:end="43:24"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:24">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <name pos:start="43:29" pos:end="43:35">max_pos</name> <operator pos:start="43:37" pos:end="43:37">-</operator> <literal type="number" pos:start="43:39" pos:end="43:39">2</literal> <operator pos:start="43:41" pos:end="43:42">&amp;&amp;</operator> <call pos:start="43:44" pos:end="43:88"><name pos:start="43:44" pos:end="43:57">amf_get_string</name><argument_list pos:start="43:58" pos:end="43:88">(<argument pos:start="43:59" pos:end="43:61"><expr pos:start="43:59" pos:end="43:61"><name pos:start="43:59" pos:end="43:61">ioc</name></expr></argument>, <argument pos:start="43:64" pos:end="43:70"><expr pos:start="43:64" pos:end="43:70"><name pos:start="43:64" pos:end="43:70">str_val</name></expr></argument>, <argument pos:start="43:73" pos:end="43:87"><expr pos:start="43:73" pos:end="43:87"><sizeof pos:start="43:73" pos:end="43:87">sizeof<argument_list pos:start="43:79" pos:end="43:87">(<argument pos:start="43:80" pos:end="43:86"><expr pos:start="43:80" pos:end="43:86"><name pos:start="43:80" pos:end="43:86">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="43:90" pos:end="43:90">&gt;</operator> <literal type="number" pos:start="43:92" pos:end="43:92">0</literal></expr>)</condition> <block pos:start="43:95" pos:end="125:5">{<block_content pos:start="45:9" pos:end="123:9">

        <decl_stmt pos:start="45:9" pos:end="45:31"><decl pos:start="45:9" pos:end="45:30"><type pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:15">int64_t</name><modifier pos:start="45:16" pos:end="45:16">*</modifier></type> <name pos:start="45:18" pos:end="45:30">current_array</name></decl>;</decl_stmt>



        <comment type="line" pos:start="49:9" pos:end="49:41">// Expect array object in context</comment>

        <if_stmt pos:start="51:9" pos:end="53:18"><if pos:start="51:9" pos:end="53:18">if <condition pos:start="51:12" pos:end="51:48">(<expr pos:start="51:13" pos:end="51:47"><call pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:19">avio_r8</name><argument_list pos:start="51:20" pos:end="51:24">(<argument pos:start="51:21" pos:end="51:23"><expr pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="51:26" pos:end="51:27">!=</operator> <name pos:start="51:29" pos:end="51:47">AMF_DATA_TYPE_ARRAY</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:18"><block_content pos:start="53:13" pos:end="53:18">

            <break pos:start="53:13" pos:end="53:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:16">arraylen</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <call pos:start="57:20" pos:end="57:33"><name pos:start="57:20" pos:end="57:28">avio_rb32</name><argument_list pos:start="57:29" pos:end="57:33">(<argument pos:start="57:30" pos:end="57:32"><expr pos:start="57:30" pos:end="57:32"><name pos:start="57:30" pos:end="57:32">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="59:9" pos:end="65:11">/*

         * Expect only 'times' or 'filepositions' sub-arrays in other case refuse to use such metadata

         * for indexing

         */</comment>

        <if_stmt pos:start="67:9" pos:end="97:18"><if pos:start="67:9" pos:end="81:9">if <condition pos:start="67:12" pos:end="67:64">(<expr pos:start="67:13" pos:end="67:63"><operator pos:start="67:13" pos:end="67:13">!</operator><call pos:start="67:14" pos:end="67:53"><name pos:start="67:14" pos:end="67:19">strcmp</name><argument_list pos:start="67:20" pos:end="67:53">(<argument pos:start="67:21" pos:end="67:43"><expr pos:start="67:21" pos:end="67:43"><name pos:start="67:21" pos:end="67:43">KEYFRAMES_TIMESTAMP_TAG</name></expr></argument>, <argument pos:start="67:46" pos:end="67:52"><expr pos:start="67:46" pos:end="67:52"><name pos:start="67:46" pos:end="67:52">str_val</name></expr></argument>)</argument_list></call> <operator pos:start="67:55" pos:end="67:56">&amp;&amp;</operator> <operator pos:start="67:58" pos:end="67:58">!</operator><name pos:start="67:59" pos:end="67:63">times</name></expr>)</condition> <block pos:start="67:66" pos:end="81:9">{<block_content pos:start="69:13" pos:end="79:34">

            <if_stmt pos:start="69:13" pos:end="75:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:65">(<expr pos:start="69:17" pos:end="69:64"><operator pos:start="69:17" pos:end="69:17">!</operator><operator pos:start="69:18" pos:end="69:18">(</operator><name pos:start="69:19" pos:end="69:23">times</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:63"><name pos:start="69:27" pos:end="69:36">av_mallocz</name><argument_list pos:start="69:37" pos:end="69:63">(<argument pos:start="69:38" pos:end="69:62"><expr pos:start="69:38" pos:end="69:62"><sizeof pos:start="69:38" pos:end="69:51">sizeof<argument_list pos:start="69:44" pos:end="69:51">(<argument pos:start="69:45" pos:end="69:50"><expr pos:start="69:45" pos:end="69:50"><operator pos:start="69:45" pos:end="69:45">*</operator><name pos:start="69:46" pos:end="69:50">times</name></expr></argument>)</argument_list></sizeof> <operator pos:start="69:53" pos:end="69:53">*</operator> <name pos:start="69:55" pos:end="69:62">arraylen</name></expr></argument>)</argument_list></call><operator pos:start="69:64" pos:end="69:64">)</operator></expr>)</condition> <block pos:start="69:67" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:28">

                <expr_stmt pos:start="71:17" pos:end="71:38"><expr pos:start="71:17" pos:end="71:37"><name pos:start="71:17" pos:end="71:19">ret</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <call pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:29">AVERROR</name><argument_list pos:start="71:30" pos:end="71:37">(<argument pos:start="71:31" pos:end="71:36"><expr pos:start="71:31" pos:end="71:36"><name pos:start="71:31" pos:end="71:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="73:17" pos:end="73:28">goto <name pos:start="73:22" pos:end="73:27">finish</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:32"><expr pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:20">timeslen</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:31">arraylen</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:34"><expr pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:25">current_array</name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:33">times</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="81:11" pos:end="95:9">else if <condition pos:start="81:19" pos:end="81:80">(<expr pos:start="81:20" pos:end="81:79"><operator pos:start="81:20" pos:end="81:20">!</operator><call pos:start="81:21" pos:end="81:61"><name pos:start="81:21" pos:end="81:26">strcmp</name><argument_list pos:start="81:27" pos:end="81:61">(<argument pos:start="81:28" pos:end="81:51"><expr pos:start="81:28" pos:end="81:51"><name pos:start="81:28" pos:end="81:51">KEYFRAMES_BYTEOFFSET_TAG</name></expr></argument>, <argument pos:start="81:54" pos:end="81:60"><expr pos:start="81:54" pos:end="81:60"><name pos:start="81:54" pos:end="81:60">str_val</name></expr></argument>)</argument_list></call> <operator pos:start="81:63" pos:end="81:64">&amp;&amp;</operator> <operator pos:start="81:66" pos:end="81:66">!</operator><name pos:start="81:67" pos:end="81:79">filepositions</name></expr>)</condition> <block pos:start="81:82" pos:end="95:9">{<block_content pos:start="83:13" pos:end="93:42">

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:81">(<expr pos:start="83:17" pos:end="83:80"><operator pos:start="83:17" pos:end="83:17">!</operator><operator pos:start="83:18" pos:end="83:18">(</operator><name pos:start="83:19" pos:end="83:31">filepositions</name> <operator pos:start="83:33" pos:end="83:33">=</operator> <call pos:start="83:35" pos:end="83:79"><name pos:start="83:35" pos:end="83:44">av_mallocz</name><argument_list pos:start="83:45" pos:end="83:79">(<argument pos:start="83:46" pos:end="83:78"><expr pos:start="83:46" pos:end="83:78"><sizeof pos:start="83:46" pos:end="83:67">sizeof<argument_list pos:start="83:52" pos:end="83:67">(<argument pos:start="83:53" pos:end="83:66"><expr pos:start="83:53" pos:end="83:66"><operator pos:start="83:53" pos:end="83:53">*</operator><name pos:start="83:54" pos:end="83:66">filepositions</name></expr></argument>)</argument_list></sizeof> <operator pos:start="83:69" pos:end="83:69">*</operator> <name pos:start="83:71" pos:end="83:78">arraylen</name></expr></argument>)</argument_list></call><operator pos:start="83:80" pos:end="83:80">)</operator></expr>)</condition> <block pos:start="83:83" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:28">

                <expr_stmt pos:start="85:17" pos:end="85:38"><expr pos:start="85:17" pos:end="85:37"><name pos:start="85:17" pos:end="85:19">ret</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:37"><name pos:start="85:23" pos:end="85:29">AVERROR</name><argument_list pos:start="85:30" pos:end="85:37">(<argument pos:start="85:31" pos:end="85:36"><expr pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="87:17" pos:end="87:28">goto <name pos:start="87:22" pos:end="87:27">finish</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:34"><expr pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:22">fileposlen</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <name pos:start="91:26" pos:end="91:33">arraylen</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:42"><expr pos:start="93:13" pos:end="93:41"><name pos:start="93:13" pos:end="93:25">current_array</name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:41">filepositions</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="97:18">else<block type="pseudo" pos:start="97:13" pos:end="97:18"><block_content pos:start="97:13" pos:end="97:18"> <comment type="line" pos:start="95:16" pos:end="95:94">// unexpected metatag inside keyframes, will not use such metadata for indexing</comment>

            <break pos:start="97:13" pos:end="97:18">break;</break></block_content></block></else></if_stmt>



        <for pos:start="101:9" pos:end="111:9">for <control pos:start="101:13" pos:end="101:70">(<init pos:start="101:14" pos:end="101:19"><expr pos:start="101:14" pos:end="101:18"><name pos:start="101:14" pos:end="101:14">i</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</init> <condition pos:start="101:21" pos:end="101:65"><expr pos:start="101:21" pos:end="101:64"><name pos:start="101:21" pos:end="101:21">i</name> <operator pos:start="101:23" pos:end="101:23">&lt;</operator> <name pos:start="101:25" pos:end="101:32">arraylen</name> <operator pos:start="101:34" pos:end="101:35">&amp;&amp;</operator> <call pos:start="101:37" pos:end="101:50"><name pos:start="101:37" pos:end="101:45">avio_tell</name><argument_list pos:start="101:46" pos:end="101:50">(<argument pos:start="101:47" pos:end="101:49"><expr pos:start="101:47" pos:end="101:49"><name pos:start="101:47" pos:end="101:49">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="101:52" pos:end="101:52">&lt;</operator> <name pos:start="101:54" pos:end="101:60">max_pos</name> <operator pos:start="101:62" pos:end="101:62">-</operator> <literal type="number" pos:start="101:64" pos:end="101:64">1</literal></expr>;</condition> <incr pos:start="101:67" pos:end="101:69"><expr pos:start="101:67" pos:end="101:69"><name pos:start="101:67" pos:end="101:67">i</name><operator pos:start="101:68" pos:end="101:69">++</operator></expr></incr>)</control> <block pos:start="101:72" pos:end="111:9">{<block_content pos:start="103:13" pos:end="109:39">

            <if_stmt pos:start="103:13" pos:end="105:28"><if pos:start="103:13" pos:end="105:28">if <condition pos:start="103:16" pos:end="103:53">(<expr pos:start="103:17" pos:end="103:52"><call pos:start="103:17" pos:end="103:28"><name pos:start="103:17" pos:end="103:23">avio_r8</name><argument_list pos:start="103:24" pos:end="103:28">(<argument pos:start="103:25" pos:end="103:27"><expr pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:27">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="103:30" pos:end="103:31">!=</operator> <name pos:start="103:33" pos:end="103:52">AMF_DATA_TYPE_NUMBER</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:28"><block_content pos:start="105:17" pos:end="105:28">

                <goto pos:start="105:17" pos:end="105:28">goto <name pos:start="105:22" pos:end="105:27">finish</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:49"><expr pos:start="107:13" pos:end="107:48"><name pos:start="107:13" pos:end="107:19">num_val</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <call pos:start="107:23" pos:end="107:48"><name pos:start="107:23" pos:end="107:32">av_int2dbl</name><argument_list pos:start="107:33" pos:end="107:48">(<argument pos:start="107:34" pos:end="107:47"><expr pos:start="107:34" pos:end="107:47"><call pos:start="107:34" pos:end="107:47"><name pos:start="107:34" pos:end="107:42">avio_rb64</name><argument_list pos:start="107:43" pos:end="107:47">(<argument pos:start="107:44" pos:end="107:46"><expr pos:start="107:44" pos:end="107:46"><name pos:start="107:44" pos:end="107:46">ioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:39"><expr pos:start="109:13" pos:end="109:38"><name pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:25">current_array</name><index pos:start="109:26" pos:end="109:28">[<expr pos:start="109:27" pos:end="109:27"><name pos:start="109:27" pos:end="109:27">i</name></expr>]</index></name> <operator pos:start="109:30" pos:end="109:30">=</operator> <name pos:start="109:32" pos:end="109:38">num_val</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="113:9" pos:end="123:9"><if pos:start="113:9" pos:end="123:9">if <condition pos:start="113:12" pos:end="113:35">(<expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:17">times</name> <operator pos:start="113:19" pos:end="113:20">&amp;&amp;</operator> <name pos:start="113:22" pos:end="113:34">filepositions</name></expr>)</condition> <block pos:start="113:37" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:18">

            <comment type="line" pos:start="115:13" pos:end="115:72">// All done, exiting at a position allowing amf_parse_object</comment>

            <comment type="line" pos:start="117:13" pos:end="117:43">// to finish parsing the object</comment>

            <expr_stmt pos:start="119:13" pos:end="119:20"><expr pos:start="119:13" pos:end="119:19"><name pos:start="119:13" pos:end="119:15">ret</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <literal type="number" pos:start="119:19" pos:end="119:19">0</literal></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="129:5" pos:end="137:75"><if pos:start="129:5" pos:end="133:98">if <condition pos:start="129:8" pos:end="129:31">(<expr pos:start="129:9" pos:end="129:30"><name pos:start="129:9" pos:end="129:16">timeslen</name> <operator pos:start="129:18" pos:end="129:19">==</operator> <name pos:start="129:21" pos:end="129:30">fileposlen</name></expr>)</condition><block type="pseudo" pos:start="131:10" pos:end="133:98"><block_content pos:start="131:10" pos:end="133:98">

         <for pos:start="131:10" pos:end="133:98">for<control pos:start="131:13" pos:end="131:38">(<init pos:start="131:14" pos:end="131:19"><expr pos:start="131:14" pos:end="131:18"><name pos:start="131:14" pos:end="131:14">i</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="number" pos:start="131:18" pos:end="131:18">0</literal></expr>;</init> <condition pos:start="131:21" pos:end="131:33"><expr pos:start="131:21" pos:end="131:32"><name pos:start="131:21" pos:end="131:21">i</name> <operator pos:start="131:23" pos:end="131:23">&lt;</operator> <name pos:start="131:25" pos:end="131:32">arraylen</name></expr>;</condition> <incr pos:start="131:35" pos:end="131:37"><expr pos:start="131:35" pos:end="131:37"><name pos:start="131:35" pos:end="131:35">i</name><operator pos:start="131:36" pos:end="131:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:14" pos:end="133:98"><block_content pos:start="133:14" pos:end="133:98">

             <expr_stmt pos:start="133:14" pos:end="133:98"><expr pos:start="133:14" pos:end="133:97"><call pos:start="133:14" pos:end="133:97"><name pos:start="133:14" pos:end="133:31">av_add_index_entry</name><argument_list pos:start="133:32" pos:end="133:97">(<argument pos:start="133:33" pos:end="133:39"><expr pos:start="133:33" pos:end="133:39"><name pos:start="133:33" pos:end="133:39">vstream</name></expr></argument>, <argument pos:start="133:42" pos:end="133:57"><expr pos:start="133:42" pos:end="133:57"><name pos:start="133:42" pos:end="133:57"><name pos:start="133:42" pos:end="133:54">filepositions</name><index pos:start="133:55" pos:end="133:57">[<expr pos:start="133:56" pos:end="133:56"><name pos:start="133:56" pos:end="133:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="133:60" pos:end="133:72"><expr pos:start="133:60" pos:end="133:72"><name pos:start="133:60" pos:end="133:67"><name pos:start="133:60" pos:end="133:64">times</name><index pos:start="133:65" pos:end="133:67">[<expr pos:start="133:66" pos:end="133:66"><name pos:start="133:66" pos:end="133:66">i</name></expr>]</index></name><operator pos:start="133:68" pos:end="133:68">*</operator><literal type="number" pos:start="133:69" pos:end="133:72">1000</literal></expr></argument>, <argument pos:start="133:75" pos:end="133:75"><expr pos:start="133:75" pos:end="133:75"><literal type="number" pos:start="133:75" pos:end="133:75">0</literal></expr></argument>, <argument pos:start="133:78" pos:end="133:78"><expr pos:start="133:78" pos:end="133:78"><literal type="number" pos:start="133:78" pos:end="133:78">0</literal></expr></argument>, <argument pos:start="133:81" pos:end="133:96"><expr pos:start="133:81" pos:end="133:96"><name pos:start="133:81" pos:end="133:96">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if>

    <else pos:start="135:5" pos:end="137:75">else<block type="pseudo" pos:start="137:9" pos:end="137:75"><block_content pos:start="137:9" pos:end="137:75">

        <expr_stmt pos:start="137:9" pos:end="137:75"><expr pos:start="137:9" pos:end="137:74"><call pos:start="137:9" pos:end="137:74"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="137:74">(<argument pos:start="137:16" pos:end="137:16"><expr pos:start="137:16" pos:end="137:16"><name pos:start="137:16" pos:end="137:16">s</name></expr></argument>, <argument pos:start="137:19" pos:end="137:32"><expr pos:start="137:19" pos:end="137:32"><name pos:start="137:19" pos:end="137:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="137:35" pos:end="137:73"><expr pos:start="137:35" pos:end="137:73"><literal type="string" pos:start="137:35" pos:end="137:73">"Invalid keyframes object, skipping.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<label pos:start="141:1" pos:end="141:7"><name pos:start="141:1" pos:end="141:6">finish</name>:</label>

    <expr_stmt pos:start="143:5" pos:end="143:21"><expr pos:start="143:5" pos:end="143:20"><call pos:start="143:5" pos:end="143:20"><name pos:start="143:5" pos:end="143:12">av_freep</name><argument_list pos:start="143:13" pos:end="143:20">(<argument pos:start="143:14" pos:end="143:19"><expr pos:start="143:14" pos:end="143:19"><operator pos:start="143:14" pos:end="143:14">&amp;</operator><name pos:start="143:15" pos:end="143:19">times</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:29"><expr pos:start="145:5" pos:end="145:28"><call pos:start="145:5" pos:end="145:28"><name pos:start="145:5" pos:end="145:12">av_freep</name><argument_list pos:start="145:13" pos:end="145:28">(<argument pos:start="145:14" pos:end="145:27"><expr pos:start="145:14" pos:end="145:27"><operator pos:start="145:14" pos:end="145:14">&amp;</operator><name pos:start="145:15" pos:end="145:27">filepositions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="147:5" pos:end="147:64">// If we got unexpected data, but successfully reset back to</comment>

    <comment type="line" pos:start="149:5" pos:end="149:53">// the start pos, the caller can continue parsing</comment>

    <if_stmt pos:start="151:5" pos:end="153:17"><if pos:start="151:5" pos:end="153:17">if <condition pos:start="151:8" pos:end="151:61">(<expr pos:start="151:9" pos:end="151:60"><name pos:start="151:9" pos:end="151:58"><name pos:start="151:9" pos:end="151:11">ret</name> <argument_list type="generic" pos:start="151:13" pos:end="151:58">&lt; <argument pos:start="151:15" pos:end="151:56"><expr pos:start="151:15" pos:end="151:56"><literal type="number" pos:start="151:15" pos:end="151:15">0</literal> <operator pos:start="151:17" pos:end="151:18">&amp;&amp;</operator> <name pos:start="151:20" pos:end="151:28">avio_seek</name><operator pos:start="151:29" pos:end="151:29">(</operator><name pos:start="151:30" pos:end="151:32">ioc</name>, <name pos:start="151:35" pos:end="151:45">initial_pos</name>, <name pos:start="151:48" pos:end="151:55">SEEK_SET</name><operator pos:start="151:56" pos:end="151:56">)</operator></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="151:60" pos:end="151:60">0</literal></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:17"><block_content pos:start="153:9" pos:end="153:17">

        <return pos:start="153:9" pos:end="153:17">return <expr pos:start="153:16" pos:end="153:16"><literal type="number" pos:start="153:16" pos:end="153:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="155:5" pos:end="155:15">return <expr pos:start="155:12" pos:end="155:14"><name pos:start="155:12" pos:end="155:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
