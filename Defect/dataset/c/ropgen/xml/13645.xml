<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13645.c" pos:tabs="8"><function pos:start="1:1" pos:end="140:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">vga_update_text</name><parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:64"><decl pos:start="1:43" pos:end="1:64"><type pos:start="1:43" pos:end="1:64"><name pos:start="1:43" pos:end="1:54">console_ch_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">chardata</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="140:1">{<block_content pos:start="3:5" pos:end="139:51">
    <decl_stmt pos:start="3:5" pos:end="3:32"><decl pos:start="3:5" pos:end="3:31"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">VGACommonState</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">s</name> <init pos:start="3:23" pos:end="3:31">=  <expr pos:start="3:26" pos:end="3:31"><name pos:start="3:26" pos:end="3:31">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:55"><decl pos:start="4:5" pos:end="4:20"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:20">graphic_mode</name></decl>, <decl pos:start="4:23" pos:end="4:23"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:23" pos:end="4:23">i</name></decl>, <decl pos:start="4:26" pos:end="4:38"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:26" pos:end="4:38">cursor_offset</name></decl>, <decl pos:start="4:41" pos:end="4:54"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:41" pos:end="4:54">cursor_visible</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">cw</name></decl>, <decl pos:start="5:13" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:19">cheight</name></decl>, <decl pos:start="5:22" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:26">width</name></decl>, <decl pos:start="5:29" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:34">height</name></decl>, <decl pos:start="5:37" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:40">size</name></decl>, <decl pos:start="5:43" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:43" pos:end="5:47">c_min</name></decl>, <decl pos:start="5:50" pos:end="5:54"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:50" pos:end="5:54">c_max</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:12">uint32_t</name> <modifier pos:start="6:14" pos:end="6:14">*</modifier></type><name pos:start="6:15" pos:end="6:17">src</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">console_ch_t</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">dst</name></decl>, <decl pos:start="7:24" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:18"/><name pos:start="7:24" pos:end="7:26">val</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:24"><decl pos:start="8:5" pos:end="8:23"><type pos:start="8:5" pos:end="8:8"><name pos:start="8:5" pos:end="8:8">char</name></type> <name pos:start="8:10" pos:end="8:23"><name pos:start="8:10" pos:end="8:19">msg_buffer</name><index pos:start="8:20" pos:end="8:23">[<expr pos:start="8:21" pos:end="8:22"><literal type="number" pos:start="8:21" pos:end="8:22">80</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">full_update</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="10:5" pos:end="14:5"><if pos:start="10:5" pos:end="12:5">if <condition pos:start="10:8" pos:end="10:30">(<expr pos:start="10:9" pos:end="10:29"><operator pos:start="10:9" pos:end="10:9">!</operator><operator pos:start="10:10" pos:end="10:10">(</operator><name pos:start="10:11" pos:end="10:21"><name pos:start="10:11" pos:end="10:11">s</name><operator pos:start="10:12" pos:end="10:13">-&gt;</operator><name pos:start="10:14" pos:end="10:21">ar_index</name></name> <operator pos:start="10:23" pos:end="10:23">&amp;</operator> <literal type="number" pos:start="10:25" pos:end="10:28">0x20</literal><operator pos:start="10:29" pos:end="10:29">)</operator></expr>)</condition> <block pos:start="10:32" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:35">
        <expr_stmt pos:start="11:9" pos:end="11:35"><expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:20">graphic_mode</name> <operator pos:start="11:22" pos:end="11:22">=</operator> <name pos:start="11:24" pos:end="11:34">GMODE_BLANK</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="12:7" pos:end="14:5">else <block pos:start="12:12" pos:end="14:5">{<block_content pos:start="13:9" pos:end="13:36">
        <expr_stmt pos:start="13:9" pos:end="13:36"><expr pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:20">graphic_mode</name> <operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:31"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:28">gr</name><index pos:start="13:29" pos:end="13:31">[<expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">6</literal></expr>]</index></name> <operator pos:start="13:33" pos:end="13:33">&amp;</operator> <literal type="number" pos:start="13:35" pos:end="13:35">1</literal></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <if_stmt pos:start="15:5" pos:end="18:5"><if pos:start="15:5" pos:end="18:5">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:20">graphic_mode</name> <operator pos:start="15:22" pos:end="15:23">!=</operator> <name pos:start="15:25" pos:end="15:39"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:39">graphic_mode</name></name></expr>)</condition> <block pos:start="15:42" pos:end="18:5">{<block_content pos:start="16:9" pos:end="17:24">
        <expr_stmt pos:start="16:9" pos:end="16:39"><expr pos:start="16:9" pos:end="16:38"><name pos:start="16:9" pos:end="16:23"><name pos:start="16:9" pos:end="16:9">s</name><operator pos:start="16:10" pos:end="16:11">-&gt;</operator><name pos:start="16:12" pos:end="16:23">graphic_mode</name></name> <operator pos:start="16:25" pos:end="16:25">=</operator> <name pos:start="16:27" pos:end="16:38">graphic_mode</name></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:19">full_update</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="19:5" pos:end="22:5"><if pos:start="19:5" pos:end="22:5">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:21">last_width</name></name> <operator pos:start="19:23" pos:end="19:24">==</operator> <operator pos:start="19:26" pos:end="19:26">-</operator><literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr>)</condition> <block pos:start="19:30" pos:end="22:5">{<block_content pos:start="20:9" pos:end="21:24">
        <expr_stmt pos:start="20:9" pos:end="20:26"><expr pos:start="20:9" pos:end="20:25"><name pos:start="20:9" pos:end="20:21"><name pos:start="20:9" pos:end="20:9">s</name><operator pos:start="20:10" pos:end="20:11">-&gt;</operator><name pos:start="20:12" pos:end="20:21">last_width</name></name> <operator pos:start="20:23" pos:end="20:23">=</operator> <literal type="number" pos:start="20:25" pos:end="20:25">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:19">full_update</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <literal type="number" pos:start="21:23" pos:end="21:23">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <switch pos:start="23:5" pos:end="124:5">switch <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:24">graphic_mode</name></expr>)</condition> <block pos:start="23:27" pos:end="124:5">{<block_content pos:start="24:5" pos:end="123:14">
    <case pos:start="24:5" pos:end="24:20">case <expr pos:start="24:10" pos:end="24:19"><name pos:start="24:10" pos:end="24:19">GMODE_TEXT</name></expr>:</case>
        <comment type="block" pos:start="25:9" pos:end="25:34">/* TODO: update palette */</comment>
        <expr_stmt pos:start="26:9" pos:end="26:46"><expr pos:start="26:9" pos:end="26:45"><name pos:start="26:9" pos:end="26:19">full_update</name> <operator pos:start="26:21" pos:end="26:22">|=</operator> <call pos:start="26:24" pos:end="26:45"><name pos:start="26:24" pos:end="26:42">update_basic_params</name><argument_list pos:start="26:43" pos:end="26:45">(<argument pos:start="26:44" pos:end="26:44"><expr pos:start="26:44" pos:end="26:44"><name pos:start="26:44" pos:end="26:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="27:9" pos:end="27:34">/* total width &amp; height */</comment>
        <expr_stmt pos:start="28:9" pos:end="28:40"><expr pos:start="28:9" pos:end="28:39"><name pos:start="28:9" pos:end="28:15">cheight</name> <operator pos:start="28:17" pos:end="28:17">=</operator> <operator pos:start="28:19" pos:end="28:19">(</operator><name pos:start="28:20" pos:end="28:27"><name pos:start="28:20" pos:end="28:20">s</name><operator pos:start="28:21" pos:end="28:22">-&gt;</operator><name pos:start="28:23" pos:end="28:24">cr</name><index pos:start="28:25" pos:end="28:27">[<expr pos:start="28:26" pos:end="28:26"><literal type="number" pos:start="28:26" pos:end="28:26">9</literal></expr>]</index></name> <operator pos:start="28:29" pos:end="28:29">&amp;</operator> <literal type="number" pos:start="28:31" pos:end="28:34">0x1f</literal><operator pos:start="28:35" pos:end="28:35">)</operator> <operator pos:start="28:37" pos:end="28:37">+</operator> <literal type="number" pos:start="28:39" pos:end="28:39">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:15"><expr pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:10">cw</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">8</literal></expr>;</expr_stmt>
        <if_stmt pos:start="30:9" pos:end="31:19"><if pos:start="30:9" pos:end="31:19">if <condition pos:start="30:12" pos:end="30:31">(<expr pos:start="30:13" pos:end="30:30"><operator pos:start="30:13" pos:end="30:13">!</operator><operator pos:start="30:14" pos:end="30:14">(</operator><name pos:start="30:15" pos:end="30:22"><name pos:start="30:15" pos:end="30:15">s</name><operator pos:start="30:16" pos:end="30:17">-&gt;</operator><name pos:start="30:18" pos:end="30:19">sr</name><index pos:start="30:20" pos:end="30:22">[<expr pos:start="30:21" pos:end="30:21"><literal type="number" pos:start="30:21" pos:end="30:21">1</literal></expr>]</index></name> <operator pos:start="30:24" pos:end="30:24">&amp;</operator> <literal type="number" pos:start="30:26" pos:end="30:29">0x01</literal><operator pos:start="30:30" pos:end="30:30">)</operator></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:19"><block_content pos:start="31:13" pos:end="31:19">
            <expr_stmt pos:start="31:13" pos:end="31:19"><expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:14">cw</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="32:9" pos:end="33:20"><if pos:start="32:9" pos:end="33:20">if <condition pos:start="32:12" pos:end="32:28">(<expr pos:start="32:13" pos:end="32:27"><name pos:start="32:13" pos:end="32:20"><name pos:start="32:13" pos:end="32:13">s</name><operator pos:start="32:14" pos:end="32:15">-&gt;</operator><name pos:start="32:16" pos:end="32:17">sr</name><index pos:start="32:18" pos:end="32:20">[<expr pos:start="32:19" pos:end="32:19"><literal type="number" pos:start="32:19" pos:end="32:19">1</literal></expr>]</index></name> <operator pos:start="32:22" pos:end="32:22">&amp;</operator> <literal type="number" pos:start="32:24" pos:end="32:27">0x08</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:20"><block_content pos:start="33:13" pos:end="33:20">
            <expr_stmt pos:start="33:13" pos:end="33:20"><expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:14">cw</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:19">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="33:22" pos:end="33:49">/* NOTE: no 18 pixel wide */</comment>
        <expr_stmt pos:start="34:9" pos:end="34:34"><expr pos:start="34:9" pos:end="34:33"><name pos:start="34:9" pos:end="34:13">width</name> <operator pos:start="34:15" pos:end="34:15">=</operator> <operator pos:start="34:17" pos:end="34:17">(</operator><name pos:start="34:18" pos:end="34:28"><name pos:start="34:18" pos:end="34:18">s</name><operator pos:start="34:19" pos:end="34:20">-&gt;</operator><name pos:start="34:21" pos:end="34:22">cr</name><index pos:start="34:23" pos:end="34:28">[<expr pos:start="34:24" pos:end="34:27"><literal type="number" pos:start="34:24" pos:end="34:27">0x01</literal></expr>]</index></name> <operator pos:start="34:30" pos:end="34:30">+</operator> <literal type="number" pos:start="34:32" pos:end="34:32">1</literal><operator pos:start="34:33" pos:end="34:33">)</operator></expr>;</expr_stmt>
        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="38:9">if <condition pos:start="35:12" pos:end="35:31">(<expr pos:start="35:13" pos:end="35:30"><name pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">cr</name><index pos:start="35:18" pos:end="35:23">[<expr pos:start="35:19" pos:end="35:22"><literal type="number" pos:start="35:19" pos:end="35:22">0x06</literal></expr>]</index></name> <operator pos:start="35:25" pos:end="35:26">==</operator> <literal type="number" pos:start="35:28" pos:end="35:30">100</literal></expr>)</condition> <block pos:start="35:33" pos:end="38:9">{<block_content pos:start="37:13" pos:end="37:25">
            <comment type="block" pos:start="36:13" pos:end="36:69">/* ugly hack for CGA 160x100x16 - explain me the logic */</comment>
            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:18">height</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:24">100</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="38:11" pos:end="43:9">else <block pos:start="38:16" pos:end="43:9">{<block_content pos:start="39:13" pos:end="42:44">
            <expr_stmt pos:start="39:13" pos:end="41:44"><expr pos:start="39:13" pos:end="41:43"><name pos:start="39:13" pos:end="39:18">height</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:32"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:26">cr</name><index pos:start="39:27" pos:end="39:32">[<expr pos:start="39:28" pos:end="39:31"><literal type="number" pos:start="39:28" pos:end="39:31">0x12</literal></expr>]</index></name> <operator pos:start="39:34" pos:end="39:34">|</operator> 
                <operator pos:start="40:17" pos:end="40:17">(</operator><operator pos:start="40:18" pos:end="40:18">(</operator><name pos:start="40:19" pos:end="40:29"><name pos:start="40:19" pos:end="40:19">s</name><operator pos:start="40:20" pos:end="40:21">-&gt;</operator><name pos:start="40:22" pos:end="40:23">cr</name><index pos:start="40:24" pos:end="40:29">[<expr pos:start="40:25" pos:end="40:28"><literal type="number" pos:start="40:25" pos:end="40:28">0x07</literal></expr>]</index></name> <operator pos:start="40:31" pos:end="40:31">&amp;</operator> <literal type="number" pos:start="40:33" pos:end="40:36">0x02</literal><operator pos:start="40:37" pos:end="40:37">)</operator> <operator pos:start="40:39" pos:end="40:40">&lt;&lt;</operator> <literal type="number" pos:start="40:42" pos:end="40:42">7</literal><operator pos:start="40:43" pos:end="40:43">)</operator> <operator pos:start="40:45" pos:end="40:45">|</operator> 
                <operator pos:start="41:17" pos:end="41:17">(</operator><operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:29"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">cr</name><index pos:start="41:24" pos:end="41:29">[<expr pos:start="41:25" pos:end="41:28"><literal type="number" pos:start="41:25" pos:end="41:28">0x07</literal></expr>]</index></name> <operator pos:start="41:31" pos:end="41:31">&amp;</operator> <literal type="number" pos:start="41:33" pos:end="41:36">0x40</literal><operator pos:start="41:37" pos:end="41:37">)</operator> <operator pos:start="41:39" pos:end="41:40">&lt;&lt;</operator> <literal type="number" pos:start="41:42" pos:end="41:42">3</literal><operator pos:start="41:43" pos:end="41:43">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:44"><expr pos:start="42:13" pos:end="42:43"><name pos:start="42:13" pos:end="42:18">height</name> <operator pos:start="42:20" pos:end="42:20">=</operator> <operator pos:start="42:22" pos:end="42:22">(</operator><name pos:start="42:23" pos:end="42:28">height</name> <operator pos:start="42:30" pos:end="42:30">+</operator> <literal type="number" pos:start="42:32" pos:end="42:32">1</literal><operator pos:start="42:33" pos:end="42:33">)</operator> <operator pos:start="42:35" pos:end="42:35">/</operator> <name pos:start="42:37" pos:end="42:43">cheight</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:32"><expr pos:start="44:9" pos:end="44:31"><name pos:start="44:9" pos:end="44:12">size</name> <operator pos:start="44:14" pos:end="44:14">=</operator> <operator pos:start="44:16" pos:end="44:16">(</operator><name pos:start="44:17" pos:end="44:22">height</name> <operator pos:start="44:24" pos:end="44:24">*</operator> <name pos:start="44:26" pos:end="44:30">width</name><operator pos:start="44:31" pos:end="44:31">)</operator></expr>;</expr_stmt>
        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:32">(<expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:16">size</name> <operator pos:start="45:18" pos:end="45:18">&gt;</operator> <name pos:start="45:20" pos:end="45:31">CH_ATTR_SIZE</name></expr>)</condition> <block pos:start="45:34" pos:end="51:9">{<block_content pos:start="46:13" pos:end="50:18">
            <if_stmt pos:start="46:13" pos:end="47:23"><if pos:start="46:13" pos:end="47:23">if <condition pos:start="46:16" pos:end="46:29">(<expr pos:start="46:17" pos:end="46:28"><operator pos:start="46:17" pos:end="46:17">!</operator><name pos:start="46:18" pos:end="46:28">full_update</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:23"><block_content pos:start="47:17" pos:end="47:23">
                <return pos:start="47:17" pos:end="47:23">return;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="48:13" pos:end="49:36"><expr pos:start="48:13" pos:end="49:35"><call pos:start="48:13" pos:end="49:35"><name pos:start="48:13" pos:end="48:20">snprintf</name><argument_list pos:start="48:21" pos:end="49:35">(<argument pos:start="48:22" pos:end="48:31"><expr pos:start="48:22" pos:end="48:31"><name pos:start="48:22" pos:end="48:31">msg_buffer</name></expr></argument>, <argument pos:start="48:34" pos:end="48:51"><expr pos:start="48:34" pos:end="48:51"><sizeof pos:start="48:34" pos:end="48:51">sizeof<argument_list pos:start="48:40" pos:end="48:51">(<argument pos:start="48:41" pos:end="48:50"><expr pos:start="48:41" pos:end="48:50"><name pos:start="48:41" pos:end="48:50">msg_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="48:54" pos:end="48:72"><expr pos:start="48:54" pos:end="48:72"><literal type="string" pos:start="48:54" pos:end="48:72">"%i x %i Text mode"</literal></expr></argument>,
                     <argument pos:start="49:22" pos:end="49:26"><expr pos:start="49:22" pos:end="49:26"><name pos:start="49:22" pos:end="49:26">width</name></expr></argument>, <argument pos:start="49:29" pos:end="49:34"><expr pos:start="49:29" pos:end="49:34"><name pos:start="49:29" pos:end="49:34">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="50:13" pos:end="50:18">break;</break>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="52:9" pos:end="64:9"><if pos:start="52:9" pos:end="64:9">if <condition pos:start="52:12" pos:end="53:54">(<expr pos:start="52:13" pos:end="53:53"><name pos:start="52:13" pos:end="52:17">width</name> <operator pos:start="52:19" pos:end="52:20">!=</operator> <name pos:start="52:22" pos:end="52:34"><name pos:start="52:22" pos:end="52:22">s</name><operator pos:start="52:23" pos:end="52:24">-&gt;</operator><name pos:start="52:25" pos:end="52:34">last_width</name></name> <operator pos:start="52:36" pos:end="52:37">||</operator> <name pos:start="52:39" pos:end="52:44">height</name> <operator pos:start="52:46" pos:end="52:47">!=</operator> <name pos:start="52:49" pos:end="52:62"><name pos:start="52:49" pos:end="52:49">s</name><operator pos:start="52:50" pos:end="52:51">-&gt;</operator><name pos:start="52:52" pos:end="52:62">last_height</name></name> <operator pos:start="52:64" pos:end="52:65">||</operator>
            <name pos:start="53:13" pos:end="53:14">cw</name> <operator pos:start="53:16" pos:end="53:17">!=</operator> <name pos:start="53:19" pos:end="53:28"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:28">last_cw</name></name> <operator pos:start="53:30" pos:end="53:31">||</operator> <name pos:start="53:33" pos:end="53:39">cheight</name> <operator pos:start="53:41" pos:end="53:42">!=</operator> <name pos:start="53:44" pos:end="53:53"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:53">last_ch</name></name></expr>)</condition> <block pos:start="53:56" pos:end="64:9">{<block_content pos:start="54:13" pos:end="63:28">
            <expr_stmt pos:start="54:13" pos:end="54:43"><expr pos:start="54:13" pos:end="54:42"><name pos:start="54:13" pos:end="54:29"><name pos:start="54:13" pos:end="54:13">s</name><operator pos:start="54:14" pos:end="54:15">-&gt;</operator><name pos:start="54:16" pos:end="54:29">last_scr_width</name></name> <operator pos:start="54:31" pos:end="54:31">=</operator> <name pos:start="54:33" pos:end="54:37">width</name> <operator pos:start="54:39" pos:end="54:39">*</operator> <name pos:start="54:41" pos:end="54:42">cw</name></expr>;</expr_stmt>
            <expr_stmt pos:start="55:13" pos:end="55:50"><expr pos:start="55:13" pos:end="55:49"><name pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:30">last_scr_height</name></name> <operator pos:start="55:32" pos:end="55:32">=</operator> <name pos:start="55:34" pos:end="55:39">height</name> <operator pos:start="55:41" pos:end="55:41">*</operator> <name pos:start="55:43" pos:end="55:49">cheight</name></expr>;</expr_stmt>
            <expr_stmt pos:start="56:13" pos:end="56:42"><expr pos:start="56:13" pos:end="56:41"><name pos:start="56:13" pos:end="56:33"><name pos:start="56:13" pos:end="56:13">s</name><operator pos:start="56:14" pos:end="56:15">-&gt;</operator><name pos:start="56:16" pos:end="56:17">ds</name><operator pos:start="56:18" pos:end="56:19">-&gt;</operator><name pos:start="56:20" pos:end="56:26">surface</name><operator pos:start="56:27" pos:end="56:28">-&gt;</operator><name pos:start="56:29" pos:end="56:33">width</name></name> <operator pos:start="56:35" pos:end="56:35">=</operator> <name pos:start="56:37" pos:end="56:41">width</name></expr>;</expr_stmt>
            <expr_stmt pos:start="57:13" pos:end="57:44"><expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:17">ds</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:26">surface</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:34">height</name></name> <operator pos:start="57:36" pos:end="57:36">=</operator> <name pos:start="57:38" pos:end="57:43">height</name></expr>;</expr_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:30"><expr pos:start="58:13" pos:end="58:29"><call pos:start="58:13" pos:end="58:29"><name pos:start="58:13" pos:end="58:22">dpy_resize</name><argument_list pos:start="58:23" pos:end="58:29">(<argument pos:start="58:24" pos:end="58:28"><expr pos:start="58:24" pos:end="58:28"><name pos:start="58:24" pos:end="58:28"><name pos:start="58:24" pos:end="58:24">s</name><operator pos:start="58:25" pos:end="58:26">-&gt;</operator><name pos:start="58:27" pos:end="58:28">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="59:13" pos:end="59:34"><expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:25">last_width</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:33">width</name></expr>;</expr_stmt>
            <expr_stmt pos:start="60:13" pos:end="60:36"><expr pos:start="60:13" pos:end="60:35"><name pos:start="60:13" pos:end="60:26"><name pos:start="60:13" pos:end="60:13">s</name><operator pos:start="60:14" pos:end="60:15">-&gt;</operator><name pos:start="60:16" pos:end="60:26">last_height</name></name> <operator pos:start="60:28" pos:end="60:28">=</operator> <name pos:start="60:30" pos:end="60:35">height</name></expr>;</expr_stmt>
            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:22">last_ch</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:32">cheight</name></expr>;</expr_stmt>
            <expr_stmt pos:start="62:13" pos:end="62:28"><expr pos:start="62:13" pos:end="62:27"><name pos:start="62:13" pos:end="62:22"><name pos:start="62:13" pos:end="62:13">s</name><operator pos:start="62:14" pos:end="62:15">-&gt;</operator><name pos:start="62:16" pos:end="62:22">last_cw</name></name> <operator pos:start="62:24" pos:end="62:24">=</operator> <name pos:start="62:26" pos:end="62:27">cw</name></expr>;</expr_stmt>
            <expr_stmt pos:start="63:13" pos:end="63:28"><expr pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:23">full_update</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <literal type="number" pos:start="63:27" pos:end="63:27">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <comment type="block" pos:start="65:9" pos:end="65:38">/* Update "hardware" cursor */</comment>
        <expr_stmt pos:start="66:9" pos:end="66:75"><expr pos:start="66:9" pos:end="66:74"><name pos:start="66:9" pos:end="66:21">cursor_offset</name> <operator pos:start="66:23" pos:end="66:23">=</operator> <operator pos:start="66:25" pos:end="66:25">(</operator><operator pos:start="66:26" pos:end="66:26">(</operator><name pos:start="66:27" pos:end="66:37"><name pos:start="66:27" pos:end="66:27">s</name><operator pos:start="66:28" pos:end="66:29">-&gt;</operator><name pos:start="66:30" pos:end="66:31">cr</name><index pos:start="66:32" pos:end="66:37">[<expr pos:start="66:33" pos:end="66:36"><literal type="number" pos:start="66:33" pos:end="66:36">0x0e</literal></expr>]</index></name> <operator pos:start="66:39" pos:end="66:40">&lt;&lt;</operator> <literal type="number" pos:start="66:42" pos:end="66:42">8</literal><operator pos:start="66:43" pos:end="66:43">)</operator> <operator pos:start="66:45" pos:end="66:45">|</operator> <name pos:start="66:47" pos:end="66:57"><name pos:start="66:47" pos:end="66:47">s</name><operator pos:start="66:48" pos:end="66:49">-&gt;</operator><name pos:start="66:50" pos:end="66:51">cr</name><index pos:start="66:52" pos:end="66:57">[<expr pos:start="66:53" pos:end="66:56"><literal type="number" pos:start="66:53" pos:end="66:56">0x0f</literal></expr>]</index></name><operator pos:start="66:58" pos:end="66:58">)</operator> <operator pos:start="66:60" pos:end="66:60">-</operator> <name pos:start="66:62" pos:end="66:74"><name pos:start="66:62" pos:end="66:62">s</name><operator pos:start="66:63" pos:end="66:64">-&gt;</operator><name pos:start="66:65" pos:end="66:74">start_addr</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="67:9" pos:end="80:9"><if pos:start="67:9" pos:end="80:9">if <condition pos:start="67:12" pos:end="69:55">(<expr pos:start="67:13" pos:end="69:54"><name pos:start="67:13" pos:end="67:25">cursor_offset</name> <operator pos:start="67:27" pos:end="67:28">!=</operator> <name pos:start="67:30" pos:end="67:45"><name pos:start="67:30" pos:end="67:30">s</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:45">cursor_offset</name></name> <operator pos:start="67:47" pos:end="67:48">||</operator>
            <name pos:start="68:13" pos:end="68:22"><name pos:start="68:13" pos:end="68:13">s</name><operator pos:start="68:14" pos:end="68:15">-&gt;</operator><name pos:start="68:16" pos:end="68:17">cr</name><index pos:start="68:18" pos:end="68:22">[<expr pos:start="68:19" pos:end="68:21"><literal type="number" pos:start="68:19" pos:end="68:21">0xa</literal></expr>]</index></name> <operator pos:start="68:24" pos:end="68:25">!=</operator> <name pos:start="68:27" pos:end="68:41"><name pos:start="68:27" pos:end="68:27">s</name><operator pos:start="68:28" pos:end="68:29">-&gt;</operator><name pos:start="68:30" pos:end="68:41">cursor_start</name></name> <operator pos:start="68:43" pos:end="68:44">||</operator>
            <name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:17">cr</name><index pos:start="69:18" pos:end="69:22">[<expr pos:start="69:19" pos:end="69:21"><literal type="number" pos:start="69:19" pos:end="69:21">0xb</literal></expr>]</index></name> <operator pos:start="69:24" pos:end="69:25">!=</operator> <name pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:27">s</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:39">cursor_end</name></name> <operator pos:start="69:41" pos:end="69:42">||</operator> <name pos:start="69:44" pos:end="69:54">full_update</name></expr>)</condition> <block pos:start="69:57" pos:end="80:9">{<block_content pos:start="70:13" pos:end="79:39">
            <expr_stmt pos:start="70:13" pos:end="70:50"><expr pos:start="70:13" pos:end="70:49"><name pos:start="70:13" pos:end="70:26">cursor_visible</name> <operator pos:start="70:28" pos:end="70:28">=</operator> <operator pos:start="70:30" pos:end="70:30">!</operator><operator pos:start="70:31" pos:end="70:31">(</operator><name pos:start="70:32" pos:end="70:41"><name pos:start="70:32" pos:end="70:32">s</name><operator pos:start="70:33" pos:end="70:34">-&gt;</operator><name pos:start="70:35" pos:end="70:36">cr</name><index pos:start="70:37" pos:end="70:41">[<expr pos:start="70:38" pos:end="70:40"><literal type="number" pos:start="70:38" pos:end="70:40">0xa</literal></expr>]</index></name> <operator pos:start="70:43" pos:end="70:43">&amp;</operator> <literal type="number" pos:start="70:45" pos:end="70:48">0x20</literal><operator pos:start="70:49" pos:end="70:49">)</operator></expr>;</expr_stmt>
            <if_stmt pos:start="71:13" pos:end="76:42"><if pos:start="71:13" pos:end="74:54">if <condition pos:start="71:16" pos:end="71:77">(<expr pos:start="71:17" pos:end="71:76"><name pos:start="71:17" pos:end="71:30">cursor_visible</name> <operator pos:start="71:32" pos:end="71:33">&amp;&amp;</operator> <name pos:start="71:35" pos:end="71:47">cursor_offset</name> <operator pos:start="71:49" pos:end="71:49">&lt;</operator> <name pos:start="71:51" pos:end="71:54">size</name> <operator pos:start="71:56" pos:end="71:57">&amp;&amp;</operator> <name pos:start="71:59" pos:end="71:71">cursor_offset</name> <operator pos:start="71:73" pos:end="71:74">&gt;=</operator> <literal type="number" pos:start="71:76" pos:end="71:76">0</literal></expr>)</condition><block type="pseudo" pos:start="72:17" pos:end="74:54"><block_content pos:start="72:17" pos:end="74:54">
                <expr_stmt pos:start="72:17" pos:end="74:54"><expr pos:start="72:17" pos:end="74:53"><call pos:start="72:17" pos:end="74:53"><name pos:start="72:17" pos:end="72:26">dpy_cursor</name><argument_list pos:start="72:27" pos:end="74:53">(<argument pos:start="72:28" pos:end="72:32"><expr pos:start="72:28" pos:end="72:32"><name pos:start="72:28" pos:end="72:32"><name pos:start="72:28" pos:end="72:28">s</name><operator pos:start="72:29" pos:end="72:30">-&gt;</operator><name pos:start="72:31" pos:end="72:32">ds</name></name></expr></argument>,
                           <argument pos:start="73:28" pos:end="73:52"><expr pos:start="73:28" pos:end="73:52"><call pos:start="73:28" pos:end="73:52"><name pos:start="73:28" pos:end="73:37">TEXTMODE_X</name><argument_list pos:start="73:38" pos:end="73:52">(<argument pos:start="73:39" pos:end="73:51"><expr pos:start="73:39" pos:end="73:51"><name pos:start="73:39" pos:end="73:51">cursor_offset</name></expr></argument>)</argument_list></call></expr></argument>,
                           <argument pos:start="74:28" pos:end="74:52"><expr pos:start="74:28" pos:end="74:52"><call pos:start="74:28" pos:end="74:52"><name pos:start="74:28" pos:end="74:37">TEXTMODE_Y</name><argument_list pos:start="74:38" pos:end="74:52">(<argument pos:start="74:39" pos:end="74:51"><expr pos:start="74:39" pos:end="74:51"><name pos:start="74:39" pos:end="74:51">cursor_offset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="75:13" pos:end="76:42">else<block type="pseudo" pos:start="76:17" pos:end="76:42"><block_content pos:start="76:17" pos:end="76:42">
                <expr_stmt pos:start="76:17" pos:end="76:42"><expr pos:start="76:17" pos:end="76:41"><call pos:start="76:17" pos:end="76:41"><name pos:start="76:17" pos:end="76:26">dpy_cursor</name><argument_list pos:start="76:27" pos:end="76:41">(<argument pos:start="76:28" pos:end="76:32"><expr pos:start="76:28" pos:end="76:32"><name pos:start="76:28" pos:end="76:32"><name pos:start="76:28" pos:end="76:28">s</name><operator pos:start="76:29" pos:end="76:30">-&gt;</operator><name pos:start="76:31" pos:end="76:32">ds</name></name></expr></argument>, <argument pos:start="76:35" pos:end="76:36"><expr pos:start="76:35" pos:end="76:36"><operator pos:start="76:35" pos:end="76:35">-</operator><literal type="number" pos:start="76:36" pos:end="76:36">1</literal></expr></argument>, <argument pos:start="76:39" pos:end="76:40"><expr pos:start="76:39" pos:end="76:40"><operator pos:start="76:39" pos:end="76:39">-</operator><literal type="number" pos:start="76:40" pos:end="76:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <expr_stmt pos:start="77:13" pos:end="77:45"><expr pos:start="77:13" pos:end="77:44"><name pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:28">cursor_offset</name></name> <operator pos:start="77:30" pos:end="77:30">=</operator> <name pos:start="77:32" pos:end="77:44">cursor_offset</name></expr>;</expr_stmt>
            <expr_stmt pos:start="78:13" pos:end="78:41"><expr pos:start="78:13" pos:end="78:40"><name pos:start="78:13" pos:end="78:27"><name pos:start="78:13" pos:end="78:13">s</name><operator pos:start="78:14" pos:end="78:15">-&gt;</operator><name pos:start="78:16" pos:end="78:27">cursor_start</name></name> <operator pos:start="78:29" pos:end="78:29">=</operator> <name pos:start="78:31" pos:end="78:40"><name pos:start="78:31" pos:end="78:31">s</name><operator pos:start="78:32" pos:end="78:33">-&gt;</operator><name pos:start="78:34" pos:end="78:35">cr</name><index pos:start="78:36" pos:end="78:40">[<expr pos:start="78:37" pos:end="78:39"><literal type="number" pos:start="78:37" pos:end="78:39">0xa</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="79:13" pos:end="79:39"><expr pos:start="79:13" pos:end="79:38"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:25">cursor_end</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:38"><name pos:start="79:29" pos:end="79:29">s</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:33">cr</name><index pos:start="79:34" pos:end="79:38">[<expr pos:start="79:35" pos:end="79:37"><literal type="number" pos:start="79:35" pos:end="79:37">0xb</literal></expr>]</index></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="81:9" pos:end="81:55"><expr pos:start="81:9" pos:end="81:54"><name pos:start="81:9" pos:end="81:11">src</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <operator pos:start="81:15" pos:end="81:15">(</operator><name pos:start="81:16" pos:end="81:23">uint32_t</name> <operator pos:start="81:25" pos:end="81:25">*</operator><operator pos:start="81:26" pos:end="81:26">)</operator> <name pos:start="81:28" pos:end="81:38"><name pos:start="81:28" pos:end="81:28">s</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:38">vram_ptr</name></name> <operator pos:start="81:40" pos:end="81:40">+</operator> <name pos:start="81:42" pos:end="81:54"><name pos:start="81:42" pos:end="81:42">s</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:54">start_addr</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="82:9" pos:end="82:23"><expr pos:start="82:9" pos:end="82:22"><name pos:start="82:9" pos:end="82:11">dst</name> <operator pos:start="82:13" pos:end="82:13">=</operator> <name pos:start="82:15" pos:end="82:22">chardata</name></expr>;</expr_stmt>
        <if_stmt pos:start="83:9" pos:end="109:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:23">full_update</name></expr>)</condition> <block pos:start="83:26" pos:end="87:9">{<block_content pos:start="84:13" pos:end="86:51">
            <for pos:start="84:13" pos:end="85:70">for <control pos:start="84:17" pos:end="84:55">(<init pos:start="84:18" pos:end="84:23"><expr pos:start="84:18" pos:end="84:22"><name pos:start="84:18" pos:end="84:18">i</name> <operator pos:start="84:20" pos:end="84:20">=</operator> <literal type="number" pos:start="84:22" pos:end="84:22">0</literal></expr>;</init> <condition pos:start="84:25" pos:end="84:33"><expr pos:start="84:25" pos:end="84:32"><name pos:start="84:25" pos:end="84:25">i</name> <operator pos:start="84:27" pos:end="84:27">&lt;</operator> <name pos:start="84:29" pos:end="84:32">size</name></expr>;</condition> <incr pos:start="84:35" pos:end="84:54"><expr pos:start="84:35" pos:end="84:40"><name pos:start="84:35" pos:end="84:37">src</name> <operator pos:start="84:39" pos:end="84:40">++</operator></expr><operator pos:start="84:41" pos:end="84:41">,</operator> <expr pos:start="84:43" pos:end="84:48"><name pos:start="84:43" pos:end="84:45">dst</name> <operator pos:start="84:47" pos:end="84:48">++</operator></expr><operator pos:start="84:49" pos:end="84:49">,</operator> <expr pos:start="84:51" pos:end="84:54"><name pos:start="84:51" pos:end="84:51">i</name> <operator pos:start="84:53" pos:end="84:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="85:17" pos:end="85:70"><block_content pos:start="85:17" pos:end="85:70">
                <expr_stmt pos:start="85:17" pos:end="85:70"><expr pos:start="85:17" pos:end="85:69"><call pos:start="85:17" pos:end="85:69"><name pos:start="85:17" pos:end="85:32">console_write_ch</name><argument_list pos:start="85:33" pos:end="85:69">(<argument pos:start="85:34" pos:end="85:36"><expr pos:start="85:34" pos:end="85:36"><name pos:start="85:34" pos:end="85:36">dst</name></expr></argument>, <argument pos:start="85:39" pos:end="85:68"><expr pos:start="85:39" pos:end="85:68"><call pos:start="85:39" pos:end="85:68"><name pos:start="85:39" pos:end="85:49">VMEM2CHTYPE</name><argument_list pos:start="85:50" pos:end="85:68">(<argument pos:start="85:51" pos:end="85:67"><expr pos:start="85:51" pos:end="85:67"><call pos:start="85:51" pos:end="85:67"><name pos:start="85:51" pos:end="85:61">le32_to_cpu</name><argument_list pos:start="85:62" pos:end="85:67">(<argument pos:start="85:63" pos:end="85:66"><expr pos:start="85:63" pos:end="85:66"><operator pos:start="85:63" pos:end="85:63">*</operator><name pos:start="85:64" pos:end="85:66">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
            <expr_stmt pos:start="86:13" pos:end="86:51"><expr pos:start="86:13" pos:end="86:50"><call pos:start="86:13" pos:end="86:50"><name pos:start="86:13" pos:end="86:22">dpy_update</name><argument_list pos:start="86:23" pos:end="86:50">(<argument pos:start="86:24" pos:end="86:28"><expr pos:start="86:24" pos:end="86:28"><name pos:start="86:24" pos:end="86:28"><name pos:start="86:24" pos:end="86:24">s</name><operator pos:start="86:25" pos:end="86:26">-&gt;</operator><name pos:start="86:27" pos:end="86:28">ds</name></name></expr></argument>, <argument pos:start="86:31" pos:end="86:31"><expr pos:start="86:31" pos:end="86:31"><literal type="number" pos:start="86:31" pos:end="86:31">0</literal></expr></argument>, <argument pos:start="86:34" pos:end="86:34"><expr pos:start="86:34" pos:end="86:34"><literal type="number" pos:start="86:34" pos:end="86:34">0</literal></expr></argument>, <argument pos:start="86:37" pos:end="86:41"><expr pos:start="86:37" pos:end="86:41"><name pos:start="86:37" pos:end="86:41">width</name></expr></argument>, <argument pos:start="86:44" pos:end="86:49"><expr pos:start="86:44" pos:end="86:49"><name pos:start="86:44" pos:end="86:49">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="87:11" pos:end="109:9">else <block pos:start="87:16" pos:end="109:9">{<block_content pos:start="88:13" pos:end="108:13">
            <expr_stmt pos:start="88:13" pos:end="88:22"><expr pos:start="88:13" pos:end="88:21"><name pos:start="88:13" pos:end="88:17">c_max</name> <operator pos:start="88:19" pos:end="88:19">=</operator> <literal type="number" pos:start="88:21" pos:end="88:21">0</literal></expr>;</expr_stmt>
            <for pos:start="89:13" pos:end="96:13">for <control pos:start="89:17" pos:end="89:55">(<init pos:start="89:18" pos:end="89:23"><expr pos:start="89:18" pos:end="89:22"><name pos:start="89:18" pos:end="89:18">i</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>;</init> <condition pos:start="89:25" pos:end="89:33"><expr pos:start="89:25" pos:end="89:32"><name pos:start="89:25" pos:end="89:25">i</name> <operator pos:start="89:27" pos:end="89:27">&lt;</operator> <name pos:start="89:29" pos:end="89:32">size</name></expr>;</condition> <incr pos:start="89:35" pos:end="89:54"><expr pos:start="89:35" pos:end="89:40"><name pos:start="89:35" pos:end="89:37">src</name> <operator pos:start="89:39" pos:end="89:40">++</operator></expr><operator pos:start="89:41" pos:end="89:41">,</operator> <expr pos:start="89:43" pos:end="89:48"><name pos:start="89:43" pos:end="89:45">dst</name> <operator pos:start="89:47" pos:end="89:48">++</operator></expr><operator pos:start="89:49" pos:end="89:49">,</operator> <expr pos:start="89:51" pos:end="89:54"><name pos:start="89:51" pos:end="89:51">i</name> <operator pos:start="89:53" pos:end="89:54">++</operator></expr></incr>)</control> <block pos:start="89:57" pos:end="96:13">{<block_content pos:start="90:17" pos:end="95:17">
                <expr_stmt pos:start="90:17" pos:end="90:71"><expr pos:start="90:17" pos:end="90:70"><call pos:start="90:17" pos:end="90:70"><name pos:start="90:17" pos:end="90:32">console_write_ch</name><argument_list pos:start="90:33" pos:end="90:70">(<argument pos:start="90:34" pos:end="90:37"><expr pos:start="90:34" pos:end="90:37"><operator pos:start="90:34" pos:end="90:34">&amp;</operator><name pos:start="90:35" pos:end="90:37">val</name></expr></argument>, <argument pos:start="90:40" pos:end="90:69"><expr pos:start="90:40" pos:end="90:69"><call pos:start="90:40" pos:end="90:69"><name pos:start="90:40" pos:end="90:50">VMEM2CHTYPE</name><argument_list pos:start="90:51" pos:end="90:69">(<argument pos:start="90:52" pos:end="90:68"><expr pos:start="90:52" pos:end="90:68"><call pos:start="90:52" pos:end="90:68"><name pos:start="90:52" pos:end="90:62">le32_to_cpu</name><argument_list pos:start="90:63" pos:end="90:68">(<argument pos:start="90:64" pos:end="90:67"><expr pos:start="90:64" pos:end="90:67"><operator pos:start="90:64" pos:end="90:64">*</operator><name pos:start="90:65" pos:end="90:67">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="91:17" pos:end="95:17"><if pos:start="91:17" pos:end="95:17">if <condition pos:start="91:20" pos:end="91:32">(<expr pos:start="91:21" pos:end="91:31"><operator pos:start="91:21" pos:end="91:21">*</operator><name pos:start="91:22" pos:end="91:24">dst</name> <operator pos:start="91:26" pos:end="91:27">!=</operator> <name pos:start="91:29" pos:end="91:31">val</name></expr>)</condition> <block pos:start="91:34" pos:end="95:17">{<block_content pos:start="92:21" pos:end="94:26">
                    <expr_stmt pos:start="92:21" pos:end="92:31"><expr pos:start="92:21" pos:end="92:30"><operator pos:start="92:21" pos:end="92:21">*</operator><name pos:start="92:22" pos:end="92:24">dst</name> <operator pos:start="92:26" pos:end="92:26">=</operator> <name pos:start="92:28" pos:end="92:30">val</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="93:21" pos:end="93:30"><expr pos:start="93:21" pos:end="93:29"><name pos:start="93:21" pos:end="93:25">c_max</name> <operator pos:start="93:27" pos:end="93:27">=</operator> <name pos:start="93:29" pos:end="93:29">i</name></expr>;</expr_stmt>
                    <break pos:start="94:21" pos:end="94:26">break;</break>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="97:13" pos:end="97:22"><expr pos:start="97:13" pos:end="97:21"><name pos:start="97:13" pos:end="97:17">c_min</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:21">i</name></expr>;</expr_stmt>
            <for pos:start="98:13" pos:end="104:13">for <control pos:start="98:17" pos:end="98:50">(<init pos:start="98:18" pos:end="98:18">;</init> <condition pos:start="98:20" pos:end="98:28"><expr pos:start="98:20" pos:end="98:27"><name pos:start="98:20" pos:end="98:20">i</name> <operator pos:start="98:22" pos:end="98:22">&lt;</operator> <name pos:start="98:24" pos:end="98:27">size</name></expr>;</condition> <incr pos:start="98:30" pos:end="98:49"><expr pos:start="98:30" pos:end="98:35"><name pos:start="98:30" pos:end="98:32">src</name> <operator pos:start="98:34" pos:end="98:35">++</operator></expr><operator pos:start="98:36" pos:end="98:36">,</operator> <expr pos:start="98:38" pos:end="98:43"><name pos:start="98:38" pos:end="98:40">dst</name> <operator pos:start="98:42" pos:end="98:43">++</operator></expr><operator pos:start="98:44" pos:end="98:44">,</operator> <expr pos:start="98:46" pos:end="98:49"><name pos:start="98:46" pos:end="98:46">i</name> <operator pos:start="98:48" pos:end="98:49">++</operator></expr></incr>)</control> <block pos:start="98:52" pos:end="104:13">{<block_content pos:start="99:17" pos:end="103:17">
                <expr_stmt pos:start="99:17" pos:end="99:71"><expr pos:start="99:17" pos:end="99:70"><call pos:start="99:17" pos:end="99:70"><name pos:start="99:17" pos:end="99:32">console_write_ch</name><argument_list pos:start="99:33" pos:end="99:70">(<argument pos:start="99:34" pos:end="99:37"><expr pos:start="99:34" pos:end="99:37"><operator pos:start="99:34" pos:end="99:34">&amp;</operator><name pos:start="99:35" pos:end="99:37">val</name></expr></argument>, <argument pos:start="99:40" pos:end="99:69"><expr pos:start="99:40" pos:end="99:69"><call pos:start="99:40" pos:end="99:69"><name pos:start="99:40" pos:end="99:50">VMEM2CHTYPE</name><argument_list pos:start="99:51" pos:end="99:69">(<argument pos:start="99:52" pos:end="99:68"><expr pos:start="99:52" pos:end="99:68"><call pos:start="99:52" pos:end="99:68"><name pos:start="99:52" pos:end="99:62">le32_to_cpu</name><argument_list pos:start="99:63" pos:end="99:68">(<argument pos:start="99:64" pos:end="99:67"><expr pos:start="99:64" pos:end="99:67"><operator pos:start="99:64" pos:end="99:64">*</operator><name pos:start="99:65" pos:end="99:67">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="100:17" pos:end="103:17"><if pos:start="100:17" pos:end="103:17">if <condition pos:start="100:20" pos:end="100:32">(<expr pos:start="100:21" pos:end="100:31"><operator pos:start="100:21" pos:end="100:21">*</operator><name pos:start="100:22" pos:end="100:24">dst</name> <operator pos:start="100:26" pos:end="100:27">!=</operator> <name pos:start="100:29" pos:end="100:31">val</name></expr>)</condition> <block pos:start="100:34" pos:end="103:17">{<block_content pos:start="101:21" pos:end="102:30">
                    <expr_stmt pos:start="101:21" pos:end="101:31"><expr pos:start="101:21" pos:end="101:30"><operator pos:start="101:21" pos:end="101:21">*</operator><name pos:start="101:22" pos:end="101:24">dst</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:30">val</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="102:21" pos:end="102:30"><expr pos:start="102:21" pos:end="102:29"><name pos:start="102:21" pos:end="102:25">c_max</name> <operator pos:start="102:27" pos:end="102:27">=</operator> <name pos:start="102:29" pos:end="102:29">i</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
            <if_stmt pos:start="105:13" pos:end="108:13"><if pos:start="105:13" pos:end="108:13">if <condition pos:start="105:16" pos:end="105:31">(<expr pos:start="105:17" pos:end="105:30"><name pos:start="105:17" pos:end="105:21">c_min</name> <operator pos:start="105:23" pos:end="105:24">&lt;=</operator> <name pos:start="105:26" pos:end="105:30">c_max</name></expr>)</condition> <block pos:start="105:33" pos:end="108:13">{<block_content pos:start="106:17" pos:end="107:74">
                <expr_stmt pos:start="106:17" pos:end="106:38"><expr pos:start="106:17" pos:end="106:37"><name pos:start="106:17" pos:end="106:17">i</name> <operator pos:start="106:19" pos:end="106:19">=</operator> <call pos:start="106:21" pos:end="106:37"><name pos:start="106:21" pos:end="106:30">TEXTMODE_Y</name><argument_list pos:start="106:31" pos:end="106:37">(<argument pos:start="106:32" pos:end="106:36"><expr pos:start="106:32" pos:end="106:36"><name pos:start="106:32" pos:end="106:36">c_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="107:17" pos:end="107:74"><expr pos:start="107:17" pos:end="107:73"><call pos:start="107:17" pos:end="107:73"><name pos:start="107:17" pos:end="107:26">dpy_update</name><argument_list pos:start="107:27" pos:end="107:73">(<argument pos:start="107:28" pos:end="107:32"><expr pos:start="107:28" pos:end="107:32"><name pos:start="107:28" pos:end="107:32"><name pos:start="107:28" pos:end="107:28">s</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:32">ds</name></name></expr></argument>, <argument pos:start="107:35" pos:end="107:35"><expr pos:start="107:35" pos:end="107:35"><literal type="number" pos:start="107:35" pos:end="107:35">0</literal></expr></argument>, <argument pos:start="107:38" pos:end="107:38"><expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">i</name></expr></argument>, <argument pos:start="107:41" pos:end="107:45"><expr pos:start="107:41" pos:end="107:45"><name pos:start="107:41" pos:end="107:45">width</name></expr></argument>, <argument pos:start="107:48" pos:end="107:72"><expr pos:start="107:48" pos:end="107:72"><call pos:start="107:48" pos:end="107:64"><name pos:start="107:48" pos:end="107:57">TEXTMODE_Y</name><argument_list pos:start="107:58" pos:end="107:64">(<argument pos:start="107:59" pos:end="107:63"><expr pos:start="107:59" pos:end="107:63"><name pos:start="107:59" pos:end="107:63">c_max</name></expr></argument>)</argument_list></call> <operator pos:start="107:66" pos:end="107:66">-</operator> <name pos:start="107:68" pos:end="107:68">i</name> <operator pos:start="107:70" pos:end="107:70">+</operator> <literal type="number" pos:start="107:72" pos:end="107:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
        <return pos:start="110:9" pos:end="110:15">return;</return>
    <case pos:start="111:5" pos:end="111:21">case <expr pos:start="111:10" pos:end="111:20"><name pos:start="111:10" pos:end="111:20">GMODE_GRAPH</name></expr>:</case>
        <if_stmt pos:start="112:9" pos:end="113:19"><if pos:start="112:9" pos:end="113:19">if <condition pos:start="112:12" pos:end="112:25">(<expr pos:start="112:13" pos:end="112:24"><operator pos:start="112:13" pos:end="112:13">!</operator><name pos:start="112:14" pos:end="112:24">full_update</name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:19"><block_content pos:start="113:13" pos:end="113:19">
            <return pos:start="113:13" pos:end="113:19">return;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="114:9" pos:end="114:46"><expr pos:start="114:9" pos:end="114:45"><call pos:start="114:9" pos:end="114:45"><name pos:start="114:9" pos:end="114:25"><name pos:start="114:9" pos:end="114:9">s</name><operator pos:start="114:10" pos:end="114:11">-&gt;</operator><name pos:start="114:12" pos:end="114:25">get_resolution</name></name><argument_list pos:start="114:26" pos:end="114:45">(<argument pos:start="114:27" pos:end="114:27"><expr pos:start="114:27" pos:end="114:27"><name pos:start="114:27" pos:end="114:27">s</name></expr></argument>, <argument pos:start="114:30" pos:end="114:35"><expr pos:start="114:30" pos:end="114:35"><operator pos:start="114:30" pos:end="114:30">&amp;</operator><name pos:start="114:31" pos:end="114:35">width</name></expr></argument>, <argument pos:start="114:38" pos:end="114:44"><expr pos:start="114:38" pos:end="114:44"><operator pos:start="114:38" pos:end="114:38">&amp;</operator><name pos:start="114:39" pos:end="114:44">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="115:9" pos:end="116:32"><expr pos:start="115:9" pos:end="116:31"><call pos:start="115:9" pos:end="116:31"><name pos:start="115:9" pos:end="115:16">snprintf</name><argument_list pos:start="115:17" pos:end="116:31">(<argument pos:start="115:18" pos:end="115:27"><expr pos:start="115:18" pos:end="115:27"><name pos:start="115:18" pos:end="115:27">msg_buffer</name></expr></argument>, <argument pos:start="115:30" pos:end="115:47"><expr pos:start="115:30" pos:end="115:47"><sizeof pos:start="115:30" pos:end="115:47">sizeof<argument_list pos:start="115:36" pos:end="115:47">(<argument pos:start="115:37" pos:end="115:46"><expr pos:start="115:37" pos:end="115:46"><name pos:start="115:37" pos:end="115:46">msg_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="115:50" pos:end="115:71"><expr pos:start="115:50" pos:end="115:71"><literal type="string" pos:start="115:50" pos:end="115:71">"%i x %i Graphic mode"</literal></expr></argument>,
                 <argument pos:start="116:18" pos:end="116:22"><expr pos:start="116:18" pos:end="116:22"><name pos:start="116:18" pos:end="116:22">width</name></expr></argument>, <argument pos:start="116:25" pos:end="116:30"><expr pos:start="116:25" pos:end="116:30"><name pos:start="116:25" pos:end="116:30">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="117:9" pos:end="117:14">break;</break>
    <case pos:start="118:5" pos:end="118:21">case <expr pos:start="118:10" pos:end="118:20"><name pos:start="118:10" pos:end="118:20">GMODE_BLANK</name></expr>:</case>
    <default pos:start="119:5" pos:end="119:12">default:</default>
        <if_stmt pos:start="120:9" pos:end="121:19"><if pos:start="120:9" pos:end="121:19">if <condition pos:start="120:12" pos:end="120:25">(<expr pos:start="120:13" pos:end="120:24"><operator pos:start="120:13" pos:end="120:13">!</operator><name pos:start="120:14" pos:end="120:24">full_update</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:19"><block_content pos:start="121:13" pos:end="121:19">
            <return pos:start="121:13" pos:end="121:19">return;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="122:9" pos:end="122:67"><expr pos:start="122:9" pos:end="122:66"><call pos:start="122:9" pos:end="122:66"><name pos:start="122:9" pos:end="122:16">snprintf</name><argument_list pos:start="122:17" pos:end="122:66">(<argument pos:start="122:18" pos:end="122:27"><expr pos:start="122:18" pos:end="122:27"><name pos:start="122:18" pos:end="122:27">msg_buffer</name></expr></argument>, <argument pos:start="122:30" pos:end="122:47"><expr pos:start="122:30" pos:end="122:47"><sizeof pos:start="122:30" pos:end="122:47">sizeof<argument_list pos:start="122:36" pos:end="122:47">(<argument pos:start="122:37" pos:end="122:46"><expr pos:start="122:37" pos:end="122:46"><name pos:start="122:37" pos:end="122:46">msg_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="122:50" pos:end="122:65"><expr pos:start="122:50" pos:end="122:65"><literal type="string" pos:start="122:50" pos:end="122:65">"VGA Blank mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="123:9" pos:end="123:14">break;</break>
    </block_content>}</block></switch>
    <comment type="block" pos:start="125:5" pos:end="125:27">/* Display a message */</comment>
    <expr_stmt pos:start="126:5" pos:end="126:23"><expr pos:start="126:5" pos:end="126:22"><name pos:start="126:5" pos:end="126:17"><name pos:start="126:5" pos:end="126:5">s</name><operator pos:start="126:6" pos:end="126:7">-&gt;</operator><name pos:start="126:8" pos:end="126:17">last_width</name></name> <operator pos:start="126:19" pos:end="126:19">=</operator> <literal type="number" pos:start="126:21" pos:end="126:22">60</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="127:5" pos:end="127:32"><expr pos:start="127:5" pos:end="127:31"><name pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:18">last_height</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:27">height</name> <operator pos:start="127:29" pos:end="127:29">=</operator> <literal type="number" pos:start="127:31" pos:end="127:31">3</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="128:5" pos:end="128:30"><expr pos:start="128:5" pos:end="128:29"><call pos:start="128:5" pos:end="128:29"><name pos:start="128:5" pos:end="128:14">dpy_cursor</name><argument_list pos:start="128:15" pos:end="128:29">(<argument pos:start="128:16" pos:end="128:20"><expr pos:start="128:16" pos:end="128:20"><name pos:start="128:16" pos:end="128:20"><name pos:start="128:16" pos:end="128:16">s</name><operator pos:start="128:17" pos:end="128:18">-&gt;</operator><name pos:start="128:19" pos:end="128:20">ds</name></name></expr></argument>, <argument pos:start="128:23" pos:end="128:24"><expr pos:start="128:23" pos:end="128:24"><operator pos:start="128:23" pos:end="128:23">-</operator><literal type="number" pos:start="128:24" pos:end="128:24">1</literal></expr></argument>, <argument pos:start="128:27" pos:end="128:28"><expr pos:start="128:27" pos:end="128:28"><operator pos:start="128:27" pos:end="128:27">-</operator><literal type="number" pos:start="128:28" pos:end="128:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="129:5" pos:end="129:42"><expr pos:start="129:5" pos:end="129:41"><name pos:start="129:5" pos:end="129:25"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:9">ds</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:18">surface</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:25">width</name></name> <operator pos:start="129:27" pos:end="129:27">=</operator> <name pos:start="129:29" pos:end="129:41"><name pos:start="129:29" pos:end="129:29">s</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:41">last_width</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="130:5" pos:end="130:36"><expr pos:start="130:5" pos:end="130:35"><name pos:start="130:5" pos:end="130:26"><name pos:start="130:5" pos:end="130:5">s</name><operator pos:start="130:6" pos:end="130:7">-&gt;</operator><name pos:start="130:8" pos:end="130:9">ds</name><operator pos:start="130:10" pos:end="130:11">-&gt;</operator><name pos:start="130:12" pos:end="130:18">surface</name><operator pos:start="130:19" pos:end="130:20">-&gt;</operator><name pos:start="130:21" pos:end="130:26">height</name></name> <operator pos:start="130:28" pos:end="130:28">=</operator> <name pos:start="130:30" pos:end="130:35">height</name></expr>;</expr_stmt>
    <expr_stmt pos:start="131:5" pos:end="131:22"><expr pos:start="131:5" pos:end="131:21"><call pos:start="131:5" pos:end="131:21"><name pos:start="131:5" pos:end="131:14">dpy_resize</name><argument_list pos:start="131:15" pos:end="131:21">(<argument pos:start="131:16" pos:end="131:20"><expr pos:start="131:16" pos:end="131:20"><name pos:start="131:16" pos:end="131:20"><name pos:start="131:16" pos:end="131:16">s</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:20">ds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="132:5" pos:end="133:38">for <control pos:start="132:9" pos:end="132:65">(<init pos:start="132:10" pos:end="132:31"><expr pos:start="132:10" pos:end="132:23"><name pos:start="132:10" pos:end="132:12">dst</name> <operator pos:start="132:14" pos:end="132:14">=</operator> <name pos:start="132:16" pos:end="132:23">chardata</name></expr><operator pos:start="132:24" pos:end="132:24">,</operator> <expr pos:start="132:26" pos:end="132:30"><name pos:start="132:26" pos:end="132:26">i</name> <operator pos:start="132:28" pos:end="132:28">=</operator> <literal type="number" pos:start="132:30" pos:end="132:30">0</literal></expr>;</init> <condition pos:start="132:33" pos:end="132:59"><expr pos:start="132:33" pos:end="132:58"><name pos:start="132:33" pos:end="132:33">i</name> <operator pos:start="132:35" pos:end="132:35">&lt;</operator> <name pos:start="132:37" pos:end="132:49"><name pos:start="132:37" pos:end="132:37">s</name><operator pos:start="132:38" pos:end="132:39">-&gt;</operator><name pos:start="132:40" pos:end="132:49">last_width</name></name> <operator pos:start="132:51" pos:end="132:51">*</operator> <name pos:start="132:53" pos:end="132:58">height</name></expr>;</condition> <incr pos:start="132:61" pos:end="132:64"><expr pos:start="132:61" pos:end="132:64"><name pos:start="132:61" pos:end="132:61">i</name> <operator pos:start="132:63" pos:end="132:64">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:9" pos:end="133:38"><block_content pos:start="133:9" pos:end="133:38">
        <expr_stmt pos:start="133:9" pos:end="133:38"><expr pos:start="133:9" pos:end="133:37"><call pos:start="133:9" pos:end="133:37"><name pos:start="133:9" pos:end="133:24">console_write_ch</name><argument_list pos:start="133:25" pos:end="133:37">(<argument pos:start="133:26" pos:end="133:31"><expr pos:start="133:26" pos:end="133:31"><name pos:start="133:26" pos:end="133:28">dst</name> <operator pos:start="133:30" pos:end="133:31">++</operator></expr></argument>, <argument pos:start="133:34" pos:end="133:36"><expr pos:start="133:34" pos:end="133:36"><literal type="char" pos:start="133:34" pos:end="133:36">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="134:5" pos:end="134:30"><expr pos:start="134:5" pos:end="134:29"><name pos:start="134:5" pos:end="134:8">size</name> <operator pos:start="134:10" pos:end="134:10">=</operator> <call pos:start="134:12" pos:end="134:29"><name pos:start="134:12" pos:end="134:17">strlen</name><argument_list pos:start="134:18" pos:end="134:29">(<argument pos:start="134:19" pos:end="134:28"><expr pos:start="134:19" pos:end="134:28"><name pos:start="134:19" pos:end="134:28">msg_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="135:5" pos:end="135:39"><expr pos:start="135:5" pos:end="135:38"><name pos:start="135:5" pos:end="135:9">width</name> <operator pos:start="135:11" pos:end="135:11">=</operator> <operator pos:start="135:13" pos:end="135:13">(</operator><name pos:start="135:14" pos:end="135:26"><name pos:start="135:14" pos:end="135:14">s</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:26">last_width</name></name> <operator pos:start="135:28" pos:end="135:28">-</operator> <name pos:start="135:30" pos:end="135:33">size</name><operator pos:start="135:34" pos:end="135:34">)</operator> <operator pos:start="135:36" pos:end="135:36">/</operator> <literal type="number" pos:start="135:38" pos:end="135:38">2</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="136:5" pos:end="136:43"><expr pos:start="136:5" pos:end="136:42"><name pos:start="136:5" pos:end="136:7">dst</name> <operator pos:start="136:9" pos:end="136:9">=</operator> <name pos:start="136:11" pos:end="136:18">chardata</name> <operator pos:start="136:20" pos:end="136:20">+</operator> <name pos:start="136:22" pos:end="136:34"><name pos:start="136:22" pos:end="136:22">s</name><operator pos:start="136:23" pos:end="136:24">-&gt;</operator><name pos:start="136:25" pos:end="136:34">last_width</name></name> <operator pos:start="136:36" pos:end="136:36">+</operator> <name pos:start="136:38" pos:end="136:42">width</name></expr>;</expr_stmt>
    <for pos:start="137:5" pos:end="138:61">for <control pos:start="137:9" pos:end="137:31">(<init pos:start="137:10" pos:end="137:15"><expr pos:start="137:10" pos:end="137:14"><name pos:start="137:10" pos:end="137:10">i</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <literal type="number" pos:start="137:14" pos:end="137:14">0</literal></expr>;</init> <condition pos:start="137:17" pos:end="137:25"><expr pos:start="137:17" pos:end="137:24"><name pos:start="137:17" pos:end="137:17">i</name> <operator pos:start="137:19" pos:end="137:19">&lt;</operator> <name pos:start="137:21" pos:end="137:24">size</name></expr>;</condition> <incr pos:start="137:27" pos:end="137:30"><expr pos:start="137:27" pos:end="137:30"><name pos:start="137:27" pos:end="137:27">i</name> <operator pos:start="137:29" pos:end="137:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="138:9" pos:end="138:61"><block_content pos:start="138:9" pos:end="138:61">
        <expr_stmt pos:start="138:9" pos:end="138:61"><expr pos:start="138:9" pos:end="138:60"><call pos:start="138:9" pos:end="138:60"><name pos:start="138:9" pos:end="138:24">console_write_ch</name><argument_list pos:start="138:25" pos:end="138:60">(<argument pos:start="138:26" pos:end="138:31"><expr pos:start="138:26" pos:end="138:31"><name pos:start="138:26" pos:end="138:28">dst</name> <operator pos:start="138:30" pos:end="138:31">++</operator></expr></argument>, <argument pos:start="138:34" pos:end="138:59"><expr pos:start="138:34" pos:end="138:59"><literal type="number" pos:start="138:34" pos:end="138:43">0x00200100</literal> <operator pos:start="138:45" pos:end="138:45">|</operator> <name pos:start="138:47" pos:end="138:59"><name pos:start="138:47" pos:end="138:56">msg_buffer</name><index pos:start="138:57" pos:end="138:59">[<expr pos:start="138:58" pos:end="138:58"><name pos:start="138:58" pos:end="138:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="139:5" pos:end="139:51"><expr pos:start="139:5" pos:end="139:50"><call pos:start="139:5" pos:end="139:50"><name pos:start="139:5" pos:end="139:14">dpy_update</name><argument_list pos:start="139:15" pos:end="139:50">(<argument pos:start="139:16" pos:end="139:20"><expr pos:start="139:16" pos:end="139:20"><name pos:start="139:16" pos:end="139:20"><name pos:start="139:16" pos:end="139:16">s</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:20">ds</name></name></expr></argument>, <argument pos:start="139:23" pos:end="139:23"><expr pos:start="139:23" pos:end="139:23"><literal type="number" pos:start="139:23" pos:end="139:23">0</literal></expr></argument>, <argument pos:start="139:26" pos:end="139:26"><expr pos:start="139:26" pos:end="139:26"><literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr></argument>, <argument pos:start="139:29" pos:end="139:41"><expr pos:start="139:29" pos:end="139:41"><name pos:start="139:29" pos:end="139:41"><name pos:start="139:29" pos:end="139:29">s</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:41">last_width</name></name></expr></argument>, <argument pos:start="139:44" pos:end="139:49"><expr pos:start="139:44" pos:end="139:49"><name pos:start="139:44" pos:end="139:49">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
