<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25340.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">CharDriverState</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:39">qemu_chr_new_from_opts</name><parameter_list pos:start="1:40" pos:end="5:49">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:48">QemuOpts</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">opts</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:75"><function_decl pos:start="3:37" pos:end="3:75"><type pos:start="3:37" pos:end="3:40"><name pos:start="3:37" pos:end="3:40">void</name></type> (<modifier pos:start="3:43" pos:end="3:43">*</modifier><name pos:start="3:44" pos:end="3:47">init</name>)<parameter_list pos:start="3:49" pos:end="3:75">(<parameter pos:start="3:50" pos:end="3:74"><decl pos:start="3:50" pos:end="3:74"><type pos:start="3:50" pos:end="3:74"><name pos:start="3:50" pos:end="3:71"><name pos:start="3:50" pos:end="3:55">struct</name> <name pos:start="3:57" pos:end="3:71">CharDriverState</name></name> <modifier pos:start="3:73" pos:end="3:73">*</modifier></type><name pos:start="3:74" pos:end="3:74">s</name></decl></parameter>)</parameter_list></function_decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:48"><decl pos:start="5:37" pos:end="5:48"><type pos:start="5:37" pos:end="5:48"><name pos:start="5:37" pos:end="5:41">Error</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier><modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:48">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="227:1">{<block_content pos:start="9:5" pos:end="225:16">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">CharDriver</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:18">cd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">CharDriverState</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">GSList</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:35">(<expr pos:start="17:9" pos:end="17:34"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:20">qemu_opts_id</name><argument_list pos:start="17:21" pos:end="17:26">(<argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">opts</name></expr></argument>)</argument_list></call> <operator pos:start="17:28" pos:end="17:29">==</operator> <name pos:start="17:31" pos:end="17:34">NULL</name></expr>)</condition> <block pos:start="17:37" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:53"><expr pos:start="19:9" pos:end="19:52"><call pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:18">error_setg</name><argument_list pos:start="19:19" pos:end="19:52">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">errp</name></expr></argument>, <argument pos:start="19:26" pos:end="19:51"><expr pos:start="19:26" pos:end="19:51"><literal type="string" pos:start="19:26" pos:end="19:51">"chardev: no id specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:46">(<expr pos:start="27:9" pos:end="27:45"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:20">qemu_opt_get</name><argument_list pos:start="27:21" pos:end="27:37">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">opts</name></expr></argument>, <argument pos:start="27:28" pos:end="27:36"><expr pos:start="27:28" pos:end="27:36"><literal type="string" pos:start="27:28" pos:end="27:36">"backend"</literal></expr></argument>)</argument_list></call> <operator pos:start="27:39" pos:end="27:40">==</operator> <name pos:start="27:42" pos:end="27:45">NULL</name></expr>)</condition> <block pos:start="27:48" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:17">

        <expr_stmt pos:start="29:9" pos:end="31:39"><expr pos:start="29:9" pos:end="31:38"><call pos:start="29:9" pos:end="31:38"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="31:38">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:58"><expr pos:start="29:26" pos:end="29:58"><literal type="string" pos:start="29:26" pos:end="29:58">"chardev: \"%s\" missing backend"</literal></expr></argument>,

                   <argument pos:start="31:20" pos:end="31:37"><expr pos:start="31:20" pos:end="31:37"><call pos:start="31:20" pos:end="31:37"><name pos:start="31:20" pos:end="31:31">qemu_opts_id</name><argument_list pos:start="31:32" pos:end="31:37">(<argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <for pos:start="37:5" pos:end="49:5">for <control pos:start="37:9" pos:end="37:38">(<init pos:start="37:10" pos:end="37:22"><expr pos:start="37:10" pos:end="37:21"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:21">backends</name></expr>;</init> <condition pos:start="37:24" pos:end="37:25"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">i</name></expr>;</condition> <incr pos:start="37:27" pos:end="37:37"><expr pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:27">i</name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:37"><name pos:start="37:31" pos:end="37:31">i</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:37">next</name></name></expr></incr>)</control> <block pos:start="37:40" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:10">cd</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:20"><name pos:start="39:14" pos:end="39:14">i</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">data</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:65">(<expr pos:start="43:13" pos:end="43:64"><call pos:start="43:13" pos:end="43:59"><name pos:start="43:13" pos:end="43:18">strcmp</name><argument_list pos:start="43:19" pos:end="43:59">(<argument pos:start="43:20" pos:end="43:27"><expr pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:21">cd</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:27">name</name></name></expr></argument>, <argument pos:start="43:30" pos:end="43:58"><expr pos:start="43:30" pos:end="43:58"><call pos:start="43:30" pos:end="43:58"><name pos:start="43:30" pos:end="43:41">qemu_opt_get</name><argument_list pos:start="43:42" pos:end="43:58">(<argument pos:start="43:43" pos:end="43:46"><expr pos:start="43:43" pos:end="43:46"><name pos:start="43:43" pos:end="43:46">opts</name></expr></argument>, <argument pos:start="43:49" pos:end="43:57"><expr pos:start="43:49" pos:end="43:57"><literal type="string" pos:start="43:49" pos:end="43:57">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="43:61" pos:end="43:62">==</operator> <literal type="number" pos:start="43:64" pos:end="43:64">0</literal></expr>)</condition> <block pos:start="43:67" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:18">(<expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">i</name> <operator pos:start="51:11" pos:end="51:12">==</operator> <name pos:start="51:14" pos:end="51:17">NULL</name></expr>)</condition> <block pos:start="51:20" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:17">

        <expr_stmt pos:start="53:9" pos:end="55:50"><expr pos:start="53:9" pos:end="55:49"><call pos:start="53:9" pos:end="55:49"><name pos:start="53:9" pos:end="53:18">error_setg</name><argument_list pos:start="53:19" pos:end="55:49">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">errp</name></expr></argument>, <argument pos:start="53:26" pos:end="53:60"><expr pos:start="53:26" pos:end="53:60"><literal type="string" pos:start="53:26" pos:end="53:60">"chardev: backend \"%s\" not found"</literal></expr></argument>,

                   <argument pos:start="55:20" pos:end="55:48"><expr pos:start="55:20" pos:end="55:48"><call pos:start="55:20" pos:end="55:48"><name pos:start="55:20" pos:end="55:31">qemu_opt_get</name><argument_list pos:start="55:32" pos:end="55:48">(<argument pos:start="55:33" pos:end="55:36"><expr pos:start="55:33" pos:end="55:36"><name pos:start="55:33" pos:end="55:36">opts</name></expr></argument>, <argument pos:start="55:39" pos:end="55:47"><expr pos:start="55:39" pos:end="55:47"><literal type="string" pos:start="55:39" pos:end="55:47">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="149:5"><if pos:start="63:5" pos:end="149:5">if <condition pos:start="63:8" pos:end="63:18">(<expr pos:start="63:9" pos:end="63:17"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:17"><name pos:start="63:10" pos:end="63:11">cd</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">open</name></name></expr>)</condition> <block pos:start="63:20" pos:end="149:5">{<block_content pos:start="67:9" pos:end="147:19">

        <comment type="block" pos:start="65:9" pos:end="65:34">/* using new, qapi init */</comment>

        <decl_stmt pos:start="67:9" pos:end="67:60"><decl pos:start="67:9" pos:end="67:59"><type pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:22">ChardevBackend</name> <modifier pos:start="67:24" pos:end="67:24">*</modifier></type><name pos:start="67:25" pos:end="67:31">backend</name> <init pos:start="67:33" pos:end="67:59">= <expr pos:start="67:35" pos:end="67:59"><call pos:start="67:35" pos:end="67:59"><name pos:start="67:35" pos:end="67:40">g_new0</name><argument_list pos:start="67:41" pos:end="67:59">(<argument pos:start="67:42" pos:end="67:55"><expr pos:start="67:42" pos:end="67:55"><name pos:start="67:42" pos:end="67:55">ChardevBackend</name></expr></argument>, <argument pos:start="67:58" pos:end="67:58"><expr pos:start="67:58" pos:end="67:58"><literal type="number" pos:start="67:58" pos:end="67:58">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:34"><decl pos:start="69:9" pos:end="69:33"><type pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:21">ChardevReturn</name> <modifier pos:start="69:23" pos:end="69:23">*</modifier></type><name pos:start="69:24" pos:end="69:26">ret</name> <init pos:start="69:28" pos:end="69:33">= <expr pos:start="69:30" pos:end="69:33"><name pos:start="69:30" pos:end="69:33">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:44"><decl pos:start="71:9" pos:end="71:43"><type pos:start="71:9" pos:end="71:20"><specifier pos:start="71:9" pos:end="71:13">const</specifier> <name pos:start="71:15" pos:end="71:18">char</name> <modifier pos:start="71:20" pos:end="71:20">*</modifier></type><name pos:start="71:21" pos:end="71:22">id</name> <init pos:start="71:24" pos:end="71:43">= <expr pos:start="71:26" pos:end="71:43"><call pos:start="71:26" pos:end="71:43"><name pos:start="71:26" pos:end="71:37">qemu_opts_id</name><argument_list pos:start="71:38" pos:end="71:43">(<argument pos:start="71:39" pos:end="71:42"><expr pos:start="71:39" pos:end="71:42"><name pos:start="71:39" pos:end="71:42">opts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:31"><decl pos:start="73:9" pos:end="73:30"><type pos:start="73:9" pos:end="73:20"><specifier pos:start="73:9" pos:end="73:13">const</specifier> <name pos:start="73:15" pos:end="73:18">char</name> <modifier pos:start="73:20" pos:end="73:20">*</modifier></type><name pos:start="73:21" pos:end="73:23">bid</name> <init pos:start="73:25" pos:end="73:30">= <expr pos:start="73:27" pos:end="73:30"><name pos:start="73:27" pos:end="73:30">NULL</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:46">(<expr pos:start="77:13" pos:end="77:45"><call pos:start="77:13" pos:end="77:45"><name pos:start="77:13" pos:end="77:29">qemu_opt_get_bool</name><argument_list pos:start="77:30" pos:end="77:45">(<argument pos:start="77:31" pos:end="77:34"><expr pos:start="77:31" pos:end="77:34"><name pos:start="77:31" pos:end="77:34">opts</name></expr></argument>, <argument pos:start="77:37" pos:end="77:41"><expr pos:start="77:37" pos:end="77:41"><literal type="string" pos:start="77:37" pos:end="77:41">"mux"</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:44"><expr pos:start="77:44" pos:end="77:44"><literal type="number" pos:start="77:44" pos:end="77:44">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:48" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:49">

            <expr_stmt pos:start="79:13" pos:end="79:49"><expr pos:start="79:13" pos:end="79:48"><name pos:start="79:13" pos:end="79:15">bid</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="79:48"><name pos:start="79:19" pos:end="79:33">g_strdup_printf</name><argument_list pos:start="79:34" pos:end="79:48">(<argument pos:start="79:35" pos:end="79:43"><expr pos:start="79:35" pos:end="79:43"><literal type="string" pos:start="79:35" pos:end="79:43">"%s-base"</literal></expr></argument>, <argument pos:start="79:46" pos:end="79:47"><expr pos:start="79:46" pos:end="79:47"><name pos:start="79:46" pos:end="79:47">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:19"><expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:11">chr</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <name pos:start="85:15" pos:end="85:18">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:15">backend</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:21">kind</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:32"><name pos:start="87:25" pos:end="87:26">cd</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:32">kind</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="99:9"><if pos:start="89:9" pos:end="99:9">if <condition pos:start="89:12" pos:end="89:22">(<expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:14">cd</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:21">parse</name></name></expr>)</condition> <block pos:start="89:24" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:13">

            <expr_stmt pos:start="91:13" pos:end="91:43"><expr pos:start="91:13" pos:end="91:42"><call pos:start="91:13" pos:end="91:42"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:14">cd</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:21">parse</name></name><argument_list pos:start="91:22" pos:end="91:42">(<argument pos:start="91:23" pos:end="91:26"><expr pos:start="91:23" pos:end="91:26"><name pos:start="91:23" pos:end="91:26">opts</name></expr></argument>, <argument pos:start="91:29" pos:end="91:35"><expr pos:start="91:29" pos:end="91:35"><name pos:start="91:29" pos:end="91:35">backend</name></expr></argument>, <argument pos:start="91:38" pos:end="91:41"><expr pos:start="91:38" pos:end="91:41"><name pos:start="91:38" pos:end="91:41">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="97:13"><if pos:start="93:13" pos:end="97:13">if <condition pos:start="93:16" pos:end="93:35">(<expr pos:start="93:17" pos:end="93:34"><call pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:28">error_is_set</name><argument_list pos:start="93:29" pos:end="93:34">(<argument pos:start="93:30" pos:end="93:33"><expr pos:start="93:30" pos:end="93:33"><name pos:start="93:30" pos:end="93:33">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:37" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:30">

                <goto pos:start="95:17" pos:end="95:30">goto <name pos:start="95:22" pos:end="95:29">qapi_out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:61"><expr pos:start="101:9" pos:end="101:60"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:60"><name pos:start="101:15" pos:end="101:29">qmp_chardev_add</name><argument_list pos:start="101:30" pos:end="101:60">(<argument pos:start="101:31" pos:end="101:44"><expr pos:start="101:31" pos:end="101:44"><ternary pos:start="101:31" pos:end="101:44"><condition pos:start="101:31" pos:end="101:35"><expr pos:start="101:31" pos:end="101:33"><name pos:start="101:31" pos:end="101:33">bid</name></expr> ?</condition><then pos:start="101:37" pos:end="101:39"> <expr pos:start="101:37" pos:end="101:39"><name pos:start="101:37" pos:end="101:39">bid</name></expr> </then><else pos:start="101:41" pos:end="101:44">: <expr pos:start="101:43" pos:end="101:44"><name pos:start="101:43" pos:end="101:44">id</name></expr></else></ternary></expr></argument>, <argument pos:start="101:47" pos:end="101:53"><expr pos:start="101:47" pos:end="101:53"><name pos:start="101:47" pos:end="101:53">backend</name></expr></argument>, <argument pos:start="101:56" pos:end="101:59"><expr pos:start="101:56" pos:end="101:59"><name pos:start="101:56" pos:end="101:59">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:31">(<expr pos:start="103:13" pos:end="103:30"><call pos:start="103:13" pos:end="103:30"><name pos:start="103:13" pos:end="103:24">error_is_set</name><argument_list pos:start="103:25" pos:end="103:30">(<argument pos:start="103:26" pos:end="103:29"><expr pos:start="103:26" pos:end="103:29"><name pos:start="103:26" pos:end="103:29">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:33" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:26">

            <goto pos:start="105:13" pos:end="105:26">goto <name pos:start="105:18" pos:end="105:25">qapi_out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="111:9" pos:end="133:9"><if pos:start="111:9" pos:end="133:9">if <condition pos:start="111:12" pos:end="111:16">(<expr pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">bid</name></expr>)</condition> <block pos:start="111:18" pos:end="133:9">{<block_content pos:start="113:13" pos:end="131:13">

            <expr_stmt pos:start="113:13" pos:end="113:46"><expr pos:start="113:13" pos:end="113:45"><call pos:start="113:13" pos:end="113:45"><name pos:start="113:13" pos:end="113:36">qapi_free_ChardevBackend</name><argument_list pos:start="113:37" pos:end="113:45">(<argument pos:start="113:38" pos:end="113:44"><expr pos:start="113:38" pos:end="113:44"><name pos:start="113:38" pos:end="113:44">backend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:41"><expr pos:start="115:13" pos:end="115:40"><call pos:start="115:13" pos:end="115:40"><name pos:start="115:13" pos:end="115:35">qapi_free_ChardevReturn</name><argument_list pos:start="115:36" pos:end="115:40">(<argument pos:start="115:37" pos:end="115:39"><expr pos:start="115:37" pos:end="115:39"><name pos:start="115:37" pos:end="115:39">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:19">backend</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <call pos:start="117:23" pos:end="117:47"><name pos:start="117:23" pos:end="117:28">g_new0</name><argument_list pos:start="117:29" pos:end="117:47">(<argument pos:start="117:30" pos:end="117:43"><expr pos:start="117:30" pos:end="117:43"><name pos:start="117:30" pos:end="117:43">ChardevBackend</name></expr></argument>, <argument pos:start="117:46" pos:end="117:46"><expr pos:start="117:46" pos:end="117:46"><literal type="number" pos:start="117:46" pos:end="117:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:49"><expr pos:start="119:13" pos:end="119:48"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:19">backend</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:24">mux</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <call pos:start="119:28" pos:end="119:48"><name pos:start="119:28" pos:end="119:33">g_new0</name><argument_list pos:start="119:34" pos:end="119:48">(<argument pos:start="119:35" pos:end="119:44"><expr pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:44">ChardevMux</name></expr></argument>, <argument pos:start="119:47" pos:end="119:47"><expr pos:start="119:47" pos:end="119:47"><literal type="number" pos:start="119:47" pos:end="119:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:53"><expr pos:start="121:13" pos:end="121:52"><name pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:19">backend</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:25">kind</name></name> <operator pos:start="121:27" pos:end="121:27">=</operator> <name pos:start="121:29" pos:end="121:52">CHARDEV_BACKEND_KIND_MUX</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:50"><expr pos:start="123:13" pos:end="123:49"><name pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:19">backend</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:24">mux</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:33">chardev</name></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <call pos:start="123:37" pos:end="123:49"><name pos:start="123:37" pos:end="123:44">g_strdup</name><argument_list pos:start="123:45" pos:end="123:49">(<argument pos:start="123:46" pos:end="123:48"><expr pos:start="123:46" pos:end="123:48"><name pos:start="123:46" pos:end="123:48">bid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:53"><expr pos:start="125:13" pos:end="125:52"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:52"><name pos:start="125:19" pos:end="125:33">qmp_chardev_add</name><argument_list pos:start="125:34" pos:end="125:52">(<argument pos:start="125:35" pos:end="125:36"><expr pos:start="125:35" pos:end="125:36"><name pos:start="125:35" pos:end="125:36">id</name></expr></argument>, <argument pos:start="125:39" pos:end="125:45"><expr pos:start="125:39" pos:end="125:45"><name pos:start="125:39" pos:end="125:45">backend</name></expr></argument>, <argument pos:start="125:48" pos:end="125:51"><expr pos:start="125:48" pos:end="125:51"><name pos:start="125:48" pos:end="125:51">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="131:13"><if pos:start="127:13" pos:end="131:13">if <condition pos:start="127:16" pos:end="127:35">(<expr pos:start="127:17" pos:end="127:34"><call pos:start="127:17" pos:end="127:34"><name pos:start="127:17" pos:end="127:28">error_is_set</name><argument_list pos:start="127:29" pos:end="127:34">(<argument pos:start="127:30" pos:end="127:33"><expr pos:start="127:30" pos:end="127:33"><name pos:start="127:30" pos:end="127:33">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:37" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:30">

                <goto pos:start="129:17" pos:end="129:30">goto <name pos:start="129:22" pos:end="129:29">qapi_out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:32"><expr pos:start="137:9" pos:end="137:31"><name pos:start="137:9" pos:end="137:11">chr</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:31"><name pos:start="137:15" pos:end="137:27">qemu_chr_find</name><argument_list pos:start="137:28" pos:end="137:31">(<argument pos:start="137:29" pos:end="137:30"><expr pos:start="137:29" pos:end="137:30"><name pos:start="137:29" pos:end="137:30">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <label pos:start="141:5" pos:end="141:13"><name pos:start="141:5" pos:end="141:12">qapi_out</name>:</label>

        <expr_stmt pos:start="143:9" pos:end="143:42"><expr pos:start="143:9" pos:end="143:41"><call pos:start="143:9" pos:end="143:41"><name pos:start="143:9" pos:end="143:32">qapi_free_ChardevBackend</name><argument_list pos:start="143:33" pos:end="143:41">(<argument pos:start="143:34" pos:end="143:40"><expr pos:start="143:34" pos:end="143:40"><name pos:start="143:34" pos:end="143:40">backend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:37"><expr pos:start="145:9" pos:end="145:36"><call pos:start="145:9" pos:end="145:36"><name pos:start="145:9" pos:end="145:31">qapi_free_ChardevReturn</name><argument_list pos:start="145:32" pos:end="145:36">(<argument pos:start="145:33" pos:end="145:35"><expr pos:start="145:33" pos:end="145:35"><name pos:start="145:33" pos:end="145:35">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:19">return <expr pos:start="147:16" pos:end="147:18"><name pos:start="147:16" pos:end="147:18">chr</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:25"><expr pos:start="153:5" pos:end="153:24"><name pos:start="153:5" pos:end="153:7">chr</name> <operator pos:start="153:9" pos:end="153:9">=</operator> <call pos:start="153:11" pos:end="153:24"><name pos:start="153:11" pos:end="153:18"><name pos:start="153:11" pos:end="153:12">cd</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:18">open</name></name><argument_list pos:start="153:19" pos:end="153:24">(<argument pos:start="153:20" pos:end="153:23"><expr pos:start="153:20" pos:end="153:23"><name pos:start="153:20" pos:end="153:23">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="163:5"><if pos:start="155:5" pos:end="163:5">if <condition pos:start="155:8" pos:end="155:13">(<expr pos:start="155:9" pos:end="155:12"><operator pos:start="155:9" pos:end="155:9">!</operator><name pos:start="155:10" pos:end="155:12">chr</name></expr>)</condition> <block pos:start="155:15" pos:end="163:5">{<block_content pos:start="157:9" pos:end="161:17">

        <expr_stmt pos:start="157:9" pos:end="159:50"><expr pos:start="157:9" pos:end="159:49"><call pos:start="157:9" pos:end="159:49"><name pos:start="157:9" pos:end="157:18">error_setg</name><argument_list pos:start="157:19" pos:end="159:49">(<argument pos:start="157:20" pos:end="157:23"><expr pos:start="157:20" pos:end="157:23"><name pos:start="157:20" pos:end="157:23">errp</name></expr></argument>, <argument pos:start="157:26" pos:end="157:65"><expr pos:start="157:26" pos:end="157:65"><literal type="string" pos:start="157:26" pos:end="157:65">"chardev: opening backend \"%s\" failed"</literal></expr></argument>,

                   <argument pos:start="159:20" pos:end="159:48"><expr pos:start="159:20" pos:end="159:48"><call pos:start="159:20" pos:end="159:48"><name pos:start="159:20" pos:end="159:31">qemu_opt_get</name><argument_list pos:start="159:32" pos:end="159:48">(<argument pos:start="159:33" pos:end="159:36"><expr pos:start="159:33" pos:end="159:36"><name pos:start="159:33" pos:end="159:36">opts</name></expr></argument>, <argument pos:start="159:39" pos:end="159:47"><expr pos:start="159:39" pos:end="159:47"><literal type="string" pos:start="159:39" pos:end="159:47">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:17">goto <name pos:start="161:14" pos:end="161:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="169:64"><if pos:start="167:5" pos:end="169:64">if <condition pos:start="167:8" pos:end="167:23">(<expr pos:start="167:9" pos:end="167:22"><operator pos:start="167:9" pos:end="167:9">!</operator><name pos:start="167:10" pos:end="167:22"><name pos:start="167:10" pos:end="167:12">chr</name><operator pos:start="167:13" pos:end="167:14">-&gt;</operator><name pos:start="167:15" pos:end="167:22">filename</name></name></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:64"><block_content pos:start="169:9" pos:end="169:64">

        <expr_stmt pos:start="169:9" pos:end="169:64"><expr pos:start="169:9" pos:end="169:63"><name pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:11">chr</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:21">filename</name></name> <operator pos:start="169:23" pos:end="169:23">=</operator> <call pos:start="169:25" pos:end="169:63"><name pos:start="169:25" pos:end="169:32">g_strdup</name><argument_list pos:start="169:33" pos:end="169:63">(<argument pos:start="169:34" pos:end="169:62"><expr pos:start="169:34" pos:end="169:62"><call pos:start="169:34" pos:end="169:62"><name pos:start="169:34" pos:end="169:45">qemu_opt_get</name><argument_list pos:start="169:46" pos:end="169:62">(<argument pos:start="169:47" pos:end="169:50"><expr pos:start="169:47" pos:end="169:50"><name pos:start="169:47" pos:end="169:50">opts</name></expr></argument>, <argument pos:start="169:53" pos:end="169:61"><expr pos:start="169:53" pos:end="169:61"><literal type="string" pos:start="169:53" pos:end="169:61">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:21"><expr pos:start="171:5" pos:end="171:20"><name pos:start="171:5" pos:end="171:13"><name pos:start="171:5" pos:end="171:7">chr</name><operator pos:start="171:8" pos:end="171:9">-&gt;</operator><name pos:start="171:10" pos:end="171:13">init</name></name> <operator pos:start="171:15" pos:end="171:15">=</operator> <name pos:start="171:17" pos:end="171:20">init</name></expr>;</expr_stmt>

    <comment type="block" pos:start="173:5" pos:end="177:7">/* if we didn't create the chardev via qmp_chardev_add, we

     * need to send the OPENED event here

     */</comment>

    <if_stmt pos:start="179:5" pos:end="183:5"><if pos:start="179:5" pos:end="183:5">if <condition pos:start="179:8" pos:end="179:31">(<expr pos:start="179:9" pos:end="179:30"><operator pos:start="179:9" pos:end="179:9">!</operator><name pos:start="179:10" pos:end="179:30"><name pos:start="179:10" pos:end="179:12">chr</name><operator pos:start="179:13" pos:end="179:14">-&gt;</operator><name pos:start="179:15" pos:end="179:30">explicit_be_open</name></name></expr>)</condition> <block pos:start="179:33" pos:end="183:5">{<block_content pos:start="181:9" pos:end="181:49">

        <expr_stmt pos:start="181:9" pos:end="181:49"><expr pos:start="181:9" pos:end="181:48"><call pos:start="181:9" pos:end="181:48"><name pos:start="181:9" pos:end="181:25">qemu_chr_be_event</name><argument_list pos:start="181:26" pos:end="181:48">(<argument pos:start="181:27" pos:end="181:29"><expr pos:start="181:27" pos:end="181:29"><name pos:start="181:27" pos:end="181:29">chr</name></expr></argument>, <argument pos:start="181:32" pos:end="181:47"><expr pos:start="181:32" pos:end="181:47"><name pos:start="181:32" pos:end="181:47">CHR_EVENT_OPENED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:45"><expr pos:start="185:5" pos:end="185:44"><call pos:start="185:5" pos:end="185:44"><name pos:start="185:5" pos:end="185:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="185:23" pos:end="185:44">(<argument pos:start="185:24" pos:end="185:32"><expr pos:start="185:24" pos:end="185:32"><operator pos:start="185:24" pos:end="185:24">&amp;</operator><name pos:start="185:25" pos:end="185:32">chardevs</name></expr></argument>, <argument pos:start="185:35" pos:end="185:37"><expr pos:start="185:35" pos:end="185:37"><name pos:start="185:35" pos:end="185:37">chr</name></expr></argument>, <argument pos:start="185:40" pos:end="185:43"><expr pos:start="185:40" pos:end="185:43"><name pos:start="185:40" pos:end="185:43">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="189:5" pos:end="211:5"><if pos:start="189:5" pos:end="207:5">if <condition pos:start="189:8" pos:end="189:42">(<expr pos:start="189:9" pos:end="189:41"><call pos:start="189:9" pos:end="189:41"><name pos:start="189:9" pos:end="189:25">qemu_opt_get_bool</name><argument_list pos:start="189:26" pos:end="189:41">(<argument pos:start="189:27" pos:end="189:30"><expr pos:start="189:27" pos:end="189:30"><name pos:start="189:27" pos:end="189:30">opts</name></expr></argument>, <argument pos:start="189:33" pos:end="189:37"><expr pos:start="189:33" pos:end="189:37"><literal type="string" pos:start="189:33" pos:end="189:37">"mux"</literal></expr></argument>, <argument pos:start="189:40" pos:end="189:40"><expr pos:start="189:40" pos:end="189:40"><literal type="number" pos:start="189:40" pos:end="189:40">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:44" pos:end="207:5">{<block_content pos:start="191:9" pos:end="205:49">

        <decl_stmt pos:start="191:9" pos:end="191:36"><decl pos:start="191:9" pos:end="191:35"><type pos:start="191:9" pos:end="191:25"><name pos:start="191:9" pos:end="191:23">CharDriverState</name> <modifier pos:start="191:25" pos:end="191:25">*</modifier></type><name pos:start="191:26" pos:end="191:29">base</name> <init pos:start="191:31" pos:end="191:35">= <expr pos:start="191:33" pos:end="191:35"><name pos:start="191:33" pos:end="191:35">chr</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:49"><decl pos:start="193:9" pos:end="193:48"><type pos:start="193:9" pos:end="193:11"><name pos:start="193:9" pos:end="193:11">int</name></type> <name pos:start="193:13" pos:end="193:15">len</name> <init pos:start="193:17" pos:end="193:48">= <expr pos:start="193:19" pos:end="193:48"><call pos:start="193:19" pos:end="193:44"><name pos:start="193:19" pos:end="193:24">strlen</name><argument_list pos:start="193:25" pos:end="193:44">(<argument pos:start="193:26" pos:end="193:43"><expr pos:start="193:26" pos:end="193:43"><call pos:start="193:26" pos:end="193:43"><name pos:start="193:26" pos:end="193:37">qemu_opts_id</name><argument_list pos:start="193:38" pos:end="193:43">(<argument pos:start="193:39" pos:end="193:42"><expr pos:start="193:39" pos:end="193:42"><name pos:start="193:39" pos:end="193:42">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="193:46" pos:end="193:46">+</operator> <literal type="number" pos:start="193:48" pos:end="193:48">6</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:36"><expr pos:start="195:9" pos:end="195:35"><name pos:start="195:9" pos:end="195:19"><name pos:start="195:9" pos:end="195:12">base</name><operator pos:start="195:13" pos:end="195:14">-&gt;</operator><name pos:start="195:15" pos:end="195:19">label</name></name> <operator pos:start="195:21" pos:end="195:21">=</operator> <call pos:start="195:23" pos:end="195:35"><name pos:start="195:23" pos:end="195:30">g_malloc</name><argument_list pos:start="195:31" pos:end="195:35">(<argument pos:start="195:32" pos:end="195:34"><expr pos:start="195:32" pos:end="195:34"><name pos:start="195:32" pos:end="195:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:66"><expr pos:start="197:9" pos:end="197:65"><call pos:start="197:9" pos:end="197:65"><name pos:start="197:9" pos:end="197:16">snprintf</name><argument_list pos:start="197:17" pos:end="197:65">(<argument pos:start="197:18" pos:end="197:28"><expr pos:start="197:18" pos:end="197:28"><name pos:start="197:18" pos:end="197:28"><name pos:start="197:18" pos:end="197:21">base</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:28">label</name></name></expr></argument>, <argument pos:start="197:31" pos:end="197:33"><expr pos:start="197:31" pos:end="197:33"><name pos:start="197:31" pos:end="197:33">len</name></expr></argument>, <argument pos:start="197:36" pos:end="197:44"><expr pos:start="197:36" pos:end="197:44"><literal type="string" pos:start="197:36" pos:end="197:44">"%s-base"</literal></expr></argument>, <argument pos:start="197:47" pos:end="197:64"><expr pos:start="197:47" pos:end="197:64"><call pos:start="197:47" pos:end="197:64"><name pos:start="197:47" pos:end="197:58">qemu_opts_id</name><argument_list pos:start="197:59" pos:end="197:64">(<argument pos:start="197:60" pos:end="197:63"><expr pos:start="197:60" pos:end="197:63"><name pos:start="197:60" pos:end="197:63">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:38"><expr pos:start="199:9" pos:end="199:37"><name pos:start="199:9" pos:end="199:11">chr</name> <operator pos:start="199:13" pos:end="199:13">=</operator> <call pos:start="199:15" pos:end="199:37"><name pos:start="199:15" pos:end="199:31">qemu_chr_open_mux</name><argument_list pos:start="199:32" pos:end="199:37">(<argument pos:start="199:33" pos:end="199:36"><expr pos:start="199:33" pos:end="199:36"><name pos:start="199:33" pos:end="199:36">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:39"><expr pos:start="201:9" pos:end="201:38"><name pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:11">chr</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:21">filename</name></name> <operator pos:start="201:23" pos:end="201:23">=</operator> <name pos:start="201:25" pos:end="201:38"><name pos:start="201:25" pos:end="201:28">base</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:38">filename</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:41"><expr pos:start="203:9" pos:end="203:40"><name pos:start="203:9" pos:end="203:30"><name pos:start="203:9" pos:end="203:11">chr</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:30">avail_connections</name></name> <operator pos:start="203:32" pos:end="203:32">=</operator> <name pos:start="203:34" pos:end="203:40">MAX_MUX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:49"><expr pos:start="205:9" pos:end="205:48"><call pos:start="205:9" pos:end="205:48"><name pos:start="205:9" pos:end="205:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="205:27" pos:end="205:48">(<argument pos:start="205:28" pos:end="205:36"><expr pos:start="205:28" pos:end="205:36"><operator pos:start="205:28" pos:end="205:28">&amp;</operator><name pos:start="205:29" pos:end="205:36">chardevs</name></expr></argument>, <argument pos:start="205:39" pos:end="205:41"><expr pos:start="205:39" pos:end="205:41"><name pos:start="205:39" pos:end="205:41">chr</name></expr></argument>, <argument pos:start="205:44" pos:end="205:47"><expr pos:start="205:44" pos:end="205:47"><name pos:start="205:44" pos:end="205:47">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="207:7" pos:end="211:5">else <block pos:start="207:12" pos:end="211:5">{<block_content pos:start="209:9" pos:end="209:35">

        <expr_stmt pos:start="209:9" pos:end="209:35"><expr pos:start="209:9" pos:end="209:34"><name pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:11">chr</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:30">avail_connections</name></name> <operator pos:start="209:32" pos:end="209:32">=</operator> <literal type="number" pos:start="209:34" pos:end="209:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:46"><expr pos:start="213:5" pos:end="213:45"><name pos:start="213:5" pos:end="213:14"><name pos:start="213:5" pos:end="213:7">chr</name><operator pos:start="213:8" pos:end="213:9">-&gt;</operator><name pos:start="213:10" pos:end="213:14">label</name></name> <operator pos:start="213:16" pos:end="213:16">=</operator> <call pos:start="213:18" pos:end="213:45"><name pos:start="213:18" pos:end="213:25">g_strdup</name><argument_list pos:start="213:26" pos:end="213:45">(<argument pos:start="213:27" pos:end="213:44"><expr pos:start="213:27" pos:end="213:44"><call pos:start="213:27" pos:end="213:44"><name pos:start="213:27" pos:end="213:38">qemu_opts_id</name><argument_list pos:start="213:39" pos:end="213:44">(<argument pos:start="213:40" pos:end="213:43"><expr pos:start="213:40" pos:end="213:43"><name pos:start="213:40" pos:end="213:43">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:21"><expr pos:start="215:5" pos:end="215:20"><name pos:start="215:5" pos:end="215:13"><name pos:start="215:5" pos:end="215:7">chr</name><operator pos:start="215:8" pos:end="215:9">-&gt;</operator><name pos:start="215:10" pos:end="215:13">opts</name></name> <operator pos:start="215:15" pos:end="215:15">=</operator> <name pos:start="215:17" pos:end="215:20">opts</name></expr>;</expr_stmt>

    <return pos:start="217:5" pos:end="217:15">return <expr pos:start="217:12" pos:end="217:14"><name pos:start="217:12" pos:end="217:14">chr</name></expr>;</return>



<label pos:start="221:1" pos:end="221:4"><name pos:start="221:1" pos:end="221:3">err</name>:</label>

    <expr_stmt pos:start="223:5" pos:end="223:24"><expr pos:start="223:5" pos:end="223:23"><call pos:start="223:5" pos:end="223:23"><name pos:start="223:5" pos:end="223:17">qemu_opts_del</name><argument_list pos:start="223:18" pos:end="223:23">(<argument pos:start="223:19" pos:end="223:22"><expr pos:start="223:19" pos:end="223:22"><name pos:start="223:19" pos:end="223:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="225:5" pos:end="225:16">return <expr pos:start="225:12" pos:end="225:15"><name pos:start="225:12" pos:end="225:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
