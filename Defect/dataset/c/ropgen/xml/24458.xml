<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24458.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">page_set_flags</name><parameter_list pos:start="1:20" pos:end="1:68">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:32">target_ulong</name></type> <name pos:start="1:34" pos:end="1:38">start</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:52">target_ulong</name></type> <name pos:start="1:54" pos:end="1:56">end</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:67">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">PageDesc</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">addr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:44">/* mmap_lock should already be held.  */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:9">start</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:17">start</name> <operator pos:start="13:19" pos:end="13:19">&amp;</operator> <name pos:start="13:21" pos:end="13:36">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:7">end</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:32"><name pos:start="15:11" pos:end="15:27">TARGET_PAGE_ALIGN</name><argument_list pos:start="15:28" pos:end="15:32">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:32"><if pos:start="17:5" pos:end="19:32">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:13">flags</name> <operator pos:start="17:15" pos:end="17:15">&amp;</operator> <name pos:start="17:17" pos:end="17:26">PAGE_WRITE</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:32"><block_content pos:start="19:9" pos:end="19:32">

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:13">flags</name> <operator pos:start="19:15" pos:end="19:16">|=</operator> <name pos:start="19:18" pos:end="19:31">PAGE_WRITE_ORG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="21:5" pos:end="49:5">for<control pos:start="21:8" pos:end="21:59">(<init pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:12">addr</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:20">start</name></expr>;</init> <condition pos:start="21:23" pos:end="21:33"><expr pos:start="21:23" pos:end="21:32"><name pos:start="21:23" pos:end="21:26">addr</name> <operator pos:start="21:28" pos:end="21:28">&lt;</operator> <name pos:start="21:30" pos:end="21:32">end</name></expr>;</condition> <incr pos:start="21:35" pos:end="21:58"><expr pos:start="21:35" pos:end="21:58"><name pos:start="21:35" pos:end="21:38">addr</name> <operator pos:start="21:40" pos:end="21:41">+=</operator> <name pos:start="21:43" pos:end="21:58">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="21:61" pos:end="49:5">{<block_content pos:start="23:9" pos:end="47:25">

        <expr_stmt pos:start="23:9" pos:end="23:54"><expr pos:start="23:9" pos:end="23:53"><name pos:start="23:9" pos:end="23:9">p</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:53"><name pos:start="23:13" pos:end="23:27">page_find_alloc</name><argument_list pos:start="23:28" pos:end="23:53">(<argument pos:start="23:29" pos:end="23:52"><expr pos:start="23:29" pos:end="23:52"><name pos:start="23:29" pos:end="23:32">addr</name> <operator pos:start="23:34" pos:end="23:35">&gt;&gt;</operator> <name pos:start="23:37" pos:end="23:52">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="25:9" pos:end="27:29">/* We may be called for host regions that are outside guest

           address space.  */</comment>

        <if_stmt pos:start="29:9" pos:end="31:19"><if pos:start="29:9" pos:end="31:19">if <condition pos:start="29:12" pos:end="29:15">(<expr pos:start="29:13" pos:end="29:14"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:14">p</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:19"><block_content pos:start="31:13" pos:end="31:19">

            <return pos:start="31:13" pos:end="31:19">return;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="33:9" pos:end="35:20">/* if the write protection is set, then we invalidate the code

           inside */</comment>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="41:24">(<expr pos:start="37:13" pos:end="41:23"><operator pos:start="37:13" pos:end="37:13">!</operator><operator pos:start="37:14" pos:end="37:14">(</operator><name pos:start="37:15" pos:end="37:22"><name pos:start="37:15" pos:end="37:15">p</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:22">flags</name></name> <operator pos:start="37:24" pos:end="37:24">&amp;</operator> <name pos:start="37:26" pos:end="37:35">PAGE_WRITE</name><operator pos:start="37:36" pos:end="37:36">)</operator> <operator pos:start="37:38" pos:end="37:39">&amp;&amp;</operator>

            <operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:18">flags</name> <operator pos:start="39:20" pos:end="39:20">&amp;</operator> <name pos:start="39:22" pos:end="39:31">PAGE_WRITE</name><operator pos:start="39:32" pos:end="39:32">)</operator> <operator pos:start="39:34" pos:end="39:35">&amp;&amp;</operator>

            <name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:13">p</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:23">first_tb</name></name></expr>)</condition> <block pos:start="41:26" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:51">

            <expr_stmt pos:start="43:13" pos:end="43:51"><expr pos:start="43:13" pos:end="43:50"><call pos:start="43:13" pos:end="43:50"><name pos:start="43:13" pos:end="43:35">tb_invalidate_phys_page</name><argument_list pos:start="43:36" pos:end="43:50">(<argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">addr</name></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">0</literal></expr></argument>, <argument pos:start="43:46" pos:end="43:49"><expr pos:start="43:46" pos:end="43:49"><name pos:start="43:46" pos:end="43:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:25"><expr pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:9">p</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">flags</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:24">flags</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
