<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3014.c" pos:tabs="8"><function pos:start="1:1" pos:end="737:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">tcg_out_op</name><parameter_list pos:start="1:23" pos:end="5:61">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:33">TCGContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:47">TCGOpcode</name></type> <name pos:start="1:49" pos:end="1:51">opc</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:57"><decl pos:start="3:24" pos:end="3:57"><type pos:start="3:24" pos:end="3:40"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:35">TCGArg</name></type> <name pos:start="3:37" pos:end="3:57"><name pos:start="3:37" pos:end="3:40">args</name><index pos:start="3:41" pos:end="3:57">[<expr pos:start="3:42" pos:end="3:56"><name pos:start="3:42" pos:end="3:56">TCG_MAX_OP_ARGS</name></expr>]</index></name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:60"><decl pos:start="5:24" pos:end="5:60"><type pos:start="5:24" pos:end="5:43"><specifier pos:start="5:24" pos:end="5:28">const</specifier> <name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:60"><name pos:start="5:34" pos:end="5:43">const_args</name><index pos:start="5:44" pos:end="5:60">[<expr pos:start="5:45" pos:end="5:59"><name pos:start="5:45" pos:end="5:59">TCG_MAX_OP_ARGS</name></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="737:1">{<block_content pos:start="13:5" pos:end="736:0">

    <comment type="block" pos:start="9:5" pos:end="11:63">/* 99% of the time, we can signal the use of extension registers

       by looking to see if the opcode handles 64-bit data.  */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:64"><decl pos:start="13:5" pos:end="13:63"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">TCGType</name></type> <name pos:start="13:13" pos:end="13:15">ext</name> <init pos:start="13:17" pos:end="13:63">= <expr pos:start="13:19" pos:end="13:63"><operator pos:start="13:19" pos:end="13:19">(</operator><name pos:start="13:20" pos:end="13:35"><name pos:start="13:20" pos:end="13:30">tcg_op_defs</name><index pos:start="13:31" pos:end="13:35">[<expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">opc</name></expr>]</index></name><operator pos:start="13:36" pos:end="13:36">.</operator><name pos:start="13:37" pos:end="13:41">flags</name> <operator pos:start="13:43" pos:end="13:43">&amp;</operator> <name pos:start="13:45" pos:end="13:57">TCG_OPF_64BIT</name><operator pos:start="13:58" pos:end="13:58">)</operator> <operator pos:start="13:60" pos:end="13:61">!=</operator> <literal type="number" pos:start="13:63" pos:end="13:63">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:56">/* Hoist the loads of the most common arguments.  */</comment>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">TCGArg</name></type> <name pos:start="19:12" pos:end="19:13">a0</name> <init pos:start="19:15" pos:end="19:23">= <expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:20">args</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">TCGArg</name></type> <name pos:start="21:12" pos:end="21:13">a1</name> <init pos:start="21:15" pos:end="21:23">= <expr pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:20">args</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:10">TCGArg</name></type> <name pos:start="23:12" pos:end="23:13">a2</name> <init pos:start="23:15" pos:end="23:23">= <expr pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:20">args</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="34:0"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:10">c2</name> <init pos:start="25:12" pos:end="25:26">= <expr pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:23">const_args</name><index pos:start="25:24" pos:end="25:26">[<expr pos:start="25:25" pos:end="25:25"><literal type="number" pos:start="25:25" pos:end="25:25">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="31:73">/* Some operands are defined with "rZ" constraint, a register or

       the zero register.  These need not actually test args[I] == 0.  */</comment>

<cpp:define pos:start="33:1" pos:end="33:64">#<cpp:directive pos:start="33:2" pos:end="33:7">define</cpp:directive> <cpp:macro pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">REG0</name><parameter_list pos:start="33:13" pos:end="33:15">(<parameter pos:start="33:14" pos:end="33:14"><type pos:start="33:14" pos:end="33:14"><name pos:start="33:14" pos:end="33:14">I</name></type></parameter>)</parameter_list></cpp:macro>  <cpp:value pos:start="33:18" pos:end="33:64">(const_args[I] ? TCG_REG_XZR : (TCGReg)args[I])</cpp:value></cpp:define>



    <switch pos:start="37:5" pos:end="736:0">switch <condition pos:start="37:12" pos:end="37:16">(<expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">opc</name></expr>)</condition> <block pos:start="37:18" pos:end="736:0">{<block_content pos:start="39:5" pos:end="729:20">

    <case pos:start="39:5" pos:end="39:26">case <expr pos:start="39:10" pos:end="39:25"><name pos:start="39:10" pos:end="39:25">INDEX_op_exit_tb</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><call pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:20">tcg_out_movi</name><argument_list pos:start="41:21" pos:end="41:53">(<argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">s</name></expr></argument>, <argument pos:start="41:25" pos:end="41:36"><expr pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:36">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="41:39" pos:end="41:48"><expr pos:start="41:39" pos:end="41:48"><name pos:start="41:39" pos:end="41:48">TCG_REG_X0</name></expr></argument>, <argument pos:start="41:51" pos:end="41:52"><expr pos:start="41:51" pos:end="41:52"><name pos:start="41:51" pos:end="41:52">a0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><call pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:20">tcg_out_goto</name><argument_list pos:start="43:21" pos:end="43:36">(<argument pos:start="43:22" pos:end="43:22"><expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">s</name></expr></argument>, <argument pos:start="43:25" pos:end="43:35"><expr pos:start="43:25" pos:end="43:35"><name pos:start="43:25" pos:end="43:35">tb_ret_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>



    <case pos:start="49:5" pos:end="56:0">case <expr pos:start="49:10" pos:end="49:25"><name pos:start="49:10" pos:end="49:25">INDEX_op_goto_tb</name></expr>:</case>

<cpp:ifndef pos:start="51:1" pos:end="51:23">#<cpp:directive pos:start="51:2" pos:end="51:7">ifndef</cpp:directive> <name pos:start="51:9" pos:end="51:23">USE_DIRECT_JUMP</name></cpp:ifndef>

<cpp:error pos:start="53:1" pos:end="53:45">#<cpp:directive pos:start="53:2" pos:end="53:6">error</cpp:directive> <cpp:literal pos:start="53:8" pos:end="53:45">"USE_DIRECT_JUMP required for aarch64"</cpp:literal></cpp:error>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><call pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:14">assert</name><argument_list pos:start="57:15" pos:end="57:40">(<argument pos:start="57:16" pos:end="57:39"><expr pos:start="57:16" pos:end="57:39"><name pos:start="57:16" pos:end="57:31"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:31">tb_jmp_offset</name></name> <operator pos:start="57:33" pos:end="57:34">!=</operator> <name pos:start="57:36" pos:end="57:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:43" pos:end="57:79">/* consistency for USE_DIRECT_JUMP */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:24">tb_jmp_offset</name><index pos:start="59:25" pos:end="59:28">[<expr pos:start="59:26" pos:end="59:27"><name pos:start="59:26" pos:end="59:27">a0</name></expr>]</index></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <call pos:start="59:32" pos:end="59:55"><name pos:start="59:32" pos:end="59:52">tcg_current_code_size</name><argument_list pos:start="59:53" pos:end="59:55">(<argument pos:start="59:54" pos:end="59:54"><expr pos:start="59:54" pos:end="59:54"><name pos:start="59:54" pos:end="59:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="61:9" pos:end="63:68">/* actual branch destination will be patched by

           aarch64_tb_set_jmp_target later, beware retranslation. */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:31"><expr pos:start="65:9" pos:end="65:30"><call pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:27">tcg_out_goto_noaddr</name><argument_list pos:start="65:28" pos:end="65:30">(<argument pos:start="65:29" pos:end="65:29"><expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:57"><expr pos:start="67:9" pos:end="67:56"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:25">tb_next_offset</name><index pos:start="67:26" pos:end="67:29">[<expr pos:start="67:27" pos:end="67:28"><name pos:start="67:27" pos:end="67:28">a0</name></expr>]</index></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <call pos:start="67:33" pos:end="67:56"><name pos:start="67:33" pos:end="67:53">tcg_current_code_size</name><argument_list pos:start="67:54" pos:end="67:56">(<argument pos:start="67:55" pos:end="67:55"><expr pos:start="67:55" pos:end="67:55"><name pos:start="67:55" pos:end="67:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:21">case <expr pos:start="73:10" pos:end="73:20"><name pos:start="73:10" pos:end="73:20">INDEX_op_br</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><call pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:26">tcg_out_goto_label</name><argument_list pos:start="75:27" pos:end="75:44">(<argument pos:start="75:28" pos:end="75:28"><expr pos:start="75:28" pos:end="75:28"><name pos:start="75:28" pos:end="75:28">s</name></expr></argument>, <argument pos:start="75:31" pos:end="75:43"><expr pos:start="75:31" pos:end="75:43"><call pos:start="75:31" pos:end="75:43"><name pos:start="75:31" pos:end="75:39">arg_label</name><argument_list pos:start="75:40" pos:end="75:43">(<argument pos:start="75:41" pos:end="75:42"><expr pos:start="75:41" pos:end="75:42"><name pos:start="75:41" pos:end="75:42">a0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>



    <case pos:start="81:5" pos:end="81:27">case <expr pos:start="81:10" pos:end="81:26"><name pos:start="81:10" pos:end="81:26">INDEX_op_ld8u_i32</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:27">case <expr pos:start="83:10" pos:end="83:26"><name pos:start="83:10" pos:end="83:26">INDEX_op_ld8u_i64</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:48"><expr pos:start="85:9" pos:end="85:47"><call pos:start="85:9" pos:end="85:47"><name pos:start="85:9" pos:end="85:20">tcg_out_ldst</name><argument_list pos:start="85:21" pos:end="85:47">(<argument pos:start="85:22" pos:end="85:22"><expr pos:start="85:22" pos:end="85:22"><name pos:start="85:22" pos:end="85:22">s</name></expr></argument>, <argument pos:start="85:25" pos:end="85:34"><expr pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:34">I3312_LDRB</name></expr></argument>, <argument pos:start="85:37" pos:end="85:38"><expr pos:start="85:37" pos:end="85:38"><name pos:start="85:37" pos:end="85:38">a0</name></expr></argument>, <argument pos:start="85:41" pos:end="85:42"><expr pos:start="85:41" pos:end="85:42"><name pos:start="85:41" pos:end="85:42">a1</name></expr></argument>, <argument pos:start="85:45" pos:end="85:46"><expr pos:start="85:45" pos:end="85:46"><name pos:start="85:45" pos:end="85:46">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:27">case <expr pos:start="89:10" pos:end="89:26"><name pos:start="89:10" pos:end="89:26">INDEX_op_ld8s_i32</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><call pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:20">tcg_out_ldst</name><argument_list pos:start="91:21" pos:end="91:49">(<argument pos:start="91:22" pos:end="91:22"><expr pos:start="91:22" pos:end="91:22"><name pos:start="91:22" pos:end="91:22">s</name></expr></argument>, <argument pos:start="91:25" pos:end="91:36"><expr pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:36">I3312_LDRSBW</name></expr></argument>, <argument pos:start="91:39" pos:end="91:40"><expr pos:start="91:39" pos:end="91:40"><name pos:start="91:39" pos:end="91:40">a0</name></expr></argument>, <argument pos:start="91:43" pos:end="91:44"><expr pos:start="91:43" pos:end="91:44"><name pos:start="91:43" pos:end="91:44">a1</name></expr></argument>, <argument pos:start="91:47" pos:end="91:48"><expr pos:start="91:47" pos:end="91:48"><name pos:start="91:47" pos:end="91:48">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:27">case <expr pos:start="95:10" pos:end="95:26"><name pos:start="95:10" pos:end="95:26">INDEX_op_ld8s_i64</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:50"><expr pos:start="97:9" pos:end="97:49"><call pos:start="97:9" pos:end="97:49"><name pos:start="97:9" pos:end="97:20">tcg_out_ldst</name><argument_list pos:start="97:21" pos:end="97:49">(<argument pos:start="97:22" pos:end="97:22"><expr pos:start="97:22" pos:end="97:22"><name pos:start="97:22" pos:end="97:22">s</name></expr></argument>, <argument pos:start="97:25" pos:end="97:36"><expr pos:start="97:25" pos:end="97:36"><name pos:start="97:25" pos:end="97:36">I3312_LDRSBX</name></expr></argument>, <argument pos:start="97:39" pos:end="97:40"><expr pos:start="97:39" pos:end="97:40"><name pos:start="97:39" pos:end="97:40">a0</name></expr></argument>, <argument pos:start="97:43" pos:end="97:44"><expr pos:start="97:43" pos:end="97:44"><name pos:start="97:43" pos:end="97:44">a1</name></expr></argument>, <argument pos:start="97:47" pos:end="97:48"><expr pos:start="97:47" pos:end="97:48"><name pos:start="97:47" pos:end="97:48">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:28">case <expr pos:start="101:10" pos:end="101:27"><name pos:start="101:10" pos:end="101:27">INDEX_op_ld16u_i32</name></expr>:</case>

    <case pos:start="103:5" pos:end="103:28">case <expr pos:start="103:10" pos:end="103:27"><name pos:start="103:10" pos:end="103:27">INDEX_op_ld16u_i64</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:48"><expr pos:start="105:9" pos:end="105:47"><call pos:start="105:9" pos:end="105:47"><name pos:start="105:9" pos:end="105:20">tcg_out_ldst</name><argument_list pos:start="105:21" pos:end="105:47">(<argument pos:start="105:22" pos:end="105:22"><expr pos:start="105:22" pos:end="105:22"><name pos:start="105:22" pos:end="105:22">s</name></expr></argument>, <argument pos:start="105:25" pos:end="105:34"><expr pos:start="105:25" pos:end="105:34"><name pos:start="105:25" pos:end="105:34">I3312_LDRH</name></expr></argument>, <argument pos:start="105:37" pos:end="105:38"><expr pos:start="105:37" pos:end="105:38"><name pos:start="105:37" pos:end="105:38">a0</name></expr></argument>, <argument pos:start="105:41" pos:end="105:42"><expr pos:start="105:41" pos:end="105:42"><name pos:start="105:41" pos:end="105:42">a1</name></expr></argument>, <argument pos:start="105:45" pos:end="105:46"><expr pos:start="105:45" pos:end="105:46"><name pos:start="105:45" pos:end="105:46">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:28">case <expr pos:start="109:10" pos:end="109:27"><name pos:start="109:10" pos:end="109:27">INDEX_op_ld16s_i32</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:50"><expr pos:start="111:9" pos:end="111:49"><call pos:start="111:9" pos:end="111:49"><name pos:start="111:9" pos:end="111:20">tcg_out_ldst</name><argument_list pos:start="111:21" pos:end="111:49">(<argument pos:start="111:22" pos:end="111:22"><expr pos:start="111:22" pos:end="111:22"><name pos:start="111:22" pos:end="111:22">s</name></expr></argument>, <argument pos:start="111:25" pos:end="111:36"><expr pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:36">I3312_LDRSHW</name></expr></argument>, <argument pos:start="111:39" pos:end="111:40"><expr pos:start="111:39" pos:end="111:40"><name pos:start="111:39" pos:end="111:40">a0</name></expr></argument>, <argument pos:start="111:43" pos:end="111:44"><expr pos:start="111:43" pos:end="111:44"><name pos:start="111:43" pos:end="111:44">a1</name></expr></argument>, <argument pos:start="111:47" pos:end="111:48"><expr pos:start="111:47" pos:end="111:48"><name pos:start="111:47" pos:end="111:48">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:28">case <expr pos:start="115:10" pos:end="115:27"><name pos:start="115:10" pos:end="115:27">INDEX_op_ld16s_i64</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="117:50"><expr pos:start="117:9" pos:end="117:49"><call pos:start="117:9" pos:end="117:49"><name pos:start="117:9" pos:end="117:20">tcg_out_ldst</name><argument_list pos:start="117:21" pos:end="117:49">(<argument pos:start="117:22" pos:end="117:22"><expr pos:start="117:22" pos:end="117:22"><name pos:start="117:22" pos:end="117:22">s</name></expr></argument>, <argument pos:start="117:25" pos:end="117:36"><expr pos:start="117:25" pos:end="117:36"><name pos:start="117:25" pos:end="117:36">I3312_LDRSHX</name></expr></argument>, <argument pos:start="117:39" pos:end="117:40"><expr pos:start="117:39" pos:end="117:40"><name pos:start="117:39" pos:end="117:40">a0</name></expr></argument>, <argument pos:start="117:43" pos:end="117:44"><expr pos:start="117:43" pos:end="117:44"><name pos:start="117:43" pos:end="117:44">a1</name></expr></argument>, <argument pos:start="117:47" pos:end="117:48"><expr pos:start="117:47" pos:end="117:48"><name pos:start="117:47" pos:end="117:48">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:25">case <expr pos:start="121:10" pos:end="121:24"><name pos:start="121:10" pos:end="121:24">INDEX_op_ld_i32</name></expr>:</case>

    <case pos:start="123:5" pos:end="123:28">case <expr pos:start="123:10" pos:end="123:27"><name pos:start="123:10" pos:end="123:27">INDEX_op_ld32u_i64</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:48"><expr pos:start="125:9" pos:end="125:47"><call pos:start="125:9" pos:end="125:47"><name pos:start="125:9" pos:end="125:20">tcg_out_ldst</name><argument_list pos:start="125:21" pos:end="125:47">(<argument pos:start="125:22" pos:end="125:22"><expr pos:start="125:22" pos:end="125:22"><name pos:start="125:22" pos:end="125:22">s</name></expr></argument>, <argument pos:start="125:25" pos:end="125:34"><expr pos:start="125:25" pos:end="125:34"><name pos:start="125:25" pos:end="125:34">I3312_LDRW</name></expr></argument>, <argument pos:start="125:37" pos:end="125:38"><expr pos:start="125:37" pos:end="125:38"><name pos:start="125:37" pos:end="125:38">a0</name></expr></argument>, <argument pos:start="125:41" pos:end="125:42"><expr pos:start="125:41" pos:end="125:42"><name pos:start="125:41" pos:end="125:42">a1</name></expr></argument>, <argument pos:start="125:45" pos:end="125:46"><expr pos:start="125:45" pos:end="125:46"><name pos:start="125:45" pos:end="125:46">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:28">case <expr pos:start="129:10" pos:end="129:27"><name pos:start="129:10" pos:end="129:27">INDEX_op_ld32s_i64</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:50"><expr pos:start="131:9" pos:end="131:49"><call pos:start="131:9" pos:end="131:49"><name pos:start="131:9" pos:end="131:20">tcg_out_ldst</name><argument_list pos:start="131:21" pos:end="131:49">(<argument pos:start="131:22" pos:end="131:22"><expr pos:start="131:22" pos:end="131:22"><name pos:start="131:22" pos:end="131:22">s</name></expr></argument>, <argument pos:start="131:25" pos:end="131:36"><expr pos:start="131:25" pos:end="131:36"><name pos:start="131:25" pos:end="131:36">I3312_LDRSWX</name></expr></argument>, <argument pos:start="131:39" pos:end="131:40"><expr pos:start="131:39" pos:end="131:40"><name pos:start="131:39" pos:end="131:40">a0</name></expr></argument>, <argument pos:start="131:43" pos:end="131:44"><expr pos:start="131:43" pos:end="131:44"><name pos:start="131:43" pos:end="131:44">a1</name></expr></argument>, <argument pos:start="131:47" pos:end="131:48"><expr pos:start="131:47" pos:end="131:48"><name pos:start="131:47" pos:end="131:48">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:25">case <expr pos:start="135:10" pos:end="135:24"><name pos:start="135:10" pos:end="135:24">INDEX_op_ld_i64</name></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:48"><expr pos:start="137:9" pos:end="137:47"><call pos:start="137:9" pos:end="137:47"><name pos:start="137:9" pos:end="137:20">tcg_out_ldst</name><argument_list pos:start="137:21" pos:end="137:47">(<argument pos:start="137:22" pos:end="137:22"><expr pos:start="137:22" pos:end="137:22"><name pos:start="137:22" pos:end="137:22">s</name></expr></argument>, <argument pos:start="137:25" pos:end="137:34"><expr pos:start="137:25" pos:end="137:34"><name pos:start="137:25" pos:end="137:34">I3312_LDRX</name></expr></argument>, <argument pos:start="137:37" pos:end="137:38"><expr pos:start="137:37" pos:end="137:38"><name pos:start="137:37" pos:end="137:38">a0</name></expr></argument>, <argument pos:start="137:41" pos:end="137:42"><expr pos:start="137:41" pos:end="137:42"><name pos:start="137:41" pos:end="137:42">a1</name></expr></argument>, <argument pos:start="137:45" pos:end="137:46"><expr pos:start="137:45" pos:end="137:46"><name pos:start="137:45" pos:end="137:46">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>



    <case pos:start="143:5" pos:end="143:26">case <expr pos:start="143:10" pos:end="143:25"><name pos:start="143:10" pos:end="143:25">INDEX_op_st8_i32</name></expr>:</case>

    <case pos:start="145:5" pos:end="145:26">case <expr pos:start="145:10" pos:end="145:25"><name pos:start="145:10" pos:end="145:25">INDEX_op_st8_i64</name></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="147:53"><expr pos:start="147:9" pos:end="147:52"><call pos:start="147:9" pos:end="147:52"><name pos:start="147:9" pos:end="147:20">tcg_out_ldst</name><argument_list pos:start="147:21" pos:end="147:52">(<argument pos:start="147:22" pos:end="147:22"><expr pos:start="147:22" pos:end="147:22"><name pos:start="147:22" pos:end="147:22">s</name></expr></argument>, <argument pos:start="147:25" pos:end="147:34"><expr pos:start="147:25" pos:end="147:34"><name pos:start="147:25" pos:end="147:34">I3312_STRB</name></expr></argument>, <argument pos:start="147:37" pos:end="147:43"><expr pos:start="147:37" pos:end="147:43"><call pos:start="147:37" pos:end="147:43"><name pos:start="147:37" pos:end="147:40">REG0</name><argument_list pos:start="147:41" pos:end="147:43">(<argument pos:start="147:42" pos:end="147:42"><expr pos:start="147:42" pos:end="147:42"><literal type="number" pos:start="147:42" pos:end="147:42">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:46" pos:end="147:47"><expr pos:start="147:46" pos:end="147:47"><name pos:start="147:46" pos:end="147:47">a1</name></expr></argument>, <argument pos:start="147:50" pos:end="147:51"><expr pos:start="147:50" pos:end="147:51"><name pos:start="147:50" pos:end="147:51">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:27">case <expr pos:start="151:10" pos:end="151:26"><name pos:start="151:10" pos:end="151:26">INDEX_op_st16_i32</name></expr>:</case>

    <case pos:start="153:5" pos:end="153:27">case <expr pos:start="153:10" pos:end="153:26"><name pos:start="153:10" pos:end="153:26">INDEX_op_st16_i64</name></expr>:</case>

        <expr_stmt pos:start="155:9" pos:end="155:53"><expr pos:start="155:9" pos:end="155:52"><call pos:start="155:9" pos:end="155:52"><name pos:start="155:9" pos:end="155:20">tcg_out_ldst</name><argument_list pos:start="155:21" pos:end="155:52">(<argument pos:start="155:22" pos:end="155:22"><expr pos:start="155:22" pos:end="155:22"><name pos:start="155:22" pos:end="155:22">s</name></expr></argument>, <argument pos:start="155:25" pos:end="155:34"><expr pos:start="155:25" pos:end="155:34"><name pos:start="155:25" pos:end="155:34">I3312_STRH</name></expr></argument>, <argument pos:start="155:37" pos:end="155:43"><expr pos:start="155:37" pos:end="155:43"><call pos:start="155:37" pos:end="155:43"><name pos:start="155:37" pos:end="155:40">REG0</name><argument_list pos:start="155:41" pos:end="155:43">(<argument pos:start="155:42" pos:end="155:42"><expr pos:start="155:42" pos:end="155:42"><literal type="number" pos:start="155:42" pos:end="155:42">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="155:46" pos:end="155:47"><expr pos:start="155:46" pos:end="155:47"><name pos:start="155:46" pos:end="155:47">a1</name></expr></argument>, <argument pos:start="155:50" pos:end="155:51"><expr pos:start="155:50" pos:end="155:51"><name pos:start="155:50" pos:end="155:51">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:25">case <expr pos:start="159:10" pos:end="159:24"><name pos:start="159:10" pos:end="159:24">INDEX_op_st_i32</name></expr>:</case>

    <case pos:start="161:5" pos:end="161:27">case <expr pos:start="161:10" pos:end="161:26"><name pos:start="161:10" pos:end="161:26">INDEX_op_st32_i64</name></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="163:53"><expr pos:start="163:9" pos:end="163:52"><call pos:start="163:9" pos:end="163:52"><name pos:start="163:9" pos:end="163:20">tcg_out_ldst</name><argument_list pos:start="163:21" pos:end="163:52">(<argument pos:start="163:22" pos:end="163:22"><expr pos:start="163:22" pos:end="163:22"><name pos:start="163:22" pos:end="163:22">s</name></expr></argument>, <argument pos:start="163:25" pos:end="163:34"><expr pos:start="163:25" pos:end="163:34"><name pos:start="163:25" pos:end="163:34">I3312_STRW</name></expr></argument>, <argument pos:start="163:37" pos:end="163:43"><expr pos:start="163:37" pos:end="163:43"><call pos:start="163:37" pos:end="163:43"><name pos:start="163:37" pos:end="163:40">REG0</name><argument_list pos:start="163:41" pos:end="163:43">(<argument pos:start="163:42" pos:end="163:42"><expr pos:start="163:42" pos:end="163:42"><literal type="number" pos:start="163:42" pos:end="163:42">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:46" pos:end="163:47"><expr pos:start="163:46" pos:end="163:47"><name pos:start="163:46" pos:end="163:47">a1</name></expr></argument>, <argument pos:start="163:50" pos:end="163:51"><expr pos:start="163:50" pos:end="163:51"><name pos:start="163:50" pos:end="163:51">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:25">case <expr pos:start="167:10" pos:end="167:24"><name pos:start="167:10" pos:end="167:24">INDEX_op_st_i64</name></expr>:</case>

        <expr_stmt pos:start="169:9" pos:end="169:53"><expr pos:start="169:9" pos:end="169:52"><call pos:start="169:9" pos:end="169:52"><name pos:start="169:9" pos:end="169:20">tcg_out_ldst</name><argument_list pos:start="169:21" pos:end="169:52">(<argument pos:start="169:22" pos:end="169:22"><expr pos:start="169:22" pos:end="169:22"><name pos:start="169:22" pos:end="169:22">s</name></expr></argument>, <argument pos:start="169:25" pos:end="169:34"><expr pos:start="169:25" pos:end="169:34"><name pos:start="169:25" pos:end="169:34">I3312_STRX</name></expr></argument>, <argument pos:start="169:37" pos:end="169:43"><expr pos:start="169:37" pos:end="169:43"><call pos:start="169:37" pos:end="169:43"><name pos:start="169:37" pos:end="169:40">REG0</name><argument_list pos:start="169:41" pos:end="169:43">(<argument pos:start="169:42" pos:end="169:42"><expr pos:start="169:42" pos:end="169:42"><literal type="number" pos:start="169:42" pos:end="169:42">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="169:46" pos:end="169:47"><expr pos:start="169:46" pos:end="169:47"><name pos:start="169:46" pos:end="169:47">a1</name></expr></argument>, <argument pos:start="169:50" pos:end="169:51"><expr pos:start="169:50" pos:end="169:51"><name pos:start="169:50" pos:end="169:51">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="171:9" pos:end="171:14">break;</break>



    <case pos:start="175:5" pos:end="175:26">case <expr pos:start="175:10" pos:end="175:25"><name pos:start="175:10" pos:end="175:25">INDEX_op_add_i32</name></expr>:</case>

        <expr_stmt pos:start="177:9" pos:end="177:25"><expr pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:10">a2</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <operator pos:start="177:14" pos:end="177:14">(</operator><name pos:start="177:15" pos:end="177:21">int32_t</name><operator pos:start="177:22" pos:end="177:22">)</operator><name pos:start="177:23" pos:end="177:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="179:9" pos:end="179:22">/* FALLTHRU */</comment>

    <case pos:start="181:5" pos:end="181:26">case <expr pos:start="181:10" pos:end="181:25"><name pos:start="181:10" pos:end="181:25">INDEX_op_add_i64</name></expr>:</case>

        <if_stmt pos:start="183:9" pos:end="191:9"><if pos:start="183:9" pos:end="187:9">if <condition pos:start="183:12" pos:end="183:15">(<expr pos:start="183:13" pos:end="183:14"><name pos:start="183:13" pos:end="183:14">c2</name></expr>)</condition> <block pos:start="183:17" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:48">

            <expr_stmt pos:start="185:13" pos:end="185:48"><expr pos:start="185:13" pos:end="185:47"><call pos:start="185:13" pos:end="185:47"><name pos:start="185:13" pos:end="185:27">tcg_out_addsubi</name><argument_list pos:start="185:28" pos:end="185:47">(<argument pos:start="185:29" pos:end="185:29"><expr pos:start="185:29" pos:end="185:29"><name pos:start="185:29" pos:end="185:29">s</name></expr></argument>, <argument pos:start="185:32" pos:end="185:34"><expr pos:start="185:32" pos:end="185:34"><name pos:start="185:32" pos:end="185:34">ext</name></expr></argument>, <argument pos:start="185:37" pos:end="185:38"><expr pos:start="185:37" pos:end="185:38"><name pos:start="185:37" pos:end="185:38">a0</name></expr></argument>, <argument pos:start="185:41" pos:end="185:42"><expr pos:start="185:41" pos:end="185:42"><name pos:start="185:41" pos:end="185:42">a1</name></expr></argument>, <argument pos:start="185:45" pos:end="185:46"><expr pos:start="185:45" pos:end="185:46"><name pos:start="185:45" pos:end="185:46">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="187:11" pos:end="191:9">else <block pos:start="187:16" pos:end="191:9">{<block_content pos:start="189:13" pos:end="189:56">

            <expr_stmt pos:start="189:13" pos:end="189:56"><expr pos:start="189:13" pos:end="189:55"><call pos:start="189:13" pos:end="189:55"><name pos:start="189:13" pos:end="189:24">tcg_out_insn</name><argument_list pos:start="189:25" pos:end="189:55">(<argument pos:start="189:26" pos:end="189:26"><expr pos:start="189:26" pos:end="189:26"><name pos:start="189:26" pos:end="189:26">s</name></expr></argument>, <argument pos:start="189:29" pos:end="189:32"><expr pos:start="189:29" pos:end="189:32"><literal type="number" pos:start="189:29" pos:end="189:32">3502</literal></expr></argument>, <argument pos:start="189:35" pos:end="189:37"><expr pos:start="189:35" pos:end="189:37"><name pos:start="189:35" pos:end="189:37">ADD</name></expr></argument>, <argument pos:start="189:40" pos:end="189:42"><expr pos:start="189:40" pos:end="189:42"><name pos:start="189:40" pos:end="189:42">ext</name></expr></argument>, <argument pos:start="189:45" pos:end="189:46"><expr pos:start="189:45" pos:end="189:46"><name pos:start="189:45" pos:end="189:46">a0</name></expr></argument>, <argument pos:start="189:49" pos:end="189:50"><expr pos:start="189:49" pos:end="189:50"><name pos:start="189:49" pos:end="189:50">a1</name></expr></argument>, <argument pos:start="189:53" pos:end="189:54"><expr pos:start="189:53" pos:end="189:54"><name pos:start="189:53" pos:end="189:54">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>



    <case pos:start="197:5" pos:end="197:26">case <expr pos:start="197:10" pos:end="197:25"><name pos:start="197:10" pos:end="197:25">INDEX_op_sub_i32</name></expr>:</case>

        <expr_stmt pos:start="199:9" pos:end="199:25"><expr pos:start="199:9" pos:end="199:24"><name pos:start="199:9" pos:end="199:10">a2</name> <operator pos:start="199:12" pos:end="199:12">=</operator> <operator pos:start="199:14" pos:end="199:14">(</operator><name pos:start="199:15" pos:end="199:21">int32_t</name><operator pos:start="199:22" pos:end="199:22">)</operator><name pos:start="199:23" pos:end="199:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="201:9" pos:end="201:22">/* FALLTHRU */</comment>

    <case pos:start="203:5" pos:end="203:26">case <expr pos:start="203:10" pos:end="203:25"><name pos:start="203:10" pos:end="203:25">INDEX_op_sub_i64</name></expr>:</case>

        <if_stmt pos:start="205:9" pos:end="213:9"><if pos:start="205:9" pos:end="209:9">if <condition pos:start="205:12" pos:end="205:15">(<expr pos:start="205:13" pos:end="205:14"><name pos:start="205:13" pos:end="205:14">c2</name></expr>)</condition> <block pos:start="205:17" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:49">

            <expr_stmt pos:start="207:13" pos:end="207:49"><expr pos:start="207:13" pos:end="207:48"><call pos:start="207:13" pos:end="207:48"><name pos:start="207:13" pos:end="207:27">tcg_out_addsubi</name><argument_list pos:start="207:28" pos:end="207:48">(<argument pos:start="207:29" pos:end="207:29"><expr pos:start="207:29" pos:end="207:29"><name pos:start="207:29" pos:end="207:29">s</name></expr></argument>, <argument pos:start="207:32" pos:end="207:34"><expr pos:start="207:32" pos:end="207:34"><name pos:start="207:32" pos:end="207:34">ext</name></expr></argument>, <argument pos:start="207:37" pos:end="207:38"><expr pos:start="207:37" pos:end="207:38"><name pos:start="207:37" pos:end="207:38">a0</name></expr></argument>, <argument pos:start="207:41" pos:end="207:42"><expr pos:start="207:41" pos:end="207:42"><name pos:start="207:41" pos:end="207:42">a1</name></expr></argument>, <argument pos:start="207:45" pos:end="207:47"><expr pos:start="207:45" pos:end="207:47"><operator pos:start="207:45" pos:end="207:45">-</operator><name pos:start="207:46" pos:end="207:47">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="213:9">else <block pos:start="209:16" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:56">

            <expr_stmt pos:start="211:13" pos:end="211:56"><expr pos:start="211:13" pos:end="211:55"><call pos:start="211:13" pos:end="211:55"><name pos:start="211:13" pos:end="211:24">tcg_out_insn</name><argument_list pos:start="211:25" pos:end="211:55">(<argument pos:start="211:26" pos:end="211:26"><expr pos:start="211:26" pos:end="211:26"><name pos:start="211:26" pos:end="211:26">s</name></expr></argument>, <argument pos:start="211:29" pos:end="211:32"><expr pos:start="211:29" pos:end="211:32"><literal type="number" pos:start="211:29" pos:end="211:32">3502</literal></expr></argument>, <argument pos:start="211:35" pos:end="211:37"><expr pos:start="211:35" pos:end="211:37"><name pos:start="211:35" pos:end="211:37">SUB</name></expr></argument>, <argument pos:start="211:40" pos:end="211:42"><expr pos:start="211:40" pos:end="211:42"><name pos:start="211:40" pos:end="211:42">ext</name></expr></argument>, <argument pos:start="211:45" pos:end="211:46"><expr pos:start="211:45" pos:end="211:46"><name pos:start="211:45" pos:end="211:46">a0</name></expr></argument>, <argument pos:start="211:49" pos:end="211:50"><expr pos:start="211:49" pos:end="211:50"><name pos:start="211:49" pos:end="211:50">a1</name></expr></argument>, <argument pos:start="211:53" pos:end="211:54"><expr pos:start="211:53" pos:end="211:54"><name pos:start="211:53" pos:end="211:54">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>



    <case pos:start="219:5" pos:end="219:26">case <expr pos:start="219:10" pos:end="219:25"><name pos:start="219:10" pos:end="219:25">INDEX_op_neg_i64</name></expr>:</case>

    <case pos:start="221:5" pos:end="221:26">case <expr pos:start="221:10" pos:end="221:25"><name pos:start="221:10" pos:end="221:25">INDEX_op_neg_i32</name></expr>:</case>

        <expr_stmt pos:start="223:9" pos:end="223:61"><expr pos:start="223:9" pos:end="223:60"><call pos:start="223:9" pos:end="223:60"><name pos:start="223:9" pos:end="223:20">tcg_out_insn</name><argument_list pos:start="223:21" pos:end="223:60">(<argument pos:start="223:22" pos:end="223:22"><expr pos:start="223:22" pos:end="223:22"><name pos:start="223:22" pos:end="223:22">s</name></expr></argument>, <argument pos:start="223:25" pos:end="223:28"><expr pos:start="223:25" pos:end="223:28"><literal type="number" pos:start="223:25" pos:end="223:28">3502</literal></expr></argument>, <argument pos:start="223:31" pos:end="223:33"><expr pos:start="223:31" pos:end="223:33"><name pos:start="223:31" pos:end="223:33">SUB</name></expr></argument>, <argument pos:start="223:36" pos:end="223:38"><expr pos:start="223:36" pos:end="223:38"><name pos:start="223:36" pos:end="223:38">ext</name></expr></argument>, <argument pos:start="223:41" pos:end="223:42"><expr pos:start="223:41" pos:end="223:42"><name pos:start="223:41" pos:end="223:42">a0</name></expr></argument>, <argument pos:start="223:45" pos:end="223:55"><expr pos:start="223:45" pos:end="223:55"><name pos:start="223:45" pos:end="223:55">TCG_REG_XZR</name></expr></argument>, <argument pos:start="223:58" pos:end="223:59"><expr pos:start="223:58" pos:end="223:59"><name pos:start="223:58" pos:end="223:59">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="225:9" pos:end="225:14">break;</break>



    <case pos:start="229:5" pos:end="229:26">case <expr pos:start="229:10" pos:end="229:25"><name pos:start="229:10" pos:end="229:25">INDEX_op_and_i32</name></expr>:</case>

        <expr_stmt pos:start="231:9" pos:end="231:25"><expr pos:start="231:9" pos:end="231:24"><name pos:start="231:9" pos:end="231:10">a2</name> <operator pos:start="231:12" pos:end="231:12">=</operator> <operator pos:start="231:14" pos:end="231:14">(</operator><name pos:start="231:15" pos:end="231:21">int32_t</name><operator pos:start="231:22" pos:end="231:22">)</operator><name pos:start="231:23" pos:end="231:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="233:9" pos:end="233:22">/* FALLTHRU */</comment>

    <case pos:start="235:5" pos:end="235:26">case <expr pos:start="235:10" pos:end="235:25"><name pos:start="235:10" pos:end="235:25">INDEX_op_and_i64</name></expr>:</case>

        <if_stmt pos:start="237:9" pos:end="245:9"><if pos:start="237:9" pos:end="241:9">if <condition pos:start="237:12" pos:end="237:15">(<expr pos:start="237:13" pos:end="237:14"><name pos:start="237:13" pos:end="237:14">c2</name></expr>)</condition> <block pos:start="237:17" pos:end="241:9">{<block_content pos:start="239:13" pos:end="239:61">

            <expr_stmt pos:start="239:13" pos:end="239:61"><expr pos:start="239:13" pos:end="239:60"><call pos:start="239:13" pos:end="239:60"><name pos:start="239:13" pos:end="239:28">tcg_out_logicali</name><argument_list pos:start="239:29" pos:end="239:60">(<argument pos:start="239:30" pos:end="239:30"><expr pos:start="239:30" pos:end="239:30"><name pos:start="239:30" pos:end="239:30">s</name></expr></argument>, <argument pos:start="239:33" pos:end="239:42"><expr pos:start="239:33" pos:end="239:42"><name pos:start="239:33" pos:end="239:42">I3404_ANDI</name></expr></argument>, <argument pos:start="239:45" pos:end="239:47"><expr pos:start="239:45" pos:end="239:47"><name pos:start="239:45" pos:end="239:47">ext</name></expr></argument>, <argument pos:start="239:50" pos:end="239:51"><expr pos:start="239:50" pos:end="239:51"><name pos:start="239:50" pos:end="239:51">a0</name></expr></argument>, <argument pos:start="239:54" pos:end="239:55"><expr pos:start="239:54" pos:end="239:55"><name pos:start="239:54" pos:end="239:55">a1</name></expr></argument>, <argument pos:start="239:58" pos:end="239:59"><expr pos:start="239:58" pos:end="239:59"><name pos:start="239:58" pos:end="239:59">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="241:11" pos:end="245:9">else <block pos:start="241:16" pos:end="245:9">{<block_content pos:start="243:13" pos:end="243:56">

            <expr_stmt pos:start="243:13" pos:end="243:56"><expr pos:start="243:13" pos:end="243:55"><call pos:start="243:13" pos:end="243:55"><name pos:start="243:13" pos:end="243:24">tcg_out_insn</name><argument_list pos:start="243:25" pos:end="243:55">(<argument pos:start="243:26" pos:end="243:26"><expr pos:start="243:26" pos:end="243:26"><name pos:start="243:26" pos:end="243:26">s</name></expr></argument>, <argument pos:start="243:29" pos:end="243:32"><expr pos:start="243:29" pos:end="243:32"><literal type="number" pos:start="243:29" pos:end="243:32">3510</literal></expr></argument>, <argument pos:start="243:35" pos:end="243:37"><expr pos:start="243:35" pos:end="243:37"><name pos:start="243:35" pos:end="243:37">AND</name></expr></argument>, <argument pos:start="243:40" pos:end="243:42"><expr pos:start="243:40" pos:end="243:42"><name pos:start="243:40" pos:end="243:42">ext</name></expr></argument>, <argument pos:start="243:45" pos:end="243:46"><expr pos:start="243:45" pos:end="243:46"><name pos:start="243:45" pos:end="243:46">a0</name></expr></argument>, <argument pos:start="243:49" pos:end="243:50"><expr pos:start="243:49" pos:end="243:50"><name pos:start="243:49" pos:end="243:50">a1</name></expr></argument>, <argument pos:start="243:53" pos:end="243:54"><expr pos:start="243:53" pos:end="243:54"><name pos:start="243:53" pos:end="243:54">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="247:9" pos:end="247:14">break;</break>



    <case pos:start="251:5" pos:end="251:27">case <expr pos:start="251:10" pos:end="251:26"><name pos:start="251:10" pos:end="251:26">INDEX_op_andc_i32</name></expr>:</case>

        <expr_stmt pos:start="253:9" pos:end="253:25"><expr pos:start="253:9" pos:end="253:24"><name pos:start="253:9" pos:end="253:10">a2</name> <operator pos:start="253:12" pos:end="253:12">=</operator> <operator pos:start="253:14" pos:end="253:14">(</operator><name pos:start="253:15" pos:end="253:21">int32_t</name><operator pos:start="253:22" pos:end="253:22">)</operator><name pos:start="253:23" pos:end="253:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="255:9" pos:end="255:22">/* FALLTHRU */</comment>

    <case pos:start="257:5" pos:end="257:27">case <expr pos:start="257:10" pos:end="257:26"><name pos:start="257:10" pos:end="257:26">INDEX_op_andc_i64</name></expr>:</case>

        <if_stmt pos:start="259:9" pos:end="267:9"><if pos:start="259:9" pos:end="263:9">if <condition pos:start="259:12" pos:end="259:15">(<expr pos:start="259:13" pos:end="259:14"><name pos:start="259:13" pos:end="259:14">c2</name></expr>)</condition> <block pos:start="259:17" pos:end="263:9">{<block_content pos:start="261:13" pos:end="261:62">

            <expr_stmt pos:start="261:13" pos:end="261:62"><expr pos:start="261:13" pos:end="261:61"><call pos:start="261:13" pos:end="261:61"><name pos:start="261:13" pos:end="261:28">tcg_out_logicali</name><argument_list pos:start="261:29" pos:end="261:61">(<argument pos:start="261:30" pos:end="261:30"><expr pos:start="261:30" pos:end="261:30"><name pos:start="261:30" pos:end="261:30">s</name></expr></argument>, <argument pos:start="261:33" pos:end="261:42"><expr pos:start="261:33" pos:end="261:42"><name pos:start="261:33" pos:end="261:42">I3404_ANDI</name></expr></argument>, <argument pos:start="261:45" pos:end="261:47"><expr pos:start="261:45" pos:end="261:47"><name pos:start="261:45" pos:end="261:47">ext</name></expr></argument>, <argument pos:start="261:50" pos:end="261:51"><expr pos:start="261:50" pos:end="261:51"><name pos:start="261:50" pos:end="261:51">a0</name></expr></argument>, <argument pos:start="261:54" pos:end="261:55"><expr pos:start="261:54" pos:end="261:55"><name pos:start="261:54" pos:end="261:55">a1</name></expr></argument>, <argument pos:start="261:58" pos:end="261:60"><expr pos:start="261:58" pos:end="261:60"><operator pos:start="261:58" pos:end="261:58">~</operator><name pos:start="261:59" pos:end="261:60">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="263:11" pos:end="267:9">else <block pos:start="263:16" pos:end="267:9">{<block_content pos:start="265:13" pos:end="265:56">

            <expr_stmt pos:start="265:13" pos:end="265:56"><expr pos:start="265:13" pos:end="265:55"><call pos:start="265:13" pos:end="265:55"><name pos:start="265:13" pos:end="265:24">tcg_out_insn</name><argument_list pos:start="265:25" pos:end="265:55">(<argument pos:start="265:26" pos:end="265:26"><expr pos:start="265:26" pos:end="265:26"><name pos:start="265:26" pos:end="265:26">s</name></expr></argument>, <argument pos:start="265:29" pos:end="265:32"><expr pos:start="265:29" pos:end="265:32"><literal type="number" pos:start="265:29" pos:end="265:32">3510</literal></expr></argument>, <argument pos:start="265:35" pos:end="265:37"><expr pos:start="265:35" pos:end="265:37"><name pos:start="265:35" pos:end="265:37">BIC</name></expr></argument>, <argument pos:start="265:40" pos:end="265:42"><expr pos:start="265:40" pos:end="265:42"><name pos:start="265:40" pos:end="265:42">ext</name></expr></argument>, <argument pos:start="265:45" pos:end="265:46"><expr pos:start="265:45" pos:end="265:46"><name pos:start="265:45" pos:end="265:46">a0</name></expr></argument>, <argument pos:start="265:49" pos:end="265:50"><expr pos:start="265:49" pos:end="265:50"><name pos:start="265:49" pos:end="265:50">a1</name></expr></argument>, <argument pos:start="265:53" pos:end="265:54"><expr pos:start="265:53" pos:end="265:54"><name pos:start="265:53" pos:end="265:54">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="269:9" pos:end="269:14">break;</break>



    <case pos:start="273:5" pos:end="273:25">case <expr pos:start="273:10" pos:end="273:24"><name pos:start="273:10" pos:end="273:24">INDEX_op_or_i32</name></expr>:</case>

        <expr_stmt pos:start="275:9" pos:end="275:25"><expr pos:start="275:9" pos:end="275:24"><name pos:start="275:9" pos:end="275:10">a2</name> <operator pos:start="275:12" pos:end="275:12">=</operator> <operator pos:start="275:14" pos:end="275:14">(</operator><name pos:start="275:15" pos:end="275:21">int32_t</name><operator pos:start="275:22" pos:end="275:22">)</operator><name pos:start="275:23" pos:end="275:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="277:9" pos:end="277:22">/* FALLTHRU */</comment>

    <case pos:start="279:5" pos:end="279:25">case <expr pos:start="279:10" pos:end="279:24"><name pos:start="279:10" pos:end="279:24">INDEX_op_or_i64</name></expr>:</case>

        <if_stmt pos:start="281:9" pos:end="289:9"><if pos:start="281:9" pos:end="285:9">if <condition pos:start="281:12" pos:end="281:15">(<expr pos:start="281:13" pos:end="281:14"><name pos:start="281:13" pos:end="281:14">c2</name></expr>)</condition> <block pos:start="281:17" pos:end="285:9">{<block_content pos:start="283:13" pos:end="283:61">

            <expr_stmt pos:start="283:13" pos:end="283:61"><expr pos:start="283:13" pos:end="283:60"><call pos:start="283:13" pos:end="283:60"><name pos:start="283:13" pos:end="283:28">tcg_out_logicali</name><argument_list pos:start="283:29" pos:end="283:60">(<argument pos:start="283:30" pos:end="283:30"><expr pos:start="283:30" pos:end="283:30"><name pos:start="283:30" pos:end="283:30">s</name></expr></argument>, <argument pos:start="283:33" pos:end="283:42"><expr pos:start="283:33" pos:end="283:42"><name pos:start="283:33" pos:end="283:42">I3404_ORRI</name></expr></argument>, <argument pos:start="283:45" pos:end="283:47"><expr pos:start="283:45" pos:end="283:47"><name pos:start="283:45" pos:end="283:47">ext</name></expr></argument>, <argument pos:start="283:50" pos:end="283:51"><expr pos:start="283:50" pos:end="283:51"><name pos:start="283:50" pos:end="283:51">a0</name></expr></argument>, <argument pos:start="283:54" pos:end="283:55"><expr pos:start="283:54" pos:end="283:55"><name pos:start="283:54" pos:end="283:55">a1</name></expr></argument>, <argument pos:start="283:58" pos:end="283:59"><expr pos:start="283:58" pos:end="283:59"><name pos:start="283:58" pos:end="283:59">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="285:11" pos:end="289:9">else <block pos:start="285:16" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:56">

            <expr_stmt pos:start="287:13" pos:end="287:56"><expr pos:start="287:13" pos:end="287:55"><call pos:start="287:13" pos:end="287:55"><name pos:start="287:13" pos:end="287:24">tcg_out_insn</name><argument_list pos:start="287:25" pos:end="287:55">(<argument pos:start="287:26" pos:end="287:26"><expr pos:start="287:26" pos:end="287:26"><name pos:start="287:26" pos:end="287:26">s</name></expr></argument>, <argument pos:start="287:29" pos:end="287:32"><expr pos:start="287:29" pos:end="287:32"><literal type="number" pos:start="287:29" pos:end="287:32">3510</literal></expr></argument>, <argument pos:start="287:35" pos:end="287:37"><expr pos:start="287:35" pos:end="287:37"><name pos:start="287:35" pos:end="287:37">ORR</name></expr></argument>, <argument pos:start="287:40" pos:end="287:42"><expr pos:start="287:40" pos:end="287:42"><name pos:start="287:40" pos:end="287:42">ext</name></expr></argument>, <argument pos:start="287:45" pos:end="287:46"><expr pos:start="287:45" pos:end="287:46"><name pos:start="287:45" pos:end="287:46">a0</name></expr></argument>, <argument pos:start="287:49" pos:end="287:50"><expr pos:start="287:49" pos:end="287:50"><name pos:start="287:49" pos:end="287:50">a1</name></expr></argument>, <argument pos:start="287:53" pos:end="287:54"><expr pos:start="287:53" pos:end="287:54"><name pos:start="287:53" pos:end="287:54">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="291:9" pos:end="291:14">break;</break>



    <case pos:start="295:5" pos:end="295:26">case <expr pos:start="295:10" pos:end="295:25"><name pos:start="295:10" pos:end="295:25">INDEX_op_orc_i32</name></expr>:</case>

        <expr_stmt pos:start="297:9" pos:end="297:25"><expr pos:start="297:9" pos:end="297:24"><name pos:start="297:9" pos:end="297:10">a2</name> <operator pos:start="297:12" pos:end="297:12">=</operator> <operator pos:start="297:14" pos:end="297:14">(</operator><name pos:start="297:15" pos:end="297:21">int32_t</name><operator pos:start="297:22" pos:end="297:22">)</operator><name pos:start="297:23" pos:end="297:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="299:9" pos:end="299:22">/* FALLTHRU */</comment>

    <case pos:start="301:5" pos:end="301:26">case <expr pos:start="301:10" pos:end="301:25"><name pos:start="301:10" pos:end="301:25">INDEX_op_orc_i64</name></expr>:</case>

        <if_stmt pos:start="303:9" pos:end="311:9"><if pos:start="303:9" pos:end="307:9">if <condition pos:start="303:12" pos:end="303:15">(<expr pos:start="303:13" pos:end="303:14"><name pos:start="303:13" pos:end="303:14">c2</name></expr>)</condition> <block pos:start="303:17" pos:end="307:9">{<block_content pos:start="305:13" pos:end="305:62">

            <expr_stmt pos:start="305:13" pos:end="305:62"><expr pos:start="305:13" pos:end="305:61"><call pos:start="305:13" pos:end="305:61"><name pos:start="305:13" pos:end="305:28">tcg_out_logicali</name><argument_list pos:start="305:29" pos:end="305:61">(<argument pos:start="305:30" pos:end="305:30"><expr pos:start="305:30" pos:end="305:30"><name pos:start="305:30" pos:end="305:30">s</name></expr></argument>, <argument pos:start="305:33" pos:end="305:42"><expr pos:start="305:33" pos:end="305:42"><name pos:start="305:33" pos:end="305:42">I3404_ORRI</name></expr></argument>, <argument pos:start="305:45" pos:end="305:47"><expr pos:start="305:45" pos:end="305:47"><name pos:start="305:45" pos:end="305:47">ext</name></expr></argument>, <argument pos:start="305:50" pos:end="305:51"><expr pos:start="305:50" pos:end="305:51"><name pos:start="305:50" pos:end="305:51">a0</name></expr></argument>, <argument pos:start="305:54" pos:end="305:55"><expr pos:start="305:54" pos:end="305:55"><name pos:start="305:54" pos:end="305:55">a1</name></expr></argument>, <argument pos:start="305:58" pos:end="305:60"><expr pos:start="305:58" pos:end="305:60"><operator pos:start="305:58" pos:end="305:58">~</operator><name pos:start="305:59" pos:end="305:60">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="307:11" pos:end="311:9">else <block pos:start="307:16" pos:end="311:9">{<block_content pos:start="309:13" pos:end="309:56">

            <expr_stmt pos:start="309:13" pos:end="309:56"><expr pos:start="309:13" pos:end="309:55"><call pos:start="309:13" pos:end="309:55"><name pos:start="309:13" pos:end="309:24">tcg_out_insn</name><argument_list pos:start="309:25" pos:end="309:55">(<argument pos:start="309:26" pos:end="309:26"><expr pos:start="309:26" pos:end="309:26"><name pos:start="309:26" pos:end="309:26">s</name></expr></argument>, <argument pos:start="309:29" pos:end="309:32"><expr pos:start="309:29" pos:end="309:32"><literal type="number" pos:start="309:29" pos:end="309:32">3510</literal></expr></argument>, <argument pos:start="309:35" pos:end="309:37"><expr pos:start="309:35" pos:end="309:37"><name pos:start="309:35" pos:end="309:37">ORN</name></expr></argument>, <argument pos:start="309:40" pos:end="309:42"><expr pos:start="309:40" pos:end="309:42"><name pos:start="309:40" pos:end="309:42">ext</name></expr></argument>, <argument pos:start="309:45" pos:end="309:46"><expr pos:start="309:45" pos:end="309:46"><name pos:start="309:45" pos:end="309:46">a0</name></expr></argument>, <argument pos:start="309:49" pos:end="309:50"><expr pos:start="309:49" pos:end="309:50"><name pos:start="309:49" pos:end="309:50">a1</name></expr></argument>, <argument pos:start="309:53" pos:end="309:54"><expr pos:start="309:53" pos:end="309:54"><name pos:start="309:53" pos:end="309:54">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="313:9" pos:end="313:14">break;</break>



    <case pos:start="317:5" pos:end="317:26">case <expr pos:start="317:10" pos:end="317:25"><name pos:start="317:10" pos:end="317:25">INDEX_op_xor_i32</name></expr>:</case>

        <expr_stmt pos:start="319:9" pos:end="319:25"><expr pos:start="319:9" pos:end="319:24"><name pos:start="319:9" pos:end="319:10">a2</name> <operator pos:start="319:12" pos:end="319:12">=</operator> <operator pos:start="319:14" pos:end="319:14">(</operator><name pos:start="319:15" pos:end="319:21">int32_t</name><operator pos:start="319:22" pos:end="319:22">)</operator><name pos:start="319:23" pos:end="319:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="321:9" pos:end="321:22">/* FALLTHRU */</comment>

    <case pos:start="323:5" pos:end="323:26">case <expr pos:start="323:10" pos:end="323:25"><name pos:start="323:10" pos:end="323:25">INDEX_op_xor_i64</name></expr>:</case>

        <if_stmt pos:start="325:9" pos:end="333:9"><if pos:start="325:9" pos:end="329:9">if <condition pos:start="325:12" pos:end="325:15">(<expr pos:start="325:13" pos:end="325:14"><name pos:start="325:13" pos:end="325:14">c2</name></expr>)</condition> <block pos:start="325:17" pos:end="329:9">{<block_content pos:start="327:13" pos:end="327:61">

            <expr_stmt pos:start="327:13" pos:end="327:61"><expr pos:start="327:13" pos:end="327:60"><call pos:start="327:13" pos:end="327:60"><name pos:start="327:13" pos:end="327:28">tcg_out_logicali</name><argument_list pos:start="327:29" pos:end="327:60">(<argument pos:start="327:30" pos:end="327:30"><expr pos:start="327:30" pos:end="327:30"><name pos:start="327:30" pos:end="327:30">s</name></expr></argument>, <argument pos:start="327:33" pos:end="327:42"><expr pos:start="327:33" pos:end="327:42"><name pos:start="327:33" pos:end="327:42">I3404_EORI</name></expr></argument>, <argument pos:start="327:45" pos:end="327:47"><expr pos:start="327:45" pos:end="327:47"><name pos:start="327:45" pos:end="327:47">ext</name></expr></argument>, <argument pos:start="327:50" pos:end="327:51"><expr pos:start="327:50" pos:end="327:51"><name pos:start="327:50" pos:end="327:51">a0</name></expr></argument>, <argument pos:start="327:54" pos:end="327:55"><expr pos:start="327:54" pos:end="327:55"><name pos:start="327:54" pos:end="327:55">a1</name></expr></argument>, <argument pos:start="327:58" pos:end="327:59"><expr pos:start="327:58" pos:end="327:59"><name pos:start="327:58" pos:end="327:59">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="329:11" pos:end="333:9">else <block pos:start="329:16" pos:end="333:9">{<block_content pos:start="331:13" pos:end="331:56">

            <expr_stmt pos:start="331:13" pos:end="331:56"><expr pos:start="331:13" pos:end="331:55"><call pos:start="331:13" pos:end="331:55"><name pos:start="331:13" pos:end="331:24">tcg_out_insn</name><argument_list pos:start="331:25" pos:end="331:55">(<argument pos:start="331:26" pos:end="331:26"><expr pos:start="331:26" pos:end="331:26"><name pos:start="331:26" pos:end="331:26">s</name></expr></argument>, <argument pos:start="331:29" pos:end="331:32"><expr pos:start="331:29" pos:end="331:32"><literal type="number" pos:start="331:29" pos:end="331:32">3510</literal></expr></argument>, <argument pos:start="331:35" pos:end="331:37"><expr pos:start="331:35" pos:end="331:37"><name pos:start="331:35" pos:end="331:37">EOR</name></expr></argument>, <argument pos:start="331:40" pos:end="331:42"><expr pos:start="331:40" pos:end="331:42"><name pos:start="331:40" pos:end="331:42">ext</name></expr></argument>, <argument pos:start="331:45" pos:end="331:46"><expr pos:start="331:45" pos:end="331:46"><name pos:start="331:45" pos:end="331:46">a0</name></expr></argument>, <argument pos:start="331:49" pos:end="331:50"><expr pos:start="331:49" pos:end="331:50"><name pos:start="331:49" pos:end="331:50">a1</name></expr></argument>, <argument pos:start="331:53" pos:end="331:54"><expr pos:start="331:53" pos:end="331:54"><name pos:start="331:53" pos:end="331:54">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="335:9" pos:end="335:14">break;</break>



    <case pos:start="339:5" pos:end="339:26">case <expr pos:start="339:10" pos:end="339:25"><name pos:start="339:10" pos:end="339:25">INDEX_op_eqv_i32</name></expr>:</case>

        <expr_stmt pos:start="341:9" pos:end="341:25"><expr pos:start="341:9" pos:end="341:24"><name pos:start="341:9" pos:end="341:10">a2</name> <operator pos:start="341:12" pos:end="341:12">=</operator> <operator pos:start="341:14" pos:end="341:14">(</operator><name pos:start="341:15" pos:end="341:21">int32_t</name><operator pos:start="341:22" pos:end="341:22">)</operator><name pos:start="341:23" pos:end="341:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="343:9" pos:end="343:22">/* FALLTHRU */</comment>

    <case pos:start="345:5" pos:end="345:26">case <expr pos:start="345:10" pos:end="345:25"><name pos:start="345:10" pos:end="345:25">INDEX_op_eqv_i64</name></expr>:</case>

        <if_stmt pos:start="347:9" pos:end="355:9"><if pos:start="347:9" pos:end="351:9">if <condition pos:start="347:12" pos:end="347:15">(<expr pos:start="347:13" pos:end="347:14"><name pos:start="347:13" pos:end="347:14">c2</name></expr>)</condition> <block pos:start="347:17" pos:end="351:9">{<block_content pos:start="349:13" pos:end="349:62">

            <expr_stmt pos:start="349:13" pos:end="349:62"><expr pos:start="349:13" pos:end="349:61"><call pos:start="349:13" pos:end="349:61"><name pos:start="349:13" pos:end="349:28">tcg_out_logicali</name><argument_list pos:start="349:29" pos:end="349:61">(<argument pos:start="349:30" pos:end="349:30"><expr pos:start="349:30" pos:end="349:30"><name pos:start="349:30" pos:end="349:30">s</name></expr></argument>, <argument pos:start="349:33" pos:end="349:42"><expr pos:start="349:33" pos:end="349:42"><name pos:start="349:33" pos:end="349:42">I3404_EORI</name></expr></argument>, <argument pos:start="349:45" pos:end="349:47"><expr pos:start="349:45" pos:end="349:47"><name pos:start="349:45" pos:end="349:47">ext</name></expr></argument>, <argument pos:start="349:50" pos:end="349:51"><expr pos:start="349:50" pos:end="349:51"><name pos:start="349:50" pos:end="349:51">a0</name></expr></argument>, <argument pos:start="349:54" pos:end="349:55"><expr pos:start="349:54" pos:end="349:55"><name pos:start="349:54" pos:end="349:55">a1</name></expr></argument>, <argument pos:start="349:58" pos:end="349:60"><expr pos:start="349:58" pos:end="349:60"><operator pos:start="349:58" pos:end="349:58">~</operator><name pos:start="349:59" pos:end="349:60">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="351:11" pos:end="355:9">else <block pos:start="351:16" pos:end="355:9">{<block_content pos:start="353:13" pos:end="353:56">

            <expr_stmt pos:start="353:13" pos:end="353:56"><expr pos:start="353:13" pos:end="353:55"><call pos:start="353:13" pos:end="353:55"><name pos:start="353:13" pos:end="353:24">tcg_out_insn</name><argument_list pos:start="353:25" pos:end="353:55">(<argument pos:start="353:26" pos:end="353:26"><expr pos:start="353:26" pos:end="353:26"><name pos:start="353:26" pos:end="353:26">s</name></expr></argument>, <argument pos:start="353:29" pos:end="353:32"><expr pos:start="353:29" pos:end="353:32"><literal type="number" pos:start="353:29" pos:end="353:32">3510</literal></expr></argument>, <argument pos:start="353:35" pos:end="353:37"><expr pos:start="353:35" pos:end="353:37"><name pos:start="353:35" pos:end="353:37">EON</name></expr></argument>, <argument pos:start="353:40" pos:end="353:42"><expr pos:start="353:40" pos:end="353:42"><name pos:start="353:40" pos:end="353:42">ext</name></expr></argument>, <argument pos:start="353:45" pos:end="353:46"><expr pos:start="353:45" pos:end="353:46"><name pos:start="353:45" pos:end="353:46">a0</name></expr></argument>, <argument pos:start="353:49" pos:end="353:50"><expr pos:start="353:49" pos:end="353:50"><name pos:start="353:49" pos:end="353:50">a1</name></expr></argument>, <argument pos:start="353:53" pos:end="353:54"><expr pos:start="353:53" pos:end="353:54"><name pos:start="353:53" pos:end="353:54">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="357:9" pos:end="357:14">break;</break>



    <case pos:start="361:5" pos:end="361:26">case <expr pos:start="361:10" pos:end="361:25"><name pos:start="361:10" pos:end="361:25">INDEX_op_not_i64</name></expr>:</case>

    <case pos:start="363:5" pos:end="363:26">case <expr pos:start="363:10" pos:end="363:25"><name pos:start="363:10" pos:end="363:25">INDEX_op_not_i32</name></expr>:</case>

        <expr_stmt pos:start="365:9" pos:end="365:61"><expr pos:start="365:9" pos:end="365:60"><call pos:start="365:9" pos:end="365:60"><name pos:start="365:9" pos:end="365:20">tcg_out_insn</name><argument_list pos:start="365:21" pos:end="365:60">(<argument pos:start="365:22" pos:end="365:22"><expr pos:start="365:22" pos:end="365:22"><name pos:start="365:22" pos:end="365:22">s</name></expr></argument>, <argument pos:start="365:25" pos:end="365:28"><expr pos:start="365:25" pos:end="365:28"><literal type="number" pos:start="365:25" pos:end="365:28">3510</literal></expr></argument>, <argument pos:start="365:31" pos:end="365:33"><expr pos:start="365:31" pos:end="365:33"><name pos:start="365:31" pos:end="365:33">ORN</name></expr></argument>, <argument pos:start="365:36" pos:end="365:38"><expr pos:start="365:36" pos:end="365:38"><name pos:start="365:36" pos:end="365:38">ext</name></expr></argument>, <argument pos:start="365:41" pos:end="365:42"><expr pos:start="365:41" pos:end="365:42"><name pos:start="365:41" pos:end="365:42">a0</name></expr></argument>, <argument pos:start="365:45" pos:end="365:55"><expr pos:start="365:45" pos:end="365:55"><name pos:start="365:45" pos:end="365:55">TCG_REG_XZR</name></expr></argument>, <argument pos:start="365:58" pos:end="365:59"><expr pos:start="365:58" pos:end="365:59"><name pos:start="365:58" pos:end="365:59">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="367:9" pos:end="367:14">break;</break>



    <case pos:start="371:5" pos:end="371:26">case <expr pos:start="371:10" pos:end="371:25"><name pos:start="371:10" pos:end="371:25">INDEX_op_mul_i64</name></expr>:</case>

    <case pos:start="373:5" pos:end="373:26">case <expr pos:start="373:10" pos:end="373:25"><name pos:start="373:10" pos:end="373:25">INDEX_op_mul_i32</name></expr>:</case>

        <expr_stmt pos:start="375:9" pos:end="375:66"><expr pos:start="375:9" pos:end="375:65"><call pos:start="375:9" pos:end="375:65"><name pos:start="375:9" pos:end="375:20">tcg_out_insn</name><argument_list pos:start="375:21" pos:end="375:65">(<argument pos:start="375:22" pos:end="375:22"><expr pos:start="375:22" pos:end="375:22"><name pos:start="375:22" pos:end="375:22">s</name></expr></argument>, <argument pos:start="375:25" pos:end="375:28"><expr pos:start="375:25" pos:end="375:28"><literal type="number" pos:start="375:25" pos:end="375:28">3509</literal></expr></argument>, <argument pos:start="375:31" pos:end="375:34"><expr pos:start="375:31" pos:end="375:34"><name pos:start="375:31" pos:end="375:34">MADD</name></expr></argument>, <argument pos:start="375:37" pos:end="375:39"><expr pos:start="375:37" pos:end="375:39"><name pos:start="375:37" pos:end="375:39">ext</name></expr></argument>, <argument pos:start="375:42" pos:end="375:43"><expr pos:start="375:42" pos:end="375:43"><name pos:start="375:42" pos:end="375:43">a0</name></expr></argument>, <argument pos:start="375:46" pos:end="375:47"><expr pos:start="375:46" pos:end="375:47"><name pos:start="375:46" pos:end="375:47">a1</name></expr></argument>, <argument pos:start="375:50" pos:end="375:51"><expr pos:start="375:50" pos:end="375:51"><name pos:start="375:50" pos:end="375:51">a2</name></expr></argument>, <argument pos:start="375:54" pos:end="375:64"><expr pos:start="375:54" pos:end="375:64"><name pos:start="375:54" pos:end="375:64">TCG_REG_XZR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="377:9" pos:end="377:14">break;</break>



    <case pos:start="381:5" pos:end="381:26">case <expr pos:start="381:10" pos:end="381:25"><name pos:start="381:10" pos:end="381:25">INDEX_op_div_i64</name></expr>:</case>

    <case pos:start="383:5" pos:end="383:26">case <expr pos:start="383:10" pos:end="383:25"><name pos:start="383:10" pos:end="383:25">INDEX_op_div_i32</name></expr>:</case>

        <expr_stmt pos:start="385:9" pos:end="385:53"><expr pos:start="385:9" pos:end="385:52"><call pos:start="385:9" pos:end="385:52"><name pos:start="385:9" pos:end="385:20">tcg_out_insn</name><argument_list pos:start="385:21" pos:end="385:52">(<argument pos:start="385:22" pos:end="385:22"><expr pos:start="385:22" pos:end="385:22"><name pos:start="385:22" pos:end="385:22">s</name></expr></argument>, <argument pos:start="385:25" pos:end="385:28"><expr pos:start="385:25" pos:end="385:28"><literal type="number" pos:start="385:25" pos:end="385:28">3508</literal></expr></argument>, <argument pos:start="385:31" pos:end="385:34"><expr pos:start="385:31" pos:end="385:34"><name pos:start="385:31" pos:end="385:34">SDIV</name></expr></argument>, <argument pos:start="385:37" pos:end="385:39"><expr pos:start="385:37" pos:end="385:39"><name pos:start="385:37" pos:end="385:39">ext</name></expr></argument>, <argument pos:start="385:42" pos:end="385:43"><expr pos:start="385:42" pos:end="385:43"><name pos:start="385:42" pos:end="385:43">a0</name></expr></argument>, <argument pos:start="385:46" pos:end="385:47"><expr pos:start="385:46" pos:end="385:47"><name pos:start="385:46" pos:end="385:47">a1</name></expr></argument>, <argument pos:start="385:50" pos:end="385:51"><expr pos:start="385:50" pos:end="385:51"><name pos:start="385:50" pos:end="385:51">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="387:9" pos:end="387:14">break;</break>

    <case pos:start="389:5" pos:end="389:27">case <expr pos:start="389:10" pos:end="389:26"><name pos:start="389:10" pos:end="389:26">INDEX_op_divu_i64</name></expr>:</case>

    <case pos:start="391:5" pos:end="391:27">case <expr pos:start="391:10" pos:end="391:26"><name pos:start="391:10" pos:end="391:26">INDEX_op_divu_i32</name></expr>:</case>

        <expr_stmt pos:start="393:9" pos:end="393:53"><expr pos:start="393:9" pos:end="393:52"><call pos:start="393:9" pos:end="393:52"><name pos:start="393:9" pos:end="393:20">tcg_out_insn</name><argument_list pos:start="393:21" pos:end="393:52">(<argument pos:start="393:22" pos:end="393:22"><expr pos:start="393:22" pos:end="393:22"><name pos:start="393:22" pos:end="393:22">s</name></expr></argument>, <argument pos:start="393:25" pos:end="393:28"><expr pos:start="393:25" pos:end="393:28"><literal type="number" pos:start="393:25" pos:end="393:28">3508</literal></expr></argument>, <argument pos:start="393:31" pos:end="393:34"><expr pos:start="393:31" pos:end="393:34"><name pos:start="393:31" pos:end="393:34">UDIV</name></expr></argument>, <argument pos:start="393:37" pos:end="393:39"><expr pos:start="393:37" pos:end="393:39"><name pos:start="393:37" pos:end="393:39">ext</name></expr></argument>, <argument pos:start="393:42" pos:end="393:43"><expr pos:start="393:42" pos:end="393:43"><name pos:start="393:42" pos:end="393:43">a0</name></expr></argument>, <argument pos:start="393:46" pos:end="393:47"><expr pos:start="393:46" pos:end="393:47"><name pos:start="393:46" pos:end="393:47">a1</name></expr></argument>, <argument pos:start="393:50" pos:end="393:51"><expr pos:start="393:50" pos:end="393:51"><name pos:start="393:50" pos:end="393:51">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="395:9" pos:end="395:14">break;</break>



    <case pos:start="399:5" pos:end="399:26">case <expr pos:start="399:10" pos:end="399:25"><name pos:start="399:10" pos:end="399:25">INDEX_op_rem_i64</name></expr>:</case>

    <case pos:start="401:5" pos:end="401:26">case <expr pos:start="401:10" pos:end="401:25"><name pos:start="401:10" pos:end="401:25">INDEX_op_rem_i32</name></expr>:</case>

        <expr_stmt pos:start="403:9" pos:end="403:62"><expr pos:start="403:9" pos:end="403:61"><call pos:start="403:9" pos:end="403:61"><name pos:start="403:9" pos:end="403:20">tcg_out_insn</name><argument_list pos:start="403:21" pos:end="403:61">(<argument pos:start="403:22" pos:end="403:22"><expr pos:start="403:22" pos:end="403:22"><name pos:start="403:22" pos:end="403:22">s</name></expr></argument>, <argument pos:start="403:25" pos:end="403:28"><expr pos:start="403:25" pos:end="403:28"><literal type="number" pos:start="403:25" pos:end="403:28">3508</literal></expr></argument>, <argument pos:start="403:31" pos:end="403:34"><expr pos:start="403:31" pos:end="403:34"><name pos:start="403:31" pos:end="403:34">SDIV</name></expr></argument>, <argument pos:start="403:37" pos:end="403:39"><expr pos:start="403:37" pos:end="403:39"><name pos:start="403:37" pos:end="403:39">ext</name></expr></argument>, <argument pos:start="403:42" pos:end="403:52"><expr pos:start="403:42" pos:end="403:52"><name pos:start="403:42" pos:end="403:52">TCG_REG_TMP</name></expr></argument>, <argument pos:start="403:55" pos:end="403:56"><expr pos:start="403:55" pos:end="403:56"><name pos:start="403:55" pos:end="403:56">a1</name></expr></argument>, <argument pos:start="403:59" pos:end="403:60"><expr pos:start="403:59" pos:end="403:60"><name pos:start="403:59" pos:end="403:60">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:66"><expr pos:start="405:9" pos:end="405:65"><call pos:start="405:9" pos:end="405:65"><name pos:start="405:9" pos:end="405:20">tcg_out_insn</name><argument_list pos:start="405:21" pos:end="405:65">(<argument pos:start="405:22" pos:end="405:22"><expr pos:start="405:22" pos:end="405:22"><name pos:start="405:22" pos:end="405:22">s</name></expr></argument>, <argument pos:start="405:25" pos:end="405:28"><expr pos:start="405:25" pos:end="405:28"><literal type="number" pos:start="405:25" pos:end="405:28">3509</literal></expr></argument>, <argument pos:start="405:31" pos:end="405:34"><expr pos:start="405:31" pos:end="405:34"><name pos:start="405:31" pos:end="405:34">MSUB</name></expr></argument>, <argument pos:start="405:37" pos:end="405:39"><expr pos:start="405:37" pos:end="405:39"><name pos:start="405:37" pos:end="405:39">ext</name></expr></argument>, <argument pos:start="405:42" pos:end="405:43"><expr pos:start="405:42" pos:end="405:43"><name pos:start="405:42" pos:end="405:43">a0</name></expr></argument>, <argument pos:start="405:46" pos:end="405:56"><expr pos:start="405:46" pos:end="405:56"><name pos:start="405:46" pos:end="405:56">TCG_REG_TMP</name></expr></argument>, <argument pos:start="405:59" pos:end="405:60"><expr pos:start="405:59" pos:end="405:60"><name pos:start="405:59" pos:end="405:60">a2</name></expr></argument>, <argument pos:start="405:63" pos:end="405:64"><expr pos:start="405:63" pos:end="405:64"><name pos:start="405:63" pos:end="405:64">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="407:9" pos:end="407:14">break;</break>

    <case pos:start="409:5" pos:end="409:27">case <expr pos:start="409:10" pos:end="409:26"><name pos:start="409:10" pos:end="409:26">INDEX_op_remu_i64</name></expr>:</case>

    <case pos:start="411:5" pos:end="411:27">case <expr pos:start="411:10" pos:end="411:26"><name pos:start="411:10" pos:end="411:26">INDEX_op_remu_i32</name></expr>:</case>

        <expr_stmt pos:start="413:9" pos:end="413:62"><expr pos:start="413:9" pos:end="413:61"><call pos:start="413:9" pos:end="413:61"><name pos:start="413:9" pos:end="413:20">tcg_out_insn</name><argument_list pos:start="413:21" pos:end="413:61">(<argument pos:start="413:22" pos:end="413:22"><expr pos:start="413:22" pos:end="413:22"><name pos:start="413:22" pos:end="413:22">s</name></expr></argument>, <argument pos:start="413:25" pos:end="413:28"><expr pos:start="413:25" pos:end="413:28"><literal type="number" pos:start="413:25" pos:end="413:28">3508</literal></expr></argument>, <argument pos:start="413:31" pos:end="413:34"><expr pos:start="413:31" pos:end="413:34"><name pos:start="413:31" pos:end="413:34">UDIV</name></expr></argument>, <argument pos:start="413:37" pos:end="413:39"><expr pos:start="413:37" pos:end="413:39"><name pos:start="413:37" pos:end="413:39">ext</name></expr></argument>, <argument pos:start="413:42" pos:end="413:52"><expr pos:start="413:42" pos:end="413:52"><name pos:start="413:42" pos:end="413:52">TCG_REG_TMP</name></expr></argument>, <argument pos:start="413:55" pos:end="413:56"><expr pos:start="413:55" pos:end="413:56"><name pos:start="413:55" pos:end="413:56">a1</name></expr></argument>, <argument pos:start="413:59" pos:end="413:60"><expr pos:start="413:59" pos:end="413:60"><name pos:start="413:59" pos:end="413:60">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:66"><expr pos:start="415:9" pos:end="415:65"><call pos:start="415:9" pos:end="415:65"><name pos:start="415:9" pos:end="415:20">tcg_out_insn</name><argument_list pos:start="415:21" pos:end="415:65">(<argument pos:start="415:22" pos:end="415:22"><expr pos:start="415:22" pos:end="415:22"><name pos:start="415:22" pos:end="415:22">s</name></expr></argument>, <argument pos:start="415:25" pos:end="415:28"><expr pos:start="415:25" pos:end="415:28"><literal type="number" pos:start="415:25" pos:end="415:28">3509</literal></expr></argument>, <argument pos:start="415:31" pos:end="415:34"><expr pos:start="415:31" pos:end="415:34"><name pos:start="415:31" pos:end="415:34">MSUB</name></expr></argument>, <argument pos:start="415:37" pos:end="415:39"><expr pos:start="415:37" pos:end="415:39"><name pos:start="415:37" pos:end="415:39">ext</name></expr></argument>, <argument pos:start="415:42" pos:end="415:43"><expr pos:start="415:42" pos:end="415:43"><name pos:start="415:42" pos:end="415:43">a0</name></expr></argument>, <argument pos:start="415:46" pos:end="415:56"><expr pos:start="415:46" pos:end="415:56"><name pos:start="415:46" pos:end="415:56">TCG_REG_TMP</name></expr></argument>, <argument pos:start="415:59" pos:end="415:60"><expr pos:start="415:59" pos:end="415:60"><name pos:start="415:59" pos:end="415:60">a2</name></expr></argument>, <argument pos:start="415:63" pos:end="415:64"><expr pos:start="415:63" pos:end="415:64"><name pos:start="415:63" pos:end="415:64">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="417:9" pos:end="417:14">break;</break>



    <case pos:start="421:5" pos:end="421:26">case <expr pos:start="421:10" pos:end="421:25"><name pos:start="421:10" pos:end="421:25">INDEX_op_shl_i64</name></expr>:</case>

    <case pos:start="423:5" pos:end="423:26">case <expr pos:start="423:10" pos:end="423:25"><name pos:start="423:10" pos:end="423:25">INDEX_op_shl_i32</name></expr>:</case>

        <if_stmt pos:start="425:9" pos:end="433:9"><if pos:start="425:9" pos:end="429:9">if <condition pos:start="425:12" pos:end="425:15">(<expr pos:start="425:13" pos:end="425:14"><name pos:start="425:13" pos:end="425:14">c2</name></expr>)</condition> <block pos:start="425:17" pos:end="429:9">{<block_content pos:start="427:13" pos:end="427:44">

            <expr_stmt pos:start="427:13" pos:end="427:44"><expr pos:start="427:13" pos:end="427:43"><call pos:start="427:13" pos:end="427:43"><name pos:start="427:13" pos:end="427:23">tcg_out_shl</name><argument_list pos:start="427:24" pos:end="427:43">(<argument pos:start="427:25" pos:end="427:25"><expr pos:start="427:25" pos:end="427:25"><name pos:start="427:25" pos:end="427:25">s</name></expr></argument>, <argument pos:start="427:28" pos:end="427:30"><expr pos:start="427:28" pos:end="427:30"><name pos:start="427:28" pos:end="427:30">ext</name></expr></argument>, <argument pos:start="427:33" pos:end="427:34"><expr pos:start="427:33" pos:end="427:34"><name pos:start="427:33" pos:end="427:34">a0</name></expr></argument>, <argument pos:start="427:37" pos:end="427:38"><expr pos:start="427:37" pos:end="427:38"><name pos:start="427:37" pos:end="427:38">a1</name></expr></argument>, <argument pos:start="427:41" pos:end="427:42"><expr pos:start="427:41" pos:end="427:42"><name pos:start="427:41" pos:end="427:42">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="429:11" pos:end="433:9">else <block pos:start="429:16" pos:end="433:9">{<block_content pos:start="431:13" pos:end="431:57">

            <expr_stmt pos:start="431:13" pos:end="431:57"><expr pos:start="431:13" pos:end="431:56"><call pos:start="431:13" pos:end="431:56"><name pos:start="431:13" pos:end="431:24">tcg_out_insn</name><argument_list pos:start="431:25" pos:end="431:56">(<argument pos:start="431:26" pos:end="431:26"><expr pos:start="431:26" pos:end="431:26"><name pos:start="431:26" pos:end="431:26">s</name></expr></argument>, <argument pos:start="431:29" pos:end="431:32"><expr pos:start="431:29" pos:end="431:32"><literal type="number" pos:start="431:29" pos:end="431:32">3508</literal></expr></argument>, <argument pos:start="431:35" pos:end="431:38"><expr pos:start="431:35" pos:end="431:38"><name pos:start="431:35" pos:end="431:38">LSLV</name></expr></argument>, <argument pos:start="431:41" pos:end="431:43"><expr pos:start="431:41" pos:end="431:43"><name pos:start="431:41" pos:end="431:43">ext</name></expr></argument>, <argument pos:start="431:46" pos:end="431:47"><expr pos:start="431:46" pos:end="431:47"><name pos:start="431:46" pos:end="431:47">a0</name></expr></argument>, <argument pos:start="431:50" pos:end="431:51"><expr pos:start="431:50" pos:end="431:51"><name pos:start="431:50" pos:end="431:51">a1</name></expr></argument>, <argument pos:start="431:54" pos:end="431:55"><expr pos:start="431:54" pos:end="431:55"><name pos:start="431:54" pos:end="431:55">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="435:9" pos:end="435:14">break;</break>



    <case pos:start="439:5" pos:end="439:26">case <expr pos:start="439:10" pos:end="439:25"><name pos:start="439:10" pos:end="439:25">INDEX_op_shr_i64</name></expr>:</case>

    <case pos:start="441:5" pos:end="441:26">case <expr pos:start="441:10" pos:end="441:25"><name pos:start="441:10" pos:end="441:25">INDEX_op_shr_i32</name></expr>:</case>

        <if_stmt pos:start="443:9" pos:end="451:9"><if pos:start="443:9" pos:end="447:9">if <condition pos:start="443:12" pos:end="443:15">(<expr pos:start="443:13" pos:end="443:14"><name pos:start="443:13" pos:end="443:14">c2</name></expr>)</condition> <block pos:start="443:17" pos:end="447:9">{<block_content pos:start="445:13" pos:end="445:44">

            <expr_stmt pos:start="445:13" pos:end="445:44"><expr pos:start="445:13" pos:end="445:43"><call pos:start="445:13" pos:end="445:43"><name pos:start="445:13" pos:end="445:23">tcg_out_shr</name><argument_list pos:start="445:24" pos:end="445:43">(<argument pos:start="445:25" pos:end="445:25"><expr pos:start="445:25" pos:end="445:25"><name pos:start="445:25" pos:end="445:25">s</name></expr></argument>, <argument pos:start="445:28" pos:end="445:30"><expr pos:start="445:28" pos:end="445:30"><name pos:start="445:28" pos:end="445:30">ext</name></expr></argument>, <argument pos:start="445:33" pos:end="445:34"><expr pos:start="445:33" pos:end="445:34"><name pos:start="445:33" pos:end="445:34">a0</name></expr></argument>, <argument pos:start="445:37" pos:end="445:38"><expr pos:start="445:37" pos:end="445:38"><name pos:start="445:37" pos:end="445:38">a1</name></expr></argument>, <argument pos:start="445:41" pos:end="445:42"><expr pos:start="445:41" pos:end="445:42"><name pos:start="445:41" pos:end="445:42">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="447:11" pos:end="451:9">else <block pos:start="447:16" pos:end="451:9">{<block_content pos:start="449:13" pos:end="449:57">

            <expr_stmt pos:start="449:13" pos:end="449:57"><expr pos:start="449:13" pos:end="449:56"><call pos:start="449:13" pos:end="449:56"><name pos:start="449:13" pos:end="449:24">tcg_out_insn</name><argument_list pos:start="449:25" pos:end="449:56">(<argument pos:start="449:26" pos:end="449:26"><expr pos:start="449:26" pos:end="449:26"><name pos:start="449:26" pos:end="449:26">s</name></expr></argument>, <argument pos:start="449:29" pos:end="449:32"><expr pos:start="449:29" pos:end="449:32"><literal type="number" pos:start="449:29" pos:end="449:32">3508</literal></expr></argument>, <argument pos:start="449:35" pos:end="449:38"><expr pos:start="449:35" pos:end="449:38"><name pos:start="449:35" pos:end="449:38">LSRV</name></expr></argument>, <argument pos:start="449:41" pos:end="449:43"><expr pos:start="449:41" pos:end="449:43"><name pos:start="449:41" pos:end="449:43">ext</name></expr></argument>, <argument pos:start="449:46" pos:end="449:47"><expr pos:start="449:46" pos:end="449:47"><name pos:start="449:46" pos:end="449:47">a0</name></expr></argument>, <argument pos:start="449:50" pos:end="449:51"><expr pos:start="449:50" pos:end="449:51"><name pos:start="449:50" pos:end="449:51">a1</name></expr></argument>, <argument pos:start="449:54" pos:end="449:55"><expr pos:start="449:54" pos:end="449:55"><name pos:start="449:54" pos:end="449:55">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="453:9" pos:end="453:14">break;</break>



    <case pos:start="457:5" pos:end="457:26">case <expr pos:start="457:10" pos:end="457:25"><name pos:start="457:10" pos:end="457:25">INDEX_op_sar_i64</name></expr>:</case>

    <case pos:start="459:5" pos:end="459:26">case <expr pos:start="459:10" pos:end="459:25"><name pos:start="459:10" pos:end="459:25">INDEX_op_sar_i32</name></expr>:</case>

        <if_stmt pos:start="461:9" pos:end="469:9"><if pos:start="461:9" pos:end="465:9">if <condition pos:start="461:12" pos:end="461:15">(<expr pos:start="461:13" pos:end="461:14"><name pos:start="461:13" pos:end="461:14">c2</name></expr>)</condition> <block pos:start="461:17" pos:end="465:9">{<block_content pos:start="463:13" pos:end="463:44">

            <expr_stmt pos:start="463:13" pos:end="463:44"><expr pos:start="463:13" pos:end="463:43"><call pos:start="463:13" pos:end="463:43"><name pos:start="463:13" pos:end="463:23">tcg_out_sar</name><argument_list pos:start="463:24" pos:end="463:43">(<argument pos:start="463:25" pos:end="463:25"><expr pos:start="463:25" pos:end="463:25"><name pos:start="463:25" pos:end="463:25">s</name></expr></argument>, <argument pos:start="463:28" pos:end="463:30"><expr pos:start="463:28" pos:end="463:30"><name pos:start="463:28" pos:end="463:30">ext</name></expr></argument>, <argument pos:start="463:33" pos:end="463:34"><expr pos:start="463:33" pos:end="463:34"><name pos:start="463:33" pos:end="463:34">a0</name></expr></argument>, <argument pos:start="463:37" pos:end="463:38"><expr pos:start="463:37" pos:end="463:38"><name pos:start="463:37" pos:end="463:38">a1</name></expr></argument>, <argument pos:start="463:41" pos:end="463:42"><expr pos:start="463:41" pos:end="463:42"><name pos:start="463:41" pos:end="463:42">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="465:11" pos:end="469:9">else <block pos:start="465:16" pos:end="469:9">{<block_content pos:start="467:13" pos:end="467:57">

            <expr_stmt pos:start="467:13" pos:end="467:57"><expr pos:start="467:13" pos:end="467:56"><call pos:start="467:13" pos:end="467:56"><name pos:start="467:13" pos:end="467:24">tcg_out_insn</name><argument_list pos:start="467:25" pos:end="467:56">(<argument pos:start="467:26" pos:end="467:26"><expr pos:start="467:26" pos:end="467:26"><name pos:start="467:26" pos:end="467:26">s</name></expr></argument>, <argument pos:start="467:29" pos:end="467:32"><expr pos:start="467:29" pos:end="467:32"><literal type="number" pos:start="467:29" pos:end="467:32">3508</literal></expr></argument>, <argument pos:start="467:35" pos:end="467:38"><expr pos:start="467:35" pos:end="467:38"><name pos:start="467:35" pos:end="467:38">ASRV</name></expr></argument>, <argument pos:start="467:41" pos:end="467:43"><expr pos:start="467:41" pos:end="467:43"><name pos:start="467:41" pos:end="467:43">ext</name></expr></argument>, <argument pos:start="467:46" pos:end="467:47"><expr pos:start="467:46" pos:end="467:47"><name pos:start="467:46" pos:end="467:47">a0</name></expr></argument>, <argument pos:start="467:50" pos:end="467:51"><expr pos:start="467:50" pos:end="467:51"><name pos:start="467:50" pos:end="467:51">a1</name></expr></argument>, <argument pos:start="467:54" pos:end="467:55"><expr pos:start="467:54" pos:end="467:55"><name pos:start="467:54" pos:end="467:55">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="471:9" pos:end="471:14">break;</break>



    <case pos:start="475:5" pos:end="475:27">case <expr pos:start="475:10" pos:end="475:26"><name pos:start="475:10" pos:end="475:26">INDEX_op_rotr_i64</name></expr>:</case>

    <case pos:start="477:5" pos:end="477:27">case <expr pos:start="477:10" pos:end="477:26"><name pos:start="477:10" pos:end="477:26">INDEX_op_rotr_i32</name></expr>:</case>

        <if_stmt pos:start="479:9" pos:end="487:9"><if pos:start="479:9" pos:end="483:9">if <condition pos:start="479:12" pos:end="479:15">(<expr pos:start="479:13" pos:end="479:14"><name pos:start="479:13" pos:end="479:14">c2</name></expr>)</condition> <block pos:start="479:17" pos:end="483:9">{<block_content pos:start="481:13" pos:end="481:45">

            <expr_stmt pos:start="481:13" pos:end="481:45"><expr pos:start="481:13" pos:end="481:44"><call pos:start="481:13" pos:end="481:44"><name pos:start="481:13" pos:end="481:24">tcg_out_rotr</name><argument_list pos:start="481:25" pos:end="481:44">(<argument pos:start="481:26" pos:end="481:26"><expr pos:start="481:26" pos:end="481:26"><name pos:start="481:26" pos:end="481:26">s</name></expr></argument>, <argument pos:start="481:29" pos:end="481:31"><expr pos:start="481:29" pos:end="481:31"><name pos:start="481:29" pos:end="481:31">ext</name></expr></argument>, <argument pos:start="481:34" pos:end="481:35"><expr pos:start="481:34" pos:end="481:35"><name pos:start="481:34" pos:end="481:35">a0</name></expr></argument>, <argument pos:start="481:38" pos:end="481:39"><expr pos:start="481:38" pos:end="481:39"><name pos:start="481:38" pos:end="481:39">a1</name></expr></argument>, <argument pos:start="481:42" pos:end="481:43"><expr pos:start="481:42" pos:end="481:43"><name pos:start="481:42" pos:end="481:43">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="483:11" pos:end="487:9">else <block pos:start="483:16" pos:end="487:9">{<block_content pos:start="485:13" pos:end="485:57">

            <expr_stmt pos:start="485:13" pos:end="485:57"><expr pos:start="485:13" pos:end="485:56"><call pos:start="485:13" pos:end="485:56"><name pos:start="485:13" pos:end="485:24">tcg_out_insn</name><argument_list pos:start="485:25" pos:end="485:56">(<argument pos:start="485:26" pos:end="485:26"><expr pos:start="485:26" pos:end="485:26"><name pos:start="485:26" pos:end="485:26">s</name></expr></argument>, <argument pos:start="485:29" pos:end="485:32"><expr pos:start="485:29" pos:end="485:32"><literal type="number" pos:start="485:29" pos:end="485:32">3508</literal></expr></argument>, <argument pos:start="485:35" pos:end="485:38"><expr pos:start="485:35" pos:end="485:38"><name pos:start="485:35" pos:end="485:38">RORV</name></expr></argument>, <argument pos:start="485:41" pos:end="485:43"><expr pos:start="485:41" pos:end="485:43"><name pos:start="485:41" pos:end="485:43">ext</name></expr></argument>, <argument pos:start="485:46" pos:end="485:47"><expr pos:start="485:46" pos:end="485:47"><name pos:start="485:46" pos:end="485:47">a0</name></expr></argument>, <argument pos:start="485:50" pos:end="485:51"><expr pos:start="485:50" pos:end="485:51"><name pos:start="485:50" pos:end="485:51">a1</name></expr></argument>, <argument pos:start="485:54" pos:end="485:55"><expr pos:start="485:54" pos:end="485:55"><name pos:start="485:54" pos:end="485:55">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="489:9" pos:end="489:14">break;</break>



    <case pos:start="493:5" pos:end="493:27">case <expr pos:start="493:10" pos:end="493:26"><name pos:start="493:10" pos:end="493:26">INDEX_op_rotl_i64</name></expr>:</case>

    <case pos:start="495:5" pos:end="495:27">case <expr pos:start="495:10" pos:end="495:26"><name pos:start="495:10" pos:end="495:26">INDEX_op_rotl_i32</name></expr>:</case>

        <if_stmt pos:start="497:9" pos:end="507:9"><if pos:start="497:9" pos:end="501:9">if <condition pos:start="497:12" pos:end="497:15">(<expr pos:start="497:13" pos:end="497:14"><name pos:start="497:13" pos:end="497:14">c2</name></expr>)</condition> <block pos:start="497:17" pos:end="501:9">{<block_content pos:start="499:13" pos:end="499:45">

            <expr_stmt pos:start="499:13" pos:end="499:45"><expr pos:start="499:13" pos:end="499:44"><call pos:start="499:13" pos:end="499:44"><name pos:start="499:13" pos:end="499:24">tcg_out_rotl</name><argument_list pos:start="499:25" pos:end="499:44">(<argument pos:start="499:26" pos:end="499:26"><expr pos:start="499:26" pos:end="499:26"><name pos:start="499:26" pos:end="499:26">s</name></expr></argument>, <argument pos:start="499:29" pos:end="499:31"><expr pos:start="499:29" pos:end="499:31"><name pos:start="499:29" pos:end="499:31">ext</name></expr></argument>, <argument pos:start="499:34" pos:end="499:35"><expr pos:start="499:34" pos:end="499:35"><name pos:start="499:34" pos:end="499:35">a0</name></expr></argument>, <argument pos:start="499:38" pos:end="499:39"><expr pos:start="499:38" pos:end="499:39"><name pos:start="499:38" pos:end="499:39">a1</name></expr></argument>, <argument pos:start="499:42" pos:end="499:43"><expr pos:start="499:42" pos:end="499:43"><name pos:start="499:42" pos:end="499:43">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="501:11" pos:end="507:9">else <block pos:start="501:16" pos:end="507:9">{<block_content pos:start="503:13" pos:end="505:66">

            <expr_stmt pos:start="503:13" pos:end="503:72"><expr pos:start="503:13" pos:end="503:71"><call pos:start="503:13" pos:end="503:71"><name pos:start="503:13" pos:end="503:24">tcg_out_insn</name><argument_list pos:start="503:25" pos:end="503:71">(<argument pos:start="503:26" pos:end="503:26"><expr pos:start="503:26" pos:end="503:26"><name pos:start="503:26" pos:end="503:26">s</name></expr></argument>, <argument pos:start="503:29" pos:end="503:32"><expr pos:start="503:29" pos:end="503:32"><literal type="number" pos:start="503:29" pos:end="503:32">3502</literal></expr></argument>, <argument pos:start="503:35" pos:end="503:37"><expr pos:start="503:35" pos:end="503:37"><name pos:start="503:35" pos:end="503:37">SUB</name></expr></argument>, <argument pos:start="503:40" pos:end="503:40"><expr pos:start="503:40" pos:end="503:40"><literal type="number" pos:start="503:40" pos:end="503:40">0</literal></expr></argument>, <argument pos:start="503:43" pos:end="503:53"><expr pos:start="503:43" pos:end="503:53"><name pos:start="503:43" pos:end="503:53">TCG_REG_TMP</name></expr></argument>, <argument pos:start="503:56" pos:end="503:66"><expr pos:start="503:56" pos:end="503:66"><name pos:start="503:56" pos:end="503:66">TCG_REG_XZR</name></expr></argument>, <argument pos:start="503:69" pos:end="503:70"><expr pos:start="503:69" pos:end="503:70"><name pos:start="503:69" pos:end="503:70">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:66"><expr pos:start="505:13" pos:end="505:65"><call pos:start="505:13" pos:end="505:65"><name pos:start="505:13" pos:end="505:24">tcg_out_insn</name><argument_list pos:start="505:25" pos:end="505:65">(<argument pos:start="505:26" pos:end="505:26"><expr pos:start="505:26" pos:end="505:26"><name pos:start="505:26" pos:end="505:26">s</name></expr></argument>, <argument pos:start="505:29" pos:end="505:32"><expr pos:start="505:29" pos:end="505:32"><literal type="number" pos:start="505:29" pos:end="505:32">3508</literal></expr></argument>, <argument pos:start="505:35" pos:end="505:38"><expr pos:start="505:35" pos:end="505:38"><name pos:start="505:35" pos:end="505:38">RORV</name></expr></argument>, <argument pos:start="505:41" pos:end="505:43"><expr pos:start="505:41" pos:end="505:43"><name pos:start="505:41" pos:end="505:43">ext</name></expr></argument>, <argument pos:start="505:46" pos:end="505:47"><expr pos:start="505:46" pos:end="505:47"><name pos:start="505:46" pos:end="505:47">a0</name></expr></argument>, <argument pos:start="505:50" pos:end="505:51"><expr pos:start="505:50" pos:end="505:51"><name pos:start="505:50" pos:end="505:51">a1</name></expr></argument>, <argument pos:start="505:54" pos:end="505:64"><expr pos:start="505:54" pos:end="505:64"><name pos:start="505:54" pos:end="505:64">TCG_REG_TMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="509:9" pos:end="509:14">break;</break>



    <case pos:start="513:5" pos:end="513:29">case <expr pos:start="513:10" pos:end="513:28"><name pos:start="513:10" pos:end="513:28">INDEX_op_brcond_i32</name></expr>:</case>

        <expr_stmt pos:start="515:9" pos:end="515:25"><expr pos:start="515:9" pos:end="515:24"><name pos:start="515:9" pos:end="515:10">a1</name> <operator pos:start="515:12" pos:end="515:12">=</operator> <operator pos:start="515:14" pos:end="515:14">(</operator><name pos:start="515:15" pos:end="515:21">int32_t</name><operator pos:start="515:22" pos:end="515:22">)</operator><name pos:start="515:23" pos:end="515:24">a1</name></expr>;</expr_stmt>

        <comment type="block" pos:start="517:9" pos:end="517:22">/* FALLTHRU */</comment>

    <case pos:start="519:5" pos:end="519:29">case <expr pos:start="519:10" pos:end="519:28"><name pos:start="519:10" pos:end="519:28">INDEX_op_brcond_i64</name></expr>:</case>

        <expr_stmt pos:start="521:9" pos:end="521:78"><expr pos:start="521:9" pos:end="521:77"><call pos:start="521:9" pos:end="521:77"><name pos:start="521:9" pos:end="521:22">tcg_out_brcond</name><argument_list pos:start="521:23" pos:end="521:77">(<argument pos:start="521:24" pos:end="521:24"><expr pos:start="521:24" pos:end="521:24"><name pos:start="521:24" pos:end="521:24">s</name></expr></argument>, <argument pos:start="521:27" pos:end="521:29"><expr pos:start="521:27" pos:end="521:29"><name pos:start="521:27" pos:end="521:29">ext</name></expr></argument>, <argument pos:start="521:32" pos:end="521:33"><expr pos:start="521:32" pos:end="521:33"><name pos:start="521:32" pos:end="521:33">a2</name></expr></argument>, <argument pos:start="521:36" pos:end="521:37"><expr pos:start="521:36" pos:end="521:37"><name pos:start="521:36" pos:end="521:37">a0</name></expr></argument>, <argument pos:start="521:40" pos:end="521:41"><expr pos:start="521:40" pos:end="521:41"><name pos:start="521:40" pos:end="521:41">a1</name></expr></argument>, <argument pos:start="521:44" pos:end="521:56"><expr pos:start="521:44" pos:end="521:56"><name pos:start="521:44" pos:end="521:56"><name pos:start="521:44" pos:end="521:53">const_args</name><index pos:start="521:54" pos:end="521:56">[<expr pos:start="521:55" pos:end="521:55"><literal type="number" pos:start="521:55" pos:end="521:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="521:59" pos:end="521:76"><expr pos:start="521:59" pos:end="521:76"><call pos:start="521:59" pos:end="521:76"><name pos:start="521:59" pos:end="521:67">arg_label</name><argument_list pos:start="521:68" pos:end="521:76">(<argument pos:start="521:69" pos:end="521:75"><expr pos:start="521:69" pos:end="521:75"><name pos:start="521:69" pos:end="521:75"><name pos:start="521:69" pos:end="521:72">args</name><index pos:start="521:73" pos:end="521:75">[<expr pos:start="521:74" pos:end="521:74"><literal type="number" pos:start="521:74" pos:end="521:74">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="523:9" pos:end="523:14">break;</break>



    <case pos:start="527:5" pos:end="527:30">case <expr pos:start="527:10" pos:end="527:29"><name pos:start="527:10" pos:end="527:29">INDEX_op_setcond_i32</name></expr>:</case>

        <expr_stmt pos:start="529:9" pos:end="529:25"><expr pos:start="529:9" pos:end="529:24"><name pos:start="529:9" pos:end="529:10">a2</name> <operator pos:start="529:12" pos:end="529:12">=</operator> <operator pos:start="529:14" pos:end="529:14">(</operator><name pos:start="529:15" pos:end="529:21">int32_t</name><operator pos:start="529:22" pos:end="529:22">)</operator><name pos:start="529:23" pos:end="529:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="531:9" pos:end="531:22">/* FALLTHRU */</comment>

    <case pos:start="533:5" pos:end="533:30">case <expr pos:start="533:10" pos:end="533:29"><name pos:start="533:10" pos:end="533:29">INDEX_op_setcond_i64</name></expr>:</case>

        <expr_stmt pos:start="535:9" pos:end="535:40"><expr pos:start="535:9" pos:end="535:39"><call pos:start="535:9" pos:end="535:39"><name pos:start="535:9" pos:end="535:19">tcg_out_cmp</name><argument_list pos:start="535:20" pos:end="535:39">(<argument pos:start="535:21" pos:end="535:21"><expr pos:start="535:21" pos:end="535:21"><name pos:start="535:21" pos:end="535:21">s</name></expr></argument>, <argument pos:start="535:24" pos:end="535:26"><expr pos:start="535:24" pos:end="535:26"><name pos:start="535:24" pos:end="535:26">ext</name></expr></argument>, <argument pos:start="535:29" pos:end="535:30"><expr pos:start="535:29" pos:end="535:30"><name pos:start="535:29" pos:end="535:30">a1</name></expr></argument>, <argument pos:start="535:33" pos:end="535:34"><expr pos:start="535:33" pos:end="535:34"><name pos:start="535:33" pos:end="535:34">a2</name></expr></argument>, <argument pos:start="535:37" pos:end="535:38"><expr pos:start="535:37" pos:end="535:38"><name pos:start="535:37" pos:end="535:38">c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="537:9" pos:end="537:66">/* Use CSET alias of CSINC Wd, WZR, WZR, invert(cond).  */</comment>

        <expr_stmt pos:start="539:9" pos:end="541:60"><expr pos:start="539:9" pos:end="541:59"><call pos:start="539:9" pos:end="541:59"><name pos:start="539:9" pos:end="539:20">tcg_out_insn</name><argument_list pos:start="539:21" pos:end="541:59">(<argument pos:start="539:22" pos:end="539:22"><expr pos:start="539:22" pos:end="539:22"><name pos:start="539:22" pos:end="539:22">s</name></expr></argument>, <argument pos:start="539:25" pos:end="539:28"><expr pos:start="539:25" pos:end="539:28"><literal type="number" pos:start="539:25" pos:end="539:28">3506</literal></expr></argument>, <argument pos:start="539:31" pos:end="539:35"><expr pos:start="539:31" pos:end="539:35"><name pos:start="539:31" pos:end="539:35">CSINC</name></expr></argument>, <argument pos:start="539:38" pos:end="539:49"><expr pos:start="539:38" pos:end="539:49"><name pos:start="539:38" pos:end="539:49">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="539:52" pos:end="539:53"><expr pos:start="539:52" pos:end="539:53"><name pos:start="539:52" pos:end="539:53">a0</name></expr></argument>, <argument pos:start="539:56" pos:end="539:66"><expr pos:start="539:56" pos:end="539:66"><name pos:start="539:56" pos:end="539:66">TCG_REG_XZR</name></expr></argument>,

                     <argument pos:start="541:22" pos:end="541:32"><expr pos:start="541:22" pos:end="541:32"><name pos:start="541:22" pos:end="541:32">TCG_REG_XZR</name></expr></argument>, <argument pos:start="541:35" pos:end="541:58"><expr pos:start="541:35" pos:end="541:58"><call pos:start="541:35" pos:end="541:58"><name pos:start="541:35" pos:end="541:49">tcg_invert_cond</name><argument_list pos:start="541:50" pos:end="541:58">(<argument pos:start="541:51" pos:end="541:57"><expr pos:start="541:51" pos:end="541:57"><name pos:start="541:51" pos:end="541:57"><name pos:start="541:51" pos:end="541:54">args</name><index pos:start="541:55" pos:end="541:57">[<expr pos:start="541:56" pos:end="541:56"><literal type="number" pos:start="541:56" pos:end="541:56">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="543:9" pos:end="543:14">break;</break>



    <case pos:start="547:5" pos:end="547:30">case <expr pos:start="547:10" pos:end="547:29"><name pos:start="547:10" pos:end="547:29">INDEX_op_movcond_i32</name></expr>:</case>

        <expr_stmt pos:start="549:9" pos:end="549:25"><expr pos:start="549:9" pos:end="549:24"><name pos:start="549:9" pos:end="549:10">a2</name> <operator pos:start="549:12" pos:end="549:12">=</operator> <operator pos:start="549:14" pos:end="549:14">(</operator><name pos:start="549:15" pos:end="549:21">int32_t</name><operator pos:start="549:22" pos:end="549:22">)</operator><name pos:start="549:23" pos:end="549:24">a2</name></expr>;</expr_stmt>

        <comment type="block" pos:start="551:9" pos:end="551:22">/* FALLTHRU */</comment>

    <case pos:start="553:5" pos:end="553:30">case <expr pos:start="553:10" pos:end="553:29"><name pos:start="553:10" pos:end="553:29">INDEX_op_movcond_i64</name></expr>:</case>

        <expr_stmt pos:start="555:9" pos:end="555:40"><expr pos:start="555:9" pos:end="555:39"><call pos:start="555:9" pos:end="555:39"><name pos:start="555:9" pos:end="555:19">tcg_out_cmp</name><argument_list pos:start="555:20" pos:end="555:39">(<argument pos:start="555:21" pos:end="555:21"><expr pos:start="555:21" pos:end="555:21"><name pos:start="555:21" pos:end="555:21">s</name></expr></argument>, <argument pos:start="555:24" pos:end="555:26"><expr pos:start="555:24" pos:end="555:26"><name pos:start="555:24" pos:end="555:26">ext</name></expr></argument>, <argument pos:start="555:29" pos:end="555:30"><expr pos:start="555:29" pos:end="555:30"><name pos:start="555:29" pos:end="555:30">a1</name></expr></argument>, <argument pos:start="555:33" pos:end="555:34"><expr pos:start="555:33" pos:end="555:34"><name pos:start="555:33" pos:end="555:34">a2</name></expr></argument>, <argument pos:start="555:37" pos:end="555:38"><expr pos:start="555:37" pos:end="555:38"><name pos:start="555:37" pos:end="555:38">c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="557:9" pos:end="557:72"><expr pos:start="557:9" pos:end="557:71"><call pos:start="557:9" pos:end="557:71"><name pos:start="557:9" pos:end="557:20">tcg_out_insn</name><argument_list pos:start="557:21" pos:end="557:71">(<argument pos:start="557:22" pos:end="557:22"><expr pos:start="557:22" pos:end="557:22"><name pos:start="557:22" pos:end="557:22">s</name></expr></argument>, <argument pos:start="557:25" pos:end="557:28"><expr pos:start="557:25" pos:end="557:28"><literal type="number" pos:start="557:25" pos:end="557:28">3506</literal></expr></argument>, <argument pos:start="557:31" pos:end="557:34"><expr pos:start="557:31" pos:end="557:34"><name pos:start="557:31" pos:end="557:34">CSEL</name></expr></argument>, <argument pos:start="557:37" pos:end="557:39"><expr pos:start="557:37" pos:end="557:39"><name pos:start="557:37" pos:end="557:39">ext</name></expr></argument>, <argument pos:start="557:42" pos:end="557:43"><expr pos:start="557:42" pos:end="557:43"><name pos:start="557:42" pos:end="557:43">a0</name></expr></argument>, <argument pos:start="557:46" pos:end="557:52"><expr pos:start="557:46" pos:end="557:52"><call pos:start="557:46" pos:end="557:52"><name pos:start="557:46" pos:end="557:49">REG0</name><argument_list pos:start="557:50" pos:end="557:52">(<argument pos:start="557:51" pos:end="557:51"><expr pos:start="557:51" pos:end="557:51"><literal type="number" pos:start="557:51" pos:end="557:51">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="557:55" pos:end="557:61"><expr pos:start="557:55" pos:end="557:61"><call pos:start="557:55" pos:end="557:61"><name pos:start="557:55" pos:end="557:58">REG0</name><argument_list pos:start="557:59" pos:end="557:61">(<argument pos:start="557:60" pos:end="557:60"><expr pos:start="557:60" pos:end="557:60"><literal type="number" pos:start="557:60" pos:end="557:60">4</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="557:64" pos:end="557:70"><expr pos:start="557:64" pos:end="557:70"><name pos:start="557:64" pos:end="557:70"><name pos:start="557:64" pos:end="557:67">args</name><index pos:start="557:68" pos:end="557:70">[<expr pos:start="557:69" pos:end="557:69"><literal type="number" pos:start="557:69" pos:end="557:69">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="559:9" pos:end="559:14">break;</break>



    <case pos:start="563:5" pos:end="563:30">case <expr pos:start="563:10" pos:end="563:29"><name pos:start="563:10" pos:end="563:29">INDEX_op_qemu_ld_i32</name></expr>:</case>

    <case pos:start="565:5" pos:end="565:30">case <expr pos:start="565:10" pos:end="565:29"><name pos:start="565:10" pos:end="565:29">INDEX_op_qemu_ld_i64</name></expr>:</case>

        <expr_stmt pos:start="567:9" pos:end="567:44"><expr pos:start="567:9" pos:end="567:43"><call pos:start="567:9" pos:end="567:43"><name pos:start="567:9" pos:end="567:23">tcg_out_qemu_ld</name><argument_list pos:start="567:24" pos:end="567:43">(<argument pos:start="567:25" pos:end="567:25"><expr pos:start="567:25" pos:end="567:25"><name pos:start="567:25" pos:end="567:25">s</name></expr></argument>, <argument pos:start="567:28" pos:end="567:29"><expr pos:start="567:28" pos:end="567:29"><name pos:start="567:28" pos:end="567:29">a0</name></expr></argument>, <argument pos:start="567:32" pos:end="567:33"><expr pos:start="567:32" pos:end="567:33"><name pos:start="567:32" pos:end="567:33">a1</name></expr></argument>, <argument pos:start="567:36" pos:end="567:37"><expr pos:start="567:36" pos:end="567:37"><name pos:start="567:36" pos:end="567:37">a2</name></expr></argument>, <argument pos:start="567:40" pos:end="567:42"><expr pos:start="567:40" pos:end="567:42"><name pos:start="567:40" pos:end="567:42">ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="569:9" pos:end="569:14">break;</break>

    <case pos:start="571:5" pos:end="571:30">case <expr pos:start="571:10" pos:end="571:29"><name pos:start="571:10" pos:end="571:29">INDEX_op_qemu_st_i32</name></expr>:</case>

    <case pos:start="573:5" pos:end="573:30">case <expr pos:start="573:10" pos:end="573:29"><name pos:start="573:10" pos:end="573:29">INDEX_op_qemu_st_i64</name></expr>:</case>

        <expr_stmt pos:start="575:9" pos:end="575:44"><expr pos:start="575:9" pos:end="575:43"><call pos:start="575:9" pos:end="575:43"><name pos:start="575:9" pos:end="575:23">tcg_out_qemu_st</name><argument_list pos:start="575:24" pos:end="575:43">(<argument pos:start="575:25" pos:end="575:25"><expr pos:start="575:25" pos:end="575:25"><name pos:start="575:25" pos:end="575:25">s</name></expr></argument>, <argument pos:start="575:28" pos:end="575:34"><expr pos:start="575:28" pos:end="575:34"><call pos:start="575:28" pos:end="575:34"><name pos:start="575:28" pos:end="575:31">REG0</name><argument_list pos:start="575:32" pos:end="575:34">(<argument pos:start="575:33" pos:end="575:33"><expr pos:start="575:33" pos:end="575:33"><literal type="number" pos:start="575:33" pos:end="575:33">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="575:37" pos:end="575:38"><expr pos:start="575:37" pos:end="575:38"><name pos:start="575:37" pos:end="575:38">a1</name></expr></argument>, <argument pos:start="575:41" pos:end="575:42"><expr pos:start="575:41" pos:end="575:42"><name pos:start="575:41" pos:end="575:42">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="577:9" pos:end="577:14">break;</break>



    <case pos:start="581:5" pos:end="581:30">case <expr pos:start="581:10" pos:end="581:29"><name pos:start="581:10" pos:end="581:29">INDEX_op_bswap64_i64</name></expr>:</case>

        <expr_stmt pos:start="583:9" pos:end="583:33"><expr pos:start="583:9" pos:end="583:32"><call pos:start="583:9" pos:end="583:32"><name pos:start="583:9" pos:end="583:21">tcg_out_rev64</name><argument_list pos:start="583:22" pos:end="583:32">(<argument pos:start="583:23" pos:end="583:23"><expr pos:start="583:23" pos:end="583:23"><name pos:start="583:23" pos:end="583:23">s</name></expr></argument>, <argument pos:start="583:26" pos:end="583:27"><expr pos:start="583:26" pos:end="583:27"><name pos:start="583:26" pos:end="583:27">a0</name></expr></argument>, <argument pos:start="583:30" pos:end="583:31"><expr pos:start="583:30" pos:end="583:31"><name pos:start="583:30" pos:end="583:31">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="585:9" pos:end="585:14">break;</break>

    <case pos:start="587:5" pos:end="587:30">case <expr pos:start="587:10" pos:end="587:29"><name pos:start="587:10" pos:end="587:29">INDEX_op_bswap32_i64</name></expr>:</case>

    <case pos:start="589:5" pos:end="589:30">case <expr pos:start="589:10" pos:end="589:29"><name pos:start="589:10" pos:end="589:29">INDEX_op_bswap32_i32</name></expr>:</case>

        <expr_stmt pos:start="591:9" pos:end="591:33"><expr pos:start="591:9" pos:end="591:32"><call pos:start="591:9" pos:end="591:32"><name pos:start="591:9" pos:end="591:21">tcg_out_rev32</name><argument_list pos:start="591:22" pos:end="591:32">(<argument pos:start="591:23" pos:end="591:23"><expr pos:start="591:23" pos:end="591:23"><name pos:start="591:23" pos:end="591:23">s</name></expr></argument>, <argument pos:start="591:26" pos:end="591:27"><expr pos:start="591:26" pos:end="591:27"><name pos:start="591:26" pos:end="591:27">a0</name></expr></argument>, <argument pos:start="591:30" pos:end="591:31"><expr pos:start="591:30" pos:end="591:31"><name pos:start="591:30" pos:end="591:31">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="593:9" pos:end="593:14">break;</break>

    <case pos:start="595:5" pos:end="595:30">case <expr pos:start="595:10" pos:end="595:29"><name pos:start="595:10" pos:end="595:29">INDEX_op_bswap16_i64</name></expr>:</case>

    <case pos:start="597:5" pos:end="597:30">case <expr pos:start="597:10" pos:end="597:29"><name pos:start="597:10" pos:end="597:29">INDEX_op_bswap16_i32</name></expr>:</case>

        <expr_stmt pos:start="599:9" pos:end="599:33"><expr pos:start="599:9" pos:end="599:32"><call pos:start="599:9" pos:end="599:32"><name pos:start="599:9" pos:end="599:21">tcg_out_rev16</name><argument_list pos:start="599:22" pos:end="599:32">(<argument pos:start="599:23" pos:end="599:23"><expr pos:start="599:23" pos:end="599:23"><name pos:start="599:23" pos:end="599:23">s</name></expr></argument>, <argument pos:start="599:26" pos:end="599:27"><expr pos:start="599:26" pos:end="599:27"><name pos:start="599:26" pos:end="599:27">a0</name></expr></argument>, <argument pos:start="599:30" pos:end="599:31"><expr pos:start="599:30" pos:end="599:31"><name pos:start="599:30" pos:end="599:31">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="601:9" pos:end="601:14">break;</break>



    <case pos:start="605:5" pos:end="605:28">case <expr pos:start="605:10" pos:end="605:27"><name pos:start="605:10" pos:end="605:27">INDEX_op_ext8s_i64</name></expr>:</case>

    <case pos:start="607:5" pos:end="607:28">case <expr pos:start="607:10" pos:end="607:27"><name pos:start="607:10" pos:end="607:27">INDEX_op_ext8s_i32</name></expr>:</case>

        <expr_stmt pos:start="609:9" pos:end="609:42"><expr pos:start="609:9" pos:end="609:41"><call pos:start="609:9" pos:end="609:41"><name pos:start="609:9" pos:end="609:19">tcg_out_sxt</name><argument_list pos:start="609:20" pos:end="609:41">(<argument pos:start="609:21" pos:end="609:21"><expr pos:start="609:21" pos:end="609:21"><name pos:start="609:21" pos:end="609:21">s</name></expr></argument>, <argument pos:start="609:24" pos:end="609:26"><expr pos:start="609:24" pos:end="609:26"><name pos:start="609:24" pos:end="609:26">ext</name></expr></argument>, <argument pos:start="609:29" pos:end="609:32"><expr pos:start="609:29" pos:end="609:32"><name pos:start="609:29" pos:end="609:32">MO_8</name></expr></argument>, <argument pos:start="609:35" pos:end="609:36"><expr pos:start="609:35" pos:end="609:36"><name pos:start="609:35" pos:end="609:36">a0</name></expr></argument>, <argument pos:start="609:39" pos:end="609:40"><expr pos:start="609:39" pos:end="609:40"><name pos:start="609:39" pos:end="609:40">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="611:9" pos:end="611:14">break;</break>

    <case pos:start="613:5" pos:end="613:29">case <expr pos:start="613:10" pos:end="613:28"><name pos:start="613:10" pos:end="613:28">INDEX_op_ext16s_i64</name></expr>:</case>

    <case pos:start="615:5" pos:end="615:29">case <expr pos:start="615:10" pos:end="615:28"><name pos:start="615:10" pos:end="615:28">INDEX_op_ext16s_i32</name></expr>:</case>

        <expr_stmt pos:start="617:9" pos:end="617:43"><expr pos:start="617:9" pos:end="617:42"><call pos:start="617:9" pos:end="617:42"><name pos:start="617:9" pos:end="617:19">tcg_out_sxt</name><argument_list pos:start="617:20" pos:end="617:42">(<argument pos:start="617:21" pos:end="617:21"><expr pos:start="617:21" pos:end="617:21"><name pos:start="617:21" pos:end="617:21">s</name></expr></argument>, <argument pos:start="617:24" pos:end="617:26"><expr pos:start="617:24" pos:end="617:26"><name pos:start="617:24" pos:end="617:26">ext</name></expr></argument>, <argument pos:start="617:29" pos:end="617:33"><expr pos:start="617:29" pos:end="617:33"><name pos:start="617:29" pos:end="617:33">MO_16</name></expr></argument>, <argument pos:start="617:36" pos:end="617:37"><expr pos:start="617:36" pos:end="617:37"><name pos:start="617:36" pos:end="617:37">a0</name></expr></argument>, <argument pos:start="617:40" pos:end="617:41"><expr pos:start="617:40" pos:end="617:41"><name pos:start="617:40" pos:end="617:41">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="619:9" pos:end="619:14">break;</break>

    <case pos:start="621:5" pos:end="621:30">case <expr pos:start="621:10" pos:end="621:29"><name pos:start="621:10" pos:end="621:29">INDEX_op_ext_i32_i64</name></expr>:</case>

    <case pos:start="623:5" pos:end="623:29">case <expr pos:start="623:10" pos:end="623:28"><name pos:start="623:10" pos:end="623:28">INDEX_op_ext32s_i64</name></expr>:</case>

        <expr_stmt pos:start="625:9" pos:end="625:52"><expr pos:start="625:9" pos:end="625:51"><call pos:start="625:9" pos:end="625:51"><name pos:start="625:9" pos:end="625:19">tcg_out_sxt</name><argument_list pos:start="625:20" pos:end="625:51">(<argument pos:start="625:21" pos:end="625:21"><expr pos:start="625:21" pos:end="625:21"><name pos:start="625:21" pos:end="625:21">s</name></expr></argument>, <argument pos:start="625:24" pos:end="625:35"><expr pos:start="625:24" pos:end="625:35"><name pos:start="625:24" pos:end="625:35">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="625:38" pos:end="625:42"><expr pos:start="625:38" pos:end="625:42"><name pos:start="625:38" pos:end="625:42">MO_32</name></expr></argument>, <argument pos:start="625:45" pos:end="625:46"><expr pos:start="625:45" pos:end="625:46"><name pos:start="625:45" pos:end="625:46">a0</name></expr></argument>, <argument pos:start="625:49" pos:end="625:50"><expr pos:start="625:49" pos:end="625:50"><name pos:start="625:49" pos:end="625:50">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="627:9" pos:end="627:14">break;</break>

    <case pos:start="629:5" pos:end="629:28">case <expr pos:start="629:10" pos:end="629:27"><name pos:start="629:10" pos:end="629:27">INDEX_op_ext8u_i64</name></expr>:</case>

    <case pos:start="631:5" pos:end="631:28">case <expr pos:start="631:10" pos:end="631:27"><name pos:start="631:10" pos:end="631:27">INDEX_op_ext8u_i32</name></expr>:</case>

        <expr_stmt pos:start="633:9" pos:end="633:37"><expr pos:start="633:9" pos:end="633:36"><call pos:start="633:9" pos:end="633:36"><name pos:start="633:9" pos:end="633:19">tcg_out_uxt</name><argument_list pos:start="633:20" pos:end="633:36">(<argument pos:start="633:21" pos:end="633:21"><expr pos:start="633:21" pos:end="633:21"><name pos:start="633:21" pos:end="633:21">s</name></expr></argument>, <argument pos:start="633:24" pos:end="633:27"><expr pos:start="633:24" pos:end="633:27"><name pos:start="633:24" pos:end="633:27">MO_8</name></expr></argument>, <argument pos:start="633:30" pos:end="633:31"><expr pos:start="633:30" pos:end="633:31"><name pos:start="633:30" pos:end="633:31">a0</name></expr></argument>, <argument pos:start="633:34" pos:end="633:35"><expr pos:start="633:34" pos:end="633:35"><name pos:start="633:34" pos:end="633:35">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="635:9" pos:end="635:14">break;</break>

    <case pos:start="637:5" pos:end="637:29">case <expr pos:start="637:10" pos:end="637:28"><name pos:start="637:10" pos:end="637:28">INDEX_op_ext16u_i64</name></expr>:</case>

    <case pos:start="639:5" pos:end="639:29">case <expr pos:start="639:10" pos:end="639:28"><name pos:start="639:10" pos:end="639:28">INDEX_op_ext16u_i32</name></expr>:</case>

        <expr_stmt pos:start="641:9" pos:end="641:38"><expr pos:start="641:9" pos:end="641:37"><call pos:start="641:9" pos:end="641:37"><name pos:start="641:9" pos:end="641:19">tcg_out_uxt</name><argument_list pos:start="641:20" pos:end="641:37">(<argument pos:start="641:21" pos:end="641:21"><expr pos:start="641:21" pos:end="641:21"><name pos:start="641:21" pos:end="641:21">s</name></expr></argument>, <argument pos:start="641:24" pos:end="641:28"><expr pos:start="641:24" pos:end="641:28"><name pos:start="641:24" pos:end="641:28">MO_16</name></expr></argument>, <argument pos:start="641:31" pos:end="641:32"><expr pos:start="641:31" pos:end="641:32"><name pos:start="641:31" pos:end="641:32">a0</name></expr></argument>, <argument pos:start="641:35" pos:end="641:36"><expr pos:start="641:35" pos:end="641:36"><name pos:start="641:35" pos:end="641:36">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="643:9" pos:end="643:14">break;</break>

    <case pos:start="645:5" pos:end="645:31">case <expr pos:start="645:10" pos:end="645:30"><name pos:start="645:10" pos:end="645:30">INDEX_op_extu_i32_i64</name></expr>:</case>

    <case pos:start="647:5" pos:end="647:29">case <expr pos:start="647:10" pos:end="647:28"><name pos:start="647:10" pos:end="647:28">INDEX_op_ext32u_i64</name></expr>:</case>

        <expr_stmt pos:start="649:9" pos:end="649:46"><expr pos:start="649:9" pos:end="649:45"><call pos:start="649:9" pos:end="649:45"><name pos:start="649:9" pos:end="649:20">tcg_out_movr</name><argument_list pos:start="649:21" pos:end="649:45">(<argument pos:start="649:22" pos:end="649:22"><expr pos:start="649:22" pos:end="649:22"><name pos:start="649:22" pos:end="649:22">s</name></expr></argument>, <argument pos:start="649:25" pos:end="649:36"><expr pos:start="649:25" pos:end="649:36"><name pos:start="649:25" pos:end="649:36">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="649:39" pos:end="649:40"><expr pos:start="649:39" pos:end="649:40"><name pos:start="649:39" pos:end="649:40">a0</name></expr></argument>, <argument pos:start="649:43" pos:end="649:44"><expr pos:start="649:43" pos:end="649:44"><name pos:start="649:43" pos:end="649:44">a1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="651:9" pos:end="651:14">break;</break>



    <case pos:start="655:5" pos:end="655:30">case <expr pos:start="655:10" pos:end="655:29"><name pos:start="655:10" pos:end="655:29">INDEX_op_deposit_i64</name></expr>:</case>

    <case pos:start="657:5" pos:end="657:30">case <expr pos:start="657:10" pos:end="657:29"><name pos:start="657:10" pos:end="657:29">INDEX_op_deposit_i32</name></expr>:</case>

        <expr_stmt pos:start="659:9" pos:end="659:59"><expr pos:start="659:9" pos:end="659:58"><call pos:start="659:9" pos:end="659:58"><name pos:start="659:9" pos:end="659:19">tcg_out_dep</name><argument_list pos:start="659:20" pos:end="659:58">(<argument pos:start="659:21" pos:end="659:21"><expr pos:start="659:21" pos:end="659:21"><name pos:start="659:21" pos:end="659:21">s</name></expr></argument>, <argument pos:start="659:24" pos:end="659:26"><expr pos:start="659:24" pos:end="659:26"><name pos:start="659:24" pos:end="659:26">ext</name></expr></argument>, <argument pos:start="659:29" pos:end="659:30"><expr pos:start="659:29" pos:end="659:30"><name pos:start="659:29" pos:end="659:30">a0</name></expr></argument>, <argument pos:start="659:33" pos:end="659:39"><expr pos:start="659:33" pos:end="659:39"><call pos:start="659:33" pos:end="659:39"><name pos:start="659:33" pos:end="659:36">REG0</name><argument_list pos:start="659:37" pos:end="659:39">(<argument pos:start="659:38" pos:end="659:38"><expr pos:start="659:38" pos:end="659:38"><literal type="number" pos:start="659:38" pos:end="659:38">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="659:42" pos:end="659:48"><expr pos:start="659:42" pos:end="659:48"><name pos:start="659:42" pos:end="659:48"><name pos:start="659:42" pos:end="659:45">args</name><index pos:start="659:46" pos:end="659:48">[<expr pos:start="659:47" pos:end="659:47"><literal type="number" pos:start="659:47" pos:end="659:47">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="659:51" pos:end="659:57"><expr pos:start="659:51" pos:end="659:57"><name pos:start="659:51" pos:end="659:57"><name pos:start="659:51" pos:end="659:54">args</name><index pos:start="659:55" pos:end="659:57">[<expr pos:start="659:56" pos:end="659:56"><literal type="number" pos:start="659:56" pos:end="659:56">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="661:9" pos:end="661:14">break;</break>



    <case pos:start="665:5" pos:end="665:27">case <expr pos:start="665:10" pos:end="665:26"><name pos:start="665:10" pos:end="665:26">INDEX_op_add2_i32</name></expr>:</case>

        <expr_stmt pos:start="667:9" pos:end="671:46"><expr pos:start="667:9" pos:end="671:45"><call pos:start="667:9" pos:end="671:45"><name pos:start="667:9" pos:end="667:23">tcg_out_addsub2</name><argument_list pos:start="667:24" pos:end="671:45">(<argument pos:start="667:25" pos:end="667:25"><expr pos:start="667:25" pos:end="667:25"><name pos:start="667:25" pos:end="667:25">s</name></expr></argument>, <argument pos:start="667:28" pos:end="667:39"><expr pos:start="667:28" pos:end="667:39"><name pos:start="667:28" pos:end="667:39">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="667:42" pos:end="667:43"><expr pos:start="667:42" pos:end="667:43"><name pos:start="667:42" pos:end="667:43">a0</name></expr></argument>, <argument pos:start="667:46" pos:end="667:47"><expr pos:start="667:46" pos:end="667:47"><name pos:start="667:46" pos:end="667:47">a1</name></expr></argument>, <argument pos:start="667:50" pos:end="667:56"><expr pos:start="667:50" pos:end="667:56"><call pos:start="667:50" pos:end="667:56"><name pos:start="667:50" pos:end="667:53">REG0</name><argument_list pos:start="667:54" pos:end="667:56">(<argument pos:start="667:55" pos:end="667:55"><expr pos:start="667:55" pos:end="667:55"><literal type="number" pos:start="667:55" pos:end="667:55">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="667:59" pos:end="667:65"><expr pos:start="667:59" pos:end="667:65"><call pos:start="667:59" pos:end="667:65"><name pos:start="667:59" pos:end="667:62">REG0</name><argument_list pos:start="667:63" pos:end="667:65">(<argument pos:start="667:64" pos:end="667:64"><expr pos:start="667:64" pos:end="667:64"><literal type="number" pos:start="667:64" pos:end="667:64">3</literal></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="669:25" pos:end="669:40"><expr pos:start="669:25" pos:end="669:40"><operator pos:start="669:25" pos:end="669:25">(</operator><name pos:start="669:26" pos:end="669:32">int32_t</name><operator pos:start="669:33" pos:end="669:33">)</operator><name pos:start="669:34" pos:end="669:40"><name pos:start="669:34" pos:end="669:37">args</name><index pos:start="669:38" pos:end="669:40">[<expr pos:start="669:39" pos:end="669:39"><literal type="number" pos:start="669:39" pos:end="669:39">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="669:43" pos:end="669:49"><expr pos:start="669:43" pos:end="669:49"><name pos:start="669:43" pos:end="669:49"><name pos:start="669:43" pos:end="669:46">args</name><index pos:start="669:47" pos:end="669:49">[<expr pos:start="669:48" pos:end="669:48"><literal type="number" pos:start="669:48" pos:end="669:48">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="669:52" pos:end="669:64"><expr pos:start="669:52" pos:end="669:64"><name pos:start="669:52" pos:end="669:64"><name pos:start="669:52" pos:end="669:61">const_args</name><index pos:start="669:62" pos:end="669:64">[<expr pos:start="669:63" pos:end="669:63"><literal type="number" pos:start="669:63" pos:end="669:63">4</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="671:25" pos:end="671:37"><expr pos:start="671:25" pos:end="671:37"><name pos:start="671:25" pos:end="671:37"><name pos:start="671:25" pos:end="671:34">const_args</name><index pos:start="671:35" pos:end="671:37">[<expr pos:start="671:36" pos:end="671:36"><literal type="number" pos:start="671:36" pos:end="671:36">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="671:40" pos:end="671:44"><expr pos:start="671:40" pos:end="671:44"><name pos:start="671:40" pos:end="671:44">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="673:9" pos:end="673:14">break;</break>

    <case pos:start="675:5" pos:end="675:27">case <expr pos:start="675:10" pos:end="675:26"><name pos:start="675:10" pos:end="675:26">INDEX_op_add2_i64</name></expr>:</case>

        <expr_stmt pos:start="677:9" pos:end="679:70"><expr pos:start="677:9" pos:end="679:69"><call pos:start="677:9" pos:end="679:69"><name pos:start="677:9" pos:end="677:23">tcg_out_addsub2</name><argument_list pos:start="677:24" pos:end="679:69">(<argument pos:start="677:25" pos:end="677:25"><expr pos:start="677:25" pos:end="677:25"><name pos:start="677:25" pos:end="677:25">s</name></expr></argument>, <argument pos:start="677:28" pos:end="677:39"><expr pos:start="677:28" pos:end="677:39"><name pos:start="677:28" pos:end="677:39">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="677:42" pos:end="677:43"><expr pos:start="677:42" pos:end="677:43"><name pos:start="677:42" pos:end="677:43">a0</name></expr></argument>, <argument pos:start="677:46" pos:end="677:47"><expr pos:start="677:46" pos:end="677:47"><name pos:start="677:46" pos:end="677:47">a1</name></expr></argument>, <argument pos:start="677:50" pos:end="677:56"><expr pos:start="677:50" pos:end="677:56"><call pos:start="677:50" pos:end="677:56"><name pos:start="677:50" pos:end="677:53">REG0</name><argument_list pos:start="677:54" pos:end="677:56">(<argument pos:start="677:55" pos:end="677:55"><expr pos:start="677:55" pos:end="677:55"><literal type="number" pos:start="677:55" pos:end="677:55">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="677:59" pos:end="677:65"><expr pos:start="677:59" pos:end="677:65"><call pos:start="677:59" pos:end="677:65"><name pos:start="677:59" pos:end="677:62">REG0</name><argument_list pos:start="677:63" pos:end="677:65">(<argument pos:start="677:64" pos:end="677:64"><expr pos:start="677:64" pos:end="677:64"><literal type="number" pos:start="677:64" pos:end="677:64">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="677:68" pos:end="677:74"><expr pos:start="677:68" pos:end="677:74"><name pos:start="677:68" pos:end="677:74"><name pos:start="677:68" pos:end="677:71">args</name><index pos:start="677:72" pos:end="677:74">[<expr pos:start="677:73" pos:end="677:73"><literal type="number" pos:start="677:73" pos:end="677:73">4</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="679:25" pos:end="679:31"><expr pos:start="679:25" pos:end="679:31"><name pos:start="679:25" pos:end="679:31"><name pos:start="679:25" pos:end="679:28">args</name><index pos:start="679:29" pos:end="679:31">[<expr pos:start="679:30" pos:end="679:30"><literal type="number" pos:start="679:30" pos:end="679:30">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="679:34" pos:end="679:46"><expr pos:start="679:34" pos:end="679:46"><name pos:start="679:34" pos:end="679:46"><name pos:start="679:34" pos:end="679:43">const_args</name><index pos:start="679:44" pos:end="679:46">[<expr pos:start="679:45" pos:end="679:45"><literal type="number" pos:start="679:45" pos:end="679:45">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="679:49" pos:end="679:61"><expr pos:start="679:49" pos:end="679:61"><name pos:start="679:49" pos:end="679:61"><name pos:start="679:49" pos:end="679:58">const_args</name><index pos:start="679:59" pos:end="679:61">[<expr pos:start="679:60" pos:end="679:60"><literal type="number" pos:start="679:60" pos:end="679:60">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="679:64" pos:end="679:68"><expr pos:start="679:64" pos:end="679:68"><name pos:start="679:64" pos:end="679:68">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="681:9" pos:end="681:14">break;</break>

    <case pos:start="683:5" pos:end="683:27">case <expr pos:start="683:10" pos:end="683:26"><name pos:start="683:10" pos:end="683:26">INDEX_op_sub2_i32</name></expr>:</case>

        <expr_stmt pos:start="685:9" pos:end="689:45"><expr pos:start="685:9" pos:end="689:44"><call pos:start="685:9" pos:end="689:44"><name pos:start="685:9" pos:end="685:23">tcg_out_addsub2</name><argument_list pos:start="685:24" pos:end="689:44">(<argument pos:start="685:25" pos:end="685:25"><expr pos:start="685:25" pos:end="685:25"><name pos:start="685:25" pos:end="685:25">s</name></expr></argument>, <argument pos:start="685:28" pos:end="685:39"><expr pos:start="685:28" pos:end="685:39"><name pos:start="685:28" pos:end="685:39">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="685:42" pos:end="685:43"><expr pos:start="685:42" pos:end="685:43"><name pos:start="685:42" pos:end="685:43">a0</name></expr></argument>, <argument pos:start="685:46" pos:end="685:47"><expr pos:start="685:46" pos:end="685:47"><name pos:start="685:46" pos:end="685:47">a1</name></expr></argument>, <argument pos:start="685:50" pos:end="685:56"><expr pos:start="685:50" pos:end="685:56"><call pos:start="685:50" pos:end="685:56"><name pos:start="685:50" pos:end="685:53">REG0</name><argument_list pos:start="685:54" pos:end="685:56">(<argument pos:start="685:55" pos:end="685:55"><expr pos:start="685:55" pos:end="685:55"><literal type="number" pos:start="685:55" pos:end="685:55">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="685:59" pos:end="685:65"><expr pos:start="685:59" pos:end="685:65"><call pos:start="685:59" pos:end="685:65"><name pos:start="685:59" pos:end="685:62">REG0</name><argument_list pos:start="685:63" pos:end="685:65">(<argument pos:start="685:64" pos:end="685:64"><expr pos:start="685:64" pos:end="685:64"><literal type="number" pos:start="685:64" pos:end="685:64">3</literal></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="687:25" pos:end="687:40"><expr pos:start="687:25" pos:end="687:40"><operator pos:start="687:25" pos:end="687:25">(</operator><name pos:start="687:26" pos:end="687:32">int32_t</name><operator pos:start="687:33" pos:end="687:33">)</operator><name pos:start="687:34" pos:end="687:40"><name pos:start="687:34" pos:end="687:37">args</name><index pos:start="687:38" pos:end="687:40">[<expr pos:start="687:39" pos:end="687:39"><literal type="number" pos:start="687:39" pos:end="687:39">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="687:43" pos:end="687:49"><expr pos:start="687:43" pos:end="687:49"><name pos:start="687:43" pos:end="687:49"><name pos:start="687:43" pos:end="687:46">args</name><index pos:start="687:47" pos:end="687:49">[<expr pos:start="687:48" pos:end="687:48"><literal type="number" pos:start="687:48" pos:end="687:48">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="687:52" pos:end="687:64"><expr pos:start="687:52" pos:end="687:64"><name pos:start="687:52" pos:end="687:64"><name pos:start="687:52" pos:end="687:61">const_args</name><index pos:start="687:62" pos:end="687:64">[<expr pos:start="687:63" pos:end="687:63"><literal type="number" pos:start="687:63" pos:end="687:63">4</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="689:25" pos:end="689:37"><expr pos:start="689:25" pos:end="689:37"><name pos:start="689:25" pos:end="689:37"><name pos:start="689:25" pos:end="689:34">const_args</name><index pos:start="689:35" pos:end="689:37">[<expr pos:start="689:36" pos:end="689:36"><literal type="number" pos:start="689:36" pos:end="689:36">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="689:40" pos:end="689:43"><expr pos:start="689:40" pos:end="689:43"><name pos:start="689:40" pos:end="689:43">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="691:9" pos:end="691:14">break;</break>

    <case pos:start="693:5" pos:end="693:27">case <expr pos:start="693:10" pos:end="693:26"><name pos:start="693:10" pos:end="693:26">INDEX_op_sub2_i64</name></expr>:</case>

        <expr_stmt pos:start="695:9" pos:end="697:69"><expr pos:start="695:9" pos:end="697:68"><call pos:start="695:9" pos:end="697:68"><name pos:start="695:9" pos:end="695:23">tcg_out_addsub2</name><argument_list pos:start="695:24" pos:end="697:68">(<argument pos:start="695:25" pos:end="695:25"><expr pos:start="695:25" pos:end="695:25"><name pos:start="695:25" pos:end="695:25">s</name></expr></argument>, <argument pos:start="695:28" pos:end="695:39"><expr pos:start="695:28" pos:end="695:39"><name pos:start="695:28" pos:end="695:39">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="695:42" pos:end="695:43"><expr pos:start="695:42" pos:end="695:43"><name pos:start="695:42" pos:end="695:43">a0</name></expr></argument>, <argument pos:start="695:46" pos:end="695:47"><expr pos:start="695:46" pos:end="695:47"><name pos:start="695:46" pos:end="695:47">a1</name></expr></argument>, <argument pos:start="695:50" pos:end="695:56"><expr pos:start="695:50" pos:end="695:56"><call pos:start="695:50" pos:end="695:56"><name pos:start="695:50" pos:end="695:53">REG0</name><argument_list pos:start="695:54" pos:end="695:56">(<argument pos:start="695:55" pos:end="695:55"><expr pos:start="695:55" pos:end="695:55"><literal type="number" pos:start="695:55" pos:end="695:55">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="695:59" pos:end="695:65"><expr pos:start="695:59" pos:end="695:65"><call pos:start="695:59" pos:end="695:65"><name pos:start="695:59" pos:end="695:62">REG0</name><argument_list pos:start="695:63" pos:end="695:65">(<argument pos:start="695:64" pos:end="695:64"><expr pos:start="695:64" pos:end="695:64"><literal type="number" pos:start="695:64" pos:end="695:64">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="695:68" pos:end="695:74"><expr pos:start="695:68" pos:end="695:74"><name pos:start="695:68" pos:end="695:74"><name pos:start="695:68" pos:end="695:71">args</name><index pos:start="695:72" pos:end="695:74">[<expr pos:start="695:73" pos:end="695:73"><literal type="number" pos:start="695:73" pos:end="695:73">4</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="697:25" pos:end="697:31"><expr pos:start="697:25" pos:end="697:31"><name pos:start="697:25" pos:end="697:31"><name pos:start="697:25" pos:end="697:28">args</name><index pos:start="697:29" pos:end="697:31">[<expr pos:start="697:30" pos:end="697:30"><literal type="number" pos:start="697:30" pos:end="697:30">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="697:34" pos:end="697:46"><expr pos:start="697:34" pos:end="697:46"><name pos:start="697:34" pos:end="697:46"><name pos:start="697:34" pos:end="697:43">const_args</name><index pos:start="697:44" pos:end="697:46">[<expr pos:start="697:45" pos:end="697:45"><literal type="number" pos:start="697:45" pos:end="697:45">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="697:49" pos:end="697:61"><expr pos:start="697:49" pos:end="697:61"><name pos:start="697:49" pos:end="697:61"><name pos:start="697:49" pos:end="697:58">const_args</name><index pos:start="697:59" pos:end="697:61">[<expr pos:start="697:60" pos:end="697:60"><literal type="number" pos:start="697:60" pos:end="697:60">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="697:64" pos:end="697:67"><expr pos:start="697:64" pos:end="697:67"><name pos:start="697:64" pos:end="697:67">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="699:9" pos:end="699:14">break;</break>



    <case pos:start="703:5" pos:end="703:28">case <expr pos:start="703:10" pos:end="703:27"><name pos:start="703:10" pos:end="703:27">INDEX_op_muluh_i64</name></expr>:</case>

        <expr_stmt pos:start="705:9" pos:end="705:63"><expr pos:start="705:9" pos:end="705:62"><call pos:start="705:9" pos:end="705:62"><name pos:start="705:9" pos:end="705:20">tcg_out_insn</name><argument_list pos:start="705:21" pos:end="705:62">(<argument pos:start="705:22" pos:end="705:22"><expr pos:start="705:22" pos:end="705:22"><name pos:start="705:22" pos:end="705:22">s</name></expr></argument>, <argument pos:start="705:25" pos:end="705:28"><expr pos:start="705:25" pos:end="705:28"><literal type="number" pos:start="705:25" pos:end="705:28">3508</literal></expr></argument>, <argument pos:start="705:31" pos:end="705:35"><expr pos:start="705:31" pos:end="705:35"><name pos:start="705:31" pos:end="705:35">UMULH</name></expr></argument>, <argument pos:start="705:38" pos:end="705:49"><expr pos:start="705:38" pos:end="705:49"><name pos:start="705:38" pos:end="705:49">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="705:52" pos:end="705:53"><expr pos:start="705:52" pos:end="705:53"><name pos:start="705:52" pos:end="705:53">a0</name></expr></argument>, <argument pos:start="705:56" pos:end="705:57"><expr pos:start="705:56" pos:end="705:57"><name pos:start="705:56" pos:end="705:57">a1</name></expr></argument>, <argument pos:start="705:60" pos:end="705:61"><expr pos:start="705:60" pos:end="705:61"><name pos:start="705:60" pos:end="705:61">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="707:9" pos:end="707:14">break;</break>

    <case pos:start="709:5" pos:end="709:28">case <expr pos:start="709:10" pos:end="709:27"><name pos:start="709:10" pos:end="709:27">INDEX_op_mulsh_i64</name></expr>:</case>

        <expr_stmt pos:start="711:9" pos:end="711:63"><expr pos:start="711:9" pos:end="711:62"><call pos:start="711:9" pos:end="711:62"><name pos:start="711:9" pos:end="711:20">tcg_out_insn</name><argument_list pos:start="711:21" pos:end="711:62">(<argument pos:start="711:22" pos:end="711:22"><expr pos:start="711:22" pos:end="711:22"><name pos:start="711:22" pos:end="711:22">s</name></expr></argument>, <argument pos:start="711:25" pos:end="711:28"><expr pos:start="711:25" pos:end="711:28"><literal type="number" pos:start="711:25" pos:end="711:28">3508</literal></expr></argument>, <argument pos:start="711:31" pos:end="711:35"><expr pos:start="711:31" pos:end="711:35"><name pos:start="711:31" pos:end="711:35">SMULH</name></expr></argument>, <argument pos:start="711:38" pos:end="711:49"><expr pos:start="711:38" pos:end="711:49"><name pos:start="711:38" pos:end="711:49">TCG_TYPE_I64</name></expr></argument>, <argument pos:start="711:52" pos:end="711:53"><expr pos:start="711:52" pos:end="711:53"><name pos:start="711:52" pos:end="711:53">a0</name></expr></argument>, <argument pos:start="711:56" pos:end="711:57"><expr pos:start="711:56" pos:end="711:57"><name pos:start="711:56" pos:end="711:57">a1</name></expr></argument>, <argument pos:start="711:60" pos:end="711:61"><expr pos:start="711:60" pos:end="711:61"><name pos:start="711:60" pos:end="711:61">a2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="713:9" pos:end="713:14">break;</break>



    <case pos:start="717:5" pos:end="717:26">case <expr pos:start="717:10" pos:end="717:25"><name pos:start="717:10" pos:end="717:25">INDEX_op_mov_i32</name></expr>:</case>  <comment type="block" pos:start="717:29" pos:end="717:66">/* Always emitted via tcg_out_mov.  */</comment>

    <case pos:start="719:5" pos:end="719:26">case <expr pos:start="719:10" pos:end="719:25"><name pos:start="719:10" pos:end="719:25">INDEX_op_mov_i64</name></expr>:</case>

    <case pos:start="721:5" pos:end="721:27">case <expr pos:start="721:10" pos:end="721:26"><name pos:start="721:10" pos:end="721:26">INDEX_op_movi_i32</name></expr>:</case> <comment type="block" pos:start="721:29" pos:end="721:67">/* Always emitted via tcg_out_movi.  */</comment>

    <case pos:start="723:5" pos:end="723:27">case <expr pos:start="723:10" pos:end="723:26"><name pos:start="723:10" pos:end="723:26">INDEX_op_movi_i64</name></expr>:</case>

    <case pos:start="725:5" pos:end="725:23">case <expr pos:start="725:10" pos:end="725:22"><name pos:start="725:10" pos:end="725:22">INDEX_op_call</name></expr>:</case>     <comment type="block" pos:start="725:29" pos:end="725:67">/* Always emitted via tcg_out_call.  */</comment>

    <default pos:start="727:5" pos:end="727:12">default:</default>

        <expr_stmt pos:start="729:9" pos:end="729:20"><expr pos:start="729:9" pos:end="729:19"><call pos:start="729:9" pos:end="729:19"><name pos:start="729:9" pos:end="729:17">tcg_abort</name><argument_list pos:start="729:18" pos:end="729:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



<cpp:undef pos:start="735:1" pos:end="735:11">#<cpp:directive pos:start="735:2" pos:end="735:6">undef</cpp:directive> <name pos:start="735:8" pos:end="735:11">REG0</name></cpp:undef>

</block_content>}</block></function>
</unit>
