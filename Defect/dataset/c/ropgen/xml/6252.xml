<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6252.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">monitor_parse</name><parameter_list pos:start="1:26" pos:end="1:76">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">optarg</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">mode</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:75"><decl pos:start="1:65" pos:end="1:75"><type pos:start="1:65" pos:end="1:75"><name pos:start="1:65" pos:end="1:68">bool</name></type> <name pos:start="1:70" pos:end="1:75">pretty</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:27">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:35">monitor_device_index</name> <init pos:start="5:37" pos:end="5:39">= <expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:14">label</name><index pos:start="13:15" pos:end="13:18">[<expr pos:start="13:16" pos:end="13:17"><literal type="number" pos:start="13:16" pos:end="13:17">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">def</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="45:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:41">(<expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:16">strstart</name><argument_list pos:start="19:17" pos:end="19:40">(<argument pos:start="19:18" pos:end="19:23"><expr pos:start="19:18" pos:end="19:23"><name pos:start="19:18" pos:end="19:23">optarg</name></expr></argument>, <argument pos:start="19:26" pos:end="19:35"><expr pos:start="19:26" pos:end="19:35"><literal type="string" pos:start="19:26" pos:end="19:35">"chardev:"</literal></expr></argument>, <argument pos:start="19:38" pos:end="19:39"><expr pos:start="19:38" pos:end="19:39"><operator pos:start="19:38" pos:end="19:38">&amp;</operator><name pos:start="19:39" pos:end="19:39">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:43" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:48">

        <expr_stmt pos:start="21:9" pos:end="21:48"><expr pos:start="21:9" pos:end="21:47"><call pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:16">snprintf</name><argument_list pos:start="21:17" pos:end="21:47">(<argument pos:start="21:18" pos:end="21:22"><expr pos:start="21:18" pos:end="21:22"><name pos:start="21:18" pos:end="21:22">label</name></expr></argument>, <argument pos:start="21:25" pos:end="21:37"><expr pos:start="21:25" pos:end="21:37"><sizeof pos:start="21:25" pos:end="21:37">sizeof<argument_list pos:start="21:31" pos:end="21:37">(<argument pos:start="21:32" pos:end="21:36"><expr pos:start="21:32" pos:end="21:36"><name pos:start="21:32" pos:end="21:36">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:40" pos:end="21:43"><expr pos:start="21:40" pos:end="21:43"><literal type="string" pos:start="21:40" pos:end="21:43">"%s"</literal></expr></argument>, <argument pos:start="21:46" pos:end="21:46"><expr pos:start="21:46" pos:end="21:46"><name pos:start="21:46" pos:end="21:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="45:5">else <block pos:start="23:12" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:9">

        <expr_stmt pos:start="25:9" pos:end="27:39"><expr pos:start="25:9" pos:end="27:38"><call pos:start="25:9" pos:end="27:38"><name pos:start="25:9" pos:end="25:16">snprintf</name><argument_list pos:start="25:17" pos:end="27:38">(<argument pos:start="25:18" pos:end="25:22"><expr pos:start="25:18" pos:end="25:22"><name pos:start="25:18" pos:end="25:22">label</name></expr></argument>, <argument pos:start="25:25" pos:end="25:37"><expr pos:start="25:25" pos:end="25:37"><sizeof pos:start="25:25" pos:end="25:37">sizeof<argument_list pos:start="25:31" pos:end="25:37">(<argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:40" pos:end="25:57"><expr pos:start="25:40" pos:end="25:57"><literal type="string" pos:start="25:40" pos:end="25:57">"compat_monitor%d"</literal></expr></argument>,

                 <argument pos:start="27:18" pos:end="27:37"><expr pos:start="27:18" pos:end="27:37"><name pos:start="27:18" pos:end="27:37">monitor_device_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:38">(<expr pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:32">monitor_device_index</name> <operator pos:start="29:34" pos:end="29:35">==</operator> <literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>)</condition> <block pos:start="29:40" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:20">

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">def</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <literal type="number" pos:start="31:19" pos:end="31:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:12">opts</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:51"><name pos:start="35:16" pos:end="35:36">qemu_chr_parse_compat</name><argument_list pos:start="35:37" pos:end="35:51">(<argument pos:start="35:38" pos:end="35:42"><expr pos:start="35:38" pos:end="35:42"><name pos:start="35:38" pos:end="35:42">label</name></expr></argument>, <argument pos:start="35:45" pos:end="35:50"><expr pos:start="35:45" pos:end="35:50"><name pos:start="35:45" pos:end="35:50">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:18">(<expr pos:start="37:13" pos:end="37:17"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:17">opts</name></expr>)</condition> <block pos:start="37:20" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:20">

            <expr_stmt pos:start="39:13" pos:end="39:57"><expr pos:start="39:13" pos:end="39:56"><call pos:start="39:13" pos:end="39:56"><name pos:start="39:13" pos:end="39:19">fprintf</name><argument_list pos:start="39:20" pos:end="39:56">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">stderr</name></expr></argument>, <argument pos:start="39:29" pos:end="39:47"><expr pos:start="39:29" pos:end="39:47"><literal type="string" pos:start="39:29" pos:end="39:47">"parse error: %s\n"</literal></expr></argument>, <argument pos:start="39:50" pos:end="39:55"><expr pos:start="39:50" pos:end="39:55"><name pos:start="39:50" pos:end="39:55">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:20"><expr pos:start="41:13" pos:end="41:19"><call pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:16">exit</name><argument_list pos:start="41:17" pos:end="41:19">(<argument pos:start="41:18" pos:end="41:18"><expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:73"><expr pos:start="49:5" pos:end="49:72"><name pos:start="49:5" pos:end="49:8">opts</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:72"><name pos:start="49:12" pos:end="49:27">qemu_opts_create</name><argument_list pos:start="49:28" pos:end="49:72">(<argument pos:start="49:29" pos:end="49:49"><expr pos:start="49:29" pos:end="49:49"><call pos:start="49:29" pos:end="49:49"><name pos:start="49:29" pos:end="49:42">qemu_find_opts</name><argument_list pos:start="49:43" pos:end="49:49">(<argument pos:start="49:44" pos:end="49:48"><expr pos:start="49:44" pos:end="49:48"><literal type="string" pos:start="49:44" pos:end="49:48">"mon"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:52" pos:end="49:56"><expr pos:start="49:52" pos:end="49:56"><name pos:start="49:52" pos:end="49:56">label</name></expr></argument>, <argument pos:start="49:59" pos:end="49:59"><expr pos:start="49:59" pos:end="49:59"><literal type="number" pos:start="49:59" pos:end="49:59">1</literal></expr></argument>, <argument pos:start="49:62" pos:end="49:71"><expr pos:start="49:62" pos:end="49:71"><operator pos:start="49:62" pos:end="49:62">&amp;</operator><name pos:start="49:63" pos:end="49:71">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:14">(<expr pos:start="51:9" pos:end="51:13"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:13">opts</name></expr>)</condition> <block pos:start="51:16" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:16">

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><call pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:24">error_report_err</name><argument_list pos:start="53:25" pos:end="53:35">(<argument pos:start="53:26" pos:end="53:34"><expr pos:start="53:26" pos:end="53:34"><name pos:start="53:26" pos:end="53:34">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><call pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:12">exit</name><argument_list pos:start="55:13" pos:end="55:15">(<argument pos:start="55:14" pos:end="55:14"><expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:51"><expr pos:start="59:5" pos:end="59:50"><call pos:start="59:5" pos:end="59:50"><name pos:start="59:5" pos:end="59:16">qemu_opt_set</name><argument_list pos:start="59:17" pos:end="59:50">(<argument pos:start="59:18" pos:end="59:21"><expr pos:start="59:18" pos:end="59:21"><name pos:start="59:18" pos:end="59:21">opts</name></expr></argument>, <argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><literal type="string" pos:start="59:24" pos:end="59:29">"mode"</literal></expr></argument>, <argument pos:start="59:32" pos:end="59:35"><expr pos:start="59:32" pos:end="59:35"><name pos:start="59:32" pos:end="59:35">mode</name></expr></argument>, <argument pos:start="59:38" pos:end="59:49"><expr pos:start="59:38" pos:end="59:49"><operator pos:start="59:38" pos:end="59:38">&amp;</operator><name pos:start="59:39" pos:end="59:49">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:55"><expr pos:start="61:5" pos:end="61:54"><call pos:start="61:5" pos:end="61:54"><name pos:start="61:5" pos:end="61:16">qemu_opt_set</name><argument_list pos:start="61:17" pos:end="61:54">(<argument pos:start="61:18" pos:end="61:21"><expr pos:start="61:18" pos:end="61:21"><name pos:start="61:18" pos:end="61:21">opts</name></expr></argument>, <argument pos:start="61:24" pos:end="61:32"><expr pos:start="61:24" pos:end="61:32"><literal type="string" pos:start="61:24" pos:end="61:32">"chardev"</literal></expr></argument>, <argument pos:start="61:35" pos:end="61:39"><expr pos:start="61:35" pos:end="61:39"><name pos:start="61:35" pos:end="61:39">label</name></expr></argument>, <argument pos:start="61:42" pos:end="61:53"><expr pos:start="61:42" pos:end="61:53"><operator pos:start="61:42" pos:end="61:42">&amp;</operator><name pos:start="61:43" pos:end="61:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:60"><expr pos:start="63:5" pos:end="63:59"><call pos:start="63:5" pos:end="63:59"><name pos:start="63:5" pos:end="63:21">qemu_opt_set_bool</name><argument_list pos:start="63:22" pos:end="63:59">(<argument pos:start="63:23" pos:end="63:26"><expr pos:start="63:23" pos:end="63:26"><name pos:start="63:23" pos:end="63:26">opts</name></expr></argument>, <argument pos:start="63:29" pos:end="63:36"><expr pos:start="63:29" pos:end="63:36"><literal type="string" pos:start="63:29" pos:end="63:36">"pretty"</literal></expr></argument>, <argument pos:start="63:39" pos:end="63:44"><expr pos:start="63:39" pos:end="63:44"><name pos:start="63:39" pos:end="63:44">pretty</name></expr></argument>, <argument pos:start="63:47" pos:end="63:58"><expr pos:start="63:47" pos:end="63:58"><operator pos:start="63:47" pos:end="63:47">&amp;</operator><name pos:start="63:48" pos:end="63:58">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:58"><if pos:start="65:5" pos:end="67:58">if <condition pos:start="65:8" pos:end="65:12">(<expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">def</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:58"><block_content pos:start="67:9" pos:end="67:58">

        <expr_stmt pos:start="67:9" pos:end="67:58"><expr pos:start="67:9" pos:end="67:57"><call pos:start="67:9" pos:end="67:57"><name pos:start="67:9" pos:end="67:20">qemu_opt_set</name><argument_list pos:start="67:21" pos:end="67:57">(<argument pos:start="67:22" pos:end="67:25"><expr pos:start="67:22" pos:end="67:25"><name pos:start="67:22" pos:end="67:25">opts</name></expr></argument>, <argument pos:start="67:28" pos:end="67:36"><expr pos:start="67:28" pos:end="67:36"><literal type="string" pos:start="67:28" pos:end="67:36">"default"</literal></expr></argument>, <argument pos:start="67:39" pos:end="67:42"><expr pos:start="67:39" pos:end="67:42"><literal type="string" pos:start="67:39" pos:end="67:42">"on"</literal></expr></argument>, <argument pos:start="67:45" pos:end="67:56"><expr pos:start="67:45" pos:end="67:56"><operator pos:start="67:45" pos:end="67:45">&amp;</operator><name pos:start="67:46" pos:end="67:56">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:24">monitor_device_index</name><operator pos:start="69:25" pos:end="69:26">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
