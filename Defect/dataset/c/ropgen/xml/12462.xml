<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12462.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">decode</name><parameter_list pos:start="1:18" pos:end="1:83">(<parameter pos:start="1:19" pos:end="1:39"><decl pos:start="1:19" pos:end="1:39"><type pos:start="1:19" pos:end="1:39"><name pos:start="1:19" pos:end="1:32">AVCodecContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:39">avctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:45">void</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">data</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:56">int</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">got_sub</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:82"><decl pos:start="1:68" pos:end="1:82"><type pos:start="1:68" pos:end="1:82"><name pos:start="1:68" pos:end="1:75">AVPacket</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:82">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:15">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">CCaptionSubContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">ctx</name> <init pos:start="5:29" pos:end="5:46">= <expr pos:start="5:31" pos:end="5:46"><name pos:start="5:31" pos:end="5:46"><name pos:start="5:31" pos:end="5:35">avctx</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AVSubtitle</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">sub</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:17"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">int64_t</name></type> <name pos:start="9:19" pos:end="9:28">start_time</name> <init pos:start="9:30" pos:end="9:39">= <expr pos:start="9:32" pos:end="9:39"><name pos:start="9:32" pos:end="9:39"><name pos:start="9:32" pos:end="9:34">sub</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:39">pts</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">bptr</name> <init pos:start="11:19" pos:end="11:24">= <expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">len</name> <init pos:start="13:13" pos:end="13:25">= <expr pos:start="13:15" pos:end="13:25"><name pos:start="13:15" pos:end="13:25"><name pos:start="13:15" pos:end="13:19">avpkt</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:25">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:19">pktbuf</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:25">size</name></name> <operator pos:start="21:27" pos:end="21:27">&lt;</operator> <name pos:start="21:29" pos:end="21:31">len</name></expr>)</condition> <block pos:start="21:34" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:9">

        <expr_stmt pos:start="23:9" pos:end="23:51"><expr pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:50"><name pos:start="23:15" pos:end="23:31">av_buffer_realloc</name><argument_list pos:start="23:32" pos:end="23:50">(<argument pos:start="23:33" pos:end="23:44"><expr pos:start="23:33" pos:end="23:44"><operator pos:start="23:33" pos:end="23:33">&amp;</operator><name pos:start="23:34" pos:end="23:44"><name pos:start="23:34" pos:end="23:36">ctx</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:44">pktbuf</name></name></expr></argument>, <argument pos:start="23:47" pos:end="23:49"><expr pos:start="23:47" pos:end="23:49"><name pos:start="23:47" pos:end="23:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <if_stmt pos:start="25:10" pos:end="33:9"><if pos:start="25:10" pos:end="33:9">if <condition pos:start="25:13" pos:end="25:21">(<expr pos:start="25:14" pos:end="25:20"><name pos:start="25:14" pos:end="25:16">ret</name> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>)</condition> <block pos:start="25:23" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:20">

            <expr_stmt pos:start="27:13" pos:end="27:111"><expr pos:start="27:13" pos:end="27:110"><call pos:start="27:13" pos:end="27:110"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:110">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">ctx</name></expr></argument>, <argument pos:start="27:25" pos:end="27:38"><expr pos:start="27:25" pos:end="27:38"><name pos:start="27:25" pos:end="27:38">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="27:41" pos:end="27:85"><expr pos:start="27:41" pos:end="27:85"><literal type="string" pos:start="27:41" pos:end="27:85">"Insufficient Memory of %d truncated to %d\n"</literal></expr></argument>, <argument pos:start="27:88" pos:end="27:90"><expr pos:start="27:88" pos:end="27:90"><name pos:start="27:88" pos:end="27:90">len</name></expr></argument>, <argument pos:start="27:93" pos:end="27:109"><expr pos:start="27:93" pos:end="27:109"><name pos:start="27:93" pos:end="27:109"><name pos:start="27:93" pos:end="27:95">ctx</name><operator pos:start="27:96" pos:end="27:97">-&gt;</operator><name pos:start="27:98" pos:end="27:103">pktbuf</name><operator pos:start="27:104" pos:end="27:105">-&gt;</operator><name pos:start="27:106" pos:end="27:109">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:36"><expr pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:15">len</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:35"><name pos:start="29:19" pos:end="29:21">ctx</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:29">pktbuf</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:35">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:48"><expr pos:start="37:5" pos:end="37:47"><call pos:start="37:5" pos:end="37:47"><name pos:start="37:5" pos:end="37:10">memcpy</name><argument_list pos:start="37:11" pos:end="37:47">(<argument pos:start="37:12" pos:end="37:28"><expr pos:start="37:12" pos:end="37:28"><name pos:start="37:12" pos:end="37:28"><name pos:start="37:12" pos:end="37:14">ctx</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:22">pktbuf</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:28">data</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:35">avpkt</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">data</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:46"><expr pos:start="37:44" pos:end="37:46"><name pos:start="37:44" pos:end="37:46">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:8">bptr</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <name pos:start="39:12" pos:end="39:28"><name pos:start="39:12" pos:end="39:14">ctx</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:22">pktbuf</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:28">data</name></name></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="103:5">for <control pos:start="43:9" pos:end="43:33">(<init pos:start="43:10" pos:end="43:16"><expr pos:start="43:10" pos:end="43:15"><name pos:start="43:10" pos:end="43:10">i</name>  <operator pos:start="43:13" pos:end="43:13">=</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>;</init> <condition pos:start="43:18" pos:end="43:25"><expr pos:start="43:18" pos:end="43:24"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">&lt;</operator> <name pos:start="43:22" pos:end="43:24">len</name></expr>;</condition> <incr pos:start="43:27" pos:end="43:32"><expr pos:start="43:27" pos:end="43:32"><name pos:start="43:27" pos:end="43:27">i</name> <operator pos:start="43:29" pos:end="43:30">+=</operator> <literal type="number" pos:start="43:32" pos:end="43:32">3</literal></expr></incr>)</control> <block pos:start="43:35" pos:end="103:5">{<block_content pos:start="45:9" pos:end="101:9">

        <decl_stmt pos:start="45:9" pos:end="45:42"><decl pos:start="45:9" pos:end="45:41"><type pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:15">uint8_t</name></type> <name pos:start="45:17" pos:end="45:23">cc_type</name> <init pos:start="45:25" pos:end="45:41">= <expr pos:start="45:27" pos:end="45:41"><operator pos:start="45:27" pos:end="45:27">*</operator><operator pos:start="45:28" pos:end="45:28">(</operator><name pos:start="45:29" pos:end="45:32">bptr</name> <operator pos:start="45:34" pos:end="45:34">+</operator> <name pos:start="45:36" pos:end="45:36">i</name><operator pos:start="45:37" pos:end="45:37">)</operator> <operator pos:start="45:39" pos:end="45:39">&amp;</operator> <literal type="number" pos:start="45:41" pos:end="45:41">3</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="47:9" pos:end="49:21"><if pos:start="47:9" pos:end="49:21">if <condition pos:start="47:12" pos:end="47:44">(<expr pos:start="47:13" pos:end="47:43"><call pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:33">validate_cc_data_pair</name><argument_list pos:start="47:34" pos:end="47:43">(<argument pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:38">bptr</name> <operator pos:start="47:40" pos:end="47:40">+</operator> <name pos:start="47:42" pos:end="47:42">i</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:21"><block_content pos:start="49:13" pos:end="49:21">

            <continue pos:start="49:13" pos:end="49:21">continue;</continue></block_content></block></if></if_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:35">/* ignoring data field 1 */</comment>

        <if_stmt pos:start="53:9" pos:end="59:91"><if pos:start="53:9" pos:end="55:21">if<condition pos:start="53:11" pos:end="53:24">(<expr pos:start="53:12" pos:end="53:23"><name pos:start="53:12" pos:end="53:18">cc_type</name> <operator pos:start="53:20" pos:end="53:21">==</operator> <literal type="number" pos:start="53:23" pos:end="53:23">1</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:21"><block_content pos:start="55:13" pos:end="55:21">

            <continue pos:start="55:13" pos:end="55:21">continue;</continue></block_content></block></if>

        <else pos:start="57:9" pos:end="59:91">else<block type="pseudo" pos:start="59:13" pos:end="59:91"><block_content pos:start="59:13" pos:end="59:91">

            <expr_stmt pos:start="59:13" pos:end="59:91"><expr pos:start="59:13" pos:end="59:90"><call pos:start="59:13" pos:end="59:90"><name pos:start="59:13" pos:end="59:25">process_cc608</name><argument_list pos:start="59:26" pos:end="59:90">(<argument pos:start="59:27" pos:end="59:29"><expr pos:start="59:27" pos:end="59:29"><name pos:start="59:27" pos:end="59:29">ctx</name></expr></argument>, <argument pos:start="59:32" pos:end="59:41"><expr pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:41">start_time</name></expr></argument>, <argument pos:start="59:44" pos:end="59:65"><expr pos:start="59:44" pos:end="59:65"><operator pos:start="59:44" pos:end="59:44">*</operator><operator pos:start="59:45" pos:end="59:45">(</operator><name pos:start="59:46" pos:end="59:49">bptr</name> <operator pos:start="59:51" pos:end="59:51">+</operator> <name pos:start="59:53" pos:end="59:53">i</name> <operator pos:start="59:55" pos:end="59:55">+</operator> <literal type="number" pos:start="59:57" pos:end="59:57">1</literal><operator pos:start="59:58" pos:end="59:58">)</operator> <operator pos:start="59:60" pos:end="59:60">&amp;</operator> <literal type="number" pos:start="59:62" pos:end="59:65">0x7f</literal></expr></argument>, <argument pos:start="59:68" pos:end="59:89"><expr pos:start="59:68" pos:end="59:89"><operator pos:start="59:68" pos:end="59:68">*</operator><operator pos:start="59:69" pos:end="59:69">(</operator><name pos:start="59:70" pos:end="59:73">bptr</name> <operator pos:start="59:75" pos:end="59:75">+</operator> <name pos:start="59:77" pos:end="59:77">i</name> <operator pos:start="59:79" pos:end="59:79">+</operator> <literal type="number" pos:start="59:81" pos:end="59:81">2</literal><operator pos:start="59:82" pos:end="59:82">)</operator> <operator pos:start="59:84" pos:end="59:84">&amp;</operator> <literal type="number" pos:start="59:86" pos:end="59:89">0x7f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="63:9" pos:end="65:21"><if pos:start="63:9" pos:end="65:21">if <condition pos:start="63:12" pos:end="63:33">(<expr pos:start="63:13" pos:end="63:32"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:32"><name pos:start="63:14" pos:end="63:16">ctx</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:32">buffer_changed</name></name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:21"><block_content pos:start="65:13" pos:end="65:21">

            <continue pos:start="65:13" pos:end="65:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:11">ctx</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:27">buffer_changed</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <literal type="number" pos:start="67:31" pos:end="67:31">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="101:9"><if pos:start="71:9" pos:end="101:9">if <condition pos:start="71:12" pos:end="71:47">(<expr pos:start="71:13" pos:end="71:46"><operator pos:start="71:13" pos:end="71:13">*</operator><name pos:start="71:14" pos:end="71:28"><name pos:start="71:14" pos:end="71:16">ctx</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:24">buffer</name><operator pos:start="71:25" pos:end="71:25">.</operator><name pos:start="71:26" pos:end="71:28">str</name></name> <operator pos:start="71:30" pos:end="71:31">||</operator> <name pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:35">ctx</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:46">real_time</name></name></expr>)</condition>

        <block pos:start="73:9" pos:end="101:9">{<block_content pos:start="75:13" pos:end="99:36">

            <expr_stmt pos:start="75:13" pos:end="75:68"><expr pos:start="75:13" pos:end="75:67"><call pos:start="75:13" pos:end="75:67"><name pos:start="75:13" pos:end="75:19">ff_dlog</name><argument_list pos:start="75:20" pos:end="75:67">(<argument pos:start="75:21" pos:end="75:23"><expr pos:start="75:21" pos:end="75:23"><name pos:start="75:21" pos:end="75:23">ctx</name></expr></argument>, <argument pos:start="75:26" pos:end="75:50"><expr pos:start="75:26" pos:end="75:50"><literal type="string" pos:start="75:26" pos:end="75:50">"cdp writing data (%s)\n"</literal></expr></argument>,<argument pos:start="75:52" pos:end="75:66"><expr pos:start="75:52" pos:end="75:66"><name pos:start="75:52" pos:end="75:66"><name pos:start="75:52" pos:end="75:54">ctx</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:62">buffer</name><operator pos:start="75:63" pos:end="75:63">.</operator><name pos:start="75:64" pos:end="75:66">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:89"><expr pos:start="77:13" pos:end="77:88"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:88"><name pos:start="77:19" pos:end="77:33">ff_ass_add_rect</name><argument_list pos:start="77:34" pos:end="77:88">(<argument pos:start="77:35" pos:end="77:37"><expr pos:start="77:35" pos:end="77:37"><name pos:start="77:35" pos:end="77:37">sub</name></expr></argument>, <argument pos:start="77:40" pos:end="77:54"><expr pos:start="77:40" pos:end="77:54"><name pos:start="77:40" pos:end="77:54"><name pos:start="77:40" pos:end="77:42">ctx</name><operator pos:start="77:43" pos:end="77:44">-&gt;</operator><name pos:start="77:45" pos:end="77:50">buffer</name><operator pos:start="77:51" pos:end="77:51">.</operator><name pos:start="77:52" pos:end="77:54">str</name></name></expr></argument>, <argument pos:start="77:57" pos:end="77:72"><expr pos:start="77:57" pos:end="77:72"><name pos:start="77:57" pos:end="77:70"><name pos:start="77:57" pos:end="77:59">ctx</name><operator pos:start="77:60" pos:end="77:61">-&gt;</operator><name pos:start="77:62" pos:end="77:70">readorder</name></name><operator pos:start="77:71" pos:end="77:72">++</operator></expr></argument>, <argument pos:start="77:75" pos:end="77:75"><expr pos:start="77:75" pos:end="77:75"><literal type="number" pos:start="77:75" pos:end="77:75">0</literal></expr></argument>, <argument pos:start="77:78" pos:end="77:81"><expr pos:start="77:78" pos:end="77:81"><name pos:start="77:78" pos:end="77:81">NULL</name></expr></argument>, <argument pos:start="77:84" pos:end="77:87"><expr pos:start="77:84" pos:end="77:87"><name pos:start="77:84" pos:end="77:87">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="81:27"><if pos:start="79:13" pos:end="81:27">if <condition pos:start="79:16" pos:end="79:24">(<expr pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:19">ret</name> <operator pos:start="79:21" pos:end="79:21">&lt;</operator> <literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:27"><block_content pos:start="81:17" pos:end="81:27">

                <return pos:start="81:17" pos:end="81:27">return <expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:39"><expr pos:start="83:13" pos:end="83:38"><name pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:15">sub</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:20">pts</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:38"><name pos:start="83:24" pos:end="83:26">ctx</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:38">start_time</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="93:43"><if pos:start="85:13" pos:end="89:76">if <condition pos:start="85:16" pos:end="85:32">(<expr pos:start="85:17" pos:end="85:31"><operator pos:start="85:17" pos:end="85:17">!</operator><name pos:start="85:18" pos:end="85:31"><name pos:start="85:18" pos:end="85:20">ctx</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:31">real_time</name></name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="89:76"><block_content pos:start="87:17" pos:end="89:76">

                <expr_stmt pos:start="87:17" pos:end="89:76"><expr pos:start="87:17" pos:end="89:75"><name pos:start="87:17" pos:end="87:37"><name pos:start="87:17" pos:end="87:19">sub</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:37">end_display_time</name></name> <operator pos:start="87:39" pos:end="87:39">=</operator> <call pos:start="87:41" pos:end="89:75"><name pos:start="87:41" pos:end="87:52">av_rescale_q</name><argument_list pos:start="87:53" pos:end="89:75">(<argument pos:start="87:54" pos:end="87:84"><expr pos:start="87:54" pos:end="87:84"><name pos:start="87:54" pos:end="87:66"><name pos:start="87:54" pos:end="87:56">ctx</name><operator pos:start="87:57" pos:end="87:58">-&gt;</operator><name pos:start="87:59" pos:end="87:66">end_time</name></name> <operator pos:start="87:68" pos:end="87:68">-</operator> <name pos:start="87:70" pos:end="87:84"><name pos:start="87:70" pos:end="87:72">ctx</name><operator pos:start="87:73" pos:end="87:74">-&gt;</operator><name pos:start="87:75" pos:end="87:84">start_time</name></name></expr></argument>,

                                                     <argument pos:start="89:54" pos:end="89:67"><expr pos:start="89:54" pos:end="89:67"><name pos:start="89:54" pos:end="89:67">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="89:70" pos:end="89:74"><expr pos:start="89:70" pos:end="89:74"><name pos:start="89:70" pos:end="89:74">ms_tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="91:13" pos:end="93:43">else<block type="pseudo" pos:start="93:17" pos:end="93:43"><block_content pos:start="93:17" pos:end="93:43">

                <expr_stmt pos:start="93:17" pos:end="93:43"><expr pos:start="93:17" pos:end="93:42"><name pos:start="93:17" pos:end="93:37"><name pos:start="93:17" pos:end="93:19">sub</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:37">end_display_time</name></name> <operator pos:start="93:39" pos:end="93:39">=</operator> <operator pos:start="93:41" pos:end="93:41">-</operator><literal type="number" pos:start="93:42" pos:end="93:42">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:36"><expr pos:start="95:13" pos:end="95:35"><name pos:start="95:13" pos:end="95:31"><name pos:start="95:13" pos:end="95:15">ctx</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:31">buffer_changed</name></name> <operator pos:start="95:33" pos:end="95:33">=</operator> <literal type="number" pos:start="95:35" pos:end="95:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:43"><expr pos:start="97:13" pos:end="97:42"><name pos:start="97:13" pos:end="97:31"><name pos:start="97:13" pos:end="97:15">ctx</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:31">last_real_time</name></name> <operator pos:start="97:33" pos:end="97:33">=</operator> <name pos:start="97:35" pos:end="97:42"><name pos:start="97:35" pos:end="97:37">sub</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:42">pts</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:36"><expr pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:31"><name pos:start="99:13" pos:end="99:15">ctx</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:31">screen_touched</name></name> <operator pos:start="99:33" pos:end="99:33">=</operator> <literal type="number" pos:start="99:35" pos:end="99:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="107:5" pos:end="131:5"><if pos:start="107:5" pos:end="131:5">if <condition pos:start="107:8" pos:end="109:82">(<expr pos:start="107:9" pos:end="109:81"><name pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:11">ctx</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:22">real_time</name></name> <operator pos:start="107:24" pos:end="107:25">&amp;&amp;</operator> <name pos:start="107:27" pos:end="107:45"><name pos:start="107:27" pos:end="107:29">ctx</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:45">screen_touched</name></name> <operator pos:start="107:47" pos:end="107:48">&amp;&amp;</operator>

        <name pos:start="109:9" pos:end="109:16"><name pos:start="109:9" pos:end="109:11">sub</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:16">pts</name></name> <operator pos:start="109:18" pos:end="109:18">&gt;</operator> <name pos:start="109:20" pos:end="109:38"><name pos:start="109:20" pos:end="109:22">ctx</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:38">last_real_time</name></name> <operator pos:start="109:40" pos:end="109:40">+</operator> <call pos:start="109:42" pos:end="109:81"><name pos:start="109:42" pos:end="109:53">av_rescale_q</name><argument_list pos:start="109:54" pos:end="109:81">(<argument pos:start="109:55" pos:end="109:57"><expr pos:start="109:55" pos:end="109:57"><literal type="number" pos:start="109:55" pos:end="109:57">200</literal></expr></argument>, <argument pos:start="109:60" pos:end="109:64"><expr pos:start="109:60" pos:end="109:64"><name pos:start="109:60" pos:end="109:64">ms_tb</name></expr></argument>, <argument pos:start="109:67" pos:end="109:80"><expr pos:start="109:67" pos:end="109:80"><name pos:start="109:67" pos:end="109:80">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:84" pos:end="131:5">{<block_content pos:start="111:9" pos:end="129:35">

        <expr_stmt pos:start="111:9" pos:end="111:39"><expr pos:start="111:9" pos:end="111:38"><name pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:11">ctx</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:27">last_real_time</name></name> <operator pos:start="111:29" pos:end="111:29">=</operator> <name pos:start="111:31" pos:end="111:38"><name pos:start="111:31" pos:end="111:33">sub</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:38">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:32"><expr pos:start="113:9" pos:end="113:31"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:11">ctx</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:27">screen_touched</name></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <literal type="number" pos:start="113:31" pos:end="113:31">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><call pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:22">capture_screen</name><argument_list pos:start="117:23" pos:end="117:27">(<argument pos:start="117:24" pos:end="117:26"><expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:32"><expr pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:11">ctx</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:27">buffer_changed</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <literal type="number" pos:start="119:31" pos:end="119:31">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:85"><expr pos:start="123:9" pos:end="123:84"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:84"><name pos:start="123:15" pos:end="123:29">ff_ass_add_rect</name><argument_list pos:start="123:30" pos:end="123:84">(<argument pos:start="123:31" pos:end="123:33"><expr pos:start="123:31" pos:end="123:33"><name pos:start="123:31" pos:end="123:33">sub</name></expr></argument>, <argument pos:start="123:36" pos:end="123:50"><expr pos:start="123:36" pos:end="123:50"><name pos:start="123:36" pos:end="123:50"><name pos:start="123:36" pos:end="123:38">ctx</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:46">buffer</name><operator pos:start="123:47" pos:end="123:47">.</operator><name pos:start="123:48" pos:end="123:50">str</name></name></expr></argument>, <argument pos:start="123:53" pos:end="123:68"><expr pos:start="123:53" pos:end="123:68"><name pos:start="123:53" pos:end="123:66"><name pos:start="123:53" pos:end="123:55">ctx</name><operator pos:start="123:56" pos:end="123:57">-&gt;</operator><name pos:start="123:58" pos:end="123:66">readorder</name></name><operator pos:start="123:67" pos:end="123:68">++</operator></expr></argument>, <argument pos:start="123:71" pos:end="123:71"><expr pos:start="123:71" pos:end="123:71"><literal type="number" pos:start="123:71" pos:end="123:71">0</literal></expr></argument>, <argument pos:start="123:74" pos:end="123:77"><expr pos:start="123:74" pos:end="123:77"><name pos:start="123:74" pos:end="123:77">NULL</name></expr></argument>, <argument pos:start="123:80" pos:end="123:83"><expr pos:start="123:80" pos:end="123:83"><name pos:start="123:80" pos:end="123:83">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="127:23"><if pos:start="125:9" pos:end="127:23">if <condition pos:start="125:12" pos:end="125:20">(<expr pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">&lt;</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:23"><block_content pos:start="127:13" pos:end="127:23">

            <return pos:start="127:13" pos:end="127:23">return <expr pos:start="127:20" pos:end="127:22"><name pos:start="127:20" pos:end="127:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:35"><expr pos:start="129:9" pos:end="129:34"><name pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:11">sub</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:29">end_display_time</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <operator pos:start="129:33" pos:end="129:33">-</operator><literal type="number" pos:start="129:34" pos:end="129:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:34"><expr pos:start="135:5" pos:end="135:33"><operator pos:start="135:5" pos:end="135:5">*</operator><name pos:start="135:6" pos:end="135:12">got_sub</name> <operator pos:start="135:14" pos:end="135:14">=</operator> <name pos:start="135:16" pos:end="135:29"><name pos:start="135:16" pos:end="135:18">sub</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:29">num_rects</name></name> <operator pos:start="135:31" pos:end="135:31">&gt;</operator> <literal type="number" pos:start="135:33" pos:end="135:33">0</literal></expr>;</expr_stmt>

    <return pos:start="137:5" pos:end="137:15">return <expr pos:start="137:12" pos:end="137:14"><name pos:start="137:12" pos:end="137:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
