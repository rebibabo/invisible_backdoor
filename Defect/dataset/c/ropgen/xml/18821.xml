<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18821.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mov_read_mac_string</name><parameter_list pos:start="1:31" pos:end="3:53">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">MOVContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">c</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:57">AVIOContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">pb</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:70"><decl pos:start="1:64" pos:end="1:70"><type pos:start="1:64" pos:end="1:70"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:70">len</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:35">char</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">dst</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:52"><decl pos:start="3:43" pos:end="3:52"><type pos:start="3:43" pos:end="3:52"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:52">dstlen</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:19">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name> <init pos:start="7:13" pos:end="7:17">= <expr pos:start="7:15" pos:end="7:17"><name pos:start="7:15" pos:end="7:17">dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">end</name> <init pos:start="9:15" pos:end="9:28">= <expr pos:start="9:17" pos:end="9:28"><name pos:start="9:17" pos:end="9:19">dst</name><operator pos:start="9:20" pos:end="9:20">+</operator><name pos:start="9:21" pos:end="9:26">dstlen</name><operator pos:start="9:27" pos:end="9:27">-</operator><literal type="number" pos:start="9:28" pos:end="9:28">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="27:5">for <control pos:start="15:9" pos:end="15:29">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:24"><expr pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:23">len</name></expr>;</condition> <incr pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:26">i</name><operator pos:start="15:27" pos:end="15:28">++</operator></expr></incr>)</control> <block pos:start="15:31" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:72">

        <decl_stmt pos:start="17:9" pos:end="17:35"><decl pos:start="17:9" pos:end="17:17"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">uint8_t</name></type> <name pos:start="17:17" pos:end="17:17">t</name></decl>, <decl pos:start="17:20" pos:end="17:34"><type ref="prev" pos:start="17:9" pos:end="17:15"/><name pos:start="17:20" pos:end="17:20">c</name> <init pos:start="17:22" pos:end="17:34">= <expr pos:start="17:24" pos:end="17:34"><call pos:start="17:24" pos:end="17:34"><name pos:start="17:24" pos:end="17:30">avio_r8</name><argument_list pos:start="17:31" pos:end="17:34">(<argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="25:72"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:32">(<expr pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:13">c</name> <operator pos:start="19:15" pos:end="19:15">&lt;</operator> <literal type="number" pos:start="19:17" pos:end="19:20">0x80</literal> <operator pos:start="19:22" pos:end="19:23">&amp;&amp;</operator> <name pos:start="19:25" pos:end="19:25">p</name> <operator pos:start="19:27" pos:end="19:27">&lt;</operator> <name pos:start="19:29" pos:end="19:31">end</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <expr_stmt pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:20"><operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:14">p</name><operator pos:start="21:15" pos:end="21:16">++</operator> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:20">c</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="23:9" pos:end="25:72">else<block type="pseudo" pos:start="25:13" pos:end="25:72"><block_content pos:start="25:13" pos:end="25:72">

            <macro pos:start="25:13" pos:end="25:71"><name pos:start="25:13" pos:end="25:20">PUT_UTF8</name><argument_list pos:start="25:21" pos:end="25:71">(<argument pos:start="25:22" pos:end="25:43">mac_to_unicode[c-<literal type="number" pos:start="25:39" pos:end="25:42">0x80</literal>]</argument>, <argument pos:start="25:46" pos:end="25:46">t</argument>, <argument pos:start="25:49" pos:end="25:70">if (p &lt; end) *p++ = t;</argument>)</argument_list></macro><empty_stmt pos:start="25:72" pos:end="25:72">;</empty_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="29:5" pos:end="29:11"><expr pos:start="29:5" pos:end="29:10"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:6">p</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <literal type="number" pos:start="29:10" pos:end="29:10">0</literal></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:19">return <expr pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:12">p</name> <operator pos:start="31:14" pos:end="31:14">-</operator> <name pos:start="31:16" pos:end="31:18">dst</name></expr>;</return>

</block_content>}</block></function>
</unit>
