<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16378.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">BlockAIOCB</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:26">bdrv_aio_flush</name><parameter_list pos:start="1:27" pos:end="3:46">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:31"><decl pos:start="3:9" pos:end="3:31"><type pos:start="3:9" pos:end="3:31"><name pos:start="3:9" pos:end="3:27">BlockCompletionFunc</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:31">cb</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:37">void</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:45">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:24">

    <expr_stmt pos:start="7:5" pos:end="7:37"><expr pos:start="7:5" pos:end="7:36"><call pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:24">trace_bdrv_aio_flush</name><argument_list pos:start="7:25" pos:end="7:36">(<argument pos:start="7:26" pos:end="7:27"><expr pos:start="7:26" pos:end="7:27"><name pos:start="7:26" pos:end="7:27">bs</name></expr></argument>, <argument pos:start="7:30" pos:end="7:35"><expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">Coroutine</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:23">BlockAIOCBCoroutine</name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:28">acb</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:60">/* Matched by bdrv_co_complete's bdrv_dec_in_flight.  */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><call pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:22">bdrv_inc_in_flight</name><argument_list pos:start="19:23" pos:end="19:26">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:7">acb</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:62"><name pos:start="23:11" pos:end="23:22">qemu_aio_get</name><argument_list pos:start="23:23" pos:end="23:62">(<argument pos:start="23:24" pos:end="23:45"><expr pos:start="23:24" pos:end="23:45"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:45">bdrv_em_co_aiocb_info</name></expr></argument>, <argument pos:start="23:48" pos:end="23:49"><expr pos:start="23:48" pos:end="23:49"><name pos:start="23:48" pos:end="23:49">bs</name></expr></argument>, <argument pos:start="23:52" pos:end="23:53"><expr pos:start="23:52" pos:end="23:53"><name pos:start="23:52" pos:end="23:53">cb</name></expr></argument>, <argument pos:start="23:56" pos:end="23:61"><expr pos:start="23:56" pos:end="23:61"><name pos:start="23:56" pos:end="23:61">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:7">acb</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:16">need_bh</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:23">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:7">acb</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">req</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:18">error</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <operator pos:start="27:22" pos:end="27:22">-</operator><name pos:start="27:23" pos:end="27:33">EINPROGRESS</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:6">co</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:60"><name pos:start="31:10" pos:end="31:30">qemu_coroutine_create</name><argument_list pos:start="31:31" pos:end="31:60">(<argument pos:start="31:32" pos:end="31:54"><expr pos:start="31:32" pos:end="31:54"><name pos:start="31:32" pos:end="31:54">bdrv_aio_flush_co_entry</name></expr></argument>, <argument pos:start="31:57" pos:end="31:59"><expr pos:start="31:57" pos:end="31:59"><name pos:start="31:57" pos:end="31:59">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><call pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:24">qemu_coroutine_enter</name><argument_list pos:start="33:25" pos:end="33:28">(<argument pos:start="33:26" pos:end="33:27"><expr pos:start="33:26" pos:end="33:27"><name pos:start="33:26" pos:end="33:27">co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:29">bdrv_co_maybe_schedule_bh</name><argument_list pos:start="37:30" pos:end="37:34">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:24">return <expr pos:start="39:12" pos:end="39:23"><operator pos:start="39:12" pos:end="39:12">&amp;</operator><name pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:15">acb</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:23">common</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
