<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23273.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">is_intra_more_likely</name><parameter_list pos:start="1:32" pos:end="1:50">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:46">MpegEncContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list><block pos:start="1:51" pos:end="129:1">{<block_content pos:start="3:5" pos:end="127:31">

    <decl_stmt pos:start="3:5" pos:end="3:72"><decl pos:start="3:5" pos:end="3:23"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:23">is_intra_likely</name></decl>, <decl pos:start="3:26" pos:end="3:26"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:26" pos:end="3:26">i</name></decl>, <decl pos:start="3:29" pos:end="3:29"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:29" pos:end="3:29">j</name></decl>, <decl pos:start="3:32" pos:end="3:46"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:32" pos:end="3:46">undamaged_count</name></decl>, <decl pos:start="3:49" pos:end="3:59"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:49" pos:end="3:59">skip_amount</name></decl>, <decl pos:start="3:62" pos:end="3:65"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:62" pos:end="3:65">mb_x</name></decl>, <decl pos:start="3:68" pos:end="3:71"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:68" pos:end="3:71">mb_y</name></decl>;</decl_stmt>



    <if_stmt pos:start="7:5" pos:end="7:74"><if pos:start="7:5" pos:end="7:74">if <condition pos:start="7:8" pos:end="7:64">(<expr pos:start="7:9" pos:end="7:63"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:28"><name pos:start="7:10" pos:end="7:10">s</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:28">last_picture_ptr</name></name> <operator pos:start="7:30" pos:end="7:31">||</operator> <operator pos:start="7:33" pos:end="7:33">!</operator><name pos:start="7:34" pos:end="7:63"><name pos:start="7:34" pos:end="7:34">s</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:52">last_picture_ptr</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:55">f</name><operator pos:start="7:56" pos:end="7:56">.</operator><name pos:start="7:57" pos:end="7:60">data</name><index pos:start="7:61" pos:end="7:63">[<expr pos:start="7:62" pos:end="7:62"><literal type="number" pos:start="7:62" pos:end="7:62">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="7:66" pos:end="7:74"><block_content pos:start="7:66" pos:end="7:74"> <return pos:start="7:66" pos:end="7:74">return <expr pos:start="7:73" pos:end="7:73"><literal type="number" pos:start="7:73" pos:end="7:73">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="7:76" pos:end="7:130">//no previous frame available -&gt; use spatial prediction</comment>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">undamaged_count</name><operator pos:start="11:20" pos:end="11:20">=</operator><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="23:5">for<control pos:start="13:8" pos:end="13:30">(<init pos:start="13:9" pos:end="13:12"><expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:9">i</name><operator pos:start="13:10" pos:end="13:10">=</operator><literal type="number" pos:start="13:11" pos:end="13:11">0</literal></expr>;</init> <condition pos:start="13:14" pos:end="13:25"><expr pos:start="13:14" pos:end="13:24"><name pos:start="13:14" pos:end="13:14">i</name><operator pos:start="13:15" pos:end="13:15">&lt;</operator><name pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:24">mb_num</name></name></expr>;</condition> <incr pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:27">i</name><operator pos:start="13:28" pos:end="13:29">++</operator></expr></incr>)</control><block pos:start="13:31" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:30">

        <decl_stmt pos:start="15:9" pos:end="15:43"><decl pos:start="15:9" pos:end="15:42"><type pos:start="15:9" pos:end="15:17"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:17">int</name></type> <name pos:start="15:19" pos:end="15:23">mb_xy</name><init pos:start="15:24" pos:end="15:42">= <expr pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:39">mb_index2xy</name><index pos:start="15:40" pos:end="15:42">[<expr pos:start="15:41" pos:end="15:41"><name pos:start="15:41" pos:end="15:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:54"><decl pos:start="17:9" pos:end="17:53"><type pos:start="17:9" pos:end="17:17"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:17">int</name></type> <name pos:start="17:19" pos:end="17:23">error</name><init pos:start="17:24" pos:end="17:53">= <expr pos:start="17:26" pos:end="17:53"><name pos:start="17:26" pos:end="17:53"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:46">error_status_table</name><index pos:start="17:47" pos:end="17:53">[<expr pos:start="17:48" pos:end="17:52"><name pos:start="17:48" pos:end="17:52">mb_xy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="21:30"><if pos:start="19:9" pos:end="21:30">if<condition pos:start="19:11" pos:end="19:51">(<expr pos:start="19:12" pos:end="19:50"><operator pos:start="19:12" pos:end="19:12">!</operator><operator pos:start="19:13" pos:end="19:13">(</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:19">error</name><operator pos:start="19:20" pos:end="19:20">&amp;</operator><name pos:start="19:21" pos:end="19:28">DC_ERROR</name><operator pos:start="19:29" pos:end="19:29">)</operator> <operator pos:start="19:31" pos:end="19:32">&amp;&amp;</operator> <operator pos:start="19:34" pos:end="19:34">(</operator><name pos:start="19:35" pos:end="19:39">error</name><operator pos:start="19:40" pos:end="19:40">&amp;</operator><name pos:start="19:41" pos:end="19:48">MV_ERROR</name><operator pos:start="19:49" pos:end="19:49">)</operator><operator pos:start="19:50" pos:end="19:50">)</operator></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:30"><block_content pos:start="21:13" pos:end="21:30">

            <expr_stmt pos:start="21:13" pos:end="21:30"><expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:27">undamaged_count</name><operator pos:start="21:28" pos:end="21:29">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if<condition pos:start="27:7" pos:end="27:36">(<expr pos:start="27:8" pos:end="27:35"><name pos:start="27:8" pos:end="27:18"><name pos:start="27:8" pos:end="27:8">s</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:18">codec_id</name></name> <operator pos:start="27:20" pos:end="27:21">==</operator> <name pos:start="27:23" pos:end="27:35">CODEC_ID_H264</name></expr>)</condition><block pos:start="27:37" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:21">

        <decl_stmt pos:start="29:9" pos:end="29:33"><decl pos:start="29:9" pos:end="29:32"><type pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:19">H264Context</name> <modifier pos:start="29:21" pos:end="29:21">*</modifier></type><name pos:start="29:22" pos:end="29:22">h</name><init pos:start="29:23" pos:end="29:32">= <expr pos:start="29:25" pos:end="29:32"><operator pos:start="29:25" pos:end="29:25">(</operator><name pos:start="29:26" pos:end="29:29">void</name><operator pos:start="29:30" pos:end="29:30">*</operator><operator pos:start="29:31" pos:end="29:31">)</operator><name pos:start="29:32" pos:end="29:32">s</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="31:9" pos:end="33:21"><if pos:start="31:9" pos:end="33:21">if <condition pos:start="31:12" pos:end="31:65">(<expr pos:start="31:13" pos:end="31:64"><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:13">h</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">ref_count</name><index pos:start="31:25" pos:end="31:27">[<expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr>]</index></name> <operator pos:start="31:29" pos:end="31:30">&lt;=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">0</literal> <operator pos:start="31:34" pos:end="31:35">||</operator> <operator pos:start="31:37" pos:end="31:37">!</operator><name pos:start="31:38" pos:end="31:54"><name pos:start="31:38" pos:end="31:38">h</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:48">ref_list</name><index pos:start="31:49" pos:end="31:51">[<expr pos:start="31:50" pos:end="31:50"><literal type="number" pos:start="31:50" pos:end="31:50">0</literal></expr>]</index><index pos:start="31:52" pos:end="31:54">[<expr pos:start="31:53" pos:end="31:53"><literal type="number" pos:start="31:53" pos:end="31:53">0</literal></expr>]</index></name><operator pos:start="31:55" pos:end="31:55">.</operator><name pos:start="31:56" pos:end="31:64"><name pos:start="31:56" pos:end="31:56">f</name><operator pos:start="31:57" pos:end="31:57">.</operator><name pos:start="31:58" pos:end="31:61">data</name><index pos:start="31:62" pos:end="31:64">[<expr pos:start="31:63" pos:end="31:63"><literal type="number" pos:start="31:63" pos:end="31:63">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:21"><block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="39:37"><if pos:start="39:5" pos:end="39:37">if<condition pos:start="39:7" pos:end="39:27">(<expr pos:start="39:8" pos:end="39:26"><name pos:start="39:8" pos:end="39:22">undamaged_count</name> <operator pos:start="39:24" pos:end="39:24">&lt;</operator> <literal type="number" pos:start="39:26" pos:end="39:26">5</literal></expr>)</condition><block type="pseudo" pos:start="39:29" pos:end="39:37"><block_content pos:start="39:29" pos:end="39:37"> <return pos:start="39:29" pos:end="39:37">return <expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="39:39" pos:end="39:89">//almost all MBs damaged -&gt; use temporal prediction</comment>



    <comment type="line" pos:start="43:5" pos:end="43:64">//prevent dsp.sad() check, that requires access to the image</comment>

    <if_stmt pos:start="45:5" pos:end="47:17"><if pos:start="45:5" pos:end="47:17">if<condition pos:start="45:7" pos:end="45:100">(<expr pos:start="45:8" pos:end="45:99"><name pos:start="45:8" pos:end="45:31">CONFIG_MPEG_XVMC_DECODER</name> <operator pos:start="45:33" pos:end="45:34">&amp;&amp;</operator> <name pos:start="45:36" pos:end="45:62"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:43">avctx</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:62">xvmc_acceleration</name></name> <operator pos:start="45:64" pos:end="45:65">&amp;&amp;</operator> <name pos:start="45:67" pos:end="45:78"><name pos:start="45:67" pos:end="45:67">s</name><operator pos:start="45:68" pos:end="45:69">-&gt;</operator><name pos:start="45:70" pos:end="45:78">pict_type</name></name> <operator pos:start="45:80" pos:end="45:81">==</operator> <name pos:start="45:83" pos:end="45:99">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:17"><block_content pos:start="47:9" pos:end="47:17">

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:15">skip_amount</name><operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:45"><name pos:start="51:18" pos:end="51:22">FFMAX</name><argument_list pos:start="51:23" pos:end="51:45">(<argument pos:start="51:24" pos:end="51:41"><expr pos:start="51:24" pos:end="51:41"><name pos:start="51:24" pos:end="51:38">undamaged_count</name><operator pos:start="51:39" pos:end="51:39">/</operator><literal type="number" pos:start="51:40" pos:end="51:41">50</literal></expr></argument>, <argument pos:start="51:44" pos:end="51:44"><expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="51:48" pos:end="51:71">//check only upto 50 MBs</comment>

    <expr_stmt pos:start="53:5" pos:end="53:22"><expr pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:19">is_intra_likely</name><operator pos:start="53:20" pos:end="53:20">=</operator><literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:8"><expr pos:start="57:5" pos:end="57:7"><name pos:start="57:5" pos:end="57:5">j</name><operator pos:start="57:6" pos:end="57:6">=</operator><literal type="number" pos:start="57:7" pos:end="57:7">0</literal></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="123:5">for<control pos:start="59:8" pos:end="59:45">(<init pos:start="59:9" pos:end="59:16"><expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:12">mb_y</name><operator pos:start="59:13" pos:end="59:13">=</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>;</init> <condition pos:start="59:18" pos:end="59:37"><expr pos:start="59:18" pos:end="59:36"><name pos:start="59:18" pos:end="59:21">mb_y</name><operator pos:start="59:22" pos:end="59:22">&lt;</operator><name pos:start="59:23" pos:end="59:34"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:34">mb_height</name></name><operator pos:start="59:35" pos:end="59:35">-</operator><literal type="number" pos:start="59:36" pos:end="59:36">1</literal></expr>;</condition> <incr pos:start="59:39" pos:end="59:44"><expr pos:start="59:39" pos:end="59:44"><name pos:start="59:39" pos:end="59:42">mb_y</name><operator pos:start="59:43" pos:end="59:44">++</operator></expr></incr>)</control><block pos:start="59:46" pos:end="123:5">{<block_content pos:start="61:9" pos:end="121:9">

        <for pos:start="61:9" pos:end="121:9">for<control pos:start="61:12" pos:end="61:46">(<init pos:start="61:13" pos:end="61:20"><expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:16">mb_x</name><operator pos:start="61:17" pos:end="61:17">=</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>;</init> <condition pos:start="61:22" pos:end="61:38"><expr pos:start="61:22" pos:end="61:37"><name pos:start="61:22" pos:end="61:25">mb_x</name><operator pos:start="61:26" pos:end="61:26">&lt;</operator><name pos:start="61:27" pos:end="61:37"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:37">mb_width</name></name></expr>;</condition> <incr pos:start="61:40" pos:end="61:45"><expr pos:start="61:40" pos:end="61:45"><name pos:start="61:40" pos:end="61:43">mb_x</name><operator pos:start="61:44" pos:end="61:45">++</operator></expr></incr>)</control><block pos:start="61:47" pos:end="121:9">{<block_content pos:start="63:13" pos:end="119:13">

            <decl_stmt pos:start="63:13" pos:end="63:22"><decl pos:start="63:13" pos:end="63:21"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:21">error</name></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:54"><decl pos:start="65:13" pos:end="65:53"><type pos:start="65:13" pos:end="65:21"><specifier pos:start="65:13" pos:end="65:17">const</specifier> <name pos:start="65:19" pos:end="65:21">int</name></type> <name pos:start="65:23" pos:end="65:27">mb_xy</name><init pos:start="65:28" pos:end="65:53">= <expr pos:start="65:30" pos:end="65:53"><name pos:start="65:30" pos:end="65:33">mb_x</name> <operator pos:start="65:35" pos:end="65:35">+</operator> <name pos:start="65:37" pos:end="65:40">mb_y</name><operator pos:start="65:41" pos:end="65:41">*</operator><name pos:start="65:42" pos:end="65:53"><name pos:start="65:42" pos:end="65:42">s</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:53">mb_stride</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:48"><expr pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:17">error</name><operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:47"><name pos:start="69:20" pos:end="69:20">s</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:40">error_status_table</name><index pos:start="69:41" pos:end="69:47">[<expr pos:start="69:42" pos:end="69:46"><name pos:start="69:42" pos:end="69:46">mb_xy</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="73:25"><if pos:start="71:13" pos:end="73:25">if<condition pos:start="71:15" pos:end="71:52">(<expr pos:start="71:16" pos:end="71:51"><operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:21">error</name><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:30">DC_ERROR</name><operator pos:start="71:31" pos:end="71:31">)</operator> <operator pos:start="71:33" pos:end="71:34">&amp;&amp;</operator> <operator pos:start="71:36" pos:end="71:36">(</operator><name pos:start="71:37" pos:end="71:41">error</name><operator pos:start="71:42" pos:end="71:42">&amp;</operator><name pos:start="71:43" pos:end="71:50">MV_ERROR</name><operator pos:start="71:51" pos:end="71:51">)</operator></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:25"><block_content pos:start="73:17" pos:end="73:25">

                <continue pos:start="73:17" pos:end="73:25">continue;</continue></block_content></block></if></if_stmt> <comment type="line" pos:start="73:27" pos:end="73:40">//skip damaged</comment>



            <expr_stmt pos:start="77:13" pos:end="77:16"><expr pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:13">j</name><operator pos:start="77:14" pos:end="77:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="79:46"><if pos:start="79:13" pos:end="79:46">if<condition pos:start="79:15" pos:end="79:36">(<expr pos:start="79:16" pos:end="79:35"><operator pos:start="79:16" pos:end="79:16">(</operator><name pos:start="79:17" pos:end="79:17">j</name><operator pos:start="79:18" pos:end="79:18">%</operator><name pos:start="79:19" pos:end="79:29">skip_amount</name><operator pos:start="79:30" pos:end="79:30">)</operator> <operator pos:start="79:32" pos:end="79:33">!=</operator> <literal type="number" pos:start="79:35" pos:end="79:35">0</literal></expr>)</condition><block type="pseudo" pos:start="79:38" pos:end="79:46"><block_content pos:start="79:38" pos:end="79:46"> <continue pos:start="79:38" pos:end="79:46">continue;</continue></block_content></block></if></if_stmt> <comment type="line" pos:start="79:48" pos:end="79:78">//skip a few to speed things up</comment>



            <if_stmt pos:start="83:13" pos:end="119:13"><if pos:start="83:13" pos:end="109:13">if<condition pos:start="83:15" pos:end="83:47">(<expr pos:start="83:16" pos:end="83:46"><name pos:start="83:16" pos:end="83:27"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:27">pict_type</name></name><operator pos:start="83:28" pos:end="83:29">==</operator><name pos:start="83:30" pos:end="83:46">AV_PICTURE_TYPE_I</name></expr>)</condition><block pos:start="83:48" pos:end="109:13">{<block_content pos:start="85:17" pos:end="107:113">

                <decl_stmt pos:start="85:17" pos:end="85:99"><decl pos:start="85:17" pos:end="85:98"><type pos:start="85:17" pos:end="85:25"><name pos:start="85:17" pos:end="85:23">uint8_t</name> <modifier pos:start="85:25" pos:end="85:25">*</modifier></type><name pos:start="85:26" pos:end="85:31">mb_ptr</name>     <init pos:start="85:37" pos:end="85:98">= <expr pos:start="85:39" pos:end="85:98"><name pos:start="85:39" pos:end="85:66"><name pos:start="85:39" pos:end="85:39">s</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:56">current_picture</name><operator pos:start="85:57" pos:end="85:57">.</operator><name pos:start="85:58" pos:end="85:58">f</name><operator pos:start="85:59" pos:end="85:59">.</operator><name pos:start="85:60" pos:end="85:63">data</name><index pos:start="85:64" pos:end="85:66">[<expr pos:start="85:65" pos:end="85:65"><literal type="number" pos:start="85:65" pos:end="85:65">0</literal></expr>]</index></name> <operator pos:start="85:68" pos:end="85:68">+</operator> <name pos:start="85:70" pos:end="85:73">mb_x</name><operator pos:start="85:74" pos:end="85:74">*</operator><literal type="number" pos:start="85:75" pos:end="85:78">16</literal> <operator pos:start="85:78" pos:end="85:78">+</operator> <name pos:start="85:80" pos:end="85:83">mb_y</name><operator pos:start="85:84" pos:end="85:84">*</operator><literal type="number" pos:start="85:85" pos:end="85:86">16</literal><operator pos:start="85:87" pos:end="85:87">*</operator><name pos:start="85:88" pos:end="85:98"><name pos:start="85:88" pos:end="85:88">s</name><operator pos:start="85:89" pos:end="85:90">-&gt;</operator><name pos:start="85:91" pos:end="85:98">linesize</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="87:17" pos:end="87:99"><decl pos:start="87:17" pos:end="87:98"><type pos:start="87:17" pos:end="87:25"><name pos:start="87:17" pos:end="87:23">uint8_t</name> <modifier pos:start="87:25" pos:end="87:25">*</modifier></type><name pos:start="87:26" pos:end="87:36">last_mb_ptr</name><init pos:start="87:37" pos:end="87:98">= <expr pos:start="87:39" pos:end="87:98"><name pos:start="87:39" pos:end="87:66"><name pos:start="87:39" pos:end="87:39">s</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:53">last_picture</name><operator pos:start="87:54" pos:end="87:54">.</operator><name pos:start="87:55" pos:end="87:55">f</name><operator pos:start="87:56" pos:end="87:56">.</operator><name pos:start="87:57" pos:end="87:60">data</name>   <index pos:start="87:64" pos:end="87:66">[<expr pos:start="87:65" pos:end="87:65"><literal type="number" pos:start="87:65" pos:end="87:65">0</literal></expr>]</index></name> <operator pos:start="87:68" pos:end="87:68">+</operator> <name pos:start="87:70" pos:end="87:73">mb_x</name><operator pos:start="87:74" pos:end="87:74">*</operator><literal type="number" pos:start="87:75" pos:end="87:78">16</literal> <operator pos:start="87:78" pos:end="87:78">+</operator> <name pos:start="87:80" pos:end="87:83">mb_y</name><operator pos:start="87:84" pos:end="87:84">*</operator><literal type="number" pos:start="87:85" pos:end="87:86">16</literal><operator pos:start="87:87" pos:end="87:87">*</operator><name pos:start="87:88" pos:end="87:98"><name pos:start="87:88" pos:end="87:88">s</name><operator pos:start="87:89" pos:end="87:90">-&gt;</operator><name pos:start="87:91" pos:end="87:98">linesize</name></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="91:17" pos:end="101:17"><if pos:start="91:17" pos:end="95:17">if <condition pos:start="91:20" pos:end="91:56">(<expr pos:start="91:21" pos:end="91:55"><name pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:21">s</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:28">avctx</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:38">codec_id</name></name> <operator pos:start="91:40" pos:end="91:41">==</operator> <name pos:start="91:43" pos:end="91:55">CODEC_ID_H264</name></expr>)</condition> <block pos:start="91:58" pos:end="95:17">{<block_content>

                    <comment type="line" pos:start="93:21" pos:end="93:28">// FIXME</comment>

                </block_content>}</block></if> <else pos:start="95:19" pos:end="101:17">else <block pos:start="95:24" pos:end="101:17">{<block_content pos:start="97:21" pos:end="99:54">

                    <expr_stmt pos:start="97:21" pos:end="99:54"><expr pos:start="97:21" pos:end="99:53"><call pos:start="97:21" pos:end="99:53"><name pos:start="97:21" pos:end="97:44">ff_thread_await_progress</name><argument_list pos:start="97:45" pos:end="99:53">(<argument pos:start="97:46" pos:end="97:76"><expr pos:start="97:46" pos:end="97:76"><operator pos:start="97:46" pos:end="97:46">(</operator><name pos:start="97:47" pos:end="97:53">AVFrame</name> <operator pos:start="97:55" pos:end="97:55">*</operator><operator pos:start="97:56" pos:end="97:56">)</operator> <name pos:start="97:58" pos:end="97:76"><name pos:start="97:58" pos:end="97:58">s</name><operator pos:start="97:59" pos:end="97:60">-&gt;</operator><name pos:start="97:61" pos:end="97:76">last_picture_ptr</name></name></expr></argument>,

                                             <argument pos:start="99:46" pos:end="99:49"><expr pos:start="99:46" pos:end="99:49"><name pos:start="99:46" pos:end="99:49">mb_y</name></expr></argument>, <argument pos:start="99:52" pos:end="99:52"><expr pos:start="99:52" pos:end="99:52"><literal type="number" pos:start="99:52" pos:end="99:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:113"><expr pos:start="103:17" pos:end="103:112"><name pos:start="103:17" pos:end="103:31">is_intra_likely</name> <operator pos:start="103:33" pos:end="103:34">+=</operator> <name pos:start="103:36" pos:end="103:48"><name pos:start="103:36" pos:end="103:36">s</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:41">dsp</name><operator pos:start="103:42" pos:end="103:42">.</operator><name pos:start="103:43" pos:end="103:45">sad</name><index pos:start="103:46" pos:end="103:48">[<expr pos:start="103:47" pos:end="103:47"><literal type="number" pos:start="103:47" pos:end="103:47">0</literal></expr>]</index></name><operator pos:start="103:49" pos:end="103:49">(</operator><name pos:start="103:50" pos:end="103:53">NULL</name><operator pos:start="103:54" pos:end="103:54">,</operator> <name pos:start="103:56" pos:end="103:66">last_mb_ptr</name><operator pos:start="103:67" pos:end="103:67">,</operator> <name pos:start="103:69" pos:end="103:74">mb_ptr</name>                    <operator pos:start="103:95" pos:end="103:95">,</operator> <name pos:start="103:97" pos:end="103:107"><name pos:start="103:97" pos:end="103:97">s</name><operator pos:start="103:98" pos:end="103:99">-&gt;</operator><name pos:start="103:100" pos:end="103:107">linesize</name></name><operator pos:start="103:108" pos:end="103:108">,</operator> <literal type="number" pos:start="103:110" pos:end="103:111">16</literal><operator pos:start="103:112" pos:end="103:112">)</operator></expr>;</expr_stmt>

                <comment type="line" pos:start="105:17" pos:end="105:51">// FIXME need await_progress() here</comment>

                <expr_stmt pos:start="107:17" pos:end="107:113"><expr pos:start="107:17" pos:end="107:112"><name pos:start="107:17" pos:end="107:31">is_intra_likely</name> <operator pos:start="107:33" pos:end="107:34">-=</operator> <name pos:start="107:36" pos:end="107:48"><name pos:start="107:36" pos:end="107:36">s</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:41">dsp</name><operator pos:start="107:42" pos:end="107:42">.</operator><name pos:start="107:43" pos:end="107:45">sad</name><index pos:start="107:46" pos:end="107:48">[<expr pos:start="107:47" pos:end="107:47"><literal type="number" pos:start="107:47" pos:end="107:47">0</literal></expr>]</index></name><operator pos:start="107:49" pos:end="107:49">(</operator><name pos:start="107:50" pos:end="107:53">NULL</name><operator pos:start="107:54" pos:end="107:54">,</operator> <name pos:start="107:56" pos:end="107:66">last_mb_ptr</name><operator pos:start="107:67" pos:end="107:67">,</operator> <name pos:start="107:69" pos:end="107:79">last_mb_ptr</name><operator pos:start="107:80" pos:end="107:80">+</operator><name pos:start="107:81" pos:end="107:91"><name pos:start="107:81" pos:end="107:81">s</name><operator pos:start="107:82" pos:end="107:83">-&gt;</operator><name pos:start="107:84" pos:end="107:91">linesize</name></name><operator pos:start="107:92" pos:end="107:92">*</operator><literal type="number" pos:start="107:93" pos:end="107:94">16</literal><operator pos:start="107:95" pos:end="107:95">,</operator> <name pos:start="107:97" pos:end="107:107"><name pos:start="107:97" pos:end="107:97">s</name><operator pos:start="107:98" pos:end="107:99">-&gt;</operator><name pos:start="107:100" pos:end="107:107">linesize</name></name><operator pos:start="107:108" pos:end="107:108">,</operator> <literal type="number" pos:start="107:110" pos:end="107:111">16</literal><operator pos:start="107:112" pos:end="107:112">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="109:14" pos:end="119:13">else<block pos:start="109:18" pos:end="119:13">{<block_content pos:start="111:17" pos:end="117:37">

                <if_stmt pos:start="111:17" pos:end="117:37"><if pos:start="111:17" pos:end="113:37">if <condition pos:start="111:20" pos:end="111:66">(<expr pos:start="111:21" pos:end="111:65"><call pos:start="111:21" pos:end="111:65"><name pos:start="111:21" pos:end="111:28">IS_INTRA</name><argument_list pos:start="111:29" pos:end="111:65">(<argument pos:start="111:30" pos:end="111:64"><expr pos:start="111:30" pos:end="111:64"><name pos:start="111:30" pos:end="111:64"><name pos:start="111:30" pos:end="111:30">s</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:47">current_picture</name><operator pos:start="111:48" pos:end="111:48">.</operator><name pos:start="111:49" pos:end="111:49">f</name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:57">mb_type</name><index pos:start="111:58" pos:end="111:64">[<expr pos:start="111:59" pos:end="111:63"><name pos:start="111:59" pos:end="111:63">mb_xy</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:20" pos:end="113:37"><block_content pos:start="113:20" pos:end="113:37">

                   <expr_stmt pos:start="113:20" pos:end="113:37"><expr pos:start="113:20" pos:end="113:36"><name pos:start="113:20" pos:end="113:34">is_intra_likely</name><operator pos:start="113:35" pos:end="113:36">++</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="115:17" pos:end="117:37">else<block type="pseudo" pos:start="117:20" pos:end="117:37"><block_content pos:start="117:20" pos:end="117:37">

                   <expr_stmt pos:start="117:20" pos:end="117:37"><expr pos:start="117:20" pos:end="117:36"><name pos:start="117:20" pos:end="117:34">is_intra_likely</name><operator pos:start="117:35" pos:end="117:36">--</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

<comment type="line" pos:start="125:1" pos:end="125:73">//printf("is_intra_likely: %d type:%d\n", is_intra_likely, s-&gt;pict_type);</comment>

    <return pos:start="127:5" pos:end="127:31">return <expr pos:start="127:12" pos:end="127:30"><name pos:start="127:12" pos:end="127:26">is_intra_likely</name> <operator pos:start="127:28" pos:end="127:28">&gt;</operator> <literal type="number" pos:start="127:30" pos:end="127:30">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
