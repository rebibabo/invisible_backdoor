<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/634.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">tgv_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="171:1">{<block_content pos:start="9:5" pos:end="169:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">TgvContext</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name> <init pos:start="13:19" pos:end="13:36">= <expr pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:25">avctx</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">buf_end</name> <init pos:start="15:28" pos:end="15:43">= <expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:32">buf</name> <operator pos:start="15:34" pos:end="15:34">+</operator> <name pos:start="15:36" pos:end="15:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">chunk_type</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:35"><if pos:start="21:5" pos:end="23:35">if <condition pos:start="21:8" pos:end="21:41">(<expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:15">buf_end</name> <operator pos:start="21:17" pos:end="21:17">-</operator> <name pos:start="21:19" pos:end="21:21">buf</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:40">EA_PREAMBLE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:35"><block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:14">chunk_type</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:33"><name pos:start="27:18" pos:end="27:24">AV_RL32</name><argument_list pos:start="27:25" pos:end="27:33">(<argument pos:start="27:26" pos:end="27:32"><expr pos:start="27:26" pos:end="27:32"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:29">buf</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:7">buf</name> <operator pos:start="29:9" pos:end="29:10">+=</operator> <name pos:start="29:12" pos:end="29:27">EA_PREAMBLE_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="75:5"><if pos:start="33:5" pos:end="75:5">if <condition pos:start="33:8" pos:end="33:29">(<expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:18">chunk_type</name><operator pos:start="33:19" pos:end="33:20">==</operator><name pos:start="33:21" pos:end="33:28">kVGT_TAG</name></expr>)</condition> <block pos:start="33:31" pos:end="75:5">{<block_content pos:start="35:9" pos:end="73:9">

        <decl_stmt pos:start="35:9" pos:end="35:25"><decl pos:start="35:9" pos:end="35:21"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:21">pal_count</name></decl>, <decl pos:start="35:24" pos:end="35:24"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:24" pos:end="35:24">i</name></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if<condition pos:start="37:11" pos:end="37:30">(<expr pos:start="37:12" pos:end="37:29"><name pos:start="37:12" pos:end="37:18">buf_end</name> <operator pos:start="37:20" pos:end="37:20">-</operator> <name pos:start="37:22" pos:end="37:24">buf</name> <operator pos:start="37:26" pos:end="37:26">&lt;</operator> <literal type="number" pos:start="37:28" pos:end="37:29">12</literal></expr>)</condition> <block pos:start="37:32" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:22">

            <expr_stmt pos:start="39:13" pos:end="39:64"><expr pos:start="39:13" pos:end="39:63"><call pos:start="39:13" pos:end="39:63"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:63">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">avctx</name></expr></argument>, <argument pos:start="39:27" pos:end="39:40"><expr pos:start="39:27" pos:end="39:40"><name pos:start="39:27" pos:end="39:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="39:43" pos:end="39:62"><expr pos:start="39:43" pos:end="39:62"><literal type="string" pos:start="39:43" pos:end="39:62">"truncated header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">width</name></name>  <operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:36"><name pos:start="47:21" pos:end="47:27">AV_RL16</name><argument_list pos:start="47:28" pos:end="47:36">(<argument pos:start="47:29" pos:end="47:35"><expr pos:start="47:29" pos:end="47:35"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:35"><name pos:start="47:30" pos:end="47:32">buf</name><index pos:start="47:33" pos:end="47:35">[<expr pos:start="47:34" pos:end="47:34"><literal type="number" pos:start="47:34" pos:end="47:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">height</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:27">AV_RL16</name><argument_list pos:start="49:28" pos:end="49:36">(<argument pos:start="49:29" pos:end="49:35"><expr pos:start="49:29" pos:end="49:35"><operator pos:start="49:29" pos:end="49:29">&amp;</operator><name pos:start="49:30" pos:end="49:35"><name pos:start="49:30" pos:end="49:32">buf</name><index pos:start="49:33" pos:end="49:35">[<expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:69">(<expr pos:start="51:13" pos:end="51:68"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:20">avctx</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:27">width</name></name><operator pos:start="51:28" pos:end="51:29">!=</operator><name pos:start="51:30" pos:end="51:37"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:37">width</name></name> <operator pos:start="51:39" pos:end="51:40">||</operator> <name pos:start="51:42" pos:end="51:57"><name pos:start="51:42" pos:end="51:42">s</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:49">avctx</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:57">height</name></name><operator pos:start="51:58" pos:end="51:59">!=</operator><name pos:start="51:60" pos:end="51:68"><name pos:start="51:60" pos:end="51:60">s</name><operator pos:start="51:61" pos:end="51:62">-&gt;</operator><name pos:start="51:63" pos:end="51:68">height</name></name></expr>)</condition> <block pos:start="51:71" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:48">

            <expr_stmt pos:start="53:13" pos:end="53:66"><expr pos:start="53:13" pos:end="53:65"><call pos:start="53:13" pos:end="53:65"><name pos:start="53:13" pos:end="53:34">avcodec_set_dimensions</name><argument_list pos:start="53:35" pos:end="53:65">(<argument pos:start="53:36" pos:end="53:43"><expr pos:start="53:36" pos:end="53:43"><name pos:start="53:36" pos:end="53:43"><name pos:start="53:36" pos:end="53:36">s</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:43">avctx</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:53"><expr pos:start="53:46" pos:end="53:53"><name pos:start="53:46" pos:end="53:53"><name pos:start="53:46" pos:end="53:46">s</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:53">width</name></name></expr></argument>, <argument pos:start="53:56" pos:end="53:64"><expr pos:start="53:56" pos:end="53:64"><name pos:start="53:56" pos:end="53:64"><name pos:start="53:56" pos:end="53:56">s</name><operator pos:start="53:57" pos:end="53:58">-&gt;</operator><name pos:start="53:59" pos:end="53:64">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:43"><expr pos:start="55:13" pos:end="55:42"><call pos:start="55:13" pos:end="55:42"><name pos:start="55:13" pos:end="55:31">cond_release_buffer</name><argument_list pos:start="55:32" pos:end="55:42">(<argument pos:start="55:33" pos:end="55:41"><expr pos:start="55:33" pos:end="55:41"><operator pos:start="55:33" pos:end="55:33">&amp;</operator><name pos:start="55:34" pos:end="55:41"><name pos:start="55:34" pos:end="55:34">s</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:41">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><call pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:31">cond_release_buffer</name><argument_list pos:start="57:32" pos:end="57:47">(<argument pos:start="57:33" pos:end="57:46"><expr pos:start="57:33" pos:end="57:46"><operator pos:start="57:33" pos:end="57:33">&amp;</operator><name pos:start="57:34" pos:end="57:46"><name pos:start="57:34" pos:end="57:34">s</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:46">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:17">pal_count</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:36"><name pos:start="63:21" pos:end="63:27">AV_RL16</name><argument_list pos:start="63:28" pos:end="63:36">(<argument pos:start="63:29" pos:end="63:35"><expr pos:start="63:29" pos:end="63:35"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:32">buf</name><index pos:start="63:33" pos:end="63:35">[<expr pos:start="63:34" pos:end="63:34"><literal type="number" pos:start="63:34" pos:end="63:34">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:11">buf</name> <operator pos:start="65:13" pos:end="65:14">+=</operator> <literal type="number" pos:start="65:16" pos:end="65:17">12</literal></expr>;</expr_stmt>

        <for pos:start="67:9" pos:end="73:9">for<control pos:start="67:12" pos:end="67:77">(<init pos:start="67:13" pos:end="67:16"><expr pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:13">i</name><operator pos:start="67:14" pos:end="67:14">=</operator><literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>;</init> <condition pos:start="67:18" pos:end="67:72"><expr pos:start="67:18" pos:end="67:71"><name pos:start="67:18" pos:end="67:18">i</name><operator pos:start="67:19" pos:end="67:19">&lt;</operator><name pos:start="67:20" pos:end="67:28">pal_count</name> <operator pos:start="67:30" pos:end="67:31">&amp;&amp;</operator> <name pos:start="67:33" pos:end="67:33">i</name><operator pos:start="67:34" pos:end="67:34">&lt;</operator><name pos:start="67:35" pos:end="67:49">AVPALETTE_COUNT</name> <operator pos:start="67:51" pos:end="67:52">&amp;&amp;</operator> <name pos:start="67:54" pos:end="67:60">buf_end</name> <operator pos:start="67:62" pos:end="67:62">-</operator> <name pos:start="67:64" pos:end="67:66">buf</name> <operator pos:start="67:68" pos:end="67:69">&gt;=</operator> <literal type="number" pos:start="67:71" pos:end="67:71">3</literal></expr>;</condition> <incr pos:start="67:74" pos:end="67:76"><expr pos:start="67:74" pos:end="67:76"><name pos:start="67:74" pos:end="67:74">i</name><operator pos:start="67:75" pos:end="67:76">++</operator></expr></incr>)</control> <block pos:start="67:79" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:21">

            <expr_stmt pos:start="69:13" pos:end="69:54"><expr pos:start="69:13" pos:end="69:53"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">palette</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">i</name></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <literal type="number" pos:start="69:29" pos:end="69:32">0xFF</literal> <operator pos:start="69:34" pos:end="69:35">&lt;&lt;</operator> <literal type="number" pos:start="69:37" pos:end="69:38">24</literal> <operator pos:start="69:40" pos:end="69:40">|</operator> <call pos:start="69:42" pos:end="69:53"><name pos:start="69:42" pos:end="69:48">AV_RB24</name><argument_list pos:start="69:49" pos:end="69:53">(<argument pos:start="69:50" pos:end="69:52"><expr pos:start="69:50" pos:end="69:52"><name pos:start="69:50" pos:end="69:52">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:21"><expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:15">buf</name> <operator pos:start="71:17" pos:end="71:18">+=</operator> <literal type="number" pos:start="71:20" pos:end="71:20">3</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="81:18"><if pos:start="79:5" pos:end="81:18">if <condition pos:start="79:8" pos:end="79:59">(<expr pos:start="79:9" pos:end="79:58"><call pos:start="79:9" pos:end="79:58"><name pos:start="79:9" pos:end="79:27">av_image_check_size</name><argument_list pos:start="79:28" pos:end="79:58">(<argument pos:start="79:29" pos:end="79:36"><expr pos:start="79:29" pos:end="79:36"><name pos:start="79:29" pos:end="79:36"><name pos:start="79:29" pos:end="79:29">s</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:36">width</name></name></expr></argument>, <argument pos:start="79:39" pos:end="79:47"><expr pos:start="79:39" pos:end="79:47"><name pos:start="79:39" pos:end="79:47"><name pos:start="79:39" pos:end="79:39">s</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:47">height</name></name></expr></argument>, <argument pos:start="79:50" pos:end="79:50"><expr pos:start="79:50" pos:end="79:50"><literal type="number" pos:start="79:50" pos:end="79:50">0</literal></expr></argument>, <argument pos:start="79:53" pos:end="79:57"><expr pos:start="79:53" pos:end="79:57"><name pos:start="79:53" pos:end="79:57">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:18"><block_content pos:start="81:9" pos:end="81:18">

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:17">/* shuffle */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><call pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:10">FFSWAP</name><argument_list pos:start="87:11" pos:end="87:44">(<argument pos:start="87:12" pos:end="87:18"><expr pos:start="87:12" pos:end="87:18"><name pos:start="87:12" pos:end="87:18">AVFrame</name></expr></argument>, <argument pos:start="87:21" pos:end="87:28"><expr pos:start="87:21" pos:end="87:28"><name pos:start="87:21" pos:end="87:28"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:28">frame</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:43"><expr pos:start="87:31" pos:end="87:43"><name pos:start="87:31" pos:end="87:43"><name pos:start="87:31" pos:end="87:31">s</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:43">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="117:5"><if pos:start="89:5" pos:end="117:5">if <condition pos:start="89:8" pos:end="89:26">(<expr pos:start="89:9" pos:end="89:25"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:25"><name pos:start="89:10" pos:end="89:10">s</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:17">frame</name><operator pos:start="89:18" pos:end="89:18">.</operator><name pos:start="89:19" pos:end="89:22">data</name><index pos:start="89:23" pos:end="89:25">[<expr pos:start="89:24" pos:end="89:24"><literal type="number" pos:start="89:24" pos:end="89:24">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="89:28" pos:end="117:5">{<block_content pos:start="91:9" pos:end="115:9">

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:16">frame</name><operator pos:start="91:17" pos:end="91:17">.</operator><name pos:start="91:18" pos:end="91:26">reference</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <literal type="number" pos:start="91:30" pos:end="91:30">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:54"><expr pos:start="93:9" pos:end="93:53"><name pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">frame</name><operator pos:start="93:17" pos:end="93:17">.</operator><name pos:start="93:18" pos:end="93:29">buffer_hints</name></name> <operator pos:start="93:31" pos:end="93:31">=</operator> <name pos:start="93:33" pos:end="93:53">FF_BUFFER_HINTS_VALID</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:40"><expr pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:16">frame</name><operator pos:start="95:17" pos:end="95:17">.</operator><name pos:start="95:18" pos:end="95:25">linesize</name><index pos:start="95:26" pos:end="95:28">[<expr pos:start="95:27" pos:end="95:27"><literal type="number" pos:start="95:27" pos:end="95:27">0</literal></expr>]</index></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <name pos:start="95:32" pos:end="95:39"><name pos:start="95:32" pos:end="95:32">s</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:39">width</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="99:9" pos:end="99:104">/* allocate additional 12 bytes to accommodate av_memcpy_backptr() OUTBUF_PADDED optimisation */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:62"><expr pos:start="101:9" pos:end="101:61"><name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:16">frame</name><operator pos:start="101:17" pos:end="101:17">.</operator><name pos:start="101:18" pos:end="101:21">data</name><index pos:start="101:22" pos:end="101:24">[<expr pos:start="101:23" pos:end="101:23"><literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>]</index></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <call pos:start="101:28" pos:end="101:61"><name pos:start="101:28" pos:end="101:36">av_malloc</name><argument_list pos:start="101:37" pos:end="101:61">(<argument pos:start="101:38" pos:end="101:60"><expr pos:start="101:38" pos:end="101:60"><name pos:start="101:38" pos:end="101:45"><name pos:start="101:38" pos:end="101:38">s</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:45">width</name></name><operator pos:start="101:46" pos:end="101:46">*</operator><name pos:start="101:47" pos:end="101:55"><name pos:start="101:47" pos:end="101:47">s</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:55">height</name></name> <operator pos:start="101:57" pos:end="101:57">+</operator> <literal type="number" pos:start="101:59" pos:end="101:60">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:35"><if pos:start="103:9" pos:end="105:35">if <condition pos:start="103:12" pos:end="103:30">(<expr pos:start="103:13" pos:end="103:29"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:29"><name pos:start="103:14" pos:end="103:14">s</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:21">frame</name><operator pos:start="103:22" pos:end="103:22">.</operator><name pos:start="103:23" pos:end="103:26">data</name><index pos:start="103:27" pos:end="103:29">[<expr pos:start="103:28" pos:end="103:28"><literal type="number" pos:start="103:28" pos:end="103:28">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:35"><block_content pos:start="105:13" pos:end="105:35">

            <return pos:start="105:13" pos:end="105:35">return <expr pos:start="105:20" pos:end="105:34"><call pos:start="105:20" pos:end="105:34"><name pos:start="105:20" pos:end="105:26">AVERROR</name><argument_list pos:start="105:27" pos:end="105:34">(<argument pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:33"><name pos:start="105:28" pos:end="105:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:53"><expr pos:start="107:9" pos:end="107:52"><name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:16">frame</name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:21">data</name><index pos:start="107:22" pos:end="107:24">[<expr pos:start="107:23" pos:end="107:23"><literal type="number" pos:start="107:23" pos:end="107:23">1</literal></expr>]</index></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <call pos:start="107:28" pos:end="107:52"><name pos:start="107:28" pos:end="107:36">av_malloc</name><argument_list pos:start="107:37" pos:end="107:52">(<argument pos:start="107:38" pos:end="107:51"><expr pos:start="107:38" pos:end="107:51"><name pos:start="107:38" pos:end="107:51">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:30">(<expr pos:start="109:13" pos:end="109:29"><operator pos:start="109:13" pos:end="109:13">!</operator><name pos:start="109:14" pos:end="109:29"><name pos:start="109:14" pos:end="109:14">s</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:21">frame</name><operator pos:start="109:22" pos:end="109:22">.</operator><name pos:start="109:23" pos:end="109:26">data</name><index pos:start="109:27" pos:end="109:29">[<expr pos:start="109:28" pos:end="109:28"><literal type="number" pos:start="109:28" pos:end="109:28">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="109:32" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:35">

            <expr_stmt pos:start="111:13" pos:end="111:40"><expr pos:start="111:13" pos:end="111:39"><call pos:start="111:13" pos:end="111:39"><name pos:start="111:13" pos:end="111:20">av_freep</name><argument_list pos:start="111:21" pos:end="111:39">(<argument pos:start="111:22" pos:end="111:38"><expr pos:start="111:22" pos:end="111:38"><operator pos:start="111:22" pos:end="111:22">&amp;</operator><name pos:start="111:23" pos:end="111:38"><name pos:start="111:23" pos:end="111:23">s</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:30">frame</name><operator pos:start="111:31" pos:end="111:31">.</operator><name pos:start="111:32" pos:end="111:35">data</name><index pos:start="111:36" pos:end="111:38">[<expr pos:start="111:37" pos:end="111:37"><literal type="number" pos:start="111:37" pos:end="111:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:35">return <expr pos:start="113:20" pos:end="113:34"><call pos:start="113:20" pos:end="113:34"><name pos:start="113:20" pos:end="113:26">AVERROR</name><argument_list pos:start="113:27" pos:end="113:34">(<argument pos:start="113:28" pos:end="113:33"><expr pos:start="113:28" pos:end="113:33"><name pos:start="113:28" pos:end="113:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:57"><expr pos:start="119:5" pos:end="119:56"><call pos:start="119:5" pos:end="119:56"><name pos:start="119:5" pos:end="119:10">memcpy</name><argument_list pos:start="119:11" pos:end="119:56">(<argument pos:start="119:12" pos:end="119:27"><expr pos:start="119:12" pos:end="119:27"><name pos:start="119:12" pos:end="119:27"><name pos:start="119:12" pos:end="119:12">s</name><operator pos:start="119:13" pos:end="119:14">-&gt;</operator><name pos:start="119:15" pos:end="119:19">frame</name><operator pos:start="119:20" pos:end="119:20">.</operator><name pos:start="119:21" pos:end="119:24">data</name><index pos:start="119:25" pos:end="119:27">[<expr pos:start="119:26" pos:end="119:26"><literal type="number" pos:start="119:26" pos:end="119:26">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:30" pos:end="119:39"><expr pos:start="119:30" pos:end="119:39"><name pos:start="119:30" pos:end="119:39"><name pos:start="119:30" pos:end="119:30">s</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:39">palette</name></name></expr></argument>, <argument pos:start="119:42" pos:end="119:55"><expr pos:start="119:42" pos:end="119:55"><name pos:start="119:42" pos:end="119:55">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="123:5" pos:end="159:5"><if pos:start="123:5" pos:end="137:5">if<condition pos:start="123:7" pos:end="123:28">(<expr pos:start="123:8" pos:end="123:27"><name pos:start="123:8" pos:end="123:17">chunk_type</name><operator pos:start="123:18" pos:end="123:19">==</operator><name pos:start="123:20" pos:end="123:27">kVGT_TAG</name></expr>)</condition> <block pos:start="123:30" pos:end="137:5">{<block_content pos:start="125:9" pos:end="135:9">

        <expr_stmt pos:start="125:9" pos:end="125:31"><expr pos:start="125:9" pos:end="125:30"><name pos:start="125:9" pos:end="125:26"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:16">frame</name><operator pos:start="125:17" pos:end="125:17">.</operator><name pos:start="125:18" pos:end="125:26">key_frame</name></name> <operator pos:start="125:28" pos:end="125:28">=</operator> <literal type="number" pos:start="125:30" pos:end="125:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:47"><expr pos:start="127:9" pos:end="127:46"><name pos:start="127:9" pos:end="127:26"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:16">frame</name><operator pos:start="127:17" pos:end="127:17">.</operator><name pos:start="127:18" pos:end="127:26">pict_type</name></name> <operator pos:start="127:28" pos:end="127:28">=</operator> <name pos:start="127:30" pos:end="127:46">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="135:9"><if pos:start="129:9" pos:end="135:9">if <condition pos:start="129:12" pos:end="129:88">(<expr pos:start="129:13" pos:end="129:87"><call pos:start="129:13" pos:end="129:85"><name pos:start="129:13" pos:end="129:18">unpack</name><argument_list pos:start="129:19" pos:end="129:85">(<argument pos:start="129:20" pos:end="129:22"><expr pos:start="129:20" pos:end="129:22"><name pos:start="129:20" pos:end="129:22">buf</name></expr></argument>, <argument pos:start="129:25" pos:end="129:31"><expr pos:start="129:25" pos:end="129:31"><name pos:start="129:25" pos:end="129:31">buf_end</name></expr></argument>, <argument pos:start="129:34" pos:end="129:49"><expr pos:start="129:34" pos:end="129:49"><name pos:start="129:34" pos:end="129:49"><name pos:start="129:34" pos:end="129:34">s</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:41">frame</name><operator pos:start="129:42" pos:end="129:42">.</operator><name pos:start="129:43" pos:end="129:46">data</name><index pos:start="129:47" pos:end="129:49">[<expr pos:start="129:48" pos:end="129:48"><literal type="number" pos:start="129:48" pos:end="129:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="129:52" pos:end="129:66"><expr pos:start="129:52" pos:end="129:66"><name pos:start="129:52" pos:end="129:66"><name pos:start="129:52" pos:end="129:52">s</name><operator pos:start="129:53" pos:end="129:54">-&gt;</operator><name pos:start="129:55" pos:end="129:59">avctx</name><operator pos:start="129:60" pos:end="129:61">-&gt;</operator><name pos:start="129:62" pos:end="129:66">width</name></name></expr></argument>, <argument pos:start="129:69" pos:end="129:84"><expr pos:start="129:69" pos:end="129:84"><name pos:start="129:69" pos:end="129:84"><name pos:start="129:69" pos:end="129:69">s</name><operator pos:start="129:70" pos:end="129:71">-&gt;</operator><name pos:start="129:72" pos:end="129:76">avctx</name><operator pos:start="129:77" pos:end="129:78">-&gt;</operator><name pos:start="129:79" pos:end="129:84">height</name></name></expr></argument>)</argument_list></call><operator pos:start="129:86" pos:end="129:86">&lt;</operator><literal type="number" pos:start="129:87" pos:end="129:87">0</literal></expr>)</condition> <block pos:start="129:90" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:22">

            <expr_stmt pos:start="131:13" pos:end="131:69"><expr pos:start="131:13" pos:end="131:68"><call pos:start="131:13" pos:end="131:68"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="131:68">(<argument pos:start="131:20" pos:end="131:24"><expr pos:start="131:20" pos:end="131:24"><name pos:start="131:20" pos:end="131:24">avctx</name></expr></argument>, <argument pos:start="131:27" pos:end="131:40"><expr pos:start="131:27" pos:end="131:40"><name pos:start="131:27" pos:end="131:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="131:43" pos:end="131:67"><expr pos:start="131:43" pos:end="131:67"><literal type="string" pos:start="131:43" pos:end="131:67">"truncated intra frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:22">return <expr pos:start="133:20" pos:end="133:21"><operator pos:start="133:20" pos:end="133:20">-</operator><literal type="number" pos:start="133:21" pos:end="133:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="137:6" pos:end="159:5">else<block pos:start="137:10" pos:end="159:5">{<block_content pos:start="139:9" pos:end="157:9">

        <if_stmt pos:start="139:9" pos:end="145:9"><if pos:start="139:9" pos:end="145:9">if <condition pos:start="139:12" pos:end="139:35">(<expr pos:start="139:13" pos:end="139:34"><operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:34"><name pos:start="139:14" pos:end="139:14">s</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:26">last_frame</name><operator pos:start="139:27" pos:end="139:27">.</operator><name pos:start="139:28" pos:end="139:31">data</name><index pos:start="139:32" pos:end="139:34">[<expr pos:start="139:33" pos:end="139:33"><literal type="number" pos:start="139:33" pos:end="139:33">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="139:37" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:28">

            <expr_stmt pos:start="141:13" pos:end="141:93"><expr pos:start="141:13" pos:end="141:92"><call pos:start="141:13" pos:end="141:92"><name pos:start="141:13" pos:end="141:18">av_log</name><argument_list pos:start="141:19" pos:end="141:92">(<argument pos:start="141:20" pos:end="141:24"><expr pos:start="141:20" pos:end="141:24"><name pos:start="141:20" pos:end="141:24">avctx</name></expr></argument>, <argument pos:start="141:27" pos:end="141:40"><expr pos:start="141:27" pos:end="141:40"><name pos:start="141:27" pos:end="141:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="141:43" pos:end="141:91"><expr pos:start="141:43" pos:end="141:91"><literal type="string" pos:start="141:43" pos:end="141:91">"inter frame without corresponding intra frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="143:13" pos:end="143:28">return <expr pos:start="143:20" pos:end="143:27"><name pos:start="143:20" pos:end="143:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:16">frame</name><operator pos:start="147:17" pos:end="147:17">.</operator><name pos:start="147:18" pos:end="147:26">key_frame</name></name> <operator pos:start="147:28" pos:end="147:28">=</operator> <literal type="number" pos:start="147:30" pos:end="147:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:47"><expr pos:start="149:9" pos:end="149:46"><name pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:16">frame</name><operator pos:start="149:17" pos:end="149:17">.</operator><name pos:start="149:18" pos:end="149:26">pict_type</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="157:9"><if pos:start="151:9" pos:end="157:9">if <condition pos:start="151:12" pos:end="151:48">(<expr pos:start="151:13" pos:end="151:47"><call pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:28">tgv_decode_inter</name><argument_list pos:start="151:29" pos:end="151:45">(<argument pos:start="151:30" pos:end="151:30"><expr pos:start="151:30" pos:end="151:30"><name pos:start="151:30" pos:end="151:30">s</name></expr></argument>, <argument pos:start="151:33" pos:end="151:35"><expr pos:start="151:33" pos:end="151:35"><name pos:start="151:33" pos:end="151:35">buf</name></expr></argument>, <argument pos:start="151:38" pos:end="151:44"><expr pos:start="151:38" pos:end="151:44"><name pos:start="151:38" pos:end="151:44">buf_end</name></expr></argument>)</argument_list></call><operator pos:start="151:46" pos:end="151:46">&lt;</operator><literal type="number" pos:start="151:47" pos:end="151:47">0</literal></expr>)</condition> <block pos:start="151:50" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:22">

            <expr_stmt pos:start="153:13" pos:end="153:69"><expr pos:start="153:13" pos:end="153:68"><call pos:start="153:13" pos:end="153:68"><name pos:start="153:13" pos:end="153:18">av_log</name><argument_list pos:start="153:19" pos:end="153:68">(<argument pos:start="153:20" pos:end="153:24"><expr pos:start="153:20" pos:end="153:24"><name pos:start="153:20" pos:end="153:24">avctx</name></expr></argument>, <argument pos:start="153:27" pos:end="153:40"><expr pos:start="153:27" pos:end="153:40"><name pos:start="153:27" pos:end="153:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="153:43" pos:end="153:67"><expr pos:start="153:43" pos:end="153:67"><literal type="string" pos:start="153:43" pos:end="153:67">"truncated inter frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="155:13" pos:end="155:22">return <expr pos:start="155:20" pos:end="155:21"><operator pos:start="155:20" pos:end="155:20">-</operator><literal type="number" pos:start="155:21" pos:end="155:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:33"><expr pos:start="163:5" pos:end="163:32"><operator pos:start="163:5" pos:end="163:5">*</operator><name pos:start="163:6" pos:end="163:14">data_size</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <sizeof pos:start="163:18" pos:end="163:32">sizeof<argument_list pos:start="163:24" pos:end="163:32">(<argument pos:start="163:25" pos:end="163:31"><expr pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:31"><expr pos:start="165:5" pos:end="165:30"><operator pos:start="165:5" pos:end="165:5">*</operator><operator pos:start="165:6" pos:end="165:6">(</operator><name pos:start="165:7" pos:end="165:13">AVFrame</name><operator pos:start="165:14" pos:end="165:14">*</operator><operator pos:start="165:15" pos:end="165:15">)</operator><name pos:start="165:16" pos:end="165:19">data</name> <operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:30"><name pos:start="165:23" pos:end="165:23">s</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:30">frame</name></name></expr>;</expr_stmt>



    <return pos:start="169:5" pos:end="169:20">return <expr pos:start="169:12" pos:end="169:19"><name pos:start="169:12" pos:end="169:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
