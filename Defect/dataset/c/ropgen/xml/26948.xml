<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26948.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:32">pci_get_dev_dict</name><parameter_list pos:start="1:33" pos:end="1:74">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">PCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:60"><decl pos:start="1:50" pos:end="1:60"><type pos:start="1:50" pos:end="1:60"><name pos:start="1:50" pos:end="1:55">PCIBus</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">bus</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:73"><decl pos:start="1:63" pos:end="1:73"><type pos:start="1:63" pos:end="1:73"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:73">bus_num</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:15">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">class</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QObject</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">obj</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="23:64"><expr pos:start="11:5" pos:end="23:63"><name pos:start="11:5" pos:end="11:7">obj</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="23:63"><name pos:start="11:11" pos:end="11:28">qobject_from_jsonf</name><argument_list pos:start="11:29" pos:end="23:63">(<argument pos:start="11:30" pos:end="13:48"><expr pos:start="11:30" pos:end="13:48"><literal type="string" pos:start="11:30" pos:end="11:71">"{ 'bus': %d, 'slot': %d, 'function': %d,"</literal>                                       <literal type="string" pos:start="11:111" pos:end="11:154">"'class_info': %p, 'id': %p, 'regions': %p,"</literal>

                              <literal type="string" pos:start="13:31" pos:end="13:48">" 'qdev_id': %s }"</literal></expr></argument>,

                              <argument pos:start="15:31" pos:end="15:37"><expr pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:37">bus_num</name></expr></argument>,

                              <argument pos:start="17:31" pos:end="17:50"><expr pos:start="17:31" pos:end="17:50"><call pos:start="17:31" pos:end="17:50"><name pos:start="17:31" pos:end="17:38">PCI_SLOT</name><argument_list pos:start="17:39" pos:end="17:50">(<argument pos:start="17:40" pos:end="17:49"><expr pos:start="17:40" pos:end="17:49"><name pos:start="17:40" pos:end="17:49"><name pos:start="17:40" pos:end="17:42">dev</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:49">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:53" pos:end="17:72"><expr pos:start="17:53" pos:end="17:72"><call pos:start="17:53" pos:end="17:72"><name pos:start="17:53" pos:end="17:60">PCI_FUNC</name><argument_list pos:start="17:61" pos:end="17:72">(<argument pos:start="17:62" pos:end="17:71"><expr pos:start="17:62" pos:end="17:71"><name pos:start="17:62" pos:end="17:71"><name pos:start="17:62" pos:end="17:64">dev</name><operator pos:start="17:65" pos:end="17:66">-&gt;</operator><name pos:start="17:67" pos:end="17:71">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="19:31" pos:end="19:52"><expr pos:start="19:31" pos:end="19:52"><call pos:start="19:31" pos:end="19:52"><name pos:start="19:31" pos:end="19:47">pci_get_dev_class</name><argument_list pos:start="19:48" pos:end="19:52">(<argument pos:start="19:49" pos:end="19:51"><expr pos:start="19:49" pos:end="19:51"><name pos:start="19:49" pos:end="19:51">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:55" pos:end="19:73"><expr pos:start="19:55" pos:end="19:73"><call pos:start="19:55" pos:end="19:73"><name pos:start="19:55" pos:end="19:68">pci_get_dev_id</name><argument_list pos:start="19:69" pos:end="19:73">(<argument pos:start="19:70" pos:end="19:72"><expr pos:start="19:70" pos:end="19:72"><name pos:start="19:70" pos:end="19:72">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="21:31" pos:end="21:55"><expr pos:start="21:31" pos:end="21:55"><call pos:start="21:31" pos:end="21:55"><name pos:start="21:31" pos:end="21:50">pci_get_regions_list</name><argument_list pos:start="21:51" pos:end="21:55">(<argument pos:start="21:52" pos:end="21:54"><expr pos:start="21:52" pos:end="21:54"><name pos:start="21:52" pos:end="21:54">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="23:31" pos:end="23:62"><expr pos:start="23:31" pos:end="23:62"><ternary pos:start="23:31" pos:end="23:62"><condition pos:start="23:31" pos:end="23:44"><expr pos:start="23:31" pos:end="23:42"><name pos:start="23:31" pos:end="23:42"><name pos:start="23:31" pos:end="23:33">dev</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:39">qdev</name><operator pos:start="23:40" pos:end="23:40">.</operator><name pos:start="23:41" pos:end="23:42">id</name></name></expr> ?</condition><then pos:start="23:46" pos:end="23:57"> <expr pos:start="23:46" pos:end="23:57"><name pos:start="23:46" pos:end="23:57"><name pos:start="23:46" pos:end="23:48">dev</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:54">qdev</name><operator pos:start="23:55" pos:end="23:55">.</operator><name pos:start="23:56" pos:end="23:57">id</name></name></expr> </then><else pos:start="23:59" pos:end="23:62">: <expr pos:start="23:61" pos:end="23:62"><literal type="string" pos:start="23:61" pos:end="23:62">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:44">(<expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:11">dev</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:19">config</name><index pos:start="27:20" pos:end="27:38">[<expr pos:start="27:21" pos:end="27:37"><name pos:start="27:21" pos:end="27:37">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="27:40" pos:end="27:41">!=</operator> <literal type="number" pos:start="27:43" pos:end="27:43">0</literal></expr>)</condition> <block pos:start="27:46" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:80">

        <decl_stmt pos:start="29:9" pos:end="29:45"><decl pos:start="29:9" pos:end="29:44"><type pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:13">QDict</name> <modifier pos:start="29:15" pos:end="29:15">*</modifier></type><name pos:start="29:16" pos:end="29:20">qdict</name> <init pos:start="29:22" pos:end="29:44">= <expr pos:start="29:24" pos:end="29:44"><call pos:start="29:24" pos:end="29:44"><name pos:start="29:24" pos:end="29:39">qobject_to_qdict</name><argument_list pos:start="29:40" pos:end="29:44">(<argument pos:start="29:41" pos:end="29:43"><expr pos:start="29:41" pos:end="29:43"><name pos:start="29:41" pos:end="29:43">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:80"><expr pos:start="31:9" pos:end="31:79"><call pos:start="31:9" pos:end="31:79"><name pos:start="31:9" pos:end="31:17">qdict_put</name><argument_list pos:start="31:18" pos:end="31:79">(<argument pos:start="31:19" pos:end="31:23"><expr pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:23">qdict</name></expr></argument>, <argument pos:start="31:26" pos:end="31:30"><expr pos:start="31:26" pos:end="31:30"><literal type="string" pos:start="31:26" pos:end="31:30">"irq"</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:78"><expr pos:start="31:33" pos:end="31:78"><call pos:start="31:33" pos:end="31:78"><name pos:start="31:33" pos:end="31:45">qint_from_int</name><argument_list pos:start="31:46" pos:end="31:78">(<argument pos:start="31:47" pos:end="31:77"><expr pos:start="31:47" pos:end="31:77"><name pos:start="31:47" pos:end="31:77"><name pos:start="31:47" pos:end="31:49">dev</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:57">config</name><index pos:start="31:58" pos:end="31:77">[<expr pos:start="31:59" pos:end="31:76"><name pos:start="31:59" pos:end="31:76">PCI_INTERRUPT_LINE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:57"><expr pos:start="37:5" pos:end="37:56"><name pos:start="37:5" pos:end="37:9">class</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:24">pci_get_word</name><argument_list pos:start="37:25" pos:end="37:56">(<argument pos:start="37:26" pos:end="37:55"><expr pos:start="37:26" pos:end="37:55"><name pos:start="37:26" pos:end="37:36"><name pos:start="37:26" pos:end="37:28">dev</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:36">config</name></name> <operator pos:start="37:38" pos:end="37:38">+</operator> <name pos:start="37:40" pos:end="37:55">PCI_CLASS_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="95:5"><if pos:start="39:5" pos:end="95:5">if <condition pos:start="39:8" pos:end="39:24">(<expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:13">class</name> <operator pos:start="39:15" pos:end="39:16">==</operator> <literal type="number" pos:start="39:18" pos:end="39:23">0x0604</literal></expr>)</condition> <block pos:start="39:26" pos:end="95:5">{<block_content pos:start="41:9" pos:end="93:55">

        <decl_stmt pos:start="41:9" pos:end="41:21"><decl pos:start="41:9" pos:end="41:20"><type pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:13">QDict</name> <modifier pos:start="41:15" pos:end="41:15">*</modifier></type><name pos:start="41:16" pos:end="41:20">qdict</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:28"><decl pos:start="43:9" pos:end="43:27"><type pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:15">QObject</name> <modifier pos:start="43:17" pos:end="43:17">*</modifier></type><name pos:start="43:18" pos:end="43:27">pci_bridge</name></decl>;</decl_stmt>



        <expr_stmt pos:start="47:9" pos:end="75:64"><expr pos:start="47:9" pos:end="75:63"><name pos:start="47:9" pos:end="47:18">pci_bridge</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <call pos:start="47:22" pos:end="75:63"><name pos:start="47:22" pos:end="47:39">qobject_from_jsonf</name><argument_list pos:start="47:40" pos:end="75:63">(<argument pos:start="47:41" pos:end="55:78"><expr pos:start="47:41" pos:end="55:78"><literal type="string" pos:start="47:41" pos:end="47:51">"{ 'bus': "</literal>

        <literal type="string" pos:start="49:9" pos:end="49:64">"{ 'number': %d, 'secondary': %d, 'subordinate': %d }, "</literal>

        <literal type="string" pos:start="51:9" pos:end="51:33">"'io_range': { 'base': %"</literal> <name pos:start="51:35" pos:end="51:40">PRId64</name> <literal type="string" pos:start="51:42" pos:end="51:55">", 'limit': %"</literal> <name pos:start="51:57" pos:end="51:62">PRId64</name> <literal type="string" pos:start="51:64" pos:end="51:68">"}, "</literal>

        <literal type="string" pos:start="53:9" pos:end="53:37">"'memory_range': { 'base': %"</literal> <name pos:start="53:39" pos:end="53:44">PRId64</name> <literal type="string" pos:start="53:46" pos:end="53:59">", 'limit': %"</literal> <name pos:start="53:61" pos:end="53:66">PRId64</name> <literal type="string" pos:start="53:68" pos:end="53:72">"}, "</literal>

        <literal type="string" pos:start="55:9" pos:end="55:43">"'prefetchable_range': { 'base': %"</literal> <name pos:start="55:45" pos:end="55:50">PRId64</name> <literal type="string" pos:start="55:52" pos:end="55:65">", 'limit': %"</literal> <name pos:start="55:67" pos:end="55:72">PRId64</name> <literal type="string" pos:start="55:74" pos:end="55:78">"} }"</literal></expr></argument>,

        <argument pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:11">dev</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:19">config</name><index pos:start="57:20" pos:end="57:25">[<expr pos:start="57:21" pos:end="57:24"><literal type="number" pos:start="57:21" pos:end="57:24">0x19</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:28" pos:end="57:57"><expr pos:start="57:28" pos:end="57:57"><name pos:start="57:28" pos:end="57:57"><name pos:start="57:28" pos:end="57:30">dev</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:38">config</name><index pos:start="57:39" pos:end="57:57">[<expr pos:start="57:40" pos:end="57:56"><name pos:start="57:40" pos:end="57:56">PCI_SECONDARY_BUS</name></expr>]</index></name></expr></argument>,

        <argument pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:11">dev</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:19">config</name><index pos:start="59:20" pos:end="59:40">[<expr pos:start="59:21" pos:end="59:39"><name pos:start="59:21" pos:end="59:39">PCI_SUBORDINATE_BUS</name></expr>]</index></name></expr></argument>,

        <argument pos:start="61:9" pos:end="61:59"><expr pos:start="61:9" pos:end="61:59"><call pos:start="61:9" pos:end="61:59"><name pos:start="61:9" pos:end="61:27">pci_bridge_get_base</name><argument_list pos:start="61:28" pos:end="61:59">(<argument pos:start="61:29" pos:end="61:31"><expr pos:start="61:29" pos:end="61:31"><name pos:start="61:29" pos:end="61:31">dev</name></expr></argument>, <argument pos:start="61:34" pos:end="61:58"><expr pos:start="61:34" pos:end="61:58"><name pos:start="61:34" pos:end="61:58">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="63:9" pos:end="63:60"><expr pos:start="63:9" pos:end="63:60"><call pos:start="63:9" pos:end="63:60"><name pos:start="63:9" pos:end="63:28">pci_bridge_get_limit</name><argument_list pos:start="63:29" pos:end="63:60">(<argument pos:start="63:30" pos:end="63:32"><expr pos:start="63:30" pos:end="63:32"><name pos:start="63:30" pos:end="63:32">dev</name></expr></argument>, <argument pos:start="63:35" pos:end="63:59"><expr pos:start="63:35" pos:end="63:59"><name pos:start="63:35" pos:end="63:59">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="65:9" pos:end="65:63"><expr pos:start="65:9" pos:end="65:63"><call pos:start="65:9" pos:end="65:63"><name pos:start="65:9" pos:end="65:27">pci_bridge_get_base</name><argument_list pos:start="65:28" pos:end="65:63">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">dev</name></expr></argument>, <argument pos:start="65:34" pos:end="65:62"><expr pos:start="65:34" pos:end="65:62"><name pos:start="65:34" pos:end="65:62">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="67:9" pos:end="67:64"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:28">pci_bridge_get_limit</name><argument_list pos:start="67:29" pos:end="67:64">(<argument pos:start="67:30" pos:end="67:32"><expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:32">dev</name></expr></argument>, <argument pos:start="67:35" pos:end="67:63"><expr pos:start="67:35" pos:end="67:63"><name pos:start="67:35" pos:end="67:63">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="69:9" pos:end="71:61"><expr pos:start="69:9" pos:end="71:61"><call pos:start="69:9" pos:end="71:61"><name pos:start="69:9" pos:end="69:27">pci_bridge_get_base</name><argument_list pos:start="69:28" pos:end="71:61">(<argument pos:start="69:29" pos:end="69:31"><expr pos:start="69:29" pos:end="69:31"><name pos:start="69:29" pos:end="69:31">dev</name></expr></argument>, <argument pos:start="69:34" pos:end="71:60"><expr pos:start="69:34" pos:end="71:60"><name pos:start="69:34" pos:end="69:62">PCI_BASE_ADDRESS_SPACE_MEMORY</name> <operator pos:start="69:64" pos:end="69:64">|</operator>

                               <name pos:start="71:32" pos:end="71:60">PCI_BASE_ADDRESS_MEM_PREFETCH</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="73:9" pos:end="75:62"><expr pos:start="73:9" pos:end="75:62"><call pos:start="73:9" pos:end="75:62"><name pos:start="73:9" pos:end="73:28">pci_bridge_get_limit</name><argument_list pos:start="73:29" pos:end="75:62">(<argument pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><name pos:start="73:30" pos:end="73:32">dev</name></expr></argument>, <argument pos:start="73:35" pos:end="75:61"><expr pos:start="73:35" pos:end="75:61"><name pos:start="73:35" pos:end="73:63">PCI_BASE_ADDRESS_SPACE_MEMORY</name> <operator pos:start="73:65" pos:end="73:65">|</operator>

                                <name pos:start="75:33" pos:end="75:61">PCI_BASE_ADDRESS_MEM_PREFETCH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="87:9"><if pos:start="79:9" pos:end="87:9">if <condition pos:start="79:12" pos:end="79:35">(<expr pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:15">dev</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:23">config</name><index pos:start="79:24" pos:end="79:29">[<expr pos:start="79:25" pos:end="79:28"><literal type="number" pos:start="79:25" pos:end="79:28">0x19</literal></expr>]</index></name> <operator pos:start="79:31" pos:end="79:32">!=</operator> <literal type="number" pos:start="79:34" pos:end="79:34">0</literal></expr>)</condition> <block pos:start="79:37" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:72">

            <expr_stmt pos:start="81:13" pos:end="81:49"><expr pos:start="81:13" pos:end="81:48"><name pos:start="81:13" pos:end="81:17">qdict</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <call pos:start="81:21" pos:end="81:48"><name pos:start="81:21" pos:end="81:36">qobject_to_qdict</name><argument_list pos:start="81:37" pos:end="81:48">(<argument pos:start="81:38" pos:end="81:47"><expr pos:start="81:38" pos:end="81:47"><name pos:start="81:38" pos:end="81:47">pci_bridge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="85:72"><expr pos:start="83:13" pos:end="85:71"><call pos:start="83:13" pos:end="85:71"><name pos:start="83:13" pos:end="83:25">qdict_put_obj</name><argument_list pos:start="83:26" pos:end="85:71">(<argument pos:start="83:27" pos:end="83:31"><expr pos:start="83:27" pos:end="83:31"><name pos:start="83:27" pos:end="83:31">qdict</name></expr></argument>, <argument pos:start="83:34" pos:end="83:42"><expr pos:start="83:34" pos:end="83:42"><literal type="string" pos:start="83:34" pos:end="83:42">"devices"</literal></expr></argument>,

                          <argument pos:start="85:27" pos:end="85:70"><expr pos:start="85:27" pos:end="85:70"><call pos:start="85:27" pos:end="85:70"><name pos:start="85:27" pos:end="85:46">pci_get_devices_list</name><argument_list pos:start="85:47" pos:end="85:70">(<argument pos:start="85:48" pos:end="85:50"><expr pos:start="85:48" pos:end="85:50"><name pos:start="85:48" pos:end="85:50">bus</name></expr></argument>, <argument pos:start="85:53" pos:end="85:69"><expr pos:start="85:53" pos:end="85:69"><name pos:start="85:53" pos:end="85:69"><name pos:start="85:53" pos:end="85:55">dev</name><operator pos:start="85:56" pos:end="85:57">-&gt;</operator><name pos:start="85:58" pos:end="85:63">config</name><index pos:start="85:64" pos:end="85:69">[<expr pos:start="85:65" pos:end="85:68"><literal type="number" pos:start="85:65" pos:end="85:68">0x19</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:38"><expr pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:13">qdict</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:32">qobject_to_qdict</name><argument_list pos:start="91:33" pos:end="91:37">(<argument pos:start="91:34" pos:end="91:36"><expr pos:start="91:34" pos:end="91:36"><name pos:start="91:34" pos:end="91:36">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:55"><expr pos:start="93:9" pos:end="93:54"><call pos:start="93:9" pos:end="93:54"><name pos:start="93:9" pos:end="93:21">qdict_put_obj</name><argument_list pos:start="93:22" pos:end="93:54">(<argument pos:start="93:23" pos:end="93:27"><expr pos:start="93:23" pos:end="93:27"><name pos:start="93:23" pos:end="93:27">qdict</name></expr></argument>, <argument pos:start="93:30" pos:end="93:41"><expr pos:start="93:30" pos:end="93:41"><literal type="string" pos:start="93:30" pos:end="93:41">"pci_bridge"</literal></expr></argument>, <argument pos:start="93:44" pos:end="93:53"><expr pos:start="93:44" pos:end="93:53"><name pos:start="93:44" pos:end="93:53">pci_bridge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="99:5" pos:end="99:15">return <expr pos:start="99:12" pos:end="99:14"><name pos:start="99:12" pos:end="99:14">obj</name></expr>;</return>

</block_content>}</block></function>
</unit>
