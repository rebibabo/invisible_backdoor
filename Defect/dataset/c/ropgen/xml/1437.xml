<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1437.c" pos:tabs="8"><function pos:start="1:1" pos:end="36:29"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mxf_write_footer</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="36:29">{<block_content pos:start="3:5" pos:end="36:29">
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">MXFContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">mxf</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:28"><decl pos:start="4:5" pos:end="4:27"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:15">AVIOContext</name> <modifier pos:start="4:17" pos:end="4:17">*</modifier></type><name pos:start="4:18" pos:end="4:19">pb</name> <init pos:start="4:21" pos:end="4:27">= <expr pos:start="4:23" pos:end="4:27"><name pos:start="4:23" pos:end="4:27"><name pos:start="4:23" pos:end="4:23">s</name><operator pos:start="4:24" pos:end="4:25">-&gt;</operator><name pos:start="4:26" pos:end="4:27">pb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:72"><expr pos:start="6:5" pos:end="6:71"><name pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:7">mxf</name><operator pos:start="6:8" pos:end="6:9">-&gt;</operator><name pos:start="6:10" pos:end="6:17">duration</name></name> <operator pos:start="6:19" pos:end="6:19">=</operator> <name pos:start="6:21" pos:end="6:47"><name pos:start="6:21" pos:end="6:23">mxf</name><operator pos:start="6:24" pos:end="6:25">-&gt;</operator><name pos:start="6:26" pos:end="6:47">last_indexed_edit_unit</name></name> <operator pos:start="6:49" pos:end="6:49">+</operator> <name pos:start="6:51" pos:end="6:71"><name pos:start="6:51" pos:end="6:53">mxf</name><operator pos:start="6:54" pos:end="6:55">-&gt;</operator><name pos:start="6:56" pos:end="6:71">edit_units_count</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:26"><expr pos:start="7:5" pos:end="7:25"><call pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:22">mxf_write_klv_fill</name><argument_list pos:start="7:23" pos:end="7:25">(<argument pos:start="7:24" pos:end="7:24"><expr pos:start="7:24" pos:end="7:24"><name pos:start="7:24" pos:end="7:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:49"><expr pos:start="8:5" pos:end="8:48"><name pos:start="8:5" pos:end="8:32"><name pos:start="8:5" pos:end="8:7">mxf</name><operator pos:start="8:8" pos:end="8:9">-&gt;</operator><name pos:start="8:10" pos:end="8:32">footer_partition_offset</name></name> <operator pos:start="8:34" pos:end="8:34">=</operator> <call pos:start="8:36" pos:end="8:48"><name pos:start="8:36" pos:end="8:44">avio_tell</name><argument_list pos:start="8:45" pos:end="8:48">(<argument pos:start="8:46" pos:end="8:47"><expr pos:start="8:46" pos:end="8:47"><name pos:start="8:46" pos:end="8:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="36:29"><if pos:start="9:5" pos:end="11:5">if <condition pos:start="9:8" pos:end="9:72">(<expr pos:start="9:9" pos:end="9:71"><name pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:11">mxf</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:33">edit_unit_byte_count</name></name> <operator pos:start="9:35" pos:end="9:36">&amp;&amp;</operator> <name pos:start="9:38" pos:end="9:47"><name pos:start="9:38" pos:end="9:38">s</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:47">oformat</name></name> <operator pos:start="9:49" pos:end="9:50">!=</operator> <operator pos:start="9:52" pos:end="9:52">&amp;</operator><name pos:start="9:53" pos:end="9:71">ff_mxf_opatom_muxer</name></expr>)</condition> <block pos:start="9:74" pos:end="11:5">{<block_content pos:start="10:9" pos:end="10:78"> <comment type="line" pos:start="9:76" pos:end="9:101">// no need to repeat index</comment>
        <if_stmt pos:start="10:9" pos:end="10:78"><if pos:start="10:9" pos:end="10:78">if <condition pos:start="10:12" pos:end="10:78">(<expr pos:start="10:13" pos:end="10:77"><operator pos:start="10:13" pos:end="10:13">(</operator><name pos:start="10:14" pos:end="10:16">err</name> <operator pos:start="10:18" pos:end="10:18">=</operator> <call pos:start="10:20" pos:end="10:72"><name pos:start="10:20" pos:end="10:38">mxf_write_partition</name><argument_list pos:start="10:39" pos:end="10:72">(<argument pos:start="10:40" pos:end="10:40"><expr pos:start="10:40" pos:end="10:40"><name pos:start="10:40" pos:end="10:40">s</name></expr></argument>, <argument pos:start="10:43" pos:end="10:43"><expr pos:start="10:43" pos:end="10:43"><literal type="number" pos:start="10:43" pos:end="10:43">0</literal></expr></argument>, <argument pos:start="10:46" pos:end="10:46"><expr pos:start="10:46" pos:end="10:46"><literal type="number" pos:start="10:46" pos:end="10:46">0</literal></expr></argument>, <argument pos:start="10:49" pos:end="10:68"><expr pos:start="10:49" pos:end="10:68"><name pos:start="10:49" pos:end="10:68">footer_partition_key</name></expr></argument>, <argument pos:start="10:71" pos:end="10:71"><expr pos:start="10:71" pos:end="10:71"><literal type="number" pos:start="10:71" pos:end="10:71">0</literal></expr></argument>)</argument_list></call><operator pos:start="10:73" pos:end="10:73">)</operator> <operator pos:start="10:75" pos:end="10:75">&lt;</operator> <literal type="number" pos:start="10:77" pos:end="10:77">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="11:7" pos:end="36:29">else <block pos:start="11:12" pos:end="36:29">{<block_content pos:start="12:9" pos:end="36:29">
        <if_stmt pos:start="12:9" pos:end="13:30"><if pos:start="12:9" pos:end="13:30">if <condition pos:start="12:12" pos:end="12:78">(<expr pos:start="12:13" pos:end="12:77"><operator pos:start="12:13" pos:end="12:13">(</operator><name pos:start="12:14" pos:end="12:16">err</name> <operator pos:start="12:18" pos:end="12:18">=</operator> <call pos:start="12:20" pos:end="12:72"><name pos:start="12:20" pos:end="12:38">mxf_write_partition</name><argument_list pos:start="12:39" pos:end="12:72">(<argument pos:start="12:40" pos:end="12:40"><expr pos:start="12:40" pos:end="12:40"><name pos:start="12:40" pos:end="12:40">s</name></expr></argument>, <argument pos:start="12:43" pos:end="12:43"><expr pos:start="12:43" pos:end="12:43"><literal type="number" pos:start="12:43" pos:end="12:43">0</literal></expr></argument>, <argument pos:start="12:46" pos:end="12:46"><expr pos:start="12:46" pos:end="12:46"><literal type="number" pos:start="12:46" pos:end="12:46">2</literal></expr></argument>, <argument pos:start="12:49" pos:end="12:68"><expr pos:start="12:49" pos:end="12:68"><name pos:start="12:49" pos:end="12:68">footer_partition_key</name></expr></argument>, <argument pos:start="12:71" pos:end="12:71"><expr pos:start="12:71" pos:end="12:71"><literal type="number" pos:start="12:71" pos:end="12:71">0</literal></expr></argument>)</argument_list></call><operator pos:start="12:73" pos:end="12:73">)</operator> <operator pos:start="12:75" pos:end="12:75">&lt;</operator> <literal type="number" pos:start="12:77" pos:end="12:77">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:30"><block_content pos:start="13:9" pos:end="13:30">
        <expr_stmt pos:start="13:9" pos:end="13:30"><expr pos:start="13:9" pos:end="13:29"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:26">mxf_write_klv_fill</name><argument_list pos:start="13:27" pos:end="13:29">(<argument pos:start="13:28" pos:end="13:28"><expr pos:start="13:28" pos:end="13:28"><name pos:start="13:28" pos:end="13:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:41"><expr pos:start="14:9" pos:end="14:40"><call pos:start="14:9" pos:end="14:40"><name pos:start="14:9" pos:end="14:37">mxf_write_index_table_segment</name><argument_list pos:start="14:38" pos:end="14:40">(<argument pos:start="14:39" pos:end="14:39"><expr pos:start="14:39" pos:end="14:39"><name pos:start="14:39" pos:end="14:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:22">mxf_write_klv_fill</name><argument_list pos:start="15:23" pos:end="15:25">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:35"><expr pos:start="16:5" pos:end="16:34"><call pos:start="16:5" pos:end="16:34"><name pos:start="16:5" pos:end="16:31">mxf_write_random_index_pack</name><argument_list pos:start="16:32" pos:end="16:34">(<argument pos:start="16:33" pos:end="16:33"><expr pos:start="16:33" pos:end="16:33"><name pos:start="16:33" pos:end="16:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="36:29"><if pos:start="17:5" pos:end="36:29">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">pb</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:23">seekable</name></name></expr>)</condition> <block pos:start="17:26" pos:end="36:29">{<block_content pos:start="18:9" pos:end="36:29">
        <if_stmt pos:start="18:9" pos:end="36:29"><if pos:start="18:9" pos:end="36:29">if <condition pos:start="18:12" pos:end="18:47">(<expr pos:start="18:13" pos:end="18:46"><name pos:start="18:13" pos:end="18:22"><name pos:start="18:13" pos:end="18:13">s</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:22">oformat</name></name> <operator pos:start="18:24" pos:end="18:25">==</operator> <operator pos:start="18:27" pos:end="18:27">&amp;</operator><name pos:start="18:28" pos:end="18:46">ff_mxf_opatom_muxer</name></expr>)</condition><block pos:start="18:48" pos:end="36:29">{<block_content pos:start="20:13" pos:end="36:29">
            <comment type="block" pos:start="19:13" pos:end="19:58">/* rewrite body partition to update lengths */</comment>
            <expr_stmt pos:start="20:13" pos:end="20:67"><expr pos:start="20:13" pos:end="20:66"><call pos:start="20:13" pos:end="20:66"><name pos:start="20:13" pos:end="20:21">avio_seek</name><argument_list pos:start="20:22" pos:end="20:66">(<argument pos:start="20:23" pos:end="20:24"><expr pos:start="20:23" pos:end="20:24"><name pos:start="20:23" pos:end="20:24">pb</name></expr></argument>, <argument pos:start="20:27" pos:end="20:55"><expr pos:start="20:27" pos:end="20:55"><name pos:start="20:27" pos:end="20:55"><name pos:start="20:27" pos:end="20:29">mxf</name><operator pos:start="20:30" pos:end="20:31">-&gt;</operator><name pos:start="20:32" pos:end="20:52">body_partition_offset</name><index pos:start="20:53" pos:end="20:55">[<expr pos:start="20:54" pos:end="20:54"><literal type="number" pos:start="20:54" pos:end="20:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="20:58" pos:end="20:65"><expr pos:start="20:58" pos:end="20:65"><name pos:start="20:58" pos:end="20:65">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="21:13" pos:end="22:35"><if pos:start="21:13" pos:end="22:35">if <condition pos:start="21:16" pos:end="21:63">(<expr pos:start="21:17" pos:end="21:62"><operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:20">err</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <call pos:start="21:24" pos:end="21:57"><name pos:start="21:24" pos:end="21:54">mxf_write_opatom_body_partition</name><argument_list pos:start="21:55" pos:end="21:57">(<argument pos:start="21:56" pos:end="21:56"><expr pos:start="21:56" pos:end="21:56"><name pos:start="21:56" pos:end="21:56">s</name></expr></argument>)</argument_list></call><operator pos:start="21:58" pos:end="21:58">)</operator> <operator pos:start="21:60" pos:end="21:60">&lt;</operator> <literal type="number" pos:start="21:62" pos:end="21:62">0</literal></expr>)</condition><block type="pseudo" pos:start="22:9" pos:end="22:35"><block_content pos:start="22:9" pos:end="22:35">
        <expr_stmt pos:start="22:9" pos:end="22:35"><expr pos:start="22:9" pos:end="22:34"><call pos:start="22:9" pos:end="22:34"><name pos:start="22:9" pos:end="22:17">avio_seek</name><argument_list pos:start="22:18" pos:end="22:34">(<argument pos:start="22:19" pos:end="22:20"><expr pos:start="22:19" pos:end="22:20"><name pos:start="22:19" pos:end="22:20">pb</name></expr></argument>, <argument pos:start="22:23" pos:end="22:23"><expr pos:start="22:23" pos:end="22:23"><literal type="number" pos:start="22:23" pos:end="22:23">0</literal></expr></argument>, <argument pos:start="22:26" pos:end="22:33"><expr pos:start="22:26" pos:end="22:33"><name pos:start="22:26" pos:end="22:33">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="23:9" pos:end="36:29"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:76">(<expr pos:start="23:13" pos:end="23:75"><name pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:15">mxf</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:37">edit_unit_byte_count</name></name> <operator pos:start="23:39" pos:end="23:40">&amp;&amp;</operator> <name pos:start="23:42" pos:end="23:51"><name pos:start="23:42" pos:end="23:42">s</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:51">oformat</name></name> <operator pos:start="23:53" pos:end="23:54">!=</operator> <operator pos:start="23:56" pos:end="23:56">&amp;</operator><name pos:start="23:57" pos:end="23:75">ff_mxf_opatom_muxer</name></expr>)</condition> <block pos:start="23:78" pos:end="27:9">{<block_content pos:start="24:13" pos:end="26:45">
            <if_stmt pos:start="24:13" pos:end="25:34"><if pos:start="24:13" pos:end="25:34">if <condition pos:start="24:16" pos:end="24:89">(<expr pos:start="24:17" pos:end="24:88"><operator pos:start="24:17" pos:end="24:17">(</operator><name pos:start="24:18" pos:end="24:20">err</name> <operator pos:start="24:22" pos:end="24:22">=</operator> <call pos:start="24:24" pos:end="24:83"><name pos:start="24:24" pos:end="24:42">mxf_write_partition</name><argument_list pos:start="24:43" pos:end="24:83">(<argument pos:start="24:44" pos:end="24:44"><expr pos:start="24:44" pos:end="24:44"><name pos:start="24:44" pos:end="24:44">s</name></expr></argument>, <argument pos:start="24:47" pos:end="24:47"><expr pos:start="24:47" pos:end="24:47"><literal type="number" pos:start="24:47" pos:end="24:47">1</literal></expr></argument>, <argument pos:start="24:50" pos:end="24:50"><expr pos:start="24:50" pos:end="24:50"><literal type="number" pos:start="24:50" pos:end="24:50">2</literal></expr></argument>, <argument pos:start="24:53" pos:end="24:79"><expr pos:start="24:53" pos:end="24:79"><name pos:start="24:53" pos:end="24:79">header_closed_partition_key</name></expr></argument>, <argument pos:start="24:82" pos:end="24:82"><expr pos:start="24:82" pos:end="24:82"><literal type="number" pos:start="24:82" pos:end="24:82">1</literal></expr></argument>)</argument_list></call><operator pos:start="24:84" pos:end="24:84">)</operator> <operator pos:start="24:86" pos:end="24:86">&lt;</operator> <literal type="number" pos:start="24:88" pos:end="24:88">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:34"><block_content pos:start="25:13" pos:end="25:34">
            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><call pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:30">mxf_write_klv_fill</name><argument_list pos:start="25:31" pos:end="25:33">(<argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:45"><expr pos:start="26:13" pos:end="26:44"><call pos:start="26:13" pos:end="26:44"><name pos:start="26:13" pos:end="26:41">mxf_write_index_table_segment</name><argument_list pos:start="26:42" pos:end="26:44">(<argument pos:start="26:43" pos:end="26:43"><expr pos:start="26:43" pos:end="26:43"><name pos:start="26:43" pos:end="26:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="27:11" pos:end="36:29">else <block pos:start="27:16" pos:end="36:29">{<block_content pos:start="28:13" pos:end="36:29">
            <if_stmt pos:start="28:13" pos:end="30:33"><if pos:start="28:13" pos:end="30:33">if <condition pos:start="28:16" pos:end="28:89">(<expr pos:start="28:17" pos:end="28:88"><operator pos:start="28:17" pos:end="28:17">(</operator><name pos:start="28:18" pos:end="28:20">err</name> <operator pos:start="28:22" pos:end="28:22">=</operator> <call pos:start="28:24" pos:end="28:83"><name pos:start="28:24" pos:end="28:42">mxf_write_partition</name><argument_list pos:start="28:43" pos:end="28:83">(<argument pos:start="28:44" pos:end="28:44"><expr pos:start="28:44" pos:end="28:44"><name pos:start="28:44" pos:end="28:44">s</name></expr></argument>, <argument pos:start="28:47" pos:end="28:47"><expr pos:start="28:47" pos:end="28:47"><literal type="number" pos:start="28:47" pos:end="28:47">0</literal></expr></argument>, <argument pos:start="28:50" pos:end="28:50"><expr pos:start="28:50" pos:end="28:50"><literal type="number" pos:start="28:50" pos:end="28:50">0</literal></expr></argument>, <argument pos:start="28:53" pos:end="28:79"><expr pos:start="28:53" pos:end="28:79"><name pos:start="28:53" pos:end="28:79">header_closed_partition_key</name></expr></argument>, <argument pos:start="28:82" pos:end="28:82"><expr pos:start="28:82" pos:end="28:82"><literal type="number" pos:start="28:82" pos:end="28:82">1</literal></expr></argument>)</argument_list></call><operator pos:start="28:84" pos:end="28:84">)</operator> <operator pos:start="28:86" pos:end="28:86">&lt;</operator> <literal type="number" pos:start="28:88" pos:end="28:88">0</literal></expr>)</condition><block type="pseudo" pos:start="29:1" pos:end="30:33"><block_content pos:start="29:1" pos:end="30:33">
<label pos:start="29:1" pos:end="29:4"><name pos:start="29:1" pos:end="29:3">end</name>:</label>
    <expr_stmt pos:start="30:5" pos:end="30:33"><expr pos:start="30:5" pos:end="30:32"><call pos:start="30:5" pos:end="30:32"><name pos:start="30:5" pos:end="30:29">ff_audio_interleave_close</name><argument_list pos:start="30:30" pos:end="30:32">(<argument pos:start="30:31" pos:end="30:31"><expr pos:start="30:31" pos:end="30:31"><name pos:start="30:31" pos:end="30:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><call pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:12">av_freep</name><argument_list pos:start="31:13" pos:end="31:33">(<argument pos:start="31:14" pos:end="31:32"><expr pos:start="31:14" pos:end="31:32"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:32"><name pos:start="31:15" pos:end="31:17">mxf</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:32">index_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:42"><expr pos:start="32:5" pos:end="32:41"><call pos:start="32:5" pos:end="32:41"><name pos:start="32:5" pos:end="32:12">av_freep</name><argument_list pos:start="32:13" pos:end="32:41">(<argument pos:start="32:14" pos:end="32:40"><expr pos:start="32:14" pos:end="32:40"><operator pos:start="32:14" pos:end="32:14">&amp;</operator><name pos:start="32:15" pos:end="32:40"><name pos:start="32:15" pos:end="32:17">mxf</name><operator pos:start="32:18" pos:end="32:19">-&gt;</operator><name pos:start="32:20" pos:end="32:40">body_partition_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:12">av_freep</name><argument_list pos:start="33:13" pos:end="33:45">(<argument pos:start="33:14" pos:end="33:44"><expr pos:start="33:14" pos:end="33:44"><operator pos:start="33:14" pos:end="33:14">&amp;</operator><name pos:start="33:15" pos:end="33:44"><name pos:start="33:15" pos:end="33:17">mxf</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:33">timecode_track</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:44">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:35"><expr pos:start="34:5" pos:end="34:34"><call pos:start="34:5" pos:end="34:34"><name pos:start="34:5" pos:end="34:12">av_freep</name><argument_list pos:start="34:13" pos:end="34:34">(<argument pos:start="34:14" pos:end="34:33"><expr pos:start="34:14" pos:end="34:33"><operator pos:start="34:14" pos:end="34:14">&amp;</operator><name pos:start="34:15" pos:end="34:33"><name pos:start="34:15" pos:end="34:17">mxf</name><operator pos:start="34:18" pos:end="34:19">-&gt;</operator><name pos:start="34:20" pos:end="34:33">timecode_track</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><call pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:12">mxf_free</name><argument_list pos:start="35:13" pos:end="35:15">(<argument pos:start="35:14" pos:end="35:14"><expr pos:start="35:14" pos:end="35:14"><name pos:start="35:14" pos:end="35:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="36:5" pos:end="36:29">return <expr pos:start="36:12" pos:end="36:28"><ternary pos:start="36:12" pos:end="36:28"><condition pos:start="36:12" pos:end="36:20"><expr pos:start="36:12" pos:end="36:18"><name pos:start="36:12" pos:end="36:14">err</name> <operator pos:start="36:16" pos:end="36:16">&lt;</operator> <literal type="number" pos:start="36:18" pos:end="36:18">0</literal></expr> ?</condition><then pos:start="36:22" pos:end="36:24"> <expr pos:start="36:22" pos:end="36:24"><name pos:start="36:22" pos:end="36:24">err</name></expr> </then><else pos:start="36:26" pos:end="36:28">: <expr pos:start="36:28" pos:end="36:28"><literal type="number" pos:start="36:28" pos:end="36:28">0</literal></expr></else></ternary></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></function></unit>
