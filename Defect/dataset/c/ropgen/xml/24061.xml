<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24061.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_dirac_golomb_read_32bit</name><parameter_list pos:start="1:31" pos:end="2:68">(<parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:54"><name pos:start="1:32" pos:end="1:45">DiracGolombLUT</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:54">lut_ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>,
                               <parameter pos:start="2:32" pos:end="2:40"><decl pos:start="2:32" pos:end="2:40"><type pos:start="2:32" pos:end="2:40"><name pos:start="2:32" pos:end="2:34">int</name></type> <name pos:start="2:36" pos:end="2:40">bytes</name></decl></parameter>, <parameter pos:start="2:43" pos:end="2:55"><decl pos:start="2:43" pos:end="2:55"><type pos:start="2:43" pos:end="2:55"><name pos:start="2:43" pos:end="2:49">uint8_t</name> <modifier pos:start="2:51" pos:end="2:51">*</modifier></type><name pos:start="2:52" pos:end="2:55">_dst</name></decl></parameter>, <parameter pos:start="2:58" pos:end="2:67"><decl pos:start="2:58" pos:end="2:67"><type pos:start="2:58" pos:end="2:67"><name pos:start="2:58" pos:end="2:60">int</name></type> <name pos:start="2:62" pos:end="2:67">coeffs</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="4:5" pos:end="30:17">
    <decl_stmt pos:start="4:5" pos:end="4:24"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>, <decl pos:start="4:12" pos:end="4:12"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:12" pos:end="4:12">b</name></decl>, <decl pos:start="4:15" pos:end="4:23"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:15" pos:end="4:19">c_idx</name> <init pos:start="4:21" pos:end="4:23">= <expr pos:start="4:23" pos:end="4:23"><literal type="number" pos:start="4:23" pos:end="4:23">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">int32_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">dst</name> <init pos:start="5:18" pos:end="5:34">= <expr pos:start="5:20" pos:end="5:34"><operator pos:start="5:20" pos:end="5:20">(</operator><name pos:start="5:21" pos:end="5:27">int32_t</name> <operator pos:start="5:29" pos:end="5:29">*</operator><operator pos:start="5:30" pos:end="5:30">)</operator><name pos:start="5:31" pos:end="5:34">_dst</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:66"><decl pos:start="6:5" pos:end="6:29"><type pos:start="6:5" pos:end="6:20"><name pos:start="6:5" pos:end="6:18">DiracGolombLUT</name> <modifier pos:start="6:20" pos:end="6:20">*</modifier></type><name pos:start="6:21" pos:end="6:29"><name pos:start="6:21" pos:end="6:26">future</name><index pos:start="6:27" pos:end="6:29">[<expr pos:start="6:28" pos:end="6:28"><literal type="number" pos:start="6:28" pos:end="6:28">4</literal></expr>]</index></name></decl>, <decl pos:start="6:32" pos:end="6:65"><type ref="prev" pos:start="6:5" pos:end="6:20"><modifier pos:start="6:32" pos:end="6:32">*</modifier></type><name pos:start="6:33" pos:end="6:33">l</name> <init pos:start="6:35" pos:end="6:65">= <expr pos:start="6:37" pos:end="6:65"><operator pos:start="6:37" pos:end="6:37">&amp;</operator><name pos:start="6:38" pos:end="6:65"><name pos:start="6:38" pos:end="6:44">lut_ctx</name><index pos:start="6:45" pos:end="6:65">[<expr pos:start="6:46" pos:end="6:64"><literal type="number" pos:start="6:46" pos:end="6:46">2</literal><operator pos:start="6:47" pos:end="6:47">*</operator><name pos:start="6:48" pos:end="6:55">LUT_SIZE</name> <operator pos:start="6:57" pos:end="6:57">+</operator> <name pos:start="6:59" pos:end="6:64"><name pos:start="6:59" pos:end="6:61">buf</name><index pos:start="6:62" pos:end="6:64">[<expr pos:start="6:63" pos:end="6:63"><literal type="number" pos:start="6:63" pos:end="6:63">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:22"><expr pos:start="7:5" pos:end="7:21"><call pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:16">INIT_RESIDUE</name><argument_list pos:start="7:17" pos:end="7:21">(<argument pos:start="7:18" pos:end="7:20"><expr pos:start="7:18" pos:end="7:20"><name pos:start="7:18" pos:end="7:20">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="8:5" pos:end="29:5">for <control pos:start="8:9" pos:end="8:32">(<init pos:start="8:10" pos:end="8:15"><expr pos:start="8:10" pos:end="8:14"><name pos:start="8:10" pos:end="8:10">b</name> <operator pos:start="8:12" pos:end="8:12">=</operator> <literal type="number" pos:start="8:14" pos:end="8:14">1</literal></expr>;</init> <condition pos:start="8:17" pos:end="8:27"><expr pos:start="8:17" pos:end="8:26"><name pos:start="8:17" pos:end="8:17">b</name> <operator pos:start="8:19" pos:end="8:20">&lt;=</operator> <name pos:start="8:22" pos:end="8:26">bytes</name></expr>;</condition> <incr pos:start="8:29" pos:end="8:31"><expr pos:start="8:29" pos:end="8:31"><name pos:start="8:29" pos:end="8:29">b</name><operator pos:start="8:30" pos:end="8:31">++</operator></expr></incr>)</control> <block pos:start="8:34" pos:end="29:5">{<block_content pos:start="9:9" pos:end="28:65">
        <expr_stmt pos:start="9:9" pos:end="9:37"><expr pos:start="9:9" pos:end="9:36"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:14">future</name><index pos:start="9:15" pos:end="9:17">[<expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>]</index></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <operator pos:start="9:21" pos:end="9:21">&amp;</operator><name pos:start="9:22" pos:end="9:36"><name pos:start="9:22" pos:end="9:28">lut_ctx</name><index pos:start="9:29" pos:end="9:36">[<expr pos:start="9:30" pos:end="9:35"><name pos:start="9:30" pos:end="9:35"><name pos:start="9:30" pos:end="9:32">buf</name><index pos:start="9:33" pos:end="9:35">[<expr pos:start="9:34" pos:end="9:34"><name pos:start="9:34" pos:end="9:34">b</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:43"><expr pos:start="10:9" pos:end="10:42"><name pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:14">future</name><index pos:start="10:15" pos:end="10:17">[<expr pos:start="10:16" pos:end="10:16"><literal type="number" pos:start="10:16" pos:end="10:16">1</literal></expr>]</index></name> <operator pos:start="10:19" pos:end="10:19">=</operator> <name pos:start="10:21" pos:end="10:29"><name pos:start="10:21" pos:end="10:26">future</name><index pos:start="10:27" pos:end="10:29">[<expr pos:start="10:28" pos:end="10:28"><literal type="number" pos:start="10:28" pos:end="10:28">0</literal></expr>]</index></name> <operator pos:start="10:31" pos:end="10:31">+</operator> <literal type="number" pos:start="10:33" pos:end="10:33">1</literal><operator pos:start="10:34" pos:end="10:34">*</operator><name pos:start="10:35" pos:end="10:42">LUT_SIZE</name></expr>;</expr_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:43"><expr pos:start="11:9" pos:end="11:42"><name pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:14">future</name><index pos:start="11:15" pos:end="11:17">[<expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">2</literal></expr>]</index></name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:29"><name pos:start="11:21" pos:end="11:26">future</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr>]</index></name> <operator pos:start="11:31" pos:end="11:31">+</operator> <literal type="number" pos:start="11:33" pos:end="11:33">2</literal><operator pos:start="11:34" pos:end="11:34">*</operator><name pos:start="11:35" pos:end="11:42">LUT_SIZE</name></expr>;</expr_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:43"><expr pos:start="12:9" pos:end="12:42"><name pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:14">future</name><index pos:start="12:15" pos:end="12:17">[<expr pos:start="12:16" pos:end="12:16"><literal type="number" pos:start="12:16" pos:end="12:16">3</literal></expr>]</index></name> <operator pos:start="12:19" pos:end="12:19">=</operator> <name pos:start="12:21" pos:end="12:29"><name pos:start="12:21" pos:end="12:26">future</name><index pos:start="12:27" pos:end="12:29">[<expr pos:start="12:28" pos:end="12:28"><literal type="number" pos:start="12:28" pos:end="12:28">0</literal></expr>]</index></name> <operator pos:start="12:31" pos:end="12:31">+</operator> <literal type="number" pos:start="12:33" pos:end="12:33">3</literal><operator pos:start="12:34" pos:end="12:34">*</operator><name pos:start="12:35" pos:end="12:42">LUT_SIZE</name></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="14:25"><if pos:start="13:9" pos:end="14:25">if <condition pos:start="13:12" pos:end="13:33">(<expr pos:start="13:13" pos:end="13:32"><operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:18">c_idx</name> <operator pos:start="13:20" pos:end="13:20">+</operator> <literal type="number" pos:start="13:22" pos:end="13:22">1</literal><operator pos:start="13:23" pos:end="13:23">)</operator> <operator pos:start="13:25" pos:end="13:25">&gt;</operator> <name pos:start="13:27" pos:end="13:32">coeffs</name></expr>)</condition><block type="pseudo" pos:start="14:13" pos:end="14:25"><block_content pos:start="14:13" pos:end="14:25">
            <return pos:start="14:13" pos:end="14:25">return <expr pos:start="14:20" pos:end="14:24"><name pos:start="14:20" pos:end="14:24">c_idx</name></expr>;</return></block_content></block></if></if_stmt>
        <comment type="block" pos:start="15:9" pos:end="15:61">/* res_bits is a hint for better branch prediction */</comment>
        <if_stmt pos:start="16:9" pos:end="24:9"><if pos:start="16:9" pos:end="24:9">if <condition pos:start="16:12" pos:end="16:32">(<expr pos:start="16:13" pos:end="16:31"><name pos:start="16:13" pos:end="16:20">res_bits</name> <operator pos:start="16:22" pos:end="16:23">&amp;&amp;</operator> <name pos:start="16:25" pos:end="16:31"><name pos:start="16:25" pos:end="16:25">l</name><operator pos:start="16:26" pos:end="16:27">-&gt;</operator><name pos:start="16:28" pos:end="16:31">sign</name></name></expr>)</condition> <block pos:start="16:34" pos:end="24:9">{<block_content pos:start="17:13" pos:end="23:49">
            <decl_stmt pos:start="17:13" pos:end="17:30"><decl pos:start="17:13" pos:end="17:29"><type pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:19">int32_t</name></type> <name pos:start="17:21" pos:end="17:25">coeff</name> <init pos:start="17:27" pos:end="17:29">= <expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:45"><expr pos:start="18:13" pos:end="18:44"><call pos:start="18:13" pos:end="18:44"><name pos:start="18:13" pos:end="18:26">APPEND_RESIDUE</name><argument_list pos:start="18:27" pos:end="18:44">(<argument pos:start="18:28" pos:end="18:30"><expr pos:start="18:28" pos:end="18:30"><name pos:start="18:28" pos:end="18:30">res</name></expr></argument>, <argument pos:start="18:33" pos:end="18:43"><expr pos:start="18:33" pos:end="18:43"><name pos:start="18:33" pos:end="18:43"><name pos:start="18:33" pos:end="18:33">l</name><operator pos:start="18:34" pos:end="18:35">-&gt;</operator><name pos:start="18:36" pos:end="18:43">preamble</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for pos:start="19:13" pos:end="22:13">for <control pos:start="19:17" pos:end="19:53">(<init pos:start="19:18" pos:end="19:23"><expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:18">i</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</init> <condition pos:start="19:25" pos:end="19:48"><expr pos:start="19:25" pos:end="19:47"><name pos:start="19:25" pos:end="19:25">i</name> <operator pos:start="19:27" pos:end="19:27">&lt;</operator> <operator pos:start="19:29" pos:end="19:29">(</operator><name pos:start="19:30" pos:end="19:37">res_bits</name> <operator pos:start="19:39" pos:end="19:40">&gt;&gt;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">1</literal><operator pos:start="19:43" pos:end="19:43">)</operator> <operator pos:start="19:45" pos:end="19:45">-</operator> <literal type="number" pos:start="19:47" pos:end="19:47">1</literal></expr>;</condition> <incr pos:start="19:50" pos:end="19:52"><expr pos:start="19:50" pos:end="19:52"><name pos:start="19:50" pos:end="19:50">i</name><operator pos:start="19:51" pos:end="19:52">++</operator></expr></incr>)</control> <block pos:start="19:55" pos:end="22:13">{<block_content pos:start="20:17" pos:end="21:61">
                <expr_stmt pos:start="20:17" pos:end="20:28"><expr pos:start="20:17" pos:end="20:27"><name pos:start="20:17" pos:end="20:21">coeff</name> <operator pos:start="20:23" pos:end="20:25">&lt;&lt;=</operator> <literal type="number" pos:start="20:27" pos:end="20:27">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="21:17" pos:end="21:61"><expr pos:start="21:17" pos:end="21:60"><name pos:start="21:17" pos:end="21:21">coeff</name> <operator pos:start="21:23" pos:end="21:24">|=</operator> <operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:29">res</name> <operator pos:start="21:31" pos:end="21:32">&gt;&gt;</operator> <operator pos:start="21:34" pos:end="21:34">(</operator><name pos:start="21:35" pos:end="21:44">RSIZE_BITS</name> <operator pos:start="21:46" pos:end="21:46">-</operator> <literal type="number" pos:start="21:48" pos:end="21:48">2</literal><operator pos:start="21:49" pos:end="21:49">*</operator><name pos:start="21:50" pos:end="21:50">i</name> <operator pos:start="21:52" pos:end="21:52">-</operator> <literal type="number" pos:start="21:54" pos:end="21:54">2</literal><operator pos:start="21:55" pos:end="21:55">)</operator><operator pos:start="21:56" pos:end="21:56">)</operator> <operator pos:start="21:58" pos:end="21:58">&amp;</operator> <literal type="number" pos:start="21:60" pos:end="21:60">1</literal></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt pos:start="23:13" pos:end="23:49"><expr pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:15">dst</name><index pos:start="23:16" pos:end="23:24">[<expr pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:21">c_idx</name><operator pos:start="23:22" pos:end="23:23">++</operator></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:28">l</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:34">sign</name></name> <operator pos:start="23:36" pos:end="23:36">*</operator> <operator pos:start="23:38" pos:end="23:38">(</operator><name pos:start="23:39" pos:end="23:43">coeff</name> <operator pos:start="23:45" pos:end="23:45">-</operator> <literal type="number" pos:start="23:47" pos:end="23:47">1</literal><operator pos:start="23:48" pos:end="23:48">)</operator></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:64"><expr pos:start="25:9" pos:end="25:63"><call pos:start="25:9" pos:end="25:63"><name pos:start="25:9" pos:end="25:14">memcpy</name><argument_list pos:start="25:15" pos:end="25:63">(<argument pos:start="25:16" pos:end="25:26"><expr pos:start="25:16" pos:end="25:26"><operator pos:start="25:16" pos:end="25:16">&amp;</operator><name pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:19">dst</name><index pos:start="25:20" pos:end="25:26">[<expr pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:25">c_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="25:29" pos:end="25:36"><expr pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:29">l</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:36">ready</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:62"><expr pos:start="25:39" pos:end="25:62"><name pos:start="25:39" pos:end="25:46">LUT_BITS</name><operator pos:start="25:47" pos:end="25:47">*</operator><sizeof pos:start="25:48" pos:end="25:62">sizeof<argument_list pos:start="25:54" pos:end="25:62">(<argument pos:start="25:55" pos:end="25:61"><expr pos:start="25:55" pos:end="25:61"><name pos:start="25:55" pos:end="25:61">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:30"><expr pos:start="26:9" pos:end="26:29"><name pos:start="26:9" pos:end="26:13">c_idx</name> <operator pos:start="26:15" pos:end="26:16">+=</operator> <name pos:start="26:18" pos:end="26:29"><name pos:start="26:18" pos:end="26:18">l</name><operator pos:start="26:19" pos:end="26:20">-&gt;</operator><name pos:start="26:21" pos:end="26:29">ready_num</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><call pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:22">APPEND_RESIDUE</name><argument_list pos:start="27:23" pos:end="27:40">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">res</name></expr></argument>, <argument pos:start="27:29" pos:end="27:39"><expr pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:29">l</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:39">leftover</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:65"><expr pos:start="28:9" pos:end="28:64"><name pos:start="28:9" pos:end="28:9">l</name> <operator pos:start="28:11" pos:end="28:11">=</operator> <name pos:start="28:13" pos:end="28:64"><name pos:start="28:13" pos:end="28:18">future</name><index pos:start="28:19" pos:end="28:64">[<expr pos:start="28:20" pos:end="28:63"><ternary pos:start="28:20" pos:end="28:63"><condition pos:start="28:20" pos:end="28:30"><expr pos:start="28:20" pos:end="28:28"><name pos:start="28:20" pos:end="28:28"><name pos:start="28:20" pos:end="28:20">l</name><operator pos:start="28:21" pos:end="28:22">-&gt;</operator><name pos:start="28:23" pos:end="28:28">need_s</name></name></expr> ?</condition><then pos:start="28:32" pos:end="28:32"> <expr pos:start="28:32" pos:end="28:32"><literal type="number" pos:start="28:32" pos:end="28:32">3</literal></expr> </then><else pos:start="28:34" pos:end="28:63">: <expr pos:start="28:36" pos:end="28:63"><ternary pos:start="28:36" pos:end="28:63"><condition pos:start="28:36" pos:end="28:46"><expr pos:start="28:36" pos:end="28:44"><operator pos:start="28:36" pos:end="28:36">!</operator><name pos:start="28:37" pos:end="28:44">res_bits</name></expr> ?</condition><then pos:start="28:48" pos:end="28:48"> <expr pos:start="28:48" pos:end="28:48"><literal type="number" pos:start="28:48" pos:end="28:48">2</literal></expr> </then><else pos:start="28:50" pos:end="28:63">: <expr pos:start="28:52" pos:end="28:63"><name pos:start="28:52" pos:end="28:59">res_bits</name> <operator pos:start="28:61" pos:end="28:61">&amp;</operator> <literal type="number" pos:start="28:63" pos:end="28:63">1</literal></expr></else></ternary></expr></else></ternary></expr>]</index></name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="30:5" pos:end="30:17">return <expr pos:start="30:12" pos:end="30:16"><name pos:start="30:12" pos:end="30:16">c_idx</name></expr>;</return>
</block_content>}</block></function></unit>
