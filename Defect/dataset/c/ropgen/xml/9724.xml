<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9724.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">cavs_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:57">(<parameter pos:start="1:30" pos:end="1:51"><decl pos:start="1:30" pos:end="1:51"><type pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,<parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:67">int</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:78">data_size</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type> <name pos:start="3:40" pos:end="3:42">buf</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:56"><decl pos:start="3:45" pos:end="3:56"><type pos:start="3:45" pos:end="3:56"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:56">buf_size</name></decl></parameter>)</parameter_list> <block pos:start="3:59" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:5">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">h</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">h</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">input_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">buf_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">picture</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:16">stc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">avctx</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:20">avctx</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:16">buf_size</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>)</condition> <block pos:start="25:24" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:17">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if<condition pos:start="27:11" pos:end="27:46">(<expr pos:start="27:12" pos:end="27:45"><operator pos:start="27:12" pos:end="27:12">!</operator><name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:24">low_delay</name></name> <operator pos:start="27:26" pos:end="27:27">&amp;&amp;</operator> <name pos:start="27:29" pos:end="27:37"><name pos:start="27:29" pos:end="27:29">h</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:34">DPB</name><index pos:start="27:35" pos:end="27:37">[<expr pos:start="27:36" pos:end="27:36"><literal type="number" pos:start="27:36" pos:end="27:36">0</literal></expr>]</index></name><operator pos:start="27:38" pos:end="27:38">.</operator><name pos:start="27:39" pos:end="27:45"><name pos:start="27:39" pos:end="27:42">data</name><index pos:start="27:43" pos:end="27:45">[<expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="27:48" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:47">

            <expr_stmt pos:start="29:13" pos:end="29:43"><expr pos:start="29:13" pos:end="29:42"><operator pos:start="29:13" pos:end="29:13">*</operator><name pos:start="29:14" pos:end="29:22">data_size</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <sizeof pos:start="29:26" pos:end="29:42">sizeof<argument_list pos:start="29:32" pos:end="29:42">(<argument pos:start="29:33" pos:end="29:41"><expr pos:start="29:33" pos:end="29:41"><name pos:start="29:33" pos:end="29:41">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:47"><expr pos:start="31:13" pos:end="31:46"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:20">picture</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <operator pos:start="31:24" pos:end="31:24">*</operator><operator pos:start="31:25" pos:end="31:25">(</operator><name pos:start="31:26" pos:end="31:32">AVFrame</name> <operator pos:start="31:34" pos:end="31:34">*</operator><operator pos:start="31:35" pos:end="31:35">)</operator> <operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:46"><name pos:start="31:38" pos:end="31:38">h</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:43">DPB</name><index pos:start="31:44" pos:end="31:46">[<expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:11">buf_ptr</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:11">buf_end</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:17">buf</name> <operator pos:start="43:19" pos:end="43:19">+</operator> <name pos:start="43:21" pos:end="43:28">buf_size</name></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="145:5">for<control pos:start="45:8" pos:end="45:11">(<init pos:start="45:9" pos:end="45:9">;</init><condition pos:start="45:10" pos:end="45:10">;</condition><incr/>)</control> <block pos:start="45:13" pos:end="145:5">{<block_content pos:start="47:9" pos:end="143:9">

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:15">buf_ptr</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:59"><name pos:start="47:19" pos:end="47:36">ff_find_start_code</name><argument_list pos:start="47:37" pos:end="47:59">(<argument pos:start="47:38" pos:end="47:44"><expr pos:start="47:38" pos:end="47:44"><name pos:start="47:38" pos:end="47:44">buf_ptr</name></expr></argument>,<argument pos:start="47:46" pos:end="47:52"><expr pos:start="47:46" pos:end="47:52"><name pos:start="47:46" pos:end="47:52">buf_end</name></expr></argument>, <argument pos:start="47:55" pos:end="47:58"><expr pos:start="47:55" pos:end="47:58"><operator pos:start="47:55" pos:end="47:55">&amp;</operator><name pos:start="47:56" pos:end="47:58">stc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:73"><if pos:start="49:9" pos:end="51:73">if<condition pos:start="49:11" pos:end="49:28">(<expr pos:start="49:12" pos:end="49:27"><name pos:start="49:12" pos:end="49:14">stc</name> <operator pos:start="49:16" pos:end="49:16">&amp;</operator> <literal type="number" pos:start="49:18" pos:end="49:27">0xFFFFFE00</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:73"><block_content pos:start="51:13" pos:end="51:73">

            <return pos:start="51:13" pos:end="51:73">return <expr pos:start="51:20" pos:end="51:72"><call pos:start="51:20" pos:end="51:72"><name pos:start="51:20" pos:end="51:24">FFMAX</name><argument_list pos:start="51:25" pos:end="51:72">(<argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr></argument>, <argument pos:start="51:29" pos:end="51:71"><expr pos:start="51:29" pos:end="51:71"><name pos:start="51:29" pos:end="51:35">buf_ptr</name> <operator pos:start="51:37" pos:end="51:37">-</operator> <name pos:start="51:39" pos:end="51:41">buf</name> <operator pos:start="51:43" pos:end="51:43">-</operator> <name pos:start="51:45" pos:end="51:71"><name pos:start="51:45" pos:end="51:45">s</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:60">parse_context</name><operator pos:start="51:61" pos:end="51:61">.</operator><name pos:start="51:62" pos:end="51:71">last_index</name></name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:18">input_size</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <operator pos:start="53:22" pos:end="53:22">(</operator><name pos:start="53:23" pos:end="53:29">buf_end</name> <operator pos:start="53:31" pos:end="53:31">-</operator> <name pos:start="53:33" pos:end="53:39">buf_ptr</name><operator pos:start="53:40" pos:end="53:40">)</operator><operator pos:start="53:41" pos:end="53:41">*</operator><literal type="number" pos:start="53:42" pos:end="53:42">8</literal></expr>;</expr_stmt>

        <switch pos:start="55:9" pos:end="143:9">switch<condition pos:start="55:15" pos:end="55:19">(<expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">stc</name></expr>)</condition> <block pos:start="55:21" pos:end="143:9">{<block_content pos:start="57:9" pos:end="141:18">

        <case pos:start="57:9" pos:end="57:29">case <expr pos:start="57:14" pos:end="57:28"><name pos:start="57:14" pos:end="57:28">CAVS_START_CODE</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:55"><expr pos:start="59:13" pos:end="59:54"><call pos:start="59:13" pos:end="59:54"><name pos:start="59:13" pos:end="59:25">init_get_bits</name><argument_list pos:start="59:26" pos:end="59:54">(<argument pos:start="59:27" pos:end="59:32"><expr pos:start="59:27" pos:end="59:32"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:28">s</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:32">gb</name></name></expr></argument>, <argument pos:start="59:35" pos:end="59:41"><expr pos:start="59:35" pos:end="59:41"><name pos:start="59:35" pos:end="59:41">buf_ptr</name></expr></argument>, <argument pos:start="59:44" pos:end="59:53"><expr pos:start="59:44" pos:end="59:53"><name pos:start="59:44" pos:end="59:53">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><call pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:29">decode_seq_header</name><argument_list pos:start="61:30" pos:end="61:32">(<argument pos:start="61:31" pos:end="61:31"><expr pos:start="61:31" pos:end="61:31"><name pos:start="61:31" pos:end="61:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:30">case <expr pos:start="65:14" pos:end="65:29"><name pos:start="65:14" pos:end="65:29">PIC_I_START_CODE</name></expr>:</case>

            <if_stmt pos:start="67:13" pos:end="79:13"><if pos:start="67:13" pos:end="79:13">if<condition pos:start="67:15" pos:end="67:32">(<expr pos:start="67:16" pos:end="67:31"><operator pos:start="67:16" pos:end="67:16">!</operator><name pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:17">h</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:31">got_keyframe</name></name></expr>)</condition> <block pos:start="67:34" pos:end="79:13">{<block_content pos:start="69:17" pos:end="77:36">

                <if_stmt pos:start="69:17" pos:end="71:72"><if pos:start="69:17" pos:end="71:72">if<condition pos:start="69:19" pos:end="69:37">(<expr pos:start="69:20" pos:end="69:36"><name pos:start="69:20" pos:end="69:28"><name pos:start="69:20" pos:end="69:20">h</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:25">DPB</name><index pos:start="69:26" pos:end="69:28">[<expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr>]</index></name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:36"><name pos:start="69:30" pos:end="69:33">data</name><index pos:start="69:34" pos:end="69:36">[<expr pos:start="69:35" pos:end="69:35"><literal type="number" pos:start="69:35" pos:end="69:35">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:72"><block_content pos:start="71:21" pos:end="71:72">

                    <expr_stmt pos:start="71:21" pos:end="71:72"><expr pos:start="71:21" pos:end="71:71"><call pos:start="71:21" pos:end="71:71"><name pos:start="71:21" pos:end="71:41"><name pos:start="71:21" pos:end="71:25">avctx</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:41">release_buffer</name></name><argument_list pos:start="71:42" pos:end="71:71">(<argument pos:start="71:43" pos:end="71:47"><expr pos:start="71:43" pos:end="71:47"><name pos:start="71:43" pos:end="71:47">avctx</name></expr></argument>, <argument pos:start="71:50" pos:end="71:70"><expr pos:start="71:50" pos:end="71:70"><operator pos:start="71:50" pos:end="71:50">(</operator><name pos:start="71:51" pos:end="71:57">AVFrame</name> <operator pos:start="71:59" pos:end="71:59">*</operator><operator pos:start="71:60" pos:end="71:60">)</operator><operator pos:start="71:61" pos:end="71:61">&amp;</operator><name pos:start="71:62" pos:end="71:70"><name pos:start="71:62" pos:end="71:62">h</name><operator pos:start="71:63" pos:end="71:64">-&gt;</operator><name pos:start="71:65" pos:end="71:67">DPB</name><index pos:start="71:68" pos:end="71:70">[<expr pos:start="71:69" pos:end="71:69"><literal type="number" pos:start="71:69" pos:end="71:69">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="73:17" pos:end="75:72"><if pos:start="73:17" pos:end="75:72">if<condition pos:start="73:19" pos:end="73:37">(<expr pos:start="73:20" pos:end="73:36"><name pos:start="73:20" pos:end="73:28"><name pos:start="73:20" pos:end="73:20">h</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:25">DPB</name><index pos:start="73:26" pos:end="73:28">[<expr pos:start="73:27" pos:end="73:27"><literal type="number" pos:start="73:27" pos:end="73:27">1</literal></expr>]</index></name><operator pos:start="73:29" pos:end="73:29">.</operator><name pos:start="73:30" pos:end="73:36"><name pos:start="73:30" pos:end="73:33">data</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:72"><block_content pos:start="75:21" pos:end="75:72">

                    <expr_stmt pos:start="75:21" pos:end="75:72"><expr pos:start="75:21" pos:end="75:71"><call pos:start="75:21" pos:end="75:71"><name pos:start="75:21" pos:end="75:41"><name pos:start="75:21" pos:end="75:25">avctx</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:41">release_buffer</name></name><argument_list pos:start="75:42" pos:end="75:71">(<argument pos:start="75:43" pos:end="75:47"><expr pos:start="75:43" pos:end="75:47"><name pos:start="75:43" pos:end="75:47">avctx</name></expr></argument>, <argument pos:start="75:50" pos:end="75:70"><expr pos:start="75:50" pos:end="75:70"><operator pos:start="75:50" pos:end="75:50">(</operator><name pos:start="75:51" pos:end="75:57">AVFrame</name> <operator pos:start="75:59" pos:end="75:59">*</operator><operator pos:start="75:60" pos:end="75:60">)</operator><operator pos:start="75:61" pos:end="75:61">&amp;</operator><name pos:start="75:62" pos:end="75:70"><name pos:start="75:62" pos:end="75:62">h</name><operator pos:start="75:63" pos:end="75:64">-&gt;</operator><name pos:start="75:65" pos:end="75:67">DPB</name><index pos:start="75:68" pos:end="75:70">[<expr pos:start="75:69" pos:end="75:69"><literal type="number" pos:start="75:69" pos:end="75:69">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:36"><expr pos:start="77:17" pos:end="77:35"><name pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:17">h</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:31">got_keyframe</name></name> <operator pos:start="77:33" pos:end="77:33">=</operator> <literal type="number" pos:start="77:35" pos:end="77:35">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        <case pos:start="81:9" pos:end="81:31">case <expr pos:start="81:14" pos:end="81:30"><name pos:start="81:14" pos:end="81:30">PIC_PB_START_CODE</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:27"><expr pos:start="83:13" pos:end="83:26"><operator pos:start="83:13" pos:end="83:13">*</operator><name pos:start="83:14" pos:end="83:22">data_size</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="87:22"><if pos:start="85:13" pos:end="87:22">if<condition pos:start="85:15" pos:end="85:32">(<expr pos:start="85:16" pos:end="85:31"><operator pos:start="85:16" pos:end="85:16">!</operator><name pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:17">h</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:31">got_keyframe</name></name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:22"><block_content pos:start="87:17" pos:end="87:22">

                <break pos:start="87:17" pos:end="87:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:55"><expr pos:start="89:13" pos:end="89:54"><call pos:start="89:13" pos:end="89:54"><name pos:start="89:13" pos:end="89:25">init_get_bits</name><argument_list pos:start="89:26" pos:end="89:54">(<argument pos:start="89:27" pos:end="89:32"><expr pos:start="89:27" pos:end="89:32"><operator pos:start="89:27" pos:end="89:27">&amp;</operator><name pos:start="89:28" pos:end="89:32"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:32">gb</name></name></expr></argument>, <argument pos:start="89:35" pos:end="89:41"><expr pos:start="89:35" pos:end="89:41"><name pos:start="89:35" pos:end="89:41">buf_ptr</name></expr></argument>, <argument pos:start="89:44" pos:end="89:53"><expr pos:start="89:44" pos:end="89:53"><name pos:start="89:44" pos:end="89:53">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:25"><expr pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:13">h</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:18">stc</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:24">stc</name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="95:22"><if pos:start="93:13" pos:end="95:22">if<condition pos:start="93:15" pos:end="93:29">(<expr pos:start="93:16" pos:end="93:28"><call pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:25">decode_pic</name><argument_list pos:start="93:26" pos:end="93:28">(<argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><name pos:start="93:27" pos:end="93:27">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:22"><block_content pos:start="95:17" pos:end="95:22">

                <break pos:start="95:17" pos:end="95:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:43"><expr pos:start="97:13" pos:end="97:42"><operator pos:start="97:13" pos:end="97:13">*</operator><name pos:start="97:14" pos:end="97:22">data_size</name> <operator pos:start="97:24" pos:end="97:24">=</operator> <sizeof pos:start="97:26" pos:end="97:42">sizeof<argument_list pos:start="97:32" pos:end="97:42">(<argument pos:start="97:33" pos:end="97:41"><expr pos:start="97:33" pos:end="97:41"><name pos:start="97:33" pos:end="97:41">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="113:52"><if pos:start="99:13" pos:end="111:13">if<condition pos:start="99:15" pos:end="99:40">(<expr pos:start="99:16" pos:end="99:39"><name pos:start="99:16" pos:end="99:26"><name pos:start="99:16" pos:end="99:16">h</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:26">pic_type</name></name> <operator pos:start="99:28" pos:end="99:29">!=</operator> <name pos:start="99:31" pos:end="99:39">FF_B_TYPE</name></expr>)</condition> <block pos:start="99:42" pos:end="111:13">{<block_content pos:start="101:17" pos:end="109:17">

                <if_stmt pos:start="101:17" pos:end="109:17"><if pos:start="101:17" pos:end="105:17">if<condition pos:start="101:19" pos:end="101:37">(<expr pos:start="101:20" pos:end="101:36"><name pos:start="101:20" pos:end="101:28"><name pos:start="101:20" pos:end="101:20">h</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:25">DPB</name><index pos:start="101:26" pos:end="101:28">[<expr pos:start="101:27" pos:end="101:27"><literal type="number" pos:start="101:27" pos:end="101:27">1</literal></expr>]</index></name><operator pos:start="101:29" pos:end="101:29">.</operator><name pos:start="101:30" pos:end="101:36"><name pos:start="101:30" pos:end="101:33">data</name><index pos:start="101:34" pos:end="101:36">[<expr pos:start="101:35" pos:end="101:35"><literal type="number" pos:start="101:35" pos:end="101:35">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="101:39" pos:end="105:17">{<block_content pos:start="103:21" pos:end="103:55">

                    <expr_stmt pos:start="103:21" pos:end="103:55"><expr pos:start="103:21" pos:end="103:54"><operator pos:start="103:21" pos:end="103:21">*</operator><name pos:start="103:22" pos:end="103:28">picture</name> <operator pos:start="103:30" pos:end="103:30">=</operator> <operator pos:start="103:32" pos:end="103:32">*</operator><operator pos:start="103:33" pos:end="103:33">(</operator><name pos:start="103:34" pos:end="103:40">AVFrame</name> <operator pos:start="103:42" pos:end="103:42">*</operator><operator pos:start="103:43" pos:end="103:43">)</operator> <operator pos:start="103:45" pos:end="103:45">&amp;</operator><name pos:start="103:46" pos:end="103:54"><name pos:start="103:46" pos:end="103:46">h</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:51">DPB</name><index pos:start="103:52" pos:end="103:54">[<expr pos:start="103:53" pos:end="103:53"><literal type="number" pos:start="103:53" pos:end="103:53">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="105:19" pos:end="109:17">else <block pos:start="105:24" pos:end="109:17">{<block_content pos:start="107:21" pos:end="107:35">

                    <expr_stmt pos:start="107:21" pos:end="107:35"><expr pos:start="107:21" pos:end="107:34"><operator pos:start="107:21" pos:end="107:21">*</operator><name pos:start="107:22" pos:end="107:30">data_size</name> <operator pos:start="107:32" pos:end="107:32">=</operator> <literal type="number" pos:start="107:34" pos:end="107:34">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="113:52">else<block type="pseudo" pos:start="113:17" pos:end="113:52"><block_content pos:start="113:17" pos:end="113:52">

                <expr_stmt pos:start="113:17" pos:end="113:52"><expr pos:start="113:17" pos:end="113:51"><operator pos:start="113:17" pos:end="113:17">*</operator><name pos:start="113:18" pos:end="113:24">picture</name> <operator pos:start="113:26" pos:end="113:26">=</operator> <operator pos:start="113:28" pos:end="113:28">*</operator><operator pos:start="113:29" pos:end="113:29">(</operator><name pos:start="113:30" pos:end="113:36">AVFrame</name> <operator pos:start="113:38" pos:end="113:38">*</operator><operator pos:start="113:39" pos:end="113:39">)</operator> <operator pos:start="113:41" pos:end="113:41">&amp;</operator><name pos:start="113:42" pos:end="113:51"><name pos:start="113:42" pos:end="113:42">h</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:51">picture</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:28">case <expr pos:start="117:14" pos:end="117:27"><name pos:start="117:14" pos:end="117:27">EXT_START_CODE</name></expr>:</case>

            <comment type="line" pos:start="119:13" pos:end="119:63">//mpeg_decode_extension(avctx,buf_ptr, input_size);</comment>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:29">case <expr pos:start="123:14" pos:end="123:28"><name pos:start="123:14" pos:end="123:28">USER_START_CODE</name></expr>:</case>

            <comment type="line" pos:start="125:13" pos:end="125:63">//mpeg_decode_user_data(avctx,buf_ptr, input_size);</comment>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <default pos:start="129:9" pos:end="129:16">default:</default>

            <if_stmt pos:start="131:13" pos:end="139:13"><if pos:start="131:13" pos:end="139:13">if <condition pos:start="131:16" pos:end="133:44">(<expr pos:start="131:17" pos:end="133:43"><name pos:start="131:17" pos:end="131:19">stc</name> <operator pos:start="131:21" pos:end="131:22">&gt;=</operator> <name pos:start="131:24" pos:end="131:43">SLICE_MIN_START_CODE</name> <operator pos:start="131:45" pos:end="131:46">&amp;&amp;</operator>

                <name pos:start="133:17" pos:end="133:19">stc</name> <operator pos:start="133:21" pos:end="133:22">&lt;=</operator> <name pos:start="133:24" pos:end="133:43">SLICE_MAX_START_CODE</name></expr>)</condition> <block pos:start="133:46" pos:end="139:13">{<block_content pos:start="135:17" pos:end="137:47">

                <expr_stmt pos:start="135:17" pos:end="135:59"><expr pos:start="135:17" pos:end="135:58"><call pos:start="135:17" pos:end="135:58"><name pos:start="135:17" pos:end="135:29">init_get_bits</name><argument_list pos:start="135:30" pos:end="135:58">(<argument pos:start="135:31" pos:end="135:36"><expr pos:start="135:31" pos:end="135:36"><operator pos:start="135:31" pos:end="135:31">&amp;</operator><name pos:start="135:32" pos:end="135:36"><name pos:start="135:32" pos:end="135:32">s</name><operator pos:start="135:33" pos:end="135:34">-&gt;</operator><name pos:start="135:35" pos:end="135:36">gb</name></name></expr></argument>, <argument pos:start="135:39" pos:end="135:45"><expr pos:start="135:39" pos:end="135:45"><name pos:start="135:39" pos:end="135:45">buf_ptr</name></expr></argument>, <argument pos:start="135:48" pos:end="135:57"><expr pos:start="135:48" pos:end="135:57"><name pos:start="135:48" pos:end="135:57">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:47"><expr pos:start="137:17" pos:end="137:46"><call pos:start="137:17" pos:end="137:46"><name pos:start="137:17" pos:end="137:35">decode_slice_header</name><argument_list pos:start="137:36" pos:end="137:46">(<argument pos:start="137:37" pos:end="137:37"><expr pos:start="137:37" pos:end="137:37"><name pos:start="137:37" pos:end="137:37">h</name></expr></argument>, <argument pos:start="137:40" pos:end="137:45"><expr pos:start="137:40" pos:end="137:45"><operator pos:start="137:40" pos:end="137:40">&amp;</operator><name pos:start="137:41" pos:end="137:45"><name pos:start="137:41" pos:end="137:41">s</name><operator pos:start="137:42" pos:end="137:43">-&gt;</operator><name pos:start="137:44" pos:end="137:45">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
