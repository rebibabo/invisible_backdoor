<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18815.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:35">FLACContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">FLACFrameInfo</name></type> <name pos:start="9:19" pos:end="9:20">fi</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:70">(<expr pos:start="13:9" pos:end="13:69"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:12">ret</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:64"><name pos:start="13:16" pos:end="13:42">ff_flac_decode_frame_header</name><argument_list pos:start="13:43" pos:end="13:64">(<argument pos:start="13:44" pos:end="13:51"><expr pos:start="13:44" pos:end="13:51"><name pos:start="13:44" pos:end="13:51"><name pos:start="13:44" pos:end="13:44">s</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:51">avctx</name></name></expr></argument>, <argument pos:start="13:54" pos:end="13:55"><expr pos:start="13:54" pos:end="13:55"><name pos:start="13:54" pos:end="13:55">gb</name></expr></argument>, <argument pos:start="13:58" pos:end="13:60"><expr pos:start="13:58" pos:end="13:60"><operator pos:start="13:58" pos:end="13:58">&amp;</operator><name pos:start="13:59" pos:end="13:60">fi</name></expr></argument>, <argument pos:start="13:63" pos:end="13:63"><expr pos:start="13:63" pos:end="13:63"><literal type="number" pos:start="13:63" pos:end="13:63">0</literal></expr></argument>)</argument_list></call><operator pos:start="13:65" pos:end="13:65">)</operator> <operator pos:start="13:67" pos:end="13:67">&lt;</operator> <literal type="number" pos:start="13:69" pos:end="13:69">0</literal></expr>)</condition> <block pos:start="13:72" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:19">

        <expr_stmt pos:start="15:9" pos:end="15:65"><expr pos:start="15:9" pos:end="15:64"><call pos:start="15:9" pos:end="15:64"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:64">(<argument pos:start="15:16" pos:end="15:23"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">avctx</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:40" pos:end="15:63"><expr pos:start="15:40" pos:end="15:63"><literal type="string" pos:start="15:40" pos:end="15:63">"invalid frame header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:71">(<expr pos:start="23:9" pos:end="23:70"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">channels</name></name> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <name pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:25">fi</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:34">channels</name></name> <operator pos:start="23:36" pos:end="23:37">!=</operator> <name pos:start="23:39" pos:end="23:49"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:49">channels</name></name> <operator pos:start="23:51" pos:end="23:52">&amp;&amp;</operator> <name pos:start="23:54" pos:end="23:70"><name pos:start="23:54" pos:end="23:54">s</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:70">got_streaminfo</name></name></expr>)</condition> <block pos:start="23:73" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:23">

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">channels</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:40"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:30">avctx</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:40">channels</name></name> <operator pos:start="25:42" pos:end="25:42">=</operator> <name pos:start="25:44" pos:end="25:54"><name pos:start="25:44" pos:end="25:45">fi</name><operator pos:start="25:46" pos:end="25:46">.</operator><name pos:start="25:47" pos:end="25:54">channels</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><call pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:34">ff_flac_set_channel_layout</name><argument_list pos:start="27:35" pos:end="27:44">(<argument pos:start="27:36" pos:end="27:43"><expr pos:start="27:36" pos:end="27:43"><name pos:start="27:36" pos:end="27:43"><name pos:start="27:36" pos:end="27:36">s</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:43">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:33"><name pos:start="29:15" pos:end="29:30">allocate_buffers</name><argument_list pos:start="29:31" pos:end="29:33">(<argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:23"><if pos:start="31:9" pos:end="33:23">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:23"><block_content pos:start="33:13" pos:end="33:23">

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:15">channels</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:36"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:26">avctx</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:36">channels</name></name> <operator pos:start="37:38" pos:end="37:38">=</operator> <name pos:start="37:40" pos:end="37:50"><name pos:start="37:40" pos:end="37:41">fi</name><operator pos:start="37:42" pos:end="37:42">.</operator><name pos:start="37:43" pos:end="37:50">channels</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:45"><if pos:start="39:5" pos:end="41:45">if <condition pos:start="39:8" pos:end="39:34">(<expr pos:start="39:9" pos:end="39:33"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:33"><name pos:start="39:10" pos:end="39:10">s</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:17">avctx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:33">channel_layout</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:45"><block_content pos:start="41:9" pos:end="41:45">

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><call pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:34">ff_flac_set_channel_layout</name><argument_list pos:start="41:35" pos:end="41:44">(<argument pos:start="41:36" pos:end="41:43"><expr pos:start="41:36" pos:end="41:43"><name pos:start="41:36" pos:end="41:43"><name pos:start="41:36" pos:end="41:36">s</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:43">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:14">ch_mode</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:27"><name pos:start="43:18" pos:end="43:19">fi</name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:27">ch_mode</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:27">(<expr pos:start="47:9" pos:end="47:26"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:15"><name pos:start="47:10" pos:end="47:10">s</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:15">bps</name></name> <operator pos:start="47:17" pos:end="47:18">&amp;&amp;</operator> <operator pos:start="47:20" pos:end="47:20">!</operator><name pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:22">fi</name><operator pos:start="47:23" pos:end="47:23">.</operator><name pos:start="47:24" pos:end="47:26">bps</name></name></expr>)</condition> <block pos:start="47:29" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35">

        <expr_stmt pos:start="49:9" pos:end="49:88"><expr pos:start="49:9" pos:end="49:87"><call pos:start="49:9" pos:end="49:87"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:87">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">avctx</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:40" pos:end="49:86"><expr pos:start="49:40" pos:end="49:86"><literal type="string" pos:start="49:40" pos:end="49:86">"bps not found in STREAMINFO or frame header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="67:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:15"><name pos:start="55:10" pos:end="55:11">fi</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:15">bps</name></name></expr>)</condition> <block pos:start="55:18" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:24">

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:10">fi</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:14">bps</name></name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:23"><name pos:start="57:18" pos:end="57:18">s</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:23">bps</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="67:5">else if <condition pos:start="59:15" pos:end="59:42">(<expr pos:start="59:16" pos:end="59:41"><name pos:start="59:16" pos:end="59:21"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:21">bps</name></name> <operator pos:start="59:23" pos:end="59:24">&amp;&amp;</operator> <name pos:start="59:26" pos:end="59:31"><name pos:start="59:26" pos:end="59:27">fi</name><operator pos:start="59:28" pos:end="59:28">.</operator><name pos:start="59:29" pos:end="59:31">bps</name></name> <operator pos:start="59:33" pos:end="59:34">!=</operator> <name pos:start="59:36" pos:end="59:41"><name pos:start="59:36" pos:end="59:36">s</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:41">bps</name></name></expr>)</condition> <block pos:start="59:44" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:35">

        <expr_stmt pos:start="61:9" pos:end="63:54"><expr pos:start="61:9" pos:end="63:53"><call pos:start="61:9" pos:end="63:53"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="63:53">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">avctx</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:37"><expr pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:40" pos:end="63:52"><expr pos:start="61:40" pos:end="63:52"><literal type="string" pos:start="61:40" pos:end="61:73">"switching bps mid-stream is not "</literal>

                                       <literal type="string" pos:start="63:40" pos:end="63:52">"supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:16">(<expr pos:start="71:9" pos:end="71:15"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:15"><name pos:start="71:10" pos:end="71:10">s</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:15">bps</name></name></expr>)</condition> <block pos:start="71:18" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:24">

        <expr_stmt pos:start="73:9" pos:end="73:56"><expr pos:start="73:9" pos:end="73:55"><name pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:14">bps</name></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:46"><name pos:start="73:18" pos:end="73:18">s</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:25">avctx</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:46">bits_per_raw_sample</name></name> <operator pos:start="73:48" pos:end="73:48">=</operator> <name pos:start="73:50" pos:end="73:55"><name pos:start="73:50" pos:end="73:51">fi</name><operator pos:start="73:52" pos:end="73:52">.</operator><name pos:start="73:53" pos:end="73:55">bps</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:24"><expr pos:start="75:9" pos:end="75:23"><call pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:20">flac_set_bps</name><argument_list pos:start="75:21" pos:end="75:23">(<argument pos:start="75:22" pos:end="75:22"><expr pos:start="75:22" pos:end="75:22"><name pos:start="75:22" pos:end="75:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="83:46"><if pos:start="81:5" pos:end="83:46">if <condition pos:start="81:8" pos:end="81:26">(<expr pos:start="81:9" pos:end="81:25"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:25"><name pos:start="81:10" pos:end="81:10">s</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:25">max_blocksize</name></name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:46"><block_content pos:start="83:9" pos:end="83:46">

        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:24">max_blocksize</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:45">FLAC_MAX_BLOCKSIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:40">(<expr pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:10">fi</name><operator pos:start="85:11" pos:end="85:11">.</operator><name pos:start="85:12" pos:end="85:20">blocksize</name></name> <operator pos:start="85:22" pos:end="85:22">&gt;</operator> <name pos:start="85:24" pos:end="85:39"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:39">max_blocksize</name></name></expr>)</condition> <block pos:start="85:42" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:35">

        <expr_stmt pos:start="87:9" pos:end="89:33"><expr pos:start="87:9" pos:end="89:32"><call pos:start="87:9" pos:end="89:32"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="89:32">(<argument pos:start="87:16" pos:end="87:23"><expr pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:23">avctx</name></name></expr></argument>, <argument pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:40" pos:end="87:60"><expr pos:start="87:40" pos:end="87:60"><literal type="string" pos:start="87:40" pos:end="87:60">"blocksize %d &gt; %d\n"</literal></expr></argument>, <argument pos:start="87:63" pos:end="87:74"><expr pos:start="87:63" pos:end="87:74"><name pos:start="87:63" pos:end="87:74"><name pos:start="87:63" pos:end="87:64">fi</name><operator pos:start="87:65" pos:end="87:65">.</operator><name pos:start="87:66" pos:end="87:74">blocksize</name></name></expr></argument>,

               <argument pos:start="89:16" pos:end="89:31"><expr pos:start="89:16" pos:end="89:31"><name pos:start="89:16" pos:end="89:31"><name pos:start="89:16" pos:end="89:16">s</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:31">max_blocksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:35">return <expr pos:start="91:16" pos:end="91:34"><name pos:start="91:16" pos:end="91:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:32"><expr pos:start="95:5" pos:end="95:31"><name pos:start="95:5" pos:end="95:16"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:16">blocksize</name></name> <operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:31"><name pos:start="95:20" pos:end="95:21">fi</name><operator pos:start="95:22" pos:end="95:22">.</operator><name pos:start="95:23" pos:end="95:31">blocksize</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:41">(<expr pos:start="99:9" pos:end="99:40"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:22"><name pos:start="99:10" pos:end="99:10">s</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:22">samplerate</name></name> <operator pos:start="99:24" pos:end="99:25">&amp;&amp;</operator> <operator pos:start="99:27" pos:end="99:27">!</operator><name pos:start="99:28" pos:end="99:40"><name pos:start="99:28" pos:end="99:29">fi</name><operator pos:start="99:30" pos:end="99:30">.</operator><name pos:start="99:31" pos:end="99:40">samplerate</name></name></expr>)</condition> <block pos:start="99:43" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:35">

        <expr_stmt pos:start="101:9" pos:end="103:62"><expr pos:start="101:9" pos:end="103:61"><call pos:start="101:9" pos:end="103:61"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="103:61">(<argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:23">avctx</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:40" pos:end="103:60"><expr pos:start="101:40" pos:end="103:60"><literal type="string" pos:start="101:40" pos:end="101:76">"sample rate not found in STREAMINFO"</literal>

                                        <literal type="string" pos:start="103:41" pos:end="103:60">" or frame header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:35">return <expr pos:start="105:16" pos:end="105:34"><name pos:start="105:16" pos:end="105:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="111:38"><if pos:start="109:5" pos:end="111:38">if <condition pos:start="109:8" pos:end="109:27">(<expr pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:10">fi</name><operator pos:start="109:11" pos:end="109:11">.</operator><name pos:start="109:12" pos:end="109:21">samplerate</name></name> <operator pos:start="109:23" pos:end="109:24">==</operator> <literal type="number" pos:start="109:26" pos:end="109:26">0</literal></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:38"><block_content pos:start="111:9" pos:end="111:38">

        <expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:10">fi</name><operator pos:start="111:11" pos:end="111:11">.</operator><name pos:start="111:12" pos:end="111:21">samplerate</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:37"><name pos:start="111:25" pos:end="111:25">s</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:37">samplerate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:58"><expr pos:start="113:5" pos:end="113:57"><name pos:start="113:5" pos:end="113:17"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:17">samplerate</name></name> <operator pos:start="113:19" pos:end="113:19">=</operator> <name pos:start="113:21" pos:end="113:41"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:28">avctx</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:41">sample_rate</name></name> <operator pos:start="113:43" pos:end="113:43">=</operator> <name pos:start="113:45" pos:end="113:57"><name pos:start="113:45" pos:end="113:46">fi</name><operator pos:start="113:47" pos:end="113:47">.</operator><name pos:start="113:48" pos:end="113:57">samplerate</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="131:5"><if pos:start="117:5" pos:end="131:5">if <condition pos:start="117:8" pos:end="117:27">(<expr pos:start="117:9" pos:end="117:26"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:26"><name pos:start="117:10" pos:end="117:10">s</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:26">got_streaminfo</name></name></expr>)</condition> <block pos:start="117:29" pos:end="131:5">{<block_content pos:start="119:9" pos:end="129:52">

        <expr_stmt pos:start="119:9" pos:end="119:34"><expr pos:start="119:9" pos:end="119:33"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <call pos:start="119:15" pos:end="119:33"><name pos:start="119:15" pos:end="119:30">allocate_buffers</name><argument_list pos:start="119:31" pos:end="119:33">(<argument pos:start="119:32" pos:end="119:32"><expr pos:start="119:32" pos:end="119:32"><name pos:start="119:32" pos:end="119:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:23"><if pos:start="121:9" pos:end="123:23">if <condition pos:start="121:12" pos:end="121:20">(<expr pos:start="121:13" pos:end="121:19"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:17">&lt;</operator> <literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:23"><block_content pos:start="123:13" pos:end="123:23">

            <return pos:start="123:13" pos:end="123:23">return <expr pos:start="123:20" pos:end="123:22"><name pos:start="123:20" pos:end="123:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:76"><expr pos:start="125:9" pos:end="125:75"><call pos:start="125:9" pos:end="125:75"><name pos:start="125:9" pos:end="125:23">ff_flacdsp_init</name><argument_list pos:start="125:24" pos:end="125:75">(<argument pos:start="125:25" pos:end="125:31"><expr pos:start="125:25" pos:end="125:31"><operator pos:start="125:25" pos:end="125:25">&amp;</operator><name pos:start="125:26" pos:end="125:31"><name pos:start="125:26" pos:end="125:26">s</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:31">dsp</name></name></expr></argument>, <argument pos:start="125:34" pos:end="125:53"><expr pos:start="125:34" pos:end="125:53"><name pos:start="125:34" pos:end="125:53"><name pos:start="125:34" pos:end="125:34">s</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:41">avctx</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:53">sample_fmt</name></name></expr></argument>, <argument pos:start="125:56" pos:end="125:66"><expr pos:start="125:56" pos:end="125:66"><name pos:start="125:56" pos:end="125:66"><name pos:start="125:56" pos:end="125:56">s</name><operator pos:start="125:57" pos:end="125:58">-&gt;</operator><name pos:start="125:59" pos:end="125:66">channels</name></name></expr></argument>, <argument pos:start="125:69" pos:end="125:74"><expr pos:start="125:69" pos:end="125:74"><name pos:start="125:69" pos:end="125:74"><name pos:start="125:69" pos:end="125:69">s</name><operator pos:start="125:70" pos:end="125:71">-&gt;</operator><name pos:start="125:72" pos:end="125:74">bps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:30"><expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:25">got_streaminfo</name></name> <operator pos:start="127:27" pos:end="127:27">=</operator> <literal type="number" pos:start="127:29" pos:end="127:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:52"><expr pos:start="129:9" pos:end="129:51"><call pos:start="129:9" pos:end="129:51"><name pos:start="129:9" pos:end="129:20">dump_headers</name><argument_list pos:start="129:21" pos:end="129:51">(<argument pos:start="129:22" pos:end="129:29"><expr pos:start="129:22" pos:end="129:29"><name pos:start="129:22" pos:end="129:29"><name pos:start="129:22" pos:end="129:22">s</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:29">avctx</name></name></expr></argument>, <argument pos:start="129:32" pos:end="129:50"><expr pos:start="129:32" pos:end="129:50"><operator pos:start="129:32" pos:end="129:32">(</operator><name pos:start="129:33" pos:end="129:46">FLACStreaminfo</name> <operator pos:start="129:48" pos:end="129:48">*</operator><operator pos:start="129:49" pos:end="129:49">)</operator><name pos:start="129:50" pos:end="129:50">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="135:1" pos:end="135:50">//    dump_headers(s-&gt;avctx, (FLACStreaminfo *)s);</comment>



    <comment type="block" pos:start="139:5" pos:end="139:19">/* subframes */</comment>

    <for pos:start="141:5" pos:end="147:5">for <control pos:start="141:9" pos:end="141:37">(<init pos:start="141:10" pos:end="141:15"><expr pos:start="141:10" pos:end="141:14"><name pos:start="141:10" pos:end="141:10">i</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>;</init> <condition pos:start="141:17" pos:end="141:32"><expr pos:start="141:17" pos:end="141:31"><name pos:start="141:17" pos:end="141:17">i</name> <operator pos:start="141:19" pos:end="141:19">&lt;</operator> <name pos:start="141:21" pos:end="141:31"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:31">channels</name></name></expr>;</condition> <incr pos:start="141:34" pos:end="141:36"><expr pos:start="141:34" pos:end="141:36"><name pos:start="141:34" pos:end="141:34">i</name><operator pos:start="141:35" pos:end="141:36">++</operator></expr></incr>)</control> <block pos:start="141:39" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:23">

        <if_stmt pos:start="143:9" pos:end="145:23"><if pos:start="143:9" pos:end="145:23">if <condition pos:start="143:12" pos:end="143:46">(<expr pos:start="143:13" pos:end="143:45"><operator pos:start="143:13" pos:end="143:13">(</operator><name pos:start="143:14" pos:end="143:16">ret</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <call pos:start="143:20" pos:end="143:40"><name pos:start="143:20" pos:end="143:34">decode_subframe</name><argument_list pos:start="143:35" pos:end="143:40">(<argument pos:start="143:36" pos:end="143:36"><expr pos:start="143:36" pos:end="143:36"><name pos:start="143:36" pos:end="143:36">s</name></expr></argument>, <argument pos:start="143:39" pos:end="143:39"><expr pos:start="143:39" pos:end="143:39"><name pos:start="143:39" pos:end="143:39">i</name></expr></argument>)</argument_list></call><operator pos:start="143:41" pos:end="143:41">)</operator> <operator pos:start="143:43" pos:end="143:43">&lt;</operator> <literal type="number" pos:start="143:45" pos:end="143:45">0</literal></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:23"><block_content pos:start="145:13" pos:end="145:23">

            <return pos:start="145:13" pos:end="145:23">return <expr pos:start="145:20" pos:end="145:22"><name pos:start="145:20" pos:end="145:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="151:5" pos:end="151:23"><expr pos:start="151:5" pos:end="151:22"><call pos:start="151:5" pos:end="151:22"><name pos:start="151:5" pos:end="151:18">align_get_bits</name><argument_list pos:start="151:19" pos:end="151:22">(<argument pos:start="151:20" pos:end="151:21"><expr pos:start="151:20" pos:end="151:21"><name pos:start="151:20" pos:end="151:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="155:5" pos:end="155:22">/* frame footer */</comment>

    <expr_stmt pos:start="157:5" pos:end="157:22"><expr pos:start="157:5" pos:end="157:21"><call pos:start="157:5" pos:end="157:21"><name pos:start="157:5" pos:end="157:13">skip_bits</name><argument_list pos:start="157:14" pos:end="157:21">(<argument pos:start="157:15" pos:end="157:16"><expr pos:start="157:15" pos:end="157:16"><name pos:start="157:15" pos:end="157:16">gb</name></expr></argument>, <argument pos:start="157:19" pos:end="157:20"><expr pos:start="157:19" pos:end="157:20"><literal type="number" pos:start="157:19" pos:end="157:20">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="157:24" pos:end="157:37">/* data crc */</comment>



    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
