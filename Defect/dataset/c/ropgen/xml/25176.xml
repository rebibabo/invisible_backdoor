<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25176.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">disas_simd_3same_logic</name><parameter_list pos:start="1:35" pos:end="1:66">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:47">DisasContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">uint32_t</name></type> <name pos:start="1:62" pos:end="1:65">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:34">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rd</name> <init pos:start="5:12" pos:end="5:34">= <expr pos:start="5:14" pos:end="5:34"><call pos:start="5:14" pos:end="5:34"><name pos:start="5:14" pos:end="5:22">extract32</name><argument_list pos:start="5:23" pos:end="5:34">(<argument pos:start="5:24" pos:end="5:27"><expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">insn</name></expr></argument>, <argument pos:start="5:30" pos:end="5:30"><expr pos:start="5:30" pos:end="5:30"><literal type="number" pos:start="5:30" pos:end="5:30">0</literal></expr></argument>, <argument pos:start="5:33" pos:end="5:33"><expr pos:start="5:33" pos:end="5:33"><literal type="number" pos:start="5:33" pos:end="5:33">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rn</name> <init pos:start="7:12" pos:end="7:34">= <expr pos:start="7:14" pos:end="7:34"><call pos:start="7:14" pos:end="7:34"><name pos:start="7:14" pos:end="7:22">extract32</name><argument_list pos:start="7:23" pos:end="7:34">(<argument pos:start="7:24" pos:end="7:27"><expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">insn</name></expr></argument>, <argument pos:start="7:30" pos:end="7:30"><expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">5</literal></expr></argument>, <argument pos:start="7:33" pos:end="7:33"><expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rm</name> <init pos:start="9:12" pos:end="9:35">= <expr pos:start="9:14" pos:end="9:35"><call pos:start="9:14" pos:end="9:35"><name pos:start="9:14" pos:end="9:22">extract32</name><argument_list pos:start="9:23" pos:end="9:35">(<argument pos:start="9:24" pos:end="9:27"><expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">insn</name></expr></argument>, <argument pos:start="9:30" pos:end="9:31"><expr pos:start="9:30" pos:end="9:31"><literal type="number" pos:start="9:30" pos:end="9:31">16</literal></expr></argument>, <argument pos:start="9:34" pos:end="9:34"><expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name> <init pos:start="11:14" pos:end="11:37">= <expr pos:start="11:16" pos:end="11:37"><call pos:start="11:16" pos:end="11:37"><name pos:start="11:16" pos:end="11:24">extract32</name><argument_list pos:start="11:25" pos:end="11:37">(<argument pos:start="11:26" pos:end="11:29"><expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">insn</name></expr></argument>, <argument pos:start="11:32" pos:end="11:33"><expr pos:start="11:32" pos:end="11:33"><literal type="number" pos:start="11:32" pos:end="11:33">22</literal></expr></argument>, <argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:13">is_u</name> <init pos:start="13:15" pos:end="13:38">= <expr pos:start="13:17" pos:end="13:38"><call pos:start="13:17" pos:end="13:38"><name pos:start="13:17" pos:end="13:25">extract32</name><argument_list pos:start="13:26" pos:end="13:38">(<argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">insn</name></expr></argument>, <argument pos:start="13:33" pos:end="13:34"><expr pos:start="13:33" pos:end="13:34"><literal type="number" pos:start="13:33" pos:end="13:34">29</literal></expr></argument>, <argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:13">is_q</name> <init pos:start="15:15" pos:end="15:38">= <expr pos:start="15:17" pos:end="15:38"><call pos:start="15:17" pos:end="15:38"><name pos:start="15:17" pos:end="15:25">extract32</name><argument_list pos:start="15:26" pos:end="15:38">(<argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">insn</name></expr></argument>, <argument pos:start="15:33" pos:end="15:34"><expr pos:start="15:33" pos:end="15:34"><literal type="number" pos:start="15:33" pos:end="15:34">30</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:37"><expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">TCGv_i64</name></type> <name pos:start="17:14" pos:end="17:20">tcg_op1</name> <init pos:start="17:22" pos:end="17:41">= <expr pos:start="17:24" pos:end="17:41"><call pos:start="17:24" pos:end="17:41"><name pos:start="17:24" pos:end="17:39">tcg_temp_new_i64</name><argument_list pos:start="17:40" pos:end="17:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:41"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">TCGv_i64</name></type> <name pos:start="19:14" pos:end="19:20">tcg_op2</name> <init pos:start="19:22" pos:end="19:41">= <expr pos:start="19:24" pos:end="19:41"><call pos:start="19:24" pos:end="19:41"><name pos:start="19:24" pos:end="19:39">tcg_temp_new_i64</name><argument_list pos:start="19:40" pos:end="19:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">TCGv_i64</name></type> <name pos:start="21:14" pos:end="21:23"><name pos:start="21:14" pos:end="21:20">tcg_res</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:13"><decl pos:start="23:5" pos:end="23:12"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">pass</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:11">tcg_res</name><index pos:start="27:12" pos:end="27:14">[<expr pos:start="27:13" pos:end="27:13"><literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>]</index></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:35"><name pos:start="27:18" pos:end="27:33">tcg_temp_new_i64</name><argument_list pos:start="27:34" pos:end="27:35">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:11">tcg_res</name><index pos:start="29:12" pos:end="29:14">[<expr pos:start="29:13" pos:end="29:13"><literal type="number" pos:start="29:13" pos:end="29:13">1</literal></expr>]</index></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:35"><name pos:start="29:18" pos:end="29:33">tcg_temp_new_i64</name><argument_list pos:start="29:34" pos:end="29:35">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="125:5">for <control pos:start="33:9" pos:end="33:49">(<init pos:start="33:10" pos:end="33:18"><expr pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:13">pass</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>;</init> <condition pos:start="33:20" pos:end="33:41"><expr pos:start="33:20" pos:end="33:40"><name pos:start="33:20" pos:end="33:23">pass</name> <operator pos:start="33:25" pos:end="33:25">&lt;</operator> <operator pos:start="33:27" pos:end="33:27">(</operator><ternary pos:start="33:28" pos:end="33:39"><condition pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">is_q</name></expr> ?</condition><then pos:start="33:35" pos:end="33:35"> <expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">2</literal></expr> </then><else pos:start="33:37" pos:end="33:39">: <expr pos:start="33:39" pos:end="33:39"><literal type="number" pos:start="33:39" pos:end="33:39">1</literal></expr></else></ternary><operator pos:start="33:40" pos:end="33:40">)</operator></expr>;</condition> <incr pos:start="33:43" pos:end="33:48"><expr pos:start="33:43" pos:end="33:48"><name pos:start="33:43" pos:end="33:46">pass</name><operator pos:start="33:47" pos:end="33:48">++</operator></expr></incr>)</control> <block pos:start="33:51" pos:end="125:5">{<block_content pos:start="35:9" pos:end="123:9">

        <expr_stmt pos:start="35:9" pos:end="35:54"><expr pos:start="35:9" pos:end="35:53"><call pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:24">read_vec_element</name><argument_list pos:start="35:25" pos:end="35:53">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">s</name></expr></argument>, <argument pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:35">tcg_op1</name></expr></argument>, <argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">rn</name></expr></argument>, <argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">pass</name></expr></argument>, <argument pos:start="35:48" pos:end="35:52"><expr pos:start="35:48" pos:end="35:52"><name pos:start="35:48" pos:end="35:52">MO_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:54"><expr pos:start="37:9" pos:end="37:53"><call pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:24">read_vec_element</name><argument_list pos:start="37:25" pos:end="37:53">(<argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><name pos:start="37:26" pos:end="37:26">s</name></expr></argument>, <argument pos:start="37:29" pos:end="37:35"><expr pos:start="37:29" pos:end="37:35"><name pos:start="37:29" pos:end="37:35">tcg_op2</name></expr></argument>, <argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><name pos:start="37:38" pos:end="37:39">rm</name></expr></argument>, <argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">pass</name></expr></argument>, <argument pos:start="37:48" pos:end="37:52"><expr pos:start="37:48" pos:end="37:52"><name pos:start="37:48" pos:end="37:52">MO_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="123:9"><if pos:start="41:9" pos:end="71:9">if <condition pos:start="41:12" pos:end="41:18">(<expr pos:start="41:13" pos:end="41:17"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:17">is_u</name></expr>)</condition> <block pos:start="41:20" pos:end="71:9">{<block_content pos:start="43:13" pos:end="69:13">

            <switch pos:start="43:13" pos:end="69:13">switch <condition pos:start="43:20" pos:end="43:25">(<expr pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:24">size</name></expr>)</condition> <block pos:start="43:27" pos:end="69:13">{<block_content pos:start="45:13" pos:end="67:22">

            <case pos:start="45:13" pos:end="45:19">case <expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>:</case> <comment type="block" pos:start="45:21" pos:end="45:29">/* AND */</comment>

                <expr_stmt pos:start="47:17" pos:end="47:65"><expr pos:start="47:17" pos:end="47:64"><call pos:start="47:17" pos:end="47:64"><name pos:start="47:17" pos:end="47:31">tcg_gen_and_i64</name><argument_list pos:start="47:32" pos:end="47:64">(<argument pos:start="47:33" pos:end="47:45"><expr pos:start="47:33" pos:end="47:45"><name pos:start="47:33" pos:end="47:45"><name pos:start="47:33" pos:end="47:39">tcg_res</name><index pos:start="47:40" pos:end="47:45">[<expr pos:start="47:41" pos:end="47:44"><name pos:start="47:41" pos:end="47:44">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="47:48" pos:end="47:54"><expr pos:start="47:48" pos:end="47:54"><name pos:start="47:48" pos:end="47:54">tcg_op1</name></expr></argument>, <argument pos:start="47:57" pos:end="47:63"><expr pos:start="47:57" pos:end="47:63"><name pos:start="47:57" pos:end="47:63">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="49:17" pos:end="49:22">break;</break>

            <case pos:start="51:13" pos:end="51:19">case <expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">1</literal></expr>:</case> <comment type="block" pos:start="51:21" pos:end="51:29">/* BIC */</comment>

                <expr_stmt pos:start="53:17" pos:end="53:66"><expr pos:start="53:17" pos:end="53:65"><call pos:start="53:17" pos:end="53:65"><name pos:start="53:17" pos:end="53:32">tcg_gen_andc_i64</name><argument_list pos:start="53:33" pos:end="53:65">(<argument pos:start="53:34" pos:end="53:46"><expr pos:start="53:34" pos:end="53:46"><name pos:start="53:34" pos:end="53:46"><name pos:start="53:34" pos:end="53:40">tcg_res</name><index pos:start="53:41" pos:end="53:46">[<expr pos:start="53:42" pos:end="53:45"><name pos:start="53:42" pos:end="53:45">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="53:49" pos:end="53:55"><expr pos:start="53:49" pos:end="53:55"><name pos:start="53:49" pos:end="53:55">tcg_op1</name></expr></argument>, <argument pos:start="53:58" pos:end="53:64"><expr pos:start="53:58" pos:end="53:64"><name pos:start="53:58" pos:end="53:64">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            <case pos:start="57:13" pos:end="57:19">case <expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">2</literal></expr>:</case> <comment type="block" pos:start="57:21" pos:end="57:29">/* ORR */</comment>

                <expr_stmt pos:start="59:17" pos:end="59:64"><expr pos:start="59:17" pos:end="59:63"><call pos:start="59:17" pos:end="59:63"><name pos:start="59:17" pos:end="59:30">tcg_gen_or_i64</name><argument_list pos:start="59:31" pos:end="59:63">(<argument pos:start="59:32" pos:end="59:44"><expr pos:start="59:32" pos:end="59:44"><name pos:start="59:32" pos:end="59:44"><name pos:start="59:32" pos:end="59:38">tcg_res</name><index pos:start="59:39" pos:end="59:44">[<expr pos:start="59:40" pos:end="59:43"><name pos:start="59:40" pos:end="59:43">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="59:47" pos:end="59:53"><expr pos:start="59:47" pos:end="59:53"><name pos:start="59:47" pos:end="59:53">tcg_op1</name></expr></argument>, <argument pos:start="59:56" pos:end="59:62"><expr pos:start="59:56" pos:end="59:62"><name pos:start="59:56" pos:end="59:62">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="61:17" pos:end="61:22">break;</break>

            <case pos:start="63:13" pos:end="63:19">case <expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">3</literal></expr>:</case> <comment type="block" pos:start="63:21" pos:end="63:29">/* ORN */</comment>

                <expr_stmt pos:start="65:17" pos:end="65:65"><expr pos:start="65:17" pos:end="65:64"><call pos:start="65:17" pos:end="65:64"><name pos:start="65:17" pos:end="65:31">tcg_gen_orc_i64</name><argument_list pos:start="65:32" pos:end="65:64">(<argument pos:start="65:33" pos:end="65:45"><expr pos:start="65:33" pos:end="65:45"><name pos:start="65:33" pos:end="65:45"><name pos:start="65:33" pos:end="65:39">tcg_res</name><index pos:start="65:40" pos:end="65:45">[<expr pos:start="65:41" pos:end="65:44"><name pos:start="65:41" pos:end="65:44">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="65:48" pos:end="65:54"><expr pos:start="65:48" pos:end="65:54"><name pos:start="65:48" pos:end="65:54">tcg_op1</name></expr></argument>, <argument pos:start="65:57" pos:end="65:63"><expr pos:start="65:57" pos:end="65:63"><name pos:start="65:57" pos:end="65:63">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="67:17" pos:end="67:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="123:9">else <block pos:start="71:16" pos:end="123:9">{<block_content pos:start="73:13" pos:end="121:13">

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:26">(<expr pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:20">size</name> <operator pos:start="73:22" pos:end="73:23">!=</operator> <literal type="number" pos:start="73:25" pos:end="73:25">0</literal></expr>)</condition> <block pos:start="73:28" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:68">

                <comment type="block" pos:start="75:17" pos:end="75:58">/* B* ops need res loaded to operate on */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:68"><expr pos:start="77:17" pos:end="77:67"><call pos:start="77:17" pos:end="77:67"><name pos:start="77:17" pos:end="77:32">read_vec_element</name><argument_list pos:start="77:33" pos:end="77:67">(<argument pos:start="77:34" pos:end="77:34"><expr pos:start="77:34" pos:end="77:34"><name pos:start="77:34" pos:end="77:34">s</name></expr></argument>, <argument pos:start="77:37" pos:end="77:49"><expr pos:start="77:37" pos:end="77:49"><name pos:start="77:37" pos:end="77:49"><name pos:start="77:37" pos:end="77:43">tcg_res</name><index pos:start="77:44" pos:end="77:49">[<expr pos:start="77:45" pos:end="77:48"><name pos:start="77:45" pos:end="77:48">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="77:52" pos:end="77:53"><expr pos:start="77:52" pos:end="77:53"><name pos:start="77:52" pos:end="77:53">rd</name></expr></argument>, <argument pos:start="77:56" pos:end="77:59"><expr pos:start="77:56" pos:end="77:59"><name pos:start="77:56" pos:end="77:59">pass</name></expr></argument>, <argument pos:start="77:62" pos:end="77:66"><expr pos:start="77:62" pos:end="77:66"><name pos:start="77:62" pos:end="77:66">MO_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="83:13" pos:end="121:13">switch <condition pos:start="83:20" pos:end="83:25">(<expr pos:start="83:21" pos:end="83:24"><name pos:start="83:21" pos:end="83:24">size</name></expr>)</condition> <block pos:start="83:27" pos:end="121:13">{<block_content pos:start="85:13" pos:end="119:22">

            <case pos:start="85:13" pos:end="85:19">case <expr pos:start="85:18" pos:end="85:18"><literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>:</case> <comment type="block" pos:start="85:21" pos:end="85:29">/* EOR */</comment>

                <expr_stmt pos:start="87:17" pos:end="87:65"><expr pos:start="87:17" pos:end="87:64"><call pos:start="87:17" pos:end="87:64"><name pos:start="87:17" pos:end="87:31">tcg_gen_xor_i64</name><argument_list pos:start="87:32" pos:end="87:64">(<argument pos:start="87:33" pos:end="87:45"><expr pos:start="87:33" pos:end="87:45"><name pos:start="87:33" pos:end="87:45"><name pos:start="87:33" pos:end="87:39">tcg_res</name><index pos:start="87:40" pos:end="87:45">[<expr pos:start="87:41" pos:end="87:44"><name pos:start="87:41" pos:end="87:44">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="87:48" pos:end="87:54"><expr pos:start="87:48" pos:end="87:54"><name pos:start="87:48" pos:end="87:54">tcg_op1</name></expr></argument>, <argument pos:start="87:57" pos:end="87:63"><expr pos:start="87:57" pos:end="87:63"><name pos:start="87:57" pos:end="87:63">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="89:17" pos:end="89:22">break;</break>

            <case pos:start="91:13" pos:end="91:19">case <expr pos:start="91:18" pos:end="91:18"><literal type="number" pos:start="91:18" pos:end="91:18">1</literal></expr>:</case> <comment type="block" pos:start="91:21" pos:end="91:44">/* BSL bitwise select */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:59"><expr pos:start="93:17" pos:end="93:58"><call pos:start="93:17" pos:end="93:58"><name pos:start="93:17" pos:end="93:31">tcg_gen_xor_i64</name><argument_list pos:start="93:32" pos:end="93:58">(<argument pos:start="93:33" pos:end="93:39"><expr pos:start="93:33" pos:end="93:39"><name pos:start="93:33" pos:end="93:39">tcg_op1</name></expr></argument>, <argument pos:start="93:42" pos:end="93:48"><expr pos:start="93:42" pos:end="93:48"><name pos:start="93:42" pos:end="93:48">tcg_op1</name></expr></argument>, <argument pos:start="93:51" pos:end="93:57"><expr pos:start="93:51" pos:end="93:57"><name pos:start="93:51" pos:end="93:57">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:65"><expr pos:start="95:17" pos:end="95:64"><call pos:start="95:17" pos:end="95:64"><name pos:start="95:17" pos:end="95:31">tcg_gen_and_i64</name><argument_list pos:start="95:32" pos:end="95:64">(<argument pos:start="95:33" pos:end="95:39"><expr pos:start="95:33" pos:end="95:39"><name pos:start="95:33" pos:end="95:39">tcg_op1</name></expr></argument>, <argument pos:start="95:42" pos:end="95:48"><expr pos:start="95:42" pos:end="95:48"><name pos:start="95:42" pos:end="95:48">tcg_op1</name></expr></argument>, <argument pos:start="95:51" pos:end="95:63"><expr pos:start="95:51" pos:end="95:63"><name pos:start="95:51" pos:end="95:63"><name pos:start="95:51" pos:end="95:57">tcg_res</name><index pos:start="95:58" pos:end="95:63">[<expr pos:start="95:59" pos:end="95:62"><name pos:start="95:59" pos:end="95:62">pass</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:65"><expr pos:start="97:17" pos:end="97:64"><call pos:start="97:17" pos:end="97:64"><name pos:start="97:17" pos:end="97:31">tcg_gen_xor_i64</name><argument_list pos:start="97:32" pos:end="97:64">(<argument pos:start="97:33" pos:end="97:45"><expr pos:start="97:33" pos:end="97:45"><name pos:start="97:33" pos:end="97:45"><name pos:start="97:33" pos:end="97:39">tcg_res</name><index pos:start="97:40" pos:end="97:45">[<expr pos:start="97:41" pos:end="97:44"><name pos:start="97:41" pos:end="97:44">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="97:48" pos:end="97:54"><expr pos:start="97:48" pos:end="97:54"><name pos:start="97:48" pos:end="97:54">tcg_op2</name></expr></argument>, <argument pos:start="97:57" pos:end="97:63"><expr pos:start="97:57" pos:end="97:63"><name pos:start="97:57" pos:end="97:63">tcg_op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="99:17" pos:end="99:22">break;</break>

            <case pos:start="101:13" pos:end="101:19">case <expr pos:start="101:18" pos:end="101:18"><literal type="number" pos:start="101:18" pos:end="101:18">2</literal></expr>:</case> <comment type="block" pos:start="101:21" pos:end="101:53">/* BIT, bitwise insert if true */</comment>

                <expr_stmt pos:start="103:17" pos:end="103:65"><expr pos:start="103:17" pos:end="103:64"><call pos:start="103:17" pos:end="103:64"><name pos:start="103:17" pos:end="103:31">tcg_gen_xor_i64</name><argument_list pos:start="103:32" pos:end="103:64">(<argument pos:start="103:33" pos:end="103:39"><expr pos:start="103:33" pos:end="103:39"><name pos:start="103:33" pos:end="103:39">tcg_op1</name></expr></argument>, <argument pos:start="103:42" pos:end="103:48"><expr pos:start="103:42" pos:end="103:48"><name pos:start="103:42" pos:end="103:48">tcg_op1</name></expr></argument>, <argument pos:start="103:51" pos:end="103:63"><expr pos:start="103:51" pos:end="103:63"><name pos:start="103:51" pos:end="103:63"><name pos:start="103:51" pos:end="103:57">tcg_res</name><index pos:start="103:58" pos:end="103:63">[<expr pos:start="103:59" pos:end="103:62"><name pos:start="103:59" pos:end="103:62">pass</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:59"><expr pos:start="105:17" pos:end="105:58"><call pos:start="105:17" pos:end="105:58"><name pos:start="105:17" pos:end="105:31">tcg_gen_and_i64</name><argument_list pos:start="105:32" pos:end="105:58">(<argument pos:start="105:33" pos:end="105:39"><expr pos:start="105:33" pos:end="105:39"><name pos:start="105:33" pos:end="105:39">tcg_op1</name></expr></argument>, <argument pos:start="105:42" pos:end="105:48"><expr pos:start="105:42" pos:end="105:48"><name pos:start="105:42" pos:end="105:48">tcg_op1</name></expr></argument>, <argument pos:start="105:51" pos:end="105:57"><expr pos:start="105:51" pos:end="105:57"><name pos:start="105:51" pos:end="105:57">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:71"><expr pos:start="107:17" pos:end="107:70"><call pos:start="107:17" pos:end="107:70"><name pos:start="107:17" pos:end="107:31">tcg_gen_xor_i64</name><argument_list pos:start="107:32" pos:end="107:70">(<argument pos:start="107:33" pos:end="107:45"><expr pos:start="107:33" pos:end="107:45"><name pos:start="107:33" pos:end="107:45"><name pos:start="107:33" pos:end="107:39">tcg_res</name><index pos:start="107:40" pos:end="107:45">[<expr pos:start="107:41" pos:end="107:44"><name pos:start="107:41" pos:end="107:44">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="107:48" pos:end="107:60"><expr pos:start="107:48" pos:end="107:60"><name pos:start="107:48" pos:end="107:60"><name pos:start="107:48" pos:end="107:54">tcg_res</name><index pos:start="107:55" pos:end="107:60">[<expr pos:start="107:56" pos:end="107:59"><name pos:start="107:56" pos:end="107:59">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="107:63" pos:end="107:69"><expr pos:start="107:63" pos:end="107:69"><name pos:start="107:63" pos:end="107:69">tcg_op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="109:17" pos:end="109:22">break;</break>

            <case pos:start="111:13" pos:end="111:19">case <expr pos:start="111:18" pos:end="111:18"><literal type="number" pos:start="111:18" pos:end="111:18">3</literal></expr>:</case> <comment type="block" pos:start="111:21" pos:end="111:54">/* BIF, bitwise insert if false */</comment>

                <expr_stmt pos:start="113:17" pos:end="113:65"><expr pos:start="113:17" pos:end="113:64"><call pos:start="113:17" pos:end="113:64"><name pos:start="113:17" pos:end="113:31">tcg_gen_xor_i64</name><argument_list pos:start="113:32" pos:end="113:64">(<argument pos:start="113:33" pos:end="113:39"><expr pos:start="113:33" pos:end="113:39"><name pos:start="113:33" pos:end="113:39">tcg_op1</name></expr></argument>, <argument pos:start="113:42" pos:end="113:48"><expr pos:start="113:42" pos:end="113:48"><name pos:start="113:42" pos:end="113:48">tcg_op1</name></expr></argument>, <argument pos:start="113:51" pos:end="113:63"><expr pos:start="113:51" pos:end="113:63"><name pos:start="113:51" pos:end="113:63"><name pos:start="113:51" pos:end="113:57">tcg_res</name><index pos:start="113:58" pos:end="113:63">[<expr pos:start="113:59" pos:end="113:62"><name pos:start="113:59" pos:end="113:62">pass</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:60"><expr pos:start="115:17" pos:end="115:59"><call pos:start="115:17" pos:end="115:59"><name pos:start="115:17" pos:end="115:32">tcg_gen_andc_i64</name><argument_list pos:start="115:33" pos:end="115:59">(<argument pos:start="115:34" pos:end="115:40"><expr pos:start="115:34" pos:end="115:40"><name pos:start="115:34" pos:end="115:40">tcg_op1</name></expr></argument>, <argument pos:start="115:43" pos:end="115:49"><expr pos:start="115:43" pos:end="115:49"><name pos:start="115:43" pos:end="115:49">tcg_op1</name></expr></argument>, <argument pos:start="115:52" pos:end="115:58"><expr pos:start="115:52" pos:end="115:58"><name pos:start="115:52" pos:end="115:58">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:71"><expr pos:start="117:17" pos:end="117:70"><call pos:start="117:17" pos:end="117:70"><name pos:start="117:17" pos:end="117:31">tcg_gen_xor_i64</name><argument_list pos:start="117:32" pos:end="117:70">(<argument pos:start="117:33" pos:end="117:45"><expr pos:start="117:33" pos:end="117:45"><name pos:start="117:33" pos:end="117:45"><name pos:start="117:33" pos:end="117:39">tcg_res</name><index pos:start="117:40" pos:end="117:45">[<expr pos:start="117:41" pos:end="117:44"><name pos:start="117:41" pos:end="117:44">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="117:48" pos:end="117:60"><expr pos:start="117:48" pos:end="117:60"><name pos:start="117:48" pos:end="117:60"><name pos:start="117:48" pos:end="117:54">tcg_res</name><index pos:start="117:55" pos:end="117:60">[<expr pos:start="117:56" pos:end="117:59"><name pos:start="117:56" pos:end="117:59">pass</name></expr>]</index></name></expr></argument>, <argument pos:start="117:63" pos:end="117:69"><expr pos:start="117:63" pos:end="117:69"><name pos:start="117:63" pos:end="117:69">tcg_op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="119:17" pos:end="119:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="129:5" pos:end="129:51"><expr pos:start="129:5" pos:end="129:50"><call pos:start="129:5" pos:end="129:50"><name pos:start="129:5" pos:end="129:21">write_vec_element</name><argument_list pos:start="129:22" pos:end="129:50">(<argument pos:start="129:23" pos:end="129:23"><expr pos:start="129:23" pos:end="129:23"><name pos:start="129:23" pos:end="129:23">s</name></expr></argument>, <argument pos:start="129:26" pos:end="129:35"><expr pos:start="129:26" pos:end="129:35"><name pos:start="129:26" pos:end="129:35"><name pos:start="129:26" pos:end="129:32">tcg_res</name><index pos:start="129:33" pos:end="129:35">[<expr pos:start="129:34" pos:end="129:34"><literal type="number" pos:start="129:34" pos:end="129:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="129:38" pos:end="129:39"><expr pos:start="129:38" pos:end="129:39"><name pos:start="129:38" pos:end="129:39">rd</name></expr></argument>, <argument pos:start="129:42" pos:end="129:42"><expr pos:start="129:42" pos:end="129:42"><literal type="number" pos:start="129:42" pos:end="129:42">0</literal></expr></argument>, <argument pos:start="129:45" pos:end="129:49"><expr pos:start="129:45" pos:end="129:49"><name pos:start="129:45" pos:end="129:49">MO_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="135:5"><if pos:start="131:5" pos:end="135:5">if <condition pos:start="131:8" pos:end="131:14">(<expr pos:start="131:9" pos:end="131:13"><operator pos:start="131:9" pos:end="131:9">!</operator><name pos:start="131:10" pos:end="131:13">is_q</name></expr>)</condition> <block pos:start="131:16" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:40">

        <expr_stmt pos:start="133:9" pos:end="133:40"><expr pos:start="133:9" pos:end="133:39"><call pos:start="133:9" pos:end="133:39"><name pos:start="133:9" pos:end="133:24">tcg_gen_movi_i64</name><argument_list pos:start="133:25" pos:end="133:39">(<argument pos:start="133:26" pos:end="133:35"><expr pos:start="133:26" pos:end="133:35"><name pos:start="133:26" pos:end="133:35"><name pos:start="133:26" pos:end="133:32">tcg_res</name><index pos:start="133:33" pos:end="133:35">[<expr pos:start="133:34" pos:end="133:34"><literal type="number" pos:start="133:34" pos:end="133:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:38" pos:end="133:38"><expr pos:start="133:38" pos:end="133:38"><literal type="number" pos:start="133:38" pos:end="133:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:51"><expr pos:start="137:5" pos:end="137:50"><call pos:start="137:5" pos:end="137:50"><name pos:start="137:5" pos:end="137:21">write_vec_element</name><argument_list pos:start="137:22" pos:end="137:50">(<argument pos:start="137:23" pos:end="137:23"><expr pos:start="137:23" pos:end="137:23"><name pos:start="137:23" pos:end="137:23">s</name></expr></argument>, <argument pos:start="137:26" pos:end="137:35"><expr pos:start="137:26" pos:end="137:35"><name pos:start="137:26" pos:end="137:35"><name pos:start="137:26" pos:end="137:32">tcg_res</name><index pos:start="137:33" pos:end="137:35">[<expr pos:start="137:34" pos:end="137:34"><literal type="number" pos:start="137:34" pos:end="137:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="137:38" pos:end="137:39"><expr pos:start="137:38" pos:end="137:39"><name pos:start="137:38" pos:end="137:39">rd</name></expr></argument>, <argument pos:start="137:42" pos:end="137:42"><expr pos:start="137:42" pos:end="137:42"><literal type="number" pos:start="137:42" pos:end="137:42">1</literal></expr></argument>, <argument pos:start="137:45" pos:end="137:49"><expr pos:start="137:45" pos:end="137:49"><name pos:start="137:45" pos:end="137:49">MO_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:31"><expr pos:start="141:5" pos:end="141:30"><call pos:start="141:5" pos:end="141:30"><name pos:start="141:5" pos:end="141:21">tcg_temp_free_i64</name><argument_list pos:start="141:22" pos:end="141:30">(<argument pos:start="141:23" pos:end="141:29"><expr pos:start="141:23" pos:end="141:29"><name pos:start="141:23" pos:end="141:29">tcg_op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:31"><expr pos:start="143:5" pos:end="143:30"><call pos:start="143:5" pos:end="143:30"><name pos:start="143:5" pos:end="143:21">tcg_temp_free_i64</name><argument_list pos:start="143:22" pos:end="143:30">(<argument pos:start="143:23" pos:end="143:29"><expr pos:start="143:23" pos:end="143:29"><name pos:start="143:23" pos:end="143:29">tcg_op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:34"><expr pos:start="145:5" pos:end="145:33"><call pos:start="145:5" pos:end="145:33"><name pos:start="145:5" pos:end="145:21">tcg_temp_free_i64</name><argument_list pos:start="145:22" pos:end="145:33">(<argument pos:start="145:23" pos:end="145:32"><expr pos:start="145:23" pos:end="145:32"><name pos:start="145:23" pos:end="145:32"><name pos:start="145:23" pos:end="145:29">tcg_res</name><index pos:start="145:30" pos:end="145:32">[<expr pos:start="145:31" pos:end="145:31"><literal type="number" pos:start="145:31" pos:end="145:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:34"><expr pos:start="147:5" pos:end="147:33"><call pos:start="147:5" pos:end="147:33"><name pos:start="147:5" pos:end="147:21">tcg_temp_free_i64</name><argument_list pos:start="147:22" pos:end="147:33">(<argument pos:start="147:23" pos:end="147:32"><expr pos:start="147:23" pos:end="147:32"><name pos:start="147:23" pos:end="147:32"><name pos:start="147:23" pos:end="147:29">tcg_res</name><index pos:start="147:30" pos:end="147:32">[<expr pos:start="147:31" pos:end="147:31"><literal type="number" pos:start="147:31" pos:end="147:31">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
