<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/261.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">adts_aac_read_packet</name><parameter_list pos:start="1:32" pos:end="1:66">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:47">AVFormatContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:66">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:18">fsize</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:53"><name pos:start="9:11" pos:end="9:23">av_get_packet</name><argument_list pos:start="9:24" pos:end="9:53">(<argument pos:start="9:25" pos:end="9:29"><expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></argument>, <argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">pkt</name></expr></argument>, <argument pos:start="9:37" pos:end="9:52"><expr pos:start="9:37" pos:end="9:52"><name pos:start="9:37" pos:end="9:52">ADTS_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:19"><if pos:start="11:5" pos:end="13:19">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <name pos:start="15:15" pos:end="15:30">ADTS_HEADER_SIZE</name></expr>)</condition> <block pos:start="15:33" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:28">

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:23">av_packet_unref</name><argument_list pos:start="17:24" pos:end="17:28">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:28">return <expr pos:start="19:16" pos:end="19:27"><call pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:27">(<argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:43">(<expr pos:start="25:9" pos:end="25:42"><operator pos:start="25:9" pos:end="25:9">(</operator><call pos:start="25:10" pos:end="25:27"><name pos:start="25:10" pos:end="25:16">AV_RB16</name><argument_list pos:start="25:17" pos:end="25:27">(<argument pos:start="25:18" pos:end="25:26"><expr pos:start="25:18" pos:end="25:26"><name pos:start="25:18" pos:end="25:26"><name pos:start="25:18" pos:end="25:20">pkt</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:26">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:29" pos:end="25:30">&gt;&gt;</operator> <literal type="number" pos:start="25:32" pos:end="25:32">4</literal><operator pos:start="25:33" pos:end="25:33">)</operator> <operator pos:start="25:35" pos:end="25:36">!=</operator> <literal type="number" pos:start="25:38" pos:end="25:42">0xfff</literal></expr>)</condition> <block pos:start="25:45" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:35">

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><call pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:23">av_packet_unref</name><argument_list pos:start="27:24" pos:end="27:28">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:35">return <expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:9">fsize</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <operator pos:start="35:13" pos:end="35:13">(</operator><call pos:start="35:14" pos:end="35:35"><name pos:start="35:14" pos:end="35:20">AV_RB32</name><argument_list pos:start="35:21" pos:end="35:35">(<argument pos:start="35:22" pos:end="35:34"><expr pos:start="35:22" pos:end="35:34"><name pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:24">pkt</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:30">data</name></name> <operator pos:start="35:32" pos:end="35:32">+</operator> <literal type="number" pos:start="35:34" pos:end="35:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="35:37" pos:end="35:38">&gt;&gt;</operator> <literal type="number" pos:start="35:40" pos:end="35:41">13</literal><operator pos:start="35:42" pos:end="35:42">)</operator> <operator pos:start="35:44" pos:end="35:44">&amp;</operator> <literal type="number" pos:start="35:46" pos:end="35:51">0x1FFF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:33">(<expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:13">fsize</name> <operator pos:start="37:15" pos:end="37:15">&lt;</operator> <name pos:start="37:17" pos:end="37:32">ADTS_HEADER_SIZE</name></expr>)</condition> <block pos:start="37:35" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:35">

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><call pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:23">av_packet_unref</name><argument_list pos:start="39:24" pos:end="39:28">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="47:5" pos:end="47:66">return <expr pos:start="47:12" pos:end="47:65"><call pos:start="47:12" pos:end="47:65"><name pos:start="47:12" pos:end="47:27">av_append_packet</name><argument_list pos:start="47:28" pos:end="47:65">(<argument pos:start="47:29" pos:end="47:33"><expr pos:start="47:29" pos:end="47:33"><name pos:start="47:29" pos:end="47:33"><name pos:start="47:29" pos:end="47:29">s</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:33">pb</name></name></expr></argument>, <argument pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><name pos:start="47:36" pos:end="47:38">pkt</name></expr></argument>, <argument pos:start="47:41" pos:end="47:64"><expr pos:start="47:41" pos:end="47:64"><name pos:start="47:41" pos:end="47:45">fsize</name> <operator pos:start="47:47" pos:end="47:47">-</operator> <name pos:start="47:49" pos:end="47:64">ADTS_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
