<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2111.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_i_frame</name><parameter_list pos:start="1:26" pos:end="1:74">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">FourXContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">buf</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:73">length</name></decl></parameter>)</parameter_list><block pos:start="1:75" pos:end="95:1">{<block_content pos:start="3:5" pos:end="93:13">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">x</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:19">width</name><init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:22">f</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:36">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:20">height</name><init pos:start="7:21" pos:end="7:38">= <expr pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:23">f</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint16_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">dst</name><init pos:start="9:18" pos:end="9:56">= <expr pos:start="9:20" pos:end="9:56"><operator pos:start="9:20" pos:end="9:20">(</operator><name pos:start="9:21" pos:end="9:28">uint16_t</name><operator pos:start="9:29" pos:end="9:29">*</operator><operator pos:start="9:30" pos:end="9:30">)</operator><name pos:start="9:31" pos:end="9:56"><name pos:start="9:31" pos:end="9:31">f</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:48">current_picture</name><operator pos:start="9:49" pos:end="9:49">.</operator><name pos:start="9:50" pos:end="9:53">data</name><index pos:start="9:54" pos:end="9:56">[<expr pos:start="9:55" pos:end="9:55"><literal type="number" pos:start="9:55" pos:end="9:55">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:20">stride</name><init pos:start="11:21" pos:end="11:55">= <expr pos:start="11:23" pos:end="11:55"><name pos:start="11:23" pos:end="11:52"><name pos:start="11:23" pos:end="11:23">f</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:40">current_picture</name><operator pos:start="11:41" pos:end="11:41">.</operator><name pos:start="11:42" pos:end="11:49">linesize</name><index pos:start="11:50" pos:end="11:52">[<expr pos:start="11:51" pos:end="11:51"><literal type="number" pos:start="11:51" pos:end="11:51">0</literal></expr>]</index></name><operator pos:start="11:53" pos:end="11:54">&gt;&gt;</operator><literal type="number" pos:start="11:55" pos:end="11:55">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:22"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:18">unsigned</name> <name pos:start="13:20" pos:end="13:22">int</name></type> <name pos:start="13:24" pos:end="13:37">bitstream_size</name><init pos:start="13:38" pos:end="13:51">= <expr pos:start="13:40" pos:end="13:51"><call pos:start="13:40" pos:end="13:51"><name pos:start="13:40" pos:end="13:46">AV_RL32</name><argument_list pos:start="13:47" pos:end="13:51">(<argument pos:start="13:48" pos:end="13:50"><expr pos:start="13:48" pos:end="13:50"><name pos:start="13:48" pos:end="13:50">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:72"><decl pos:start="15:5" pos:end="15:71"><type pos:start="15:5" pos:end="15:25"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name> <name pos:start="15:15" pos:end="15:25">token_count</name></type> <name pos:start="15:27" pos:end="15:35">av_unused</name> <init pos:start="15:37" pos:end="15:71">= <expr pos:start="15:39" pos:end="15:71"><call pos:start="15:39" pos:end="15:71"><name pos:start="15:39" pos:end="15:45">AV_RL32</name><argument_list pos:start="15:46" pos:end="15:71">(<argument pos:start="15:47" pos:end="15:70"><expr pos:start="15:47" pos:end="15:70"><name pos:start="15:47" pos:end="15:49">buf</name> <operator pos:start="15:51" pos:end="15:51">+</operator> <name pos:start="15:53" pos:end="15:66">bitstream_size</name> <operator pos:start="15:68" pos:end="15:68">+</operator> <literal type="number" pos:start="15:70" pos:end="15:70">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:69"><decl pos:start="17:5" pos:end="17:68"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:31">prestream_size</name><init pos:start="17:32" pos:end="17:68">= <expr pos:start="17:34" pos:end="17:68"><literal type="number" pos:start="17:34" pos:end="17:34">4</literal><operator pos:start="17:35" pos:end="17:35">*</operator><call pos:start="17:36" pos:end="17:68"><name pos:start="17:36" pos:end="17:42">AV_RL32</name><argument_list pos:start="17:43" pos:end="17:68">(<argument pos:start="17:44" pos:end="17:67"><expr pos:start="17:44" pos:end="17:67"><name pos:start="17:44" pos:end="17:46">buf</name> <operator pos:start="17:48" pos:end="17:48">+</operator> <name pos:start="17:50" pos:end="17:63">bitstream_size</name> <operator pos:start="17:65" pos:end="17:65">+</operator> <literal type="number" pos:start="17:67" pos:end="17:67">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:56"><decl pos:start="19:5" pos:end="19:55"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:28">prestream</name><init pos:start="19:29" pos:end="19:55">= <expr pos:start="19:31" pos:end="19:55"><name pos:start="19:31" pos:end="19:33">buf</name> <operator pos:start="19:35" pos:end="19:35">+</operator> <name pos:start="19:37" pos:end="19:50">bitstream_size</name> <operator pos:start="19:52" pos:end="19:52">+</operator> <literal type="number" pos:start="19:54" pos:end="19:55">12</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if<condition pos:start="23:7" pos:end="27:35">(<expr pos:start="23:8" pos:end="27:34"><name pos:start="23:8" pos:end="23:21">prestream_size</name> <operator pos:start="23:23" pos:end="23:23">+</operator> <name pos:start="23:25" pos:end="23:38">bitstream_size</name> <operator pos:start="23:40" pos:end="23:40">+</operator> <literal type="number" pos:start="23:42" pos:end="23:43">12</literal> <operator pos:start="23:45" pos:end="23:46">!=</operator> <name pos:start="23:48" pos:end="23:53">length</name>

       <operator pos:start="25:8" pos:end="25:9">||</operator> <name pos:start="25:11" pos:end="25:24">bitstream_size</name> <operator pos:start="25:26" pos:end="25:26">&gt;</operator> <operator pos:start="25:28" pos:end="25:28">(</operator><literal type="number" pos:start="25:29" pos:end="25:29">1</literal><operator pos:start="25:30" pos:end="25:31">&lt;&lt;</operator><literal type="number" pos:start="25:32" pos:end="25:33">26</literal><operator pos:start="25:34" pos:end="25:34">)</operator>

       <operator pos:start="27:8" pos:end="27:9">||</operator> <name pos:start="27:11" pos:end="27:24">prestream_size</name> <operator pos:start="27:26" pos:end="27:26">&gt;</operator> <operator pos:start="27:28" pos:end="27:28">(</operator><literal type="number" pos:start="27:29" pos:end="27:29">1</literal><operator pos:start="27:30" pos:end="27:31">&lt;&lt;</operator><literal type="number" pos:start="27:32" pos:end="27:33">26</literal><operator pos:start="27:34" pos:end="27:34">)</operator></expr>)</condition><block pos:start="27:36" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:107"><expr pos:start="29:9" pos:end="29:106"><call pos:start="29:9" pos:end="29:106"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:106">(<argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:16">f</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">avctx</name></name></expr></argument>, <argument pos:start="29:26" pos:end="29:37"><expr pos:start="29:26" pos:end="29:37"><name pos:start="29:26" pos:end="29:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:40" pos:end="29:65"><expr pos:start="29:40" pos:end="29:65"><literal type="string" pos:start="29:40" pos:end="29:65">"size mismatch %d %d %d\n"</literal></expr></argument>, <argument pos:start="29:68" pos:end="29:81"><expr pos:start="29:68" pos:end="29:81"><name pos:start="29:68" pos:end="29:81">prestream_size</name></expr></argument>, <argument pos:start="29:84" pos:end="29:97"><expr pos:start="29:84" pos:end="29:97"><name pos:start="29:84" pos:end="29:97">bitstream_size</name></expr></argument>, <argument pos:start="29:100" pos:end="29:105"><expr pos:start="29:100" pos:end="29:105"><name pos:start="29:100" pos:end="29:105">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:13">prestream</name><operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:48"><name pos:start="37:16" pos:end="37:34">read_huffman_tables</name><argument_list pos:start="37:35" pos:end="37:48">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">f</name></expr></argument>, <argument pos:start="37:39" pos:end="37:47"><expr pos:start="37:39" pos:end="37:47"><name pos:start="37:39" pos:end="37:47">prestream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><call pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:17">init_get_bits</name><argument_list pos:start="41:18" pos:end="41:52">(<argument pos:start="41:19" pos:end="41:24"><expr pos:start="41:19" pos:end="41:24"><operator pos:start="41:19" pos:end="41:19">&amp;</operator><name pos:start="41:20" pos:end="41:24"><name pos:start="41:20" pos:end="41:20">f</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:24">gb</name></name></expr></argument>, <argument pos:start="41:27" pos:end="41:33"><expr pos:start="41:27" pos:end="41:33"><name pos:start="41:27" pos:end="41:29">buf</name> <operator pos:start="41:31" pos:end="41:31">+</operator> <literal type="number" pos:start="41:33" pos:end="41:33">4</literal></expr></argument>, <argument pos:start="41:36" pos:end="41:51"><expr pos:start="41:36" pos:end="41:51"><literal type="number" pos:start="41:36" pos:end="41:36">8</literal><operator pos:start="41:37" pos:end="41:37">*</operator><name pos:start="41:38" pos:end="41:51">bitstream_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:18">prestream_size</name><operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:26">length</name> <operator pos:start="45:28" pos:end="45:28">+</operator> <name pos:start="45:30" pos:end="45:32">buf</name> <operator pos:start="45:34" pos:end="45:34">-</operator> <name pos:start="45:36" pos:end="45:44">prestream</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:115"><expr pos:start="49:5" pos:end="49:114"><call pos:start="49:5" pos:end="49:114"><name pos:start="49:5" pos:end="49:18">av_fast_malloc</name><argument_list pos:start="49:19" pos:end="49:114">(<argument pos:start="49:20" pos:end="49:39"><expr pos:start="49:20" pos:end="49:39"><operator pos:start="49:20" pos:end="49:20">&amp;</operator><name pos:start="49:21" pos:end="49:39"><name pos:start="49:21" pos:end="49:21">f</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:39">bitstream_buffer</name></name></expr></argument>, <argument pos:start="49:42" pos:end="49:66"><expr pos:start="49:42" pos:end="49:66"><operator pos:start="49:42" pos:end="49:42">&amp;</operator><name pos:start="49:43" pos:end="49:66"><name pos:start="49:43" pos:end="49:43">f</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:66">bitstream_buffer_size</name></name></expr></argument>, <argument pos:start="49:69" pos:end="49:113"><expr pos:start="49:69" pos:end="49:113"><name pos:start="49:69" pos:end="49:82">prestream_size</name> <operator pos:start="49:84" pos:end="49:84">+</operator> <name pos:start="49:86" pos:end="49:113">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:31"><if pos:start="51:5" pos:end="53:31">if <condition pos:start="51:8" pos:end="51:29">(<expr pos:start="51:9" pos:end="51:28"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:28"><name pos:start="51:10" pos:end="51:10">f</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:28">bitstream_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:31"><block_content pos:start="53:9" pos:end="53:31">

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:88"><expr pos:start="55:5" pos:end="55:87"><call pos:start="55:5" pos:end="55:87"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:5">f</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:10">dsp</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:20">bswap_buf</name></name><argument_list pos:start="55:21" pos:end="55:87">(<argument pos:start="55:22" pos:end="55:40"><expr pos:start="55:22" pos:end="55:40"><name pos:start="55:22" pos:end="55:40"><name pos:start="55:22" pos:end="55:22">f</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:40">bitstream_buffer</name></name></expr></argument>, <argument pos:start="55:43" pos:end="55:68"><expr pos:start="55:43" pos:end="55:68"><operator pos:start="55:43" pos:end="55:43">(</operator><specifier pos:start="55:44" pos:end="55:48">const</specifier> <name pos:start="55:50" pos:end="55:57">uint32_t</name><operator pos:start="55:58" pos:end="55:58">*</operator><operator pos:start="55:59" pos:end="55:59">)</operator><name pos:start="55:60" pos:end="55:68">prestream</name></expr></argument>, <argument pos:start="55:71" pos:end="55:86"><expr pos:start="55:71" pos:end="55:86"><name pos:start="55:71" pos:end="55:84">prestream_size</name><operator pos:start="55:85" pos:end="55:85">/</operator><literal type="number" pos:start="55:86" pos:end="55:86">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:92"><expr pos:start="57:5" pos:end="57:91"><call pos:start="57:5" pos:end="57:91"><name pos:start="57:5" pos:end="57:10">memset</name><argument_list pos:start="57:11" pos:end="57:91">(<argument pos:start="57:12" pos:end="57:57"><expr pos:start="57:12" pos:end="57:57"><operator pos:start="57:12" pos:end="57:12">(</operator><name pos:start="57:13" pos:end="57:19">uint8_t</name><operator pos:start="57:20" pos:end="57:20">*</operator><operator pos:start="57:21" pos:end="57:21">)</operator><name pos:start="57:22" pos:end="57:40"><name pos:start="57:22" pos:end="57:22">f</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:40">bitstream_buffer</name></name> <operator pos:start="57:42" pos:end="57:42">+</operator> <name pos:start="57:44" pos:end="57:57">prestream_size</name></expr></argument>, <argument pos:start="57:60" pos:end="57:60"><expr pos:start="57:60" pos:end="57:60"><literal type="number" pos:start="57:60" pos:end="57:60">0</literal></expr></argument>, <argument pos:start="57:63" pos:end="57:90"><expr pos:start="57:63" pos:end="57:90"><name pos:start="57:63" pos:end="57:90">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:69"><expr pos:start="59:5" pos:end="59:68"><call pos:start="59:5" pos:end="59:68"><name pos:start="59:5" pos:end="59:17">init_get_bits</name><argument_list pos:start="59:18" pos:end="59:68">(<argument pos:start="59:19" pos:end="59:28"><expr pos:start="59:19" pos:end="59:28"><operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:20">f</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:28">pre_gb</name></name></expr></argument>, <argument pos:start="59:31" pos:end="59:49"><expr pos:start="59:31" pos:end="59:49"><name pos:start="59:31" pos:end="59:49"><name pos:start="59:31" pos:end="59:31">f</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:49">bitstream_buffer</name></name></expr></argument>, <argument pos:start="59:52" pos:end="59:67"><expr pos:start="59:52" pos:end="59:67"><literal type="number" pos:start="59:52" pos:end="59:52">8</literal><operator pos:start="59:53" pos:end="59:53">*</operator><name pos:start="59:54" pos:end="59:67">prestream_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:26"><expr pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:14"><name pos:start="63:5" pos:end="63:5">f</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:14">last_dc</name></name><operator pos:start="63:15" pos:end="63:15">=</operator> <literal type="number" pos:start="63:17" pos:end="63:17">0</literal><operator pos:start="63:18" pos:end="63:18">*</operator><literal type="number" pos:start="63:19" pos:end="63:21">128</literal><operator pos:start="63:22" pos:end="63:22">*</operator><literal type="number" pos:start="63:23" pos:end="63:23">8</literal><operator pos:start="63:24" pos:end="63:24">*</operator><literal type="number" pos:start="63:25" pos:end="63:25">8</literal></expr>;</expr_stmt>



    <for pos:start="67:5" pos:end="83:5">for<control pos:start="67:8" pos:end="67:29">(<init pos:start="67:9" pos:end="67:12"><expr pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:9">y</name><operator pos:start="67:10" pos:end="67:10">=</operator><literal type="number" pos:start="67:11" pos:end="67:11">0</literal></expr>;</init> <condition pos:start="67:14" pos:end="67:22"><expr pos:start="67:14" pos:end="67:21"><name pos:start="67:14" pos:end="67:14">y</name><operator pos:start="67:15" pos:end="67:15">&lt;</operator><name pos:start="67:16" pos:end="67:21">height</name></expr>;</condition> <incr pos:start="67:24" pos:end="67:28"><expr pos:start="67:24" pos:end="67:28"><name pos:start="67:24" pos:end="67:24">y</name><operator pos:start="67:25" pos:end="67:26">+=</operator><literal type="number" pos:start="67:27" pos:end="67:28">16</literal></expr></incr>)</control><block pos:start="67:30" pos:end="83:5">{<block_content pos:start="69:9" pos:end="81:25">

        <for pos:start="69:9" pos:end="79:9">for<control pos:start="69:12" pos:end="69:32">(<init pos:start="69:13" pos:end="69:16"><expr pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:13">x</name><operator pos:start="69:14" pos:end="69:14">=</operator><literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>;</init> <condition pos:start="69:18" pos:end="69:25"><expr pos:start="69:18" pos:end="69:24"><name pos:start="69:18" pos:end="69:18">x</name><operator pos:start="69:19" pos:end="69:19">&lt;</operator><name pos:start="69:20" pos:end="69:24">width</name></expr>;</condition> <incr pos:start="69:27" pos:end="69:31"><expr pos:start="69:27" pos:end="69:31"><name pos:start="69:27" pos:end="69:27">x</name><operator pos:start="69:28" pos:end="69:29">+=</operator><literal type="number" pos:start="69:30" pos:end="69:31">16</literal></expr></incr>)</control><block pos:start="69:33" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:30">

            <if_stmt pos:start="71:13" pos:end="73:26"><if pos:start="71:13" pos:end="73:26">if<condition pos:start="71:15" pos:end="71:34">(<expr pos:start="71:16" pos:end="71:33"><call pos:start="71:16" pos:end="71:29"><name pos:start="71:16" pos:end="71:26">decode_i_mb</name><argument_list pos:start="71:27" pos:end="71:29">(<argument pos:start="71:28" pos:end="71:28"><expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">f</name></expr></argument>)</argument_list></call> <operator pos:start="71:31" pos:end="71:31">&lt;</operator> <literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:26"><block_content pos:start="73:17" pos:end="73:26">

                <return pos:start="73:17" pos:end="73:26">return <expr pos:start="73:24" pos:end="73:25"><operator pos:start="73:24" pos:end="73:24">-</operator><literal type="number" pos:start="73:25" pos:end="73:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="77:13" pos:end="77:30"><expr pos:start="77:13" pos:end="77:29"><call pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:20">idct_put</name><argument_list pos:start="77:21" pos:end="77:29">(<argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><name pos:start="77:22" pos:end="77:22">f</name></expr></argument>, <argument pos:start="77:25" pos:end="77:25"><expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">x</name></expr></argument>, <argument pos:start="77:28" pos:end="77:28"><expr pos:start="77:28" pos:end="77:28"><name pos:start="77:28" pos:end="77:28">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="81:9" pos:end="81:25"><expr pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:11">dst</name> <operator pos:start="81:13" pos:end="81:14">+=</operator> <literal type="number" pos:start="81:16" pos:end="81:17">16</literal><operator pos:start="81:18" pos:end="81:18">*</operator><name pos:start="81:19" pos:end="81:24">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="87:5" pos:end="89:57"><if pos:start="87:5" pos:end="89:57">if<condition pos:start="87:7" pos:end="87:71">(<expr pos:start="87:8" pos:end="87:70"><call pos:start="87:8" pos:end="87:63"><name pos:start="87:8" pos:end="87:15">get_vlc2</name><argument_list pos:start="87:16" pos:end="87:63">(<argument pos:start="87:17" pos:end="87:26"><expr pos:start="87:17" pos:end="87:26"><operator pos:start="87:17" pos:end="87:17">&amp;</operator><name pos:start="87:18" pos:end="87:26"><name pos:start="87:18" pos:end="87:18">f</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:26">pre_gb</name></name></expr></argument>, <argument pos:start="87:29" pos:end="87:44"><expr pos:start="87:29" pos:end="87:44"><name pos:start="87:29" pos:end="87:44"><name pos:start="87:29" pos:end="87:29">f</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:38">pre_vlc</name><operator pos:start="87:39" pos:end="87:39">.</operator><name pos:start="87:40" pos:end="87:44">table</name></name></expr></argument>, <argument pos:start="87:47" pos:end="87:59"><expr pos:start="87:47" pos:end="87:59"><name pos:start="87:47" pos:end="87:59">ACDC_VLC_BITS</name></expr></argument>, <argument pos:start="87:62" pos:end="87:62"><expr pos:start="87:62" pos:end="87:62"><literal type="number" pos:start="87:62" pos:end="87:62">3</literal></expr></argument>)</argument_list></call> <operator pos:start="87:65" pos:end="87:66">!=</operator> <literal type="number" pos:start="87:68" pos:end="87:70">256</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:57"><block_content pos:start="89:9" pos:end="89:57">

        <expr_stmt pos:start="89:9" pos:end="89:57"><expr pos:start="89:9" pos:end="89:56"><call pos:start="89:9" pos:end="89:56"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:56">(<argument pos:start="89:16" pos:end="89:23"><expr pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:16">f</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:23">avctx</name></name></expr></argument>, <argument pos:start="89:26" pos:end="89:37"><expr pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:40" pos:end="89:55"><expr pos:start="89:40" pos:end="89:55"><literal type="string" pos:start="89:40" pos:end="89:55">"end mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
