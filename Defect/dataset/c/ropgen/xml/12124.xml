<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12124.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">slirp_state_load</name><parameter_list pos:start="1:28" pos:end="1:70">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:36">QEMUFile</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">f</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:45">void</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">opaque</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:69">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Slirp</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:16">slirp</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">ex_list</name></name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:26">ex_ptr</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="65:5">while <condition pos:start="11:11" pos:end="11:28">(<expr pos:start="11:12" pos:end="11:27"><call pos:start="11:12" pos:end="11:27"><name pos:start="11:12" pos:end="11:24">qemu_get_byte</name><argument_list pos:start="11:25" pos:end="11:27">(<argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:30" pos:end="65:5">{<block_content pos:start="13:9" pos:end="63:44">

        <decl_stmt pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:44"><decl pos:start="15:9" pos:end="15:43"><type pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:14">struct</name> <name pos:start="15:16" pos:end="15:21">socket</name></name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:25">so</name> <init pos:start="15:27" pos:end="15:43">= <expr pos:start="15:29" pos:end="15:43"><call pos:start="15:29" pos:end="15:43"><name pos:start="15:29" pos:end="15:36">socreate</name><argument_list pos:start="15:37" pos:end="15:43">(<argument pos:start="15:38" pos:end="15:42"><expr pos:start="15:38" pos:end="15:42"><name pos:start="15:38" pos:end="15:42">slirp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="21:27"><if pos:start="19:9" pos:end="21:27">if <condition pos:start="19:12" pos:end="19:16">(<expr pos:start="19:13" pos:end="19:15"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:15">so</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:27"><block_content pos:start="21:13" pos:end="21:27">

            <return pos:start="21:13" pos:end="21:27">return <expr pos:start="21:20" pos:end="21:26"><operator pos:start="21:20" pos:end="21:20">-</operator><name pos:start="21:21" pos:end="21:26">ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:75"><expr pos:start="25:9" pos:end="25:74"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:74"><name pos:start="25:15" pos:end="25:32">vmstate_load_state</name><argument_list pos:start="25:33" pos:end="25:74">(<argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">f</name></expr></argument>, <argument pos:start="25:37" pos:end="25:57"><expr pos:start="25:37" pos:end="25:57"><operator pos:start="25:37" pos:end="25:37">&amp;</operator><name pos:start="25:38" pos:end="25:57">vmstate_slirp_socket</name></expr></argument>, <argument pos:start="25:60" pos:end="25:61"><expr pos:start="25:60" pos:end="25:61"><name pos:start="25:60" pos:end="25:61">so</name></expr></argument>, <argument pos:start="25:64" pos:end="25:73"><expr pos:start="25:64" pos:end="25:73"><name pos:start="25:64" pos:end="25:73">version_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="31:23"><if pos:start="29:9" pos:end="31:23">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:23"><block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="37:40">(<expr pos:start="35:13" pos:end="37:39"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:32"><name pos:start="35:14" pos:end="35:15">so</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:25">so_faddr</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:32">s_addr</name></name> <operator pos:start="35:34" pos:end="35:34">&amp;</operator> <name pos:start="35:36" pos:end="35:62"><name pos:start="35:36" pos:end="35:40">slirp</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:55">vnetwork_mask</name><operator pos:start="35:56" pos:end="35:56">.</operator><name pos:start="35:57" pos:end="35:62">s_addr</name></name><operator pos:start="35:63" pos:end="35:63">)</operator> <operator pos:start="35:65" pos:end="35:66">!=</operator>

            <name pos:start="37:13" pos:end="37:39"><name pos:start="37:13" pos:end="37:17">slirp</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:32">vnetwork_addr</name><operator pos:start="37:33" pos:end="37:33">.</operator><name pos:start="37:34" pos:end="37:39">s_addr</name></name></expr>)</condition> <block pos:start="37:42" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:27">

            <return pos:start="39:13" pos:end="39:27">return <expr pos:start="39:20" pos:end="39:26"><operator pos:start="39:20" pos:end="39:20">-</operator><name pos:start="39:21" pos:end="39:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="43:9" pos:end="55:9">for <control pos:start="43:13" pos:end="43:73">(<init pos:start="43:14" pos:end="43:39"><expr pos:start="43:14" pos:end="43:38"><name pos:start="43:14" pos:end="43:19">ex_ptr</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:38"><name pos:start="43:23" pos:end="43:27">slirp</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:38">exec_list</name></name></expr>;</init> <condition pos:start="43:41" pos:end="43:47"><expr pos:start="43:41" pos:end="43:46"><name pos:start="43:41" pos:end="43:46">ex_ptr</name></expr>;</condition> <incr pos:start="43:49" pos:end="43:72"><expr pos:start="43:49" pos:end="43:72"><name pos:start="43:49" pos:end="43:54">ex_ptr</name> <operator pos:start="43:56" pos:end="43:56">=</operator> <name pos:start="43:58" pos:end="43:72"><name pos:start="43:58" pos:end="43:63">ex_ptr</name><operator pos:start="43:64" pos:end="43:65">-&gt;</operator><name pos:start="43:66" pos:end="43:72">ex_next</name></name></expr></incr>)</control> <block pos:start="43:75" pos:end="55:9">{<block_content pos:start="45:13" pos:end="53:13">

            <if_stmt pos:start="45:13" pos:end="53:13"><if pos:start="45:13" pos:end="53:13">if <condition pos:start="45:16" pos:end="49:49">(<expr pos:start="45:17" pos:end="49:48"><name pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:22">ex_ptr</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:30">ex_pty</name></name> <operator pos:start="45:32" pos:end="45:33">==</operator> <literal type="number" pos:start="45:35" pos:end="45:35">3</literal> <operator pos:start="45:37" pos:end="45:38">&amp;&amp;</operator>

                <name pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:18">so</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:28">so_faddr</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:35">s_addr</name></name> <operator pos:start="47:37" pos:end="47:38">==</operator> <name pos:start="47:40" pos:end="47:61"><name pos:start="47:40" pos:end="47:45">ex_ptr</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:54">ex_addr</name><operator pos:start="47:55" pos:end="47:55">.</operator><name pos:start="47:56" pos:end="47:61">s_addr</name></name> <operator pos:start="47:63" pos:end="47:64">&amp;&amp;</operator>

                <name pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:18">so</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:28">so_fport</name></name> <operator pos:start="49:30" pos:end="49:31">==</operator> <name pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:38">ex_ptr</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:48">ex_fport</name></name></expr>)</condition> <block pos:start="49:51" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:22">

                <break pos:start="51:17" pos:end="51:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="57:9" pos:end="59:27"><if pos:start="57:9" pos:end="59:27">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:19">ex_ptr</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:27"><block_content pos:start="59:13" pos:end="59:27">

            <return pos:start="59:13" pos:end="59:27">return <expr pos:start="59:20" pos:end="59:26"><operator pos:start="59:20" pos:end="59:20">-</operator><name pos:start="59:21" pos:end="59:26">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:44"><expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:10">so</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:17">extra</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><name pos:start="63:22" pos:end="63:25">void</name> <operator pos:start="63:27" pos:end="63:27">*</operator><operator pos:start="63:28" pos:end="63:28">)</operator><name pos:start="63:29" pos:end="63:43"><name pos:start="63:29" pos:end="63:34">ex_ptr</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:43">ex_exec</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:24">(<expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:18">version_id</name> <operator pos:start="69:20" pos:end="69:21">&gt;=</operator> <literal type="number" pos:start="69:23" pos:end="69:23">2</literal></expr>)</condition> <block pos:start="69:26" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:40">

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:13">slirp</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:20">ip_id</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:39"><name pos:start="71:24" pos:end="71:36">qemu_get_be16</name><argument_list pos:start="71:37" pos:end="71:39">(<argument pos:start="71:38" pos:end="71:38"><expr pos:start="71:38" pos:end="71:38"><name pos:start="71:38" pos:end="71:38">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:24">(<expr pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:18">version_id</name> <operator pos:start="77:20" pos:end="77:21">&gt;=</operator> <literal type="number" pos:start="77:23" pos:end="77:23">3</literal></expr>)</condition> <block pos:start="77:26" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:35">

        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><call pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:24">slirp_bootp_load</name><argument_list pos:start="79:25" pos:end="79:34">(<argument pos:start="79:26" pos:end="79:26"><expr pos:start="79:26" pos:end="79:26"><name pos:start="79:26" pos:end="79:26">f</name></expr></argument>, <argument pos:start="79:29" pos:end="79:33"><expr pos:start="79:29" pos:end="79:33"><name pos:start="79:29" pos:end="79:33">slirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
