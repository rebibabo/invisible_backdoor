<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8807.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:47"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">qxl_create_guest_primary</name><parameter_list pos:start="1:37" pos:end="2:56">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:49">PCIQXLDevice</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">qxl</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:66">loadvm</name></decl></parameter>,
                                     <parameter pos:start="2:38" pos:end="2:55"><decl pos:start="2:38" pos:end="2:55"><type pos:start="2:38" pos:end="2:55"><name pos:start="2:38" pos:end="2:49">qxl_async_io</name></type> <name pos:start="2:51" pos:end="2:55">async</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="37:47">{<block_content pos:start="4:5" pos:end="37:47">
    <decl_stmt pos:start="4:5" pos:end="4:32"><decl pos:start="4:5" pos:end="4:31"><type pos:start="4:5" pos:end="4:23"><name pos:start="4:5" pos:end="4:23">QXLDevSurfaceCreate</name></type> <name pos:start="4:25" pos:end="4:31">surface</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">QXLSurfaceCreate</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">sc</name> <init pos:start="5:26" pos:end="5:54">= <expr pos:start="5:28" pos:end="5:54"><operator pos:start="5:28" pos:end="5:28">&amp;</operator><name pos:start="5:29" pos:end="5:54"><name pos:start="5:29" pos:end="5:31">qxl</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:46">guest_primary</name><operator pos:start="5:47" pos:end="5:47">.</operator><name pos:start="5:48" pos:end="5:54">surface</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:12">size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:24">requested_height</name> <init pos:start="7:26" pos:end="7:50">= <expr pos:start="7:28" pos:end="7:50"><call pos:start="7:28" pos:end="7:50"><name pos:start="7:28" pos:end="7:38">le32_to_cpu</name><argument_list pos:start="7:39" pos:end="7:50">(<argument pos:start="7:40" pos:end="7:49"><expr pos:start="7:40" pos:end="7:49"><name pos:start="7:40" pos:end="7:49"><name pos:start="7:40" pos:end="7:41">sc</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:49">height</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:51"><decl pos:start="8:5" pos:end="8:50"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:24">requested_stride</name> <init pos:start="8:26" pos:end="8:50">= <expr pos:start="8:28" pos:end="8:50"><call pos:start="8:28" pos:end="8:50"><name pos:start="8:28" pos:end="8:38">le32_to_cpu</name><argument_list pos:start="8:39" pos:end="8:50">(<argument pos:start="8:40" pos:end="8:49"><expr pos:start="8:40" pos:end="8:49"><name pos:start="8:40" pos:end="8:49"><name pos:start="8:40" pos:end="8:41">sc</name><operator pos:start="8:42" pos:end="8:43">-&gt;</operator><name pos:start="8:44" pos:end="8:49">stride</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:52"><expr pos:start="9:5" pos:end="9:51"><name pos:start="9:5" pos:end="9:8">size</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <call pos:start="9:12" pos:end="9:32"><name pos:start="9:12" pos:end="9:14">abs</name><argument_list pos:start="9:15" pos:end="9:32">(<argument pos:start="9:16" pos:end="9:31"><expr pos:start="9:16" pos:end="9:31"><name pos:start="9:16" pos:end="9:31">requested_stride</name></expr></argument>)</argument_list></call> <operator pos:start="9:34" pos:end="9:34">*</operator> <name pos:start="9:36" pos:end="9:51">requested_height</name></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="37:47"><if pos:start="10:5" pos:end="37:47">if <condition pos:start="10:8" pos:end="10:32">(<expr pos:start="10:9" pos:end="10:31"><name pos:start="10:9" pos:end="10:12">size</name> <operator pos:start="10:14" pos:end="10:14">&gt;</operator> <name pos:start="10:16" pos:end="10:31"><name pos:start="10:16" pos:end="10:18">qxl</name><operator pos:start="10:19" pos:end="10:20">-&gt;</operator><name pos:start="10:21" pos:end="10:31">vgamem_size</name></name></expr>)</condition> <block pos:start="10:34" pos:end="37:47">{<block_content pos:start="11:9" pos:end="37:47">
        <expr_stmt pos:start="11:9" pos:end="12:50"><expr pos:start="11:9" pos:end="12:49"><call pos:start="11:9" pos:end="12:49"><name pos:start="11:9" pos:end="11:25">qxl_set_guest_bug</name><argument_list pos:start="11:26" pos:end="12:49">(<argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:29">qxl</name></expr></argument>, <argument pos:start="11:32" pos:end="12:38"><expr pos:start="11:32" pos:end="12:38"><literal type="string" pos:start="11:32" pos:end="11:78">"%s: requested primary larger then framebuffer"</literal>
                               <literal type="string" pos:start="12:32" pos:end="12:38">" size"</literal></expr></argument>, <argument pos:start="12:41" pos:end="12:48"><expr pos:start="12:41" pos:end="12:48"><name pos:start="12:41" pos:end="12:48">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="37:47"><if pos:start="13:5" pos:end="37:47">if <condition pos:start="13:8" pos:end="13:37">(<expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:11">qxl</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">mode</name></name> <operator pos:start="13:19" pos:end="13:20">==</operator> <name pos:start="13:22" pos:end="13:36">QXL_MODE_NATIVE</name></expr>)</condition> <block pos:start="13:39" pos:end="37:47">{<block_content pos:start="14:9" pos:end="37:47">
        <expr_stmt pos:start="14:9" pos:end="15:32"><expr pos:start="14:9" pos:end="15:31"><call pos:start="14:9" pos:end="15:31"><name pos:start="14:9" pos:end="14:25">qxl_set_guest_bug</name><argument_list pos:start="14:26" pos:end="15:31">(<argument pos:start="14:27" pos:end="14:29"><expr pos:start="14:27" pos:end="14:29"><name pos:start="14:27" pos:end="14:29">qxl</name></expr></argument>, <argument pos:start="14:32" pos:end="14:73"><expr pos:start="14:32" pos:end="14:73"><literal type="string" pos:start="14:32" pos:end="14:73">"%s: nop since already in QXL_MODE_NATIVE"</literal></expr></argument>,
                      <argument pos:start="15:23" pos:end="15:30"><expr pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:30">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:27"><expr pos:start="16:5" pos:end="16:26"><call pos:start="16:5" pos:end="16:26"><name pos:start="16:5" pos:end="16:21">qxl_exit_vga_mode</name><argument_list pos:start="16:22" pos:end="16:26">(<argument pos:start="16:23" pos:end="16:25"><expr pos:start="16:23" pos:end="16:25"><name pos:start="16:23" pos:end="16:25">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11">surface</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:18">format</name></name>     <operator pos:start="17:24" pos:end="17:24">=</operator> <call pos:start="17:26" pos:end="17:48"><name pos:start="17:26" pos:end="17:36">le32_to_cpu</name><argument_list pos:start="17:37" pos:end="17:48">(<argument pos:start="17:38" pos:end="17:47"><expr pos:start="17:38" pos:end="17:47"><name pos:start="17:38" pos:end="17:47"><name pos:start="17:38" pos:end="17:39">sc</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:47">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:49"><expr pos:start="18:5" pos:end="18:48"><name pos:start="18:5" pos:end="18:18"><name pos:start="18:5" pos:end="18:11">surface</name><operator pos:start="18:12" pos:end="18:12">.</operator><name pos:start="18:13" pos:end="18:18">height</name></name>     <operator pos:start="18:24" pos:end="18:24">=</operator> <call pos:start="18:26" pos:end="18:48"><name pos:start="18:26" pos:end="18:36">le32_to_cpu</name><argument_list pos:start="18:37" pos:end="18:48">(<argument pos:start="18:38" pos:end="18:47"><expr pos:start="18:38" pos:end="18:47"><name pos:start="18:38" pos:end="18:47"><name pos:start="18:38" pos:end="18:39">sc</name><operator pos:start="18:40" pos:end="18:41">-&gt;</operator><name pos:start="18:42" pos:end="18:47">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:11">surface</name><operator pos:start="19:12" pos:end="19:12">.</operator><name pos:start="19:13" pos:end="19:15">mem</name></name>        <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="19:45"><name pos:start="19:26" pos:end="19:36">le64_to_cpu</name><argument_list pos:start="19:37" pos:end="19:45">(<argument pos:start="19:38" pos:end="19:44"><expr pos:start="19:38" pos:end="19:44"><name pos:start="19:38" pos:end="19:44"><name pos:start="19:38" pos:end="19:39">sc</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:44">mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:51"><expr pos:start="20:5" pos:end="20:50"><name pos:start="20:5" pos:end="20:20"><name pos:start="20:5" pos:end="20:11">surface</name><operator pos:start="20:12" pos:end="20:12">.</operator><name pos:start="20:13" pos:end="20:20">position</name></name>   <operator pos:start="20:24" pos:end="20:24">=</operator> <call pos:start="20:26" pos:end="20:50"><name pos:start="20:26" pos:end="20:36">le32_to_cpu</name><argument_list pos:start="20:37" pos:end="20:50">(<argument pos:start="20:38" pos:end="20:49"><expr pos:start="20:38" pos:end="20:49"><name pos:start="20:38" pos:end="20:49"><name pos:start="20:38" pos:end="20:39">sc</name><operator pos:start="20:40" pos:end="20:41">-&gt;</operator><name pos:start="20:42" pos:end="20:49">position</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:11">surface</name><operator pos:start="21:12" pos:end="21:12">.</operator><name pos:start="21:13" pos:end="21:18">stride</name></name>     <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:48"><name pos:start="21:26" pos:end="21:36">le32_to_cpu</name><argument_list pos:start="21:37" pos:end="21:48">(<argument pos:start="21:38" pos:end="21:47"><expr pos:start="21:38" pos:end="21:47"><name pos:start="21:38" pos:end="21:47"><name pos:start="21:38" pos:end="21:39">sc</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:47">stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:48"><expr pos:start="22:5" pos:end="22:47"><name pos:start="22:5" pos:end="22:17"><name pos:start="22:5" pos:end="22:11">surface</name><operator pos:start="22:12" pos:end="22:12">.</operator><name pos:start="22:13" pos:end="22:17">width</name></name>      <operator pos:start="22:24" pos:end="22:24">=</operator> <call pos:start="22:26" pos:end="22:47"><name pos:start="22:26" pos:end="22:36">le32_to_cpu</name><argument_list pos:start="22:37" pos:end="22:47">(<argument pos:start="22:38" pos:end="22:46"><expr pos:start="22:38" pos:end="22:46"><name pos:start="22:38" pos:end="22:46"><name pos:start="22:38" pos:end="22:39">sc</name><operator pos:start="22:40" pos:end="22:41">-&gt;</operator><name pos:start="22:42" pos:end="22:46">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:47"><expr pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11">surface</name><operator pos:start="23:12" pos:end="23:12">.</operator><name pos:start="23:13" pos:end="23:16">type</name></name>       <operator pos:start="23:24" pos:end="23:24">=</operator> <call pos:start="23:26" pos:end="23:46"><name pos:start="23:26" pos:end="23:36">le32_to_cpu</name><argument_list pos:start="23:37" pos:end="23:46">(<argument pos:start="23:38" pos:end="23:45"><expr pos:start="23:38" pos:end="23:45"><name pos:start="23:38" pos:end="23:45"><name pos:start="23:38" pos:end="23:39">sc</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:45">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:48"><expr pos:start="24:5" pos:end="24:47"><name pos:start="24:5" pos:end="24:17"><name pos:start="24:5" pos:end="24:11">surface</name><operator pos:start="24:12" pos:end="24:12">.</operator><name pos:start="24:13" pos:end="24:17">flags</name></name>      <operator pos:start="24:24" pos:end="24:24">=</operator> <call pos:start="24:26" pos:end="24:47"><name pos:start="24:26" pos:end="24:36">le32_to_cpu</name><argument_list pos:start="24:37" pos:end="24:47">(<argument pos:start="24:38" pos:end="24:46"><expr pos:start="24:38" pos:end="24:46"><name pos:start="24:38" pos:end="24:46"><name pos:start="24:38" pos:end="24:39">sc</name><operator pos:start="24:40" pos:end="24:41">-&gt;</operator><name pos:start="24:42" pos:end="24:46">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="26:61"><expr pos:start="25:5" pos:end="26:60"><call pos:start="25:5" pos:end="26:60"><name pos:start="25:5" pos:end="25:34">trace_qxl_create_guest_primary</name><argument_list pos:start="25:35" pos:end="26:60">(<argument pos:start="25:36" pos:end="25:42"><expr pos:start="25:36" pos:end="25:42"><name pos:start="25:36" pos:end="25:42"><name pos:start="25:36" pos:end="25:38">qxl</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:42">id</name></name></expr></argument>, <argument pos:start="25:45" pos:end="25:53"><expr pos:start="25:45" pos:end="25:53"><name pos:start="25:45" pos:end="25:53"><name pos:start="25:45" pos:end="25:46">sc</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:53">width</name></name></expr></argument>, <argument pos:start="25:56" pos:end="25:65"><expr pos:start="25:56" pos:end="25:65"><name pos:start="25:56" pos:end="25:65"><name pos:start="25:56" pos:end="25:57">sc</name><operator pos:start="25:58" pos:end="25:59">-&gt;</operator><name pos:start="25:60" pos:end="25:65">height</name></name></expr></argument>, <argument pos:start="25:68" pos:end="25:74"><expr pos:start="25:68" pos:end="25:74"><name pos:start="25:68" pos:end="25:74"><name pos:start="25:68" pos:end="25:69">sc</name><operator pos:start="25:70" pos:end="25:71">-&gt;</operator><name pos:start="25:72" pos:end="25:74">mem</name></name></expr></argument>,
                                   <argument pos:start="26:36" pos:end="26:45"><expr pos:start="26:36" pos:end="26:45"><name pos:start="26:36" pos:end="26:45"><name pos:start="26:36" pos:end="26:37">sc</name><operator pos:start="26:38" pos:end="26:39">-&gt;</operator><name pos:start="26:40" pos:end="26:45">format</name></name></expr></argument>, <argument pos:start="26:48" pos:end="26:59"><expr pos:start="26:48" pos:end="26:59"><name pos:start="26:48" pos:end="26:59"><name pos:start="26:48" pos:end="26:49">sc</name><operator pos:start="26:50" pos:end="26:51">-&gt;</operator><name pos:start="26:52" pos:end="26:59">position</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="28:51"><expr pos:start="27:5" pos:end="28:50"><call pos:start="27:5" pos:end="28:50"><name pos:start="27:5" pos:end="27:39">trace_qxl_create_guest_primary_rest</name><argument_list pos:start="27:40" pos:end="28:50">(<argument pos:start="27:41" pos:end="27:47"><expr pos:start="27:41" pos:end="27:47"><name pos:start="27:41" pos:end="27:47"><name pos:start="27:41" pos:end="27:43">qxl</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:47">id</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:59"><expr pos:start="27:50" pos:end="27:59"><name pos:start="27:50" pos:end="27:59"><name pos:start="27:50" pos:end="27:51">sc</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:59">stride</name></name></expr></argument>, <argument pos:start="27:62" pos:end="27:69"><expr pos:start="27:62" pos:end="27:69"><name pos:start="27:62" pos:end="27:69"><name pos:start="27:62" pos:end="27:63">sc</name><operator pos:start="27:64" pos:end="27:65">-&gt;</operator><name pos:start="27:66" pos:end="27:69">type</name></name></expr></argument>,
                                        <argument pos:start="28:41" pos:end="28:49"><expr pos:start="28:41" pos:end="28:49"><name pos:start="28:41" pos:end="28:49"><name pos:start="28:41" pos:end="28:42">sc</name><operator pos:start="28:43" pos:end="28:44">-&gt;</operator><name pos:start="28:45" pos:end="28:49">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:11">surface</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:22">mouse_mode</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:29">true</name></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:45"><expr pos:start="30:5" pos:end="30:44"><name pos:start="30:5" pos:end="30:20"><name pos:start="30:5" pos:end="30:11">surface</name><operator pos:start="30:12" pos:end="30:12">.</operator><name pos:start="30:13" pos:end="30:20">group_id</name></name>   <operator pos:start="30:24" pos:end="30:24">=</operator> <name pos:start="30:26" pos:end="30:44">MEMSLOT_GROUP_GUEST</name></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="37:47"><if pos:start="31:5" pos:end="37:47">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">loadvm</name></expr>)</condition> <block pos:start="31:17" pos:end="37:47">{<block_content pos:start="32:9" pos:end="37:47">
        <expr_stmt pos:start="32:9" pos:end="32:49"><expr pos:start="32:9" pos:end="32:48"><name pos:start="32:9" pos:end="32:21"><name pos:start="32:9" pos:end="32:15">surface</name><operator pos:start="32:16" pos:end="32:16">.</operator><name pos:start="32:17" pos:end="32:21">flags</name></name> <operator pos:start="32:23" pos:end="32:24">|=</operator> <name pos:start="32:26" pos:end="32:48">QXL_SURF_FLAG_KEEP_DATA</name></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:7">qxl</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:13">mode</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:31">QXL_MODE_NATIVE</name></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:22"><expr pos:start="34:5" pos:end="34:21"><name pos:start="34:5" pos:end="34:17"><name pos:start="34:5" pos:end="34:7">qxl</name><operator pos:start="34:8" pos:end="34:9">-&gt;</operator><name pos:start="34:10" pos:end="34:17">cmdflags</name></name> <operator pos:start="34:19" pos:end="34:19">=</operator> <literal type="number" pos:start="34:21" pos:end="34:21">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:69"><expr pos:start="35:5" pos:end="35:68"><call pos:start="35:5" pos:end="35:68"><name pos:start="35:5" pos:end="35:37">qemu_spice_create_primary_surface</name><argument_list pos:start="35:38" pos:end="35:68">(<argument pos:start="35:39" pos:end="35:47"><expr pos:start="35:39" pos:end="35:47"><operator pos:start="35:39" pos:end="35:39">&amp;</operator><name pos:start="35:40" pos:end="35:47"><name pos:start="35:40" pos:end="35:42">qxl</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:47">ssd</name></name></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><literal type="number" pos:start="35:50" pos:end="35:50">0</literal></expr></argument>, <argument pos:start="35:53" pos:end="35:60"><expr pos:start="35:53" pos:end="35:60"><operator pos:start="35:53" pos:end="35:53">&amp;</operator><name pos:start="35:54" pos:end="35:60">surface</name></expr></argument>, <argument pos:start="35:63" pos:end="35:67"><expr pos:start="35:63" pos:end="35:67"><name pos:start="35:63" pos:end="35:67">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="36:5" pos:end="37:47"><if pos:start="36:5" pos:end="37:47">if <condition pos:start="36:8" pos:end="36:26">(<expr pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:13">async</name> <operator pos:start="36:15" pos:end="36:16">==</operator> <name pos:start="36:18" pos:end="36:25">QXL_SYNC</name></expr>)</condition> <block pos:start="36:28" pos:end="37:47">{<block_content pos:start="37:9" pos:end="37:47">
        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><call pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:41">qxl_create_guest_primary_complete</name><argument_list pos:start="37:42" pos:end="37:46">(<argument pos:start="37:43" pos:end="37:45"><expr pos:start="37:43" pos:end="37:45"><name pos:start="37:43" pos:end="37:45">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
