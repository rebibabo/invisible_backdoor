<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16718.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">avi_read_idx1</name><parameter_list pos:start="1:25" pos:end="1:54">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:53">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVIContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">avi</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">nb_index_entries</name></decl>, <decl pos:start="9:27" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:27">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">AVIStream</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">ast</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:63"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:22">index</name></decl>, <decl pos:start="15:25" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:25" pos:end="15:27">tag</name></decl>, <decl pos:start="15:30" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:30" pos:end="15:34">flags</name></decl>, <decl pos:start="15:37" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:37" pos:end="15:39">pos</name></decl>, <decl pos:start="15:42" pos:end="15:44"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:42" pos:end="15:44">len</name></decl>, <decl pos:start="15:47" pos:end="15:62"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:47" pos:end="15:58">first_packet</name> <init pos:start="15:60" pos:end="15:62">= <expr pos:start="15:62" pos:end="15:62"><literal type="number" pos:start="15:62" pos:end="15:62">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">unsigned</name></type> <name pos:start="17:14" pos:end="17:21">last_pos</name><init pos:start="17:22" pos:end="17:25">= <expr pos:start="17:24" pos:end="17:25"><operator pos:start="17:24" pos:end="17:24">-</operator><literal type="number" pos:start="17:25" pos:end="17:25">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:60"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:20">idx1_pos</name></decl>, <decl pos:start="19:23" pos:end="19:42"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:23" pos:end="19:38">first_packet_pos</name> <init pos:start="19:40" pos:end="19:42">= <expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr></init></decl>, <decl pos:start="19:45" pos:end="19:59"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:45" pos:end="19:55">data_offset</name> <init pos:start="19:57" pos:end="19:59">= <expr pos:start="19:59" pos:end="19:59"><literal type="number" pos:start="19:59" pos:end="19:59">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:20">nb_index_entries</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:27">size</name> <operator pos:start="23:29" pos:end="23:29">/</operator> <literal type="number" pos:start="23:31" pos:end="23:32">16</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:24">nb_index_entries</name> <operator pos:start="25:26" pos:end="25:27">&lt;=</operator> <literal type="number" pos:start="25:29" pos:end="25:29">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:12">idx1_pos</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:24">avio_tell</name><argument_list pos:start="31:25" pos:end="31:28">(<argument pos:start="31:26" pos:end="31:27"><expr pos:start="31:26" pos:end="31:27"><name pos:start="31:26" pos:end="31:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:13">avio_seek</name><argument_list pos:start="33:14" pos:end="33:45">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>, <argument pos:start="33:19" pos:end="33:34"><expr pos:start="33:19" pos:end="33:34"><name pos:start="33:19" pos:end="33:32"><name pos:start="33:19" pos:end="33:21">avi</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:32">movi_list</name></name><operator pos:start="33:33" pos:end="33:33">+</operator><literal type="number" pos:start="33:34" pos:end="33:34">4</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:44"><expr pos:start="33:37" pos:end="33:44"><name pos:start="33:37" pos:end="33:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><call pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:16">avi_sync</name><argument_list pos:start="35:17" pos:end="35:22">(<argument pos:start="35:18" pos:end="35:18"><expr pos:start="35:18" pos:end="35:18"><name pos:start="35:18" pos:end="35:18">s</name></expr></argument>, <argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr></argument>)</argument_list></call> <operator pos:start="35:24" pos:end="35:25">==</operator> <literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr>)</condition> <block pos:start="35:30" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:45">

        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:24">first_packet_pos</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:40"><name pos:start="37:28" pos:end="37:36">avio_tell</name><argument_list pos:start="37:37" pos:end="37:40">(<argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><name pos:start="37:38" pos:end="37:39">pb</name></expr></argument>)</argument_list></call> <operator pos:start="37:42" pos:end="37:42">-</operator> <literal type="number" pos:start="37:44" pos:end="37:44">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:7">avi</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:21">stream_index</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <operator pos:start="41:25" pos:end="41:25">-</operator><literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><call pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:13">avio_seek</name><argument_list pos:start="43:14" pos:end="43:37">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>, <argument pos:start="43:19" pos:end="43:26"><expr pos:start="43:19" pos:end="43:26"><name pos:start="43:19" pos:end="43:26">idx1_pos</name></expr></argument>, <argument pos:start="43:29" pos:end="43:36"><expr pos:start="43:29" pos:end="43:36"><name pos:start="43:29" pos:end="43:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:66">/* Read the entries and sort them in each stream component. */</comment>

    <for pos:start="49:5" pos:end="113:5">for<control pos:start="49:8" pos:end="49:41">(<init pos:start="49:9" pos:end="49:14"><expr pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:9">i</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <literal type="number" pos:start="49:13" pos:end="49:13">0</literal></expr>;</init> <condition pos:start="49:16" pos:end="49:36"><expr pos:start="49:16" pos:end="49:35"><name pos:start="49:16" pos:end="49:16">i</name> <operator pos:start="49:18" pos:end="49:18">&lt;</operator> <name pos:start="49:20" pos:end="49:35">nb_index_entries</name></expr>;</condition> <incr pos:start="49:38" pos:end="49:40"><expr pos:start="49:38" pos:end="49:40"><name pos:start="49:38" pos:end="49:38">i</name><operator pos:start="49:39" pos:end="49:40">++</operator></expr></incr>)</control> <block pos:start="49:43" pos:end="113:5">{<block_content pos:start="51:9" pos:end="111:22">

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:11">tag</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:27"><name pos:start="51:15" pos:end="51:23">avio_rl32</name><argument_list pos:start="51:24" pos:end="51:27">(<argument pos:start="51:25" pos:end="51:26"><expr pos:start="51:25" pos:end="51:26"><name pos:start="51:25" pos:end="51:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:13">flags</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:29"><name pos:start="53:17" pos:end="53:25">avio_rl32</name><argument_list pos:start="53:26" pos:end="53:29">(<argument pos:start="53:27" pos:end="53:28"><expr pos:start="53:27" pos:end="53:28"><name pos:start="53:27" pos:end="53:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:11">pos</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:27"><name pos:start="55:15" pos:end="55:23">avio_rl32</name><argument_list pos:start="55:24" pos:end="55:27">(<argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><name pos:start="55:25" pos:end="55:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:11">len</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:27"><name pos:start="57:15" pos:end="57:23">avio_rl32</name><argument_list pos:start="57:24" pos:end="57:27">(<argument pos:start="57:25" pos:end="57:26"><expr pos:start="57:25" pos:end="57:26"><name pos:start="57:25" pos:end="57:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="61:41"><expr pos:start="59:9" pos:end="61:40"><call pos:start="59:9" pos:end="61:40"><name pos:start="59:9" pos:end="59:15">av_dlog</name><argument_list pos:start="59:16" pos:end="61:40">(<argument pos:start="59:17" pos:end="59:17"><expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">s</name></expr></argument>, <argument pos:start="59:20" pos:end="59:61"><expr pos:start="59:20" pos:end="59:61"><literal type="string" pos:start="59:20" pos:end="59:61">"%d: tag=0x%x flags=0x%x pos=0x%x len=%d/"</literal></expr></argument>,

                <argument pos:start="61:17" pos:end="61:17"><expr pos:start="61:17" pos:end="61:17"><name pos:start="61:17" pos:end="61:17">i</name></expr></argument>, <argument pos:start="61:20" pos:end="61:22"><expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">tag</name></expr></argument>, <argument pos:start="61:25" pos:end="61:29"><expr pos:start="61:25" pos:end="61:29"><name pos:start="61:25" pos:end="61:29">flags</name></expr></argument>, <argument pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:34">pos</name></expr></argument>, <argument pos:start="61:37" pos:end="61:39"><expr pos:start="61:37" pos:end="61:39"><name pos:start="61:37" pos:end="61:39">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:42"><expr pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:13">index</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <operator pos:start="65:17" pos:end="65:17">(</operator><operator pos:start="65:18" pos:end="65:18">(</operator><name pos:start="65:19" pos:end="65:21">tag</name> <operator pos:start="65:23" pos:end="65:23">&amp;</operator> <literal type="number" pos:start="65:25" pos:end="65:28">0xff</literal><operator pos:start="65:29" pos:end="65:29">)</operator> <operator pos:start="65:31" pos:end="65:31">-</operator> <literal type="char" pos:start="65:33" pos:end="65:35">'0'</literal><operator pos:start="65:36" pos:end="65:36">)</operator> <operator pos:start="65:38" pos:end="65:38">*</operator> <literal type="number" pos:start="65:40" pos:end="65:41">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:43"><expr pos:start="67:9" pos:end="67:42"><name pos:start="67:9" pos:end="67:13">index</name> <operator pos:start="67:15" pos:end="67:16">+=</operator> <operator pos:start="67:18" pos:end="67:18">(</operator><operator pos:start="67:19" pos:end="67:19">(</operator><name pos:start="67:20" pos:end="67:22">tag</name> <operator pos:start="67:24" pos:end="67:25">&gt;&gt;</operator> <literal type="number" pos:start="67:27" pos:end="67:27">8</literal><operator pos:start="67:28" pos:end="67:28">)</operator> <operator pos:start="67:30" pos:end="67:30">&amp;</operator> <literal type="number" pos:start="67:32" pos:end="67:35">0xff</literal><operator pos:start="67:36" pos:end="67:36">)</operator> <operator pos:start="67:38" pos:end="67:38">-</operator> <literal type="char" pos:start="67:40" pos:end="67:42">'0'</literal></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:21"><if pos:start="69:9" pos:end="71:21">if <condition pos:start="69:12" pos:end="69:35">(<expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:17">index</name> <operator pos:start="69:19" pos:end="69:20">&gt;=</operator> <name pos:start="69:22" pos:end="69:34"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:34">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:21"><block_content pos:start="71:13" pos:end="71:21">

            <continue pos:start="71:13" pos:end="71:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:10">st</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <name pos:start="73:14" pos:end="73:30"><name pos:start="73:14" pos:end="73:14">s</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:23">streams</name><index pos:start="73:24" pos:end="73:30">[<expr pos:start="73:25" pos:end="73:29"><name pos:start="73:25" pos:end="73:29">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:28"><expr pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:11">ast</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:27"><name pos:start="75:15" pos:end="75:16">st</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:27">priv_data</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if<condition pos:start="79:11" pos:end="79:51">(<expr pos:start="79:12" pos:end="79:50"><name pos:start="79:12" pos:end="79:23">first_packet</name> <operator pos:start="79:25" pos:end="79:26">&amp;&amp;</operator> <name pos:start="79:28" pos:end="79:43">first_packet_pos</name> <operator pos:start="79:45" pos:end="79:46">&amp;&amp;</operator> <name pos:start="79:48" pos:end="79:50">len</name></expr>)</condition> <block pos:start="79:53" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:29">

            <expr_stmt pos:start="81:13" pos:end="81:49"><expr pos:start="81:13" pos:end="81:48"><name pos:start="81:13" pos:end="81:23">data_offset</name> <operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:42">first_packet_pos</name> <operator pos:start="81:44" pos:end="81:44">-</operator> <name pos:start="81:46" pos:end="81:48">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:24">first_packet</name> <operator pos:start="83:26" pos:end="83:26">=</operator> <literal type="number" pos:start="83:28" pos:end="83:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:27"><expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:11">pos</name> <operator pos:start="87:13" pos:end="87:14">+=</operator> <name pos:start="87:16" pos:end="87:26">data_offset</name></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:64"><expr pos:start="91:9" pos:end="91:63"><call pos:start="91:9" pos:end="91:63"><name pos:start="91:9" pos:end="91:15">av_dlog</name><argument_list pos:start="91:16" pos:end="91:63">(<argument pos:start="91:17" pos:end="91:17"><expr pos:start="91:17" pos:end="91:17"><name pos:start="91:17" pos:end="91:17">s</name></expr></argument>, <argument pos:start="91:20" pos:end="91:43"><expr pos:start="91:20" pos:end="91:43"><literal type="string" pos:start="91:20" pos:end="91:33">"%d cum_len=%"</literal><name pos:start="91:34" pos:end="91:39">PRId64</name><literal type="string" pos:start="91:40" pos:end="91:43">"\n"</literal></expr></argument>, <argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:48">len</name></expr></argument>, <argument pos:start="91:51" pos:end="91:62"><expr pos:start="91:51" pos:end="91:62"><name pos:start="91:51" pos:end="91:62"><name pos:start="91:51" pos:end="91:53">ast</name><operator pos:start="91:54" pos:end="91:55">-&gt;</operator><name pos:start="91:56" pos:end="91:62">cum_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="95:9" pos:end="97:22"><if pos:start="95:9" pos:end="97:22">if<condition pos:start="95:11" pos:end="95:24">(<expr pos:start="95:12" pos:end="95:23"><call pos:start="95:12" pos:end="95:23"><name pos:start="95:12" pos:end="95:19">url_feof</name><argument_list pos:start="95:20" pos:end="95:23">(<argument pos:start="95:21" pos:end="95:22"><expr pos:start="95:21" pos:end="95:22"><name pos:start="95:21" pos:end="95:22">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:22"><block_content pos:start="97:13" pos:end="97:22">

            <return pos:start="97:13" pos:end="97:22">return <expr pos:start="97:20" pos:end="97:21"><operator pos:start="97:20" pos:end="97:20">-</operator><literal type="number" pos:start="97:21" pos:end="97:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="101:9" pos:end="107:106"><if pos:start="101:9" pos:end="103:36">if<condition pos:start="101:11" pos:end="101:27">(<expr pos:start="101:12" pos:end="101:26"><name pos:start="101:12" pos:end="101:19">last_pos</name> <operator pos:start="101:21" pos:end="101:22">==</operator> <name pos:start="101:24" pos:end="101:26">pos</name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:36"><block_content pos:start="103:13" pos:end="103:36">

            <expr_stmt pos:start="103:13" pos:end="103:36"><expr pos:start="103:13" pos:end="103:35"><name pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:15">avi</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:32">non_interleaved</name></name><operator pos:start="103:33" pos:end="103:33">=</operator> <literal type="number" pos:start="103:35" pos:end="103:35">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="105:9" pos:end="107:106">else if<condition pos:start="105:16" pos:end="105:41">(<expr pos:start="105:17" pos:end="105:40"><name pos:start="105:17" pos:end="105:19">len</name> <operator pos:start="105:21" pos:end="105:22">||</operator> <operator pos:start="105:24" pos:end="105:24">!</operator><name pos:start="105:25" pos:end="105:40"><name pos:start="105:25" pos:end="105:27">ast</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:40">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:106"><block_content pos:start="107:13" pos:end="107:106">

            <expr_stmt pos:start="107:13" pos:end="107:106"><expr pos:start="107:13" pos:end="107:105"><call pos:start="107:13" pos:end="107:105"><name pos:start="107:13" pos:end="107:30">av_add_index_entry</name><argument_list pos:start="107:31" pos:end="107:105">(<argument pos:start="107:32" pos:end="107:33"><expr pos:start="107:32" pos:end="107:33"><name pos:start="107:32" pos:end="107:33">st</name></expr></argument>, <argument pos:start="107:36" pos:end="107:38"><expr pos:start="107:36" pos:end="107:38"><name pos:start="107:36" pos:end="107:38">pos</name></expr></argument>, <argument pos:start="107:41" pos:end="107:52"><expr pos:start="107:41" pos:end="107:52"><name pos:start="107:41" pos:end="107:52"><name pos:start="107:41" pos:end="107:43">ast</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:52">cum_len</name></name></expr></argument>, <argument pos:start="107:55" pos:end="107:57"><expr pos:start="107:55" pos:end="107:57"><name pos:start="107:55" pos:end="107:57">len</name></expr></argument>, <argument pos:start="107:60" pos:end="107:60"><expr pos:start="107:60" pos:end="107:60"><literal type="number" pos:start="107:60" pos:end="107:60">0</literal></expr></argument>, <argument pos:start="107:63" pos:end="107:104"><expr pos:start="107:63" pos:end="107:104"><ternary pos:start="107:63" pos:end="107:104"><condition pos:start="107:63" pos:end="107:83"><expr pos:start="107:63" pos:end="107:81"><operator pos:start="107:63" pos:end="107:63">(</operator><name pos:start="107:64" pos:end="107:68">flags</name><operator pos:start="107:69" pos:end="107:69">&amp;</operator><name pos:start="107:70" pos:end="107:80">AVIIF_INDEX</name><operator pos:start="107:81" pos:end="107:81">)</operator></expr> ?</condition><then pos:start="107:85" pos:end="107:100"> <expr pos:start="107:85" pos:end="107:100"><name pos:start="107:85" pos:end="107:100">AVINDEX_KEYFRAME</name></expr> </then><else pos:start="107:102" pos:end="107:104">: <expr pos:start="107:104" pos:end="107:104"><literal type="number" pos:start="107:104" pos:end="107:104">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:11">ast</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:20">cum_len</name></name> <operator pos:start="109:22" pos:end="109:23">+=</operator> <call pos:start="109:25" pos:end="109:46"><name pos:start="109:25" pos:end="109:36">get_duration</name><argument_list pos:start="109:37" pos:end="109:46">(<argument pos:start="109:38" pos:end="109:40"><expr pos:start="109:38" pos:end="109:40"><name pos:start="109:38" pos:end="109:40">ast</name></expr></argument>, <argument pos:start="109:43" pos:end="109:45"><expr pos:start="109:43" pos:end="109:45"><name pos:start="109:43" pos:end="109:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:22"><expr pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:16">last_pos</name><operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:21">pos</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
