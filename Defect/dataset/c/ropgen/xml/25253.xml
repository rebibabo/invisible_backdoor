<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25253.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">guest_suspend</name><parameter_list pos:start="1:26" pos:end="3:38">(<parameter pos:start="1:27" pos:end="1:49"><decl pos:start="1:27" pos:end="1:49"><type pos:start="1:27" pos:end="1:49"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:49">pmutils_bin</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:74"><decl pos:start="1:52" pos:end="1:74"><type pos:start="1:52" pos:end="1:74"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:74">sysfile_str</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:37"><decl pos:start="3:27" pos:end="3:37"><type pos:start="3:27" pos:end="3:37"><name pos:start="3:27" pos:end="3:31">Error</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier><modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:37">err</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:5">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">pid_t</name></type> <name pos:start="7:11" pos:end="7:13">pid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:22">pmutils_path</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:55"><expr pos:start="13:5" pos:end="13:54"><name pos:start="13:5" pos:end="13:16">pmutils_path</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <call pos:start="13:20" pos:end="13:54"><name pos:start="13:20" pos:end="13:41">g_find_program_in_path</name><argument_list pos:start="13:42" pos:end="13:54">(<argument pos:start="13:43" pos:end="13:53"><expr pos:start="13:43" pos:end="13:53"><name pos:start="13:43" pos:end="13:53">pmutils_bin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">pid</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:16"><name pos:start="17:11" pos:end="17:14">fork</name><argument_list pos:start="17:15" pos:end="17:16">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="83:5"><if pos:start="19:5" pos:end="83:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:11">pid</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>)</condition> <block pos:start="19:19" pos:end="83:5">{<block_content pos:start="23:9" pos:end="81:28">

        <comment type="block" pos:start="21:9" pos:end="21:19">/* child */</comment>

        <decl_stmt pos:start="23:9" pos:end="23:15"><decl pos:start="23:9" pos:end="23:14"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:14">fd</name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:17"><expr pos:start="27:9" pos:end="27:16"><call pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:14">setsid</name><argument_list pos:start="27:15" pos:end="27:16">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><call pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:25">reopen_fd_to_null</name><argument_list pos:start="29:26" pos:end="29:28">(<argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><call pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:25">reopen_fd_to_null</name><argument_list pos:start="31:26" pos:end="31:28">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><call pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:25">reopen_fd_to_null</name><argument_list pos:start="33:26" pos:end="33:28">(<argument pos:start="33:27" pos:end="33:27"><expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:25">(<expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:24">pmutils_path</name></expr>)</condition> <block pos:start="37:27" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:61">

            <expr_stmt pos:start="39:13" pos:end="39:61"><expr pos:start="39:13" pos:end="39:60"><call pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:18">execle</name><argument_list pos:start="39:19" pos:end="39:60">(<argument pos:start="39:20" pos:end="39:31"><expr pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:31">pmutils_path</name></expr></argument>, <argument pos:start="39:34" pos:end="39:44"><expr pos:start="39:34" pos:end="39:44"><name pos:start="39:34" pos:end="39:44">pmutils_bin</name></expr></argument>, <argument pos:start="39:47" pos:end="39:50"><expr pos:start="39:47" pos:end="39:50"><name pos:start="39:47" pos:end="39:50">NULL</name></expr></argument>, <argument pos:start="39:53" pos:end="39:59"><expr pos:start="39:53" pos:end="39:59"><name pos:start="39:53" pos:end="39:59">environ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="45:9" pos:end="51:11">/*

         * If we get here either pm-utils is not installed or execle() has

         * failed. Let's try the manual method if the caller wants it.

         */</comment>



        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:25">(<expr pos:start="55:13" pos:end="55:24"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:24">sysfile_str</name></expr>)</condition> <block pos:start="55:27" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:32">

            <expr_stmt pos:start="57:13" pos:end="57:32"><expr pos:start="57:13" pos:end="57:31"><call pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:17">_exit</name><argument_list pos:start="57:18" pos:end="57:31">(<argument pos:start="57:19" pos:end="57:30"><expr pos:start="57:19" pos:end="57:30"><name pos:start="57:19" pos:end="57:30">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:10">fd</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:49"><name pos:start="63:14" pos:end="63:17">open</name><argument_list pos:start="63:18" pos:end="63:49">(<argument pos:start="63:19" pos:end="63:38"><expr pos:start="63:19" pos:end="63:38"><name pos:start="63:19" pos:end="63:38">LINUX_SYS_STATE_FILE</name></expr></argument>, <argument pos:start="63:41" pos:end="63:48"><expr pos:start="63:41" pos:end="63:48"><name pos:start="63:41" pos:end="63:48">O_WRONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:19">(<expr pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:14">fd</name> <operator pos:start="65:16" pos:end="65:16">&lt;</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>)</condition> <block pos:start="65:21" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:32">

            <expr_stmt pos:start="67:13" pos:end="67:32"><expr pos:start="67:13" pos:end="67:31"><call pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:17">_exit</name><argument_list pos:start="67:18" pos:end="67:31">(<argument pos:start="67:19" pos:end="67:30"><expr pos:start="67:19" pos:end="67:30"><name pos:start="67:19" pos:end="67:30">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:60">(<expr pos:start="73:13" pos:end="73:59"><call pos:start="73:13" pos:end="73:55"><name pos:start="73:13" pos:end="73:17">write</name><argument_list pos:start="73:18" pos:end="73:55">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">fd</name></expr></argument>, <argument pos:start="73:23" pos:end="73:33"><expr pos:start="73:23" pos:end="73:33"><name pos:start="73:23" pos:end="73:33">sysfile_str</name></expr></argument>, <argument pos:start="73:36" pos:end="73:54"><expr pos:start="73:36" pos:end="73:54"><call pos:start="73:36" pos:end="73:54"><name pos:start="73:36" pos:end="73:41">strlen</name><argument_list pos:start="73:42" pos:end="73:54">(<argument pos:start="73:43" pos:end="73:53"><expr pos:start="73:43" pos:end="73:53"><name pos:start="73:43" pos:end="73:53">sysfile_str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="73:57" pos:end="73:57">&lt;</operator> <literal type="number" pos:start="73:59" pos:end="73:59">0</literal></expr>)</condition> <block pos:start="73:62" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:32">

            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><call pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:17">_exit</name><argument_list pos:start="75:18" pos:end="75:31">(<argument pos:start="75:19" pos:end="75:30"><expr pos:start="75:19" pos:end="75:30"><name pos:start="75:19" pos:end="75:30">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><call pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:13">_exit</name><argument_list pos:start="81:14" pos:end="81:27">(<argument pos:start="81:15" pos:end="81:26"><expr pos:start="81:15" pos:end="81:26"><name pos:start="81:15" pos:end="81:26">EXIT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:25"><expr pos:start="87:5" pos:end="87:24"><call pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:10">g_free</name><argument_list pos:start="87:11" pos:end="87:24">(<argument pos:start="87:12" pos:end="87:23"><expr pos:start="87:12" pos:end="87:23"><name pos:start="87:12" pos:end="87:23">pmutils_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:16">(<expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:11">pid</name> <operator pos:start="91:13" pos:end="91:13">&lt;</operator> <literal type="number" pos:start="91:15" pos:end="91:15">0</literal></expr>)</condition> <block pos:start="91:18" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:15">

        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><call pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:17">error_set</name><argument_list pos:start="93:18" pos:end="93:44">(<argument pos:start="93:19" pos:end="93:21"><expr pos:start="93:19" pos:end="93:21"><name pos:start="93:19" pos:end="93:21">err</name></expr></argument>, <argument pos:start="93:24" pos:end="93:43"><expr pos:start="93:24" pos:end="93:43"><name pos:start="93:24" pos:end="93:43">QERR_UNDEFINED_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
