<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13838.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">test_i440fx_defaults</name><parameter_list pos:start="1:33" pos:end="1:54">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:46">gconstpointer</name></type> <name pos:start="1:48" pos:end="1:53">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="191:1">{<block_content pos:start="5:5" pos:end="189:16">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">TestData</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QPCIBus</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">QPCIDevice</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">value</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:7">bus</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:31"><name pos:start="15:11" pos:end="15:28">test_start_get_bus</name><argument_list pos:start="15:29" pos:end="15:31">(<argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><name pos:start="15:30" pos:end="15:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:7">dev</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:49"><name pos:start="17:11" pos:end="17:26">qpci_device_find</name><argument_list pos:start="17:27" pos:end="17:49">(<argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:30">bus</name></expr></argument>, <argument pos:start="17:33" pos:end="17:48"><expr pos:start="17:33" pos:end="17:48"><call pos:start="17:33" pos:end="17:48"><name pos:start="17:33" pos:end="17:42">QPCI_DEVFN</name><argument_list pos:start="17:43" pos:end="17:48">(<argument pos:start="17:44" pos:end="17:44"><expr pos:start="17:44" pos:end="17:44"><literal type="number" pos:start="17:44" pos:end="17:44">0</literal></expr></argument>, <argument pos:start="17:47" pos:end="17:47"><expr pos:start="17:47" pos:end="17:47"><literal type="number" pos:start="17:47" pos:end="17:47">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><call pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:12">g_assert</name><argument_list pos:start="19:13" pos:end="19:25">(<argument pos:start="19:14" pos:end="19:24"><expr pos:start="19:14" pos:end="19:24"><name pos:start="19:14" pos:end="19:16">dev</name> <operator pos:start="19:18" pos:end="19:19">!=</operator> <name pos:start="19:21" pos:end="19:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:15">/* 3.2.2 */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:71"><expr pos:start="25:5" pos:end="25:70"><call pos:start="25:5" pos:end="25:70"><name pos:start="25:5" pos:end="25:19">g_assert_cmpint</name><argument_list pos:start="25:20" pos:end="25:70">(<argument pos:start="25:21" pos:end="25:57"><expr pos:start="25:21" pos:end="25:57"><call pos:start="25:21" pos:end="25:57"><name pos:start="25:21" pos:end="25:37">qpci_config_readw</name><argument_list pos:start="25:38" pos:end="25:57">(<argument pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:41">dev</name></expr></argument>, <argument pos:start="25:44" pos:end="25:56"><expr pos:start="25:44" pos:end="25:56"><name pos:start="25:44" pos:end="25:56">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:60" pos:end="25:61"><expr pos:start="25:60" pos:end="25:61"><operator pos:start="25:60" pos:end="25:61">==</operator></expr></argument>, <argument pos:start="25:64" pos:end="25:69"><expr pos:start="25:64" pos:end="25:69"><literal type="number" pos:start="25:64" pos:end="25:69">0x8086</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:15">/* 3.2.3 */</comment>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:70"><call pos:start="29:5" pos:end="29:70"><name pos:start="29:5" pos:end="29:19">g_assert_cmpint</name><argument_list pos:start="29:20" pos:end="29:70">(<argument pos:start="29:21" pos:end="29:57"><expr pos:start="29:21" pos:end="29:57"><call pos:start="29:21" pos:end="29:57"><name pos:start="29:21" pos:end="29:37">qpci_config_readw</name><argument_list pos:start="29:38" pos:end="29:57">(<argument pos:start="29:39" pos:end="29:41"><expr pos:start="29:39" pos:end="29:41"><name pos:start="29:39" pos:end="29:41">dev</name></expr></argument>, <argument pos:start="29:44" pos:end="29:56"><expr pos:start="29:44" pos:end="29:56"><name pos:start="29:44" pos:end="29:56">PCI_DEVICE_ID</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:60" pos:end="29:61"><expr pos:start="29:60" pos:end="29:61"><operator pos:start="29:60" pos:end="29:61">==</operator></expr></argument>, <argument pos:start="29:64" pos:end="29:69"><expr pos:start="29:64" pos:end="29:69"><literal type="number" pos:start="29:64" pos:end="29:69">0x1237</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifndef pos:start="31:1" pos:end="31:14">#<cpp:directive pos:start="31:2" pos:end="31:7">ifndef</cpp:directive> <name pos:start="31:9" pos:end="31:14">BROKEN</name></cpp:ifndef>

    <comment type="block" pos:start="33:5" pos:end="33:15">/* 3.2.4 */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:69"><expr pos:start="35:5" pos:end="35:68"><call pos:start="35:5" pos:end="35:68"><name pos:start="35:5" pos:end="35:19">g_assert_cmpint</name><argument_list pos:start="35:20" pos:end="35:68">(<argument pos:start="35:21" pos:end="35:55"><expr pos:start="35:21" pos:end="35:55"><call pos:start="35:21" pos:end="35:55"><name pos:start="35:21" pos:end="35:37">qpci_config_readw</name><argument_list pos:start="35:38" pos:end="35:55">(<argument pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><name pos:start="35:39" pos:end="35:41">dev</name></expr></argument>, <argument pos:start="35:44" pos:end="35:54"><expr pos:start="35:44" pos:end="35:54"><name pos:start="35:44" pos:end="35:54">PCI_COMMAND</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:58" pos:end="35:59"><expr pos:start="35:58" pos:end="35:59"><operator pos:start="35:58" pos:end="35:59">==</operator></expr></argument>, <argument pos:start="35:62" pos:end="35:67"><expr pos:start="35:62" pos:end="35:67"><literal type="number" pos:start="35:62" pos:end="35:67">0x0006</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="37:5" pos:end="37:15">/* 3.2.5 */</comment>

    <expr_stmt pos:start="39:5" pos:end="42:0"><expr pos:start="39:5" pos:end="39:67"><call pos:start="39:5" pos:end="39:67"><name pos:start="39:5" pos:end="39:19">g_assert_cmpint</name><argument_list pos:start="39:20" pos:end="39:67">(<argument pos:start="39:21" pos:end="39:54"><expr pos:start="39:21" pos:end="39:54"><call pos:start="39:21" pos:end="39:54"><name pos:start="39:21" pos:end="39:37">qpci_config_readw</name><argument_list pos:start="39:38" pos:end="39:54">(<argument pos:start="39:39" pos:end="39:41"><expr pos:start="39:39" pos:end="39:41"><name pos:start="39:39" pos:end="39:41">dev</name></expr></argument>, <argument pos:start="39:44" pos:end="39:53"><expr pos:start="39:44" pos:end="39:53"><name pos:start="39:44" pos:end="39:53">PCI_STATUS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:57" pos:end="39:58"><expr pos:start="39:57" pos:end="39:58"><operator pos:start="39:57" pos:end="39:58">==</operator></expr></argument>, <argument pos:start="39:61" pos:end="39:66"><expr pos:start="39:61" pos:end="39:66"><literal type="number" pos:start="39:61" pos:end="39:66">0x0280</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="43:5" pos:end="43:15">/* 3.2.7 */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:70"><expr pos:start="45:5" pos:end="45:69"><call pos:start="45:5" pos:end="45:69"><name pos:start="45:5" pos:end="45:19">g_assert_cmpint</name><argument_list pos:start="45:20" pos:end="45:69">(<argument pos:start="45:21" pos:end="45:58"><expr pos:start="45:21" pos:end="45:58"><call pos:start="45:21" pos:end="45:58"><name pos:start="45:21" pos:end="45:37">qpci_config_readb</name><argument_list pos:start="45:38" pos:end="45:58">(<argument pos:start="45:39" pos:end="45:41"><expr pos:start="45:39" pos:end="45:41"><name pos:start="45:39" pos:end="45:41">dev</name></expr></argument>, <argument pos:start="45:44" pos:end="45:57"><expr pos:start="45:44" pos:end="45:57"><name pos:start="45:44" pos:end="45:57">PCI_CLASS_PROG</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:61" pos:end="45:62"><expr pos:start="45:61" pos:end="45:62"><operator pos:start="45:61" pos:end="45:62">==</operator></expr></argument>, <argument pos:start="45:65" pos:end="45:68"><expr pos:start="45:65" pos:end="45:68"><literal type="number" pos:start="45:65" pos:end="45:68">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:74"><expr pos:start="47:5" pos:end="47:73"><call pos:start="47:5" pos:end="47:73"><name pos:start="47:5" pos:end="47:19">g_assert_cmpint</name><argument_list pos:start="47:20" pos:end="47:73">(<argument pos:start="47:21" pos:end="47:60"><expr pos:start="47:21" pos:end="47:60"><call pos:start="47:21" pos:end="47:60"><name pos:start="47:21" pos:end="47:37">qpci_config_readw</name><argument_list pos:start="47:38" pos:end="47:60">(<argument pos:start="47:39" pos:end="47:41"><expr pos:start="47:39" pos:end="47:41"><name pos:start="47:39" pos:end="47:41">dev</name></expr></argument>, <argument pos:start="47:44" pos:end="47:59"><expr pos:start="47:44" pos:end="47:59"><name pos:start="47:44" pos:end="47:59">PCI_CLASS_DEVICE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:63" pos:end="47:64"><expr pos:start="47:63" pos:end="47:64"><operator pos:start="47:63" pos:end="47:64">==</operator></expr></argument>, <argument pos:start="47:67" pos:end="47:72"><expr pos:start="47:67" pos:end="47:72"><literal type="number" pos:start="47:67" pos:end="47:72">0x0600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="49:5" pos:end="49:15">/* 3.2.8 */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:73"><expr pos:start="51:5" pos:end="51:72"><call pos:start="51:5" pos:end="51:72"><name pos:start="51:5" pos:end="51:19">g_assert_cmpint</name><argument_list pos:start="51:20" pos:end="51:72">(<argument pos:start="51:21" pos:end="51:61"><expr pos:start="51:21" pos:end="51:61"><call pos:start="51:21" pos:end="51:61"><name pos:start="51:21" pos:end="51:37">qpci_config_readb</name><argument_list pos:start="51:38" pos:end="51:61">(<argument pos:start="51:39" pos:end="51:41"><expr pos:start="51:39" pos:end="51:41"><name pos:start="51:39" pos:end="51:41">dev</name></expr></argument>, <argument pos:start="51:44" pos:end="51:60"><expr pos:start="51:44" pos:end="51:60"><name pos:start="51:44" pos:end="51:60">PCI_LATENCY_TIMER</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:64" pos:end="51:65"><expr pos:start="51:64" pos:end="51:65"><operator pos:start="51:64" pos:end="51:65">==</operator></expr></argument>, <argument pos:start="51:68" pos:end="51:71"><expr pos:start="51:68" pos:end="51:71"><literal type="number" pos:start="51:68" pos:end="51:71">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:15">/* 3.2.9 */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:71"><expr pos:start="55:5" pos:end="55:70"><call pos:start="55:5" pos:end="55:70"><name pos:start="55:5" pos:end="55:19">g_assert_cmpint</name><argument_list pos:start="55:20" pos:end="55:70">(<argument pos:start="55:21" pos:end="55:59"><expr pos:start="55:21" pos:end="55:59"><call pos:start="55:21" pos:end="55:59"><name pos:start="55:21" pos:end="55:37">qpci_config_readb</name><argument_list pos:start="55:38" pos:end="55:59">(<argument pos:start="55:39" pos:end="55:41"><expr pos:start="55:39" pos:end="55:41"><name pos:start="55:39" pos:end="55:41">dev</name></expr></argument>, <argument pos:start="55:44" pos:end="55:58"><expr pos:start="55:44" pos:end="55:58"><name pos:start="55:44" pos:end="55:58">PCI_HEADER_TYPE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:62" pos:end="55:63"><expr pos:start="55:62" pos:end="55:63"><operator pos:start="55:62" pos:end="55:63">==</operator></expr></argument>, <argument pos:start="55:66" pos:end="55:69"><expr pos:start="55:66" pos:end="55:69"><literal type="number" pos:start="55:66" pos:end="55:69">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="57:5" pos:end="57:16">/* 3.2.10 */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:64"><expr pos:start="59:5" pos:end="59:63"><call pos:start="59:5" pos:end="59:63"><name pos:start="59:5" pos:end="59:19">g_assert_cmpint</name><argument_list pos:start="59:20" pos:end="59:63">(<argument pos:start="59:21" pos:end="59:52"><expr pos:start="59:21" pos:end="59:52"><call pos:start="59:21" pos:end="59:52"><name pos:start="59:21" pos:end="59:37">qpci_config_readb</name><argument_list pos:start="59:38" pos:end="59:52">(<argument pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:41">dev</name></expr></argument>, <argument pos:start="59:44" pos:end="59:51"><expr pos:start="59:44" pos:end="59:51"><name pos:start="59:44" pos:end="59:51">PCI_BIST</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:55" pos:end="59:56"><expr pos:start="59:55" pos:end="59:56"><operator pos:start="59:55" pos:end="59:56">==</operator></expr></argument>, <argument pos:start="59:59" pos:end="59:62"><expr pos:start="59:59" pos:end="59:62"><literal type="number" pos:start="59:59" pos:end="59:62">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:16">/* 3.2.11 */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:9">value</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <call pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:29">qpci_config_readw</name><argument_list pos:start="65:30" pos:end="65:40">(<argument pos:start="65:31" pos:end="65:33"><expr pos:start="65:31" pos:end="65:33"><name pos:start="65:31" pos:end="65:33">dev</name></expr></argument>, <argument pos:start="65:36" pos:end="65:39"><expr pos:start="65:36" pos:end="65:39"><literal type="number" pos:start="65:36" pos:end="65:39">0x50</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:43" pos:end="65:54">/* PMCCFG */</comment>

    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:25">(<expr pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">num_cpus</name></name> <operator pos:start="67:21" pos:end="67:22">==</operator> <literal type="number" pos:start="67:24" pos:end="67:24">1</literal></expr>)</condition> <block pos:start="67:27" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:39"> <comment type="block" pos:start="67:29" pos:end="67:37">/* WPE */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:39"><expr pos:start="69:9" pos:end="69:38"><call pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:16">g_assert</name><argument_list pos:start="69:17" pos:end="69:38">(<argument pos:start="69:18" pos:end="69:37"><expr pos:start="69:18" pos:end="69:37"><operator pos:start="69:18" pos:end="69:18">!</operator><operator pos:start="69:19" pos:end="69:19">(</operator><name pos:start="69:20" pos:end="69:24">value</name> <operator pos:start="69:26" pos:end="69:26">&amp;</operator> <operator pos:start="69:28" pos:end="69:28">(</operator><literal type="number" pos:start="69:29" pos:end="69:29">1</literal> <operator pos:start="69:31" pos:end="69:32">&lt;&lt;</operator> <literal type="number" pos:start="69:34" pos:end="69:35">15</literal><operator pos:start="69:36" pos:end="69:36">)</operator><operator pos:start="69:37" pos:end="69:37">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="75:5">else <block pos:start="71:12" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:38">

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><call pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:16">g_assert</name><argument_list pos:start="73:17" pos:end="73:37">(<argument pos:start="73:18" pos:end="73:36"><expr pos:start="73:18" pos:end="73:36"><operator pos:start="73:18" pos:end="73:18">(</operator><name pos:start="73:19" pos:end="73:23">value</name> <operator pos:start="73:25" pos:end="73:25">&amp;</operator> <operator pos:start="73:27" pos:end="73:27">(</operator><literal type="number" pos:start="73:28" pos:end="73:28">1</literal> <operator pos:start="73:30" pos:end="73:31">&lt;&lt;</operator> <literal type="number" pos:start="73:33" pos:end="73:34">15</literal><operator pos:start="73:35" pos:end="73:35">)</operator><operator pos:start="73:36" pos:end="73:36">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:34"><expr pos:start="79:5" pos:end="79:33"><call pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:12">g_assert</name><argument_list pos:start="79:13" pos:end="79:33">(<argument pos:start="79:14" pos:end="79:32"><expr pos:start="79:14" pos:end="79:32"><operator pos:start="79:14" pos:end="79:14">!</operator><operator pos:start="79:15" pos:end="79:15">(</operator><name pos:start="79:16" pos:end="79:20">value</name> <operator pos:start="79:22" pos:end="79:22">&amp;</operator> <operator pos:start="79:24" pos:end="79:24">(</operator><literal type="number" pos:start="79:25" pos:end="79:25">1</literal> <operator pos:start="79:27" pos:end="79:28">&lt;&lt;</operator> <literal type="number" pos:start="79:30" pos:end="79:30">6</literal><operator pos:start="79:31" pos:end="79:31">)</operator><operator pos:start="79:32" pos:end="79:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:36" pos:end="79:45">/* EPTE */</comment>



    <comment type="block" pos:start="83:5" pos:end="83:16">/* 3.2.12 */</comment>

    <expr_stmt pos:start="85:5" pos:end="90:0"><expr pos:start="85:5" pos:end="85:59"><call pos:start="85:5" pos:end="85:59"><name pos:start="85:5" pos:end="85:19">g_assert_cmpint</name><argument_list pos:start="85:20" pos:end="85:59">(<argument pos:start="85:21" pos:end="85:48"><expr pos:start="85:21" pos:end="85:48"><call pos:start="85:21" pos:end="85:48"><name pos:start="85:21" pos:end="85:37">qpci_config_readb</name><argument_list pos:start="85:38" pos:end="85:48">(<argument pos:start="85:39" pos:end="85:41"><expr pos:start="85:39" pos:end="85:41"><name pos:start="85:39" pos:end="85:41">dev</name></expr></argument>, <argument pos:start="85:44" pos:end="85:47"><expr pos:start="85:44" pos:end="85:47"><literal type="number" pos:start="85:44" pos:end="85:47">0x52</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:51" pos:end="85:52"><expr pos:start="85:51" pos:end="85:52"><operator pos:start="85:51" pos:end="85:52">==</operator></expr></argument>, <argument pos:start="85:55" pos:end="85:58"><expr pos:start="85:55" pos:end="85:58"><literal type="number" pos:start="85:55" pos:end="85:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:62" pos:end="85:74">/* DETURBO */</comment>

    <comment type="block" pos:start="87:5" pos:end="87:16">/* 3.2.13 */</comment>

<cpp:ifndef pos:start="89:1" pos:end="89:14">#<cpp:directive pos:start="89:2" pos:end="89:7">ifndef</cpp:directive> <name pos:start="89:9" pos:end="89:14">BROKEN</name></cpp:ifndef>

    <expr_stmt pos:start="91:5" pos:end="94:0"><expr pos:start="91:5" pos:end="91:59"><call pos:start="91:5" pos:end="91:59"><name pos:start="91:5" pos:end="91:19">g_assert_cmpint</name><argument_list pos:start="91:20" pos:end="91:59">(<argument pos:start="91:21" pos:end="91:48"><expr pos:start="91:21" pos:end="91:48"><call pos:start="91:21" pos:end="91:48"><name pos:start="91:21" pos:end="91:37">qpci_config_readb</name><argument_list pos:start="91:38" pos:end="91:48">(<argument pos:start="91:39" pos:end="91:41"><expr pos:start="91:39" pos:end="91:41"><name pos:start="91:39" pos:end="91:41">dev</name></expr></argument>, <argument pos:start="91:44" pos:end="91:47"><expr pos:start="91:44" pos:end="91:47"><literal type="number" pos:start="91:44" pos:end="91:47">0x53</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:51" pos:end="91:52"><expr pos:start="91:51" pos:end="91:52"><operator pos:start="91:51" pos:end="91:52">==</operator></expr></argument>, <argument pos:start="91:55" pos:end="91:58"><expr pos:start="91:55" pos:end="91:58"><literal type="number" pos:start="91:55" pos:end="91:58">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:62" pos:end="91:70">/* DBC */</comment>

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="95:5" pos:end="95:16">/* 3.2.14 */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:60"><expr pos:start="97:5" pos:end="97:59"><call pos:start="97:5" pos:end="97:59"><name pos:start="97:5" pos:end="97:19">g_assert_cmpint</name><argument_list pos:start="97:20" pos:end="97:59">(<argument pos:start="97:21" pos:end="97:48"><expr pos:start="97:21" pos:end="97:48"><call pos:start="97:21" pos:end="97:48"><name pos:start="97:21" pos:end="97:37">qpci_config_readb</name><argument_list pos:start="97:38" pos:end="97:48">(<argument pos:start="97:39" pos:end="97:41"><expr pos:start="97:39" pos:end="97:41"><name pos:start="97:39" pos:end="97:41">dev</name></expr></argument>, <argument pos:start="97:44" pos:end="97:47"><expr pos:start="97:44" pos:end="97:47"><literal type="number" pos:start="97:44" pos:end="97:47">0x54</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:51" pos:end="97:52"><expr pos:start="97:51" pos:end="97:52"><operator pos:start="97:51" pos:end="97:52">==</operator></expr></argument>, <argument pos:start="97:55" pos:end="97:58"><expr pos:start="97:55" pos:end="97:58"><literal type="number" pos:start="97:55" pos:end="97:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="97:62" pos:end="97:70">/* AXC */</comment>

    <comment type="block" pos:start="99:5" pos:end="99:16">/* 3.2.15 */</comment>

    <expr_stmt pos:start="101:5" pos:end="104:0"><expr pos:start="101:5" pos:end="101:61"><call pos:start="101:5" pos:end="101:61"><name pos:start="101:5" pos:end="101:19">g_assert_cmpint</name><argument_list pos:start="101:20" pos:end="101:61">(<argument pos:start="101:21" pos:end="101:48"><expr pos:start="101:21" pos:end="101:48"><call pos:start="101:21" pos:end="101:48"><name pos:start="101:21" pos:end="101:37">qpci_config_readw</name><argument_list pos:start="101:38" pos:end="101:48">(<argument pos:start="101:39" pos:end="101:41"><expr pos:start="101:39" pos:end="101:41"><name pos:start="101:39" pos:end="101:41">dev</name></expr></argument>, <argument pos:start="101:44" pos:end="101:47"><expr pos:start="101:44" pos:end="101:47"><literal type="number" pos:start="101:44" pos:end="101:47">0x55</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:51" pos:end="101:52"><expr pos:start="101:51" pos:end="101:52"><operator pos:start="101:51" pos:end="101:52">==</operator></expr></argument>, <argument pos:start="101:55" pos:end="101:60"><expr pos:start="101:55" pos:end="101:60"><literal type="number" pos:start="101:55" pos:end="101:60">0x0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="101:64" pos:end="101:72">/* DRT */</comment>

<cpp:ifndef pos:start="103:1" pos:end="103:14">#<cpp:directive pos:start="103:2" pos:end="103:7">ifndef</cpp:directive> <name pos:start="103:9" pos:end="103:14">BROKEN</name></cpp:ifndef>

    <comment type="block" pos:start="105:5" pos:end="105:16">/* 3.2.16 */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:60"><expr pos:start="107:5" pos:end="107:59"><call pos:start="107:5" pos:end="107:59"><name pos:start="107:5" pos:end="107:19">g_assert_cmpint</name><argument_list pos:start="107:20" pos:end="107:59">(<argument pos:start="107:21" pos:end="107:48"><expr pos:start="107:21" pos:end="107:48"><call pos:start="107:21" pos:end="107:48"><name pos:start="107:21" pos:end="107:37">qpci_config_readb</name><argument_list pos:start="107:38" pos:end="107:48">(<argument pos:start="107:39" pos:end="107:41"><expr pos:start="107:39" pos:end="107:41"><name pos:start="107:39" pos:end="107:41">dev</name></expr></argument>, <argument pos:start="107:44" pos:end="107:47"><expr pos:start="107:44" pos:end="107:47"><literal type="number" pos:start="107:44" pos:end="107:47">0x57</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:51" pos:end="107:52"><expr pos:start="107:51" pos:end="107:52"><operator pos:start="107:51" pos:end="107:52">==</operator></expr></argument>, <argument pos:start="107:55" pos:end="107:58"><expr pos:start="107:55" pos:end="107:58"><literal type="number" pos:start="107:55" pos:end="107:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:62" pos:end="107:72">/* DRAMC */</comment>

    <comment type="block" pos:start="109:5" pos:end="109:16">/* 3.2.17 */</comment>

    <expr_stmt pos:start="111:5" pos:end="114:0"><expr pos:start="111:5" pos:end="111:59"><call pos:start="111:5" pos:end="111:59"><name pos:start="111:5" pos:end="111:19">g_assert_cmpint</name><argument_list pos:start="111:20" pos:end="111:59">(<argument pos:start="111:21" pos:end="111:48"><expr pos:start="111:21" pos:end="111:48"><call pos:start="111:21" pos:end="111:48"><name pos:start="111:21" pos:end="111:37">qpci_config_readb</name><argument_list pos:start="111:38" pos:end="111:48">(<argument pos:start="111:39" pos:end="111:41"><expr pos:start="111:39" pos:end="111:41"><name pos:start="111:39" pos:end="111:41">dev</name></expr></argument>, <argument pos:start="111:44" pos:end="111:47"><expr pos:start="111:44" pos:end="111:47"><literal type="number" pos:start="111:44" pos:end="111:47">0x58</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:51" pos:end="111:52"><expr pos:start="111:51" pos:end="111:52"><operator pos:start="111:51" pos:end="111:52">==</operator></expr></argument>, <argument pos:start="111:55" pos:end="111:58"><expr pos:start="111:55" pos:end="111:58"><literal type="number" pos:start="111:55" pos:end="111:58">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:62" pos:end="111:72">/* DRAMT */</comment>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="115:5" pos:end="115:16">/* 3.2.18 */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:60"><expr pos:start="117:5" pos:end="117:59"><call pos:start="117:5" pos:end="117:59"><name pos:start="117:5" pos:end="117:19">g_assert_cmpint</name><argument_list pos:start="117:20" pos:end="117:59">(<argument pos:start="117:21" pos:end="117:48"><expr pos:start="117:21" pos:end="117:48"><call pos:start="117:21" pos:end="117:48"><name pos:start="117:21" pos:end="117:37">qpci_config_readb</name><argument_list pos:start="117:38" pos:end="117:48">(<argument pos:start="117:39" pos:end="117:41"><expr pos:start="117:39" pos:end="117:41"><name pos:start="117:39" pos:end="117:41">dev</name></expr></argument>, <argument pos:start="117:44" pos:end="117:47"><expr pos:start="117:44" pos:end="117:47"><literal type="number" pos:start="117:44" pos:end="117:47">0x59</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:51" pos:end="117:52"><expr pos:start="117:51" pos:end="117:52"><operator pos:start="117:51" pos:end="117:52">==</operator></expr></argument>, <argument pos:start="117:55" pos:end="117:58"><expr pos:start="117:55" pos:end="117:58"><literal type="number" pos:start="117:55" pos:end="117:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:62" pos:end="117:71">/* PAM0 */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:60"><expr pos:start="119:5" pos:end="119:59"><call pos:start="119:5" pos:end="119:59"><name pos:start="119:5" pos:end="119:19">g_assert_cmpint</name><argument_list pos:start="119:20" pos:end="119:59">(<argument pos:start="119:21" pos:end="119:48"><expr pos:start="119:21" pos:end="119:48"><call pos:start="119:21" pos:end="119:48"><name pos:start="119:21" pos:end="119:37">qpci_config_readb</name><argument_list pos:start="119:38" pos:end="119:48">(<argument pos:start="119:39" pos:end="119:41"><expr pos:start="119:39" pos:end="119:41"><name pos:start="119:39" pos:end="119:41">dev</name></expr></argument>, <argument pos:start="119:44" pos:end="119:47"><expr pos:start="119:44" pos:end="119:47"><literal type="number" pos:start="119:44" pos:end="119:47">0x5A</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:51" pos:end="119:52"><expr pos:start="119:51" pos:end="119:52"><operator pos:start="119:51" pos:end="119:52">==</operator></expr></argument>, <argument pos:start="119:55" pos:end="119:58"><expr pos:start="119:55" pos:end="119:58"><literal type="number" pos:start="119:55" pos:end="119:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="119:62" pos:end="119:71">/* PAM1 */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:60"><expr pos:start="121:5" pos:end="121:59"><call pos:start="121:5" pos:end="121:59"><name pos:start="121:5" pos:end="121:19">g_assert_cmpint</name><argument_list pos:start="121:20" pos:end="121:59">(<argument pos:start="121:21" pos:end="121:48"><expr pos:start="121:21" pos:end="121:48"><call pos:start="121:21" pos:end="121:48"><name pos:start="121:21" pos:end="121:37">qpci_config_readb</name><argument_list pos:start="121:38" pos:end="121:48">(<argument pos:start="121:39" pos:end="121:41"><expr pos:start="121:39" pos:end="121:41"><name pos:start="121:39" pos:end="121:41">dev</name></expr></argument>, <argument pos:start="121:44" pos:end="121:47"><expr pos:start="121:44" pos:end="121:47"><literal type="number" pos:start="121:44" pos:end="121:47">0x5B</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:51" pos:end="121:52"><expr pos:start="121:51" pos:end="121:52"><operator pos:start="121:51" pos:end="121:52">==</operator></expr></argument>, <argument pos:start="121:55" pos:end="121:58"><expr pos:start="121:55" pos:end="121:58"><literal type="number" pos:start="121:55" pos:end="121:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="121:62" pos:end="121:71">/* PAM2 */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:60"><expr pos:start="123:5" pos:end="123:59"><call pos:start="123:5" pos:end="123:59"><name pos:start="123:5" pos:end="123:19">g_assert_cmpint</name><argument_list pos:start="123:20" pos:end="123:59">(<argument pos:start="123:21" pos:end="123:48"><expr pos:start="123:21" pos:end="123:48"><call pos:start="123:21" pos:end="123:48"><name pos:start="123:21" pos:end="123:37">qpci_config_readb</name><argument_list pos:start="123:38" pos:end="123:48">(<argument pos:start="123:39" pos:end="123:41"><expr pos:start="123:39" pos:end="123:41"><name pos:start="123:39" pos:end="123:41">dev</name></expr></argument>, <argument pos:start="123:44" pos:end="123:47"><expr pos:start="123:44" pos:end="123:47"><literal type="number" pos:start="123:44" pos:end="123:47">0x5C</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:51" pos:end="123:52"><expr pos:start="123:51" pos:end="123:52"><operator pos:start="123:51" pos:end="123:52">==</operator></expr></argument>, <argument pos:start="123:55" pos:end="123:58"><expr pos:start="123:55" pos:end="123:58"><literal type="number" pos:start="123:55" pos:end="123:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="123:62" pos:end="123:71">/* PAM3 */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:60"><expr pos:start="125:5" pos:end="125:59"><call pos:start="125:5" pos:end="125:59"><name pos:start="125:5" pos:end="125:19">g_assert_cmpint</name><argument_list pos:start="125:20" pos:end="125:59">(<argument pos:start="125:21" pos:end="125:48"><expr pos:start="125:21" pos:end="125:48"><call pos:start="125:21" pos:end="125:48"><name pos:start="125:21" pos:end="125:37">qpci_config_readb</name><argument_list pos:start="125:38" pos:end="125:48">(<argument pos:start="125:39" pos:end="125:41"><expr pos:start="125:39" pos:end="125:41"><name pos:start="125:39" pos:end="125:41">dev</name></expr></argument>, <argument pos:start="125:44" pos:end="125:47"><expr pos:start="125:44" pos:end="125:47"><literal type="number" pos:start="125:44" pos:end="125:47">0x5D</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:51" pos:end="125:52"><expr pos:start="125:51" pos:end="125:52"><operator pos:start="125:51" pos:end="125:52">==</operator></expr></argument>, <argument pos:start="125:55" pos:end="125:58"><expr pos:start="125:55" pos:end="125:58"><literal type="number" pos:start="125:55" pos:end="125:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:62" pos:end="125:71">/* PAM4 */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:60"><expr pos:start="127:5" pos:end="127:59"><call pos:start="127:5" pos:end="127:59"><name pos:start="127:5" pos:end="127:19">g_assert_cmpint</name><argument_list pos:start="127:20" pos:end="127:59">(<argument pos:start="127:21" pos:end="127:48"><expr pos:start="127:21" pos:end="127:48"><call pos:start="127:21" pos:end="127:48"><name pos:start="127:21" pos:end="127:37">qpci_config_readb</name><argument_list pos:start="127:38" pos:end="127:48">(<argument pos:start="127:39" pos:end="127:41"><expr pos:start="127:39" pos:end="127:41"><name pos:start="127:39" pos:end="127:41">dev</name></expr></argument>, <argument pos:start="127:44" pos:end="127:47"><expr pos:start="127:44" pos:end="127:47"><literal type="number" pos:start="127:44" pos:end="127:47">0x5E</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:51" pos:end="127:52"><expr pos:start="127:51" pos:end="127:52"><operator pos:start="127:51" pos:end="127:52">==</operator></expr></argument>, <argument pos:start="127:55" pos:end="127:58"><expr pos:start="127:55" pos:end="127:58"><literal type="number" pos:start="127:55" pos:end="127:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="127:62" pos:end="127:71">/* PAM5 */</comment>

    <expr_stmt pos:start="129:5" pos:end="132:0"><expr pos:start="129:5" pos:end="129:59"><call pos:start="129:5" pos:end="129:59"><name pos:start="129:5" pos:end="129:19">g_assert_cmpint</name><argument_list pos:start="129:20" pos:end="129:59">(<argument pos:start="129:21" pos:end="129:48"><expr pos:start="129:21" pos:end="129:48"><call pos:start="129:21" pos:end="129:48"><name pos:start="129:21" pos:end="129:37">qpci_config_readb</name><argument_list pos:start="129:38" pos:end="129:48">(<argument pos:start="129:39" pos:end="129:41"><expr pos:start="129:39" pos:end="129:41"><name pos:start="129:39" pos:end="129:41">dev</name></expr></argument>, <argument pos:start="129:44" pos:end="129:47"><expr pos:start="129:44" pos:end="129:47"><literal type="number" pos:start="129:44" pos:end="129:47">0x5F</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="129:51" pos:end="129:52"><expr pos:start="129:51" pos:end="129:52"><operator pos:start="129:51" pos:end="129:52">==</operator></expr></argument>, <argument pos:start="129:55" pos:end="129:58"><expr pos:start="129:55" pos:end="129:58"><literal type="number" pos:start="129:55" pos:end="129:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="129:62" pos:end="129:71">/* PAM6 */</comment>

<cpp:ifndef pos:start="131:1" pos:end="131:14">#<cpp:directive pos:start="131:2" pos:end="131:7">ifndef</cpp:directive> <name pos:start="131:9" pos:end="131:14">BROKEN</name></cpp:ifndef>

    <comment type="block" pos:start="133:5" pos:end="133:16">/* 3.2.19 */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:60"><expr pos:start="135:5" pos:end="135:59"><call pos:start="135:5" pos:end="135:59"><name pos:start="135:5" pos:end="135:19">g_assert_cmpint</name><argument_list pos:start="135:20" pos:end="135:59">(<argument pos:start="135:21" pos:end="135:48"><expr pos:start="135:21" pos:end="135:48"><call pos:start="135:21" pos:end="135:48"><name pos:start="135:21" pos:end="135:37">qpci_config_readb</name><argument_list pos:start="135:38" pos:end="135:48">(<argument pos:start="135:39" pos:end="135:41"><expr pos:start="135:39" pos:end="135:41"><name pos:start="135:39" pos:end="135:41">dev</name></expr></argument>, <argument pos:start="135:44" pos:end="135:47"><expr pos:start="135:44" pos:end="135:47"><literal type="number" pos:start="135:44" pos:end="135:47">0x60</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:51" pos:end="135:52"><expr pos:start="135:51" pos:end="135:52"><operator pos:start="135:51" pos:end="135:52">==</operator></expr></argument>, <argument pos:start="135:55" pos:end="135:58"><expr pos:start="135:55" pos:end="135:58"><literal type="number" pos:start="135:55" pos:end="135:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="135:62" pos:end="135:71">/* DRB0 */</comment>

    <expr_stmt pos:start="137:5" pos:end="137:60"><expr pos:start="137:5" pos:end="137:59"><call pos:start="137:5" pos:end="137:59"><name pos:start="137:5" pos:end="137:19">g_assert_cmpint</name><argument_list pos:start="137:20" pos:end="137:59">(<argument pos:start="137:21" pos:end="137:48"><expr pos:start="137:21" pos:end="137:48"><call pos:start="137:21" pos:end="137:48"><name pos:start="137:21" pos:end="137:37">qpci_config_readb</name><argument_list pos:start="137:38" pos:end="137:48">(<argument pos:start="137:39" pos:end="137:41"><expr pos:start="137:39" pos:end="137:41"><name pos:start="137:39" pos:end="137:41">dev</name></expr></argument>, <argument pos:start="137:44" pos:end="137:47"><expr pos:start="137:44" pos:end="137:47"><literal type="number" pos:start="137:44" pos:end="137:47">0x61</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:51" pos:end="137:52"><expr pos:start="137:51" pos:end="137:52"><operator pos:start="137:51" pos:end="137:52">==</operator></expr></argument>, <argument pos:start="137:55" pos:end="137:58"><expr pos:start="137:55" pos:end="137:58"><literal type="number" pos:start="137:55" pos:end="137:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:62" pos:end="137:71">/* DRB1 */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:60"><expr pos:start="139:5" pos:end="139:59"><call pos:start="139:5" pos:end="139:59"><name pos:start="139:5" pos:end="139:19">g_assert_cmpint</name><argument_list pos:start="139:20" pos:end="139:59">(<argument pos:start="139:21" pos:end="139:48"><expr pos:start="139:21" pos:end="139:48"><call pos:start="139:21" pos:end="139:48"><name pos:start="139:21" pos:end="139:37">qpci_config_readb</name><argument_list pos:start="139:38" pos:end="139:48">(<argument pos:start="139:39" pos:end="139:41"><expr pos:start="139:39" pos:end="139:41"><name pos:start="139:39" pos:end="139:41">dev</name></expr></argument>, <argument pos:start="139:44" pos:end="139:47"><expr pos:start="139:44" pos:end="139:47"><literal type="number" pos:start="139:44" pos:end="139:47">0x62</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:51" pos:end="139:52"><expr pos:start="139:51" pos:end="139:52"><operator pos:start="139:51" pos:end="139:52">==</operator></expr></argument>, <argument pos:start="139:55" pos:end="139:58"><expr pos:start="139:55" pos:end="139:58"><literal type="number" pos:start="139:55" pos:end="139:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="139:62" pos:end="139:71">/* DRB2 */</comment>

    <expr_stmt pos:start="141:5" pos:end="141:60"><expr pos:start="141:5" pos:end="141:59"><call pos:start="141:5" pos:end="141:59"><name pos:start="141:5" pos:end="141:19">g_assert_cmpint</name><argument_list pos:start="141:20" pos:end="141:59">(<argument pos:start="141:21" pos:end="141:48"><expr pos:start="141:21" pos:end="141:48"><call pos:start="141:21" pos:end="141:48"><name pos:start="141:21" pos:end="141:37">qpci_config_readb</name><argument_list pos:start="141:38" pos:end="141:48">(<argument pos:start="141:39" pos:end="141:41"><expr pos:start="141:39" pos:end="141:41"><name pos:start="141:39" pos:end="141:41">dev</name></expr></argument>, <argument pos:start="141:44" pos:end="141:47"><expr pos:start="141:44" pos:end="141:47"><literal type="number" pos:start="141:44" pos:end="141:47">0x63</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:51" pos:end="141:52"><expr pos:start="141:51" pos:end="141:52"><operator pos:start="141:51" pos:end="141:52">==</operator></expr></argument>, <argument pos:start="141:55" pos:end="141:58"><expr pos:start="141:55" pos:end="141:58"><literal type="number" pos:start="141:55" pos:end="141:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="141:62" pos:end="141:71">/* DRB3 */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:60"><expr pos:start="143:5" pos:end="143:59"><call pos:start="143:5" pos:end="143:59"><name pos:start="143:5" pos:end="143:19">g_assert_cmpint</name><argument_list pos:start="143:20" pos:end="143:59">(<argument pos:start="143:21" pos:end="143:48"><expr pos:start="143:21" pos:end="143:48"><call pos:start="143:21" pos:end="143:48"><name pos:start="143:21" pos:end="143:37">qpci_config_readb</name><argument_list pos:start="143:38" pos:end="143:48">(<argument pos:start="143:39" pos:end="143:41"><expr pos:start="143:39" pos:end="143:41"><name pos:start="143:39" pos:end="143:41">dev</name></expr></argument>, <argument pos:start="143:44" pos:end="143:47"><expr pos:start="143:44" pos:end="143:47"><literal type="number" pos:start="143:44" pos:end="143:47">0x64</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="143:51" pos:end="143:52"><expr pos:start="143:51" pos:end="143:52"><operator pos:start="143:51" pos:end="143:52">==</operator></expr></argument>, <argument pos:start="143:55" pos:end="143:58"><expr pos:start="143:55" pos:end="143:58"><literal type="number" pos:start="143:55" pos:end="143:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="143:62" pos:end="143:71">/* DRB4 */</comment>

    <expr_stmt pos:start="145:5" pos:end="145:60"><expr pos:start="145:5" pos:end="145:59"><call pos:start="145:5" pos:end="145:59"><name pos:start="145:5" pos:end="145:19">g_assert_cmpint</name><argument_list pos:start="145:20" pos:end="145:59">(<argument pos:start="145:21" pos:end="145:48"><expr pos:start="145:21" pos:end="145:48"><call pos:start="145:21" pos:end="145:48"><name pos:start="145:21" pos:end="145:37">qpci_config_readb</name><argument_list pos:start="145:38" pos:end="145:48">(<argument pos:start="145:39" pos:end="145:41"><expr pos:start="145:39" pos:end="145:41"><name pos:start="145:39" pos:end="145:41">dev</name></expr></argument>, <argument pos:start="145:44" pos:end="145:47"><expr pos:start="145:44" pos:end="145:47"><literal type="number" pos:start="145:44" pos:end="145:47">0x65</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="145:51" pos:end="145:52"><expr pos:start="145:51" pos:end="145:52"><operator pos:start="145:51" pos:end="145:52">==</operator></expr></argument>, <argument pos:start="145:55" pos:end="145:58"><expr pos:start="145:55" pos:end="145:58"><literal type="number" pos:start="145:55" pos:end="145:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="145:62" pos:end="145:71">/* DRB5 */</comment>

    <expr_stmt pos:start="147:5" pos:end="147:60"><expr pos:start="147:5" pos:end="147:59"><call pos:start="147:5" pos:end="147:59"><name pos:start="147:5" pos:end="147:19">g_assert_cmpint</name><argument_list pos:start="147:20" pos:end="147:59">(<argument pos:start="147:21" pos:end="147:48"><expr pos:start="147:21" pos:end="147:48"><call pos:start="147:21" pos:end="147:48"><name pos:start="147:21" pos:end="147:37">qpci_config_readb</name><argument_list pos:start="147:38" pos:end="147:48">(<argument pos:start="147:39" pos:end="147:41"><expr pos:start="147:39" pos:end="147:41"><name pos:start="147:39" pos:end="147:41">dev</name></expr></argument>, <argument pos:start="147:44" pos:end="147:47"><expr pos:start="147:44" pos:end="147:47"><literal type="number" pos:start="147:44" pos:end="147:47">0x66</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:51" pos:end="147:52"><expr pos:start="147:51" pos:end="147:52"><operator pos:start="147:51" pos:end="147:52">==</operator></expr></argument>, <argument pos:start="147:55" pos:end="147:58"><expr pos:start="147:55" pos:end="147:58"><literal type="number" pos:start="147:55" pos:end="147:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="147:62" pos:end="147:71">/* DRB6 */</comment>

    <expr_stmt pos:start="149:5" pos:end="152:0"><expr pos:start="149:5" pos:end="149:59"><call pos:start="149:5" pos:end="149:59"><name pos:start="149:5" pos:end="149:19">g_assert_cmpint</name><argument_list pos:start="149:20" pos:end="149:59">(<argument pos:start="149:21" pos:end="149:48"><expr pos:start="149:21" pos:end="149:48"><call pos:start="149:21" pos:end="149:48"><name pos:start="149:21" pos:end="149:37">qpci_config_readb</name><argument_list pos:start="149:38" pos:end="149:48">(<argument pos:start="149:39" pos:end="149:41"><expr pos:start="149:39" pos:end="149:41"><name pos:start="149:39" pos:end="149:41">dev</name></expr></argument>, <argument pos:start="149:44" pos:end="149:47"><expr pos:start="149:44" pos:end="149:47"><literal type="number" pos:start="149:44" pos:end="149:47">0x67</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="149:51" pos:end="149:52"><expr pos:start="149:51" pos:end="149:52"><operator pos:start="149:51" pos:end="149:52">==</operator></expr></argument>, <argument pos:start="149:55" pos:end="149:58"><expr pos:start="149:55" pos:end="149:58"><literal type="number" pos:start="149:55" pos:end="149:58">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="149:62" pos:end="149:71">/* DRB7 */</comment>

<cpp:endif pos:start="151:1" pos:end="151:6">#<cpp:directive pos:start="151:2" pos:end="151:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="153:5" pos:end="153:16">/* 3.2.20 */</comment>

    <expr_stmt pos:start="155:5" pos:end="155:60"><expr pos:start="155:5" pos:end="155:59"><call pos:start="155:5" pos:end="155:59"><name pos:start="155:5" pos:end="155:19">g_assert_cmpint</name><argument_list pos:start="155:20" pos:end="155:59">(<argument pos:start="155:21" pos:end="155:48"><expr pos:start="155:21" pos:end="155:48"><call pos:start="155:21" pos:end="155:48"><name pos:start="155:21" pos:end="155:37">qpci_config_readb</name><argument_list pos:start="155:38" pos:end="155:48">(<argument pos:start="155:39" pos:end="155:41"><expr pos:start="155:39" pos:end="155:41"><name pos:start="155:39" pos:end="155:41">dev</name></expr></argument>, <argument pos:start="155:44" pos:end="155:47"><expr pos:start="155:44" pos:end="155:47"><literal type="number" pos:start="155:44" pos:end="155:47">0x68</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="155:51" pos:end="155:52"><expr pos:start="155:51" pos:end="155:52"><operator pos:start="155:51" pos:end="155:52">==</operator></expr></argument>, <argument pos:start="155:55" pos:end="155:58"><expr pos:start="155:55" pos:end="155:58"><literal type="number" pos:start="155:55" pos:end="155:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="155:62" pos:end="155:71">/* FDHC */</comment>

    <comment type="block" pos:start="157:5" pos:end="157:16">/* 3.2.21 */</comment>

    <expr_stmt pos:start="159:5" pos:end="162:0"><expr pos:start="159:5" pos:end="159:59"><call pos:start="159:5" pos:end="159:59"><name pos:start="159:5" pos:end="159:19">g_assert_cmpint</name><argument_list pos:start="159:20" pos:end="159:59">(<argument pos:start="159:21" pos:end="159:48"><expr pos:start="159:21" pos:end="159:48"><call pos:start="159:21" pos:end="159:48"><name pos:start="159:21" pos:end="159:37">qpci_config_readb</name><argument_list pos:start="159:38" pos:end="159:48">(<argument pos:start="159:39" pos:end="159:41"><expr pos:start="159:39" pos:end="159:41"><name pos:start="159:39" pos:end="159:41">dev</name></expr></argument>, <argument pos:start="159:44" pos:end="159:47"><expr pos:start="159:44" pos:end="159:47"><literal type="number" pos:start="159:44" pos:end="159:47">0x70</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="159:51" pos:end="159:52"><expr pos:start="159:51" pos:end="159:52"><operator pos:start="159:51" pos:end="159:52">==</operator></expr></argument>, <argument pos:start="159:55" pos:end="159:58"><expr pos:start="159:55" pos:end="159:58"><literal type="number" pos:start="159:55" pos:end="159:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="159:62" pos:end="159:70">/* MTT */</comment>

<cpp:ifndef pos:start="161:1" pos:end="161:14">#<cpp:directive pos:start="161:2" pos:end="161:7">ifndef</cpp:directive> <name pos:start="161:9" pos:end="161:14">BROKEN</name></cpp:ifndef>

    <comment type="block" pos:start="163:5" pos:end="163:16">/* 3.2.22 */</comment>

    <expr_stmt pos:start="165:5" pos:end="168:0"><expr pos:start="165:5" pos:end="165:59"><call pos:start="165:5" pos:end="165:59"><name pos:start="165:5" pos:end="165:19">g_assert_cmpint</name><argument_list pos:start="165:20" pos:end="165:59">(<argument pos:start="165:21" pos:end="165:48"><expr pos:start="165:21" pos:end="165:48"><call pos:start="165:21" pos:end="165:48"><name pos:start="165:21" pos:end="165:37">qpci_config_readb</name><argument_list pos:start="165:38" pos:end="165:48">(<argument pos:start="165:39" pos:end="165:41"><expr pos:start="165:39" pos:end="165:41"><name pos:start="165:39" pos:end="165:41">dev</name></expr></argument>, <argument pos:start="165:44" pos:end="165:47"><expr pos:start="165:44" pos:end="165:47"><literal type="number" pos:start="165:44" pos:end="165:47">0x71</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:51" pos:end="165:52"><expr pos:start="165:51" pos:end="165:52"><operator pos:start="165:51" pos:end="165:52">==</operator></expr></argument>, <argument pos:start="165:55" pos:end="165:58"><expr pos:start="165:55" pos:end="165:58"><literal type="number" pos:start="165:55" pos:end="165:58">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="165:62" pos:end="165:70">/* CLT */</comment>

<cpp:endif pos:start="167:1" pos:end="167:6">#<cpp:directive pos:start="167:2" pos:end="167:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="169:5" pos:end="169:16">/* 3.2.23 */</comment>

    <expr_stmt pos:start="171:5" pos:end="171:60"><expr pos:start="171:5" pos:end="171:59"><call pos:start="171:5" pos:end="171:59"><name pos:start="171:5" pos:end="171:19">g_assert_cmpint</name><argument_list pos:start="171:20" pos:end="171:59">(<argument pos:start="171:21" pos:end="171:48"><expr pos:start="171:21" pos:end="171:48"><call pos:start="171:21" pos:end="171:48"><name pos:start="171:21" pos:end="171:37">qpci_config_readb</name><argument_list pos:start="171:38" pos:end="171:48">(<argument pos:start="171:39" pos:end="171:41"><expr pos:start="171:39" pos:end="171:41"><name pos:start="171:39" pos:end="171:41">dev</name></expr></argument>, <argument pos:start="171:44" pos:end="171:47"><expr pos:start="171:44" pos:end="171:47"><literal type="number" pos:start="171:44" pos:end="171:47">0x72</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="171:51" pos:end="171:52"><expr pos:start="171:51" pos:end="171:52"><operator pos:start="171:51" pos:end="171:52">==</operator></expr></argument>, <argument pos:start="171:55" pos:end="171:58"><expr pos:start="171:55" pos:end="171:58"><literal type="number" pos:start="171:55" pos:end="171:58">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="171:62" pos:end="171:72">/* SMRAM */</comment>

    <comment type="block" pos:start="173:5" pos:end="173:16">/* 3.2.24 */</comment>

    <expr_stmt pos:start="175:5" pos:end="175:60"><expr pos:start="175:5" pos:end="175:59"><call pos:start="175:5" pos:end="175:59"><name pos:start="175:5" pos:end="175:19">g_assert_cmpint</name><argument_list pos:start="175:20" pos:end="175:59">(<argument pos:start="175:21" pos:end="175:48"><expr pos:start="175:21" pos:end="175:48"><call pos:start="175:21" pos:end="175:48"><name pos:start="175:21" pos:end="175:37">qpci_config_readb</name><argument_list pos:start="175:38" pos:end="175:48">(<argument pos:start="175:39" pos:end="175:41"><expr pos:start="175:39" pos:end="175:41"><name pos:start="175:39" pos:end="175:41">dev</name></expr></argument>, <argument pos:start="175:44" pos:end="175:47"><expr pos:start="175:44" pos:end="175:47"><literal type="number" pos:start="175:44" pos:end="175:47">0x90</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="175:51" pos:end="175:52"><expr pos:start="175:51" pos:end="175:52"><operator pos:start="175:51" pos:end="175:52">==</operator></expr></argument>, <argument pos:start="175:55" pos:end="175:58"><expr pos:start="175:55" pos:end="175:58"><literal type="number" pos:start="175:55" pos:end="175:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="175:62" pos:end="175:73">/* ERRCMD */</comment>

    <comment type="block" pos:start="177:5" pos:end="177:16">/* 3.2.25 */</comment>

    <expr_stmt pos:start="179:5" pos:end="179:60"><expr pos:start="179:5" pos:end="179:59"><call pos:start="179:5" pos:end="179:59"><name pos:start="179:5" pos:end="179:19">g_assert_cmpint</name><argument_list pos:start="179:20" pos:end="179:59">(<argument pos:start="179:21" pos:end="179:48"><expr pos:start="179:21" pos:end="179:48"><call pos:start="179:21" pos:end="179:48"><name pos:start="179:21" pos:end="179:37">qpci_config_readb</name><argument_list pos:start="179:38" pos:end="179:48">(<argument pos:start="179:39" pos:end="179:41"><expr pos:start="179:39" pos:end="179:41"><name pos:start="179:39" pos:end="179:41">dev</name></expr></argument>, <argument pos:start="179:44" pos:end="179:47"><expr pos:start="179:44" pos:end="179:47"><literal type="number" pos:start="179:44" pos:end="179:47">0x91</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:51" pos:end="179:52"><expr pos:start="179:51" pos:end="179:52"><operator pos:start="179:51" pos:end="179:52">==</operator></expr></argument>, <argument pos:start="179:55" pos:end="179:58"><expr pos:start="179:55" pos:end="179:58"><literal type="number" pos:start="179:55" pos:end="179:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="179:62" pos:end="179:73">/* ERRSTS */</comment>

    <comment type="block" pos:start="181:5" pos:end="181:16">/* 3.2.26 */</comment>

    <expr_stmt pos:start="183:5" pos:end="183:60"><expr pos:start="183:5" pos:end="183:59"><call pos:start="183:5" pos:end="183:59"><name pos:start="183:5" pos:end="183:19">g_assert_cmpint</name><argument_list pos:start="183:20" pos:end="183:59">(<argument pos:start="183:21" pos:end="183:48"><expr pos:start="183:21" pos:end="183:48"><call pos:start="183:21" pos:end="183:48"><name pos:start="183:21" pos:end="183:37">qpci_config_readb</name><argument_list pos:start="183:38" pos:end="183:48">(<argument pos:start="183:39" pos:end="183:41"><expr pos:start="183:39" pos:end="183:41"><name pos:start="183:39" pos:end="183:41">dev</name></expr></argument>, <argument pos:start="183:44" pos:end="183:47"><expr pos:start="183:44" pos:end="183:47"><literal type="number" pos:start="183:44" pos:end="183:47">0x93</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:51" pos:end="183:52"><expr pos:start="183:51" pos:end="183:52"><operator pos:start="183:51" pos:end="183:52">==</operator></expr></argument>, <argument pos:start="183:55" pos:end="183:58"><expr pos:start="183:55" pos:end="183:58"><literal type="number" pos:start="183:55" pos:end="183:58">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="183:62" pos:end="183:70">/* TRC */</comment>





    <expr_stmt pos:start="189:5" pos:end="189:16"><expr pos:start="189:5" pos:end="189:15"><call pos:start="189:5" pos:end="189:15"><name pos:start="189:5" pos:end="189:13">qtest_end</name><argument_list pos:start="189:14" pos:end="189:15">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
