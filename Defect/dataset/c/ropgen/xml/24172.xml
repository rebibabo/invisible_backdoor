<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24172.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_stswi</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:26">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:11">t0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i32</name></type> <name pos:start="7:14" pos:end="7:15">t1</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:19">t2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">nb</name> <init pos:start="9:12" pos:end="9:28">= <expr pos:start="9:14" pos:end="9:28"><call pos:start="9:14" pos:end="9:28"><name pos:start="9:14" pos:end="9:15">NB</name><argument_list pos:start="9:16" pos:end="9:28">(<argument pos:start="9:17" pos:end="9:27"><expr pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:19">ctx</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:27">opcode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><call pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:23">gen_set_access_type</name><argument_list pos:start="11:24" pos:end="11:40">(<argument pos:start="11:25" pos:end="11:27"><expr pos:start="11:25" pos:end="11:27"><name pos:start="11:25" pos:end="11:27">ctx</name></expr></argument>, <argument pos:start="11:30" pos:end="11:39"><expr pos:start="11:30" pos:end="11:39"><name pos:start="11:30" pos:end="11:39">ACCESS_INT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:77">/* NIP cannot be restored if the memory exception comes from an helper */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><call pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:18">gen_update_nip</name><argument_list pos:start="15:19" pos:end="15:37">(<argument pos:start="15:20" pos:end="15:22"><expr pos:start="15:20" pos:end="15:22"><name pos:start="15:20" pos:end="15:22">ctx</name></expr></argument>, <argument pos:start="15:25" pos:end="15:36"><expr pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:27">ctx</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:32">nip</name></name> <operator pos:start="15:34" pos:end="15:34">-</operator> <literal type="number" pos:start="15:36" pos:end="15:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:6">t0</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:21">tcg_temp_new</name><argument_list pos:start="17:22" pos:end="17:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><call pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:21">gen_addr_register</name><argument_list pos:start="19:22" pos:end="19:30">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">ctx</name></expr></argument>, <argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:16"><if pos:start="21:5" pos:end="23:16">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:10">nb</name> <operator pos:start="21:12" pos:end="21:13">==</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:16"><block_content pos:start="23:9" pos:end="23:16">

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:10">nb</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:15">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:6">t1</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:26"><name pos:start="25:10" pos:end="25:22">tcg_const_i32</name><argument_list pos:start="25:23" pos:end="25:26">(<argument pos:start="25:24" pos:end="25:25"><expr pos:start="25:24" pos:end="25:25"><name pos:start="25:24" pos:end="25:25">nb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:6">t2</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:39"><name pos:start="27:10" pos:end="27:22">tcg_const_i32</name><argument_list pos:start="27:23" pos:end="27:39">(<argument pos:start="27:24" pos:end="27:38"><expr pos:start="27:24" pos:end="27:38"><call pos:start="27:24" pos:end="27:38"><name pos:start="27:24" pos:end="27:25">rS</name><argument_list pos:start="27:26" pos:end="27:38">(<argument pos:start="27:27" pos:end="27:37"><expr pos:start="27:27" pos:end="27:37"><name pos:start="27:27" pos:end="27:37"><name pos:start="27:27" pos:end="27:29">ctx</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:37">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><call pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:19">gen_helper_stsw</name><argument_list pos:start="29:20" pos:end="29:40">(<argument pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:27">cpu_env</name></expr></argument>, <argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><name pos:start="29:30" pos:end="29:31">t0</name></expr></argument>, <argument pos:start="29:34" pos:end="29:35"><expr pos:start="29:34" pos:end="29:35"><name pos:start="29:34" pos:end="29:35">t1</name></expr></argument>, <argument pos:start="29:38" pos:end="29:39"><expr pos:start="29:38" pos:end="29:39"><name pos:start="29:38" pos:end="29:39">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><call pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:17">tcg_temp_free</name><argument_list pos:start="31:18" pos:end="31:21">(<argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><name pos:start="31:19" pos:end="31:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><call pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:21">tcg_temp_free_i32</name><argument_list pos:start="33:22" pos:end="33:25">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><call pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:21">tcg_temp_free_i32</name><argument_list pos:start="35:22" pos:end="35:25">(<argument pos:start="35:23" pos:end="35:24"><expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
