<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19879.c" pos:tabs="8"><function pos:start="1:1" pos:end="311:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">find_slice_quant</name><parameter_list pos:start="1:28" pos:end="5:49">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:64">AVFrame</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">pic</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:44"><decl pos:start="3:29" pos:end="3:44"><type pos:start="3:29" pos:end="3:44"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:44">trellis_node</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:51"><decl pos:start="3:47" pos:end="3:51"><type pos:start="3:47" pos:end="3:51"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:51">x</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:58"><decl pos:start="3:54" pos:end="3:58"><type pos:start="3:54" pos:end="3:58"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:58">y</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:77"><decl pos:start="3:61" pos:end="3:77"><type pos:start="3:61" pos:end="3:77"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:77">mbs_per_slice</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:48"><decl pos:start="5:29" pos:end="5:48"><type pos:start="5:29" pos:end="5:48"><name pos:start="5:29" pos:end="5:44">ProresThreadData</name> <modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:48">td</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="311:1">{<block_content pos:start="9:5" pos:end="309:14">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ProresContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">ctx</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:30">avctx</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">q</name></decl>, <decl pos:start="11:15" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:16">pq</name></decl>, <decl pos:start="11:19" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:20">xp</name></decl>, <decl pos:start="11:23" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:24">yp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:18">uint16_t</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:26">slice_width_factor</name> <init pos:start="15:28" pos:end="15:51">= <expr pos:start="15:30" pos:end="15:51"><call pos:start="15:30" pos:end="15:51"><name pos:start="15:30" pos:end="15:36">av_log2</name><argument_list pos:start="15:37" pos:end="15:51">(<argument pos:start="15:38" pos:end="15:50"><expr pos:start="15:38" pos:end="15:50"><name pos:start="15:38" pos:end="15:50">mbs_per_slice</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:19">num_cblocks</name><index pos:start="17:20" pos:end="17:31">[<expr pos:start="17:21" pos:end="17:30"><name pos:start="17:21" pos:end="17:30">MAX_PLANES</name></expr>]</index></name></decl>, <decl pos:start="17:34" pos:end="17:39"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:34" pos:end="17:39">pwidth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:56"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:20">plane_factor</name><index pos:start="19:21" pos:end="19:32">[<expr pos:start="19:22" pos:end="19:31"><name pos:start="19:22" pos:end="19:31">MAX_PLANES</name></expr>]</index></name></decl>, <decl pos:start="19:35" pos:end="19:55"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:35" pos:end="19:55"><name pos:start="19:35" pos:end="19:43">is_chroma</name><index pos:start="19:44" pos:end="19:55">[<expr pos:start="19:45" pos:end="19:54"><name pos:start="19:45" pos:end="19:54">MAX_PLANES</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:55"><decl pos:start="21:5" pos:end="21:54"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:23">min_quant</name> <init pos:start="21:25" pos:end="21:54">= <expr pos:start="21:27" pos:end="21:54"><name pos:start="21:27" pos:end="21:54"><name pos:start="21:27" pos:end="21:29">ctx</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:43">profile_info</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:54">min_quant</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:55"><decl pos:start="23:5" pos:end="23:54"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:23">max_quant</name> <init pos:start="23:25" pos:end="23:54">= <expr pos:start="23:27" pos:end="23:54"><name pos:start="23:27" pos:end="23:54"><name pos:start="23:27" pos:end="23:29">ctx</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:43">profile_info</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:54">max_quant</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:13"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:13">error</name></decl>, <decl pos:start="25:16" pos:end="25:19"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:16" pos:end="25:19">bits</name></decl>, <decl pos:start="25:22" pos:end="25:31"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:22" pos:end="25:31">bits_limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:34"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">mbs</name></decl>, <decl pos:start="27:14" pos:end="27:17"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:14" pos:end="27:17">prev</name></decl>, <decl pos:start="27:20" pos:end="27:22"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:20" pos:end="27:22">cur</name></decl>, <decl pos:start="27:25" pos:end="27:33"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:25" pos:end="27:33">new_score</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:62"><decl pos:start="29:5" pos:end="29:33"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:18">slice_bits</name><index pos:start="29:19" pos:end="29:33">[<expr pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:32">TRELLIS_WIDTH</name></expr>]</index></name></decl>, <decl pos:start="29:36" pos:end="29:61"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:36" pos:end="29:61"><name pos:start="29:36" pos:end="29:46">slice_score</name><index pos:start="29:47" pos:end="29:61">[<expr pos:start="29:48" pos:end="29:60"><name pos:start="29:48" pos:end="29:60">TRELLIS_WIDTH</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:18"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:17">overquant</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:19"><decl pos:start="33:5" pos:end="33:18"><type pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:12">uint16_t</name> <modifier pos:start="33:14" pos:end="33:14">*</modifier></type><name pos:start="33:15" pos:end="33:18">qmat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:30"><decl pos:start="35:5" pos:end="35:19"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:16">linesize</name><index pos:start="35:17" pos:end="35:19">[<expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">4</literal></expr>]</index></name></decl>, <decl pos:start="35:22" pos:end="35:29"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:22" pos:end="35:29">line_add</name></decl>;</decl_stmt>



    <if_stmt pos:start="39:5" pos:end="45:64"><if pos:start="39:5" pos:end="41:21">if <condition pos:start="39:8" pos:end="39:37">(<expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:11">ctx</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:31">pictures_per_frame</name></name> <operator pos:start="39:33" pos:end="39:34">==</operator> <literal type="number" pos:start="39:36" pos:end="39:36">1</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:21"><block_content pos:start="41:9" pos:end="41:21">

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:16">line_add</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="43:5" pos:end="45:64">else<block type="pseudo" pos:start="45:9" pos:end="45:64"><block_content pos:start="45:9" pos:end="45:64">

        <expr_stmt pos:start="45:9" pos:end="45:64"><expr pos:start="45:9" pos:end="45:63"><name pos:start="45:9" pos:end="45:16">line_add</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:39"><name pos:start="45:20" pos:end="45:22">ctx</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:39">cur_picture_idx</name></name> <operator pos:start="45:41" pos:end="45:41">^</operator> <operator pos:start="45:43" pos:end="45:43">!</operator><name pos:start="45:44" pos:end="45:63"><name pos:start="45:44" pos:end="45:46">pic</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:63">top_field_first</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:7">mbs</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <name pos:start="47:11" pos:end="47:11">x</name> <operator pos:start="47:13" pos:end="47:13">+</operator> <name pos:start="47:15" pos:end="47:27">mbs_per_slice</name></expr>;</expr_stmt>



    <for pos:start="51:5" pos:end="113:5">for <control pos:start="51:9" pos:end="51:41">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:36"><expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:23">ctx</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:35">num_planes</name></name></expr>;</condition> <incr pos:start="51:38" pos:end="51:40"><expr pos:start="51:38" pos:end="51:40"><name pos:start="51:38" pos:end="51:38">i</name><operator pos:start="51:39" pos:end="51:40">++</operator></expr></incr>)</control> <block pos:start="51:43" pos:end="113:5">{<block_content pos:start="53:9" pos:end="111:9">

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:17">is_chroma</name><index pos:start="53:18" pos:end="53:20">[<expr pos:start="53:19" pos:end="53:19"><name pos:start="53:19" pos:end="53:19">i</name></expr>]</index></name>    <operator pos:start="53:25" pos:end="53:25">=</operator> <operator pos:start="53:27" pos:end="53:27">(</operator><name pos:start="53:28" pos:end="53:28">i</name> <operator pos:start="53:30" pos:end="53:31">==</operator> <literal type="number" pos:start="53:33" pos:end="53:33">1</literal> <operator pos:start="53:35" pos:end="53:36">||</operator> <name pos:start="53:38" pos:end="53:38">i</name> <operator pos:start="53:40" pos:end="53:41">==</operator> <literal type="number" pos:start="53:43" pos:end="53:43">2</literal><operator pos:start="53:44" pos:end="53:44">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:20">plane_factor</name><index pos:start="55:21" pos:end="55:23">[<expr pos:start="55:22" pos:end="55:22"><name pos:start="55:22" pos:end="55:22">i</name></expr>]</index></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:44">slice_width_factor</name> <operator pos:start="55:46" pos:end="55:46">+</operator> <literal type="number" pos:start="55:48" pos:end="55:48">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:54"><if pos:start="57:9" pos:end="59:54">if <condition pos:start="57:12" pos:end="57:25">(<expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:21">is_chroma</name><index pos:start="57:22" pos:end="57:24">[<expr pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:54"><block_content pos:start="59:13" pos:end="59:54">

            <expr_stmt pos:start="59:13" pos:end="59:54"><expr pos:start="59:13" pos:end="59:53"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:24">plane_factor</name><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">i</name></expr>]</index></name> <operator pos:start="59:29" pos:end="59:30">+=</operator> <name pos:start="59:32" pos:end="59:49"><name pos:start="59:32" pos:end="59:34">ctx</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:49">chroma_factor</name></name> <operator pos:start="59:51" pos:end="59:51">-</operator> <literal type="number" pos:start="59:53" pos:end="59:53">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="81:9"><if pos:start="61:9" pos:end="71:9">if <condition pos:start="61:12" pos:end="61:64">(<expr pos:start="61:13" pos:end="61:63"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:25"><name pos:start="61:14" pos:end="61:22">is_chroma</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">i</name></expr>]</index></name> <operator pos:start="61:27" pos:end="61:28">||</operator> <name pos:start="61:30" pos:end="61:47"><name pos:start="61:30" pos:end="61:32">ctx</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:47">chroma_factor</name></name> <operator pos:start="61:49" pos:end="61:50">==</operator> <name pos:start="61:52" pos:end="61:63">CFACTOR_Y444</name></expr>)</condition> <block pos:start="61:66" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:42">

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:14">xp</name>             <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:30">x</name> <operator pos:start="63:32" pos:end="63:33">&lt;&lt;</operator> <literal type="number" pos:start="63:35" pos:end="63:35">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:36"><expr pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:14">yp</name>             <operator pos:start="65:28" pos:end="65:28">=</operator> <name pos:start="65:30" pos:end="65:30">y</name> <operator pos:start="65:32" pos:end="65:33">&lt;&lt;</operator> <literal type="number" pos:start="65:35" pos:end="65:35">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:31"><expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:23">num_cblocks</name><index pos:start="67:24" pos:end="67:26">[<expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">i</name></expr>]</index></name> <operator pos:start="67:28" pos:end="67:28">=</operator> <literal type="number" pos:start="67:30" pos:end="67:30">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:42"><expr pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:18">pwidth</name>         <operator pos:start="69:28" pos:end="69:28">=</operator> <name pos:start="69:30" pos:end="69:41"><name pos:start="69:30" pos:end="69:34">avctx</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:41">width</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="81:9">else <block pos:start="71:16" pos:end="81:9">{<block_content pos:start="73:13" pos:end="79:47">

            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:14">xp</name>             <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:30">x</name> <operator pos:start="73:32" pos:end="73:33">&lt;&lt;</operator> <literal type="number" pos:start="73:35" pos:end="73:35">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:36"><expr pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:14">yp</name>             <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:30">y</name> <operator pos:start="75:32" pos:end="75:33">&lt;&lt;</operator> <literal type="number" pos:start="75:35" pos:end="75:35">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:31"><expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:23">num_cblocks</name><index pos:start="77:24" pos:end="77:26">[<expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">i</name></expr>]</index></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <literal type="number" pos:start="77:30" pos:end="77:30">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:47"><expr pos:start="79:13" pos:end="79:46"><name pos:start="79:13" pos:end="79:18">pwidth</name>         <operator pos:start="79:28" pos:end="79:28">=</operator> <name pos:start="79:30" pos:end="79:41"><name pos:start="79:30" pos:end="79:34">avctx</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:41">width</name></name> <operator pos:start="79:43" pos:end="79:44">&gt;&gt;</operator> <literal type="number" pos:start="79:46" pos:end="79:46">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:65"><expr pos:start="85:9" pos:end="85:64"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:16">linesize</name><index pos:start="85:17" pos:end="85:19">[<expr pos:start="85:18" pos:end="85:18"><name pos:start="85:18" pos:end="85:18">i</name></expr>]</index></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:38"><name pos:start="85:23" pos:end="85:25">pic</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:35">linesize</name><index pos:start="85:36" pos:end="85:38">[<expr pos:start="85:37" pos:end="85:37"><name pos:start="85:37" pos:end="85:37">i</name></expr>]</index></name> <operator pos:start="85:40" pos:end="85:40">*</operator> <name pos:start="85:42" pos:end="85:64"><name pos:start="85:42" pos:end="85:44">ctx</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:64">pictures_per_frame</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="89:66"><expr pos:start="87:9" pos:end="89:65"><name pos:start="87:9" pos:end="87:11">src</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <operator pos:start="87:15" pos:end="87:15">(</operator><specifier pos:start="87:16" pos:end="87:20">const</specifier> <name pos:start="87:22" pos:end="87:29">uint16_t</name><operator pos:start="87:30" pos:end="87:30">*</operator><operator pos:start="87:31" pos:end="87:31">)</operator><operator pos:start="87:32" pos:end="87:32">(</operator><name pos:start="87:33" pos:end="87:44"><name pos:start="87:33" pos:end="87:35">pic</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:41">data</name><index pos:start="87:42" pos:end="87:44">[<expr pos:start="87:43" pos:end="87:43"><name pos:start="87:43" pos:end="87:43">i</name></expr>]</index></name> <operator pos:start="87:46" pos:end="87:46">+</operator> <name pos:start="87:48" pos:end="87:49">yp</name> <operator pos:start="87:51" pos:end="87:51">*</operator> <name pos:start="87:53" pos:end="87:63"><name pos:start="87:53" pos:end="87:60">linesize</name><index pos:start="87:61" pos:end="87:63">[<expr pos:start="87:62" pos:end="87:62"><name pos:start="87:62" pos:end="87:62">i</name></expr>]</index></name> <operator pos:start="87:65" pos:end="87:65">+</operator>

                                <name pos:start="89:33" pos:end="89:40">line_add</name> <operator pos:start="89:42" pos:end="89:42">*</operator> <name pos:start="89:44" pos:end="89:59"><name pos:start="89:44" pos:end="89:46">pic</name><operator pos:start="89:47" pos:end="89:48">-&gt;</operator><name pos:start="89:49" pos:end="89:56">linesize</name><index pos:start="89:57" pos:end="89:59">[<expr pos:start="89:58" pos:end="89:58"><name pos:start="89:58" pos:end="89:58">i</name></expr>]</index></name><operator pos:start="89:60" pos:end="89:60">)</operator> <operator pos:start="89:62" pos:end="89:62">+</operator> <name pos:start="89:64" pos:end="89:65">xp</name></expr>;</expr_stmt>



        <if_stmt pos:start="93:9" pos:end="111:9"><if pos:start="93:9" pos:end="103:9">if <condition pos:start="93:12" pos:end="93:18">(<expr pos:start="93:13" pos:end="93:17"><name pos:start="93:13" pos:end="93:13">i</name> <operator pos:start="93:15" pos:end="93:15">&lt;</operator> <literal type="number" pos:start="93:17" pos:end="93:17">3</literal></expr>)</condition> <block pos:start="93:20" pos:end="103:9">{<block_content pos:start="95:13" pos:end="101:72">

            <expr_stmt pos:start="95:13" pos:end="101:72"><expr pos:start="95:13" pos:end="101:71"><call pos:start="95:13" pos:end="101:71"><name pos:start="95:13" pos:end="95:26">get_slice_data</name><argument_list pos:start="95:27" pos:end="101:71">(<argument pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><name pos:start="95:28" pos:end="95:30">ctx</name></expr></argument>, <argument pos:start="95:33" pos:end="95:35"><expr pos:start="95:33" pos:end="95:35"><name pos:start="95:33" pos:end="95:35">src</name></expr></argument>, <argument pos:start="95:38" pos:end="95:48"><expr pos:start="95:38" pos:end="95:48"><name pos:start="95:38" pos:end="95:48"><name pos:start="95:38" pos:end="95:45">linesize</name><index pos:start="95:46" pos:end="95:48">[<expr pos:start="95:47" pos:end="95:47"><name pos:start="95:47" pos:end="95:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="95:51" pos:end="95:52"><expr pos:start="95:51" pos:end="95:52"><name pos:start="95:51" pos:end="95:52">xp</name></expr></argument>, <argument pos:start="95:55" pos:end="95:56"><expr pos:start="95:55" pos:end="95:56"><name pos:start="95:55" pos:end="95:56">yp</name></expr></argument>,

                           <argument pos:start="97:28" pos:end="97:33"><expr pos:start="97:28" pos:end="97:33"><name pos:start="97:28" pos:end="97:33">pwidth</name></expr></argument>, <argument pos:start="97:36" pos:end="97:74"><expr pos:start="97:36" pos:end="97:74"><name pos:start="97:36" pos:end="97:48"><name pos:start="97:36" pos:end="97:40">avctx</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:48">height</name></name> <operator pos:start="97:50" pos:end="97:50">/</operator> <name pos:start="97:52" pos:end="97:74"><name pos:start="97:52" pos:end="97:54">ctx</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:74">pictures_per_frame</name></name></expr></argument>,

                           <argument pos:start="99:28" pos:end="99:40"><expr pos:start="99:28" pos:end="99:40"><name pos:start="99:28" pos:end="99:40"><name pos:start="99:28" pos:end="99:29">td</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:37">blocks</name><index pos:start="99:38" pos:end="99:40">[<expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="99:43" pos:end="99:53"><expr pos:start="99:43" pos:end="99:53"><name pos:start="99:43" pos:end="99:53"><name pos:start="99:43" pos:end="99:44">td</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:53">emu_buf</name></name></expr></argument>,

                           <argument pos:start="101:28" pos:end="101:40"><expr pos:start="101:28" pos:end="101:40"><name pos:start="101:28" pos:end="101:40">mbs_per_slice</name></expr></argument>, <argument pos:start="101:43" pos:end="101:56"><expr pos:start="101:43" pos:end="101:56"><name pos:start="101:43" pos:end="101:56"><name pos:start="101:43" pos:end="101:53">num_cblocks</name><index pos:start="101:54" pos:end="101:56">[<expr pos:start="101:55" pos:end="101:55"><name pos:start="101:55" pos:end="101:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="101:59" pos:end="101:70"><expr pos:start="101:59" pos:end="101:70"><name pos:start="101:59" pos:end="101:70"><name pos:start="101:59" pos:end="101:67">is_chroma</name><index pos:start="101:68" pos:end="101:70">[<expr pos:start="101:69" pos:end="101:69"><name pos:start="101:69" pos:end="101:69">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="103:11" pos:end="111:9">else <block pos:start="103:16" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:74">

            <expr_stmt pos:start="105:13" pos:end="109:74"><expr pos:start="105:13" pos:end="109:73"><call pos:start="105:13" pos:end="109:73"><name pos:start="105:13" pos:end="105:26">get_alpha_data</name><argument_list pos:start="105:27" pos:end="109:73">(<argument pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">ctx</name></expr></argument>, <argument pos:start="105:33" pos:end="105:35"><expr pos:start="105:33" pos:end="105:35"><name pos:start="105:33" pos:end="105:35">src</name></expr></argument>, <argument pos:start="105:38" pos:end="105:48"><expr pos:start="105:38" pos:end="105:48"><name pos:start="105:38" pos:end="105:48"><name pos:start="105:38" pos:end="105:45">linesize</name><index pos:start="105:46" pos:end="105:48">[<expr pos:start="105:47" pos:end="105:47"><name pos:start="105:47" pos:end="105:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="105:51" pos:end="105:52"><expr pos:start="105:51" pos:end="105:52"><name pos:start="105:51" pos:end="105:52">xp</name></expr></argument>, <argument pos:start="105:55" pos:end="105:56"><expr pos:start="105:55" pos:end="105:56"><name pos:start="105:55" pos:end="105:56">yp</name></expr></argument>,

                           <argument pos:start="107:28" pos:end="107:33"><expr pos:start="107:28" pos:end="107:33"><name pos:start="107:28" pos:end="107:33">pwidth</name></expr></argument>, <argument pos:start="107:36" pos:end="107:74"><expr pos:start="107:36" pos:end="107:74"><name pos:start="107:36" pos:end="107:48"><name pos:start="107:36" pos:end="107:40">avctx</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:48">height</name></name> <operator pos:start="107:50" pos:end="107:50">/</operator> <name pos:start="107:52" pos:end="107:74"><name pos:start="107:52" pos:end="107:54">ctx</name><operator pos:start="107:55" pos:end="107:56">-&gt;</operator><name pos:start="107:57" pos:end="107:74">pictures_per_frame</name></name></expr></argument>,

                           <argument pos:start="109:28" pos:end="109:40"><expr pos:start="109:28" pos:end="109:40"><name pos:start="109:28" pos:end="109:40"><name pos:start="109:28" pos:end="109:29">td</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:37">blocks</name><index pos:start="109:38" pos:end="109:40">[<expr pos:start="109:39" pos:end="109:39"><name pos:start="109:39" pos:end="109:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="109:43" pos:end="109:55"><expr pos:start="109:43" pos:end="109:55"><name pos:start="109:43" pos:end="109:55">mbs_per_slice</name></expr></argument>, <argument pos:start="109:58" pos:end="109:72"><expr pos:start="109:58" pos:end="109:72"><name pos:start="109:58" pos:end="109:72"><name pos:start="109:58" pos:end="109:60">ctx</name><operator pos:start="109:61" pos:end="109:62">-&gt;</operator><name pos:start="109:63" pos:end="109:72">alpha_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <for pos:start="117:5" pos:end="123:5">for <control pos:start="117:9" pos:end="117:47">(<init pos:start="117:10" pos:end="117:23"><expr pos:start="117:10" pos:end="117:22"><name pos:start="117:10" pos:end="117:10">q</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <name pos:start="117:14" pos:end="117:22">min_quant</name></expr>;</init> <condition pos:start="117:25" pos:end="117:42"><expr pos:start="117:25" pos:end="117:41"><name pos:start="117:25" pos:end="117:25">q</name> <operator pos:start="117:27" pos:end="117:27">&lt;</operator> <name pos:start="117:29" pos:end="117:37">max_quant</name> <operator pos:start="117:39" pos:end="117:39">+</operator> <literal type="number" pos:start="117:41" pos:end="117:41">2</literal></expr>;</condition> <incr pos:start="117:44" pos:end="117:46"><expr pos:start="117:44" pos:end="117:46"><name pos:start="117:44" pos:end="117:44">q</name><operator pos:start="117:45" pos:end="117:46">++</operator></expr></incr>)</control> <block pos:start="117:49" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:50">

        <expr_stmt pos:start="119:9" pos:end="119:51"><expr pos:start="119:9" pos:end="119:50"><name pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:10">td</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:17">nodes</name><index pos:start="119:18" pos:end="119:35">[<expr pos:start="119:19" pos:end="119:34"><name pos:start="119:19" pos:end="119:30">trellis_node</name> <operator pos:start="119:32" pos:end="119:32">+</operator> <name pos:start="119:34" pos:end="119:34">q</name></expr>]</index></name><operator pos:start="119:36" pos:end="119:36">.</operator><name pos:start="119:37" pos:end="119:45">prev_node</name> <operator pos:start="119:47" pos:end="119:47">=</operator> <operator pos:start="119:49" pos:end="119:49">-</operator><literal type="number" pos:start="119:50" pos:end="119:50">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:50"><expr pos:start="121:9" pos:end="121:49"><name pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:10">td</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:17">nodes</name><index pos:start="121:18" pos:end="121:35">[<expr pos:start="121:19" pos:end="121:34"><name pos:start="121:19" pos:end="121:30">trellis_node</name> <operator pos:start="121:32" pos:end="121:32">+</operator> <name pos:start="121:34" pos:end="121:34">q</name></expr>]</index></name><operator pos:start="121:36" pos:end="121:36">.</operator><name pos:start="121:37" pos:end="121:41">quant</name>     <operator pos:start="121:47" pos:end="121:47">=</operator> <name pos:start="121:49" pos:end="121:49">q</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="127:5" pos:end="127:80">// todo: maybe perform coarser quantising to fit into frame size when needed</comment>

    <for pos:start="129:5" pos:end="167:5">for <control pos:start="129:9" pos:end="129:44">(<init pos:start="129:10" pos:end="129:23"><expr pos:start="129:10" pos:end="129:22"><name pos:start="129:10" pos:end="129:10">q</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <name pos:start="129:14" pos:end="129:22">min_quant</name></expr>;</init> <condition pos:start="129:25" pos:end="129:39"><expr pos:start="129:25" pos:end="129:38"><name pos:start="129:25" pos:end="129:25">q</name> <operator pos:start="129:27" pos:end="129:28">&lt;=</operator> <name pos:start="129:30" pos:end="129:38">max_quant</name></expr>;</condition> <incr pos:start="129:41" pos:end="129:43"><expr pos:start="129:41" pos:end="129:43"><name pos:start="129:41" pos:end="129:41">q</name><operator pos:start="129:42" pos:end="129:43">++</operator></expr></incr>)</control> <block pos:start="129:46" pos:end="167:5">{<block_content pos:start="131:9" pos:end="165:31">

        <expr_stmt pos:start="131:9" pos:end="131:18"><expr pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:12">bits</name>  <operator pos:start="131:15" pos:end="131:15">=</operator> <literal type="number" pos:start="131:17" pos:end="131:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:18"><expr pos:start="133:9" pos:end="133:17"><name pos:start="133:9" pos:end="133:13">error</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <literal type="number" pos:start="133:17" pos:end="133:17">0</literal></expr>;</expr_stmt>

        <for pos:start="135:9" pos:end="147:9">for <control pos:start="135:13" pos:end="135:65">(<init pos:start="135:14" pos:end="135:19"><expr pos:start="135:14" pos:end="135:18"><name pos:start="135:14" pos:end="135:14">i</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>;</init> <condition pos:start="135:21" pos:end="135:60"><expr pos:start="135:21" pos:end="135:59"><name pos:start="135:21" pos:end="135:21">i</name> <operator pos:start="135:23" pos:end="135:23">&lt;</operator> <name pos:start="135:25" pos:end="135:39"><name pos:start="135:25" pos:end="135:27">ctx</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:39">num_planes</name></name> <operator pos:start="135:41" pos:end="135:41">-</operator> <operator pos:start="135:43" pos:end="135:43">!</operator><operator pos:start="135:44" pos:end="135:44">!</operator><name pos:start="135:45" pos:end="135:59"><name pos:start="135:45" pos:end="135:47">ctx</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:59">alpha_bits</name></name></expr>;</condition> <incr pos:start="135:62" pos:end="135:64"><expr pos:start="135:62" pos:end="135:64"><name pos:start="135:62" pos:end="135:62">i</name><operator pos:start="135:63" pos:end="135:64">++</operator></expr></incr>)</control> <block pos:start="135:67" pos:end="147:9">{<block_content pos:start="137:13" pos:end="145:61">

            <expr_stmt pos:start="137:13" pos:end="145:61"><expr pos:start="137:13" pos:end="145:60"><name pos:start="137:13" pos:end="137:16">bits</name> <operator pos:start="137:18" pos:end="137:19">+=</operator> <call pos:start="137:21" pos:end="145:60"><name pos:start="137:21" pos:end="137:40">estimate_slice_plane</name><argument_list pos:start="137:41" pos:end="145:60">(<argument pos:start="137:42" pos:end="137:44"><expr pos:start="137:42" pos:end="137:44"><name pos:start="137:42" pos:end="137:44">ctx</name></expr></argument>, <argument pos:start="137:47" pos:end="137:52"><expr pos:start="137:47" pos:end="137:52"><operator pos:start="137:47" pos:end="137:47">&amp;</operator><name pos:start="137:48" pos:end="137:52">error</name></expr></argument>, <argument pos:start="137:55" pos:end="137:55"><expr pos:start="137:55" pos:end="137:55"><name pos:start="137:55" pos:end="137:55">i</name></expr></argument>,

                                         <argument pos:start="139:42" pos:end="139:44"><expr pos:start="139:42" pos:end="139:44"><name pos:start="139:42" pos:end="139:44">src</name></expr></argument>, <argument pos:start="139:47" pos:end="139:57"><expr pos:start="139:47" pos:end="139:57"><name pos:start="139:47" pos:end="139:57"><name pos:start="139:47" pos:end="139:54">linesize</name><index pos:start="139:55" pos:end="139:57">[<expr pos:start="139:56" pos:end="139:56"><name pos:start="139:56" pos:end="139:56">i</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="141:42" pos:end="141:54"><expr pos:start="141:42" pos:end="141:54"><name pos:start="141:42" pos:end="141:54">mbs_per_slice</name></expr></argument>,

                                         <argument pos:start="143:42" pos:end="143:55"><expr pos:start="143:42" pos:end="143:55"><name pos:start="143:42" pos:end="143:55"><name pos:start="143:42" pos:end="143:52">num_cblocks</name><index pos:start="143:53" pos:end="143:55">[<expr pos:start="143:54" pos:end="143:54"><name pos:start="143:54" pos:end="143:54">i</name></expr>]</index></name></expr></argument>, <argument pos:start="143:58" pos:end="143:72"><expr pos:start="143:58" pos:end="143:72"><name pos:start="143:58" pos:end="143:72"><name pos:start="143:58" pos:end="143:69">plane_factor</name><index pos:start="143:70" pos:end="143:72">[<expr pos:start="143:71" pos:end="143:71"><name pos:start="143:71" pos:end="143:71">i</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="145:42" pos:end="145:55"><expr pos:start="145:42" pos:end="145:55"><name pos:start="145:42" pos:end="145:55"><name pos:start="145:42" pos:end="145:44">ctx</name><operator pos:start="145:45" pos:end="145:46">-&gt;</operator><name pos:start="145:47" pos:end="145:52">quants</name><index pos:start="145:53" pos:end="145:55">[<expr pos:start="145:54" pos:end="145:54"><name pos:start="145:54" pos:end="145:54">q</name></expr>]</index></name></expr></argument>, <argument pos:start="145:58" pos:end="145:59"><expr pos:start="145:58" pos:end="145:59"><name pos:start="145:58" pos:end="145:59">td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="149:9" pos:end="153:74"><if pos:start="149:9" pos:end="153:74">if <condition pos:start="149:12" pos:end="149:28">(<expr pos:start="149:13" pos:end="149:27"><name pos:start="149:13" pos:end="149:27"><name pos:start="149:13" pos:end="149:15">ctx</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:27">alpha_bits</name></name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="153:74"><block_content pos:start="151:13" pos:end="153:74">

            <expr_stmt pos:start="151:13" pos:end="153:74"><expr pos:start="151:13" pos:end="153:73"><name pos:start="151:13" pos:end="151:16">bits</name> <operator pos:start="151:18" pos:end="151:19">+=</operator> <call pos:start="151:21" pos:end="153:73"><name pos:start="151:21" pos:end="151:40">estimate_alpha_plane</name><argument_list pos:start="151:41" pos:end="153:73">(<argument pos:start="151:42" pos:end="151:44"><expr pos:start="151:42" pos:end="151:44"><name pos:start="151:42" pos:end="151:44">ctx</name></expr></argument>, <argument pos:start="151:47" pos:end="151:52"><expr pos:start="151:47" pos:end="151:52"><operator pos:start="151:47" pos:end="151:47">&amp;</operator><name pos:start="151:48" pos:end="151:52">error</name></expr></argument>, <argument pos:start="151:55" pos:end="151:57"><expr pos:start="151:55" pos:end="151:57"><name pos:start="151:55" pos:end="151:57">src</name></expr></argument>, <argument pos:start="151:60" pos:end="151:70"><expr pos:start="151:60" pos:end="151:70"><name pos:start="151:60" pos:end="151:70"><name pos:start="151:60" pos:end="151:67">linesize</name><index pos:start="151:68" pos:end="151:70">[<expr pos:start="151:69" pos:end="151:69"><literal type="number" pos:start="151:69" pos:end="151:69">3</literal></expr>]</index></name></expr></argument>,

                                         <argument pos:start="153:42" pos:end="153:54"><expr pos:start="153:42" pos:end="153:54"><name pos:start="153:42" pos:end="153:54">mbs_per_slice</name></expr></argument>, <argument pos:start="153:57" pos:end="153:57"><expr pos:start="153:57" pos:end="153:57"><name pos:start="153:57" pos:end="153:57">q</name></expr></argument>, <argument pos:start="153:60" pos:end="153:72"><expr pos:start="153:60" pos:end="153:72"><name pos:start="153:60" pos:end="153:72"><name pos:start="153:60" pos:end="153:61">td</name><operator pos:start="153:62" pos:end="153:63">-&gt;</operator><name pos:start="153:64" pos:end="153:69">blocks</name><index pos:start="153:70" pos:end="153:72">[<expr pos:start="153:71" pos:end="153:71"><literal type="number" pos:start="153:71" pos:end="153:71">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:29">(<expr pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:16">bits</name> <operator pos:start="155:18" pos:end="155:18">&gt;</operator> <literal type="number" pos:start="155:20" pos:end="155:24">65000</literal> <operator pos:start="155:26" pos:end="155:26">*</operator> <literal type="number" pos:start="155:28" pos:end="155:28">8</literal></expr>)</condition> <block pos:start="155:31" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:18">

            <expr_stmt pos:start="157:13" pos:end="157:32"><expr pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:17">error</name> <operator pos:start="157:19" pos:end="157:19">=</operator> <name pos:start="157:21" pos:end="157:31">SCORE_LIMIT</name></expr>;</expr_stmt>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:30"><expr pos:start="163:9" pos:end="163:29"><name pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:18">slice_bits</name><index pos:start="163:19" pos:end="163:21">[<expr pos:start="163:20" pos:end="163:20"><name pos:start="163:20" pos:end="163:20">q</name></expr>]</index></name>  <operator pos:start="163:24" pos:end="163:24">=</operator> <name pos:start="163:26" pos:end="163:29">bits</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:31"><expr pos:start="165:9" pos:end="165:30"><name pos:start="165:9" pos:end="165:22"><name pos:start="165:9" pos:end="165:19">slice_score</name><index pos:start="165:20" pos:end="165:22">[<expr pos:start="165:21" pos:end="165:21"><name pos:start="165:21" pos:end="165:21">q</name></expr>]</index></name> <operator pos:start="165:24" pos:end="165:24">=</operator> <name pos:start="165:26" pos:end="165:30">error</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="169:5" pos:end="233:5"><if pos:start="169:5" pos:end="177:5">if <condition pos:start="169:8" pos:end="169:66">(<expr pos:start="169:9" pos:end="169:65"><name pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:18">slice_bits</name><index pos:start="169:19" pos:end="169:29">[<expr pos:start="169:20" pos:end="169:28"><name pos:start="169:20" pos:end="169:28">max_quant</name></expr>]</index></name> <operator pos:start="169:31" pos:end="169:32">&lt;=</operator> <name pos:start="169:34" pos:end="169:49"><name pos:start="169:34" pos:end="169:36">ctx</name><operator pos:start="169:37" pos:end="169:38">-&gt;</operator><name pos:start="169:39" pos:end="169:49">bits_per_mb</name></name> <operator pos:start="169:51" pos:end="169:51">*</operator> <name pos:start="169:53" pos:end="169:65">mbs_per_slice</name></expr>)</condition> <block pos:start="169:68" pos:end="177:5">{<block_content pos:start="171:9" pos:end="175:30">

        <expr_stmt pos:start="171:9" pos:end="171:59"><expr pos:start="171:9" pos:end="171:58"><name pos:start="171:9" pos:end="171:33"><name pos:start="171:9" pos:end="171:18">slice_bits</name><index pos:start="171:19" pos:end="171:33">[<expr pos:start="171:20" pos:end="171:32"><name pos:start="171:20" pos:end="171:28">max_quant</name> <operator pos:start="171:30" pos:end="171:30">+</operator> <literal type="number" pos:start="171:32" pos:end="171:32">1</literal></expr>]</index></name>  <operator pos:start="171:36" pos:end="171:36">=</operator> <name pos:start="171:38" pos:end="171:58"><name pos:start="171:38" pos:end="171:47">slice_bits</name><index pos:start="171:48" pos:end="171:58">[<expr pos:start="171:49" pos:end="171:57"><name pos:start="171:49" pos:end="171:57">max_quant</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:64"><expr pos:start="173:9" pos:end="173:63"><name pos:start="173:9" pos:end="173:34"><name pos:start="173:9" pos:end="173:19">slice_score</name><index pos:start="173:20" pos:end="173:34">[<expr pos:start="173:21" pos:end="173:33"><name pos:start="173:21" pos:end="173:29">max_quant</name> <operator pos:start="173:31" pos:end="173:31">+</operator> <literal type="number" pos:start="173:33" pos:end="173:33">1</literal></expr>]</index></name> <operator pos:start="173:36" pos:end="173:36">=</operator> <name pos:start="173:38" pos:end="173:59"><name pos:start="173:38" pos:end="173:48">slice_score</name><index pos:start="173:49" pos:end="173:59">[<expr pos:start="173:50" pos:end="173:58"><name pos:start="173:50" pos:end="173:58">max_quant</name></expr>]</index></name> <operator pos:start="173:61" pos:end="173:61">+</operator> <literal type="number" pos:start="173:63" pos:end="173:63">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:30"><expr pos:start="175:9" pos:end="175:29"><name pos:start="175:9" pos:end="175:17">overquant</name> <operator pos:start="175:19" pos:end="175:19">=</operator> <name pos:start="175:21" pos:end="175:29">max_quant</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="233:5">else <block pos:start="177:12" pos:end="233:5">{<block_content pos:start="179:9" pos:end="231:22">

        <for pos:start="179:9" pos:end="223:9">for <control pos:start="179:13" pos:end="179:45">(<init pos:start="179:14" pos:end="179:31"><expr pos:start="179:14" pos:end="179:30"><name pos:start="179:14" pos:end="179:14">q</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <name pos:start="179:18" pos:end="179:26">max_quant</name> <operator pos:start="179:28" pos:end="179:28">+</operator> <literal type="number" pos:start="179:30" pos:end="179:30">1</literal></expr>;</init> <condition pos:start="179:33" pos:end="179:40"><expr pos:start="179:33" pos:end="179:39"><name pos:start="179:33" pos:end="179:33">q</name> <operator pos:start="179:35" pos:end="179:35">&lt;</operator> <literal type="number" pos:start="179:37" pos:end="179:39">128</literal></expr>;</condition> <incr pos:start="179:42" pos:end="179:44"><expr pos:start="179:42" pos:end="179:44"><name pos:start="179:42" pos:end="179:42">q</name><operator pos:start="179:43" pos:end="179:44">++</operator></expr></incr>)</control> <block pos:start="179:47" pos:end="223:9">{<block_content pos:start="181:13" pos:end="221:22">

            <expr_stmt pos:start="181:13" pos:end="181:22"><expr pos:start="181:13" pos:end="181:21"><name pos:start="181:13" pos:end="181:16">bits</name>  <operator pos:start="181:19" pos:end="181:19">=</operator> <literal type="number" pos:start="181:21" pos:end="181:21">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:22"><expr pos:start="183:13" pos:end="183:21"><name pos:start="183:13" pos:end="183:17">error</name> <operator pos:start="183:19" pos:end="183:19">=</operator> <literal type="number" pos:start="183:21" pos:end="183:21">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="185:13" pos:end="197:13"><if pos:start="185:13" pos:end="189:13">if <condition pos:start="185:16" pos:end="185:33">(<expr pos:start="185:17" pos:end="185:32"><name pos:start="185:17" pos:end="185:17">q</name> <operator pos:start="185:19" pos:end="185:19">&lt;</operator> <name pos:start="185:21" pos:end="185:32">MAX_STORED_Q</name></expr>)</condition> <block pos:start="185:35" pos:end="189:13">{<block_content pos:start="187:17" pos:end="187:38">

                <expr_stmt pos:start="187:17" pos:end="187:38"><expr pos:start="187:17" pos:end="187:37"><name pos:start="187:17" pos:end="187:20">qmat</name> <operator pos:start="187:22" pos:end="187:22">=</operator> <name pos:start="187:24" pos:end="187:37"><name pos:start="187:24" pos:end="187:26">ctx</name><operator pos:start="187:27" pos:end="187:28">-&gt;</operator><name pos:start="187:29" pos:end="187:34">quants</name><index pos:start="187:35" pos:end="187:37">[<expr pos:start="187:36" pos:end="187:36"><name pos:start="187:36" pos:end="187:36">q</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="189:15" pos:end="197:13">else <block pos:start="189:20" pos:end="197:13">{<block_content pos:start="191:17" pos:end="195:52">

                <expr_stmt pos:start="191:17" pos:end="191:36"><expr pos:start="191:17" pos:end="191:35"><name pos:start="191:17" pos:end="191:20">qmat</name> <operator pos:start="191:22" pos:end="191:22">=</operator> <name pos:start="191:24" pos:end="191:35"><name pos:start="191:24" pos:end="191:25">td</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:35">custom_q</name></name></expr>;</expr_stmt>

                <for pos:start="193:17" pos:end="195:52">for <control pos:start="193:21" pos:end="193:40">(<init pos:start="193:22" pos:end="193:27"><expr pos:start="193:22" pos:end="193:26"><name pos:start="193:22" pos:end="193:22">i</name> <operator pos:start="193:24" pos:end="193:24">=</operator> <literal type="number" pos:start="193:26" pos:end="193:26">0</literal></expr>;</init> <condition pos:start="193:29" pos:end="193:35"><expr pos:start="193:29" pos:end="193:34"><name pos:start="193:29" pos:end="193:29">i</name> <operator pos:start="193:31" pos:end="193:31">&lt;</operator> <literal type="number" pos:start="193:33" pos:end="193:34">64</literal></expr>;</condition> <incr pos:start="193:37" pos:end="193:39"><expr pos:start="193:37" pos:end="193:39"><name pos:start="193:37" pos:end="193:37">i</name><operator pos:start="193:38" pos:end="193:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="195:21" pos:end="195:52"><block_content pos:start="195:21" pos:end="195:52">

                    <expr_stmt pos:start="195:21" pos:end="195:52"><expr pos:start="195:21" pos:end="195:51"><name pos:start="195:21" pos:end="195:27"><name pos:start="195:21" pos:end="195:24">qmat</name><index pos:start="195:25" pos:end="195:27">[<expr pos:start="195:26" pos:end="195:26"><name pos:start="195:26" pos:end="195:26">i</name></expr>]</index></name> <operator pos:start="195:29" pos:end="195:29">=</operator> <name pos:start="195:31" pos:end="195:47"><name pos:start="195:31" pos:end="195:33">ctx</name><operator pos:start="195:34" pos:end="195:35">-&gt;</operator><name pos:start="195:36" pos:end="195:44">quant_mat</name><index pos:start="195:45" pos:end="195:47">[<expr pos:start="195:46" pos:end="195:46"><name pos:start="195:46" pos:end="195:46">i</name></expr>]</index></name> <operator pos:start="195:49" pos:end="195:49">*</operator> <name pos:start="195:51" pos:end="195:51">q</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <for pos:start="199:13" pos:end="211:13">for <control pos:start="199:17" pos:end="199:69">(<init pos:start="199:18" pos:end="199:23"><expr pos:start="199:18" pos:end="199:22"><name pos:start="199:18" pos:end="199:18">i</name> <operator pos:start="199:20" pos:end="199:20">=</operator> <literal type="number" pos:start="199:22" pos:end="199:22">0</literal></expr>;</init> <condition pos:start="199:25" pos:end="199:64"><expr pos:start="199:25" pos:end="199:63"><name pos:start="199:25" pos:end="199:25">i</name> <operator pos:start="199:27" pos:end="199:27">&lt;</operator> <name pos:start="199:29" pos:end="199:43"><name pos:start="199:29" pos:end="199:31">ctx</name><operator pos:start="199:32" pos:end="199:33">-&gt;</operator><name pos:start="199:34" pos:end="199:43">num_planes</name></name> <operator pos:start="199:45" pos:end="199:45">-</operator> <operator pos:start="199:47" pos:end="199:47">!</operator><operator pos:start="199:48" pos:end="199:48">!</operator><name pos:start="199:49" pos:end="199:63"><name pos:start="199:49" pos:end="199:51">ctx</name><operator pos:start="199:52" pos:end="199:53">-&gt;</operator><name pos:start="199:54" pos:end="199:63">alpha_bits</name></name></expr>;</condition> <incr pos:start="199:66" pos:end="199:68"><expr pos:start="199:66" pos:end="199:68"><name pos:start="199:66" pos:end="199:66">i</name><operator pos:start="199:67" pos:end="199:68">++</operator></expr></incr>)</control> <block pos:start="199:71" pos:end="211:13">{<block_content pos:start="201:17" pos:end="209:55">

                <expr_stmt pos:start="201:17" pos:end="209:55"><expr pos:start="201:17" pos:end="209:54"><name pos:start="201:17" pos:end="201:20">bits</name> <operator pos:start="201:22" pos:end="201:23">+=</operator> <call pos:start="201:25" pos:end="209:54"><name pos:start="201:25" pos:end="201:44">estimate_slice_plane</name><argument_list pos:start="201:45" pos:end="209:54">(<argument pos:start="201:46" pos:end="201:48"><expr pos:start="201:46" pos:end="201:48"><name pos:start="201:46" pos:end="201:48">ctx</name></expr></argument>, <argument pos:start="201:51" pos:end="201:56"><expr pos:start="201:51" pos:end="201:56"><operator pos:start="201:51" pos:end="201:51">&amp;</operator><name pos:start="201:52" pos:end="201:56">error</name></expr></argument>, <argument pos:start="201:59" pos:end="201:59"><expr pos:start="201:59" pos:end="201:59"><name pos:start="201:59" pos:end="201:59">i</name></expr></argument>,

                                             <argument pos:start="203:46" pos:end="203:48"><expr pos:start="203:46" pos:end="203:48"><name pos:start="203:46" pos:end="203:48">src</name></expr></argument>, <argument pos:start="203:51" pos:end="203:61"><expr pos:start="203:51" pos:end="203:61"><name pos:start="203:51" pos:end="203:61"><name pos:start="203:51" pos:end="203:58">linesize</name><index pos:start="203:59" pos:end="203:61">[<expr pos:start="203:60" pos:end="203:60"><name pos:start="203:60" pos:end="203:60">i</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="205:46" pos:end="205:58"><expr pos:start="205:46" pos:end="205:58"><name pos:start="205:46" pos:end="205:58">mbs_per_slice</name></expr></argument>,

                                             <argument pos:start="207:46" pos:end="207:59"><expr pos:start="207:46" pos:end="207:59"><name pos:start="207:46" pos:end="207:59"><name pos:start="207:46" pos:end="207:56">num_cblocks</name><index pos:start="207:57" pos:end="207:59">[<expr pos:start="207:58" pos:end="207:58"><name pos:start="207:58" pos:end="207:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="207:62" pos:end="207:76"><expr pos:start="207:62" pos:end="207:76"><name pos:start="207:62" pos:end="207:76"><name pos:start="207:62" pos:end="207:73">plane_factor</name><index pos:start="207:74" pos:end="207:76">[<expr pos:start="207:75" pos:end="207:75"><name pos:start="207:75" pos:end="207:75">i</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="209:46" pos:end="209:49"><expr pos:start="209:46" pos:end="209:49"><name pos:start="209:46" pos:end="209:49">qmat</name></expr></argument>, <argument pos:start="209:52" pos:end="209:53"><expr pos:start="209:52" pos:end="209:53"><name pos:start="209:52" pos:end="209:53">td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="213:13" pos:end="217:78"><if pos:start="213:13" pos:end="217:78">if <condition pos:start="213:16" pos:end="213:32">(<expr pos:start="213:17" pos:end="213:31"><name pos:start="213:17" pos:end="213:31"><name pos:start="213:17" pos:end="213:19">ctx</name><operator pos:start="213:20" pos:end="213:21">-&gt;</operator><name pos:start="213:22" pos:end="213:31">alpha_bits</name></name></expr>)</condition><block type="pseudo" pos:start="215:17" pos:end="217:78"><block_content pos:start="215:17" pos:end="217:78">

                <expr_stmt pos:start="215:17" pos:end="217:78"><expr pos:start="215:17" pos:end="217:77"><name pos:start="215:17" pos:end="215:20">bits</name> <operator pos:start="215:22" pos:end="215:23">+=</operator> <call pos:start="215:25" pos:end="217:77"><name pos:start="215:25" pos:end="215:44">estimate_alpha_plane</name><argument_list pos:start="215:45" pos:end="217:77">(<argument pos:start="215:46" pos:end="215:48"><expr pos:start="215:46" pos:end="215:48"><name pos:start="215:46" pos:end="215:48">ctx</name></expr></argument>, <argument pos:start="215:51" pos:end="215:56"><expr pos:start="215:51" pos:end="215:56"><operator pos:start="215:51" pos:end="215:51">&amp;</operator><name pos:start="215:52" pos:end="215:56">error</name></expr></argument>, <argument pos:start="215:59" pos:end="215:61"><expr pos:start="215:59" pos:end="215:61"><name pos:start="215:59" pos:end="215:61">src</name></expr></argument>, <argument pos:start="215:64" pos:end="215:74"><expr pos:start="215:64" pos:end="215:74"><name pos:start="215:64" pos:end="215:74"><name pos:start="215:64" pos:end="215:71">linesize</name><index pos:start="215:72" pos:end="215:74">[<expr pos:start="215:73" pos:end="215:73"><literal type="number" pos:start="215:73" pos:end="215:73">3</literal></expr>]</index></name></expr></argument>,

                                             <argument pos:start="217:46" pos:end="217:58"><expr pos:start="217:46" pos:end="217:58"><name pos:start="217:46" pos:end="217:58">mbs_per_slice</name></expr></argument>, <argument pos:start="217:61" pos:end="217:61"><expr pos:start="217:61" pos:end="217:61"><name pos:start="217:61" pos:end="217:61">q</name></expr></argument>, <argument pos:start="217:64" pos:end="217:76"><expr pos:start="217:64" pos:end="217:76"><name pos:start="217:64" pos:end="217:76"><name pos:start="217:64" pos:end="217:65">td</name><operator pos:start="217:66" pos:end="217:67">-&gt;</operator><name pos:start="217:68" pos:end="217:73">blocks</name><index pos:start="217:74" pos:end="217:76">[<expr pos:start="217:75" pos:end="217:75"><literal type="number" pos:start="217:75" pos:end="217:75">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="219:13" pos:end="221:22"><if pos:start="219:13" pos:end="221:22">if <condition pos:start="219:16" pos:end="219:57">(<expr pos:start="219:17" pos:end="219:56"><name pos:start="219:17" pos:end="219:20">bits</name> <operator pos:start="219:22" pos:end="219:23">&lt;=</operator> <name pos:start="219:25" pos:end="219:40"><name pos:start="219:25" pos:end="219:27">ctx</name><operator pos:start="219:28" pos:end="219:29">-&gt;</operator><name pos:start="219:30" pos:end="219:40">bits_per_mb</name></name> <operator pos:start="219:42" pos:end="219:42">*</operator> <name pos:start="219:44" pos:end="219:56">mbs_per_slice</name></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:22"><block_content pos:start="221:17" pos:end="221:22">

                <break pos:start="221:17" pos:end="221:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="227:9" pos:end="227:42"><expr pos:start="227:9" pos:end="227:41"><name pos:start="227:9" pos:end="227:33"><name pos:start="227:9" pos:end="227:18">slice_bits</name><index pos:start="227:19" pos:end="227:33">[<expr pos:start="227:20" pos:end="227:32"><name pos:start="227:20" pos:end="227:28">max_quant</name> <operator pos:start="227:30" pos:end="227:30">+</operator> <literal type="number" pos:start="227:32" pos:end="227:32">1</literal></expr>]</index></name>  <operator pos:start="227:36" pos:end="227:36">=</operator> <name pos:start="227:38" pos:end="227:41">bits</name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:43"><expr pos:start="229:9" pos:end="229:42"><name pos:start="229:9" pos:end="229:34"><name pos:start="229:9" pos:end="229:19">slice_score</name><index pos:start="229:20" pos:end="229:34">[<expr pos:start="229:21" pos:end="229:33"><name pos:start="229:21" pos:end="229:29">max_quant</name> <operator pos:start="229:31" pos:end="229:31">+</operator> <literal type="number" pos:start="229:33" pos:end="229:33">1</literal></expr>]</index></name> <operator pos:start="229:36" pos:end="229:36">=</operator> <name pos:start="229:38" pos:end="229:42">error</name></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:22"><expr pos:start="231:9" pos:end="231:21"><name pos:start="231:9" pos:end="231:17">overquant</name> <operator pos:start="231:19" pos:end="231:19">=</operator> <name pos:start="231:21" pos:end="231:21">q</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:62"><expr pos:start="235:5" pos:end="235:61"><name pos:start="235:5" pos:end="235:43"><name pos:start="235:5" pos:end="235:6">td</name><operator pos:start="235:7" pos:end="235:8">-&gt;</operator><name pos:start="235:9" pos:end="235:13">nodes</name><index pos:start="235:14" pos:end="235:43">[<expr pos:start="235:15" pos:end="235:42"><name pos:start="235:15" pos:end="235:26">trellis_node</name> <operator pos:start="235:28" pos:end="235:28">+</operator> <name pos:start="235:30" pos:end="235:38">max_quant</name> <operator pos:start="235:40" pos:end="235:40">+</operator> <literal type="number" pos:start="235:42" pos:end="235:42">1</literal></expr>]</index></name><operator pos:start="235:44" pos:end="235:44">.</operator><name pos:start="235:45" pos:end="235:49">quant</name> <operator pos:start="235:51" pos:end="235:51">=</operator> <name pos:start="235:53" pos:end="235:61">overquant</name></expr>;</expr_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:40"><expr pos:start="239:5" pos:end="239:39"><name pos:start="239:5" pos:end="239:14">bits_limit</name> <operator pos:start="239:16" pos:end="239:16">=</operator> <name pos:start="239:18" pos:end="239:20">mbs</name> <operator pos:start="239:22" pos:end="239:22">*</operator> <name pos:start="239:24" pos:end="239:39"><name pos:start="239:24" pos:end="239:26">ctx</name><operator pos:start="239:27" pos:end="239:28">-&gt;</operator><name pos:start="239:29" pos:end="239:39">bits_per_mb</name></name></expr>;</expr_stmt>

    <for pos:start="241:5" pos:end="287:5">for <control pos:start="241:9" pos:end="241:50">(<init pos:start="241:10" pos:end="241:24"><expr pos:start="241:10" pos:end="241:23"><name pos:start="241:10" pos:end="241:11">pq</name> <operator pos:start="241:13" pos:end="241:13">=</operator> <name pos:start="241:15" pos:end="241:23">min_quant</name></expr>;</init> <condition pos:start="241:26" pos:end="241:44"><expr pos:start="241:26" pos:end="241:43"><name pos:start="241:26" pos:end="241:27">pq</name> <operator pos:start="241:29" pos:end="241:29">&lt;</operator> <name pos:start="241:31" pos:end="241:39">max_quant</name> <operator pos:start="241:41" pos:end="241:41">+</operator> <literal type="number" pos:start="241:43" pos:end="241:43">2</literal></expr>;</condition> <incr pos:start="241:46" pos:end="241:49"><expr pos:start="241:46" pos:end="241:49"><name pos:start="241:46" pos:end="241:47">pq</name><operator pos:start="241:48" pos:end="241:49">++</operator></expr></incr>)</control> <block pos:start="241:52" pos:end="287:5">{<block_content pos:start="243:9" pos:end="285:9">

        <expr_stmt pos:start="243:9" pos:end="243:49"><expr pos:start="243:9" pos:end="243:48"><name pos:start="243:9" pos:end="243:12">prev</name> <operator pos:start="243:14" pos:end="243:14">=</operator> <name pos:start="243:16" pos:end="243:27">trellis_node</name> <operator pos:start="243:29" pos:end="243:29">-</operator> <name pos:start="243:31" pos:end="243:43">TRELLIS_WIDTH</name> <operator pos:start="243:45" pos:end="243:45">+</operator> <name pos:start="243:47" pos:end="243:48">pq</name></expr>;</expr_stmt>



        <for pos:start="247:9" pos:end="285:9">for <control pos:start="247:13" pos:end="247:51">(<init pos:start="247:14" pos:end="247:27"><expr pos:start="247:14" pos:end="247:26"><name pos:start="247:14" pos:end="247:14">q</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <name pos:start="247:18" pos:end="247:26">min_quant</name></expr>;</init> <condition pos:start="247:29" pos:end="247:46"><expr pos:start="247:29" pos:end="247:45"><name pos:start="247:29" pos:end="247:29">q</name> <operator pos:start="247:31" pos:end="247:31">&lt;</operator> <name pos:start="247:33" pos:end="247:41">max_quant</name> <operator pos:start="247:43" pos:end="247:43">+</operator> <literal type="number" pos:start="247:45" pos:end="247:45">2</literal></expr>;</condition> <incr pos:start="247:48" pos:end="247:50"><expr pos:start="247:48" pos:end="247:50"><name pos:start="247:48" pos:end="247:48">q</name><operator pos:start="247:49" pos:end="247:50">++</operator></expr></incr>)</control> <block pos:start="247:53" pos:end="285:9">{<block_content pos:start="249:13" pos:end="283:13">

            <expr_stmt pos:start="249:13" pos:end="249:35"><expr pos:start="249:13" pos:end="249:34"><name pos:start="249:13" pos:end="249:15">cur</name> <operator pos:start="249:17" pos:end="249:17">=</operator> <name pos:start="249:19" pos:end="249:30">trellis_node</name> <operator pos:start="249:32" pos:end="249:32">+</operator> <name pos:start="249:34" pos:end="249:34">q</name></expr>;</expr_stmt>



            <expr_stmt pos:start="253:13" pos:end="253:57"><expr pos:start="253:13" pos:end="253:56"><name pos:start="253:13" pos:end="253:16">bits</name>  <operator pos:start="253:19" pos:end="253:19">=</operator> <name pos:start="253:21" pos:end="253:35"><name pos:start="253:21" pos:end="253:22">td</name><operator pos:start="253:23" pos:end="253:24">-&gt;</operator><name pos:start="253:25" pos:end="253:29">nodes</name><index pos:start="253:30" pos:end="253:35">[<expr pos:start="253:31" pos:end="253:34"><name pos:start="253:31" pos:end="253:34">prev</name></expr>]</index></name><operator pos:start="253:36" pos:end="253:36">.</operator><name pos:start="253:37" pos:end="253:40">bits</name> <operator pos:start="253:42" pos:end="253:42">+</operator> <name pos:start="253:44" pos:end="253:56"><name pos:start="253:44" pos:end="253:53">slice_bits</name><index pos:start="253:54" pos:end="253:56">[<expr pos:start="253:55" pos:end="253:55"><name pos:start="253:55" pos:end="253:55">q</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:35"><expr pos:start="255:13" pos:end="255:34"><name pos:start="255:13" pos:end="255:17">error</name> <operator pos:start="255:19" pos:end="255:19">=</operator> <name pos:start="255:21" pos:end="255:34"><name pos:start="255:21" pos:end="255:31">slice_score</name><index pos:start="255:32" pos:end="255:34">[<expr pos:start="255:33" pos:end="255:33"><name pos:start="255:33" pos:end="255:33">q</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="257:13" pos:end="259:36"><if pos:start="257:13" pos:end="259:36">if <condition pos:start="257:16" pos:end="257:34">(<expr pos:start="257:17" pos:end="257:33"><name pos:start="257:17" pos:end="257:20">bits</name> <operator pos:start="257:22" pos:end="257:22">&gt;</operator> <name pos:start="257:24" pos:end="257:33">bits_limit</name></expr>)</condition><block type="pseudo" pos:start="259:17" pos:end="259:36"><block_content pos:start="259:17" pos:end="259:36">

                <expr_stmt pos:start="259:17" pos:end="259:36"><expr pos:start="259:17" pos:end="259:35"><name pos:start="259:17" pos:end="259:21">error</name> <operator pos:start="259:23" pos:end="259:23">=</operator> <name pos:start="259:25" pos:end="259:35">SCORE_LIMIT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="263:13" pos:end="269:40"><if pos:start="263:13" pos:end="265:58">if <condition pos:start="263:16" pos:end="263:75">(<expr pos:start="263:17" pos:end="263:74"><name pos:start="263:17" pos:end="263:31"><name pos:start="263:17" pos:end="263:18">td</name><operator pos:start="263:19" pos:end="263:20">-&gt;</operator><name pos:start="263:21" pos:end="263:25">nodes</name><index pos:start="263:26" pos:end="263:31">[<expr pos:start="263:27" pos:end="263:30"><name pos:start="263:27" pos:end="263:30">prev</name></expr>]</index></name><operator pos:start="263:32" pos:end="263:32">.</operator><name pos:start="263:33" pos:end="263:37">score</name> <operator pos:start="263:39" pos:end="263:39">&lt;</operator> <name pos:start="263:41" pos:end="263:51">SCORE_LIMIT</name> <operator pos:start="263:53" pos:end="263:54">&amp;&amp;</operator> <name pos:start="263:56" pos:end="263:60">error</name> <operator pos:start="263:62" pos:end="263:62">&lt;</operator> <name pos:start="263:64" pos:end="263:74">SCORE_LIMIT</name></expr>)</condition><block type="pseudo" pos:start="265:17" pos:end="265:58"><block_content pos:start="265:17" pos:end="265:58">

                <expr_stmt pos:start="265:17" pos:end="265:58"><expr pos:start="265:17" pos:end="265:57"><name pos:start="265:17" pos:end="265:25">new_score</name> <operator pos:start="265:27" pos:end="265:27">=</operator> <name pos:start="265:29" pos:end="265:43"><name pos:start="265:29" pos:end="265:30">td</name><operator pos:start="265:31" pos:end="265:32">-&gt;</operator><name pos:start="265:33" pos:end="265:37">nodes</name><index pos:start="265:38" pos:end="265:43">[<expr pos:start="265:39" pos:end="265:42"><name pos:start="265:39" pos:end="265:42">prev</name></expr>]</index></name><operator pos:start="265:44" pos:end="265:44">.</operator><name pos:start="265:45" pos:end="265:49">score</name> <operator pos:start="265:51" pos:end="265:51">+</operator> <name pos:start="265:53" pos:end="265:57">error</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="267:13" pos:end="269:40">else<block type="pseudo" pos:start="269:17" pos:end="269:40"><block_content pos:start="269:17" pos:end="269:40">

                <expr_stmt pos:start="269:17" pos:end="269:40"><expr pos:start="269:17" pos:end="269:39"><name pos:start="269:17" pos:end="269:25">new_score</name> <operator pos:start="269:27" pos:end="269:27">=</operator> <name pos:start="269:29" pos:end="269:39">SCORE_LIMIT</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="271:13" pos:end="283:13"><if pos:start="271:13" pos:end="283:13">if <condition pos:start="271:16" pos:end="273:50">(<expr pos:start="271:17" pos:end="273:49"><name pos:start="271:17" pos:end="271:30"><name pos:start="271:17" pos:end="271:18">td</name><operator pos:start="271:19" pos:end="271:20">-&gt;</operator><name pos:start="271:21" pos:end="271:25">nodes</name><index pos:start="271:26" pos:end="271:30">[<expr pos:start="271:27" pos:end="271:29"><name pos:start="271:27" pos:end="271:29">cur</name></expr>]</index></name><operator pos:start="271:31" pos:end="271:31">.</operator><name pos:start="271:32" pos:end="271:40">prev_node</name> <operator pos:start="271:42" pos:end="271:43">==</operator> <operator pos:start="271:45" pos:end="271:45">-</operator><literal type="number" pos:start="271:46" pos:end="271:46">1</literal> <operator pos:start="271:48" pos:end="271:49">||</operator>

                <name pos:start="273:17" pos:end="273:30"><name pos:start="273:17" pos:end="273:18">td</name><operator pos:start="273:19" pos:end="273:20">-&gt;</operator><name pos:start="273:21" pos:end="273:25">nodes</name><index pos:start="273:26" pos:end="273:30">[<expr pos:start="273:27" pos:end="273:29"><name pos:start="273:27" pos:end="273:29">cur</name></expr>]</index></name><operator pos:start="273:31" pos:end="273:31">.</operator><name pos:start="273:32" pos:end="273:36">score</name> <operator pos:start="273:38" pos:end="273:39">&gt;=</operator> <name pos:start="273:41" pos:end="273:49">new_score</name></expr>)</condition> <block pos:start="273:52" pos:end="283:13">{<block_content pos:start="277:17" pos:end="281:48">



                <expr_stmt pos:start="277:17" pos:end="277:48"><expr pos:start="277:17" pos:end="277:47"><name pos:start="277:17" pos:end="277:30"><name pos:start="277:17" pos:end="277:18">td</name><operator pos:start="277:19" pos:end="277:20">-&gt;</operator><name pos:start="277:21" pos:end="277:25">nodes</name><index pos:start="277:26" pos:end="277:30">[<expr pos:start="277:27" pos:end="277:29"><name pos:start="277:27" pos:end="277:29">cur</name></expr>]</index></name><operator pos:start="277:31" pos:end="277:31">.</operator><name pos:start="277:32" pos:end="277:35">bits</name>      <operator pos:start="277:42" pos:end="277:42">=</operator> <name pos:start="277:44" pos:end="277:47">bits</name></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:53"><expr pos:start="279:17" pos:end="279:52"><name pos:start="279:17" pos:end="279:30"><name pos:start="279:17" pos:end="279:18">td</name><operator pos:start="279:19" pos:end="279:20">-&gt;</operator><name pos:start="279:21" pos:end="279:25">nodes</name><index pos:start="279:26" pos:end="279:30">[<expr pos:start="279:27" pos:end="279:29"><name pos:start="279:27" pos:end="279:29">cur</name></expr>]</index></name><operator pos:start="279:31" pos:end="279:31">.</operator><name pos:start="279:32" pos:end="279:36">score</name>     <operator pos:start="279:42" pos:end="279:42">=</operator> <name pos:start="279:44" pos:end="279:52">new_score</name></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:48"><expr pos:start="281:17" pos:end="281:47"><name pos:start="281:17" pos:end="281:30"><name pos:start="281:17" pos:end="281:18">td</name><operator pos:start="281:19" pos:end="281:20">-&gt;</operator><name pos:start="281:21" pos:end="281:25">nodes</name><index pos:start="281:26" pos:end="281:30">[<expr pos:start="281:27" pos:end="281:29"><name pos:start="281:27" pos:end="281:29">cur</name></expr>]</index></name><operator pos:start="281:31" pos:end="281:31">.</operator><name pos:start="281:32" pos:end="281:40">prev_node</name> <operator pos:start="281:42" pos:end="281:42">=</operator> <name pos:start="281:44" pos:end="281:47">prev</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="291:5" pos:end="291:54"><expr pos:start="291:5" pos:end="291:53"><name pos:start="291:5" pos:end="291:9">error</name> <operator pos:start="291:11" pos:end="291:11">=</operator> <name pos:start="291:13" pos:end="291:47"><name pos:start="291:13" pos:end="291:14">td</name><operator pos:start="291:15" pos:end="291:16">-&gt;</operator><name pos:start="291:17" pos:end="291:21">nodes</name><index pos:start="291:22" pos:end="291:47">[<expr pos:start="291:23" pos:end="291:46"><name pos:start="291:23" pos:end="291:34">trellis_node</name> <operator pos:start="291:36" pos:end="291:36">+</operator> <name pos:start="291:38" pos:end="291:46">min_quant</name></expr>]</index></name><operator pos:start="291:48" pos:end="291:48">.</operator><name pos:start="291:49" pos:end="291:53">score</name></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:37"><expr pos:start="293:5" pos:end="293:36"><name pos:start="293:5" pos:end="293:6">pq</name>    <operator pos:start="293:11" pos:end="293:11">=</operator> <name pos:start="293:13" pos:end="293:24">trellis_node</name> <operator pos:start="293:26" pos:end="293:26">+</operator> <name pos:start="293:28" pos:end="293:36">min_quant</name></expr>;</expr_stmt>

    <for pos:start="295:5" pos:end="305:5">for <control pos:start="295:9" pos:end="295:51">(<init pos:start="295:10" pos:end="295:27"><expr pos:start="295:10" pos:end="295:26"><name pos:start="295:10" pos:end="295:10">q</name> <operator pos:start="295:12" pos:end="295:12">=</operator> <name pos:start="295:14" pos:end="295:22">min_quant</name> <operator pos:start="295:24" pos:end="295:24">+</operator> <literal type="number" pos:start="295:26" pos:end="295:26">1</literal></expr>;</init> <condition pos:start="295:29" pos:end="295:46"><expr pos:start="295:29" pos:end="295:45"><name pos:start="295:29" pos:end="295:29">q</name> <operator pos:start="295:31" pos:end="295:31">&lt;</operator> <name pos:start="295:33" pos:end="295:41">max_quant</name> <operator pos:start="295:43" pos:end="295:43">+</operator> <literal type="number" pos:start="295:45" pos:end="295:45">2</literal></expr>;</condition> <incr pos:start="295:48" pos:end="295:50"><expr pos:start="295:48" pos:end="295:50"><name pos:start="295:48" pos:end="295:48">q</name><operator pos:start="295:49" pos:end="295:50">++</operator></expr></incr>)</control> <block pos:start="295:53" pos:end="305:5">{<block_content pos:start="297:9" pos:end="303:9">

        <if_stmt pos:start="297:9" pos:end="303:9"><if pos:start="297:9" pos:end="303:9">if <condition pos:start="297:12" pos:end="297:55">(<expr pos:start="297:13" pos:end="297:54"><name pos:start="297:13" pos:end="297:39"><name pos:start="297:13" pos:end="297:14">td</name><operator pos:start="297:15" pos:end="297:16">-&gt;</operator><name pos:start="297:17" pos:end="297:21">nodes</name><index pos:start="297:22" pos:end="297:39">[<expr pos:start="297:23" pos:end="297:38"><name pos:start="297:23" pos:end="297:34">trellis_node</name> <operator pos:start="297:36" pos:end="297:36">+</operator> <name pos:start="297:38" pos:end="297:38">q</name></expr>]</index></name><operator pos:start="297:40" pos:end="297:40">.</operator><name pos:start="297:41" pos:end="297:45">score</name> <operator pos:start="297:47" pos:end="297:48">&lt;=</operator> <name pos:start="297:50" pos:end="297:54">error</name></expr>)</condition> <block pos:start="297:57" pos:end="303:9">{<block_content pos:start="299:13" pos:end="301:37">

            <expr_stmt pos:start="299:13" pos:end="299:54"><expr pos:start="299:13" pos:end="299:53"><name pos:start="299:13" pos:end="299:17">error</name> <operator pos:start="299:19" pos:end="299:19">=</operator> <name pos:start="299:21" pos:end="299:47"><name pos:start="299:21" pos:end="299:22">td</name><operator pos:start="299:23" pos:end="299:24">-&gt;</operator><name pos:start="299:25" pos:end="299:29">nodes</name><index pos:start="299:30" pos:end="299:47">[<expr pos:start="299:31" pos:end="299:46"><name pos:start="299:31" pos:end="299:42">trellis_node</name> <operator pos:start="299:44" pos:end="299:44">+</operator> <name pos:start="299:46" pos:end="299:46">q</name></expr>]</index></name><operator pos:start="299:48" pos:end="299:48">.</operator><name pos:start="299:49" pos:end="299:53">score</name></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:37"><expr pos:start="301:13" pos:end="301:36"><name pos:start="301:13" pos:end="301:14">pq</name>    <operator pos:start="301:19" pos:end="301:19">=</operator> <name pos:start="301:21" pos:end="301:32">trellis_node</name> <operator pos:start="301:34" pos:end="301:34">+</operator> <name pos:start="301:36" pos:end="301:36">q</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="309:5" pos:end="309:14">return <expr pos:start="309:12" pos:end="309:13"><name pos:start="309:12" pos:end="309:13">pq</name></expr>;</return>

</block_content>}</block></function>
</unit>
