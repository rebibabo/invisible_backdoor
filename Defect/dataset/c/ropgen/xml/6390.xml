<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6390.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint16_t</name></type> <name pos:start="1:17" pos:end="1:40">pci_req_id_cache_extract</name><parameter_list pos:start="1:41" pos:end="1:62">(<parameter pos:start="1:42" pos:end="1:61"><decl pos:start="1:42" pos:end="1:61"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:54">PCIReqIDCache</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">cache</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:18">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:17">bus_n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:19">result</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="37:5">switch <condition pos:start="11:12" pos:end="11:24">(<expr pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:23"><name pos:start="11:13" pos:end="11:17">cache</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:23">type</name></name></expr>)</condition> <block pos:start="11:26" pos:end="37:5">{<block_content pos:start="13:5" pos:end="35:14">

    <case pos:start="13:5" pos:end="13:24">case <expr pos:start="13:10" pos:end="13:23"><name pos:start="13:10" pos:end="13:23">PCI_REQ_ID_BDF</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:14">result</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:40"><name pos:start="15:18" pos:end="15:28">pci_get_bdf</name><argument_list pos:start="15:29" pos:end="15:40">(<argument pos:start="15:30" pos:end="15:39"><expr pos:start="15:30" pos:end="15:39"><name pos:start="15:30" pos:end="15:39"><name pos:start="15:30" pos:end="15:34">cache</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:39">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:34">case <expr pos:start="19:10" pos:end="19:33"><name pos:start="19:10" pos:end="19:33">PCI_REQ_ID_SECONDARY_BUS</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:45"><expr pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:13">bus_n</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:44"><name pos:start="21:17" pos:end="21:27">pci_bus_num</name><argument_list pos:start="21:28" pos:end="21:44">(<argument pos:start="21:29" pos:end="21:43"><expr pos:start="21:29" pos:end="21:43"><name pos:start="21:29" pos:end="21:43"><name pos:start="21:29" pos:end="21:33">cache</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:38">dev</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:43">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:14">result</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:40"><name pos:start="23:18" pos:end="23:30">PCI_BUILD_BDF</name><argument_list pos:start="23:31" pos:end="23:40">(<argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><name pos:start="23:32" pos:end="23:36">bus_n</name></expr></argument>, <argument pos:start="23:39" pos:end="23:39"><expr pos:start="23:39" pos:end="23:39"><literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <default pos:start="27:5" pos:end="27:12">default:</default>

        <expr_stmt pos:start="29:9" pos:end="31:34"><expr pos:start="29:9" pos:end="31:33"><call pos:start="29:9" pos:end="31:33"><name pos:start="29:9" pos:end="29:20">error_printf</name><argument_list pos:start="29:21" pos:end="31:33">(<argument pos:start="29:22" pos:end="29:64"><expr pos:start="29:22" pos:end="29:64"><literal type="string" pos:start="29:22" pos:end="29:64">"Invalid PCI requester ID cache type: %d\n"</literal></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:32"><expr pos:start="31:22" pos:end="31:32"><name pos:start="31:22" pos:end="31:32"><name pos:start="31:22" pos:end="31:26">cache</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:32">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><call pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">exit</name><argument_list pos:start="33:13" pos:end="33:15">(<argument pos:start="33:14" pos:end="33:14"><expr pos:start="33:14" pos:end="33:14"><literal type="number" pos:start="33:14" pos:end="33:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="41:5" pos:end="41:18">return <expr pos:start="41:12" pos:end="41:17"><name pos:start="41:12" pos:end="41:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
