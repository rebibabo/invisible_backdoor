<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19838.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">USBDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:30">usb_net_init</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:37">USBBus</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">bus</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:63"><decl pos:start="1:45" pos:end="1:63"><type pos:start="1:45" pos:end="1:63"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:63">cmdline</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">USBDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">idx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:62"><expr pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:8">opts</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:61"><name pos:start="15:12" pos:end="15:26">qemu_opts_parse</name><argument_list pos:start="15:27" pos:end="15:61">(<argument pos:start="15:28" pos:end="15:48"><expr pos:start="15:28" pos:end="15:48"><call pos:start="15:28" pos:end="15:48"><name pos:start="15:28" pos:end="15:41">qemu_find_opts</name><argument_list pos:start="15:42" pos:end="15:48">(<argument pos:start="15:43" pos:end="15:47"><expr pos:start="15:43" pos:end="15:47"><literal type="string" pos:start="15:43" pos:end="15:47">"net"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:51" pos:end="15:57"><expr pos:start="15:51" pos:end="15:57"><name pos:start="15:51" pos:end="15:57">cmdline</name></expr></argument>, <argument pos:start="15:60" pos:end="15:60"><expr pos:start="15:60" pos:end="15:60"><literal type="number" pos:start="15:60" pos:end="15:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:13">opts</name></expr>)</condition> <block pos:start="17:16" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><call pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:16">qemu_opt_set</name><argument_list pos:start="23:17" pos:end="23:37">(<argument pos:start="23:18" pos:end="23:21"><expr pos:start="23:18" pos:end="23:21"><name pos:start="23:18" pos:end="23:21">opts</name></expr></argument>, <argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><literal type="string" pos:start="23:24" pos:end="23:29">"type"</literal></expr></argument>, <argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><literal type="string" pos:start="23:32" pos:end="23:36">"nic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><call pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:16">qemu_opt_set</name><argument_list pos:start="25:17" pos:end="25:38">(<argument pos:start="25:18" pos:end="25:21"><expr pos:start="25:18" pos:end="25:21"><name pos:start="25:18" pos:end="25:21">opts</name></expr></argument>, <argument pos:start="25:24" pos:end="25:30"><expr pos:start="25:24" pos:end="25:30"><literal type="string" pos:start="25:24" pos:end="25:30">"model"</literal></expr></argument>, <argument pos:start="25:33" pos:end="25:37"><expr pos:start="25:33" pos:end="25:37"><literal type="string" pos:start="25:33" pos:end="25:37">"usb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:7">idx</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:46"><name pos:start="29:11" pos:end="29:25">net_client_init</name><argument_list pos:start="29:26" pos:end="29:46">(<argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">opts</name></expr></argument>, <argument pos:start="29:33" pos:end="29:33"><expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr></argument>, <argument pos:start="29:36" pos:end="29:45"><expr pos:start="29:36" pos:end="29:45"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:45">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:18">(<expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:17">local_err</name></expr>)</condition> <block pos:start="31:20" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:20">

        <expr_stmt pos:start="33:9" pos:end="33:56"><expr pos:start="33:9" pos:end="33:55"><call pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:20">error_report</name><argument_list pos:start="33:21" pos:end="33:55">(<argument pos:start="33:22" pos:end="33:25"><expr pos:start="33:22" pos:end="33:25"><literal type="string" pos:start="33:22" pos:end="33:25">"%s"</literal></expr></argument>, <argument pos:start="33:28" pos:end="33:54"><expr pos:start="33:28" pos:end="33:54"><call pos:start="33:28" pos:end="33:54"><name pos:start="33:28" pos:end="33:43">error_get_pretty</name><argument_list pos:start="33:44" pos:end="33:54">(<argument pos:start="33:45" pos:end="33:53"><expr pos:start="33:45" pos:end="33:53"><name pos:start="33:45" pos:end="33:53">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><call pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:18">error_free</name><argument_list pos:start="35:19" pos:end="35:29">(<argument pos:start="35:20" pos:end="35:28"><expr pos:start="35:20" pos:end="35:28"><name pos:start="35:20" pos:end="35:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:20">return <expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:7">dev</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:36"><name pos:start="43:11" pos:end="43:20">usb_create</name><argument_list pos:start="43:21" pos:end="43:36">(<argument pos:start="43:22" pos:end="43:24"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:24">bus</name></expr></argument>, <argument pos:start="43:27" pos:end="43:35"><expr pos:start="43:27" pos:end="43:35"><literal type="string" pos:start="43:27" pos:end="43:35">"usb-net"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:56"><expr pos:start="45:5" pos:end="45:55"><call pos:start="45:5" pos:end="45:55"><name pos:start="45:5" pos:end="45:27">qdev_set_nic_properties</name><argument_list pos:start="45:28" pos:end="45:55">(<argument pos:start="45:29" pos:end="45:38"><expr pos:start="45:29" pos:end="45:38"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:38"><name pos:start="45:30" pos:end="45:32">dev</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:38">qdev</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:54"><expr pos:start="45:41" pos:end="45:54"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:54"><name pos:start="45:42" pos:end="45:49">nd_table</name><index pos:start="45:50" pos:end="45:54">[<expr pos:start="45:51" pos:end="45:53"><name pos:start="45:51" pos:end="45:53">idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><call pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:20">qdev_init_nofail</name><argument_list pos:start="47:21" pos:end="47:32">(<argument pos:start="47:22" pos:end="47:31"><expr pos:start="47:22" pos:end="47:31"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:31"><name pos:start="47:23" pos:end="47:25">dev</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:31">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
