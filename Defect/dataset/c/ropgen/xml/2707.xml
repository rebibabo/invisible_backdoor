<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2707.c" pos:tabs="8"><function pos:start="1:1" pos:end="405:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">vc1_decode_i_block_adv</name><parameter_list pos:start="1:34" pos:end="3:71">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:44">VC1Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">v</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:56">int16_t</name></type> <name pos:start="1:58" pos:end="1:66"><name pos:start="1:58" pos:end="1:62">block</name><index pos:start="1:63" pos:end="1:66">[<expr pos:start="1:64" pos:end="1:65"><literal type="number" pos:start="1:64" pos:end="1:65">64</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:73"><decl pos:start="1:69" pos:end="1:73"><type pos:start="1:69" pos:end="1:73"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:73">n</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:43"><decl pos:start="3:35" pos:end="3:43"><type pos:start="3:35" pos:end="3:43"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:43">coded</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:58">codingset</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:70"><decl pos:start="3:61" pos:end="3:70"><type pos:start="3:61" pos:end="3:70"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:70">mquant</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="405:1">{<block_content pos:start="7:5" pos:end="403:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:32">= <expr pos:start="7:25" pos:end="7:32"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:30">.</operator><name pos:start="7:31" pos:end="7:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MpegEncContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:26">v</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">dc_pred_dir</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="11:26" pos:end="11:66">/* Direction of the DC prediction used */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">int16_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:19">dc_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:19">ac_val</name></decl>, <decl pos:start="17:22" pos:end="17:29"><type ref="prev" pos:start="17:5" pos:end="17:13"><modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:29">ac_val2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">dcdiff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:51"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">a_avail</name> <init pos:start="21:17" pos:end="21:28">= <expr pos:start="21:19" pos:end="21:28"><name pos:start="21:19" pos:end="21:28"><name pos:start="21:19" pos:end="21:19">v</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:28">a_avail</name></name></expr></init></decl>, <decl pos:start="21:31" pos:end="21:50"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:31" pos:end="21:37">c_avail</name> <init pos:start="21:39" pos:end="21:50">= <expr pos:start="21:41" pos:end="21:50"><name pos:start="21:41" pos:end="21:50"><name pos:start="21:41" pos:end="21:41">v</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:50">c_avail</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">use_pred</name> <init pos:start="23:18" pos:end="23:29">= <expr pos:start="23:20" pos:end="23:29"><name pos:start="23:20" pos:end="23:29"><name pos:start="23:20" pos:end="23:20">s</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:29">ac_pred</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:14"><decl pos:start="25:5" pos:end="25:13"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:13">scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:19"><decl pos:start="27:5" pos:end="27:10"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:10">q1</name></decl>, <decl pos:start="27:13" pos:end="27:18"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:13" pos:end="27:14">q2</name> <init pos:start="27:16" pos:end="27:18">= <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:50"><decl pos:start="29:5" pos:end="29:49"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:14">mb_pos</name> <init pos:start="29:16" pos:end="29:49">= <expr pos:start="29:18" pos:end="29:49"><name pos:start="29:18" pos:end="29:24"><name pos:start="29:18" pos:end="29:18">s</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:24">mb_x</name></name> <operator pos:start="29:26" pos:end="29:26">+</operator> <name pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:34">mb_y</name></name> <operator pos:start="29:36" pos:end="29:36">*</operator> <name pos:start="29:38" pos:end="29:49"><name pos:start="29:38" pos:end="29:38">s</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:29">/* Get DC differential */</comment>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:14">(<expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">n</name> <operator pos:start="35:11" pos:end="35:11">&lt;</operator> <literal type="number" pos:start="35:13" pos:end="35:13">4</literal></expr>)</condition> <block pos:start="35:16" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:97">

        <expr_stmt pos:start="37:9" pos:end="37:97"><expr pos:start="37:9" pos:end="37:96"><name pos:start="37:9" pos:end="37:14">dcdiff</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:96"><name pos:start="37:18" pos:end="37:25">get_vlc2</name><argument_list pos:start="37:26" pos:end="37:96">(<argument pos:start="37:27" pos:end="37:32"><expr pos:start="37:27" pos:end="37:32"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:32"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:32">gb</name></name></expr></argument>, <argument pos:start="37:35" pos:end="37:79"><expr pos:start="37:35" pos:end="37:79"><name pos:start="37:35" pos:end="37:73"><name pos:start="37:35" pos:end="37:54">ff_msmp4_dc_luma_vlc</name><index pos:start="37:55" pos:end="37:73">[<expr pos:start="37:56" pos:end="37:72"><name pos:start="37:56" pos:end="37:72"><name pos:start="37:56" pos:end="37:56">s</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:72">dc_table_index</name></name></expr>]</index></name><operator pos:start="37:74" pos:end="37:74">.</operator><name pos:start="37:75" pos:end="37:79">table</name></expr></argument>, <argument pos:start="37:82" pos:end="37:92"><expr pos:start="37:82" pos:end="37:92"><name pos:start="37:82" pos:end="37:92">DC_VLC_BITS</name></expr></argument>, <argument pos:start="37:95" pos:end="37:95"><expr pos:start="37:95" pos:end="37:95"><literal type="number" pos:start="37:95" pos:end="37:95">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:99">

        <expr_stmt pos:start="41:9" pos:end="41:99"><expr pos:start="41:9" pos:end="41:98"><name pos:start="41:9" pos:end="41:14">dcdiff</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:98"><name pos:start="41:18" pos:end="41:25">get_vlc2</name><argument_list pos:start="41:26" pos:end="41:98">(<argument pos:start="41:27" pos:end="41:32"><expr pos:start="41:27" pos:end="41:32"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:32">gb</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:81"><expr pos:start="41:35" pos:end="41:81"><name pos:start="41:35" pos:end="41:75"><name pos:start="41:35" pos:end="41:56">ff_msmp4_dc_chroma_vlc</name><index pos:start="41:57" pos:end="41:75">[<expr pos:start="41:58" pos:end="41:74"><name pos:start="41:58" pos:end="41:74"><name pos:start="41:58" pos:end="41:58">s</name><operator pos:start="41:59" pos:end="41:60">-&gt;</operator><name pos:start="41:61" pos:end="41:74">dc_table_index</name></name></expr>]</index></name><operator pos:start="41:76" pos:end="41:76">.</operator><name pos:start="41:77" pos:end="41:81">table</name></expr></argument>, <argument pos:start="41:84" pos:end="41:94"><expr pos:start="41:84" pos:end="41:94"><name pos:start="41:84" pos:end="41:94">DC_VLC_BITS</name></expr></argument>, <argument pos:start="41:97" pos:end="41:97"><expr pos:start="41:97" pos:end="41:97"><literal type="number" pos:start="41:97" pos:end="41:97">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:14">dcdiff</name> <operator pos:start="45:16" pos:end="45:16">&lt;</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>)</condition> <block pos:start="45:21" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><call pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:58">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">avctx</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:40" pos:end="47:57"><expr pos:start="47:40" pos:end="47:57"><literal type="string" pos:start="47:40" pos:end="47:57">"Illegal DC VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="81:5"><if pos:start="53:5" pos:end="81:5">if <condition pos:start="53:8" pos:end="53:15">(<expr pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:14">dcdiff</name></expr>)</condition> <block pos:start="53:17" pos:end="81:5">{<block_content pos:start="55:9" pos:end="79:29">

        <if_stmt pos:start="55:9" pos:end="75:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="55:48">(<expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:18">dcdiff</name> <operator pos:start="55:20" pos:end="55:21">==</operator> <literal type="number" pos:start="55:23" pos:end="55:25">119</literal></expr> <comment type="block" pos:start="55:27" pos:end="55:47">/* ESC index value */</comment>)</condition> <block pos:start="55:50" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:59">

            <comment type="block" pos:start="57:13" pos:end="57:32">/* TODO: Optimize */</comment>

            <if_stmt pos:start="59:13" pos:end="63:59"><if pos:start="59:13" pos:end="59:60">if <condition pos:start="59:16" pos:end="59:28">(<expr pos:start="59:17" pos:end="59:27"><name pos:start="59:17" pos:end="59:22">mquant</name> <operator pos:start="59:24" pos:end="59:25">==</operator> <literal type="number" pos:start="59:27" pos:end="59:27">1</literal></expr>)</condition><block type="pseudo" pos:start="59:35" pos:end="59:60"><block_content pos:start="59:35" pos:end="59:60">      <expr_stmt pos:start="59:35" pos:end="59:60"><expr pos:start="59:35" pos:end="59:59"><name pos:start="59:35" pos:end="59:40">dcdiff</name> <operator pos:start="59:42" pos:end="59:42">=</operator> <call pos:start="59:44" pos:end="59:59"><name pos:start="59:44" pos:end="59:51">get_bits</name><argument_list pos:start="59:52" pos:end="59:59">(<argument pos:start="59:53" pos:end="59:54"><expr pos:start="59:53" pos:end="59:54"><name pos:start="59:53" pos:end="59:54">gb</name></expr></argument>, <argument pos:start="59:57" pos:end="59:58"><expr pos:start="59:57" pos:end="59:58"><literal type="number" pos:start="59:57" pos:end="59:58">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="61:13" pos:end="61:59">else if <condition pos:start="61:21" pos:end="61:33">(<expr pos:start="61:22" pos:end="61:32"><name pos:start="61:22" pos:end="61:27">mquant</name> <operator pos:start="61:29" pos:end="61:30">==</operator> <literal type="number" pos:start="61:32" pos:end="61:32">2</literal></expr>)</condition><block type="pseudo" pos:start="61:35" pos:end="61:59"><block_content pos:start="61:35" pos:end="61:59"> <expr_stmt pos:start="61:35" pos:end="61:59"><expr pos:start="61:35" pos:end="61:58"><name pos:start="61:35" pos:end="61:40">dcdiff</name> <operator pos:start="61:42" pos:end="61:42">=</operator> <call pos:start="61:44" pos:end="61:58"><name pos:start="61:44" pos:end="61:51">get_bits</name><argument_list pos:start="61:52" pos:end="61:58">(<argument pos:start="61:53" pos:end="61:54"><expr pos:start="61:53" pos:end="61:54"><name pos:start="61:53" pos:end="61:54">gb</name></expr></argument>, <argument pos:start="61:57" pos:end="61:57"><expr pos:start="61:57" pos:end="61:57"><literal type="number" pos:start="61:57" pos:end="61:57">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="63:13" pos:end="63:59">else<block type="pseudo" pos:start="63:35" pos:end="63:59"><block_content pos:start="63:35" pos:end="63:59">                  <expr_stmt pos:start="63:35" pos:end="63:59"><expr pos:start="63:35" pos:end="63:58"><name pos:start="63:35" pos:end="63:40">dcdiff</name> <operator pos:start="63:42" pos:end="63:42">=</operator> <call pos:start="63:44" pos:end="63:58"><name pos:start="63:44" pos:end="63:51">get_bits</name><argument_list pos:start="63:52" pos:end="63:58">(<argument pos:start="63:53" pos:end="63:54"><expr pos:start="63:53" pos:end="63:54"><name pos:start="63:53" pos:end="63:54">gb</name></expr></argument>, <argument pos:start="63:57" pos:end="63:57"><expr pos:start="63:57" pos:end="63:57"><literal type="number" pos:start="63:57" pos:end="63:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="75:9">else <block pos:start="65:16" pos:end="75:9">{<block_content pos:start="67:13" pos:end="73:61">

            <if_stmt pos:start="67:13" pos:end="73:61"><if pos:start="67:13" pos:end="69:61">if <condition pos:start="67:16" pos:end="67:28">(<expr pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:22">mquant</name> <operator pos:start="67:24" pos:end="67:25">==</operator> <literal type="number" pos:start="67:27" pos:end="67:27">1</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:61"><block_content pos:start="69:17" pos:end="69:61">

                <expr_stmt pos:start="69:17" pos:end="69:61"><expr pos:start="69:17" pos:end="69:60"><name pos:start="69:17" pos:end="69:22">dcdiff</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <operator pos:start="69:26" pos:end="69:26">(</operator><name pos:start="69:27" pos:end="69:32">dcdiff</name> <operator pos:start="69:34" pos:end="69:35">&lt;&lt;</operator> <literal type="number" pos:start="69:37" pos:end="69:37">2</literal><operator pos:start="69:38" pos:end="69:38">)</operator> <operator pos:start="69:40" pos:end="69:40">+</operator> <call pos:start="69:42" pos:end="69:56"><name pos:start="69:42" pos:end="69:49">get_bits</name><argument_list pos:start="69:50" pos:end="69:56">(<argument pos:start="69:51" pos:end="69:52"><expr pos:start="69:51" pos:end="69:52"><name pos:start="69:51" pos:end="69:52">gb</name></expr></argument>, <argument pos:start="69:55" pos:end="69:55"><expr pos:start="69:55" pos:end="69:55"><literal type="number" pos:start="69:55" pos:end="69:55">2</literal></expr></argument>)</argument_list></call> <operator pos:start="69:58" pos:end="69:58">-</operator> <literal type="number" pos:start="69:60" pos:end="69:60">3</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="71:13" pos:end="73:61">else if <condition pos:start="71:21" pos:end="71:33">(<expr pos:start="71:22" pos:end="71:32"><name pos:start="71:22" pos:end="71:27">mquant</name> <operator pos:start="71:29" pos:end="71:30">==</operator> <literal type="number" pos:start="71:32" pos:end="71:32">2</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:61"><block_content pos:start="73:17" pos:end="73:61">

                <expr_stmt pos:start="73:17" pos:end="73:61"><expr pos:start="73:17" pos:end="73:60"><name pos:start="73:17" pos:end="73:22">dcdiff</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:32">dcdiff</name> <operator pos:start="73:34" pos:end="73:35">&lt;&lt;</operator> <literal type="number" pos:start="73:37" pos:end="73:37">1</literal><operator pos:start="73:38" pos:end="73:38">)</operator> <operator pos:start="73:40" pos:end="73:40">+</operator> <call pos:start="73:42" pos:end="73:54"><name pos:start="73:42" pos:end="73:50">get_bits1</name><argument_list pos:start="73:51" pos:end="73:54">(<argument pos:start="73:52" pos:end="73:53"><expr pos:start="73:52" pos:end="73:53"><name pos:start="73:52" pos:end="73:53">gb</name></expr></argument>)</argument_list></call>   <operator pos:start="73:58" pos:end="73:58">-</operator> <literal type="number" pos:start="73:60" pos:end="73:60">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="77:9" pos:end="79:29"><if pos:start="77:9" pos:end="79:29">if <condition pos:start="77:12" pos:end="77:26">(<expr pos:start="77:13" pos:end="77:25"><call pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:21">get_bits1</name><argument_list pos:start="77:22" pos:end="77:25">(<argument pos:start="77:23" pos:end="77:24"><expr pos:start="77:23" pos:end="77:24"><name pos:start="77:23" pos:end="77:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:29"><block_content pos:start="79:13" pos:end="79:29">

            <expr_stmt pos:start="79:13" pos:end="79:29"><expr pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:18">dcdiff</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <operator pos:start="79:22" pos:end="79:22">-</operator><name pos:start="79:23" pos:end="79:28">dcdiff</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:20">/* Prediction */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:103"><expr pos:start="87:5" pos:end="87:102"><name pos:start="87:5" pos:end="87:10">dcdiff</name> <operator pos:start="87:12" pos:end="87:13">+=</operator> <call pos:start="87:15" pos:end="87:102"><name pos:start="87:15" pos:end="87:25">vc1_pred_dc</name><argument_list pos:start="87:26" pos:end="87:102">(<argument pos:start="87:27" pos:end="87:31"><expr pos:start="87:27" pos:end="87:31"><operator pos:start="87:27" pos:end="87:27">&amp;</operator><name pos:start="87:28" pos:end="87:31"><name pos:start="87:28" pos:end="87:28">v</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:31">s</name></name></expr></argument>, <argument pos:start="87:34" pos:end="87:43"><expr pos:start="87:34" pos:end="87:43"><name pos:start="87:34" pos:end="87:43"><name pos:start="87:34" pos:end="87:34">v</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:43">overlap</name></name></expr></argument>, <argument pos:start="87:46" pos:end="87:51"><expr pos:start="87:46" pos:end="87:51"><name pos:start="87:46" pos:end="87:51">mquant</name></expr></argument>, <argument pos:start="87:54" pos:end="87:54"><expr pos:start="87:54" pos:end="87:54"><name pos:start="87:54" pos:end="87:54">n</name></expr></argument>, <argument pos:start="87:57" pos:end="87:66"><expr pos:start="87:57" pos:end="87:66"><name pos:start="87:57" pos:end="87:66"><name pos:start="87:57" pos:end="87:57">v</name><operator pos:start="87:58" pos:end="87:59">-&gt;</operator><name pos:start="87:60" pos:end="87:66">a_avail</name></name></expr></argument>, <argument pos:start="87:69" pos:end="87:78"><expr pos:start="87:69" pos:end="87:78"><name pos:start="87:69" pos:end="87:78"><name pos:start="87:69" pos:end="87:69">v</name><operator pos:start="87:70" pos:end="87:71">-&gt;</operator><name pos:start="87:72" pos:end="87:78">c_avail</name></name></expr></argument>, <argument pos:start="87:81" pos:end="87:87"><expr pos:start="87:81" pos:end="87:87"><operator pos:start="87:81" pos:end="87:81">&amp;</operator><name pos:start="87:82" pos:end="87:87">dc_val</name></expr></argument>, <argument pos:start="87:90" pos:end="87:101"><expr pos:start="87:90" pos:end="87:101"><operator pos:start="87:90" pos:end="87:90">&amp;</operator><name pos:start="87:91" pos:end="87:101">dc_pred_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:21"><expr pos:start="89:5" pos:end="89:20"><operator pos:start="89:5" pos:end="89:5">*</operator><name pos:start="89:6" pos:end="89:11">dc_val</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:20">dcdiff</name></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:59">/* Store the quantized DC coeff, used for prediction */</comment>

    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:14">(<expr pos:start="95:9" pos:end="95:13"><name pos:start="95:9" pos:end="95:9">n</name> <operator pos:start="95:11" pos:end="95:11">&lt;</operator> <literal type="number" pos:start="95:13" pos:end="95:13">4</literal></expr>)</condition> <block pos:start="95:16" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:42">

        <expr_stmt pos:start="97:9" pos:end="97:42"><expr pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:13">block</name><index pos:start="97:14" pos:end="97:16">[<expr pos:start="97:15" pos:end="97:15"><literal type="number" pos:start="97:15" pos:end="97:15">0</literal></expr>]</index></name> <operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:25">dcdiff</name> <operator pos:start="97:27" pos:end="97:27">*</operator> <name pos:start="97:29" pos:end="97:41"><name pos:start="97:29" pos:end="97:29">s</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:41">y_dc_scale</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="103:5">else <block pos:start="99:12" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:42">

        <expr_stmt pos:start="101:9" pos:end="101:42"><expr pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:13">block</name><index pos:start="101:14" pos:end="101:16">[<expr pos:start="101:15" pos:end="101:15"><literal type="number" pos:start="101:15" pos:end="101:15">0</literal></expr>]</index></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:25">dcdiff</name> <operator pos:start="101:27" pos:end="101:27">*</operator> <name pos:start="101:29" pos:end="101:41"><name pos:start="101:29" pos:end="101:29">s</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:41">c_dc_scale</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="107:5" pos:end="107:17">//AC Decoding</comment>

    <expr_stmt pos:start="109:5" pos:end="109:10"><expr pos:start="109:5" pos:end="109:9"><name pos:start="109:5" pos:end="109:5">i</name> <operator pos:start="109:7" pos:end="109:7">=</operator> <literal type="number" pos:start="109:9" pos:end="109:9">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:38">/* check if AC is needed at all */</comment>

    <if_stmt pos:start="115:5" pos:end="117:21"><if pos:start="115:5" pos:end="117:21">if <condition pos:start="115:8" pos:end="115:29">(<expr pos:start="115:9" pos:end="115:28"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:16">a_avail</name> <operator pos:start="115:18" pos:end="115:19">&amp;&amp;</operator> <operator pos:start="115:21" pos:end="115:21">!</operator><name pos:start="115:22" pos:end="115:28">c_avail</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:21"><block_content pos:start="117:9" pos:end="117:21">

        <expr_stmt pos:start="117:9" pos:end="117:21"><expr pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:16">use_pred</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <literal type="number" pos:start="117:20" pos:end="117:20">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:55"><expr pos:start="119:5" pos:end="119:54"><name pos:start="119:5" pos:end="119:10">ac_val</name>  <operator pos:start="119:13" pos:end="119:13">=</operator> <name pos:start="119:15" pos:end="119:29"><name pos:start="119:15" pos:end="119:15">s</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:23">ac_val</name><index pos:start="119:24" pos:end="119:26">[<expr pos:start="119:25" pos:end="119:25"><literal type="number" pos:start="119:25" pos:end="119:25">0</literal></expr>]</index><index pos:start="119:27" pos:end="119:29">[<expr pos:start="119:28" pos:end="119:28"><literal type="number" pos:start="119:28" pos:end="119:28">0</literal></expr>]</index></name> <operator pos:start="119:31" pos:end="119:31">+</operator> <name pos:start="119:33" pos:end="119:49"><name pos:start="119:33" pos:end="119:33">s</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:46">block_index</name><index pos:start="119:47" pos:end="119:49">[<expr pos:start="119:48" pos:end="119:48"><name pos:start="119:48" pos:end="119:48">n</name></expr>]</index></name> <operator pos:start="119:51" pos:end="119:51">*</operator> <literal type="number" pos:start="119:53" pos:end="119:54">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:21"><expr pos:start="121:5" pos:end="121:20"><name pos:start="121:5" pos:end="121:11">ac_val2</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <name pos:start="121:15" pos:end="121:20">ac_val</name></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:61"><expr pos:start="125:5" pos:end="125:60"><name pos:start="125:5" pos:end="125:9">scale</name> <operator pos:start="125:11" pos:end="125:11">=</operator> <name pos:start="125:13" pos:end="125:18">mquant</name> <operator pos:start="125:20" pos:end="125:20">*</operator> <literal type="number" pos:start="125:22" pos:end="125:24">2</literal> <operator pos:start="125:24" pos:end="125:24">+</operator> <operator pos:start="125:26" pos:end="125:26">(</operator><ternary pos:start="125:27" pos:end="125:59"><condition pos:start="125:27" pos:end="125:45"><expr pos:start="125:27" pos:end="125:43"><operator pos:start="125:27" pos:end="125:27">(</operator><name pos:start="125:28" pos:end="125:33">mquant</name> <operator pos:start="125:35" pos:end="125:36">==</operator> <name pos:start="125:38" pos:end="125:42"><name pos:start="125:38" pos:end="125:38">v</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:42">pq</name></name><operator pos:start="125:43" pos:end="125:43">)</operator></expr> ?</condition><then pos:start="125:47" pos:end="125:55"> <expr pos:start="125:47" pos:end="125:55"><name pos:start="125:47" pos:end="125:55"><name pos:start="125:47" pos:end="125:47">v</name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:55">halfpq</name></name></expr> </then><else pos:start="125:57" pos:end="125:59">: <expr pos:start="125:59" pos:end="125:59"><literal type="number" pos:start="125:59" pos:end="125:59">0</literal></expr></else></ternary><operator pos:start="125:60" pos:end="125:60">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="129:5" pos:end="135:40"><if pos:start="129:5" pos:end="131:21">if <condition pos:start="129:8" pos:end="129:20">(<expr pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:19">dc_pred_dir</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:21"><block_content pos:start="131:9" pos:end="131:21"> <comment type="line" pos:start="129:22" pos:end="129:28">// left</comment>

        <expr_stmt pos:start="131:9" pos:end="131:21"><expr pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:14">ac_val</name> <operator pos:start="131:16" pos:end="131:17">-=</operator> <literal type="number" pos:start="131:19" pos:end="131:20">16</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="133:5" pos:end="135:40">else<block type="pseudo" pos:start="135:9" pos:end="135:40"><block_content pos:start="135:9" pos:end="135:40"> <comment type="line" pos:start="133:10" pos:end="133:15">// top</comment>

        <expr_stmt pos:start="135:9" pos:end="135:40"><expr pos:start="135:9" pos:end="135:39"><name pos:start="135:9" pos:end="135:14">ac_val</name> <operator pos:start="135:16" pos:end="135:17">-=</operator> <literal type="number" pos:start="135:19" pos:end="135:20">16</literal> <operator pos:start="135:22" pos:end="135:22">*</operator> <name pos:start="135:24" pos:end="135:39"><name pos:start="135:24" pos:end="135:24">s</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:36">block_wrap</name><index pos:start="135:37" pos:end="135:39">[<expr pos:start="135:38" pos:end="135:38"><name pos:start="135:38" pos:end="135:38">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:51"><expr pos:start="139:5" pos:end="139:50"><name pos:start="139:5" pos:end="139:6">q1</name> <operator pos:start="139:8" pos:end="139:8">=</operator> <name pos:start="139:10" pos:end="139:50"><name pos:start="139:10" pos:end="139:10">s</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:27">current_picture</name><operator pos:start="139:28" pos:end="139:28">.</operator><name pos:start="139:29" pos:end="139:29">f</name><operator pos:start="139:30" pos:end="139:30">.</operator><name pos:start="139:31" pos:end="139:42">qscale_table</name><index pos:start="139:43" pos:end="139:50">[<expr pos:start="139:44" pos:end="139:49"><name pos:start="139:44" pos:end="139:49">mb_pos</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="143:59"><if pos:start="141:5" pos:end="143:59">if <condition pos:start="141:8" pos:end="141:42">( <expr pos:start="141:10" pos:end="141:41"><name pos:start="141:10" pos:end="141:20">dc_pred_dir</name> <operator pos:start="141:22" pos:end="141:23">&amp;&amp;</operator> <name pos:start="141:25" pos:end="141:31">c_avail</name> <operator pos:start="141:33" pos:end="141:34">&amp;&amp;</operator> <name pos:start="141:36" pos:end="141:41">mb_pos</name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:59"><block_content pos:start="143:9" pos:end="143:59">

        <expr_stmt pos:start="143:9" pos:end="143:59"><expr pos:start="143:9" pos:end="143:58"><name pos:start="143:9" pos:end="143:10">q2</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <name pos:start="143:14" pos:end="143:58"><name pos:start="143:14" pos:end="143:14">s</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:31">current_picture</name><operator pos:start="143:32" pos:end="143:32">.</operator><name pos:start="143:33" pos:end="143:33">f</name><operator pos:start="143:34" pos:end="143:34">.</operator><name pos:start="143:35" pos:end="143:46">qscale_table</name><index pos:start="143:47" pos:end="143:58">[<expr pos:start="143:48" pos:end="143:57"><name pos:start="143:48" pos:end="143:53">mb_pos</name> <operator pos:start="143:55" pos:end="143:55">-</operator> <literal type="number" pos:start="143:57" pos:end="143:57">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="147:70"><if pos:start="145:5" pos:end="147:70">if <condition pos:start="145:8" pos:end="145:58">(<expr pos:start="145:9" pos:end="145:57"><operator pos:start="145:9" pos:end="145:9">!</operator><name pos:start="145:10" pos:end="145:20">dc_pred_dir</name> <operator pos:start="145:22" pos:end="145:23">&amp;&amp;</operator> <name pos:start="145:25" pos:end="145:31">a_avail</name> <operator pos:start="145:33" pos:end="145:34">&amp;&amp;</operator> <name pos:start="145:36" pos:end="145:41">mb_pos</name> <operator pos:start="145:43" pos:end="145:44">&gt;=</operator> <name pos:start="145:46" pos:end="145:57"><name pos:start="145:46" pos:end="145:46">s</name><operator pos:start="145:47" pos:end="145:48">-&gt;</operator><name pos:start="145:49" pos:end="145:57">mb_stride</name></name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:70"><block_content pos:start="147:9" pos:end="147:70">

        <expr_stmt pos:start="147:9" pos:end="147:70"><expr pos:start="147:9" pos:end="147:69"><name pos:start="147:9" pos:end="147:10">q2</name> <operator pos:start="147:12" pos:end="147:12">=</operator> <name pos:start="147:14" pos:end="147:69"><name pos:start="147:14" pos:end="147:14">s</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:31">current_picture</name><operator pos:start="147:32" pos:end="147:32">.</operator><name pos:start="147:33" pos:end="147:33">f</name><operator pos:start="147:34" pos:end="147:34">.</operator><name pos:start="147:35" pos:end="147:46">qscale_table</name><index pos:start="147:47" pos:end="147:69">[<expr pos:start="147:48" pos:end="147:68"><name pos:start="147:48" pos:end="147:53">mb_pos</name> <operator pos:start="147:55" pos:end="147:55">-</operator> <name pos:start="147:57" pos:end="147:68"><name pos:start="147:57" pos:end="147:57">s</name><operator pos:start="147:58" pos:end="147:59">-&gt;</operator><name pos:start="147:60" pos:end="147:68">mb_stride</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="151:16"><if pos:start="149:5" pos:end="151:16">if <condition pos:start="149:8" pos:end="149:31">( <expr pos:start="149:10" pos:end="149:30"><name pos:start="149:10" pos:end="149:20">dc_pred_dir</name> <operator pos:start="149:22" pos:end="149:23">&amp;&amp;</operator> <name pos:start="149:25" pos:end="149:25">n</name> <operator pos:start="149:27" pos:end="149:28">==</operator> <literal type="number" pos:start="149:30" pos:end="149:30">1</literal></expr>)</condition><block type="pseudo" pos:start="151:9" pos:end="151:16"><block_content pos:start="151:9" pos:end="151:16">

        <expr_stmt pos:start="151:9" pos:end="151:16"><expr pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:10">q2</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <name pos:start="151:14" pos:end="151:15">q1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="153:5" pos:end="155:16"><if pos:start="153:5" pos:end="155:16">if <condition pos:start="153:8" pos:end="153:31">(<expr pos:start="153:9" pos:end="153:30"><operator pos:start="153:9" pos:end="153:9">!</operator><name pos:start="153:10" pos:end="153:20">dc_pred_dir</name> <operator pos:start="153:22" pos:end="153:23">&amp;&amp;</operator> <name pos:start="153:25" pos:end="153:25">n</name> <operator pos:start="153:27" pos:end="153:28">==</operator> <literal type="number" pos:start="153:30" pos:end="153:30">2</literal></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:16"><block_content pos:start="155:9" pos:end="155:16">

        <expr_stmt pos:start="155:9" pos:end="155:16"><expr pos:start="155:9" pos:end="155:15"><name pos:start="155:9" pos:end="155:10">q2</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <name pos:start="155:14" pos:end="155:15">q1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="159:16"><if pos:start="157:5" pos:end="159:16">if <condition pos:start="157:8" pos:end="157:15">(<expr pos:start="157:9" pos:end="157:14"><name pos:start="157:9" pos:end="157:9">n</name> <operator pos:start="157:11" pos:end="157:12">==</operator> <literal type="number" pos:start="157:14" pos:end="157:14">3</literal></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:16"><block_content pos:start="159:9" pos:end="159:16">

        <expr_stmt pos:start="159:9" pos:end="159:16"><expr pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:10">q2</name> <operator pos:start="159:12" pos:end="159:12">=</operator> <name pos:start="159:14" pos:end="159:15">q1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="163:5" pos:end="397:5"><if pos:start="163:5" pos:end="303:5">if <condition pos:start="163:8" pos:end="163:14">(<expr pos:start="163:9" pos:end="163:13"><name pos:start="163:9" pos:end="163:13">coded</name></expr>)</condition> <block pos:start="163:16" pos:end="303:5">{<block_content pos:start="165:9" pos:end="301:29">

        <decl_stmt pos:start="165:9" pos:end="165:34"><decl pos:start="165:9" pos:end="165:20"><type pos:start="165:9" pos:end="165:11"><name pos:start="165:9" pos:end="165:11">int</name></type> <name pos:start="165:13" pos:end="165:16">last</name> <init pos:start="165:18" pos:end="165:20">= <expr pos:start="165:20" pos:end="165:20"><literal type="number" pos:start="165:20" pos:end="165:20">0</literal></expr></init></decl>, <decl pos:start="165:23" pos:end="165:26"><type ref="prev" pos:start="165:9" pos:end="165:11"/><name pos:start="165:23" pos:end="165:26">skip</name></decl>, <decl pos:start="165:29" pos:end="165:33"><type ref="prev" pos:start="165:9" pos:end="165:11"/><name pos:start="165:29" pos:end="165:33">value</name></decl>;</decl_stmt>

        <decl_stmt pos:start="167:9" pos:end="167:32"><decl pos:start="167:9" pos:end="167:31"><type pos:start="167:9" pos:end="167:23"><specifier pos:start="167:9" pos:end="167:13">const</specifier> <name pos:start="167:15" pos:end="167:21">uint8_t</name> <modifier pos:start="167:23" pos:end="167:23">*</modifier></type><name pos:start="167:24" pos:end="167:31">zz_table</name></decl>;</decl_stmt>

        <decl_stmt pos:start="169:9" pos:end="169:14"><decl pos:start="169:9" pos:end="169:13"><type pos:start="169:9" pos:end="169:11"><name pos:start="169:9" pos:end="169:11">int</name></type> <name pos:start="169:13" pos:end="169:13">k</name></decl>;</decl_stmt>



        <if_stmt pos:start="173:9" pos:end="201:9"><if pos:start="173:9" pos:end="191:9">if <condition pos:start="173:12" pos:end="173:25">(<expr pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:13">v</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:16">s</name><operator pos:start="173:17" pos:end="173:17">.</operator><name pos:start="173:18" pos:end="173:24">ac_pred</name></name></expr>)</condition> <block pos:start="173:27" pos:end="191:9">{<block_content pos:start="175:13" pos:end="189:13">

            <if_stmt pos:start="175:13" pos:end="189:13"><if pos:start="175:13" pos:end="179:13">if <condition pos:start="175:16" pos:end="175:51">(<expr pos:start="175:17" pos:end="175:50"><operator pos:start="175:17" pos:end="175:17">!</operator><name pos:start="175:18" pos:end="175:25">use_pred</name> <operator pos:start="175:27" pos:end="175:28">&amp;&amp;</operator> <name pos:start="175:30" pos:end="175:35"><name pos:start="175:30" pos:end="175:30">v</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:35">fcm</name></name> <operator pos:start="175:37" pos:end="175:38">==</operator> <name pos:start="175:40" pos:end="175:50">ILACE_FRAME</name></expr>)</condition> <block pos:start="175:53" pos:end="179:13">{<block_content pos:start="177:17" pos:end="177:38">

                <expr_stmt pos:start="177:17" pos:end="177:38"><expr pos:start="177:17" pos:end="177:37"><name pos:start="177:17" pos:end="177:24">zz_table</name> <operator pos:start="177:26" pos:end="177:26">=</operator> <name pos:start="177:28" pos:end="177:37"><name pos:start="177:28" pos:end="177:28">v</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:37">zzi_8x8</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="179:15" pos:end="189:13">else <block pos:start="179:20" pos:end="189:13">{<block_content pos:start="181:17" pos:end="187:44">

                <if_stmt pos:start="181:17" pos:end="187:44"><if pos:start="181:17" pos:end="183:44">if <condition pos:start="181:20" pos:end="181:33">(<expr pos:start="181:21" pos:end="181:32"><operator pos:start="181:21" pos:end="181:21">!</operator><name pos:start="181:22" pos:end="181:32">dc_pred_dir</name></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:44"><block_content pos:start="183:21" pos:end="183:44"> <comment type="line" pos:start="181:35" pos:end="181:40">// top</comment>

                    <expr_stmt pos:start="183:21" pos:end="183:44"><expr pos:start="183:21" pos:end="183:43"><name pos:start="183:21" pos:end="183:28">zz_table</name> <operator pos:start="183:30" pos:end="183:30">=</operator> <name pos:start="183:32" pos:end="183:43"><name pos:start="183:32" pos:end="183:32">v</name><operator pos:start="183:33" pos:end="183:34">-&gt;</operator><name pos:start="183:35" pos:end="183:40">zz_8x8</name><index pos:start="183:41" pos:end="183:43">[<expr pos:start="183:42" pos:end="183:42"><literal type="number" pos:start="183:42" pos:end="183:42">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="185:17" pos:end="187:44">else<block type="pseudo" pos:start="187:21" pos:end="187:44"><block_content pos:start="187:21" pos:end="187:44"> <comment type="line" pos:start="185:22" pos:end="185:28">// left</comment>

                    <expr_stmt pos:start="187:21" pos:end="187:44"><expr pos:start="187:21" pos:end="187:43"><name pos:start="187:21" pos:end="187:28">zz_table</name> <operator pos:start="187:30" pos:end="187:30">=</operator> <name pos:start="187:32" pos:end="187:43"><name pos:start="187:32" pos:end="187:32">v</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:40">zz_8x8</name><index pos:start="187:41" pos:end="187:43">[<expr pos:start="187:42" pos:end="187:42"><literal type="number" pos:start="187:42" pos:end="187:42">3</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="191:11" pos:end="201:9">else <block pos:start="191:16" pos:end="201:9">{<block_content pos:start="193:13" pos:end="199:38">

            <if_stmt pos:start="193:13" pos:end="199:38"><if pos:start="193:13" pos:end="195:40">if <condition pos:start="193:16" pos:end="193:38">(<expr pos:start="193:17" pos:end="193:37"><name pos:start="193:17" pos:end="193:22"><name pos:start="193:17" pos:end="193:17">v</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:22">fcm</name></name> <operator pos:start="193:24" pos:end="193:25">!=</operator> <name pos:start="193:27" pos:end="193:37">ILACE_FRAME</name></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="195:40"><block_content pos:start="195:17" pos:end="195:40">

                <expr_stmt pos:start="195:17" pos:end="195:40"><expr pos:start="195:17" pos:end="195:39"><name pos:start="195:17" pos:end="195:24">zz_table</name> <operator pos:start="195:26" pos:end="195:26">=</operator> <name pos:start="195:28" pos:end="195:39"><name pos:start="195:28" pos:end="195:28">v</name><operator pos:start="195:29" pos:end="195:30">-&gt;</operator><name pos:start="195:31" pos:end="195:36">zz_8x8</name><index pos:start="195:37" pos:end="195:39">[<expr pos:start="195:38" pos:end="195:38"><literal type="number" pos:start="195:38" pos:end="195:38">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="197:13" pos:end="199:38">else<block type="pseudo" pos:start="199:17" pos:end="199:38"><block_content pos:start="199:17" pos:end="199:38">

                <expr_stmt pos:start="199:17" pos:end="199:38"><expr pos:start="199:17" pos:end="199:37"><name pos:start="199:17" pos:end="199:24">zz_table</name> <operator pos:start="199:26" pos:end="199:26">=</operator> <name pos:start="199:28" pos:end="199:37"><name pos:start="199:28" pos:end="199:28">v</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:37">zzi_8x8</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <while pos:start="205:9" pos:end="217:9">while <condition pos:start="205:15" pos:end="205:21">(<expr pos:start="205:16" pos:end="205:20"><operator pos:start="205:16" pos:end="205:16">!</operator><name pos:start="205:17" pos:end="205:20">last</name></expr>)</condition> <block pos:start="205:23" pos:end="217:9">{<block_content pos:start="207:13" pos:end="215:41">

            <expr_stmt pos:start="207:13" pos:end="207:68"><expr pos:start="207:13" pos:end="207:67"><call pos:start="207:13" pos:end="207:67"><name pos:start="207:13" pos:end="207:31">vc1_decode_ac_coeff</name><argument_list pos:start="207:32" pos:end="207:67">(<argument pos:start="207:33" pos:end="207:33"><expr pos:start="207:33" pos:end="207:33"><name pos:start="207:33" pos:end="207:33">v</name></expr></argument>, <argument pos:start="207:36" pos:end="207:40"><expr pos:start="207:36" pos:end="207:40"><operator pos:start="207:36" pos:end="207:36">&amp;</operator><name pos:start="207:37" pos:end="207:40">last</name></expr></argument>, <argument pos:start="207:43" pos:end="207:47"><expr pos:start="207:43" pos:end="207:47"><operator pos:start="207:43" pos:end="207:43">&amp;</operator><name pos:start="207:44" pos:end="207:47">skip</name></expr></argument>, <argument pos:start="207:50" pos:end="207:55"><expr pos:start="207:50" pos:end="207:55"><operator pos:start="207:50" pos:end="207:50">&amp;</operator><name pos:start="207:51" pos:end="207:55">value</name></expr></argument>, <argument pos:start="207:58" pos:end="207:66"><expr pos:start="207:58" pos:end="207:66"><name pos:start="207:58" pos:end="207:66">codingset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:22"><expr pos:start="209:13" pos:end="209:21"><name pos:start="209:13" pos:end="209:13">i</name> <operator pos:start="209:15" pos:end="209:16">+=</operator> <name pos:start="209:18" pos:end="209:21">skip</name></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="213:22"><if pos:start="211:13" pos:end="213:22">if <condition pos:start="211:16" pos:end="211:23">(<expr pos:start="211:17" pos:end="211:22"><name pos:start="211:17" pos:end="211:17">i</name> <operator pos:start="211:19" pos:end="211:19">&gt;</operator> <literal type="number" pos:start="211:21" pos:end="211:22">63</literal></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:22"><block_content pos:start="213:17" pos:end="213:22">

                <break pos:start="213:17" pos:end="213:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:41"><expr pos:start="215:13" pos:end="215:40"><name pos:start="215:13" pos:end="215:32"><name pos:start="215:13" pos:end="215:17">block</name><index pos:start="215:18" pos:end="215:32">[<expr pos:start="215:19" pos:end="215:31"><name pos:start="215:19" pos:end="215:31"><name pos:start="215:19" pos:end="215:26">zz_table</name><index pos:start="215:27" pos:end="215:31">[<expr pos:start="215:28" pos:end="215:30"><name pos:start="215:28" pos:end="215:28">i</name><operator pos:start="215:29" pos:end="215:30">++</operator></expr>]</index></name></expr>]</index></name> <operator pos:start="215:34" pos:end="215:34">=</operator> <name pos:start="215:36" pos:end="215:40">value</name></expr>;</expr_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="221:9" pos:end="221:43">/* apply AC prediction if needed */</comment>

        <if_stmt pos:start="223:9" pos:end="271:9"><if pos:start="223:9" pos:end="271:9">if <condition pos:start="223:12" pos:end="223:21">(<expr pos:start="223:13" pos:end="223:20"><name pos:start="223:13" pos:end="223:20">use_pred</name></expr>)</condition> <block pos:start="223:23" pos:end="271:9">{<block_content pos:start="227:13" pos:end="269:13">

            <comment type="block" pos:start="225:13" pos:end="225:43">/* scale predictors if needed*/</comment>

            <if_stmt pos:start="227:13" pos:end="269:13"><if pos:start="227:13" pos:end="253:13">if <condition pos:start="227:16" pos:end="227:31">(<expr pos:start="227:17" pos:end="227:30"><name pos:start="227:17" pos:end="227:18">q2</name> <operator pos:start="227:20" pos:end="227:21">&amp;&amp;</operator> <name pos:start="227:23" pos:end="227:24">q1</name> <operator pos:start="227:26" pos:end="227:27">!=</operator> <name pos:start="227:29" pos:end="227:30">q2</name></expr>)</condition> <block pos:start="227:33" pos:end="253:13">{<block_content pos:start="229:17" pos:end="251:17">

                <expr_stmt pos:start="229:17" pos:end="229:66"><expr pos:start="229:17" pos:end="229:65"><name pos:start="229:17" pos:end="229:18">q1</name> <operator pos:start="229:20" pos:end="229:20">=</operator> <name pos:start="229:22" pos:end="229:23">q1</name> <operator pos:start="229:25" pos:end="229:25">*</operator> <literal type="number" pos:start="229:27" pos:end="229:29">2</literal> <operator pos:start="229:29" pos:end="229:29">+</operator> <operator pos:start="229:31" pos:end="229:31">(</operator><ternary pos:start="229:32" pos:end="229:60"><condition pos:start="229:32" pos:end="229:46"><expr pos:start="229:32" pos:end="229:44"><operator pos:start="229:32" pos:end="229:32">(</operator><name pos:start="229:33" pos:end="229:34">q1</name> <operator pos:start="229:36" pos:end="229:37">==</operator> <name pos:start="229:39" pos:end="229:43"><name pos:start="229:39" pos:end="229:39">v</name><operator pos:start="229:40" pos:end="229:41">-&gt;</operator><name pos:start="229:42" pos:end="229:43">pq</name></name><operator pos:start="229:44" pos:end="229:44">)</operator></expr> ?</condition><then pos:start="229:48" pos:end="229:56"> <expr pos:start="229:48" pos:end="229:56"><name pos:start="229:48" pos:end="229:56"><name pos:start="229:48" pos:end="229:48">v</name><operator pos:start="229:49" pos:end="229:50">-&gt;</operator><name pos:start="229:51" pos:end="229:56">halfpq</name></name></expr> </then><else pos:start="229:58" pos:end="229:60">: <expr pos:start="229:60" pos:end="229:60"><literal type="number" pos:start="229:60" pos:end="229:60">0</literal></expr></else></ternary><operator pos:start="229:61" pos:end="229:61">)</operator> <operator pos:start="229:63" pos:end="229:63">-</operator> <literal type="number" pos:start="229:65" pos:end="229:65">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:66"><expr pos:start="231:17" pos:end="231:65"><name pos:start="231:17" pos:end="231:18">q2</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <name pos:start="231:22" pos:end="231:23">q2</name> <operator pos:start="231:25" pos:end="231:25">*</operator> <literal type="number" pos:start="231:27" pos:end="231:29">2</literal> <operator pos:start="231:29" pos:end="231:29">+</operator> <operator pos:start="231:31" pos:end="231:31">(</operator><ternary pos:start="231:32" pos:end="231:60"><condition pos:start="231:32" pos:end="231:46"><expr pos:start="231:32" pos:end="231:44"><operator pos:start="231:32" pos:end="231:32">(</operator><name pos:start="231:33" pos:end="231:34">q2</name> <operator pos:start="231:36" pos:end="231:37">==</operator> <name pos:start="231:39" pos:end="231:43"><name pos:start="231:39" pos:end="231:39">v</name><operator pos:start="231:40" pos:end="231:41">-&gt;</operator><name pos:start="231:42" pos:end="231:43">pq</name></name><operator pos:start="231:44" pos:end="231:44">)</operator></expr> ?</condition><then pos:start="231:48" pos:end="231:56"> <expr pos:start="231:48" pos:end="231:56"><name pos:start="231:48" pos:end="231:56"><name pos:start="231:48" pos:end="231:48">v</name><operator pos:start="231:49" pos:end="231:50">-&gt;</operator><name pos:start="231:51" pos:end="231:56">halfpq</name></name></expr> </then><else pos:start="231:58" pos:end="231:60">: <expr pos:start="231:60" pos:end="231:60"><literal type="number" pos:start="231:60" pos:end="231:60">0</literal></expr></else></ternary><operator pos:start="231:61" pos:end="231:61">)</operator> <operator pos:start="231:63" pos:end="231:63">-</operator> <literal type="number" pos:start="231:65" pos:end="231:65">1</literal></expr>;</expr_stmt>



                <if_stmt pos:start="235:17" pos:end="237:47"><if pos:start="235:17" pos:end="237:47">if <condition pos:start="235:20" pos:end="235:27">(<expr pos:start="235:21" pos:end="235:26"><name pos:start="235:21" pos:end="235:22">q1</name> <operator pos:start="235:24" pos:end="235:24">&lt;</operator> <literal type="number" pos:start="235:26" pos:end="235:26">1</literal></expr>)</condition><block type="pseudo" pos:start="237:21" pos:end="237:47"><block_content pos:start="237:21" pos:end="237:47">

                    <return pos:start="237:21" pos:end="237:47">return <expr pos:start="237:28" pos:end="237:46"><name pos:start="237:28" pos:end="237:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="239:17" pos:end="251:17"><if pos:start="239:17" pos:end="245:17">if <condition pos:start="239:20" pos:end="239:32">(<expr pos:start="239:21" pos:end="239:31"><name pos:start="239:21" pos:end="239:31">dc_pred_dir</name></expr>)</condition> <block pos:start="239:34" pos:end="245:17">{<block_content pos:start="241:21" pos:end="243:112"> <comment type="line" pos:start="239:36" pos:end="239:42">// left</comment>

                    <for pos:start="241:21" pos:end="243:112">for <control pos:start="241:25" pos:end="241:43">(<init pos:start="241:26" pos:end="241:31"><expr pos:start="241:26" pos:end="241:30"><name pos:start="241:26" pos:end="241:26">k</name> <operator pos:start="241:28" pos:end="241:28">=</operator> <literal type="number" pos:start="241:30" pos:end="241:30">1</literal></expr>;</init> <condition pos:start="241:33" pos:end="241:38"><expr pos:start="241:33" pos:end="241:37"><name pos:start="241:33" pos:end="241:33">k</name> <operator pos:start="241:35" pos:end="241:35">&lt;</operator> <literal type="number" pos:start="241:37" pos:end="241:37">8</literal></expr>;</condition> <incr pos:start="241:40" pos:end="241:42"><expr pos:start="241:40" pos:end="241:42"><name pos:start="241:40" pos:end="241:40">k</name><operator pos:start="241:41" pos:end="241:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="243:25" pos:end="243:112"><block_content pos:start="243:25" pos:end="243:112">

                        <expr_stmt pos:start="243:25" pos:end="243:112"><expr pos:start="243:25" pos:end="243:111"><name pos:start="243:25" pos:end="243:50"><name pos:start="243:25" pos:end="243:29">block</name><index pos:start="243:30" pos:end="243:50">[<expr pos:start="243:31" pos:end="243:49"><name pos:start="243:31" pos:end="243:31">k</name> <operator pos:start="243:33" pos:end="243:34">&lt;&lt;</operator> <name pos:start="243:36" pos:end="243:49"><name pos:start="243:36" pos:end="243:36">v</name><operator pos:start="243:37" pos:end="243:38">-&gt;</operator><name pos:start="243:39" pos:end="243:49">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="243:52" pos:end="243:53">+=</operator> <operator pos:start="243:55" pos:end="243:55">(</operator><name pos:start="243:56" pos:end="243:64"><name pos:start="243:56" pos:end="243:61">ac_val</name><index pos:start="243:62" pos:end="243:64">[<expr pos:start="243:63" pos:end="243:63"><name pos:start="243:63" pos:end="243:63">k</name></expr>]</index></name> <operator pos:start="243:66" pos:end="243:66">*</operator> <name pos:start="243:68" pos:end="243:69">q2</name> <operator pos:start="243:71" pos:end="243:71">*</operator> <name pos:start="243:73" pos:end="243:94"><name pos:start="243:73" pos:end="243:86">ff_vc1_dqscale</name><index pos:start="243:87" pos:end="243:94">[<expr pos:start="243:88" pos:end="243:93"><name pos:start="243:88" pos:end="243:89">q1</name> <operator pos:start="243:91" pos:end="243:91">-</operator> <literal type="number" pos:start="243:93" pos:end="243:93">1</literal></expr>]</index></name> <operator pos:start="243:96" pos:end="243:96">+</operator> <literal type="number" pos:start="243:98" pos:end="243:104">0x20000</literal><operator pos:start="243:105" pos:end="243:105">)</operator> <operator pos:start="243:107" pos:end="243:108">&gt;&gt;</operator> <literal type="number" pos:start="243:110" pos:end="243:111">18</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if> <else pos:start="245:19" pos:end="251:17">else <block pos:start="245:24" pos:end="251:17">{<block_content pos:start="247:21" pos:end="249:115"> <comment type="line" pos:start="245:26" pos:end="245:31">// top</comment>

                    <for pos:start="247:21" pos:end="249:115">for <control pos:start="247:25" pos:end="247:43">(<init pos:start="247:26" pos:end="247:31"><expr pos:start="247:26" pos:end="247:30"><name pos:start="247:26" pos:end="247:26">k</name> <operator pos:start="247:28" pos:end="247:28">=</operator> <literal type="number" pos:start="247:30" pos:end="247:30">1</literal></expr>;</init> <condition pos:start="247:33" pos:end="247:38"><expr pos:start="247:33" pos:end="247:37"><name pos:start="247:33" pos:end="247:33">k</name> <operator pos:start="247:35" pos:end="247:35">&lt;</operator> <literal type="number" pos:start="247:37" pos:end="247:37">8</literal></expr>;</condition> <incr pos:start="247:40" pos:end="247:42"><expr pos:start="247:40" pos:end="247:42"><name pos:start="247:40" pos:end="247:40">k</name><operator pos:start="247:41" pos:end="247:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="249:25" pos:end="249:115"><block_content pos:start="249:25" pos:end="249:115">

                        <expr_stmt pos:start="249:25" pos:end="249:115"><expr pos:start="249:25" pos:end="249:114"><name pos:start="249:25" pos:end="249:49"><name pos:start="249:25" pos:end="249:29">block</name><index pos:start="249:30" pos:end="249:49">[<expr pos:start="249:31" pos:end="249:48"><name pos:start="249:31" pos:end="249:31">k</name> <operator pos:start="249:33" pos:end="249:34">&lt;&lt;</operator> <name pos:start="249:36" pos:end="249:48"><name pos:start="249:36" pos:end="249:36">v</name><operator pos:start="249:37" pos:end="249:38">-&gt;</operator><name pos:start="249:39" pos:end="249:48">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="249:51" pos:end="249:52">+=</operator> <operator pos:start="249:54" pos:end="249:54">(</operator><name pos:start="249:55" pos:end="249:67"><name pos:start="249:55" pos:end="249:60">ac_val</name><index pos:start="249:61" pos:end="249:67">[<expr pos:start="249:62" pos:end="249:66"><name pos:start="249:62" pos:end="249:62">k</name> <operator pos:start="249:64" pos:end="249:64">+</operator> <literal type="number" pos:start="249:66" pos:end="249:66">8</literal></expr>]</index></name> <operator pos:start="249:69" pos:end="249:69">*</operator> <name pos:start="249:71" pos:end="249:72">q2</name> <operator pos:start="249:74" pos:end="249:74">*</operator> <name pos:start="249:76" pos:end="249:97"><name pos:start="249:76" pos:end="249:89">ff_vc1_dqscale</name><index pos:start="249:90" pos:end="249:97">[<expr pos:start="249:91" pos:end="249:96"><name pos:start="249:91" pos:end="249:92">q1</name> <operator pos:start="249:94" pos:end="249:94">-</operator> <literal type="number" pos:start="249:96" pos:end="249:96">1</literal></expr>]</index></name> <operator pos:start="249:99" pos:end="249:99">+</operator> <literal type="number" pos:start="249:101" pos:end="249:107">0x20000</literal><operator pos:start="249:108" pos:end="249:108">)</operator> <operator pos:start="249:110" pos:end="249:111">&gt;&gt;</operator> <literal type="number" pos:start="249:113" pos:end="249:114">18</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="253:15" pos:end="269:13">else <block pos:start="253:20" pos:end="269:13">{<block_content pos:start="255:17" pos:end="267:17">

                <if_stmt pos:start="255:17" pos:end="267:17"><if pos:start="255:17" pos:end="261:17">if <condition pos:start="255:20" pos:end="255:32">(<expr pos:start="255:21" pos:end="255:31"><name pos:start="255:21" pos:end="255:31">dc_pred_dir</name></expr>)</condition> <block pos:start="255:34" pos:end="261:17">{<block_content pos:start="257:21" pos:end="259:64"> <comment type="line" pos:start="255:36" pos:end="255:41">//left</comment>

                    <for pos:start="257:21" pos:end="259:64">for <control pos:start="257:25" pos:end="257:43">(<init pos:start="257:26" pos:end="257:31"><expr pos:start="257:26" pos:end="257:30"><name pos:start="257:26" pos:end="257:26">k</name> <operator pos:start="257:28" pos:end="257:28">=</operator> <literal type="number" pos:start="257:30" pos:end="257:30">1</literal></expr>;</init> <condition pos:start="257:33" pos:end="257:38"><expr pos:start="257:33" pos:end="257:37"><name pos:start="257:33" pos:end="257:33">k</name> <operator pos:start="257:35" pos:end="257:35">&lt;</operator> <literal type="number" pos:start="257:37" pos:end="257:37">8</literal></expr>;</condition> <incr pos:start="257:40" pos:end="257:42"><expr pos:start="257:40" pos:end="257:42"><name pos:start="257:40" pos:end="257:40">k</name><operator pos:start="257:41" pos:end="257:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="259:25" pos:end="259:64"><block_content pos:start="259:25" pos:end="259:64">

                        <expr_stmt pos:start="259:25" pos:end="259:64"><expr pos:start="259:25" pos:end="259:63"><name pos:start="259:25" pos:end="259:50"><name pos:start="259:25" pos:end="259:29">block</name><index pos:start="259:30" pos:end="259:50">[<expr pos:start="259:31" pos:end="259:49"><name pos:start="259:31" pos:end="259:31">k</name> <operator pos:start="259:33" pos:end="259:34">&lt;&lt;</operator> <name pos:start="259:36" pos:end="259:49"><name pos:start="259:36" pos:end="259:36">v</name><operator pos:start="259:37" pos:end="259:38">-&gt;</operator><name pos:start="259:39" pos:end="259:49">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="259:52" pos:end="259:53">+=</operator> <name pos:start="259:55" pos:end="259:63"><name pos:start="259:55" pos:end="259:60">ac_val</name><index pos:start="259:61" pos:end="259:63">[<expr pos:start="259:62" pos:end="259:62"><name pos:start="259:62" pos:end="259:62">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if> <else pos:start="261:19" pos:end="267:17">else <block pos:start="261:24" pos:end="267:17">{<block_content pos:start="263:21" pos:end="265:67"> <comment type="line" pos:start="261:26" pos:end="261:30">//top</comment>

                    <for pos:start="263:21" pos:end="265:67">for <control pos:start="263:25" pos:end="263:43">(<init pos:start="263:26" pos:end="263:31"><expr pos:start="263:26" pos:end="263:30"><name pos:start="263:26" pos:end="263:26">k</name> <operator pos:start="263:28" pos:end="263:28">=</operator> <literal type="number" pos:start="263:30" pos:end="263:30">1</literal></expr>;</init> <condition pos:start="263:33" pos:end="263:38"><expr pos:start="263:33" pos:end="263:37"><name pos:start="263:33" pos:end="263:33">k</name> <operator pos:start="263:35" pos:end="263:35">&lt;</operator> <literal type="number" pos:start="263:37" pos:end="263:37">8</literal></expr>;</condition> <incr pos:start="263:40" pos:end="263:42"><expr pos:start="263:40" pos:end="263:42"><name pos:start="263:40" pos:end="263:40">k</name><operator pos:start="263:41" pos:end="263:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="265:25" pos:end="265:67"><block_content pos:start="265:25" pos:end="265:67">

                        <expr_stmt pos:start="265:25" pos:end="265:67"><expr pos:start="265:25" pos:end="265:66"><name pos:start="265:25" pos:end="265:49"><name pos:start="265:25" pos:end="265:29">block</name><index pos:start="265:30" pos:end="265:49">[<expr pos:start="265:31" pos:end="265:48"><name pos:start="265:31" pos:end="265:31">k</name> <operator pos:start="265:33" pos:end="265:34">&lt;&lt;</operator> <name pos:start="265:36" pos:end="265:48"><name pos:start="265:36" pos:end="265:36">v</name><operator pos:start="265:37" pos:end="265:38">-&gt;</operator><name pos:start="265:39" pos:end="265:48">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="265:51" pos:end="265:52">+=</operator> <name pos:start="265:54" pos:end="265:66"><name pos:start="265:54" pos:end="265:59">ac_val</name><index pos:start="265:60" pos:end="265:66">[<expr pos:start="265:61" pos:end="265:65"><name pos:start="265:61" pos:end="265:61">k</name> <operator pos:start="265:63" pos:end="265:63">+</operator> <literal type="number" pos:start="265:65" pos:end="265:65">8</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="273:9" pos:end="273:51">/* save AC coeffs for further prediction */</comment>

        <for pos:start="275:9" pos:end="281:9">for <control pos:start="275:13" pos:end="275:31">(<init pos:start="275:14" pos:end="275:19"><expr pos:start="275:14" pos:end="275:18"><name pos:start="275:14" pos:end="275:14">k</name> <operator pos:start="275:16" pos:end="275:16">=</operator> <literal type="number" pos:start="275:18" pos:end="275:18">1</literal></expr>;</init> <condition pos:start="275:21" pos:end="275:26"><expr pos:start="275:21" pos:end="275:25"><name pos:start="275:21" pos:end="275:21">k</name> <operator pos:start="275:23" pos:end="275:23">&lt;</operator> <literal type="number" pos:start="275:25" pos:end="275:25">8</literal></expr>;</condition> <incr pos:start="275:28" pos:end="275:30"><expr pos:start="275:28" pos:end="275:30"><name pos:start="275:28" pos:end="275:28">k</name><operator pos:start="275:29" pos:end="275:30">++</operator></expr></incr>)</control> <block pos:start="275:33" pos:end="281:9">{<block_content pos:start="277:13" pos:end="279:55">

            <expr_stmt pos:start="277:13" pos:end="277:56"><expr pos:start="277:13" pos:end="277:55"><name pos:start="277:13" pos:end="277:26"><name pos:start="277:13" pos:end="277:19">ac_val2</name><index pos:start="277:20" pos:end="277:26">[<expr pos:start="277:21" pos:end="277:21"><name pos:start="277:21" pos:end="277:21">k</name></expr>    ]</index></name> <operator pos:start="277:28" pos:end="277:28">=</operator> <name pos:start="277:30" pos:end="277:55"><name pos:start="277:30" pos:end="277:34">block</name><index pos:start="277:35" pos:end="277:55">[<expr pos:start="277:36" pos:end="277:54"><name pos:start="277:36" pos:end="277:36">k</name> <operator pos:start="277:38" pos:end="277:39">&lt;&lt;</operator> <name pos:start="277:41" pos:end="277:54"><name pos:start="277:41" pos:end="277:41">v</name><operator pos:start="277:42" pos:end="277:43">-&gt;</operator><name pos:start="277:44" pos:end="277:54">left_blk_sh</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:55"><expr pos:start="279:13" pos:end="279:54"><name pos:start="279:13" pos:end="279:26"><name pos:start="279:13" pos:end="279:19">ac_val2</name><index pos:start="279:20" pos:end="279:26">[<expr pos:start="279:21" pos:end="279:25"><name pos:start="279:21" pos:end="279:21">k</name> <operator pos:start="279:23" pos:end="279:23">+</operator> <literal type="number" pos:start="279:25" pos:end="279:25">8</literal></expr>]</index></name> <operator pos:start="279:28" pos:end="279:28">=</operator> <name pos:start="279:30" pos:end="279:54"><name pos:start="279:30" pos:end="279:34">block</name><index pos:start="279:35" pos:end="279:54">[<expr pos:start="279:36" pos:end="279:53"><name pos:start="279:36" pos:end="279:36">k</name> <operator pos:start="279:38" pos:end="279:39">&lt;&lt;</operator> <name pos:start="279:41" pos:end="279:53"><name pos:start="279:41" pos:end="279:41">v</name><operator pos:start="279:42" pos:end="279:43">-&gt;</operator><name pos:start="279:44" pos:end="279:53">top_blk_sh</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="285:9" pos:end="285:29">/* scale AC coeffs */</comment>

        <for pos:start="287:9" pos:end="297:13">for <control pos:start="287:13" pos:end="287:32">(<init pos:start="287:14" pos:end="287:19"><expr pos:start="287:14" pos:end="287:18"><name pos:start="287:14" pos:end="287:14">k</name> <operator pos:start="287:16" pos:end="287:16">=</operator> <literal type="number" pos:start="287:18" pos:end="287:18">1</literal></expr>;</init> <condition pos:start="287:21" pos:end="287:27"><expr pos:start="287:21" pos:end="287:26"><name pos:start="287:21" pos:end="287:21">k</name> <operator pos:start="287:23" pos:end="287:23">&lt;</operator> <literal type="number" pos:start="287:25" pos:end="287:26">64</literal></expr>;</condition> <incr pos:start="287:29" pos:end="287:31"><expr pos:start="287:29" pos:end="287:31"><name pos:start="287:29" pos:end="287:29">k</name><operator pos:start="287:30" pos:end="287:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="289:13" pos:end="297:13"><block_content pos:start="289:13" pos:end="297:13">

            <if_stmt pos:start="289:13" pos:end="297:13"><if pos:start="289:13" pos:end="297:13">if <condition pos:start="289:16" pos:end="289:25">(<expr pos:start="289:17" pos:end="289:24"><name pos:start="289:17" pos:end="289:24"><name pos:start="289:17" pos:end="289:21">block</name><index pos:start="289:22" pos:end="289:24">[<expr pos:start="289:23" pos:end="289:23"><name pos:start="289:23" pos:end="289:23">k</name></expr>]</index></name></expr>)</condition> <block pos:start="289:27" pos:end="297:13">{<block_content pos:start="291:17" pos:end="295:66">

                <expr_stmt pos:start="291:17" pos:end="291:34"><expr pos:start="291:17" pos:end="291:33"><name pos:start="291:17" pos:end="291:24"><name pos:start="291:17" pos:end="291:21">block</name><index pos:start="291:22" pos:end="291:24">[<expr pos:start="291:23" pos:end="291:23"><name pos:start="291:23" pos:end="291:23">k</name></expr>]</index></name> <operator pos:start="291:26" pos:end="291:27">*=</operator> <name pos:start="291:29" pos:end="291:33">scale</name></expr>;</expr_stmt>

                <if_stmt pos:start="293:17" pos:end="295:66"><if pos:start="293:17" pos:end="295:66">if <condition pos:start="293:20" pos:end="293:35">(<expr pos:start="293:21" pos:end="293:34"><operator pos:start="293:21" pos:end="293:21">!</operator><name pos:start="293:22" pos:end="293:34"><name pos:start="293:22" pos:end="293:22">v</name><operator pos:start="293:23" pos:end="293:24">-&gt;</operator><name pos:start="293:25" pos:end="293:34">pquantizer</name></name></expr>)</condition><block type="pseudo" pos:start="295:21" pos:end="295:66"><block_content pos:start="295:21" pos:end="295:66">

                    <expr_stmt pos:start="295:21" pos:end="295:66"><expr pos:start="295:21" pos:end="295:65"><name pos:start="295:21" pos:end="295:28"><name pos:start="295:21" pos:end="295:25">block</name><index pos:start="295:26" pos:end="295:28">[<expr pos:start="295:27" pos:end="295:27"><name pos:start="295:27" pos:end="295:27">k</name></expr>]</index></name> <operator pos:start="295:30" pos:end="295:31">+=</operator> <ternary pos:start="295:33" pos:end="295:65"><condition pos:start="295:33" pos:end="295:48"><expr pos:start="295:33" pos:end="295:46"><operator pos:start="295:33" pos:end="295:33">(</operator><name pos:start="295:34" pos:end="295:41"><name pos:start="295:34" pos:end="295:38">block</name><index pos:start="295:39" pos:end="295:41">[<expr pos:start="295:40" pos:end="295:40"><name pos:start="295:40" pos:end="295:40">k</name></expr>]</index></name> <operator pos:start="295:43" pos:end="295:43">&lt;</operator> <literal type="number" pos:start="295:45" pos:end="295:45">0</literal><operator pos:start="295:46" pos:end="295:46">)</operator></expr> ?</condition><then pos:start="295:50" pos:end="295:56"> <expr pos:start="295:50" pos:end="295:56"><operator pos:start="295:50" pos:end="295:50">-</operator><name pos:start="295:51" pos:end="295:56">mquant</name></expr> </then><else pos:start="295:58" pos:end="295:65">: <expr pos:start="295:60" pos:end="295:65"><name pos:start="295:60" pos:end="295:65">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <if_stmt pos:start="301:9" pos:end="301:29"><if pos:start="301:9" pos:end="301:29">if <condition pos:start="301:12" pos:end="301:21">(<expr pos:start="301:13" pos:end="301:20"><name pos:start="301:13" pos:end="301:20">use_pred</name></expr>)</condition><block type="pseudo" pos:start="301:23" pos:end="301:29"><block_content pos:start="301:23" pos:end="301:29"> <expr_stmt pos:start="301:23" pos:end="301:29"><expr pos:start="301:23" pos:end="301:28"><name pos:start="301:23" pos:end="301:23">i</name> <operator pos:start="301:25" pos:end="301:25">=</operator> <literal type="number" pos:start="301:27" pos:end="301:28">63</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="303:7" pos:end="397:5">else <block pos:start="303:12" pos:end="397:5">{<block_content pos:start="305:9" pos:end="395:9"> <comment type="line" pos:start="303:14" pos:end="303:28">// no AC coeffs</comment>

        <decl_stmt pos:start="305:9" pos:end="305:14"><decl pos:start="305:9" pos:end="305:13"><type pos:start="305:9" pos:end="305:11"><name pos:start="305:9" pos:end="305:11">int</name></type> <name pos:start="305:13" pos:end="305:13">k</name></decl>;</decl_stmt>



        <expr_stmt pos:start="309:9" pos:end="309:35"><expr pos:start="309:9" pos:end="309:34"><call pos:start="309:9" pos:end="309:34"><name pos:start="309:9" pos:end="309:14">memset</name><argument_list pos:start="309:15" pos:end="309:34">(<argument pos:start="309:16" pos:end="309:22"><expr pos:start="309:16" pos:end="309:22"><name pos:start="309:16" pos:end="309:22">ac_val2</name></expr></argument>, <argument pos:start="309:25" pos:end="309:25"><expr pos:start="309:25" pos:end="309:25"><literal type="number" pos:start="309:25" pos:end="309:25">0</literal></expr></argument>, <argument pos:start="309:28" pos:end="309:33"><expr pos:start="309:28" pos:end="309:33"><literal type="number" pos:start="309:28" pos:end="309:29">16</literal> <operator pos:start="309:31" pos:end="309:31">*</operator> <literal type="number" pos:start="309:33" pos:end="309:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="311:9" pos:end="359:9"><if pos:start="311:9" pos:end="335:9">if <condition pos:start="311:12" pos:end="311:24">(<expr pos:start="311:13" pos:end="311:23"><name pos:start="311:13" pos:end="311:23">dc_pred_dir</name></expr>)</condition> <block pos:start="311:26" pos:end="335:9">{<block_content pos:start="313:13" pos:end="333:13"> <comment type="line" pos:start="311:28" pos:end="311:34">// left</comment>

            <if_stmt pos:start="313:13" pos:end="333:13"><if pos:start="313:13" pos:end="333:13">if <condition pos:start="313:16" pos:end="313:25">(<expr pos:start="313:17" pos:end="313:24"><name pos:start="313:17" pos:end="313:24">use_pred</name></expr>)</condition> <block pos:start="313:27" pos:end="333:13">{<block_content pos:start="315:17" pos:end="331:17">

                <expr_stmt pos:start="315:17" pos:end="315:47"><expr pos:start="315:17" pos:end="315:46"><call pos:start="315:17" pos:end="315:46"><name pos:start="315:17" pos:end="315:22">memcpy</name><argument_list pos:start="315:23" pos:end="315:46">(<argument pos:start="315:24" pos:end="315:30"><expr pos:start="315:24" pos:end="315:30"><name pos:start="315:24" pos:end="315:30">ac_val2</name></expr></argument>, <argument pos:start="315:33" pos:end="315:38"><expr pos:start="315:33" pos:end="315:38"><name pos:start="315:33" pos:end="315:38">ac_val</name></expr></argument>, <argument pos:start="315:41" pos:end="315:45"><expr pos:start="315:41" pos:end="315:45"><literal type="number" pos:start="315:41" pos:end="315:41">8</literal> <operator pos:start="315:43" pos:end="315:43">*</operator> <literal type="number" pos:start="315:45" pos:end="315:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="317:17" pos:end="331:17"><if pos:start="317:17" pos:end="331:17">if <condition pos:start="317:20" pos:end="317:35">(<expr pos:start="317:21" pos:end="317:34"><name pos:start="317:21" pos:end="317:22">q2</name> <operator pos:start="317:24" pos:end="317:25">&amp;&amp;</operator> <name pos:start="317:27" pos:end="317:28">q1</name> <operator pos:start="317:30" pos:end="317:31">!=</operator> <name pos:start="317:33" pos:end="317:34">q2</name></expr>)</condition> <block pos:start="317:37" pos:end="331:17">{<block_content pos:start="319:21" pos:end="329:96">

                    <expr_stmt pos:start="319:21" pos:end="319:70"><expr pos:start="319:21" pos:end="319:69"><name pos:start="319:21" pos:end="319:22">q1</name> <operator pos:start="319:24" pos:end="319:24">=</operator> <name pos:start="319:26" pos:end="319:27">q1</name> <operator pos:start="319:29" pos:end="319:29">*</operator> <literal type="number" pos:start="319:31" pos:end="319:33">2</literal> <operator pos:start="319:33" pos:end="319:33">+</operator> <operator pos:start="319:35" pos:end="319:35">(</operator><ternary pos:start="319:36" pos:end="319:64"><condition pos:start="319:36" pos:end="319:50"><expr pos:start="319:36" pos:end="319:48"><operator pos:start="319:36" pos:end="319:36">(</operator><name pos:start="319:37" pos:end="319:38">q1</name> <operator pos:start="319:40" pos:end="319:41">==</operator> <name pos:start="319:43" pos:end="319:47"><name pos:start="319:43" pos:end="319:43">v</name><operator pos:start="319:44" pos:end="319:45">-&gt;</operator><name pos:start="319:46" pos:end="319:47">pq</name></name><operator pos:start="319:48" pos:end="319:48">)</operator></expr> ?</condition><then pos:start="319:52" pos:end="319:60"> <expr pos:start="319:52" pos:end="319:60"><name pos:start="319:52" pos:end="319:60"><name pos:start="319:52" pos:end="319:52">v</name><operator pos:start="319:53" pos:end="319:54">-&gt;</operator><name pos:start="319:55" pos:end="319:60">halfpq</name></name></expr> </then><else pos:start="319:62" pos:end="319:64">: <expr pos:start="319:64" pos:end="319:64"><literal type="number" pos:start="319:64" pos:end="319:64">0</literal></expr></else></ternary><operator pos:start="319:65" pos:end="319:65">)</operator> <operator pos:start="319:67" pos:end="319:67">-</operator> <literal type="number" pos:start="319:69" pos:end="319:69">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="321:21" pos:end="321:70"><expr pos:start="321:21" pos:end="321:69"><name pos:start="321:21" pos:end="321:22">q2</name> <operator pos:start="321:24" pos:end="321:24">=</operator> <name pos:start="321:26" pos:end="321:27">q2</name> <operator pos:start="321:29" pos:end="321:29">*</operator> <literal type="number" pos:start="321:31" pos:end="321:33">2</literal> <operator pos:start="321:33" pos:end="321:33">+</operator> <operator pos:start="321:35" pos:end="321:35">(</operator><ternary pos:start="321:36" pos:end="321:64"><condition pos:start="321:36" pos:end="321:50"><expr pos:start="321:36" pos:end="321:48"><operator pos:start="321:36" pos:end="321:36">(</operator><name pos:start="321:37" pos:end="321:38">q2</name> <operator pos:start="321:40" pos:end="321:41">==</operator> <name pos:start="321:43" pos:end="321:47"><name pos:start="321:43" pos:end="321:43">v</name><operator pos:start="321:44" pos:end="321:45">-&gt;</operator><name pos:start="321:46" pos:end="321:47">pq</name></name><operator pos:start="321:48" pos:end="321:48">)</operator></expr> ?</condition><then pos:start="321:52" pos:end="321:60"> <expr pos:start="321:52" pos:end="321:60"><name pos:start="321:52" pos:end="321:60"><name pos:start="321:52" pos:end="321:52">v</name><operator pos:start="321:53" pos:end="321:54">-&gt;</operator><name pos:start="321:55" pos:end="321:60">halfpq</name></name></expr> </then><else pos:start="321:62" pos:end="321:64">: <expr pos:start="321:64" pos:end="321:64"><literal type="number" pos:start="321:64" pos:end="321:64">0</literal></expr></else></ternary><operator pos:start="321:65" pos:end="321:65">)</operator> <operator pos:start="321:67" pos:end="321:67">-</operator> <literal type="number" pos:start="321:69" pos:end="321:69">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="323:21" pos:end="325:51"><if pos:start="323:21" pos:end="325:51">if <condition pos:start="323:24" pos:end="323:31">(<expr pos:start="323:25" pos:end="323:30"><name pos:start="323:25" pos:end="323:26">q1</name> <operator pos:start="323:28" pos:end="323:28">&lt;</operator> <literal type="number" pos:start="323:30" pos:end="323:30">1</literal></expr>)</condition><block type="pseudo" pos:start="325:25" pos:end="325:51"><block_content pos:start="325:25" pos:end="325:51">

                        <return pos:start="325:25" pos:end="325:51">return <expr pos:start="325:32" pos:end="325:50"><name pos:start="325:32" pos:end="325:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <for pos:start="327:21" pos:end="329:96">for <control pos:start="327:25" pos:end="327:43">(<init pos:start="327:26" pos:end="327:31"><expr pos:start="327:26" pos:end="327:30"><name pos:start="327:26" pos:end="327:26">k</name> <operator pos:start="327:28" pos:end="327:28">=</operator> <literal type="number" pos:start="327:30" pos:end="327:30">1</literal></expr>;</init> <condition pos:start="327:33" pos:end="327:38"><expr pos:start="327:33" pos:end="327:37"><name pos:start="327:33" pos:end="327:33">k</name> <operator pos:start="327:35" pos:end="327:35">&lt;</operator> <literal type="number" pos:start="327:37" pos:end="327:37">8</literal></expr>;</condition> <incr pos:start="327:40" pos:end="327:42"><expr pos:start="327:40" pos:end="327:42"><name pos:start="327:40" pos:end="327:40">k</name><operator pos:start="327:41" pos:end="327:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="329:25" pos:end="329:96"><block_content pos:start="329:25" pos:end="329:96">

                        <expr_stmt pos:start="329:25" pos:end="329:96"><expr pos:start="329:25" pos:end="329:95"><name pos:start="329:25" pos:end="329:34"><name pos:start="329:25" pos:end="329:31">ac_val2</name><index pos:start="329:32" pos:end="329:34">[<expr pos:start="329:33" pos:end="329:33"><name pos:start="329:33" pos:end="329:33">k</name></expr>]</index></name> <operator pos:start="329:36" pos:end="329:36">=</operator> <operator pos:start="329:38" pos:end="329:38">(</operator><name pos:start="329:39" pos:end="329:48"><name pos:start="329:39" pos:end="329:45">ac_val2</name><index pos:start="329:46" pos:end="329:48">[<expr pos:start="329:47" pos:end="329:47"><name pos:start="329:47" pos:end="329:47">k</name></expr>]</index></name> <operator pos:start="329:50" pos:end="329:50">*</operator> <name pos:start="329:52" pos:end="329:53">q2</name> <operator pos:start="329:55" pos:end="329:55">*</operator> <name pos:start="329:57" pos:end="329:78"><name pos:start="329:57" pos:end="329:70">ff_vc1_dqscale</name><index pos:start="329:71" pos:end="329:78">[<expr pos:start="329:72" pos:end="329:77"><name pos:start="329:72" pos:end="329:73">q1</name> <operator pos:start="329:75" pos:end="329:75">-</operator> <literal type="number" pos:start="329:77" pos:end="329:77">1</literal></expr>]</index></name> <operator pos:start="329:80" pos:end="329:80">+</operator> <literal type="number" pos:start="329:82" pos:end="329:88">0x20000</literal><operator pos:start="329:89" pos:end="329:89">)</operator> <operator pos:start="329:91" pos:end="329:92">&gt;&gt;</operator> <literal type="number" pos:start="329:94" pos:end="329:95">18</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="335:11" pos:end="359:9">else <block pos:start="335:16" pos:end="359:9">{<block_content pos:start="337:13" pos:end="357:13"> <comment type="line" pos:start="335:18" pos:end="335:23">// top</comment>

            <if_stmt pos:start="337:13" pos:end="357:13"><if pos:start="337:13" pos:end="357:13">if <condition pos:start="337:16" pos:end="337:25">(<expr pos:start="337:17" pos:end="337:24"><name pos:start="337:17" pos:end="337:24">use_pred</name></expr>)</condition> <block pos:start="337:27" pos:end="357:13">{<block_content pos:start="339:17" pos:end="355:17">

                <expr_stmt pos:start="339:17" pos:end="339:55"><expr pos:start="339:17" pos:end="339:54"><call pos:start="339:17" pos:end="339:54"><name pos:start="339:17" pos:end="339:22">memcpy</name><argument_list pos:start="339:23" pos:end="339:54">(<argument pos:start="339:24" pos:end="339:34"><expr pos:start="339:24" pos:end="339:34"><name pos:start="339:24" pos:end="339:30">ac_val2</name> <operator pos:start="339:32" pos:end="339:32">+</operator> <literal type="number" pos:start="339:34" pos:end="339:34">8</literal></expr></argument>, <argument pos:start="339:37" pos:end="339:46"><expr pos:start="339:37" pos:end="339:46"><name pos:start="339:37" pos:end="339:42">ac_val</name> <operator pos:start="339:44" pos:end="339:44">+</operator> <literal type="number" pos:start="339:46" pos:end="339:46">8</literal></expr></argument>, <argument pos:start="339:49" pos:end="339:53"><expr pos:start="339:49" pos:end="339:53"><literal type="number" pos:start="339:49" pos:end="339:49">8</literal> <operator pos:start="339:51" pos:end="339:51">*</operator> <literal type="number" pos:start="339:53" pos:end="339:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="341:17" pos:end="355:17"><if pos:start="341:17" pos:end="355:17">if <condition pos:start="341:20" pos:end="341:35">(<expr pos:start="341:21" pos:end="341:34"><name pos:start="341:21" pos:end="341:22">q2</name> <operator pos:start="341:24" pos:end="341:25">&amp;&amp;</operator> <name pos:start="341:27" pos:end="341:28">q1</name> <operator pos:start="341:30" pos:end="341:31">!=</operator> <name pos:start="341:33" pos:end="341:34">q2</name></expr>)</condition> <block pos:start="341:37" pos:end="355:17">{<block_content pos:start="343:21" pos:end="353:104">

                    <expr_stmt pos:start="343:21" pos:end="343:70"><expr pos:start="343:21" pos:end="343:69"><name pos:start="343:21" pos:end="343:22">q1</name> <operator pos:start="343:24" pos:end="343:24">=</operator> <name pos:start="343:26" pos:end="343:27">q1</name> <operator pos:start="343:29" pos:end="343:29">*</operator> <literal type="number" pos:start="343:31" pos:end="343:33">2</literal> <operator pos:start="343:33" pos:end="343:33">+</operator> <operator pos:start="343:35" pos:end="343:35">(</operator><ternary pos:start="343:36" pos:end="343:64"><condition pos:start="343:36" pos:end="343:50"><expr pos:start="343:36" pos:end="343:48"><operator pos:start="343:36" pos:end="343:36">(</operator><name pos:start="343:37" pos:end="343:38">q1</name> <operator pos:start="343:40" pos:end="343:41">==</operator> <name pos:start="343:43" pos:end="343:47"><name pos:start="343:43" pos:end="343:43">v</name><operator pos:start="343:44" pos:end="343:45">-&gt;</operator><name pos:start="343:46" pos:end="343:47">pq</name></name><operator pos:start="343:48" pos:end="343:48">)</operator></expr> ?</condition><then pos:start="343:52" pos:end="343:60"> <expr pos:start="343:52" pos:end="343:60"><name pos:start="343:52" pos:end="343:60"><name pos:start="343:52" pos:end="343:52">v</name><operator pos:start="343:53" pos:end="343:54">-&gt;</operator><name pos:start="343:55" pos:end="343:60">halfpq</name></name></expr> </then><else pos:start="343:62" pos:end="343:64">: <expr pos:start="343:64" pos:end="343:64"><literal type="number" pos:start="343:64" pos:end="343:64">0</literal></expr></else></ternary><operator pos:start="343:65" pos:end="343:65">)</operator> <operator pos:start="343:67" pos:end="343:67">-</operator> <literal type="number" pos:start="343:69" pos:end="343:69">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="345:21" pos:end="345:70"><expr pos:start="345:21" pos:end="345:69"><name pos:start="345:21" pos:end="345:22">q2</name> <operator pos:start="345:24" pos:end="345:24">=</operator> <name pos:start="345:26" pos:end="345:27">q2</name> <operator pos:start="345:29" pos:end="345:29">*</operator> <literal type="number" pos:start="345:31" pos:end="345:33">2</literal> <operator pos:start="345:33" pos:end="345:33">+</operator> <operator pos:start="345:35" pos:end="345:35">(</operator><ternary pos:start="345:36" pos:end="345:64"><condition pos:start="345:36" pos:end="345:50"><expr pos:start="345:36" pos:end="345:48"><operator pos:start="345:36" pos:end="345:36">(</operator><name pos:start="345:37" pos:end="345:38">q2</name> <operator pos:start="345:40" pos:end="345:41">==</operator> <name pos:start="345:43" pos:end="345:47"><name pos:start="345:43" pos:end="345:43">v</name><operator pos:start="345:44" pos:end="345:45">-&gt;</operator><name pos:start="345:46" pos:end="345:47">pq</name></name><operator pos:start="345:48" pos:end="345:48">)</operator></expr> ?</condition><then pos:start="345:52" pos:end="345:60"> <expr pos:start="345:52" pos:end="345:60"><name pos:start="345:52" pos:end="345:60"><name pos:start="345:52" pos:end="345:52">v</name><operator pos:start="345:53" pos:end="345:54">-&gt;</operator><name pos:start="345:55" pos:end="345:60">halfpq</name></name></expr> </then><else pos:start="345:62" pos:end="345:64">: <expr pos:start="345:64" pos:end="345:64"><literal type="number" pos:start="345:64" pos:end="345:64">0</literal></expr></else></ternary><operator pos:start="345:65" pos:end="345:65">)</operator> <operator pos:start="345:67" pos:end="345:67">-</operator> <literal type="number" pos:start="345:69" pos:end="345:69">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="347:21" pos:end="349:51"><if pos:start="347:21" pos:end="349:51">if <condition pos:start="347:24" pos:end="347:31">(<expr pos:start="347:25" pos:end="347:30"><name pos:start="347:25" pos:end="347:26">q1</name> <operator pos:start="347:28" pos:end="347:28">&lt;</operator> <literal type="number" pos:start="347:30" pos:end="347:30">1</literal></expr>)</condition><block type="pseudo" pos:start="349:25" pos:end="349:51"><block_content pos:start="349:25" pos:end="349:51">

                        <return pos:start="349:25" pos:end="349:51">return <expr pos:start="349:32" pos:end="349:50"><name pos:start="349:32" pos:end="349:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <for pos:start="351:21" pos:end="353:104">for <control pos:start="351:25" pos:end="351:43">(<init pos:start="351:26" pos:end="351:31"><expr pos:start="351:26" pos:end="351:30"><name pos:start="351:26" pos:end="351:26">k</name> <operator pos:start="351:28" pos:end="351:28">=</operator> <literal type="number" pos:start="351:30" pos:end="351:30">1</literal></expr>;</init> <condition pos:start="351:33" pos:end="351:38"><expr pos:start="351:33" pos:end="351:37"><name pos:start="351:33" pos:end="351:33">k</name> <operator pos:start="351:35" pos:end="351:35">&lt;</operator> <literal type="number" pos:start="351:37" pos:end="351:37">8</literal></expr>;</condition> <incr pos:start="351:40" pos:end="351:42"><expr pos:start="351:40" pos:end="351:42"><name pos:start="351:40" pos:end="351:40">k</name><operator pos:start="351:41" pos:end="351:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="353:25" pos:end="353:104"><block_content pos:start="353:25" pos:end="353:104">

                        <expr_stmt pos:start="353:25" pos:end="353:104"><expr pos:start="353:25" pos:end="353:103"><name pos:start="353:25" pos:end="353:38"><name pos:start="353:25" pos:end="353:31">ac_val2</name><index pos:start="353:32" pos:end="353:38">[<expr pos:start="353:33" pos:end="353:37"><name pos:start="353:33" pos:end="353:33">k</name> <operator pos:start="353:35" pos:end="353:35">+</operator> <literal type="number" pos:start="353:37" pos:end="353:37">8</literal></expr>]</index></name> <operator pos:start="353:40" pos:end="353:40">=</operator> <operator pos:start="353:42" pos:end="353:42">(</operator><name pos:start="353:43" pos:end="353:56"><name pos:start="353:43" pos:end="353:49">ac_val2</name><index pos:start="353:50" pos:end="353:56">[<expr pos:start="353:51" pos:end="353:55"><name pos:start="353:51" pos:end="353:51">k</name> <operator pos:start="353:53" pos:end="353:53">+</operator> <literal type="number" pos:start="353:55" pos:end="353:55">8</literal></expr>]</index></name> <operator pos:start="353:58" pos:end="353:58">*</operator> <name pos:start="353:60" pos:end="353:61">q2</name> <operator pos:start="353:63" pos:end="353:63">*</operator> <name pos:start="353:65" pos:end="353:86"><name pos:start="353:65" pos:end="353:78">ff_vc1_dqscale</name><index pos:start="353:79" pos:end="353:86">[<expr pos:start="353:80" pos:end="353:85"><name pos:start="353:80" pos:end="353:81">q1</name> <operator pos:start="353:83" pos:end="353:83">-</operator> <literal type="number" pos:start="353:85" pos:end="353:85">1</literal></expr>]</index></name> <operator pos:start="353:88" pos:end="353:88">+</operator> <literal type="number" pos:start="353:90" pos:end="353:96">0x20000</literal><operator pos:start="353:97" pos:end="353:97">)</operator> <operator pos:start="353:99" pos:end="353:100">&gt;&gt;</operator> <literal type="number" pos:start="353:102" pos:end="353:103">18</literal></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="363:9" pos:end="363:43">/* apply AC prediction if needed */</comment>

        <if_stmt pos:start="365:9" pos:end="395:9"><if pos:start="365:9" pos:end="395:9">if <condition pos:start="365:12" pos:end="365:21">(<expr pos:start="365:13" pos:end="365:20"><name pos:start="365:13" pos:end="365:20">use_pred</name></expr>)</condition> <block pos:start="365:23" pos:end="395:9">{<block_content pos:start="367:13" pos:end="393:19">

            <if_stmt pos:start="367:13" pos:end="391:13"><if pos:start="367:13" pos:end="379:13">if <condition pos:start="367:16" pos:end="367:28">(<expr pos:start="367:17" pos:end="367:27"><name pos:start="367:17" pos:end="367:27">dc_pred_dir</name></expr>)</condition> <block pos:start="367:30" pos:end="379:13">{<block_content pos:start="369:17" pos:end="377:17"> <comment type="line" pos:start="367:32" pos:end="367:38">// left</comment>

                <for pos:start="369:17" pos:end="377:17">for <control pos:start="369:21" pos:end="369:39">(<init pos:start="369:22" pos:end="369:27"><expr pos:start="369:22" pos:end="369:26"><name pos:start="369:22" pos:end="369:22">k</name> <operator pos:start="369:24" pos:end="369:24">=</operator> <literal type="number" pos:start="369:26" pos:end="369:26">1</literal></expr>;</init> <condition pos:start="369:29" pos:end="369:34"><expr pos:start="369:29" pos:end="369:33"><name pos:start="369:29" pos:end="369:29">k</name> <operator pos:start="369:31" pos:end="369:31">&lt;</operator> <literal type="number" pos:start="369:33" pos:end="369:33">8</literal></expr>;</condition> <incr pos:start="369:36" pos:end="369:38"><expr pos:start="369:36" pos:end="369:38"><name pos:start="369:36" pos:end="369:36">k</name><operator pos:start="369:37" pos:end="369:38">++</operator></expr></incr>)</control> <block pos:start="369:41" pos:end="377:17">{<block_content pos:start="371:21" pos:end="375:106">

                    <expr_stmt pos:start="371:21" pos:end="371:68"><expr pos:start="371:21" pos:end="371:67"><name pos:start="371:21" pos:end="371:46"><name pos:start="371:21" pos:end="371:25">block</name><index pos:start="371:26" pos:end="371:46">[<expr pos:start="371:27" pos:end="371:45"><name pos:start="371:27" pos:end="371:27">k</name> <operator pos:start="371:29" pos:end="371:30">&lt;&lt;</operator> <name pos:start="371:32" pos:end="371:45"><name pos:start="371:32" pos:end="371:32">v</name><operator pos:start="371:33" pos:end="371:34">-&gt;</operator><name pos:start="371:35" pos:end="371:45">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="371:48" pos:end="371:48">=</operator> <name pos:start="371:50" pos:end="371:59"><name pos:start="371:50" pos:end="371:56">ac_val2</name><index pos:start="371:57" pos:end="371:59">[<expr pos:start="371:58" pos:end="371:58"><name pos:start="371:58" pos:end="371:58">k</name></expr>]</index></name> <operator pos:start="371:61" pos:end="371:61">*</operator> <name pos:start="371:63" pos:end="371:67">scale</name></expr>;</expr_stmt>

                    <if_stmt pos:start="373:21" pos:end="375:106"><if pos:start="373:21" pos:end="375:106">if <condition pos:start="373:24" pos:end="373:69">(<expr pos:start="373:25" pos:end="373:68"><operator pos:start="373:25" pos:end="373:25">!</operator><name pos:start="373:26" pos:end="373:38"><name pos:start="373:26" pos:end="373:26">v</name><operator pos:start="373:27" pos:end="373:28">-&gt;</operator><name pos:start="373:29" pos:end="373:38">pquantizer</name></name> <operator pos:start="373:40" pos:end="373:41">&amp;&amp;</operator> <name pos:start="373:43" pos:end="373:68"><name pos:start="373:43" pos:end="373:47">block</name><index pos:start="373:48" pos:end="373:68">[<expr pos:start="373:49" pos:end="373:67"><name pos:start="373:49" pos:end="373:49">k</name> <operator pos:start="373:51" pos:end="373:52">&lt;&lt;</operator> <name pos:start="373:54" pos:end="373:67"><name pos:start="373:54" pos:end="373:54">v</name><operator pos:start="373:55" pos:end="373:56">-&gt;</operator><name pos:start="373:57" pos:end="373:67">left_blk_sh</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="375:25" pos:end="375:106"><block_content pos:start="375:25" pos:end="375:106">

                        <expr_stmt pos:start="375:25" pos:end="375:106"><expr pos:start="375:25" pos:end="375:105"><name pos:start="375:25" pos:end="375:50"><name pos:start="375:25" pos:end="375:29">block</name><index pos:start="375:30" pos:end="375:50">[<expr pos:start="375:31" pos:end="375:49"><name pos:start="375:31" pos:end="375:31">k</name> <operator pos:start="375:33" pos:end="375:34">&lt;&lt;</operator> <name pos:start="375:36" pos:end="375:49"><name pos:start="375:36" pos:end="375:36">v</name><operator pos:start="375:37" pos:end="375:38">-&gt;</operator><name pos:start="375:39" pos:end="375:49">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="375:52" pos:end="375:53">+=</operator> <ternary pos:start="375:55" pos:end="375:105"><condition pos:start="375:55" pos:end="375:88"><expr pos:start="375:55" pos:end="375:86"><operator pos:start="375:55" pos:end="375:55">(</operator><name pos:start="375:56" pos:end="375:81"><name pos:start="375:56" pos:end="375:60">block</name><index pos:start="375:61" pos:end="375:81">[<expr pos:start="375:62" pos:end="375:80"><name pos:start="375:62" pos:end="375:62">k</name> <operator pos:start="375:64" pos:end="375:65">&lt;&lt;</operator> <name pos:start="375:67" pos:end="375:80"><name pos:start="375:67" pos:end="375:67">v</name><operator pos:start="375:68" pos:end="375:69">-&gt;</operator><name pos:start="375:70" pos:end="375:80">left_blk_sh</name></name></expr>]</index></name> <operator pos:start="375:83" pos:end="375:83">&lt;</operator> <literal type="number" pos:start="375:85" pos:end="375:85">0</literal><operator pos:start="375:86" pos:end="375:86">)</operator></expr> ?</condition><then pos:start="375:90" pos:end="375:96"> <expr pos:start="375:90" pos:end="375:96"><operator pos:start="375:90" pos:end="375:90">-</operator><name pos:start="375:91" pos:end="375:96">mquant</name></expr> </then><else pos:start="375:98" pos:end="375:105">: <expr pos:start="375:100" pos:end="375:105"><name pos:start="375:100" pos:end="375:105">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="379:15" pos:end="391:13">else <block pos:start="379:20" pos:end="391:13">{<block_content pos:start="381:17" pos:end="389:17"> <comment type="line" pos:start="379:22" pos:end="379:27">// top</comment>

                <for pos:start="381:17" pos:end="389:17">for <control pos:start="381:21" pos:end="381:39">(<init pos:start="381:22" pos:end="381:27"><expr pos:start="381:22" pos:end="381:26"><name pos:start="381:22" pos:end="381:22">k</name> <operator pos:start="381:24" pos:end="381:24">=</operator> <literal type="number" pos:start="381:26" pos:end="381:26">1</literal></expr>;</init> <condition pos:start="381:29" pos:end="381:34"><expr pos:start="381:29" pos:end="381:33"><name pos:start="381:29" pos:end="381:29">k</name> <operator pos:start="381:31" pos:end="381:31">&lt;</operator> <literal type="number" pos:start="381:33" pos:end="381:33">8</literal></expr>;</condition> <incr pos:start="381:36" pos:end="381:38"><expr pos:start="381:36" pos:end="381:38"><name pos:start="381:36" pos:end="381:36">k</name><operator pos:start="381:37" pos:end="381:38">++</operator></expr></incr>)</control> <block pos:start="381:41" pos:end="389:17">{<block_content pos:start="383:21" pos:end="387:104">

                    <expr_stmt pos:start="383:21" pos:end="383:71"><expr pos:start="383:21" pos:end="383:70"><name pos:start="383:21" pos:end="383:45"><name pos:start="383:21" pos:end="383:25">block</name><index pos:start="383:26" pos:end="383:45">[<expr pos:start="383:27" pos:end="383:44"><name pos:start="383:27" pos:end="383:27">k</name> <operator pos:start="383:29" pos:end="383:30">&lt;&lt;</operator> <name pos:start="383:32" pos:end="383:44"><name pos:start="383:32" pos:end="383:32">v</name><operator pos:start="383:33" pos:end="383:34">-&gt;</operator><name pos:start="383:35" pos:end="383:44">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="383:47" pos:end="383:47">=</operator> <name pos:start="383:49" pos:end="383:62"><name pos:start="383:49" pos:end="383:55">ac_val2</name><index pos:start="383:56" pos:end="383:62">[<expr pos:start="383:57" pos:end="383:61"><name pos:start="383:57" pos:end="383:57">k</name> <operator pos:start="383:59" pos:end="383:59">+</operator> <literal type="number" pos:start="383:61" pos:end="383:61">8</literal></expr>]</index></name> <operator pos:start="383:64" pos:end="383:64">*</operator> <name pos:start="383:66" pos:end="383:70">scale</name></expr>;</expr_stmt>

                    <if_stmt pos:start="385:21" pos:end="387:104"><if pos:start="385:21" pos:end="387:104">if <condition pos:start="385:24" pos:end="385:68">(<expr pos:start="385:25" pos:end="385:67"><operator pos:start="385:25" pos:end="385:25">!</operator><name pos:start="385:26" pos:end="385:38"><name pos:start="385:26" pos:end="385:26">v</name><operator pos:start="385:27" pos:end="385:28">-&gt;</operator><name pos:start="385:29" pos:end="385:38">pquantizer</name></name> <operator pos:start="385:40" pos:end="385:41">&amp;&amp;</operator> <name pos:start="385:43" pos:end="385:67"><name pos:start="385:43" pos:end="385:47">block</name><index pos:start="385:48" pos:end="385:67">[<expr pos:start="385:49" pos:end="385:66"><name pos:start="385:49" pos:end="385:49">k</name> <operator pos:start="385:51" pos:end="385:52">&lt;&lt;</operator> <name pos:start="385:54" pos:end="385:66"><name pos:start="385:54" pos:end="385:54">v</name><operator pos:start="385:55" pos:end="385:56">-&gt;</operator><name pos:start="385:57" pos:end="385:66">top_blk_sh</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="387:25" pos:end="387:104"><block_content pos:start="387:25" pos:end="387:104">

                        <expr_stmt pos:start="387:25" pos:end="387:104"><expr pos:start="387:25" pos:end="387:103"><name pos:start="387:25" pos:end="387:49"><name pos:start="387:25" pos:end="387:29">block</name><index pos:start="387:30" pos:end="387:49">[<expr pos:start="387:31" pos:end="387:48"><name pos:start="387:31" pos:end="387:31">k</name> <operator pos:start="387:33" pos:end="387:34">&lt;&lt;</operator> <name pos:start="387:36" pos:end="387:48"><name pos:start="387:36" pos:end="387:36">v</name><operator pos:start="387:37" pos:end="387:38">-&gt;</operator><name pos:start="387:39" pos:end="387:48">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="387:51" pos:end="387:52">+=</operator> <ternary pos:start="387:54" pos:end="387:103"><condition pos:start="387:54" pos:end="387:86"><expr pos:start="387:54" pos:end="387:84"><operator pos:start="387:54" pos:end="387:54">(</operator><name pos:start="387:55" pos:end="387:79"><name pos:start="387:55" pos:end="387:59">block</name><index pos:start="387:60" pos:end="387:79">[<expr pos:start="387:61" pos:end="387:78"><name pos:start="387:61" pos:end="387:61">k</name> <operator pos:start="387:63" pos:end="387:64">&lt;&lt;</operator> <name pos:start="387:66" pos:end="387:78"><name pos:start="387:66" pos:end="387:66">v</name><operator pos:start="387:67" pos:end="387:68">-&gt;</operator><name pos:start="387:69" pos:end="387:78">top_blk_sh</name></name></expr>]</index></name> <operator pos:start="387:81" pos:end="387:81">&lt;</operator> <literal type="number" pos:start="387:83" pos:end="387:83">0</literal><operator pos:start="387:84" pos:end="387:84">)</operator></expr> ?</condition><then pos:start="387:88" pos:end="387:94"> <expr pos:start="387:88" pos:end="387:94"><operator pos:start="387:88" pos:end="387:88">-</operator><name pos:start="387:89" pos:end="387:94">mquant</name></expr> </then><else pos:start="387:96" pos:end="387:103">: <expr pos:start="387:98" pos:end="387:103"><name pos:start="387:98" pos:end="387:103">mquant</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:19"><expr pos:start="393:13" pos:end="393:18"><name pos:start="393:13" pos:end="393:13">i</name> <operator pos:start="393:15" pos:end="393:15">=</operator> <literal type="number" pos:start="393:17" pos:end="393:18">63</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:31"><expr pos:start="399:5" pos:end="399:30"><name pos:start="399:5" pos:end="399:26"><name pos:start="399:5" pos:end="399:5">s</name><operator pos:start="399:6" pos:end="399:7">-&gt;</operator><name pos:start="399:8" pos:end="399:23">block_last_index</name><index pos:start="399:24" pos:end="399:26">[<expr pos:start="399:25" pos:end="399:25"><name pos:start="399:25" pos:end="399:25">n</name></expr>]</index></name> <operator pos:start="399:28" pos:end="399:28">=</operator> <name pos:start="399:30" pos:end="399:30">i</name></expr>;</expr_stmt>



    <return pos:start="403:5" pos:end="403:13">return <expr pos:start="403:12" pos:end="403:12"><literal type="number" pos:start="403:12" pos:end="403:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
