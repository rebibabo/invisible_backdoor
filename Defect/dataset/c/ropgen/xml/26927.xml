<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26927.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_rv34_decode_frame</name><parameter_list pos:start="1:25" pos:end="5:61">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:46"><decl pos:start="5:29" pos:end="5:46"><type pos:start="5:29" pos:end="5:46"><specifier pos:start="5:29" pos:end="5:33">const</specifier> <name pos:start="5:35" pos:end="5:41">uint8_t</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:46">buf</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:60"><decl pos:start="5:49" pos:end="5:60"><type pos:start="5:49" pos:end="5:60"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:60">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="165:1">{<block_content pos:start="9:5" pos:end="163:20">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">RV34DecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">r</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name> <init pos:start="11:23" pos:end="11:29">= <expr pos:start="11:25" pos:end="11:29"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:26">r</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">pict</name> <init pos:start="13:19" pos:end="13:24">= <expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">SliceInfo</name></type> <name pos:start="15:15" pos:end="15:16">si</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">slice_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:37"><decl pos:start="21:5" pos:end="21:36"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">uint8_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:29">slices_hdr</name> <init pos:start="21:31" pos:end="21:36">= <expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">last</name> <init pos:start="23:14" pos:end="23:16">= <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="29:5" pos:end="47:5"><if pos:start="29:5" pos:end="47:5">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:16">buf_size</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>)</condition> <block pos:start="29:24" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:17">

        <comment type="block" pos:start="31:9" pos:end="31:43">/* special case for last picture */</comment>

        <if_stmt pos:start="33:9" pos:end="43:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:51">(<expr pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">low_delay</name></name><operator pos:start="33:25" pos:end="33:26">==</operator><literal type="number" pos:start="33:27" pos:end="33:27">0</literal> <operator pos:start="33:29" pos:end="33:30">&amp;&amp;</operator> <name pos:start="33:32" pos:end="33:50"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:50">next_picture_ptr</name></name></expr>)</condition> <block pos:start="33:53" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:41">

            <expr_stmt pos:start="35:13" pos:end="35:50"><expr pos:start="35:13" pos:end="35:49"><operator pos:start="35:13" pos:end="35:13">*</operator><name pos:start="35:14" pos:end="35:17">pict</name><operator pos:start="35:18" pos:end="35:18">=</operator> <operator pos:start="35:20" pos:end="35:20">*</operator><operator pos:start="35:21" pos:end="35:21">(</operator><name pos:start="35:22" pos:end="35:28">AVFrame</name><operator pos:start="35:29" pos:end="35:29">*</operator><operator pos:start="35:30" pos:end="35:30">)</operator><name pos:start="35:31" pos:end="35:49"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:49">next_picture_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:38"><expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:31">next_picture_ptr</name></name><operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:37">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:22">data_size</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <sizeof pos:start="41:26" pos:end="41:40">sizeof<argument_list pos:start="41:32" pos:end="41:40">(<argument pos:start="41:33" pos:end="41:39"><expr pos:start="41:33" pos:end="41:39"><name pos:start="41:33" pos:end="41:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="61:41"><if pos:start="51:5" pos:end="59:5">if<condition pos:start="51:7" pos:end="51:27">(<expr pos:start="51:8" pos:end="51:26"><operator pos:start="51:8" pos:end="51:8">!</operator><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:13">avctx</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:26">slice_count</name></name></expr>)</condition><block pos:start="51:28" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:31">

        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:19">slice_count</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <operator pos:start="53:23" pos:end="53:23">(</operator><operator pos:start="53:24" pos:end="53:24">*</operator><name pos:start="53:25" pos:end="53:27">buf</name><operator pos:start="53:28" pos:end="53:29">++</operator><operator pos:start="53:30" pos:end="53:30">)</operator> <operator pos:start="53:32" pos:end="53:32">+</operator> <literal type="number" pos:start="53:34" pos:end="53:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:18">slices_hdr</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:24">buf</name> <operator pos:start="55:26" pos:end="55:26">+</operator> <literal type="number" pos:start="55:28" pos:end="55:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:11">buf</name> <operator pos:start="57:13" pos:end="57:14">+=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">8</literal> <operator pos:start="57:18" pos:end="57:18">*</operator> <name pos:start="57:20" pos:end="57:30">slice_count</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="59:6" pos:end="61:41">else<block type="pseudo" pos:start="61:9" pos:end="61:41"><block_content pos:start="61:9" pos:end="61:41">

        <expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:19">slice_count</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:40"><name pos:start="61:23" pos:end="61:27">avctx</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:40">slice_count</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="65:5" pos:end="125:5">for<control pos:start="65:8" pos:end="65:32">(<init pos:start="65:9" pos:end="65:12"><expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:9">i</name><operator pos:start="65:10" pos:end="65:10">=</operator><literal type="number" pos:start="65:11" pos:end="65:11">0</literal></expr>;</init> <condition pos:start="65:14" pos:end="65:27"><expr pos:start="65:14" pos:end="65:26"><name pos:start="65:14" pos:end="65:14">i</name><operator pos:start="65:15" pos:end="65:15">&lt;</operator><name pos:start="65:16" pos:end="65:26">slice_count</name></expr>;</condition> <incr pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:29">i</name><operator pos:start="65:30" pos:end="65:31">++</operator></expr></incr>)</control><block pos:start="65:33" pos:end="125:5">{<block_content pos:start="67:9" pos:end="123:18">

        <decl_stmt pos:start="67:9" pos:end="67:59"><decl pos:start="67:9" pos:end="67:58"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:18">offset</name><init pos:start="67:19" pos:end="67:58">= <expr pos:start="67:21" pos:end="67:58"><call pos:start="67:21" pos:end="67:58"><name pos:start="67:21" pos:end="67:36">get_slice_offset</name><argument_list pos:start="67:37" pos:end="67:58">(<argument pos:start="67:38" pos:end="67:42"><expr pos:start="67:38" pos:end="67:42"><name pos:start="67:38" pos:end="67:42">avctx</name></expr></argument>, <argument pos:start="67:45" pos:end="67:54"><expr pos:start="67:45" pos:end="67:54"><name pos:start="67:45" pos:end="67:54">slices_hdr</name></expr></argument>, <argument pos:start="67:57" pos:end="67:57"><expr pos:start="67:57" pos:end="67:57"><name pos:start="67:57" pos:end="67:57">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:17"><decl pos:start="69:9" pos:end="69:16"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:16">size</name></decl>;</decl_stmt>

        <if_stmt pos:start="71:9" pos:end="77:68"><if pos:start="71:9" pos:end="73:36">if<condition pos:start="71:11" pos:end="71:30">(<expr pos:start="71:12" pos:end="71:29"><name pos:start="71:12" pos:end="71:12">i</name><operator pos:start="71:13" pos:end="71:13">+</operator><literal type="number" pos:start="71:14" pos:end="71:14">1</literal> <operator pos:start="71:16" pos:end="71:17">==</operator> <name pos:start="71:19" pos:end="71:29">slice_count</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:36"><block_content pos:start="73:13" pos:end="73:36">

            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:16">size</name><operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:26">buf_size</name> <operator pos:start="73:28" pos:end="73:28">-</operator> <name pos:start="73:30" pos:end="73:35">offset</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="75:9" pos:end="77:68">else<block type="pseudo" pos:start="77:13" pos:end="77:68"><block_content pos:start="77:13" pos:end="77:68">

            <expr_stmt pos:start="77:13" pos:end="77:68"><expr pos:start="77:13" pos:end="77:67"><name pos:start="77:13" pos:end="77:16">size</name><operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:58"><name pos:start="77:19" pos:end="77:34">get_slice_offset</name><argument_list pos:start="77:35" pos:end="77:58">(<argument pos:start="77:36" pos:end="77:40"><expr pos:start="77:36" pos:end="77:40"><name pos:start="77:36" pos:end="77:40">avctx</name></expr></argument>, <argument pos:start="77:43" pos:end="77:52"><expr pos:start="77:43" pos:end="77:52"><name pos:start="77:43" pos:end="77:52">slices_hdr</name></expr></argument>, <argument pos:start="77:55" pos:end="77:57"><expr pos:start="77:55" pos:end="77:57"><name pos:start="77:55" pos:end="77:55">i</name><operator pos:start="77:56" pos:end="77:56">+</operator><literal type="number" pos:start="77:57" pos:end="77:57">1</literal></expr></argument>)</argument_list></call> <operator pos:start="77:60" pos:end="77:60">-</operator> <name pos:start="77:62" pos:end="77:67">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if<condition pos:start="81:11" pos:end="81:29">(<expr pos:start="81:12" pos:end="81:28"><name pos:start="81:12" pos:end="81:17">offset</name> <operator pos:start="81:19" pos:end="81:19">&gt;</operator> <name pos:start="81:21" pos:end="81:28">buf_size</name></expr>)</condition><block pos:start="81:30" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:18">

            <expr_stmt pos:start="83:13" pos:end="83:85"><expr pos:start="83:13" pos:end="83:84"><call pos:start="83:13" pos:end="83:84"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="83:84">(<argument pos:start="83:20" pos:end="83:24"><expr pos:start="83:20" pos:end="83:24"><name pos:start="83:20" pos:end="83:24">avctx</name></expr></argument>, <argument pos:start="83:27" pos:end="83:38"><expr pos:start="83:27" pos:end="83:38"><name pos:start="83:27" pos:end="83:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:41" pos:end="83:83"><expr pos:start="83:41" pos:end="83:83"><literal type="string" pos:start="83:41" pos:end="83:83">"Slice offset is greater than frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:9">r</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:13">si</name><operator pos:start="91:14" pos:end="91:14">.</operator><name pos:start="91:15" pos:end="91:17">end</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:31"><name pos:start="91:21" pos:end="91:21">s</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:31">mb_width</name></name> <operator pos:start="91:33" pos:end="91:33">*</operator> <name pos:start="91:35" pos:end="91:46"><name pos:start="91:35" pos:end="91:35">s</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:46">mb_height</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="111:9"><if pos:start="93:9" pos:end="111:9">if<condition pos:start="93:11" pos:end="93:29">(<expr pos:start="93:12" pos:end="93:28"><name pos:start="93:12" pos:end="93:12">i</name><operator pos:start="93:13" pos:end="93:13">+</operator><literal type="number" pos:start="93:14" pos:end="93:14">1</literal> <operator pos:start="93:16" pos:end="93:16">&lt;</operator> <name pos:start="93:18" pos:end="93:28">slice_count</name></expr>)</condition><block pos:start="93:30" pos:end="111:9">{<block_content pos:start="95:13" pos:end="109:37">

            <expr_stmt pos:start="95:13" pos:end="95:135"><expr pos:start="95:13" pos:end="95:134"><call pos:start="95:13" pos:end="95:134"><name pos:start="95:13" pos:end="95:25">init_get_bits</name><argument_list pos:start="95:26" pos:end="95:134">(<argument pos:start="95:27" pos:end="95:32"><expr pos:start="95:27" pos:end="95:32"><operator pos:start="95:27" pos:end="95:27">&amp;</operator><name pos:start="95:28" pos:end="95:32"><name pos:start="95:28" pos:end="95:28">s</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:32">gb</name></name></expr></argument>, <argument pos:start="95:35" pos:end="95:78"><expr pos:start="95:35" pos:end="95:78"><name pos:start="95:35" pos:end="95:37">buf</name><operator pos:start="95:38" pos:end="95:38">+</operator><call pos:start="95:39" pos:end="95:78"><name pos:start="95:39" pos:end="95:54">get_slice_offset</name><argument_list pos:start="95:55" pos:end="95:78">(<argument pos:start="95:56" pos:end="95:60"><expr pos:start="95:56" pos:end="95:60"><name pos:start="95:56" pos:end="95:60">avctx</name></expr></argument>, <argument pos:start="95:63" pos:end="95:72"><expr pos:start="95:63" pos:end="95:72"><name pos:start="95:63" pos:end="95:72">slices_hdr</name></expr></argument>, <argument pos:start="95:75" pos:end="95:77"><expr pos:start="95:75" pos:end="95:77"><name pos:start="95:75" pos:end="95:75">i</name><operator pos:start="95:76" pos:end="95:76">+</operator><literal type="number" pos:start="95:77" pos:end="95:77">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:81" pos:end="95:133"><expr pos:start="95:81" pos:end="95:133"><operator pos:start="95:81" pos:end="95:81">(</operator><name pos:start="95:82" pos:end="95:89">buf_size</name><operator pos:start="95:90" pos:end="95:90">-</operator><call pos:start="95:91" pos:end="95:130"><name pos:start="95:91" pos:end="95:106">get_slice_offset</name><argument_list pos:start="95:107" pos:end="95:130">(<argument pos:start="95:108" pos:end="95:112"><expr pos:start="95:108" pos:end="95:112"><name pos:start="95:108" pos:end="95:112">avctx</name></expr></argument>, <argument pos:start="95:115" pos:end="95:124"><expr pos:start="95:115" pos:end="95:124"><name pos:start="95:115" pos:end="95:124">slices_hdr</name></expr></argument>, <argument pos:start="95:127" pos:end="95:129"><expr pos:start="95:127" pos:end="95:129"><name pos:start="95:127" pos:end="95:127">i</name><operator pos:start="95:128" pos:end="95:128">+</operator><literal type="number" pos:start="95:129" pos:end="95:129">1</literal></expr></argument>)</argument_list></call><operator pos:start="95:131" pos:end="95:131">)</operator><operator pos:start="95:132" pos:end="95:132">*</operator><literal type="number" pos:start="95:133" pos:end="95:133">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="109:37"><if pos:start="97:13" pos:end="107:13">if<condition pos:start="97:15" pos:end="97:59">(<expr pos:start="97:16" pos:end="97:58"><call pos:start="97:16" pos:end="97:54"><name pos:start="97:16" pos:end="97:36"><name pos:start="97:16" pos:end="97:16">r</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:36">parse_slice_header</name></name><argument_list pos:start="97:37" pos:end="97:54">(<argument pos:start="97:38" pos:end="97:38"><expr pos:start="97:38" pos:end="97:38"><name pos:start="97:38" pos:end="97:38">r</name></expr></argument>, <argument pos:start="97:41" pos:end="97:48"><expr pos:start="97:41" pos:end="97:48"><operator pos:start="97:41" pos:end="97:41">&amp;</operator><name pos:start="97:42" pos:end="97:48"><name pos:start="97:42" pos:end="97:42">r</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:45">s</name><operator pos:start="97:46" pos:end="97:46">.</operator><name pos:start="97:47" pos:end="97:48">gb</name></name></expr></argument>, <argument pos:start="97:51" pos:end="97:53"><expr pos:start="97:51" pos:end="97:53"><operator pos:start="97:51" pos:end="97:51">&amp;</operator><name pos:start="97:52" pos:end="97:53">si</name></expr></argument>)</argument_list></call> <operator pos:start="97:56" pos:end="97:56">&lt;</operator> <literal type="number" pos:start="97:58" pos:end="97:58">0</literal></expr>)</condition><block pos:start="97:60" pos:end="107:13">{<block_content pos:start="99:17" pos:end="105:45">

                <if_stmt pos:start="99:17" pos:end="105:45"><if pos:start="99:17" pos:end="101:77">if<condition pos:start="99:19" pos:end="99:37">(<expr pos:start="99:20" pos:end="99:36"><name pos:start="99:20" pos:end="99:20">i</name><operator pos:start="99:21" pos:end="99:21">+</operator><literal type="number" pos:start="99:22" pos:end="99:22">2</literal> <operator pos:start="99:24" pos:end="99:24">&lt;</operator> <name pos:start="99:26" pos:end="99:36">slice_count</name></expr>)</condition><block type="pseudo" pos:start="101:21" pos:end="101:77"><block_content pos:start="101:21" pos:end="101:77">

                    <expr_stmt pos:start="101:21" pos:end="101:77"><expr pos:start="101:21" pos:end="101:76"><name pos:start="101:21" pos:end="101:24">size</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <call pos:start="101:28" pos:end="101:67"><name pos:start="101:28" pos:end="101:43">get_slice_offset</name><argument_list pos:start="101:44" pos:end="101:67">(<argument pos:start="101:45" pos:end="101:49"><expr pos:start="101:45" pos:end="101:49"><name pos:start="101:45" pos:end="101:49">avctx</name></expr></argument>, <argument pos:start="101:52" pos:end="101:61"><expr pos:start="101:52" pos:end="101:61"><name pos:start="101:52" pos:end="101:61">slices_hdr</name></expr></argument>, <argument pos:start="101:64" pos:end="101:66"><expr pos:start="101:64" pos:end="101:66"><name pos:start="101:64" pos:end="101:64">i</name><operator pos:start="101:65" pos:end="101:65">+</operator><literal type="number" pos:start="101:66" pos:end="101:66">2</literal></expr></argument>)</argument_list></call> <operator pos:start="101:69" pos:end="101:69">-</operator> <name pos:start="101:71" pos:end="101:76">offset</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="103:17" pos:end="105:45">else<block type="pseudo" pos:start="105:21" pos:end="105:45"><block_content pos:start="105:21" pos:end="105:45">

                    <expr_stmt pos:start="105:21" pos:end="105:45"><expr pos:start="105:21" pos:end="105:44"><name pos:start="105:21" pos:end="105:24">size</name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:35">buf_size</name> <operator pos:start="105:37" pos:end="105:37">-</operator> <name pos:start="105:39" pos:end="105:44">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if><else pos:start="107:14" pos:end="109:37">else<block type="pseudo" pos:start="109:17" pos:end="109:37"><block_content pos:start="109:17" pos:end="109:37">

                <expr_stmt pos:start="109:17" pos:end="109:37"><expr pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:25"><name pos:start="109:17" pos:end="109:17">r</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:21">si</name><operator pos:start="109:22" pos:end="109:22">.</operator><name pos:start="109:23" pos:end="109:25">end</name></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <name pos:start="109:29" pos:end="109:36"><name pos:start="109:29" pos:end="109:30">si</name><operator pos:start="109:31" pos:end="109:31">.</operator><name pos:start="109:32" pos:end="109:36">start</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="113:9" pos:end="115:22"><if pos:start="113:9" pos:end="115:22">if<condition pos:start="113:11" pos:end="113:97">(<expr pos:start="113:12" pos:end="113:96"><operator pos:start="113:12" pos:end="113:12">!</operator><name pos:start="113:13" pos:end="113:13">i</name> <operator pos:start="113:15" pos:end="113:16">&amp;&amp;</operator> <name pos:start="113:18" pos:end="113:24"><name pos:start="113:18" pos:end="113:19">si</name><operator pos:start="113:20" pos:end="113:20">.</operator><name pos:start="113:21" pos:end="113:24">type</name></name> <operator pos:start="113:26" pos:end="113:27">==</operator> <name pos:start="113:29" pos:end="113:37">FF_B_TYPE</name> <operator pos:start="113:39" pos:end="113:40">&amp;&amp;</operator> <operator pos:start="113:42" pos:end="113:42">(</operator><operator pos:start="113:43" pos:end="113:43">!</operator><name pos:start="113:44" pos:end="113:62"><name pos:start="113:44" pos:end="113:44">s</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:62">last_picture_ptr</name></name> <operator pos:start="113:64" pos:end="113:65">||</operator> <operator pos:start="113:67" pos:end="113:67">!</operator><name pos:start="113:68" pos:end="113:95"><name pos:start="113:68" pos:end="113:68">s</name><operator pos:start="113:69" pos:end="113:70">-&gt;</operator><name pos:start="113:71" pos:end="113:86">last_picture_ptr</name><operator pos:start="113:87" pos:end="113:88">-&gt;</operator><name pos:start="113:89" pos:end="113:92">data</name><index pos:start="113:93" pos:end="113:95">[<expr pos:start="113:94" pos:end="113:94"><literal type="number" pos:start="113:94" pos:end="113:94">0</literal></expr>]</index></name><operator pos:start="113:96" pos:end="113:96">)</operator></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:22"><block_content pos:start="115:13" pos:end="115:22">

            <return pos:start="115:13" pos:end="115:22">return <expr pos:start="115:20" pos:end="115:21"><operator pos:start="115:20" pos:end="115:20">-</operator><literal type="number" pos:start="115:21" pos:end="115:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:67"><expr pos:start="117:9" pos:end="117:66"><name pos:start="117:9" pos:end="117:12">last</name> <operator pos:start="117:14" pos:end="117:14">=</operator> <call pos:start="117:16" pos:end="117:66"><name pos:start="117:16" pos:end="117:32">rv34_decode_slice</name><argument_list pos:start="117:33" pos:end="117:66">(<argument pos:start="117:34" pos:end="117:34"><expr pos:start="117:34" pos:end="117:34"><name pos:start="117:34" pos:end="117:34">r</name></expr></argument>, <argument pos:start="117:37" pos:end="117:45"><expr pos:start="117:37" pos:end="117:45"><name pos:start="117:37" pos:end="117:45"><name pos:start="117:37" pos:end="117:37">r</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:41">si</name><operator pos:start="117:42" pos:end="117:42">.</operator><name pos:start="117:43" pos:end="117:45">end</name></name></expr></argument>, <argument pos:start="117:48" pos:end="117:59"><expr pos:start="117:48" pos:end="117:59"><name pos:start="117:48" pos:end="117:50">buf</name> <operator pos:start="117:52" pos:end="117:52">+</operator> <name pos:start="117:54" pos:end="117:59">offset</name></expr></argument>, <argument pos:start="117:62" pos:end="117:65"><expr pos:start="117:62" pos:end="117:65"><name pos:start="117:62" pos:end="117:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:75"><expr pos:start="119:9" pos:end="119:74"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:22">mb_num_left</name></name> <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:34"><name pos:start="119:26" pos:end="119:26">r</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:29">s</name><operator pos:start="119:30" pos:end="119:30">.</operator><name pos:start="119:31" pos:end="119:34">mb_x</name></name> <operator pos:start="119:36" pos:end="119:36">+</operator> <name pos:start="119:38" pos:end="119:46"><name pos:start="119:38" pos:end="119:38">r</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:41">s</name><operator pos:start="119:42" pos:end="119:42">.</operator><name pos:start="119:43" pos:end="119:46">mb_y</name></name><operator pos:start="119:47" pos:end="119:47">*</operator><name pos:start="119:48" pos:end="119:60"><name pos:start="119:48" pos:end="119:48">r</name><operator pos:start="119:49" pos:end="119:50">-&gt;</operator><name pos:start="119:51" pos:end="119:51">s</name><operator pos:start="119:52" pos:end="119:52">.</operator><name pos:start="119:53" pos:end="119:60">mb_width</name></name> <operator pos:start="119:62" pos:end="119:62">-</operator> <name pos:start="119:64" pos:end="119:74"><name pos:start="119:64" pos:end="119:64">r</name><operator pos:start="119:65" pos:end="119:66">-&gt;</operator><name pos:start="119:67" pos:end="119:68">si</name><operator pos:start="119:69" pos:end="119:69">.</operator><name pos:start="119:70" pos:end="119:74">start</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:18"><if pos:start="121:9" pos:end="123:18">if<condition pos:start="121:11" pos:end="121:16">(<expr pos:start="121:12" pos:end="121:15"><name pos:start="121:12" pos:end="121:15">last</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:18"><block_content pos:start="123:13" pos:end="123:18">

            <break pos:start="123:13" pos:end="123:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="129:5" pos:end="161:5"><if pos:start="129:5" pos:end="161:5">if<condition pos:start="129:7" pos:end="129:12">(<expr pos:start="129:8" pos:end="129:11"><name pos:start="129:8" pos:end="129:11">last</name></expr>)</condition><block pos:start="129:13" pos:end="161:5">{<block_content pos:start="131:9" pos:end="159:37">

        <if_stmt pos:start="131:9" pos:end="133:48"><if pos:start="131:9" pos:end="133:48">if<condition pos:start="131:11" pos:end="131:26">(<expr pos:start="131:12" pos:end="131:25"><name pos:start="131:12" pos:end="131:25"><name pos:start="131:12" pos:end="131:12">r</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:25">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:48"><block_content pos:start="133:13" pos:end="133:48">

            <expr_stmt pos:start="133:13" pos:end="133:48"><expr pos:start="133:13" pos:end="133:47"><call pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:26"><name pos:start="133:13" pos:end="133:13">r</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:26">loop_filter</name></name><argument_list pos:start="133:27" pos:end="133:47">(<argument pos:start="133:28" pos:end="133:28"><expr pos:start="133:28" pos:end="133:28"><name pos:start="133:28" pos:end="133:28">r</name></expr></argument>, <argument pos:start="133:31" pos:end="133:46"><expr pos:start="133:31" pos:end="133:46"><name pos:start="133:31" pos:end="133:42"><name pos:start="133:31" pos:end="133:31">s</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:42">mb_height</name></name> <operator pos:start="133:44" pos:end="133:44">-</operator> <literal type="number" pos:start="133:46" pos:end="133:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:27"><expr pos:start="135:9" pos:end="135:26"><call pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:23">ff_er_frame_end</name><argument_list pos:start="135:24" pos:end="135:26">(<argument pos:start="135:25" pos:end="135:25"><expr pos:start="135:25" pos:end="135:25"><name pos:start="135:25" pos:end="135:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:25"><expr pos:start="137:9" pos:end="137:24"><call pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:21">MPV_frame_end</name><argument_list pos:start="137:22" pos:end="137:24">(<argument pos:start="137:23" pos:end="137:23"><expr pos:start="137:23" pos:end="137:23"><name pos:start="137:23" pos:end="137:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="147:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:54">(<expr pos:start="139:13" pos:end="139:53"><name pos:start="139:13" pos:end="139:24"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:24">pict_type</name></name> <operator pos:start="139:26" pos:end="139:27">==</operator> <name pos:start="139:29" pos:end="139:37">FF_B_TYPE</name> <operator pos:start="139:39" pos:end="139:40">||</operator> <name pos:start="139:42" pos:end="139:53"><name pos:start="139:42" pos:end="139:42">s</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:53">low_delay</name></name></expr>)</condition> <block pos:start="139:56" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:53">

            <expr_stmt pos:start="141:13" pos:end="141:53"><expr pos:start="141:13" pos:end="141:52"><operator pos:start="141:13" pos:end="141:13">*</operator><name pos:start="141:14" pos:end="141:17">pict</name><operator pos:start="141:18" pos:end="141:18">=</operator> <operator pos:start="141:20" pos:end="141:20">*</operator><operator pos:start="141:21" pos:end="141:21">(</operator><name pos:start="141:22" pos:end="141:28">AVFrame</name><operator pos:start="141:29" pos:end="141:29">*</operator><operator pos:start="141:30" pos:end="141:30">)</operator><name pos:start="141:31" pos:end="141:52"><name pos:start="141:31" pos:end="141:31">s</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:52">current_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="143:11" pos:end="147:9">else if <condition pos:start="143:19" pos:end="143:47">(<expr pos:start="143:20" pos:end="143:46"><name pos:start="143:20" pos:end="143:38"><name pos:start="143:20" pos:end="143:20">s</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:38">last_picture_ptr</name></name> <operator pos:start="143:40" pos:end="143:41">!=</operator> <name pos:start="143:43" pos:end="143:46">NULL</name></expr>)</condition> <block pos:start="143:49" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:50">

            <expr_stmt pos:start="145:13" pos:end="145:50"><expr pos:start="145:13" pos:end="145:49"><operator pos:start="145:13" pos:end="145:13">*</operator><name pos:start="145:14" pos:end="145:17">pict</name><operator pos:start="145:18" pos:end="145:18">=</operator> <operator pos:start="145:20" pos:end="145:20">*</operator><operator pos:start="145:21" pos:end="145:21">(</operator><name pos:start="145:22" pos:end="145:28">AVFrame</name><operator pos:start="145:29" pos:end="145:29">*</operator><operator pos:start="145:30" pos:end="145:30">)</operator><name pos:start="145:31" pos:end="145:49"><name pos:start="145:31" pos:end="145:31">s</name><operator pos:start="145:32" pos:end="145:33">-&gt;</operator><name pos:start="145:34" pos:end="145:49">last_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="151:9" pos:end="157:9"><if pos:start="151:9" pos:end="157:9">if<condition pos:start="151:11" pos:end="151:47">(<expr pos:start="151:12" pos:end="151:46"><name pos:start="151:12" pos:end="151:30"><name pos:start="151:12" pos:end="151:12">s</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:30">last_picture_ptr</name></name> <operator pos:start="151:32" pos:end="151:33">||</operator> <name pos:start="151:35" pos:end="151:46"><name pos:start="151:35" pos:end="151:35">s</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:46">low_delay</name></name></expr>)</condition><block pos:start="151:48" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:41">

            <expr_stmt pos:start="153:13" pos:end="153:41"><expr pos:start="153:13" pos:end="153:40"><operator pos:start="153:13" pos:end="153:13">*</operator><name pos:start="153:14" pos:end="153:22">data_size</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <sizeof pos:start="153:26" pos:end="153:40">sizeof<argument_list pos:start="153:32" pos:end="153:40">(<argument pos:start="153:33" pos:end="153:39"><expr pos:start="153:33" pos:end="153:39"><name pos:start="153:33" pos:end="153:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:41"><expr pos:start="155:13" pos:end="155:40"><call pos:start="155:13" pos:end="155:40"><name pos:start="155:13" pos:end="155:31">ff_print_debug_info</name><argument_list pos:start="155:32" pos:end="155:40">(<argument pos:start="155:33" pos:end="155:33"><expr pos:start="155:33" pos:end="155:33"><name pos:start="155:33" pos:end="155:33">s</name></expr></argument>, <argument pos:start="155:36" pos:end="155:39"><expr pos:start="155:36" pos:end="155:39"><name pos:start="155:36" pos:end="155:39">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:37"><expr pos:start="159:9" pos:end="159:36"><name pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:30">current_picture_ptr</name></name><operator pos:start="159:31" pos:end="159:31">=</operator> <name pos:start="159:33" pos:end="159:36">NULL</name></expr>;</expr_stmt> <comment type="line" pos:start="159:39" pos:end="159:112">//so we can detect if frame_end wasnt called (find some nicer solution...)</comment>

    </block_content>}</block></if></if_stmt>

    <return pos:start="163:5" pos:end="163:20">return <expr pos:start="163:12" pos:end="163:19"><name pos:start="163:12" pos:end="163:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
