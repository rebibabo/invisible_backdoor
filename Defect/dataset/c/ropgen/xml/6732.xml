<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6732.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">rtp_check_and_send_back_rr</name><parameter_list pos:start="1:31" pos:end="1:61">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">RTPDemuxContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:60"><decl pos:start="1:52" pos:end="1:60"><type pos:start="1:52" pos:end="1:60"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:60">count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name></type> <name pos:start="5:19" pos:end="5:20">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">rtcp_bytes</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:19">rtp_ctx</name></name> <operator pos:start="15:21" pos:end="15:22">||</operator> <operator pos:start="15:24" pos:end="15:24">(</operator><name pos:start="15:25" pos:end="15:29">count</name> <operator pos:start="15:31" pos:end="15:31">&lt;</operator> <literal type="number" pos:start="15:33" pos:end="15:33">1</literal><operator pos:start="15:34" pos:end="15:34">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:62">/* XXX: mpeg pts hardcoded. RTCP send every 0.5 seconds */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:18">octet_count</name></name> <operator pos:start="23:20" pos:end="23:21">+=</operator> <name pos:start="23:23" pos:end="23:27">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:26"><expr pos:start="25:5" pos:end="27:25"><name pos:start="25:5" pos:end="25:14">rtcp_bytes</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <operator pos:start="25:18" pos:end="25:18">(</operator><operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:33"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:33">octet_count</name></name> <operator pos:start="25:35" pos:end="25:35">-</operator> <name pos:start="25:37" pos:end="25:55"><name pos:start="25:37" pos:end="25:37">s</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:55">last_octet_count</name></name><operator pos:start="25:56" pos:end="25:56">)</operator> <operator pos:start="25:58" pos:end="25:58">*</operator> <name pos:start="25:60" pos:end="25:76">RTCP_TX_RATIO_NUM</name><operator pos:start="25:77" pos:end="25:77">)</operator> <operator pos:start="25:79" pos:end="25:79">/</operator>

        <name pos:start="27:9" pos:end="27:25">RTCP_TX_RATIO_DEN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:14">rtcp_bytes</name> <operator pos:start="29:16" pos:end="29:17">/=</operator> <literal type="number" pos:start="29:19" pos:end="29:20">50</literal></expr>;</expr_stmt> <comment type="line" pos:start="29:23" pos:end="29:84">// mmu_man: that's enough for me... VLC sends much less btw !?</comment>

    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:18">rtcp_bytes</name> <operator pos:start="31:20" pos:end="31:20">&lt;</operator> <literal type="number" pos:start="31:22" pos:end="31:23">28</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:23">last_octet_count</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:40"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:40">octet_count</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:34">(<expr pos:start="39:9" pos:end="39:33"><call pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:24">url_open_dyn_buf</name><argument_list pos:start="39:25" pos:end="39:29">(<argument pos:start="39:26" pos:end="39:28"><expr pos:start="39:26" pos:end="39:28"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:28">pb</name></expr></argument>)</argument_list></call> <operator pos:start="39:31" pos:end="39:31">&lt;</operator> <literal type="number" pos:start="39:33" pos:end="39:33">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="45:5" pos:end="45:22">// Receiver Report</comment>

    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><call pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:12">put_byte</name><argument_list pos:start="47:13" pos:end="47:41">(<argument pos:start="47:14" pos:end="47:16"><expr pos:start="47:14" pos:end="47:16"><operator pos:start="47:14" pos:end="47:14">&amp;</operator><name pos:start="47:15" pos:end="47:16">pb</name></expr></argument>, <argument pos:start="47:19" pos:end="47:40"><expr pos:start="47:19" pos:end="47:40"><operator pos:start="47:19" pos:end="47:19">(</operator><name pos:start="47:20" pos:end="47:30">RTP_VERSION</name> <operator pos:start="47:32" pos:end="47:33">&lt;&lt;</operator> <literal type="number" pos:start="47:35" pos:end="47:35">6</literal><operator pos:start="47:36" pos:end="47:36">)</operator> <operator pos:start="47:38" pos:end="47:38">+</operator> <literal type="number" pos:start="47:40" pos:end="47:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="47:44" pos:end="47:63">/* 1 report block */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><call pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:12">put_byte</name><argument_list pos:start="49:13" pos:end="49:22">(<argument pos:start="49:14" pos:end="49:16"><expr pos:start="49:14" pos:end="49:16"><operator pos:start="49:14" pos:end="49:14">&amp;</operator><name pos:start="49:15" pos:end="49:16">pb</name></expr></argument>, <argument pos:start="49:19" pos:end="49:21"><expr pos:start="49:19" pos:end="49:21"><literal type="number" pos:start="49:19" pos:end="49:21">201</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><call pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:12">put_be16</name><argument_list pos:start="51:13" pos:end="51:20">(<argument pos:start="51:14" pos:end="51:16"><expr pos:start="51:14" pos:end="51:16"><operator pos:start="51:14" pos:end="51:14">&amp;</operator><name pos:start="51:15" pos:end="51:16">pb</name></expr></argument>, <argument pos:start="51:19" pos:end="51:19"><expr pos:start="51:19" pos:end="51:19"><literal type="number" pos:start="51:19" pos:end="51:19">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:23" pos:end="51:47">/* length in words - 1 */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><call pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:12">put_be32</name><argument_list pos:start="53:13" pos:end="53:26">(<argument pos:start="53:14" pos:end="53:16"><expr pos:start="53:14" pos:end="53:16"><operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:16">pb</name></expr></argument>, <argument pos:start="53:19" pos:end="53:25"><expr pos:start="53:19" pos:end="53:25"><name pos:start="53:19" pos:end="53:25"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:25">ssrc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="53:29" pos:end="53:43">// our own SSRC</comment>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><call pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:12">put_be32</name><argument_list pos:start="55:13" pos:end="55:26">(<argument pos:start="55:14" pos:end="55:16"><expr pos:start="55:14" pos:end="55:16"><operator pos:start="55:14" pos:end="55:14">&amp;</operator><name pos:start="55:15" pos:end="55:16">pb</name></expr></argument>, <argument pos:start="55:19" pos:end="55:25"><expr pos:start="55:19" pos:end="55:25"><name pos:start="55:19" pos:end="55:25"><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:25">ssrc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="55:29" pos:end="55:64">// XXX: should be the server's here!</comment>

    <comment type="line" pos:start="57:5" pos:end="57:49">// some placeholders we should really fill...</comment>

    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><call pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:12">put_be32</name><argument_list pos:start="59:13" pos:end="59:48">(<argument pos:start="59:14" pos:end="59:16"><expr pos:start="59:14" pos:end="59:16"><operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:16">pb</name></expr></argument>, <argument pos:start="59:19" pos:end="59:47"><expr pos:start="59:19" pos:end="59:47"><operator pos:start="59:19" pos:end="59:19">(</operator><operator pos:start="59:20" pos:end="59:20">(</operator><literal type="number" pos:start="59:21" pos:end="59:21">0</literal> <operator pos:start="59:23" pos:end="59:24">&lt;&lt;</operator> <literal type="number" pos:start="59:26" pos:end="59:27">24</literal><operator pos:start="59:28" pos:end="59:28">)</operator> <operator pos:start="59:30" pos:end="59:30">|</operator> <operator pos:start="59:32" pos:end="59:32">(</operator><literal type="number" pos:start="59:33" pos:end="59:33">0</literal> <operator pos:start="59:35" pos:end="59:35">&amp;</operator> <literal type="number" pos:start="59:37" pos:end="59:45">0x0ffffff</literal><operator pos:start="59:46" pos:end="59:46">)</operator><operator pos:start="59:47" pos:end="59:47">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:51" pos:end="59:77">/* 0% lost, total 0 lost */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:38"><expr pos:start="61:5" pos:end="61:37"><call pos:start="61:5" pos:end="61:37"><name pos:start="61:5" pos:end="61:12">put_be32</name><argument_list pos:start="61:13" pos:end="61:37">(<argument pos:start="61:14" pos:end="61:16"><expr pos:start="61:14" pos:end="61:16"><operator pos:start="61:14" pos:end="61:14">&amp;</operator><name pos:start="61:15" pos:end="61:16">pb</name></expr></argument>, <argument pos:start="61:19" pos:end="61:36"><expr pos:start="61:19" pos:end="61:36"><operator pos:start="61:19" pos:end="61:19">(</operator><literal type="number" pos:start="61:20" pos:end="61:20">0</literal> <operator pos:start="61:22" pos:end="61:23">&lt;&lt;</operator> <literal type="number" pos:start="61:25" pos:end="61:26">16</literal><operator pos:start="61:27" pos:end="61:27">)</operator> <operator pos:start="61:29" pos:end="61:29">|</operator> <name pos:start="61:31" pos:end="61:36"><name pos:start="61:31" pos:end="61:31">s</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:36">seq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:24"><expr pos:start="63:5" pos:end="63:23"><call pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:12">put_be32</name><argument_list pos:start="63:13" pos:end="63:23">(<argument pos:start="63:14" pos:end="63:16"><expr pos:start="63:14" pos:end="63:16"><operator pos:start="63:14" pos:end="63:14">&amp;</operator><name pos:start="63:15" pos:end="63:16">pb</name></expr></argument>, <argument pos:start="63:19" pos:end="63:22"><expr pos:start="63:19" pos:end="63:22"><literal type="number" pos:start="63:19" pos:end="63:22">0x68</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:26" pos:end="63:37">/* jitter */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><call pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:12">put_be32</name><argument_list pos:start="65:13" pos:end="65:21">(<argument pos:start="65:14" pos:end="65:16"><expr pos:start="65:14" pos:end="65:16"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>, <argument pos:start="65:19" pos:end="65:20"><expr pos:start="65:19" pos:end="65:20"><operator pos:start="65:19" pos:end="65:19">-</operator><literal type="number" pos:start="65:20" pos:end="65:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:24" pos:end="65:46">/* last SR timestamp */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:21"><expr pos:start="67:5" pos:end="67:20"><call pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:12">put_be32</name><argument_list pos:start="67:13" pos:end="67:20">(<argument pos:start="67:14" pos:end="67:16"><expr pos:start="67:14" pos:end="67:16"><operator pos:start="67:14" pos:end="67:14">&amp;</operator><name pos:start="67:15" pos:end="67:16">pb</name></expr></argument>, <argument pos:start="67:19" pos:end="67:19"><expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:23" pos:end="67:47">/* delay since last SR */</comment>



    <comment type="line" pos:start="71:5" pos:end="71:12">// CNAME</comment>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><call pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:12">put_byte</name><argument_list pos:start="73:13" pos:end="73:41">(<argument pos:start="73:14" pos:end="73:16"><expr pos:start="73:14" pos:end="73:16"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:16">pb</name></expr></argument>, <argument pos:start="73:19" pos:end="73:40"><expr pos:start="73:19" pos:end="73:40"><operator pos:start="73:19" pos:end="73:19">(</operator><name pos:start="73:20" pos:end="73:30">RTP_VERSION</name> <operator pos:start="73:32" pos:end="73:33">&lt;&lt;</operator> <literal type="number" pos:start="73:35" pos:end="73:35">6</literal><operator pos:start="73:36" pos:end="73:36">)</operator> <operator pos:start="73:38" pos:end="73:38">+</operator> <literal type="number" pos:start="73:40" pos:end="73:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:44" pos:end="73:63">/* 1 report block */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><call pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:12">put_byte</name><argument_list pos:start="75:13" pos:end="75:22">(<argument pos:start="75:14" pos:end="75:16"><expr pos:start="75:14" pos:end="75:16"><operator pos:start="75:14" pos:end="75:14">&amp;</operator><name pos:start="75:15" pos:end="75:16">pb</name></expr></argument>, <argument pos:start="75:19" pos:end="75:21"><expr pos:start="75:19" pos:end="75:21"><literal type="number" pos:start="75:19" pos:end="75:21">202</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:30"><expr pos:start="77:5" pos:end="77:29"><name pos:start="77:5" pos:end="77:7">len</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:29"><name pos:start="77:11" pos:end="77:16">strlen</name><argument_list pos:start="77:17" pos:end="77:29">(<argument pos:start="77:18" pos:end="77:28"><expr pos:start="77:18" pos:end="77:28"><name pos:start="77:18" pos:end="77:28"><name pos:start="77:18" pos:end="77:18">s</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:28">hostname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><call pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:12">put_be16</name><argument_list pos:start="79:13" pos:end="79:36">(<argument pos:start="79:14" pos:end="79:16"><expr pos:start="79:14" pos:end="79:16"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:16">pb</name></expr></argument>, <argument pos:start="79:19" pos:end="79:35"><expr pos:start="79:19" pos:end="79:35"><operator pos:start="79:19" pos:end="79:19">(</operator><literal type="number" pos:start="79:20" pos:end="79:22">6</literal> <operator pos:start="79:22" pos:end="79:22">+</operator> <name pos:start="79:24" pos:end="79:26">len</name> <operator pos:start="79:28" pos:end="79:28">+</operator> <literal type="number" pos:start="79:30" pos:end="79:30">3</literal><operator pos:start="79:31" pos:end="79:31">)</operator> <operator pos:start="79:33" pos:end="79:33">/</operator> <literal type="number" pos:start="79:35" pos:end="79:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:39" pos:end="79:63">/* length in words - 1 */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><call pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:12">put_be32</name><argument_list pos:start="81:13" pos:end="81:26">(<argument pos:start="81:14" pos:end="81:16"><expr pos:start="81:14" pos:end="81:16"><operator pos:start="81:14" pos:end="81:14">&amp;</operator><name pos:start="81:15" pos:end="81:16">pb</name></expr></argument>, <argument pos:start="81:19" pos:end="81:25"><expr pos:start="81:19" pos:end="81:25"><name pos:start="81:19" pos:end="81:25"><name pos:start="81:19" pos:end="81:19">s</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:25">ssrc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:24"><expr pos:start="83:5" pos:end="83:23"><call pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:12">put_byte</name><argument_list pos:start="83:13" pos:end="83:23">(<argument pos:start="83:14" pos:end="83:16"><expr pos:start="83:14" pos:end="83:16"><operator pos:start="83:14" pos:end="83:14">&amp;</operator><name pos:start="83:15" pos:end="83:16">pb</name></expr></argument>, <argument pos:start="83:19" pos:end="83:22"><expr pos:start="83:19" pos:end="83:22"><literal type="number" pos:start="83:19" pos:end="83:22">0x01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:23"><expr pos:start="85:5" pos:end="85:22"><call pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:12">put_byte</name><argument_list pos:start="85:13" pos:end="85:22">(<argument pos:start="85:14" pos:end="85:16"><expr pos:start="85:14" pos:end="85:16"><operator pos:start="85:14" pos:end="85:14">&amp;</operator><name pos:start="85:15" pos:end="85:16">pb</name></expr></argument>, <argument pos:start="85:19" pos:end="85:21"><expr pos:start="85:19" pos:end="85:21"><name pos:start="85:19" pos:end="85:21">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><call pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:14">put_buffer</name><argument_list pos:start="87:15" pos:end="87:37">(<argument pos:start="87:16" pos:end="87:18"><expr pos:start="87:16" pos:end="87:18"><operator pos:start="87:16" pos:end="87:16">&amp;</operator><name pos:start="87:17" pos:end="87:18">pb</name></expr></argument>, <argument pos:start="87:21" pos:end="87:31"><expr pos:start="87:21" pos:end="87:31"><name pos:start="87:21" pos:end="87:31"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:31">hostname</name></name></expr></argument>, <argument pos:start="87:34" pos:end="87:36"><expr pos:start="87:34" pos:end="87:36"><name pos:start="87:34" pos:end="87:36">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="89:5" pos:end="89:14">// padding</comment>

    <for pos:start="91:5" pos:end="95:5">for <control pos:start="91:9" pos:end="91:45">(<init pos:start="91:10" pos:end="91:29"><expr pos:start="91:10" pos:end="91:28"><name pos:start="91:10" pos:end="91:12">len</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <operator pos:start="91:16" pos:end="91:16">(</operator><literal type="number" pos:start="91:17" pos:end="91:19">6</literal> <operator pos:start="91:19" pos:end="91:19">+</operator> <name pos:start="91:21" pos:end="91:23">len</name><operator pos:start="91:24" pos:end="91:24">)</operator> <operator pos:start="91:26" pos:end="91:26">%</operator> <literal type="number" pos:start="91:28" pos:end="91:28">4</literal></expr>;</init> <condition pos:start="91:31" pos:end="91:38"><expr pos:start="91:31" pos:end="91:37"><name pos:start="91:31" pos:end="91:33">len</name> <operator pos:start="91:35" pos:end="91:35">%</operator> <literal type="number" pos:start="91:37" pos:end="91:37">4</literal></expr>;</condition> <incr pos:start="91:40" pos:end="91:44"><expr pos:start="91:40" pos:end="91:44"><name pos:start="91:40" pos:end="91:42">len</name><operator pos:start="91:43" pos:end="91:44">++</operator></expr></incr>)</control> <block pos:start="91:47" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:25">

        <expr_stmt pos:start="93:9" pos:end="93:25"><expr pos:start="93:9" pos:end="93:24"><call pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:16">put_byte</name><argument_list pos:start="93:17" pos:end="93:24">(<argument pos:start="93:18" pos:end="93:20"><expr pos:start="93:18" pos:end="93:20"><operator pos:start="93:18" pos:end="93:18">&amp;</operator><name pos:start="93:19" pos:end="93:20">pb</name></expr></argument>, <argument pos:start="93:23" pos:end="93:23"><expr pos:start="93:23" pos:end="93:23"><literal type="number" pos:start="93:23" pos:end="93:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="99:5" pos:end="99:26"><expr pos:start="99:5" pos:end="99:25"><call pos:start="99:5" pos:end="99:25"><name pos:start="99:5" pos:end="99:20">put_flush_packet</name><argument_list pos:start="99:21" pos:end="99:25">(<argument pos:start="99:22" pos:end="99:24"><expr pos:start="99:22" pos:end="99:24"><operator pos:start="99:22" pos:end="99:22">&amp;</operator><name pos:start="99:23" pos:end="99:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:39"><expr pos:start="101:5" pos:end="101:38"><name pos:start="101:5" pos:end="101:7">len</name> <operator pos:start="101:9" pos:end="101:9">=</operator> <call pos:start="101:11" pos:end="101:38"><name pos:start="101:11" pos:end="101:27">url_close_dyn_buf</name><argument_list pos:start="101:28" pos:end="101:38">(<argument pos:start="101:29" pos:end="101:31"><expr pos:start="101:29" pos:end="101:31"><operator pos:start="101:29" pos:end="101:29">&amp;</operator><name pos:start="101:30" pos:end="101:31">pb</name></expr></argument>, <argument pos:start="101:34" pos:end="101:37"><expr pos:start="101:34" pos:end="101:37"><operator pos:start="101:34" pos:end="101:34">&amp;</operator><name pos:start="101:35" pos:end="101:37">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="115:5"><if pos:start="103:5" pos:end="115:5">if <condition pos:start="103:8" pos:end="103:25">(<expr pos:start="103:9" pos:end="103:24"><operator pos:start="103:9" pos:end="103:9">(</operator><name pos:start="103:10" pos:end="103:12">len</name> <operator pos:start="103:14" pos:end="103:14">&gt;</operator> <literal type="number" pos:start="103:16" pos:end="103:16">0</literal><operator pos:start="103:17" pos:end="103:17">)</operator> <operator pos:start="103:19" pos:end="103:20">&amp;&amp;</operator> <name pos:start="103:22" pos:end="103:24">buf</name></expr>)</condition> <block pos:start="103:27" pos:end="115:5">{<block_content pos:start="107:9" pos:end="113:21">

<cpp:if pos:start="105:1" pos:end="105:18">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:18"><call pos:start="105:5" pos:end="105:18"><name pos:start="105:5" pos:end="105:11">defined</name><argument_list pos:start="105:12" pos:end="105:18">(<argument pos:start="105:13" pos:end="105:17"><expr pos:start="105:13" pos:end="105:17"><name pos:start="105:13" pos:end="105:17">DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="107:9" pos:end="110:0"><expr pos:start="107:9" pos:end="107:47"><call pos:start="107:9" pos:end="107:47"><name pos:start="107:9" pos:end="107:14">printf</name><argument_list pos:start="107:15" pos:end="107:47">(<argument pos:start="107:16" pos:end="107:41"><expr pos:start="107:16" pos:end="107:41"><literal type="string" pos:start="107:16" pos:end="107:41">"sending %d bytes of RR\n"</literal></expr></argument>, <argument pos:start="107:44" pos:end="107:46"><expr pos:start="107:44" pos:end="107:46"><name pos:start="107:44" pos:end="107:46">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="111:9" pos:end="111:40"><expr pos:start="111:9" pos:end="111:39"><call pos:start="111:9" pos:end="111:39"><name pos:start="111:9" pos:end="111:17">url_write</name><argument_list pos:start="111:18" pos:end="111:39">(<argument pos:start="111:19" pos:end="111:28"><expr pos:start="111:19" pos:end="111:28"><name pos:start="111:19" pos:end="111:28"><name pos:start="111:19" pos:end="111:19">s</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:28">rtp_ctx</name></name></expr></argument>, <argument pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:33">buf</name></expr></argument>, <argument pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><name pos:start="111:36" pos:end="111:38">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:21"><expr pos:start="113:9" pos:end="113:20"><call pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:15">av_free</name><argument_list pos:start="113:16" pos:end="113:20">(<argument pos:start="113:17" pos:end="113:19"><expr pos:start="113:17" pos:end="113:19"><name pos:start="113:17" pos:end="113:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
