<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11862.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">probe_group_enter</name><parameter_list pos:start="1:30" pos:end="1:57">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:46"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">name</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:56"><decl pos:start="1:49" pos:end="1:56"><type pos:start="1:49" pos:end="1:56"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:56">type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:69">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:17">count</name> <init pos:start="5:19" pos:end="5:22">= <expr pos:start="5:21" pos:end="5:22"><operator pos:start="5:21" pos:end="5:21">-</operator><literal type="number" pos:start="5:22" pos:end="5:22">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:73"><expr pos:start="9:5" pos:end="11:72"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:8">octx</name><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:15">prefix</name></name> <operator pos:start="9:17" pos:end="9:17">=</operator>

        <call pos:start="11:9" pos:end="11:72"><name pos:start="11:9" pos:end="11:18">av_realloc</name><argument_list pos:start="11:19" pos:end="11:72">(<argument pos:start="11:20" pos:end="11:30"><expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:23">octx</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:30">prefix</name></name></expr></argument>, <argument pos:start="11:33" pos:end="11:71"><expr pos:start="11:33" pos:end="11:71"><sizeof pos:start="11:33" pos:end="11:52">sizeof<argument_list pos:start="11:39" pos:end="11:52">(<argument pos:start="11:40" pos:end="11:51"><expr pos:start="11:40" pos:end="11:51"><name pos:start="11:40" pos:end="11:51">PrintElement</name></expr></argument>)</argument_list></sizeof> <operator pos:start="11:54" pos:end="11:54">*</operator> <operator pos:start="11:56" pos:end="11:56">(</operator><name pos:start="11:57" pos:end="11:66"><name pos:start="11:57" pos:end="11:60">octx</name><operator pos:start="11:61" pos:end="11:61">.</operator><name pos:start="11:62" pos:end="11:66">level</name></name> <operator pos:start="11:68" pos:end="11:68">+</operator> <literal type="number" pos:start="11:70" pos:end="11:70">1</literal><operator pos:start="11:71" pos:end="11:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:30">(<expr pos:start="15:9" pos:end="15:29"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:20"><name pos:start="15:10" pos:end="15:13">octx</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:20">prefix</name></name> <operator pos:start="15:22" pos:end="15:23">||</operator> <operator pos:start="15:25" pos:end="15:25">!</operator><name pos:start="15:26" pos:end="15:29">name</name></expr>)</condition> <block pos:start="15:32" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:16">

        <expr_stmt pos:start="17:9" pos:end="17:43"><expr pos:start="17:9" pos:end="17:42"><call pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:42">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:41"><expr pos:start="17:25" pos:end="17:41"><literal type="string" pos:start="17:25" pos:end="17:41">"Out of memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><call pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">exit</name><argument_list pos:start="19:13" pos:end="19:15">(<argument pos:start="19:14" pos:end="19:14"><expr pos:start="19:14" pos:end="19:14"><literal type="number" pos:start="19:14" pos:end="19:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:19">(<expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:12">octx</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:18">level</name></name></expr>)</condition> <block pos:start="25:21" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:27">

        <decl_stmt pos:start="27:9" pos:end="27:59"><decl pos:start="27:9" pos:end="27:58"><type pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:20">PrintElement</name> <modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:28">parent</name> <init pos:start="27:30" pos:end="27:58">= <expr pos:start="27:32" pos:end="27:58"><name pos:start="27:32" pos:end="27:42"><name pos:start="27:32" pos:end="27:35">octx</name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:42">prefix</name></name> <operator pos:start="27:44" pos:end="27:44">+</operator> <name pos:start="27:46" pos:end="27:55"><name pos:start="27:46" pos:end="27:49">octx</name><operator pos:start="27:50" pos:end="27:50">.</operator><name pos:start="27:51" pos:end="27:55">level</name></name> <operator pos:start="27:57" pos:end="27:57">-</operator><literal type="number" pos:start="27:58" pos:end="27:58">1</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="29:9" pos:end="31:37"><if pos:start="29:9" pos:end="31:37">if <condition pos:start="29:12" pos:end="29:34">(<expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:18">parent</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:24">type</name></name> <operator pos:start="29:26" pos:end="29:27">==</operator> <name pos:start="29:29" pos:end="29:33">ARRAY</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:37"><block_content pos:start="31:13" pos:end="31:37">

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:17">count</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:26">parent</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:36">nb_elems</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:14">parent</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:24">nb_elems</name></name><operator pos:start="33:25" pos:end="33:26">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:69"><expr pos:start="39:5" pos:end="39:68"><name pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:8">octx</name><operator pos:start="39:9" pos:end="39:9">.</operator><name pos:start="39:10" pos:end="39:15">prefix</name><index pos:start="39:16" pos:end="39:29">[<expr pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:20">octx</name><operator pos:start="39:21" pos:end="39:21">.</operator><name pos:start="39:22" pos:end="39:26">level</name></name><operator pos:start="39:27" pos:end="39:28">++</operator></expr>]</index></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <operator pos:start="39:33" pos:end="39:33">(</operator><name pos:start="39:34" pos:end="39:45">PrintElement</name><operator pos:start="39:46" pos:end="39:46">)</operator><block pos:start="39:47" pos:end="39:68">{<expr pos:start="39:48" pos:end="39:51"><name pos:start="39:48" pos:end="39:51">name</name></expr>, <expr pos:start="39:54" pos:end="39:57"><name pos:start="39:54" pos:end="39:57">type</name></expr>, <expr pos:start="39:60" pos:end="39:64"><name pos:start="39:60" pos:end="39:64">count</name></expr>, <expr pos:start="39:67" pos:end="39:67"><literal type="number" pos:start="39:67" pos:end="39:67">0</literal></expr>}</block></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
