<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22631.c" pos:tabs="8"><function pos:start="1:1" pos:end="617:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stsd</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:69">MOV_atom_t</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="617:1">{<block_content pos:start="5:5" pos:end="615:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name> <init pos:start="7:26" pos:end="7:40">= <expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:29">st</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">j</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:18">entries</name></decl>, <decl pos:start="9:21" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:36">pseudo_stream_id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><call pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">get_byte</name><argument_list pos:start="13:13" pos:end="13:16">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:19" pos:end="13:31">/* version */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><call pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">get_be24</name><argument_list pos:start="15:13" pos:end="15:16">(<argument pos:start="15:14" pos:end="15:15"><expr pos:start="15:14" pos:end="15:15"><name pos:start="15:14" pos:end="15:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:19" pos:end="15:29">/* flags */</comment>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:11">entries</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:22">get_be32</name><argument_list pos:start="19:23" pos:end="19:26">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="519:5">for<control pos:start="23:8" pos:end="23:73">(<init pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:24">pseudo_stream_id</name><operator pos:start="23:25" pos:end="23:25">=</operator><literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr>;</init> <condition pos:start="23:29" pos:end="23:53"><expr pos:start="23:29" pos:end="23:52"><name pos:start="23:29" pos:end="23:44">pseudo_stream_id</name><operator pos:start="23:45" pos:end="23:45">&lt;</operator><name pos:start="23:46" pos:end="23:52">entries</name></expr>;</condition> <incr pos:start="23:55" pos:end="23:72"><expr pos:start="23:55" pos:end="23:72"><name pos:start="23:55" pos:end="23:70">pseudo_stream_id</name><operator pos:start="23:71" pos:end="23:72">++</operator></expr></incr>)</control> <block pos:start="23:75" pos:end="519:5">{<block_content pos:start="27:9" pos:end="517:34">

        <comment type="line" pos:start="25:9" pos:end="25:42">//Parsing Sample description table</comment>

        <decl_stmt pos:start="27:9" pos:end="27:24"><decl pos:start="27:9" pos:end="27:23"><type pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:12">enum</name> <name pos:start="27:14" pos:end="27:20">CodecID</name></name></type> <name pos:start="27:22" pos:end="27:23">id</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:20"><decl pos:start="29:9" pos:end="29:19"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:19">dref_id</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:35"><decl pos:start="31:9" pos:end="31:34"><type pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:18">MOV_atom_t</name></type> <name pos:start="31:20" pos:end="31:20">a</name> <init pos:start="31:22" pos:end="31:34">= <expr pos:start="31:24" pos:end="31:34"><block pos:start="31:24" pos:end="31:34">{ <expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr>, <expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>, <expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:43"><decl pos:start="33:9" pos:end="33:42"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">offset_t</name></type> <name pos:start="33:18" pos:end="33:26">start_pos</name> <init pos:start="33:28" pos:end="33:42">= <expr pos:start="33:30" pos:end="33:42"><call pos:start="33:30" pos:end="33:42"><name pos:start="33:30" pos:end="33:38">url_ftell</name><argument_list pos:start="33:39" pos:end="33:42">(<argument pos:start="33:40" pos:end="33:41"><expr pos:start="33:40" pos:end="33:41"><name pos:start="33:40" pos:end="33:41">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:32"><decl pos:start="35:9" pos:end="35:31"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:16">size</name> <init pos:start="35:18" pos:end="35:31">= <expr pos:start="35:20" pos:end="35:31"><call pos:start="35:20" pos:end="35:31"><name pos:start="35:20" pos:end="35:27">get_be32</name><argument_list pos:start="35:28" pos:end="35:31">(<argument pos:start="35:29" pos:end="35:30"><expr pos:start="35:29" pos:end="35:30"><name pos:start="35:29" pos:end="35:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="35:34" pos:end="35:43">/* size */</comment>

        <decl_stmt pos:start="37:9" pos:end="37:39"><decl pos:start="37:9" pos:end="37:38"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">uint32_t</name></type> <name pos:start="37:18" pos:end="37:23">format</name> <init pos:start="37:25" pos:end="37:38">= <expr pos:start="37:27" pos:end="37:38"><call pos:start="37:27" pos:end="37:38"><name pos:start="37:27" pos:end="37:34">get_le32</name><argument_list pos:start="37:35" pos:end="37:38">(<argument pos:start="37:36" pos:end="37:37"><expr pos:start="37:36" pos:end="37:37"><name pos:start="37:36" pos:end="37:37">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="37:41" pos:end="37:57">/* data format */</comment>



        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><call pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:16">get_be32</name><argument_list pos:start="41:17" pos:end="41:20">(<argument pos:start="41:18" pos:end="41:19"><expr pos:start="41:18" pos:end="41:19"><name pos:start="41:18" pos:end="41:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:23" pos:end="41:36">/* reserved */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><call pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:16">get_be16</name><argument_list pos:start="43:17" pos:end="43:20">(<argument pos:start="43:18" pos:end="43:19"><expr pos:start="43:18" pos:end="43:19"><name pos:start="43:18" pos:end="43:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="43:23" pos:end="43:36">/* reserved */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:15">dref_id</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:30"><name pos:start="45:19" pos:end="45:26">get_be16</name><argument_list pos:start="45:27" pos:end="45:30">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="71:9"><if pos:start="49:9" pos:end="71:9">if <condition pos:start="49:12" pos:end="57:12">(<expr pos:start="49:13" pos:end="55:84"><name pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:14">st</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">codec</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:32">codec_tag</name></name> <operator pos:start="49:34" pos:end="49:35">&amp;&amp;</operator>

            <name pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:14">st</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">codec</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:32">codec_tag</name></name> <operator pos:start="51:34" pos:end="51:35">!=</operator> <name pos:start="51:37" pos:end="51:42">format</name> <operator pos:start="51:44" pos:end="51:45">&amp;&amp;</operator>

            <operator pos:start="53:13" pos:end="53:13">(</operator><ternary pos:start="53:14" pos:end="55:83"><condition pos:start="53:14" pos:end="53:36"><expr pos:start="53:14" pos:end="53:34"><name pos:start="53:14" pos:end="53:34"><name pos:start="53:14" pos:end="53:14">c</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:18">fc</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:34">video_codec_id</name></name></expr> ?</condition><then pos:start="53:38" pos:end="53:103"> <expr pos:start="53:38" pos:end="53:103"><call pos:start="53:38" pos:end="53:78"><name pos:start="53:38" pos:end="53:49">codec_get_id</name><argument_list pos:start="53:50" pos:end="53:78">(<argument pos:start="53:51" pos:end="53:69"><expr pos:start="53:51" pos:end="53:69"><name pos:start="53:51" pos:end="53:69">codec_movvideo_tags</name></expr></argument>, <argument pos:start="53:72" pos:end="53:77"><expr pos:start="53:72" pos:end="53:77"><name pos:start="53:72" pos:end="53:77">format</name></expr></argument>)</argument_list></call> <operator pos:start="53:80" pos:end="53:81">!=</operator> <name pos:start="53:83" pos:end="53:103"><name pos:start="53:83" pos:end="53:83">c</name><operator pos:start="53:84" pos:end="53:85">-&gt;</operator><name pos:start="53:86" pos:end="53:87">fc</name><operator pos:start="53:88" pos:end="53:89">-&gt;</operator><name pos:start="53:90" pos:end="53:103">video_codec_id</name></name></expr>

                                   </then><else pos:start="55:36" pos:end="55:83">: <expr pos:start="55:38" pos:end="55:83"><name pos:start="55:38" pos:end="55:57"><name pos:start="55:38" pos:end="55:39">st</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:46">codec</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:57">codec_tag</name></name> <operator pos:start="55:59" pos:end="55:60">!=</operator> <call pos:start="55:62" pos:end="55:83"><name pos:start="55:62" pos:end="55:66">MKTAG</name><argument_list pos:start="55:67" pos:end="55:83">(<argument pos:start="55:68" pos:end="55:70"><expr pos:start="55:68" pos:end="55:70"><literal type="char" pos:start="55:68" pos:end="55:70">'j'</literal></expr></argument>,<argument pos:start="55:72" pos:end="55:74"><expr pos:start="55:72" pos:end="55:74"><literal type="char" pos:start="55:72" pos:end="55:74">'p'</literal></expr></argument>,<argument pos:start="55:76" pos:end="55:78"><expr pos:start="55:76" pos:end="55:78"><literal type="char" pos:start="55:76" pos:end="55:78">'e'</literal></expr></argument>,<argument pos:start="55:80" pos:end="55:82"><expr pos:start="55:80" pos:end="55:82"><literal type="char" pos:start="55:80" pos:end="55:82">'g'</literal></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="55:84" pos:end="55:84">)</operator></expr>

           )</condition><block pos:start="57:13" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:21">

            <comment type="block" pos:start="59:13" pos:end="63:52">/* Multiple fourcc, we skip JPEG. This is not correct, we should

             * export it as a separate AVStream but this needs a few changes

             * in the MOV demuxer, patch welcome. */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:77"><expr pos:start="65:13" pos:end="65:76"><call pos:start="65:13" pos:end="65:76"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="65:76">(<argument pos:start="65:20" pos:end="65:24"><expr pos:start="65:20" pos:end="65:24"><name pos:start="65:20" pos:end="65:24"><name pos:start="65:20" pos:end="65:20">c</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:24">fc</name></name></expr></argument>, <argument pos:start="65:27" pos:end="65:40"><expr pos:start="65:27" pos:end="65:40"><name pos:start="65:27" pos:end="65:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="65:43" pos:end="65:75"><expr pos:start="65:43" pos:end="65:75"><literal type="string" pos:start="65:43" pos:end="65:75">"multiple fourcc not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:62"><expr pos:start="67:13" pos:end="67:61"><call pos:start="67:13" pos:end="67:61"><name pos:start="67:13" pos:end="67:21">url_fskip</name><argument_list pos:start="67:22" pos:end="67:61">(<argument pos:start="67:23" pos:end="67:24"><expr pos:start="67:23" pos:end="67:24"><name pos:start="67:23" pos:end="67:24">pb</name></expr></argument>, <argument pos:start="67:27" pos:end="67:60"><expr pos:start="67:27" pos:end="67:60"><name pos:start="67:27" pos:end="67:30">size</name> <operator pos:start="67:32" pos:end="67:32">-</operator> <operator pos:start="67:34" pos:end="67:34">(</operator><call pos:start="67:35" pos:end="67:47"><name pos:start="67:35" pos:end="67:43">url_ftell</name><argument_list pos:start="67:44" pos:end="67:47">(<argument pos:start="67:45" pos:end="67:46"><expr pos:start="67:45" pos:end="67:46"><name pos:start="67:45" pos:end="67:46">pb</name></expr></argument>)</argument_list></call> <operator pos:start="67:49" pos:end="67:49">-</operator> <name pos:start="67:51" pos:end="67:59">start_pos</name><operator pos:start="67:60" pos:end="67:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="69:13" pos:end="69:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:76"><expr pos:start="73:9" pos:end="73:75"><name pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:10">sc</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:28">pseudo_stream_id</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <ternary pos:start="73:32" pos:end="73:75"><condition pos:start="73:32" pos:end="73:53"><expr pos:start="73:32" pos:end="73:51"><name pos:start="73:32" pos:end="73:51"><name pos:start="73:32" pos:end="73:33">st</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:40">codec</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:51">codec_tag</name></name></expr> ?</condition><then pos:start="73:55" pos:end="73:56"> <expr pos:start="73:55" pos:end="73:56"><operator pos:start="73:55" pos:end="73:55">-</operator><literal type="number" pos:start="73:56" pos:end="73:56">1</literal></expr> </then><else pos:start="73:58" pos:end="73:75">: <expr pos:start="73:60" pos:end="73:75"><name pos:start="73:60" pos:end="73:75">pseudo_stream_id</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:10">sc</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:19">dref_id</name></name><operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:28">dref_id</name></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:10">st</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:17">codec</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:28">codec_tag</name></name> <operator pos:start="79:30" pos:end="79:30">=</operator> <name pos:start="79:32" pos:end="79:37">format</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:55"><expr pos:start="81:9" pos:end="81:54"><name pos:start="81:9" pos:end="81:10">id</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <call pos:start="81:14" pos:end="81:54"><name pos:start="81:14" pos:end="81:25">codec_get_id</name><argument_list pos:start="81:26" pos:end="81:54">(<argument pos:start="81:27" pos:end="81:45"><expr pos:start="81:27" pos:end="81:45"><name pos:start="81:27" pos:end="81:45">codec_movaudio_tags</name></expr></argument>, <argument pos:start="81:48" pos:end="81:53"><expr pos:start="81:48" pos:end="81:53"><name pos:start="81:48" pos:end="81:53">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:71"><if pos:start="83:9" pos:end="85:71">if <condition pos:start="83:12" pos:end="83:53">(<expr pos:start="83:13" pos:end="83:52"><name pos:start="83:13" pos:end="83:14">id</name><operator pos:start="83:15" pos:end="83:16">&lt;=</operator><literal type="number" pos:start="83:17" pos:end="83:17">0</literal> <operator pos:start="83:19" pos:end="83:20">&amp;&amp;</operator> <operator pos:start="83:22" pos:end="83:22">(</operator><name pos:start="83:23" pos:end="83:28">format</name><operator pos:start="83:29" pos:end="83:29">&amp;</operator><literal type="number" pos:start="83:30" pos:end="83:35">0xFFFF</literal><operator pos:start="83:36" pos:end="83:36">)</operator> <operator pos:start="83:38" pos:end="83:39">==</operator> <literal type="char" pos:start="83:41" pos:end="83:43">'m'</literal><operator pos:start="83:44" pos:end="83:44">+</operator><operator pos:start="83:45" pos:end="83:45">(</operator><literal type="char" pos:start="83:46" pos:end="83:48">'s'</literal><operator pos:start="83:49" pos:end="83:50">&lt;&lt;</operator><literal type="number" pos:start="83:51" pos:end="83:51">8</literal><operator pos:start="83:52" pos:end="83:52">)</operator></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:71"><block_content pos:start="85:13" pos:end="85:71">

            <expr_stmt pos:start="85:13" pos:end="85:71"><expr pos:start="85:13" pos:end="85:70"><name pos:start="85:13" pos:end="85:14">id</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <call pos:start="85:18" pos:end="85:70"><name pos:start="85:18" pos:end="85:29">codec_get_id</name><argument_list pos:start="85:30" pos:end="85:70">(<argument pos:start="85:31" pos:end="85:44"><expr pos:start="85:31" pos:end="85:44"><name pos:start="85:31" pos:end="85:44">codec_wav_tags</name></expr></argument>, <argument pos:start="85:47" pos:end="85:69"><expr pos:start="85:47" pos:end="85:69"><call pos:start="85:47" pos:end="85:62"><name pos:start="85:47" pos:end="85:54">bswap_32</name><argument_list pos:start="85:55" pos:end="85:62">(<argument pos:start="85:56" pos:end="85:61"><expr pos:start="85:56" pos:end="85:61"><name pos:start="85:56" pos:end="85:61">format</name></expr></argument>)</argument_list></call><operator pos:start="85:63" pos:end="85:63">&amp;</operator><literal type="number" pos:start="85:64" pos:end="85:69">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="89:9" pos:end="117:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:64">(<expr pos:start="89:13" pos:end="89:63"><name pos:start="89:13" pos:end="89:33"><name pos:start="89:13" pos:end="89:14">st</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:21">codec</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:33">codec_type</name></name> <operator pos:start="89:35" pos:end="89:36">!=</operator> <name pos:start="89:38" pos:end="89:53">CODEC_TYPE_VIDEO</name> <operator pos:start="89:55" pos:end="89:56">&amp;&amp;</operator> <name pos:start="89:58" pos:end="89:59">id</name> <operator pos:start="89:61" pos:end="89:61">&gt;</operator> <literal type="number" pos:start="89:63" pos:end="89:63">0</literal></expr>)</condition> <block pos:start="89:66" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:53">

            <expr_stmt pos:start="91:13" pos:end="91:53"><expr pos:start="91:13" pos:end="91:52"><name pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:14">st</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:21">codec</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:33">codec_type</name></name> <operator pos:start="91:35" pos:end="91:35">=</operator> <name pos:start="91:37" pos:end="91:52">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="93:11" pos:end="117:9">else if <condition pos:start="93:19" pos:end="95:62">(<expr pos:start="93:20" pos:end="95:61"><name pos:start="93:20" pos:end="93:40"><name pos:start="93:20" pos:end="93:21">st</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:28">codec</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:40">codec_type</name></name> <operator pos:start="93:42" pos:end="93:43">!=</operator> <name pos:start="93:45" pos:end="93:60">CODEC_TYPE_AUDIO</name> <operator pos:start="93:62" pos:end="93:63">&amp;&amp;</operator> <comment type="block" pos:start="93:65" pos:end="93:97">/* do not overwrite codec type */</comment>

                   <name pos:start="95:20" pos:end="95:25">format</name> <operator pos:start="95:27" pos:end="95:28">&amp;&amp;</operator> <name pos:start="95:30" pos:end="95:35">format</name> <operator pos:start="95:37" pos:end="95:38">!=</operator> <call pos:start="95:40" pos:end="95:61"><name pos:start="95:40" pos:end="95:44">MKTAG</name><argument_list pos:start="95:45" pos:end="95:61">(<argument pos:start="95:46" pos:end="95:48"><expr pos:start="95:46" pos:end="95:48"><literal type="char" pos:start="95:46" pos:end="95:48">'m'</literal></expr></argument>,<argument pos:start="95:50" pos:end="95:52"><expr pos:start="95:50" pos:end="95:52"><literal type="char" pos:start="95:50" pos:end="95:52">'p'</literal></expr></argument>,<argument pos:start="95:54" pos:end="95:56"><expr pos:start="95:54" pos:end="95:56"><literal type="char" pos:start="95:54" pos:end="95:56">'4'</literal></expr></argument>,<argument pos:start="95:58" pos:end="95:60"><expr pos:start="95:58" pos:end="95:60"><literal type="char" pos:start="95:58" pos:end="95:60">'s'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:64" pos:end="117:9">{<block_content pos:start="97:13" pos:end="115:13"> <comment type="block" pos:start="95:66" pos:end="95:93">/* skip old asf mpeg4 tag */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:59"><expr pos:start="97:13" pos:end="97:58"><name pos:start="97:13" pos:end="97:14">id</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <call pos:start="97:18" pos:end="97:58"><name pos:start="97:18" pos:end="97:29">codec_get_id</name><argument_list pos:start="97:30" pos:end="97:58">(<argument pos:start="97:31" pos:end="97:49"><expr pos:start="97:31" pos:end="97:49"><name pos:start="97:31" pos:end="97:49">codec_movvideo_tags</name></expr></argument>, <argument pos:start="97:52" pos:end="97:57"><expr pos:start="97:52" pos:end="97:57"><name pos:start="97:52" pos:end="97:57">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="101:58"><if pos:start="99:13" pos:end="101:58">if <condition pos:start="99:16" pos:end="99:24">(<expr pos:start="99:17" pos:end="99:23"><name pos:start="99:17" pos:end="99:18">id</name> <operator pos:start="99:20" pos:end="99:21">&lt;=</operator> <literal type="number" pos:start="99:23" pos:end="99:23">0</literal></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:58"><block_content pos:start="101:17" pos:end="101:58">

                <expr_stmt pos:start="101:17" pos:end="101:58"><expr pos:start="101:17" pos:end="101:57"><name pos:start="101:17" pos:end="101:18">id</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <call pos:start="101:22" pos:end="101:57"><name pos:start="101:22" pos:end="101:33">codec_get_id</name><argument_list pos:start="101:34" pos:end="101:57">(<argument pos:start="101:35" pos:end="101:48"><expr pos:start="101:35" pos:end="101:48"><name pos:start="101:35" pos:end="101:48">codec_bmp_tags</name></expr></argument>, <argument pos:start="101:51" pos:end="101:56"><expr pos:start="101:51" pos:end="101:56"><name pos:start="101:51" pos:end="101:56">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="103:13" pos:end="115:13"><if pos:start="103:13" pos:end="105:57">if <condition pos:start="103:16" pos:end="103:23">(<expr pos:start="103:17" pos:end="103:22"><name pos:start="103:17" pos:end="103:18">id</name> <operator pos:start="103:20" pos:end="103:20">&gt;</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:57"><block_content pos:start="105:17" pos:end="105:57">

                <expr_stmt pos:start="105:17" pos:end="105:57"><expr pos:start="105:17" pos:end="105:56"><name pos:start="105:17" pos:end="105:37"><name pos:start="105:17" pos:end="105:18">st</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:25">codec</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:37">codec_type</name></name> <operator pos:start="105:39" pos:end="105:39">=</operator> <name pos:start="105:41" pos:end="105:56">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="107:13" pos:end="115:13">else if<condition pos:start="107:20" pos:end="107:61">(<expr pos:start="107:21" pos:end="107:60"><name pos:start="107:21" pos:end="107:41"><name pos:start="107:21" pos:end="107:22">st</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:29">codec</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:41">codec_type</name></name> <operator pos:start="107:43" pos:end="107:44">==</operator> <name pos:start="107:46" pos:end="107:60">CODEC_TYPE_DATA</name></expr>)</condition><block pos:start="107:62" pos:end="115:13">{<block_content pos:start="109:17" pos:end="113:64">

                <expr_stmt pos:start="109:17" pos:end="109:69"><expr pos:start="109:17" pos:end="109:68"><name pos:start="109:17" pos:end="109:18">id</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <call pos:start="109:22" pos:end="109:68"><name pos:start="109:22" pos:end="109:33">codec_get_id</name><argument_list pos:start="109:34" pos:end="109:68">(<argument pos:start="109:35" pos:end="109:59"><expr pos:start="109:35" pos:end="109:59"><name pos:start="109:35" pos:end="109:59">ff_codec_movsubtitle_tags</name></expr></argument>, <argument pos:start="109:62" pos:end="109:67"><expr pos:start="109:62" pos:end="109:67"><name pos:start="109:62" pos:end="109:67">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="111:17" pos:end="113:64"><if pos:start="111:17" pos:end="113:64">if<condition pos:start="111:19" pos:end="111:26">(<expr pos:start="111:20" pos:end="111:25"><name pos:start="111:20" pos:end="111:21">id</name> <operator pos:start="111:23" pos:end="111:23">&gt;</operator> <literal type="number" pos:start="111:25" pos:end="111:25">0</literal></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:64"><block_content pos:start="113:21" pos:end="113:64">

                    <expr_stmt pos:start="113:21" pos:end="113:64"><expr pos:start="113:21" pos:end="113:63"><name pos:start="113:21" pos:end="113:41"><name pos:start="113:21" pos:end="113:22">st</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:29">codec</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:41">codec_type</name></name> <operator pos:start="113:43" pos:end="113:43">=</operator> <name pos:start="113:45" pos:end="113:63">CODEC_TYPE_SUBTITLE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="125:62"><expr pos:start="121:9" pos:end="125:61"><call pos:start="121:9" pos:end="125:61"><name pos:start="121:9" pos:end="121:15">dprintf</name><argument_list pos:start="121:16" pos:end="125:61">(<argument pos:start="121:17" pos:end="121:21"><expr pos:start="121:17" pos:end="121:21"><name pos:start="121:17" pos:end="121:21"><name pos:start="121:17" pos:end="121:17">c</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:21">fc</name></name></expr></argument>, <argument pos:start="121:24" pos:end="121:62"><expr pos:start="121:24" pos:end="121:62"><literal type="string" pos:start="121:24" pos:end="121:62">"size=%d 4CC= %c%c%c%c codec_type=%d\n"</literal></expr></argument>, <argument pos:start="121:65" pos:end="121:68"><expr pos:start="121:65" pos:end="121:68"><name pos:start="121:65" pos:end="121:68">size</name></expr></argument>,

                <argument pos:start="123:17" pos:end="123:36"><expr pos:start="123:17" pos:end="123:36"><operator pos:start="123:17" pos:end="123:17">(</operator><name pos:start="123:18" pos:end="123:23">format</name> <operator pos:start="123:25" pos:end="123:26">&gt;&gt;</operator> <literal type="number" pos:start="123:28" pos:end="123:28">0</literal><operator pos:start="123:29" pos:end="123:29">)</operator> <operator pos:start="123:31" pos:end="123:31">&amp;</operator> <literal type="number" pos:start="123:33" pos:end="123:36">0xff</literal></expr></argument>, <argument pos:start="123:39" pos:end="123:58"><expr pos:start="123:39" pos:end="123:58"><operator pos:start="123:39" pos:end="123:39">(</operator><name pos:start="123:40" pos:end="123:45">format</name> <operator pos:start="123:47" pos:end="123:48">&gt;&gt;</operator> <literal type="number" pos:start="123:50" pos:end="123:50">8</literal><operator pos:start="123:51" pos:end="123:51">)</operator> <operator pos:start="123:53" pos:end="123:53">&amp;</operator> <literal type="number" pos:start="123:55" pos:end="123:58">0xff</literal></expr></argument>, <argument pos:start="123:61" pos:end="123:81"><expr pos:start="123:61" pos:end="123:81"><operator pos:start="123:61" pos:end="123:61">(</operator><name pos:start="123:62" pos:end="123:67">format</name> <operator pos:start="123:69" pos:end="123:70">&gt;&gt;</operator> <literal type="number" pos:start="123:72" pos:end="123:73">16</literal><operator pos:start="123:74" pos:end="123:74">)</operator> <operator pos:start="123:76" pos:end="123:76">&amp;</operator> <literal type="number" pos:start="123:78" pos:end="123:81">0xff</literal></expr></argument>,

                <argument pos:start="125:17" pos:end="125:37"><expr pos:start="125:17" pos:end="125:37"><operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:23">format</name> <operator pos:start="125:25" pos:end="125:26">&gt;&gt;</operator> <literal type="number" pos:start="125:28" pos:end="125:29">24</literal><operator pos:start="125:30" pos:end="125:30">)</operator> <operator pos:start="125:32" pos:end="125:32">&amp;</operator> <literal type="number" pos:start="125:34" pos:end="125:37">0xff</literal></expr></argument>, <argument pos:start="125:40" pos:end="125:60"><expr pos:start="125:40" pos:end="125:60"><name pos:start="125:40" pos:end="125:60"><name pos:start="125:40" pos:end="125:41">st</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:48">codec</name><operator pos:start="125:49" pos:end="125:50">-&gt;</operator><name pos:start="125:51" pos:end="125:60">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="129:9" pos:end="503:9"><if pos:start="129:9" pos:end="333:9">if<condition pos:start="129:11" pos:end="129:51">(<expr pos:start="129:12" pos:end="129:50"><name pos:start="129:12" pos:end="129:32"><name pos:start="129:12" pos:end="129:13">st</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:20">codec</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:32">codec_type</name></name><operator pos:start="129:33" pos:end="129:34">==</operator><name pos:start="129:35" pos:end="129:50">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="129:53" pos:end="333:9">{<block_content pos:start="131:13" pos:end="331:42">

            <decl_stmt pos:start="131:13" pos:end="131:35"><decl pos:start="131:13" pos:end="131:34"><type pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:19">uint8_t</name></type> <name pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:30">codec_name</name><index pos:start="131:31" pos:end="131:34">[<expr pos:start="131:32" pos:end="131:33"><literal type="number" pos:start="131:32" pos:end="131:33">32</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="133:13" pos:end="133:37"><decl pos:start="133:13" pos:end="133:36"><type pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:20">unsigned</name> <name pos:start="133:22" pos:end="133:24">int</name></type> <name pos:start="133:26" pos:end="133:36">color_depth</name></decl>;</decl_stmt>

            <decl_stmt pos:start="135:13" pos:end="135:32"><decl pos:start="135:13" pos:end="135:31"><type pos:start="135:13" pos:end="135:15"><name pos:start="135:13" pos:end="135:15">int</name></type> <name pos:start="135:17" pos:end="135:31">color_greyscale</name></decl>;</decl_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:37"><expr pos:start="139:13" pos:end="139:36"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:14">st</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:21">codec</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:31">codec_id</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <name pos:start="139:35" pos:end="139:36">id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:25"><expr pos:start="141:13" pos:end="141:24"><call pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:20">get_be16</name><argument_list pos:start="141:21" pos:end="141:24">(<argument pos:start="141:22" pos:end="141:23"><expr pos:start="141:22" pos:end="141:23"><name pos:start="141:22" pos:end="141:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="141:27" pos:end="141:39">/* version */</comment>

            <expr_stmt pos:start="143:13" pos:end="143:25"><expr pos:start="143:13" pos:end="143:24"><call pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:20">get_be16</name><argument_list pos:start="143:21" pos:end="143:24">(<argument pos:start="143:22" pos:end="143:23"><expr pos:start="143:22" pos:end="143:23"><name pos:start="143:22" pos:end="143:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="143:27" pos:end="143:46">/* revision level */</comment>

            <expr_stmt pos:start="145:13" pos:end="145:25"><expr pos:start="145:13" pos:end="145:24"><call pos:start="145:13" pos:end="145:24"><name pos:start="145:13" pos:end="145:20">get_be32</name><argument_list pos:start="145:21" pos:end="145:24">(<argument pos:start="145:22" pos:end="145:23"><expr pos:start="145:22" pos:end="145:23"><name pos:start="145:22" pos:end="145:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="145:27" pos:end="145:38">/* vendor */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:25"><expr pos:start="147:13" pos:end="147:24"><call pos:start="147:13" pos:end="147:24"><name pos:start="147:13" pos:end="147:20">get_be32</name><argument_list pos:start="147:21" pos:end="147:24">(<argument pos:start="147:22" pos:end="147:23"><expr pos:start="147:22" pos:end="147:23"><name pos:start="147:22" pos:end="147:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="147:27" pos:end="147:48">/* temporal quality */</comment>

            <expr_stmt pos:start="149:13" pos:end="149:25"><expr pos:start="149:13" pos:end="149:24"><call pos:start="149:13" pos:end="149:24"><name pos:start="149:13" pos:end="149:20">get_be32</name><argument_list pos:start="149:21" pos:end="149:24">(<argument pos:start="149:22" pos:end="149:23"><expr pos:start="149:22" pos:end="149:23"><name pos:start="149:22" pos:end="149:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="149:27" pos:end="149:47">/* spatial quality */</comment>



            <expr_stmt pos:start="153:13" pos:end="153:44"><expr pos:start="153:13" pos:end="153:43"><name pos:start="153:13" pos:end="153:28"><name pos:start="153:13" pos:end="153:14">st</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:21">codec</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:28">width</name></name> <operator pos:start="153:30" pos:end="153:30">=</operator> <call pos:start="153:32" pos:end="153:43"><name pos:start="153:32" pos:end="153:39">get_be16</name><argument_list pos:start="153:40" pos:end="153:43">(<argument pos:start="153:41" pos:end="153:42"><expr pos:start="153:41" pos:end="153:42"><name pos:start="153:41" pos:end="153:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="153:46" pos:end="153:56">/* width */</comment>

            <expr_stmt pos:start="155:13" pos:end="155:45"><expr pos:start="155:13" pos:end="155:44"><name pos:start="155:13" pos:end="155:29"><name pos:start="155:13" pos:end="155:14">st</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:21">codec</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:29">height</name></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <call pos:start="155:33" pos:end="155:44"><name pos:start="155:33" pos:end="155:40">get_be16</name><argument_list pos:start="155:41" pos:end="155:44">(<argument pos:start="155:42" pos:end="155:43"><expr pos:start="155:42" pos:end="155:43"><name pos:start="155:42" pos:end="155:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="155:47" pos:end="155:58">/* height */</comment>



            <expr_stmt pos:start="159:13" pos:end="159:25"><expr pos:start="159:13" pos:end="159:24"><call pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:20">get_be32</name><argument_list pos:start="159:21" pos:end="159:24">(<argument pos:start="159:22" pos:end="159:23"><expr pos:start="159:22" pos:end="159:23"><name pos:start="159:22" pos:end="159:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="159:27" pos:end="159:48">/* horiz resolution */</comment>

            <expr_stmt pos:start="161:13" pos:end="161:25"><expr pos:start="161:13" pos:end="161:24"><call pos:start="161:13" pos:end="161:24"><name pos:start="161:13" pos:end="161:20">get_be32</name><argument_list pos:start="161:21" pos:end="161:24">(<argument pos:start="161:22" pos:end="161:23"><expr pos:start="161:22" pos:end="161:23"><name pos:start="161:22" pos:end="161:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="161:27" pos:end="161:47">/* vert resolution */</comment>

            <expr_stmt pos:start="163:13" pos:end="163:25"><expr pos:start="163:13" pos:end="163:24"><call pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:20">get_be32</name><argument_list pos:start="163:21" pos:end="163:24">(<argument pos:start="163:22" pos:end="163:23"><expr pos:start="163:22" pos:end="163:23"><name pos:start="163:22" pos:end="163:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="163:27" pos:end="163:51">/* data size, always 0 */</comment>

            <expr_stmt pos:start="165:13" pos:end="165:25"><expr pos:start="165:13" pos:end="165:24"><call pos:start="165:13" pos:end="165:24"><name pos:start="165:13" pos:end="165:20">get_be16</name><argument_list pos:start="165:21" pos:end="165:24">(<argument pos:start="165:22" pos:end="165:23"><expr pos:start="165:22" pos:end="165:23"><name pos:start="165:22" pos:end="165:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="165:27" pos:end="165:50">/* frames per samples */</comment>



            <expr_stmt pos:start="169:13" pos:end="169:43"><expr pos:start="169:13" pos:end="169:42"><call pos:start="169:13" pos:end="169:42"><name pos:start="169:13" pos:end="169:22">get_buffer</name><argument_list pos:start="169:23" pos:end="169:42">(<argument pos:start="169:24" pos:end="169:25"><expr pos:start="169:24" pos:end="169:25"><name pos:start="169:24" pos:end="169:25">pb</name></expr></argument>, <argument pos:start="169:28" pos:end="169:37"><expr pos:start="169:28" pos:end="169:37"><name pos:start="169:28" pos:end="169:37">codec_name</name></expr></argument>, <argument pos:start="169:40" pos:end="169:41"><expr pos:start="169:40" pos:end="169:41"><literal type="number" pos:start="169:40" pos:end="169:41">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="169:45" pos:end="169:75">/* codec name, pascal string */</comment>

            <if_stmt pos:start="171:13" pos:end="177:13"><if pos:start="171:13" pos:end="177:13">if <condition pos:start="171:16" pos:end="171:36">(<expr pos:start="171:17" pos:end="171:35"><name pos:start="171:17" pos:end="171:29"><name pos:start="171:17" pos:end="171:26">codec_name</name><index pos:start="171:27" pos:end="171:29">[<expr pos:start="171:28" pos:end="171:28"><literal type="number" pos:start="171:28" pos:end="171:28">0</literal></expr>]</index></name> <operator pos:start="171:31" pos:end="171:32">&lt;=</operator> <literal type="number" pos:start="171:34" pos:end="171:35">31</literal></expr>)</condition> <block pos:start="171:38" pos:end="177:13">{<block_content pos:start="173:17" pos:end="175:57">

                <expr_stmt pos:start="173:17" pos:end="173:76"><expr pos:start="173:17" pos:end="173:75"><call pos:start="173:17" pos:end="173:75"><name pos:start="173:17" pos:end="173:22">memcpy</name><argument_list pos:start="173:23" pos:end="173:75">(<argument pos:start="173:24" pos:end="173:44"><expr pos:start="173:24" pos:end="173:44"><name pos:start="173:24" pos:end="173:44"><name pos:start="173:24" pos:end="173:25">st</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:32">codec</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:44">codec_name</name></name></expr></argument>, <argument pos:start="173:47" pos:end="173:60"><expr pos:start="173:47" pos:end="173:60"><operator pos:start="173:47" pos:end="173:47">&amp;</operator><name pos:start="173:48" pos:end="173:60"><name pos:start="173:48" pos:end="173:57">codec_name</name><index pos:start="173:58" pos:end="173:60">[<expr pos:start="173:59" pos:end="173:59"><literal type="number" pos:start="173:59" pos:end="173:59">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="173:62" pos:end="173:74"><expr pos:start="173:62" pos:end="173:74"><name pos:start="173:62" pos:end="173:74"><name pos:start="173:62" pos:end="173:71">codec_name</name><index pos:start="173:72" pos:end="173:74">[<expr pos:start="173:73" pos:end="173:73"><literal type="number" pos:start="173:73" pos:end="173:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:57"><expr pos:start="175:17" pos:end="175:56"><name pos:start="175:17" pos:end="175:52"><name pos:start="175:17" pos:end="175:18">st</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:25">codec</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:37">codec_name</name><index pos:start="175:38" pos:end="175:52">[<expr pos:start="175:39" pos:end="175:51"><name pos:start="175:39" pos:end="175:51"><name pos:start="175:39" pos:end="175:48">codec_name</name><index pos:start="175:49" pos:end="175:51">[<expr pos:start="175:50" pos:end="175:50"><literal type="number" pos:start="175:50" pos:end="175:50">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="175:54" pos:end="175:54">=</operator> <literal type="number" pos:start="175:56" pos:end="175:56">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="181:13" pos:end="181:60"><expr pos:start="181:13" pos:end="181:59"><name pos:start="181:13" pos:end="181:44"><name pos:start="181:13" pos:end="181:14">st</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:21">codec</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:44">bits_per_coded_sample</name></name> <operator pos:start="181:46" pos:end="181:46">=</operator> <call pos:start="181:48" pos:end="181:59"><name pos:start="181:48" pos:end="181:55">get_be16</name><argument_list pos:start="181:56" pos:end="181:59">(<argument pos:start="181:57" pos:end="181:58"><expr pos:start="181:57" pos:end="181:58"><name pos:start="181:57" pos:end="181:58">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="181:62" pos:end="181:72">/* depth */</comment>

            <expr_stmt pos:start="183:13" pos:end="183:53"><expr pos:start="183:13" pos:end="183:52"><name pos:start="183:13" pos:end="183:37"><name pos:start="183:13" pos:end="183:14">st</name><operator pos:start="183:15" pos:end="183:16">-&gt;</operator><name pos:start="183:17" pos:end="183:21">codec</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:37">color_table_id</name></name> <operator pos:start="183:39" pos:end="183:39">=</operator> <call pos:start="183:41" pos:end="183:52"><name pos:start="183:41" pos:end="183:48">get_be16</name><argument_list pos:start="183:49" pos:end="183:52">(<argument pos:start="183:50" pos:end="183:51"><expr pos:start="183:50" pos:end="183:51"><name pos:start="183:50" pos:end="183:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="183:55" pos:end="183:73">/* colortable id */</comment>

            <expr_stmt pos:start="185:13" pos:end="187:80"><expr pos:start="185:13" pos:end="187:79"><call pos:start="185:13" pos:end="187:79"><name pos:start="185:13" pos:end="185:19">dprintf</name><argument_list pos:start="185:20" pos:end="187:79">(<argument pos:start="185:21" pos:end="185:25"><expr pos:start="185:21" pos:end="185:25"><name pos:start="185:21" pos:end="185:25"><name pos:start="185:21" pos:end="185:21">c</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:25">fc</name></name></expr></argument>, <argument pos:start="185:28" pos:end="185:51"><expr pos:start="185:28" pos:end="185:51"><literal type="string" pos:start="185:28" pos:end="185:51">"depth %d, ctab id %d\n"</literal></expr></argument>,

                   <argument pos:start="187:20" pos:end="187:51"><expr pos:start="187:20" pos:end="187:51"><name pos:start="187:20" pos:end="187:51"><name pos:start="187:20" pos:end="187:21">st</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:28">codec</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:51">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="187:54" pos:end="187:78"><expr pos:start="187:54" pos:end="187:78"><name pos:start="187:54" pos:end="187:78"><name pos:start="187:54" pos:end="187:55">st</name><operator pos:start="187:56" pos:end="187:57">-&gt;</operator><name pos:start="187:58" pos:end="187:62">codec</name><operator pos:start="187:63" pos:end="187:64">-&gt;</operator><name pos:start="187:65" pos:end="187:78">color_table_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="189:13" pos:end="189:50">/* figure out the palette situation */</comment>

            <expr_stmt pos:start="191:13" pos:end="191:66"><expr pos:start="191:13" pos:end="191:65"><name pos:start="191:13" pos:end="191:23">color_depth</name> <operator pos:start="191:25" pos:end="191:25">=</operator> <name pos:start="191:27" pos:end="191:58"><name pos:start="191:27" pos:end="191:28">st</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:35">codec</name><operator pos:start="191:36" pos:end="191:37">-&gt;</operator><name pos:start="191:38" pos:end="191:58">bits_per_coded_sample</name></name> <operator pos:start="191:60" pos:end="191:60">&amp;</operator> <literal type="number" pos:start="191:62" pos:end="191:65">0x1F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:70"><expr pos:start="193:13" pos:end="193:69"><name pos:start="193:13" pos:end="193:27">color_greyscale</name> <operator pos:start="193:29" pos:end="193:29">=</operator> <name pos:start="193:31" pos:end="193:62"><name pos:start="193:31" pos:end="193:32">st</name><operator pos:start="193:33" pos:end="193:34">-&gt;</operator><name pos:start="193:35" pos:end="193:39">codec</name><operator pos:start="193:40" pos:end="193:41">-&gt;</operator><name pos:start="193:42" pos:end="193:62">bits_per_coded_sample</name></name> <operator pos:start="193:64" pos:end="193:64">&amp;</operator> <literal type="number" pos:start="193:66" pos:end="193:69">0x20</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="197:13" pos:end="197:68">/* if the depth is 2, 4, or 8 bpp, file is palettized */</comment>

            <if_stmt pos:start="199:13" pos:end="331:42"><if pos:start="199:13" pos:end="329:13">if <condition pos:start="199:16" pos:end="201:35">(<expr pos:start="199:17" pos:end="201:34"><operator pos:start="199:17" pos:end="199:17">(</operator><name pos:start="199:18" pos:end="199:28">color_depth</name> <operator pos:start="199:30" pos:end="199:31">==</operator> <literal type="number" pos:start="199:33" pos:end="199:33">2</literal><operator pos:start="199:34" pos:end="199:34">)</operator> <operator pos:start="199:36" pos:end="199:37">||</operator> <operator pos:start="199:39" pos:end="199:39">(</operator><name pos:start="199:40" pos:end="199:50">color_depth</name> <operator pos:start="199:52" pos:end="199:53">==</operator> <literal type="number" pos:start="199:55" pos:end="199:55">4</literal><operator pos:start="199:56" pos:end="199:56">)</operator> <operator pos:start="199:58" pos:end="199:59">||</operator>

                <operator pos:start="201:17" pos:end="201:17">(</operator><name pos:start="201:18" pos:end="201:28">color_depth</name> <operator pos:start="201:30" pos:end="201:31">==</operator> <literal type="number" pos:start="201:33" pos:end="201:33">8</literal><operator pos:start="201:34" pos:end="201:34">)</operator></expr>)</condition> <block pos:start="201:37" pos:end="329:13">{<block_content pos:start="205:17" pos:end="327:56">

                <comment type="block" pos:start="203:17" pos:end="203:43">/* for palette traversal */</comment>

                <decl_stmt pos:start="205:17" pos:end="205:65"><decl pos:start="205:17" pos:end="205:40"><type pos:start="205:17" pos:end="205:28"><name pos:start="205:17" pos:end="205:24">unsigned</name> <name pos:start="205:26" pos:end="205:28">int</name></type> <name pos:start="205:30" pos:end="205:40">color_start</name></decl>, <decl pos:start="205:43" pos:end="205:53"><type ref="prev" pos:start="205:17" pos:end="205:28"/><name pos:start="205:43" pos:end="205:53">color_count</name></decl>, <decl pos:start="205:56" pos:end="205:64"><type ref="prev" pos:start="205:17" pos:end="205:28"/><name pos:start="205:56" pos:end="205:64">color_end</name></decl>;</decl_stmt>

                <decl_stmt pos:start="207:17" pos:end="207:38"><decl pos:start="207:17" pos:end="207:31"><type pos:start="207:17" pos:end="207:29"><name pos:start="207:17" pos:end="207:24">unsigned</name> <name pos:start="207:26" pos:end="207:29">char</name></type> <name pos:start="207:31" pos:end="207:31">r</name></decl>, <decl pos:start="207:34" pos:end="207:34"><type ref="prev" pos:start="207:17" pos:end="207:29"/><name pos:start="207:34" pos:end="207:34">g</name></decl>, <decl pos:start="207:37" pos:end="207:37"><type ref="prev" pos:start="207:17" pos:end="207:29"/><name pos:start="207:37" pos:end="207:37">b</name></decl>;</decl_stmt>



                <if_stmt pos:start="211:17" pos:end="323:17"><if pos:start="211:17" pos:end="241:17">if <condition pos:start="211:20" pos:end="211:36">(<expr pos:start="211:21" pos:end="211:35"><name pos:start="211:21" pos:end="211:35">color_greyscale</name></expr>)</condition> <block pos:start="211:38" pos:end="241:17">{<block_content pos:start="213:21" pos:end="239:21">

                    <decl_stmt pos:start="213:21" pos:end="213:47"><decl pos:start="213:21" pos:end="213:35"><type pos:start="213:21" pos:end="213:23"><name pos:start="213:21" pos:end="213:23">int</name></type> <name pos:start="213:25" pos:end="213:35">color_index</name></decl>, <decl pos:start="213:38" pos:end="213:46"><type ref="prev" pos:start="213:21" pos:end="213:23"/><name pos:start="213:38" pos:end="213:46">color_dec</name></decl>;</decl_stmt>

                    <comment type="block" pos:start="215:21" pos:end="215:55">/* compute the greyscale palette */</comment>

                    <expr_stmt pos:start="217:21" pos:end="217:67"><expr pos:start="217:21" pos:end="217:66"><name pos:start="217:21" pos:end="217:52"><name pos:start="217:21" pos:end="217:22">st</name><operator pos:start="217:23" pos:end="217:24">-&gt;</operator><name pos:start="217:25" pos:end="217:29">codec</name><operator pos:start="217:30" pos:end="217:31">-&gt;</operator><name pos:start="217:32" pos:end="217:52">bits_per_coded_sample</name></name> <operator pos:start="217:54" pos:end="217:54">=</operator> <name pos:start="217:56" pos:end="217:66">color_depth</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="219:21" pos:end="219:51"><expr pos:start="219:21" pos:end="219:50"><name pos:start="219:21" pos:end="219:31">color_count</name> <operator pos:start="219:33" pos:end="219:33">=</operator> <literal type="number" pos:start="219:35" pos:end="219:35">1</literal> <operator pos:start="219:37" pos:end="219:38">&lt;&lt;</operator> <name pos:start="219:40" pos:end="219:50">color_depth</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="221:21" pos:end="221:38"><expr pos:start="221:21" pos:end="221:37"><name pos:start="221:21" pos:end="221:31">color_index</name> <operator pos:start="221:33" pos:end="221:33">=</operator> <literal type="number" pos:start="221:35" pos:end="221:37">255</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:56"><expr pos:start="223:21" pos:end="223:55"><name pos:start="223:21" pos:end="223:29">color_dec</name> <operator pos:start="223:31" pos:end="223:31">=</operator> <literal type="number" pos:start="223:33" pos:end="223:35">256</literal> <operator pos:start="223:37" pos:end="223:37">/</operator> <operator pos:start="223:39" pos:end="223:39">(</operator><name pos:start="223:40" pos:end="223:50">color_count</name> <operator pos:start="223:52" pos:end="223:52">-</operator> <literal type="number" pos:start="223:54" pos:end="223:54">1</literal><operator pos:start="223:55" pos:end="223:55">)</operator></expr>;</expr_stmt>

                    <for pos:start="225:21" pos:end="239:21">for <control pos:start="225:25" pos:end="225:53">(<init pos:start="225:26" pos:end="225:31"><expr pos:start="225:26" pos:end="225:30"><name pos:start="225:26" pos:end="225:26">j</name> <operator pos:start="225:28" pos:end="225:28">=</operator> <literal type="number" pos:start="225:30" pos:end="225:30">0</literal></expr>;</init> <condition pos:start="225:33" pos:end="225:48"><expr pos:start="225:33" pos:end="225:47"><name pos:start="225:33" pos:end="225:33">j</name> <operator pos:start="225:35" pos:end="225:35">&lt;</operator> <name pos:start="225:37" pos:end="225:47">color_count</name></expr>;</condition> <incr pos:start="225:50" pos:end="225:52"><expr pos:start="225:50" pos:end="225:52"><name pos:start="225:50" pos:end="225:50">j</name><operator pos:start="225:51" pos:end="225:52">++</operator></expr></incr>)</control> <block pos:start="225:55" pos:end="239:21">{<block_content pos:start="227:25" pos:end="237:44">

                        <expr_stmt pos:start="227:25" pos:end="227:48"><expr pos:start="227:25" pos:end="227:47"><name pos:start="227:25" pos:end="227:25">r</name> <operator pos:start="227:27" pos:end="227:27">=</operator> <name pos:start="227:29" pos:end="227:29">g</name> <operator pos:start="227:31" pos:end="227:31">=</operator> <name pos:start="227:33" pos:end="227:33">b</name> <operator pos:start="227:35" pos:end="227:35">=</operator> <name pos:start="227:37" pos:end="227:47">color_index</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="229:25" pos:end="231:55"><expr pos:start="229:25" pos:end="231:54"><name pos:start="229:25" pos:end="229:53"><name pos:start="229:25" pos:end="229:25">c</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:42">palette_control</name><operator pos:start="229:43" pos:end="229:43">.</operator><name pos:start="229:44" pos:end="229:50">palette</name><index pos:start="229:51" pos:end="229:53">[<expr pos:start="229:52" pos:end="229:52"><name pos:start="229:52" pos:end="229:52">j</name></expr>]</index></name> <operator pos:start="229:55" pos:end="229:55">=</operator>

                            <operator pos:start="231:29" pos:end="231:29">(</operator><name pos:start="231:30" pos:end="231:30">r</name> <operator pos:start="231:32" pos:end="231:33">&lt;&lt;</operator> <literal type="number" pos:start="231:35" pos:end="231:36">16</literal><operator pos:start="231:37" pos:end="231:37">)</operator> <operator pos:start="231:39" pos:end="231:39">|</operator> <operator pos:start="231:41" pos:end="231:41">(</operator><name pos:start="231:42" pos:end="231:42">g</name> <operator pos:start="231:44" pos:end="231:45">&lt;&lt;</operator> <literal type="number" pos:start="231:47" pos:end="231:47">8</literal><operator pos:start="231:48" pos:end="231:48">)</operator> <operator pos:start="231:50" pos:end="231:50">|</operator> <operator pos:start="231:52" pos:end="231:52">(</operator><name pos:start="231:53" pos:end="231:53">b</name><operator pos:start="231:54" pos:end="231:54">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="233:25" pos:end="233:49"><expr pos:start="233:25" pos:end="233:48"><name pos:start="233:25" pos:end="233:35">color_index</name> <operator pos:start="233:37" pos:end="233:38">-=</operator> <name pos:start="233:40" pos:end="233:48">color_dec</name></expr>;</expr_stmt>

                        <if_stmt pos:start="235:25" pos:end="237:44"><if pos:start="235:25" pos:end="237:44">if <condition pos:start="235:28" pos:end="235:44">(<expr pos:start="235:29" pos:end="235:43"><name pos:start="235:29" pos:end="235:39">color_index</name> <operator pos:start="235:41" pos:end="235:41">&lt;</operator> <literal type="number" pos:start="235:43" pos:end="235:43">0</literal></expr>)</condition><block type="pseudo" pos:start="237:29" pos:end="237:44"><block_content pos:start="237:29" pos:end="237:44">

                            <expr_stmt pos:start="237:29" pos:end="237:44"><expr pos:start="237:29" pos:end="237:43"><name pos:start="237:29" pos:end="237:39">color_index</name> <operator pos:start="237:41" pos:end="237:41">=</operator> <literal type="number" pos:start="237:43" pos:end="237:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <if type="elseif" pos:start="241:19" pos:end="277:17">else if <condition pos:start="241:27" pos:end="241:53">(<expr pos:start="241:28" pos:end="241:52"><name pos:start="241:28" pos:end="241:52"><name pos:start="241:28" pos:end="241:29">st</name><operator pos:start="241:30" pos:end="241:31">-&gt;</operator><name pos:start="241:32" pos:end="241:36">codec</name><operator pos:start="241:37" pos:end="241:38">-&gt;</operator><name pos:start="241:39" pos:end="241:52">color_table_id</name></name></expr>)</condition> <block pos:start="241:55" pos:end="277:17">{<block_content pos:start="243:21" pos:end="275:21">

                    <decl_stmt pos:start="243:21" pos:end="243:47"><decl pos:start="243:21" pos:end="243:46"><type pos:start="243:21" pos:end="243:35"><specifier pos:start="243:21" pos:end="243:25">const</specifier> <name pos:start="243:27" pos:end="243:33">uint8_t</name> <modifier pos:start="243:35" pos:end="243:35">*</modifier></type><name pos:start="243:36" pos:end="243:46">color_table</name></decl>;</decl_stmt>

                    <comment type="block" pos:start="245:21" pos:end="245:71">/* if flag bit 3 is set, use the default palette */</comment>

                    <expr_stmt pos:start="247:21" pos:end="247:51"><expr pos:start="247:21" pos:end="247:50"><name pos:start="247:21" pos:end="247:31">color_count</name> <operator pos:start="247:33" pos:end="247:33">=</operator> <literal type="number" pos:start="247:35" pos:end="247:35">1</literal> <operator pos:start="247:37" pos:end="247:38">&lt;&lt;</operator> <name pos:start="247:40" pos:end="247:50">color_depth</name></expr>;</expr_stmt>

                    <if_stmt pos:start="249:21" pos:end="259:64"><if pos:start="249:21" pos:end="251:62">if <condition pos:start="249:24" pos:end="249:41">(<expr pos:start="249:25" pos:end="249:40"><name pos:start="249:25" pos:end="249:35">color_depth</name> <operator pos:start="249:37" pos:end="249:38">==</operator> <literal type="number" pos:start="249:40" pos:end="249:40">2</literal></expr>)</condition><block type="pseudo" pos:start="251:25" pos:end="251:62"><block_content pos:start="251:25" pos:end="251:62">

                        <expr_stmt pos:start="251:25" pos:end="251:62"><expr pos:start="251:25" pos:end="251:61"><name pos:start="251:25" pos:end="251:35">color_table</name> <operator pos:start="251:37" pos:end="251:37">=</operator> <name pos:start="251:39" pos:end="251:61">ff_qt_default_palette_4</name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="253:21" pos:end="255:63">else if <condition pos:start="253:29" pos:end="253:46">(<expr pos:start="253:30" pos:end="253:45"><name pos:start="253:30" pos:end="253:40">color_depth</name> <operator pos:start="253:42" pos:end="253:43">==</operator> <literal type="number" pos:start="253:45" pos:end="253:45">4</literal></expr>)</condition><block type="pseudo" pos:start="255:25" pos:end="255:63"><block_content pos:start="255:25" pos:end="255:63">

                        <expr_stmt pos:start="255:25" pos:end="255:63"><expr pos:start="255:25" pos:end="255:62"><name pos:start="255:25" pos:end="255:35">color_table</name> <operator pos:start="255:37" pos:end="255:37">=</operator> <name pos:start="255:39" pos:end="255:62">ff_qt_default_palette_16</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="257:21" pos:end="259:64">else<block type="pseudo" pos:start="259:25" pos:end="259:64"><block_content pos:start="259:25" pos:end="259:64">

                        <expr_stmt pos:start="259:25" pos:end="259:64"><expr pos:start="259:25" pos:end="259:63"><name pos:start="259:25" pos:end="259:35">color_table</name> <operator pos:start="259:37" pos:end="259:37">=</operator> <name pos:start="259:39" pos:end="259:63">ff_qt_default_palette_256</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <for pos:start="263:21" pos:end="275:21">for <control pos:start="263:25" pos:end="263:53">(<init pos:start="263:26" pos:end="263:31"><expr pos:start="263:26" pos:end="263:30"><name pos:start="263:26" pos:end="263:26">j</name> <operator pos:start="263:28" pos:end="263:28">=</operator> <literal type="number" pos:start="263:30" pos:end="263:30">0</literal></expr>;</init> <condition pos:start="263:33" pos:end="263:48"><expr pos:start="263:33" pos:end="263:47"><name pos:start="263:33" pos:end="263:33">j</name> <operator pos:start="263:35" pos:end="263:35">&lt;</operator> <name pos:start="263:37" pos:end="263:47">color_count</name></expr>;</condition> <incr pos:start="263:50" pos:end="263:52"><expr pos:start="263:50" pos:end="263:52"><name pos:start="263:50" pos:end="263:50">j</name><operator pos:start="263:51" pos:end="263:52">++</operator></expr></incr>)</control> <block pos:start="263:55" pos:end="275:21">{<block_content pos:start="265:25" pos:end="273:55">

                        <expr_stmt pos:start="265:25" pos:end="265:51"><expr pos:start="265:25" pos:end="265:50"><name pos:start="265:25" pos:end="265:25">r</name> <operator pos:start="265:27" pos:end="265:27">=</operator> <name pos:start="265:29" pos:end="265:50"><name pos:start="265:29" pos:end="265:39">color_table</name><index pos:start="265:40" pos:end="265:50">[<expr pos:start="265:41" pos:end="265:49"><name pos:start="265:41" pos:end="265:41">j</name> <operator pos:start="265:43" pos:end="265:43">*</operator> <literal type="number" pos:start="265:45" pos:end="265:47">4</literal> <operator pos:start="265:47" pos:end="265:47">+</operator> <literal type="number" pos:start="265:49" pos:end="265:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="267:25" pos:end="267:51"><expr pos:start="267:25" pos:end="267:50"><name pos:start="267:25" pos:end="267:25">g</name> <operator pos:start="267:27" pos:end="267:27">=</operator> <name pos:start="267:29" pos:end="267:50"><name pos:start="267:29" pos:end="267:39">color_table</name><index pos:start="267:40" pos:end="267:50">[<expr pos:start="267:41" pos:end="267:49"><name pos:start="267:41" pos:end="267:41">j</name> <operator pos:start="267:43" pos:end="267:43">*</operator> <literal type="number" pos:start="267:45" pos:end="267:47">4</literal> <operator pos:start="267:47" pos:end="267:47">+</operator> <literal type="number" pos:start="267:49" pos:end="267:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="269:25" pos:end="269:51"><expr pos:start="269:25" pos:end="269:50"><name pos:start="269:25" pos:end="269:25">b</name> <operator pos:start="269:27" pos:end="269:27">=</operator> <name pos:start="269:29" pos:end="269:50"><name pos:start="269:29" pos:end="269:39">color_table</name><index pos:start="269:40" pos:end="269:50">[<expr pos:start="269:41" pos:end="269:49"><name pos:start="269:41" pos:end="269:41">j</name> <operator pos:start="269:43" pos:end="269:43">*</operator> <literal type="number" pos:start="269:45" pos:end="269:47">4</literal> <operator pos:start="269:47" pos:end="269:47">+</operator> <literal type="number" pos:start="269:49" pos:end="269:49">2</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="271:25" pos:end="273:55"><expr pos:start="271:25" pos:end="273:54"><name pos:start="271:25" pos:end="271:53"><name pos:start="271:25" pos:end="271:25">c</name><operator pos:start="271:26" pos:end="271:27">-&gt;</operator><name pos:start="271:28" pos:end="271:42">palette_control</name><operator pos:start="271:43" pos:end="271:43">.</operator><name pos:start="271:44" pos:end="271:50">palette</name><index pos:start="271:51" pos:end="271:53">[<expr pos:start="271:52" pos:end="271:52"><name pos:start="271:52" pos:end="271:52">j</name></expr>]</index></name> <operator pos:start="271:55" pos:end="271:55">=</operator>

                            <operator pos:start="273:29" pos:end="273:29">(</operator><name pos:start="273:30" pos:end="273:30">r</name> <operator pos:start="273:32" pos:end="273:33">&lt;&lt;</operator> <literal type="number" pos:start="273:35" pos:end="273:36">16</literal><operator pos:start="273:37" pos:end="273:37">)</operator> <operator pos:start="273:39" pos:end="273:39">|</operator> <operator pos:start="273:41" pos:end="273:41">(</operator><name pos:start="273:42" pos:end="273:42">g</name> <operator pos:start="273:44" pos:end="273:45">&lt;&lt;</operator> <literal type="number" pos:start="273:47" pos:end="273:47">8</literal><operator pos:start="273:48" pos:end="273:48">)</operator> <operator pos:start="273:50" pos:end="273:50">|</operator> <operator pos:start="273:52" pos:end="273:52">(</operator><name pos:start="273:53" pos:end="273:53">b</name><operator pos:start="273:54" pos:end="273:54">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="277:19" pos:end="323:17">else <block pos:start="277:24" pos:end="323:17">{<block_content pos:start="281:21" pos:end="321:21">

                    <comment type="block" pos:start="279:21" pos:end="279:56">/* load the palette from the file */</comment>

                    <expr_stmt pos:start="281:21" pos:end="281:47"><expr pos:start="281:21" pos:end="281:46"><name pos:start="281:21" pos:end="281:31">color_start</name> <operator pos:start="281:33" pos:end="281:33">=</operator> <call pos:start="281:35" pos:end="281:46"><name pos:start="281:35" pos:end="281:42">get_be32</name><argument_list pos:start="281:43" pos:end="281:46">(<argument pos:start="281:44" pos:end="281:45"><expr pos:start="281:44" pos:end="281:45"><name pos:start="281:44" pos:end="281:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="283:21" pos:end="283:47"><expr pos:start="283:21" pos:end="283:46"><name pos:start="283:21" pos:end="283:31">color_count</name> <operator pos:start="283:33" pos:end="283:33">=</operator> <call pos:start="283:35" pos:end="283:46"><name pos:start="283:35" pos:end="283:42">get_be16</name><argument_list pos:start="283:43" pos:end="283:46">(<argument pos:start="283:44" pos:end="283:45"><expr pos:start="283:44" pos:end="283:45"><name pos:start="283:44" pos:end="283:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="285:21" pos:end="285:45"><expr pos:start="285:21" pos:end="285:44"><name pos:start="285:21" pos:end="285:29">color_end</name> <operator pos:start="285:31" pos:end="285:31">=</operator> <call pos:start="285:33" pos:end="285:44"><name pos:start="285:33" pos:end="285:40">get_be16</name><argument_list pos:start="285:41" pos:end="285:44">(<argument pos:start="285:42" pos:end="285:43"><expr pos:start="285:42" pos:end="285:43"><name pos:start="285:42" pos:end="285:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="287:21" pos:end="321:21"><if pos:start="287:21" pos:end="321:21">if <condition pos:start="287:24" pos:end="289:43">(<expr pos:start="287:25" pos:end="289:42"><operator pos:start="287:25" pos:end="287:25">(</operator><name pos:start="287:26" pos:end="287:36">color_start</name> <operator pos:start="287:38" pos:end="287:39">&lt;=</operator> <literal type="number" pos:start="287:41" pos:end="287:43">255</literal><operator pos:start="287:44" pos:end="287:44">)</operator> <operator pos:start="287:46" pos:end="287:47">&amp;&amp;</operator>

                        <operator pos:start="289:25" pos:end="289:25">(</operator><name pos:start="289:26" pos:end="289:34">color_end</name> <operator pos:start="289:36" pos:end="289:37">&lt;=</operator> <literal type="number" pos:start="289:39" pos:end="289:41">255</literal><operator pos:start="289:42" pos:end="289:42">)</operator></expr>)</condition> <block pos:start="289:45" pos:end="321:21">{<block_content pos:start="291:25" pos:end="319:25">

                        <for pos:start="291:25" pos:end="319:25">for <control pos:start="291:29" pos:end="291:66">(<init pos:start="291:30" pos:end="291:45"><expr pos:start="291:30" pos:end="291:44"><name pos:start="291:30" pos:end="291:30">j</name> <operator pos:start="291:32" pos:end="291:32">=</operator> <name pos:start="291:34" pos:end="291:44">color_start</name></expr>;</init> <condition pos:start="291:47" pos:end="291:61"><expr pos:start="291:47" pos:end="291:60"><name pos:start="291:47" pos:end="291:47">j</name> <operator pos:start="291:49" pos:end="291:50">&lt;=</operator> <name pos:start="291:52" pos:end="291:60">color_end</name></expr>;</condition> <incr pos:start="291:63" pos:end="291:65"><expr pos:start="291:63" pos:end="291:65"><name pos:start="291:63" pos:end="291:63">j</name><operator pos:start="291:64" pos:end="291:65">++</operator></expr></incr>)</control> <block pos:start="291:68" pos:end="319:25">{<block_content pos:start="299:29" pos:end="317:59">

                            <comment type="block" pos:start="293:29" pos:end="297:42">/* each R, G, or B component is 16 bits;

                             * only use the top 8 bits; skip alpha bytes

                             * up front */</comment>

                            <expr_stmt pos:start="299:29" pos:end="299:41"><expr pos:start="299:29" pos:end="299:40"><call pos:start="299:29" pos:end="299:40"><name pos:start="299:29" pos:end="299:36">get_byte</name><argument_list pos:start="299:37" pos:end="299:40">(<argument pos:start="299:38" pos:end="299:39"><expr pos:start="299:38" pos:end="299:39"><name pos:start="299:38" pos:end="299:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="301:29" pos:end="301:41"><expr pos:start="301:29" pos:end="301:40"><call pos:start="301:29" pos:end="301:40"><name pos:start="301:29" pos:end="301:36">get_byte</name><argument_list pos:start="301:37" pos:end="301:40">(<argument pos:start="301:38" pos:end="301:39"><expr pos:start="301:38" pos:end="301:39"><name pos:start="301:38" pos:end="301:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="303:29" pos:end="303:45"><expr pos:start="303:29" pos:end="303:44"><name pos:start="303:29" pos:end="303:29">r</name> <operator pos:start="303:31" pos:end="303:31">=</operator> <call pos:start="303:33" pos:end="303:44"><name pos:start="303:33" pos:end="303:40">get_byte</name><argument_list pos:start="303:41" pos:end="303:44">(<argument pos:start="303:42" pos:end="303:43"><expr pos:start="303:42" pos:end="303:43"><name pos:start="303:42" pos:end="303:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="305:29" pos:end="305:41"><expr pos:start="305:29" pos:end="305:40"><call pos:start="305:29" pos:end="305:40"><name pos:start="305:29" pos:end="305:36">get_byte</name><argument_list pos:start="305:37" pos:end="305:40">(<argument pos:start="305:38" pos:end="305:39"><expr pos:start="305:38" pos:end="305:39"><name pos:start="305:38" pos:end="305:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="307:29" pos:end="307:45"><expr pos:start="307:29" pos:end="307:44"><name pos:start="307:29" pos:end="307:29">g</name> <operator pos:start="307:31" pos:end="307:31">=</operator> <call pos:start="307:33" pos:end="307:44"><name pos:start="307:33" pos:end="307:40">get_byte</name><argument_list pos:start="307:41" pos:end="307:44">(<argument pos:start="307:42" pos:end="307:43"><expr pos:start="307:42" pos:end="307:43"><name pos:start="307:42" pos:end="307:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="309:29" pos:end="309:41"><expr pos:start="309:29" pos:end="309:40"><call pos:start="309:29" pos:end="309:40"><name pos:start="309:29" pos:end="309:36">get_byte</name><argument_list pos:start="309:37" pos:end="309:40">(<argument pos:start="309:38" pos:end="309:39"><expr pos:start="309:38" pos:end="309:39"><name pos:start="309:38" pos:end="309:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="311:29" pos:end="311:45"><expr pos:start="311:29" pos:end="311:44"><name pos:start="311:29" pos:end="311:29">b</name> <operator pos:start="311:31" pos:end="311:31">=</operator> <call pos:start="311:33" pos:end="311:44"><name pos:start="311:33" pos:end="311:40">get_byte</name><argument_list pos:start="311:41" pos:end="311:44">(<argument pos:start="311:42" pos:end="311:43"><expr pos:start="311:42" pos:end="311:43"><name pos:start="311:42" pos:end="311:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="313:29" pos:end="313:41"><expr pos:start="313:29" pos:end="313:40"><call pos:start="313:29" pos:end="313:40"><name pos:start="313:29" pos:end="313:36">get_byte</name><argument_list pos:start="313:37" pos:end="313:40">(<argument pos:start="313:38" pos:end="313:39"><expr pos:start="313:38" pos:end="313:39"><name pos:start="313:38" pos:end="313:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="315:29" pos:end="317:59"><expr pos:start="315:29" pos:end="317:58"><name pos:start="315:29" pos:end="315:57"><name pos:start="315:29" pos:end="315:29">c</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:46">palette_control</name><operator pos:start="315:47" pos:end="315:47">.</operator><name pos:start="315:48" pos:end="315:54">palette</name><index pos:start="315:55" pos:end="315:57">[<expr pos:start="315:56" pos:end="315:56"><name pos:start="315:56" pos:end="315:56">j</name></expr>]</index></name> <operator pos:start="315:59" pos:end="315:59">=</operator>

                                <operator pos:start="317:33" pos:end="317:33">(</operator><name pos:start="317:34" pos:end="317:34">r</name> <operator pos:start="317:36" pos:end="317:37">&lt;&lt;</operator> <literal type="number" pos:start="317:39" pos:end="317:40">16</literal><operator pos:start="317:41" pos:end="317:41">)</operator> <operator pos:start="317:43" pos:end="317:43">|</operator> <operator pos:start="317:45" pos:end="317:45">(</operator><name pos:start="317:46" pos:end="317:46">g</name> <operator pos:start="317:48" pos:end="317:49">&lt;&lt;</operator> <literal type="number" pos:start="317:51" pos:end="317:51">8</literal><operator pos:start="317:52" pos:end="317:52">)</operator> <operator pos:start="317:54" pos:end="317:54">|</operator> <operator pos:start="317:56" pos:end="317:56">(</operator><name pos:start="317:57" pos:end="317:57">b</name><operator pos:start="317:58" pos:end="317:58">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="325:17" pos:end="325:57"><expr pos:start="325:17" pos:end="325:56"><name pos:start="325:17" pos:end="325:34"><name pos:start="325:17" pos:end="325:18">st</name><operator pos:start="325:19" pos:end="325:20">-&gt;</operator><name pos:start="325:21" pos:end="325:25">codec</name><operator pos:start="325:26" pos:end="325:27">-&gt;</operator><name pos:start="325:28" pos:end="325:34">palctrl</name></name> <operator pos:start="325:36" pos:end="325:36">=</operator> <operator pos:start="325:38" pos:end="325:38">&amp;</operator><name pos:start="325:39" pos:end="325:56"><name pos:start="325:39" pos:end="325:39">c</name><operator pos:start="325:40" pos:end="325:41">-&gt;</operator><name pos:start="325:42" pos:end="325:56">palette_control</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:56"><expr pos:start="327:17" pos:end="327:55"><name pos:start="327:17" pos:end="327:51"><name pos:start="327:17" pos:end="327:18">st</name><operator pos:start="327:19" pos:end="327:20">-&gt;</operator><name pos:start="327:21" pos:end="327:25">codec</name><operator pos:start="327:26" pos:end="327:27">-&gt;</operator><name pos:start="327:28" pos:end="327:34">palctrl</name><operator pos:start="327:35" pos:end="327:36">-&gt;</operator><name pos:start="327:37" pos:end="327:51">palette_changed</name></name> <operator pos:start="327:53" pos:end="327:53">=</operator> <literal type="number" pos:start="327:55" pos:end="327:55">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="329:15" pos:end="331:42">else<block type="pseudo" pos:start="331:17" pos:end="331:42"><block_content pos:start="331:17" pos:end="331:42">

                <expr_stmt pos:start="331:17" pos:end="331:42"><expr pos:start="331:17" pos:end="331:41"><name pos:start="331:17" pos:end="331:34"><name pos:start="331:17" pos:end="331:18">st</name><operator pos:start="331:19" pos:end="331:20">-&gt;</operator><name pos:start="331:21" pos:end="331:25">codec</name><operator pos:start="331:26" pos:end="331:27">-&gt;</operator><name pos:start="331:28" pos:end="331:34">palctrl</name></name> <operator pos:start="331:36" pos:end="331:36">=</operator> <name pos:start="331:38" pos:end="331:41">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="333:11" pos:end="493:9">else if<condition pos:start="333:18" pos:end="333:58">(<expr pos:start="333:19" pos:end="333:57"><name pos:start="333:19" pos:end="333:39"><name pos:start="333:19" pos:end="333:20">st</name><operator pos:start="333:21" pos:end="333:22">-&gt;</operator><name pos:start="333:23" pos:end="333:27">codec</name><operator pos:start="333:28" pos:end="333:29">-&gt;</operator><name pos:start="333:30" pos:end="333:39">codec_type</name></name><operator pos:start="333:40" pos:end="333:41">==</operator><name pos:start="333:42" pos:end="333:57">CODEC_TYPE_AUDIO</name></expr>)</condition> <block pos:start="333:60" pos:end="493:9">{<block_content pos:start="335:13" pos:end="491:13">

            <decl_stmt pos:start="335:13" pos:end="335:39"><decl pos:start="335:13" pos:end="335:31"><type pos:start="335:13" pos:end="335:15"><name pos:start="335:13" pos:end="335:15">int</name></type> <name pos:start="335:17" pos:end="335:31">bits_per_sample</name></decl>, <decl pos:start="335:34" pos:end="335:38"><type ref="prev" pos:start="335:13" pos:end="335:15"/><name pos:start="335:34" pos:end="335:38">flags</name></decl>;</decl_stmt>

            <decl_stmt pos:start="337:13" pos:end="337:44"><decl pos:start="337:13" pos:end="337:43"><type pos:start="337:13" pos:end="337:20"><name pos:start="337:13" pos:end="337:20">uint16_t</name></type> <name pos:start="337:22" pos:end="337:28">version</name> <init pos:start="337:30" pos:end="337:43">= <expr pos:start="337:32" pos:end="337:43"><call pos:start="337:32" pos:end="337:43"><name pos:start="337:32" pos:end="337:39">get_be16</name><argument_list pos:start="337:40" pos:end="337:43">(<argument pos:start="337:41" pos:end="337:42"><expr pos:start="337:41" pos:end="337:42"><name pos:start="337:41" pos:end="337:42">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="341:13" pos:end="341:37"><expr pos:start="341:13" pos:end="341:36"><name pos:start="341:13" pos:end="341:31"><name pos:start="341:13" pos:end="341:14">st</name><operator pos:start="341:15" pos:end="341:16">-&gt;</operator><name pos:start="341:17" pos:end="341:21">codec</name><operator pos:start="341:22" pos:end="341:23">-&gt;</operator><name pos:start="341:24" pos:end="341:31">codec_id</name></name> <operator pos:start="341:33" pos:end="341:33">=</operator> <name pos:start="341:35" pos:end="341:36">id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:25"><expr pos:start="343:13" pos:end="343:24"><call pos:start="343:13" pos:end="343:24"><name pos:start="343:13" pos:end="343:20">get_be16</name><argument_list pos:start="343:21" pos:end="343:24">(<argument pos:start="343:22" pos:end="343:23"><expr pos:start="343:22" pos:end="343:23"><name pos:start="343:22" pos:end="343:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="343:27" pos:end="343:46">/* revision level */</comment>

            <expr_stmt pos:start="345:13" pos:end="345:25"><expr pos:start="345:13" pos:end="345:24"><call pos:start="345:13" pos:end="345:24"><name pos:start="345:13" pos:end="345:20">get_be32</name><argument_list pos:start="345:21" pos:end="345:24">(<argument pos:start="345:22" pos:end="345:23"><expr pos:start="345:22" pos:end="345:23"><name pos:start="345:22" pos:end="345:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="345:27" pos:end="345:38">/* vendor */</comment>



            <expr_stmt pos:start="349:13" pos:end="349:47"><expr pos:start="349:13" pos:end="349:46"><name pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:14">st</name><operator pos:start="349:15" pos:end="349:16">-&gt;</operator><name pos:start="349:17" pos:end="349:21">codec</name><operator pos:start="349:22" pos:end="349:23">-&gt;</operator><name pos:start="349:24" pos:end="349:31">channels</name></name> <operator pos:start="349:33" pos:end="349:33">=</operator> <call pos:start="349:35" pos:end="349:46"><name pos:start="349:35" pos:end="349:42">get_be16</name><argument_list pos:start="349:43" pos:end="349:46">(<argument pos:start="349:44" pos:end="349:45"><expr pos:start="349:44" pos:end="349:45"><name pos:start="349:44" pos:end="349:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="349:61" pos:end="349:79">/* channel count */</comment>

            <expr_stmt pos:start="351:13" pos:end="351:71"><expr pos:start="351:13" pos:end="351:70"><call pos:start="351:13" pos:end="351:70"><name pos:start="351:13" pos:end="351:19">dprintf</name><argument_list pos:start="351:20" pos:end="351:70">(<argument pos:start="351:21" pos:end="351:25"><expr pos:start="351:21" pos:end="351:25"><name pos:start="351:21" pos:end="351:25"><name pos:start="351:21" pos:end="351:21">c</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:25">fc</name></name></expr></argument>, <argument pos:start="351:28" pos:end="351:48"><expr pos:start="351:28" pos:end="351:48"><literal type="string" pos:start="351:28" pos:end="351:48">"audio channels %d\n"</literal></expr></argument>, <argument pos:start="351:51" pos:end="351:69"><expr pos:start="351:51" pos:end="351:69"><name pos:start="351:51" pos:end="351:69"><name pos:start="351:51" pos:end="351:52">st</name><operator pos:start="351:53" pos:end="351:54">-&gt;</operator><name pos:start="351:55" pos:end="351:59">codec</name><operator pos:start="351:60" pos:end="351:61">-&gt;</operator><name pos:start="351:62" pos:end="351:69">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:60"><expr pos:start="353:13" pos:end="353:59"><name pos:start="353:13" pos:end="353:44"><name pos:start="353:13" pos:end="353:14">st</name><operator pos:start="353:15" pos:end="353:16">-&gt;</operator><name pos:start="353:17" pos:end="353:21">codec</name><operator pos:start="353:22" pos:end="353:23">-&gt;</operator><name pos:start="353:24" pos:end="353:44">bits_per_coded_sample</name></name> <operator pos:start="353:46" pos:end="353:46">=</operator> <call pos:start="353:48" pos:end="353:59"><name pos:start="353:48" pos:end="353:55">get_be16</name><argument_list pos:start="353:56" pos:end="353:59">(<argument pos:start="353:57" pos:end="353:58"><expr pos:start="353:57" pos:end="353:58"><name pos:start="353:57" pos:end="353:58">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="353:67" pos:end="353:83">/* sample size */</comment>



            <expr_stmt pos:start="357:13" pos:end="357:41"><expr pos:start="357:13" pos:end="357:40"><name pos:start="357:13" pos:end="357:25"><name pos:start="357:13" pos:end="357:14">sc</name><operator pos:start="357:15" pos:end="357:16">-&gt;</operator><name pos:start="357:17" pos:end="357:25">audio_cid</name></name> <operator pos:start="357:27" pos:end="357:27">=</operator> <call pos:start="357:29" pos:end="357:40"><name pos:start="357:29" pos:end="357:36">get_be16</name><argument_list pos:start="357:37" pos:end="357:40">(<argument pos:start="357:38" pos:end="357:39"><expr pos:start="357:38" pos:end="357:39"><name pos:start="357:38" pos:end="357:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:25"><expr pos:start="359:13" pos:end="359:24"><call pos:start="359:13" pos:end="359:24"><name pos:start="359:13" pos:end="359:20">get_be16</name><argument_list pos:start="359:21" pos:end="359:24">(<argument pos:start="359:22" pos:end="359:23"><expr pos:start="359:22" pos:end="359:23"><name pos:start="359:22" pos:end="359:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="359:27" pos:end="359:47">/* packet size = 0 */</comment>



            <expr_stmt pos:start="363:13" pos:end="363:60"><expr pos:start="363:13" pos:end="363:59"><name pos:start="363:13" pos:end="363:34"><name pos:start="363:13" pos:end="363:14">st</name><operator pos:start="363:15" pos:end="363:16">-&gt;</operator><name pos:start="363:17" pos:end="363:21">codec</name><operator pos:start="363:22" pos:end="363:23">-&gt;</operator><name pos:start="363:24" pos:end="363:34">sample_rate</name></name> <operator pos:start="363:36" pos:end="363:36">=</operator> <operator pos:start="363:38" pos:end="363:38">(</operator><operator pos:start="363:39" pos:end="363:39">(</operator><call pos:start="363:40" pos:end="363:51"><name pos:start="363:40" pos:end="363:47">get_be32</name><argument_list pos:start="363:48" pos:end="363:51">(<argument pos:start="363:49" pos:end="363:50"><expr pos:start="363:49" pos:end="363:50"><name pos:start="363:49" pos:end="363:50">pb</name></expr></argument>)</argument_list></call> <operator pos:start="363:53" pos:end="363:54">&gt;&gt;</operator> <literal type="number" pos:start="363:56" pos:end="363:57">16</literal><operator pos:start="363:58" pos:end="363:58">)</operator><operator pos:start="363:59" pos:end="363:59">)</operator></expr>;</expr_stmt>



            <comment type="line" pos:start="367:13" pos:end="367:72">//Read QT version 1 fields. In version 0 these do not exist.</comment>

            <expr_stmt pos:start="369:13" pos:end="369:70"><expr pos:start="369:13" pos:end="369:69"><call pos:start="369:13" pos:end="369:69"><name pos:start="369:13" pos:end="369:19">dprintf</name><argument_list pos:start="369:20" pos:end="369:69">(<argument pos:start="369:21" pos:end="369:25"><expr pos:start="369:21" pos:end="369:25"><name pos:start="369:21" pos:end="369:25"><name pos:start="369:21" pos:end="369:21">c</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:25">fc</name></name></expr></argument>, <argument pos:start="369:28" pos:end="369:52"><expr pos:start="369:28" pos:end="369:52"><literal type="string" pos:start="369:28" pos:end="369:52">"version =%d, isom =%d\n"</literal></expr></argument>,<argument pos:start="369:54" pos:end="369:60"><expr pos:start="369:54" pos:end="369:60"><name pos:start="369:54" pos:end="369:60">version</name></expr></argument>,<argument pos:start="369:62" pos:end="369:68"><expr pos:start="369:62" pos:end="369:68"><name pos:start="369:62" pos:end="369:68"><name pos:start="369:62" pos:end="369:62">c</name><operator pos:start="369:63" pos:end="369:64">-&gt;</operator><name pos:start="369:65" pos:end="369:68">isom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="371:13" pos:end="407:13"><if pos:start="371:13" pos:end="407:13">if<condition pos:start="371:15" pos:end="371:24">(<expr pos:start="371:16" pos:end="371:23"><operator pos:start="371:16" pos:end="371:16">!</operator><name pos:start="371:17" pos:end="371:23"><name pos:start="371:17" pos:end="371:17">c</name><operator pos:start="371:18" pos:end="371:19">-&gt;</operator><name pos:start="371:20" pos:end="371:23">isom</name></name></expr>)</condition> <block pos:start="371:26" pos:end="407:13">{<block_content pos:start="373:17" pos:end="405:17">

                <if_stmt pos:start="373:17" pos:end="405:17"><if pos:start="373:17" pos:end="383:17">if<condition pos:start="373:19" pos:end="373:30">(<expr pos:start="373:20" pos:end="373:29"><name pos:start="373:20" pos:end="373:26">version</name><operator pos:start="373:27" pos:end="373:28">==</operator><literal type="number" pos:start="373:29" pos:end="373:29">1</literal></expr>)</condition> <block pos:start="373:32" pos:end="383:17">{<block_content pos:start="375:21" pos:end="381:33">

                    <expr_stmt pos:start="375:21" pos:end="375:57"><expr pos:start="375:21" pos:end="375:56"><name pos:start="375:21" pos:end="375:41"><name pos:start="375:21" pos:end="375:22">sc</name><operator pos:start="375:23" pos:end="375:24">-&gt;</operator><name pos:start="375:25" pos:end="375:41">samples_per_frame</name></name> <operator pos:start="375:43" pos:end="375:43">=</operator> <call pos:start="375:45" pos:end="375:56"><name pos:start="375:45" pos:end="375:52">get_be32</name><argument_list pos:start="375:53" pos:end="375:56">(<argument pos:start="375:54" pos:end="375:55"><expr pos:start="375:54" pos:end="375:55"><name pos:start="375:54" pos:end="375:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="377:21" pos:end="377:33"><expr pos:start="377:21" pos:end="377:32"><call pos:start="377:21" pos:end="377:32"><name pos:start="377:21" pos:end="377:28">get_be32</name><argument_list pos:start="377:29" pos:end="377:32">(<argument pos:start="377:30" pos:end="377:31"><expr pos:start="377:30" pos:end="377:31"><name pos:start="377:30" pos:end="377:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="377:35" pos:end="377:56">/* bytes per packet */</comment>

                    <expr_stmt pos:start="379:21" pos:end="379:55"><expr pos:start="379:21" pos:end="379:54"><name pos:start="379:21" pos:end="379:39"><name pos:start="379:21" pos:end="379:22">sc</name><operator pos:start="379:23" pos:end="379:24">-&gt;</operator><name pos:start="379:25" pos:end="379:39">bytes_per_frame</name></name> <operator pos:start="379:41" pos:end="379:41">=</operator> <call pos:start="379:43" pos:end="379:54"><name pos:start="379:43" pos:end="379:50">get_be32</name><argument_list pos:start="379:51" pos:end="379:54">(<argument pos:start="379:52" pos:end="379:53"><expr pos:start="379:52" pos:end="379:53"><name pos:start="379:52" pos:end="379:53">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="381:21" pos:end="381:33"><expr pos:start="381:21" pos:end="381:32"><call pos:start="381:21" pos:end="381:32"><name pos:start="381:21" pos:end="381:28">get_be32</name><argument_list pos:start="381:29" pos:end="381:32">(<argument pos:start="381:30" pos:end="381:31"><expr pos:start="381:30" pos:end="381:31"><name pos:start="381:30" pos:end="381:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="381:35" pos:end="381:56">/* bytes per sample */</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="383:19" pos:end="405:17">else if<condition pos:start="383:26" pos:end="383:37">(<expr pos:start="383:27" pos:end="383:36"><name pos:start="383:27" pos:end="383:33">version</name><operator pos:start="383:34" pos:end="383:35">==</operator><literal type="number" pos:start="383:36" pos:end="383:36">2</literal></expr>)</condition> <block pos:start="383:39" pos:end="405:17">{<block_content pos:start="385:21" pos:end="403:109">

                    <expr_stmt pos:start="385:21" pos:end="385:33"><expr pos:start="385:21" pos:end="385:32"><call pos:start="385:21" pos:end="385:32"><name pos:start="385:21" pos:end="385:28">get_be32</name><argument_list pos:start="385:29" pos:end="385:32">(<argument pos:start="385:30" pos:end="385:31"><expr pos:start="385:30" pos:end="385:31"><name pos:start="385:30" pos:end="385:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="385:35" pos:end="385:58">/* sizeof struct only */</comment>

                    <expr_stmt pos:start="387:21" pos:end="387:70"><expr pos:start="387:21" pos:end="387:69"><name pos:start="387:21" pos:end="387:42"><name pos:start="387:21" pos:end="387:22">st</name><operator pos:start="387:23" pos:end="387:24">-&gt;</operator><name pos:start="387:25" pos:end="387:29">codec</name><operator pos:start="387:30" pos:end="387:31">-&gt;</operator><name pos:start="387:32" pos:end="387:42">sample_rate</name></name> <operator pos:start="387:44" pos:end="387:44">=</operator> <call pos:start="387:46" pos:end="387:69"><name pos:start="387:46" pos:end="387:55">av_int2dbl</name><argument_list pos:start="387:56" pos:end="387:69">(<argument pos:start="387:57" pos:end="387:68"><expr pos:start="387:57" pos:end="387:68"><call pos:start="387:57" pos:end="387:68"><name pos:start="387:57" pos:end="387:64">get_be64</name><argument_list pos:start="387:65" pos:end="387:68">(<argument pos:start="387:66" pos:end="387:67"><expr pos:start="387:66" pos:end="387:67"><name pos:start="387:66" pos:end="387:67">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="387:72" pos:end="387:85">/* float 64 */</comment>

                    <expr_stmt pos:start="389:21" pos:end="389:55"><expr pos:start="389:21" pos:end="389:54"><name pos:start="389:21" pos:end="389:39"><name pos:start="389:21" pos:end="389:22">st</name><operator pos:start="389:23" pos:end="389:24">-&gt;</operator><name pos:start="389:25" pos:end="389:29">codec</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:39">channels</name></name> <operator pos:start="389:41" pos:end="389:41">=</operator> <call pos:start="389:43" pos:end="389:54"><name pos:start="389:43" pos:end="389:50">get_be32</name><argument_list pos:start="389:51" pos:end="389:54">(<argument pos:start="389:52" pos:end="389:53"><expr pos:start="389:52" pos:end="389:53"><name pos:start="389:52" pos:end="389:53">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="391:21" pos:end="391:33"><expr pos:start="391:21" pos:end="391:32"><call pos:start="391:21" pos:end="391:32"><name pos:start="391:21" pos:end="391:28">get_be32</name><argument_list pos:start="391:29" pos:end="391:32">(<argument pos:start="391:30" pos:end="391:31"><expr pos:start="391:30" pos:end="391:31"><name pos:start="391:30" pos:end="391:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="391:35" pos:end="391:57">/* always 0x7F000000 */</comment>

                    <expr_stmt pos:start="393:21" pos:end="393:68"><expr pos:start="393:21" pos:end="393:67"><name pos:start="393:21" pos:end="393:52"><name pos:start="393:21" pos:end="393:22">st</name><operator pos:start="393:23" pos:end="393:24">-&gt;</operator><name pos:start="393:25" pos:end="393:29">codec</name><operator pos:start="393:30" pos:end="393:31">-&gt;</operator><name pos:start="393:32" pos:end="393:52">bits_per_coded_sample</name></name> <operator pos:start="393:54" pos:end="393:54">=</operator> <call pos:start="393:56" pos:end="393:67"><name pos:start="393:56" pos:end="393:63">get_be32</name><argument_list pos:start="393:64" pos:end="393:67">(<argument pos:start="393:65" pos:end="393:66"><expr pos:start="393:65" pos:end="393:66"><name pos:start="393:65" pos:end="393:66">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="393:70" pos:end="393:116">/* bits per channel if sound is uncompressed */</comment>

                    <expr_stmt pos:start="395:21" pos:end="395:41"><expr pos:start="395:21" pos:end="395:40"><name pos:start="395:21" pos:end="395:25">flags</name> <operator pos:start="395:27" pos:end="395:27">=</operator> <call pos:start="395:29" pos:end="395:40"><name pos:start="395:29" pos:end="395:36">get_be32</name><argument_list pos:start="395:37" pos:end="395:40">(<argument pos:start="395:38" pos:end="395:39"><expr pos:start="395:38" pos:end="395:39"><name pos:start="395:38" pos:end="395:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="395:43" pos:end="395:73">/* lcpm format specific flag */</comment>

                    <expr_stmt pos:start="397:21" pos:end="397:55"><expr pos:start="397:21" pos:end="397:54"><name pos:start="397:21" pos:end="397:39"><name pos:start="397:21" pos:end="397:22">sc</name><operator pos:start="397:23" pos:end="397:24">-&gt;</operator><name pos:start="397:25" pos:end="397:39">bytes_per_frame</name></name> <operator pos:start="397:41" pos:end="397:41">=</operator> <call pos:start="397:43" pos:end="397:54"><name pos:start="397:43" pos:end="397:50">get_be32</name><argument_list pos:start="397:51" pos:end="397:54">(<argument pos:start="397:52" pos:end="397:53"><expr pos:start="397:52" pos:end="397:53"><name pos:start="397:52" pos:end="397:53">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="397:57" pos:end="397:96">/* bytes per audio packet if constant */</comment>

                    <expr_stmt pos:start="399:21" pos:end="399:57"><expr pos:start="399:21" pos:end="399:56"><name pos:start="399:21" pos:end="399:41"><name pos:start="399:21" pos:end="399:22">sc</name><operator pos:start="399:23" pos:end="399:24">-&gt;</operator><name pos:start="399:25" pos:end="399:41">samples_per_frame</name></name> <operator pos:start="399:43" pos:end="399:43">=</operator> <call pos:start="399:45" pos:end="399:56"><name pos:start="399:45" pos:end="399:52">get_be32</name><argument_list pos:start="399:53" pos:end="399:56">(<argument pos:start="399:54" pos:end="399:55"><expr pos:start="399:54" pos:end="399:55"><name pos:start="399:54" pos:end="399:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="399:59" pos:end="399:104">/* lpcm frames per audio packet if constant */</comment>

                    <if_stmt pos:start="401:21" pos:end="403:109"><if pos:start="401:21" pos:end="403:109">if <condition pos:start="401:24" pos:end="401:57">(<expr pos:start="401:25" pos:end="401:56"><name pos:start="401:25" pos:end="401:30">format</name> <operator pos:start="401:32" pos:end="401:33">==</operator> <call pos:start="401:35" pos:end="401:56"><name pos:start="401:35" pos:end="401:39">MKTAG</name><argument_list pos:start="401:40" pos:end="401:56">(<argument pos:start="401:41" pos:end="401:43"><expr pos:start="401:41" pos:end="401:43"><literal type="char" pos:start="401:41" pos:end="401:43">'l'</literal></expr></argument>,<argument pos:start="401:45" pos:end="401:47"><expr pos:start="401:45" pos:end="401:47"><literal type="char" pos:start="401:45" pos:end="401:47">'p'</literal></expr></argument>,<argument pos:start="401:49" pos:end="401:51"><expr pos:start="401:49" pos:end="401:51"><literal type="char" pos:start="401:49" pos:end="401:51">'c'</literal></expr></argument>,<argument pos:start="401:53" pos:end="401:55"><expr pos:start="401:53" pos:end="401:55"><literal type="char" pos:start="401:53" pos:end="401:55">'m'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="403:25" pos:end="403:109"><block_content pos:start="403:25" pos:end="403:109">

                        <expr_stmt pos:start="403:25" pos:end="403:109"><expr pos:start="403:25" pos:end="403:108"><name pos:start="403:25" pos:end="403:43"><name pos:start="403:25" pos:end="403:26">st</name><operator pos:start="403:27" pos:end="403:28">-&gt;</operator><name pos:start="403:29" pos:end="403:33">codec</name><operator pos:start="403:34" pos:end="403:35">-&gt;</operator><name pos:start="403:36" pos:end="403:43">codec_id</name></name> <operator pos:start="403:45" pos:end="403:45">=</operator> <call pos:start="403:47" pos:end="403:108"><name pos:start="403:47" pos:end="403:67">mov_get_lpcm_codec_id</name><argument_list pos:start="403:68" pos:end="403:108">(<argument pos:start="403:69" pos:end="403:100"><expr pos:start="403:69" pos:end="403:100"><name pos:start="403:69" pos:end="403:100"><name pos:start="403:69" pos:end="403:70">st</name><operator pos:start="403:71" pos:end="403:72">-&gt;</operator><name pos:start="403:73" pos:end="403:77">codec</name><operator pos:start="403:78" pos:end="403:79">-&gt;</operator><name pos:start="403:80" pos:end="403:100">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="403:103" pos:end="403:107"><expr pos:start="403:103" pos:end="403:107"><name pos:start="403:103" pos:end="403:107">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="411:13" pos:end="479:13">switch <condition pos:start="411:20" pos:end="411:40">(<expr pos:start="411:21" pos:end="411:39"><name pos:start="411:21" pos:end="411:39"><name pos:start="411:21" pos:end="411:22">st</name><operator pos:start="411:23" pos:end="411:24">-&gt;</operator><name pos:start="411:25" pos:end="411:29">codec</name><operator pos:start="411:30" pos:end="411:31">-&gt;</operator><name pos:start="411:32" pos:end="411:39">codec_id</name></name></expr>)</condition> <block pos:start="411:42" pos:end="479:13">{<block_content pos:start="413:13" pos:end="477:22">

            <case pos:start="413:13" pos:end="413:33">case <expr pos:start="413:18" pos:end="413:32"><name pos:start="413:18" pos:end="413:32">CODEC_ID_PCM_S8</name></expr>:</case>

            <case pos:start="415:13" pos:end="415:33">case <expr pos:start="415:18" pos:end="415:32"><name pos:start="415:18" pos:end="415:32">CODEC_ID_PCM_U8</name></expr>:</case>

                <if_stmt pos:start="417:17" pos:end="419:61"><if pos:start="417:17" pos:end="419:61">if <condition pos:start="417:20" pos:end="417:59">(<expr pos:start="417:21" pos:end="417:58"><name pos:start="417:21" pos:end="417:52"><name pos:start="417:21" pos:end="417:22">st</name><operator pos:start="417:23" pos:end="417:24">-&gt;</operator><name pos:start="417:25" pos:end="417:29">codec</name><operator pos:start="417:30" pos:end="417:31">-&gt;</operator><name pos:start="417:32" pos:end="417:52">bits_per_coded_sample</name></name> <operator pos:start="417:54" pos:end="417:55">==</operator> <literal type="number" pos:start="417:57" pos:end="417:58">16</literal></expr>)</condition><block type="pseudo" pos:start="419:21" pos:end="419:61"><block_content pos:start="419:21" pos:end="419:61">

                    <expr_stmt pos:start="419:21" pos:end="419:61"><expr pos:start="419:21" pos:end="419:60"><name pos:start="419:21" pos:end="419:39"><name pos:start="419:21" pos:end="419:22">st</name><operator pos:start="419:23" pos:end="419:24">-&gt;</operator><name pos:start="419:25" pos:end="419:29">codec</name><operator pos:start="419:30" pos:end="419:31">-&gt;</operator><name pos:start="419:32" pos:end="419:39">codec_id</name></name> <operator pos:start="419:41" pos:end="419:41">=</operator> <name pos:start="419:43" pos:end="419:60">CODEC_ID_PCM_S16BE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="421:17" pos:end="421:22">break;</break>

            <case pos:start="423:13" pos:end="423:36">case <expr pos:start="423:18" pos:end="423:35"><name pos:start="423:18" pos:end="423:35">CODEC_ID_PCM_S16LE</name></expr>:</case>

            <case pos:start="425:13" pos:end="425:36">case <expr pos:start="425:18" pos:end="425:35"><name pos:start="425:18" pos:end="425:35">CODEC_ID_PCM_S16BE</name></expr>:</case>

                <if_stmt pos:start="427:17" pos:end="437:64"><if pos:start="427:17" pos:end="429:58">if <condition pos:start="427:20" pos:end="427:58">(<expr pos:start="427:21" pos:end="427:57"><name pos:start="427:21" pos:end="427:52"><name pos:start="427:21" pos:end="427:22">st</name><operator pos:start="427:23" pos:end="427:24">-&gt;</operator><name pos:start="427:25" pos:end="427:29">codec</name><operator pos:start="427:30" pos:end="427:31">-&gt;</operator><name pos:start="427:32" pos:end="427:52">bits_per_coded_sample</name></name> <operator pos:start="427:54" pos:end="427:55">==</operator> <literal type="number" pos:start="427:57" pos:end="427:57">8</literal></expr>)</condition><block type="pseudo" pos:start="429:21" pos:end="429:58"><block_content pos:start="429:21" pos:end="429:58">

                    <expr_stmt pos:start="429:21" pos:end="429:58"><expr pos:start="429:21" pos:end="429:57"><name pos:start="429:21" pos:end="429:39"><name pos:start="429:21" pos:end="429:22">st</name><operator pos:start="429:23" pos:end="429:24">-&gt;</operator><name pos:start="429:25" pos:end="429:29">codec</name><operator pos:start="429:30" pos:end="429:31">-&gt;</operator><name pos:start="429:32" pos:end="429:39">codec_id</name></name> <operator pos:start="429:41" pos:end="429:41">=</operator> <name pos:start="429:43" pos:end="429:57">CODEC_ID_PCM_S8</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="431:17" pos:end="437:64">else if <condition pos:start="431:25" pos:end="431:64">(<expr pos:start="431:26" pos:end="431:63"><name pos:start="431:26" pos:end="431:57"><name pos:start="431:26" pos:end="431:27">st</name><operator pos:start="431:28" pos:end="431:29">-&gt;</operator><name pos:start="431:30" pos:end="431:34">codec</name><operator pos:start="431:35" pos:end="431:36">-&gt;</operator><name pos:start="431:37" pos:end="431:57">bits_per_coded_sample</name></name> <operator pos:start="431:59" pos:end="431:60">==</operator> <literal type="number" pos:start="431:62" pos:end="431:63">24</literal></expr>)</condition><block type="pseudo" pos:start="433:21" pos:end="437:64"><block_content pos:start="433:21" pos:end="437:64">

                    <expr_stmt pos:start="433:21" pos:end="437:64"><expr pos:start="433:21" pos:end="437:63"><name pos:start="433:21" pos:end="433:39"><name pos:start="433:21" pos:end="433:22">st</name><operator pos:start="433:23" pos:end="433:24">-&gt;</operator><name pos:start="433:25" pos:end="433:29">codec</name><operator pos:start="433:30" pos:end="433:31">-&gt;</operator><name pos:start="433:32" pos:end="433:39">codec_id</name></name> <operator pos:start="433:41" pos:end="433:41">=</operator>

                        <ternary pos:start="435:25" pos:end="437:63"><condition pos:start="435:25" pos:end="435:67"><expr pos:start="435:25" pos:end="435:65"><name pos:start="435:25" pos:end="435:43"><name pos:start="435:25" pos:end="435:26">st</name><operator pos:start="435:27" pos:end="435:28">-&gt;</operator><name pos:start="435:29" pos:end="435:33">codec</name><operator pos:start="435:34" pos:end="435:35">-&gt;</operator><name pos:start="435:36" pos:end="435:43">codec_id</name></name> <operator pos:start="435:45" pos:end="435:46">==</operator> <name pos:start="435:48" pos:end="435:65">CODEC_ID_PCM_S16BE</name></expr> ?</condition><then pos:start="437:25" pos:end="437:42">

                        <expr pos:start="437:25" pos:end="437:42"><name pos:start="437:25" pos:end="437:42">CODEC_ID_PCM_S24BE</name></expr> </then><else pos:start="437:44" pos:end="437:63">: <expr pos:start="437:46" pos:end="437:63"><name pos:start="437:46" pos:end="437:63">CODEC_ID_PCM_S24LE</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="439:17" pos:end="439:22">break;</break>

            <comment type="block" pos:start="441:13" pos:end="441:74">/* set values for old format before stsd version 1 appeared */</comment>

            <case pos:start="443:13" pos:end="443:32">case <expr pos:start="443:18" pos:end="443:31"><name pos:start="443:18" pos:end="443:31">CODEC_ID_MACE3</name></expr>:</case>

                <expr_stmt pos:start="445:17" pos:end="445:42"><expr pos:start="445:17" pos:end="445:41"><name pos:start="445:17" pos:end="445:37"><name pos:start="445:17" pos:end="445:18">sc</name><operator pos:start="445:19" pos:end="445:20">-&gt;</operator><name pos:start="445:21" pos:end="445:37">samples_per_frame</name></name> <operator pos:start="445:39" pos:end="445:39">=</operator> <literal type="number" pos:start="445:41" pos:end="445:41">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="447:17" pos:end="447:60"><expr pos:start="447:17" pos:end="447:59"><name pos:start="447:17" pos:end="447:35"><name pos:start="447:17" pos:end="447:18">sc</name><operator pos:start="447:19" pos:end="447:20">-&gt;</operator><name pos:start="447:21" pos:end="447:35">bytes_per_frame</name></name> <operator pos:start="447:37" pos:end="447:37">=</operator> <literal type="number" pos:start="447:39" pos:end="447:39">2</literal><operator pos:start="447:40" pos:end="447:40">*</operator><name pos:start="447:41" pos:end="447:59"><name pos:start="447:41" pos:end="447:42">st</name><operator pos:start="447:43" pos:end="447:44">-&gt;</operator><name pos:start="447:45" pos:end="447:49">codec</name><operator pos:start="447:50" pos:end="447:51">-&gt;</operator><name pos:start="447:52" pos:end="447:59">channels</name></name></expr>;</expr_stmt>

                <break pos:start="449:17" pos:end="449:22">break;</break>

            <case pos:start="451:13" pos:end="451:32">case <expr pos:start="451:18" pos:end="451:31"><name pos:start="451:18" pos:end="451:31">CODEC_ID_MACE6</name></expr>:</case>

                <expr_stmt pos:start="453:17" pos:end="453:42"><expr pos:start="453:17" pos:end="453:41"><name pos:start="453:17" pos:end="453:37"><name pos:start="453:17" pos:end="453:18">sc</name><operator pos:start="453:19" pos:end="453:20">-&gt;</operator><name pos:start="453:21" pos:end="453:37">samples_per_frame</name></name> <operator pos:start="453:39" pos:end="453:39">=</operator> <literal type="number" pos:start="453:41" pos:end="453:41">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="455:17" pos:end="455:60"><expr pos:start="455:17" pos:end="455:59"><name pos:start="455:17" pos:end="455:35"><name pos:start="455:17" pos:end="455:18">sc</name><operator pos:start="455:19" pos:end="455:20">-&gt;</operator><name pos:start="455:21" pos:end="455:35">bytes_per_frame</name></name> <operator pos:start="455:37" pos:end="455:37">=</operator> <literal type="number" pos:start="455:39" pos:end="455:39">1</literal><operator pos:start="455:40" pos:end="455:40">*</operator><name pos:start="455:41" pos:end="455:59"><name pos:start="455:41" pos:end="455:42">st</name><operator pos:start="455:43" pos:end="455:44">-&gt;</operator><name pos:start="455:45" pos:end="455:49">codec</name><operator pos:start="455:50" pos:end="455:51">-&gt;</operator><name pos:start="455:52" pos:end="455:59">channels</name></name></expr>;</expr_stmt>

                <break pos:start="457:17" pos:end="457:22">break;</break>

            <case pos:start="459:13" pos:end="459:39">case <expr pos:start="459:18" pos:end="459:38"><name pos:start="459:18" pos:end="459:38">CODEC_ID_ADPCM_IMA_QT</name></expr>:</case>

                <expr_stmt pos:start="461:17" pos:end="461:43"><expr pos:start="461:17" pos:end="461:42"><name pos:start="461:17" pos:end="461:37"><name pos:start="461:17" pos:end="461:18">sc</name><operator pos:start="461:19" pos:end="461:20">-&gt;</operator><name pos:start="461:21" pos:end="461:37">samples_per_frame</name></name> <operator pos:start="461:39" pos:end="461:39">=</operator> <literal type="number" pos:start="461:41" pos:end="461:42">64</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="463:17" pos:end="463:61"><expr pos:start="463:17" pos:end="463:60"><name pos:start="463:17" pos:end="463:35"><name pos:start="463:17" pos:end="463:18">sc</name><operator pos:start="463:19" pos:end="463:20">-&gt;</operator><name pos:start="463:21" pos:end="463:35">bytes_per_frame</name></name> <operator pos:start="463:37" pos:end="463:37">=</operator> <literal type="number" pos:start="463:39" pos:end="463:40">34</literal><operator pos:start="463:41" pos:end="463:41">*</operator><name pos:start="463:42" pos:end="463:60"><name pos:start="463:42" pos:end="463:43">st</name><operator pos:start="463:44" pos:end="463:45">-&gt;</operator><name pos:start="463:46" pos:end="463:50">codec</name><operator pos:start="463:51" pos:end="463:52">-&gt;</operator><name pos:start="463:53" pos:end="463:60">channels</name></name></expr>;</expr_stmt>

                <break pos:start="465:17" pos:end="465:22">break;</break>

            <case pos:start="467:13" pos:end="467:30">case <expr pos:start="467:18" pos:end="467:29"><name pos:start="467:18" pos:end="467:29">CODEC_ID_GSM</name></expr>:</case>

                <expr_stmt pos:start="469:17" pos:end="469:44"><expr pos:start="469:17" pos:end="469:43"><name pos:start="469:17" pos:end="469:37"><name pos:start="469:17" pos:end="469:18">sc</name><operator pos:start="469:19" pos:end="469:20">-&gt;</operator><name pos:start="469:21" pos:end="469:37">samples_per_frame</name></name> <operator pos:start="469:39" pos:end="469:39">=</operator> <literal type="number" pos:start="469:41" pos:end="469:43">160</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:41"><expr pos:start="471:17" pos:end="471:40"><name pos:start="471:17" pos:end="471:35"><name pos:start="471:17" pos:end="471:18">sc</name><operator pos:start="471:19" pos:end="471:20">-&gt;</operator><name pos:start="471:21" pos:end="471:35">bytes_per_frame</name></name> <operator pos:start="471:37" pos:end="471:37">=</operator> <literal type="number" pos:start="471:39" pos:end="471:40">33</literal></expr>;</expr_stmt>

                <break pos:start="473:17" pos:end="473:22">break;</break>

            <default pos:start="475:13" pos:end="475:20">default:</default>

                <break pos:start="477:17" pos:end="477:22">break;</break>

            </block_content>}</block></switch>



            <expr_stmt pos:start="483:13" pos:end="483:74"><expr pos:start="483:13" pos:end="483:73"><name pos:start="483:13" pos:end="483:27">bits_per_sample</name> <operator pos:start="483:29" pos:end="483:29">=</operator> <call pos:start="483:31" pos:end="483:73"><name pos:start="483:31" pos:end="483:52">av_get_bits_per_sample</name><argument_list pos:start="483:53" pos:end="483:73">(<argument pos:start="483:54" pos:end="483:72"><expr pos:start="483:54" pos:end="483:72"><name pos:start="483:54" pos:end="483:72"><name pos:start="483:54" pos:end="483:55">st</name><operator pos:start="483:56" pos:end="483:57">-&gt;</operator><name pos:start="483:58" pos:end="483:62">codec</name><operator pos:start="483:63" pos:end="483:64">-&gt;</operator><name pos:start="483:65" pos:end="483:72">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="485:13" pos:end="491:13"><if pos:start="485:13" pos:end="491:13">if <condition pos:start="485:16" pos:end="485:32">(<expr pos:start="485:17" pos:end="485:31"><name pos:start="485:17" pos:end="485:31">bits_per_sample</name></expr>)</condition> <block pos:start="485:34" pos:end="491:13">{<block_content pos:start="487:17" pos:end="489:79">

                <expr_stmt pos:start="487:17" pos:end="487:67"><expr pos:start="487:17" pos:end="487:66"><name pos:start="487:17" pos:end="487:48"><name pos:start="487:17" pos:end="487:18">st</name><operator pos:start="487:19" pos:end="487:20">-&gt;</operator><name pos:start="487:21" pos:end="487:25">codec</name><operator pos:start="487:26" pos:end="487:27">-&gt;</operator><name pos:start="487:28" pos:end="487:48">bits_per_coded_sample</name></name> <operator pos:start="487:50" pos:end="487:50">=</operator> <name pos:start="487:52" pos:end="487:66">bits_per_sample</name></expr>;</expr_stmt>

                <expr_stmt pos:start="489:17" pos:end="489:79"><expr pos:start="489:17" pos:end="489:78"><name pos:start="489:17" pos:end="489:31"><name pos:start="489:17" pos:end="489:18">sc</name><operator pos:start="489:19" pos:end="489:20">-&gt;</operator><name pos:start="489:21" pos:end="489:31">sample_size</name></name> <operator pos:start="489:33" pos:end="489:33">=</operator> <operator pos:start="489:35" pos:end="489:35">(</operator><name pos:start="489:36" pos:end="489:50">bits_per_sample</name> <operator pos:start="489:52" pos:end="489:53">&gt;&gt;</operator> <literal type="number" pos:start="489:55" pos:end="489:55">3</literal><operator pos:start="489:56" pos:end="489:56">)</operator> <operator pos:start="489:58" pos:end="489:58">*</operator> <name pos:start="489:60" pos:end="489:78"><name pos:start="489:60" pos:end="489:61">st</name><operator pos:start="489:62" pos:end="489:63">-&gt;</operator><name pos:start="489:64" pos:end="489:68">codec</name><operator pos:start="489:69" pos:end="489:70">-&gt;</operator><name pos:start="489:71" pos:end="489:78">channels</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="493:11" pos:end="497:9">else if<condition pos:start="493:18" pos:end="493:61">(<expr pos:start="493:19" pos:end="493:60"><name pos:start="493:19" pos:end="493:39"><name pos:start="493:19" pos:end="493:20">st</name><operator pos:start="493:21" pos:end="493:22">-&gt;</operator><name pos:start="493:23" pos:end="493:27">codec</name><operator pos:start="493:28" pos:end="493:29">-&gt;</operator><name pos:start="493:30" pos:end="493:39">codec_type</name></name><operator pos:start="493:40" pos:end="493:41">==</operator><name pos:start="493:42" pos:end="493:60">CODEC_TYPE_SUBTITLE</name></expr>)</condition><block pos:start="493:62" pos:end="497:9">{<block_content pos:start="495:13" pos:end="495:36">

            <expr_stmt pos:start="495:13" pos:end="495:36"><expr pos:start="495:13" pos:end="495:35"><name pos:start="495:13" pos:end="495:31"><name pos:start="495:13" pos:end="495:14">st</name><operator pos:start="495:15" pos:end="495:16">-&gt;</operator><name pos:start="495:17" pos:end="495:21">codec</name><operator pos:start="495:22" pos:end="495:23">-&gt;</operator><name pos:start="495:24" pos:end="495:31">codec_id</name></name><operator pos:start="495:32" pos:end="495:32">=</operator> <name pos:start="495:34" pos:end="495:35">id</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="497:11" pos:end="503:9">else <block pos:start="497:16" pos:end="503:9">{<block_content pos:start="501:13" pos:end="501:62">

            <comment type="block" pos:start="499:13" pos:end="499:67">/* other codec type, just skip (rtp, mp4s, tmcd ...) */</comment>

            <expr_stmt pos:start="501:13" pos:end="501:62"><expr pos:start="501:13" pos:end="501:61"><call pos:start="501:13" pos:end="501:61"><name pos:start="501:13" pos:end="501:21">url_fskip</name><argument_list pos:start="501:22" pos:end="501:61">(<argument pos:start="501:23" pos:end="501:24"><expr pos:start="501:23" pos:end="501:24"><name pos:start="501:23" pos:end="501:24">pb</name></expr></argument>, <argument pos:start="501:27" pos:end="501:60"><expr pos:start="501:27" pos:end="501:60"><name pos:start="501:27" pos:end="501:30">size</name> <operator pos:start="501:32" pos:end="501:32">-</operator> <operator pos:start="501:34" pos:end="501:34">(</operator><call pos:start="501:35" pos:end="501:47"><name pos:start="501:35" pos:end="501:43">url_ftell</name><argument_list pos:start="501:44" pos:end="501:47">(<argument pos:start="501:45" pos:end="501:46"><expr pos:start="501:45" pos:end="501:46"><name pos:start="501:45" pos:end="501:46">pb</name></expr></argument>)</argument_list></call> <operator pos:start="501:49" pos:end="501:49">-</operator> <name pos:start="501:51" pos:end="501:59">start_pos</name><operator pos:start="501:60" pos:end="501:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="505:9" pos:end="505:85">/* this will read extra atoms at the end (wave, alac, damr, avcC, SMI ...) */</comment>

        <expr_stmt pos:start="507:9" pos:end="507:52"><expr pos:start="507:9" pos:end="507:51"><name pos:start="507:9" pos:end="507:14"><name pos:start="507:9" pos:end="507:9">a</name><operator pos:start="507:10" pos:end="507:10">.</operator><name pos:start="507:11" pos:end="507:14">size</name></name> <operator pos:start="507:16" pos:end="507:16">=</operator> <name pos:start="507:18" pos:end="507:21">size</name> <operator pos:start="507:23" pos:end="507:23">-</operator> <operator pos:start="507:25" pos:end="507:25">(</operator><call pos:start="507:26" pos:end="507:38"><name pos:start="507:26" pos:end="507:34">url_ftell</name><argument_list pos:start="507:35" pos:end="507:38">(<argument pos:start="507:36" pos:end="507:37"><expr pos:start="507:36" pos:end="507:37"><name pos:start="507:36" pos:end="507:37">pb</name></expr></argument>)</argument_list></call> <operator pos:start="507:40" pos:end="507:40">-</operator> <name pos:start="507:42" pos:end="507:50">start_pos</name><operator pos:start="507:51" pos:end="507:51">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="509:9" pos:end="517:34"><if pos:start="509:9" pos:end="515:9">if <condition pos:start="509:12" pos:end="509:23">(<expr pos:start="509:13" pos:end="509:22"><name pos:start="509:13" pos:end="509:18"><name pos:start="509:13" pos:end="509:13">a</name><operator pos:start="509:14" pos:end="509:14">.</operator><name pos:start="509:15" pos:end="509:18">size</name></name> <operator pos:start="509:20" pos:end="509:20">&gt;</operator> <literal type="number" pos:start="509:22" pos:end="509:22">8</literal></expr>)</condition> <block pos:start="509:25" pos:end="515:9">{<block_content pos:start="511:13" pos:end="513:26">

            <if_stmt pos:start="511:13" pos:end="513:26"><if pos:start="511:13" pos:end="513:26">if <condition pos:start="511:16" pos:end="511:47">(<expr pos:start="511:17" pos:end="511:46"><call pos:start="511:17" pos:end="511:42"><name pos:start="511:17" pos:end="511:32">mov_read_default</name><argument_list pos:start="511:33" pos:end="511:42">(<argument pos:start="511:34" pos:end="511:34"><expr pos:start="511:34" pos:end="511:34"><name pos:start="511:34" pos:end="511:34">c</name></expr></argument>, <argument pos:start="511:37" pos:end="511:38"><expr pos:start="511:37" pos:end="511:38"><name pos:start="511:37" pos:end="511:38">pb</name></expr></argument>, <argument pos:start="511:41" pos:end="511:41"><expr pos:start="511:41" pos:end="511:41"><name pos:start="511:41" pos:end="511:41">a</name></expr></argument>)</argument_list></call> <operator pos:start="511:44" pos:end="511:44">&lt;</operator> <literal type="number" pos:start="511:46" pos:end="511:46">0</literal></expr>)</condition><block type="pseudo" pos:start="513:17" pos:end="513:26"><block_content pos:start="513:17" pos:end="513:26">

                <return pos:start="513:17" pos:end="513:26">return <expr pos:start="513:24" pos:end="513:25"><operator pos:start="513:24" pos:end="513:24">-</operator><literal type="number" pos:start="513:25" pos:end="513:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="515:11" pos:end="517:34">else if <condition pos:start="515:19" pos:end="515:30">(<expr pos:start="515:20" pos:end="515:29"><name pos:start="515:20" pos:end="515:25"><name pos:start="515:20" pos:end="515:20">a</name><operator pos:start="515:21" pos:end="515:21">.</operator><name pos:start="515:22" pos:end="515:25">size</name></name> <operator pos:start="515:27" pos:end="515:27">&gt;</operator> <literal type="number" pos:start="515:29" pos:end="515:29">0</literal></expr>)</condition><block type="pseudo" pos:start="517:13" pos:end="517:34"><block_content pos:start="517:13" pos:end="517:34">

            <expr_stmt pos:start="517:13" pos:end="517:34"><expr pos:start="517:13" pos:end="517:33"><call pos:start="517:13" pos:end="517:33"><name pos:start="517:13" pos:end="517:21">url_fskip</name><argument_list pos:start="517:22" pos:end="517:33">(<argument pos:start="517:23" pos:end="517:24"><expr pos:start="517:23" pos:end="517:24"><name pos:start="517:23" pos:end="517:24">pb</name></expr></argument>, <argument pos:start="517:27" pos:end="517:32"><expr pos:start="517:27" pos:end="517:32"><name pos:start="517:27" pos:end="517:32"><name pos:start="517:27" pos:end="517:27">a</name><operator pos:start="517:28" pos:end="517:28">.</operator><name pos:start="517:29" pos:end="517:32">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="523:5" pos:end="525:47"><if pos:start="523:5" pos:end="525:47">if<condition pos:start="523:7" pos:end="523:96">(<expr pos:start="523:8" pos:end="523:95"><name pos:start="523:8" pos:end="523:28"><name pos:start="523:8" pos:end="523:9">st</name><operator pos:start="523:10" pos:end="523:11">-&gt;</operator><name pos:start="523:12" pos:end="523:16">codec</name><operator pos:start="523:17" pos:end="523:18">-&gt;</operator><name pos:start="523:19" pos:end="523:28">codec_type</name></name><operator pos:start="523:29" pos:end="523:30">==</operator><name pos:start="523:31" pos:end="523:46">CODEC_TYPE_AUDIO</name> <operator pos:start="523:48" pos:end="523:49">&amp;&amp;</operator> <name pos:start="523:51" pos:end="523:72"><name pos:start="523:51" pos:end="523:52">st</name><operator pos:start="523:53" pos:end="523:54">-&gt;</operator><name pos:start="523:55" pos:end="523:59">codec</name><operator pos:start="523:60" pos:end="523:61">-&gt;</operator><name pos:start="523:62" pos:end="523:72">sample_rate</name></name><operator pos:start="523:73" pos:end="523:74">==</operator><literal type="number" pos:start="523:75" pos:end="523:75">0</literal> <operator pos:start="523:77" pos:end="523:78">&amp;&amp;</operator> <name pos:start="523:80" pos:end="523:93"><name pos:start="523:80" pos:end="523:81">sc</name><operator pos:start="523:82" pos:end="523:83">-&gt;</operator><name pos:start="523:84" pos:end="523:93">time_scale</name></name><operator pos:start="523:94" pos:end="523:94">&gt;</operator><literal type="number" pos:start="523:95" pos:end="523:95">1</literal></expr>)</condition><block type="pseudo" pos:start="525:9" pos:end="525:47"><block_content pos:start="525:9" pos:end="525:47">

        <expr_stmt pos:start="525:9" pos:end="525:47"><expr pos:start="525:9" pos:end="525:46"><name pos:start="525:9" pos:end="525:30"><name pos:start="525:9" pos:end="525:10">st</name><operator pos:start="525:11" pos:end="525:12">-&gt;</operator><name pos:start="525:13" pos:end="525:17">codec</name><operator pos:start="525:18" pos:end="525:19">-&gt;</operator><name pos:start="525:20" pos:end="525:30">sample_rate</name></name><operator pos:start="525:31" pos:end="525:31">=</operator> <name pos:start="525:33" pos:end="525:46"><name pos:start="525:33" pos:end="525:34">sc</name><operator pos:start="525:35" pos:end="525:36">-&gt;</operator><name pos:start="525:37" pos:end="525:46">time_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="529:5" pos:end="529:43">/* special codec parameters handling */</comment>

    <switch pos:start="531:5" pos:end="611:5">switch <condition pos:start="531:12" pos:end="531:32">(<expr pos:start="531:13" pos:end="531:31"><name pos:start="531:13" pos:end="531:31"><name pos:start="531:13" pos:end="531:14">st</name><operator pos:start="531:15" pos:end="531:16">-&gt;</operator><name pos:start="531:17" pos:end="531:21">codec</name><operator pos:start="531:22" pos:end="531:23">-&gt;</operator><name pos:start="531:24" pos:end="531:31">codec_id</name></name></expr>)</condition> <block pos:start="531:34" pos:end="611:5">{<block_content pos:start="535:5" pos:end="609:14">

<cpp:ifdef pos:start="533:1" pos:end="533:24">#<cpp:directive pos:start="533:2" pos:end="533:6">ifdef</cpp:directive> <name pos:start="533:8" pos:end="533:24">CONFIG_DV_DEMUXER</name></cpp:ifdef>

    <case pos:start="535:5" pos:end="535:26">case <expr pos:start="535:10" pos:end="535:25"><name pos:start="535:10" pos:end="535:25">CODEC_ID_DVAUDIO</name></expr>:</case>

        <expr_stmt pos:start="537:9" pos:end="537:47"><expr pos:start="537:9" pos:end="537:46"><name pos:start="537:9" pos:end="537:18"><name pos:start="537:9" pos:end="537:9">c</name><operator pos:start="537:10" pos:end="537:11">-&gt;</operator><name pos:start="537:12" pos:end="537:18">dv_fctx</name></name> <operator pos:start="537:20" pos:end="537:20">=</operator> <call pos:start="537:22" pos:end="537:46"><name pos:start="537:22" pos:end="537:44">av_alloc_format_context</name><argument_list pos:start="537:45" pos:end="537:46">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="539:9" pos:end="539:48"><expr pos:start="539:9" pos:end="539:47"><name pos:start="539:9" pos:end="539:19"><name pos:start="539:9" pos:end="539:9">c</name><operator pos:start="539:10" pos:end="539:11">-&gt;</operator><name pos:start="539:12" pos:end="539:19">dv_demux</name></name> <operator pos:start="539:21" pos:end="539:21">=</operator> <call pos:start="539:23" pos:end="539:47"><name pos:start="539:23" pos:end="539:35">dv_init_demux</name><argument_list pos:start="539:36" pos:end="539:47">(<argument pos:start="539:37" pos:end="539:46"><expr pos:start="539:37" pos:end="539:46"><name pos:start="539:37" pos:end="539:46"><name pos:start="539:37" pos:end="539:37">c</name><operator pos:start="539:38" pos:end="539:39">-&gt;</operator><name pos:start="539:40" pos:end="539:46">dv_fctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="541:9" pos:end="547:9"><if pos:start="541:9" pos:end="547:9">if <condition pos:start="541:12" pos:end="541:25">(<expr pos:start="541:13" pos:end="541:24"><operator pos:start="541:13" pos:end="541:13">!</operator><name pos:start="541:14" pos:end="541:24"><name pos:start="541:14" pos:end="541:14">c</name><operator pos:start="541:15" pos:end="541:16">-&gt;</operator><name pos:start="541:17" pos:end="541:24">dv_demux</name></name></expr>)</condition> <block pos:start="541:27" pos:end="547:9">{<block_content pos:start="543:13" pos:end="545:22">

            <expr_stmt pos:start="543:13" pos:end="543:73"><expr pos:start="543:13" pos:end="543:72"><call pos:start="543:13" pos:end="543:72"><name pos:start="543:13" pos:end="543:18">av_log</name><argument_list pos:start="543:19" pos:end="543:72">(<argument pos:start="543:20" pos:end="543:24"><expr pos:start="543:20" pos:end="543:24"><name pos:start="543:20" pos:end="543:24"><name pos:start="543:20" pos:end="543:20">c</name><operator pos:start="543:21" pos:end="543:22">-&gt;</operator><name pos:start="543:23" pos:end="543:24">fc</name></name></expr></argument>, <argument pos:start="543:27" pos:end="543:38"><expr pos:start="543:27" pos:end="543:38"><name pos:start="543:27" pos:end="543:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="543:41" pos:end="543:71"><expr pos:start="543:41" pos:end="543:71"><literal type="string" pos:start="543:41" pos:end="543:71">"dv demux context init error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="545:13" pos:end="545:22">return <expr pos:start="545:20" pos:end="545:21"><operator pos:start="545:20" pos:end="545:20">-</operator><literal type="number" pos:start="545:21" pos:end="545:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="549:9" pos:end="549:35"><expr pos:start="549:9" pos:end="549:34"><name pos:start="549:9" pos:end="549:30"><name pos:start="549:9" pos:end="549:10">sc</name><operator pos:start="549:11" pos:end="549:12">-&gt;</operator><name pos:start="549:13" pos:end="549:30">dv_audio_container</name></name> <operator pos:start="549:32" pos:end="549:32">=</operator> <literal type="number" pos:start="549:34" pos:end="549:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="551:9" pos:end="551:49"><expr pos:start="551:9" pos:end="551:48"><name pos:start="551:9" pos:end="551:27"><name pos:start="551:9" pos:end="551:10">st</name><operator pos:start="551:11" pos:end="551:12">-&gt;</operator><name pos:start="551:13" pos:end="551:17">codec</name><operator pos:start="551:18" pos:end="551:19">-&gt;</operator><name pos:start="551:20" pos:end="551:27">codec_id</name></name> <operator pos:start="551:29" pos:end="551:29">=</operator> <name pos:start="551:31" pos:end="551:48">CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt>

        <break pos:start="553:9" pos:end="556:0">break;</break>

<cpp:endif pos:start="555:1" pos:end="555:6">#<cpp:directive pos:start="555:2" pos:end="555:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="557:5" pos:end="557:52">/* no ifdef since parameters are always those */</comment>

    <case pos:start="559:5" pos:end="559:25">case <expr pos:start="559:10" pos:end="559:24"><name pos:start="559:10" pos:end="559:24">CODEC_ID_AMR_WB</name></expr>:</case>

        <expr_stmt pos:start="561:9" pos:end="561:38"><expr pos:start="561:9" pos:end="561:37"><name pos:start="561:9" pos:end="561:30"><name pos:start="561:9" pos:end="561:10">st</name><operator pos:start="561:11" pos:end="561:12">-&gt;</operator><name pos:start="561:13" pos:end="561:17">codec</name><operator pos:start="561:18" pos:end="561:19">-&gt;</operator><name pos:start="561:20" pos:end="561:30">sample_rate</name></name><operator pos:start="561:31" pos:end="561:31">=</operator> <literal type="number" pos:start="561:33" pos:end="561:37">16000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="563:9" pos:end="563:31"><expr pos:start="563:9" pos:end="563:30"><name pos:start="563:9" pos:end="563:27"><name pos:start="563:9" pos:end="563:10">st</name><operator pos:start="563:11" pos:end="563:12">-&gt;</operator><name pos:start="563:13" pos:end="563:17">codec</name><operator pos:start="563:18" pos:end="563:19">-&gt;</operator><name pos:start="563:20" pos:end="563:27">channels</name></name><operator pos:start="563:28" pos:end="563:28">=</operator> <literal type="number" pos:start="563:30" pos:end="563:30">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="563:33" pos:end="563:51">/* really needed */</comment>

        <break pos:start="565:9" pos:end="565:14">break;</break>

    <case pos:start="567:5" pos:end="567:24">case <expr pos:start="567:10" pos:end="567:23"><name pos:start="567:10" pos:end="567:23">CODEC_ID_QCELP</name></expr>:</case>

    <case pos:start="569:5" pos:end="569:25">case <expr pos:start="569:10" pos:end="569:24"><name pos:start="569:10" pos:end="569:24">CODEC_ID_AMR_NB</name></expr>:</case>

        <expr_stmt pos:start="571:9" pos:end="571:53"><expr pos:start="571:9" pos:end="571:52"><name pos:start="571:9" pos:end="571:29"><name pos:start="571:9" pos:end="571:10">st</name><operator pos:start="571:11" pos:end="571:12">-&gt;</operator><name pos:start="571:13" pos:end="571:17">codec</name><operator pos:start="571:18" pos:end="571:19">-&gt;</operator><name pos:start="571:20" pos:end="571:29">frame_size</name></name><operator pos:start="571:30" pos:end="571:30">=</operator> <name pos:start="571:32" pos:end="571:52"><name pos:start="571:32" pos:end="571:33">sc</name><operator pos:start="571:34" pos:end="571:35">-&gt;</operator><name pos:start="571:36" pos:end="571:52">samples_per_frame</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="573:9" pos:end="573:37"><expr pos:start="573:9" pos:end="573:36"><name pos:start="573:9" pos:end="573:30"><name pos:start="573:9" pos:end="573:10">st</name><operator pos:start="573:11" pos:end="573:12">-&gt;</operator><name pos:start="573:13" pos:end="573:17">codec</name><operator pos:start="573:18" pos:end="573:19">-&gt;</operator><name pos:start="573:20" pos:end="573:30">sample_rate</name></name><operator pos:start="573:31" pos:end="573:31">=</operator> <literal type="number" pos:start="573:33" pos:end="573:36">8000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="575:9" pos:end="575:31"><expr pos:start="575:9" pos:end="575:30"><name pos:start="575:9" pos:end="575:27"><name pos:start="575:9" pos:end="575:10">st</name><operator pos:start="575:11" pos:end="575:12">-&gt;</operator><name pos:start="575:13" pos:end="575:17">codec</name><operator pos:start="575:18" pos:end="575:19">-&gt;</operator><name pos:start="575:20" pos:end="575:27">channels</name></name><operator pos:start="575:28" pos:end="575:28">=</operator> <literal type="number" pos:start="575:30" pos:end="575:30">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="575:33" pos:end="575:51">/* really needed */</comment>

        <break pos:start="577:9" pos:end="577:14">break;</break>

    <case pos:start="579:5" pos:end="579:22">case <expr pos:start="579:10" pos:end="579:21"><name pos:start="579:10" pos:end="579:21">CODEC_ID_MP2</name></expr>:</case>

    <case pos:start="581:5" pos:end="581:22">case <expr pos:start="581:10" pos:end="581:21"><name pos:start="581:10" pos:end="581:21">CODEC_ID_MP3</name></expr>:</case>

        <expr_stmt pos:start="583:9" pos:end="583:49"><expr pos:start="583:9" pos:end="583:48"><name pos:start="583:9" pos:end="583:29"><name pos:start="583:9" pos:end="583:10">st</name><operator pos:start="583:11" pos:end="583:12">-&gt;</operator><name pos:start="583:13" pos:end="583:17">codec</name><operator pos:start="583:18" pos:end="583:19">-&gt;</operator><name pos:start="583:20" pos:end="583:29">codec_type</name></name> <operator pos:start="583:31" pos:end="583:31">=</operator> <name pos:start="583:33" pos:end="583:48">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt> <comment type="block" pos:start="583:51" pos:end="583:90">/* force type after stsd for m1a hdlr */</comment>

        <expr_stmt pos:start="585:9" pos:end="585:47"><expr pos:start="585:9" pos:end="585:46"><name pos:start="585:9" pos:end="585:24"><name pos:start="585:9" pos:end="585:10">st</name><operator pos:start="585:11" pos:end="585:12">-&gt;</operator><name pos:start="585:13" pos:end="585:24">need_parsing</name></name> <operator pos:start="585:26" pos:end="585:26">=</operator> <name pos:start="585:28" pos:end="585:46">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

        <break pos:start="587:9" pos:end="587:14">break;</break>

    <case pos:start="589:5" pos:end="589:22">case <expr pos:start="589:10" pos:end="589:21"><name pos:start="589:10" pos:end="589:21">CODEC_ID_GSM</name></expr>:</case>

    <case pos:start="591:5" pos:end="591:27">case <expr pos:start="591:10" pos:end="591:26"><name pos:start="591:10" pos:end="591:26">CODEC_ID_ADPCM_MS</name></expr>:</case>

    <case pos:start="593:5" pos:end="593:32">case <expr pos:start="593:10" pos:end="593:31"><name pos:start="593:10" pos:end="593:31">CODEC_ID_ADPCM_IMA_WAV</name></expr>:</case>

        <expr_stmt pos:start="595:9" pos:end="595:53"><expr pos:start="595:9" pos:end="595:52"><name pos:start="595:9" pos:end="595:30"><name pos:start="595:9" pos:end="595:10">st</name><operator pos:start="595:11" pos:end="595:12">-&gt;</operator><name pos:start="595:13" pos:end="595:17">codec</name><operator pos:start="595:18" pos:end="595:19">-&gt;</operator><name pos:start="595:20" pos:end="595:30">block_align</name></name> <operator pos:start="595:32" pos:end="595:32">=</operator> <name pos:start="595:34" pos:end="595:52"><name pos:start="595:34" pos:end="595:35">sc</name><operator pos:start="595:36" pos:end="595:37">-&gt;</operator><name pos:start="595:38" pos:end="595:52">bytes_per_frame</name></name></expr>;</expr_stmt>

        <break pos:start="597:9" pos:end="597:14">break;</break>

    <case pos:start="599:5" pos:end="599:23">case <expr pos:start="599:10" pos:end="599:22"><name pos:start="599:10" pos:end="599:22">CODEC_ID_ALAC</name></expr>:</case>

        <if_stmt pos:start="601:9" pos:end="603:71"><if pos:start="601:9" pos:end="603:71">if <condition pos:start="601:12" pos:end="601:44">(<expr pos:start="601:13" pos:end="601:43"><name pos:start="601:13" pos:end="601:37"><name pos:start="601:13" pos:end="601:14">st</name><operator pos:start="601:15" pos:end="601:16">-&gt;</operator><name pos:start="601:17" pos:end="601:21">codec</name><operator pos:start="601:22" pos:end="601:23">-&gt;</operator><name pos:start="601:24" pos:end="601:37">extradata_size</name></name> <operator pos:start="601:39" pos:end="601:40">==</operator> <literal type="number" pos:start="601:42" pos:end="601:43">36</literal></expr>)</condition><block type="pseudo" pos:start="603:13" pos:end="603:71"><block_content pos:start="603:13" pos:end="603:71">

            <expr_stmt pos:start="603:13" pos:end="603:71"><expr pos:start="603:13" pos:end="603:70"><name pos:start="603:13" pos:end="603:33"><name pos:start="603:13" pos:end="603:14">st</name><operator pos:start="603:15" pos:end="603:16">-&gt;</operator><name pos:start="603:17" pos:end="603:21">codec</name><operator pos:start="603:22" pos:end="603:23">-&gt;</operator><name pos:start="603:24" pos:end="603:33">frame_size</name></name> <operator pos:start="603:35" pos:end="603:35">=</operator> <call pos:start="603:37" pos:end="603:70"><name pos:start="603:37" pos:end="603:43">AV_RB32</name><argument_list pos:start="603:44" pos:end="603:70">(<argument pos:start="603:45" pos:end="603:69"><expr pos:start="603:45" pos:end="603:69"><operator pos:start="603:45" pos:end="603:45">(</operator><name pos:start="603:46" pos:end="603:65"><name pos:start="603:46" pos:end="603:47">st</name><operator pos:start="603:48" pos:end="603:49">-&gt;</operator><name pos:start="603:50" pos:end="603:54">codec</name><operator pos:start="603:55" pos:end="603:56">-&gt;</operator><name pos:start="603:57" pos:end="603:65">extradata</name></name><operator pos:start="603:66" pos:end="603:66">+</operator><literal type="number" pos:start="603:67" pos:end="603:68">12</literal><operator pos:start="603:69" pos:end="603:69">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="605:9" pos:end="605:14">break;</break>

    <default pos:start="607:5" pos:end="607:12">default:</default>

        <break pos:start="609:9" pos:end="609:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="615:5" pos:end="615:13">return <expr pos:start="615:12" pos:end="615:12"><literal type="number" pos:start="615:12" pos:end="615:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
