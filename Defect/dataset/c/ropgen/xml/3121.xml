<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3121.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:32">openpic_msi_read</name><parameter_list pos:start="1:33" pos:end="1:74">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:53">hwaddr</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:68">unsigned</name></type> <name pos:start="1:70" pos:end="1:73">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OpenPICState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">opp</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:14">r</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">srs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:61"><expr pos:start="13:5" pos:end="13:60"><call pos:start="13:5" pos:end="13:60"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:60">(<argument pos:start="13:13" pos:end="13:43"><expr pos:start="13:13" pos:end="13:43"><literal type="string" pos:start="13:13" pos:end="13:23">"%s: addr "</literal> <name pos:start="13:25" pos:end="13:38">TARGET_FMT_plx</name> <literal type="string" pos:start="13:40" pos:end="13:43">"\n"</literal></expr></argument>, <argument pos:start="13:46" pos:end="13:53"><expr pos:start="13:46" pos:end="13:53"><name pos:start="13:46" pos:end="13:53">__func__</name></expr></argument>, <argument pos:start="13:56" pos:end="13:59"><expr pos:start="13:56" pos:end="13:59"><name pos:start="13:56" pos:end="13:59">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:12">addr</name> <operator pos:start="15:14" pos:end="15:14">&amp;</operator> <literal type="number" pos:start="15:16" pos:end="15:18">0xF</literal></expr>)</condition> <block pos:start="15:21" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">srs</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <name pos:start="23:11" pos:end="23:14">addr</name> <operator pos:start="23:16" pos:end="23:17">&gt;&gt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">4</literal></expr>;</expr_stmt>



    <switch pos:start="27:5" pos:end="63:5">switch <condition pos:start="27:12" pos:end="27:17">(<expr pos:start="27:13" pos:end="27:16"><name pos:start="27:13" pos:end="27:16">addr</name></expr>)</condition> <block pos:start="27:19" pos:end="63:5">{<block_content pos:start="29:5" pos:end="61:14">

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x00</literal></expr>:</case>

    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x10</literal></expr>:</case>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x20</literal></expr>:</case>

    <case pos:start="35:5" pos:end="35:14">case <expr pos:start="35:10" pos:end="35:13"><literal type="number" pos:start="35:10" pos:end="35:13">0x30</literal></expr>:</case>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x40</literal></expr>:</case>

    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><literal type="number" pos:start="39:10" pos:end="39:13">0x50</literal></expr>:</case>

    <case pos:start="41:5" pos:end="41:14">case <expr pos:start="41:10" pos:end="41:13"><literal type="number" pos:start="41:10" pos:end="41:13">0x60</literal></expr>:</case>

    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x70</literal></expr>:</case> <comment type="block" pos:start="43:16" pos:end="43:26">/* MSIRs */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:9">r</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:15">opp</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:20">msi</name><index pos:start="45:21" pos:end="45:25">[<expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:24">srs</name></expr>]</index></name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:30">msir</name></expr>;</expr_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:27">/* Clear on read */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:11">opp</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:16">msi</name><index pos:start="49:17" pos:end="49:21">[<expr pos:start="49:18" pos:end="49:20"><name pos:start="49:18" pos:end="49:20">srs</name></expr>]</index></name><operator pos:start="49:22" pos:end="49:22">.</operator><name pos:start="49:23" pos:end="49:26">msir</name> <operator pos:start="49:28" pos:end="49:28">=</operator> <literal type="number" pos:start="49:30" pos:end="49:30">0</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:15">case <expr pos:start="53:10" pos:end="53:14"><literal type="number" pos:start="53:10" pos:end="53:14">0x120</literal></expr>:</case> <comment type="block" pos:start="53:17" pos:end="53:27">/* MSISR */</comment>

        <for pos:start="55:9" pos:end="59:9">for <control pos:start="55:13" pos:end="55:37">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:32"><expr pos:start="55:21" pos:end="55:31"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:31">MAX_MSI</name></expr>;</condition> <incr pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><name pos:start="55:34" pos:end="55:34">i</name><operator pos:start="55:35" pos:end="55:36">++</operator></expr></incr>)</control> <block pos:start="55:39" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:49">

            <expr_stmt pos:start="57:13" pos:end="57:49"><expr pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:13">r</name> <operator pos:start="57:15" pos:end="57:16">|=</operator> <operator pos:start="57:18" pos:end="57:18">(</operator><ternary pos:start="57:19" pos:end="57:42"><condition pos:start="57:19" pos:end="57:36"><expr pos:start="57:19" pos:end="57:34"><name pos:start="57:19" pos:end="57:29"><name pos:start="57:19" pos:end="57:21">opp</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:26">msi</name><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><name pos:start="57:28" pos:end="57:28">i</name></expr>]</index></name><operator pos:start="57:30" pos:end="57:30">.</operator><name pos:start="57:31" pos:end="57:34">msir</name></expr> ?</condition><then pos:start="57:38" pos:end="57:38"> <expr pos:start="57:38" pos:end="57:38"><literal type="number" pos:start="57:38" pos:end="57:38">1</literal></expr> </then><else pos:start="57:40" pos:end="57:42">: <expr pos:start="57:42" pos:end="57:42"><literal type="number" pos:start="57:42" pos:end="57:42">0</literal></expr></else></ternary><operator pos:start="57:43" pos:end="57:43">)</operator> <operator pos:start="57:45" pos:end="57:46">&lt;&lt;</operator> <name pos:start="57:48" pos:end="57:48">i</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><name pos:start="67:12" pos:end="67:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
