<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6172.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">filter_frame</name><parameter_list pos:start="1:24" pos:end="1:69">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:36">AVFilterLink</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">inlink</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:63">AVFilterBufferRef</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:38">= <expr pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:33">inlink</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AlphaMergeContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:28">merge</name> <init pos:start="7:30" pos:end="7:40">= <expr pos:start="7:32" pos:end="7:40"><name pos:start="7:32" pos:end="7:40"><name pos:start="7:32" pos:end="7:34">ctx</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:40">priv</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">is_alpha</name> <init pos:start="11:18" pos:end="11:45">= <expr pos:start="11:20" pos:end="11:45"><operator pos:start="11:20" pos:end="11:20">(</operator><name pos:start="11:21" pos:end="11:26">inlink</name> <operator pos:start="11:28" pos:end="11:29">==</operator> <name pos:start="11:31" pos:end="11:44"><name pos:start="11:31" pos:end="11:33">ctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:41">inputs</name><index pos:start="11:42" pos:end="11:44">[<expr pos:start="11:43" pos:end="11:43"><literal type="number" pos:start="11:43" pos:end="11:43">1</literal></expr>]</index></name><operator pos:start="11:45" pos:end="11:45">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:62"><decl pos:start="13:5" pos:end="15:61"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:21">FFBufQueue</name></name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:28">queue</name> <init pos:start="13:30" pos:end="15:61">=

        <expr pos:start="15:9" pos:end="15:61"><operator pos:start="15:9" pos:end="15:9">(</operator><ternary pos:start="15:10" pos:end="15:60"><condition pos:start="15:10" pos:end="15:19"><expr pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:17">is_alpha</name></expr> ?</condition><then pos:start="15:21" pos:end="15:39"> <expr pos:start="15:21" pos:end="15:39"><operator pos:start="15:21" pos:end="15:21">&amp;</operator><name pos:start="15:22" pos:end="15:39"><name pos:start="15:22" pos:end="15:26">merge</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:39">queue_alpha</name></name></expr> </then><else pos:start="15:41" pos:end="15:60">: <expr pos:start="15:43" pos:end="15:60"><operator pos:start="15:43" pos:end="15:43">&amp;</operator><name pos:start="15:44" pos:end="15:60"><name pos:start="15:44" pos:end="15:48">merge</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:60">queue_main</name></name></expr></else></ternary><operator pos:start="15:61" pos:end="15:61">)</operator></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:19">ff_bufqueue_add</name><argument_list pos:start="17:20" pos:end="17:36">(<argument pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:23">ctx</name></expr></argument>, <argument pos:start="17:26" pos:end="17:30"><expr pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:30">queue</name></expr></argument>, <argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:35">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="21:5" pos:end="47:5">while <condition pos:start="21:11" pos:end="21:13">(<expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">1</literal></expr>)</condition> <block pos:start="21:15" pos:end="47:5">{<block_content pos:start="23:9" pos:end="45:41">

        <decl_stmt pos:start="23:9" pos:end="23:48"><decl pos:start="23:9" pos:end="23:35"><type pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:25">AVFilterBufferRef</name> <modifier pos:start="23:27" pos:end="23:27">*</modifier></type><name pos:start="23:28" pos:end="23:35">main_buf</name></decl>, <decl pos:start="23:38" pos:end="23:47"><type ref="prev" pos:start="23:9" pos:end="23:27"><modifier pos:start="23:38" pos:end="23:38">*</modifier></type><name pos:start="23:39" pos:end="23:47">alpha_buf</name></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="29:61"><if pos:start="27:9" pos:end="29:61">if <condition pos:start="27:12" pos:end="29:54">(<expr pos:start="27:13" pos:end="29:53"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:52"><name pos:start="27:14" pos:end="27:29">ff_bufqueue_peek</name><argument_list pos:start="27:30" pos:end="27:52">(<argument pos:start="27:31" pos:end="27:48"><expr pos:start="27:31" pos:end="27:48"><operator pos:start="27:31" pos:end="27:31">&amp;</operator><name pos:start="27:32" pos:end="27:48"><name pos:start="27:32" pos:end="27:36">merge</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:48">queue_main</name></name></expr></argument>, <argument pos:start="27:51" pos:end="27:51"><expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">0</literal></expr></argument>)</argument_list></call> <operator pos:start="27:54" pos:end="27:55">||</operator>

            <operator pos:start="29:13" pos:end="29:13">!</operator><call pos:start="29:14" pos:end="29:53"><name pos:start="29:14" pos:end="29:29">ff_bufqueue_peek</name><argument_list pos:start="29:30" pos:end="29:53">(<argument pos:start="29:31" pos:end="29:49"><expr pos:start="29:31" pos:end="29:49"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:49"><name pos:start="29:32" pos:end="29:36">merge</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:49">queue_alpha</name></name></expr></argument>, <argument pos:start="29:52" pos:end="29:52"><expr pos:start="29:52" pos:end="29:52"><literal type="number" pos:start="29:52" pos:end="29:52">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:56" pos:end="29:61"><block_content pos:start="29:56" pos:end="29:61"> <break pos:start="29:56" pos:end="29:61">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:16">main_buf</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:54"><name pos:start="33:20" pos:end="33:34">ff_bufqueue_get</name><argument_list pos:start="33:35" pos:end="33:54">(<argument pos:start="33:36" pos:end="33:53"><expr pos:start="33:36" pos:end="33:53"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:53"><name pos:start="33:37" pos:end="33:41">merge</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:53">queue_main</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:57"><expr pos:start="35:9" pos:end="35:56"><name pos:start="35:9" pos:end="35:17">alpha_buf</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:56"><name pos:start="35:21" pos:end="35:35">ff_bufqueue_get</name><argument_list pos:start="35:36" pos:end="35:56">(<argument pos:start="35:37" pos:end="35:55"><expr pos:start="35:37" pos:end="35:55"><operator pos:start="35:37" pos:end="35:37">&amp;</operator><name pos:start="35:38" pos:end="35:55"><name pos:start="35:38" pos:end="35:42">merge</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:55">queue_alpha</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:13">merge</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:30">frame_requested</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <literal type="number" pos:start="39:34" pos:end="39:34">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><call pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:18">draw_frame</name><argument_list pos:start="41:19" pos:end="41:44">(<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ctx</name></expr></argument>, <argument pos:start="41:25" pos:end="41:32"><expr pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:32">main_buf</name></expr></argument>, <argument pos:start="41:35" pos:end="41:43"><expr pos:start="41:35" pos:end="41:43"><name pos:start="41:35" pos:end="41:43">alpha_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:76"><expr pos:start="43:9" pos:end="43:75"><call pos:start="43:9" pos:end="43:75"><name pos:start="43:9" pos:end="43:23">ff_filter_frame</name><argument_list pos:start="43:24" pos:end="43:75">(<argument pos:start="43:25" pos:end="43:39"><expr pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:27">ctx</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:36">outputs</name><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><literal type="number" pos:start="43:38" pos:end="43:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:42" pos:end="43:74"><expr pos:start="43:42" pos:end="43:74"><call pos:start="43:42" pos:end="43:74"><name pos:start="43:42" pos:end="43:60">avfilter_ref_buffer</name><argument_list pos:start="43:61" pos:end="43:74">(<argument pos:start="43:62" pos:end="43:69"><expr pos:start="43:62" pos:end="43:69"><name pos:start="43:62" pos:end="43:69">main_buf</name></expr></argument>, <argument pos:start="43:72" pos:end="43:73"><expr pos:start="43:72" pos:end="43:73"><operator pos:start="43:72" pos:end="43:72">~</operator><literal type="number" pos:start="43:73" pos:end="43:73">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><call pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:29">avfilter_unref_buffer</name><argument_list pos:start="45:30" pos:end="45:40">(<argument pos:start="45:31" pos:end="45:39"><expr pos:start="45:31" pos:end="45:39"><name pos:start="45:31" pos:end="45:39">alpha_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
