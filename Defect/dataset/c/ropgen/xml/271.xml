<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/271.c" pos:tabs="8"><function pos:start="1:1" pos:end="1389:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_mfc0</name><parameter_list pos:start="1:21" pos:end="1:67">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:44">TCGv</name></type> <name pos:start="1:46" pos:end="1:48">arg</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:57"><decl pos:start="1:51" pos:end="1:57"><type pos:start="1:51" pos:end="1:57"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:57">reg</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:66"><decl pos:start="1:60" pos:end="1:66"><type pos:start="1:60" pos:end="1:66"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:66">sel</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1389:1">{<block_content pos:start="5:5" pos:end="1387:37">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">rn</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><literal type="string" pos:start="5:22" pos:end="5:30">"invalid"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:36"><if pos:start="9:5" pos:end="11:36">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">sel</name> <operator pos:start="9:13" pos:end="9:14">!=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:36"><block_content pos:start="11:9" pos:end="11:36">

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:18">check_insn</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">ctx</name></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="15:5" pos:end="1375:5">switch <condition pos:start="15:12" pos:end="15:16">(<expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">reg</name></expr>)</condition> <block pos:start="15:18" pos:end="1375:5">{<block_content pos:start="17:5" pos:end="1373:30">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case>

        <switch pos:start="19:9" pos:end="73:9">switch <condition pos:start="19:16" pos:end="19:20">(<expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">sel</name></expr>)</condition> <block pos:start="19:22" pos:end="73:9">{<block_content pos:start="21:9" pos:end="71:35">

        <case pos:start="21:9" pos:end="21:15">case <expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:68"><expr pos:start="23:13" pos:end="23:67"><call pos:start="23:13" pos:end="23:67"><name pos:start="23:13" pos:end="23:27">gen_mfc0_load32</name><argument_list pos:start="23:28" pos:end="23:67">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">arg</name></expr></argument>, <argument pos:start="23:34" pos:end="23:66"><expr pos:start="23:34" pos:end="23:66"><call pos:start="23:34" pos:end="23:66"><name pos:start="23:34" pos:end="23:41">offsetof</name><argument_list pos:start="23:42" pos:end="23:66">(<argument pos:start="23:43" pos:end="23:54"><expr pos:start="23:43" pos:end="23:54"><name pos:start="23:43" pos:end="23:54">CPUMIPSState</name></expr></argument>, <argument pos:start="23:57" pos:end="23:65"><expr pos:start="23:57" pos:end="23:65"><name pos:start="23:57" pos:end="23:65">CP0_Index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:25"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:14">rn</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="string" pos:start="25:18" pos:end="25:24">"Index"</literal></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:15">case <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:48"><expr pos:start="31:13" pos:end="31:47"><call pos:start="31:13" pos:end="31:47"><name pos:start="31:13" pos:end="31:21">CP0_CHECK</name><argument_list pos:start="31:22" pos:end="31:47">(<argument pos:start="31:23" pos:end="31:46"><expr pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:25">ctx</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:37">insn_flags</name></name> <operator pos:start="31:39" pos:end="31:39">&amp;</operator> <name pos:start="31:41" pos:end="31:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:53"><expr pos:start="33:13" pos:end="33:52"><call pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:38">gen_helper_mfc0_mvpcontrol</name><argument_list pos:start="33:39" pos:end="33:52">(<argument pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:42">arg</name></expr></argument>, <argument pos:start="33:45" pos:end="33:51"><expr pos:start="33:45" pos:end="33:51"><name pos:start="33:45" pos:end="33:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:14">rn</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="string" pos:start="35:18" pos:end="35:29">"MVPControl"</literal></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:15">case <expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">2</literal></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:48"><expr pos:start="41:13" pos:end="41:47"><call pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:21">CP0_CHECK</name><argument_list pos:start="41:22" pos:end="41:47">(<argument pos:start="41:23" pos:end="41:46"><expr pos:start="41:23" pos:end="41:46"><name pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:25">ctx</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:37">insn_flags</name></name> <operator pos:start="41:39" pos:end="41:39">&amp;</operator> <name pos:start="41:41" pos:end="41:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:51"><expr pos:start="43:13" pos:end="43:50"><call pos:start="43:13" pos:end="43:50"><name pos:start="43:13" pos:end="43:36">gen_helper_mfc0_mvpconf0</name><argument_list pos:start="43:37" pos:end="43:50">(<argument pos:start="43:38" pos:end="43:40"><expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">arg</name></expr></argument>, <argument pos:start="43:43" pos:end="43:49"><expr pos:start="43:43" pos:end="43:49"><name pos:start="43:43" pos:end="43:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:14">rn</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="string" pos:start="45:18" pos:end="45:27">"MVPConf0"</literal></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:15">case <expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">3</literal></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><call pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:21">CP0_CHECK</name><argument_list pos:start="51:22" pos:end="51:47">(<argument pos:start="51:23" pos:end="51:46"><expr pos:start="51:23" pos:end="51:46"><name pos:start="51:23" pos:end="51:37"><name pos:start="51:23" pos:end="51:25">ctx</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:37">insn_flags</name></name> <operator pos:start="51:39" pos:end="51:39">&amp;</operator> <name pos:start="51:41" pos:end="51:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:51"><expr pos:start="53:13" pos:end="53:50"><call pos:start="53:13" pos:end="53:50"><name pos:start="53:13" pos:end="53:36">gen_helper_mfc0_mvpconf1</name><argument_list pos:start="53:37" pos:end="53:50">(<argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:40">arg</name></expr></argument>, <argument pos:start="53:43" pos:end="53:49"><expr pos:start="53:43" pos:end="53:49"><name pos:start="53:43" pos:end="53:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:14">rn</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="string" pos:start="55:18" pos:end="55:27">"MVPConf1"</literal></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:15">case <expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">4</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:31"><expr pos:start="61:13" pos:end="61:30"><call pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:21">CP0_CHECK</name><argument_list pos:start="61:22" pos:end="61:30">(<argument pos:start="61:23" pos:end="61:29"><expr pos:start="61:23" pos:end="61:29"><name pos:start="61:23" pos:end="61:29"><name pos:start="61:23" pos:end="61:25">ctx</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:29">vp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:72"><expr pos:start="63:13" pos:end="63:71"><call pos:start="63:13" pos:end="63:71"><name pos:start="63:13" pos:end="63:27">gen_mfc0_load32</name><argument_list pos:start="63:28" pos:end="63:71">(<argument pos:start="63:29" pos:end="63:31"><expr pos:start="63:29" pos:end="63:31"><name pos:start="63:29" pos:end="63:31">arg</name></expr></argument>, <argument pos:start="63:34" pos:end="63:70"><expr pos:start="63:34" pos:end="63:70"><call pos:start="63:34" pos:end="63:70"><name pos:start="63:34" pos:end="63:41">offsetof</name><argument_list pos:start="63:42" pos:end="63:70">(<argument pos:start="63:43" pos:end="63:54"><expr pos:start="63:43" pos:end="63:54"><name pos:start="63:43" pos:end="63:54">CPUMIPSState</name></expr></argument>, <argument pos:start="63:57" pos:end="63:69"><expr pos:start="63:57" pos:end="63:69"><name pos:start="63:57" pos:end="63:69">CP0_VPControl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:29"><expr pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:14">rn</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="string" pos:start="65:18" pos:end="65:28">"VPControl"</literal></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <default pos:start="69:9" pos:end="69:16">default:</default>

            <goto pos:start="71:13" pos:end="71:35">goto <name pos:start="71:18" pos:end="71:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:11">case <expr pos:start="77:10" pos:end="77:10"><literal type="number" pos:start="77:10" pos:end="77:10">1</literal></expr>:</case>

        <switch pos:start="79:9" pos:end="165:9">switch <condition pos:start="79:16" pos:end="79:20">(<expr pos:start="79:17" pos:end="79:19"><name pos:start="79:17" pos:end="79:19">sel</name></expr>)</condition> <block pos:start="79:22" pos:end="165:9">{<block_content pos:start="81:9" pos:end="163:35">

        <case pos:start="81:9" pos:end="81:15">case <expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:57"><expr pos:start="83:13" pos:end="83:56"><call pos:start="83:13" pos:end="83:56"><name pos:start="83:13" pos:end="83:21">CP0_CHECK</name><argument_list pos:start="83:22" pos:end="83:56">(<argument pos:start="83:23" pos:end="83:55"><expr pos:start="83:23" pos:end="83:55"><operator pos:start="83:23" pos:end="83:23">!</operator><operator pos:start="83:24" pos:end="83:24">(</operator><name pos:start="83:25" pos:end="83:39"><name pos:start="83:25" pos:end="83:27">ctx</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:39">insn_flags</name></name> <operator pos:start="83:41" pos:end="83:41">&amp;</operator> <name pos:start="83:43" pos:end="83:54">ISA_MIPS32R6</name><operator pos:start="83:55" pos:end="83:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:49"><expr pos:start="85:13" pos:end="85:48"><call pos:start="85:13" pos:end="85:48"><name pos:start="85:13" pos:end="85:34">gen_helper_mfc0_random</name><argument_list pos:start="85:35" pos:end="85:48">(<argument pos:start="85:36" pos:end="85:38"><expr pos:start="85:36" pos:end="85:38"><name pos:start="85:36" pos:end="85:38">arg</name></expr></argument>, <argument pos:start="85:41" pos:end="85:47"><expr pos:start="85:41" pos:end="85:47"><name pos:start="85:41" pos:end="85:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:26"><expr pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:14">rn</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="string" pos:start="87:18" pos:end="87:25">"Random"</literal></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:15">case <expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">1</literal></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:48"><expr pos:start="93:13" pos:end="93:47"><call pos:start="93:13" pos:end="93:47"><name pos:start="93:13" pos:end="93:21">CP0_CHECK</name><argument_list pos:start="93:22" pos:end="93:47">(<argument pos:start="93:23" pos:end="93:46"><expr pos:start="93:23" pos:end="93:46"><name pos:start="93:23" pos:end="93:37"><name pos:start="93:23" pos:end="93:25">ctx</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:37">insn_flags</name></name> <operator pos:start="93:39" pos:end="93:39">&amp;</operator> <name pos:start="93:41" pos:end="93:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:73"><expr pos:start="95:13" pos:end="95:72"><call pos:start="95:13" pos:end="95:72"><name pos:start="95:13" pos:end="95:27">gen_mfc0_load32</name><argument_list pos:start="95:28" pos:end="95:72">(<argument pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:31">arg</name></expr></argument>, <argument pos:start="95:34" pos:end="95:71"><expr pos:start="95:34" pos:end="95:71"><call pos:start="95:34" pos:end="95:71"><name pos:start="95:34" pos:end="95:41">offsetof</name><argument_list pos:start="95:42" pos:end="95:71">(<argument pos:start="95:43" pos:end="95:54"><expr pos:start="95:43" pos:end="95:54"><name pos:start="95:43" pos:end="95:54">CPUMIPSState</name></expr></argument>, <argument pos:start="95:57" pos:end="95:70"><expr pos:start="95:57" pos:end="95:70"><name pos:start="95:57" pos:end="95:70">CP0_VPEControl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:30"><expr pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:14">rn</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="string" pos:start="97:18" pos:end="97:29">"VPEControl"</literal></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:15">case <expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">2</literal></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:48"><expr pos:start="103:13" pos:end="103:47"><call pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:21">CP0_CHECK</name><argument_list pos:start="103:22" pos:end="103:47">(<argument pos:start="103:23" pos:end="103:46"><expr pos:start="103:23" pos:end="103:46"><name pos:start="103:23" pos:end="103:37"><name pos:start="103:23" pos:end="103:25">ctx</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:37">insn_flags</name></name> <operator pos:start="103:39" pos:end="103:39">&amp;</operator> <name pos:start="103:41" pos:end="103:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:71"><expr pos:start="105:13" pos:end="105:70"><call pos:start="105:13" pos:end="105:70"><name pos:start="105:13" pos:end="105:27">gen_mfc0_load32</name><argument_list pos:start="105:28" pos:end="105:70">(<argument pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><name pos:start="105:29" pos:end="105:31">arg</name></expr></argument>, <argument pos:start="105:34" pos:end="105:69"><expr pos:start="105:34" pos:end="105:69"><call pos:start="105:34" pos:end="105:69"><name pos:start="105:34" pos:end="105:41">offsetof</name><argument_list pos:start="105:42" pos:end="105:69">(<argument pos:start="105:43" pos:end="105:54"><expr pos:start="105:43" pos:end="105:54"><name pos:start="105:43" pos:end="105:54">CPUMIPSState</name></expr></argument>, <argument pos:start="105:57" pos:end="105:68"><expr pos:start="105:57" pos:end="105:68"><name pos:start="105:57" pos:end="105:68">CP0_VPEConf0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:28"><expr pos:start="107:13" pos:end="107:27"><name pos:start="107:13" pos:end="107:14">rn</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <literal type="string" pos:start="107:18" pos:end="107:27">"VPEConf0"</literal></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:15">case <expr pos:start="111:14" pos:end="111:14"><literal type="number" pos:start="111:14" pos:end="111:14">3</literal></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:48"><expr pos:start="113:13" pos:end="113:47"><call pos:start="113:13" pos:end="113:47"><name pos:start="113:13" pos:end="113:21">CP0_CHECK</name><argument_list pos:start="113:22" pos:end="113:47">(<argument pos:start="113:23" pos:end="113:46"><expr pos:start="113:23" pos:end="113:46"><name pos:start="113:23" pos:end="113:37"><name pos:start="113:23" pos:end="113:25">ctx</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:37">insn_flags</name></name> <operator pos:start="113:39" pos:end="113:39">&amp;</operator> <name pos:start="113:41" pos:end="113:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:71"><expr pos:start="115:13" pos:end="115:70"><call pos:start="115:13" pos:end="115:70"><name pos:start="115:13" pos:end="115:27">gen_mfc0_load32</name><argument_list pos:start="115:28" pos:end="115:70">(<argument pos:start="115:29" pos:end="115:31"><expr pos:start="115:29" pos:end="115:31"><name pos:start="115:29" pos:end="115:31">arg</name></expr></argument>, <argument pos:start="115:34" pos:end="115:69"><expr pos:start="115:34" pos:end="115:69"><call pos:start="115:34" pos:end="115:69"><name pos:start="115:34" pos:end="115:41">offsetof</name><argument_list pos:start="115:42" pos:end="115:69">(<argument pos:start="115:43" pos:end="115:54"><expr pos:start="115:43" pos:end="115:54"><name pos:start="115:43" pos:end="115:54">CPUMIPSState</name></expr></argument>, <argument pos:start="115:57" pos:end="115:68"><expr pos:start="115:57" pos:end="115:68"><name pos:start="115:57" pos:end="115:68">CP0_VPEConf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:28"><expr pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:14">rn</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <literal type="string" pos:start="117:18" pos:end="117:27">"VPEConf1"</literal></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:15">case <expr pos:start="121:14" pos:end="121:14"><literal type="number" pos:start="121:14" pos:end="121:14">4</literal></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="123:48"><expr pos:start="123:13" pos:end="123:47"><call pos:start="123:13" pos:end="123:47"><name pos:start="123:13" pos:end="123:21">CP0_CHECK</name><argument_list pos:start="123:22" pos:end="123:47">(<argument pos:start="123:23" pos:end="123:46"><expr pos:start="123:23" pos:end="123:46"><name pos:start="123:23" pos:end="123:37"><name pos:start="123:23" pos:end="123:25">ctx</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:37">insn_flags</name></name> <operator pos:start="123:39" pos:end="123:39">&amp;</operator> <name pos:start="123:41" pos:end="123:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:69"><expr pos:start="125:13" pos:end="125:68"><call pos:start="125:13" pos:end="125:68"><name pos:start="125:13" pos:end="125:27">gen_mfc0_load64</name><argument_list pos:start="125:28" pos:end="125:68">(<argument pos:start="125:29" pos:end="125:31"><expr pos:start="125:29" pos:end="125:31"><name pos:start="125:29" pos:end="125:31">arg</name></expr></argument>, <argument pos:start="125:34" pos:end="125:67"><expr pos:start="125:34" pos:end="125:67"><call pos:start="125:34" pos:end="125:67"><name pos:start="125:34" pos:end="125:41">offsetof</name><argument_list pos:start="125:42" pos:end="125:67">(<argument pos:start="125:43" pos:end="125:54"><expr pos:start="125:43" pos:end="125:54"><name pos:start="125:43" pos:end="125:54">CPUMIPSState</name></expr></argument>, <argument pos:start="125:57" pos:end="125:66"><expr pos:start="125:57" pos:end="125:66"><name pos:start="125:57" pos:end="125:66">CP0_YQMask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:26"><expr pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:14">rn</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="string" pos:start="127:18" pos:end="127:25">"YQMask"</literal></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:15">case <expr pos:start="131:14" pos:end="131:14"><literal type="number" pos:start="131:14" pos:end="131:14">5</literal></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:48"><expr pos:start="133:13" pos:end="133:47"><call pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:21">CP0_CHECK</name><argument_list pos:start="133:22" pos:end="133:47">(<argument pos:start="133:23" pos:end="133:46"><expr pos:start="133:23" pos:end="133:46"><name pos:start="133:23" pos:end="133:37"><name pos:start="133:23" pos:end="133:25">ctx</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:37">insn_flags</name></name> <operator pos:start="133:39" pos:end="133:39">&amp;</operator> <name pos:start="133:41" pos:end="133:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:74"><expr pos:start="135:13" pos:end="135:73"><call pos:start="135:13" pos:end="135:73"><name pos:start="135:13" pos:end="135:27">gen_mfc0_load64</name><argument_list pos:start="135:28" pos:end="135:73">(<argument pos:start="135:29" pos:end="135:31"><expr pos:start="135:29" pos:end="135:31"><name pos:start="135:29" pos:end="135:31">arg</name></expr></argument>, <argument pos:start="135:34" pos:end="135:72"><expr pos:start="135:34" pos:end="135:72"><call pos:start="135:34" pos:end="135:72"><name pos:start="135:34" pos:end="135:41">offsetof</name><argument_list pos:start="135:42" pos:end="135:72">(<argument pos:start="135:43" pos:end="135:54"><expr pos:start="135:43" pos:end="135:54"><name pos:start="135:43" pos:end="135:54">CPUMIPSState</name></expr></argument>, <argument pos:start="135:57" pos:end="135:71"><expr pos:start="135:57" pos:end="135:71"><name pos:start="135:57" pos:end="135:71">CP0_VPESchedule</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:31"><expr pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:14">rn</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="string" pos:start="137:18" pos:end="137:30">"VPESchedule"</literal></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:15">case <expr pos:start="141:14" pos:end="141:14"><literal type="number" pos:start="141:14" pos:end="141:14">6</literal></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:48"><expr pos:start="143:13" pos:end="143:47"><call pos:start="143:13" pos:end="143:47"><name pos:start="143:13" pos:end="143:21">CP0_CHECK</name><argument_list pos:start="143:22" pos:end="143:47">(<argument pos:start="143:23" pos:end="143:46"><expr pos:start="143:23" pos:end="143:46"><name pos:start="143:23" pos:end="143:37"><name pos:start="143:23" pos:end="143:25">ctx</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:37">insn_flags</name></name> <operator pos:start="143:39" pos:end="143:39">&amp;</operator> <name pos:start="143:41" pos:end="143:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:75"><expr pos:start="145:13" pos:end="145:74"><call pos:start="145:13" pos:end="145:74"><name pos:start="145:13" pos:end="145:27">gen_mfc0_load64</name><argument_list pos:start="145:28" pos:end="145:74">(<argument pos:start="145:29" pos:end="145:31"><expr pos:start="145:29" pos:end="145:31"><name pos:start="145:29" pos:end="145:31">arg</name></expr></argument>, <argument pos:start="145:34" pos:end="145:73"><expr pos:start="145:34" pos:end="145:73"><call pos:start="145:34" pos:end="145:73"><name pos:start="145:34" pos:end="145:41">offsetof</name><argument_list pos:start="145:42" pos:end="145:73">(<argument pos:start="145:43" pos:end="145:54"><expr pos:start="145:43" pos:end="145:54"><name pos:start="145:43" pos:end="145:54">CPUMIPSState</name></expr></argument>, <argument pos:start="145:57" pos:end="145:72"><expr pos:start="145:57" pos:end="145:72"><name pos:start="145:57" pos:end="145:72">CP0_VPEScheFBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:32"><expr pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:14">rn</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <literal type="string" pos:start="147:18" pos:end="147:31">"VPEScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <case pos:start="151:9" pos:end="151:15">case <expr pos:start="151:14" pos:end="151:14"><literal type="number" pos:start="151:14" pos:end="151:14">7</literal></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:48"><expr pos:start="153:13" pos:end="153:47"><call pos:start="153:13" pos:end="153:47"><name pos:start="153:13" pos:end="153:21">CP0_CHECK</name><argument_list pos:start="153:22" pos:end="153:47">(<argument pos:start="153:23" pos:end="153:46"><expr pos:start="153:23" pos:end="153:46"><name pos:start="153:23" pos:end="153:37"><name pos:start="153:23" pos:end="153:25">ctx</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:37">insn_flags</name></name> <operator pos:start="153:39" pos:end="153:39">&amp;</operator> <name pos:start="153:41" pos:end="153:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:69"><expr pos:start="155:13" pos:end="155:68"><call pos:start="155:13" pos:end="155:68"><name pos:start="155:13" pos:end="155:27">gen_mfc0_load32</name><argument_list pos:start="155:28" pos:end="155:68">(<argument pos:start="155:29" pos:end="155:31"><expr pos:start="155:29" pos:end="155:31"><name pos:start="155:29" pos:end="155:31">arg</name></expr></argument>, <argument pos:start="155:34" pos:end="155:67"><expr pos:start="155:34" pos:end="155:67"><call pos:start="155:34" pos:end="155:67"><name pos:start="155:34" pos:end="155:41">offsetof</name><argument_list pos:start="155:42" pos:end="155:67">(<argument pos:start="155:43" pos:end="155:54"><expr pos:start="155:43" pos:end="155:54"><name pos:start="155:43" pos:end="155:54">CPUMIPSState</name></expr></argument>, <argument pos:start="155:57" pos:end="155:66"><expr pos:start="155:57" pos:end="155:66"><name pos:start="155:57" pos:end="155:66">CP0_VPEOpt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:26"><expr pos:start="157:13" pos:end="157:25"><name pos:start="157:13" pos:end="157:14">rn</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <literal type="string" pos:start="157:18" pos:end="157:25">"VPEOpt"</literal></expr>;</expr_stmt>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        <default pos:start="161:9" pos:end="161:16">default:</default>

            <goto pos:start="163:13" pos:end="163:35">goto <name pos:start="163:18" pos:end="163:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="167:9" pos:end="167:14">break;</break>

    <case pos:start="169:5" pos:end="169:11">case <expr pos:start="169:10" pos:end="169:10"><literal type="number" pos:start="169:10" pos:end="169:10">2</literal></expr>:</case>

        <switch pos:start="171:9" pos:end="281:9">switch <condition pos:start="171:16" pos:end="171:20">(<expr pos:start="171:17" pos:end="171:19"><name pos:start="171:17" pos:end="171:19">sel</name></expr>)</condition> <block pos:start="171:22" pos:end="281:9">{<block_content pos:start="173:9" pos:end="279:35">

        <case pos:start="173:9" pos:end="173:15">case <expr pos:start="173:14" pos:end="173:14"><literal type="number" pos:start="173:14" pos:end="173:14">0</literal></expr>:</case>

            <block pos:start="175:13" pos:end="201:13">{<block_content pos:start="177:17" pos:end="199:39">

                <decl_stmt pos:start="177:17" pos:end="177:50"><decl pos:start="177:17" pos:end="177:49"><type pos:start="177:17" pos:end="177:24"><name pos:start="177:17" pos:end="177:24">TCGv_i64</name></type> <name pos:start="177:26" pos:end="177:28">tmp</name> <init pos:start="177:30" pos:end="177:49">= <expr pos:start="177:32" pos:end="177:49"><call pos:start="177:32" pos:end="177:49"><name pos:start="177:32" pos:end="177:47">tcg_temp_new_i64</name><argument_list pos:start="177:48" pos:end="177:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="179:17" pos:end="184:0"><expr pos:start="179:17" pos:end="181:68"><call pos:start="179:17" pos:end="181:68"><name pos:start="179:17" pos:end="179:30">tcg_gen_ld_i64</name><argument_list pos:start="179:31" pos:end="181:68">(<argument pos:start="179:32" pos:end="179:34"><expr pos:start="179:32" pos:end="179:34"><name pos:start="179:32" pos:end="179:34">tmp</name></expr></argument>, <argument pos:start="179:37" pos:end="179:43"><expr pos:start="179:37" pos:end="179:43"><name pos:start="179:37" pos:end="179:43">cpu_env</name></expr></argument>,

                               <argument pos:start="181:32" pos:end="181:67"><expr pos:start="181:32" pos:end="181:67"><call pos:start="181:32" pos:end="181:67"><name pos:start="181:32" pos:end="181:39">offsetof</name><argument_list pos:start="181:40" pos:end="181:67">(<argument pos:start="181:41" pos:end="181:52"><expr pos:start="181:41" pos:end="181:52"><name pos:start="181:41" pos:end="181:52">CPUMIPSState</name></expr></argument>, <argument pos:start="181:55" pos:end="181:66"><expr pos:start="181:55" pos:end="181:66"><name pos:start="181:55" pos:end="181:66">CP0_EntryLo0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="183:1" pos:end="183:26">#<cpp:directive pos:start="183:2" pos:end="183:3">if</cpp:directive> <expr pos:start="183:5" pos:end="183:26"><call pos:start="183:5" pos:end="183:26"><name pos:start="183:5" pos:end="183:11">defined</name><argument_list pos:start="183:12" pos:end="183:26">(<argument pos:start="183:13" pos:end="183:25"><expr pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <if_stmt pos:start="185:17" pos:end="196:0"><if pos:start="185:17" pos:end="196:0">if <condition pos:start="185:20" pos:end="185:29">(<expr pos:start="185:21" pos:end="185:28"><name pos:start="185:21" pos:end="185:28"><name pos:start="185:21" pos:end="185:23">ctx</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:28">rxi</name></name></expr>)</condition> <block pos:start="185:31" pos:end="196:0">{<block_content pos:start="189:21" pos:end="191:61">

                    <comment type="block" pos:start="187:21" pos:end="187:57">/* Move RI/XI fields to bits 31:30 */</comment>

                    <expr_stmt pos:start="189:21" pos:end="189:58"><expr pos:start="189:21" pos:end="189:57"><call pos:start="189:21" pos:end="189:57"><name pos:start="189:21" pos:end="189:35">tcg_gen_shri_tl</name><argument_list pos:start="189:36" pos:end="189:57">(<argument pos:start="189:37" pos:end="189:39"><expr pos:start="189:37" pos:end="189:39"><name pos:start="189:37" pos:end="189:39">arg</name></expr></argument>, <argument pos:start="189:42" pos:end="189:44"><expr pos:start="189:42" pos:end="189:44"><name pos:start="189:42" pos:end="189:44">tmp</name></expr></argument>, <argument pos:start="189:47" pos:end="189:56"><expr pos:start="189:47" pos:end="189:56"><name pos:start="189:47" pos:end="189:56">CP0EnLo_XI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:61"><expr pos:start="191:21" pos:end="191:60"><call pos:start="191:21" pos:end="191:60"><name pos:start="191:21" pos:end="191:38">tcg_gen_deposit_tl</name><argument_list pos:start="191:39" pos:end="191:60">(<argument pos:start="191:40" pos:end="191:42"><expr pos:start="191:40" pos:end="191:42"><name pos:start="191:40" pos:end="191:42">tmp</name></expr></argument>, <argument pos:start="191:45" pos:end="191:47"><expr pos:start="191:45" pos:end="191:47"><name pos:start="191:45" pos:end="191:47">tmp</name></expr></argument>, <argument pos:start="191:50" pos:end="191:52"><expr pos:start="191:50" pos:end="191:52"><name pos:start="191:50" pos:end="191:52">arg</name></expr></argument>, <argument pos:start="191:55" pos:end="191:56"><expr pos:start="191:55" pos:end="191:56"><literal type="number" pos:start="191:55" pos:end="191:56">30</literal></expr></argument>, <argument pos:start="191:59" pos:end="191:59"><expr pos:start="191:59" pos:end="191:59"><literal type="number" pos:start="191:59" pos:end="191:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="195:1" pos:end="195:6">#<cpp:directive pos:start="195:2" pos:end="195:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="197:17" pos:end="197:41"><expr pos:start="197:17" pos:end="197:40"><call pos:start="197:17" pos:end="197:40"><name pos:start="197:17" pos:end="197:30">gen_move_low32</name><argument_list pos:start="197:31" pos:end="197:40">(<argument pos:start="197:32" pos:end="197:34"><expr pos:start="197:32" pos:end="197:34"><name pos:start="197:32" pos:end="197:34">arg</name></expr></argument>, <argument pos:start="197:37" pos:end="197:39"><expr pos:start="197:37" pos:end="197:39"><name pos:start="197:37" pos:end="197:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:39"><expr pos:start="199:17" pos:end="199:38"><call pos:start="199:17" pos:end="199:38"><name pos:start="199:17" pos:end="199:33">tcg_temp_free_i64</name><argument_list pos:start="199:34" pos:end="199:38">(<argument pos:start="199:35" pos:end="199:37"><expr pos:start="199:35" pos:end="199:37"><name pos:start="199:35" pos:end="199:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="203:13" pos:end="203:28"><expr pos:start="203:13" pos:end="203:27"><name pos:start="203:13" pos:end="203:14">rn</name> <operator pos:start="203:16" pos:end="203:16">=</operator> <literal type="string" pos:start="203:18" pos:end="203:27">"EntryLo0"</literal></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:15">case <expr pos:start="207:14" pos:end="207:14"><literal type="number" pos:start="207:14" pos:end="207:14">1</literal></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:48"><expr pos:start="209:13" pos:end="209:47"><call pos:start="209:13" pos:end="209:47"><name pos:start="209:13" pos:end="209:21">CP0_CHECK</name><argument_list pos:start="209:22" pos:end="209:47">(<argument pos:start="209:23" pos:end="209:46"><expr pos:start="209:23" pos:end="209:46"><name pos:start="209:23" pos:end="209:37"><name pos:start="209:23" pos:end="209:25">ctx</name><operator pos:start="209:26" pos:end="209:27">-&gt;</operator><name pos:start="209:28" pos:end="209:37">insn_flags</name></name> <operator pos:start="209:39" pos:end="209:39">&amp;</operator> <name pos:start="209:41" pos:end="209:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:51"><expr pos:start="211:13" pos:end="211:50"><call pos:start="211:13" pos:end="211:50"><name pos:start="211:13" pos:end="211:36">gen_helper_mfc0_tcstatus</name><argument_list pos:start="211:37" pos:end="211:50">(<argument pos:start="211:38" pos:end="211:40"><expr pos:start="211:38" pos:end="211:40"><name pos:start="211:38" pos:end="211:40">arg</name></expr></argument>, <argument pos:start="211:43" pos:end="211:49"><expr pos:start="211:43" pos:end="211:49"><name pos:start="211:43" pos:end="211:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:28"><expr pos:start="213:13" pos:end="213:27"><name pos:start="213:13" pos:end="213:14">rn</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <literal type="string" pos:start="213:18" pos:end="213:27">"TCStatus"</literal></expr>;</expr_stmt>

            <break pos:start="215:13" pos:end="215:18">break;</break>

        <case pos:start="217:9" pos:end="217:15">case <expr pos:start="217:14" pos:end="217:14"><literal type="number" pos:start="217:14" pos:end="217:14">2</literal></expr>:</case>

            <expr_stmt pos:start="219:13" pos:end="219:48"><expr pos:start="219:13" pos:end="219:47"><call pos:start="219:13" pos:end="219:47"><name pos:start="219:13" pos:end="219:21">CP0_CHECK</name><argument_list pos:start="219:22" pos:end="219:47">(<argument pos:start="219:23" pos:end="219:46"><expr pos:start="219:23" pos:end="219:46"><name pos:start="219:23" pos:end="219:37"><name pos:start="219:23" pos:end="219:25">ctx</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:37">insn_flags</name></name> <operator pos:start="219:39" pos:end="219:39">&amp;</operator> <name pos:start="219:41" pos:end="219:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:49"><expr pos:start="221:13" pos:end="221:48"><call pos:start="221:13" pos:end="221:48"><name pos:start="221:13" pos:end="221:34">gen_helper_mfc0_tcbind</name><argument_list pos:start="221:35" pos:end="221:48">(<argument pos:start="221:36" pos:end="221:38"><expr pos:start="221:36" pos:end="221:38"><name pos:start="221:36" pos:end="221:38">arg</name></expr></argument>, <argument pos:start="221:41" pos:end="221:47"><expr pos:start="221:41" pos:end="221:47"><name pos:start="221:41" pos:end="221:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:26"><expr pos:start="223:13" pos:end="223:25"><name pos:start="223:13" pos:end="223:14">rn</name> <operator pos:start="223:16" pos:end="223:16">=</operator> <literal type="string" pos:start="223:18" pos:end="223:25">"TCBind"</literal></expr>;</expr_stmt>

            <break pos:start="225:13" pos:end="225:18">break;</break>

        <case pos:start="227:9" pos:end="227:15">case <expr pos:start="227:14" pos:end="227:14"><literal type="number" pos:start="227:14" pos:end="227:14">3</literal></expr>:</case>

            <expr_stmt pos:start="229:13" pos:end="229:48"><expr pos:start="229:13" pos:end="229:47"><call pos:start="229:13" pos:end="229:47"><name pos:start="229:13" pos:end="229:21">CP0_CHECK</name><argument_list pos:start="229:22" pos:end="229:47">(<argument pos:start="229:23" pos:end="229:46"><expr pos:start="229:23" pos:end="229:46"><name pos:start="229:23" pos:end="229:37"><name pos:start="229:23" pos:end="229:25">ctx</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:37">insn_flags</name></name> <operator pos:start="229:39" pos:end="229:39">&amp;</operator> <name pos:start="229:41" pos:end="229:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:52"><expr pos:start="231:13" pos:end="231:51"><call pos:start="231:13" pos:end="231:51"><name pos:start="231:13" pos:end="231:37">gen_helper_mfc0_tcrestart</name><argument_list pos:start="231:38" pos:end="231:51">(<argument pos:start="231:39" pos:end="231:41"><expr pos:start="231:39" pos:end="231:41"><name pos:start="231:39" pos:end="231:41">arg</name></expr></argument>, <argument pos:start="231:44" pos:end="231:50"><expr pos:start="231:44" pos:end="231:50"><name pos:start="231:44" pos:end="231:50">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:29"><expr pos:start="233:13" pos:end="233:28"><name pos:start="233:13" pos:end="233:14">rn</name> <operator pos:start="233:16" pos:end="233:16">=</operator> <literal type="string" pos:start="233:18" pos:end="233:28">"TCRestart"</literal></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <case pos:start="237:9" pos:end="237:15">case <expr pos:start="237:14" pos:end="237:14"><literal type="number" pos:start="237:14" pos:end="237:14">4</literal></expr>:</case>

            <expr_stmt pos:start="239:13" pos:end="239:48"><expr pos:start="239:13" pos:end="239:47"><call pos:start="239:13" pos:end="239:47"><name pos:start="239:13" pos:end="239:21">CP0_CHECK</name><argument_list pos:start="239:22" pos:end="239:47">(<argument pos:start="239:23" pos:end="239:46"><expr pos:start="239:23" pos:end="239:46"><name pos:start="239:23" pos:end="239:37"><name pos:start="239:23" pos:end="239:25">ctx</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:37">insn_flags</name></name> <operator pos:start="239:39" pos:end="239:39">&amp;</operator> <name pos:start="239:41" pos:end="239:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:49"><expr pos:start="241:13" pos:end="241:48"><call pos:start="241:13" pos:end="241:48"><name pos:start="241:13" pos:end="241:34">gen_helper_mfc0_tchalt</name><argument_list pos:start="241:35" pos:end="241:48">(<argument pos:start="241:36" pos:end="241:38"><expr pos:start="241:36" pos:end="241:38"><name pos:start="241:36" pos:end="241:38">arg</name></expr></argument>, <argument pos:start="241:41" pos:end="241:47"><expr pos:start="241:41" pos:end="241:47"><name pos:start="241:41" pos:end="241:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:26"><expr pos:start="243:13" pos:end="243:25"><name pos:start="243:13" pos:end="243:14">rn</name> <operator pos:start="243:16" pos:end="243:16">=</operator> <literal type="string" pos:start="243:18" pos:end="243:25">"TCHalt"</literal></expr>;</expr_stmt>

            <break pos:start="245:13" pos:end="245:18">break;</break>

        <case pos:start="247:9" pos:end="247:15">case <expr pos:start="247:14" pos:end="247:14"><literal type="number" pos:start="247:14" pos:end="247:14">5</literal></expr>:</case>

            <expr_stmt pos:start="249:13" pos:end="249:48"><expr pos:start="249:13" pos:end="249:47"><call pos:start="249:13" pos:end="249:47"><name pos:start="249:13" pos:end="249:21">CP0_CHECK</name><argument_list pos:start="249:22" pos:end="249:47">(<argument pos:start="249:23" pos:end="249:46"><expr pos:start="249:23" pos:end="249:46"><name pos:start="249:23" pos:end="249:37"><name pos:start="249:23" pos:end="249:25">ctx</name><operator pos:start="249:26" pos:end="249:27">-&gt;</operator><name pos:start="249:28" pos:end="249:37">insn_flags</name></name> <operator pos:start="249:39" pos:end="249:39">&amp;</operator> <name pos:start="249:41" pos:end="249:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:52"><expr pos:start="251:13" pos:end="251:51"><call pos:start="251:13" pos:end="251:51"><name pos:start="251:13" pos:end="251:37">gen_helper_mfc0_tccontext</name><argument_list pos:start="251:38" pos:end="251:51">(<argument pos:start="251:39" pos:end="251:41"><expr pos:start="251:39" pos:end="251:41"><name pos:start="251:39" pos:end="251:41">arg</name></expr></argument>, <argument pos:start="251:44" pos:end="251:50"><expr pos:start="251:44" pos:end="251:50"><name pos:start="251:44" pos:end="251:50">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:29"><expr pos:start="253:13" pos:end="253:28"><name pos:start="253:13" pos:end="253:14">rn</name> <operator pos:start="253:16" pos:end="253:16">=</operator> <literal type="string" pos:start="253:18" pos:end="253:28">"TCContext"</literal></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        <case pos:start="257:9" pos:end="257:15">case <expr pos:start="257:14" pos:end="257:14"><literal type="number" pos:start="257:14" pos:end="257:14">6</literal></expr>:</case>

            <expr_stmt pos:start="259:13" pos:end="259:48"><expr pos:start="259:13" pos:end="259:47"><call pos:start="259:13" pos:end="259:47"><name pos:start="259:13" pos:end="259:21">CP0_CHECK</name><argument_list pos:start="259:22" pos:end="259:47">(<argument pos:start="259:23" pos:end="259:46"><expr pos:start="259:23" pos:end="259:46"><name pos:start="259:23" pos:end="259:37"><name pos:start="259:23" pos:end="259:25">ctx</name><operator pos:start="259:26" pos:end="259:27">-&gt;</operator><name pos:start="259:28" pos:end="259:37">insn_flags</name></name> <operator pos:start="259:39" pos:end="259:39">&amp;</operator> <name pos:start="259:41" pos:end="259:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:53"><expr pos:start="261:13" pos:end="261:52"><call pos:start="261:13" pos:end="261:52"><name pos:start="261:13" pos:end="261:38">gen_helper_mfc0_tcschedule</name><argument_list pos:start="261:39" pos:end="261:52">(<argument pos:start="261:40" pos:end="261:42"><expr pos:start="261:40" pos:end="261:42"><name pos:start="261:40" pos:end="261:42">arg</name></expr></argument>, <argument pos:start="261:45" pos:end="261:51"><expr pos:start="261:45" pos:end="261:51"><name pos:start="261:45" pos:end="261:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:30"><expr pos:start="263:13" pos:end="263:29"><name pos:start="263:13" pos:end="263:14">rn</name> <operator pos:start="263:16" pos:end="263:16">=</operator> <literal type="string" pos:start="263:18" pos:end="263:29">"TCSchedule"</literal></expr>;</expr_stmt>

            <break pos:start="265:13" pos:end="265:18">break;</break>

        <case pos:start="267:9" pos:end="267:15">case <expr pos:start="267:14" pos:end="267:14"><literal type="number" pos:start="267:14" pos:end="267:14">7</literal></expr>:</case>

            <expr_stmt pos:start="269:13" pos:end="269:48"><expr pos:start="269:13" pos:end="269:47"><call pos:start="269:13" pos:end="269:47"><name pos:start="269:13" pos:end="269:21">CP0_CHECK</name><argument_list pos:start="269:22" pos:end="269:47">(<argument pos:start="269:23" pos:end="269:46"><expr pos:start="269:23" pos:end="269:46"><name pos:start="269:23" pos:end="269:37"><name pos:start="269:23" pos:end="269:25">ctx</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:37">insn_flags</name></name> <operator pos:start="269:39" pos:end="269:39">&amp;</operator> <name pos:start="269:41" pos:end="269:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:54"><expr pos:start="271:13" pos:end="271:53"><call pos:start="271:13" pos:end="271:53"><name pos:start="271:13" pos:end="271:39">gen_helper_mfc0_tcschefback</name><argument_list pos:start="271:40" pos:end="271:53">(<argument pos:start="271:41" pos:end="271:43"><expr pos:start="271:41" pos:end="271:43"><name pos:start="271:41" pos:end="271:43">arg</name></expr></argument>, <argument pos:start="271:46" pos:end="271:52"><expr pos:start="271:46" pos:end="271:52"><name pos:start="271:46" pos:end="271:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:31"><expr pos:start="273:13" pos:end="273:30"><name pos:start="273:13" pos:end="273:14">rn</name> <operator pos:start="273:16" pos:end="273:16">=</operator> <literal type="string" pos:start="273:18" pos:end="273:30">"TCScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="275:13" pos:end="275:18">break;</break>

        <default pos:start="277:9" pos:end="277:16">default:</default>

            <goto pos:start="279:13" pos:end="279:35">goto <name pos:start="279:18" pos:end="279:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="283:9" pos:end="283:14">break;</break>

    <case pos:start="285:5" pos:end="285:11">case <expr pos:start="285:10" pos:end="285:10"><literal type="number" pos:start="285:10" pos:end="285:10">3</literal></expr>:</case>

        <switch pos:start="287:9" pos:end="337:9">switch <condition pos:start="287:16" pos:end="287:20">(<expr pos:start="287:17" pos:end="287:19"><name pos:start="287:17" pos:end="287:19">sel</name></expr>)</condition> <block pos:start="287:22" pos:end="337:9">{<block_content pos:start="289:9" pos:end="335:35">

        <case pos:start="289:9" pos:end="289:15">case <expr pos:start="289:14" pos:end="289:14"><literal type="number" pos:start="289:14" pos:end="289:14">0</literal></expr>:</case>

            <block pos:start="291:13" pos:end="317:13">{<block_content pos:start="293:17" pos:end="315:39">

                <decl_stmt pos:start="293:17" pos:end="293:50"><decl pos:start="293:17" pos:end="293:49"><type pos:start="293:17" pos:end="293:24"><name pos:start="293:17" pos:end="293:24">TCGv_i64</name></type> <name pos:start="293:26" pos:end="293:28">tmp</name> <init pos:start="293:30" pos:end="293:49">= <expr pos:start="293:32" pos:end="293:49"><call pos:start="293:32" pos:end="293:49"><name pos:start="293:32" pos:end="293:47">tcg_temp_new_i64</name><argument_list pos:start="293:48" pos:end="293:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="295:17" pos:end="300:0"><expr pos:start="295:17" pos:end="297:68"><call pos:start="295:17" pos:end="297:68"><name pos:start="295:17" pos:end="295:30">tcg_gen_ld_i64</name><argument_list pos:start="295:31" pos:end="297:68">(<argument pos:start="295:32" pos:end="295:34"><expr pos:start="295:32" pos:end="295:34"><name pos:start="295:32" pos:end="295:34">tmp</name></expr></argument>, <argument pos:start="295:37" pos:end="295:43"><expr pos:start="295:37" pos:end="295:43"><name pos:start="295:37" pos:end="295:43">cpu_env</name></expr></argument>,

                               <argument pos:start="297:32" pos:end="297:67"><expr pos:start="297:32" pos:end="297:67"><call pos:start="297:32" pos:end="297:67"><name pos:start="297:32" pos:end="297:39">offsetof</name><argument_list pos:start="297:40" pos:end="297:67">(<argument pos:start="297:41" pos:end="297:52"><expr pos:start="297:41" pos:end="297:52"><name pos:start="297:41" pos:end="297:52">CPUMIPSState</name></expr></argument>, <argument pos:start="297:55" pos:end="297:66"><expr pos:start="297:55" pos:end="297:66"><name pos:start="297:55" pos:end="297:66">CP0_EntryLo1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="299:1" pos:end="299:26">#<cpp:directive pos:start="299:2" pos:end="299:3">if</cpp:directive> <expr pos:start="299:5" pos:end="299:26"><call pos:start="299:5" pos:end="299:26"><name pos:start="299:5" pos:end="299:11">defined</name><argument_list pos:start="299:12" pos:end="299:26">(<argument pos:start="299:13" pos:end="299:25"><expr pos:start="299:13" pos:end="299:25"><name pos:start="299:13" pos:end="299:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <if_stmt pos:start="301:17" pos:end="312:0"><if pos:start="301:17" pos:end="312:0">if <condition pos:start="301:20" pos:end="301:29">(<expr pos:start="301:21" pos:end="301:28"><name pos:start="301:21" pos:end="301:28"><name pos:start="301:21" pos:end="301:23">ctx</name><operator pos:start="301:24" pos:end="301:25">-&gt;</operator><name pos:start="301:26" pos:end="301:28">rxi</name></name></expr>)</condition> <block pos:start="301:31" pos:end="312:0">{<block_content pos:start="305:21" pos:end="307:61">

                    <comment type="block" pos:start="303:21" pos:end="303:57">/* Move RI/XI fields to bits 31:30 */</comment>

                    <expr_stmt pos:start="305:21" pos:end="305:58"><expr pos:start="305:21" pos:end="305:57"><call pos:start="305:21" pos:end="305:57"><name pos:start="305:21" pos:end="305:35">tcg_gen_shri_tl</name><argument_list pos:start="305:36" pos:end="305:57">(<argument pos:start="305:37" pos:end="305:39"><expr pos:start="305:37" pos:end="305:39"><name pos:start="305:37" pos:end="305:39">arg</name></expr></argument>, <argument pos:start="305:42" pos:end="305:44"><expr pos:start="305:42" pos:end="305:44"><name pos:start="305:42" pos:end="305:44">tmp</name></expr></argument>, <argument pos:start="305:47" pos:end="305:56"><expr pos:start="305:47" pos:end="305:56"><name pos:start="305:47" pos:end="305:56">CP0EnLo_XI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="307:21" pos:end="307:61"><expr pos:start="307:21" pos:end="307:60"><call pos:start="307:21" pos:end="307:60"><name pos:start="307:21" pos:end="307:38">tcg_gen_deposit_tl</name><argument_list pos:start="307:39" pos:end="307:60">(<argument pos:start="307:40" pos:end="307:42"><expr pos:start="307:40" pos:end="307:42"><name pos:start="307:40" pos:end="307:42">tmp</name></expr></argument>, <argument pos:start="307:45" pos:end="307:47"><expr pos:start="307:45" pos:end="307:47"><name pos:start="307:45" pos:end="307:47">tmp</name></expr></argument>, <argument pos:start="307:50" pos:end="307:52"><expr pos:start="307:50" pos:end="307:52"><name pos:start="307:50" pos:end="307:52">arg</name></expr></argument>, <argument pos:start="307:55" pos:end="307:56"><expr pos:start="307:55" pos:end="307:56"><literal type="number" pos:start="307:55" pos:end="307:56">30</literal></expr></argument>, <argument pos:start="307:59" pos:end="307:59"><expr pos:start="307:59" pos:end="307:59"><literal type="number" pos:start="307:59" pos:end="307:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="311:1" pos:end="311:6">#<cpp:directive pos:start="311:2" pos:end="311:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="313:17" pos:end="313:41"><expr pos:start="313:17" pos:end="313:40"><call pos:start="313:17" pos:end="313:40"><name pos:start="313:17" pos:end="313:30">gen_move_low32</name><argument_list pos:start="313:31" pos:end="313:40">(<argument pos:start="313:32" pos:end="313:34"><expr pos:start="313:32" pos:end="313:34"><name pos:start="313:32" pos:end="313:34">arg</name></expr></argument>, <argument pos:start="313:37" pos:end="313:39"><expr pos:start="313:37" pos:end="313:39"><name pos:start="313:37" pos:end="313:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:39"><expr pos:start="315:17" pos:end="315:38"><call pos:start="315:17" pos:end="315:38"><name pos:start="315:17" pos:end="315:33">tcg_temp_free_i64</name><argument_list pos:start="315:34" pos:end="315:38">(<argument pos:start="315:35" pos:end="315:37"><expr pos:start="315:35" pos:end="315:37"><name pos:start="315:35" pos:end="315:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="319:13" pos:end="319:28"><expr pos:start="319:13" pos:end="319:27"><name pos:start="319:13" pos:end="319:14">rn</name> <operator pos:start="319:16" pos:end="319:16">=</operator> <literal type="string" pos:start="319:18" pos:end="319:27">"EntryLo1"</literal></expr>;</expr_stmt>

            <break pos:start="321:13" pos:end="321:18">break;</break>

        <case pos:start="323:9" pos:end="323:15">case <expr pos:start="323:14" pos:end="323:14"><literal type="number" pos:start="323:14" pos:end="323:14">1</literal></expr>:</case>

            <expr_stmt pos:start="325:13" pos:end="325:31"><expr pos:start="325:13" pos:end="325:30"><call pos:start="325:13" pos:end="325:30"><name pos:start="325:13" pos:end="325:21">CP0_CHECK</name><argument_list pos:start="325:22" pos:end="325:30">(<argument pos:start="325:23" pos:end="325:29"><expr pos:start="325:23" pos:end="325:29"><name pos:start="325:23" pos:end="325:29"><name pos:start="325:23" pos:end="325:25">ctx</name><operator pos:start="325:26" pos:end="325:27">-&gt;</operator><name pos:start="325:28" pos:end="325:29">vp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:75"><expr pos:start="327:13" pos:end="327:74"><call pos:start="327:13" pos:end="327:74"><name pos:start="327:13" pos:end="327:27">gen_mfc0_load32</name><argument_list pos:start="327:28" pos:end="327:74">(<argument pos:start="327:29" pos:end="327:31"><expr pos:start="327:29" pos:end="327:31"><name pos:start="327:29" pos:end="327:31">arg</name></expr></argument>, <argument pos:start="327:34" pos:end="327:73"><expr pos:start="327:34" pos:end="327:73"><call pos:start="327:34" pos:end="327:73"><name pos:start="327:34" pos:end="327:41">offsetof</name><argument_list pos:start="327:42" pos:end="327:73">(<argument pos:start="327:43" pos:end="327:54"><expr pos:start="327:43" pos:end="327:54"><name pos:start="327:43" pos:end="327:54">CPUMIPSState</name></expr></argument>, <argument pos:start="327:57" pos:end="327:72"><expr pos:start="327:57" pos:end="327:72"><name pos:start="327:57" pos:end="327:72">CP0_GlobalNumber</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:32"><expr pos:start="329:13" pos:end="329:31"><name pos:start="329:13" pos:end="329:14">rn</name> <operator pos:start="329:16" pos:end="329:16">=</operator> <literal type="string" pos:start="329:18" pos:end="329:31">"GlobalNumber"</literal></expr>;</expr_stmt>

            <break pos:start="331:13" pos:end="331:18">break;</break>

        <default pos:start="333:9" pos:end="333:16">default:</default>

            <goto pos:start="335:13" pos:end="335:35">goto <name pos:start="335:18" pos:end="335:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="339:9" pos:end="339:14">break;</break>

    <case pos:start="341:5" pos:end="341:11">case <expr pos:start="341:10" pos:end="341:10"><literal type="number" pos:start="341:10" pos:end="341:10">4</literal></expr>:</case>

        <switch pos:start="343:9" pos:end="381:9">switch <condition pos:start="343:16" pos:end="343:20">(<expr pos:start="343:17" pos:end="343:19"><name pos:start="343:17" pos:end="343:19">sel</name></expr>)</condition> <block pos:start="343:22" pos:end="381:9">{<block_content pos:start="345:9" pos:end="379:35">

        <case pos:start="345:9" pos:end="345:15">case <expr pos:start="345:14" pos:end="345:14"><literal type="number" pos:start="345:14" pos:end="345:14">0</literal></expr>:</case>

            <expr_stmt pos:start="347:13" pos:end="347:77"><expr pos:start="347:13" pos:end="347:76"><call pos:start="347:13" pos:end="347:76"><name pos:start="347:13" pos:end="347:25">tcg_gen_ld_tl</name><argument_list pos:start="347:26" pos:end="347:76">(<argument pos:start="347:27" pos:end="347:29"><expr pos:start="347:27" pos:end="347:29"><name pos:start="347:27" pos:end="347:29">arg</name></expr></argument>, <argument pos:start="347:32" pos:end="347:38"><expr pos:start="347:32" pos:end="347:38"><name pos:start="347:32" pos:end="347:38">cpu_env</name></expr></argument>, <argument pos:start="347:41" pos:end="347:75"><expr pos:start="347:41" pos:end="347:75"><call pos:start="347:41" pos:end="347:75"><name pos:start="347:41" pos:end="347:48">offsetof</name><argument_list pos:start="347:49" pos:end="347:75">(<argument pos:start="347:50" pos:end="347:61"><expr pos:start="347:50" pos:end="347:61"><name pos:start="347:50" pos:end="347:61">CPUMIPSState</name></expr></argument>, <argument pos:start="347:64" pos:end="347:74"><expr pos:start="347:64" pos:end="347:74"><name pos:start="347:64" pos:end="347:74">CP0_Context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:40"><expr pos:start="349:13" pos:end="349:39"><call pos:start="349:13" pos:end="349:39"><name pos:start="349:13" pos:end="349:29">tcg_gen_ext32s_tl</name><argument_list pos:start="349:30" pos:end="349:39">(<argument pos:start="349:31" pos:end="349:33"><expr pos:start="349:31" pos:end="349:33"><name pos:start="349:31" pos:end="349:33">arg</name></expr></argument>, <argument pos:start="349:36" pos:end="349:38"><expr pos:start="349:36" pos:end="349:38"><name pos:start="349:36" pos:end="349:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:27"><expr pos:start="351:13" pos:end="351:26"><name pos:start="351:13" pos:end="351:14">rn</name> <operator pos:start="351:16" pos:end="351:16">=</operator> <literal type="string" pos:start="351:18" pos:end="351:26">"Context"</literal></expr>;</expr_stmt>

            <break pos:start="353:13" pos:end="353:18">break;</break>

        <case pos:start="355:9" pos:end="355:15">case <expr pos:start="355:14" pos:end="355:14"><literal type="number" pos:start="355:14" pos:end="355:14">1</literal></expr>:</case>

<comment type="line" pos:start="357:1" pos:end="357:69">//            gen_helper_mfc0_contextconfig(arg); /* SmartMIPS ASE */</comment>

            <expr_stmt pos:start="359:13" pos:end="359:33"><expr pos:start="359:13" pos:end="359:32"><name pos:start="359:13" pos:end="359:14">rn</name> <operator pos:start="359:16" pos:end="359:16">=</operator> <literal type="string" pos:start="359:18" pos:end="359:32">"ContextConfig"</literal></expr>;</expr_stmt>

            <goto pos:start="361:13" pos:end="361:35">goto <name pos:start="361:18" pos:end="361:34">cp0_unimplemented</name>;</goto>

        <case pos:start="363:9" pos:end="363:15">case <expr pos:start="363:14" pos:end="363:14"><literal type="number" pos:start="363:14" pos:end="363:14">2</literal></expr>:</case>

            <expr_stmt pos:start="365:13" pos:end="365:33"><expr pos:start="365:13" pos:end="365:32"><call pos:start="365:13" pos:end="365:32"><name pos:start="365:13" pos:end="365:21">CP0_CHECK</name><argument_list pos:start="365:22" pos:end="365:32">(<argument pos:start="365:23" pos:end="365:31"><expr pos:start="365:23" pos:end="365:31"><name pos:start="365:23" pos:end="365:31"><name pos:start="365:23" pos:end="365:25">ctx</name><operator pos:start="365:26" pos:end="365:27">-&gt;</operator><name pos:start="365:28" pos:end="365:31">ulri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="369:75"><expr pos:start="367:13" pos:end="369:74"><call pos:start="367:13" pos:end="369:74"><name pos:start="367:13" pos:end="367:25">tcg_gen_ld_tl</name><argument_list pos:start="367:26" pos:end="369:74">(<argument pos:start="367:27" pos:end="367:29"><expr pos:start="367:27" pos:end="367:29"><name pos:start="367:27" pos:end="367:29">arg</name></expr></argument>, <argument pos:start="367:32" pos:end="367:38"><expr pos:start="367:32" pos:end="367:38"><name pos:start="367:32" pos:end="367:38">cpu_env</name></expr></argument>,

                          <argument pos:start="369:27" pos:end="369:73"><expr pos:start="369:27" pos:end="369:73"><call pos:start="369:27" pos:end="369:73"><name pos:start="369:27" pos:end="369:34">offsetof</name><argument_list pos:start="369:35" pos:end="369:73">(<argument pos:start="369:36" pos:end="369:47"><expr pos:start="369:36" pos:end="369:47"><name pos:start="369:36" pos:end="369:47">CPUMIPSState</name></expr></argument>, <argument pos:start="369:50" pos:end="369:72"><expr pos:start="369:50" pos:end="369:72"><name pos:start="369:50" pos:end="369:72"><name pos:start="369:50" pos:end="369:58">active_tc</name><operator pos:start="369:59" pos:end="369:59">.</operator><name pos:start="369:60" pos:end="369:72">CP0_UserLocal</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:40"><expr pos:start="371:13" pos:end="371:39"><call pos:start="371:13" pos:end="371:39"><name pos:start="371:13" pos:end="371:29">tcg_gen_ext32s_tl</name><argument_list pos:start="371:30" pos:end="371:39">(<argument pos:start="371:31" pos:end="371:33"><expr pos:start="371:31" pos:end="371:33"><name pos:start="371:31" pos:end="371:33">arg</name></expr></argument>, <argument pos:start="371:36" pos:end="371:38"><expr pos:start="371:36" pos:end="371:38"><name pos:start="371:36" pos:end="371:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:29"><expr pos:start="373:13" pos:end="373:28"><name pos:start="373:13" pos:end="373:14">rn</name> <operator pos:start="373:16" pos:end="373:16">=</operator> <literal type="string" pos:start="373:18" pos:end="373:28">"UserLocal"</literal></expr>;</expr_stmt>

            <break pos:start="375:13" pos:end="375:18">break;</break>

        <default pos:start="377:9" pos:end="377:16">default:</default>

            <goto pos:start="379:13" pos:end="379:35">goto <name pos:start="379:18" pos:end="379:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="383:9" pos:end="383:14">break;</break>

    <case pos:start="385:5" pos:end="385:11">case <expr pos:start="385:10" pos:end="385:10"><literal type="number" pos:start="385:10" pos:end="385:10">5</literal></expr>:</case>

        <switch pos:start="387:9" pos:end="447:9">switch <condition pos:start="387:16" pos:end="387:20">(<expr pos:start="387:17" pos:end="387:19"><name pos:start="387:17" pos:end="387:19">sel</name></expr>)</condition> <block pos:start="387:22" pos:end="447:9">{<block_content pos:start="389:9" pos:end="445:35">

        <case pos:start="389:9" pos:end="389:15">case <expr pos:start="389:14" pos:end="389:14"><literal type="number" pos:start="389:14" pos:end="389:14">0</literal></expr>:</case>

            <expr_stmt pos:start="391:13" pos:end="391:71"><expr pos:start="391:13" pos:end="391:70"><call pos:start="391:13" pos:end="391:70"><name pos:start="391:13" pos:end="391:27">gen_mfc0_load32</name><argument_list pos:start="391:28" pos:end="391:70">(<argument pos:start="391:29" pos:end="391:31"><expr pos:start="391:29" pos:end="391:31"><name pos:start="391:29" pos:end="391:31">arg</name></expr></argument>, <argument pos:start="391:34" pos:end="391:69"><expr pos:start="391:34" pos:end="391:69"><call pos:start="391:34" pos:end="391:69"><name pos:start="391:34" pos:end="391:41">offsetof</name><argument_list pos:start="391:42" pos:end="391:69">(<argument pos:start="391:43" pos:end="391:54"><expr pos:start="391:43" pos:end="391:54"><name pos:start="391:43" pos:end="391:54">CPUMIPSState</name></expr></argument>, <argument pos:start="391:57" pos:end="391:68"><expr pos:start="391:57" pos:end="391:68"><name pos:start="391:57" pos:end="391:68">CP0_PageMask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:28"><expr pos:start="393:13" pos:end="393:27"><name pos:start="393:13" pos:end="393:14">rn</name> <operator pos:start="393:16" pos:end="393:16">=</operator> <literal type="string" pos:start="393:18" pos:end="393:27">"PageMask"</literal></expr>;</expr_stmt>

            <break pos:start="395:13" pos:end="395:18">break;</break>

        <case pos:start="397:9" pos:end="397:15">case <expr pos:start="397:14" pos:end="397:14"><literal type="number" pos:start="397:14" pos:end="397:14">1</literal></expr>:</case>

            <expr_stmt pos:start="399:13" pos:end="399:42"><expr pos:start="399:13" pos:end="399:41"><call pos:start="399:13" pos:end="399:41"><name pos:start="399:13" pos:end="399:22">check_insn</name><argument_list pos:start="399:23" pos:end="399:41">(<argument pos:start="399:24" pos:end="399:26"><expr pos:start="399:24" pos:end="399:26"><name pos:start="399:24" pos:end="399:26">ctx</name></expr></argument>, <argument pos:start="399:29" pos:end="399:40"><expr pos:start="399:29" pos:end="399:40"><name pos:start="399:29" pos:end="399:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:72"><expr pos:start="401:13" pos:end="401:71"><call pos:start="401:13" pos:end="401:71"><name pos:start="401:13" pos:end="401:27">gen_mfc0_load32</name><argument_list pos:start="401:28" pos:end="401:71">(<argument pos:start="401:29" pos:end="401:31"><expr pos:start="401:29" pos:end="401:31"><name pos:start="401:29" pos:end="401:31">arg</name></expr></argument>, <argument pos:start="401:34" pos:end="401:70"><expr pos:start="401:34" pos:end="401:70"><call pos:start="401:34" pos:end="401:70"><name pos:start="401:34" pos:end="401:41">offsetof</name><argument_list pos:start="401:42" pos:end="401:70">(<argument pos:start="401:43" pos:end="401:54"><expr pos:start="401:43" pos:end="401:54"><name pos:start="401:43" pos:end="401:54">CPUMIPSState</name></expr></argument>, <argument pos:start="401:57" pos:end="401:69"><expr pos:start="401:57" pos:end="401:69"><name pos:start="401:57" pos:end="401:69">CP0_PageGrain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:29"><expr pos:start="403:13" pos:end="403:28"><name pos:start="403:13" pos:end="403:14">rn</name> <operator pos:start="403:16" pos:end="403:16">=</operator> <literal type="string" pos:start="403:18" pos:end="403:28">"PageGrain"</literal></expr>;</expr_stmt>

            <break pos:start="405:13" pos:end="405:18">break;</break>

        <case pos:start="407:9" pos:end="407:15">case <expr pos:start="407:14" pos:end="407:14"><literal type="number" pos:start="407:14" pos:end="407:14">2</literal></expr>:</case>

            <expr_stmt pos:start="409:13" pos:end="409:31"><expr pos:start="409:13" pos:end="409:30"><call pos:start="409:13" pos:end="409:30"><name pos:start="409:13" pos:end="409:21">CP0_CHECK</name><argument_list pos:start="409:22" pos:end="409:30">(<argument pos:start="409:23" pos:end="409:29"><expr pos:start="409:23" pos:end="409:29"><name pos:start="409:23" pos:end="409:29"><name pos:start="409:23" pos:end="409:25">ctx</name><operator pos:start="409:26" pos:end="409:27">-&gt;</operator><name pos:start="409:28" pos:end="409:29">sc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:77"><expr pos:start="411:13" pos:end="411:76"><call pos:start="411:13" pos:end="411:76"><name pos:start="411:13" pos:end="411:25">tcg_gen_ld_tl</name><argument_list pos:start="411:26" pos:end="411:76">(<argument pos:start="411:27" pos:end="411:29"><expr pos:start="411:27" pos:end="411:29"><name pos:start="411:27" pos:end="411:29">arg</name></expr></argument>, <argument pos:start="411:32" pos:end="411:38"><expr pos:start="411:32" pos:end="411:38"><name pos:start="411:32" pos:end="411:38">cpu_env</name></expr></argument>, <argument pos:start="411:41" pos:end="411:75"><expr pos:start="411:41" pos:end="411:75"><call pos:start="411:41" pos:end="411:75"><name pos:start="411:41" pos:end="411:48">offsetof</name><argument_list pos:start="411:49" pos:end="411:75">(<argument pos:start="411:50" pos:end="411:61"><expr pos:start="411:50" pos:end="411:61"><name pos:start="411:50" pos:end="411:61">CPUMIPSState</name></expr></argument>, <argument pos:start="411:64" pos:end="411:74"><expr pos:start="411:64" pos:end="411:74"><name pos:start="411:64" pos:end="411:74">CP0_SegCtl0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:40"><expr pos:start="413:13" pos:end="413:39"><call pos:start="413:13" pos:end="413:39"><name pos:start="413:13" pos:end="413:29">tcg_gen_ext32s_tl</name><argument_list pos:start="413:30" pos:end="413:39">(<argument pos:start="413:31" pos:end="413:33"><expr pos:start="413:31" pos:end="413:33"><name pos:start="413:31" pos:end="413:33">arg</name></expr></argument>, <argument pos:start="413:36" pos:end="413:38"><expr pos:start="413:36" pos:end="413:38"><name pos:start="413:36" pos:end="413:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:27"><expr pos:start="415:13" pos:end="415:26"><name pos:start="415:13" pos:end="415:14">rn</name> <operator pos:start="415:16" pos:end="415:16">=</operator> <literal type="string" pos:start="415:18" pos:end="415:26">"SegCtl0"</literal></expr>;</expr_stmt>

            <break pos:start="417:13" pos:end="417:18">break;</break>

        <case pos:start="419:9" pos:end="419:15">case <expr pos:start="419:14" pos:end="419:14"><literal type="number" pos:start="419:14" pos:end="419:14">3</literal></expr>:</case>

            <expr_stmt pos:start="421:13" pos:end="421:31"><expr pos:start="421:13" pos:end="421:30"><call pos:start="421:13" pos:end="421:30"><name pos:start="421:13" pos:end="421:21">CP0_CHECK</name><argument_list pos:start="421:22" pos:end="421:30">(<argument pos:start="421:23" pos:end="421:29"><expr pos:start="421:23" pos:end="421:29"><name pos:start="421:23" pos:end="421:29"><name pos:start="421:23" pos:end="421:25">ctx</name><operator pos:start="421:26" pos:end="421:27">-&gt;</operator><name pos:start="421:28" pos:end="421:29">sc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:77"><expr pos:start="423:13" pos:end="423:76"><call pos:start="423:13" pos:end="423:76"><name pos:start="423:13" pos:end="423:25">tcg_gen_ld_tl</name><argument_list pos:start="423:26" pos:end="423:76">(<argument pos:start="423:27" pos:end="423:29"><expr pos:start="423:27" pos:end="423:29"><name pos:start="423:27" pos:end="423:29">arg</name></expr></argument>, <argument pos:start="423:32" pos:end="423:38"><expr pos:start="423:32" pos:end="423:38"><name pos:start="423:32" pos:end="423:38">cpu_env</name></expr></argument>, <argument pos:start="423:41" pos:end="423:75"><expr pos:start="423:41" pos:end="423:75"><call pos:start="423:41" pos:end="423:75"><name pos:start="423:41" pos:end="423:48">offsetof</name><argument_list pos:start="423:49" pos:end="423:75">(<argument pos:start="423:50" pos:end="423:61"><expr pos:start="423:50" pos:end="423:61"><name pos:start="423:50" pos:end="423:61">CPUMIPSState</name></expr></argument>, <argument pos:start="423:64" pos:end="423:74"><expr pos:start="423:64" pos:end="423:74"><name pos:start="423:64" pos:end="423:74">CP0_SegCtl1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:40"><expr pos:start="425:13" pos:end="425:39"><call pos:start="425:13" pos:end="425:39"><name pos:start="425:13" pos:end="425:29">tcg_gen_ext32s_tl</name><argument_list pos:start="425:30" pos:end="425:39">(<argument pos:start="425:31" pos:end="425:33"><expr pos:start="425:31" pos:end="425:33"><name pos:start="425:31" pos:end="425:33">arg</name></expr></argument>, <argument pos:start="425:36" pos:end="425:38"><expr pos:start="425:36" pos:end="425:38"><name pos:start="425:36" pos:end="425:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:27"><expr pos:start="427:13" pos:end="427:26"><name pos:start="427:13" pos:end="427:14">rn</name> <operator pos:start="427:16" pos:end="427:16">=</operator> <literal type="string" pos:start="427:18" pos:end="427:26">"SegCtl1"</literal></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <case pos:start="431:9" pos:end="431:15">case <expr pos:start="431:14" pos:end="431:14"><literal type="number" pos:start="431:14" pos:end="431:14">4</literal></expr>:</case>

            <expr_stmt pos:start="433:13" pos:end="433:31"><expr pos:start="433:13" pos:end="433:30"><call pos:start="433:13" pos:end="433:30"><name pos:start="433:13" pos:end="433:21">CP0_CHECK</name><argument_list pos:start="433:22" pos:end="433:30">(<argument pos:start="433:23" pos:end="433:29"><expr pos:start="433:23" pos:end="433:29"><name pos:start="433:23" pos:end="433:29"><name pos:start="433:23" pos:end="433:25">ctx</name><operator pos:start="433:26" pos:end="433:27">-&gt;</operator><name pos:start="433:28" pos:end="433:29">sc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:77"><expr pos:start="435:13" pos:end="435:76"><call pos:start="435:13" pos:end="435:76"><name pos:start="435:13" pos:end="435:25">tcg_gen_ld_tl</name><argument_list pos:start="435:26" pos:end="435:76">(<argument pos:start="435:27" pos:end="435:29"><expr pos:start="435:27" pos:end="435:29"><name pos:start="435:27" pos:end="435:29">arg</name></expr></argument>, <argument pos:start="435:32" pos:end="435:38"><expr pos:start="435:32" pos:end="435:38"><name pos:start="435:32" pos:end="435:38">cpu_env</name></expr></argument>, <argument pos:start="435:41" pos:end="435:75"><expr pos:start="435:41" pos:end="435:75"><call pos:start="435:41" pos:end="435:75"><name pos:start="435:41" pos:end="435:48">offsetof</name><argument_list pos:start="435:49" pos:end="435:75">(<argument pos:start="435:50" pos:end="435:61"><expr pos:start="435:50" pos:end="435:61"><name pos:start="435:50" pos:end="435:61">CPUMIPSState</name></expr></argument>, <argument pos:start="435:64" pos:end="435:74"><expr pos:start="435:64" pos:end="435:74"><name pos:start="435:64" pos:end="435:74">CP0_SegCtl2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:40"><expr pos:start="437:13" pos:end="437:39"><call pos:start="437:13" pos:end="437:39"><name pos:start="437:13" pos:end="437:29">tcg_gen_ext32s_tl</name><argument_list pos:start="437:30" pos:end="437:39">(<argument pos:start="437:31" pos:end="437:33"><expr pos:start="437:31" pos:end="437:33"><name pos:start="437:31" pos:end="437:33">arg</name></expr></argument>, <argument pos:start="437:36" pos:end="437:38"><expr pos:start="437:36" pos:end="437:38"><name pos:start="437:36" pos:end="437:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:27"><expr pos:start="439:13" pos:end="439:26"><name pos:start="439:13" pos:end="439:14">rn</name> <operator pos:start="439:16" pos:end="439:16">=</operator> <literal type="string" pos:start="439:18" pos:end="439:26">"SegCtl2"</literal></expr>;</expr_stmt>

            <break pos:start="441:13" pos:end="441:18">break;</break>

        <default pos:start="443:9" pos:end="443:16">default:</default>

            <goto pos:start="445:13" pos:end="445:35">goto <name pos:start="445:18" pos:end="445:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="449:9" pos:end="449:14">break;</break>

    <case pos:start="451:5" pos:end="451:11">case <expr pos:start="451:10" pos:end="451:10"><literal type="number" pos:start="451:10" pos:end="451:10">6</literal></expr>:</case>

        <switch pos:start="453:9" pos:end="517:9">switch <condition pos:start="453:16" pos:end="453:20">(<expr pos:start="453:17" pos:end="453:19"><name pos:start="453:17" pos:end="453:19">sel</name></expr>)</condition> <block pos:start="453:22" pos:end="517:9">{<block_content pos:start="455:9" pos:end="515:35">

        <case pos:start="455:9" pos:end="455:15">case <expr pos:start="455:14" pos:end="455:14"><literal type="number" pos:start="455:14" pos:end="455:14">0</literal></expr>:</case>

            <expr_stmt pos:start="457:13" pos:end="457:68"><expr pos:start="457:13" pos:end="457:67"><call pos:start="457:13" pos:end="457:67"><name pos:start="457:13" pos:end="457:27">gen_mfc0_load32</name><argument_list pos:start="457:28" pos:end="457:67">(<argument pos:start="457:29" pos:end="457:31"><expr pos:start="457:29" pos:end="457:31"><name pos:start="457:29" pos:end="457:31">arg</name></expr></argument>, <argument pos:start="457:34" pos:end="457:66"><expr pos:start="457:34" pos:end="457:66"><call pos:start="457:34" pos:end="457:66"><name pos:start="457:34" pos:end="457:41">offsetof</name><argument_list pos:start="457:42" pos:end="457:66">(<argument pos:start="457:43" pos:end="457:54"><expr pos:start="457:43" pos:end="457:54"><name pos:start="457:43" pos:end="457:54">CPUMIPSState</name></expr></argument>, <argument pos:start="457:57" pos:end="457:65"><expr pos:start="457:57" pos:end="457:65"><name pos:start="457:57" pos:end="457:65">CP0_Wired</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:25"><expr pos:start="459:13" pos:end="459:24"><name pos:start="459:13" pos:end="459:14">rn</name> <operator pos:start="459:16" pos:end="459:16">=</operator> <literal type="string" pos:start="459:18" pos:end="459:24">"Wired"</literal></expr>;</expr_stmt>

            <break pos:start="461:13" pos:end="461:18">break;</break>

        <case pos:start="463:9" pos:end="463:15">case <expr pos:start="463:14" pos:end="463:14"><literal type="number" pos:start="463:14" pos:end="463:14">1</literal></expr>:</case>

            <expr_stmt pos:start="465:13" pos:end="465:42"><expr pos:start="465:13" pos:end="465:41"><call pos:start="465:13" pos:end="465:41"><name pos:start="465:13" pos:end="465:22">check_insn</name><argument_list pos:start="465:23" pos:end="465:41">(<argument pos:start="465:24" pos:end="465:26"><expr pos:start="465:24" pos:end="465:26"><name pos:start="465:24" pos:end="465:26">ctx</name></expr></argument>, <argument pos:start="465:29" pos:end="465:40"><expr pos:start="465:29" pos:end="465:40"><name pos:start="465:29" pos:end="465:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:71"><expr pos:start="467:13" pos:end="467:70"><call pos:start="467:13" pos:end="467:70"><name pos:start="467:13" pos:end="467:27">gen_mfc0_load32</name><argument_list pos:start="467:28" pos:end="467:70">(<argument pos:start="467:29" pos:end="467:31"><expr pos:start="467:29" pos:end="467:31"><name pos:start="467:29" pos:end="467:31">arg</name></expr></argument>, <argument pos:start="467:34" pos:end="467:69"><expr pos:start="467:34" pos:end="467:69"><call pos:start="467:34" pos:end="467:69"><name pos:start="467:34" pos:end="467:41">offsetof</name><argument_list pos:start="467:42" pos:end="467:69">(<argument pos:start="467:43" pos:end="467:54"><expr pos:start="467:43" pos:end="467:54"><name pos:start="467:43" pos:end="467:54">CPUMIPSState</name></expr></argument>, <argument pos:start="467:57" pos:end="467:68"><expr pos:start="467:57" pos:end="467:68"><name pos:start="467:57" pos:end="467:68">CP0_SRSConf0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="469:13" pos:end="469:28"><expr pos:start="469:13" pos:end="469:27"><name pos:start="469:13" pos:end="469:14">rn</name> <operator pos:start="469:16" pos:end="469:16">=</operator> <literal type="string" pos:start="469:18" pos:end="469:27">"SRSConf0"</literal></expr>;</expr_stmt>

            <break pos:start="471:13" pos:end="471:18">break;</break>

        <case pos:start="473:9" pos:end="473:15">case <expr pos:start="473:14" pos:end="473:14"><literal type="number" pos:start="473:14" pos:end="473:14">2</literal></expr>:</case>

            <expr_stmt pos:start="475:13" pos:end="475:42"><expr pos:start="475:13" pos:end="475:41"><call pos:start="475:13" pos:end="475:41"><name pos:start="475:13" pos:end="475:22">check_insn</name><argument_list pos:start="475:23" pos:end="475:41">(<argument pos:start="475:24" pos:end="475:26"><expr pos:start="475:24" pos:end="475:26"><name pos:start="475:24" pos:end="475:26">ctx</name></expr></argument>, <argument pos:start="475:29" pos:end="475:40"><expr pos:start="475:29" pos:end="475:40"><name pos:start="475:29" pos:end="475:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="477:13" pos:end="477:71"><expr pos:start="477:13" pos:end="477:70"><call pos:start="477:13" pos:end="477:70"><name pos:start="477:13" pos:end="477:27">gen_mfc0_load32</name><argument_list pos:start="477:28" pos:end="477:70">(<argument pos:start="477:29" pos:end="477:31"><expr pos:start="477:29" pos:end="477:31"><name pos:start="477:29" pos:end="477:31">arg</name></expr></argument>, <argument pos:start="477:34" pos:end="477:69"><expr pos:start="477:34" pos:end="477:69"><call pos:start="477:34" pos:end="477:69"><name pos:start="477:34" pos:end="477:41">offsetof</name><argument_list pos:start="477:42" pos:end="477:69">(<argument pos:start="477:43" pos:end="477:54"><expr pos:start="477:43" pos:end="477:54"><name pos:start="477:43" pos:end="477:54">CPUMIPSState</name></expr></argument>, <argument pos:start="477:57" pos:end="477:68"><expr pos:start="477:57" pos:end="477:68"><name pos:start="477:57" pos:end="477:68">CP0_SRSConf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:28"><expr pos:start="479:13" pos:end="479:27"><name pos:start="479:13" pos:end="479:14">rn</name> <operator pos:start="479:16" pos:end="479:16">=</operator> <literal type="string" pos:start="479:18" pos:end="479:27">"SRSConf1"</literal></expr>;</expr_stmt>

            <break pos:start="481:13" pos:end="481:18">break;</break>

        <case pos:start="483:9" pos:end="483:15">case <expr pos:start="483:14" pos:end="483:14"><literal type="number" pos:start="483:14" pos:end="483:14">3</literal></expr>:</case>

            <expr_stmt pos:start="485:13" pos:end="485:42"><expr pos:start="485:13" pos:end="485:41"><call pos:start="485:13" pos:end="485:41"><name pos:start="485:13" pos:end="485:22">check_insn</name><argument_list pos:start="485:23" pos:end="485:41">(<argument pos:start="485:24" pos:end="485:26"><expr pos:start="485:24" pos:end="485:26"><name pos:start="485:24" pos:end="485:26">ctx</name></expr></argument>, <argument pos:start="485:29" pos:end="485:40"><expr pos:start="485:29" pos:end="485:40"><name pos:start="485:29" pos:end="485:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="487:13" pos:end="487:71"><expr pos:start="487:13" pos:end="487:70"><call pos:start="487:13" pos:end="487:70"><name pos:start="487:13" pos:end="487:27">gen_mfc0_load32</name><argument_list pos:start="487:28" pos:end="487:70">(<argument pos:start="487:29" pos:end="487:31"><expr pos:start="487:29" pos:end="487:31"><name pos:start="487:29" pos:end="487:31">arg</name></expr></argument>, <argument pos:start="487:34" pos:end="487:69"><expr pos:start="487:34" pos:end="487:69"><call pos:start="487:34" pos:end="487:69"><name pos:start="487:34" pos:end="487:41">offsetof</name><argument_list pos:start="487:42" pos:end="487:69">(<argument pos:start="487:43" pos:end="487:54"><expr pos:start="487:43" pos:end="487:54"><name pos:start="487:43" pos:end="487:54">CPUMIPSState</name></expr></argument>, <argument pos:start="487:57" pos:end="487:68"><expr pos:start="487:57" pos:end="487:68"><name pos:start="487:57" pos:end="487:68">CP0_SRSConf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:28"><expr pos:start="489:13" pos:end="489:27"><name pos:start="489:13" pos:end="489:14">rn</name> <operator pos:start="489:16" pos:end="489:16">=</operator> <literal type="string" pos:start="489:18" pos:end="489:27">"SRSConf2"</literal></expr>;</expr_stmt>

            <break pos:start="491:13" pos:end="491:18">break;</break>

        <case pos:start="493:9" pos:end="493:15">case <expr pos:start="493:14" pos:end="493:14"><literal type="number" pos:start="493:14" pos:end="493:14">4</literal></expr>:</case>

            <expr_stmt pos:start="495:13" pos:end="495:42"><expr pos:start="495:13" pos:end="495:41"><call pos:start="495:13" pos:end="495:41"><name pos:start="495:13" pos:end="495:22">check_insn</name><argument_list pos:start="495:23" pos:end="495:41">(<argument pos:start="495:24" pos:end="495:26"><expr pos:start="495:24" pos:end="495:26"><name pos:start="495:24" pos:end="495:26">ctx</name></expr></argument>, <argument pos:start="495:29" pos:end="495:40"><expr pos:start="495:29" pos:end="495:40"><name pos:start="495:29" pos:end="495:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:71"><expr pos:start="497:13" pos:end="497:70"><call pos:start="497:13" pos:end="497:70"><name pos:start="497:13" pos:end="497:27">gen_mfc0_load32</name><argument_list pos:start="497:28" pos:end="497:70">(<argument pos:start="497:29" pos:end="497:31"><expr pos:start="497:29" pos:end="497:31"><name pos:start="497:29" pos:end="497:31">arg</name></expr></argument>, <argument pos:start="497:34" pos:end="497:69"><expr pos:start="497:34" pos:end="497:69"><call pos:start="497:34" pos:end="497:69"><name pos:start="497:34" pos:end="497:41">offsetof</name><argument_list pos:start="497:42" pos:end="497:69">(<argument pos:start="497:43" pos:end="497:54"><expr pos:start="497:43" pos:end="497:54"><name pos:start="497:43" pos:end="497:54">CPUMIPSState</name></expr></argument>, <argument pos:start="497:57" pos:end="497:68"><expr pos:start="497:57" pos:end="497:68"><name pos:start="497:57" pos:end="497:68">CP0_SRSConf3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:28"><expr pos:start="499:13" pos:end="499:27"><name pos:start="499:13" pos:end="499:14">rn</name> <operator pos:start="499:16" pos:end="499:16">=</operator> <literal type="string" pos:start="499:18" pos:end="499:27">"SRSConf3"</literal></expr>;</expr_stmt>

            <break pos:start="501:13" pos:end="501:18">break;</break>

        <case pos:start="503:9" pos:end="503:15">case <expr pos:start="503:14" pos:end="503:14"><literal type="number" pos:start="503:14" pos:end="503:14">5</literal></expr>:</case>

            <expr_stmt pos:start="505:13" pos:end="505:42"><expr pos:start="505:13" pos:end="505:41"><call pos:start="505:13" pos:end="505:41"><name pos:start="505:13" pos:end="505:22">check_insn</name><argument_list pos:start="505:23" pos:end="505:41">(<argument pos:start="505:24" pos:end="505:26"><expr pos:start="505:24" pos:end="505:26"><name pos:start="505:24" pos:end="505:26">ctx</name></expr></argument>, <argument pos:start="505:29" pos:end="505:40"><expr pos:start="505:29" pos:end="505:40"><name pos:start="505:29" pos:end="505:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="507:13" pos:end="507:71"><expr pos:start="507:13" pos:end="507:70"><call pos:start="507:13" pos:end="507:70"><name pos:start="507:13" pos:end="507:27">gen_mfc0_load32</name><argument_list pos:start="507:28" pos:end="507:70">(<argument pos:start="507:29" pos:end="507:31"><expr pos:start="507:29" pos:end="507:31"><name pos:start="507:29" pos:end="507:31">arg</name></expr></argument>, <argument pos:start="507:34" pos:end="507:69"><expr pos:start="507:34" pos:end="507:69"><call pos:start="507:34" pos:end="507:69"><name pos:start="507:34" pos:end="507:41">offsetof</name><argument_list pos:start="507:42" pos:end="507:69">(<argument pos:start="507:43" pos:end="507:54"><expr pos:start="507:43" pos:end="507:54"><name pos:start="507:43" pos:end="507:54">CPUMIPSState</name></expr></argument>, <argument pos:start="507:57" pos:end="507:68"><expr pos:start="507:57" pos:end="507:68"><name pos:start="507:57" pos:end="507:68">CP0_SRSConf4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:28"><expr pos:start="509:13" pos:end="509:27"><name pos:start="509:13" pos:end="509:14">rn</name> <operator pos:start="509:16" pos:end="509:16">=</operator> <literal type="string" pos:start="509:18" pos:end="509:27">"SRSConf4"</literal></expr>;</expr_stmt>

            <break pos:start="511:13" pos:end="511:18">break;</break>

        <default pos:start="513:9" pos:end="513:16">default:</default>

            <goto pos:start="515:13" pos:end="515:35">goto <name pos:start="515:18" pos:end="515:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="519:9" pos:end="519:14">break;</break>

    <case pos:start="521:5" pos:end="521:11">case <expr pos:start="521:10" pos:end="521:10"><literal type="number" pos:start="521:10" pos:end="521:10">7</literal></expr>:</case>

        <switch pos:start="523:9" pos:end="539:9">switch <condition pos:start="523:16" pos:end="523:20">(<expr pos:start="523:17" pos:end="523:19"><name pos:start="523:17" pos:end="523:19">sel</name></expr>)</condition> <block pos:start="523:22" pos:end="539:9">{<block_content pos:start="525:9" pos:end="537:35">

        <case pos:start="525:9" pos:end="525:15">case <expr pos:start="525:14" pos:end="525:14"><literal type="number" pos:start="525:14" pos:end="525:14">0</literal></expr>:</case>

            <expr_stmt pos:start="527:13" pos:end="527:42"><expr pos:start="527:13" pos:end="527:41"><call pos:start="527:13" pos:end="527:41"><name pos:start="527:13" pos:end="527:22">check_insn</name><argument_list pos:start="527:23" pos:end="527:41">(<argument pos:start="527:24" pos:end="527:26"><expr pos:start="527:24" pos:end="527:26"><name pos:start="527:24" pos:end="527:26">ctx</name></expr></argument>, <argument pos:start="527:29" pos:end="527:40"><expr pos:start="527:29" pos:end="527:40"><name pos:start="527:29" pos:end="527:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="529:13" pos:end="529:69"><expr pos:start="529:13" pos:end="529:68"><call pos:start="529:13" pos:end="529:68"><name pos:start="529:13" pos:end="529:27">gen_mfc0_load32</name><argument_list pos:start="529:28" pos:end="529:68">(<argument pos:start="529:29" pos:end="529:31"><expr pos:start="529:29" pos:end="529:31"><name pos:start="529:29" pos:end="529:31">arg</name></expr></argument>, <argument pos:start="529:34" pos:end="529:67"><expr pos:start="529:34" pos:end="529:67"><call pos:start="529:34" pos:end="529:67"><name pos:start="529:34" pos:end="529:41">offsetof</name><argument_list pos:start="529:42" pos:end="529:67">(<argument pos:start="529:43" pos:end="529:54"><expr pos:start="529:43" pos:end="529:54"><name pos:start="529:43" pos:end="529:54">CPUMIPSState</name></expr></argument>, <argument pos:start="529:57" pos:end="529:66"><expr pos:start="529:57" pos:end="529:66"><name pos:start="529:57" pos:end="529:66">CP0_HWREna</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="531:13" pos:end="531:26"><expr pos:start="531:13" pos:end="531:25"><name pos:start="531:13" pos:end="531:14">rn</name> <operator pos:start="531:16" pos:end="531:16">=</operator> <literal type="string" pos:start="531:18" pos:end="531:25">"HWREna"</literal></expr>;</expr_stmt>

            <break pos:start="533:13" pos:end="533:18">break;</break>

        <default pos:start="535:9" pos:end="535:16">default:</default>

            <goto pos:start="537:13" pos:end="537:35">goto <name pos:start="537:18" pos:end="537:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="541:9" pos:end="541:14">break;</break>

    <case pos:start="543:5" pos:end="543:11">case <expr pos:start="543:10" pos:end="543:10"><literal type="number" pos:start="543:10" pos:end="543:10">8</literal></expr>:</case>

        <switch pos:start="545:9" pos:end="581:9">switch <condition pos:start="545:16" pos:end="545:20">(<expr pos:start="545:17" pos:end="545:19"><name pos:start="545:17" pos:end="545:19">sel</name></expr>)</condition> <block pos:start="545:22" pos:end="581:9">{<block_content pos:start="547:9" pos:end="579:35">

        <case pos:start="547:9" pos:end="547:15">case <expr pos:start="547:14" pos:end="547:14"><literal type="number" pos:start="547:14" pos:end="547:14">0</literal></expr>:</case>

            <expr_stmt pos:start="549:13" pos:end="549:78"><expr pos:start="549:13" pos:end="549:77"><call pos:start="549:13" pos:end="549:77"><name pos:start="549:13" pos:end="549:25">tcg_gen_ld_tl</name><argument_list pos:start="549:26" pos:end="549:77">(<argument pos:start="549:27" pos:end="549:29"><expr pos:start="549:27" pos:end="549:29"><name pos:start="549:27" pos:end="549:29">arg</name></expr></argument>, <argument pos:start="549:32" pos:end="549:38"><expr pos:start="549:32" pos:end="549:38"><name pos:start="549:32" pos:end="549:38">cpu_env</name></expr></argument>, <argument pos:start="549:41" pos:end="549:76"><expr pos:start="549:41" pos:end="549:76"><call pos:start="549:41" pos:end="549:76"><name pos:start="549:41" pos:end="549:48">offsetof</name><argument_list pos:start="549:49" pos:end="549:76">(<argument pos:start="549:50" pos:end="549:61"><expr pos:start="549:50" pos:end="549:61"><name pos:start="549:50" pos:end="549:61">CPUMIPSState</name></expr></argument>, <argument pos:start="549:64" pos:end="549:75"><expr pos:start="549:64" pos:end="549:75"><name pos:start="549:64" pos:end="549:75">CP0_BadVAddr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:40"><expr pos:start="551:13" pos:end="551:39"><call pos:start="551:13" pos:end="551:39"><name pos:start="551:13" pos:end="551:29">tcg_gen_ext32s_tl</name><argument_list pos:start="551:30" pos:end="551:39">(<argument pos:start="551:31" pos:end="551:33"><expr pos:start="551:31" pos:end="551:33"><name pos:start="551:31" pos:end="551:33">arg</name></expr></argument>, <argument pos:start="551:36" pos:end="551:38"><expr pos:start="551:36" pos:end="551:38"><name pos:start="551:36" pos:end="551:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:28"><expr pos:start="553:13" pos:end="553:27"><name pos:start="553:13" pos:end="553:14">rn</name> <operator pos:start="553:16" pos:end="553:16">=</operator> <literal type="string" pos:start="553:18" pos:end="553:27">"BadVAddr"</literal></expr>;</expr_stmt>

            <break pos:start="555:13" pos:end="555:18">break;</break>

        <case pos:start="557:9" pos:end="557:15">case <expr pos:start="557:14" pos:end="557:14"><literal type="number" pos:start="557:14" pos:end="557:14">1</literal></expr>:</case>

            <expr_stmt pos:start="559:13" pos:end="559:31"><expr pos:start="559:13" pos:end="559:30"><call pos:start="559:13" pos:end="559:30"><name pos:start="559:13" pos:end="559:21">CP0_CHECK</name><argument_list pos:start="559:22" pos:end="559:30">(<argument pos:start="559:23" pos:end="559:29"><expr pos:start="559:23" pos:end="559:29"><name pos:start="559:23" pos:end="559:29"><name pos:start="559:23" pos:end="559:25">ctx</name><operator pos:start="559:26" pos:end="559:27">-&gt;</operator><name pos:start="559:28" pos:end="559:29">bi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:71"><expr pos:start="561:13" pos:end="561:70"><call pos:start="561:13" pos:end="561:70"><name pos:start="561:13" pos:end="561:27">gen_mfc0_load32</name><argument_list pos:start="561:28" pos:end="561:70">(<argument pos:start="561:29" pos:end="561:31"><expr pos:start="561:29" pos:end="561:31"><name pos:start="561:29" pos:end="561:31">arg</name></expr></argument>, <argument pos:start="561:34" pos:end="561:69"><expr pos:start="561:34" pos:end="561:69"><call pos:start="561:34" pos:end="561:69"><name pos:start="561:34" pos:end="561:41">offsetof</name><argument_list pos:start="561:42" pos:end="561:69">(<argument pos:start="561:43" pos:end="561:54"><expr pos:start="561:43" pos:end="561:54"><name pos:start="561:43" pos:end="561:54">CPUMIPSState</name></expr></argument>, <argument pos:start="561:57" pos:end="561:68"><expr pos:start="561:57" pos:end="561:68"><name pos:start="561:57" pos:end="561:68">CP0_BadInstr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:28"><expr pos:start="563:13" pos:end="563:27"><name pos:start="563:13" pos:end="563:14">rn</name> <operator pos:start="563:16" pos:end="563:16">=</operator> <literal type="string" pos:start="563:18" pos:end="563:27">"BadInstr"</literal></expr>;</expr_stmt>

            <break pos:start="565:13" pos:end="565:18">break;</break>

        <case pos:start="567:9" pos:end="567:15">case <expr pos:start="567:14" pos:end="567:14"><literal type="number" pos:start="567:14" pos:end="567:14">2</literal></expr>:</case>

            <expr_stmt pos:start="569:13" pos:end="569:31"><expr pos:start="569:13" pos:end="569:30"><call pos:start="569:13" pos:end="569:30"><name pos:start="569:13" pos:end="569:21">CP0_CHECK</name><argument_list pos:start="569:22" pos:end="569:30">(<argument pos:start="569:23" pos:end="569:29"><expr pos:start="569:23" pos:end="569:29"><name pos:start="569:23" pos:end="569:29"><name pos:start="569:23" pos:end="569:25">ctx</name><operator pos:start="569:26" pos:end="569:27">-&gt;</operator><name pos:start="569:28" pos:end="569:29">bp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="571:13" pos:end="571:72"><expr pos:start="571:13" pos:end="571:71"><call pos:start="571:13" pos:end="571:71"><name pos:start="571:13" pos:end="571:27">gen_mfc0_load32</name><argument_list pos:start="571:28" pos:end="571:71">(<argument pos:start="571:29" pos:end="571:31"><expr pos:start="571:29" pos:end="571:31"><name pos:start="571:29" pos:end="571:31">arg</name></expr></argument>, <argument pos:start="571:34" pos:end="571:70"><expr pos:start="571:34" pos:end="571:70"><call pos:start="571:34" pos:end="571:70"><name pos:start="571:34" pos:end="571:41">offsetof</name><argument_list pos:start="571:42" pos:end="571:70">(<argument pos:start="571:43" pos:end="571:54"><expr pos:start="571:43" pos:end="571:54"><name pos:start="571:43" pos:end="571:54">CPUMIPSState</name></expr></argument>, <argument pos:start="571:57" pos:end="571:69"><expr pos:start="571:57" pos:end="571:69"><name pos:start="571:57" pos:end="571:69">CP0_BadInstrP</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="573:13" pos:end="573:29"><expr pos:start="573:13" pos:end="573:28"><name pos:start="573:13" pos:end="573:14">rn</name> <operator pos:start="573:16" pos:end="573:16">=</operator> <literal type="string" pos:start="573:18" pos:end="573:28">"BadInstrP"</literal></expr>;</expr_stmt>

            <break pos:start="575:13" pos:end="575:18">break;</break>

        <default pos:start="577:9" pos:end="577:16">default:</default>

            <goto pos:start="579:13" pos:end="579:35">goto <name pos:start="579:18" pos:end="579:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="583:9" pos:end="583:14">break;</break>

    <case pos:start="585:5" pos:end="585:11">case <expr pos:start="585:10" pos:end="585:10"><literal type="number" pos:start="585:10" pos:end="585:10">9</literal></expr>:</case>

        <switch pos:start="587:9" pos:end="627:9">switch <condition pos:start="587:16" pos:end="587:20">(<expr pos:start="587:17" pos:end="587:19"><name pos:start="587:17" pos:end="587:19">sel</name></expr>)</condition> <block pos:start="587:22" pos:end="627:9">{<block_content pos:start="589:9" pos:end="625:35">

        <case pos:start="589:9" pos:end="589:15">case <expr pos:start="589:14" pos:end="589:14"><literal type="number" pos:start="589:14" pos:end="589:14">0</literal></expr>:</case>

            <comment type="block" pos:start="591:13" pos:end="591:68">/* Mark as an IO operation because we read the time.  */</comment>

            <if_stmt pos:start="593:13" pos:end="597:13"><if pos:start="593:13" pos:end="597:13">if <condition pos:start="593:16" pos:end="593:48">(<expr pos:start="593:17" pos:end="593:47"><name pos:start="593:17" pos:end="593:31"><name pos:start="593:17" pos:end="593:19">ctx</name><operator pos:start="593:20" pos:end="593:21">-&gt;</operator><name pos:start="593:22" pos:end="593:23">tb</name><operator pos:start="593:24" pos:end="593:25">-&gt;</operator><name pos:start="593:26" pos:end="593:31">cflags</name></name> <operator pos:start="593:33" pos:end="593:33">&amp;</operator> <name pos:start="593:35" pos:end="593:47">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="593:50" pos:end="597:13">{<block_content pos:start="595:17" pos:end="595:31">

                <expr_stmt pos:start="595:17" pos:end="595:31"><expr pos:start="595:17" pos:end="595:30"><call pos:start="595:17" pos:end="595:30"><name pos:start="595:17" pos:end="595:28">gen_io_start</name><argument_list pos:start="595:29" pos:end="595:30">()</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="599:13" pos:end="599:48"><expr pos:start="599:13" pos:end="599:47"><call pos:start="599:13" pos:end="599:47"><name pos:start="599:13" pos:end="599:33">gen_helper_mfc0_count</name><argument_list pos:start="599:34" pos:end="599:47">(<argument pos:start="599:35" pos:end="599:37"><expr pos:start="599:35" pos:end="599:37"><name pos:start="599:35" pos:end="599:37">arg</name></expr></argument>, <argument pos:start="599:40" pos:end="599:46"><expr pos:start="599:40" pos:end="599:46"><name pos:start="599:40" pos:end="599:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="601:13" pos:end="605:13"><if pos:start="601:13" pos:end="605:13">if <condition pos:start="601:16" pos:end="601:48">(<expr pos:start="601:17" pos:end="601:47"><name pos:start="601:17" pos:end="601:31"><name pos:start="601:17" pos:end="601:19">ctx</name><operator pos:start="601:20" pos:end="601:21">-&gt;</operator><name pos:start="601:22" pos:end="601:23">tb</name><operator pos:start="601:24" pos:end="601:25">-&gt;</operator><name pos:start="601:26" pos:end="601:31">cflags</name></name> <operator pos:start="601:33" pos:end="601:33">&amp;</operator> <name pos:start="601:35" pos:end="601:47">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="601:50" pos:end="605:13">{<block_content pos:start="603:17" pos:end="603:29">

                <expr_stmt pos:start="603:17" pos:end="603:29"><expr pos:start="603:17" pos:end="603:28"><call pos:start="603:17" pos:end="603:28"><name pos:start="603:17" pos:end="603:26">gen_io_end</name><argument_list pos:start="603:27" pos:end="603:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="607:13" pos:end="611:62">/* Break the TB to be able to take timer interrupts immediately

               after reading count. BS_STOP isn't sufficient, we need to ensure

               we break completely out of translated code.  */</comment>

            <expr_stmt pos:start="613:13" pos:end="613:37"><expr pos:start="613:13" pos:end="613:36"><call pos:start="613:13" pos:end="613:36"><name pos:start="613:13" pos:end="613:23">gen_save_pc</name><argument_list pos:start="613:24" pos:end="613:36">(<argument pos:start="613:25" pos:end="613:35"><expr pos:start="613:25" pos:end="613:35"><name pos:start="613:25" pos:end="613:31"><name pos:start="613:25" pos:end="613:27">ctx</name><operator pos:start="613:28" pos:end="613:29">-&gt;</operator><name pos:start="613:30" pos:end="613:31">pc</name></name> <operator pos:start="613:33" pos:end="613:33">+</operator> <literal type="number" pos:start="613:35" pos:end="613:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:34"><expr pos:start="615:13" pos:end="615:33"><name pos:start="615:13" pos:end="615:23"><name pos:start="615:13" pos:end="615:15">ctx</name><operator pos:start="615:16" pos:end="615:17">-&gt;</operator><name pos:start="615:18" pos:end="615:23">bstate</name></name> <operator pos:start="615:25" pos:end="615:25">=</operator> <name pos:start="615:27" pos:end="615:33">BS_EXCP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="617:13" pos:end="617:25"><expr pos:start="617:13" pos:end="617:24"><name pos:start="617:13" pos:end="617:14">rn</name> <operator pos:start="617:16" pos:end="617:16">=</operator> <literal type="string" pos:start="617:18" pos:end="617:24">"Count"</literal></expr>;</expr_stmt>

            <break pos:start="619:13" pos:end="619:18">break;</break>

        <comment type="block" pos:start="621:9" pos:end="621:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="623:9" pos:end="623:16">default:</default>

            <goto pos:start="625:13" pos:end="625:35">goto <name pos:start="625:18" pos:end="625:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="629:9" pos:end="629:14">break;</break>

    <case pos:start="631:5" pos:end="631:12">case <expr pos:start="631:10" pos:end="631:11"><literal type="number" pos:start="631:10" pos:end="631:11">10</literal></expr>:</case>

        <switch pos:start="633:9" pos:end="649:9">switch <condition pos:start="633:16" pos:end="633:20">(<expr pos:start="633:17" pos:end="633:19"><name pos:start="633:17" pos:end="633:19">sel</name></expr>)</condition> <block pos:start="633:22" pos:end="649:9">{<block_content pos:start="635:9" pos:end="647:35">

        <case pos:start="635:9" pos:end="635:15">case <expr pos:start="635:14" pos:end="635:14"><literal type="number" pos:start="635:14" pos:end="635:14">0</literal></expr>:</case>

            <expr_stmt pos:start="637:13" pos:end="637:77"><expr pos:start="637:13" pos:end="637:76"><call pos:start="637:13" pos:end="637:76"><name pos:start="637:13" pos:end="637:25">tcg_gen_ld_tl</name><argument_list pos:start="637:26" pos:end="637:76">(<argument pos:start="637:27" pos:end="637:29"><expr pos:start="637:27" pos:end="637:29"><name pos:start="637:27" pos:end="637:29">arg</name></expr></argument>, <argument pos:start="637:32" pos:end="637:38"><expr pos:start="637:32" pos:end="637:38"><name pos:start="637:32" pos:end="637:38">cpu_env</name></expr></argument>, <argument pos:start="637:41" pos:end="637:75"><expr pos:start="637:41" pos:end="637:75"><call pos:start="637:41" pos:end="637:75"><name pos:start="637:41" pos:end="637:48">offsetof</name><argument_list pos:start="637:49" pos:end="637:75">(<argument pos:start="637:50" pos:end="637:61"><expr pos:start="637:50" pos:end="637:61"><name pos:start="637:50" pos:end="637:61">CPUMIPSState</name></expr></argument>, <argument pos:start="637:64" pos:end="637:74"><expr pos:start="637:64" pos:end="637:74"><name pos:start="637:64" pos:end="637:74">CP0_EntryHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:40"><expr pos:start="639:13" pos:end="639:39"><call pos:start="639:13" pos:end="639:39"><name pos:start="639:13" pos:end="639:29">tcg_gen_ext32s_tl</name><argument_list pos:start="639:30" pos:end="639:39">(<argument pos:start="639:31" pos:end="639:33"><expr pos:start="639:31" pos:end="639:33"><name pos:start="639:31" pos:end="639:33">arg</name></expr></argument>, <argument pos:start="639:36" pos:end="639:38"><expr pos:start="639:36" pos:end="639:38"><name pos:start="639:36" pos:end="639:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="641:13" pos:end="641:27"><expr pos:start="641:13" pos:end="641:26"><name pos:start="641:13" pos:end="641:14">rn</name> <operator pos:start="641:16" pos:end="641:16">=</operator> <literal type="string" pos:start="641:18" pos:end="641:26">"EntryHi"</literal></expr>;</expr_stmt>

            <break pos:start="643:13" pos:end="643:18">break;</break>

        <default pos:start="645:9" pos:end="645:16">default:</default>

            <goto pos:start="647:13" pos:end="647:35">goto <name pos:start="647:18" pos:end="647:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="651:9" pos:end="651:14">break;</break>

    <case pos:start="653:5" pos:end="653:12">case <expr pos:start="653:10" pos:end="653:11"><literal type="number" pos:start="653:10" pos:end="653:11">11</literal></expr>:</case>

        <switch pos:start="655:9" pos:end="671:9">switch <condition pos:start="655:16" pos:end="655:20">(<expr pos:start="655:17" pos:end="655:19"><name pos:start="655:17" pos:end="655:19">sel</name></expr>)</condition> <block pos:start="655:22" pos:end="671:9">{<block_content pos:start="657:9" pos:end="669:35">

        <case pos:start="657:9" pos:end="657:15">case <expr pos:start="657:14" pos:end="657:14"><literal type="number" pos:start="657:14" pos:end="657:14">0</literal></expr>:</case>

            <expr_stmt pos:start="659:13" pos:end="659:70"><expr pos:start="659:13" pos:end="659:69"><call pos:start="659:13" pos:end="659:69"><name pos:start="659:13" pos:end="659:27">gen_mfc0_load32</name><argument_list pos:start="659:28" pos:end="659:69">(<argument pos:start="659:29" pos:end="659:31"><expr pos:start="659:29" pos:end="659:31"><name pos:start="659:29" pos:end="659:31">arg</name></expr></argument>, <argument pos:start="659:34" pos:end="659:68"><expr pos:start="659:34" pos:end="659:68"><call pos:start="659:34" pos:end="659:68"><name pos:start="659:34" pos:end="659:41">offsetof</name><argument_list pos:start="659:42" pos:end="659:68">(<argument pos:start="659:43" pos:end="659:54"><expr pos:start="659:43" pos:end="659:54"><name pos:start="659:43" pos:end="659:54">CPUMIPSState</name></expr></argument>, <argument pos:start="659:57" pos:end="659:67"><expr pos:start="659:57" pos:end="659:67"><name pos:start="659:57" pos:end="659:67">CP0_Compare</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="661:13" pos:end="661:27"><expr pos:start="661:13" pos:end="661:26"><name pos:start="661:13" pos:end="661:14">rn</name> <operator pos:start="661:16" pos:end="661:16">=</operator> <literal type="string" pos:start="661:18" pos:end="661:26">"Compare"</literal></expr>;</expr_stmt>

            <break pos:start="663:13" pos:end="663:18">break;</break>

        <comment type="block" pos:start="665:9" pos:end="665:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="667:9" pos:end="667:16">default:</default>

            <goto pos:start="669:13" pos:end="669:35">goto <name pos:start="669:18" pos:end="669:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="673:9" pos:end="673:14">break;</break>

    <case pos:start="675:5" pos:end="675:12">case <expr pos:start="675:10" pos:end="675:11"><literal type="number" pos:start="675:10" pos:end="675:11">12</literal></expr>:</case>

        <switch pos:start="677:9" pos:end="721:8">switch <condition pos:start="677:16" pos:end="677:20">(<expr pos:start="677:17" pos:end="677:19"><name pos:start="677:17" pos:end="677:19">sel</name></expr>)</condition> <block pos:start="677:22" pos:end="721:8">{<block_content pos:start="679:9" pos:end="719:35">

        <case pos:start="679:9" pos:end="679:15">case <expr pos:start="679:14" pos:end="679:14"><literal type="number" pos:start="679:14" pos:end="679:14">0</literal></expr>:</case>

            <expr_stmt pos:start="681:13" pos:end="681:69"><expr pos:start="681:13" pos:end="681:68"><call pos:start="681:13" pos:end="681:68"><name pos:start="681:13" pos:end="681:27">gen_mfc0_load32</name><argument_list pos:start="681:28" pos:end="681:68">(<argument pos:start="681:29" pos:end="681:31"><expr pos:start="681:29" pos:end="681:31"><name pos:start="681:29" pos:end="681:31">arg</name></expr></argument>, <argument pos:start="681:34" pos:end="681:67"><expr pos:start="681:34" pos:end="681:67"><call pos:start="681:34" pos:end="681:67"><name pos:start="681:34" pos:end="681:41">offsetof</name><argument_list pos:start="681:42" pos:end="681:67">(<argument pos:start="681:43" pos:end="681:54"><expr pos:start="681:43" pos:end="681:54"><name pos:start="681:43" pos:end="681:54">CPUMIPSState</name></expr></argument>, <argument pos:start="681:57" pos:end="681:66"><expr pos:start="681:57" pos:end="681:66"><name pos:start="681:57" pos:end="681:66">CP0_Status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="683:13" pos:end="683:26"><expr pos:start="683:13" pos:end="683:25"><name pos:start="683:13" pos:end="683:14">rn</name> <operator pos:start="683:16" pos:end="683:16">=</operator> <literal type="string" pos:start="683:18" pos:end="683:25">"Status"</literal></expr>;</expr_stmt>

            <break pos:start="685:13" pos:end="685:18">break;</break>

        <case pos:start="687:9" pos:end="687:15">case <expr pos:start="687:14" pos:end="687:14"><literal type="number" pos:start="687:14" pos:end="687:14">1</literal></expr>:</case>

            <expr_stmt pos:start="689:13" pos:end="689:42"><expr pos:start="689:13" pos:end="689:41"><call pos:start="689:13" pos:end="689:41"><name pos:start="689:13" pos:end="689:22">check_insn</name><argument_list pos:start="689:23" pos:end="689:41">(<argument pos:start="689:24" pos:end="689:26"><expr pos:start="689:24" pos:end="689:26"><name pos:start="689:24" pos:end="689:26">ctx</name></expr></argument>, <argument pos:start="689:29" pos:end="689:40"><expr pos:start="689:29" pos:end="689:40"><name pos:start="689:29" pos:end="689:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:69"><expr pos:start="691:13" pos:end="691:68"><call pos:start="691:13" pos:end="691:68"><name pos:start="691:13" pos:end="691:27">gen_mfc0_load32</name><argument_list pos:start="691:28" pos:end="691:68">(<argument pos:start="691:29" pos:end="691:31"><expr pos:start="691:29" pos:end="691:31"><name pos:start="691:29" pos:end="691:31">arg</name></expr></argument>, <argument pos:start="691:34" pos:end="691:67"><expr pos:start="691:34" pos:end="691:67"><call pos:start="691:34" pos:end="691:67"><name pos:start="691:34" pos:end="691:41">offsetof</name><argument_list pos:start="691:42" pos:end="691:67">(<argument pos:start="691:43" pos:end="691:54"><expr pos:start="691:43" pos:end="691:54"><name pos:start="691:43" pos:end="691:54">CPUMIPSState</name></expr></argument>, <argument pos:start="691:57" pos:end="691:66"><expr pos:start="691:57" pos:end="691:66"><name pos:start="691:57" pos:end="691:66">CP0_IntCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="693:13" pos:end="693:26"><expr pos:start="693:13" pos:end="693:25"><name pos:start="693:13" pos:end="693:14">rn</name> <operator pos:start="693:16" pos:end="693:16">=</operator> <literal type="string" pos:start="693:18" pos:end="693:25">"IntCtl"</literal></expr>;</expr_stmt>

            <break pos:start="695:13" pos:end="695:18">break;</break>

        <case pos:start="697:9" pos:end="697:15">case <expr pos:start="697:14" pos:end="697:14"><literal type="number" pos:start="697:14" pos:end="697:14">2</literal></expr>:</case>

            <expr_stmt pos:start="699:13" pos:end="699:42"><expr pos:start="699:13" pos:end="699:41"><call pos:start="699:13" pos:end="699:41"><name pos:start="699:13" pos:end="699:22">check_insn</name><argument_list pos:start="699:23" pos:end="699:41">(<argument pos:start="699:24" pos:end="699:26"><expr pos:start="699:24" pos:end="699:26"><name pos:start="699:24" pos:end="699:26">ctx</name></expr></argument>, <argument pos:start="699:29" pos:end="699:40"><expr pos:start="699:29" pos:end="699:40"><name pos:start="699:29" pos:end="699:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="701:13" pos:end="701:69"><expr pos:start="701:13" pos:end="701:68"><call pos:start="701:13" pos:end="701:68"><name pos:start="701:13" pos:end="701:27">gen_mfc0_load32</name><argument_list pos:start="701:28" pos:end="701:68">(<argument pos:start="701:29" pos:end="701:31"><expr pos:start="701:29" pos:end="701:31"><name pos:start="701:29" pos:end="701:31">arg</name></expr></argument>, <argument pos:start="701:34" pos:end="701:67"><expr pos:start="701:34" pos:end="701:67"><call pos:start="701:34" pos:end="701:67"><name pos:start="701:34" pos:end="701:41">offsetof</name><argument_list pos:start="701:42" pos:end="701:67">(<argument pos:start="701:43" pos:end="701:54"><expr pos:start="701:43" pos:end="701:54"><name pos:start="701:43" pos:end="701:54">CPUMIPSState</name></expr></argument>, <argument pos:start="701:57" pos:end="701:66"><expr pos:start="701:57" pos:end="701:66"><name pos:start="701:57" pos:end="701:66">CP0_SRSCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="703:13" pos:end="703:26"><expr pos:start="703:13" pos:end="703:25"><name pos:start="703:13" pos:end="703:14">rn</name> <operator pos:start="703:16" pos:end="703:16">=</operator> <literal type="string" pos:start="703:18" pos:end="703:25">"SRSCtl"</literal></expr>;</expr_stmt>

            <break pos:start="705:13" pos:end="705:18">break;</break>

        <case pos:start="707:9" pos:end="707:15">case <expr pos:start="707:14" pos:end="707:14"><literal type="number" pos:start="707:14" pos:end="707:14">3</literal></expr>:</case>

            <expr_stmt pos:start="709:13" pos:end="709:42"><expr pos:start="709:13" pos:end="709:41"><call pos:start="709:13" pos:end="709:41"><name pos:start="709:13" pos:end="709:22">check_insn</name><argument_list pos:start="709:23" pos:end="709:41">(<argument pos:start="709:24" pos:end="709:26"><expr pos:start="709:24" pos:end="709:26"><name pos:start="709:24" pos:end="709:26">ctx</name></expr></argument>, <argument pos:start="709:29" pos:end="709:40"><expr pos:start="709:29" pos:end="709:40"><name pos:start="709:29" pos:end="709:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="711:13" pos:end="711:69"><expr pos:start="711:13" pos:end="711:68"><call pos:start="711:13" pos:end="711:68"><name pos:start="711:13" pos:end="711:27">gen_mfc0_load32</name><argument_list pos:start="711:28" pos:end="711:68">(<argument pos:start="711:29" pos:end="711:31"><expr pos:start="711:29" pos:end="711:31"><name pos:start="711:29" pos:end="711:31">arg</name></expr></argument>, <argument pos:start="711:34" pos:end="711:67"><expr pos:start="711:34" pos:end="711:67"><call pos:start="711:34" pos:end="711:67"><name pos:start="711:34" pos:end="711:41">offsetof</name><argument_list pos:start="711:42" pos:end="711:67">(<argument pos:start="711:43" pos:end="711:54"><expr pos:start="711:43" pos:end="711:54"><name pos:start="711:43" pos:end="711:54">CPUMIPSState</name></expr></argument>, <argument pos:start="711:57" pos:end="711:66"><expr pos:start="711:57" pos:end="711:66"><name pos:start="711:57" pos:end="711:66">CP0_SRSMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="713:13" pos:end="713:26"><expr pos:start="713:13" pos:end="713:25"><name pos:start="713:13" pos:end="713:14">rn</name> <operator pos:start="713:16" pos:end="713:16">=</operator> <literal type="string" pos:start="713:18" pos:end="713:25">"SRSMap"</literal></expr>;</expr_stmt>

            <break pos:start="715:13" pos:end="715:18">break;</break>

        <default pos:start="717:9" pos:end="717:16">default:</default>

            <goto pos:start="719:13" pos:end="719:35">goto <name pos:start="719:18" pos:end="719:34">cp0_unimplemented</name>;</goto>

       </block_content>}</block></switch>

        <break pos:start="723:9" pos:end="723:14">break;</break>

    <case pos:start="725:5" pos:end="725:12">case <expr pos:start="725:10" pos:end="725:11"><literal type="number" pos:start="725:10" pos:end="725:11">13</literal></expr>:</case>

        <switch pos:start="727:9" pos:end="741:8">switch <condition pos:start="727:16" pos:end="727:20">(<expr pos:start="727:17" pos:end="727:19"><name pos:start="727:17" pos:end="727:19">sel</name></expr>)</condition> <block pos:start="727:22" pos:end="741:8">{<block_content pos:start="729:9" pos:end="739:35">

        <case pos:start="729:9" pos:end="729:15">case <expr pos:start="729:14" pos:end="729:14"><literal type="number" pos:start="729:14" pos:end="729:14">0</literal></expr>:</case>

            <expr_stmt pos:start="731:13" pos:end="731:68"><expr pos:start="731:13" pos:end="731:67"><call pos:start="731:13" pos:end="731:67"><name pos:start="731:13" pos:end="731:27">gen_mfc0_load32</name><argument_list pos:start="731:28" pos:end="731:67">(<argument pos:start="731:29" pos:end="731:31"><expr pos:start="731:29" pos:end="731:31"><name pos:start="731:29" pos:end="731:31">arg</name></expr></argument>, <argument pos:start="731:34" pos:end="731:66"><expr pos:start="731:34" pos:end="731:66"><call pos:start="731:34" pos:end="731:66"><name pos:start="731:34" pos:end="731:41">offsetof</name><argument_list pos:start="731:42" pos:end="731:66">(<argument pos:start="731:43" pos:end="731:54"><expr pos:start="731:43" pos:end="731:54"><name pos:start="731:43" pos:end="731:54">CPUMIPSState</name></expr></argument>, <argument pos:start="731:57" pos:end="731:65"><expr pos:start="731:57" pos:end="731:65"><name pos:start="731:57" pos:end="731:65">CP0_Cause</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="733:13" pos:end="733:25"><expr pos:start="733:13" pos:end="733:24"><name pos:start="733:13" pos:end="733:14">rn</name> <operator pos:start="733:16" pos:end="733:16">=</operator> <literal type="string" pos:start="733:18" pos:end="733:24">"Cause"</literal></expr>;</expr_stmt>

            <break pos:start="735:13" pos:end="735:18">break;</break>

        <default pos:start="737:9" pos:end="737:16">default:</default>

            <goto pos:start="739:13" pos:end="739:35">goto <name pos:start="739:18" pos:end="739:34">cp0_unimplemented</name>;</goto>

       </block_content>}</block></switch>

        <break pos:start="743:9" pos:end="743:14">break;</break>

    <case pos:start="745:5" pos:end="745:12">case <expr pos:start="745:10" pos:end="745:11"><literal type="number" pos:start="745:10" pos:end="745:11">14</literal></expr>:</case>

        <switch pos:start="747:9" pos:end="763:9">switch <condition pos:start="747:16" pos:end="747:20">(<expr pos:start="747:17" pos:end="747:19"><name pos:start="747:17" pos:end="747:19">sel</name></expr>)</condition> <block pos:start="747:22" pos:end="763:9">{<block_content pos:start="749:9" pos:end="761:35">

        <case pos:start="749:9" pos:end="749:15">case <expr pos:start="749:14" pos:end="749:14"><literal type="number" pos:start="749:14" pos:end="749:14">0</literal></expr>:</case>

            <expr_stmt pos:start="751:13" pos:end="751:73"><expr pos:start="751:13" pos:end="751:72"><call pos:start="751:13" pos:end="751:72"><name pos:start="751:13" pos:end="751:25">tcg_gen_ld_tl</name><argument_list pos:start="751:26" pos:end="751:72">(<argument pos:start="751:27" pos:end="751:29"><expr pos:start="751:27" pos:end="751:29"><name pos:start="751:27" pos:end="751:29">arg</name></expr></argument>, <argument pos:start="751:32" pos:end="751:38"><expr pos:start="751:32" pos:end="751:38"><name pos:start="751:32" pos:end="751:38">cpu_env</name></expr></argument>, <argument pos:start="751:41" pos:end="751:71"><expr pos:start="751:41" pos:end="751:71"><call pos:start="751:41" pos:end="751:71"><name pos:start="751:41" pos:end="751:48">offsetof</name><argument_list pos:start="751:49" pos:end="751:71">(<argument pos:start="751:50" pos:end="751:61"><expr pos:start="751:50" pos:end="751:61"><name pos:start="751:50" pos:end="751:61">CPUMIPSState</name></expr></argument>, <argument pos:start="751:64" pos:end="751:70"><expr pos:start="751:64" pos:end="751:70"><name pos:start="751:64" pos:end="751:70">CP0_EPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="753:13" pos:end="753:40"><expr pos:start="753:13" pos:end="753:39"><call pos:start="753:13" pos:end="753:39"><name pos:start="753:13" pos:end="753:29">tcg_gen_ext32s_tl</name><argument_list pos:start="753:30" pos:end="753:39">(<argument pos:start="753:31" pos:end="753:33"><expr pos:start="753:31" pos:end="753:33"><name pos:start="753:31" pos:end="753:33">arg</name></expr></argument>, <argument pos:start="753:36" pos:end="753:38"><expr pos:start="753:36" pos:end="753:38"><name pos:start="753:36" pos:end="753:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="755:13" pos:end="755:23"><expr pos:start="755:13" pos:end="755:22"><name pos:start="755:13" pos:end="755:14">rn</name> <operator pos:start="755:16" pos:end="755:16">=</operator> <literal type="string" pos:start="755:18" pos:end="755:22">"EPC"</literal></expr>;</expr_stmt>

            <break pos:start="757:13" pos:end="757:18">break;</break>

        <default pos:start="759:9" pos:end="759:16">default:</default>

            <goto pos:start="761:13" pos:end="761:35">goto <name pos:start="761:18" pos:end="761:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="765:9" pos:end="765:14">break;</break>

    <case pos:start="767:5" pos:end="767:12">case <expr pos:start="767:10" pos:end="767:11"><literal type="number" pos:start="767:10" pos:end="767:11">15</literal></expr>:</case>

        <switch pos:start="769:9" pos:end="809:8">switch <condition pos:start="769:16" pos:end="769:20">(<expr pos:start="769:17" pos:end="769:19"><name pos:start="769:17" pos:end="769:19">sel</name></expr>)</condition> <block pos:start="769:22" pos:end="809:8">{<block_content pos:start="771:9" pos:end="807:35">

        <case pos:start="771:9" pos:end="771:15">case <expr pos:start="771:14" pos:end="771:14"><literal type="number" pos:start="771:14" pos:end="771:14">0</literal></expr>:</case>

            <expr_stmt pos:start="773:13" pos:end="773:67"><expr pos:start="773:13" pos:end="773:66"><call pos:start="773:13" pos:end="773:66"><name pos:start="773:13" pos:end="773:27">gen_mfc0_load32</name><argument_list pos:start="773:28" pos:end="773:66">(<argument pos:start="773:29" pos:end="773:31"><expr pos:start="773:29" pos:end="773:31"><name pos:start="773:29" pos:end="773:31">arg</name></expr></argument>, <argument pos:start="773:34" pos:end="773:65"><expr pos:start="773:34" pos:end="773:65"><call pos:start="773:34" pos:end="773:65"><name pos:start="773:34" pos:end="773:41">offsetof</name><argument_list pos:start="773:42" pos:end="773:65">(<argument pos:start="773:43" pos:end="773:54"><expr pos:start="773:43" pos:end="773:54"><name pos:start="773:43" pos:end="773:54">CPUMIPSState</name></expr></argument>, <argument pos:start="773:57" pos:end="773:64"><expr pos:start="773:57" pos:end="773:64"><name pos:start="773:57" pos:end="773:64">CP0_PRid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="775:13" pos:end="775:24"><expr pos:start="775:13" pos:end="775:23"><name pos:start="775:13" pos:end="775:14">rn</name> <operator pos:start="775:16" pos:end="775:16">=</operator> <literal type="string" pos:start="775:18" pos:end="775:23">"PRid"</literal></expr>;</expr_stmt>

            <break pos:start="777:13" pos:end="777:18">break;</break>

        <case pos:start="779:9" pos:end="779:15">case <expr pos:start="779:14" pos:end="779:14"><literal type="number" pos:start="779:14" pos:end="779:14">1</literal></expr>:</case>

            <expr_stmt pos:start="781:13" pos:end="781:42"><expr pos:start="781:13" pos:end="781:41"><call pos:start="781:13" pos:end="781:41"><name pos:start="781:13" pos:end="781:22">check_insn</name><argument_list pos:start="781:23" pos:end="781:41">(<argument pos:start="781:24" pos:end="781:26"><expr pos:start="781:24" pos:end="781:26"><name pos:start="781:24" pos:end="781:26">ctx</name></expr></argument>, <argument pos:start="781:29" pos:end="781:40"><expr pos:start="781:29" pos:end="781:40"><name pos:start="781:29" pos:end="781:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="783:13" pos:end="783:75"><expr pos:start="783:13" pos:end="783:74"><call pos:start="783:13" pos:end="783:74"><name pos:start="783:13" pos:end="783:25">tcg_gen_ld_tl</name><argument_list pos:start="783:26" pos:end="783:74">(<argument pos:start="783:27" pos:end="783:29"><expr pos:start="783:27" pos:end="783:29"><name pos:start="783:27" pos:end="783:29">arg</name></expr></argument>, <argument pos:start="783:32" pos:end="783:38"><expr pos:start="783:32" pos:end="783:38"><name pos:start="783:32" pos:end="783:38">cpu_env</name></expr></argument>, <argument pos:start="783:41" pos:end="783:73"><expr pos:start="783:41" pos:end="783:73"><call pos:start="783:41" pos:end="783:73"><name pos:start="783:41" pos:end="783:48">offsetof</name><argument_list pos:start="783:49" pos:end="783:73">(<argument pos:start="783:50" pos:end="783:61"><expr pos:start="783:50" pos:end="783:61"><name pos:start="783:50" pos:end="783:61">CPUMIPSState</name></expr></argument>, <argument pos:start="783:64" pos:end="783:72"><expr pos:start="783:64" pos:end="783:72"><name pos:start="783:64" pos:end="783:72">CP0_EBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="785:13" pos:end="785:40"><expr pos:start="785:13" pos:end="785:39"><call pos:start="785:13" pos:end="785:39"><name pos:start="785:13" pos:end="785:29">tcg_gen_ext32s_tl</name><argument_list pos:start="785:30" pos:end="785:39">(<argument pos:start="785:31" pos:end="785:33"><expr pos:start="785:31" pos:end="785:33"><name pos:start="785:31" pos:end="785:33">arg</name></expr></argument>, <argument pos:start="785:36" pos:end="785:38"><expr pos:start="785:36" pos:end="785:38"><name pos:start="785:36" pos:end="785:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="787:13" pos:end="787:25"><expr pos:start="787:13" pos:end="787:24"><name pos:start="787:13" pos:end="787:14">rn</name> <operator pos:start="787:16" pos:end="787:16">=</operator> <literal type="string" pos:start="787:18" pos:end="787:24">"EBase"</literal></expr>;</expr_stmt>

            <break pos:start="789:13" pos:end="789:18">break;</break>

        <case pos:start="791:9" pos:end="791:15">case <expr pos:start="791:14" pos:end="791:14"><literal type="number" pos:start="791:14" pos:end="791:14">3</literal></expr>:</case>

            <expr_stmt pos:start="793:13" pos:end="793:42"><expr pos:start="793:13" pos:end="793:41"><call pos:start="793:13" pos:end="793:41"><name pos:start="793:13" pos:end="793:22">check_insn</name><argument_list pos:start="793:23" pos:end="793:41">(<argument pos:start="793:24" pos:end="793:26"><expr pos:start="793:24" pos:end="793:26"><name pos:start="793:24" pos:end="793:26">ctx</name></expr></argument>, <argument pos:start="793:29" pos:end="793:40"><expr pos:start="793:29" pos:end="793:40"><name pos:start="793:29" pos:end="793:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="795:13" pos:end="795:34"><expr pos:start="795:13" pos:end="795:33"><call pos:start="795:13" pos:end="795:33"><name pos:start="795:13" pos:end="795:21">CP0_CHECK</name><argument_list pos:start="795:22" pos:end="795:33">(<argument pos:start="795:23" pos:end="795:32"><expr pos:start="795:23" pos:end="795:32"><name pos:start="795:23" pos:end="795:32"><name pos:start="795:23" pos:end="795:25">ctx</name><operator pos:start="795:26" pos:end="795:27">-&gt;</operator><name pos:start="795:28" pos:end="795:32">cmgcr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="797:13" pos:end="797:79"><expr pos:start="797:13" pos:end="797:78"><call pos:start="797:13" pos:end="797:78"><name pos:start="797:13" pos:end="797:25">tcg_gen_ld_tl</name><argument_list pos:start="797:26" pos:end="797:78">(<argument pos:start="797:27" pos:end="797:29"><expr pos:start="797:27" pos:end="797:29"><name pos:start="797:27" pos:end="797:29">arg</name></expr></argument>, <argument pos:start="797:32" pos:end="797:38"><expr pos:start="797:32" pos:end="797:38"><name pos:start="797:32" pos:end="797:38">cpu_env</name></expr></argument>, <argument pos:start="797:41" pos:end="797:77"><expr pos:start="797:41" pos:end="797:77"><call pos:start="797:41" pos:end="797:77"><name pos:start="797:41" pos:end="797:48">offsetof</name><argument_list pos:start="797:49" pos:end="797:77">(<argument pos:start="797:50" pos:end="797:61"><expr pos:start="797:50" pos:end="797:61"><name pos:start="797:50" pos:end="797:61">CPUMIPSState</name></expr></argument>, <argument pos:start="797:64" pos:end="797:76"><expr pos:start="797:64" pos:end="797:76"><name pos:start="797:64" pos:end="797:76">CP0_CMGCRBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="799:13" pos:end="799:40"><expr pos:start="799:13" pos:end="799:39"><call pos:start="799:13" pos:end="799:39"><name pos:start="799:13" pos:end="799:29">tcg_gen_ext32s_tl</name><argument_list pos:start="799:30" pos:end="799:39">(<argument pos:start="799:31" pos:end="799:33"><expr pos:start="799:31" pos:end="799:33"><name pos:start="799:31" pos:end="799:33">arg</name></expr></argument>, <argument pos:start="799:36" pos:end="799:38"><expr pos:start="799:36" pos:end="799:38"><name pos:start="799:36" pos:end="799:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="801:13" pos:end="801:29"><expr pos:start="801:13" pos:end="801:28"><name pos:start="801:13" pos:end="801:14">rn</name> <operator pos:start="801:16" pos:end="801:16">=</operator> <literal type="string" pos:start="801:18" pos:end="801:28">"CMGCRBase"</literal></expr>;</expr_stmt>

            <break pos:start="803:13" pos:end="803:18">break;</break>

        <default pos:start="805:9" pos:end="805:16">default:</default>

            <goto pos:start="807:13" pos:end="807:35">goto <name pos:start="807:18" pos:end="807:34">cp0_unimplemented</name>;</goto>

       </block_content>}</block></switch>

        <break pos:start="811:9" pos:end="811:14">break;</break>

    <case pos:start="813:5" pos:end="813:12">case <expr pos:start="813:10" pos:end="813:11"><literal type="number" pos:start="813:10" pos:end="813:11">16</literal></expr>:</case>

        <switch pos:start="815:9" pos:end="887:9">switch <condition pos:start="815:16" pos:end="815:20">(<expr pos:start="815:17" pos:end="815:19"><name pos:start="815:17" pos:end="815:19">sel</name></expr>)</condition> <block pos:start="815:22" pos:end="887:9">{<block_content pos:start="817:9" pos:end="885:35">

        <case pos:start="817:9" pos:end="817:15">case <expr pos:start="817:14" pos:end="817:14"><literal type="number" pos:start="817:14" pos:end="817:14">0</literal></expr>:</case>

            <expr_stmt pos:start="819:13" pos:end="819:70"><expr pos:start="819:13" pos:end="819:69"><call pos:start="819:13" pos:end="819:69"><name pos:start="819:13" pos:end="819:27">gen_mfc0_load32</name><argument_list pos:start="819:28" pos:end="819:69">(<argument pos:start="819:29" pos:end="819:31"><expr pos:start="819:29" pos:end="819:31"><name pos:start="819:29" pos:end="819:31">arg</name></expr></argument>, <argument pos:start="819:34" pos:end="819:68"><expr pos:start="819:34" pos:end="819:68"><call pos:start="819:34" pos:end="819:68"><name pos:start="819:34" pos:end="819:41">offsetof</name><argument_list pos:start="819:42" pos:end="819:68">(<argument pos:start="819:43" pos:end="819:54"><expr pos:start="819:43" pos:end="819:54"><name pos:start="819:43" pos:end="819:54">CPUMIPSState</name></expr></argument>, <argument pos:start="819:57" pos:end="819:67"><expr pos:start="819:57" pos:end="819:67"><name pos:start="819:57" pos:end="819:67">CP0_Config0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:26"><expr pos:start="821:13" pos:end="821:25"><name pos:start="821:13" pos:end="821:14">rn</name> <operator pos:start="821:16" pos:end="821:16">=</operator> <literal type="string" pos:start="821:18" pos:end="821:25">"Config"</literal></expr>;</expr_stmt>

            <break pos:start="823:13" pos:end="823:18">break;</break>

        <case pos:start="825:9" pos:end="825:15">case <expr pos:start="825:14" pos:end="825:14"><literal type="number" pos:start="825:14" pos:end="825:14">1</literal></expr>:</case>

            <expr_stmt pos:start="827:13" pos:end="827:70"><expr pos:start="827:13" pos:end="827:69"><call pos:start="827:13" pos:end="827:69"><name pos:start="827:13" pos:end="827:27">gen_mfc0_load32</name><argument_list pos:start="827:28" pos:end="827:69">(<argument pos:start="827:29" pos:end="827:31"><expr pos:start="827:29" pos:end="827:31"><name pos:start="827:29" pos:end="827:31">arg</name></expr></argument>, <argument pos:start="827:34" pos:end="827:68"><expr pos:start="827:34" pos:end="827:68"><call pos:start="827:34" pos:end="827:68"><name pos:start="827:34" pos:end="827:41">offsetof</name><argument_list pos:start="827:42" pos:end="827:68">(<argument pos:start="827:43" pos:end="827:54"><expr pos:start="827:43" pos:end="827:54"><name pos:start="827:43" pos:end="827:54">CPUMIPSState</name></expr></argument>, <argument pos:start="827:57" pos:end="827:67"><expr pos:start="827:57" pos:end="827:67"><name pos:start="827:57" pos:end="827:67">CP0_Config1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="829:13" pos:end="829:27"><expr pos:start="829:13" pos:end="829:26"><name pos:start="829:13" pos:end="829:14">rn</name> <operator pos:start="829:16" pos:end="829:16">=</operator> <literal type="string" pos:start="829:18" pos:end="829:26">"Config1"</literal></expr>;</expr_stmt>

            <break pos:start="831:13" pos:end="831:18">break;</break>

        <case pos:start="833:9" pos:end="833:15">case <expr pos:start="833:14" pos:end="833:14"><literal type="number" pos:start="833:14" pos:end="833:14">2</literal></expr>:</case>

            <expr_stmt pos:start="835:13" pos:end="835:70"><expr pos:start="835:13" pos:end="835:69"><call pos:start="835:13" pos:end="835:69"><name pos:start="835:13" pos:end="835:27">gen_mfc0_load32</name><argument_list pos:start="835:28" pos:end="835:69">(<argument pos:start="835:29" pos:end="835:31"><expr pos:start="835:29" pos:end="835:31"><name pos:start="835:29" pos:end="835:31">arg</name></expr></argument>, <argument pos:start="835:34" pos:end="835:68"><expr pos:start="835:34" pos:end="835:68"><call pos:start="835:34" pos:end="835:68"><name pos:start="835:34" pos:end="835:41">offsetof</name><argument_list pos:start="835:42" pos:end="835:68">(<argument pos:start="835:43" pos:end="835:54"><expr pos:start="835:43" pos:end="835:54"><name pos:start="835:43" pos:end="835:54">CPUMIPSState</name></expr></argument>, <argument pos:start="835:57" pos:end="835:67"><expr pos:start="835:57" pos:end="835:67"><name pos:start="835:57" pos:end="835:67">CP0_Config2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="837:13" pos:end="837:27"><expr pos:start="837:13" pos:end="837:26"><name pos:start="837:13" pos:end="837:14">rn</name> <operator pos:start="837:16" pos:end="837:16">=</operator> <literal type="string" pos:start="837:18" pos:end="837:26">"Config2"</literal></expr>;</expr_stmt>

            <break pos:start="839:13" pos:end="839:18">break;</break>

        <case pos:start="841:9" pos:end="841:15">case <expr pos:start="841:14" pos:end="841:14"><literal type="number" pos:start="841:14" pos:end="841:14">3</literal></expr>:</case>

            <expr_stmt pos:start="843:13" pos:end="843:70"><expr pos:start="843:13" pos:end="843:69"><call pos:start="843:13" pos:end="843:69"><name pos:start="843:13" pos:end="843:27">gen_mfc0_load32</name><argument_list pos:start="843:28" pos:end="843:69">(<argument pos:start="843:29" pos:end="843:31"><expr pos:start="843:29" pos:end="843:31"><name pos:start="843:29" pos:end="843:31">arg</name></expr></argument>, <argument pos:start="843:34" pos:end="843:68"><expr pos:start="843:34" pos:end="843:68"><call pos:start="843:34" pos:end="843:68"><name pos:start="843:34" pos:end="843:41">offsetof</name><argument_list pos:start="843:42" pos:end="843:68">(<argument pos:start="843:43" pos:end="843:54"><expr pos:start="843:43" pos:end="843:54"><name pos:start="843:43" pos:end="843:54">CPUMIPSState</name></expr></argument>, <argument pos:start="843:57" pos:end="843:67"><expr pos:start="843:57" pos:end="843:67"><name pos:start="843:57" pos:end="843:67">CP0_Config3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="845:13" pos:end="845:27"><expr pos:start="845:13" pos:end="845:26"><name pos:start="845:13" pos:end="845:14">rn</name> <operator pos:start="845:16" pos:end="845:16">=</operator> <literal type="string" pos:start="845:18" pos:end="845:26">"Config3"</literal></expr>;</expr_stmt>

            <break pos:start="847:13" pos:end="847:18">break;</break>

        <case pos:start="849:9" pos:end="849:15">case <expr pos:start="849:14" pos:end="849:14"><literal type="number" pos:start="849:14" pos:end="849:14">4</literal></expr>:</case>

            <expr_stmt pos:start="851:13" pos:end="851:70"><expr pos:start="851:13" pos:end="851:69"><call pos:start="851:13" pos:end="851:69"><name pos:start="851:13" pos:end="851:27">gen_mfc0_load32</name><argument_list pos:start="851:28" pos:end="851:69">(<argument pos:start="851:29" pos:end="851:31"><expr pos:start="851:29" pos:end="851:31"><name pos:start="851:29" pos:end="851:31">arg</name></expr></argument>, <argument pos:start="851:34" pos:end="851:68"><expr pos:start="851:34" pos:end="851:68"><call pos:start="851:34" pos:end="851:68"><name pos:start="851:34" pos:end="851:41">offsetof</name><argument_list pos:start="851:42" pos:end="851:68">(<argument pos:start="851:43" pos:end="851:54"><expr pos:start="851:43" pos:end="851:54"><name pos:start="851:43" pos:end="851:54">CPUMIPSState</name></expr></argument>, <argument pos:start="851:57" pos:end="851:67"><expr pos:start="851:57" pos:end="851:67"><name pos:start="851:57" pos:end="851:67">CP0_Config4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="853:13" pos:end="853:27"><expr pos:start="853:13" pos:end="853:26"><name pos:start="853:13" pos:end="853:14">rn</name> <operator pos:start="853:16" pos:end="853:16">=</operator> <literal type="string" pos:start="853:18" pos:end="853:26">"Config4"</literal></expr>;</expr_stmt>

            <break pos:start="855:13" pos:end="855:18">break;</break>

        <case pos:start="857:9" pos:end="857:15">case <expr pos:start="857:14" pos:end="857:14"><literal type="number" pos:start="857:14" pos:end="857:14">5</literal></expr>:</case>

            <expr_stmt pos:start="859:13" pos:end="859:70"><expr pos:start="859:13" pos:end="859:69"><call pos:start="859:13" pos:end="859:69"><name pos:start="859:13" pos:end="859:27">gen_mfc0_load32</name><argument_list pos:start="859:28" pos:end="859:69">(<argument pos:start="859:29" pos:end="859:31"><expr pos:start="859:29" pos:end="859:31"><name pos:start="859:29" pos:end="859:31">arg</name></expr></argument>, <argument pos:start="859:34" pos:end="859:68"><expr pos:start="859:34" pos:end="859:68"><call pos:start="859:34" pos:end="859:68"><name pos:start="859:34" pos:end="859:41">offsetof</name><argument_list pos:start="859:42" pos:end="859:68">(<argument pos:start="859:43" pos:end="859:54"><expr pos:start="859:43" pos:end="859:54"><name pos:start="859:43" pos:end="859:54">CPUMIPSState</name></expr></argument>, <argument pos:start="859:57" pos:end="859:67"><expr pos:start="859:57" pos:end="859:67"><name pos:start="859:57" pos:end="859:67">CP0_Config5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="861:13" pos:end="861:27"><expr pos:start="861:13" pos:end="861:26"><name pos:start="861:13" pos:end="861:14">rn</name> <operator pos:start="861:16" pos:end="861:16">=</operator> <literal type="string" pos:start="861:18" pos:end="861:26">"Config5"</literal></expr>;</expr_stmt>

            <break pos:start="863:13" pos:end="863:18">break;</break>

        <comment type="block" pos:start="865:9" pos:end="865:46">/* 6,7 are implementation dependent */</comment>

        <case pos:start="867:9" pos:end="867:15">case <expr pos:start="867:14" pos:end="867:14"><literal type="number" pos:start="867:14" pos:end="867:14">6</literal></expr>:</case>

            <expr_stmt pos:start="869:13" pos:end="869:70"><expr pos:start="869:13" pos:end="869:69"><call pos:start="869:13" pos:end="869:69"><name pos:start="869:13" pos:end="869:27">gen_mfc0_load32</name><argument_list pos:start="869:28" pos:end="869:69">(<argument pos:start="869:29" pos:end="869:31"><expr pos:start="869:29" pos:end="869:31"><name pos:start="869:29" pos:end="869:31">arg</name></expr></argument>, <argument pos:start="869:34" pos:end="869:68"><expr pos:start="869:34" pos:end="869:68"><call pos:start="869:34" pos:end="869:68"><name pos:start="869:34" pos:end="869:41">offsetof</name><argument_list pos:start="869:42" pos:end="869:68">(<argument pos:start="869:43" pos:end="869:54"><expr pos:start="869:43" pos:end="869:54"><name pos:start="869:43" pos:end="869:54">CPUMIPSState</name></expr></argument>, <argument pos:start="869:57" pos:end="869:67"><expr pos:start="869:57" pos:end="869:67"><name pos:start="869:57" pos:end="869:67">CP0_Config6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="871:13" pos:end="871:27"><expr pos:start="871:13" pos:end="871:26"><name pos:start="871:13" pos:end="871:14">rn</name> <operator pos:start="871:16" pos:end="871:16">=</operator> <literal type="string" pos:start="871:18" pos:end="871:26">"Config6"</literal></expr>;</expr_stmt>

            <break pos:start="873:13" pos:end="873:18">break;</break>

        <case pos:start="875:9" pos:end="875:15">case <expr pos:start="875:14" pos:end="875:14"><literal type="number" pos:start="875:14" pos:end="875:14">7</literal></expr>:</case>

            <expr_stmt pos:start="877:13" pos:end="877:70"><expr pos:start="877:13" pos:end="877:69"><call pos:start="877:13" pos:end="877:69"><name pos:start="877:13" pos:end="877:27">gen_mfc0_load32</name><argument_list pos:start="877:28" pos:end="877:69">(<argument pos:start="877:29" pos:end="877:31"><expr pos:start="877:29" pos:end="877:31"><name pos:start="877:29" pos:end="877:31">arg</name></expr></argument>, <argument pos:start="877:34" pos:end="877:68"><expr pos:start="877:34" pos:end="877:68"><call pos:start="877:34" pos:end="877:68"><name pos:start="877:34" pos:end="877:41">offsetof</name><argument_list pos:start="877:42" pos:end="877:68">(<argument pos:start="877:43" pos:end="877:54"><expr pos:start="877:43" pos:end="877:54"><name pos:start="877:43" pos:end="877:54">CPUMIPSState</name></expr></argument>, <argument pos:start="877:57" pos:end="877:67"><expr pos:start="877:57" pos:end="877:67"><name pos:start="877:57" pos:end="877:67">CP0_Config7</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="879:13" pos:end="879:27"><expr pos:start="879:13" pos:end="879:26"><name pos:start="879:13" pos:end="879:14">rn</name> <operator pos:start="879:16" pos:end="879:16">=</operator> <literal type="string" pos:start="879:18" pos:end="879:26">"Config7"</literal></expr>;</expr_stmt>

            <break pos:start="881:13" pos:end="881:18">break;</break>

        <default pos:start="883:9" pos:end="883:16">default:</default>

            <goto pos:start="885:13" pos:end="885:35">goto <name pos:start="885:18" pos:end="885:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="889:9" pos:end="889:14">break;</break>

    <case pos:start="891:5" pos:end="891:12">case <expr pos:start="891:10" pos:end="891:11"><literal type="number" pos:start="891:10" pos:end="891:11">17</literal></expr>:</case>

        <switch pos:start="893:9" pos:end="927:9">switch <condition pos:start="893:16" pos:end="893:20">(<expr pos:start="893:17" pos:end="893:19"><name pos:start="893:17" pos:end="893:19">sel</name></expr>)</condition> <block pos:start="893:22" pos:end="927:9">{<block_content pos:start="895:9" pos:end="925:35">

        <case pos:start="895:9" pos:end="895:15">case <expr pos:start="895:14" pos:end="895:14"><literal type="number" pos:start="895:14" pos:end="895:14">0</literal></expr>:</case>

            <expr_stmt pos:start="897:13" pos:end="897:49"><expr pos:start="897:13" pos:end="897:48"><call pos:start="897:13" pos:end="897:48"><name pos:start="897:13" pos:end="897:34">gen_helper_mfc0_lladdr</name><argument_list pos:start="897:35" pos:end="897:48">(<argument pos:start="897:36" pos:end="897:38"><expr pos:start="897:36" pos:end="897:38"><name pos:start="897:36" pos:end="897:38">arg</name></expr></argument>, <argument pos:start="897:41" pos:end="897:47"><expr pos:start="897:41" pos:end="897:47"><name pos:start="897:41" pos:end="897:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="899:13" pos:end="899:26"><expr pos:start="899:13" pos:end="899:25"><name pos:start="899:13" pos:end="899:14">rn</name> <operator pos:start="899:16" pos:end="899:16">=</operator> <literal type="string" pos:start="899:18" pos:end="899:25">"LLAddr"</literal></expr>;</expr_stmt>

            <break pos:start="901:13" pos:end="901:18">break;</break>

        <case pos:start="903:9" pos:end="903:15">case <expr pos:start="903:14" pos:end="903:14"><literal type="number" pos:start="903:14" pos:end="903:14">1</literal></expr>:</case>

            <expr_stmt pos:start="905:13" pos:end="905:32"><expr pos:start="905:13" pos:end="905:31"><call pos:start="905:13" pos:end="905:31"><name pos:start="905:13" pos:end="905:21">CP0_CHECK</name><argument_list pos:start="905:22" pos:end="905:31">(<argument pos:start="905:23" pos:end="905:30"><expr pos:start="905:23" pos:end="905:30"><name pos:start="905:23" pos:end="905:30"><name pos:start="905:23" pos:end="905:25">ctx</name><operator pos:start="905:26" pos:end="905:27">-&gt;</operator><name pos:start="905:28" pos:end="905:30">mrp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="907:13" pos:end="907:47"><expr pos:start="907:13" pos:end="907:46"><call pos:start="907:13" pos:end="907:46"><name pos:start="907:13" pos:end="907:32">gen_helper_mfc0_maar</name><argument_list pos:start="907:33" pos:end="907:46">(<argument pos:start="907:34" pos:end="907:36"><expr pos:start="907:34" pos:end="907:36"><name pos:start="907:34" pos:end="907:36">arg</name></expr></argument>, <argument pos:start="907:39" pos:end="907:45"><expr pos:start="907:39" pos:end="907:45"><name pos:start="907:39" pos:end="907:45">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="909:13" pos:end="909:24"><expr pos:start="909:13" pos:end="909:23"><name pos:start="909:13" pos:end="909:14">rn</name> <operator pos:start="909:16" pos:end="909:16">=</operator> <literal type="string" pos:start="909:18" pos:end="909:23">"MAAR"</literal></expr>;</expr_stmt>

            <break pos:start="911:13" pos:end="911:18">break;</break>

        <case pos:start="913:9" pos:end="913:15">case <expr pos:start="913:14" pos:end="913:14"><literal type="number" pos:start="913:14" pos:end="913:14">2</literal></expr>:</case>

            <expr_stmt pos:start="915:13" pos:end="915:32"><expr pos:start="915:13" pos:end="915:31"><call pos:start="915:13" pos:end="915:31"><name pos:start="915:13" pos:end="915:21">CP0_CHECK</name><argument_list pos:start="915:22" pos:end="915:31">(<argument pos:start="915:23" pos:end="915:30"><expr pos:start="915:23" pos:end="915:30"><name pos:start="915:23" pos:end="915:30"><name pos:start="915:23" pos:end="915:25">ctx</name><operator pos:start="915:26" pos:end="915:27">-&gt;</operator><name pos:start="915:28" pos:end="915:30">mrp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="917:13" pos:end="917:68"><expr pos:start="917:13" pos:end="917:67"><call pos:start="917:13" pos:end="917:67"><name pos:start="917:13" pos:end="917:27">gen_mfc0_load32</name><argument_list pos:start="917:28" pos:end="917:67">(<argument pos:start="917:29" pos:end="917:31"><expr pos:start="917:29" pos:end="917:31"><name pos:start="917:29" pos:end="917:31">arg</name></expr></argument>, <argument pos:start="917:34" pos:end="917:66"><expr pos:start="917:34" pos:end="917:66"><call pos:start="917:34" pos:end="917:66"><name pos:start="917:34" pos:end="917:41">offsetof</name><argument_list pos:start="917:42" pos:end="917:66">(<argument pos:start="917:43" pos:end="917:54"><expr pos:start="917:43" pos:end="917:54"><name pos:start="917:43" pos:end="917:54">CPUMIPSState</name></expr></argument>, <argument pos:start="917:57" pos:end="917:65"><expr pos:start="917:57" pos:end="917:65"><name pos:start="917:57" pos:end="917:65">CP0_MAARI</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="919:13" pos:end="919:25"><expr pos:start="919:13" pos:end="919:24"><name pos:start="919:13" pos:end="919:14">rn</name> <operator pos:start="919:16" pos:end="919:16">=</operator> <literal type="string" pos:start="919:18" pos:end="919:24">"MAARI"</literal></expr>;</expr_stmt>

            <break pos:start="921:13" pos:end="921:18">break;</break>

        <default pos:start="923:9" pos:end="923:16">default:</default>

            <goto pos:start="925:13" pos:end="925:35">goto <name pos:start="925:18" pos:end="925:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="929:9" pos:end="929:14">break;</break>

    <case pos:start="931:5" pos:end="931:12">case <expr pos:start="931:10" pos:end="931:11"><literal type="number" pos:start="931:10" pos:end="931:11">18</literal></expr>:</case>

        <switch pos:start="933:9" pos:end="947:9">switch <condition pos:start="933:16" pos:end="933:20">(<expr pos:start="933:17" pos:end="933:19"><name pos:start="933:17" pos:end="933:19">sel</name></expr>)</condition> <block pos:start="933:22" pos:end="947:9">{<block_content pos:start="935:9" pos:end="945:35">

        <case pos:start="935:9" pos:end="935:21">case <expr pos:start="935:14" pos:end="935:20"><literal type="number" pos:start="935:14" pos:end="935:14">0</literal> <operator pos:start="935:16" pos:end="935:18">...</operator> <literal type="number" pos:start="935:20" pos:end="935:20">7</literal></expr>:</case>

            <expr_stmt pos:start="937:13" pos:end="937:52"><expr pos:start="937:13" pos:end="937:51"><call pos:start="937:13" pos:end="937:51"><name pos:start="937:13" pos:end="937:27">gen_helper_1e0i</name><argument_list pos:start="937:28" pos:end="937:51">(<argument pos:start="937:29" pos:end="937:40"><expr pos:start="937:29" pos:end="937:40"><name pos:start="937:29" pos:end="937:40">mfc0_watchlo</name></expr></argument>, <argument pos:start="937:43" pos:end="937:45"><expr pos:start="937:43" pos:end="937:45"><name pos:start="937:43" pos:end="937:45">arg</name></expr></argument>, <argument pos:start="937:48" pos:end="937:50"><expr pos:start="937:48" pos:end="937:50"><name pos:start="937:48" pos:end="937:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="939:13" pos:end="939:27"><expr pos:start="939:13" pos:end="939:26"><name pos:start="939:13" pos:end="939:14">rn</name> <operator pos:start="939:16" pos:end="939:16">=</operator> <literal type="string" pos:start="939:18" pos:end="939:26">"WatchLo"</literal></expr>;</expr_stmt>

            <break pos:start="941:13" pos:end="941:18">break;</break>

        <default pos:start="943:9" pos:end="943:16">default:</default>

            <goto pos:start="945:13" pos:end="945:35">goto <name pos:start="945:18" pos:end="945:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="949:9" pos:end="949:14">break;</break>

    <case pos:start="951:5" pos:end="951:12">case <expr pos:start="951:10" pos:end="951:11"><literal type="number" pos:start="951:10" pos:end="951:11">19</literal></expr>:</case>

        <switch pos:start="953:9" pos:end="967:9">switch <condition pos:start="953:16" pos:end="953:20">(<expr pos:start="953:17" pos:end="953:19"><name pos:start="953:17" pos:end="953:19">sel</name></expr>)</condition> <block pos:start="953:22" pos:end="967:9">{<block_content pos:start="955:9" pos:end="965:35">

        <case pos:start="955:9" pos:end="955:20">case <expr pos:start="955:14" pos:end="955:19"><literal type="number" pos:start="955:14" pos:end="955:14">0</literal> <operator pos:start="955:16" pos:end="955:18">...</operator><literal type="number" pos:start="955:19" pos:end="955:19">7</literal></expr>:</case>

            <expr_stmt pos:start="957:13" pos:end="957:52"><expr pos:start="957:13" pos:end="957:51"><call pos:start="957:13" pos:end="957:51"><name pos:start="957:13" pos:end="957:27">gen_helper_1e0i</name><argument_list pos:start="957:28" pos:end="957:51">(<argument pos:start="957:29" pos:end="957:40"><expr pos:start="957:29" pos:end="957:40"><name pos:start="957:29" pos:end="957:40">mfc0_watchhi</name></expr></argument>, <argument pos:start="957:43" pos:end="957:45"><expr pos:start="957:43" pos:end="957:45"><name pos:start="957:43" pos:end="957:45">arg</name></expr></argument>, <argument pos:start="957:48" pos:end="957:50"><expr pos:start="957:48" pos:end="957:50"><name pos:start="957:48" pos:end="957:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="959:13" pos:end="959:27"><expr pos:start="959:13" pos:end="959:26"><name pos:start="959:13" pos:end="959:14">rn</name> <operator pos:start="959:16" pos:end="959:16">=</operator> <literal type="string" pos:start="959:18" pos:end="959:26">"WatchHi"</literal></expr>;</expr_stmt>

            <break pos:start="961:13" pos:end="961:18">break;</break>

        <default pos:start="963:9" pos:end="963:16">default:</default>

            <goto pos:start="965:13" pos:end="965:35">goto <name pos:start="965:18" pos:end="965:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="969:9" pos:end="969:14">break;</break>

    <case pos:start="971:5" pos:end="971:12">case <expr pos:start="971:10" pos:end="971:11"><literal type="number" pos:start="971:10" pos:end="971:11">20</literal></expr>:</case>

        <switch pos:start="973:9" pos:end="995:9">switch <condition pos:start="973:16" pos:end="973:20">(<expr pos:start="973:17" pos:end="973:19"><name pos:start="973:17" pos:end="973:19">sel</name></expr>)</condition> <block pos:start="973:22" pos:end="995:9">{<block_content pos:start="975:9" pos:end="993:35">

        <case pos:start="975:9" pos:end="978:0">case <expr pos:start="975:14" pos:end="975:14"><literal type="number" pos:start="975:14" pos:end="975:14">0</literal></expr>:</case>

<cpp:if pos:start="977:1" pos:end="977:26">#<cpp:directive pos:start="977:2" pos:end="977:3">if</cpp:directive> <expr pos:start="977:5" pos:end="977:26"><call pos:start="977:5" pos:end="977:26"><name pos:start="977:5" pos:end="977:11">defined</name><argument_list pos:start="977:12" pos:end="977:26">(<argument pos:start="977:13" pos:end="977:25"><expr pos:start="977:13" pos:end="977:25"><name pos:start="977:13" pos:end="977:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="979:13" pos:end="979:39"><expr pos:start="979:13" pos:end="979:38"><call pos:start="979:13" pos:end="979:38"><name pos:start="979:13" pos:end="979:22">check_insn</name><argument_list pos:start="979:23" pos:end="979:38">(<argument pos:start="979:24" pos:end="979:26"><expr pos:start="979:24" pos:end="979:26"><name pos:start="979:24" pos:end="979:26">ctx</name></expr></argument>, <argument pos:start="979:29" pos:end="979:37"><expr pos:start="979:29" pos:end="979:37"><name pos:start="979:29" pos:end="979:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="981:13" pos:end="981:78"><expr pos:start="981:13" pos:end="981:77"><call pos:start="981:13" pos:end="981:77"><name pos:start="981:13" pos:end="981:25">tcg_gen_ld_tl</name><argument_list pos:start="981:26" pos:end="981:77">(<argument pos:start="981:27" pos:end="981:29"><expr pos:start="981:27" pos:end="981:29"><name pos:start="981:27" pos:end="981:29">arg</name></expr></argument>, <argument pos:start="981:32" pos:end="981:38"><expr pos:start="981:32" pos:end="981:38"><name pos:start="981:32" pos:end="981:38">cpu_env</name></expr></argument>, <argument pos:start="981:41" pos:end="981:76"><expr pos:start="981:41" pos:end="981:76"><call pos:start="981:41" pos:end="981:76"><name pos:start="981:41" pos:end="981:48">offsetof</name><argument_list pos:start="981:49" pos:end="981:76">(<argument pos:start="981:50" pos:end="981:61"><expr pos:start="981:50" pos:end="981:61"><name pos:start="981:50" pos:end="981:61">CPUMIPSState</name></expr></argument>, <argument pos:start="981:64" pos:end="981:75"><expr pos:start="981:64" pos:end="981:75"><name pos:start="981:64" pos:end="981:75">CP0_XContext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="983:13" pos:end="983:40"><expr pos:start="983:13" pos:end="983:39"><call pos:start="983:13" pos:end="983:39"><name pos:start="983:13" pos:end="983:29">tcg_gen_ext32s_tl</name><argument_list pos:start="983:30" pos:end="983:39">(<argument pos:start="983:31" pos:end="983:33"><expr pos:start="983:31" pos:end="983:33"><name pos:start="983:31" pos:end="983:33">arg</name></expr></argument>, <argument pos:start="983:36" pos:end="983:38"><expr pos:start="983:36" pos:end="983:38"><name pos:start="983:36" pos:end="983:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="985:13" pos:end="985:28"><expr pos:start="985:13" pos:end="985:27"><name pos:start="985:13" pos:end="985:14">rn</name> <operator pos:start="985:16" pos:end="985:16">=</operator> <literal type="string" pos:start="985:18" pos:end="985:27">"XContext"</literal></expr>;</expr_stmt>

            <break pos:start="987:13" pos:end="990:0">break;</break>

<cpp:endif pos:start="989:1" pos:end="989:6">#<cpp:directive pos:start="989:2" pos:end="989:6">endif</cpp:directive></cpp:endif>

        <default pos:start="991:9" pos:end="991:16">default:</default>

            <goto pos:start="993:13" pos:end="993:35">goto <name pos:start="993:18" pos:end="993:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="997:9" pos:end="997:14">break;</break>

    <case pos:start="999:5" pos:end="999:12">case <expr pos:start="999:10" pos:end="999:11"><literal type="number" pos:start="999:10" pos:end="999:11">21</literal></expr>:</case>

       <comment type="block" pos:start="1001:8" pos:end="1001:72">/* Officially reserved, but sel 0 is used for R1x000 framemask */</comment>

        <expr_stmt pos:start="1003:9" pos:end="1003:53"><expr pos:start="1003:9" pos:end="1003:52"><call pos:start="1003:9" pos:end="1003:52"><name pos:start="1003:9" pos:end="1003:17">CP0_CHECK</name><argument_list pos:start="1003:18" pos:end="1003:52">(<argument pos:start="1003:19" pos:end="1003:51"><expr pos:start="1003:19" pos:end="1003:51"><operator pos:start="1003:19" pos:end="1003:19">!</operator><operator pos:start="1003:20" pos:end="1003:20">(</operator><name pos:start="1003:21" pos:end="1003:35"><name pos:start="1003:21" pos:end="1003:23">ctx</name><operator pos:start="1003:24" pos:end="1003:25">-&gt;</operator><name pos:start="1003:26" pos:end="1003:35">insn_flags</name></name> <operator pos:start="1003:37" pos:end="1003:37">&amp;</operator> <name pos:start="1003:39" pos:end="1003:50">ISA_MIPS32R6</name><operator pos:start="1003:51" pos:end="1003:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1005:9" pos:end="1019:9">switch <condition pos:start="1005:16" pos:end="1005:20">(<expr pos:start="1005:17" pos:end="1005:19"><name pos:start="1005:17" pos:end="1005:19">sel</name></expr>)</condition> <block pos:start="1005:22" pos:end="1019:9">{<block_content pos:start="1007:9" pos:end="1017:35">

        <case pos:start="1007:9" pos:end="1007:15">case <expr pos:start="1007:14" pos:end="1007:14"><literal type="number" pos:start="1007:14" pos:end="1007:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1009:13" pos:end="1009:72"><expr pos:start="1009:13" pos:end="1009:71"><call pos:start="1009:13" pos:end="1009:71"><name pos:start="1009:13" pos:end="1009:27">gen_mfc0_load32</name><argument_list pos:start="1009:28" pos:end="1009:71">(<argument pos:start="1009:29" pos:end="1009:31"><expr pos:start="1009:29" pos:end="1009:31"><name pos:start="1009:29" pos:end="1009:31">arg</name></expr></argument>, <argument pos:start="1009:34" pos:end="1009:70"><expr pos:start="1009:34" pos:end="1009:70"><call pos:start="1009:34" pos:end="1009:70"><name pos:start="1009:34" pos:end="1009:41">offsetof</name><argument_list pos:start="1009:42" pos:end="1009:70">(<argument pos:start="1009:43" pos:end="1009:54"><expr pos:start="1009:43" pos:end="1009:54"><name pos:start="1009:43" pos:end="1009:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1009:57" pos:end="1009:69"><expr pos:start="1009:57" pos:end="1009:69"><name pos:start="1009:57" pos:end="1009:69">CP0_Framemask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1011:13" pos:end="1011:29"><expr pos:start="1011:13" pos:end="1011:28"><name pos:start="1011:13" pos:end="1011:14">rn</name> <operator pos:start="1011:16" pos:end="1011:16">=</operator> <literal type="string" pos:start="1011:18" pos:end="1011:28">"Framemask"</literal></expr>;</expr_stmt>

            <break pos:start="1013:13" pos:end="1013:18">break;</break>

        <default pos:start="1015:9" pos:end="1015:16">default:</default>

            <goto pos:start="1017:13" pos:end="1017:35">goto <name pos:start="1017:18" pos:end="1017:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1021:9" pos:end="1021:14">break;</break>

    <case pos:start="1023:5" pos:end="1023:12">case <expr pos:start="1023:10" pos:end="1023:11"><literal type="number" pos:start="1023:10" pos:end="1023:11">22</literal></expr>:</case>

        <expr_stmt pos:start="1025:9" pos:end="1025:32"><expr pos:start="1025:9" pos:end="1025:31"><call pos:start="1025:9" pos:end="1025:31"><name pos:start="1025:9" pos:end="1025:23">tcg_gen_movi_tl</name><argument_list pos:start="1025:24" pos:end="1025:31">(<argument pos:start="1025:25" pos:end="1025:27"><expr pos:start="1025:25" pos:end="1025:27"><name pos:start="1025:25" pos:end="1025:27">arg</name></expr></argument>, <argument pos:start="1025:30" pos:end="1025:30"><expr pos:start="1025:30" pos:end="1025:30"><literal type="number" pos:start="1025:30" pos:end="1025:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1025:34" pos:end="1025:52">/* unimplemented */</comment>

        <expr_stmt pos:start="1027:9" pos:end="1027:27"><expr pos:start="1027:9" pos:end="1027:26"><name pos:start="1027:9" pos:end="1027:10">rn</name> <operator pos:start="1027:12" pos:end="1027:12">=</operator> <literal type="string" pos:start="1027:14" pos:end="1027:26">"'Diagnostic"</literal></expr>;</expr_stmt> <comment type="block" pos:start="1027:29" pos:end="1027:58">/* implementation dependent */</comment>

        <break pos:start="1029:9" pos:end="1029:14">break;</break>

    <case pos:start="1031:5" pos:end="1031:12">case <expr pos:start="1031:10" pos:end="1031:11"><literal type="number" pos:start="1031:10" pos:end="1031:11">23</literal></expr>:</case>

        <switch pos:start="1033:9" pos:end="1079:9">switch <condition pos:start="1033:16" pos:end="1033:20">(<expr pos:start="1033:17" pos:end="1033:19"><name pos:start="1033:17" pos:end="1033:19">sel</name></expr>)</condition> <block pos:start="1033:22" pos:end="1079:9">{<block_content pos:start="1035:9" pos:end="1077:35">

        <case pos:start="1035:9" pos:end="1035:15">case <expr pos:start="1035:14" pos:end="1035:14"><literal type="number" pos:start="1035:14" pos:end="1035:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1037:13" pos:end="1037:48"><expr pos:start="1037:13" pos:end="1037:47"><call pos:start="1037:13" pos:end="1037:47"><name pos:start="1037:13" pos:end="1037:33">gen_helper_mfc0_debug</name><argument_list pos:start="1037:34" pos:end="1037:47">(<argument pos:start="1037:35" pos:end="1037:37"><expr pos:start="1037:35" pos:end="1037:37"><name pos:start="1037:35" pos:end="1037:37">arg</name></expr></argument>, <argument pos:start="1037:40" pos:end="1037:46"><expr pos:start="1037:40" pos:end="1037:46"><name pos:start="1037:40" pos:end="1037:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1037:50" pos:end="1037:68">/* EJTAG support */</comment>

            <expr_stmt pos:start="1039:13" pos:end="1039:25"><expr pos:start="1039:13" pos:end="1039:24"><name pos:start="1039:13" pos:end="1039:14">rn</name> <operator pos:start="1039:16" pos:end="1039:16">=</operator> <literal type="string" pos:start="1039:18" pos:end="1039:24">"Debug"</literal></expr>;</expr_stmt>

            <break pos:start="1041:13" pos:end="1041:18">break;</break>

        <case pos:start="1043:9" pos:end="1043:15">case <expr pos:start="1043:14" pos:end="1043:14"><literal type="number" pos:start="1043:14" pos:end="1043:14">1</literal></expr>:</case>

<comment type="line" pos:start="1045:1" pos:end="1045:70">//            gen_helper_mfc0_tracecontrol(arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="1047:13" pos:end="1047:32"><expr pos:start="1047:13" pos:end="1047:31"><name pos:start="1047:13" pos:end="1047:14">rn</name> <operator pos:start="1047:16" pos:end="1047:16">=</operator> <literal type="string" pos:start="1047:18" pos:end="1047:31">"TraceControl"</literal></expr>;</expr_stmt>

            <goto pos:start="1049:13" pos:end="1049:35">goto <name pos:start="1049:18" pos:end="1049:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1051:9" pos:end="1051:15">case <expr pos:start="1051:14" pos:end="1051:14"><literal type="number" pos:start="1051:14" pos:end="1051:14">2</literal></expr>:</case>

<comment type="line" pos:start="1053:1" pos:end="1053:71">//            gen_helper_mfc0_tracecontrol2(arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="1055:13" pos:end="1055:33"><expr pos:start="1055:13" pos:end="1055:32"><name pos:start="1055:13" pos:end="1055:14">rn</name> <operator pos:start="1055:16" pos:end="1055:16">=</operator> <literal type="string" pos:start="1055:18" pos:end="1055:32">"TraceControl2"</literal></expr>;</expr_stmt>

            <goto pos:start="1057:13" pos:end="1057:35">goto <name pos:start="1057:18" pos:end="1057:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1059:9" pos:end="1059:15">case <expr pos:start="1059:14" pos:end="1059:14"><literal type="number" pos:start="1059:14" pos:end="1059:14">3</literal></expr>:</case>

<comment type="line" pos:start="1061:1" pos:end="1061:71">//            gen_helper_mfc0_usertracedata(arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="1063:13" pos:end="1063:33"><expr pos:start="1063:13" pos:end="1063:32"><name pos:start="1063:13" pos:end="1063:14">rn</name> <operator pos:start="1063:16" pos:end="1063:16">=</operator> <literal type="string" pos:start="1063:18" pos:end="1063:32">"UserTraceData"</literal></expr>;</expr_stmt>

            <goto pos:start="1065:13" pos:end="1065:35">goto <name pos:start="1065:18" pos:end="1065:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1067:9" pos:end="1067:15">case <expr pos:start="1067:14" pos:end="1067:14"><literal type="number" pos:start="1067:14" pos:end="1067:14">4</literal></expr>:</case>

<comment type="line" pos:start="1069:1" pos:end="1069:66">//            gen_helper_mfc0_tracebpc(arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="1071:13" pos:end="1071:28"><expr pos:start="1071:13" pos:end="1071:27"><name pos:start="1071:13" pos:end="1071:14">rn</name> <operator pos:start="1071:16" pos:end="1071:16">=</operator> <literal type="string" pos:start="1071:18" pos:end="1071:27">"TraceBPC"</literal></expr>;</expr_stmt>

            <goto pos:start="1073:13" pos:end="1073:35">goto <name pos:start="1073:18" pos:end="1073:34">cp0_unimplemented</name>;</goto>

        <default pos:start="1075:9" pos:end="1075:16">default:</default>

            <goto pos:start="1077:13" pos:end="1077:35">goto <name pos:start="1077:18" pos:end="1077:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1081:9" pos:end="1081:14">break;</break>

    <case pos:start="1083:5" pos:end="1083:12">case <expr pos:start="1083:10" pos:end="1083:11"><literal type="number" pos:start="1083:10" pos:end="1083:11">24</literal></expr>:</case>

        <switch pos:start="1085:9" pos:end="1103:9">switch <condition pos:start="1085:16" pos:end="1085:20">(<expr pos:start="1085:17" pos:end="1085:19"><name pos:start="1085:17" pos:end="1085:19">sel</name></expr>)</condition> <block pos:start="1085:22" pos:end="1103:9">{<block_content pos:start="1087:9" pos:end="1101:35">

        <case pos:start="1087:9" pos:end="1087:15">case <expr pos:start="1087:14" pos:end="1087:14"><literal type="number" pos:start="1087:14" pos:end="1087:14">0</literal></expr>:</case>

            <comment type="block" pos:start="1089:13" pos:end="1089:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="1091:13" pos:end="1091:74"><expr pos:start="1091:13" pos:end="1091:73"><call pos:start="1091:13" pos:end="1091:73"><name pos:start="1091:13" pos:end="1091:25">tcg_gen_ld_tl</name><argument_list pos:start="1091:26" pos:end="1091:73">(<argument pos:start="1091:27" pos:end="1091:29"><expr pos:start="1091:27" pos:end="1091:29"><name pos:start="1091:27" pos:end="1091:29">arg</name></expr></argument>, <argument pos:start="1091:32" pos:end="1091:38"><expr pos:start="1091:32" pos:end="1091:38"><name pos:start="1091:32" pos:end="1091:38">cpu_env</name></expr></argument>, <argument pos:start="1091:41" pos:end="1091:72"><expr pos:start="1091:41" pos:end="1091:72"><call pos:start="1091:41" pos:end="1091:72"><name pos:start="1091:41" pos:end="1091:48">offsetof</name><argument_list pos:start="1091:49" pos:end="1091:72">(<argument pos:start="1091:50" pos:end="1091:61"><expr pos:start="1091:50" pos:end="1091:61"><name pos:start="1091:50" pos:end="1091:61">CPUMIPSState</name></expr></argument>, <argument pos:start="1091:64" pos:end="1091:71"><expr pos:start="1091:64" pos:end="1091:71"><name pos:start="1091:64" pos:end="1091:71">CP0_DEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1093:13" pos:end="1093:40"><expr pos:start="1093:13" pos:end="1093:39"><call pos:start="1093:13" pos:end="1093:39"><name pos:start="1093:13" pos:end="1093:29">tcg_gen_ext32s_tl</name><argument_list pos:start="1093:30" pos:end="1093:39">(<argument pos:start="1093:31" pos:end="1093:33"><expr pos:start="1093:31" pos:end="1093:33"><name pos:start="1093:31" pos:end="1093:33">arg</name></expr></argument>, <argument pos:start="1093:36" pos:end="1093:38"><expr pos:start="1093:36" pos:end="1093:38"><name pos:start="1093:36" pos:end="1093:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1095:13" pos:end="1095:24"><expr pos:start="1095:13" pos:end="1095:23"><name pos:start="1095:13" pos:end="1095:14">rn</name> <operator pos:start="1095:16" pos:end="1095:16">=</operator> <literal type="string" pos:start="1095:18" pos:end="1095:23">"DEPC"</literal></expr>;</expr_stmt>

            <break pos:start="1097:13" pos:end="1097:18">break;</break>

        <default pos:start="1099:9" pos:end="1099:16">default:</default>

            <goto pos:start="1101:13" pos:end="1101:35">goto <name pos:start="1101:18" pos:end="1101:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1105:9" pos:end="1105:14">break;</break>

    <case pos:start="1107:5" pos:end="1107:12">case <expr pos:start="1107:10" pos:end="1107:11"><literal type="number" pos:start="1107:10" pos:end="1107:11">25</literal></expr>:</case>

        <switch pos:start="1109:9" pos:end="1179:9">switch <condition pos:start="1109:16" pos:end="1109:20">(<expr pos:start="1109:17" pos:end="1109:19"><name pos:start="1109:17" pos:end="1109:19">sel</name></expr>)</condition> <block pos:start="1109:22" pos:end="1179:9">{<block_content pos:start="1111:9" pos:end="1177:35">

        <case pos:start="1111:9" pos:end="1111:15">case <expr pos:start="1111:14" pos:end="1111:14"><literal type="number" pos:start="1111:14" pos:end="1111:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1113:13" pos:end="1113:75"><expr pos:start="1113:13" pos:end="1113:74"><call pos:start="1113:13" pos:end="1113:74"><name pos:start="1113:13" pos:end="1113:27">gen_mfc0_load32</name><argument_list pos:start="1113:28" pos:end="1113:74">(<argument pos:start="1113:29" pos:end="1113:31"><expr pos:start="1113:29" pos:end="1113:31"><name pos:start="1113:29" pos:end="1113:31">arg</name></expr></argument>, <argument pos:start="1113:34" pos:end="1113:73"><expr pos:start="1113:34" pos:end="1113:73"><call pos:start="1113:34" pos:end="1113:73"><name pos:start="1113:34" pos:end="1113:41">offsetof</name><argument_list pos:start="1113:42" pos:end="1113:73">(<argument pos:start="1113:43" pos:end="1113:54"><expr pos:start="1113:43" pos:end="1113:54"><name pos:start="1113:43" pos:end="1113:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1113:57" pos:end="1113:72"><expr pos:start="1113:57" pos:end="1113:72"><name pos:start="1113:57" pos:end="1113:72">CP0_Performance0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1115:13" pos:end="1115:32"><expr pos:start="1115:13" pos:end="1115:31"><name pos:start="1115:13" pos:end="1115:14">rn</name> <operator pos:start="1115:16" pos:end="1115:16">=</operator> <literal type="string" pos:start="1115:18" pos:end="1115:31">"Performance0"</literal></expr>;</expr_stmt>

            <break pos:start="1117:13" pos:end="1117:18">break;</break>

        <case pos:start="1119:9" pos:end="1119:15">case <expr pos:start="1119:14" pos:end="1119:14"><literal type="number" pos:start="1119:14" pos:end="1119:14">1</literal></expr>:</case>

<comment type="line" pos:start="1121:1" pos:end="1121:48">//            gen_helper_mfc0_performance1(arg);</comment>

            <expr_stmt pos:start="1123:13" pos:end="1123:32"><expr pos:start="1123:13" pos:end="1123:31"><name pos:start="1123:13" pos:end="1123:14">rn</name> <operator pos:start="1123:16" pos:end="1123:16">=</operator> <literal type="string" pos:start="1123:18" pos:end="1123:31">"Performance1"</literal></expr>;</expr_stmt>

            <goto pos:start="1125:13" pos:end="1125:35">goto <name pos:start="1125:18" pos:end="1125:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1127:9" pos:end="1127:15">case <expr pos:start="1127:14" pos:end="1127:14"><literal type="number" pos:start="1127:14" pos:end="1127:14">2</literal></expr>:</case>

<comment type="line" pos:start="1129:1" pos:end="1129:48">//            gen_helper_mfc0_performance2(arg);</comment>

            <expr_stmt pos:start="1131:13" pos:end="1131:32"><expr pos:start="1131:13" pos:end="1131:31"><name pos:start="1131:13" pos:end="1131:14">rn</name> <operator pos:start="1131:16" pos:end="1131:16">=</operator> <literal type="string" pos:start="1131:18" pos:end="1131:31">"Performance2"</literal></expr>;</expr_stmt>

            <goto pos:start="1133:13" pos:end="1133:35">goto <name pos:start="1133:18" pos:end="1133:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1135:9" pos:end="1135:15">case <expr pos:start="1135:14" pos:end="1135:14"><literal type="number" pos:start="1135:14" pos:end="1135:14">3</literal></expr>:</case>

<comment type="line" pos:start="1137:1" pos:end="1137:48">//            gen_helper_mfc0_performance3(arg);</comment>

            <expr_stmt pos:start="1139:13" pos:end="1139:32"><expr pos:start="1139:13" pos:end="1139:31"><name pos:start="1139:13" pos:end="1139:14">rn</name> <operator pos:start="1139:16" pos:end="1139:16">=</operator> <literal type="string" pos:start="1139:18" pos:end="1139:31">"Performance3"</literal></expr>;</expr_stmt>

            <goto pos:start="1141:13" pos:end="1141:35">goto <name pos:start="1141:18" pos:end="1141:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1143:9" pos:end="1143:15">case <expr pos:start="1143:14" pos:end="1143:14"><literal type="number" pos:start="1143:14" pos:end="1143:14">4</literal></expr>:</case>

<comment type="line" pos:start="1145:1" pos:end="1145:48">//            gen_helper_mfc0_performance4(arg);</comment>

            <expr_stmt pos:start="1147:13" pos:end="1147:32"><expr pos:start="1147:13" pos:end="1147:31"><name pos:start="1147:13" pos:end="1147:14">rn</name> <operator pos:start="1147:16" pos:end="1147:16">=</operator> <literal type="string" pos:start="1147:18" pos:end="1147:31">"Performance4"</literal></expr>;</expr_stmt>

            <goto pos:start="1149:13" pos:end="1149:35">goto <name pos:start="1149:18" pos:end="1149:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1151:9" pos:end="1151:15">case <expr pos:start="1151:14" pos:end="1151:14"><literal type="number" pos:start="1151:14" pos:end="1151:14">5</literal></expr>:</case>

<comment type="line" pos:start="1153:1" pos:end="1153:48">//            gen_helper_mfc0_performance5(arg);</comment>

            <expr_stmt pos:start="1155:13" pos:end="1155:32"><expr pos:start="1155:13" pos:end="1155:31"><name pos:start="1155:13" pos:end="1155:14">rn</name> <operator pos:start="1155:16" pos:end="1155:16">=</operator> <literal type="string" pos:start="1155:18" pos:end="1155:31">"Performance5"</literal></expr>;</expr_stmt>

            <goto pos:start="1157:13" pos:end="1157:35">goto <name pos:start="1157:18" pos:end="1157:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1159:9" pos:end="1159:15">case <expr pos:start="1159:14" pos:end="1159:14"><literal type="number" pos:start="1159:14" pos:end="1159:14">6</literal></expr>:</case>

<comment type="line" pos:start="1161:1" pos:end="1161:48">//            gen_helper_mfc0_performance6(arg);</comment>

            <expr_stmt pos:start="1163:13" pos:end="1163:32"><expr pos:start="1163:13" pos:end="1163:31"><name pos:start="1163:13" pos:end="1163:14">rn</name> <operator pos:start="1163:16" pos:end="1163:16">=</operator> <literal type="string" pos:start="1163:18" pos:end="1163:31">"Performance6"</literal></expr>;</expr_stmt>

            <goto pos:start="1165:13" pos:end="1165:35">goto <name pos:start="1165:18" pos:end="1165:34">cp0_unimplemented</name>;</goto>

        <case pos:start="1167:9" pos:end="1167:15">case <expr pos:start="1167:14" pos:end="1167:14"><literal type="number" pos:start="1167:14" pos:end="1167:14">7</literal></expr>:</case>

<comment type="line" pos:start="1169:1" pos:end="1169:48">//            gen_helper_mfc0_performance7(arg);</comment>

            <expr_stmt pos:start="1171:13" pos:end="1171:32"><expr pos:start="1171:13" pos:end="1171:31"><name pos:start="1171:13" pos:end="1171:14">rn</name> <operator pos:start="1171:16" pos:end="1171:16">=</operator> <literal type="string" pos:start="1171:18" pos:end="1171:31">"Performance7"</literal></expr>;</expr_stmt>

            <goto pos:start="1173:13" pos:end="1173:35">goto <name pos:start="1173:18" pos:end="1173:34">cp0_unimplemented</name>;</goto>

        <default pos:start="1175:9" pos:end="1175:16">default:</default>

            <goto pos:start="1177:13" pos:end="1177:35">goto <name pos:start="1177:18" pos:end="1177:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1181:9" pos:end="1181:14">break;</break>

    <case pos:start="1183:5" pos:end="1183:12">case <expr pos:start="1183:10" pos:end="1183:11"><literal type="number" pos:start="1183:10" pos:end="1183:11">26</literal></expr>:</case>

        <switch pos:start="1185:9" pos:end="1199:9">switch <condition pos:start="1185:16" pos:end="1185:20">(<expr pos:start="1185:17" pos:end="1185:19"><name pos:start="1185:17" pos:end="1185:19">sel</name></expr>)</condition> <block pos:start="1185:22" pos:end="1199:9">{<block_content pos:start="1187:9" pos:end="1197:35">

        <case pos:start="1187:9" pos:end="1187:15">case <expr pos:start="1187:14" pos:end="1187:14"><literal type="number" pos:start="1187:14" pos:end="1187:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1189:13" pos:end="1189:69"><expr pos:start="1189:13" pos:end="1189:68"><call pos:start="1189:13" pos:end="1189:68"><name pos:start="1189:13" pos:end="1189:27">gen_mfc0_load32</name><argument_list pos:start="1189:28" pos:end="1189:68">(<argument pos:start="1189:29" pos:end="1189:31"><expr pos:start="1189:29" pos:end="1189:31"><name pos:start="1189:29" pos:end="1189:31">arg</name></expr></argument>, <argument pos:start="1189:34" pos:end="1189:67"><expr pos:start="1189:34" pos:end="1189:67"><call pos:start="1189:34" pos:end="1189:67"><name pos:start="1189:34" pos:end="1189:41">offsetof</name><argument_list pos:start="1189:42" pos:end="1189:67">(<argument pos:start="1189:43" pos:end="1189:54"><expr pos:start="1189:43" pos:end="1189:54"><name pos:start="1189:43" pos:end="1189:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1189:57" pos:end="1189:66"><expr pos:start="1189:57" pos:end="1189:66"><name pos:start="1189:57" pos:end="1189:66">CP0_ErrCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1191:13" pos:end="1191:26"><expr pos:start="1191:13" pos:end="1191:25"><name pos:start="1191:13" pos:end="1191:14">rn</name> <operator pos:start="1191:16" pos:end="1191:16">=</operator> <literal type="string" pos:start="1191:18" pos:end="1191:25">"ErrCtl"</literal></expr>;</expr_stmt>

            <break pos:start="1193:13" pos:end="1193:18">break;</break>

        <default pos:start="1195:9" pos:end="1195:16">default:</default>

            <goto pos:start="1197:13" pos:end="1197:35">goto <name pos:start="1197:18" pos:end="1197:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1201:9" pos:end="1201:14">break;</break>

    <case pos:start="1203:5" pos:end="1203:12">case <expr pos:start="1203:10" pos:end="1203:11"><literal type="number" pos:start="1203:10" pos:end="1203:11">27</literal></expr>:</case>

        <switch pos:start="1205:9" pos:end="1219:9">switch <condition pos:start="1205:16" pos:end="1205:20">(<expr pos:start="1205:17" pos:end="1205:19"><name pos:start="1205:17" pos:end="1205:19">sel</name></expr>)</condition> <block pos:start="1205:22" pos:end="1219:9">{<block_content pos:start="1207:9" pos:end="1217:35">

        <case pos:start="1207:9" pos:end="1207:21">case <expr pos:start="1207:14" pos:end="1207:20"><literal type="number" pos:start="1207:14" pos:end="1207:14">0</literal> <operator pos:start="1207:16" pos:end="1207:18">...</operator> <literal type="number" pos:start="1207:20" pos:end="1207:20">3</literal></expr>:</case>

            <expr_stmt pos:start="1209:13" pos:end="1209:36"><expr pos:start="1209:13" pos:end="1209:35"><call pos:start="1209:13" pos:end="1209:35"><name pos:start="1209:13" pos:end="1209:27">tcg_gen_movi_tl</name><argument_list pos:start="1209:28" pos:end="1209:35">(<argument pos:start="1209:29" pos:end="1209:31"><expr pos:start="1209:29" pos:end="1209:31"><name pos:start="1209:29" pos:end="1209:31">arg</name></expr></argument>, <argument pos:start="1209:34" pos:end="1209:34"><expr pos:start="1209:34" pos:end="1209:34"><literal type="number" pos:start="1209:34" pos:end="1209:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1209:38" pos:end="1209:56">/* unimplemented */</comment>

            <expr_stmt pos:start="1211:13" pos:end="1211:28"><expr pos:start="1211:13" pos:end="1211:27"><name pos:start="1211:13" pos:end="1211:14">rn</name> <operator pos:start="1211:16" pos:end="1211:16">=</operator> <literal type="string" pos:start="1211:18" pos:end="1211:27">"CacheErr"</literal></expr>;</expr_stmt>

            <break pos:start="1213:13" pos:end="1213:18">break;</break>

        <default pos:start="1215:9" pos:end="1215:16">default:</default>

            <goto pos:start="1217:13" pos:end="1217:35">goto <name pos:start="1217:18" pos:end="1217:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1221:9" pos:end="1221:14">break;</break>

    <case pos:start="1223:5" pos:end="1223:12">case <expr pos:start="1223:10" pos:end="1223:11"><literal type="number" pos:start="1223:10" pos:end="1223:11">28</literal></expr>:</case>

        <switch pos:start="1225:9" pos:end="1269:9">switch <condition pos:start="1225:16" pos:end="1225:20">(<expr pos:start="1225:17" pos:end="1225:19"><name pos:start="1225:17" pos:end="1225:19">sel</name></expr>)</condition> <block pos:start="1225:22" pos:end="1269:9">{<block_content pos:start="1227:9" pos:end="1267:35">

        <case pos:start="1227:9" pos:end="1227:15">case <expr pos:start="1227:14" pos:end="1227:14"><literal type="number" pos:start="1227:14" pos:end="1227:14">0</literal></expr>:</case>

        <case pos:start="1229:9" pos:end="1229:15">case <expr pos:start="1229:14" pos:end="1229:14"><literal type="number" pos:start="1229:14" pos:end="1229:14">2</literal></expr>:</case>

        <case pos:start="1231:9" pos:end="1231:15">case <expr pos:start="1231:14" pos:end="1231:14"><literal type="number" pos:start="1231:14" pos:end="1231:14">4</literal></expr>:</case>

        <case pos:start="1233:9" pos:end="1233:15">case <expr pos:start="1233:14" pos:end="1233:14"><literal type="number" pos:start="1233:14" pos:end="1233:14">6</literal></expr>:</case>

            <block pos:start="1235:13" pos:end="1245:13">{<block_content pos:start="1237:17" pos:end="1243:39">

                <decl_stmt pos:start="1237:17" pos:end="1237:50"><decl pos:start="1237:17" pos:end="1237:49"><type pos:start="1237:17" pos:end="1237:24"><name pos:start="1237:17" pos:end="1237:24">TCGv_i64</name></type> <name pos:start="1237:26" pos:end="1237:28">tmp</name> <init pos:start="1237:30" pos:end="1237:49">= <expr pos:start="1237:32" pos:end="1237:49"><call pos:start="1237:32" pos:end="1237:49"><name pos:start="1237:32" pos:end="1237:47">tcg_temp_new_i64</name><argument_list pos:start="1237:48" pos:end="1237:49">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="1239:17" pos:end="1239:80"><expr pos:start="1239:17" pos:end="1239:79"><call pos:start="1239:17" pos:end="1239:79"><name pos:start="1239:17" pos:end="1239:30">tcg_gen_ld_i64</name><argument_list pos:start="1239:31" pos:end="1239:79">(<argument pos:start="1239:32" pos:end="1239:34"><expr pos:start="1239:32" pos:end="1239:34"><name pos:start="1239:32" pos:end="1239:34">tmp</name></expr></argument>, <argument pos:start="1239:37" pos:end="1239:43"><expr pos:start="1239:37" pos:end="1239:43"><name pos:start="1239:37" pos:end="1239:43">cpu_env</name></expr></argument>, <argument pos:start="1239:46" pos:end="1239:78"><expr pos:start="1239:46" pos:end="1239:78"><call pos:start="1239:46" pos:end="1239:78"><name pos:start="1239:46" pos:end="1239:53">offsetof</name><argument_list pos:start="1239:54" pos:end="1239:78">(<argument pos:start="1239:55" pos:end="1239:66"><expr pos:start="1239:55" pos:end="1239:66"><name pos:start="1239:55" pos:end="1239:66">CPUMIPSState</name></expr></argument>, <argument pos:start="1239:69" pos:end="1239:77"><expr pos:start="1239:69" pos:end="1239:77"><name pos:start="1239:69" pos:end="1239:77">CP0_TagLo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1241:17" pos:end="1241:41"><expr pos:start="1241:17" pos:end="1241:40"><call pos:start="1241:17" pos:end="1241:40"><name pos:start="1241:17" pos:end="1241:30">gen_move_low32</name><argument_list pos:start="1241:31" pos:end="1241:40">(<argument pos:start="1241:32" pos:end="1241:34"><expr pos:start="1241:32" pos:end="1241:34"><name pos:start="1241:32" pos:end="1241:34">arg</name></expr></argument>, <argument pos:start="1241:37" pos:end="1241:39"><expr pos:start="1241:37" pos:end="1241:39"><name pos:start="1241:37" pos:end="1241:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1243:17" pos:end="1243:39"><expr pos:start="1243:17" pos:end="1243:38"><call pos:start="1243:17" pos:end="1243:38"><name pos:start="1243:17" pos:end="1243:33">tcg_temp_free_i64</name><argument_list pos:start="1243:34" pos:end="1243:38">(<argument pos:start="1243:35" pos:end="1243:37"><expr pos:start="1243:35" pos:end="1243:37"><name pos:start="1243:35" pos:end="1243:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="1247:13" pos:end="1247:25"><expr pos:start="1247:13" pos:end="1247:24"><name pos:start="1247:13" pos:end="1247:14">rn</name> <operator pos:start="1247:16" pos:end="1247:16">=</operator> <literal type="string" pos:start="1247:18" pos:end="1247:24">"TagLo"</literal></expr>;</expr_stmt>

            <break pos:start="1249:13" pos:end="1249:18">break;</break>

        <case pos:start="1251:9" pos:end="1251:15">case <expr pos:start="1251:14" pos:end="1251:14"><literal type="number" pos:start="1251:14" pos:end="1251:14">1</literal></expr>:</case>

        <case pos:start="1253:9" pos:end="1253:15">case <expr pos:start="1253:14" pos:end="1253:14"><literal type="number" pos:start="1253:14" pos:end="1253:14">3</literal></expr>:</case>

        <case pos:start="1255:9" pos:end="1255:15">case <expr pos:start="1255:14" pos:end="1255:14"><literal type="number" pos:start="1255:14" pos:end="1255:14">5</literal></expr>:</case>

        <case pos:start="1257:9" pos:end="1257:15">case <expr pos:start="1257:14" pos:end="1257:14"><literal type="number" pos:start="1257:14" pos:end="1257:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1259:13" pos:end="1259:69"><expr pos:start="1259:13" pos:end="1259:68"><call pos:start="1259:13" pos:end="1259:68"><name pos:start="1259:13" pos:end="1259:27">gen_mfc0_load32</name><argument_list pos:start="1259:28" pos:end="1259:68">(<argument pos:start="1259:29" pos:end="1259:31"><expr pos:start="1259:29" pos:end="1259:31"><name pos:start="1259:29" pos:end="1259:31">arg</name></expr></argument>, <argument pos:start="1259:34" pos:end="1259:67"><expr pos:start="1259:34" pos:end="1259:67"><call pos:start="1259:34" pos:end="1259:67"><name pos:start="1259:34" pos:end="1259:41">offsetof</name><argument_list pos:start="1259:42" pos:end="1259:67">(<argument pos:start="1259:43" pos:end="1259:54"><expr pos:start="1259:43" pos:end="1259:54"><name pos:start="1259:43" pos:end="1259:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1259:57" pos:end="1259:66"><expr pos:start="1259:57" pos:end="1259:66"><name pos:start="1259:57" pos:end="1259:66">CP0_DataLo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1261:13" pos:end="1261:26"><expr pos:start="1261:13" pos:end="1261:25"><name pos:start="1261:13" pos:end="1261:14">rn</name> <operator pos:start="1261:16" pos:end="1261:16">=</operator> <literal type="string" pos:start="1261:18" pos:end="1261:25">"DataLo"</literal></expr>;</expr_stmt>

            <break pos:start="1263:13" pos:end="1263:18">break;</break>

        <default pos:start="1265:9" pos:end="1265:16">default:</default>

            <goto pos:start="1267:13" pos:end="1267:35">goto <name pos:start="1267:18" pos:end="1267:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1271:9" pos:end="1271:14">break;</break>

    <case pos:start="1273:5" pos:end="1273:12">case <expr pos:start="1273:10" pos:end="1273:11"><literal type="number" pos:start="1273:10" pos:end="1273:11">29</literal></expr>:</case>

        <switch pos:start="1275:9" pos:end="1309:9">switch <condition pos:start="1275:16" pos:end="1275:20">(<expr pos:start="1275:17" pos:end="1275:19"><name pos:start="1275:17" pos:end="1275:19">sel</name></expr>)</condition> <block pos:start="1275:22" pos:end="1309:9">{<block_content pos:start="1277:9" pos:end="1307:35">

        <case pos:start="1277:9" pos:end="1277:15">case <expr pos:start="1277:14" pos:end="1277:14"><literal type="number" pos:start="1277:14" pos:end="1277:14">0</literal></expr>:</case>

        <case pos:start="1279:9" pos:end="1279:15">case <expr pos:start="1279:14" pos:end="1279:14"><literal type="number" pos:start="1279:14" pos:end="1279:14">2</literal></expr>:</case>

        <case pos:start="1281:9" pos:end="1281:15">case <expr pos:start="1281:14" pos:end="1281:14"><literal type="number" pos:start="1281:14" pos:end="1281:14">4</literal></expr>:</case>

        <case pos:start="1283:9" pos:end="1283:15">case <expr pos:start="1283:14" pos:end="1283:14"><literal type="number" pos:start="1283:14" pos:end="1283:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1285:13" pos:end="1285:68"><expr pos:start="1285:13" pos:end="1285:67"><call pos:start="1285:13" pos:end="1285:67"><name pos:start="1285:13" pos:end="1285:27">gen_mfc0_load32</name><argument_list pos:start="1285:28" pos:end="1285:67">(<argument pos:start="1285:29" pos:end="1285:31"><expr pos:start="1285:29" pos:end="1285:31"><name pos:start="1285:29" pos:end="1285:31">arg</name></expr></argument>, <argument pos:start="1285:34" pos:end="1285:66"><expr pos:start="1285:34" pos:end="1285:66"><call pos:start="1285:34" pos:end="1285:66"><name pos:start="1285:34" pos:end="1285:41">offsetof</name><argument_list pos:start="1285:42" pos:end="1285:66">(<argument pos:start="1285:43" pos:end="1285:54"><expr pos:start="1285:43" pos:end="1285:54"><name pos:start="1285:43" pos:end="1285:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1285:57" pos:end="1285:65"><expr pos:start="1285:57" pos:end="1285:65"><name pos:start="1285:57" pos:end="1285:65">CP0_TagHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1287:13" pos:end="1287:25"><expr pos:start="1287:13" pos:end="1287:24"><name pos:start="1287:13" pos:end="1287:14">rn</name> <operator pos:start="1287:16" pos:end="1287:16">=</operator> <literal type="string" pos:start="1287:18" pos:end="1287:24">"TagHi"</literal></expr>;</expr_stmt>

            <break pos:start="1289:13" pos:end="1289:18">break;</break>

        <case pos:start="1291:9" pos:end="1291:15">case <expr pos:start="1291:14" pos:end="1291:14"><literal type="number" pos:start="1291:14" pos:end="1291:14">1</literal></expr>:</case>

        <case pos:start="1293:9" pos:end="1293:15">case <expr pos:start="1293:14" pos:end="1293:14"><literal type="number" pos:start="1293:14" pos:end="1293:14">3</literal></expr>:</case>

        <case pos:start="1295:9" pos:end="1295:15">case <expr pos:start="1295:14" pos:end="1295:14"><literal type="number" pos:start="1295:14" pos:end="1295:14">5</literal></expr>:</case>

        <case pos:start="1297:9" pos:end="1297:15">case <expr pos:start="1297:14" pos:end="1297:14"><literal type="number" pos:start="1297:14" pos:end="1297:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1299:13" pos:end="1299:69"><expr pos:start="1299:13" pos:end="1299:68"><call pos:start="1299:13" pos:end="1299:68"><name pos:start="1299:13" pos:end="1299:27">gen_mfc0_load32</name><argument_list pos:start="1299:28" pos:end="1299:68">(<argument pos:start="1299:29" pos:end="1299:31"><expr pos:start="1299:29" pos:end="1299:31"><name pos:start="1299:29" pos:end="1299:31">arg</name></expr></argument>, <argument pos:start="1299:34" pos:end="1299:67"><expr pos:start="1299:34" pos:end="1299:67"><call pos:start="1299:34" pos:end="1299:67"><name pos:start="1299:34" pos:end="1299:41">offsetof</name><argument_list pos:start="1299:42" pos:end="1299:67">(<argument pos:start="1299:43" pos:end="1299:54"><expr pos:start="1299:43" pos:end="1299:54"><name pos:start="1299:43" pos:end="1299:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1299:57" pos:end="1299:66"><expr pos:start="1299:57" pos:end="1299:66"><name pos:start="1299:57" pos:end="1299:66">CP0_DataHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1301:13" pos:end="1301:26"><expr pos:start="1301:13" pos:end="1301:25"><name pos:start="1301:13" pos:end="1301:14">rn</name> <operator pos:start="1301:16" pos:end="1301:16">=</operator> <literal type="string" pos:start="1301:18" pos:end="1301:25">"DataHi"</literal></expr>;</expr_stmt>

            <break pos:start="1303:13" pos:end="1303:18">break;</break>

        <default pos:start="1305:9" pos:end="1305:16">default:</default>

            <goto pos:start="1307:13" pos:end="1307:35">goto <name pos:start="1307:18" pos:end="1307:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1311:9" pos:end="1311:14">break;</break>

    <case pos:start="1313:5" pos:end="1313:12">case <expr pos:start="1313:10" pos:end="1313:11"><literal type="number" pos:start="1313:10" pos:end="1313:11">30</literal></expr>:</case>

        <switch pos:start="1315:9" pos:end="1331:9">switch <condition pos:start="1315:16" pos:end="1315:20">(<expr pos:start="1315:17" pos:end="1315:19"><name pos:start="1315:17" pos:end="1315:19">sel</name></expr>)</condition> <block pos:start="1315:22" pos:end="1331:9">{<block_content pos:start="1317:9" pos:end="1329:35">

        <case pos:start="1317:9" pos:end="1317:15">case <expr pos:start="1317:14" pos:end="1317:14"><literal type="number" pos:start="1317:14" pos:end="1317:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1319:13" pos:end="1319:78"><expr pos:start="1319:13" pos:end="1319:77"><call pos:start="1319:13" pos:end="1319:77"><name pos:start="1319:13" pos:end="1319:25">tcg_gen_ld_tl</name><argument_list pos:start="1319:26" pos:end="1319:77">(<argument pos:start="1319:27" pos:end="1319:29"><expr pos:start="1319:27" pos:end="1319:29"><name pos:start="1319:27" pos:end="1319:29">arg</name></expr></argument>, <argument pos:start="1319:32" pos:end="1319:38"><expr pos:start="1319:32" pos:end="1319:38"><name pos:start="1319:32" pos:end="1319:38">cpu_env</name></expr></argument>, <argument pos:start="1319:41" pos:end="1319:76"><expr pos:start="1319:41" pos:end="1319:76"><call pos:start="1319:41" pos:end="1319:76"><name pos:start="1319:41" pos:end="1319:48">offsetof</name><argument_list pos:start="1319:49" pos:end="1319:76">(<argument pos:start="1319:50" pos:end="1319:61"><expr pos:start="1319:50" pos:end="1319:61"><name pos:start="1319:50" pos:end="1319:61">CPUMIPSState</name></expr></argument>, <argument pos:start="1319:64" pos:end="1319:75"><expr pos:start="1319:64" pos:end="1319:75"><name pos:start="1319:64" pos:end="1319:75">CP0_ErrorEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1321:13" pos:end="1321:40"><expr pos:start="1321:13" pos:end="1321:39"><call pos:start="1321:13" pos:end="1321:39"><name pos:start="1321:13" pos:end="1321:29">tcg_gen_ext32s_tl</name><argument_list pos:start="1321:30" pos:end="1321:39">(<argument pos:start="1321:31" pos:end="1321:33"><expr pos:start="1321:31" pos:end="1321:33"><name pos:start="1321:31" pos:end="1321:33">arg</name></expr></argument>, <argument pos:start="1321:36" pos:end="1321:38"><expr pos:start="1321:36" pos:end="1321:38"><name pos:start="1321:36" pos:end="1321:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1323:13" pos:end="1323:28"><expr pos:start="1323:13" pos:end="1323:27"><name pos:start="1323:13" pos:end="1323:14">rn</name> <operator pos:start="1323:16" pos:end="1323:16">=</operator> <literal type="string" pos:start="1323:18" pos:end="1323:27">"ErrorEPC"</literal></expr>;</expr_stmt>

            <break pos:start="1325:13" pos:end="1325:18">break;</break>

        <default pos:start="1327:9" pos:end="1327:16">default:</default>

            <goto pos:start="1329:13" pos:end="1329:35">goto <name pos:start="1329:18" pos:end="1329:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1333:9" pos:end="1333:14">break;</break>

    <case pos:start="1335:5" pos:end="1335:12">case <expr pos:start="1335:10" pos:end="1335:11"><literal type="number" pos:start="1335:10" pos:end="1335:11">31</literal></expr>:</case>

        <switch pos:start="1337:9" pos:end="1367:9">switch <condition pos:start="1337:16" pos:end="1337:20">(<expr pos:start="1337:17" pos:end="1337:19"><name pos:start="1337:17" pos:end="1337:19">sel</name></expr>)</condition> <block pos:start="1337:22" pos:end="1367:9">{<block_content pos:start="1339:9" pos:end="1365:35">

        <case pos:start="1339:9" pos:end="1339:15">case <expr pos:start="1339:14" pos:end="1339:14"><literal type="number" pos:start="1339:14" pos:end="1339:14">0</literal></expr>:</case>

            <comment type="block" pos:start="1341:13" pos:end="1341:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="1343:13" pos:end="1343:69"><expr pos:start="1343:13" pos:end="1343:68"><call pos:start="1343:13" pos:end="1343:68"><name pos:start="1343:13" pos:end="1343:27">gen_mfc0_load32</name><argument_list pos:start="1343:28" pos:end="1343:68">(<argument pos:start="1343:29" pos:end="1343:31"><expr pos:start="1343:29" pos:end="1343:31"><name pos:start="1343:29" pos:end="1343:31">arg</name></expr></argument>, <argument pos:start="1343:34" pos:end="1343:67"><expr pos:start="1343:34" pos:end="1343:67"><call pos:start="1343:34" pos:end="1343:67"><name pos:start="1343:34" pos:end="1343:41">offsetof</name><argument_list pos:start="1343:42" pos:end="1343:67">(<argument pos:start="1343:43" pos:end="1343:54"><expr pos:start="1343:43" pos:end="1343:54"><name pos:start="1343:43" pos:end="1343:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1343:57" pos:end="1343:66"><expr pos:start="1343:57" pos:end="1343:66"><name pos:start="1343:57" pos:end="1343:66">CP0_DESAVE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1345:13" pos:end="1345:26"><expr pos:start="1345:13" pos:end="1345:25"><name pos:start="1345:13" pos:end="1345:14">rn</name> <operator pos:start="1345:16" pos:end="1345:16">=</operator> <literal type="string" pos:start="1345:18" pos:end="1345:25">"DESAVE"</literal></expr>;</expr_stmt>

            <break pos:start="1347:13" pos:end="1347:18">break;</break>

        <case pos:start="1349:9" pos:end="1349:21">case <expr pos:start="1349:14" pos:end="1349:20"><literal type="number" pos:start="1349:14" pos:end="1349:14">2</literal> <operator pos:start="1349:16" pos:end="1349:18">...</operator> <literal type="number" pos:start="1349:20" pos:end="1349:20">7</literal></expr>:</case>

            <expr_stmt pos:start="1351:13" pos:end="1351:51"><expr pos:start="1351:13" pos:end="1351:50"><call pos:start="1351:13" pos:end="1351:50"><name pos:start="1351:13" pos:end="1351:21">CP0_CHECK</name><argument_list pos:start="1351:22" pos:end="1351:50">(<argument pos:start="1351:23" pos:end="1351:49"><expr pos:start="1351:23" pos:end="1351:49"><name pos:start="1351:23" pos:end="1351:36"><name pos:start="1351:23" pos:end="1351:25">ctx</name><operator pos:start="1351:26" pos:end="1351:27">-&gt;</operator><name pos:start="1351:28" pos:end="1351:36">kscrexist</name></name> <operator pos:start="1351:38" pos:end="1351:38">&amp;</operator> <operator pos:start="1351:40" pos:end="1351:40">(</operator><literal type="number" pos:start="1351:41" pos:end="1351:41">1</literal> <operator pos:start="1351:43" pos:end="1351:44">&lt;&lt;</operator> <name pos:start="1351:46" pos:end="1351:48">sel</name><operator pos:start="1351:49" pos:end="1351:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1353:13" pos:end="1355:71"><expr pos:start="1353:13" pos:end="1355:70"><call pos:start="1353:13" pos:end="1355:70"><name pos:start="1353:13" pos:end="1353:25">tcg_gen_ld_tl</name><argument_list pos:start="1353:26" pos:end="1355:70">(<argument pos:start="1353:27" pos:end="1353:29"><expr pos:start="1353:27" pos:end="1353:29"><name pos:start="1353:27" pos:end="1353:29">arg</name></expr></argument>, <argument pos:start="1353:32" pos:end="1353:38"><expr pos:start="1353:32" pos:end="1353:38"><name pos:start="1353:32" pos:end="1353:38">cpu_env</name></expr></argument>,

                          <argument pos:start="1355:27" pos:end="1355:69"><expr pos:start="1355:27" pos:end="1355:69"><call pos:start="1355:27" pos:end="1355:69"><name pos:start="1355:27" pos:end="1355:34">offsetof</name><argument_list pos:start="1355:35" pos:end="1355:69">(<argument pos:start="1355:36" pos:end="1355:47"><expr pos:start="1355:36" pos:end="1355:47"><name pos:start="1355:36" pos:end="1355:47">CPUMIPSState</name></expr></argument>, <argument pos:start="1355:50" pos:end="1355:68"><expr pos:start="1355:50" pos:end="1355:68"><name pos:start="1355:50" pos:end="1355:68"><name pos:start="1355:50" pos:end="1355:61">CP0_KScratch</name><index pos:start="1355:62" pos:end="1355:68">[<expr pos:start="1355:63" pos:end="1355:67"><name pos:start="1355:63" pos:end="1355:65">sel</name><operator pos:start="1355:66" pos:end="1355:66">-</operator><literal type="number" pos:start="1355:67" pos:end="1355:67">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1357:13" pos:end="1357:40"><expr pos:start="1357:13" pos:end="1357:39"><call pos:start="1357:13" pos:end="1357:39"><name pos:start="1357:13" pos:end="1357:29">tcg_gen_ext32s_tl</name><argument_list pos:start="1357:30" pos:end="1357:39">(<argument pos:start="1357:31" pos:end="1357:33"><expr pos:start="1357:31" pos:end="1357:33"><name pos:start="1357:31" pos:end="1357:33">arg</name></expr></argument>, <argument pos:start="1357:36" pos:end="1357:38"><expr pos:start="1357:36" pos:end="1357:38"><name pos:start="1357:36" pos:end="1357:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1359:13" pos:end="1359:28"><expr pos:start="1359:13" pos:end="1359:27"><name pos:start="1359:13" pos:end="1359:14">rn</name> <operator pos:start="1359:16" pos:end="1359:16">=</operator> <literal type="string" pos:start="1359:18" pos:end="1359:27">"KScratch"</literal></expr>;</expr_stmt>

            <break pos:start="1361:13" pos:end="1361:18">break;</break>

        <default pos:start="1363:9" pos:end="1363:16">default:</default>

            <goto pos:start="1365:13" pos:end="1365:35">goto <name pos:start="1365:18" pos:end="1365:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1369:9" pos:end="1369:14">break;</break>

    <default pos:start="1371:5" pos:end="1371:12">default:</default>

       <goto pos:start="1373:8" pos:end="1373:30">goto <name pos:start="1373:13" pos:end="1373:29">cp0_unimplemented</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="1377:5" pos:end="1377:50"><expr pos:start="1377:5" pos:end="1377:49"><call pos:start="1377:5" pos:end="1377:49"><name pos:start="1377:5" pos:end="1377:27">trace_mips_translate_c0</name><argument_list pos:start="1377:28" pos:end="1377:49">(<argument pos:start="1377:29" pos:end="1377:34"><expr pos:start="1377:29" pos:end="1377:34"><literal type="string" pos:start="1377:29" pos:end="1377:34">"mfc0"</literal></expr></argument>, <argument pos:start="1377:37" pos:end="1377:38"><expr pos:start="1377:37" pos:end="1377:38"><name pos:start="1377:37" pos:end="1377:38">rn</name></expr></argument>, <argument pos:start="1377:41" pos:end="1377:43"><expr pos:start="1377:41" pos:end="1377:43"><name pos:start="1377:41" pos:end="1377:43">reg</name></expr></argument>, <argument pos:start="1377:46" pos:end="1377:48"><expr pos:start="1377:46" pos:end="1377:48"><name pos:start="1377:46" pos:end="1377:48">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1379:5" pos:end="1379:11">return;</return>



<label pos:start="1383:1" pos:end="1383:18"><name pos:start="1383:1" pos:end="1383:17">cp0_unimplemented</name>:</label>

    <expr_stmt pos:start="1385:5" pos:end="1385:72"><expr pos:start="1385:5" pos:end="1385:71"><call pos:start="1385:5" pos:end="1385:71"><name pos:start="1385:5" pos:end="1385:17">qemu_log_mask</name><argument_list pos:start="1385:18" pos:end="1385:71">(<argument pos:start="1385:19" pos:end="1385:27"><expr pos:start="1385:19" pos:end="1385:27"><name pos:start="1385:19" pos:end="1385:27">LOG_UNIMP</name></expr></argument>, <argument pos:start="1385:30" pos:end="1385:56"><expr pos:start="1385:30" pos:end="1385:56"><literal type="string" pos:start="1385:30" pos:end="1385:56">"mfc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1385:59" pos:end="1385:60"><expr pos:start="1385:59" pos:end="1385:60"><name pos:start="1385:59" pos:end="1385:60">rn</name></expr></argument>, <argument pos:start="1385:63" pos:end="1385:65"><expr pos:start="1385:63" pos:end="1385:65"><name pos:start="1385:63" pos:end="1385:65">reg</name></expr></argument>, <argument pos:start="1385:68" pos:end="1385:70"><expr pos:start="1385:68" pos:end="1385:70"><name pos:start="1385:68" pos:end="1385:70">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1387:5" pos:end="1387:37"><expr pos:start="1387:5" pos:end="1387:36"><call pos:start="1387:5" pos:end="1387:36"><name pos:start="1387:5" pos:end="1387:26">gen_mfc0_unimplemented</name><argument_list pos:start="1387:27" pos:end="1387:36">(<argument pos:start="1387:28" pos:end="1387:30"><expr pos:start="1387:28" pos:end="1387:30"><name pos:start="1387:28" pos:end="1387:30">ctx</name></expr></argument>, <argument pos:start="1387:33" pos:end="1387:35"><expr pos:start="1387:33" pos:end="1387:35"><name pos:start="1387:33" pos:end="1387:35">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
