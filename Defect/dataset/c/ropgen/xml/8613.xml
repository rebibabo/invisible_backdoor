<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8613.c" pos:tabs="8"><function pos:start="1:1" pos:end="48:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">baum_chr_open</name><parameter_list pos:start="1:26" pos:end="7:39">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:33">Chardev</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">chr</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:49"><decl pos:start="3:27" pos:end="3:49"><type pos:start="3:27" pos:end="3:49"><name pos:start="3:27" pos:end="3:40">ChardevBackend</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:49">backend</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:41"><decl pos:start="5:27" pos:end="5:41"><type pos:start="5:27" pos:end="5:41"><name pos:start="5:27" pos:end="5:30">bool</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:41">be_opened</name></decl></parameter>,

                          <parameter pos:start="7:27" pos:end="7:38"><decl pos:start="7:27" pos:end="7:38"><type pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:31">Error</name> <modifier pos:start="7:33" pos:end="7:33">*</modifier><modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:38">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="48:1">{<block_content pos:start="11:5" pos:end="46:68">

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">BaumChardev</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:21">baum</name> <init pos:start="11:23" pos:end="11:41">= <expr pos:start="11:25" pos:end="11:41"><call pos:start="11:25" pos:end="11:41"><name pos:start="11:25" pos:end="11:36">BAUM_CHARDEV</name><argument_list pos:start="11:37" pos:end="11:41">(<argument pos:start="11:38" pos:end="11:40"><expr pos:start="11:38" pos:end="11:40"><name pos:start="11:38" pos:end="11:40">chr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">brlapi_handle_t</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:27">handle</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:10">handle</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:46"><name pos:start="17:14" pos:end="17:22">g_malloc0</name><argument_list pos:start="17:23" pos:end="17:46">(<argument pos:start="17:24" pos:end="17:45"><expr pos:start="17:24" pos:end="17:45"><call pos:start="17:24" pos:end="17:45"><name pos:start="17:24" pos:end="17:43">brlapi_getHandleSize</name><argument_list pos:start="17:44" pos:end="17:45">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:8">baum</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:16">brlapi</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:25">handle</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:65"><expr pos:start="23:5" pos:end="23:64"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:8">baum</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:19">brlapi_fd</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:64"><name pos:start="23:23" pos:end="23:44">brlapi__openConnection</name><argument_list pos:start="23:45" pos:end="23:64">(<argument pos:start="23:46" pos:end="23:51"><expr pos:start="23:46" pos:end="23:51"><name pos:start="23:46" pos:end="23:51">handle</name></expr></argument>, <argument pos:start="23:54" pos:end="23:57"><expr pos:start="23:54" pos:end="23:57"><name pos:start="23:54" pos:end="23:57">NULL</name></expr></argument>, <argument pos:start="23:60" pos:end="23:63"><expr pos:start="23:60" pos:end="23:63"><name pos:start="23:60" pos:end="23:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="36:5"><if pos:start="25:5" pos:end="36:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:12">baum</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:23">brlapi_fd</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <operator pos:start="25:28" pos:end="25:28">-</operator><literal type="number" pos:start="25:29" pos:end="25:29">1</literal></expr>)</condition> <block pos:start="25:32" pos:end="36:5">{<block_content pos:start="27:9" pos:end="34:15">

        <expr_stmt pos:start="27:9" pos:end="29:61"><expr pos:start="27:9" pos:end="29:60"><call pos:start="27:9" pos:end="29:60"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="29:60">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>, <argument pos:start="27:26" pos:end="27:53"><expr pos:start="27:26" pos:end="27:53"><literal type="string" pos:start="27:26" pos:end="27:53">"brlapi__openConnection: %s"</literal></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:59"><expr pos:start="29:20" pos:end="29:59"><call pos:start="29:20" pos:end="29:59"><name pos:start="29:20" pos:end="29:34">brlapi_strerror</name><argument_list pos:start="29:35" pos:end="29:59">(<argument pos:start="29:36" pos:end="29:58"><expr pos:start="29:36" pos:end="29:58"><call pos:start="29:36" pos:end="29:58"><name pos:start="29:36" pos:end="29:56">brlapi_error_location</name><argument_list pos:start="29:57" pos:end="29:58">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><call pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:14">g_free</name><argument_list pos:start="31:15" pos:end="31:22">(<argument pos:start="31:16" pos:end="31:21"><expr pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:21">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="34:9" pos:end="34:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="38:5" pos:end="38:28"><expr pos:start="38:5" pos:end="38:27"><name pos:start="38:5" pos:end="38:23"><name pos:start="38:5" pos:end="38:8">baum</name><operator pos:start="38:9" pos:end="38:10">-&gt;</operator><name pos:start="38:11" pos:end="38:23">deferred_init</name></name> <operator pos:start="38:25" pos:end="38:25">=</operator> <literal type="number" pos:start="38:27" pos:end="38:27">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="42:5" pos:end="42:92"><expr pos:start="42:5" pos:end="42:91"><name pos:start="42:5" pos:end="42:25"><name pos:start="42:5" pos:end="42:8">baum</name><operator pos:start="42:9" pos:end="42:10">-&gt;</operator><name pos:start="42:11" pos:end="42:25">cellCount_timer</name></name> <operator pos:start="42:27" pos:end="42:27">=</operator> <call pos:start="42:29" pos:end="42:91"><name pos:start="42:29" pos:end="42:40">timer_new_ns</name><argument_list pos:start="42:41" pos:end="42:91">(<argument pos:start="42:42" pos:end="42:59"><expr pos:start="42:42" pos:end="42:59"><name pos:start="42:42" pos:end="42:59">QEMU_CLOCK_VIRTUAL</name></expr></argument>, <argument pos:start="42:62" pos:end="42:84"><expr pos:start="42:62" pos:end="42:84"><name pos:start="42:62" pos:end="42:84">baum_cellCount_timer_cb</name></expr></argument>, <argument pos:start="42:87" pos:end="42:90"><expr pos:start="42:87" pos:end="42:90"><name pos:start="42:87" pos:end="42:90">baum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="46:5" pos:end="46:68"><expr pos:start="46:5" pos:end="46:67"><call pos:start="46:5" pos:end="46:67"><name pos:start="46:5" pos:end="46:23">qemu_set_fd_handler</name><argument_list pos:start="46:24" pos:end="46:67">(<argument pos:start="46:25" pos:end="46:39"><expr pos:start="46:25" pos:end="46:39"><name pos:start="46:25" pos:end="46:39"><name pos:start="46:25" pos:end="46:28">baum</name><operator pos:start="46:29" pos:end="46:30">-&gt;</operator><name pos:start="46:31" pos:end="46:39">brlapi_fd</name></name></expr></argument>, <argument pos:start="46:42" pos:end="46:54"><expr pos:start="46:42" pos:end="46:54"><name pos:start="46:42" pos:end="46:54">baum_chr_read</name></expr></argument>, <argument pos:start="46:57" pos:end="46:60"><expr pos:start="46:57" pos:end="46:60"><name pos:start="46:57" pos:end="46:60">NULL</name></expr></argument>, <argument pos:start="46:63" pos:end="46:66"><expr pos:start="46:63" pos:end="46:66"><name pos:start="46:63" pos:end="46:66">baum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
