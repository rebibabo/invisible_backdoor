<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22288.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">do_interrupt</name><parameter_list pos:start="1:18" pos:end="1:35">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:29">CPUARMState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:51">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">new_mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><call pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">IS_M</name><argument_list pos:start="15:13" pos:end="15:17">(<argument pos:start="15:14" pos:end="15:16"><expr pos:start="15:14" pos:end="15:16"><name pos:start="15:14" pos:end="15:16">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:20" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:30"><expr pos:start="17:9" pos:end="17:29"><call pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:24">do_interrupt_v7m</name><argument_list pos:start="17:25" pos:end="17:29">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:47">/* TODO: Vectored interrupt controller.  */</comment>

    <switch pos:start="25:5" pos:end="173:5">switch <condition pos:start="25:12" pos:end="25:33">(<expr pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:15">env</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:32">exception_index</name></name></expr>)</condition> <block pos:start="25:35" pos:end="173:5">{<block_content pos:start="27:5" pos:end="171:15">

    <case pos:start="27:5" pos:end="27:19">case <expr pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:18">EXCP_UDEF</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:16">new_mode</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:35">ARM_CPU_MODE_UND</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:12">addr</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:19">0x04</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:12">mask</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:21">CPSR_I</name></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:23"><if pos:start="35:9" pos:end="37:23">if <condition pos:start="35:12" pos:end="35:23">(<expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:15">env</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:22">thumb</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:23"><block_content pos:start="37:13" pos:end="37:23">

            <expr_stmt pos:start="37:13" pos:end="37:23"><expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:18">offset</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">2</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="39:9" pos:end="41:23">else<block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <expr_stmt pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:18">offset</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:18">case <expr pos:start="45:10" pos:end="45:17"><name pos:start="45:10" pos:end="45:17">EXCP_SWI</name></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="77:9"><if pos:start="47:9" pos:end="77:9">if <condition pos:start="47:12" pos:end="47:32">(<expr pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:31">semihosting_enabled</name></expr>)</condition> <block pos:start="47:34" pos:end="77:9">{<block_content pos:start="51:13" pos:end="75:13">

            <comment type="block" pos:start="49:13" pos:end="49:51">/* Check for semihosting interrupt.  */</comment>

            <if_stmt pos:start="51:13" pos:end="59:13"><if pos:start="51:13" pos:end="55:13">if <condition pos:start="51:16" pos:end="51:27">(<expr pos:start="51:17" pos:end="51:26"><name pos:start="51:17" pos:end="51:26"><name pos:start="51:17" pos:end="51:19">env</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:26">thumb</name></name></expr>)</condition> <block pos:start="51:29" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:59">

                <expr_stmt pos:start="53:17" pos:end="53:59"><expr pos:start="53:17" pos:end="53:58"><name pos:start="53:17" pos:end="53:20">mask</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:51"><name pos:start="53:24" pos:end="53:32">lduw_code</name><argument_list pos:start="53:33" pos:end="53:51">(<argument pos:start="53:34" pos:end="53:50"><expr pos:start="53:34" pos:end="53:50"><name pos:start="53:34" pos:end="53:46"><name pos:start="53:34" pos:end="53:36">env</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:42">regs</name><index pos:start="53:43" pos:end="53:46">[<expr pos:start="53:44" pos:end="53:45"><literal type="number" pos:start="53:44" pos:end="53:45">15</literal></expr>]</index></name> <operator pos:start="53:48" pos:end="53:48">-</operator> <literal type="number" pos:start="53:50" pos:end="53:50">2</literal></expr></argument>)</argument_list></call> <operator pos:start="53:53" pos:end="53:53">&amp;</operator> <literal type="number" pos:start="53:55" pos:end="53:58">0xff</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="55:15" pos:end="59:13">else <block pos:start="55:20" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:62">

                <expr_stmt pos:start="57:17" pos:end="57:62"><expr pos:start="57:17" pos:end="57:61"><name pos:start="57:17" pos:end="57:20">mask</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:50"><name pos:start="57:24" pos:end="57:31">ldl_code</name><argument_list pos:start="57:32" pos:end="57:50">(<argument pos:start="57:33" pos:end="57:49"><expr pos:start="57:33" pos:end="57:49"><name pos:start="57:33" pos:end="57:45"><name pos:start="57:33" pos:end="57:35">env</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:41">regs</name><index pos:start="57:42" pos:end="57:45">[<expr pos:start="57:43" pos:end="57:44"><literal type="number" pos:start="57:43" pos:end="57:44">15</literal></expr>]</index></name> <operator pos:start="57:47" pos:end="57:47">-</operator> <literal type="number" pos:start="57:49" pos:end="57:49">4</literal></expr></argument>)</argument_list></call> <operator pos:start="57:52" pos:end="57:52">&amp;</operator> <literal type="number" pos:start="57:54" pos:end="57:61">0xffffff</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="61:13" pos:end="63:41">/* Only intercept calls from privileged modes, to provide some

               semblance of security.  */</comment>

            <if_stmt pos:start="65:13" pos:end="75:13"><if pos:start="65:13" pos:end="75:13">if <condition pos:start="65:16" pos:end="69:71">(<expr pos:start="65:17" pos:end="69:70"><operator pos:start="65:17" pos:end="65:17">(</operator><operator pos:start="65:18" pos:end="65:18">(</operator><name pos:start="65:19" pos:end="65:22">mask</name> <operator pos:start="65:24" pos:end="65:25">==</operator> <literal type="number" pos:start="65:27" pos:end="65:34">0x123456</literal> <operator pos:start="65:36" pos:end="65:37">&amp;&amp;</operator> <operator pos:start="65:39" pos:end="65:39">!</operator><name pos:start="65:40" pos:end="65:49"><name pos:start="65:40" pos:end="65:42">env</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:49">thumb</name></name><operator pos:start="65:50" pos:end="65:50">)</operator>

                    <operator pos:start="67:21" pos:end="67:22">||</operator> <operator pos:start="67:24" pos:end="67:24">(</operator><name pos:start="67:25" pos:end="67:28">mask</name> <operator pos:start="67:30" pos:end="67:31">==</operator> <literal type="number" pos:start="67:33" pos:end="67:36">0xab</literal> <operator pos:start="67:38" pos:end="67:39">&amp;&amp;</operator> <name pos:start="67:41" pos:end="67:50"><name pos:start="67:41" pos:end="67:43">env</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:50">thumb</name></name><operator pos:start="67:51" pos:end="67:51">)</operator><operator pos:start="67:52" pos:end="67:52">)</operator>

                  <operator pos:start="69:19" pos:end="69:20">&amp;&amp;</operator> <operator pos:start="69:22" pos:end="69:22">(</operator><name pos:start="69:23" pos:end="69:40"><name pos:start="69:23" pos:end="69:25">env</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:40">uncached_cpsr</name></name> <operator pos:start="69:42" pos:end="69:42">&amp;</operator> <name pos:start="69:44" pos:end="69:49">CPSR_M</name><operator pos:start="69:50" pos:end="69:50">)</operator> <operator pos:start="69:52" pos:end="69:53">!=</operator> <name pos:start="69:55" pos:end="69:70">ARM_CPU_MODE_USR</name></expr>)</condition> <block pos:start="69:73" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:23">

                <expr_stmt pos:start="71:17" pos:end="71:55"><expr pos:start="71:17" pos:end="71:54"><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:19">env</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:25">regs</name><index pos:start="71:26" pos:end="71:28">[<expr pos:start="71:27" pos:end="71:27"><literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr>]</index></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <call pos:start="71:32" pos:end="71:54"><name pos:start="71:32" pos:end="71:49">do_arm_semihosting</name><argument_list pos:start="71:50" pos:end="71:54">(<argument pos:start="71:51" pos:end="71:53"><expr pos:start="71:51" pos:end="71:53"><name pos:start="71:51" pos:end="71:53">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="73:17" pos:end="73:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:36"><expr pos:start="79:9" pos:end="79:35"><name pos:start="79:9" pos:end="79:16">new_mode</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:35">ARM_CPU_MODE_SVC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:20"><expr pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:12">addr</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <literal type="number" pos:start="81:16" pos:end="81:19">0x08</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:22"><expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:12">mask</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <name pos:start="83:16" pos:end="83:21">CPSR_I</name></expr>;</expr_stmt>

        <comment type="block" pos:start="85:9" pos:end="85:61">/* The PC already points to the next instruction.  */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:19"><expr pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:14">offset</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:19">case <expr pos:start="91:10" pos:end="91:18"><name pos:start="91:10" pos:end="91:18">EXCP_BKPT</name></expr>:</case>

        <comment type="block" pos:start="93:9" pos:end="93:52">/* See if this is a semihosting syscall.  */</comment>

        <if_stmt pos:start="95:9" pos:end="111:9"><if pos:start="95:9" pos:end="111:9">if <condition pos:start="95:12" pos:end="95:46">(<expr pos:start="95:13" pos:end="95:45"><name pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:15">env</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:22">thumb</name></name> <operator pos:start="95:24" pos:end="95:25">&amp;&amp;</operator> <name pos:start="95:27" pos:end="95:45">semihosting_enabled</name></expr>)</condition> <block pos:start="95:48" pos:end="111:9">{<block_content pos:start="97:13" pos:end="109:13">

            <expr_stmt pos:start="97:13" pos:end="97:51"><expr pos:start="97:13" pos:end="97:50"><name pos:start="97:13" pos:end="97:16">mask</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <call pos:start="97:20" pos:end="97:43"><name pos:start="97:20" pos:end="97:28">lduw_code</name><argument_list pos:start="97:29" pos:end="97:43">(<argument pos:start="97:30" pos:end="97:42"><expr pos:start="97:30" pos:end="97:42"><name pos:start="97:30" pos:end="97:42"><name pos:start="97:30" pos:end="97:32">env</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:38">regs</name><index pos:start="97:39" pos:end="97:42">[<expr pos:start="97:40" pos:end="97:41"><literal type="number" pos:start="97:40" pos:end="97:41">15</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="97:45" pos:end="97:45">&amp;</operator> <literal type="number" pos:start="97:47" pos:end="97:50">0xff</literal></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="109:13"><if pos:start="99:13" pos:end="109:13">if <condition pos:start="99:16" pos:end="101:71">(<expr pos:start="99:17" pos:end="101:70"><name pos:start="99:17" pos:end="99:20">mask</name> <operator pos:start="99:22" pos:end="99:23">==</operator> <literal type="number" pos:start="99:25" pos:end="99:28">0xab</literal>

                  <operator pos:start="101:19" pos:end="101:20">&amp;&amp;</operator> <operator pos:start="101:22" pos:end="101:22">(</operator><name pos:start="101:23" pos:end="101:40"><name pos:start="101:23" pos:end="101:25">env</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:40">uncached_cpsr</name></name> <operator pos:start="101:42" pos:end="101:42">&amp;</operator> <name pos:start="101:44" pos:end="101:49">CPSR_M</name><operator pos:start="101:50" pos:end="101:50">)</operator> <operator pos:start="101:52" pos:end="101:53">!=</operator> <name pos:start="101:55" pos:end="101:70">ARM_CPU_MODE_USR</name></expr>)</condition> <block pos:start="101:73" pos:end="109:13">{<block_content pos:start="103:17" pos:end="107:23">

                <expr_stmt pos:start="103:17" pos:end="103:35"><expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:19">env</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:25">regs</name><index pos:start="103:26" pos:end="103:29">[<expr pos:start="103:27" pos:end="103:28"><literal type="number" pos:start="103:27" pos:end="103:28">15</literal></expr>]</index></name> <operator pos:start="103:31" pos:end="103:32">+=</operator> <literal type="number" pos:start="103:34" pos:end="103:34">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:55"><expr pos:start="105:17" pos:end="105:54"><name pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:19">env</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:25">regs</name><index pos:start="105:26" pos:end="105:28">[<expr pos:start="105:27" pos:end="105:27"><literal type="number" pos:start="105:27" pos:end="105:27">0</literal></expr>]</index></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <call pos:start="105:32" pos:end="105:54"><name pos:start="105:32" pos:end="105:49">do_arm_semihosting</name><argument_list pos:start="105:50" pos:end="105:54">(<argument pos:start="105:51" pos:end="105:53"><expr pos:start="105:51" pos:end="105:53"><name pos:start="105:51" pos:end="105:53">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="107:17" pos:end="107:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="113:9" pos:end="113:46">/* Fall through to prefetch abort.  */</comment>

    <case pos:start="115:5" pos:end="115:29">case <expr pos:start="115:10" pos:end="115:28"><name pos:start="115:10" pos:end="115:28">EXCP_PREFETCH_ABORT</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="117:36"><expr pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:16">new_mode</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <name pos:start="117:20" pos:end="117:35">ARM_CPU_MODE_ABT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:20"><expr pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:12">addr</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <literal type="number" pos:start="119:16" pos:end="119:19">0x0c</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:31"><expr pos:start="121:9" pos:end="121:30"><name pos:start="121:9" pos:end="121:12">mask</name> <operator pos:start="121:14" pos:end="121:14">=</operator> <name pos:start="121:16" pos:end="121:21">CPSR_A</name> <operator pos:start="121:23" pos:end="121:23">|</operator> <name pos:start="121:25" pos:end="121:30">CPSR_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:19"><expr pos:start="123:9" pos:end="123:18"><name pos:start="123:9" pos:end="123:14">offset</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <literal type="number" pos:start="123:18" pos:end="123:18">4</literal></expr>;</expr_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>

    <case pos:start="127:5" pos:end="127:25">case <expr pos:start="127:10" pos:end="127:24"><name pos:start="127:10" pos:end="127:24">EXCP_DATA_ABORT</name></expr>:</case>

        <expr_stmt pos:start="129:9" pos:end="129:36"><expr pos:start="129:9" pos:end="129:35"><name pos:start="129:9" pos:end="129:16">new_mode</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <name pos:start="129:20" pos:end="129:35">ARM_CPU_MODE_ABT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:20"><expr pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:12">addr</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <literal type="number" pos:start="131:16" pos:end="131:19">0x10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:31"><expr pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:12">mask</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <name pos:start="133:16" pos:end="133:21">CPSR_A</name> <operator pos:start="133:23" pos:end="133:23">|</operator> <name pos:start="133:25" pos:end="133:30">CPSR_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:19"><expr pos:start="135:9" pos:end="135:18"><name pos:start="135:9" pos:end="135:14">offset</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">8</literal></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:18">case <expr pos:start="139:10" pos:end="139:17"><name pos:start="139:10" pos:end="139:17">EXCP_IRQ</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:36"><expr pos:start="141:9" pos:end="141:35"><name pos:start="141:9" pos:end="141:16">new_mode</name> <operator pos:start="141:18" pos:end="141:18">=</operator> <name pos:start="141:20" pos:end="141:35">ARM_CPU_MODE_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:20"><expr pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:12">addr</name> <operator pos:start="143:14" pos:end="143:14">=</operator> <literal type="number" pos:start="143:16" pos:end="143:19">0x18</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="145:9" pos:end="145:53">/* Disable IRQ and imprecise data aborts.  */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:12">mask</name> <operator pos:start="147:14" pos:end="147:14">=</operator> <name pos:start="147:16" pos:end="147:21">CPSR_A</name> <operator pos:start="147:23" pos:end="147:23">|</operator> <name pos:start="147:25" pos:end="147:30">CPSR_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:19"><expr pos:start="149:9" pos:end="149:18"><name pos:start="149:9" pos:end="149:14">offset</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <literal type="number" pos:start="149:18" pos:end="149:18">4</literal></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    <case pos:start="153:5" pos:end="153:18">case <expr pos:start="153:10" pos:end="153:17"><name pos:start="153:10" pos:end="153:17">EXCP_FIQ</name></expr>:</case>

        <expr_stmt pos:start="155:9" pos:end="155:36"><expr pos:start="155:9" pos:end="155:35"><name pos:start="155:9" pos:end="155:16">new_mode</name> <operator pos:start="155:18" pos:end="155:18">=</operator> <name pos:start="155:20" pos:end="155:35">ARM_CPU_MODE_FIQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:20"><expr pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:12">addr</name> <operator pos:start="157:14" pos:end="157:14">=</operator> <literal type="number" pos:start="157:16" pos:end="157:19">0x1c</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="159:9" pos:end="159:58">/* Disable FIQ, IRQ and imprecise data aborts.  */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:40"><expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:12">mask</name> <operator pos:start="161:14" pos:end="161:14">=</operator> <name pos:start="161:16" pos:end="161:21">CPSR_A</name> <operator pos:start="161:23" pos:end="161:23">|</operator> <name pos:start="161:25" pos:end="161:30">CPSR_I</name> <operator pos:start="161:32" pos:end="161:32">|</operator> <name pos:start="161:34" pos:end="161:39">CPSR_F</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:19"><expr pos:start="163:9" pos:end="163:18"><name pos:start="163:9" pos:end="163:14">offset</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <literal type="number" pos:start="163:18" pos:end="163:18">4</literal></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <default pos:start="167:5" pos:end="167:12">default:</default>

        <expr_stmt pos:start="169:9" pos:end="169:75"><expr pos:start="169:9" pos:end="169:74"><call pos:start="169:9" pos:end="169:74"><name pos:start="169:9" pos:end="169:17">cpu_abort</name><argument_list pos:start="169:18" pos:end="169:74">(<argument pos:start="169:19" pos:end="169:21"><expr pos:start="169:19" pos:end="169:21"><name pos:start="169:19" pos:end="169:21">env</name></expr></argument>, <argument pos:start="169:24" pos:end="169:51"><expr pos:start="169:24" pos:end="169:51"><literal type="string" pos:start="169:24" pos:end="169:51">"Unhandled exception 0x%x\n"</literal></expr></argument>, <argument pos:start="169:54" pos:end="169:73"><expr pos:start="169:54" pos:end="169:73"><name pos:start="169:54" pos:end="169:73"><name pos:start="169:54" pos:end="169:56">env</name><operator pos:start="169:57" pos:end="169:58">-&gt;</operator><name pos:start="169:59" pos:end="169:73">exception_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="171:9" pos:end="171:15">return;</return> <comment type="block" pos:start="171:17" pos:end="171:59">/* Never happens.  Keep compiler happy.  */</comment>

    </block_content>}</block></switch>

    <comment type="block" pos:start="175:5" pos:end="175:24">/* High vectors.  */</comment>

    <if_stmt pos:start="177:5" pos:end="181:5"><if pos:start="177:5" pos:end="181:5">if <condition pos:start="177:8" pos:end="177:37">(<expr pos:start="177:9" pos:end="177:36"><name pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:11">env</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:17">cp15</name><operator pos:start="177:18" pos:end="177:18">.</operator><name pos:start="177:19" pos:end="177:24">c1_sys</name></name> <operator pos:start="177:26" pos:end="177:26">&amp;</operator> <operator pos:start="177:28" pos:end="177:28">(</operator><literal type="number" pos:start="177:29" pos:end="177:29">1</literal> <operator pos:start="177:31" pos:end="177:32">&lt;&lt;</operator> <literal type="number" pos:start="177:34" pos:end="177:35">13</literal><operator pos:start="177:36" pos:end="177:36">)</operator></expr>)</condition> <block pos:start="177:39" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:27">

        <expr_stmt pos:start="179:9" pos:end="179:27"><expr pos:start="179:9" pos:end="179:26"><name pos:start="179:9" pos:end="179:12">addr</name> <operator pos:start="179:14" pos:end="179:15">+=</operator> <literal type="number" pos:start="179:17" pos:end="179:26">0xffff0000</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:32"><expr pos:start="183:5" pos:end="183:31"><call pos:start="183:5" pos:end="183:31"><name pos:start="183:5" pos:end="183:15">switch_mode</name> <argument_list pos:start="183:17" pos:end="183:31">(<argument pos:start="183:18" pos:end="183:20"><expr pos:start="183:18" pos:end="183:20"><name pos:start="183:18" pos:end="183:20">env</name></expr></argument>, <argument pos:start="183:23" pos:end="183:30"><expr pos:start="183:23" pos:end="183:30"><name pos:start="183:23" pos:end="183:30">new_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:31"><expr pos:start="185:5" pos:end="185:30"><name pos:start="185:5" pos:end="185:13"><name pos:start="185:5" pos:end="185:7">env</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:13">spsr</name></name> <operator pos:start="185:15" pos:end="185:15">=</operator> <call pos:start="185:17" pos:end="185:30"><name pos:start="185:17" pos:end="185:25">cpsr_read</name><argument_list pos:start="185:26" pos:end="185:30">(<argument pos:start="185:27" pos:end="185:29"><expr pos:start="185:27" pos:end="185:29"><name pos:start="185:27" pos:end="185:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="187:5" pos:end="187:25">/* Clear IT bits.  */</comment>

    <expr_stmt pos:start="189:5" pos:end="189:27"><expr pos:start="189:5" pos:end="189:26"><name pos:start="189:5" pos:end="189:22"><name pos:start="189:5" pos:end="189:7">env</name><operator pos:start="189:8" pos:end="189:9">-&gt;</operator><name pos:start="189:10" pos:end="189:22">condexec_bits</name></name> <operator pos:start="189:24" pos:end="189:24">=</operator> <literal type="number" pos:start="189:26" pos:end="189:26">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="191:5" pos:end="191:70">/* Switch to the new mode, and to the correct instruction set.  */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:67"><expr pos:start="193:5" pos:end="193:66"><name pos:start="193:5" pos:end="193:22"><name pos:start="193:5" pos:end="193:7">env</name><operator pos:start="193:8" pos:end="193:9">-&gt;</operator><name pos:start="193:10" pos:end="193:22">uncached_cpsr</name></name> <operator pos:start="193:24" pos:end="193:24">=</operator> <operator pos:start="193:26" pos:end="193:26">(</operator><name pos:start="193:27" pos:end="193:44"><name pos:start="193:27" pos:end="193:29">env</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:44">uncached_cpsr</name></name> <operator pos:start="193:46" pos:end="193:46">&amp;</operator> <operator pos:start="193:48" pos:end="193:48">~</operator><name pos:start="193:49" pos:end="193:54">CPSR_M</name><operator pos:start="193:55" pos:end="193:55">)</operator> <operator pos:start="193:57" pos:end="193:57">|</operator> <name pos:start="193:59" pos:end="193:66">new_mode</name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:31"><expr pos:start="195:5" pos:end="195:30"><name pos:start="195:5" pos:end="195:22"><name pos:start="195:5" pos:end="195:7">env</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:22">uncached_cpsr</name></name> <operator pos:start="195:24" pos:end="195:25">|=</operator> <name pos:start="195:27" pos:end="195:30">mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:53"><expr pos:start="197:5" pos:end="197:52"><name pos:start="197:5" pos:end="197:14"><name pos:start="197:5" pos:end="197:7">env</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:14">thumb</name></name> <operator pos:start="197:16" pos:end="197:16">=</operator> <operator pos:start="197:18" pos:end="197:18">(</operator><name pos:start="197:19" pos:end="197:34"><name pos:start="197:19" pos:end="197:21">env</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:27">cp15</name><operator pos:start="197:28" pos:end="197:28">.</operator><name pos:start="197:29" pos:end="197:34">c1_sys</name></name> <operator pos:start="197:36" pos:end="197:36">&amp;</operator> <operator pos:start="197:38" pos:end="197:38">(</operator><literal type="number" pos:start="197:39" pos:end="197:39">1</literal> <operator pos:start="197:41" pos:end="197:42">&lt;&lt;</operator> <literal type="number" pos:start="197:44" pos:end="197:45">30</literal><operator pos:start="197:46" pos:end="197:46">)</operator><operator pos:start="197:47" pos:end="197:47">)</operator> <operator pos:start="197:49" pos:end="197:50">!=</operator> <literal type="number" pos:start="197:52" pos:end="197:52">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:43"><expr pos:start="199:5" pos:end="199:42"><name pos:start="199:5" pos:end="199:17"><name pos:start="199:5" pos:end="199:7">env</name><operator pos:start="199:8" pos:end="199:9">-&gt;</operator><name pos:start="199:10" pos:end="199:13">regs</name><index pos:start="199:14" pos:end="199:17">[<expr pos:start="199:15" pos:end="199:16"><literal type="number" pos:start="199:15" pos:end="199:16">14</literal></expr>]</index></name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:33"><name pos:start="199:21" pos:end="199:23">env</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:29">regs</name><index pos:start="199:30" pos:end="199:33">[<expr pos:start="199:31" pos:end="199:32"><literal type="number" pos:start="199:31" pos:end="199:32">15</literal></expr>]</index></name> <operator pos:start="199:35" pos:end="199:35">+</operator> <name pos:start="199:37" pos:end="199:42">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:25"><expr pos:start="201:5" pos:end="201:24"><name pos:start="201:5" pos:end="201:17"><name pos:start="201:5" pos:end="201:7">env</name><operator pos:start="201:8" pos:end="201:9">-&gt;</operator><name pos:start="201:10" pos:end="201:13">regs</name><index pos:start="201:14" pos:end="201:17">[<expr pos:start="201:15" pos:end="201:16"><literal type="number" pos:start="201:15" pos:end="201:16">15</literal></expr>]</index></name> <operator pos:start="201:19" pos:end="201:19">=</operator> <name pos:start="201:21" pos:end="201:24">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:51"><expr pos:start="203:5" pos:end="203:50"><name pos:start="203:5" pos:end="203:26"><name pos:start="203:5" pos:end="203:7">env</name><operator pos:start="203:8" pos:end="203:9">-&gt;</operator><name pos:start="203:10" pos:end="203:26">interrupt_request</name></name> <operator pos:start="203:28" pos:end="203:29">|=</operator> <name pos:start="203:31" pos:end="203:50">CPU_INTERRUPT_EXITTB</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
