<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11513.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:21">sPAPRDIMMState</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:55">spapr_recover_pending_dimm_state</name><parameter_list pos:start="1:56" pos:end="3:75">(<parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:73">sPAPRMachineState</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">ms</name></decl></parameter>,

                                                        <parameter pos:start="3:57" pos:end="3:74"><decl pos:start="3:57" pos:end="3:74"><type pos:start="3:57" pos:end="3:74"><name pos:start="3:57" pos:end="3:68">PCDIMMDevice</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:74">dimm</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:14">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">sPAPRDRConnector</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">drc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">PCDIMMDeviceClass</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">ddc</name> <init pos:start="9:28" pos:end="9:52">= <expr pos:start="9:30" pos:end="9:52"><call pos:start="9:30" pos:end="9:52"><name pos:start="9:30" pos:end="9:46">PC_DIMM_GET_CLASS</name><argument_list pos:start="9:47" pos:end="9:52">(<argument pos:start="9:48" pos:end="9:51"><expr pos:start="9:48" pos:end="9:51"><name pos:start="9:48" pos:end="9:51">dimm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">MemoryRegion</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">mr</name> <init pos:start="11:22" pos:end="11:51">= <expr pos:start="11:24" pos:end="11:51"><call pos:start="11:24" pos:end="11:51"><name pos:start="11:24" pos:end="11:45"><name pos:start="11:24" pos:end="11:26">ddc</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:45">get_memory_region</name></name><argument_list pos:start="11:46" pos:end="11:51">(<argument pos:start="11:47" pos:end="11:50"><expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">dimm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">size</name> <init pos:start="13:19" pos:end="13:42">= <expr pos:start="13:21" pos:end="13:42"><call pos:start="13:21" pos:end="13:42"><name pos:start="13:21" pos:end="13:38">memory_region_size</name><argument_list pos:start="13:39" pos:end="13:42">(<argument pos:start="13:40" pos:end="13:41"><expr pos:start="13:40" pos:end="13:41"><name pos:start="13:40" pos:end="13:41">mr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:53"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:20">nr_lmbs</name> <init pos:start="15:22" pos:end="15:53">= <expr pos:start="15:24" pos:end="15:53"><name pos:start="15:24" pos:end="15:27">size</name> <operator pos:start="15:29" pos:end="15:29">/</operator> <name pos:start="15:31" pos:end="15:53">SPAPR_MEMORY_BLOCK_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:23">avail_lmbs</name> <init pos:start="17:25" pos:end="17:27">= <expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:23">addr_start</name></decl>, <decl pos:start="19:26" pos:end="19:29"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:26" pos:end="19:29">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:18">sPAPRDIMMState</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:22">ds</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:55"><expr pos:start="27:5" pos:end="29:54"><name pos:start="27:5" pos:end="27:14">addr_start</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="29:54"><name pos:start="27:18" pos:end="27:40">object_property_get_int</name><argument_list pos:start="27:41" pos:end="29:54">(<argument pos:start="27:42" pos:end="27:53"><expr pos:start="27:42" pos:end="27:53"><call pos:start="27:42" pos:end="27:53"><name pos:start="27:42" pos:end="27:47">OBJECT</name><argument_list pos:start="27:48" pos:end="27:53">(<argument pos:start="27:49" pos:end="27:52"><expr pos:start="27:49" pos:end="27:52"><name pos:start="27:49" pos:end="27:52">dimm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:56" pos:end="27:72"><expr pos:start="27:56" pos:end="27:72"><name pos:start="27:56" pos:end="27:72">PC_DIMM_ADDR_PROP</name></expr></argument>,

                                         <argument pos:start="29:42" pos:end="29:53"><expr pos:start="29:42" pos:end="29:53"><operator pos:start="29:42" pos:end="29:42">&amp;</operator><name pos:start="29:43" pos:end="29:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:8">addr</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <name pos:start="33:12" pos:end="33:21">addr_start</name></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="51:5">for <control pos:start="35:9" pos:end="35:33">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:28"><expr pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:27">nr_lmbs</name></expr>;</condition> <incr pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:30">i</name><operator pos:start="35:31" pos:end="35:32">++</operator></expr></incr>)</control> <block pos:start="35:35" pos:end="51:5">{<block_content pos:start="37:9" pos:end="49:40">

        <expr_stmt pos:start="37:9" pos:end="39:62"><expr pos:start="37:9" pos:end="39:61"><name pos:start="37:9" pos:end="37:11">drc</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="39:61"><name pos:start="37:15" pos:end="37:29">spapr_drc_by_id</name><argument_list pos:start="37:30" pos:end="39:61">(<argument pos:start="37:31" pos:end="37:48"><expr pos:start="37:31" pos:end="37:48"><name pos:start="37:31" pos:end="37:48">TYPE_SPAPR_DRC_LMB</name></expr></argument>,

                              <argument pos:start="39:31" pos:end="39:60"><expr pos:start="39:31" pos:end="39:60"><name pos:start="39:31" pos:end="39:34">addr</name> <operator pos:start="39:36" pos:end="39:36">/</operator> <name pos:start="39:38" pos:end="39:60">SPAPR_MEMORY_BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><call pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:16">g_assert</name><argument_list pos:start="41:17" pos:end="41:21">(<argument pos:start="41:18" pos:end="41:20"><expr pos:start="41:18" pos:end="41:20"><name pos:start="41:18" pos:end="41:20">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:70">(<expr pos:start="43:13" pos:end="43:69"><name pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:15">drc</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:32">indicator_state</name></name> <operator pos:start="43:34" pos:end="43:35">!=</operator> <name pos:start="43:37" pos:end="43:69">SPAPR_DR_INDICATOR_STATE_INACTIVE</name></expr>)</condition> <block pos:start="43:72" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:25">

            <expr_stmt pos:start="45:13" pos:end="45:25"><expr pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:22">avail_lmbs</name><operator pos:start="45:23" pos:end="45:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:12">addr</name> <operator pos:start="49:14" pos:end="49:15">+=</operator> <name pos:start="49:17" pos:end="49:39">SPAPR_MEMORY_BLOCK_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:6">ds</name> <operator pos:start="55:8" pos:end="55:8">=</operator> <call pos:start="55:10" pos:end="55:42"><name pos:start="55:10" pos:end="55:18">g_malloc0</name><argument_list pos:start="55:19" pos:end="55:42">(<argument pos:start="55:20" pos:end="55:41"><expr pos:start="55:20" pos:end="55:41"><sizeof pos:start="55:20" pos:end="55:41">sizeof<argument_list pos:start="55:26" pos:end="55:41">(<argument pos:start="55:27" pos:end="55:40"><expr pos:start="55:27" pos:end="55:40"><name pos:start="55:27" pos:end="55:40">sPAPRDIMMState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:6">ds</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:15">nr_lmbs</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:28">avail_lmbs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:6">ds</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:12">dimm</name></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:19">dimm</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><call pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:34">spapr_pending_dimm_unplugs_add</name><argument_list pos:start="61:35" pos:end="61:42">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">ms</name></expr></argument>, <argument pos:start="61:40" pos:end="61:41"><expr pos:start="61:40" pos:end="61:41"><name pos:start="61:40" pos:end="61:41">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:14">return <expr pos:start="63:12" pos:end="63:13"><name pos:start="63:12" pos:end="63:13">ds</name></expr>;</return>

</block_content>}</block></function>
</unit>
