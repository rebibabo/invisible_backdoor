<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20611.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">iscsi_create</name><parameter_list pos:start="1:24" pos:end="1:75">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">filename</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:74"><decl pos:start="1:47" pos:end="1:74"><type pos:start="1:47" pos:end="1:74"><name pos:start="1:47" pos:end="1:65">QEMUOptionParameter</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:74">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:22">total_size</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name></type> <name pos:start="9:22" pos:end="9:23">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">IscsiLun</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:22">iscsilun</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">QDict</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:21">bs_options</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><call pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:44">(<argument pos:start="17:12" pos:end="17:14"><expr pos:start="17:12" pos:end="17:14"><operator pos:start="17:12" pos:end="17:12">&amp;</operator><name pos:start="17:13" pos:end="17:14">bs</name></expr></argument>, <argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></argument>, <argument pos:start="17:20" pos:end="17:43"><expr pos:start="17:20" pos:end="17:43"><sizeof pos:start="17:20" pos:end="17:43">sizeof<argument_list pos:start="17:26" pos:end="17:43">(<argument pos:start="17:27" pos:end="17:42"><expr pos:start="17:27" pos:end="17:42"><name pos:start="17:27" pos:end="17:42">BlockDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:26">/* Read out options */</comment>

    <while pos:start="23:5" pos:end="33:5">while <condition pos:start="23:11" pos:end="23:36">(<expr pos:start="23:12" pos:end="23:35"><name pos:start="23:12" pos:end="23:18">options</name> <operator pos:start="23:20" pos:end="23:21">&amp;&amp;</operator> <name pos:start="23:23" pos:end="23:35"><name pos:start="23:23" pos:end="23:29">options</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:35">name</name></name></expr>)</condition> <block pos:start="23:38" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:18">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:43">(<expr pos:start="25:13" pos:end="25:42"><operator pos:start="25:13" pos:end="25:13">!</operator><call pos:start="25:14" pos:end="25:42"><name pos:start="25:14" pos:end="25:19">strcmp</name><argument_list pos:start="25:20" pos:end="25:42">(<argument pos:start="25:21" pos:end="25:33"><expr pos:start="25:21" pos:end="25:33"><name pos:start="25:21" pos:end="25:33"><name pos:start="25:21" pos:end="25:27">options</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:33">name</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:41"><expr pos:start="25:36" pos:end="25:41"><literal type="string" pos:start="25:36" pos:end="25:41">"size"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:45" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:61">

            <expr_stmt pos:start="27:13" pos:end="27:61"><expr pos:start="27:13" pos:end="27:60"><name pos:start="27:13" pos:end="27:22">total_size</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:41"><name pos:start="27:26" pos:end="27:32">options</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:39">value</name><operator pos:start="27:40" pos:end="27:40">.</operator><name pos:start="27:41" pos:end="27:41">n</name></name> <operator pos:start="27:43" pos:end="27:43">/</operator> <name pos:start="27:45" pos:end="27:60">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:15">options</name><operator pos:start="31:16" pos:end="31:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:6">bs</name><operator pos:start="37:7" pos:end="37:7">.</operator><name pos:start="37:8" pos:end="37:13">opaque</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:50"><name pos:start="37:17" pos:end="37:25">g_malloc0</name><argument_list pos:start="37:26" pos:end="37:50">(<argument pos:start="37:27" pos:end="37:49"><expr pos:start="37:27" pos:end="37:49"><sizeof pos:start="37:27" pos:end="37:49">sizeof<argument_list pos:start="37:33" pos:end="37:49">(<argument pos:start="37:34" pos:end="37:48"><expr pos:start="37:34" pos:end="37:48">struct <name pos:start="37:41" pos:end="37:48">IscsiLun</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:12">iscsilun</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:24"><name pos:start="39:16" pos:end="39:17">bs</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:24">opaque</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:14">bs_options</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:28"><name pos:start="43:18" pos:end="43:26">qdict_new</name><argument_list pos:start="43:27" pos:end="43:28">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><call pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:13">qdict_put</name><argument_list pos:start="45:14" pos:end="45:65">(<argument pos:start="45:15" pos:end="45:24"><expr pos:start="45:15" pos:end="45:24"><name pos:start="45:15" pos:end="45:24">bs_options</name></expr></argument>, <argument pos:start="45:27" pos:end="45:36"><expr pos:start="45:27" pos:end="45:36"><literal type="string" pos:start="45:27" pos:end="45:36">"filename"</literal></expr></argument>, <argument pos:start="45:39" pos:end="45:64"><expr pos:start="45:39" pos:end="45:64"><call pos:start="45:39" pos:end="45:64"><name pos:start="45:39" pos:end="45:54">qstring_from_str</name><argument_list pos:start="45:55" pos:end="45:64">(<argument pos:start="45:56" pos:end="45:63"><expr pos:start="45:56" pos:end="45:63"><name pos:start="45:56" pos:end="45:63">filename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:40"><name pos:start="47:11" pos:end="47:20">iscsi_open</name><argument_list pos:start="47:21" pos:end="47:40">(<argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:24">bs</name></expr></argument>, <argument pos:start="47:27" pos:end="47:36"><expr pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:36">bs_options</name></expr></argument>, <argument pos:start="47:39" pos:end="47:39"><expr pos:start="47:39" pos:end="47:39"><literal type="number" pos:start="47:39" pos:end="47:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:11">QDECREF</name><argument_list pos:start="49:12" pos:end="49:23">(<argument pos:start="49:13" pos:end="49:22"><expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:22">bs_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:17">(<expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:14">!=</operator> <literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>)</condition> <block pos:start="53:19" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:17">

        <goto pos:start="55:9" pos:end="55:17">goto <name pos:start="55:14" pos:end="55:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:28">(<expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:16">iscsilun</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:27">nop_timer</name></name></expr>)</condition> <block pos:start="59:30" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:40">

        <expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><call pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:17">timer_del</name><argument_list pos:start="61:18" pos:end="61:38">(<argument pos:start="61:19" pos:end="61:37"><expr pos:start="61:19" pos:end="61:37"><name pos:start="61:19" pos:end="61:37"><name pos:start="61:19" pos:end="61:26">iscsilun</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:37">nop_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:40"><expr pos:start="63:9" pos:end="63:39"><call pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:18">timer_free</name><argument_list pos:start="63:19" pos:end="63:39">(<argument pos:start="63:20" pos:end="63:38"><expr pos:start="63:20" pos:end="63:38"><name pos:start="63:20" pos:end="63:38"><name pos:start="63:20" pos:end="63:27">iscsilun</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:38">nop_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:36">(<expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:16">iscsilun</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:22">type</name></name> <operator pos:start="67:24" pos:end="67:25">!=</operator> <name pos:start="67:27" pos:end="67:35">TYPE_DISK</name></expr>)</condition> <block pos:start="67:38" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:17">

        <expr_stmt pos:start="69:9" pos:end="69:22"><expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <operator pos:start="69:15" pos:end="69:15">-</operator><name pos:start="69:16" pos:end="69:21">ENODEV</name></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:17">goto <name pos:start="71:14" pos:end="71:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:38">(<expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:10">bs</name><operator pos:start="75:11" pos:end="75:11">.</operator><name pos:start="75:12" pos:end="75:24">total_sectors</name></name> <operator pos:start="75:26" pos:end="75:26">&lt;</operator> <name pos:start="75:28" pos:end="75:37">total_size</name></expr>)</condition> <block pos:start="75:40" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:17">

        <expr_stmt pos:start="77:9" pos:end="77:22"><expr pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <operator pos:start="77:15" pos:end="77:15">-</operator><name pos:start="77:16" pos:end="77:21">ENOSPC</name></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:17">goto <name pos:start="79:14" pos:end="79:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:12"><expr pos:start="85:5" pos:end="85:11"><name pos:start="85:5" pos:end="85:7">ret</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <literal type="number" pos:start="85:11" pos:end="85:11">0</literal></expr>;</expr_stmt>

<label pos:start="87:1" pos:end="87:4"><name pos:start="87:1" pos:end="87:3">out</name>:</label>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:32">(<expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:16">iscsilun</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:23">iscsi</name></name> <operator pos:start="89:25" pos:end="89:26">!=</operator> <name pos:start="89:28" pos:end="89:31">NULL</name></expr>)</condition> <block pos:start="89:34" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:47">

        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><call pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:29">iscsi_destroy_context</name><argument_list pos:start="91:30" pos:end="91:46">(<argument pos:start="91:31" pos:end="91:45"><expr pos:start="91:31" pos:end="91:45"><name pos:start="91:31" pos:end="91:45"><name pos:start="91:31" pos:end="91:38">iscsilun</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:45">iscsi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:22"><expr pos:start="95:5" pos:end="95:21"><call pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:10">g_free</name><argument_list pos:start="95:11" pos:end="95:21">(<argument pos:start="95:12" pos:end="95:20"><expr pos:start="95:12" pos:end="95:20"><name pos:start="95:12" pos:end="95:20"><name pos:start="95:12" pos:end="95:13">bs</name><operator pos:start="95:14" pos:end="95:14">.</operator><name pos:start="95:15" pos:end="95:20">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
