<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18104.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">tcg_out_br</name><parameter_list pos:start="1:23" pos:end="1:54">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:33">TCGContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:53">label_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:69">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">TCGLabel</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">l</name> <init pos:start="5:17" pos:end="5:41">= <expr pos:start="5:19" pos:end="5:41"><operator pos:start="5:19" pos:end="5:19">&amp;</operator><name pos:start="5:20" pos:end="5:41"><name pos:start="5:20" pos:end="5:20">s</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:28">labels</name><index pos:start="5:29" pos:end="5:41">[<expr pos:start="5:30" pos:end="5:40"><name pos:start="5:30" pos:end="5:40">label_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:16">imm</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="15:56">/* We pay attention here to not modify the branch target by reading

       the existing value and using it again. This ensure that caches and

       memory are kept coherent during retranslation. */</comment>

    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:9">l</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:20">has_value</name></name></expr>)</condition> <block pos:start="17:23" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:44">

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:11">imm</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:15">l</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:18">u</name><operator pos:start="19:19" pos:end="19:19">.</operator><name pos:start="19:20" pos:end="19:28">value_ptr</name></name> <operator pos:start="19:30" pos:end="19:30">-</operator>  <name pos:start="19:33" pos:end="19:43"><name pos:start="19:33" pos:end="19:33">s</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:43">code_ptr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="27:5">else <block pos:start="21:12" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:71">

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:11">imm</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:51"><name pos:start="23:15" pos:end="23:38">get_reloc_pcrel21b_slot2</name><argument_list pos:start="23:39" pos:end="23:51">(<argument pos:start="23:40" pos:end="23:50"><expr pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:40">s</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:50">code_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:71"><expr pos:start="25:9" pos:end="25:70"><call pos:start="25:9" pos:end="25:70"><name pos:start="25:9" pos:end="25:21">tcg_out_reloc</name><argument_list pos:start="25:22" pos:end="25:70">(<argument pos:start="25:23" pos:end="25:23"><expr pos:start="25:23" pos:end="25:23"><name pos:start="25:23" pos:end="25:23">s</name></expr></argument>, <argument pos:start="25:26" pos:end="25:36"><expr pos:start="25:26" pos:end="25:36"><name pos:start="25:26" pos:end="25:36"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:36">code_ptr</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:53"><expr pos:start="25:39" pos:end="25:53"><name pos:start="25:39" pos:end="25:53">R_IA64_PCREL21B</name></expr></argument>, <argument pos:start="25:56" pos:end="25:66"><expr pos:start="25:56" pos:end="25:66"><name pos:start="25:56" pos:end="25:66">label_index</name></expr></argument>, <argument pos:start="25:69" pos:end="25:69"><expr pos:start="25:69" pos:end="25:69"><literal type="number" pos:start="25:69" pos:end="25:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="37:69"><expr pos:start="31:5" pos:end="37:68"><call pos:start="31:5" pos:end="37:68"><name pos:start="31:5" pos:end="31:18">tcg_out_bundle</name><argument_list pos:start="31:19" pos:end="37:68">(<argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">s</name></expr></argument>, <argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">mmB</name></expr></argument>,

                   <argument pos:start="33:20" pos:end="33:29"><expr pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:29">INSN_NOP_M</name></expr></argument>,

                   <argument pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:29">INSN_NOP_M</name></expr></argument>,

                   <argument pos:start="37:20" pos:end="37:67"><expr pos:start="37:20" pos:end="37:67"><call pos:start="37:20" pos:end="37:67"><name pos:start="37:20" pos:end="37:29">tcg_opc_b1</name><argument_list pos:start="37:30" pos:end="37:67">(<argument pos:start="37:31" pos:end="37:40"><expr pos:start="37:31" pos:end="37:40"><name pos:start="37:31" pos:end="37:40">TCG_REG_P0</name></expr></argument>, <argument pos:start="37:43" pos:end="37:61"><expr pos:start="37:43" pos:end="37:61"><name pos:start="37:43" pos:end="37:61">OPC_BR_SPTK_MANY_B1</name></expr></argument>, <argument pos:start="37:64" pos:end="37:66"><expr pos:start="37:64" pos:end="37:66"><name pos:start="37:64" pos:end="37:66">imm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
