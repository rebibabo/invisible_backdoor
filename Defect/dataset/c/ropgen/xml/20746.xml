<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20746.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">migrate_fd_error</name><parameter_list pos:start="1:22" pos:end="1:60">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:36">MigrationState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">error</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:56">

    <expr_stmt pos:start="5:5" pos:end="5:65"><expr pos:start="5:5" pos:end="5:64"><call pos:start="5:5" pos:end="5:64"><name pos:start="5:5" pos:end="5:26">trace_migrate_fd_error</name><argument_list pos:start="5:27" pos:end="5:64">(<argument pos:start="5:28" pos:end="5:63"><expr pos:start="5:28" pos:end="5:63"><ternary pos:start="5:28" pos:end="5:63"><condition pos:start="5:28" pos:end="5:34"><expr pos:start="5:28" pos:end="5:32"><name pos:start="5:28" pos:end="5:32">error</name></expr> ?</condition><then pos:start="5:36" pos:end="5:58"> <expr pos:start="5:36" pos:end="5:58"><call pos:start="5:36" pos:end="5:58"><name pos:start="5:36" pos:end="5:51">error_get_pretty</name><argument_list pos:start="5:52" pos:end="5:58">(<argument pos:start="5:53" pos:end="5:57"><expr pos:start="5:53" pos:end="5:57"><name pos:start="5:53" pos:end="5:57">error</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="5:60" pos:end="5:63">: <expr pos:start="5:62" pos:end="5:63"><literal type="string" pos:start="5:62" pos:end="5:63">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:35"><expr pos:start="7:5" pos:end="7:34"><call pos:start="7:5" pos:end="7:34"><name pos:start="7:5" pos:end="7:10">assert</name><argument_list pos:start="7:11" pos:end="7:34">(<argument pos:start="7:12" pos:end="7:33"><expr pos:start="7:12" pos:end="7:33"><name pos:start="7:12" pos:end="7:25"><name pos:start="7:12" pos:end="7:12">s</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:25">to_dst_file</name></name> <operator pos:start="7:27" pos:end="7:28">==</operator> <name pos:start="7:30" pos:end="7:33">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="11:47"><expr pos:start="9:5" pos:end="11:46"><call pos:start="9:5" pos:end="11:46"><name pos:start="9:5" pos:end="9:21">migrate_set_state</name><argument_list pos:start="9:22" pos:end="11:46">(<argument pos:start="9:23" pos:end="9:31"><expr pos:start="9:23" pos:end="9:31"><operator pos:start="9:23" pos:end="9:23">&amp;</operator><name pos:start="9:24" pos:end="9:31"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:31">state</name></name></expr></argument>, <argument pos:start="9:34" pos:end="9:55"><expr pos:start="9:34" pos:end="9:55"><name pos:start="9:34" pos:end="9:55">MIGRATION_STATUS_SETUP</name></expr></argument>,

                      <argument pos:start="11:23" pos:end="11:45"><expr pos:start="11:23" pos:end="11:45"><name pos:start="11:23" pos:end="11:45">MIGRATION_STATUS_FAILED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:10">s</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">error</name></name></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:37">

        <expr_stmt pos:start="15:9" pos:end="15:37"><expr pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:16">error</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:36"><name pos:start="15:20" pos:end="15:29">error_copy</name><argument_list pos:start="15:30" pos:end="15:36">(<argument pos:start="15:31" pos:end="15:35"><expr pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:56"><expr pos:start="19:5" pos:end="19:55"><call pos:start="19:5" pos:end="19:55"><name pos:start="19:5" pos:end="19:24">notifier_list_notify</name><argument_list pos:start="19:25" pos:end="19:55">(<argument pos:start="19:26" pos:end="19:51"><expr pos:start="19:26" pos:end="19:51"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:51">migration_state_notifiers</name></expr></argument>, <argument pos:start="19:54" pos:end="19:54"><expr pos:start="19:54" pos:end="19:54"><name pos:start="19:54" pos:end="19:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
