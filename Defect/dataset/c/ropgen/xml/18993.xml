<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18993.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:31">pic_ioport_read</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:15">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PICCommonState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="51:5"><if pos:start="13:5" pos:end="31:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">poll</name></name></expr>)</condition> <block pos:start="13:18" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:20">

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:28"><name pos:start="15:15" pos:end="15:25">pic_get_irq</name><argument_list pos:start="15:26" pos:end="15:28">(<argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><name pos:start="15:27" pos:end="15:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:21">(<expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:15">ret</name> <operator pos:start="17:17" pos:end="17:18">&gt;=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr>)</condition> <block pos:start="17:23" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:24">

            <expr_stmt pos:start="19:13" pos:end="19:31"><expr pos:start="19:13" pos:end="19:30"><call pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:22">pic_intack</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:24"><expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">s</name></expr></argument>, <argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:18">|=</operator> <literal type="number" pos:start="21:20" pos:end="21:23">0x80</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="27:9">else <block pos:start="23:16" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:20">

            <expr_stmt pos:start="25:13" pos:end="25:20"><expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">poll</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="51:5">else <block pos:start="31:12" pos:end="51:5">{<block_content pos:start="33:9" pos:end="49:9">

        <if_stmt pos:start="33:9" pos:end="49:9"><if pos:start="33:9" pos:end="45:9">if <condition pos:start="33:12" pos:end="33:22">(<expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:16">addr</name> <operator pos:start="33:18" pos:end="33:19">==</operator> <literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>)</condition> <block pos:start="33:24" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:13">

            <if_stmt pos:start="35:13" pos:end="43:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:35">(<expr pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:34">read_reg_select</name></name></expr>)</condition> <block pos:start="35:37" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:29">

                <expr_stmt pos:start="37:17" pos:end="37:29"><expr pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:19">ret</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:28"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:28">isr</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="43:13">else <block pos:start="39:20" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:29">

                <expr_stmt pos:start="41:17" pos:end="41:29"><expr pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:19">ret</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:28"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:28">irr</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="49:9">else <block pos:start="45:16" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:25">

            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:24"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:24">imr</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:57"><expr pos:start="53:5" pos:end="53:56"><call pos:start="53:5" pos:end="53:56"><name pos:start="53:5" pos:end="53:11">DPRINTF</name><argument_list pos:start="53:12" pos:end="53:56">(<argument pos:start="53:13" pos:end="53:44"><expr pos:start="53:13" pos:end="53:44"><literal type="string" pos:start="53:13" pos:end="53:44">"read: addr=0x%02x val=0x%02x\n"</literal></expr></argument>, <argument pos:start="53:47" pos:end="53:50"><expr pos:start="53:47" pos:end="53:50"><name pos:start="53:47" pos:end="53:50">addr</name></expr></argument>, <argument pos:start="53:53" pos:end="53:55"><expr pos:start="53:53" pos:end="53:55"><name pos:start="53:53" pos:end="53:55">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
