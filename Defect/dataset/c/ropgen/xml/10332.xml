<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10332.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">local_set_mapped_file_attr</name><parameter_list pos:start="1:38" pos:end="3:70">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:47">FsContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ctx</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:54"><decl pos:start="3:39" pos:end="3:54"><type pos:start="3:39" pos:end="3:54"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:48">char</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">path</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:69"><decl pos:start="3:57" pos:end="3:69"><type pos:start="3:57" pos:end="3:69"><name pos:start="3:57" pos:end="3:62">FsCred</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:69">credp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="145:1">{<block_content pos:start="7:5" pos:end="143:15">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">FILE</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">fp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:22"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:22">[<expr pos:start="11:14" pos:end="11:21"><name pos:start="11:14" pos:end="11:21">ATTR_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:28"><name pos:start="13:10" pos:end="13:18">attr_path</name><index pos:start="13:19" pos:end="13:28">[<expr pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:27">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">uid</name> <init pos:start="15:13" pos:end="15:16">= <expr pos:start="15:15" pos:end="15:16"><operator pos:start="15:15" pos:end="15:15">-</operator><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr></init></decl>, <decl pos:start="15:19" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:21">gid</name> <init pos:start="15:23" pos:end="15:26">= <expr pos:start="15:25" pos:end="15:26"><operator pos:start="15:25" pos:end="15:25">-</operator><literal type="number" pos:start="15:26" pos:end="15:26">1</literal></expr></init></decl>, <decl pos:start="15:29" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:29" pos:end="15:32">mode</name> <init pos:start="15:34" pos:end="15:37">= <expr pos:start="15:36" pos:end="15:37"><operator pos:start="15:36" pos:end="15:36">-</operator><literal type="number" pos:start="15:37" pos:end="15:37">1</literal></expr></init></decl>, <decl pos:start="15:40" pos:end="15:48"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:40" pos:end="15:43">rdev</name> <init pos:start="15:45" pos:end="15:48">= <expr pos:start="15:47" pos:end="15:48"><operator pos:start="15:47" pos:end="15:47">-</operator><literal type="number" pos:start="15:48" pos:end="15:48">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:72"><expr pos:start="19:5" pos:end="19:71"><name pos:start="19:5" pos:end="19:6">fp</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:71"><name pos:start="19:10" pos:end="19:20">local_fopen</name><argument_list pos:start="19:21" pos:end="19:71">(<argument pos:start="19:22" pos:end="19:65"><expr pos:start="19:22" pos:end="19:65"><call pos:start="19:22" pos:end="19:65"><name pos:start="19:22" pos:end="19:43">local_mapped_attr_path</name><argument_list pos:start="19:44" pos:end="19:65">(<argument pos:start="19:45" pos:end="19:47"><expr pos:start="19:45" pos:end="19:47"><name pos:start="19:45" pos:end="19:47">ctx</name></expr></argument>, <argument pos:start="19:50" pos:end="19:53"><expr pos:start="19:50" pos:end="19:53"><name pos:start="19:50" pos:end="19:53">path</name></expr></argument>, <argument pos:start="19:56" pos:end="19:64"><expr pos:start="19:56" pos:end="19:64"><name pos:start="19:56" pos:end="19:64">attr_path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:68" pos:end="19:70"><expr pos:start="19:68" pos:end="19:70"><literal type="string" pos:start="19:68" pos:end="19:70">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">fp</name></expr>)</condition> <block pos:start="21:14" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:29">

        <goto pos:start="23:9" pos:end="23:29">goto <name pos:start="23:14" pos:end="23:28">create_map_file</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><call pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:28">(<argument pos:start="27:12" pos:end="27:14"><expr pos:start="27:12" pos:end="27:14"><name pos:start="27:12" pos:end="27:14">buf</name></expr></argument>, <argument pos:start="27:17" pos:end="27:17"><expr pos:start="27:17" pos:end="27:17"><literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr></argument>, <argument pos:start="27:20" pos:end="27:27"><expr pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:27">ATTR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="29:5" pos:end="51:5">while <condition pos:start="29:11" pos:end="29:36">(<expr pos:start="29:12" pos:end="29:35"><call pos:start="29:12" pos:end="29:35"><name pos:start="29:12" pos:end="29:16">fgets</name><argument_list pos:start="29:17" pos:end="29:35">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">buf</name></expr></argument>, <argument pos:start="29:23" pos:end="29:30"><expr pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:30">ATTR_MAX</name></expr></argument>, <argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><name pos:start="29:33" pos:end="29:34">fp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:38" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:33">

        <if_stmt pos:start="31:9" pos:end="47:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:44">(<expr pos:start="31:13" pos:end="31:43"><operator pos:start="31:13" pos:end="31:13">!</operator><call pos:start="31:14" pos:end="31:43"><name pos:start="31:14" pos:end="31:20">strncmp</name><argument_list pos:start="31:21" pos:end="31:43">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">buf</name></expr></argument>, <argument pos:start="31:27" pos:end="31:38"><expr pos:start="31:27" pos:end="31:38"><literal type="string" pos:start="31:27" pos:end="31:38">"virtfs.uid"</literal></expr></argument>, <argument pos:start="31:41" pos:end="31:42"><expr pos:start="31:41" pos:end="31:42"><literal type="number" pos:start="31:41" pos:end="31:42">10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:46" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:31">

            <expr_stmt pos:start="33:13" pos:end="33:31"><expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:15">uid</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:22">atoi</name><argument_list pos:start="33:23" pos:end="33:30">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:26">buf</name><operator pos:start="33:27" pos:end="33:27">+</operator><literal type="number" pos:start="33:28" pos:end="33:29">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="39:9">else if <condition pos:start="35:19" pos:end="35:51">(<expr pos:start="35:20" pos:end="35:50"><operator pos:start="35:20" pos:end="35:20">!</operator><call pos:start="35:21" pos:end="35:50"><name pos:start="35:21" pos:end="35:27">strncmp</name><argument_list pos:start="35:28" pos:end="35:50">(<argument pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:31">buf</name></expr></argument>, <argument pos:start="35:34" pos:end="35:45"><expr pos:start="35:34" pos:end="35:45"><literal type="string" pos:start="35:34" pos:end="35:45">"virtfs.gid"</literal></expr></argument>, <argument pos:start="35:48" pos:end="35:49"><expr pos:start="35:48" pos:end="35:49"><literal type="number" pos:start="35:48" pos:end="35:49">10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:53" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:31">

            <expr_stmt pos:start="37:13" pos:end="37:31"><expr pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:15">gid</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:22">atoi</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:26">buf</name><operator pos:start="37:27" pos:end="37:27">+</operator><literal type="number" pos:start="37:28" pos:end="37:29">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:52">(<expr pos:start="39:20" pos:end="39:51"><operator pos:start="39:20" pos:end="39:20">!</operator><call pos:start="39:21" pos:end="39:51"><name pos:start="39:21" pos:end="39:27">strncmp</name><argument_list pos:start="39:28" pos:end="39:51">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">buf</name></expr></argument>, <argument pos:start="39:34" pos:end="39:46"><expr pos:start="39:34" pos:end="39:46"><literal type="string" pos:start="39:34" pos:end="39:46">"virtfs.mode"</literal></expr></argument>, <argument pos:start="39:49" pos:end="39:50"><expr pos:start="39:49" pos:end="39:50"><literal type="number" pos:start="39:49" pos:end="39:50">11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:54" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:32">

            <expr_stmt pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:16">mode</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:31"><name pos:start="41:20" pos:end="41:23">atoi</name><argument_list pos:start="41:24" pos:end="41:31">(<argument pos:start="41:25" pos:end="41:30"><expr pos:start="41:25" pos:end="41:30"><name pos:start="41:25" pos:end="41:27">buf</name><operator pos:start="41:28" pos:end="41:28">+</operator><literal type="number" pos:start="41:29" pos:end="41:30">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="47:9">else if <condition pos:start="43:19" pos:end="43:52">(<expr pos:start="43:20" pos:end="43:51"><operator pos:start="43:20" pos:end="43:20">!</operator><call pos:start="43:21" pos:end="43:51"><name pos:start="43:21" pos:end="43:27">strncmp</name><argument_list pos:start="43:28" pos:end="43:51">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">buf</name></expr></argument>, <argument pos:start="43:34" pos:end="43:46"><expr pos:start="43:34" pos:end="43:46"><literal type="string" pos:start="43:34" pos:end="43:46">"virtfs.rdev"</literal></expr></argument>, <argument pos:start="43:49" pos:end="43:50"><expr pos:start="43:49" pos:end="43:50"><literal type="number" pos:start="43:49" pos:end="43:50">11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:54" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:32">

            <expr_stmt pos:start="45:13" pos:end="45:32"><expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:16">rdev</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:31"><name pos:start="45:20" pos:end="45:23">atoi</name><argument_list pos:start="45:24" pos:end="45:31">(<argument pos:start="45:25" pos:end="45:30"><expr pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:27">buf</name><operator pos:start="45:28" pos:end="45:28">+</operator><literal type="number" pos:start="45:29" pos:end="45:30">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><call pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:14">memset</name><argument_list pos:start="49:15" pos:end="49:32">(<argument pos:start="49:16" pos:end="49:18"><expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">buf</name></expr></argument>, <argument pos:start="49:21" pos:end="49:21"><expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr></argument>, <argument pos:start="49:24" pos:end="49:31"><expr pos:start="49:24" pos:end="49:31"><name pos:start="49:24" pos:end="49:31">ATTR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="53:5" pos:end="53:15"><expr pos:start="53:5" pos:end="53:14"><call pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:10">fclose</name><argument_list pos:start="53:11" pos:end="53:14">(<argument pos:start="53:12" pos:end="53:13"><expr pos:start="53:12" pos:end="53:13"><name pos:start="53:12" pos:end="53:13">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <goto pos:start="55:5" pos:end="55:25">goto <name pos:start="55:10" pos:end="55:24">update_map_file</name>;</goto>



<label pos:start="59:1" pos:end="59:16"><name pos:start="59:1" pos:end="59:15">create_map_file</name>:</label>

    <expr_stmt pos:start="61:5" pos:end="61:50"><expr pos:start="61:5" pos:end="61:49"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:49"><name pos:start="61:11" pos:end="61:38">local_create_mapped_attr_dir</name><argument_list pos:start="61:39" pos:end="61:49">(<argument pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:42">ctx</name></expr></argument>, <argument pos:start="61:45" pos:end="61:48"><expr pos:start="61:45" pos:end="61:48"><name pos:start="61:45" pos:end="61:48">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">&lt;</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition> <block pos:start="63:18" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:21">

        <goto pos:start="65:9" pos:end="65:21">goto <name pos:start="65:14" pos:end="65:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



<label pos:start="71:1" pos:end="71:16"><name pos:start="71:1" pos:end="71:15">update_map_file</name>:</label>

    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:6">fp</name> <operator pos:start="73:8" pos:end="73:8">=</operator> <call pos:start="73:10" pos:end="73:36"><name pos:start="73:10" pos:end="73:20">local_fopen</name><argument_list pos:start="73:21" pos:end="73:36">(<argument pos:start="73:22" pos:end="73:30"><expr pos:start="73:22" pos:end="73:30"><name pos:start="73:22" pos:end="73:30">attr_path</name></expr></argument>, <argument pos:start="73:33" pos:end="73:35"><expr pos:start="73:33" pos:end="73:35"><literal type="string" pos:start="73:33" pos:end="73:35">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:12">(<expr pos:start="75:9" pos:end="75:11"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:11">fp</name></expr>)</condition> <block pos:start="75:14" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:21">

        <expr_stmt pos:start="77:9" pos:end="77:17"><expr pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <operator pos:start="77:15" pos:end="77:15">-</operator><literal type="number" pos:start="77:16" pos:end="77:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:21">goto <name pos:start="79:14" pos:end="79:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:28">(<expr pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:13">credp</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:21">fc_uid</name></name> <operator pos:start="85:23" pos:end="85:24">!=</operator> <operator pos:start="85:26" pos:end="85:26">-</operator><literal type="number" pos:start="85:27" pos:end="85:27">1</literal></expr>)</condition> <block pos:start="85:30" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:28">

        <expr_stmt pos:start="87:9" pos:end="87:28"><expr pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:11">uid</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <name pos:start="87:15" pos:end="87:27"><name pos:start="87:15" pos:end="87:19">credp</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:27">fc_uid</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:28">(<expr pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:13">credp</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:21">fc_gid</name></name> <operator pos:start="91:23" pos:end="91:24">!=</operator> <operator pos:start="91:26" pos:end="91:26">-</operator><literal type="number" pos:start="91:27" pos:end="91:27">1</literal></expr>)</condition> <block pos:start="91:30" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:28">

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:11">gid</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <name pos:start="93:15" pos:end="93:27"><name pos:start="93:15" pos:end="93:19">credp</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:27">fc_gid</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:29">(<expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:13">credp</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:22">fc_mode</name></name> <operator pos:start="97:24" pos:end="97:25">!=</operator> <operator pos:start="97:27" pos:end="97:27">-</operator><literal type="number" pos:start="97:28" pos:end="97:28">1</literal></expr>)</condition> <block pos:start="97:31" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:30">

        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:12">mode</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:29"><name pos:start="99:16" pos:end="99:20">credp</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:29">fc_mode</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="107:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:29">(<expr pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:13">credp</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:22">fc_rdev</name></name> <operator pos:start="103:24" pos:end="103:25">!=</operator> <operator pos:start="103:27" pos:end="103:27">-</operator><literal type="number" pos:start="103:28" pos:end="103:28">1</literal></expr>)</condition> <block pos:start="103:31" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:30">

        <expr_stmt pos:start="105:9" pos:end="105:30"><expr pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:12">rdev</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <name pos:start="105:16" pos:end="105:29"><name pos:start="105:16" pos:end="105:20">credp</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:29">fc_rdev</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:18">(<expr pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:11">uid</name> <operator pos:start="113:13" pos:end="113:14">!=</operator> <operator pos:start="113:16" pos:end="113:16">-</operator><literal type="number" pos:start="113:17" pos:end="113:17">1</literal></expr>)</condition> <block pos:start="113:20" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:44">

        <expr_stmt pos:start="115:9" pos:end="115:44"><expr pos:start="115:9" pos:end="115:43"><call pos:start="115:9" pos:end="115:43"><name pos:start="115:9" pos:end="115:15">fprintf</name><argument_list pos:start="115:16" pos:end="115:43">(<argument pos:start="115:17" pos:end="115:18"><expr pos:start="115:17" pos:end="115:18"><name pos:start="115:17" pos:end="115:18">fp</name></expr></argument>, <argument pos:start="115:21" pos:end="115:37"><expr pos:start="115:21" pos:end="115:37"><literal type="string" pos:start="115:21" pos:end="115:37">"virtfs.uid=%d\n"</literal></expr></argument>, <argument pos:start="115:40" pos:end="115:42"><expr pos:start="115:40" pos:end="115:42"><name pos:start="115:40" pos:end="115:42">uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:18">(<expr pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:11">gid</name> <operator pos:start="119:13" pos:end="119:14">!=</operator> <operator pos:start="119:16" pos:end="119:16">-</operator><literal type="number" pos:start="119:17" pos:end="119:17">1</literal></expr>)</condition> <block pos:start="119:20" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:44">

        <expr_stmt pos:start="121:9" pos:end="121:44"><expr pos:start="121:9" pos:end="121:43"><call pos:start="121:9" pos:end="121:43"><name pos:start="121:9" pos:end="121:15">fprintf</name><argument_list pos:start="121:16" pos:end="121:43">(<argument pos:start="121:17" pos:end="121:18"><expr pos:start="121:17" pos:end="121:18"><name pos:start="121:17" pos:end="121:18">fp</name></expr></argument>, <argument pos:start="121:21" pos:end="121:37"><expr pos:start="121:21" pos:end="121:37"><literal type="string" pos:start="121:21" pos:end="121:37">"virtfs.gid=%d\n"</literal></expr></argument>, <argument pos:start="121:40" pos:end="121:42"><expr pos:start="121:40" pos:end="121:42"><name pos:start="121:40" pos:end="121:42">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="129:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:19">(<expr pos:start="125:9" pos:end="125:18"><name pos:start="125:9" pos:end="125:12">mode</name> <operator pos:start="125:14" pos:end="125:15">!=</operator> <operator pos:start="125:17" pos:end="125:17">-</operator><literal type="number" pos:start="125:18" pos:end="125:18">1</literal></expr>)</condition> <block pos:start="125:21" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:46">

        <expr_stmt pos:start="127:9" pos:end="127:46"><expr pos:start="127:9" pos:end="127:45"><call pos:start="127:9" pos:end="127:45"><name pos:start="127:9" pos:end="127:15">fprintf</name><argument_list pos:start="127:16" pos:end="127:45">(<argument pos:start="127:17" pos:end="127:18"><expr pos:start="127:17" pos:end="127:18"><name pos:start="127:17" pos:end="127:18">fp</name></expr></argument>, <argument pos:start="127:21" pos:end="127:38"><expr pos:start="127:21" pos:end="127:38"><literal type="string" pos:start="127:21" pos:end="127:38">"virtfs.mode=%d\n"</literal></expr></argument>, <argument pos:start="127:41" pos:end="127:44"><expr pos:start="127:41" pos:end="127:44"><name pos:start="127:41" pos:end="127:44">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="131:5" pos:end="135:5"><if pos:start="131:5" pos:end="135:5">if <condition pos:start="131:8" pos:end="131:19">(<expr pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:12">rdev</name> <operator pos:start="131:14" pos:end="131:15">!=</operator> <operator pos:start="131:17" pos:end="131:17">-</operator><literal type="number" pos:start="131:18" pos:end="131:18">1</literal></expr>)</condition> <block pos:start="131:21" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:46">

        <expr_stmt pos:start="133:9" pos:end="133:46"><expr pos:start="133:9" pos:end="133:45"><call pos:start="133:9" pos:end="133:45"><name pos:start="133:9" pos:end="133:15">fprintf</name><argument_list pos:start="133:16" pos:end="133:45">(<argument pos:start="133:17" pos:end="133:18"><expr pos:start="133:17" pos:end="133:18"><name pos:start="133:17" pos:end="133:18">fp</name></expr></argument>, <argument pos:start="133:21" pos:end="133:38"><expr pos:start="133:21" pos:end="133:38"><literal type="string" pos:start="133:21" pos:end="133:38">"virtfs.rdev=%d\n"</literal></expr></argument>, <argument pos:start="133:41" pos:end="133:44"><expr pos:start="133:41" pos:end="133:44"><name pos:start="133:41" pos:end="133:44">rdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:15"><expr pos:start="137:5" pos:end="137:14"><call pos:start="137:5" pos:end="137:14"><name pos:start="137:5" pos:end="137:10">fclose</name><argument_list pos:start="137:11" pos:end="137:14">(<argument pos:start="137:12" pos:end="137:13"><expr pos:start="137:12" pos:end="137:13"><name pos:start="137:12" pos:end="137:13">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="141:1" pos:end="141:8"><name pos:start="141:1" pos:end="141:7">err_out</name>:</label>

    <return pos:start="143:5" pos:end="143:15">return <expr pos:start="143:12" pos:end="143:14"><name pos:start="143:12" pos:end="143:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
