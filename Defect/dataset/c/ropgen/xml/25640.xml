<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25640.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">bmp_parse</name><parameter_list pos:start="1:21" pos:end="5:54">(<parameter pos:start="1:22" pos:end="1:44"><decl pos:start="1:22" pos:end="1:44"><type pos:start="1:22" pos:end="1:44"><name pos:start="1:22" pos:end="1:41">AVCodecParserContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:44"><decl pos:start="3:22" pos:end="3:44"><type pos:start="3:22" pos:end="3:44"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier><modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:44">poutbuf</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:63"><decl pos:start="3:47" pos:end="3:63"><type pos:start="3:47" pos:end="3:63"><name pos:start="3:47" pos:end="3:49">int</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:63">poutbuf_size</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:39"><decl pos:start="5:22" pos:end="5:39"><type pos:start="5:22" pos:end="5:39"><specifier pos:start="5:22" pos:end="5:26">const</specifier> <name pos:start="5:28" pos:end="5:34">uint8_t</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:39">buf</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="133:1">{<block_content pos:start="9:5" pos:end="131:16">

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">BMPParseContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">bpc</name> <init pos:start="9:26" pos:end="9:39">= <expr pos:start="9:28" pos:end="9:39"><name pos:start="9:28" pos:end="9:39"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:18">state</name> <init pos:start="11:20" pos:end="11:36">= <expr pos:start="11:22" pos:end="11:36"><name pos:start="11:22" pos:end="11:36"><name pos:start="11:22" pos:end="11:24">bpc</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:28">pc</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:36">state64</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">next</name> <init pos:start="13:14" pos:end="13:28">= <expr pos:start="13:16" pos:end="13:28"><name pos:start="13:16" pos:end="13:28">END_NOT_FOUND</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name> <init pos:start="15:11" pos:end="15:13">= <expr pos:start="15:13" pos:end="15:13"><literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:17">poutbuf_size</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>;</expr_stmt>



<label pos:start="23:1" pos:end="23:8"><name pos:start="23:1" pos:end="23:7">restart</name>:</label>

    <if_stmt pos:start="25:5" pos:end="105:5"><if pos:start="25:5" pos:end="85:5">if <condition pos:start="25:8" pos:end="25:43">(<expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:11">bpc</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:15">pc</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:33">frame_start_found</name></name> <operator pos:start="25:35" pos:end="25:36">&lt;=</operator> <literal type="number" pos:start="25:38" pos:end="25:39">2</literal><operator pos:start="25:39" pos:end="25:39">+</operator><literal type="number" pos:start="25:40" pos:end="25:41">4</literal><operator pos:start="25:41" pos:end="25:41">+</operator><literal type="number" pos:start="25:42" pos:end="25:42">4</literal></expr>)</condition> <block pos:start="25:45" pos:end="85:5">{<block_content pos:start="27:9" pos:end="83:32">

        <for pos:start="27:9" pos:end="81:9">for <control pos:start="27:13" pos:end="27:33">(<init pos:start="27:14" pos:end="27:14">;</init> <condition pos:start="27:16" pos:end="27:28"><expr pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:16">i</name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <name pos:start="27:20" pos:end="27:27">buf_size</name></expr>;</condition> <incr pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:30">i</name><operator pos:start="27:31" pos:end="27:32">++</operator></expr></incr>)</control> <block pos:start="27:35" pos:end="81:9">{<block_content pos:start="29:13" pos:end="79:44">

            <expr_stmt pos:start="29:13" pos:end="29:42"><expr pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:17">state</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <operator pos:start="29:21" pos:end="29:21">(</operator><name pos:start="29:22" pos:end="29:26">state</name> <operator pos:start="29:28" pos:end="29:29">&lt;&lt;</operator> <literal type="number" pos:start="29:31" pos:end="29:31">8</literal><operator pos:start="29:32" pos:end="29:32">)</operator> <operator pos:start="29:34" pos:end="29:34">|</operator> <name pos:start="29:36" pos:end="29:41"><name pos:start="29:36" pos:end="29:38">buf</name><index pos:start="29:39" pos:end="29:41">[<expr pos:start="29:40" pos:end="29:40"><name pos:start="29:40" pos:end="29:40">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="79:44"><if pos:start="31:13" pos:end="41:13">if <condition pos:start="31:16" pos:end="31:47">(<expr pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:41"><name pos:start="31:17" pos:end="31:19">bpc</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:23">pc</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:41">frame_start_found</name></name> <operator pos:start="31:43" pos:end="31:44">==</operator> <literal type="number" pos:start="31:46" pos:end="31:46">0</literal></expr>)</condition> <block pos:start="31:49" pos:end="41:13">{<block_content pos:start="33:17" pos:end="39:17">

                <if_stmt pos:start="33:17" pos:end="39:17"><if pos:start="33:17" pos:end="39:17">if <condition pos:start="33:20" pos:end="33:56">(<expr pos:start="33:21" pos:end="33:55"><operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:26">state</name> <operator pos:start="33:28" pos:end="33:29">&gt;&gt;</operator> <literal type="number" pos:start="33:31" pos:end="33:32">48</literal><operator pos:start="33:33" pos:end="33:33">)</operator> <operator pos:start="33:35" pos:end="33:36">==</operator> <operator pos:start="33:38" pos:end="33:38">(</operator><operator pos:start="33:39" pos:end="33:39">(</operator><literal type="char" pos:start="33:40" pos:end="33:42">'B'</literal> <operator pos:start="33:44" pos:end="33:45">&lt;&lt;</operator> <literal type="number" pos:start="33:47" pos:end="33:47">8</literal><operator pos:start="33:48" pos:end="33:48">)</operator> <operator pos:start="33:50" pos:end="33:50">|</operator> <literal type="char" pos:start="33:52" pos:end="33:54">'M'</literal><operator pos:start="33:55" pos:end="33:55">)</operator></expr>)</condition> <block pos:start="33:58" pos:end="39:17">{<block_content pos:start="35:21" pos:end="37:50">

                    <expr_stmt pos:start="35:21" pos:end="35:57"><expr pos:start="35:21" pos:end="35:56"><name pos:start="35:21" pos:end="35:30"><name pos:start="35:21" pos:end="35:23">bpc</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:30">fsize</name></name> <operator pos:start="35:32" pos:end="35:32">=</operator> <call pos:start="35:34" pos:end="35:56"><name pos:start="35:34" pos:end="35:43">av_bswap32</name><argument_list pos:start="35:44" pos:end="35:56">(<argument pos:start="35:45" pos:end="35:55"><expr pos:start="35:45" pos:end="35:55"><name pos:start="35:45" pos:end="35:49">state</name> <operator pos:start="35:51" pos:end="35:52">&gt;&gt;</operator> <literal type="number" pos:start="35:54" pos:end="35:55">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="37:21" pos:end="37:50"><expr pos:start="37:21" pos:end="37:49"><name pos:start="37:21" pos:end="37:45"><name pos:start="37:21" pos:end="37:23">bpc</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">pc</name><operator pos:start="37:28" pos:end="37:28">.</operator><name pos:start="37:29" pos:end="37:45">frame_start_found</name></name> <operator pos:start="37:47" pos:end="37:47">=</operator> <literal type="number" pos:start="37:49" pos:end="37:49">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="41:15" pos:end="77:13">else if <condition pos:start="41:23" pos:end="41:58">(<expr pos:start="41:24" pos:end="41:57"><name pos:start="41:24" pos:end="41:48"><name pos:start="41:24" pos:end="41:26">bpc</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:30">pc</name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:48">frame_start_found</name></name> <operator pos:start="41:50" pos:end="41:51">==</operator> <literal type="number" pos:start="41:53" pos:end="41:54">2</literal><operator pos:start="41:54" pos:end="41:54">+</operator><literal type="number" pos:start="41:55" pos:end="41:56">4</literal><operator pos:start="41:56" pos:end="41:56">+</operator><literal type="number" pos:start="41:57" pos:end="41:57">4</literal></expr>)</condition> <block pos:start="41:60" pos:end="77:13">{<block_content pos:start="45:17" pos:end="75:17">

<comment type="line" pos:start="43:1" pos:end="43:58">//                 unsigned hsize = av_bswap32(state&gt;&gt;32);</comment>

                <decl_stmt pos:start="45:17" pos:end="45:52"><decl pos:start="45:17" pos:end="45:51"><type pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:24">unsigned</name></type> <name pos:start="45:26" pos:end="45:31">ihsize</name> <init pos:start="45:33" pos:end="45:51">= <expr pos:start="45:35" pos:end="45:51"><call pos:start="45:35" pos:end="45:51"><name pos:start="45:35" pos:end="45:44">av_bswap32</name><argument_list pos:start="45:45" pos:end="45:51">(<argument pos:start="45:46" pos:end="45:50"><expr pos:start="45:46" pos:end="45:50"><name pos:start="45:46" pos:end="45:50">state</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if <condition pos:start="47:20" pos:end="47:48">(<expr pos:start="47:21" pos:end="47:47"><name pos:start="47:21" pos:end="47:43"><name pos:start="47:21" pos:end="47:26">ihsize</name> <argument_list type="generic" pos:start="47:28" pos:end="47:43">&lt; <argument pos:start="47:30" pos:end="47:41"><expr pos:start="47:30" pos:end="47:41"><literal type="number" pos:start="47:30" pos:end="47:31">12</literal> <operator pos:start="47:33" pos:end="47:34">||</operator> <name pos:start="47:36" pos:end="47:41">ihsize</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="47:45" pos:end="47:47">200</literal></expr>)</condition> <block pos:start="47:50" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:29">

                    <expr_stmt pos:start="49:21" pos:end="49:50"><expr pos:start="49:21" pos:end="49:49"><name pos:start="49:21" pos:end="49:45"><name pos:start="49:21" pos:end="49:23">bpc</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:27">pc</name><operator pos:start="49:28" pos:end="49:28">.</operator><name pos:start="49:29" pos:end="49:45">frame_start_found</name></name> <operator pos:start="49:47" pos:end="49:47">=</operator> <literal type="number" pos:start="49:49" pos:end="49:49">0</literal></expr>;</expr_stmt>

                    <continue pos:start="51:21" pos:end="51:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:44"><expr pos:start="55:17" pos:end="55:43"><name pos:start="55:17" pos:end="55:41"><name pos:start="55:17" pos:end="55:19">bpc</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:23">pc</name><operator pos:start="55:24" pos:end="55:24">.</operator><name pos:start="55:25" pos:end="55:41">frame_start_found</name></name><operator pos:start="55:42" pos:end="55:43">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:58"><expr pos:start="57:17" pos:end="57:57"><name pos:start="57:17" pos:end="57:35"><name pos:start="57:17" pos:end="57:19">bpc</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:35">remaining_size</name></name> <operator pos:start="57:37" pos:end="57:37">=</operator> <name pos:start="57:39" pos:end="57:48"><name pos:start="57:39" pos:end="57:41">bpc</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:48">fsize</name></name> <operator pos:start="57:50" pos:end="57:50">+</operator> <name pos:start="57:52" pos:end="57:52">i</name> <operator pos:start="57:54" pos:end="57:54">-</operator> <literal type="number" pos:start="57:56" pos:end="57:57">17</literal></expr>;</expr_stmt>



                <if_stmt pos:start="61:17" pos:end="75:17"><if pos:start="61:17" pos:end="69:17">if <condition pos:start="61:20" pos:end="61:43">(<expr pos:start="61:21" pos:end="61:42"><name pos:start="61:21" pos:end="61:33"><name pos:start="61:21" pos:end="61:23">bpc</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:27">pc</name><operator pos:start="61:28" pos:end="61:28">.</operator><name pos:start="61:29" pos:end="61:33">index</name></name> <operator pos:start="61:35" pos:end="61:35">+</operator> <name pos:start="61:37" pos:end="61:37">i</name> <operator pos:start="61:39" pos:end="61:39">&gt;</operator> <literal type="number" pos:start="61:41" pos:end="61:42">17</literal></expr>)</condition> <block pos:start="61:45" pos:end="69:17">{<block_content pos:start="63:21" pos:end="67:26">

                    <expr_stmt pos:start="63:21" pos:end="63:34"><expr pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:24">next</name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:28">i</name> <operator pos:start="63:30" pos:end="63:30">-</operator> <literal type="number" pos:start="63:32" pos:end="63:33">17</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:30"><expr pos:start="65:21" pos:end="65:29"><name pos:start="65:21" pos:end="65:25">state</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <literal type="number" pos:start="65:29" pos:end="65:29">0</literal></expr>;</expr_stmt>

                    <break pos:start="67:21" pos:end="67:26">break;</break>

                </block_content>}</block></if> <else pos:start="69:19" pos:end="75:17">else <block pos:start="69:24" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:33">

                    <expr_stmt pos:start="71:21" pos:end="71:40"><expr pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:23">bpc</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:27">pc</name><operator pos:start="71:28" pos:end="71:28">.</operator><name pos:start="71:29" pos:end="71:35">state64</name></name> <operator pos:start="71:37" pos:end="71:37">=</operator> <literal type="number" pos:start="71:39" pos:end="71:39">0</literal></expr>;</expr_stmt>

                    <goto pos:start="73:21" pos:end="73:33">goto <name pos:start="73:26" pos:end="73:32">restart</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="77:15" pos:end="79:44">else if <condition pos:start="77:23" pos:end="77:49">(<expr pos:start="77:24" pos:end="77:48"><name pos:start="77:24" pos:end="77:48"><name pos:start="77:24" pos:end="77:26">bpc</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:30">pc</name><operator pos:start="77:31" pos:end="77:31">.</operator><name pos:start="77:32" pos:end="77:48">frame_start_found</name></name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:44"><block_content pos:start="79:17" pos:end="79:44">

                <expr_stmt pos:start="79:17" pos:end="79:44"><expr pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:41"><name pos:start="79:17" pos:end="79:19">bpc</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:23">pc</name><operator pos:start="79:24" pos:end="79:24">.</operator><name pos:start="79:25" pos:end="79:41">frame_start_found</name></name><operator pos:start="79:42" pos:end="79:43">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:11">bpc</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:15">pc</name><operator pos:start="83:16" pos:end="83:16">.</operator><name pos:start="83:17" pos:end="83:23">state64</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <name pos:start="83:27" pos:end="83:31">state</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="105:5">else <block pos:start="85:12" pos:end="105:5">{<block_content pos:start="87:9" pos:end="103:9">

        <if_stmt pos:start="87:9" pos:end="103:9"><if pos:start="87:9" pos:end="103:9">if <condition pos:start="87:12" pos:end="87:32">(<expr pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:15">bpc</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:31">remaining_size</name></name></expr>)</condition> <block pos:start="87:34" pos:end="103:9">{<block_content pos:start="89:13" pos:end="101:25">

            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:13">i</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <call pos:start="89:17" pos:end="89:52"><name pos:start="89:17" pos:end="89:21">FFMIN</name><argument_list pos:start="89:22" pos:end="89:52">(<argument pos:start="89:23" pos:end="89:41"><expr pos:start="89:23" pos:end="89:41"><name pos:start="89:23" pos:end="89:41"><name pos:start="89:23" pos:end="89:25">bpc</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:41">remaining_size</name></name></expr></argument>, <argument pos:start="89:44" pos:end="89:51"><expr pos:start="89:44" pos:end="89:51"><name pos:start="89:44" pos:end="89:51">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:37"><expr pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:15">bpc</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:31">remaining_size</name></name> <operator pos:start="91:33" pos:end="91:34">-=</operator> <name pos:start="91:36" pos:end="91:36">i</name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="95:27"><if pos:start="93:13" pos:end="95:27">if <condition pos:start="93:16" pos:end="93:36">(<expr pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:19">bpc</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:35">remaining_size</name></name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:27"><block_content pos:start="95:17" pos:end="95:27">

                <goto pos:start="95:17" pos:end="95:27">goto <name pos:start="95:22" pos:end="95:26">flush</name>;</goto></block_content></block></if></if_stmt>



            <expr_stmt pos:start="99:13" pos:end="99:42"><expr pos:start="99:13" pos:end="99:41"><name pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:15">bpc</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:19">pc</name><operator pos:start="99:20" pos:end="99:20">.</operator><name pos:start="99:21" pos:end="99:37">frame_start_found</name></name> <operator pos:start="99:39" pos:end="99:39">=</operator> <literal type="number" pos:start="99:41" pos:end="99:41">0</literal></expr>;</expr_stmt>

            <goto pos:start="101:13" pos:end="101:25">goto <name pos:start="101:18" pos:end="101:24">restart</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="109:1" pos:end="109:6"><name pos:start="109:1" pos:end="109:5">flush</name>:</label>

    <if_stmt pos:start="111:5" pos:end="113:24"><if pos:start="111:5" pos:end="113:24">if <condition pos:start="111:8" pos:end="111:62">(<expr pos:start="111:9" pos:end="111:61"><call pos:start="111:9" pos:end="111:57"><name pos:start="111:9" pos:end="111:24">ff_combine_frame</name><argument_list pos:start="111:25" pos:end="111:57">(<argument pos:start="111:26" pos:end="111:33"><expr pos:start="111:26" pos:end="111:33"><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:33"><name pos:start="111:27" pos:end="111:29">bpc</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:33">pc</name></name></expr></argument>, <argument pos:start="111:36" pos:end="111:39"><expr pos:start="111:36" pos:end="111:39"><name pos:start="111:36" pos:end="111:39">next</name></expr></argument>, <argument pos:start="111:42" pos:end="111:45"><expr pos:start="111:42" pos:end="111:45"><operator pos:start="111:42" pos:end="111:42">&amp;</operator><name pos:start="111:43" pos:end="111:45">buf</name></expr></argument>, <argument pos:start="111:48" pos:end="111:56"><expr pos:start="111:48" pos:end="111:56"><operator pos:start="111:48" pos:end="111:48">&amp;</operator><name pos:start="111:49" pos:end="111:56">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="111:59" pos:end="111:59">&lt;</operator> <literal type="number" pos:start="111:61" pos:end="111:61">0</literal></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:24"><block_content pos:start="113:9" pos:end="113:24">

        <return pos:start="113:9" pos:end="113:24">return <expr pos:start="113:16" pos:end="113:23"><name pos:start="113:16" pos:end="113:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="123:38"><if pos:start="117:5" pos:end="119:80">if <condition pos:start="117:8" pos:end="117:42">(<expr pos:start="117:9" pos:end="117:41"><name pos:start="117:9" pos:end="117:12">next</name> <operator pos:start="117:14" pos:end="117:15">!=</operator> <name pos:start="117:17" pos:end="117:29">END_NOT_FOUND</name> <operator pos:start="117:31" pos:end="117:32">&amp;&amp;</operator> <name pos:start="117:34" pos:end="117:37">next</name> <operator pos:start="117:39" pos:end="117:39">&lt;</operator> <literal type="number" pos:start="117:41" pos:end="117:41">0</literal></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:80"><block_content pos:start="119:9" pos:end="119:80">

        <expr_stmt pos:start="119:9" pos:end="119:80"><expr pos:start="119:9" pos:end="119:79"><name pos:start="119:9" pos:end="119:33"><name pos:start="119:9" pos:end="119:11">bpc</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:15">pc</name><operator pos:start="119:16" pos:end="119:16">.</operator><name pos:start="119:17" pos:end="119:33">frame_start_found</name></name> <operator pos:start="119:35" pos:end="119:35">=</operator> <call pos:start="119:37" pos:end="119:79"><name pos:start="119:37" pos:end="119:41">FFMAX</name><argument_list pos:start="119:42" pos:end="119:79">(<argument pos:start="119:43" pos:end="119:75"><expr pos:start="119:43" pos:end="119:75"><name pos:start="119:43" pos:end="119:67"><name pos:start="119:43" pos:end="119:45">bpc</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:49">pc</name><operator pos:start="119:50" pos:end="119:50">.</operator><name pos:start="119:51" pos:end="119:67">frame_start_found</name></name> <operator pos:start="119:69" pos:end="119:69">-</operator> <name pos:start="119:71" pos:end="119:71">i</name> <operator pos:start="119:73" pos:end="119:73">-</operator> <literal type="number" pos:start="119:75" pos:end="119:75">1</literal></expr></argument>, <argument pos:start="119:78" pos:end="119:78"><expr pos:start="119:78" pos:end="119:78"><literal type="number" pos:start="119:78" pos:end="119:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="121:5" pos:end="123:38">else<block type="pseudo" pos:start="123:9" pos:end="123:38"><block_content pos:start="123:9" pos:end="123:38">

        <expr_stmt pos:start="123:9" pos:end="123:38"><expr pos:start="123:9" pos:end="123:37"><name pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:11">bpc</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:15">pc</name><operator pos:start="123:16" pos:end="123:16">.</operator><name pos:start="123:17" pos:end="123:33">frame_start_found</name></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:24"><expr pos:start="127:5" pos:end="127:23"><operator pos:start="127:5" pos:end="127:5">*</operator><name pos:start="127:6" pos:end="127:12">poutbuf</name>      <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:23">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:29"><expr pos:start="129:5" pos:end="129:28"><operator pos:start="129:5" pos:end="129:5">*</operator><name pos:start="129:6" pos:end="129:17">poutbuf_size</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <name pos:start="129:21" pos:end="129:28">buf_size</name></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:16">return <expr pos:start="131:12" pos:end="131:15"><name pos:start="131:12" pos:end="131:15">next</name></expr>;</return>

</block_content>}</block></function>
</unit>
