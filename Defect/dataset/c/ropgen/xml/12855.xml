<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12855.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:37">pdu_complete</name><parameter_list pos:start="1:38" pos:end="1:64">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">V9fsPDU</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">pdu</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:59">ssize_t</name></type> <name pos:start="1:61" pos:end="1:63">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:18">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">int8_t</name></type> <name pos:start="5:12" pos:end="5:13">id</name> <init pos:start="5:15" pos:end="5:27">= <expr pos:start="5:17" pos:end="5:27"><name pos:start="5:17" pos:end="5:23"><name pos:start="5:17" pos:end="5:19">pdu</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:23">id</name></name> <operator pos:start="5:25" pos:end="5:25">+</operator> <literal type="number" pos:start="5:27" pos:end="5:27">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="5:30" pos:end="5:43">/* Response */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">V9fsState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:25">= <expr pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:22">pdu</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:25">s</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="51:5"><if pos:start="11:5" pos:end="51:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">len</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition> <block pos:start="11:18" pos:end="51:5">{<block_content pos:start="13:9" pos:end="49:50">

        <decl_stmt pos:start="13:9" pos:end="13:23"><decl pos:start="13:9" pos:end="13:22"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">err</name> <init pos:start="13:17" pos:end="13:22">= <expr pos:start="13:19" pos:end="13:22"><operator pos:start="13:19" pos:end="13:19">-</operator><name pos:start="13:20" pos:end="13:22">len</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:16"><expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">len</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <literal type="number" pos:start="15:15" pos:end="15:15">7</literal></expr>;</expr_stmt>



        <if_stmt pos:start="19:9" pos:end="35:9"><if pos:start="19:9" pos:end="35:9">if <condition pos:start="19:12" pos:end="19:49">(<expr pos:start="19:13" pos:end="19:48"><name pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:28">proto_version</name></name> <operator pos:start="19:30" pos:end="19:31">!=</operator> <name pos:start="19:33" pos:end="19:48">V9FS_PROTO_2000L</name></expr>)</condition> <block pos:start="19:51" pos:end="35:9">{<block_content pos:start="21:13" pos:end="33:27">

            <decl_stmt pos:start="21:13" pos:end="21:27"><decl pos:start="21:13" pos:end="21:26"><type pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:22">V9fsString</name></type> <name pos:start="21:24" pos:end="21:26">str</name></decl>;</decl_stmt>



            <expr_stmt pos:start="25:13" pos:end="25:37"><expr pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:15">str</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:20">data</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:36"><name pos:start="25:24" pos:end="25:31">strerror</name><argument_list pos:start="25:32" pos:end="25:36">(<argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:35">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:40"><expr pos:start="27:13" pos:end="27:39"><name pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:15">str</name><operator pos:start="27:16" pos:end="27:16">.</operator><name pos:start="27:17" pos:end="27:20">size</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:29">strlen</name><argument_list pos:start="27:30" pos:end="27:39">(<argument pos:start="27:31" pos:end="27:38"><expr pos:start="27:31" pos:end="27:38"><name pos:start="27:31" pos:end="27:38"><name pos:start="27:31" pos:end="27:33">str</name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:38">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="31:13" pos:end="31:52"><expr pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:15">len</name> <operator pos:start="31:17" pos:end="31:18">+=</operator> <call pos:start="31:20" pos:end="31:51"><name pos:start="31:20" pos:end="31:30">pdu_marshal</name><argument_list pos:start="31:31" pos:end="31:51">(<argument pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:34">pdu</name></expr></argument>, <argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:39">len</name></expr></argument>, <argument pos:start="31:42" pos:end="31:44"><expr pos:start="31:42" pos:end="31:44"><literal type="string" pos:start="31:42" pos:end="31:44">"s"</literal></expr></argument>, <argument pos:start="31:47" pos:end="31:50"><expr pos:start="31:47" pos:end="31:50"><operator pos:start="31:47" pos:end="31:47">&amp;</operator><name pos:start="31:48" pos:end="31:50">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:14">id</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:26">P9_RERROR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:47"><expr pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:11">len</name> <operator pos:start="39:13" pos:end="39:14">+=</operator> <call pos:start="39:16" pos:end="39:46"><name pos:start="39:16" pos:end="39:26">pdu_marshal</name><argument_list pos:start="39:27" pos:end="39:46">(<argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">pdu</name></expr></argument>, <argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:35">len</name></expr></argument>, <argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><literal type="string" pos:start="39:38" pos:end="39:40">"d"</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:49">(<expr pos:start="43:13" pos:end="43:48"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:28">proto_version</name></name> <operator pos:start="43:30" pos:end="43:31">==</operator> <name pos:start="43:33" pos:end="43:48">V9FS_PROTO_2000L</name></expr>)</condition> <block pos:start="43:51" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:28">

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:14">id</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:27">P9_RLERROR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><call pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:25">trace_v9fs_rerror</name><argument_list pos:start="49:26" pos:end="49:49">(<argument pos:start="49:27" pos:end="49:34"><expr pos:start="49:27" pos:end="49:34"><name pos:start="49:27" pos:end="49:34"><name pos:start="49:27" pos:end="49:29">pdu</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:34">tag</name></name></expr></argument>, <argument pos:start="49:37" pos:end="49:43"><expr pos:start="49:37" pos:end="49:43"><name pos:start="49:37" pos:end="49:43"><name pos:start="49:37" pos:end="49:39">pdu</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:43">id</name></name></expr></argument>, <argument pos:start="49:46" pos:end="49:48"><expr pos:start="49:46" pos:end="49:48"><name pos:start="49:46" pos:end="49:48">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:52" pos:end="49:68">/* Trace ERROR */</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:29">/* fill out the header */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:59"><expr pos:start="57:5" pos:end="57:58"><call pos:start="57:5" pos:end="57:58"><name pos:start="57:5" pos:end="57:15">pdu_marshal</name><argument_list pos:start="57:16" pos:end="57:58">(<argument pos:start="57:17" pos:end="57:19"><expr pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:19">pdu</name></expr></argument>, <argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr></argument>, <argument pos:start="57:25" pos:end="57:29"><expr pos:start="57:25" pos:end="57:29"><literal type="string" pos:start="57:25" pos:end="57:29">"dbw"</literal></expr></argument>, <argument pos:start="57:32" pos:end="57:43"><expr pos:start="57:32" pos:end="57:43"><operator pos:start="57:32" pos:end="57:32">(</operator><name pos:start="57:33" pos:end="57:39">int32_t</name><operator pos:start="57:40" pos:end="57:40">)</operator><name pos:start="57:41" pos:end="57:43">len</name></expr></argument>, <argument pos:start="57:46" pos:end="57:47"><expr pos:start="57:46" pos:end="57:47"><name pos:start="57:46" pos:end="57:47">id</name></expr></argument>, <argument pos:start="57:50" pos:end="57:57"><expr pos:start="57:50" pos:end="57:57"><name pos:start="57:50" pos:end="57:57"><name pos:start="57:50" pos:end="57:52">pdu</name><operator pos:start="57:53" pos:end="57:54">-&gt;</operator><name pos:start="57:55" pos:end="57:57">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:28">/* keep these in sync */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:20"><expr pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:7">pdu</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:13">size</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:19">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:17"><expr pos:start="65:5" pos:end="65:16"><name pos:start="65:5" pos:end="65:11"><name pos:start="65:5" pos:end="65:7">pdu</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:11">id</name></name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:16">id</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:29"><expr pos:start="69:5" pos:end="69:28"><call pos:start="69:5" pos:end="69:28"><name pos:start="69:5" pos:end="69:23">pdu_push_and_notify</name><argument_list pos:start="69:24" pos:end="69:28">(<argument pos:start="69:25" pos:end="69:27"><expr pos:start="69:25" pos:end="69:27"><name pos:start="69:25" pos:end="69:27">pdu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:62">/* Now wakeup anybody waiting in flush for this request */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:39"><expr pos:start="75:5" pos:end="75:38"><call pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:22">qemu_co_queue_next</name><argument_list pos:start="75:23" pos:end="75:38">(<argument pos:start="75:24" pos:end="75:37"><expr pos:start="75:24" pos:end="75:37"><operator pos:start="75:24" pos:end="75:24">&amp;</operator><name pos:start="75:25" pos:end="75:37"><name pos:start="75:25" pos:end="75:27">pdu</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:37">complete</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><call pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:12">pdu_free</name><argument_list pos:start="79:13" pos:end="79:17">(<argument pos:start="79:14" pos:end="79:16"><expr pos:start="79:14" pos:end="79:16"><name pos:start="79:14" pos:end="79:16">pdu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
