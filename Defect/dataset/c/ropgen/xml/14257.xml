<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14257.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:42">qemu_rdma_register_and_get_keys</name><parameter_list pos:start="1:43" pos:end="7:49">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:54">RDMAContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">rdma</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:29"><decl pos:start="3:9" pos:end="3:29"><type pos:start="3:9" pos:end="3:29"><name pos:start="3:9" pos:end="3:22">RDMALocalBlock</name> <modifier pos:start="3:24" pos:end="3:24">*</modifier></type><name pos:start="3:25" pos:end="3:29">block</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:38">uint8_t</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:49">host_addr</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:22"><decl pos:start="5:9" pos:end="5:22"><type pos:start="5:9" pos:end="5:22"><name pos:start="5:9" pos:end="5:16">uint32_t</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">lkey</name></decl></parameter>, <parameter pos:start="5:25" pos:end="5:38"><decl pos:start="5:25" pos:end="5:38"><type pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:32">uint32_t</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:38">rkey</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:49"><decl pos:start="5:41" pos:end="5:49"><type pos:start="5:41" pos:end="5:49"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:49">chunk</name></decl></parameter>,

        <parameter pos:start="7:9" pos:end="7:28"><decl pos:start="7:9" pos:end="7:28"><type pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:15">uint8_t</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:28">chunk_start</name></decl></parameter>, <parameter pos:start="7:31" pos:end="7:48"><decl pos:start="7:31" pos:end="7:48"><type pos:start="7:31" pos:end="7:48"><name pos:start="7:31" pos:end="7:37">uint8_t</name> <modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:48">chunk_end</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="121:1">{<block_content pos:start="11:5" pos:end="119:13">

    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="27:5">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:13">block</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:17">mr</name></name></expr>)</condition> <block pos:start="11:20" pos:end="27:5">{<block_content pos:start="13:9" pos:end="25:17">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">lkey</name></expr>)</condition> <block pos:start="13:19" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:36">

            <expr_stmt pos:start="15:13" pos:end="15:36"><expr pos:start="15:13" pos:end="15:35"><operator pos:start="15:13" pos:end="15:13">*</operator><name pos:start="15:14" pos:end="15:17">lkey</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:35"><name pos:start="15:21" pos:end="15:25">block</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:29">mr</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">lkey</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">rkey</name></expr>)</condition> <block pos:start="19:19" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:36">

            <expr_stmt pos:start="21:13" pos:end="21:36"><expr pos:start="21:13" pos:end="21:35"><operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:17">rkey</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:35"><name pos:start="21:21" pos:end="21:25">block</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:29">mr</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">rkey</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:44">/* allocate memory to store chunk MRs */</comment>

    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:19"><name pos:start="33:10" pos:end="33:14">block</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:19">pmr</name></name></expr>)</condition> <block pos:start="33:22" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <expr_stmt pos:start="35:9" pos:end="35:75"><expr pos:start="35:9" pos:end="35:74"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:13">block</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:18">pmr</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:74"><name pos:start="35:22" pos:end="35:30">g_malloc0</name><argument_list pos:start="35:31" pos:end="35:74">(<argument pos:start="35:32" pos:end="35:73"><expr pos:start="35:32" pos:end="35:73"><name pos:start="35:32" pos:end="35:47"><name pos:start="35:32" pos:end="35:36">block</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:47">nb_chunks</name></name> <operator pos:start="35:49" pos:end="35:49">*</operator> <sizeof pos:start="35:51" pos:end="35:73">sizeof<argument_list pos:start="35:57" pos:end="35:73">(<argument pos:start="35:58" pos:end="35:72"><expr pos:start="35:58" pos:end="35:72">struct <name pos:start="35:65" pos:end="35:70">ibv_mr</name> <operator pos:start="35:72" pos:end="35:72">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:24">(<expr pos:start="37:13" pos:end="37:23"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:23"><name pos:start="37:14" pos:end="37:18">block</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:23">pmr</name></name></expr>)</condition> <block pos:start="37:26" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="55:7">/*

     * If 'rkey', then we're the destination, so grant access to the source.

     *

     * If 'lkey', then we're the source VM, so grant access only to ourselves.

     */</comment>

    <if_stmt pos:start="57:5" pos:end="103:5"><if pos:start="57:5" pos:end="103:5">if <condition pos:start="57:8" pos:end="57:27">(<expr pos:start="57:9" pos:end="57:26"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:26"><name pos:start="57:10" pos:end="57:14">block</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:19">pmr</name><index pos:start="57:20" pos:end="57:26">[<expr pos:start="57:21" pos:end="57:25"><name pos:start="57:21" pos:end="57:25">chunk</name></expr>]</index></name></expr>)</condition> <block pos:start="57:29" pos:end="103:5">{<block_content pos:start="59:9" pos:end="101:36">

        <decl_stmt pos:start="59:9" pos:end="59:47"><decl pos:start="59:9" pos:end="59:46"><type pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:16">uint64_t</name></type> <name pos:start="59:18" pos:end="59:20">len</name> <init pos:start="59:22" pos:end="59:46">= <expr pos:start="59:24" pos:end="59:46"><name pos:start="59:24" pos:end="59:32">chunk_end</name> <operator pos:start="59:34" pos:end="59:34">-</operator> <name pos:start="59:36" pos:end="59:46">chunk_start</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="63:9" pos:end="65:35"><expr pos:start="63:9" pos:end="65:34"><call pos:start="63:9" pos:end="65:34"><name pos:start="63:9" pos:end="63:16">DDPRINTF</name><argument_list pos:start="63:17" pos:end="65:34">(<argument pos:start="63:18" pos:end="63:55"><expr pos:start="63:18" pos:end="63:55"><literal type="string" pos:start="63:18" pos:end="63:32">"Registering %"</literal> <name pos:start="63:34" pos:end="63:39">PRIu64</name> <literal type="string" pos:start="63:41" pos:end="63:55">" bytes @ %p\n"</literal></expr></argument>,

                 <argument pos:start="65:18" pos:end="65:20"><expr pos:start="65:18" pos:end="65:20"><name pos:start="65:18" pos:end="65:20">len</name></expr></argument>, <argument pos:start="65:23" pos:end="65:33"><expr pos:start="65:23" pos:end="65:33"><name pos:start="65:23" pos:end="65:33">chunk_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="75:55"><expr pos:start="69:9" pos:end="75:54"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:13">block</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:18">pmr</name><index pos:start="69:19" pos:end="69:25">[<expr pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:24">chunk</name></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <call pos:start="69:29" pos:end="75:54"><name pos:start="69:29" pos:end="69:38">ibv_reg_mr</name><argument_list pos:start="69:39" pos:end="75:54">(<argument pos:start="69:40" pos:end="69:47"><expr pos:start="69:40" pos:end="69:47"><name pos:start="69:40" pos:end="69:47"><name pos:start="69:40" pos:end="69:43">rdma</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:47">pd</name></name></expr></argument>,

                <argument pos:start="71:17" pos:end="71:27"><expr pos:start="71:17" pos:end="71:27"><name pos:start="71:17" pos:end="71:27">chunk_start</name></expr></argument>, <argument pos:start="71:30" pos:end="71:32"><expr pos:start="71:30" pos:end="71:32"><name pos:start="71:30" pos:end="71:32">len</name></expr></argument>,

                <argument pos:start="73:17" pos:end="75:53"><expr pos:start="73:17" pos:end="75:53"><operator pos:start="73:17" pos:end="73:17">(</operator><ternary pos:start="73:18" pos:end="75:52"><condition pos:start="73:18" pos:end="73:23"><expr pos:start="73:18" pos:end="73:21"><name pos:start="73:18" pos:end="73:21">rkey</name></expr> ?</condition><then pos:start="73:25" pos:end="75:48"> <expr pos:start="73:25" pos:end="75:48"><operator pos:start="73:25" pos:end="73:25">(</operator><name pos:start="73:26" pos:end="73:47">IBV_ACCESS_LOCAL_WRITE</name> <operator pos:start="73:49" pos:end="73:49">|</operator>

                        <name pos:start="75:25" pos:end="75:47">IBV_ACCESS_REMOTE_WRITE</name><operator pos:start="75:48" pos:end="75:48">)</operator></expr> </then><else pos:start="75:50" pos:end="75:52">: <expr pos:start="75:52" pos:end="75:52"><literal type="number" pos:start="75:52" pos:end="75:52">0</literal></expr></else></ternary><operator pos:start="75:53" pos:end="75:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="99:9"><if pos:start="79:9" pos:end="99:9">if <condition pos:start="79:12" pos:end="79:31">(<expr pos:start="79:13" pos:end="79:30"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:30"><name pos:start="79:14" pos:end="79:18">block</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:23">pmr</name><index pos:start="79:24" pos:end="79:30">[<expr pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:29">chunk</name></expr>]</index></name></expr>)</condition> <block pos:start="79:33" pos:end="99:9">{<block_content pos:start="81:13" pos:end="97:22">

            <expr_stmt pos:start="81:13" pos:end="81:48"><expr pos:start="81:13" pos:end="81:47"><call pos:start="81:13" pos:end="81:47"><name pos:start="81:13" pos:end="81:18">perror</name><argument_list pos:start="81:19" pos:end="81:47">(<argument pos:start="81:20" pos:end="81:46"><expr pos:start="81:20" pos:end="81:46"><literal type="string" pos:start="81:20" pos:end="81:46">"Failed to register chunk!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="95:55"><expr pos:start="83:13" pos:end="95:54"><call pos:start="83:13" pos:end="95:54"><name pos:start="83:13" pos:end="83:19">fprintf</name><argument_list pos:start="83:20" pos:end="95:54">(<argument pos:start="83:21" pos:end="83:26"><expr pos:start="83:21" pos:end="83:26"><name pos:start="83:21" pos:end="83:26">stderr</name></expr></argument>, <argument pos:start="83:29" pos:end="87:68"><expr pos:start="83:29" pos:end="87:68"><literal type="string" pos:start="83:29" pos:end="83:69">"Chunk details: block: %d chunk index %d"</literal>

                            <literal type="string" pos:start="85:29" pos:end="85:38">" start %"</literal> <name pos:start="85:40" pos:end="85:45">PRIu64</name> <literal type="string" pos:start="85:47" pos:end="85:54">" end %"</literal> <name pos:start="85:56" pos:end="85:61">PRIu64</name> <literal type="string" pos:start="85:63" pos:end="85:71">" host %"</literal> <name pos:start="85:73" pos:end="85:78">PRIu64</name>

                            <literal type="string" pos:start="87:29" pos:end="87:38">" local %"</literal> <name pos:start="87:40" pos:end="87:45">PRIu64</name> <literal type="string" pos:start="87:47" pos:end="87:68">" registrations: %d\n"</literal></expr></argument>,

                            <argument pos:start="89:29" pos:end="89:40"><expr pos:start="89:29" pos:end="89:40"><name pos:start="89:29" pos:end="89:40"><name pos:start="89:29" pos:end="89:33">block</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:40">index</name></name></expr></argument>, <argument pos:start="89:43" pos:end="89:47"><expr pos:start="89:43" pos:end="89:47"><name pos:start="89:43" pos:end="89:47">chunk</name></expr></argument>, <argument pos:start="89:50" pos:end="89:71"><expr pos:start="89:50" pos:end="89:71"><operator pos:start="89:50" pos:end="89:50">(</operator><name pos:start="89:51" pos:end="89:58">uint64_t</name><operator pos:start="89:59" pos:end="89:59">)</operator> <name pos:start="89:61" pos:end="89:71">chunk_start</name></expr></argument>,

                            <argument pos:start="91:29" pos:end="91:48"><expr pos:start="91:29" pos:end="91:48"><operator pos:start="91:29" pos:end="91:29">(</operator><name pos:start="91:30" pos:end="91:37">uint64_t</name><operator pos:start="91:38" pos:end="91:38">)</operator> <name pos:start="91:40" pos:end="91:48">chunk_end</name></expr></argument>, <argument pos:start="91:51" pos:end="91:70"><expr pos:start="91:51" pos:end="91:70"><operator pos:start="91:51" pos:end="91:51">(</operator><name pos:start="91:52" pos:end="91:59">uint64_t</name><operator pos:start="91:60" pos:end="91:60">)</operator> <name pos:start="91:62" pos:end="91:70">host_addr</name></expr></argument>,

                            <argument pos:start="93:29" pos:end="93:61"><expr pos:start="93:29" pos:end="93:61"><operator pos:start="93:29" pos:end="93:29">(</operator><name pos:start="93:30" pos:end="93:37">uint64_t</name><operator pos:start="93:38" pos:end="93:38">)</operator> <name pos:start="93:40" pos:end="93:61"><name pos:start="93:40" pos:end="93:44">block</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:61">local_host_addr</name></name></expr></argument>,

                            <argument pos:start="95:29" pos:end="95:53"><expr pos:start="95:29" pos:end="95:53"><name pos:start="95:29" pos:end="95:53"><name pos:start="95:29" pos:end="95:32">rdma</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:53">total_registrations</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:22">return <expr pos:start="97:20" pos:end="97:21"><operator pos:start="97:20" pos:end="97:20">-</operator><literal type="number" pos:start="97:21" pos:end="97:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:36"><expr pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:12">rdma</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:33">total_registrations</name></name><operator pos:start="101:34" pos:end="101:35">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="111:5"><if pos:start="107:5" pos:end="111:5">if <condition pos:start="107:8" pos:end="107:13">(<expr pos:start="107:9" pos:end="107:12"><name pos:start="107:9" pos:end="107:12">lkey</name></expr>)</condition> <block pos:start="107:15" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:40">

        <expr_stmt pos:start="109:9" pos:end="109:40"><expr pos:start="109:9" pos:end="109:39"><operator pos:start="109:9" pos:end="109:9">*</operator><name pos:start="109:10" pos:end="109:13">lkey</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <name pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:21">block</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:26">pmr</name><index pos:start="109:27" pos:end="109:33">[<expr pos:start="109:28" pos:end="109:32"><name pos:start="109:28" pos:end="109:32">chunk</name></expr>]</index></name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:39">lkey</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:13">(<expr pos:start="113:9" pos:end="113:12"><name pos:start="113:9" pos:end="113:12">rkey</name></expr>)</condition> <block pos:start="113:15" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:40">

        <expr_stmt pos:start="115:9" pos:end="115:40"><expr pos:start="115:9" pos:end="115:39"><operator pos:start="115:9" pos:end="115:9">*</operator><name pos:start="115:10" pos:end="115:13">rkey</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <name pos:start="115:17" pos:end="115:33"><name pos:start="115:17" pos:end="115:21">block</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:26">pmr</name><index pos:start="115:27" pos:end="115:33">[<expr pos:start="115:28" pos:end="115:32"><name pos:start="115:28" pos:end="115:32">chunk</name></expr>]</index></name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:39">rkey</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
