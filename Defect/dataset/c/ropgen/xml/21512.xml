<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21512.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ff_MPV_encode_init_x86</name><parameter_list pos:start="1:28" pos:end="1:46">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">MpegEncContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">mm_flags</name> <init pos:start="5:18" pos:end="5:37">= <expr pos:start="5:20" pos:end="5:37"><call pos:start="5:20" pos:end="5:37"><name pos:start="5:20" pos:end="5:35">av_get_cpu_flags</name><argument_list pos:start="5:36" pos:end="5:37">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:22">dct_algo</name> <init pos:start="7:24" pos:end="7:43">= <expr pos:start="7:26" pos:end="7:43"><name pos:start="7:26" pos:end="7:43"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:33">avctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:43">dct_algo</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="45:5"><if pos:start="11:5" pos:end="45:5">if <condition pos:start="11:8" pos:end="11:58">(<expr pos:start="11:9" pos:end="11:57"><name pos:start="11:9" pos:end="11:16">dct_algo</name> <operator pos:start="11:18" pos:end="11:19">==</operator> <name pos:start="11:21" pos:end="11:31">FF_DCT_AUTO</name> <operator pos:start="11:33" pos:end="11:34">||</operator> <name pos:start="11:36" pos:end="11:43">dct_algo</name> <operator pos:start="11:45" pos:end="11:46">==</operator> <name pos:start="11:48" pos:end="11:57">FF_DCT_MMX</name></expr>)</condition> <block pos:start="11:60" pos:end="45:5">{<block_content pos:start="15:9" pos:end="44:0">

<cpp:if pos:start="13:1" pos:end="13:19">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">HAVE_MMX_INLINE</name></expr></cpp:if>

        <if_stmt pos:start="15:9" pos:end="22:0"><if pos:start="15:9" pos:end="22:0">if <condition pos:start="15:12" pos:end="15:51">(<expr pos:start="15:13" pos:end="15:50"><name pos:start="15:13" pos:end="15:20">mm_flags</name> <operator pos:start="15:22" pos:end="15:22">&amp;</operator> <name pos:start="15:24" pos:end="15:38">AV_CPU_FLAG_MMX</name> <operator pos:start="15:40" pos:end="15:41">&amp;&amp;</operator> <name pos:start="15:43" pos:end="15:50">HAVE_MMX</name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="22:0"><block_content pos:start="17:13" pos:end="22:0">

            <expr_stmt pos:start="17:13" pos:end="22:0"><expr pos:start="17:13" pos:end="17:46"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:27">dct_quantize</name></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <name pos:start="17:31" pos:end="17:46">dct_quantize_MMX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="21:1" pos:end="21:22">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:22">HAVE_MMXEXT_INLINE</name></expr></cpp:if>

        <if_stmt pos:start="23:9" pos:end="30:0"><if pos:start="23:9" pos:end="30:0">if <condition pos:start="23:12" pos:end="23:57">(<expr pos:start="23:13" pos:end="23:56"><name pos:start="23:13" pos:end="23:20">mm_flags</name> <operator pos:start="23:22" pos:end="23:22">&amp;</operator> <name pos:start="23:24" pos:end="23:41">AV_CPU_FLAG_MMXEXT</name> <operator pos:start="23:43" pos:end="23:44">&amp;&amp;</operator> <name pos:start="23:46" pos:end="23:56">HAVE_MMXEXT</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="30:0"><block_content pos:start="25:13" pos:end="30:0">

            <expr_stmt pos:start="25:13" pos:end="30:0"><expr pos:start="25:13" pos:end="25:47"><name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:27">dct_quantize</name></name> <operator pos:start="25:29" pos:end="25:29">=</operator> <name pos:start="25:31" pos:end="25:47">dct_quantize_MMX2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="29:1" pos:end="29:20">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:20">HAVE_SSE2_INLINE</name></expr></cpp:if>

        <if_stmt pos:start="31:9" pos:end="38:0"><if pos:start="31:9" pos:end="38:0">if <condition pos:start="31:12" pos:end="31:53">(<expr pos:start="31:13" pos:end="31:52"><name pos:start="31:13" pos:end="31:20">mm_flags</name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <name pos:start="31:24" pos:end="31:39">AV_CPU_FLAG_SSE2</name> <operator pos:start="31:41" pos:end="31:42">&amp;&amp;</operator> <name pos:start="31:44" pos:end="31:52">HAVE_SSE2</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="38:0"><block_content pos:start="33:13" pos:end="38:0">

            <expr_stmt pos:start="33:13" pos:end="38:0"><expr pos:start="33:13" pos:end="33:47"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:27">dct_quantize</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:47">dct_quantize_SSE2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="37:1" pos:end="37:21">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:21">HAVE_SSSE3_INLINE</name></expr></cpp:if>

        <if_stmt pos:start="39:9" pos:end="44:0"><if pos:start="39:9" pos:end="44:0">if <condition pos:start="39:12" pos:end="39:41">(<expr pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:20">mm_flags</name> <operator pos:start="39:22" pos:end="39:22">&amp;</operator> <name pos:start="39:24" pos:end="39:40">AV_CPU_FLAG_SSSE3</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="44:0"><block_content pos:start="41:13" pos:end="44:0">

            <expr_stmt pos:start="41:13" pos:end="44:0"><expr pos:start="41:13" pos:end="41:48"><name pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:27">dct_quantize</name></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:48">dct_quantize_SSSE3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
