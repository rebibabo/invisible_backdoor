<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24778.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">send_msg</name><parameter_list pos:start="1:21" pos:end="7:46">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:31">IPMIBmcSim</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">ibs</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:33"><decl pos:start="3:22" pos:end="3:33"><type pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:28">uint8_t</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:33">cmd</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:55"><decl pos:start="3:36" pos:end="3:55"><type pos:start="3:36" pos:end="3:55"><name pos:start="3:36" pos:end="3:43">unsigned</name> <name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:55">cmd_len</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:33"><decl pos:start="5:22" pos:end="5:33"><type pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:28">uint8_t</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:33">rsp</name></decl></parameter>, <parameter pos:start="5:36" pos:end="5:56"><decl pos:start="5:36" pos:end="5:56"><type pos:start="5:36" pos:end="5:56"><name pos:start="5:36" pos:end="5:43">unsigned</name> <name pos:start="5:45" pos:end="5:47">int</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:56">rsp_len</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:45"><decl pos:start="7:22" pos:end="7:45"><type pos:start="7:22" pos:end="7:45"><name pos:start="7:22" pos:end="7:29">unsigned</name> <name pos:start="7:31" pos:end="7:33">int</name></type> <name pos:start="7:35" pos:end="7:45">max_rsp_len</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="171:1">{<block_content pos:start="11:5" pos:end="169:34">

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">IPMIInterface</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:39">= <expr pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:26">ibs</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:34">parent</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:39">intf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">IPMIInterfaceClass</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:25">k</name> <init pos:start="13:27" pos:end="13:55">= <expr pos:start="13:29" pos:end="13:55"><call pos:start="13:29" pos:end="13:55"><name pos:start="13:29" pos:end="13:52">IPMI_INTERFACE_GET_CLASS</name><argument_list pos:start="13:53" pos:end="13:55">(<argument pos:start="13:54" pos:end="13:54"><expr pos:start="13:54" pos:end="13:54"><name pos:start="13:54" pos:end="13:54">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">IPMIRcvBufEntry</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:24">msg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:39"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:17">netfn</name></decl>, <decl pos:start="19:20" pos:end="19:24"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:20" pos:end="19:24">rqLun</name></decl>, <decl pos:start="19:27" pos:end="19:31"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:27" pos:end="19:31">rsLun</name></decl>, <decl pos:start="19:34" pos:end="19:38"><type ref="prev" pos:start="19:5" pos:end="19:11"/><name pos:start="19:34" pos:end="19:38">rqSeq</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><call pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:22">IPMI_CHECK_CMD_LEN</name><argument_list pos:start="23:23" pos:end="23:25">(<argument pos:start="23:24" pos:end="23:24"><expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:20">(<expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:11">cmd</name><index pos:start="27:12" pos:end="27:14">[<expr pos:start="27:13" pos:end="27:13"><literal type="number" pos:start="27:13" pos:end="27:13">2</literal></expr>]</index></name> <operator pos:start="27:16" pos:end="27:17">!=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>)</condition> <block pos:start="27:22" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

        <comment type="block" pos:start="29:9" pos:end="29:54">/* We only handle channel 0 with no options */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:11">rsp</name><index pos:start="31:12" pos:end="31:14">[<expr pos:start="31:13" pos:end="31:13"><literal type="number" pos:start="31:13" pos:end="31:13">2</literal></expr>]</index></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:43">IPMI_CC_INVALID_DATA_FIELD</name></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><call pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:22">IPMI_CHECK_CMD_LEN</name><argument_list pos:start="39:23" pos:end="39:26">(<argument pos:start="39:24" pos:end="39:25"><expr pos:start="39:24" pos:end="39:25"><literal type="number" pos:start="39:24" pos:end="39:25">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:11">cmd</name><index pos:start="41:12" pos:end="41:14">[<expr pos:start="41:13" pos:end="41:13"><literal type="number" pos:start="41:13" pos:end="41:13">3</literal></expr>]</index></name> <operator pos:start="41:16" pos:end="41:17">!=</operator> <literal type="number" pos:start="41:19" pos:end="41:22">0x40</literal></expr>)</condition> <block pos:start="41:25" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:15">

        <comment type="block" pos:start="43:9" pos:end="43:51">/* We only emulate a MC at address 0x40. */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:11">rsp</name><index pos:start="45:12" pos:end="45:14">[<expr pos:start="45:13" pos:end="45:13"><literal type="number" pos:start="45:13" pos:end="45:13">2</literal></expr>]</index></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:21">0x83</literal></expr>;</expr_stmt> <comment type="block" pos:start="45:24" pos:end="45:41">/* NAK on write */</comment>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:13"><expr pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:7">cmd</name> <operator pos:start="53:9" pos:end="53:10">+=</operator> <literal type="number" pos:start="53:12" pos:end="53:12">3</literal></expr>;</expr_stmt> <comment type="block" pos:start="53:15" pos:end="53:36">/* Skip the header. */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:17"><expr pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:11">cmd_len</name> <operator pos:start="55:13" pos:end="55:14">-=</operator> <literal type="number" pos:start="55:16" pos:end="55:16">3</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="65:7">/*

     * At this point we "send" the message successfully.  Any error will

     * be returned in the response.

     */</comment>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="69:23">(<expr pos:start="67:9" pos:end="69:22"><call pos:start="67:9" pos:end="67:38"><name pos:start="67:9" pos:end="67:21">ipmb_checksum</name><argument_list pos:start="67:22" pos:end="67:38">(<argument pos:start="67:23" pos:end="67:25"><expr pos:start="67:23" pos:end="67:25"><name pos:start="67:23" pos:end="67:25">cmd</name></expr></argument>, <argument pos:start="67:28" pos:end="67:34"><expr pos:start="67:28" pos:end="67:34"><name pos:start="67:28" pos:end="67:34">cmd_len</name></expr></argument>, <argument pos:start="67:37" pos:end="67:37"><expr pos:start="67:37" pos:end="67:37"><literal type="number" pos:start="67:37" pos:end="67:37">0</literal></expr></argument>)</argument_list></call> <operator pos:start="67:40" pos:end="67:41">!=</operator> <literal type="number" pos:start="67:43" pos:end="67:43">0</literal> <operator pos:start="67:45" pos:end="67:46">||</operator>

        <name pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:11">cmd</name><index pos:start="69:12" pos:end="69:14">[<expr pos:start="69:13" pos:end="69:13"><literal type="number" pos:start="69:13" pos:end="69:13">3</literal></expr>]</index></name> <operator pos:start="69:16" pos:end="69:17">!=</operator> <literal type="number" pos:start="69:19" pos:end="69:22">0x20</literal></expr>)</condition> <block pos:start="69:25" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:15"> <comment type="block" pos:start="69:27" pos:end="69:57">/* Improper response address */</comment>

        <return pos:start="71:9" pos:end="71:15">return;</return> <comment type="block" pos:start="71:17" pos:end="71:33">/* No response */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:9">netfn</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <name pos:start="77:13" pos:end="77:18"><name pos:start="77:13" pos:end="77:15">cmd</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>]</index></name> <operator pos:start="77:20" pos:end="77:21">&gt;&gt;</operator> <literal type="number" pos:start="77:23" pos:end="77:23">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:25"><expr pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:9">rqLun</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <name pos:start="79:13" pos:end="79:18"><name pos:start="79:13" pos:end="79:15">cmd</name><index pos:start="79:16" pos:end="79:18">[<expr pos:start="79:17" pos:end="79:17"><literal type="number" pos:start="79:17" pos:end="79:17">4</literal></expr>]</index></name> <operator pos:start="79:20" pos:end="79:20">&amp;</operator> <literal type="number" pos:start="79:22" pos:end="79:24">0x3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:25"><expr pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:9">rsLun</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <name pos:start="81:13" pos:end="81:18"><name pos:start="81:13" pos:end="81:15">cmd</name><index pos:start="81:16" pos:end="81:18">[<expr pos:start="81:17" pos:end="81:17"><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>]</index></name> <operator pos:start="81:20" pos:end="81:20">&amp;</operator> <literal type="number" pos:start="81:22" pos:end="81:24">0x3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:24"><expr pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:9">rqSeq</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:15">cmd</name><index pos:start="83:16" pos:end="83:18">[<expr pos:start="83:17" pos:end="83:17"><literal type="number" pos:start="83:17" pos:end="83:17">4</literal></expr>]</index></name> <operator pos:start="83:20" pos:end="83:21">&gt;&gt;</operator> <literal type="number" pos:start="83:23" pos:end="83:23">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:19">(<expr pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:13">rqLun</name> <operator pos:start="87:15" pos:end="87:16">!=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">2</literal></expr>)</condition> <block pos:start="87:21" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:15">

        <comment type="block" pos:start="89:9" pos:end="89:54">/* We only support LUN 2 coming back to us. */</comment>

        <return pos:start="91:9" pos:end="91:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:33"><expr pos:start="97:5" pos:end="97:32"><name pos:start="97:5" pos:end="97:7">msg</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <call pos:start="97:11" pos:end="97:32"><name pos:start="97:11" pos:end="97:18">g_malloc</name><argument_list pos:start="97:19" pos:end="97:32">(<argument pos:start="97:20" pos:end="97:31"><expr pos:start="97:20" pos:end="97:31"><sizeof pos:start="97:20" pos:end="97:31">sizeof<argument_list pos:start="97:26" pos:end="97:31">(<argument pos:start="97:27" pos:end="97:30"><expr pos:start="97:27" pos:end="97:30"><operator pos:start="97:27" pos:end="97:27">*</operator><name pos:start="97:28" pos:end="97:30">msg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:45"><expr pos:start="99:5" pos:end="99:44"><name pos:start="99:5" pos:end="99:15"><name pos:start="99:5" pos:end="99:7">msg</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:12">buf</name><index pos:start="99:13" pos:end="99:15">[<expr pos:start="99:14" pos:end="99:14"><literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>]</index></name> <operator pos:start="99:17" pos:end="99:17">=</operator> <operator pos:start="99:19" pos:end="99:19">(</operator><operator pos:start="99:20" pos:end="99:20">(</operator><name pos:start="99:21" pos:end="99:25">netfn</name> <operator pos:start="99:27" pos:end="99:27">|</operator> <literal type="number" pos:start="99:29" pos:end="99:29">1</literal><operator pos:start="99:30" pos:end="99:30">)</operator> <operator pos:start="99:32" pos:end="99:33">&lt;&lt;</operator> <literal type="number" pos:start="99:35" pos:end="99:35">2</literal><operator pos:start="99:36" pos:end="99:36">)</operator> <operator pos:start="99:38" pos:end="99:38">|</operator> <name pos:start="99:40" pos:end="99:44">rqLun</name></expr>;</expr_stmt> <comment type="block" pos:start="99:47" pos:end="99:78">/* NetFN, and make a response */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:48"><expr pos:start="101:5" pos:end="101:47"><name pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:7">msg</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:12">buf</name><index pos:start="101:13" pos:end="101:15">[<expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">1</literal></expr>]</index></name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:47"><name pos:start="101:19" pos:end="101:31">ipmb_checksum</name><argument_list pos:start="101:32" pos:end="101:47">(<argument pos:start="101:33" pos:end="101:40"><expr pos:start="101:33" pos:end="101:40"><name pos:start="101:33" pos:end="101:40"><name pos:start="101:33" pos:end="101:35">msg</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:40">buf</name></name></expr></argument>, <argument pos:start="101:43" pos:end="101:43"><expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">1</literal></expr></argument>, <argument pos:start="101:46" pos:end="101:46"><expr pos:start="101:46" pos:end="101:46"><literal type="number" pos:start="101:46" pos:end="101:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:25"><expr pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:7">msg</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:12">buf</name><index pos:start="103:13" pos:end="103:15">[<expr pos:start="103:14" pos:end="103:14"><literal type="number" pos:start="103:14" pos:end="103:14">2</literal></expr>]</index></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <name pos:start="103:19" pos:end="103:24"><name pos:start="103:19" pos:end="103:21">cmd</name><index pos:start="103:22" pos:end="103:24">[<expr pos:start="103:23" pos:end="103:23"><literal type="number" pos:start="103:23" pos:end="103:23">0</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="block" pos:start="103:27" pos:end="103:36">/* rsSA */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:39"><expr pos:start="105:5" pos:end="105:38"><name pos:start="105:5" pos:end="105:15"><name pos:start="105:5" pos:end="105:7">msg</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:12">buf</name><index pos:start="105:13" pos:end="105:15">[<expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">3</literal></expr>]</index></name> <operator pos:start="105:17" pos:end="105:17">=</operator> <operator pos:start="105:19" pos:end="105:19">(</operator><name pos:start="105:20" pos:end="105:24">rqSeq</name> <operator pos:start="105:26" pos:end="105:27">&lt;&lt;</operator> <literal type="number" pos:start="105:29" pos:end="105:29">2</literal><operator pos:start="105:30" pos:end="105:30">)</operator> <operator pos:start="105:32" pos:end="105:32">|</operator> <name pos:start="105:34" pos:end="105:38">rsLun</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:25"><expr pos:start="107:5" pos:end="107:24"><name pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:7">msg</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:12">buf</name><index pos:start="107:13" pos:end="107:15">[<expr pos:start="107:14" pos:end="107:14"><literal type="number" pos:start="107:14" pos:end="107:14">4</literal></expr>]</index></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <name pos:start="107:19" pos:end="107:24"><name pos:start="107:19" pos:end="107:21">cmd</name><index pos:start="107:22" pos:end="107:24">[<expr pos:start="107:23" pos:end="107:23"><literal type="number" pos:start="107:23" pos:end="107:23">5</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="block" pos:start="107:27" pos:end="107:35">/* Cmd */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:20"><expr pos:start="109:5" pos:end="109:19"><name pos:start="109:5" pos:end="109:15"><name pos:start="109:5" pos:end="109:7">msg</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:12">buf</name><index pos:start="109:13" pos:end="109:15">[<expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">5</literal></expr>]</index></name> <operator pos:start="109:17" pos:end="109:17">=</operator> <literal type="number" pos:start="109:19" pos:end="109:19">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="109:22" pos:end="109:42">/* Completion Code */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:17"><expr pos:start="111:5" pos:end="111:16"><name pos:start="111:5" pos:end="111:12"><name pos:start="111:5" pos:end="111:7">msg</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:12">len</name></name> <operator pos:start="111:14" pos:end="111:14">=</operator> <literal type="number" pos:start="111:16" pos:end="111:16">6</literal></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="123:5"><if pos:start="115:5" pos:end="123:5">if <condition pos:start="115:8" pos:end="115:76">(<expr pos:start="115:9" pos:end="115:75"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:15"><name pos:start="115:10" pos:end="115:12">cmd</name><index pos:start="115:13" pos:end="115:15">[<expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">1</literal></expr>]</index></name> <operator pos:start="115:17" pos:end="115:18">&gt;&gt;</operator> <literal type="number" pos:start="115:20" pos:end="115:20">2</literal><operator pos:start="115:21" pos:end="115:21">)</operator> <operator pos:start="115:23" pos:end="115:24">!=</operator> <name pos:start="115:26" pos:end="115:39">IPMI_NETFN_APP</name> <operator pos:start="115:41" pos:end="115:42">||</operator> <name pos:start="115:44" pos:end="115:49"><name pos:start="115:44" pos:end="115:46">cmd</name><index pos:start="115:47" pos:end="115:49">[<expr pos:start="115:48" pos:end="115:48"><literal type="number" pos:start="115:48" pos:end="115:48">5</literal></expr>]</index></name> <operator pos:start="115:51" pos:end="115:52">!=</operator> <name pos:start="115:54" pos:end="115:75">IPMI_CMD_GET_DEVICE_ID</name></expr>)</condition> <block pos:start="115:78" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:21">

        <comment type="block" pos:start="117:9" pos:end="117:38">/* Not a command we handle. */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:42"><expr pos:start="119:9" pos:end="119:41"><name pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:11">msg</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:16">buf</name><index pos:start="119:17" pos:end="119:19">[<expr pos:start="119:18" pos:end="119:18"><literal type="number" pos:start="119:18" pos:end="119:18">5</literal></expr>]</index></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:41">IPMI_CC_INVALID_CMD</name></expr>;</expr_stmt>

        <goto pos:start="121:9" pos:end="121:21">goto <name pos:start="121:14" pos:end="121:20">end_msg</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:30"><expr pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:7">buf</name> <operator pos:start="127:9" pos:end="127:9">=</operator> <name pos:start="127:11" pos:end="127:18"><name pos:start="127:11" pos:end="127:13">msg</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:18">buf</name></name> <operator pos:start="127:20" pos:end="127:20">+</operator> <name pos:start="127:22" pos:end="127:29"><name pos:start="127:22" pos:end="127:24">msg</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:29">len</name></name></expr>;</expr_stmt> <comment type="block" pos:start="127:32" pos:end="127:49">/* After the CC */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:15"><expr pos:start="129:5" pos:end="129:14"><name pos:start="129:5" pos:end="129:10"><name pos:start="129:5" pos:end="129:7">buf</name><index pos:start="129:8" pos:end="129:10">[<expr pos:start="129:9" pos:end="129:9"><literal type="number" pos:start="129:9" pos:end="129:9">0</literal></expr>]</index></name> <operator pos:start="129:12" pos:end="129:12">=</operator> <literal type="number" pos:start="129:14" pos:end="129:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:15"><expr pos:start="131:5" pos:end="131:14"><name pos:start="131:5" pos:end="131:10"><name pos:start="131:5" pos:end="131:7">buf</name><index pos:start="131:8" pos:end="131:10">[<expr pos:start="131:9" pos:end="131:9"><literal type="number" pos:start="131:9" pos:end="131:9">1</literal></expr>]</index></name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:15"><expr pos:start="133:5" pos:end="133:14"><name pos:start="133:5" pos:end="133:10"><name pos:start="133:5" pos:end="133:7">buf</name><index pos:start="133:8" pos:end="133:10">[<expr pos:start="133:9" pos:end="133:9"><literal type="number" pos:start="133:9" pos:end="133:9">2</literal></expr>]</index></name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:15"><expr pos:start="135:5" pos:end="135:14"><name pos:start="135:5" pos:end="135:10"><name pos:start="135:5" pos:end="135:7">buf</name><index pos:start="135:8" pos:end="135:10">[<expr pos:start="135:9" pos:end="135:9"><literal type="number" pos:start="135:9" pos:end="135:9">3</literal></expr>]</index></name> <operator pos:start="135:12" pos:end="135:12">=</operator> <literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:18"><expr pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:10"><name pos:start="137:5" pos:end="137:7">buf</name><index pos:start="137:8" pos:end="137:10">[<expr pos:start="137:9" pos:end="137:9"><literal type="number" pos:start="137:9" pos:end="137:9">4</literal></expr>]</index></name> <operator pos:start="137:12" pos:end="137:12">=</operator> <literal type="number" pos:start="137:14" pos:end="137:17">0x51</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:15"><expr pos:start="139:5" pos:end="139:14"><name pos:start="139:5" pos:end="139:10"><name pos:start="139:5" pos:end="139:7">buf</name><index pos:start="139:8" pos:end="139:10">[<expr pos:start="139:9" pos:end="139:9"><literal type="number" pos:start="139:9" pos:end="139:9">5</literal></expr>]</index></name> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:15"><expr pos:start="141:5" pos:end="141:14"><name pos:start="141:5" pos:end="141:10"><name pos:start="141:5" pos:end="141:7">buf</name><index pos:start="141:8" pos:end="141:10">[<expr pos:start="141:9" pos:end="141:9"><literal type="number" pos:start="141:9" pos:end="141:9">6</literal></expr>]</index></name> <operator pos:start="141:12" pos:end="141:12">=</operator> <literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:15"><expr pos:start="143:5" pos:end="143:14"><name pos:start="143:5" pos:end="143:10"><name pos:start="143:5" pos:end="143:7">buf</name><index pos:start="143:8" pos:end="143:10">[<expr pos:start="143:9" pos:end="143:9"><literal type="number" pos:start="143:9" pos:end="143:9">7</literal></expr>]</index></name> <operator pos:start="143:12" pos:end="143:12">=</operator> <literal type="number" pos:start="143:14" pos:end="143:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:15"><expr pos:start="145:5" pos:end="145:14"><name pos:start="145:5" pos:end="145:10"><name pos:start="145:5" pos:end="145:7">buf</name><index pos:start="145:8" pos:end="145:10">[<expr pos:start="145:9" pos:end="145:9"><literal type="number" pos:start="145:9" pos:end="145:9">8</literal></expr>]</index></name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:15"><expr pos:start="147:5" pos:end="147:14"><name pos:start="147:5" pos:end="147:10"><name pos:start="147:5" pos:end="147:7">buf</name><index pos:start="147:8" pos:end="147:10">[<expr pos:start="147:9" pos:end="147:9"><literal type="number" pos:start="147:9" pos:end="147:9">9</literal></expr>]</index></name> <operator pos:start="147:12" pos:end="147:12">=</operator> <literal type="number" pos:start="147:14" pos:end="147:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:16"><expr pos:start="149:5" pos:end="149:15"><name pos:start="149:5" pos:end="149:11"><name pos:start="149:5" pos:end="149:7">buf</name><index pos:start="149:8" pos:end="149:11">[<expr pos:start="149:9" pos:end="149:10"><literal type="number" pos:start="149:9" pos:end="149:10">10</literal></expr>]</index></name> <operator pos:start="149:13" pos:end="149:13">=</operator> <literal type="number" pos:start="149:15" pos:end="149:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:19"><expr pos:start="151:5" pos:end="151:18"><name pos:start="151:5" pos:end="151:12"><name pos:start="151:5" pos:end="151:7">msg</name><operator pos:start="151:8" pos:end="151:9">-&gt;</operator><name pos:start="151:10" pos:end="151:12">len</name></name> <operator pos:start="151:14" pos:end="151:15">+=</operator> <literal type="number" pos:start="151:17" pos:end="151:18">11</literal></expr>;</expr_stmt>



 <label pos:start="155:2" pos:end="155:9"><name pos:start="155:2" pos:end="155:8">end_msg</name>:</label>

    <expr_stmt pos:start="157:5" pos:end="157:62"><expr pos:start="157:5" pos:end="157:61"><name pos:start="157:5" pos:end="157:22"><name pos:start="157:5" pos:end="157:7">msg</name><operator pos:start="157:8" pos:end="157:9">-&gt;</operator><name pos:start="157:10" pos:end="157:12">buf</name><index pos:start="157:13" pos:end="157:22">[<expr pos:start="157:14" pos:end="157:21"><name pos:start="157:14" pos:end="157:21"><name pos:start="157:14" pos:end="157:16">msg</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:21">len</name></name></expr>]</index></name> <operator pos:start="157:24" pos:end="157:24">=</operator> <call pos:start="157:26" pos:end="157:61"><name pos:start="157:26" pos:end="157:38">ipmb_checksum</name><argument_list pos:start="157:39" pos:end="157:61">(<argument pos:start="157:40" pos:end="157:47"><expr pos:start="157:40" pos:end="157:47"><name pos:start="157:40" pos:end="157:47"><name pos:start="157:40" pos:end="157:42">msg</name><operator pos:start="157:43" pos:end="157:44">-&gt;</operator><name pos:start="157:45" pos:end="157:47">buf</name></name></expr></argument>, <argument pos:start="157:50" pos:end="157:57"><expr pos:start="157:50" pos:end="157:57"><name pos:start="157:50" pos:end="157:57"><name pos:start="157:50" pos:end="157:52">msg</name><operator pos:start="157:53" pos:end="157:54">-&gt;</operator><name pos:start="157:55" pos:end="157:57">len</name></name></expr></argument>, <argument pos:start="157:60" pos:end="157:60"><expr pos:start="157:60" pos:end="157:60"><literal type="number" pos:start="157:60" pos:end="157:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:15"><expr pos:start="159:5" pos:end="159:14"><name pos:start="159:5" pos:end="159:12"><name pos:start="159:5" pos:end="159:7">msg</name><operator pos:start="159:8" pos:end="159:9">-&gt;</operator><name pos:start="159:10" pos:end="159:12">len</name></name><operator pos:start="159:13" pos:end="159:14">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:32"><expr pos:start="161:5" pos:end="161:31"><call pos:start="161:5" pos:end="161:31"><name pos:start="161:5" pos:end="161:19">qemu_mutex_lock</name><argument_list pos:start="161:20" pos:end="161:31">(<argument pos:start="161:21" pos:end="161:30"><expr pos:start="161:21" pos:end="161:30"><operator pos:start="161:21" pos:end="161:21">&amp;</operator><name pos:start="161:22" pos:end="161:30"><name pos:start="161:22" pos:end="161:24">ibs</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:30">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:50"><expr pos:start="163:5" pos:end="163:49"><call pos:start="163:5" pos:end="163:49"><name pos:start="163:5" pos:end="163:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="163:23" pos:end="163:49">(<argument pos:start="163:24" pos:end="163:36"><expr pos:start="163:24" pos:end="163:36"><operator pos:start="163:24" pos:end="163:24">&amp;</operator><name pos:start="163:25" pos:end="163:36"><name pos:start="163:25" pos:end="163:27">ibs</name><operator pos:start="163:28" pos:end="163:29">-&gt;</operator><name pos:start="163:30" pos:end="163:36">rcvbufs</name></name></expr></argument>, <argument pos:start="163:39" pos:end="163:41"><expr pos:start="163:39" pos:end="163:41"><name pos:start="163:39" pos:end="163:41">msg</name></expr></argument>, <argument pos:start="163:44" pos:end="163:48"><expr pos:start="163:44" pos:end="163:48"><name pos:start="163:44" pos:end="163:48">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:54"><expr pos:start="165:5" pos:end="165:53"><name pos:start="165:5" pos:end="165:18"><name pos:start="165:5" pos:end="165:7">ibs</name><operator pos:start="165:8" pos:end="165:9">-&gt;</operator><name pos:start="165:10" pos:end="165:18">msg_flags</name></name> <operator pos:start="165:20" pos:end="165:21">|=</operator> <name pos:start="165:23" pos:end="165:53">IPMI_BMC_MSG_FLAG_RCV_MSG_QUEUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:44"><expr pos:start="167:5" pos:end="167:43"><call pos:start="167:5" pos:end="167:43"><name pos:start="167:5" pos:end="167:14"><name pos:start="167:5" pos:end="167:5">k</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:14">set_atn</name></name><argument_list pos:start="167:15" pos:end="167:43">(<argument pos:start="167:16" pos:end="167:16"><expr pos:start="167:16" pos:end="167:16"><name pos:start="167:16" pos:end="167:16">s</name></expr></argument>, <argument pos:start="167:19" pos:end="167:19"><expr pos:start="167:19" pos:end="167:19"><literal type="number" pos:start="167:19" pos:end="167:19">1</literal></expr></argument>, <argument pos:start="167:22" pos:end="167:42"><expr pos:start="167:22" pos:end="167:42"><call pos:start="167:22" pos:end="167:42"><name pos:start="167:22" pos:end="167:37">attn_irq_enabled</name><argument_list pos:start="167:38" pos:end="167:42">(<argument pos:start="167:39" pos:end="167:41"><expr pos:start="167:39" pos:end="167:41"><name pos:start="167:39" pos:end="167:41">ibs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:34"><expr pos:start="169:5" pos:end="169:33"><call pos:start="169:5" pos:end="169:33"><name pos:start="169:5" pos:end="169:21">qemu_mutex_unlock</name><argument_list pos:start="169:22" pos:end="169:33">(<argument pos:start="169:23" pos:end="169:32"><expr pos:start="169:23" pos:end="169:32"><operator pos:start="169:23" pos:end="169:23">&amp;</operator><name pos:start="169:24" pos:end="169:32"><name pos:start="169:24" pos:end="169:26">ibs</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:32">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
