<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21609.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:29">vtenc_init</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="221:1">{<block_content pos:start="5:5" pos:end="219:18">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:26">CFMutableDictionaryRef</name></type> <name pos:start="5:28" pos:end="5:35">enc_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:26">CFMutableDictionaryRef</name></type> <name pos:start="7:28" pos:end="7:44">pixel_buffer_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">CMVideoCodecType</name></type>       <name pos:start="9:28" pos:end="9:37">codec_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:16">VTEncContext</name>           <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:33">vtctx</name> <init pos:start="11:35" pos:end="11:52">= <expr pos:start="11:37" pos:end="11:52"><name pos:start="11:37" pos:end="11:52"><name pos:start="11:37" pos:end="11:41">avctx</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:52">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">CFStringRef</name></type>            <name pos:start="13:28" pos:end="13:40">profile_level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">CFBooleanRef</name></type>           <name pos:start="15:28" pos:end="15:46">has_b_frames_cfbool</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:45"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">CFNumberRef</name></type>            <name pos:start="17:28" pos:end="17:38">gamma_level</name> <init pos:start="17:40" pos:end="17:45">= <expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type>                    <name pos:start="19:28" pos:end="19:33">status</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:14">codec_type</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:51"><name pos:start="23:18" pos:end="23:34">get_cm_codec_type</name><argument_list pos:start="23:35" pos:end="23:51">(<argument pos:start="23:36" pos:end="23:50"><expr pos:start="23:36" pos:end="23:50"><name pos:start="23:36" pos:end="23:50"><name pos:start="23:36" pos:end="23:40">avctx</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:50">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:19">codec_type</name></expr>)</condition> <block pos:start="25:22" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:31">

        <expr_stmt pos:start="27:9" pos:end="27:93"><expr pos:start="27:9" pos:end="27:92"><call pos:start="27:9" pos:end="27:92"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:92">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:74"><expr pos:start="27:37" pos:end="27:74"><literal type="string" pos:start="27:37" pos:end="27:74">"Error: no mapping for AVCodecID %d\n"</literal></expr></argument>, <argument pos:start="27:77" pos:end="27:91"><expr pos:start="27:77" pos:end="27:91"><name pos:start="27:77" pos:end="27:91"><name pos:start="27:77" pos:end="27:81">avctx</name><operator pos:start="27:82" pos:end="27:83">-&gt;</operator><name pos:start="27:84" pos:end="27:91">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:50"><expr pos:start="35:5" pos:end="35:49"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:9">vtctx</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:23">has_b_frames</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:45"><name pos:start="35:27" pos:end="35:31">avctx</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:45">max_b_frames</name></name> <operator pos:start="35:47" pos:end="35:47">&gt;</operator> <literal type="number" pos:start="35:49" pos:end="35:49">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if<condition pos:start="37:7" pos:end="37:67">(<expr pos:start="37:8" pos:end="37:66"><name pos:start="37:8" pos:end="37:26"><name pos:start="37:8" pos:end="37:12">vtctx</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:26">has_b_frames</name></name> <operator pos:start="37:28" pos:end="37:29">&amp;&amp;</operator> <name pos:start="37:31" pos:end="37:44"><name pos:start="37:31" pos:end="37:35">vtctx</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:44">profile</name></name> <operator pos:start="37:46" pos:end="37:47">==</operator> <name pos:start="37:49" pos:end="37:66">H264_PROF_BASELINE</name></expr>)</condition><block pos:start="37:68" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:36">

        <expr_stmt pos:start="39:9" pos:end="39:120"><expr pos:start="39:9" pos:end="39:119"><call pos:start="39:9" pos:end="39:119"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:119">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:36"><expr pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="39:39" pos:end="39:118"><expr pos:start="39:39" pos:end="39:118"><literal type="string" pos:start="39:39" pos:end="39:118">"Cannot use B-frames with baseline profile. Output will not contain B-frames.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:36"><expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:13">vtctx</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:27">has_b_frames</name></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:35">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:75">(<expr pos:start="47:9" pos:end="47:74"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:13">vtctx</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">entropy</name></name> <operator pos:start="47:24" pos:end="47:25">==</operator> <name pos:start="47:27" pos:end="47:34">VT_CABAC</name> <operator pos:start="47:36" pos:end="47:37">&amp;&amp;</operator> <name pos:start="47:39" pos:end="47:52"><name pos:start="47:39" pos:end="47:43">vtctx</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:52">profile</name></name> <operator pos:start="47:54" pos:end="47:55">==</operator> <name pos:start="47:57" pos:end="47:74">H264_PROF_BASELINE</name></expr>)</condition> <block pos:start="47:77" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:44">

        <expr_stmt pos:start="49:9" pos:end="49:155"><expr pos:start="49:9" pos:end="49:154"><call pos:start="49:9" pos:end="49:154"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:154">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:36"><expr pos:start="49:23" pos:end="49:36"><name pos:start="49:23" pos:end="49:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="49:39" pos:end="49:153"><expr pos:start="49:39" pos:end="49:153"><literal type="string" pos:start="49:39" pos:end="49:153">"CABAC entropy requires 'main' or 'high' profile, but baseline was requested. Encode will not use CABAC entropy.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:13">vtctx</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">entropy</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:43">VT_ENTROPY_NOT_SET</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="57:77"><if pos:start="57:5" pos:end="57:77">if <condition pos:start="57:8" pos:end="57:53">(<expr pos:start="57:9" pos:end="57:52"><operator pos:start="57:9" pos:end="57:9">!</operator><call pos:start="57:10" pos:end="57:52"><name pos:start="57:10" pos:end="57:29">get_vt_profile_level</name><argument_list pos:start="57:30" pos:end="57:52">(<argument pos:start="57:31" pos:end="57:35"><expr pos:start="57:31" pos:end="57:35"><name pos:start="57:31" pos:end="57:35">avctx</name></expr></argument>, <argument pos:start="57:38" pos:end="57:51"><expr pos:start="57:38" pos:end="57:51"><operator pos:start="57:38" pos:end="57:38">&amp;</operator><name pos:start="57:39" pos:end="57:51">profile_level</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:55" pos:end="57:77"><block_content pos:start="57:55" pos:end="57:77"> <return pos:start="57:55" pos:end="57:77">return <expr pos:start="57:62" pos:end="57:76"><call pos:start="57:62" pos:end="57:76"><name pos:start="57:62" pos:end="57:68">AVERROR</name><argument_list pos:start="57:69" pos:end="57:76">(<argument pos:start="57:70" pos:end="57:75"><expr pos:start="57:70" pos:end="57:75"><name pos:start="57:70" pos:end="57:75">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:9">vtctx</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:18">session</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:25">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="75:6"><expr pos:start="65:5" pos:end="75:5"><name pos:start="65:5" pos:end="65:12">enc_info</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="75:5"><name pos:start="65:16" pos:end="65:40">CFDictionaryCreateMutable</name><argument_list pos:start="65:41" pos:end="75:5">(

        <argument pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:27">kCFAllocatorDefault</name></expr></argument>,

        <argument pos:start="69:9" pos:end="69:10"><expr pos:start="69:9" pos:end="69:10"><literal type="number" pos:start="69:9" pos:end="69:10">20</literal></expr></argument>,

        <argument pos:start="71:9" pos:end="71:44"><expr pos:start="71:9" pos:end="71:44"><operator pos:start="71:9" pos:end="71:9">&amp;</operator><name pos:start="71:10" pos:end="71:44">kCFCopyStringDictionaryKeyCallBacks</name></expr></argument>,

        <argument pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:40"><operator pos:start="73:9" pos:end="73:9">&amp;</operator><name pos:start="73:10" pos:end="73:40">kCFTypeDictionaryValueCallBacks</name></expr></argument>

    )</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="84:0"><if pos:start="79:5" pos:end="84:0">if <condition pos:start="79:8" pos:end="79:18">(<expr pos:start="79:9" pos:end="79:17"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:17">enc_info</name></expr>)</condition><block type="pseudo" pos:start="79:20" pos:end="84:0"><block_content pos:start="79:20" pos:end="84:0"> <return pos:start="79:20" pos:end="84:0">return <expr pos:start="79:27" pos:end="79:41"><call pos:start="79:27" pos:end="79:41"><name pos:start="79:27" pos:end="79:33">AVERROR</name><argument_list pos:start="79:34" pos:end="79:41">(<argument pos:start="79:35" pos:end="79:40"><expr pos:start="79:35" pos:end="79:40"><name pos:start="79:35" pos:end="79:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="83:1" pos:end="83:21">#<cpp:directive pos:start="83:2" pos:end="83:3">if</cpp:directive> <expr pos:start="83:5" pos:end="83:21"><operator pos:start="83:5" pos:end="83:5">!</operator><name pos:start="83:6" pos:end="83:21">TARGET_OS_IPHONE</name></expr></cpp:if>

    <if_stmt pos:start="85:5" pos:end="96:0"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:25">(<expr pos:start="85:9" pos:end="85:24"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:24"><name pos:start="85:10" pos:end="85:14">vtctx</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:24">allow_sw</name></name></expr>)</condition> <block pos:start="85:27" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:124">

        <expr_stmt pos:start="87:9" pos:end="87:124"><expr pos:start="87:9" pos:end="87:123"><call pos:start="87:9" pos:end="87:123"><name pos:start="87:9" pos:end="87:28">CFDictionarySetValue</name><argument_list pos:start="87:29" pos:end="87:123">(<argument pos:start="87:30" pos:end="87:37"><expr pos:start="87:30" pos:end="87:37"><name pos:start="87:30" pos:end="87:37">enc_info</name></expr></argument>, <argument pos:start="87:40" pos:end="87:106"><expr pos:start="87:40" pos:end="87:106"><name pos:start="87:40" pos:end="87:106">kVTVideoEncoderSpecification_RequireHardwareAcceleratedVideoEncoder</name></expr></argument>, <argument pos:start="87:109" pos:end="87:122"><expr pos:start="87:109" pos:end="87:122"><name pos:start="87:109" pos:end="87:122">kCFBooleanTrue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="96:0">else <block pos:start="89:12" pos:end="96:0">{<block_content pos:start="91:9" pos:end="91:124">

        <expr_stmt pos:start="91:9" pos:end="91:124"><expr pos:start="91:9" pos:end="91:123"><call pos:start="91:9" pos:end="91:123"><name pos:start="91:9" pos:end="91:28">CFDictionarySetValue</name><argument_list pos:start="91:29" pos:end="91:123">(<argument pos:start="91:30" pos:end="91:37"><expr pos:start="91:30" pos:end="91:37"><name pos:start="91:30" pos:end="91:37">enc_info</name></expr></argument>, <argument pos:start="91:40" pos:end="91:105"><expr pos:start="91:40" pos:end="91:105"><name pos:start="91:40" pos:end="91:105">kVTVideoEncoderSpecification_EnableHardwareAcceleratedVideoEncoder</name></expr></argument>,  <argument pos:start="91:109" pos:end="91:122"><expr pos:start="91:109" pos:end="91:122"><name pos:start="91:109" pos:end="91:122">kCFBooleanTrue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="95:1" pos:end="95:6">#<cpp:directive pos:start="95:2" pos:end="95:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="99:5" pos:end="111:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:50">(<expr pos:start="99:9" pos:end="99:49"><name pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:22">pix_fmt</name></name> <operator pos:start="99:24" pos:end="99:25">!=</operator> <name pos:start="99:27" pos:end="99:49">AV_PIX_FMT_VIDEOTOOLBOX</name></expr>)</condition> <block pos:start="99:52" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:30">

        <expr_stmt pos:start="101:9" pos:end="101:72"><expr pos:start="101:9" pos:end="101:71"><name pos:start="101:9" pos:end="101:14">status</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <call pos:start="101:18" pos:end="101:71"><name pos:start="101:18" pos:end="101:44">create_cv_pixel_buffer_info</name><argument_list pos:start="101:45" pos:end="101:71">(<argument pos:start="101:46" pos:end="101:50"><expr pos:start="101:46" pos:end="101:50"><name pos:start="101:46" pos:end="101:50">avctx</name></expr></argument>, <argument pos:start="101:53" pos:end="101:70"><expr pos:start="101:53" pos:end="101:70"><operator pos:start="101:53" pos:end="101:53">&amp;</operator><name pos:start="101:54" pos:end="101:70">pixel_buffer_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:30"><if pos:start="103:9" pos:end="105:30">if <condition pos:start="103:12" pos:end="103:19">(<expr pos:start="103:13" pos:end="103:18"><name pos:start="103:13" pos:end="103:18">status</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:30"><block_content pos:start="105:13" pos:end="105:30">

            <goto pos:start="105:13" pos:end="105:30">goto <name pos:start="105:18" pos:end="105:29">init_cleanup</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="111:5">else <block pos:start="107:12" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:33">

        <expr_stmt pos:start="109:9" pos:end="109:33"><expr pos:start="109:9" pos:end="109:32"><name pos:start="109:9" pos:end="109:25">pixel_buffer_info</name> <operator pos:start="109:27" pos:end="109:27">=</operator> <name pos:start="109:29" pos:end="109:32">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:43"><expr pos:start="115:5" pos:end="115:42"><call pos:start="115:5" pos:end="115:42"><name pos:start="115:5" pos:end="115:22">pthread_mutex_init</name><argument_list pos:start="115:23" pos:end="115:42">(<argument pos:start="115:24" pos:end="115:35"><expr pos:start="115:24" pos:end="115:35"><operator pos:start="115:24" pos:end="115:24">&amp;</operator><name pos:start="115:25" pos:end="115:35"><name pos:start="115:25" pos:end="115:29">vtctx</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:35">lock</name></name></expr></argument>, <argument pos:start="115:38" pos:end="115:41"><expr pos:start="115:38" pos:end="115:41"><name pos:start="115:38" pos:end="115:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:52"><expr pos:start="117:5" pos:end="117:51"><call pos:start="117:5" pos:end="117:51"><name pos:start="117:5" pos:end="117:21">pthread_cond_init</name><argument_list pos:start="117:22" pos:end="117:51">(<argument pos:start="117:23" pos:end="117:44"><expr pos:start="117:23" pos:end="117:44"><operator pos:start="117:23" pos:end="117:23">&amp;</operator><name pos:start="117:24" pos:end="117:44"><name pos:start="117:24" pos:end="117:28">vtctx</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:44">cv_sample_sent</name></name></expr></argument>, <argument pos:start="117:47" pos:end="117:50"><expr pos:start="117:47" pos:end="117:50"><name pos:start="117:47" pos:end="117:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:52"><expr pos:start="119:5" pos:end="119:51"><name pos:start="119:5" pos:end="119:20"><name pos:start="119:5" pos:end="119:9">vtctx</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:20">dts_delta</name></name> <operator pos:start="119:22" pos:end="119:22">=</operator> <ternary pos:start="119:24" pos:end="119:51"><condition pos:start="119:24" pos:end="119:44"><expr pos:start="119:24" pos:end="119:42"><name pos:start="119:24" pos:end="119:42"><name pos:start="119:24" pos:end="119:28">vtctx</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:42">has_b_frames</name></name></expr> ?</condition><then pos:start="119:46" pos:end="119:47"> <expr pos:start="119:46" pos:end="119:47"><operator pos:start="119:46" pos:end="119:46">-</operator><literal type="number" pos:start="119:47" pos:end="119:47">1</literal></expr> </then><else pos:start="119:49" pos:end="119:51">: <expr pos:start="119:51" pos:end="119:51"><literal type="number" pos:start="119:51" pos:end="119:51">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:77"><expr pos:start="123:5" pos:end="123:76"><call pos:start="123:5" pos:end="123:76"><name pos:start="123:5" pos:end="123:28">get_cv_transfer_function</name><argument_list pos:start="123:29" pos:end="123:76">(<argument pos:start="123:30" pos:end="123:34"><expr pos:start="123:30" pos:end="123:34"><name pos:start="123:30" pos:end="123:34">avctx</name></expr></argument>, <argument pos:start="123:37" pos:end="123:61"><expr pos:start="123:37" pos:end="123:61"><operator pos:start="123:37" pos:end="123:37">&amp;</operator><name pos:start="123:38" pos:end="123:61"><name pos:start="123:38" pos:end="123:42">vtctx</name><operator pos:start="123:43" pos:end="123:44">-&gt;</operator><name pos:start="123:45" pos:end="123:61">transfer_function</name></name></expr></argument>, <argument pos:start="123:64" pos:end="123:75"><expr pos:start="123:64" pos:end="123:75"><operator pos:start="123:64" pos:end="123:64">&amp;</operator><name pos:start="123:65" pos:end="123:75">gamma_level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:53"><expr pos:start="125:5" pos:end="125:52"><call pos:start="125:5" pos:end="125:52"><name pos:start="125:5" pos:end="125:23">get_cv_ycbcr_matrix</name><argument_list pos:start="125:24" pos:end="125:52">(<argument pos:start="125:25" pos:end="125:29"><expr pos:start="125:25" pos:end="125:29"><name pos:start="125:25" pos:end="125:29">avctx</name></expr></argument>, <argument pos:start="125:32" pos:end="125:51"><expr pos:start="125:32" pos:end="125:51"><operator pos:start="125:32" pos:end="125:32">&amp;</operator><name pos:start="125:33" pos:end="125:51"><name pos:start="125:33" pos:end="125:37">vtctx</name><operator pos:start="125:38" pos:end="125:39">-&gt;</operator><name pos:start="125:40" pos:end="125:51">ycbcr_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:59"><expr pos:start="127:5" pos:end="127:58"><call pos:start="127:5" pos:end="127:58"><name pos:start="127:5" pos:end="127:26">get_cv_color_primaries</name><argument_list pos:start="127:27" pos:end="127:58">(<argument pos:start="127:28" pos:end="127:32"><expr pos:start="127:28" pos:end="127:32"><name pos:start="127:28" pos:end="127:32">avctx</name></expr></argument>, <argument pos:start="127:35" pos:end="127:57"><expr pos:start="127:35" pos:end="127:57"><operator pos:start="127:35" pos:end="127:35">&amp;</operator><name pos:start="127:36" pos:end="127:57"><name pos:start="127:36" pos:end="127:40">vtctx</name><operator pos:start="127:41" pos:end="127:42">-&gt;</operator><name pos:start="127:43" pos:end="127:57">color_primaries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="133:5" pos:end="151:5"><if pos:start="133:5" pos:end="151:5">if <condition pos:start="133:8" pos:end="133:51">(<expr pos:start="133:9" pos:end="133:50"><name pos:start="133:9" pos:end="133:20"><name pos:start="133:9" pos:end="133:13">avctx</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:20">flags</name></name> <operator pos:start="133:22" pos:end="133:22">&amp;</operator> <name pos:start="133:24" pos:end="133:50">AV_CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="133:53" pos:end="151:5">{<block_content pos:start="135:9" pos:end="149:30">

        <expr_stmt pos:start="135:9" pos:end="145:61"><expr pos:start="135:9" pos:end="145:60"><name pos:start="135:9" pos:end="135:14">status</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <call pos:start="135:18" pos:end="145:60"><name pos:start="135:18" pos:end="135:41">vtenc_populate_extradata</name><argument_list pos:start="135:42" pos:end="145:60">(<argument pos:start="135:43" pos:end="135:47"><expr pos:start="135:43" pos:end="135:47"><name pos:start="135:43" pos:end="135:47">avctx</name></expr></argument>,

                                          <argument pos:start="137:43" pos:end="137:52"><expr pos:start="137:43" pos:end="137:52"><name pos:start="137:43" pos:end="137:52">codec_type</name></expr></argument>,

                                          <argument pos:start="139:43" pos:end="139:55"><expr pos:start="139:43" pos:end="139:55"><name pos:start="139:43" pos:end="139:55">profile_level</name></expr></argument>,

                                          <argument pos:start="141:43" pos:end="141:53"><expr pos:start="141:43" pos:end="141:53"><name pos:start="141:43" pos:end="141:53">gamma_level</name></expr></argument>,

                                          <argument pos:start="143:43" pos:end="143:50"><expr pos:start="143:43" pos:end="143:50"><name pos:start="143:43" pos:end="143:50">enc_info</name></expr></argument>,

                                          <argument pos:start="145:43" pos:end="145:59"><expr pos:start="145:43" pos:end="145:59"><name pos:start="145:43" pos:end="145:59">pixel_buffer_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:30"><if pos:start="147:9" pos:end="149:30">if <condition pos:start="147:12" pos:end="147:19">(<expr pos:start="147:13" pos:end="147:18"><name pos:start="147:13" pos:end="147:18">status</name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:30"><block_content pos:start="149:13" pos:end="149:30">

            <goto pos:start="149:13" pos:end="149:30">goto <name pos:start="149:18" pos:end="149:29">init_cleanup</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="155:5" pos:end="167:51"><expr pos:start="155:5" pos:end="167:50"><name pos:start="155:5" pos:end="155:10">status</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <call pos:start="155:14" pos:end="167:50"><name pos:start="155:14" pos:end="155:33">vtenc_create_encoder</name><argument_list pos:start="155:34" pos:end="167:50">(<argument pos:start="155:35" pos:end="155:39"><expr pos:start="155:35" pos:end="155:39"><name pos:start="155:35" pos:end="155:39">avctx</name></expr></argument>,

                                  <argument pos:start="157:35" pos:end="157:44"><expr pos:start="157:35" pos:end="157:44"><name pos:start="157:35" pos:end="157:44">codec_type</name></expr></argument>,

                                  <argument pos:start="159:35" pos:end="159:47"><expr pos:start="159:35" pos:end="159:47"><name pos:start="159:35" pos:end="159:47">profile_level</name></expr></argument>,

                                  <argument pos:start="161:35" pos:end="161:45"><expr pos:start="161:35" pos:end="161:45"><name pos:start="161:35" pos:end="161:45">gamma_level</name></expr></argument>,

                                  <argument pos:start="163:35" pos:end="163:42"><expr pos:start="163:35" pos:end="163:42"><name pos:start="163:35" pos:end="163:42">enc_info</name></expr></argument>,

                                  <argument pos:start="165:35" pos:end="165:51"><expr pos:start="165:35" pos:end="165:51"><name pos:start="165:35" pos:end="165:51">pixel_buffer_info</name></expr></argument>,

                                  <argument pos:start="167:35" pos:end="167:49"><expr pos:start="167:35" pos:end="167:49"><operator pos:start="167:35" pos:end="167:35">&amp;</operator><name pos:start="167:36" pos:end="167:49"><name pos:start="167:36" pos:end="167:40">vtctx</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:49">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="171:5" pos:end="173:26"><if pos:start="171:5" pos:end="173:26">if <condition pos:start="171:8" pos:end="171:19">(<expr pos:start="171:9" pos:end="171:18"><name pos:start="171:9" pos:end="171:14">status</name> <operator pos:start="171:16" pos:end="171:16">&lt;</operator> <literal type="number" pos:start="171:18" pos:end="171:18">0</literal></expr>)</condition><block type="pseudo" pos:start="173:9" pos:end="173:26"><block_content pos:start="173:9" pos:end="173:26">

        <goto pos:start="173:9" pos:end="173:26">goto <name pos:start="173:14" pos:end="173:25">init_cleanup</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="183:57"><expr pos:start="177:5" pos:end="183:56"><name pos:start="177:5" pos:end="177:10">status</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <call pos:start="177:14" pos:end="183:56"><name pos:start="177:14" pos:end="177:34">VTSessionCopyProperty</name><argument_list pos:start="177:35" pos:end="183:56">(<argument pos:start="177:36" pos:end="177:49"><expr pos:start="177:36" pos:end="177:49"><name pos:start="177:36" pos:end="177:49"><name pos:start="177:36" pos:end="177:40">vtctx</name><operator pos:start="177:41" pos:end="177:42">-&gt;</operator><name pos:start="177:43" pos:end="177:49">session</name></name></expr></argument>,

                                   <argument pos:start="179:36" pos:end="179:81"><expr pos:start="179:36" pos:end="179:81"><name pos:start="179:36" pos:end="179:81">kVTCompressionPropertyKey_AllowFrameReordering</name></expr></argument>,

                                   <argument pos:start="181:36" pos:end="181:54"><expr pos:start="181:36" pos:end="181:54"><name pos:start="181:36" pos:end="181:54">kCFAllocatorDefault</name></expr></argument>,

                                   <argument pos:start="183:36" pos:end="183:55"><expr pos:start="183:36" pos:end="183:55"><operator pos:start="183:36" pos:end="183:36">&amp;</operator><name pos:start="183:37" pos:end="183:55">has_b_frames_cfbool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="187:5" pos:end="195:5"><if pos:start="187:5" pos:end="195:5">if <condition pos:start="187:8" pos:end="187:16">(<expr pos:start="187:9" pos:end="187:15"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:15">status</name></expr>)</condition> <block pos:start="187:18" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:39">

        <comment type="line" pos:start="189:9" pos:end="189:81">//Some devices don't output B-frames for main profile, even if requested.</comment>

        <expr_stmt pos:start="191:9" pos:end="191:69"><expr pos:start="191:9" pos:end="191:68"><name pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:13">vtctx</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:27">has_b_frames</name></name> <operator pos:start="191:29" pos:end="191:29">=</operator> <call pos:start="191:31" pos:end="191:68"><name pos:start="191:31" pos:end="191:47">CFBooleanGetValue</name><argument_list pos:start="191:48" pos:end="191:68">(<argument pos:start="191:49" pos:end="191:67"><expr pos:start="191:49" pos:end="191:67"><name pos:start="191:49" pos:end="191:67">has_b_frames_cfbool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:39"><expr pos:start="193:9" pos:end="193:38"><call pos:start="193:9" pos:end="193:38"><name pos:start="193:9" pos:end="193:17">CFRelease</name><argument_list pos:start="193:18" pos:end="193:38">(<argument pos:start="193:19" pos:end="193:37"><expr pos:start="193:19" pos:end="193:37"><name pos:start="193:19" pos:end="193:37">has_b_frames_cfbool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:46"><expr pos:start="197:5" pos:end="197:45"><name pos:start="197:5" pos:end="197:23"><name pos:start="197:5" pos:end="197:9">avctx</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:23">has_b_frames</name></name> <operator pos:start="197:25" pos:end="197:25">=</operator> <name pos:start="197:27" pos:end="197:45"><name pos:start="197:27" pos:end="197:31">vtctx</name><operator pos:start="197:32" pos:end="197:33">-&gt;</operator><name pos:start="197:34" pos:end="197:45">has_b_frames</name></name></expr>;</expr_stmt>



<label pos:start="201:1" pos:end="201:13"><name pos:start="201:1" pos:end="201:12">init_cleanup</name>:</label>

    <if_stmt pos:start="203:5" pos:end="205:31"><if pos:start="203:5" pos:end="205:31">if <condition pos:start="203:8" pos:end="203:20">(<expr pos:start="203:9" pos:end="203:19"><name pos:start="203:9" pos:end="203:19">gamma_level</name></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="205:31"><block_content pos:start="205:9" pos:end="205:31">

        <expr_stmt pos:start="205:9" pos:end="205:31"><expr pos:start="205:9" pos:end="205:30"><call pos:start="205:9" pos:end="205:30"><name pos:start="205:9" pos:end="205:17">CFRelease</name><argument_list pos:start="205:18" pos:end="205:30">(<argument pos:start="205:19" pos:end="205:29"><expr pos:start="205:19" pos:end="205:29"><name pos:start="205:19" pos:end="205:29">gamma_level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="209:5" pos:end="211:37"><if pos:start="209:5" pos:end="211:37">if <condition pos:start="209:8" pos:end="209:26">(<expr pos:start="209:9" pos:end="209:25"><name pos:start="209:9" pos:end="209:25">pixel_buffer_info</name></expr>)</condition><block type="pseudo" pos:start="211:9" pos:end="211:37"><block_content pos:start="211:9" pos:end="211:37">

        <expr_stmt pos:start="211:9" pos:end="211:37"><expr pos:start="211:9" pos:end="211:36"><call pos:start="211:9" pos:end="211:36"><name pos:start="211:9" pos:end="211:17">CFRelease</name><argument_list pos:start="211:18" pos:end="211:36">(<argument pos:start="211:19" pos:end="211:35"><expr pos:start="211:19" pos:end="211:35"><name pos:start="211:19" pos:end="211:35">pixel_buffer_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:24"><expr pos:start="215:5" pos:end="215:23"><call pos:start="215:5" pos:end="215:23"><name pos:start="215:5" pos:end="215:13">CFRelease</name><argument_list pos:start="215:14" pos:end="215:23">(<argument pos:start="215:15" pos:end="215:22"><expr pos:start="215:15" pos:end="215:22"><name pos:start="215:15" pos:end="215:22">enc_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="219:5" pos:end="219:18">return <expr pos:start="219:12" pos:end="219:17"><name pos:start="219:12" pos:end="219:17">status</name></expr>;</return>

</block_content>}</block></function>
</unit>
