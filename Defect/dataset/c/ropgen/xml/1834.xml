<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1834.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">ffat_encode</name><parameter_list pos:start="1:23" pos:end="3:65">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:54">AVPacket</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">avpkt</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:43"><decl pos:start="3:24" pos:end="3:43"><type pos:start="3:24" pos:end="3:43"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">AVFrame</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">frame</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:64"><decl pos:start="3:46" pos:end="3:64"><type pos:start="3:46" pos:end="3:64"><name pos:start="3:46" pos:end="3:48">int</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:64">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">ATDecodeContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">at</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">OSStatus</name></type> <name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="29:6"><decl pos:start="13:5" pos:end="29:5"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">AudioBufferList</name></type> <name pos:start="13:21" pos:end="13:31">out_buffers</name> <init pos:start="13:33" pos:end="29:5">= <expr pos:start="13:35" pos:end="29:5"><block pos:start="13:35" pos:end="29:5">{

        <expr pos:start="15:9" pos:end="15:27"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:23">mNumberBuffers</name> <operator pos:start="15:25" pos:end="15:25">=</operator> <literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr>,

        <expr pos:start="17:9" pos:end="27:9"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:17">mBuffers</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <block pos:start="17:21" pos:end="27:9">{

            <expr pos:start="19:13" pos:end="25:13"><block pos:start="19:13" pos:end="25:13">{

                <expr pos:start="21:17" pos:end="21:50"><operator pos:start="21:17" pos:end="21:17">.</operator><name pos:start="21:18" pos:end="21:32">mNumberChannels</name> <operator pos:start="21:34" pos:end="21:34">=</operator> <name pos:start="21:36" pos:end="21:50"><name pos:start="21:36" pos:end="21:40">avctx</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:50">channels</name></name></expr>,

                <expr pos:start="23:17" pos:end="23:45"><operator pos:start="23:17" pos:end="23:17">.</operator><name pos:start="23:18" pos:end="23:30">mDataByteSize</name> <operator pos:start="23:32" pos:end="23:32">=</operator> <name pos:start="23:34" pos:end="23:45"><name pos:start="23:34" pos:end="23:35">at</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:45">pkt_size</name></name></expr>,

            }</block></expr>

        }</block></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:52"><decl pos:start="31:5" pos:end="31:51"><type pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:32">AudioStreamPacketDescription</name></type> <name pos:start="31:34" pos:end="31:45">out_pkt_desc</name> <init pos:start="31:47" pos:end="31:51">= <expr pos:start="31:49" pos:end="31:51"><block pos:start="31:49" pos:end="31:51">{<expr pos:start="31:50" pos:end="31:50"><literal type="number" pos:start="31:50" pos:end="31:50">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="37:19"><if pos:start="35:5" pos:end="37:19">if <condition pos:start="35:8" pos:end="35:68">(<expr pos:start="35:9" pos:end="35:67"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:12">ret</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:62"><name pos:start="35:16" pos:end="35:31">ff_alloc_packet2</name><argument_list pos:start="35:32" pos:end="35:62">(<argument pos:start="35:33" pos:end="35:37"><expr pos:start="35:33" pos:end="35:37"><name pos:start="35:33" pos:end="35:37">avctx</name></expr></argument>, <argument pos:start="35:40" pos:end="35:44"><expr pos:start="35:40" pos:end="35:44"><name pos:start="35:40" pos:end="35:44">avpkt</name></expr></argument>, <argument pos:start="35:47" pos:end="35:58"><expr pos:start="35:47" pos:end="35:58"><name pos:start="35:47" pos:end="35:58"><name pos:start="35:47" pos:end="35:48">at</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:58">pkt_size</name></name></expr></argument>, <argument pos:start="35:61" pos:end="35:61"><expr pos:start="35:61" pos:end="35:61"><literal type="number" pos:start="35:61" pos:end="35:61">0</literal></expr></argument>)</argument_list></call><operator pos:start="35:63" pos:end="35:63">)</operator> <operator pos:start="35:65" pos:end="35:65">&lt;</operator> <literal type="number" pos:start="35:67" pos:end="35:67">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:19"><block_content pos:start="37:9" pos:end="37:19">

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:18">av_frame_unref</name><argument_list pos:start="41:19" pos:end="41:37">(<argument pos:start="41:20" pos:end="41:36"><expr pos:start="41:20" pos:end="41:36"><operator pos:start="41:20" pos:end="41:20">&amp;</operator><name pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:22">at</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:36">new_in_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="59:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:14">(<expr pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:13">frame</name></expr>)</condition> <block pos:start="45:16" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:23">

        <if_stmt pos:start="47:9" pos:end="49:23"><if pos:start="47:9" pos:end="49:23">if <condition pos:start="47:12" pos:end="47:57">(<expr pos:start="47:13" pos:end="47:56"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:16">ret</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:51"><name pos:start="47:20" pos:end="47:34">ff_af_queue_add</name><argument_list pos:start="47:35" pos:end="47:51">(<argument pos:start="47:36" pos:end="47:43"><expr pos:start="47:36" pos:end="47:43"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:43"><name pos:start="47:37" pos:end="47:38">at</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:43">afq</name></name></expr></argument>, <argument pos:start="47:46" pos:end="47:50"><expr pos:start="47:46" pos:end="47:50"><name pos:start="47:46" pos:end="47:50">frame</name></expr></argument>)</argument_list></call><operator pos:start="47:52" pos:end="47:52">)</operator> <operator pos:start="47:54" pos:end="47:54">&lt;</operator> <literal type="number" pos:start="47:56" pos:end="47:56">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:23"><block_content pos:start="49:13" pos:end="49:23">

            <return pos:start="49:13" pos:end="49:23">return <expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="53:23"><if pos:start="51:9" pos:end="53:23">if <condition pos:start="51:12" pos:end="51:63">(<expr pos:start="51:13" pos:end="51:62"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:16">ret</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:57"><name pos:start="51:20" pos:end="51:31">av_frame_ref</name><argument_list pos:start="51:32" pos:end="51:57">(<argument pos:start="51:33" pos:end="51:49"><expr pos:start="51:33" pos:end="51:49"><operator pos:start="51:33" pos:end="51:33">&amp;</operator><name pos:start="51:34" pos:end="51:49"><name pos:start="51:34" pos:end="51:35">at</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:49">new_in_frame</name></name></expr></argument>, <argument pos:start="51:52" pos:end="51:56"><expr pos:start="51:52" pos:end="51:56"><name pos:start="51:52" pos:end="51:56">frame</name></expr></argument>)</argument_list></call><operator pos:start="51:58" pos:end="51:58">)</operator> <operator pos:start="51:60" pos:end="51:60">&lt;</operator> <literal type="number" pos:start="51:62" pos:end="51:62">0</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:23"><block_content pos:start="53:13" pos:end="53:23">

            <return pos:start="53:13" pos:end="53:23">return <expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:20">

        <expr_stmt pos:start="57:9" pos:end="57:20"><expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:10">at</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:15">eof</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:48"><expr pos:start="63:5" pos:end="63:47"><name pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:15">out_buffers</name><operator pos:start="63:16" pos:end="63:16">.</operator><name pos:start="63:17" pos:end="63:24">mBuffers</name><index pos:start="63:25" pos:end="63:27">[<expr pos:start="63:26" pos:end="63:26"><literal type="number" pos:start="63:26" pos:end="63:26">0</literal></expr>]</index></name><operator pos:start="63:28" pos:end="63:28">.</operator><name pos:start="63:29" pos:end="63:33">mData</name> <operator pos:start="63:35" pos:end="63:35">=</operator> <name pos:start="63:37" pos:end="63:47"><name pos:start="63:37" pos:end="63:41">avpkt</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:47">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:57"><expr pos:start="67:5" pos:end="67:56"><operator pos:start="67:5" pos:end="67:5">*</operator><name pos:start="67:6" pos:end="67:19">got_packet_ptr</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:39"><name pos:start="67:23" pos:end="67:27">avctx</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:39">frame_size</name></name> <operator pos:start="67:41" pos:end="67:41">/</operator> <name pos:start="67:43" pos:end="67:56"><name pos:start="67:43" pos:end="67:44">at</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:56">frame_size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="75:103"><expr pos:start="71:5" pos:end="75:102"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="75:102"><name pos:start="71:11" pos:end="71:41">AudioConverterFillComplexBuffer</name><argument_list pos:start="71:42" pos:end="75:102">(<argument pos:start="71:43" pos:end="71:55"><expr pos:start="71:43" pos:end="71:55"><name pos:start="71:43" pos:end="71:55"><name pos:start="71:43" pos:end="71:44">at</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:55">converter</name></name></expr></argument>, <argument pos:start="71:58" pos:end="71:77"><expr pos:start="71:58" pos:end="71:77"><name pos:start="71:58" pos:end="71:77">ffat_encode_callback</name></expr></argument>, <argument pos:start="71:80" pos:end="71:84"><expr pos:start="71:80" pos:end="71:84"><name pos:start="71:80" pos:end="71:84">avctx</name></expr></argument>,

                                          <argument pos:start="73:43" pos:end="73:56"><expr pos:start="73:43" pos:end="73:56"><name pos:start="73:43" pos:end="73:56">got_packet_ptr</name></expr></argument>, <argument pos:start="73:59" pos:end="73:70"><expr pos:start="73:59" pos:end="73:70"><operator pos:start="73:59" pos:end="73:59">&amp;</operator><name pos:start="73:60" pos:end="73:70">out_buffers</name></expr></argument>,

                                          <argument pos:start="75:43" pos:end="75:101"><expr pos:start="75:43" pos:end="75:101"><ternary pos:start="75:43" pos:end="75:101"><condition pos:start="75:43" pos:end="75:80"><expr pos:start="75:43" pos:end="75:78"><operator pos:start="75:43" pos:end="75:43">(</operator><name pos:start="75:44" pos:end="75:60"><name pos:start="75:44" pos:end="75:48">avctx</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:60">frame_size</name></name> <operator pos:start="75:62" pos:end="75:62">&gt;</operator> <name pos:start="75:64" pos:end="75:77"><name pos:start="75:64" pos:end="75:65">at</name><operator pos:start="75:66" pos:end="75:67">-&gt;</operator><name pos:start="75:68" pos:end="75:77">frame_size</name></name><operator pos:start="75:78" pos:end="75:78">)</operator></expr> ?</condition><then pos:start="75:82" pos:end="75:85"> <expr pos:start="75:82" pos:end="75:85"><name pos:start="75:82" pos:end="75:85">NULL</name></expr> </then><else pos:start="75:87" pos:end="75:101">: <expr pos:start="75:89" pos:end="75:101"><operator pos:start="75:89" pos:end="75:89">&amp;</operator><name pos:start="75:90" pos:end="75:101">out_pkt_desc</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="95:5"><if pos:start="77:5" pos:end="91:5">if <condition pos:start="77:8" pos:end="77:46">(<expr pos:start="77:9" pos:end="77:45"><operator pos:start="77:9" pos:end="77:9">(</operator><operator pos:start="77:10" pos:end="77:10">!</operator><name pos:start="77:11" pos:end="77:13">ret</name> <operator pos:start="77:15" pos:end="77:16">||</operator> <name pos:start="77:18" pos:end="77:20">ret</name> <operator pos:start="77:22" pos:end="77:23">==</operator> <literal type="number" pos:start="77:25" pos:end="77:25">1</literal><operator pos:start="77:26" pos:end="77:26">)</operator> <operator pos:start="77:28" pos:end="77:29">&amp;&amp;</operator> <operator pos:start="77:31" pos:end="77:31">*</operator><name pos:start="77:32" pos:end="77:45">got_packet_ptr</name></expr>)</condition> <block pos:start="77:48" pos:end="91:5">{<block_content pos:start="79:9" pos:end="89:45">

        <expr_stmt pos:start="79:9" pos:end="79:60"><expr pos:start="79:9" pos:end="79:59"><name pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:13">avpkt</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:19">size</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:45"><name pos:start="79:23" pos:end="79:33">out_buffers</name><operator pos:start="79:34" pos:end="79:34">.</operator><name pos:start="79:35" pos:end="79:42">mBuffers</name><index pos:start="79:43" pos:end="79:45">[<expr pos:start="79:44" pos:end="79:44"><literal type="number" pos:start="79:44" pos:end="79:44">0</literal></expr>]</index></name><operator pos:start="79:46" pos:end="79:46">.</operator><name pos:start="79:47" pos:end="79:59">mDataByteSize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="89:45"><expr pos:start="81:9" pos:end="89:44"><call pos:start="81:9" pos:end="89:44"><name pos:start="81:9" pos:end="81:26">ff_af_queue_remove</name><argument_list pos:start="81:27" pos:end="89:44">(<argument pos:start="81:28" pos:end="81:35"><expr pos:start="81:28" pos:end="81:35"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:35"><name pos:start="81:29" pos:end="81:30">at</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:35">afq</name></name></expr></argument>, <argument pos:start="81:38" pos:end="85:54"><expr pos:start="81:38" pos:end="85:54"><ternary pos:start="81:38" pos:end="85:54"><condition pos:start="81:38" pos:end="81:75"><expr pos:start="81:38" pos:end="81:73"><name pos:start="81:38" pos:end="81:73"><name pos:start="81:38" pos:end="81:49">out_pkt_desc</name><operator pos:start="81:50" pos:end="81:50">.</operator><name pos:start="81:51" pos:end="81:73">mVariableFramesInPacket</name></name></expr> ?</condition><then pos:start="83:38" pos:end="83:73">

                                     <expr pos:start="83:38" pos:end="83:73"><name pos:start="83:38" pos:end="83:73"><name pos:start="83:38" pos:end="83:49">out_pkt_desc</name><operator pos:start="83:50" pos:end="83:50">.</operator><name pos:start="83:51" pos:end="83:73">mVariableFramesInPacket</name></name></expr> </then><else pos:start="83:75" pos:end="85:54">:

                                     <expr pos:start="85:38" pos:end="85:54"><name pos:start="85:38" pos:end="85:54"><name pos:start="85:38" pos:end="85:42">avctx</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:54">frame_size</name></name></expr></else></ternary></expr></argument>,

                           <argument pos:start="87:28" pos:end="87:38"><expr pos:start="87:28" pos:end="87:38"><operator pos:start="87:28" pos:end="87:28">&amp;</operator><name pos:start="87:29" pos:end="87:38"><name pos:start="87:29" pos:end="87:33">avpkt</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:38">pts</name></name></expr></argument>,

                           <argument pos:start="89:28" pos:end="89:43"><expr pos:start="89:28" pos:end="89:43"><operator pos:start="89:28" pos:end="89:28">&amp;</operator><name pos:start="89:29" pos:end="89:43"><name pos:start="89:29" pos:end="89:33">avpkt</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:43">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="91:7" pos:end="95:5">else if <condition pos:start="91:15" pos:end="91:31">(<expr pos:start="91:16" pos:end="91:30"><name pos:start="91:16" pos:end="91:18">ret</name> <operator pos:start="91:20" pos:end="91:21">&amp;&amp;</operator> <name pos:start="91:23" pos:end="91:25">ret</name> <operator pos:start="91:27" pos:end="91:28">!=</operator> <literal type="number" pos:start="91:30" pos:end="91:30">1</literal></expr>)</condition> <block pos:start="91:33" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:65">

        <expr_stmt pos:start="93:9" pos:end="93:65"><expr pos:start="93:9" pos:end="93:64"><call pos:start="93:9" pos:end="93:64"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:64">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:36"><expr pos:start="93:23" pos:end="93:36"><name pos:start="93:23" pos:end="93:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="93:39" pos:end="93:58"><expr pos:start="93:39" pos:end="93:58"><literal type="string" pos:start="93:39" pos:end="93:58">"Encode error: %i\n"</literal></expr></argument>, <argument pos:start="93:61" pos:end="93:63"><expr pos:start="93:61" pos:end="93:63"><name pos:start="93:61" pos:end="93:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
