<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16393.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">ide_init_drive</name><parameter_list pos:start="1:20" pos:end="3:60">(<parameter pos:start="1:21" pos:end="1:31"><decl pos:start="1:21" pos:end="1:31"><type pos:start="1:21" pos:end="1:31"><name pos:start="1:21" pos:end="1:28">IDEState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">s</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:42">DriveInfo</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">dinfo</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:39"><decl pos:start="3:21" pos:end="3:39"><type pos:start="3:21" pos:end="3:39"><specifier pos:start="3:21" pos:end="3:25">const</specifier> <name pos:start="3:27" pos:end="3:30">char</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:39">version</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:59"><decl pos:start="3:42" pos:end="3:59"><type pos:start="3:42" pos:end="3:59"><specifier pos:start="3:42" pos:end="3:46">const</specifier> <name pos:start="3:48" pos:end="3:51">char</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:59">serial</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:17">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">cylinders</name></decl>, <decl pos:start="7:20" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:24">heads</name></decl>, <decl pos:start="7:27" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:30">secs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:23">nb_sectors</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:9">bs</name></name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:17">dinfo</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:23">bdrv</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><call pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:21">bdrv_get_geometry</name><argument_list pos:start="15:22" pos:end="15:41">(<argument pos:start="15:23" pos:end="15:27"><expr pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:27">bs</name></name></expr></argument>, <argument pos:start="15:30" pos:end="15:40"><expr pos:start="15:30" pos:end="15:40"><operator pos:start="15:30" pos:end="15:30">&amp;</operator><name pos:start="15:31" pos:end="15:40">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:58"><expr pos:start="17:5" pos:end="17:57"><call pos:start="17:5" pos:end="17:57"><name pos:start="17:5" pos:end="17:23">bdrv_guess_geometry</name><argument_list pos:start="17:24" pos:end="17:57">(<argument pos:start="17:25" pos:end="17:29"><expr pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">bs</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:41"><expr pos:start="17:32" pos:end="17:41"><operator pos:start="17:32" pos:end="17:32">&amp;</operator><name pos:start="17:33" pos:end="17:41">cylinders</name></expr></argument>, <argument pos:start="17:44" pos:end="17:49"><expr pos:start="17:44" pos:end="17:49"><operator pos:start="17:44" pos:end="17:44">&amp;</operator><name pos:start="17:45" pos:end="17:49">heads</name></expr></argument>, <argument pos:start="17:52" pos:end="17:56"><expr pos:start="17:52" pos:end="17:56"><operator pos:start="17:52" pos:end="17:52">&amp;</operator><name pos:start="17:53" pos:end="17:56">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:16">cylinders</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:28">cylinders</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">heads</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:20">heads</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">sectors</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:21">secs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:17">nb_sectors</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:30">nb_sectors</name></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="29:27">/* The SMART values should be preserved across power cycles

       but they aren't.  */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:20">smart_enabled</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <literal type="number" pos:start="31:24" pos:end="31:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:21">smart_autosave</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:19">smart_errors</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:27">smart_selftest_count</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:53">(<expr pos:start="39:9" pos:end="39:52"><call pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:26">bdrv_get_type_hint</name><argument_list pos:start="39:27" pos:end="39:33">(<argument pos:start="39:28" pos:end="39:32"><expr pos:start="39:28" pos:end="39:32"><name pos:start="39:28" pos:end="39:32"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:32">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:35" pos:end="39:36">==</operator> <name pos:start="39:38" pos:end="39:52">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="39:55" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:54">

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:19">is_cdrom</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:54"><expr pos:start="43:9" pos:end="43:53"><call pos:start="43:9" pos:end="43:53"><name pos:start="43:9" pos:end="43:26">bdrv_set_change_cb</name><argument_list pos:start="43:27" pos:end="43:53">(<argument pos:start="43:28" pos:end="43:32"><expr pos:start="43:28" pos:end="43:32"><name pos:start="43:28" pos:end="43:32"><name pos:start="43:28" pos:end="43:28">s</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:32">bs</name></name></expr></argument>, <argument pos:start="43:35" pos:end="43:49"><expr pos:start="43:35" pos:end="43:49"><name pos:start="43:35" pos:end="43:49">cdrom_change_cb</name></expr></argument>, <argument pos:start="43:52" pos:end="43:52"><expr pos:start="43:52" pos:end="43:52"><name pos:start="43:52" pos:end="43:52">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:26">(<expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:14">serial</name> <operator pos:start="47:16" pos:end="47:17">&amp;&amp;</operator> <operator pos:start="47:19" pos:end="47:19">*</operator><name pos:start="47:20" pos:end="47:25">serial</name></expr>)</condition> <block pos:start="47:28" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:74">

        <expr_stmt pos:start="49:9" pos:end="49:74"><expr pos:start="49:9" pos:end="49:73"><call pos:start="49:9" pos:end="49:73"><name pos:start="49:9" pos:end="49:15">strncpy</name><argument_list pos:start="49:16" pos:end="49:73">(<argument pos:start="49:17" pos:end="49:35"><expr pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:35">drive_serial_str</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:43"><expr pos:start="49:38" pos:end="49:43"><name pos:start="49:38" pos:end="49:43">serial</name></expr></argument>, <argument pos:start="49:46" pos:end="49:72"><expr pos:start="49:46" pos:end="49:72"><sizeof pos:start="49:46" pos:end="49:72">sizeof<argument_list pos:start="49:52" pos:end="49:72">(<argument pos:start="49:53" pos:end="49:71"><expr pos:start="49:53" pos:end="49:71"><name pos:start="49:53" pos:end="49:71"><name pos:start="49:53" pos:end="49:53">s</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:71">drive_serial_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="57:5">else <block pos:start="51:12" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:44">

        <expr_stmt pos:start="53:9" pos:end="55:44"><expr pos:start="53:9" pos:end="55:43"><call pos:start="53:9" pos:end="55:43"><name pos:start="53:9" pos:end="53:16">snprintf</name><argument_list pos:start="53:17" pos:end="55:43">(<argument pos:start="53:18" pos:end="53:36"><expr pos:start="53:18" pos:end="53:36"><name pos:start="53:18" pos:end="53:36"><name pos:start="53:18" pos:end="53:18">s</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:36">drive_serial_str</name></name></expr></argument>, <argument pos:start="53:39" pos:end="53:65"><expr pos:start="53:39" pos:end="53:65"><sizeof pos:start="53:39" pos:end="53:65">sizeof<argument_list pos:start="53:45" pos:end="53:65">(<argument pos:start="53:46" pos:end="53:64"><expr pos:start="53:46" pos:end="53:64"><name pos:start="53:46" pos:end="53:64"><name pos:start="53:46" pos:end="53:46">s</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:64">drive_serial_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="55:18" pos:end="55:25"><expr pos:start="55:18" pos:end="55:25"><literal type="string" pos:start="55:18" pos:end="55:25">"QM%05d"</literal></expr></argument>, <argument pos:start="55:28" pos:end="55:42"><expr pos:start="55:28" pos:end="55:42"><name pos:start="55:28" pos:end="55:42"><name pos:start="55:28" pos:end="55:28">s</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:42">drive_serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:15">version</name></expr>)</condition> <block pos:start="59:18" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:57">

        <expr_stmt pos:start="61:9" pos:end="61:57"><expr pos:start="61:9" pos:end="61:56"><call pos:start="61:9" pos:end="61:56"><name pos:start="61:9" pos:end="61:15">pstrcpy</name><argument_list pos:start="61:16" pos:end="61:56">(<argument pos:start="61:17" pos:end="61:26"><expr pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:26">version</name></name></expr></argument>, <argument pos:start="61:29" pos:end="61:46"><expr pos:start="61:29" pos:end="61:46"><sizeof pos:start="61:29" pos:end="61:46">sizeof<argument_list pos:start="61:35" pos:end="61:46">(<argument pos:start="61:36" pos:end="61:45"><expr pos:start="61:36" pos:end="61:45"><name pos:start="61:36" pos:end="61:45"><name pos:start="61:36" pos:end="61:36">s</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:45">version</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:49" pos:end="61:55"><expr pos:start="61:49" pos:end="61:55"><name pos:start="61:49" pos:end="61:55">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="67:5">else <block pos:start="63:12" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:62">

        <expr_stmt pos:start="65:9" pos:end="65:62"><expr pos:start="65:9" pos:end="65:61"><call pos:start="65:9" pos:end="65:61"><name pos:start="65:9" pos:end="65:15">pstrcpy</name><argument_list pos:start="65:16" pos:end="65:61">(<argument pos:start="65:17" pos:end="65:26"><expr pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:26">version</name></name></expr></argument>, <argument pos:start="65:29" pos:end="65:46"><expr pos:start="65:29" pos:end="65:46"><sizeof pos:start="65:29" pos:end="65:46">sizeof<argument_list pos:start="65:35" pos:end="65:46">(<argument pos:start="65:36" pos:end="65:45"><expr pos:start="65:36" pos:end="65:45"><name pos:start="65:36" pos:end="65:45"><name pos:start="65:36" pos:end="65:36">s</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:45">version</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="65:49" pos:end="65:60"><expr pos:start="65:49" pos:end="65:60"><name pos:start="65:49" pos:end="65:60">QEMU_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><call pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:13">ide_reset</name><argument_list pos:start="69:14" pos:end="69:16">(<argument pos:start="69:15" pos:end="69:15"><expr pos:start="69:15" pos:end="69:15"><name pos:start="69:15" pos:end="69:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
