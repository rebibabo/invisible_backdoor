<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26740.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">qsv_decode</name><parameter_list pos:start="1:22" pos:end="5:38">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:55">QSVContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">q</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:36"><decl pos:start="3:23" pos:end="3:36"><type pos:start="3:23" pos:end="3:36"><name pos:start="3:23" pos:end="3:29">AVFrame</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:36">frame</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:52"><decl pos:start="3:39" pos:end="3:52"><type pos:start="3:39" pos:end="3:52"><name pos:start="3:39" pos:end="3:41">int</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:52">got_frame</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:37"><decl pos:start="5:23" pos:end="5:37"><type pos:start="5:23" pos:end="5:37"><name pos:start="5:23" pos:end="5:30">AVPacket</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:37">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="223:1">{<block_content pos:start="9:5" pos:end="221:25">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QSVFrame</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:23">out_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">mfxFrameSurface1</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">insurf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">mfxFrameSurface1</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:29">outsurf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">mfxSyncPoint</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:22">sync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">mfxBitstream</name></type> <name pos:start="17:18" pos:end="17:19">bs</name> <init pos:start="17:21" pos:end="17:35">= <expr pos:start="17:23" pos:end="17:35"><block pos:start="17:23" pos:end="17:35">{ <expr pos:start="17:25" pos:end="17:33"><block pos:start="17:25" pos:end="17:33">{ <expr pos:start="17:27" pos:end="17:31"><block pos:start="17:27" pos:end="17:31">{ <expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">0</literal></expr> }</block></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:13">avpkt</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">size</name></name></expr>)</condition> <block pos:start="23:22" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:35">

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:10">bs</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:15">Data</name></name>       <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:35"><name pos:start="25:25" pos:end="25:29">avpkt</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:35">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:10">bs</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:21">DataLength</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:29">avpkt</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:35">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:10">bs</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:20">MaxLength</name></name>  <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:26">bs</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:37">DataLength</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:10">bs</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:20">TimeStamp</name></name>  <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:34"><name pos:start="31:25" pos:end="31:29">avpkt</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:34">pts</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:8">sync</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:36"><name pos:start="37:12" pos:end="37:21">av_mallocz</name><argument_list pos:start="37:22" pos:end="37:36">(<argument pos:start="37:23" pos:end="37:35"><expr pos:start="37:23" pos:end="37:35"><sizeof pos:start="37:23" pos:end="37:35">sizeof<argument_list pos:start="37:29" pos:end="37:35">(<argument pos:start="37:30" pos:end="37:34"><expr pos:start="37:30" pos:end="37:34"><operator pos:start="37:30" pos:end="37:30">*</operator><name pos:start="37:31" pos:end="37:34">sync</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:14">(<expr pos:start="39:9" pos:end="39:13"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:13">sync</name></expr>)</condition> <block pos:start="39:16" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:31">

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><call pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:16">av_freep</name><argument_list pos:start="41:17" pos:end="41:23">(<argument pos:start="41:18" pos:end="41:22"><expr pos:start="41:18" pos:end="41:22"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:22">sync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <do pos:start="49:5" pos:end="69:72">do <block pos:start="49:8" pos:end="69:5">{<block_content pos:start="51:9" pos:end="65:27">

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:44"><name pos:start="51:15" pos:end="51:25">get_surface</name><argument_list pos:start="51:26" pos:end="51:44">(<argument pos:start="51:27" pos:end="51:31"><expr pos:start="51:27" pos:end="51:31"><name pos:start="51:27" pos:end="51:31">avctx</name></expr></argument>, <argument pos:start="51:34" pos:end="51:34"><expr pos:start="51:34" pos:end="51:34"><name pos:start="51:34" pos:end="51:34">q</name></expr></argument>, <argument pos:start="51:37" pos:end="51:43"><expr pos:start="51:37" pos:end="51:43"><operator pos:start="51:37" pos:end="51:37">&amp;</operator><name pos:start="51:38" pos:end="51:43">insurf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:23"><if pos:start="53:9" pos:end="55:23">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:23"><block_content pos:start="55:13" pos:end="55:23">

            <return pos:start="55:13" pos:end="55:23">return <expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="61:70"><expr pos:start="59:9" pos:end="61:69"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="61:69"><name pos:start="59:15" pos:end="59:45">MFXVideoDECODE_DecodeFrameAsync</name><argument_list pos:start="59:46" pos:end="61:69">(<argument pos:start="59:47" pos:end="59:56"><expr pos:start="59:47" pos:end="59:56"><name pos:start="59:47" pos:end="59:56"><name pos:start="59:47" pos:end="59:47">q</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:56">session</name></name></expr></argument>, <argument pos:start="59:59" pos:end="59:82"><expr pos:start="59:59" pos:end="59:82"><ternary pos:start="59:59" pos:end="59:82"><condition pos:start="59:59" pos:end="59:71"><expr pos:start="59:59" pos:end="59:69"><name pos:start="59:59" pos:end="59:69"><name pos:start="59:59" pos:end="59:63">avpkt</name><operator pos:start="59:64" pos:end="59:65">-&gt;</operator><name pos:start="59:66" pos:end="59:69">size</name></name></expr> ?</condition><then pos:start="59:73" pos:end="59:75"> <expr pos:start="59:73" pos:end="59:75"><operator pos:start="59:73" pos:end="59:73">&amp;</operator><name pos:start="59:74" pos:end="59:75">bs</name></expr> </then><else pos:start="59:77" pos:end="59:82">: <expr pos:start="59:79" pos:end="59:82"><name pos:start="59:79" pos:end="59:82">NULL</name></expr></else></ternary></expr></argument>,

                                              <argument pos:start="61:47" pos:end="61:52"><expr pos:start="61:47" pos:end="61:52"><name pos:start="61:47" pos:end="61:52">insurf</name></expr></argument>, <argument pos:start="61:55" pos:end="61:62"><expr pos:start="61:55" pos:end="61:62"><operator pos:start="61:55" pos:end="61:55">&amp;</operator><name pos:start="61:56" pos:end="61:62">outsurf</name></expr></argument>, <argument pos:start="61:65" pos:end="61:68"><expr pos:start="61:65" pos:end="61:68"><name pos:start="61:65" pos:end="61:68">sync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:27"><if pos:start="63:9" pos:end="65:27">if <condition pos:start="63:12" pos:end="63:39">(<expr pos:start="63:13" pos:end="63:38"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:18">==</operator> <name pos:start="63:20" pos:end="63:38">MFX_WRN_DEVICE_BUSY</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:27"><block_content pos:start="65:13" pos:end="65:27">

            <expr_stmt pos:start="65:13" pos:end="65:27"><expr pos:start="65:13" pos:end="65:26"><call pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:21">av_usleep</name><argument_list pos:start="65:22" pos:end="65:26">(<argument pos:start="65:23" pos:end="65:25"><expr pos:start="65:23" pos:end="65:25"><literal type="number" pos:start="65:23" pos:end="65:25">500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    </block_content>}</block> while <condition pos:start="69:13" pos:end="69:71">(<expr pos:start="69:14" pos:end="69:70"><name pos:start="69:14" pos:end="69:16">ret</name> <operator pos:start="69:18" pos:end="69:19">==</operator> <name pos:start="69:21" pos:end="69:39">MFX_WRN_DEVICE_BUSY</name> <operator pos:start="69:41" pos:end="69:42">||</operator> <name pos:start="69:44" pos:end="69:46">ret</name> <operator pos:start="69:48" pos:end="69:49">==</operator> <name pos:start="69:51" pos:end="69:70">MFX_ERR_MORE_SURFACE</name></expr>)</condition>;</do>



    <if_stmt pos:start="73:5" pos:end="87:5"><if pos:start="73:5" pos:end="87:5">if <condition pos:start="73:8" pos:end="79:36">(<expr pos:start="73:9" pos:end="79:35"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:14">!=</operator> <name pos:start="73:16" pos:end="73:27">MFX_ERR_NONE</name> <operator pos:start="73:29" pos:end="73:30">&amp;&amp;</operator>

        <name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:14">!=</operator> <name pos:start="75:16" pos:end="75:32">MFX_ERR_MORE_DATA</name> <operator pos:start="75:34" pos:end="75:35">&amp;&amp;</operator>

        <name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:14">!=</operator> <name pos:start="77:16" pos:end="77:42">MFX_WRN_VIDEO_PARAM_CHANGED</name> <operator pos:start="77:44" pos:end="77:45">&amp;&amp;</operator>

        <name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:14">!=</operator> <name pos:start="79:16" pos:end="79:35">MFX_ERR_MORE_SURFACE</name></expr>)</condition> <block pos:start="79:38" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:33">

        <expr_stmt pos:start="81:9" pos:end="81:68"><expr pos:start="81:9" pos:end="81:67"><call pos:start="81:9" pos:end="81:67"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:67">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="81:66"><expr pos:start="81:37" pos:end="81:66"><literal type="string" pos:start="81:37" pos:end="81:66">"Error during QSV decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:24"><expr pos:start="83:9" pos:end="83:23"><call pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:16">av_freep</name><argument_list pos:start="83:17" pos:end="83:23">(<argument pos:start="83:18" pos:end="83:22"><expr pos:start="83:18" pos:end="83:22"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:22">sync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:33">return <expr pos:start="85:16" pos:end="85:32"><call pos:start="85:16" pos:end="85:32"><name pos:start="85:16" pos:end="85:27">ff_qsv_error</name><argument_list pos:start="85:28" pos:end="85:32">(<argument pos:start="85:29" pos:end="85:31"><expr pos:start="85:29" pos:end="85:31"><name pos:start="85:29" pos:end="85:31">ret</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="91:5" pos:end="93:62">/* make sure we do not enter an infinite loop if the SDK

     * did not consume any data and did not return anything */</comment>

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:33">(<expr pos:start="95:9" pos:end="95:32"><operator pos:start="95:9" pos:end="95:9">!</operator><operator pos:start="95:10" pos:end="95:10">*</operator><name pos:start="95:11" pos:end="95:14">sync</name> <operator pos:start="95:16" pos:end="95:17">&amp;&amp;</operator> <operator pos:start="95:19" pos:end="95:19">!</operator><name pos:start="95:20" pos:end="95:32"><name pos:start="95:20" pos:end="95:21">bs</name><operator pos:start="95:22" pos:end="95:22">.</operator><name pos:start="95:23" pos:end="95:32">DataOffset</name></name></expr>)</condition> <block pos:start="95:35" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:36">

        <expr_stmt pos:start="97:9" pos:end="97:82"><expr pos:start="97:9" pos:end="97:81"><call pos:start="97:9" pos:end="97:81"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:81">(<argument pos:start="97:16" pos:end="97:20"><expr pos:start="97:16" pos:end="97:20"><name pos:start="97:16" pos:end="97:20">avctx</name></expr></argument>, <argument pos:start="97:23" pos:end="97:36"><expr pos:start="97:23" pos:end="97:36"><name pos:start="97:23" pos:end="97:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="97:39" pos:end="97:80"><expr pos:start="97:39" pos:end="97:80"><literal type="string" pos:start="97:39" pos:end="97:80">"A decode call did not consume any data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:36"><expr pos:start="99:9" pos:end="99:35"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:10">bs</name><operator pos:start="99:11" pos:end="99:11">.</operator><name pos:start="99:12" pos:end="99:21">DataOffset</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:35"><name pos:start="99:25" pos:end="99:29">avpkt</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:35">size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="135:5"><if pos:start="105:5" pos:end="131:5">if <condition pos:start="105:8" pos:end="105:14">(<expr pos:start="105:9" pos:end="105:13"><operator pos:start="105:9" pos:end="105:9">*</operator><name pos:start="105:10" pos:end="105:13">sync</name></expr>)</condition> <block pos:start="105:16" pos:end="131:5">{<block_content pos:start="107:9" pos:end="129:82">

        <decl_stmt pos:start="107:9" pos:end="107:53"><decl pos:start="107:9" pos:end="107:52"><type pos:start="107:9" pos:end="107:18"><name pos:start="107:9" pos:end="107:16">QSVFrame</name> <modifier pos:start="107:18" pos:end="107:18">*</modifier></type><name pos:start="107:19" pos:end="107:27">out_frame</name> <init pos:start="107:29" pos:end="107:52">= <expr pos:start="107:31" pos:end="107:52"><call pos:start="107:31" pos:end="107:52"><name pos:start="107:31" pos:end="107:40">find_frame</name><argument_list pos:start="107:41" pos:end="107:52">(<argument pos:start="107:42" pos:end="107:42"><expr pos:start="107:42" pos:end="107:42"><name pos:start="107:42" pos:end="107:42">q</name></expr></argument>, <argument pos:start="107:45" pos:end="107:51"><expr pos:start="107:45" pos:end="107:51"><name pos:start="107:45" pos:end="107:51">outsurf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="111:9" pos:end="121:9"><if pos:start="111:9" pos:end="121:9">if <condition pos:start="111:12" pos:end="111:23">(<expr pos:start="111:13" pos:end="111:22"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:22">out_frame</name></expr>)</condition> <block pos:start="111:25" pos:end="121:9">{<block_content pos:start="113:13" pos:end="119:31">

            <expr_stmt pos:start="113:13" pos:end="115:78"><expr pos:start="113:13" pos:end="115:77"><call pos:start="113:13" pos:end="115:77"><name pos:start="113:13" pos:end="113:18">av_log</name><argument_list pos:start="113:19" pos:end="115:77">(<argument pos:start="113:20" pos:end="113:24"><expr pos:start="113:20" pos:end="113:24"><name pos:start="113:20" pos:end="113:24">avctx</name></expr></argument>, <argument pos:start="113:27" pos:end="113:38"><expr pos:start="113:27" pos:end="113:38"><name pos:start="113:27" pos:end="113:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="115:20" pos:end="115:76"><expr pos:start="115:20" pos:end="115:76"><literal type="string" pos:start="115:20" pos:end="115:76">"The returned surface does not correspond to any frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:28"><expr pos:start="117:13" pos:end="117:27"><call pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:20">av_freep</name><argument_list pos:start="117:21" pos:end="117:27">(<argument pos:start="117:22" pos:end="117:26"><expr pos:start="117:22" pos:end="117:26"><operator pos:start="117:22" pos:end="117:22">&amp;</operator><name pos:start="117:23" pos:end="117:26">sync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="119:13" pos:end="119:31">return <expr pos:start="119:20" pos:end="119:30"><name pos:start="119:20" pos:end="119:30">AVERROR_BUG</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:30"><expr pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:17">out_frame</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:25">queued</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <literal type="number" pos:start="125:29" pos:end="125:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:82"><expr pos:start="127:9" pos:end="127:81"><call pos:start="127:9" pos:end="127:81"><name pos:start="127:9" pos:end="127:29">av_fifo_generic_write</name><argument_list pos:start="127:30" pos:end="127:81">(<argument pos:start="127:31" pos:end="127:43"><expr pos:start="127:31" pos:end="127:43"><name pos:start="127:31" pos:end="127:43"><name pos:start="127:31" pos:end="127:31">q</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:43">async_fifo</name></name></expr></argument>, <argument pos:start="127:46" pos:end="127:55"><expr pos:start="127:46" pos:end="127:55"><operator pos:start="127:46" pos:end="127:46">&amp;</operator><name pos:start="127:47" pos:end="127:55">out_frame</name></expr></argument>, <argument pos:start="127:58" pos:end="127:74"><expr pos:start="127:58" pos:end="127:74"><sizeof pos:start="127:58" pos:end="127:74">sizeof<argument_list pos:start="127:64" pos:end="127:74">(<argument pos:start="127:65" pos:end="127:73"><expr pos:start="127:65" pos:end="127:73"><name pos:start="127:65" pos:end="127:73">out_frame</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="127:77" pos:end="127:80"><expr pos:start="127:77" pos:end="127:80"><name pos:start="127:77" pos:end="127:80">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:82"><expr pos:start="129:9" pos:end="129:81"><call pos:start="129:9" pos:end="129:81"><name pos:start="129:9" pos:end="129:29">av_fifo_generic_write</name><argument_list pos:start="129:30" pos:end="129:81">(<argument pos:start="129:31" pos:end="129:43"><expr pos:start="129:31" pos:end="129:43"><name pos:start="129:31" pos:end="129:43"><name pos:start="129:31" pos:end="129:31">q</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:43">async_fifo</name></name></expr></argument>, <argument pos:start="129:46" pos:end="129:50"><expr pos:start="129:46" pos:end="129:50"><operator pos:start="129:46" pos:end="129:46">&amp;</operator><name pos:start="129:47" pos:end="129:50">sync</name></expr></argument>,      <argument pos:start="129:58" pos:end="129:69"><expr pos:start="129:58" pos:end="129:69"><sizeof pos:start="129:58" pos:end="129:69">sizeof<argument_list pos:start="129:64" pos:end="129:69">(<argument pos:start="129:65" pos:end="129:68"><expr pos:start="129:65" pos:end="129:68"><name pos:start="129:65" pos:end="129:68">sync</name></expr></argument>)</argument_list></sizeof></expr></argument>,      <argument pos:start="129:77" pos:end="129:80"><expr pos:start="129:77" pos:end="129:80"><name pos:start="129:77" pos:end="129:80">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="135:5">else <block pos:start="131:12" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:24">

        <expr_stmt pos:start="133:9" pos:end="133:24"><expr pos:start="133:9" pos:end="133:23"><call pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:16">av_freep</name><argument_list pos:start="133:17" pos:end="133:23">(<argument pos:start="133:18" pos:end="133:22"><expr pos:start="133:18" pos:end="133:22"><operator pos:start="133:18" pos:end="133:18">&amp;</operator><name pos:start="133:19" pos:end="133:22">sync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="139:5" pos:end="217:5"><if pos:start="139:5" pos:end="217:5">if <condition pos:start="139:8" pos:end="141:54">(<expr pos:start="139:9" pos:end="141:53"><operator pos:start="139:9" pos:end="139:9">!</operator><call pos:start="139:10" pos:end="139:37"><name pos:start="139:10" pos:end="139:22">av_fifo_space</name><argument_list pos:start="139:23" pos:end="139:37">(<argument pos:start="139:24" pos:end="139:36"><expr pos:start="139:24" pos:end="139:36"><name pos:start="139:24" pos:end="139:36"><name pos:start="139:24" pos:end="139:24">q</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:36">async_fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="139:39" pos:end="139:40">||</operator>

        <operator pos:start="141:9" pos:end="141:9">(</operator><operator pos:start="141:10" pos:end="141:10">!</operator><name pos:start="141:11" pos:end="141:21"><name pos:start="141:11" pos:end="141:15">avpkt</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:21">size</name></name> <operator pos:start="141:23" pos:end="141:24">&amp;&amp;</operator> <call pos:start="141:26" pos:end="141:52"><name pos:start="141:26" pos:end="141:37">av_fifo_size</name><argument_list pos:start="141:38" pos:end="141:52">(<argument pos:start="141:39" pos:end="141:51"><expr pos:start="141:39" pos:end="141:51"><name pos:start="141:39" pos:end="141:51"><name pos:start="141:39" pos:end="141:39">q</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:51">async_fifo</name></name></expr></argument>)</argument_list></call><operator pos:start="141:53" pos:end="141:53">)</operator></expr>)</condition> <block pos:start="141:56" pos:end="217:5">{<block_content pos:start="143:9" pos:end="215:23">

        <decl_stmt pos:start="143:9" pos:end="143:27"><decl pos:start="143:9" pos:end="143:26"><type pos:start="143:9" pos:end="143:17"><name pos:start="143:9" pos:end="143:15">AVFrame</name> <modifier pos:start="143:17" pos:end="143:17">*</modifier></type><name pos:start="143:18" pos:end="143:26">src_frame</name></decl>;</decl_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:81"><expr pos:start="147:9" pos:end="147:80"><call pos:start="147:9" pos:end="147:80"><name pos:start="147:9" pos:end="147:28">av_fifo_generic_read</name><argument_list pos:start="147:29" pos:end="147:80">(<argument pos:start="147:30" pos:end="147:42"><expr pos:start="147:30" pos:end="147:42"><name pos:start="147:30" pos:end="147:42"><name pos:start="147:30" pos:end="147:30">q</name><operator pos:start="147:31" pos:end="147:32">-&gt;</operator><name pos:start="147:33" pos:end="147:42">async_fifo</name></name></expr></argument>, <argument pos:start="147:45" pos:end="147:54"><expr pos:start="147:45" pos:end="147:54"><operator pos:start="147:45" pos:end="147:45">&amp;</operator><name pos:start="147:46" pos:end="147:54">out_frame</name></expr></argument>, <argument pos:start="147:57" pos:end="147:73"><expr pos:start="147:57" pos:end="147:73"><sizeof pos:start="147:57" pos:end="147:73">sizeof<argument_list pos:start="147:63" pos:end="147:73">(<argument pos:start="147:64" pos:end="147:72"><expr pos:start="147:64" pos:end="147:72"><name pos:start="147:64" pos:end="147:72">out_frame</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="147:76" pos:end="147:79"><expr pos:start="147:76" pos:end="147:79"><name pos:start="147:76" pos:end="147:79">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:81"><expr pos:start="149:9" pos:end="149:80"><call pos:start="149:9" pos:end="149:80"><name pos:start="149:9" pos:end="149:28">av_fifo_generic_read</name><argument_list pos:start="149:29" pos:end="149:80">(<argument pos:start="149:30" pos:end="149:42"><expr pos:start="149:30" pos:end="149:42"><name pos:start="149:30" pos:end="149:42"><name pos:start="149:30" pos:end="149:30">q</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:42">async_fifo</name></name></expr></argument>, <argument pos:start="149:45" pos:end="149:49"><expr pos:start="149:45" pos:end="149:49"><operator pos:start="149:45" pos:end="149:45">&amp;</operator><name pos:start="149:46" pos:end="149:49">sync</name></expr></argument>,      <argument pos:start="149:57" pos:end="149:68"><expr pos:start="149:57" pos:end="149:68"><sizeof pos:start="149:57" pos:end="149:68">sizeof<argument_list pos:start="149:63" pos:end="149:68">(<argument pos:start="149:64" pos:end="149:67"><expr pos:start="149:64" pos:end="149:67"><name pos:start="149:64" pos:end="149:67">sync</name></expr></argument>)</argument_list></sizeof></expr></argument>,      <argument pos:start="149:76" pos:end="149:79"><expr pos:start="149:76" pos:end="149:79"><name pos:start="149:76" pos:end="149:79">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:30"><expr pos:start="151:9" pos:end="151:29"><name pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:17">out_frame</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:25">queued</name></name> <operator pos:start="151:27" pos:end="151:27">=</operator> <literal type="number" pos:start="151:29" pos:end="151:29">0</literal></expr>;</expr_stmt>



        <do pos:start="155:9" pos:end="159:46">do <block pos:start="155:12" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:70">

            <expr_stmt pos:start="157:13" pos:end="157:70"><expr pos:start="157:13" pos:end="157:69"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <call pos:start="157:19" pos:end="157:69"><name pos:start="157:19" pos:end="157:44">MFXVideoCORE_SyncOperation</name><argument_list pos:start="157:45" pos:end="157:69">(<argument pos:start="157:46" pos:end="157:55"><expr pos:start="157:46" pos:end="157:55"><name pos:start="157:46" pos:end="157:55"><name pos:start="157:46" pos:end="157:46">q</name><operator pos:start="157:47" pos:end="157:48">-&gt;</operator><name pos:start="157:49" pos:end="157:55">session</name></name></expr></argument>, <argument pos:start="157:58" pos:end="157:62"><expr pos:start="157:58" pos:end="157:62"><operator pos:start="157:58" pos:end="157:58">*</operator><name pos:start="157:59" pos:end="157:62">sync</name></expr></argument>, <argument pos:start="157:65" pos:end="157:68"><expr pos:start="157:65" pos:end="157:68"><literal type="number" pos:start="157:65" pos:end="157:68">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="159:17" pos:end="159:45">(<expr pos:start="159:18" pos:end="159:44"><name pos:start="159:18" pos:end="159:20">ret</name> <operator pos:start="159:22" pos:end="159:23">==</operator> <name pos:start="159:25" pos:end="159:44">MFX_WRN_IN_EXECUTION</name></expr>)</condition>;</do>



        <expr_stmt pos:start="163:9" pos:end="163:24"><expr pos:start="163:9" pos:end="163:23"><call pos:start="163:9" pos:end="163:23"><name pos:start="163:9" pos:end="163:16">av_freep</name><argument_list pos:start="163:17" pos:end="163:23">(<argument pos:start="163:18" pos:end="163:22"><expr pos:start="163:18" pos:end="163:22"><operator pos:start="163:18" pos:end="163:18">&amp;</operator><name pos:start="163:19" pos:end="163:22">sync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:37"><expr pos:start="167:9" pos:end="167:36"><name pos:start="167:9" pos:end="167:17">src_frame</name> <operator pos:start="167:19" pos:end="167:19">=</operator> <name pos:start="167:21" pos:end="167:36"><name pos:start="167:21" pos:end="167:29">out_frame</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:36">frame</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:45"><expr pos:start="171:9" pos:end="171:44"><name pos:start="171:9" pos:end="171:11">ret</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:44"><name pos:start="171:15" pos:end="171:26">av_frame_ref</name><argument_list pos:start="171:27" pos:end="171:44">(<argument pos:start="171:28" pos:end="171:32"><expr pos:start="171:28" pos:end="171:32"><name pos:start="171:28" pos:end="171:32">frame</name></expr></argument>, <argument pos:start="171:35" pos:end="171:43"><expr pos:start="171:35" pos:end="171:43"><name pos:start="171:35" pos:end="171:43">src_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="175:23"><if pos:start="173:9" pos:end="175:23">if <condition pos:start="173:12" pos:end="173:20">(<expr pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:15">ret</name> <operator pos:start="173:17" pos:end="173:17">&lt;</operator> <literal type="number" pos:start="173:19" pos:end="173:19">0</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:23"><block_content pos:start="175:13" pos:end="175:23">

            <return pos:start="175:13" pos:end="175:23">return <expr pos:start="175:20" pos:end="175:22"><name pos:start="175:20" pos:end="175:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="179:9" pos:end="184:0"><expr pos:start="179:9" pos:end="179:36"><name pos:start="179:9" pos:end="179:15">outsurf</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <name pos:start="179:19" pos:end="179:36"><name pos:start="179:19" pos:end="179:27">out_frame</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:36">surface</name></name></expr>;</expr_stmt>



<cpp:if pos:start="183:1" pos:end="183:18">#<cpp:directive pos:start="183:2" pos:end="183:3">if</cpp:directive> <expr pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:18">FF_API_PKT_PTS</name></expr></cpp:if>

<decl_stmt pos:start="185:1" pos:end="187:49"><decl pos:start="185:1" pos:end="187:48"><type pos:start="185:1" pos:end="185:31"><name pos:start="185:1" pos:end="185:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

        <name pos:start="187:9" pos:end="187:22"><name pos:start="187:9" pos:end="187:13">frame</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:22">pkt_pts</name></name> <init pos:start="187:24" pos:end="187:48">= <expr pos:start="187:26" pos:end="187:48"><name pos:start="187:26" pos:end="187:48"><name pos:start="187:26" pos:end="187:32">outsurf</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:38">Data</name><operator pos:start="187:39" pos:end="187:39">.</operator><name pos:start="187:40" pos:end="187:48">TimeStamp</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="189:1" pos:end="193:45"><decl pos:start="189:1" pos:end="193:44"><type pos:start="189:1" pos:end="192:0"><name pos:start="189:1" pos:end="192:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>

        <name pos:start="193:9" pos:end="193:18"><name pos:start="193:9" pos:end="193:13">frame</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:18">pts</name></name> <init pos:start="193:20" pos:end="193:44">= <expr pos:start="193:22" pos:end="193:44"><name pos:start="193:22" pos:end="193:44"><name pos:start="193:22" pos:end="193:28">outsurf</name><operator pos:start="193:29" pos:end="193:30">-&gt;</operator><name pos:start="193:31" pos:end="193:34">Data</name><operator pos:start="193:35" pos:end="193:35">.</operator><name pos:start="193:36" pos:end="193:44">TimeStamp</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="197:9" pos:end="203:75"><expr pos:start="197:9" pos:end="203:74"><name pos:start="197:9" pos:end="197:26"><name pos:start="197:9" pos:end="197:13">frame</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:26">repeat_pict</name></name> <operator pos:start="197:28" pos:end="197:28">=</operator>

            <ternary pos:start="199:13" pos:end="203:74"><condition pos:start="199:13" pos:end="199:68"><expr pos:start="199:13" pos:end="199:66"><name pos:start="199:13" pos:end="199:35"><name pos:start="199:13" pos:end="199:19">outsurf</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:25">Info</name><operator pos:start="199:26" pos:end="199:26">.</operator><name pos:start="199:27" pos:end="199:35">PicStruct</name></name> <operator pos:start="199:37" pos:end="199:37">&amp;</operator> <name pos:start="199:39" pos:end="199:66">MFX_PICSTRUCT_FRAME_TRIPLING</name></expr> ?</condition><then pos:start="199:70" pos:end="199:70"> <expr pos:start="199:70" pos:end="199:70"><literal type="number" pos:start="199:70" pos:end="199:70">4</literal></expr> </then><else pos:start="199:72" pos:end="203:74">:

            <expr pos:start="201:13" pos:end="203:74"><ternary pos:start="201:13" pos:end="203:74"><condition pos:start="201:13" pos:end="201:68"><expr pos:start="201:13" pos:end="201:66"><name pos:start="201:13" pos:end="201:35"><name pos:start="201:13" pos:end="201:19">outsurf</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:25">Info</name><operator pos:start="201:26" pos:end="201:26">.</operator><name pos:start="201:27" pos:end="201:35">PicStruct</name></name> <operator pos:start="201:37" pos:end="201:37">&amp;</operator> <name pos:start="201:39" pos:end="201:66">MFX_PICSTRUCT_FRAME_DOUBLING</name></expr> ?</condition><then pos:start="201:70" pos:end="201:70"> <expr pos:start="201:70" pos:end="201:70"><literal type="number" pos:start="201:70" pos:end="201:70">2</literal></expr> </then><else pos:start="201:72" pos:end="203:74">:

            <expr pos:start="203:13" pos:end="203:74"><ternary pos:start="203:13" pos:end="203:74"><condition pos:start="203:13" pos:end="203:68"><expr pos:start="203:13" pos:end="203:66"><name pos:start="203:13" pos:end="203:35"><name pos:start="203:13" pos:end="203:19">outsurf</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:25">Info</name><operator pos:start="203:26" pos:end="203:26">.</operator><name pos:start="203:27" pos:end="203:35">PicStruct</name></name> <operator pos:start="203:37" pos:end="203:37">&amp;</operator> <name pos:start="203:39" pos:end="203:66">MFX_PICSTRUCT_FIELD_REPEATED</name></expr> ?</condition><then pos:start="203:70" pos:end="203:70"> <expr pos:start="203:70" pos:end="203:70"><literal type="number" pos:start="203:70" pos:end="203:70">1</literal></expr> </then><else pos:start="203:72" pos:end="203:74">: <expr pos:start="203:74" pos:end="203:74"><literal type="number" pos:start="203:74" pos:end="203:74">0</literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="207:62"><expr pos:start="205:9" pos:end="207:61"><name pos:start="205:9" pos:end="205:30"><name pos:start="205:9" pos:end="205:13">frame</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:30">top_field_first</name></name> <operator pos:start="205:32" pos:end="205:32">=</operator>

            <name pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:19">outsurf</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:25">Info</name><operator pos:start="207:26" pos:end="207:26">.</operator><name pos:start="207:27" pos:end="207:35">PicStruct</name></name> <operator pos:start="207:37" pos:end="207:37">&amp;</operator> <name pos:start="207:39" pos:end="207:61">MFX_PICSTRUCT_FIELD_TFF</name></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="211:67"><expr pos:start="209:9" pos:end="211:66"><name pos:start="209:9" pos:end="209:31"><name pos:start="209:9" pos:end="209:13">frame</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:31">interlaced_frame</name></name> <operator pos:start="209:33" pos:end="209:33">=</operator>

            <operator pos:start="211:13" pos:end="211:13">!</operator><operator pos:start="211:14" pos:end="211:14">(</operator><name pos:start="211:15" pos:end="211:37"><name pos:start="211:15" pos:end="211:21">outsurf</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:27">Info</name><operator pos:start="211:28" pos:end="211:28">.</operator><name pos:start="211:29" pos:end="211:37">PicStruct</name></name> <operator pos:start="211:39" pos:end="211:39">&amp;</operator> <name pos:start="211:41" pos:end="211:65">MFX_PICSTRUCT_PROGRESSIVE</name><operator pos:start="211:66" pos:end="211:66">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="215:9" pos:end="215:23"><expr pos:start="215:9" pos:end="215:22"><operator pos:start="215:9" pos:end="215:9">*</operator><name pos:start="215:10" pos:end="215:18">got_frame</name> <operator pos:start="215:20" pos:end="215:20">=</operator> <literal type="number" pos:start="215:22" pos:end="215:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="221:5" pos:end="221:25">return <expr pos:start="221:12" pos:end="221:24"><name pos:start="221:12" pos:end="221:24"><name pos:start="221:12" pos:end="221:13">bs</name><operator pos:start="221:14" pos:end="221:14">.</operator><name pos:start="221:15" pos:end="221:24">DataOffset</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
