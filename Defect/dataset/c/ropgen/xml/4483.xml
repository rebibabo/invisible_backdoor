<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4483.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">qemu_savevm_state_complete</name><parameter_list pos:start="1:31" pos:end="1:43">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:41"><name pos:start="1:32" pos:end="1:39">QEMUFile</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SaveStateEntry</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">se</name></decl>;</decl_stmt>



    <macro pos:start="9:5" pos:end="9:46"><name pos:start="9:5" pos:end="9:17">TAILQ_FOREACH</name><argument_list pos:start="9:18" pos:end="9:46">(<argument pos:start="9:19" pos:end="9:20">se</argument>, <argument pos:start="9:23" pos:end="9:38">&amp;savevm_handlers</argument>, <argument pos:start="9:41" pos:end="9:45">entry</argument>)</argument_list></macro> <block pos:start="9:48" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:64">

        <if_stmt pos:start="11:9" pos:end="13:21"><if pos:start="11:9" pos:end="13:21">if <condition pos:start="11:12" pos:end="11:40">(<expr pos:start="11:13" pos:end="11:39"><name pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:14">se</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:31">save_live_state</name></name> <operator pos:start="11:33" pos:end="11:34">==</operator> <name pos:start="11:36" pos:end="11:39">NULL</name></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:21"><block_content pos:start="13:13" pos:end="13:21">

            <continue pos:start="13:13" pos:end="13:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="17:9" pos:end="17:26">/* Section type */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:46"><expr pos:start="19:9" pos:end="19:45"><call pos:start="19:9" pos:end="19:45"><name pos:start="19:9" pos:end="19:21">qemu_put_byte</name><argument_list pos:start="19:22" pos:end="19:45">(<argument pos:start="19:23" pos:end="19:23"><expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">f</name></expr></argument>, <argument pos:start="19:26" pos:end="19:44"><expr pos:start="19:26" pos:end="19:44"><name pos:start="19:26" pos:end="19:44">QEMU_VM_SECTION_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><call pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:21">qemu_put_be32</name><argument_list pos:start="21:22" pos:end="21:40">(<argument pos:start="21:23" pos:end="21:23"><expr pos:start="21:23" pos:end="21:23"><name pos:start="21:23" pos:end="21:23">f</name></expr></argument>, <argument pos:start="21:26" pos:end="21:39"><expr pos:start="21:26" pos:end="21:39"><name pos:start="21:26" pos:end="21:39"><name pos:start="21:26" pos:end="21:27">se</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:39">section_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:64"><expr pos:start="25:9" pos:end="25:63"><call pos:start="25:9" pos:end="25:63"><name pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:10">se</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:27">save_live_state</name></name><argument_list pos:start="25:28" pos:end="25:63">(<argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">f</name></expr></argument>, <argument pos:start="25:32" pos:end="25:50"><expr pos:start="25:32" pos:end="25:50"><name pos:start="25:32" pos:end="25:50">QEMU_VM_SECTION_END</name></expr></argument>, <argument pos:start="25:53" pos:end="25:62"><expr pos:start="25:53" pos:end="25:62"><name pos:start="25:53" pos:end="25:62"><name pos:start="25:53" pos:end="25:54">se</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:62">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <macro pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:17">TAILQ_FOREACH</name><argument_list pos:start="31:18" pos:end="31:46">(<argument pos:start="31:19" pos:end="31:20">se</argument>, <argument pos:start="31:23" pos:end="31:38">&amp;savevm_handlers</argument>, <argument pos:start="31:41" pos:end="31:45">entry</argument>)</argument_list></macro> <block pos:start="31:48" pos:end="69:5">{<block_content pos:start="33:9" pos:end="67:28">

        <decl_stmt pos:start="33:9" pos:end="33:16"><decl pos:start="33:9" pos:end="33:15"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:15">len</name></decl>;</decl_stmt>



	<if_stmt pos:start="37:9" pos:end="39:21"><if pos:start="37:9" pos:end="39:21">if <condition pos:start="37:12" pos:end="37:55">(<expr pos:start="37:13" pos:end="37:54"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:14">se</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:26">save_state</name></name> <operator pos:start="37:28" pos:end="37:29">==</operator> <name pos:start="37:31" pos:end="37:34">NULL</name> <operator pos:start="37:36" pos:end="37:37">&amp;&amp;</operator> <name pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:40">se</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:46">vmsd</name></name> <operator pos:start="37:48" pos:end="37:49">==</operator> <name pos:start="37:51" pos:end="37:54">NULL</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

	    <continue pos:start="39:13" pos:end="39:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:26">/* Section type */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><call pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:21">qemu_put_byte</name><argument_list pos:start="45:22" pos:end="45:46">(<argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">f</name></expr></argument>, <argument pos:start="45:26" pos:end="45:45"><expr pos:start="45:26" pos:end="45:45"><name pos:start="45:26" pos:end="45:45">QEMU_VM_SECTION_FULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:21">qemu_put_be32</name><argument_list pos:start="47:22" pos:end="47:40">(<argument pos:start="47:23" pos:end="47:23"><expr pos:start="47:23" pos:end="47:23"><name pos:start="47:23" pos:end="47:23">f</name></expr></argument>, <argument pos:start="47:26" pos:end="47:39"><expr pos:start="47:26" pos:end="47:39"><name pos:start="47:26" pos:end="47:39"><name pos:start="47:26" pos:end="47:27">se</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:39">section_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="51:9" pos:end="51:23">/* ID string */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:11">len</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:31"><name pos:start="53:15" pos:end="53:20">strlen</name><argument_list pos:start="53:21" pos:end="53:31">(<argument pos:start="53:22" pos:end="53:30"><expr pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:23">se</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:30">idstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><call pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:21">qemu_put_byte</name><argument_list pos:start="55:22" pos:end="55:29">(<argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">f</name></expr></argument>, <argument pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:28">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><call pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:23">qemu_put_buffer</name><argument_list pos:start="57:24" pos:end="57:53">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">f</name></expr></argument>, <argument pos:start="57:28" pos:end="57:47"><expr pos:start="57:28" pos:end="57:47"><operator pos:start="57:28" pos:end="57:28">(</operator><name pos:start="57:29" pos:end="57:35">uint8_t</name> <operator pos:start="57:37" pos:end="57:37">*</operator><operator pos:start="57:38" pos:end="57:38">)</operator><name pos:start="57:39" pos:end="57:47"><name pos:start="57:39" pos:end="57:40">se</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:47">idstr</name></name></expr></argument>, <argument pos:start="57:50" pos:end="57:52"><expr pos:start="57:50" pos:end="57:52"><name pos:start="57:50" pos:end="57:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><call pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:21">qemu_put_be32</name><argument_list pos:start="61:22" pos:end="61:41">(<argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><name pos:start="61:23" pos:end="61:23">f</name></expr></argument>, <argument pos:start="61:26" pos:end="61:40"><expr pos:start="61:26" pos:end="61:40"><name pos:start="61:26" pos:end="61:40"><name pos:start="61:26" pos:end="61:27">se</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:40">instance_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:41"><expr pos:start="63:9" pos:end="63:40"><call pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:21">qemu_put_be32</name><argument_list pos:start="63:22" pos:end="63:40">(<argument pos:start="63:23" pos:end="63:23"><expr pos:start="63:23" pos:end="63:23"><name pos:start="63:23" pos:end="63:23">f</name></expr></argument>, <argument pos:start="63:26" pos:end="63:39"><expr pos:start="63:26" pos:end="63:39"><name pos:start="63:26" pos:end="63:39"><name pos:start="63:26" pos:end="63:27">se</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:39">version_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><call pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:20">vmstate_save</name><argument_list pos:start="67:21" pos:end="67:27">(<argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">f</name></expr></argument>, <argument pos:start="67:25" pos:end="67:26"><expr pos:start="67:25" pos:end="67:26"><name pos:start="67:25" pos:end="67:26">se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="73:5" pos:end="73:34"><expr pos:start="73:5" pos:end="73:33"><call pos:start="73:5" pos:end="73:33"><name pos:start="73:5" pos:end="73:17">qemu_put_byte</name><argument_list pos:start="73:18" pos:end="73:33">(<argument pos:start="73:19" pos:end="73:19"><expr pos:start="73:19" pos:end="73:19"><name pos:start="73:19" pos:end="73:19">f</name></expr></argument>, <argument pos:start="73:22" pos:end="73:32"><expr pos:start="73:22" pos:end="73:32"><name pos:start="73:22" pos:end="73:32">QEMU_VM_EOF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="79:20"><if pos:start="77:5" pos:end="79:20">if <condition pos:start="77:8" pos:end="77:31">(<expr pos:start="77:9" pos:end="77:30"><call pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:27">qemu_file_has_error</name><argument_list pos:start="77:28" pos:end="77:30">(<argument pos:start="77:29" pos:end="77:29"><expr pos:start="77:29" pos:end="77:29"><name pos:start="77:29" pos:end="77:29">f</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:20"><block_content pos:start="79:9" pos:end="79:20">

        <return pos:start="79:9" pos:end="79:20">return <expr pos:start="79:16" pos:end="79:19"><operator pos:start="79:16" pos:end="79:16">-</operator><name pos:start="79:17" pos:end="79:19">EIO</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
