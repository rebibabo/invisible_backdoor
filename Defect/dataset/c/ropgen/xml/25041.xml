<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25041.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">vmstate_register_with_alias_id</name><parameter_list pos:start="1:35" pos:end="9:48">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:46">DeviceState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:68">instance_id</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:65"><decl pos:start="3:36" pos:end="3:65"><type pos:start="3:36" pos:end="3:65"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:59">VMStateDescription</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">vmsd</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:47"><decl pos:start="5:36" pos:end="5:47"><type pos:start="5:36" pos:end="5:47"><name pos:start="5:36" pos:end="5:39">void</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:47">opaque</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:61"><decl pos:start="5:50" pos:end="5:61"><type pos:start="5:50" pos:end="5:61"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:61">alias_id</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:59"><decl pos:start="7:36" pos:end="7:59"><type pos:start="7:36" pos:end="7:59"><name pos:start="7:36" pos:end="7:38">int</name></type> <name pos:start="7:40" pos:end="7:59">required_for_version</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:47"><decl pos:start="9:36" pos:end="9:47"><type pos:start="9:36" pos:end="9:47"><name pos:start="9:36" pos:end="9:40">Error</name> <modifier pos:start="9:42" pos:end="9:42">*</modifier><modifier pos:start="9:43" pos:end="9:43">*</modifier></type><name pos:start="9:44" pos:end="9:47">errp</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="95:1">{<block_content pos:start="13:5" pos:end="93:13">

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">SaveStateEntry</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:22">se</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:70">/* If this triggers, alias support can be dropped for the vmsd. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:79"><expr pos:start="19:5" pos:end="19:78"><call pos:start="19:5" pos:end="19:78"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:78">(<argument pos:start="19:12" pos:end="19:77"><expr pos:start="19:12" pos:end="19:77"><name pos:start="19:12" pos:end="19:19">alias_id</name> <operator pos:start="19:21" pos:end="19:22">==</operator> <operator pos:start="19:24" pos:end="19:24">-</operator><literal type="number" pos:start="19:25" pos:end="19:25">1</literal> <operator pos:start="19:27" pos:end="19:28">||</operator> <name pos:start="19:30" pos:end="19:49">required_for_version</name> <operator pos:start="19:51" pos:end="19:52">&gt;=</operator> <name pos:start="19:54" pos:end="19:77"><name pos:start="19:54" pos:end="19:57">vmsd</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:77">minimum_version_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:6">se</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:34"><name pos:start="23:10" pos:end="23:15">g_new0</name><argument_list pos:start="23:16" pos:end="23:34">(<argument pos:start="23:17" pos:end="23:30"><expr pos:start="23:17" pos:end="23:30"><name pos:start="23:17" pos:end="23:30">SaveStateEntry</name></expr></argument>, <argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:6">se</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:18">version_id</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:37"><name pos:start="25:22" pos:end="25:25">vmsd</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:37">version_id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:6">se</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:18">section_id</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:51"><name pos:start="27:22" pos:end="27:33">savevm_state</name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:51">global_section_id</name></name><operator pos:start="27:52" pos:end="27:53">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:6">se</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:14">opaque</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:23">opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:20"><expr pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:6">se</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:12">vmsd</name></name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:19">vmsd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:6">se</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:16">alias_id</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:27">alias_id</name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="73:5"><if pos:start="37:5" pos:end="73:5">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">dev</name></expr>)</condition> <block pos:start="37:14" pos:end="73:5">{<block_content pos:start="39:9" pos:end="71:9">

        <decl_stmt pos:start="39:9" pos:end="39:42"><decl pos:start="39:9" pos:end="39:41"><type pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:12">char</name> <modifier pos:start="39:14" pos:end="39:14">*</modifier></type><name pos:start="39:15" pos:end="39:16">id</name> <init pos:start="39:18" pos:end="39:41">= <expr pos:start="39:20" pos:end="39:41"><call pos:start="39:20" pos:end="39:41"><name pos:start="39:20" pos:end="39:36">qdev_get_dev_path</name><argument_list pos:start="39:37" pos:end="39:41">(<argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:40">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="41:9" pos:end="71:9"><if pos:start="41:9" pos:end="71:9">if <condition pos:start="41:12" pos:end="41:15">(<expr pos:start="41:13" pos:end="41:14"><name pos:start="41:13" pos:end="41:14">id</name></expr>)</condition> <block pos:start="41:17" pos:end="71:9">{<block_content pos:start="43:13" pos:end="69:29">

            <if_stmt pos:start="43:13" pos:end="56:13"><if pos:start="43:13" pos:end="56:13">if <condition pos:start="43:16" pos:end="45:34">(<expr pos:start="43:17" pos:end="45:33"><call pos:start="43:17" pos:end="43:65"><name pos:start="43:17" pos:end="43:24">snprintf</name><argument_list pos:start="43:25" pos:end="43:65">(<argument pos:start="43:26" pos:end="43:34"><expr pos:start="43:26" pos:end="43:34"><name pos:start="43:26" pos:end="43:34"><name pos:start="43:26" pos:end="43:27">se</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:34">idstr</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:53"><expr pos:start="43:37" pos:end="43:53"><sizeof pos:start="43:37" pos:end="43:53">sizeof<argument_list pos:start="43:43" pos:end="43:53">(<argument pos:start="43:44" pos:end="43:52"><expr pos:start="43:44" pos:end="43:52"><name pos:start="43:44" pos:end="43:52"><name pos:start="43:44" pos:end="43:45">se</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:52">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:56" pos:end="43:60"><expr pos:start="43:56" pos:end="43:60"><literal type="string" pos:start="43:56" pos:end="43:60">"%s/"</literal></expr></argument>, <argument pos:start="43:63" pos:end="43:64"><expr pos:start="43:63" pos:end="43:64"><name pos:start="43:63" pos:end="43:64">id</name></expr></argument>)</argument_list></call> <operator pos:start="43:67" pos:end="43:68">&gt;=</operator>

                <sizeof pos:start="45:17" pos:end="45:33">sizeof<argument_list pos:start="45:23" pos:end="45:33">(<argument pos:start="45:24" pos:end="45:32"><expr pos:start="45:24" pos:end="45:32"><name pos:start="45:24" pos:end="45:32"><name pos:start="45:24" pos:end="45:25">se</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:32">idstr</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="45:36" pos:end="56:13">{<block_content pos:start="47:17" pos:end="54:26">

                <expr_stmt pos:start="47:17" pos:end="47:71"><expr pos:start="47:17" pos:end="47:70"><call pos:start="47:17" pos:end="47:70"><name pos:start="47:17" pos:end="47:26">error_setg</name><argument_list pos:start="47:27" pos:end="47:70">(<argument pos:start="47:28" pos:end="47:31"><expr pos:start="47:28" pos:end="47:31"><name pos:start="47:28" pos:end="47:31">errp</name></expr></argument>, <argument pos:start="47:34" pos:end="47:65"><expr pos:start="47:34" pos:end="47:65"><literal type="string" pos:start="47:34" pos:end="47:65">"Path too long for VMState (%s)"</literal></expr></argument>, <argument pos:start="47:68" pos:end="47:69"><expr pos:start="47:68" pos:end="47:69"><name pos:start="47:68" pos:end="47:69">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <expr_stmt pos:start="50:17" pos:end="50:27"><expr pos:start="50:17" pos:end="50:26"><call pos:start="50:17" pos:end="50:26"><name pos:start="50:17" pos:end="50:22">g_free</name><argument_list pos:start="50:23" pos:end="50:26">(<argument pos:start="50:24" pos:end="50:25"><expr pos:start="50:24" pos:end="50:25"><name pos:start="50:24" pos:end="50:25">se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <return pos:start="54:17" pos:end="54:26">return <expr pos:start="54:24" pos:end="54:25"><operator pos:start="54:24" pos:end="54:24">-</operator><literal type="number" pos:start="54:25" pos:end="54:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>




            <expr_stmt pos:start="61:13" pos:end="61:48"><expr pos:start="61:13" pos:end="61:47"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:14">se</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:22">compat</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:47"><name pos:start="61:26" pos:end="61:31">g_new0</name><argument_list pos:start="61:32" pos:end="61:47">(<argument pos:start="61:33" pos:end="61:43"><expr pos:start="61:33" pos:end="61:43"><name pos:start="61:33" pos:end="61:43">CompatEntry</name></expr></argument>, <argument pos:start="61:46" pos:end="61:46"><expr pos:start="61:46" pos:end="61:46"><literal type="number" pos:start="61:46" pos:end="61:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:78"><expr pos:start="63:13" pos:end="63:77"><call pos:start="63:13" pos:end="63:77"><name pos:start="63:13" pos:end="63:19">pstrcpy</name><argument_list pos:start="63:20" pos:end="63:77">(<argument pos:start="63:21" pos:end="63:37"><expr pos:start="63:21" pos:end="63:37"><name pos:start="63:21" pos:end="63:37"><name pos:start="63:21" pos:end="63:22">se</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:30">compat</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:37">idstr</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:64"><expr pos:start="63:40" pos:end="63:64"><sizeof pos:start="63:40" pos:end="63:64">sizeof<argument_list pos:start="63:46" pos:end="63:64">(<argument pos:start="63:47" pos:end="63:63"><expr pos:start="63:47" pos:end="63:63"><name pos:start="63:47" pos:end="63:63"><name pos:start="63:47" pos:end="63:48">se</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:56">compat</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:63">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="63:67" pos:end="63:76"><expr pos:start="63:67" pos:end="63:76"><name pos:start="63:67" pos:end="63:76"><name pos:start="63:67" pos:end="63:70">vmsd</name><operator pos:start="63:71" pos:end="63:72">-&gt;</operator><name pos:start="63:73" pos:end="63:76">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="67:80"><expr pos:start="65:13" pos:end="67:79"><name pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:14">se</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:22">compat</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:35">instance_id</name></name> <operator pos:start="65:37" pos:end="65:37">=</operator> <ternary pos:start="65:39" pos:end="67:79"><condition pos:start="65:39" pos:end="65:57"><expr pos:start="65:39" pos:end="65:55"><name pos:start="65:39" pos:end="65:49">instance_id</name> <operator pos:start="65:51" pos:end="65:52">==</operator> <operator pos:start="65:54" pos:end="65:54">-</operator><literal type="number" pos:start="65:55" pos:end="65:55">1</literal></expr> ?</condition><then pos:start="67:26" pos:end="67:65">

                         <expr pos:start="67:26" pos:end="67:65"><call pos:start="67:26" pos:end="67:65"><name pos:start="67:26" pos:end="67:53">calculate_compat_instance_id</name><argument_list pos:start="67:54" pos:end="67:65">(<argument pos:start="67:55" pos:end="67:64"><expr pos:start="67:55" pos:end="67:64"><name pos:start="67:55" pos:end="67:64"><name pos:start="67:55" pos:end="67:58">vmsd</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:64">name</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="67:67" pos:end="67:79">: <expr pos:start="67:69" pos:end="67:79"><name pos:start="67:69" pos:end="67:79">instance_id</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:29"><expr pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:23">instance_id</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <operator pos:start="69:27" pos:end="69:27">-</operator><literal type="number" pos:start="69:28" pos:end="69:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:54"><expr pos:start="75:5" pos:end="75:53"><call pos:start="75:5" pos:end="75:53"><name pos:start="75:5" pos:end="75:11">pstrcat</name><argument_list pos:start="75:12" pos:end="75:53">(<argument pos:start="75:13" pos:end="75:21"><expr pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:14">se</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:21">idstr</name></name></expr></argument>, <argument pos:start="75:24" pos:end="75:40"><expr pos:start="75:24" pos:end="75:40"><sizeof pos:start="75:24" pos:end="75:40">sizeof<argument_list pos:start="75:30" pos:end="75:40">(<argument pos:start="75:31" pos:end="75:39"><expr pos:start="75:31" pos:end="75:39"><name pos:start="75:31" pos:end="75:39"><name pos:start="75:31" pos:end="75:32">se</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:39">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="75:43" pos:end="75:52"><expr pos:start="75:43" pos:end="75:52"><name pos:start="75:43" pos:end="75:52"><name pos:start="75:43" pos:end="75:46">vmsd</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:52">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="87:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:26">(<expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:19">instance_id</name> <operator pos:start="79:21" pos:end="79:22">==</operator> <operator pos:start="79:24" pos:end="79:24">-</operator><literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr>)</condition> <block pos:start="79:28" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:63">

        <expr_stmt pos:start="81:9" pos:end="81:63"><expr pos:start="81:9" pos:end="81:62"><name pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:10">se</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:23">instance_id</name></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <call pos:start="81:27" pos:end="81:62"><name pos:start="81:27" pos:end="81:51">calculate_new_instance_id</name><argument_list pos:start="81:52" pos:end="81:62">(<argument pos:start="81:53" pos:end="81:61"><expr pos:start="81:53" pos:end="81:61"><name pos:start="81:53" pos:end="81:61"><name pos:start="81:53" pos:end="81:54">se</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:61">idstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="87:5">else <block pos:start="83:12" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:38">

        <expr_stmt pos:start="85:9" pos:end="85:38"><expr pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:10">se</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:23">instance_id</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:37">instance_id</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:48"><expr pos:start="89:5" pos:end="89:47"><call pos:start="89:5" pos:end="89:47"><name pos:start="89:5" pos:end="89:10">assert</name><argument_list pos:start="89:11" pos:end="89:47">(<argument pos:start="89:12" pos:end="89:46"><expr pos:start="89:12" pos:end="89:46"><operator pos:start="89:12" pos:end="89:12">!</operator><name pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:14">se</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:22">compat</name></name> <operator pos:start="89:24" pos:end="89:25">||</operator> <name pos:start="89:27" pos:end="89:41"><name pos:start="89:27" pos:end="89:28">se</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:41">instance_id</name></name> <operator pos:start="89:43" pos:end="89:44">==</operator> <literal type="number" pos:start="89:46" pos:end="89:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:36"><expr pos:start="91:5" pos:end="91:35"><call pos:start="91:5" pos:end="91:35"><name pos:start="91:5" pos:end="91:31">savevm_state_handler_insert</name><argument_list pos:start="91:32" pos:end="91:35">(<argument pos:start="91:33" pos:end="91:34"><expr pos:start="91:33" pos:end="91:34"><name pos:start="91:33" pos:end="91:34">se</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
