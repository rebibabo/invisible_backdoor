<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2465.c" pos:tabs="8"><function pos:start="1:1" pos:end="347:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">open_input_file</name><parameter_list pos:start="1:27" pos:end="1:67">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:41">OptionsContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">o</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:66">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="347:1">{<block_content pos:start="5:5" pos:end="345:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">InputFile</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">ic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">AVInputFormat</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:31">file_iformat</name> <init pos:start="9:33" pos:end="9:38">= <expr pos:start="9:35" pos:end="9:38"><name pos:start="9:35" pos:end="9:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">err</name></decl>, <decl pos:start="11:14" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:19">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:21">timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:15">buf</name><index pos:start="15:16" pos:end="15:20">[<expr pos:start="15:17" pos:end="15:19"><literal type="number" pos:start="15:17" pos:end="15:19">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:16">AVDictionary</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier><modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:23">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:36"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">AVDictionary</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:29">unused_opts</name> <init pos:start="19:31" pos:end="19:36">= <expr pos:start="19:33" pos:end="19:36"><name pos:start="19:33" pos:end="19:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:31"><type pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:21">AVDictionaryEntry</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:24">e</name> <init pos:start="21:26" pos:end="21:31">= <expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:24"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:23">orig_nb_streams</name></decl>;</decl_stmt>                     <comment type="line" pos:start="23:46" pos:end="23:98">// number of streams before avformat_find_stream_info</comment>



    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:9">o</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">format</name></name></expr>)</condition> <block pos:start="27:20" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:9">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:62">(<expr pos:start="29:13" pos:end="29:61"><operator pos:start="29:13" pos:end="29:13">!</operator><operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:26">file_iformat</name> <operator pos:start="29:28" pos:end="29:28">=</operator> <call pos:start="29:30" pos:end="29:60"><name pos:start="29:30" pos:end="29:49">av_find_input_format</name><argument_list pos:start="29:50" pos:end="29:60">(<argument pos:start="29:51" pos:end="29:59"><expr pos:start="29:51" pos:end="29:59"><name pos:start="29:51" pos:end="29:59"><name pos:start="29:51" pos:end="29:51">o</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:59">format</name></name></expr></argument>)</argument_list></call><operator pos:start="29:61" pos:end="29:61">)</operator></expr>)</condition> <block pos:start="29:64" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:28">

            <expr_stmt pos:start="31:13" pos:end="31:82"><expr pos:start="31:13" pos:end="31:81"><call pos:start="31:13" pos:end="31:81"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:81">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">NULL</name></expr></argument>, <argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="31:40" pos:end="31:69"><expr pos:start="31:40" pos:end="31:69"><literal type="string" pos:start="31:40" pos:end="31:69">"Unknown input format: '%s'\n"</literal></expr></argument>, <argument pos:start="31:72" pos:end="31:80"><expr pos:start="31:72" pos:end="31:80"><name pos:start="31:72" pos:end="31:80"><name pos:start="31:72" pos:end="31:72">o</name><operator pos:start="31:73" pos:end="31:74">-&gt;</operator><name pos:start="31:75" pos:end="31:80">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><call pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:24">exit_program</name><argument_list pos:start="33:25" pos:end="33:27">(<argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:27"><if pos:start="41:5" pos:end="43:27">if <condition pos:start="41:8" pos:end="41:31">(<expr pos:start="41:9" pos:end="41:30"><operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:30"><name pos:start="41:10" pos:end="41:15">strcmp</name><argument_list pos:start="41:16" pos:end="41:30">(<argument pos:start="41:17" pos:end="41:24"><expr pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:24">filename</name></expr></argument>, <argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><literal type="string" pos:start="41:27" pos:end="41:29">"-"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:27"><block_content pos:start="43:9" pos:end="43:27">

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:16">filename</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <literal type="string" pos:start="43:20" pos:end="43:26">"pipe:"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:52"><expr pos:start="47:5" pos:end="49:51"><name pos:start="47:5" pos:end="47:15">using_stdin</name> <operator pos:start="47:17" pos:end="47:18">|=</operator> <operator pos:start="47:20" pos:end="47:20">!</operator><call pos:start="47:21" pos:end="47:49"><name pos:start="47:21" pos:end="47:27">strncmp</name><argument_list pos:start="47:28" pos:end="47:49">(<argument pos:start="47:29" pos:end="47:36"><expr pos:start="47:29" pos:end="47:36"><name pos:start="47:29" pos:end="47:36">filename</name></expr></argument>, <argument pos:start="47:39" pos:end="47:45"><expr pos:start="47:39" pos:end="47:45"><literal type="string" pos:start="47:39" pos:end="47:45">"pipe:"</literal></expr></argument>, <argument pos:start="47:48" pos:end="47:48"><expr pos:start="47:48" pos:end="47:48"><literal type="number" pos:start="47:48" pos:end="47:48">5</literal></expr></argument>)</argument_list></call> <operator pos:start="47:51" pos:end="47:52">||</operator>

                    <operator pos:start="49:21" pos:end="49:21">!</operator><call pos:start="49:22" pos:end="49:51"><name pos:start="49:22" pos:end="49:27">strcmp</name><argument_list pos:start="49:28" pos:end="49:51">(<argument pos:start="49:29" pos:end="49:36"><expr pos:start="49:29" pos:end="49:36"><name pos:start="49:29" pos:end="49:36">filename</name></expr></argument>, <argument pos:start="49:39" pos:end="49:50"><expr pos:start="49:39" pos:end="49:50"><literal type="string" pos:start="49:39" pos:end="49:50">"/dev/stdin"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:50">/* get default parameters from command line */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:34"><expr pos:start="55:5" pos:end="55:33"><name pos:start="55:5" pos:end="55:6">ic</name> <operator pos:start="55:8" pos:end="55:8">=</operator> <call pos:start="55:10" pos:end="55:33"><name pos:start="55:10" pos:end="55:31">avformat_alloc_context</name><argument_list pos:start="55:32" pos:end="55:33">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:12">(<expr pos:start="57:9" pos:end="57:11"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:11">ic</name></expr>)</condition> <block pos:start="57:14" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:24">

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><call pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:19">print_error</name><argument_list pos:start="59:20" pos:end="59:46">(<argument pos:start="59:21" pos:end="59:28"><expr pos:start="59:21" pos:end="59:28"><name pos:start="59:21" pos:end="59:28">filename</name></expr></argument>, <argument pos:start="59:31" pos:end="59:45"><expr pos:start="59:31" pos:end="59:45"><call pos:start="59:31" pos:end="59:45"><name pos:start="59:31" pos:end="59:37">AVERROR</name><argument_list pos:start="59:38" pos:end="59:45">(<argument pos:start="59:39" pos:end="59:44"><expr pos:start="59:39" pos:end="59:44"><name pos:start="59:39" pos:end="59:44">ENOMEM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:24"><expr pos:start="61:9" pos:end="61:23"><call pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:20">exit_program</name><argument_list pos:start="61:21" pos:end="61:23">(<argument pos:start="61:22" pos:end="61:22"><expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:32">(<expr pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:9">o</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:31">nb_audio_sample_rate</name></name></expr>)</condition> <block pos:start="65:34" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:63">

        <expr_stmt pos:start="67:9" pos:end="67:96"><expr pos:start="67:9" pos:end="67:95"><call pos:start="67:9" pos:end="67:95"><name pos:start="67:9" pos:end="67:16">snprintf</name><argument_list pos:start="67:17" pos:end="67:95">(<argument pos:start="67:18" pos:end="67:20"><expr pos:start="67:18" pos:end="67:20"><name pos:start="67:18" pos:end="67:20">buf</name></expr></argument>, <argument pos:start="67:23" pos:end="67:33"><expr pos:start="67:23" pos:end="67:33"><sizeof pos:start="67:23" pos:end="67:33">sizeof<argument_list pos:start="67:29" pos:end="67:33">(<argument pos:start="67:30" pos:end="67:32"><expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:36" pos:end="67:39"><expr pos:start="67:36" pos:end="67:39"><literal type="string" pos:start="67:36" pos:end="67:39">"%d"</literal></expr></argument>, <argument pos:start="67:42" pos:end="67:94"><expr pos:start="67:42" pos:end="67:94"><name pos:start="67:42" pos:end="67:90"><name pos:start="67:42" pos:end="67:42">o</name><operator pos:start="67:43" pos:end="67:44">-&gt;</operator><name pos:start="67:45" pos:end="67:61">audio_sample_rate</name><index pos:start="67:62" pos:end="67:90">[<expr pos:start="67:63" pos:end="67:89"><name pos:start="67:63" pos:end="67:85"><name pos:start="67:63" pos:end="67:63">o</name><operator pos:start="67:64" pos:end="67:65">-&gt;</operator><name pos:start="67:66" pos:end="67:85">nb_audio_sample_rate</name></name> <operator pos:start="67:87" pos:end="67:87">-</operator> <literal type="number" pos:start="67:89" pos:end="67:89">1</literal></expr>]</index></name><operator pos:start="67:91" pos:end="67:91">.</operator><name pos:start="67:92" pos:end="67:94"><name pos:start="67:92" pos:end="67:92">u</name><operator pos:start="67:93" pos:end="67:93">.</operator><name pos:start="67:94" pos:end="67:94">i</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:63"><expr pos:start="69:9" pos:end="69:62"><call pos:start="69:9" pos:end="69:62"><name pos:start="69:9" pos:end="69:19">av_dict_set</name><argument_list pos:start="69:20" pos:end="69:62">(<argument pos:start="69:21" pos:end="69:38"><expr pos:start="69:21" pos:end="69:38"><operator pos:start="69:21" pos:end="69:21">&amp;</operator><name pos:start="69:22" pos:end="69:38"><name pos:start="69:22" pos:end="69:22">o</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:25">g</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:38">format_opts</name></name></expr></argument>, <argument pos:start="69:41" pos:end="69:53"><expr pos:start="69:41" pos:end="69:53"><literal type="string" pos:start="69:41" pos:end="69:53">"sample_rate"</literal></expr></argument>, <argument pos:start="69:56" pos:end="69:58"><expr pos:start="69:56" pos:end="69:58"><name pos:start="69:56" pos:end="69:58">buf</name></expr></argument>, <argument pos:start="69:61" pos:end="69:61"><expr pos:start="69:61" pos:end="69:61"><literal type="number" pos:start="69:61" pos:end="69:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="95:5"><if pos:start="73:5" pos:end="95:5">if <condition pos:start="73:8" pos:end="73:29">(<expr pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:9">o</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:28">nb_audio_channels</name></name></expr>)</condition> <block pos:start="73:31" pos:end="95:5">{<block_content pos:start="81:9" pos:end="93:9">

        <comment type="block" pos:start="75:9" pos:end="79:74">/* because we set audio_channels based on both the "ac" and

         * "channel_layout" options, we need to check that the specified

         * demuxer actually has the "channels" option before setting it */</comment>

        <if_stmt pos:start="81:9" pos:end="93:9"><if pos:start="81:9" pos:end="93:9">if <condition pos:start="81:12" pos:end="85:48">(<expr pos:start="81:13" pos:end="85:47"><name pos:start="81:13" pos:end="81:24">file_iformat</name> <operator pos:start="81:26" pos:end="81:27">&amp;&amp;</operator> <name pos:start="81:29" pos:end="81:52"><name pos:start="81:29" pos:end="81:40">file_iformat</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:52">priv_class</name></name> <operator pos:start="81:54" pos:end="81:55">&amp;&amp;</operator>

            <call pos:start="83:13" pos:end="85:47"><name pos:start="83:13" pos:end="83:23">av_opt_find</name><argument_list pos:start="83:24" pos:end="85:47">(<argument pos:start="83:25" pos:end="83:49"><expr pos:start="83:25" pos:end="83:49"><operator pos:start="83:25" pos:end="83:25">&amp;</operator><name pos:start="83:26" pos:end="83:49"><name pos:start="83:26" pos:end="83:37">file_iformat</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:49">priv_class</name></name></expr></argument>, <argument pos:start="83:52" pos:end="83:61"><expr pos:start="83:52" pos:end="83:61"><literal type="string" pos:start="83:52" pos:end="83:61">"channels"</literal></expr></argument>, <argument pos:start="83:64" pos:end="83:67"><expr pos:start="83:64" pos:end="83:67"><name pos:start="83:64" pos:end="83:67">NULL</name></expr></argument>, <argument pos:start="83:70" pos:end="83:70"><expr pos:start="83:70" pos:end="83:70"><literal type="number" pos:start="83:70" pos:end="83:70">0</literal></expr></argument>,

                        <argument pos:start="85:25" pos:end="85:46"><expr pos:start="85:25" pos:end="85:46"><name pos:start="85:25" pos:end="85:46">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:50" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:64">

            <expr_stmt pos:start="87:13" pos:end="89:70"><expr pos:start="87:13" pos:end="89:69"><call pos:start="87:13" pos:end="89:69"><name pos:start="87:13" pos:end="87:20">snprintf</name><argument_list pos:start="87:21" pos:end="89:69">(<argument pos:start="87:22" pos:end="87:24"><expr pos:start="87:22" pos:end="87:24"><name pos:start="87:22" pos:end="87:24">buf</name></expr></argument>, <argument pos:start="87:27" pos:end="87:37"><expr pos:start="87:27" pos:end="87:37"><sizeof pos:start="87:27" pos:end="87:37">sizeof<argument_list pos:start="87:33" pos:end="87:37">(<argument pos:start="87:34" pos:end="87:36"><expr pos:start="87:34" pos:end="87:36"><name pos:start="87:34" pos:end="87:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="87:40" pos:end="87:43"><expr pos:start="87:40" pos:end="87:43"><literal type="string" pos:start="87:40" pos:end="87:43">"%d"</literal></expr></argument>,

                     <argument pos:start="89:22" pos:end="89:68"><expr pos:start="89:22" pos:end="89:68"><name pos:start="89:22" pos:end="89:64"><name pos:start="89:22" pos:end="89:22">o</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:38">audio_channels</name><index pos:start="89:39" pos:end="89:64">[<expr pos:start="89:40" pos:end="89:63"><name pos:start="89:40" pos:end="89:59"><name pos:start="89:40" pos:end="89:40">o</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:59">nb_audio_channels</name></name> <operator pos:start="89:61" pos:end="89:61">-</operator> <literal type="number" pos:start="89:63" pos:end="89:63">1</literal></expr>]</index></name><operator pos:start="89:65" pos:end="89:65">.</operator><name pos:start="89:66" pos:end="89:68"><name pos:start="89:66" pos:end="89:66">u</name><operator pos:start="89:67" pos:end="89:67">.</operator><name pos:start="89:68" pos:end="89:68">i</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:64"><expr pos:start="91:13" pos:end="91:63"><call pos:start="91:13" pos:end="91:63"><name pos:start="91:13" pos:end="91:23">av_dict_set</name><argument_list pos:start="91:24" pos:end="91:63">(<argument pos:start="91:25" pos:end="91:42"><expr pos:start="91:25" pos:end="91:42"><operator pos:start="91:25" pos:end="91:25">&amp;</operator><name pos:start="91:26" pos:end="91:42"><name pos:start="91:26" pos:end="91:26">o</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:29">g</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:42">format_opts</name></name></expr></argument>, <argument pos:start="91:45" pos:end="91:54"><expr pos:start="91:45" pos:end="91:54"><literal type="string" pos:start="91:45" pos:end="91:54">"channels"</literal></expr></argument>, <argument pos:start="91:57" pos:end="91:59"><expr pos:start="91:57" pos:end="91:59"><name pos:start="91:57" pos:end="91:59">buf</name></expr></argument>, <argument pos:start="91:62" pos:end="91:62"><expr pos:start="91:62" pos:end="91:62"><literal type="number" pos:start="91:62" pos:end="91:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="115:5"><if pos:start="97:5" pos:end="115:5">if <condition pos:start="97:8" pos:end="97:26">(<expr pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:9">o</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:25">nb_frame_rates</name></name></expr>)</condition> <block pos:start="97:28" pos:end="115:5">{<block_content pos:start="103:9" pos:end="113:9">

        <comment type="block" pos:start="99:9" pos:end="101:60">/* set the format-level framerate option;

         * this is important for video grabbers, e.g. x11 */</comment>

        <if_stmt pos:start="103:9" pos:end="113:9"><if pos:start="103:9" pos:end="113:9">if <condition pos:start="103:12" pos:end="107:48">(<expr pos:start="103:13" pos:end="107:47"><name pos:start="103:13" pos:end="103:24">file_iformat</name> <operator pos:start="103:26" pos:end="103:27">&amp;&amp;</operator> <name pos:start="103:29" pos:end="103:52"><name pos:start="103:29" pos:end="103:40">file_iformat</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:52">priv_class</name></name> <operator pos:start="103:54" pos:end="103:55">&amp;&amp;</operator>

            <call pos:start="105:13" pos:end="107:47"><name pos:start="105:13" pos:end="105:23">av_opt_find</name><argument_list pos:start="105:24" pos:end="107:47">(<argument pos:start="105:25" pos:end="105:49"><expr pos:start="105:25" pos:end="105:49"><operator pos:start="105:25" pos:end="105:25">&amp;</operator><name pos:start="105:26" pos:end="105:49"><name pos:start="105:26" pos:end="105:37">file_iformat</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:49">priv_class</name></name></expr></argument>, <argument pos:start="105:52" pos:end="105:62"><expr pos:start="105:52" pos:end="105:62"><literal type="string" pos:start="105:52" pos:end="105:62">"framerate"</literal></expr></argument>, <argument pos:start="105:65" pos:end="105:68"><expr pos:start="105:65" pos:end="105:68"><name pos:start="105:65" pos:end="105:68">NULL</name></expr></argument>, <argument pos:start="105:71" pos:end="105:71"><expr pos:start="105:71" pos:end="105:71"><literal type="number" pos:start="105:71" pos:end="105:71">0</literal></expr></argument>,

                        <argument pos:start="107:25" pos:end="107:46"><expr pos:start="107:25" pos:end="107:46"><name pos:start="107:25" pos:end="107:46">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:50" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:72">

            <expr_stmt pos:start="109:13" pos:end="111:72"><expr pos:start="109:13" pos:end="111:71"><call pos:start="109:13" pos:end="111:71"><name pos:start="109:13" pos:end="109:23">av_dict_set</name><argument_list pos:start="109:24" pos:end="111:71">(<argument pos:start="109:25" pos:end="109:42"><expr pos:start="109:25" pos:end="109:42"><operator pos:start="109:25" pos:end="109:25">&amp;</operator><name pos:start="109:26" pos:end="109:42"><name pos:start="109:26" pos:end="109:26">o</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:29">g</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:42">format_opts</name></name></expr></argument>, <argument pos:start="109:45" pos:end="109:55"><expr pos:start="109:45" pos:end="109:55"><literal type="string" pos:start="109:45" pos:end="109:55">"framerate"</literal></expr></argument>,

                        <argument pos:start="111:25" pos:end="111:67"><expr pos:start="111:25" pos:end="111:67"><name pos:start="111:25" pos:end="111:61"><name pos:start="111:25" pos:end="111:25">o</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:38">frame_rates</name><index pos:start="111:39" pos:end="111:61">[<expr pos:start="111:40" pos:end="111:60"><name pos:start="111:40" pos:end="111:56"><name pos:start="111:40" pos:end="111:40">o</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:56">nb_frame_rates</name></name> <operator pos:start="111:58" pos:end="111:58">-</operator> <literal type="number" pos:start="111:60" pos:end="111:60">1</literal></expr>]</index></name><operator pos:start="111:62" pos:end="111:62">.</operator><name pos:start="111:63" pos:end="111:67"><name pos:start="111:63" pos:end="111:63">u</name><operator pos:start="111:64" pos:end="111:64">.</operator><name pos:start="111:65" pos:end="111:67">str</name></name></expr></argument>, <argument pos:start="111:70" pos:end="111:70"><expr pos:start="111:70" pos:end="111:70"><literal type="number" pos:start="111:70" pos:end="111:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="121:5"><if pos:start="117:5" pos:end="121:5">if <condition pos:start="117:8" pos:end="117:26">(<expr pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:9">o</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:25">nb_frame_sizes</name></name></expr>)</condition> <block pos:start="117:28" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:102">

        <expr_stmt pos:start="119:9" pos:end="119:102"><expr pos:start="119:9" pos:end="119:101"><call pos:start="119:9" pos:end="119:101"><name pos:start="119:9" pos:end="119:19">av_dict_set</name><argument_list pos:start="119:20" pos:end="119:101">(<argument pos:start="119:21" pos:end="119:38"><expr pos:start="119:21" pos:end="119:38"><operator pos:start="119:21" pos:end="119:21">&amp;</operator><name pos:start="119:22" pos:end="119:38"><name pos:start="119:22" pos:end="119:22">o</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:25">g</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:38">format_opts</name></name></expr></argument>, <argument pos:start="119:41" pos:end="119:52"><expr pos:start="119:41" pos:end="119:52"><literal type="string" pos:start="119:41" pos:end="119:52">"video_size"</literal></expr></argument>, <argument pos:start="119:55" pos:end="119:97"><expr pos:start="119:55" pos:end="119:97"><name pos:start="119:55" pos:end="119:91"><name pos:start="119:55" pos:end="119:55">o</name><operator pos:start="119:56" pos:end="119:57">-&gt;</operator><name pos:start="119:58" pos:end="119:68">frame_sizes</name><index pos:start="119:69" pos:end="119:91">[<expr pos:start="119:70" pos:end="119:90"><name pos:start="119:70" pos:end="119:86"><name pos:start="119:70" pos:end="119:70">o</name><operator pos:start="119:71" pos:end="119:72">-&gt;</operator><name pos:start="119:73" pos:end="119:86">nb_frame_sizes</name></name> <operator pos:start="119:88" pos:end="119:88">-</operator> <literal type="number" pos:start="119:90" pos:end="119:90">1</literal></expr>]</index></name><operator pos:start="119:92" pos:end="119:92">.</operator><name pos:start="119:93" pos:end="119:97"><name pos:start="119:93" pos:end="119:93">u</name><operator pos:start="119:94" pos:end="119:94">.</operator><name pos:start="119:95" pos:end="119:97">str</name></name></expr></argument>, <argument pos:start="119:100" pos:end="119:100"><expr pos:start="119:100" pos:end="119:100"><literal type="number" pos:start="119:100" pos:end="119:100">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="125:110"><if pos:start="123:5" pos:end="125:110">if <condition pos:start="123:8" pos:end="123:29">(<expr pos:start="123:9" pos:end="123:28"><name pos:start="123:9" pos:end="123:28"><name pos:start="123:9" pos:end="123:9">o</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:28">nb_frame_pix_fmts</name></name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:110"><block_content pos:start="125:9" pos:end="125:110">

        <expr_stmt pos:start="125:9" pos:end="125:110"><expr pos:start="125:9" pos:end="125:109"><call pos:start="125:9" pos:end="125:109"><name pos:start="125:9" pos:end="125:19">av_dict_set</name><argument_list pos:start="125:20" pos:end="125:109">(<argument pos:start="125:21" pos:end="125:38"><expr pos:start="125:21" pos:end="125:38"><operator pos:start="125:21" pos:end="125:21">&amp;</operator><name pos:start="125:22" pos:end="125:38"><name pos:start="125:22" pos:end="125:22">o</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:25">g</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:38">format_opts</name></name></expr></argument>, <argument pos:start="125:41" pos:end="125:54"><expr pos:start="125:41" pos:end="125:54"><literal type="string" pos:start="125:41" pos:end="125:54">"pixel_format"</literal></expr></argument>, <argument pos:start="125:57" pos:end="125:105"><expr pos:start="125:57" pos:end="125:105"><name pos:start="125:57" pos:end="125:99"><name pos:start="125:57" pos:end="125:57">o</name><operator pos:start="125:58" pos:end="125:59">-&gt;</operator><name pos:start="125:60" pos:end="125:73">frame_pix_fmts</name><index pos:start="125:74" pos:end="125:99">[<expr pos:start="125:75" pos:end="125:98"><name pos:start="125:75" pos:end="125:94"><name pos:start="125:75" pos:end="125:75">o</name><operator pos:start="125:76" pos:end="125:77">-&gt;</operator><name pos:start="125:78" pos:end="125:94">nb_frame_pix_fmts</name></name> <operator pos:start="125:96" pos:end="125:96">-</operator> <literal type="number" pos:start="125:98" pos:end="125:98">1</literal></expr>]</index></name><operator pos:start="125:100" pos:end="125:100">.</operator><name pos:start="125:101" pos:end="125:105"><name pos:start="125:101" pos:end="125:101">u</name><operator pos:start="125:102" pos:end="125:102">.</operator><name pos:start="125:103" pos:end="125:105">str</name></name></expr></argument>, <argument pos:start="125:108" pos:end="125:108"><expr pos:start="125:108" pos:end="125:108"><literal type="number" pos:start="125:108" pos:end="125:108">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:37"><expr pos:start="129:5" pos:end="129:36"><name pos:start="129:5" pos:end="129:13"><name pos:start="129:5" pos:end="129:6">ic</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:13">flags</name></name> <operator pos:start="129:15" pos:end="129:16">|=</operator> <name pos:start="129:18" pos:end="129:36">AVFMT_FLAG_NONBLOCK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:36"><expr pos:start="131:5" pos:end="131:35"><name pos:start="131:5" pos:end="131:26"><name pos:start="131:5" pos:end="131:6">ic</name><operator pos:start="131:7" pos:end="131:8">-&gt;</operator><name pos:start="131:9" pos:end="131:26">interrupt_callback</name></name> <operator pos:start="131:28" pos:end="131:28">=</operator> <name pos:start="131:30" pos:end="131:35">int_cb</name></expr>;</expr_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:57">/* open the input file with generic libav function */</comment>

    <expr_stmt pos:start="137:5" pos:end="137:79"><expr pos:start="137:5" pos:end="137:78"><name pos:start="137:5" pos:end="137:7">err</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <call pos:start="137:11" pos:end="137:78"><name pos:start="137:11" pos:end="137:29">avformat_open_input</name><argument_list pos:start="137:30" pos:end="137:78">(<argument pos:start="137:31" pos:end="137:33"><expr pos:start="137:31" pos:end="137:33"><operator pos:start="137:31" pos:end="137:31">&amp;</operator><name pos:start="137:32" pos:end="137:33">ic</name></expr></argument>, <argument pos:start="137:36" pos:end="137:43"><expr pos:start="137:36" pos:end="137:43"><name pos:start="137:36" pos:end="137:43">filename</name></expr></argument>, <argument pos:start="137:46" pos:end="137:57"><expr pos:start="137:46" pos:end="137:57"><name pos:start="137:46" pos:end="137:57">file_iformat</name></expr></argument>, <argument pos:start="137:60" pos:end="137:77"><expr pos:start="137:60" pos:end="137:77"><operator pos:start="137:60" pos:end="137:60">&amp;</operator><name pos:start="137:61" pos:end="137:77"><name pos:start="137:61" pos:end="137:61">o</name><operator pos:start="137:62" pos:end="137:63">-&gt;</operator><name pos:start="137:64" pos:end="137:64">g</name><operator pos:start="137:65" pos:end="137:66">-&gt;</operator><name pos:start="137:67" pos:end="137:77">format_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:16">(<expr pos:start="139:9" pos:end="139:15"><name pos:start="139:9" pos:end="139:11">err</name> <operator pos:start="139:13" pos:end="139:13">&lt;</operator> <literal type="number" pos:start="139:15" pos:end="139:15">0</literal></expr>)</condition> <block pos:start="139:18" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:24">

        <expr_stmt pos:start="141:9" pos:end="141:35"><expr pos:start="141:9" pos:end="141:34"><call pos:start="141:9" pos:end="141:34"><name pos:start="141:9" pos:end="141:19">print_error</name><argument_list pos:start="141:20" pos:end="141:34">(<argument pos:start="141:21" pos:end="141:28"><expr pos:start="141:21" pos:end="141:28"><name pos:start="141:21" pos:end="141:28">filename</name></expr></argument>, <argument pos:start="141:31" pos:end="141:33"><expr pos:start="141:31" pos:end="141:33"><name pos:start="141:31" pos:end="141:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:24"><expr pos:start="143:9" pos:end="143:23"><call pos:start="143:9" pos:end="143:23"><name pos:start="143:9" pos:end="143:20">exit_program</name><argument_list pos:start="143:21" pos:end="143:23">(<argument pos:start="143:22" pos:end="143:22"><expr pos:start="143:22" pos:end="143:22"><literal type="number" pos:start="143:22" pos:end="143:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:40"><expr pos:start="147:5" pos:end="147:39"><call pos:start="147:5" pos:end="147:39"><name pos:start="147:5" pos:end="147:20">assert_avoptions</name><argument_list pos:start="147:21" pos:end="147:39">(<argument pos:start="147:22" pos:end="147:38"><expr pos:start="147:22" pos:end="147:38"><name pos:start="147:22" pos:end="147:38"><name pos:start="147:22" pos:end="147:22">o</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:25">g</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:38">format_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="151:5" pos:end="151:32">/* apply forced codec ids */</comment>

    <for pos:start="153:5" pos:end="155:46">for <control pos:start="153:9" pos:end="153:40">(<init pos:start="153:10" pos:end="153:15"><expr pos:start="153:10" pos:end="153:14"><name pos:start="153:10" pos:end="153:10">i</name> <operator pos:start="153:12" pos:end="153:12">=</operator> <literal type="number" pos:start="153:14" pos:end="153:14">0</literal></expr>;</init> <condition pos:start="153:17" pos:end="153:35"><expr pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:17">i</name> <operator pos:start="153:19" pos:end="153:19">&lt;</operator> <name pos:start="153:21" pos:end="153:34"><name pos:start="153:21" pos:end="153:22">ic</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:34">nb_streams</name></name></expr>;</condition> <incr pos:start="153:37" pos:end="153:39"><expr pos:start="153:37" pos:end="153:39"><name pos:start="153:37" pos:end="153:37">i</name><operator pos:start="153:38" pos:end="153:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:9" pos:end="155:46"><block_content pos:start="155:9" pos:end="155:46">

        <expr_stmt pos:start="155:9" pos:end="155:46"><expr pos:start="155:9" pos:end="155:45"><call pos:start="155:9" pos:end="155:45"><name pos:start="155:9" pos:end="155:22">choose_decoder</name><argument_list pos:start="155:23" pos:end="155:45">(<argument pos:start="155:24" pos:end="155:24"><expr pos:start="155:24" pos:end="155:24"><name pos:start="155:24" pos:end="155:24">o</name></expr></argument>, <argument pos:start="155:27" pos:end="155:28"><expr pos:start="155:27" pos:end="155:28"><name pos:start="155:27" pos:end="155:28">ic</name></expr></argument>, <argument pos:start="155:31" pos:end="155:44"><expr pos:start="155:31" pos:end="155:44"><name pos:start="155:31" pos:end="155:44"><name pos:start="155:31" pos:end="155:32">ic</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:41">streams</name><index pos:start="155:42" pos:end="155:44">[<expr pos:start="155:43" pos:end="155:43"><name pos:start="155:43" pos:end="155:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="159:5" pos:end="159:66">/* Set AVCodecContext options for avformat_find_stream_info */</comment>

    <expr_stmt pos:start="161:5" pos:end="161:61"><expr pos:start="161:5" pos:end="161:60"><name pos:start="161:5" pos:end="161:8">opts</name> <operator pos:start="161:10" pos:end="161:10">=</operator> <call pos:start="161:12" pos:end="161:60"><name pos:start="161:12" pos:end="161:38">setup_find_stream_info_opts</name><argument_list pos:start="161:39" pos:end="161:60">(<argument pos:start="161:40" pos:end="161:41"><expr pos:start="161:40" pos:end="161:41"><name pos:start="161:40" pos:end="161:41">ic</name></expr></argument>, <argument pos:start="161:44" pos:end="161:59"><expr pos:start="161:44" pos:end="161:59"><name pos:start="161:44" pos:end="161:59"><name pos:start="161:44" pos:end="161:44">o</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:47">g</name><operator pos:start="161:48" pos:end="161:49">-&gt;</operator><name pos:start="161:50" pos:end="161:59">codec_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:37"><expr pos:start="163:5" pos:end="163:36"><name pos:start="163:5" pos:end="163:19">orig_nb_streams</name> <operator pos:start="163:21" pos:end="163:21">=</operator> <name pos:start="163:23" pos:end="163:36"><name pos:start="163:23" pos:end="163:24">ic</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:36">nb_streams</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="167:5" pos:end="169:65">/* If not enough info to get the stream parameters, we decode the

       first frames to get it. (used in mpeg case for example) */</comment>

    <expr_stmt pos:start="171:5" pos:end="171:46"><expr pos:start="171:5" pos:end="171:45"><name pos:start="171:5" pos:end="171:7">ret</name> <operator pos:start="171:9" pos:end="171:9">=</operator> <call pos:start="171:11" pos:end="171:45"><name pos:start="171:11" pos:end="171:35">avformat_find_stream_info</name><argument_list pos:start="171:36" pos:end="171:45">(<argument pos:start="171:37" pos:end="171:38"><expr pos:start="171:37" pos:end="171:38"><name pos:start="171:37" pos:end="171:38">ic</name></expr></argument>, <argument pos:start="171:41" pos:end="171:44"><expr pos:start="171:41" pos:end="171:44"><name pos:start="171:41" pos:end="171:44">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="181:5"><if pos:start="173:5" pos:end="181:5">if <condition pos:start="173:8" pos:end="173:16">(<expr pos:start="173:9" pos:end="173:15"><name pos:start="173:9" pos:end="173:11">ret</name> <operator pos:start="173:13" pos:end="173:13">&lt;</operator> <literal type="number" pos:start="173:15" pos:end="173:15">0</literal></expr>)</condition> <block pos:start="173:18" pos:end="181:5">{<block_content pos:start="175:9" pos:end="179:24">

        <expr_stmt pos:start="175:9" pos:end="175:86"><expr pos:start="175:9" pos:end="175:85"><call pos:start="175:9" pos:end="175:85"><name pos:start="175:9" pos:end="175:14">av_log</name><argument_list pos:start="175:15" pos:end="175:85">(<argument pos:start="175:16" pos:end="175:19"><expr pos:start="175:16" pos:end="175:19"><name pos:start="175:16" pos:end="175:19">NULL</name></expr></argument>, <argument pos:start="175:22" pos:end="175:33"><expr pos:start="175:22" pos:end="175:33"><name pos:start="175:22" pos:end="175:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="175:36" pos:end="175:74"><expr pos:start="175:36" pos:end="175:74"><literal type="string" pos:start="175:36" pos:end="175:74">"%s: could not find codec parameters\n"</literal></expr></argument>, <argument pos:start="175:77" pos:end="175:84"><expr pos:start="175:77" pos:end="175:84"><name pos:start="175:77" pos:end="175:84">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:34"><expr pos:start="177:9" pos:end="177:33"><call pos:start="177:9" pos:end="177:33"><name pos:start="177:9" pos:end="177:28">avformat_close_input</name><argument_list pos:start="177:29" pos:end="177:33">(<argument pos:start="177:30" pos:end="177:32"><expr pos:start="177:30" pos:end="177:32"><operator pos:start="177:30" pos:end="177:30">&amp;</operator><name pos:start="177:31" pos:end="177:32">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:24"><expr pos:start="179:9" pos:end="179:23"><call pos:start="179:9" pos:end="179:23"><name pos:start="179:9" pos:end="179:20">exit_program</name><argument_list pos:start="179:21" pos:end="179:23">(<argument pos:start="179:22" pos:end="179:22"><expr pos:start="179:22" pos:end="179:22"><literal type="number" pos:start="179:22" pos:end="179:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:30"><expr pos:start="185:5" pos:end="185:29"><name pos:start="185:5" pos:end="185:13">timestamp</name> <operator pos:start="185:15" pos:end="185:15">=</operator> <name pos:start="185:17" pos:end="185:29"><name pos:start="185:17" pos:end="185:17">o</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:29">start_time</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="187:5" pos:end="187:35">/* add the stream start time */</comment>

    <if_stmt pos:start="189:5" pos:end="191:36"><if pos:start="189:5" pos:end="191:36">if <condition pos:start="189:8" pos:end="189:41">(<expr pos:start="189:9" pos:end="189:40"><name pos:start="189:9" pos:end="189:22"><name pos:start="189:9" pos:end="189:10">ic</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:22">start_time</name></name> <operator pos:start="189:24" pos:end="189:25">!=</operator> <name pos:start="189:27" pos:end="189:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:36"><block_content pos:start="191:9" pos:end="191:36">

        <expr_stmt pos:start="191:9" pos:end="191:36"><expr pos:start="191:9" pos:end="191:35"><name pos:start="191:9" pos:end="191:17">timestamp</name> <operator pos:start="191:19" pos:end="191:20">+=</operator> <name pos:start="191:22" pos:end="191:35"><name pos:start="191:22" pos:end="191:23">ic</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:35">start_time</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="195:5" pos:end="195:45">/* if seeking requested, we execute it */</comment>

    <if_stmt pos:start="197:5" pos:end="209:5"><if pos:start="197:5" pos:end="209:5">if <condition pos:start="197:8" pos:end="197:27">(<expr pos:start="197:9" pos:end="197:26"><name pos:start="197:9" pos:end="197:21"><name pos:start="197:9" pos:end="197:9">o</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:21">start_time</name></name> <operator pos:start="197:23" pos:end="197:24">!=</operator> <literal type="number" pos:start="197:26" pos:end="197:26">0</literal></expr>)</condition> <block pos:start="197:29" pos:end="209:5">{<block_content pos:start="199:9" pos:end="207:9">

        <expr_stmt pos:start="199:9" pos:end="199:69"><expr pos:start="199:9" pos:end="199:68"><name pos:start="199:9" pos:end="199:11">ret</name> <operator pos:start="199:13" pos:end="199:13">=</operator> <call pos:start="199:15" pos:end="199:68"><name pos:start="199:15" pos:end="199:27">av_seek_frame</name><argument_list pos:start="199:28" pos:end="199:68">(<argument pos:start="199:29" pos:end="199:30"><expr pos:start="199:29" pos:end="199:30"><name pos:start="199:29" pos:end="199:30">ic</name></expr></argument>, <argument pos:start="199:33" pos:end="199:34"><expr pos:start="199:33" pos:end="199:34"><operator pos:start="199:33" pos:end="199:33">-</operator><literal type="number" pos:start="199:34" pos:end="199:34">1</literal></expr></argument>, <argument pos:start="199:37" pos:end="199:45"><expr pos:start="199:37" pos:end="199:45"><name pos:start="199:37" pos:end="199:45">timestamp</name></expr></argument>, <argument pos:start="199:48" pos:end="199:67"><expr pos:start="199:48" pos:end="199:67"><name pos:start="199:48" pos:end="199:67">AVSEEK_FLAG_BACKWARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="207:9"><if pos:start="201:9" pos:end="207:9">if <condition pos:start="201:12" pos:end="201:20">(<expr pos:start="201:13" pos:end="201:19"><name pos:start="201:13" pos:end="201:15">ret</name> <operator pos:start="201:17" pos:end="201:17">&lt;</operator> <literal type="number" pos:start="201:19" pos:end="201:19">0</literal></expr>)</condition> <block pos:start="201:22" pos:end="207:9">{<block_content pos:start="203:13" pos:end="205:63">

            <expr_stmt pos:start="203:13" pos:end="205:63"><expr pos:start="203:13" pos:end="205:62"><call pos:start="203:13" pos:end="205:62"><name pos:start="203:13" pos:end="203:18">av_log</name><argument_list pos:start="203:19" pos:end="205:62">(<argument pos:start="203:20" pos:end="203:23"><expr pos:start="203:20" pos:end="203:23"><name pos:start="203:20" pos:end="203:23">NULL</name></expr></argument>, <argument pos:start="203:26" pos:end="203:39"><expr pos:start="203:26" pos:end="203:39"><name pos:start="203:26" pos:end="203:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="203:42" pos:end="203:81"><expr pos:start="203:42" pos:end="203:81"><literal type="string" pos:start="203:42" pos:end="203:81">"%s: could not seek to position %0.3f\n"</literal></expr></argument>,

                   <argument pos:start="205:20" pos:end="205:27"><expr pos:start="205:20" pos:end="205:27"><name pos:start="205:20" pos:end="205:27">filename</name></expr></argument>, <argument pos:start="205:30" pos:end="205:61"><expr pos:start="205:30" pos:end="205:61"><operator pos:start="205:30" pos:end="205:30">(</operator><name pos:start="205:31" pos:end="205:36">double</name><operator pos:start="205:37" pos:end="205:37">)</operator><name pos:start="205:38" pos:end="205:46">timestamp</name> <operator pos:start="205:48" pos:end="205:48">/</operator> <name pos:start="205:50" pos:end="205:61">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:86">/* update the current parameters so that they match the one of the input stream */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:29"><expr pos:start="215:5" pos:end="215:28"><call pos:start="215:5" pos:end="215:28"><name pos:start="215:5" pos:end="215:21">add_input_streams</name><argument_list pos:start="215:22" pos:end="215:28">(<argument pos:start="215:23" pos:end="215:23"><expr pos:start="215:23" pos:end="215:23"><name pos:start="215:23" pos:end="215:23">o</name></expr></argument>, <argument pos:start="215:26" pos:end="215:27"><expr pos:start="215:26" pos:end="215:27"><name pos:start="215:26" pos:end="215:27">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="219:5" pos:end="219:31">/* dump the file content */</comment>

    <expr_stmt pos:start="221:5" pos:end="221:52"><expr pos:start="221:5" pos:end="221:51"><call pos:start="221:5" pos:end="221:51"><name pos:start="221:5" pos:end="221:18">av_dump_format</name><argument_list pos:start="221:19" pos:end="221:51">(<argument pos:start="221:20" pos:end="221:21"><expr pos:start="221:20" pos:end="221:21"><name pos:start="221:20" pos:end="221:21">ic</name></expr></argument>, <argument pos:start="221:24" pos:end="221:37"><expr pos:start="221:24" pos:end="221:37"><name pos:start="221:24" pos:end="221:37">nb_input_files</name></expr></argument>, <argument pos:start="221:40" pos:end="221:47"><expr pos:start="221:40" pos:end="221:47"><name pos:start="221:40" pos:end="221:47">filename</name></expr></argument>, <argument pos:start="221:50" pos:end="221:50"><expr pos:start="221:50" pos:end="221:50"><literal type="number" pos:start="221:50" pos:end="221:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:44"><expr pos:start="225:5" pos:end="225:43"><call pos:start="225:5" pos:end="225:43"><name pos:start="225:5" pos:end="225:14">GROW_ARRAY</name><argument_list pos:start="225:15" pos:end="225:43">(<argument pos:start="225:16" pos:end="225:26"><expr pos:start="225:16" pos:end="225:26"><name pos:start="225:16" pos:end="225:26">input_files</name></expr></argument>, <argument pos:start="225:29" pos:end="225:42"><expr pos:start="225:29" pos:end="225:42"><name pos:start="225:29" pos:end="225:42">nb_input_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:31"><expr pos:start="227:5" pos:end="227:30"><name pos:start="227:5" pos:end="227:5">f</name> <operator pos:start="227:7" pos:end="227:7">=</operator> <call pos:start="227:9" pos:end="227:30"><name pos:start="227:9" pos:end="227:18">av_mallocz</name><argument_list pos:start="227:19" pos:end="227:30">(<argument pos:start="227:20" pos:end="227:29"><expr pos:start="227:20" pos:end="227:29"><sizeof pos:start="227:20" pos:end="227:29">sizeof<argument_list pos:start="227:26" pos:end="227:29">(<argument pos:start="227:27" pos:end="227:28"><expr pos:start="227:27" pos:end="227:28"><operator pos:start="227:27" pos:end="227:27">*</operator><name pos:start="227:28" pos:end="227:28">f</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="229:5" pos:end="231:24"><if pos:start="229:5" pos:end="231:24">if <condition pos:start="229:8" pos:end="229:11">(<expr pos:start="229:9" pos:end="229:10"><operator pos:start="229:9" pos:end="229:9">!</operator><name pos:start="229:10" pos:end="229:10">f</name></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:24"><block_content pos:start="231:9" pos:end="231:24">

        <expr_stmt pos:start="231:9" pos:end="231:24"><expr pos:start="231:9" pos:end="231:23"><call pos:start="231:9" pos:end="231:23"><name pos:start="231:9" pos:end="231:20">exit_program</name><argument_list pos:start="231:21" pos:end="231:23">(<argument pos:start="231:22" pos:end="231:22"><expr pos:start="231:22" pos:end="231:22"><literal type="number" pos:start="231:22" pos:end="231:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:40"><expr pos:start="233:5" pos:end="233:39"><name pos:start="233:5" pos:end="233:35"><name pos:start="233:5" pos:end="233:15">input_files</name><index pos:start="233:16" pos:end="233:35">[<expr pos:start="233:17" pos:end="233:34"><name pos:start="233:17" pos:end="233:30">nb_input_files</name> <operator pos:start="233:32" pos:end="233:32">-</operator> <literal type="number" pos:start="233:34" pos:end="233:34">1</literal></expr>]</index></name> <operator pos:start="233:37" pos:end="233:37">=</operator> <name pos:start="233:39" pos:end="233:39">f</name></expr>;</expr_stmt>



    <expr_stmt pos:start="237:5" pos:end="237:23"><expr pos:start="237:5" pos:end="237:22"><name pos:start="237:5" pos:end="237:10"><name pos:start="237:5" pos:end="237:5">f</name><operator pos:start="237:6" pos:end="237:7">-&gt;</operator><name pos:start="237:8" pos:end="237:10">ctx</name></name>        <operator pos:start="237:19" pos:end="237:19">=</operator> <name pos:start="237:21" pos:end="237:22">ic</name></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:54"><expr pos:start="239:5" pos:end="239:53"><name pos:start="239:5" pos:end="239:16"><name pos:start="239:5" pos:end="239:5">f</name><operator pos:start="239:6" pos:end="239:7">-&gt;</operator><name pos:start="239:8" pos:end="239:16">ist_index</name></name>  <operator pos:start="239:19" pos:end="239:19">=</operator> <name pos:start="239:21" pos:end="239:36">nb_input_streams</name> <operator pos:start="239:38" pos:end="239:38">-</operator> <name pos:start="239:40" pos:end="239:53"><name pos:start="239:40" pos:end="239:41">ic</name><operator pos:start="239:42" pos:end="239:43">-&gt;</operator><name pos:start="239:44" pos:end="239:53">nb_streams</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:67"><expr pos:start="241:5" pos:end="241:66"><name pos:start="241:5" pos:end="241:16"><name pos:start="241:5" pos:end="241:5">f</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:16">ts_offset</name></name>  <operator pos:start="241:19" pos:end="241:19">=</operator> <name pos:start="241:21" pos:end="241:38"><name pos:start="241:21" pos:end="241:21">o</name><operator pos:start="241:22" pos:end="241:23">-&gt;</operator><name pos:start="241:24" pos:end="241:38">input_ts_offset</name></name> <operator pos:start="241:40" pos:end="241:40">-</operator> <operator pos:start="241:42" pos:end="241:42">(</operator><ternary pos:start="241:43" pos:end="241:65"><condition pos:start="241:43" pos:end="241:51"><expr pos:start="241:43" pos:end="241:49"><name pos:start="241:43" pos:end="241:49">copy_ts</name></expr> ?</condition><then pos:start="241:53" pos:end="241:53"> <expr pos:start="241:53" pos:end="241:53"><literal type="number" pos:start="241:53" pos:end="241:53">0</literal></expr> </then><else pos:start="241:55" pos:end="241:65">: <expr pos:start="241:57" pos:end="241:65"><name pos:start="241:57" pos:end="241:65">timestamp</name></expr></else></ternary><operator pos:start="241:66" pos:end="241:66">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:35"><expr pos:start="243:5" pos:end="243:34"><name pos:start="243:5" pos:end="243:17"><name pos:start="243:5" pos:end="243:5">f</name><operator pos:start="243:6" pos:end="243:7">-&gt;</operator><name pos:start="243:8" pos:end="243:17">nb_streams</name></name> <operator pos:start="243:19" pos:end="243:19">=</operator> <name pos:start="243:21" pos:end="243:34"><name pos:start="243:21" pos:end="243:22">ic</name><operator pos:start="243:23" pos:end="243:24">-&gt;</operator><name pos:start="243:25" pos:end="243:34">nb_streams</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:32"><expr pos:start="245:5" pos:end="245:31"><name pos:start="245:5" pos:end="245:15"><name pos:start="245:5" pos:end="245:5">f</name><operator pos:start="245:6" pos:end="245:7">-&gt;</operator><name pos:start="245:8" pos:end="245:15">rate_emu</name></name>   <operator pos:start="245:19" pos:end="245:19">=</operator> <name pos:start="245:21" pos:end="245:31"><name pos:start="245:21" pos:end="245:21">o</name><operator pos:start="245:22" pos:end="245:23">-&gt;</operator><name pos:start="245:24" pos:end="245:31">rate_emu</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="249:5" pos:end="249:51">/* check if all codec options have been used */</comment>

    <expr_stmt pos:start="251:5" pos:end="251:53"><expr pos:start="251:5" pos:end="251:52"><name pos:start="251:5" pos:end="251:15">unused_opts</name> <operator pos:start="251:17" pos:end="251:17">=</operator> <call pos:start="251:19" pos:end="251:52"><name pos:start="251:19" pos:end="251:34">strip_specifiers</name><argument_list pos:start="251:35" pos:end="251:52">(<argument pos:start="251:36" pos:end="251:51"><expr pos:start="251:36" pos:end="251:51"><name pos:start="251:36" pos:end="251:51"><name pos:start="251:36" pos:end="251:36">o</name><operator pos:start="251:37" pos:end="251:38">-&gt;</operator><name pos:start="251:39" pos:end="251:39">g</name><operator pos:start="251:40" pos:end="251:41">-&gt;</operator><name pos:start="251:42" pos:end="251:51">codec_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="253:5" pos:end="263:5">for <control pos:start="253:9" pos:end="253:53">(<init pos:start="253:10" pos:end="253:26"><expr pos:start="253:10" pos:end="253:25"><name pos:start="253:10" pos:end="253:10">i</name> <operator pos:start="253:12" pos:end="253:12">=</operator> <name pos:start="253:14" pos:end="253:25"><name pos:start="253:14" pos:end="253:14">f</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:25">ist_index</name></name></expr>;</init> <condition pos:start="253:28" pos:end="253:48"><expr pos:start="253:28" pos:end="253:47"><name pos:start="253:28" pos:end="253:28">i</name> <operator pos:start="253:30" pos:end="253:30">&lt;</operator> <name pos:start="253:32" pos:end="253:47">nb_input_streams</name></expr>;</condition> <incr pos:start="253:50" pos:end="253:52"><expr pos:start="253:50" pos:end="253:52"><name pos:start="253:50" pos:end="253:50">i</name><operator pos:start="253:51" pos:end="253:52">++</operator></expr></incr>)</control> <block pos:start="253:55" pos:end="263:5">{<block_content pos:start="255:9" pos:end="261:55">

        <expr_stmt pos:start="255:9" pos:end="255:17"><expr pos:start="255:9" pos:end="255:16"><name pos:start="255:9" pos:end="255:9">e</name> <operator pos:start="255:11" pos:end="255:11">=</operator> <name pos:start="255:13" pos:end="255:16">NULL</name></expr>;</expr_stmt>

        <while pos:start="257:9" pos:end="261:55">while <condition pos:start="257:15" pos:end="259:56">(<expr pos:start="257:16" pos:end="259:55"><operator pos:start="257:16" pos:end="257:16">(</operator><name pos:start="257:17" pos:end="257:17">e</name> <operator pos:start="257:19" pos:end="257:19">=</operator> <call pos:start="257:21" pos:end="259:54"><name pos:start="257:21" pos:end="257:31">av_dict_get</name><argument_list pos:start="257:32" pos:end="259:54">(<argument pos:start="257:33" pos:end="257:54"><expr pos:start="257:33" pos:end="257:54"><name pos:start="257:33" pos:end="257:48"><name pos:start="257:33" pos:end="257:45">input_streams</name><index pos:start="257:46" pos:end="257:48">[<expr pos:start="257:47" pos:end="257:47"><name pos:start="257:47" pos:end="257:47">i</name></expr>]</index></name><operator pos:start="257:49" pos:end="257:50">-&gt;</operator><name pos:start="257:51" pos:end="257:54">opts</name></expr></argument>, <argument pos:start="257:57" pos:end="257:58"><expr pos:start="257:57" pos:end="257:58"><literal type="string" pos:start="257:57" pos:end="257:58">""</literal></expr></argument>, <argument pos:start="257:61" pos:end="257:61"><expr pos:start="257:61" pos:end="257:61"><name pos:start="257:61" pos:end="257:61">e</name></expr></argument>,

                                <argument pos:start="259:33" pos:end="259:53"><expr pos:start="259:33" pos:end="259:53"><name pos:start="259:33" pos:end="259:53">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="259:55" pos:end="259:55">)</operator></expr>)</condition><block type="pseudo" pos:start="261:13" pos:end="261:55"><block_content pos:start="261:13" pos:end="261:55">

            <expr_stmt pos:start="261:13" pos:end="261:55"><expr pos:start="261:13" pos:end="261:54"><call pos:start="261:13" pos:end="261:54"><name pos:start="261:13" pos:end="261:23">av_dict_set</name><argument_list pos:start="261:24" pos:end="261:54">(<argument pos:start="261:25" pos:end="261:36"><expr pos:start="261:25" pos:end="261:36"><operator pos:start="261:25" pos:end="261:25">&amp;</operator><name pos:start="261:26" pos:end="261:36">unused_opts</name></expr></argument>, <argument pos:start="261:39" pos:end="261:44"><expr pos:start="261:39" pos:end="261:44"><name pos:start="261:39" pos:end="261:44"><name pos:start="261:39" pos:end="261:39">e</name><operator pos:start="261:40" pos:end="261:41">-&gt;</operator><name pos:start="261:42" pos:end="261:44">key</name></name></expr></argument>, <argument pos:start="261:47" pos:end="261:50"><expr pos:start="261:47" pos:end="261:50"><name pos:start="261:47" pos:end="261:50">NULL</name></expr></argument>, <argument pos:start="261:53" pos:end="261:53"><expr pos:start="261:53" pos:end="261:53"><literal type="number" pos:start="261:53" pos:end="261:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></for>



    <expr_stmt pos:start="267:5" pos:end="267:13"><expr pos:start="267:5" pos:end="267:12"><name pos:start="267:5" pos:end="267:5">e</name> <operator pos:start="267:7" pos:end="267:7">=</operator> <name pos:start="267:9" pos:end="267:12">NULL</name></expr>;</expr_stmt>

    <while pos:start="269:5" pos:end="309:5">while <condition pos:start="269:11" pos:end="269:72">(<expr pos:start="269:12" pos:end="269:71"><operator pos:start="269:12" pos:end="269:12">(</operator><name pos:start="269:13" pos:end="269:13">e</name> <operator pos:start="269:15" pos:end="269:15">=</operator> <call pos:start="269:17" pos:end="269:70"><name pos:start="269:17" pos:end="269:27">av_dict_get</name><argument_list pos:start="269:28" pos:end="269:70">(<argument pos:start="269:29" pos:end="269:39"><expr pos:start="269:29" pos:end="269:39"><name pos:start="269:29" pos:end="269:39">unused_opts</name></expr></argument>, <argument pos:start="269:42" pos:end="269:43"><expr pos:start="269:42" pos:end="269:43"><literal type="string" pos:start="269:42" pos:end="269:43">""</literal></expr></argument>, <argument pos:start="269:46" pos:end="269:46"><expr pos:start="269:46" pos:end="269:46"><name pos:start="269:46" pos:end="269:46">e</name></expr></argument>, <argument pos:start="269:49" pos:end="269:69"><expr pos:start="269:49" pos:end="269:69"><name pos:start="269:49" pos:end="269:69">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="269:71" pos:end="269:71">)</operator></expr>)</condition> <block pos:start="269:74" pos:end="309:5">{<block_content pos:start="271:9" pos:end="307:79">

        <decl_stmt pos:start="271:9" pos:end="271:51"><decl pos:start="271:9" pos:end="271:50"><type pos:start="271:9" pos:end="271:23"><specifier pos:start="271:9" pos:end="271:13">const</specifier> <name pos:start="271:15" pos:end="271:21">AVClass</name> <modifier pos:start="271:23" pos:end="271:23">*</modifier></type><name pos:start="271:24" pos:end="271:28">class</name> <init pos:start="271:30" pos:end="271:50">= <expr pos:start="271:32" pos:end="271:50"><call pos:start="271:32" pos:end="271:50"><name pos:start="271:32" pos:end="271:48">avcodec_get_class</name><argument_list pos:start="271:49" pos:end="271:50">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="273:9" pos:end="275:94"><decl pos:start="273:9" pos:end="275:93"><type pos:start="273:9" pos:end="273:24"><specifier pos:start="273:9" pos:end="273:13">const</specifier> <name pos:start="273:15" pos:end="273:22">AVOption</name> <modifier pos:start="273:24" pos:end="273:24">*</modifier></type><name pos:start="273:25" pos:end="273:30">option</name> <init pos:start="273:32" pos:end="275:93">= <expr pos:start="273:34" pos:end="275:93"><call pos:start="273:34" pos:end="275:93"><name pos:start="273:34" pos:end="273:44">av_opt_find</name><argument_list pos:start="273:45" pos:end="275:93">(<argument pos:start="273:46" pos:end="273:51"><expr pos:start="273:46" pos:end="273:51"><operator pos:start="273:46" pos:end="273:46">&amp;</operator><name pos:start="273:47" pos:end="273:51">class</name></expr></argument>, <argument pos:start="273:54" pos:end="273:59"><expr pos:start="273:54" pos:end="273:59"><name pos:start="273:54" pos:end="273:59"><name pos:start="273:54" pos:end="273:54">e</name><operator pos:start="273:55" pos:end="273:56">-&gt;</operator><name pos:start="273:57" pos:end="273:59">key</name></name></expr></argument>, <argument pos:start="273:62" pos:end="273:65"><expr pos:start="273:62" pos:end="273:65"><name pos:start="273:62" pos:end="273:65">NULL</name></expr></argument>, <argument pos:start="273:68" pos:end="273:68"><expr pos:start="273:68" pos:end="273:68"><literal type="number" pos:start="273:68" pos:end="273:68">0</literal></expr></argument>,

                                             <argument pos:start="275:46" pos:end="275:92"><expr pos:start="275:46" pos:end="275:92"><name pos:start="275:46" pos:end="275:67">AV_OPT_SEARCH_CHILDREN</name> <operator pos:start="275:69" pos:end="275:69">|</operator> <name pos:start="275:71" pos:end="275:92">AV_OPT_SEARCH_FAKE_OBJ</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="277:9" pos:end="279:21"><if pos:start="277:9" pos:end="279:21">if <condition pos:start="277:12" pos:end="277:20">(<expr pos:start="277:13" pos:end="277:19"><operator pos:start="277:13" pos:end="277:13">!</operator><name pos:start="277:14" pos:end="277:19">option</name></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:21"><block_content pos:start="279:13" pos:end="279:21">

            <continue pos:start="279:13" pos:end="279:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="281:9" pos:end="293:9"><if pos:start="281:9" pos:end="293:9">if <condition pos:start="281:12" pos:end="281:58">(<expr pos:start="281:13" pos:end="281:57"><operator pos:start="281:13" pos:end="281:13">!</operator><operator pos:start="281:14" pos:end="281:14">(</operator><name pos:start="281:15" pos:end="281:27"><name pos:start="281:15" pos:end="281:20">option</name><operator pos:start="281:21" pos:end="281:22">-&gt;</operator><name pos:start="281:23" pos:end="281:27">flags</name></name> <operator pos:start="281:29" pos:end="281:29">&amp;</operator> <name pos:start="281:31" pos:end="281:56">AV_OPT_FLAG_DECODING_PARAM</name><operator pos:start="281:57" pos:end="281:57">)</operator></expr>)</condition> <block pos:start="281:60" pos:end="293:9">{<block_content pos:start="283:13" pos:end="291:28">

            <expr_stmt pos:start="283:13" pos:end="289:29"><expr pos:start="283:13" pos:end="289:28"><call pos:start="283:13" pos:end="289:28"><name pos:start="283:13" pos:end="283:18">av_log</name><argument_list pos:start="283:19" pos:end="289:28">(<argument pos:start="283:20" pos:end="283:23"><expr pos:start="283:20" pos:end="283:23"><name pos:start="283:20" pos:end="283:23">NULL</name></expr></argument>, <argument pos:start="283:26" pos:end="283:37"><expr pos:start="283:26" pos:end="283:37"><name pos:start="283:26" pos:end="283:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="283:40" pos:end="285:68"><expr pos:start="283:40" pos:end="285:68"><literal type="string" pos:start="283:40" pos:end="283:78">"Codec AVOption %s (%s) specified for "</literal>

                   <literal type="string" pos:start="285:20" pos:end="285:68">"input file #%d (%s) is not a decoding option.\n"</literal></expr></argument>, <argument pos:start="285:71" pos:end="285:76"><expr pos:start="285:71" pos:end="285:76"><name pos:start="285:71" pos:end="285:76"><name pos:start="285:71" pos:end="285:71">e</name><operator pos:start="285:72" pos:end="285:73">-&gt;</operator><name pos:start="285:74" pos:end="285:76">key</name></name></expr></argument>,

                   <argument pos:start="287:20" pos:end="287:51"><expr pos:start="287:20" pos:end="287:51"><ternary pos:start="287:20" pos:end="287:51"><condition pos:start="287:20" pos:end="287:33"><expr pos:start="287:20" pos:end="287:31"><name pos:start="287:20" pos:end="287:31"><name pos:start="287:20" pos:end="287:25">option</name><operator pos:start="287:26" pos:end="287:27">-&gt;</operator><name pos:start="287:28" pos:end="287:31">help</name></name></expr> ?</condition><then pos:start="287:35" pos:end="287:46"> <expr pos:start="287:35" pos:end="287:46"><name pos:start="287:35" pos:end="287:46"><name pos:start="287:35" pos:end="287:40">option</name><operator pos:start="287:41" pos:end="287:42">-&gt;</operator><name pos:start="287:43" pos:end="287:46">help</name></name></expr> </then><else pos:start="287:48" pos:end="287:51">: <expr pos:start="287:50" pos:end="287:51"><literal type="string" pos:start="287:50" pos:end="287:51">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="287:54" pos:end="287:71"><expr pos:start="287:54" pos:end="287:71"><name pos:start="287:54" pos:end="287:67">nb_input_files</name> <operator pos:start="287:69" pos:end="287:69">-</operator> <literal type="number" pos:start="287:71" pos:end="287:71">1</literal></expr></argument>,

                   <argument pos:start="289:20" pos:end="289:27"><expr pos:start="289:20" pos:end="289:27"><name pos:start="289:20" pos:end="289:27">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:28"><expr pos:start="291:13" pos:end="291:27"><call pos:start="291:13" pos:end="291:27"><name pos:start="291:13" pos:end="291:24">exit_program</name><argument_list pos:start="291:25" pos:end="291:27">(<argument pos:start="291:26" pos:end="291:26"><expr pos:start="291:26" pos:end="291:26"><literal type="number" pos:start="291:26" pos:end="291:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="297:9" pos:end="307:79"><expr pos:start="297:9" pos:end="307:78"><call pos:start="297:9" pos:end="307:78"><name pos:start="297:9" pos:end="297:14">av_log</name><argument_list pos:start="297:15" pos:end="307:78">(<argument pos:start="297:16" pos:end="297:19"><expr pos:start="297:16" pos:end="297:19"><name pos:start="297:16" pos:end="297:19">NULL</name></expr></argument>, <argument pos:start="297:22" pos:end="297:35"><expr pos:start="297:22" pos:end="297:35"><name pos:start="297:22" pos:end="297:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="297:38" pos:end="305:62"><expr pos:start="297:38" pos:end="305:62"><literal type="string" pos:start="297:38" pos:end="297:76">"Codec AVOption %s (%s) specified for "</literal>

               <literal type="string" pos:start="299:16" pos:end="299:80">"input file #%d (%s) has not been used for any stream. The most "</literal>

               <literal type="string" pos:start="301:16" pos:end="301:78">"likely reason is either wrong type (e.g. a video option with "</literal>

               <literal type="string" pos:start="303:16" pos:end="303:82">"no video streams) or that it is a private option of some decoder "</literal>

               <literal type="string" pos:start="305:16" pos:end="305:62">"which was not actually used for any stream.\n"</literal></expr></argument>, <argument pos:start="305:65" pos:end="305:70"><expr pos:start="305:65" pos:end="305:70"><name pos:start="305:65" pos:end="305:70"><name pos:start="305:65" pos:end="305:65">e</name><operator pos:start="305:66" pos:end="305:67">-&gt;</operator><name pos:start="305:68" pos:end="305:70">key</name></name></expr></argument>,

               <argument pos:start="307:16" pos:end="307:47"><expr pos:start="307:16" pos:end="307:47"><ternary pos:start="307:16" pos:end="307:47"><condition pos:start="307:16" pos:end="307:29"><expr pos:start="307:16" pos:end="307:27"><name pos:start="307:16" pos:end="307:27"><name pos:start="307:16" pos:end="307:21">option</name><operator pos:start="307:22" pos:end="307:23">-&gt;</operator><name pos:start="307:24" pos:end="307:27">help</name></name></expr> ?</condition><then pos:start="307:31" pos:end="307:42"> <expr pos:start="307:31" pos:end="307:42"><name pos:start="307:31" pos:end="307:42"><name pos:start="307:31" pos:end="307:36">option</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:42">help</name></name></expr> </then><else pos:start="307:44" pos:end="307:47">: <expr pos:start="307:46" pos:end="307:47"><literal type="string" pos:start="307:46" pos:end="307:47">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="307:50" pos:end="307:67"><expr pos:start="307:50" pos:end="307:67"><name pos:start="307:50" pos:end="307:63">nb_input_files</name> <operator pos:start="307:65" pos:end="307:65">-</operator> <literal type="number" pos:start="307:67" pos:end="307:67">1</literal></expr></argument>, <argument pos:start="307:70" pos:end="307:77"><expr pos:start="307:70" pos:end="307:77"><name pos:start="307:70" pos:end="307:77">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="311:5" pos:end="311:31"><expr pos:start="311:5" pos:end="311:30"><call pos:start="311:5" pos:end="311:30"><name pos:start="311:5" pos:end="311:16">av_dict_free</name><argument_list pos:start="311:17" pos:end="311:30">(<argument pos:start="311:18" pos:end="311:29"><expr pos:start="311:18" pos:end="311:29"><operator pos:start="311:18" pos:end="311:18">&amp;</operator><name pos:start="311:19" pos:end="311:29">unused_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="315:5" pos:end="333:5">for <control pos:start="315:9" pos:end="315:47">(<init pos:start="315:10" pos:end="315:15"><expr pos:start="315:10" pos:end="315:14"><name pos:start="315:10" pos:end="315:10">i</name> <operator pos:start="315:12" pos:end="315:12">=</operator> <literal type="number" pos:start="315:14" pos:end="315:14">0</literal></expr>;</init> <condition pos:start="315:17" pos:end="315:42"><expr pos:start="315:17" pos:end="315:41"><name pos:start="315:17" pos:end="315:17">i</name> <operator pos:start="315:19" pos:end="315:19">&lt;</operator> <name pos:start="315:21" pos:end="315:41"><name pos:start="315:21" pos:end="315:21">o</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:41">nb_dump_attachment</name></name></expr>;</condition> <incr pos:start="315:44" pos:end="315:46"><expr pos:start="315:44" pos:end="315:46"><name pos:start="315:44" pos:end="315:44">i</name><operator pos:start="315:45" pos:end="315:46">++</operator></expr></incr>)</control> <block pos:start="315:49" pos:end="333:5">{<block_content pos:start="317:9" pos:end="331:9">

        <decl_stmt pos:start="317:9" pos:end="317:14"><decl pos:start="317:9" pos:end="317:13"><type pos:start="317:9" pos:end="317:11"><name pos:start="317:9" pos:end="317:11">int</name></type> <name pos:start="317:13" pos:end="317:13">j</name></decl>;</decl_stmt>



        <for pos:start="321:9" pos:end="331:9">for <control pos:start="321:13" pos:end="321:44">(<init pos:start="321:14" pos:end="321:19"><expr pos:start="321:14" pos:end="321:18"><name pos:start="321:14" pos:end="321:14">j</name> <operator pos:start="321:16" pos:end="321:16">=</operator> <literal type="number" pos:start="321:18" pos:end="321:18">0</literal></expr>;</init> <condition pos:start="321:21" pos:end="321:39"><expr pos:start="321:21" pos:end="321:38"><name pos:start="321:21" pos:end="321:21">j</name> <operator pos:start="321:23" pos:end="321:23">&lt;</operator> <name pos:start="321:25" pos:end="321:38"><name pos:start="321:25" pos:end="321:26">ic</name><operator pos:start="321:27" pos:end="321:28">-&gt;</operator><name pos:start="321:29" pos:end="321:38">nb_streams</name></name></expr>;</condition> <incr pos:start="321:41" pos:end="321:43"><expr pos:start="321:41" pos:end="321:43"><name pos:start="321:41" pos:end="321:41">j</name><operator pos:start="321:42" pos:end="321:43">++</operator></expr></incr>)</control> <block pos:start="321:46" pos:end="331:9">{<block_content pos:start="323:13" pos:end="329:65">

            <decl_stmt pos:start="323:13" pos:end="323:42"><decl pos:start="323:13" pos:end="323:41"><type pos:start="323:13" pos:end="323:22"><name pos:start="323:13" pos:end="323:20">AVStream</name> <modifier pos:start="323:22" pos:end="323:22">*</modifier></type><name pos:start="323:23" pos:end="323:24">st</name> <init pos:start="323:26" pos:end="323:41">= <expr pos:start="323:28" pos:end="323:41"><name pos:start="323:28" pos:end="323:41"><name pos:start="323:28" pos:end="323:29">ic</name><operator pos:start="323:30" pos:end="323:31">-&gt;</operator><name pos:start="323:32" pos:end="323:38">streams</name><index pos:start="323:39" pos:end="323:41">[<expr pos:start="323:40" pos:end="323:40"><name pos:start="323:40" pos:end="323:40">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="327:13" pos:end="329:65"><if pos:start="327:13" pos:end="329:65">if <condition pos:start="327:16" pos:end="327:85">(<expr pos:start="327:17" pos:end="327:84"><call pos:start="327:17" pos:end="327:79"><name pos:start="327:17" pos:end="327:38">check_stream_specifier</name><argument_list pos:start="327:39" pos:end="327:79">(<argument pos:start="327:40" pos:end="327:41"><expr pos:start="327:40" pos:end="327:41"><name pos:start="327:40" pos:end="327:41">ic</name></expr></argument>, <argument pos:start="327:44" pos:end="327:45"><expr pos:start="327:44" pos:end="327:45"><name pos:start="327:44" pos:end="327:45">st</name></expr></argument>, <argument pos:start="327:48" pos:end="327:78"><expr pos:start="327:48" pos:end="327:78"><name pos:start="327:48" pos:end="327:68"><name pos:start="327:48" pos:end="327:48">o</name><operator pos:start="327:49" pos:end="327:50">-&gt;</operator><name pos:start="327:51" pos:end="327:65">dump_attachment</name><index pos:start="327:66" pos:end="327:68">[<expr pos:start="327:67" pos:end="327:67"><name pos:start="327:67" pos:end="327:67">i</name></expr>]</index></name><operator pos:start="327:69" pos:end="327:69">.</operator><name pos:start="327:70" pos:end="327:78">specifier</name></expr></argument>)</argument_list></call> <operator pos:start="327:81" pos:end="327:82">==</operator> <literal type="number" pos:start="327:84" pos:end="327:84">1</literal></expr>)</condition><block type="pseudo" pos:start="329:17" pos:end="329:65"><block_content pos:start="329:17" pos:end="329:65">

                <expr_stmt pos:start="329:17" pos:end="329:65"><expr pos:start="329:17" pos:end="329:64"><call pos:start="329:17" pos:end="329:64"><name pos:start="329:17" pos:end="329:31">dump_attachment</name><argument_list pos:start="329:32" pos:end="329:64">(<argument pos:start="329:33" pos:end="329:34"><expr pos:start="329:33" pos:end="329:34"><name pos:start="329:33" pos:end="329:34">st</name></expr></argument>, <argument pos:start="329:37" pos:end="329:63"><expr pos:start="329:37" pos:end="329:63"><name pos:start="329:37" pos:end="329:57"><name pos:start="329:37" pos:end="329:37">o</name><operator pos:start="329:38" pos:end="329:39">-&gt;</operator><name pos:start="329:40" pos:end="329:54">dump_attachment</name><index pos:start="329:55" pos:end="329:57">[<expr pos:start="329:56" pos:end="329:56"><name pos:start="329:56" pos:end="329:56">i</name></expr>]</index></name><operator pos:start="329:58" pos:end="329:58">.</operator><name pos:start="329:59" pos:end="329:63"><name pos:start="329:59" pos:end="329:59">u</name><operator pos:start="329:60" pos:end="329:60">.</operator><name pos:start="329:61" pos:end="329:63">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <for pos:start="337:5" pos:end="339:31">for <control pos:start="337:9" pos:end="337:41">(<init pos:start="337:10" pos:end="337:15"><expr pos:start="337:10" pos:end="337:14"><name pos:start="337:10" pos:end="337:10">i</name> <operator pos:start="337:12" pos:end="337:12">=</operator> <literal type="number" pos:start="337:14" pos:end="337:14">0</literal></expr>;</init> <condition pos:start="337:17" pos:end="337:36"><expr pos:start="337:17" pos:end="337:35"><name pos:start="337:17" pos:end="337:17">i</name> <operator pos:start="337:19" pos:end="337:19">&lt;</operator> <name pos:start="337:21" pos:end="337:35">orig_nb_streams</name></expr>;</condition> <incr pos:start="337:38" pos:end="337:40"><expr pos:start="337:38" pos:end="337:40"><name pos:start="337:38" pos:end="337:38">i</name><operator pos:start="337:39" pos:end="337:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="339:9" pos:end="339:31"><block_content pos:start="339:9" pos:end="339:31">

        <expr_stmt pos:start="339:9" pos:end="339:31"><expr pos:start="339:9" pos:end="339:30"><call pos:start="339:9" pos:end="339:30"><name pos:start="339:9" pos:end="339:20">av_dict_free</name><argument_list pos:start="339:21" pos:end="339:30">(<argument pos:start="339:22" pos:end="339:29"><expr pos:start="339:22" pos:end="339:29"><operator pos:start="339:22" pos:end="339:22">&amp;</operator><name pos:start="339:23" pos:end="339:29"><name pos:start="339:23" pos:end="339:26">opts</name><index pos:start="339:27" pos:end="339:29">[<expr pos:start="339:28" pos:end="339:28"><name pos:start="339:28" pos:end="339:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="341:5" pos:end="341:20"><expr pos:start="341:5" pos:end="341:19"><call pos:start="341:5" pos:end="341:19"><name pos:start="341:5" pos:end="341:12">av_freep</name><argument_list pos:start="341:13" pos:end="341:19">(<argument pos:start="341:14" pos:end="341:18"><expr pos:start="341:14" pos:end="341:18"><operator pos:start="341:14" pos:end="341:14">&amp;</operator><name pos:start="341:15" pos:end="341:18">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="345:5" pos:end="345:13">return <expr pos:start="345:12" pos:end="345:12"><literal type="number" pos:start="345:12" pos:end="345:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
