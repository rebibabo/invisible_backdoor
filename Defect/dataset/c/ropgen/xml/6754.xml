<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6754.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">bdrv_append_temp_snapshot</name><parameter_list pos:start="1:30" pos:end="1:76">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:61">flags</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:75"><decl pos:start="1:64" pos:end="1:75"><type pos:start="1:64" pos:end="1:75"><name pos:start="1:64" pos:end="1:68">Error</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier><modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="7:5" pos:end="125:15">

    <comment type="block" pos:start="5:5" pos:end="5:73">/* TODO: extra byte is a hack to ensure MAX_PATH space on Windows. */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:22">tmp_filename</name> <init pos:start="7:24" pos:end="7:48">= <expr pos:start="7:26" pos:end="7:48"><call pos:start="7:26" pos:end="7:48"><name pos:start="7:26" pos:end="7:34">g_malloc0</name><argument_list pos:start="7:35" pos:end="7:48">(<argument pos:start="7:36" pos:end="7:47"><expr pos:start="7:36" pos:end="7:47"><name pos:start="7:36" pos:end="7:43">PATH_MAX</name> <operator pos:start="7:45" pos:end="7:45">+</operator> <literal type="number" pos:start="7:47" pos:end="7:47">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:22">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">QemuOpts</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">opts</name> <init pos:start="11:20" pos:end="11:25">= <expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">QDict</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:27">snapshot_options</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">BlockDriverState</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:33">bs_snapshot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:20">local_err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="25:48">/* if snapshot, we create a temporary backing file and open it

       instead of opening 'filename' directly */</comment>



    <comment type="block" pos:start="29:5" pos:end="29:46">/* Get the required size from the image */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:14">total_size</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:35"><name pos:start="31:18" pos:end="31:31">bdrv_getlength</name><argument_list pos:start="31:32" pos:end="31:35">(<argument pos:start="31:33" pos:end="31:34"><expr pos:start="31:33" pos:end="31:34"><name pos:start="31:33" pos:end="31:34">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:18">total_size</name> <operator pos:start="33:20" pos:end="33:20">&lt;</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>)</condition> <block pos:start="33:25" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:17">

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:24">total_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:72"><expr pos:start="37:9" pos:end="37:71"><call pos:start="37:9" pos:end="37:71"><name pos:start="37:9" pos:end="37:24">error_setg_errno</name><argument_list pos:start="37:25" pos:end="37:71">(<argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">errp</name></expr></argument>, <argument pos:start="37:32" pos:end="37:42"><expr pos:start="37:32" pos:end="37:42"><operator pos:start="37:32" pos:end="37:32">-</operator><name pos:start="37:33" pos:end="37:42">total_size</name></expr></argument>, <argument pos:start="37:45" pos:end="37:70"><expr pos:start="37:45" pos:end="37:70"><literal type="string" pos:start="37:45" pos:end="37:70">"Could not get image size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:17">goto <name pos:start="39:14" pos:end="39:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:36">/* Create the temporary image */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:55"><expr pos:start="47:5" pos:end="47:54"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:54"><name pos:start="47:11" pos:end="47:26">get_tmp_filename</name><argument_list pos:start="47:27" pos:end="47:54">(<argument pos:start="47:28" pos:end="47:39"><expr pos:start="47:28" pos:end="47:39"><name pos:start="47:28" pos:end="47:39">tmp_filename</name></expr></argument>, <argument pos:start="47:42" pos:end="47:53"><expr pos:start="47:42" pos:end="47:53"><name pos:start="47:42" pos:end="47:49">PATH_MAX</name> <operator pos:start="47:51" pos:end="47:51">+</operator> <literal type="number" pos:start="47:53" pos:end="47:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">&lt;</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>)</condition> <block pos:start="49:18" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <expr_stmt pos:start="51:9" pos:end="51:73"><expr pos:start="51:9" pos:end="51:72"><call pos:start="51:9" pos:end="51:72"><name pos:start="51:9" pos:end="51:24">error_setg_errno</name><argument_list pos:start="51:25" pos:end="51:72">(<argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">errp</name></expr></argument>, <argument pos:start="51:32" pos:end="51:35"><expr pos:start="51:32" pos:end="51:35"><operator pos:start="51:32" pos:end="51:32">-</operator><name pos:start="51:33" pos:end="51:35">ret</name></expr></argument>, <argument pos:start="51:38" pos:end="51:71"><expr pos:start="51:38" pos:end="51:71"><literal type="string" pos:start="51:38" pos:end="51:71">"Could not get temporary filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:17">goto <name pos:start="53:14" pos:end="53:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="61:42"><expr pos:start="59:5" pos:end="61:41"><name pos:start="59:5" pos:end="59:8">opts</name> <operator pos:start="59:10" pos:end="59:10">=</operator> <call pos:start="59:12" pos:end="61:41"><name pos:start="59:12" pos:end="59:27">qemu_opts_create</name><argument_list pos:start="59:28" pos:end="61:41">(<argument pos:start="59:29" pos:end="59:50"><expr pos:start="59:29" pos:end="59:50"><name pos:start="59:29" pos:end="59:50"><name pos:start="59:29" pos:end="59:38">bdrv_qcow2</name><operator pos:start="59:39" pos:end="59:39">.</operator><name pos:start="59:40" pos:end="59:50">create_opts</name></name></expr></argument>, <argument pos:start="59:53" pos:end="59:56"><expr pos:start="59:53" pos:end="59:56"><name pos:start="59:53" pos:end="59:56">NULL</name></expr></argument>, <argument pos:start="59:59" pos:end="59:59"><expr pos:start="59:59" pos:end="59:59"><literal type="number" pos:start="59:59" pos:end="59:59">0</literal></expr></argument>,

                            <argument pos:start="61:29" pos:end="61:40"><expr pos:start="61:29" pos:end="61:40"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:40">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:72"><expr pos:start="63:5" pos:end="63:71"><call pos:start="63:5" pos:end="63:71"><name pos:start="63:5" pos:end="63:23">qemu_opt_set_number</name><argument_list pos:start="63:24" pos:end="63:71">(<argument pos:start="63:25" pos:end="63:28"><expr pos:start="63:25" pos:end="63:28"><name pos:start="63:25" pos:end="63:28">opts</name></expr></argument>, <argument pos:start="63:31" pos:end="63:44"><expr pos:start="63:31" pos:end="63:44"><name pos:start="63:31" pos:end="63:44">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="63:47" pos:end="63:56"><expr pos:start="63:47" pos:end="63:56"><name pos:start="63:47" pos:end="63:56">total_size</name></expr></argument>, <argument pos:start="63:59" pos:end="63:70"><expr pos:start="63:59" pos:end="63:70"><operator pos:start="63:59" pos:end="63:59">&amp;</operator><name pos:start="63:60" pos:end="63:70">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:67"><expr pos:start="65:5" pos:end="65:66"><name pos:start="65:5" pos:end="65:7">ret</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="65:66"><name pos:start="65:11" pos:end="65:21">bdrv_create</name><argument_list pos:start="65:22" pos:end="65:66">(<argument pos:start="65:23" pos:end="65:33"><expr pos:start="65:23" pos:end="65:33"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:33">bdrv_qcow2</name></expr></argument>, <argument pos:start="65:36" pos:end="65:47"><expr pos:start="65:36" pos:end="65:47"><name pos:start="65:36" pos:end="65:47">tmp_filename</name></expr></argument>, <argument pos:start="65:50" pos:end="65:53"><expr pos:start="65:50" pos:end="65:53"><name pos:start="65:50" pos:end="65:53">opts</name></expr></argument>, <argument pos:start="65:56" pos:end="65:65"><expr pos:start="65:56" pos:end="65:65"><operator pos:start="65:56" pos:end="65:56">&amp;</operator><name pos:start="65:57" pos:end="65:65">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:24"><expr pos:start="67:5" pos:end="67:23"><call pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:17">qemu_opts_del</name><argument_list pos:start="67:18" pos:end="67:23">(<argument pos:start="67:19" pos:end="67:22"><expr pos:start="67:19" pos:end="67:22"><name pos:start="67:19" pos:end="67:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="81:5"><if pos:start="69:5" pos:end="81:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">&lt;</operator> <literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>)</condition> <block pos:start="69:18" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:17">

        <expr_stmt pos:start="71:9" pos:end="75:54"><expr pos:start="71:9" pos:end="75:53"><call pos:start="71:9" pos:end="75:53"><name pos:start="71:9" pos:end="71:24">error_setg_errno</name><argument_list pos:start="71:25" pos:end="75:53">(<argument pos:start="71:26" pos:end="71:29"><expr pos:start="71:26" pos:end="71:29"><name pos:start="71:26" pos:end="71:29">errp</name></expr></argument>, <argument pos:start="71:32" pos:end="71:35"><expr pos:start="71:32" pos:end="71:35"><operator pos:start="71:32" pos:end="71:32">-</operator><name pos:start="71:33" pos:end="71:35">ret</name></expr></argument>, <argument pos:start="71:38" pos:end="73:35"><expr pos:start="71:38" pos:end="73:35"><literal type="string" pos:start="71:38" pos:end="71:74">"Could not create temporary overlay "</literal>

                         <literal type="string" pos:start="73:26" pos:end="73:35">"'%s': %s"</literal></expr></argument>, <argument pos:start="73:38" pos:end="73:49"><expr pos:start="73:38" pos:end="73:49"><name pos:start="73:38" pos:end="73:49">tmp_filename</name></expr></argument>,

                         <argument pos:start="75:26" pos:end="75:52"><expr pos:start="75:26" pos:end="75:52"><call pos:start="75:26" pos:end="75:52"><name pos:start="75:26" pos:end="75:41">error_get_pretty</name><argument_list pos:start="75:42" pos:end="75:52">(<argument pos:start="75:43" pos:end="75:51"><expr pos:start="75:43" pos:end="75:51"><name pos:start="75:43" pos:end="75:51">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><call pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:18">error_free</name><argument_list pos:start="77:19" pos:end="77:29">(<argument pos:start="77:20" pos:end="77:28"><expr pos:start="77:20" pos:end="77:28"><name pos:start="77:20" pos:end="77:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:17">goto <name pos:start="79:14" pos:end="79:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:60">/* Prepare a new options QDict for the temporary file */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:20">snapshot_options</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:34"><name pos:start="87:24" pos:end="87:32">qdict_new</name><argument_list pos:start="87:33" pos:end="87:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="91:40"><expr pos:start="89:5" pos:end="91:39"><call pos:start="89:5" pos:end="91:39"><name pos:start="89:5" pos:end="89:13">qdict_put</name><argument_list pos:start="89:14" pos:end="91:39">(<argument pos:start="89:15" pos:end="89:30"><expr pos:start="89:15" pos:end="89:30"><name pos:start="89:15" pos:end="89:30">snapshot_options</name></expr></argument>, <argument pos:start="89:33" pos:end="89:45"><expr pos:start="89:33" pos:end="89:45"><literal type="string" pos:start="89:33" pos:end="89:45">"file.driver"</literal></expr></argument>,

              <argument pos:start="91:15" pos:end="91:38"><expr pos:start="91:15" pos:end="91:38"><call pos:start="91:15" pos:end="91:38"><name pos:start="91:15" pos:end="91:30">qstring_from_str</name><argument_list pos:start="91:31" pos:end="91:38">(<argument pos:start="91:32" pos:end="91:37"><expr pos:start="91:32" pos:end="91:37"><literal type="string" pos:start="91:32" pos:end="91:37">"file"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:46"><expr pos:start="93:5" pos:end="95:45"><call pos:start="93:5" pos:end="95:45"><name pos:start="93:5" pos:end="93:13">qdict_put</name><argument_list pos:start="93:14" pos:end="95:45">(<argument pos:start="93:15" pos:end="93:30"><expr pos:start="93:15" pos:end="93:30"><name pos:start="93:15" pos:end="93:30">snapshot_options</name></expr></argument>, <argument pos:start="93:33" pos:end="93:47"><expr pos:start="93:33" pos:end="93:47"><literal type="string" pos:start="93:33" pos:end="93:47">"file.filename"</literal></expr></argument>,

              <argument pos:start="95:15" pos:end="95:44"><expr pos:start="95:15" pos:end="95:44"><call pos:start="95:15" pos:end="95:44"><name pos:start="95:15" pos:end="95:30">qstring_from_str</name><argument_list pos:start="95:31" pos:end="95:44">(<argument pos:start="95:32" pos:end="95:43"><expr pos:start="95:32" pos:end="95:43"><name pos:start="95:32" pos:end="95:43">tmp_filename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:15">bs_snapshot</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:28"><name pos:start="99:19" pos:end="99:26">bdrv_new</name><argument_list pos:start="99:27" pos:end="99:28">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="105:52"><expr pos:start="103:5" pos:end="105:51"><name pos:start="103:5" pos:end="103:7">ret</name> <operator pos:start="103:9" pos:end="103:9">=</operator> <call pos:start="103:11" pos:end="105:51"><name pos:start="103:11" pos:end="103:19">bdrv_open</name><argument_list pos:start="103:20" pos:end="105:51">(<argument pos:start="103:21" pos:end="103:32"><expr pos:start="103:21" pos:end="103:32"><operator pos:start="103:21" pos:end="103:21">&amp;</operator><name pos:start="103:22" pos:end="103:32">bs_snapshot</name></expr></argument>, <argument pos:start="103:35" pos:end="103:38"><expr pos:start="103:35" pos:end="103:38"><name pos:start="103:35" pos:end="103:38">NULL</name></expr></argument>, <argument pos:start="103:41" pos:end="103:44"><expr pos:start="103:41" pos:end="103:44"><name pos:start="103:41" pos:end="103:44">NULL</name></expr></argument>, <argument pos:start="103:47" pos:end="103:62"><expr pos:start="103:47" pos:end="103:62"><name pos:start="103:47" pos:end="103:62">snapshot_options</name></expr></argument>,

                    <argument pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:25"><name pos:start="105:21" pos:end="105:25">flags</name></expr></argument>, <argument pos:start="105:28" pos:end="105:38"><expr pos:start="105:28" pos:end="105:38"><operator pos:start="105:28" pos:end="105:28">&amp;</operator><name pos:start="105:29" pos:end="105:38">bdrv_qcow2</name></expr></argument>, <argument pos:start="105:41" pos:end="105:50"><expr pos:start="105:41" pos:end="105:50"><operator pos:start="105:41" pos:end="105:41">&amp;</operator><name pos:start="105:42" pos:end="105:50">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:16">(<expr pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:13">&lt;</operator> <literal type="number" pos:start="107:15" pos:end="107:15">0</literal></expr>)</condition> <block pos:start="107:18" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:17">

        <expr_stmt pos:start="109:9" pos:end="109:41"><expr pos:start="109:9" pos:end="109:40"><call pos:start="109:9" pos:end="109:40"><name pos:start="109:9" pos:end="109:23">error_propagate</name><argument_list pos:start="109:24" pos:end="109:40">(<argument pos:start="109:25" pos:end="109:28"><expr pos:start="109:25" pos:end="109:28"><name pos:start="109:25" pos:end="109:28">errp</name></expr></argument>, <argument pos:start="109:31" pos:end="109:39"><expr pos:start="109:31" pos:end="109:39"><name pos:start="109:31" pos:end="109:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:17">goto <name pos:start="111:14" pos:end="111:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:33"><expr pos:start="117:5" pos:end="117:32"><call pos:start="117:5" pos:end="117:32"><name pos:start="117:5" pos:end="117:15">bdrv_append</name><argument_list pos:start="117:16" pos:end="117:32">(<argument pos:start="117:17" pos:end="117:27"><expr pos:start="117:17" pos:end="117:27"><name pos:start="117:17" pos:end="117:27">bs_snapshot</name></expr></argument>, <argument pos:start="117:30" pos:end="117:31"><expr pos:start="117:30" pos:end="117:31"><name pos:start="117:30" pos:end="117:31">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="121:1" pos:end="121:4"><name pos:start="121:1" pos:end="121:3">out</name>:</label>

    <expr_stmt pos:start="123:5" pos:end="123:25"><expr pos:start="123:5" pos:end="123:24"><call pos:start="123:5" pos:end="123:24"><name pos:start="123:5" pos:end="123:10">g_free</name><argument_list pos:start="123:11" pos:end="123:24">(<argument pos:start="123:12" pos:end="123:23"><expr pos:start="123:12" pos:end="123:23"><name pos:start="123:12" pos:end="123:23">tmp_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="125:5" pos:end="125:15">return <expr pos:start="125:12" pos:end="125:14"><name pos:start="125:12" pos:end="125:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
