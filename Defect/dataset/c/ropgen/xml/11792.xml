<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11792.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vc1t_read_header</name><parameter_list pos:start="1:28" pos:end="3:50">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:45">AVFormatParameters</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">fps</name></decl>, <decl pos:start="11:14" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:19">frames</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:10">frames</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:25"><name pos:start="15:14" pos:end="15:21">get_le24</name><argument_list pos:start="15:22" pos:end="15:25">(<argument pos:start="15:23" pos:end="15:24"><expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if<condition pos:start="17:7" pos:end="17:49">(<expr pos:start="17:8" pos:end="17:48"><call pos:start="17:8" pos:end="17:19"><name pos:start="17:8" pos:end="17:15">get_byte</name><argument_list pos:start="17:16" pos:end="17:19">(<argument pos:start="17:17" pos:end="17:18"><expr pos:start="17:17" pos:end="17:18"><name pos:start="17:17" pos:end="17:18">pb</name></expr></argument>)</argument_list></call> <operator pos:start="17:21" pos:end="17:22">!=</operator> <literal type="number" pos:start="17:24" pos:end="17:27">0xC5</literal> <operator pos:start="17:29" pos:end="17:30">||</operator> <call pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:39">get_le32</name><argument_list pos:start="17:40" pos:end="17:43">(<argument pos:start="17:41" pos:end="17:42"><expr pos:start="17:41" pos:end="17:42"><name pos:start="17:41" pos:end="17:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="17:45" pos:end="17:46">!=</operator> <literal type="number" pos:start="17:48" pos:end="17:48">4</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:26">/* init video codec */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:6">st</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:28"><name pos:start="25:10" pos:end="25:22">av_new_stream</name><argument_list pos:start="25:23" pos:end="25:28">(<argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">s</name></expr></argument>, <argument pos:start="25:27" pos:end="25:27"><expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:11">st</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:6">st</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:13">codec</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:25">codec_type</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:44">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:6">st</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:13">codec</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:23">codec_id</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:39">CODEC_ID_WMV3</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:57"><expr pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:6">st</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:13">codec</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:24">extradata</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:56"><name pos:start="39:28" pos:end="39:36">av_malloc</name><argument_list pos:start="39:37" pos:end="39:56">(<argument pos:start="39:38" pos:end="39:55"><expr pos:start="39:38" pos:end="39:55"><name pos:start="39:38" pos:end="39:55">VC1_EXTRADATA_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:51"><expr pos:start="41:5" pos:end="41:50"><name pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:6">st</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:13">codec</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:29">extradata_size</name></name> <operator pos:start="41:31" pos:end="41:31">=</operator> <name pos:start="41:33" pos:end="41:50">VC1_EXTRADATA_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:61"><expr pos:start="43:5" pos:end="43:60"><call pos:start="43:5" pos:end="43:60"><name pos:start="43:5" pos:end="43:14">get_buffer</name><argument_list pos:start="43:15" pos:end="43:60">(<argument pos:start="43:16" pos:end="43:17"><expr pos:start="43:16" pos:end="43:17"><name pos:start="43:16" pos:end="43:17">pb</name></expr></argument>, <argument pos:start="43:20" pos:end="43:39"><expr pos:start="43:20" pos:end="43:39"><name pos:start="43:20" pos:end="43:39"><name pos:start="43:20" pos:end="43:21">st</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:28">codec</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:39">extradata</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:59"><expr pos:start="43:42" pos:end="43:59"><name pos:start="43:42" pos:end="43:59">VC1_EXTRADATA_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:6">st</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:13">codec</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:21">height</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <call pos:start="45:25" pos:end="45:36"><name pos:start="45:25" pos:end="45:32">get_le32</name><argument_list pos:start="45:33" pos:end="45:36">(<argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:6">st</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:13">codec</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">width</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:35"><name pos:start="47:24" pos:end="47:31">get_le32</name><argument_list pos:start="47:32" pos:end="47:35">(<argument pos:start="47:33" pos:end="47:34"><expr pos:start="47:33" pos:end="47:34"><name pos:start="47:33" pos:end="47:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if<condition pos:start="49:7" pos:end="49:27">(<expr pos:start="49:8" pos:end="49:26"><call pos:start="49:8" pos:end="49:19"><name pos:start="49:8" pos:end="49:15">get_le32</name><argument_list pos:start="49:16" pos:end="49:19">(<argument pos:start="49:17" pos:end="49:18"><expr pos:start="49:17" pos:end="49:18"><name pos:start="49:17" pos:end="49:18">pb</name></expr></argument>)</argument_list></call> <operator pos:start="49:21" pos:end="49:22">!=</operator> <literal type="number" pos:start="49:24" pos:end="49:26">0xC</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:21"><expr pos:start="53:5" pos:end="53:20"><call pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:13">url_fskip</name><argument_list pos:start="53:14" pos:end="53:20">(<argument pos:start="53:15" pos:end="53:16"><expr pos:start="53:15" pos:end="53:16"><name pos:start="53:15" pos:end="53:16">pb</name></expr></argument>, <argument pos:start="53:19" pos:end="53:19"><expr pos:start="53:19" pos:end="53:19"><literal type="number" pos:start="53:19" pos:end="53:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:7">fps</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:22"><name pos:start="55:11" pos:end="55:18">get_le32</name><argument_list pos:start="55:19" pos:end="55:22">(<argument pos:start="55:20" pos:end="55:21"><expr pos:start="55:20" pos:end="55:21"><name pos:start="55:20" pos:end="55:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="59:41">if<condition pos:start="57:7" pos:end="57:17">(<expr pos:start="57:8" pos:end="57:16"><name pos:start="57:8" pos:end="57:10">fps</name> <operator pos:start="57:12" pos:end="57:13">==</operator> <operator pos:start="57:15" pos:end="57:15">-</operator><literal type="number" pos:start="57:16" pos:end="57:16">1</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:41"><block_content pos:start="59:9" pos:end="59:41">

        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><call pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:23">av_set_pts_info</name><argument_list pos:start="59:24" pos:end="59:40">(<argument pos:start="59:25" pos:end="59:26"><expr pos:start="59:25" pos:end="59:26"><name pos:start="59:25" pos:end="59:26">st</name></expr></argument>, <argument pos:start="59:29" pos:end="59:30"><expr pos:start="59:29" pos:end="59:30"><literal type="number" pos:start="59:29" pos:end="59:30">32</literal></expr></argument>, <argument pos:start="59:33" pos:end="59:33"><expr pos:start="59:33" pos:end="59:33"><literal type="number" pos:start="59:33" pos:end="59:33">1</literal></expr></argument>, <argument pos:start="59:36" pos:end="59:39"><expr pos:start="59:36" pos:end="59:39"><literal type="number" pos:start="59:36" pos:end="59:39">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="61:5" pos:end="67:5">else<block pos:start="61:9" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:30">

        <expr_stmt pos:start="63:9" pos:end="63:40"><expr pos:start="63:9" pos:end="63:39"><call pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:23">av_set_pts_info</name><argument_list pos:start="63:24" pos:end="63:39">(<argument pos:start="63:25" pos:end="63:26"><expr pos:start="63:25" pos:end="63:26"><name pos:start="63:25" pos:end="63:26">st</name></expr></argument>, <argument pos:start="63:29" pos:end="63:30"><expr pos:start="63:29" pos:end="63:30"><literal type="number" pos:start="63:29" pos:end="63:30">24</literal></expr></argument>, <argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">1</literal></expr></argument>, <argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">fps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:10">st</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:20">duration</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:29">frames</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
