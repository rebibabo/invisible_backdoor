<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2791.c" pos:tabs="8"><function pos:start="1:1" pos:end="161:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">svq1_motion_inter_4v_block</name><parameter_list pos:start="1:38" pos:end="5:80">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:52">MpegEncContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:78"><decl pos:start="1:58" pos:end="1:78"><type pos:start="1:58" pos:end="1:78"><name pos:start="1:58" pos:end="1:70">GetBitContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:78">bitbuf</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:54"><decl pos:start="3:39" pos:end="3:54"><type pos:start="3:39" pos:end="3:54"><name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:54">current</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:73"><decl pos:start="3:57" pos:end="3:73"><type pos:start="3:57" pos:end="3:73"><name pos:start="3:57" pos:end="3:63">uint8_t</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:73">previous</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:47"><decl pos:start="5:39" pos:end="5:47"><type pos:start="5:39" pos:end="5:47"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:47">pitch</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:65"><decl pos:start="5:50" pos:end="5:65"><type pos:start="5:50" pos:end="5:65"><name pos:start="5:50" pos:end="5:57">svq1_pmv</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type><name pos:start="5:60" pos:end="5:65">motion</name></decl></parameter>, <parameter pos:start="5:68" pos:end="5:72"><decl pos:start="5:68" pos:end="5:72"><type pos:start="5:68" pos:end="5:72"><name pos:start="5:68" pos:end="5:70">int</name></type> <name pos:start="5:72" pos:end="5:72">x</name></decl></parameter>, <parameter pos:start="5:75" pos:end="5:79"><decl pos:start="5:75" pos:end="5:79"><type pos:start="5:75" pos:end="5:79"><name pos:start="5:75" pos:end="5:77">int</name></type> <name pos:start="5:79" pos:end="5:79">y</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="161:1">{<block_content pos:start="9:5" pos:end="159:13">

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">svq1_pmv</name></type> <name pos:start="13:14" pos:end="13:15">mv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">svq1_pmv</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:20"><name pos:start="15:15" pos:end="15:17">pmv</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:17"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:17">result</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:46">/* predict and decode motion vector (0) */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:7">pmv</name><index pos:start="23:8" pos:end="23:10">[<expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">0</literal></expr>]</index></name> <operator pos:start="23:12" pos:end="23:12">=</operator> <operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:23"><name pos:start="23:15" pos:end="23:20">motion</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:9">y</name> <operator pos:start="25:11" pos:end="25:12">==</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>)</condition> <block pos:start="25:17" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:24">

        <expr_stmt pos:start="27:9" pos:end="29:24"><expr pos:start="27:9" pos:end="29:23"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:11">pmv</name><index pos:start="27:12" pos:end="27:14">[<expr pos:start="27:13" pos:end="27:13"><literal type="number" pos:start="27:13" pos:end="27:13">1</literal></expr>]</index></name> <operator pos:start="27:16" pos:end="27:16">=</operator>

        <name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:11">pmv</name><index pos:start="29:12" pos:end="29:14">[<expr pos:start="29:13" pos:end="29:13"><literal type="number" pos:start="29:13" pos:end="29:13">2</literal></expr>]</index></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:23"><name pos:start="29:18" pos:end="29:20">pmv</name><index pos:start="29:21" pos:end="29:23">[<expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:38">

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:11">pmv</name><index pos:start="33:12" pos:end="33:14">[<expr pos:start="33:13" pos:end="33:13"><literal type="number" pos:start="33:13" pos:end="33:13">1</literal></expr>]</index></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:37"><name pos:start="33:19" pos:end="33:24">motion</name><index pos:start="33:25" pos:end="33:37">[<expr pos:start="33:26" pos:end="33:36"><operator pos:start="33:26" pos:end="33:26">(</operator><name pos:start="33:27" pos:end="33:27">x</name> <operator pos:start="33:29" pos:end="33:29">/</operator> <literal type="number" pos:start="33:31" pos:end="33:31">8</literal><operator pos:start="33:32" pos:end="33:32">)</operator> <operator pos:start="33:34" pos:end="33:34">+</operator> <literal type="number" pos:start="33:36" pos:end="33:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:11">pmv</name><index pos:start="35:12" pos:end="35:14">[<expr pos:start="35:13" pos:end="35:13"><literal type="number" pos:start="35:13" pos:end="35:13">2</literal></expr>]</index></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:37"><name pos:start="35:19" pos:end="35:24">motion</name><index pos:start="35:25" pos:end="35:37">[<expr pos:start="35:26" pos:end="35:36"><operator pos:start="35:26" pos:end="35:26">(</operator><name pos:start="35:27" pos:end="35:27">x</name> <operator pos:start="35:29" pos:end="35:29">/</operator> <literal type="number" pos:start="35:31" pos:end="35:31">8</literal><operator pos:start="35:32" pos:end="35:32">)</operator> <operator pos:start="35:34" pos:end="35:34">+</operator> <literal type="number" pos:start="35:36" pos:end="35:36">4</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:57"><expr pos:start="41:5" pos:end="41:56"><name pos:start="41:5" pos:end="41:10">result</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:56"><name pos:start="41:14" pos:end="41:38">svq1_decode_motion_vector</name><argument_list pos:start="41:39" pos:end="41:56">(<argument pos:start="41:40" pos:end="41:45"><expr pos:start="41:40" pos:end="41:45"><name pos:start="41:40" pos:end="41:45">bitbuf</name></expr></argument>, <argument pos:start="41:48" pos:end="41:50"><expr pos:start="41:48" pos:end="41:50"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:50">mv</name></expr></argument>, <argument pos:start="41:53" pos:end="41:55"><expr pos:start="41:53" pos:end="41:55"><name pos:start="41:53" pos:end="41:55">pmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="47:22"><if pos:start="45:5" pos:end="47:22">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:14">result</name> <operator pos:start="45:16" pos:end="45:17">!=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:22"><block_content pos:start="47:9" pos:end="47:22">

        <return pos:start="47:9" pos:end="47:22">return <expr pos:start="47:16" pos:end="47:21"><name pos:start="47:16" pos:end="47:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:46">/* predict and decode motion vector (1) */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:17"><expr pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:10"><name pos:start="53:5" pos:end="53:7">pmv</name><index pos:start="53:8" pos:end="53:10">[<expr pos:start="53:9" pos:end="53:9"><literal type="number" pos:start="53:9" pos:end="53:9">0</literal></expr>]</index></name> <operator pos:start="53:12" pos:end="53:12">=</operator> <operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:16">mv</name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:15">(<expr pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:9">y</name> <operator pos:start="55:11" pos:end="55:12">==</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>)</condition> <block pos:start="55:17" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:24">

        <expr_stmt pos:start="57:9" pos:end="59:24"><expr pos:start="57:9" pos:end="59:23"><name pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:11">pmv</name><index pos:start="57:12" pos:end="57:14">[<expr pos:start="57:13" pos:end="57:13"><literal type="number" pos:start="57:13" pos:end="57:13">1</literal></expr>]</index></name> <operator pos:start="57:16" pos:end="57:16">=</operator>

        <name pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:11">pmv</name><index pos:start="59:12" pos:end="59:14">[<expr pos:start="59:13" pos:end="59:13"><literal type="number" pos:start="59:13" pos:end="59:13">2</literal></expr>]</index></name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:23"><name pos:start="59:18" pos:end="59:20">pmv</name><index pos:start="59:21" pos:end="59:23">[<expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="65:5">else <block pos:start="61:12" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:38">

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:11">pmv</name><index pos:start="63:12" pos:end="63:14">[<expr pos:start="63:13" pos:end="63:13"><literal type="number" pos:start="63:13" pos:end="63:13">1</literal></expr>]</index></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <operator pos:start="63:18" pos:end="63:18">&amp;</operator><name pos:start="63:19" pos:end="63:37"><name pos:start="63:19" pos:end="63:24">motion</name><index pos:start="63:25" pos:end="63:37">[<expr pos:start="63:26" pos:end="63:36"><operator pos:start="63:26" pos:end="63:26">(</operator><name pos:start="63:27" pos:end="63:27">x</name> <operator pos:start="63:29" pos:end="63:29">/</operator> <literal type="number" pos:start="63:31" pos:end="63:31">8</literal><operator pos:start="63:32" pos:end="63:32">)</operator> <operator pos:start="63:34" pos:end="63:34">+</operator> <literal type="number" pos:start="63:36" pos:end="63:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:64"><expr pos:start="67:5" pos:end="67:63"><name pos:start="67:5" pos:end="67:10">result</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <call pos:start="67:14" pos:end="67:63"><name pos:start="67:14" pos:end="67:38">svq1_decode_motion_vector</name><argument_list pos:start="67:39" pos:end="67:63">(<argument pos:start="67:40" pos:end="67:45"><expr pos:start="67:40" pos:end="67:45"><name pos:start="67:40" pos:end="67:45">bitbuf</name></expr></argument>, <argument pos:start="67:48" pos:end="67:57"><expr pos:start="67:48" pos:end="67:57"><operator pos:start="67:48" pos:end="67:48">&amp;</operator><name pos:start="67:49" pos:end="67:57"><name pos:start="67:49" pos:end="67:54">motion</name><index pos:start="67:55" pos:end="67:57">[<expr pos:start="67:56" pos:end="67:56"><literal type="number" pos:start="67:56" pos:end="67:56">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:60" pos:end="67:62"><expr pos:start="67:60" pos:end="67:62"><name pos:start="67:60" pos:end="67:62">pmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="73:22"><if pos:start="71:5" pos:end="73:22">if <condition pos:start="71:8" pos:end="71:20">(<expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:14">result</name> <operator pos:start="71:16" pos:end="71:17">!=</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:22"><block_content pos:start="73:9" pos:end="73:22">

        <return pos:start="73:9" pos:end="73:22">return <expr pos:start="73:16" pos:end="73:21"><name pos:start="73:16" pos:end="73:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:46">/* predict and decode motion vector (2) */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:24"><expr pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:10"><name pos:start="79:5" pos:end="79:7">pmv</name><index pos:start="79:8" pos:end="79:10">[<expr pos:start="79:9" pos:end="79:9"><literal type="number" pos:start="79:9" pos:end="79:9">1</literal></expr>]</index></name> <operator pos:start="79:12" pos:end="79:12">=</operator> <operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:23"><name pos:start="79:15" pos:end="79:20">motion</name><index pos:start="79:21" pos:end="79:23">[<expr pos:start="79:22" pos:end="79:22"><literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:10"><name pos:start="81:5" pos:end="81:7">pmv</name><index pos:start="81:8" pos:end="81:10">[<expr pos:start="81:9" pos:end="81:9"><literal type="number" pos:start="81:9" pos:end="81:9">2</literal></expr>]</index></name> <operator pos:start="81:12" pos:end="81:12">=</operator> <operator pos:start="81:14" pos:end="81:14">&amp;</operator><name pos:start="81:15" pos:end="81:33"><name pos:start="81:15" pos:end="81:20">motion</name><index pos:start="81:21" pos:end="81:33">[<expr pos:start="81:22" pos:end="81:32"><operator pos:start="81:22" pos:end="81:22">(</operator><name pos:start="81:23" pos:end="81:23">x</name> <operator pos:start="81:25" pos:end="81:25">/</operator> <literal type="number" pos:start="81:27" pos:end="81:27">8</literal><operator pos:start="81:28" pos:end="81:28">)</operator> <operator pos:start="81:30" pos:end="81:30">+</operator> <literal type="number" pos:start="81:32" pos:end="81:32">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:74"><expr pos:start="85:5" pos:end="85:73"><name pos:start="85:5" pos:end="85:10">result</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <call pos:start="85:14" pos:end="85:73"><name pos:start="85:14" pos:end="85:38">svq1_decode_motion_vector</name><argument_list pos:start="85:39" pos:end="85:73">(<argument pos:start="85:40" pos:end="85:45"><expr pos:start="85:40" pos:end="85:45"><name pos:start="85:40" pos:end="85:45">bitbuf</name></expr></argument>, <argument pos:start="85:48" pos:end="85:67"><expr pos:start="85:48" pos:end="85:67"><operator pos:start="85:48" pos:end="85:48">&amp;</operator><name pos:start="85:49" pos:end="85:67"><name pos:start="85:49" pos:end="85:54">motion</name><index pos:start="85:55" pos:end="85:67">[<expr pos:start="85:56" pos:end="85:66"><operator pos:start="85:56" pos:end="85:56">(</operator><name pos:start="85:57" pos:end="85:57">x</name> <operator pos:start="85:59" pos:end="85:59">/</operator> <literal type="number" pos:start="85:61" pos:end="85:61">8</literal><operator pos:start="85:62" pos:end="85:62">)</operator> <operator pos:start="85:64" pos:end="85:64">+</operator> <literal type="number" pos:start="85:66" pos:end="85:66">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:70" pos:end="85:72"><expr pos:start="85:70" pos:end="85:72"><name pos:start="85:70" pos:end="85:72">pmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="91:22"><if pos:start="89:5" pos:end="91:22">if <condition pos:start="89:8" pos:end="89:20">(<expr pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:14">result</name> <operator pos:start="89:16" pos:end="89:17">!=</operator> <literal type="number" pos:start="89:19" pos:end="89:19">0</literal></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:22"><block_content pos:start="91:9" pos:end="91:22">

        <return pos:start="91:9" pos:end="91:22">return <expr pos:start="91:16" pos:end="91:21"><name pos:start="91:16" pos:end="91:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:46">/* predict and decode motion vector (3) */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:34"><expr pos:start="97:5" pos:end="97:33"><name pos:start="97:5" pos:end="97:10"><name pos:start="97:5" pos:end="97:7">pmv</name><index pos:start="97:8" pos:end="97:10">[<expr pos:start="97:9" pos:end="97:9"><literal type="number" pos:start="97:9" pos:end="97:9">2</literal></expr>]</index></name> <operator pos:start="97:12" pos:end="97:12">=</operator> <operator pos:start="97:14" pos:end="97:14">&amp;</operator><name pos:start="97:15" pos:end="97:33"><name pos:start="97:15" pos:end="97:20">motion</name><index pos:start="97:21" pos:end="97:33">[<expr pos:start="97:22" pos:end="97:32"><operator pos:start="97:22" pos:end="97:22">(</operator><name pos:start="97:23" pos:end="97:23">x</name> <operator pos:start="97:25" pos:end="97:25">/</operator> <literal type="number" pos:start="97:27" pos:end="97:27">8</literal><operator pos:start="97:28" pos:end="97:28">)</operator> <operator pos:start="97:30" pos:end="97:30">+</operator> <literal type="number" pos:start="97:32" pos:end="97:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:34"><expr pos:start="99:5" pos:end="99:33"><name pos:start="99:5" pos:end="99:10"><name pos:start="99:5" pos:end="99:7">pmv</name><index pos:start="99:8" pos:end="99:10">[<expr pos:start="99:9" pos:end="99:9"><literal type="number" pos:start="99:9" pos:end="99:9">3</literal></expr>]</index></name> <operator pos:start="99:12" pos:end="99:12">=</operator> <operator pos:start="99:14" pos:end="99:14">&amp;</operator><name pos:start="99:15" pos:end="99:33"><name pos:start="99:15" pos:end="99:20">motion</name><index pos:start="99:21" pos:end="99:33">[<expr pos:start="99:22" pos:end="99:32"><operator pos:start="99:22" pos:end="99:22">(</operator><name pos:start="99:23" pos:end="99:23">x</name> <operator pos:start="99:25" pos:end="99:25">/</operator> <literal type="number" pos:start="99:27" pos:end="99:27">8</literal><operator pos:start="99:28" pos:end="99:28">)</operator> <operator pos:start="99:30" pos:end="99:30">+</operator> <literal type="number" pos:start="99:32" pos:end="99:32">3</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:60"><expr pos:start="103:5" pos:end="103:59"><name pos:start="103:5" pos:end="103:10">result</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <call pos:start="103:14" pos:end="103:59"><name pos:start="103:14" pos:end="103:38">svq1_decode_motion_vector</name><argument_list pos:start="103:39" pos:end="103:59">(<argument pos:start="103:40" pos:end="103:45"><expr pos:start="103:40" pos:end="103:45"><name pos:start="103:40" pos:end="103:45">bitbuf</name></expr></argument>, <argument pos:start="103:48" pos:end="103:53"><expr pos:start="103:48" pos:end="103:53"><name pos:start="103:48" pos:end="103:53"><name pos:start="103:48" pos:end="103:50">pmv</name><index pos:start="103:51" pos:end="103:53">[<expr pos:start="103:52" pos:end="103:52"><literal type="number" pos:start="103:52" pos:end="103:52">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="103:56" pos:end="103:58"><expr pos:start="103:56" pos:end="103:58"><name pos:start="103:56" pos:end="103:58">pmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="109:22"><if pos:start="107:5" pos:end="109:22">if <condition pos:start="107:8" pos:end="107:20">(<expr pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:14">result</name> <operator pos:start="107:16" pos:end="107:17">!=</operator> <literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:22"><block_content pos:start="109:9" pos:end="109:22">

        <return pos:start="109:9" pos:end="109:22">return <expr pos:start="109:16" pos:end="109:21"><name pos:start="109:16" pos:end="109:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:26">/* form predictions */</comment>

    <for pos:start="115:5" pos:end="155:5">for <control pos:start="115:9" pos:end="115:27">(<init pos:start="115:10" pos:end="115:15"><expr pos:start="115:10" pos:end="115:14"><name pos:start="115:10" pos:end="115:10">i</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <literal type="number" pos:start="115:14" pos:end="115:14">0</literal></expr>;</init> <condition pos:start="115:17" pos:end="115:22"><expr pos:start="115:17" pos:end="115:21"><name pos:start="115:17" pos:end="115:17">i</name> <operator pos:start="115:19" pos:end="115:19">&lt;</operator> <literal type="number" pos:start="115:21" pos:end="115:21">4</literal></expr>;</condition> <incr pos:start="115:24" pos:end="115:26"><expr pos:start="115:24" pos:end="115:26"><name pos:start="115:24" pos:end="115:24">i</name><operator pos:start="115:25" pos:end="115:26">++</operator></expr></incr>)</control> <block pos:start="115:29" pos:end="155:5">{<block_content pos:start="117:9" pos:end="153:25">

        <decl_stmt pos:start="117:9" pos:end="117:44"><decl pos:start="117:9" pos:end="117:43"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:15">mvx</name> <init pos:start="117:17" pos:end="117:43">= <expr pos:start="117:19" pos:end="117:43"><name pos:start="117:19" pos:end="117:24"><name pos:start="117:19" pos:end="117:21">pmv</name><index pos:start="117:22" pos:end="117:24">[<expr pos:start="117:23" pos:end="117:23"><name pos:start="117:23" pos:end="117:23">i</name></expr>]</index></name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:27">x</name> <operator pos:start="117:29" pos:end="117:29">+</operator> <operator pos:start="117:31" pos:end="117:31">(</operator><name pos:start="117:32" pos:end="117:32">i</name>  <operator pos:start="117:35" pos:end="117:35">&amp;</operator> <literal type="number" pos:start="117:37" pos:end="117:37">1</literal><operator pos:start="117:38" pos:end="117:38">)</operator> <operator pos:start="117:40" pos:end="117:40">*</operator> <literal type="number" pos:start="117:42" pos:end="117:43">16</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="119:9" pos:end="119:44"><decl pos:start="119:9" pos:end="119:43"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:15">mvy</name> <init pos:start="119:17" pos:end="119:43">= <expr pos:start="119:19" pos:end="119:43"><name pos:start="119:19" pos:end="119:24"><name pos:start="119:19" pos:end="119:21">pmv</name><index pos:start="119:22" pos:end="119:24">[<expr pos:start="119:23" pos:end="119:23"><name pos:start="119:23" pos:end="119:23">i</name></expr>]</index></name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:27">y</name> <operator pos:start="119:29" pos:end="119:29">+</operator> <operator pos:start="119:31" pos:end="119:31">(</operator><name pos:start="119:32" pos:end="119:32">i</name> <operator pos:start="119:34" pos:end="119:35">&gt;&gt;</operator> <literal type="number" pos:start="119:37" pos:end="119:37">1</literal><operator pos:start="119:38" pos:end="119:38">)</operator> <operator pos:start="119:40" pos:end="119:40">*</operator> <literal type="number" pos:start="119:42" pos:end="119:43">16</literal></expr></init></decl>;</decl_stmt>



        <comment type="line" pos:start="123:9" pos:end="123:38">// FIXME: clipping or padding?</comment>

        <if_stmt pos:start="125:9" pos:end="127:20"><if pos:start="125:9" pos:end="127:20">if <condition pos:start="125:12" pos:end="125:31">(<expr pos:start="125:13" pos:end="125:30"><name pos:start="125:13" pos:end="125:13">y</name> <operator pos:start="125:15" pos:end="125:15">+</operator> <operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:20">mvy</name> <operator pos:start="125:22" pos:end="125:23">&gt;&gt;</operator> <literal type="number" pos:start="125:25" pos:end="125:25">1</literal><operator pos:start="125:26" pos:end="125:26">)</operator> <operator pos:start="125:28" pos:end="125:28">&lt;</operator> <literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:20"><block_content pos:start="127:13" pos:end="127:20">

            <expr_stmt pos:start="127:13" pos:end="127:20"><expr pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:15">mvy</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <literal type="number" pos:start="127:19" pos:end="127:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="129:9" pos:end="131:20"><if pos:start="129:9" pos:end="131:20">if <condition pos:start="129:12" pos:end="129:31">(<expr pos:start="129:13" pos:end="129:30"><name pos:start="129:13" pos:end="129:13">x</name> <operator pos:start="129:15" pos:end="129:15">+</operator> <operator pos:start="129:17" pos:end="129:17">(</operator><name pos:start="129:18" pos:end="129:20">mvx</name> <operator pos:start="129:22" pos:end="129:23">&gt;&gt;</operator> <literal type="number" pos:start="129:25" pos:end="129:25">1</literal><operator pos:start="129:26" pos:end="129:26">)</operator> <operator pos:start="129:28" pos:end="129:28">&lt;</operator> <literal type="number" pos:start="129:30" pos:end="129:30">0</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:20"><block_content pos:start="131:13" pos:end="131:20">

            <expr_stmt pos:start="131:13" pos:end="131:20"><expr pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:15">mvx</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:69"><expr pos:start="135:9" pos:end="135:68"><name pos:start="135:9" pos:end="135:11">src</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <operator pos:start="135:15" pos:end="135:15">&amp;</operator><name pos:start="135:16" pos:end="135:68"><name pos:start="135:16" pos:end="135:23">previous</name><index pos:start="135:24" pos:end="135:68">[<expr pos:start="135:25" pos:end="135:67"><operator pos:start="135:25" pos:end="135:25">(</operator><name pos:start="135:26" pos:end="135:26">x</name> <operator pos:start="135:28" pos:end="135:28">+</operator> <operator pos:start="135:30" pos:end="135:30">(</operator><name pos:start="135:31" pos:end="135:33">mvx</name> <operator pos:start="135:35" pos:end="135:36">&gt;&gt;</operator> <literal type="number" pos:start="135:38" pos:end="135:38">1</literal><operator pos:start="135:39" pos:end="135:39">)</operator><operator pos:start="135:40" pos:end="135:40">)</operator> <operator pos:start="135:42" pos:end="135:42">+</operator> <operator pos:start="135:44" pos:end="135:44">(</operator><name pos:start="135:45" pos:end="135:45">y</name> <operator pos:start="135:47" pos:end="135:47">+</operator> <operator pos:start="135:49" pos:end="135:49">(</operator><name pos:start="135:50" pos:end="135:52">mvy</name> <operator pos:start="135:54" pos:end="135:55">&gt;&gt;</operator> <literal type="number" pos:start="135:57" pos:end="135:57">1</literal><operator pos:start="135:58" pos:end="135:58">)</operator><operator pos:start="135:59" pos:end="135:59">)</operator> <operator pos:start="135:61" pos:end="135:61">*</operator> <name pos:start="135:63" pos:end="135:67">pitch</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:22"><expr pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:11">dst</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <name pos:start="137:15" pos:end="137:21">current</name></expr>;</expr_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:83"><expr pos:start="141:9" pos:end="141:82"><name pos:start="141:9" pos:end="141:62"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:14">dsp</name><operator pos:start="141:15" pos:end="141:15">.</operator><name pos:start="141:16" pos:end="141:29">put_pixels_tab</name><index pos:start="141:30" pos:end="141:32">[<expr pos:start="141:31" pos:end="141:31"><literal type="number" pos:start="141:31" pos:end="141:31">1</literal></expr>]</index><index pos:start="141:33" pos:end="141:62">[<expr pos:start="141:34" pos:end="141:61"><operator pos:start="141:34" pos:end="141:34">(</operator><operator pos:start="141:35" pos:end="141:35">(</operator><name pos:start="141:36" pos:end="141:38">mvy</name> <operator pos:start="141:40" pos:end="141:40">&amp;</operator> <literal type="number" pos:start="141:42" pos:end="141:42">1</literal><operator pos:start="141:43" pos:end="141:43">)</operator> <operator pos:start="141:45" pos:end="141:46">&lt;&lt;</operator> <literal type="number" pos:start="141:48" pos:end="141:48">1</literal><operator pos:start="141:49" pos:end="141:49">)</operator> <operator pos:start="141:51" pos:end="141:51">|</operator> <operator pos:start="141:53" pos:end="141:53">(</operator><name pos:start="141:54" pos:end="141:56">mvx</name> <operator pos:start="141:58" pos:end="141:58">&amp;</operator> <literal type="number" pos:start="141:60" pos:end="141:60">1</literal><operator pos:start="141:61" pos:end="141:61">)</operator></expr>]</index></name><operator pos:start="141:63" pos:end="141:63">(</operator><name pos:start="141:64" pos:end="141:66">dst</name><operator pos:start="141:67" pos:end="141:67">,</operator> <name pos:start="141:69" pos:end="141:71">src</name><operator pos:start="141:72" pos:end="141:72">,</operator> <name pos:start="141:74" pos:end="141:78">pitch</name><operator pos:start="141:79" pos:end="141:79">,</operator> <literal type="number" pos:start="141:81" pos:end="141:81">8</literal><operator pos:start="141:82" pos:end="141:82">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="145:9" pos:end="145:31">/* select next block */</comment>

        <if_stmt pos:start="147:9" pos:end="153:25"><if pos:start="147:9" pos:end="149:39">if <condition pos:start="147:12" pos:end="147:18">(<expr pos:start="147:13" pos:end="147:17"><name pos:start="147:13" pos:end="147:13">i</name> <operator pos:start="147:15" pos:end="147:15">&amp;</operator> <literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:39"><block_content pos:start="149:13" pos:end="149:39">

            <expr_stmt pos:start="149:13" pos:end="149:39"><expr pos:start="149:13" pos:end="149:38"><name pos:start="149:13" pos:end="149:19">current</name> <operator pos:start="149:21" pos:end="149:22">+=</operator> <literal type="number" pos:start="149:24" pos:end="149:24">8</literal> <operator pos:start="149:26" pos:end="149:26">*</operator> <operator pos:start="149:28" pos:end="149:28">(</operator><name pos:start="149:29" pos:end="149:33">pitch</name> <operator pos:start="149:35" pos:end="149:35">-</operator> <literal type="number" pos:start="149:37" pos:end="149:37">1</literal><operator pos:start="149:38" pos:end="149:38">)</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="151:9" pos:end="153:25">else<block type="pseudo" pos:start="153:13" pos:end="153:25"><block_content pos:start="153:13" pos:end="153:25">

            <expr_stmt pos:start="153:13" pos:end="153:25"><expr pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:19">current</name> <operator pos:start="153:21" pos:end="153:22">+=</operator> <literal type="number" pos:start="153:24" pos:end="153:24">8</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="159:5" pos:end="159:13">return <expr pos:start="159:12" pos:end="159:12"><literal type="number" pos:start="159:12" pos:end="159:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
