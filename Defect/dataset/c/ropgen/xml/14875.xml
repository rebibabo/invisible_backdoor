<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14875.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">RawAIOCB</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:30">raw_aio_setup</name><parameter_list pos:start="1:31" pos:end="5:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">buf</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:56">nb_sectors</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:37"><decl pos:start="5:9" pos:end="5:37"><type pos:start="5:9" pos:end="5:37"><name pos:start="5:9" pos:end="5:33">BlockDriverCompletionFunc</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:37">cb</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:51"><decl pos:start="5:40" pos:end="5:51"><type pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:43">void</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:51">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="53:1">{<block_content pos:start="9:5" pos:end="51:15">

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BDRVRawState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:32">= <expr pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:24">bs</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">RawAIOCB</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">acb</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:20"><if pos:start="15:5" pos:end="17:20">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><call pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:15">fd_open</name><argument_list pos:start="15:16" pos:end="15:19">(<argument pos:start="15:17" pos:end="15:18"><expr pos:start="15:17" pos:end="15:18"><name pos:start="15:17" pos:end="15:18">bs</name></expr></argument>)</argument_list></call> <operator pos:start="15:21" pos:end="15:21">&lt;</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:20"><block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:7">acb</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:38"><name pos:start="21:11" pos:end="21:22">qemu_aio_get</name><argument_list pos:start="21:23" pos:end="21:38">(<argument pos:start="21:24" pos:end="21:25"><expr pos:start="21:24" pos:end="21:25"><name pos:start="21:24" pos:end="21:25">bs</name></expr></argument>, <argument pos:start="21:28" pos:end="21:29"><expr pos:start="21:28" pos:end="21:29"><name pos:start="21:28" pos:end="21:29">cb</name></expr></argument>, <argument pos:start="21:32" pos:end="21:37"><expr pos:start="21:32" pos:end="21:37"><name pos:start="21:32" pos:end="21:37">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:20"><if pos:start="23:5" pos:end="25:20">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">acb</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:20"><block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:7">acb</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:11">fd</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:32"><name pos:start="27:15" pos:end="27:29">raw_fd_pool_get</name><argument_list pos:start="27:30" pos:end="27:32">(<argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:7">acb</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:14">aiocb</name><operator pos:start="29:15" pos:end="29:15">.</operator><name pos:start="29:16" pos:end="29:25">aio_fildes</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:35"><name pos:start="29:29" pos:end="29:31">acb</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:35">fd</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:50"><expr pos:start="31:5" pos:end="31:49"><name pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:7">acb</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:14">aiocb</name><operator pos:start="31:15" pos:end="31:15">.</operator><name pos:start="31:16" pos:end="31:27">aio_sigevent</name><operator pos:start="31:28" pos:end="31:28">.</operator><name pos:start="31:29" pos:end="31:39">sigev_signo</name></name> <operator pos:start="31:41" pos:end="31:41">=</operator> <name pos:start="31:43" pos:end="31:49">SIGUSR2</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:56"><expr pos:start="33:5" pos:end="33:55"><name pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:7">acb</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:14">aiocb</name><operator pos:start="33:15" pos:end="33:15">.</operator><name pos:start="33:16" pos:end="33:27">aio_sigevent</name><operator pos:start="33:28" pos:end="33:28">.</operator><name pos:start="33:29" pos:end="33:40">sigev_notify</name></name> <operator pos:start="33:42" pos:end="33:42">=</operator> <name pos:start="33:44" pos:end="33:55">SIGEV_SIGNAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:7">acb</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:14">aiocb</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:22">aio_buf</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:28">buf</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:49"><if pos:start="37:5" pos:end="39:44">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18">nb_sectors</name> <operator pos:start="37:20" pos:end="37:20">&lt;</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:44"><block_content pos:start="39:9" pos:end="39:44">

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:11">acb</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">aiocb</name><operator pos:start="39:19" pos:end="39:19">.</operator><name pos:start="39:20" pos:end="39:29">aio_nbytes</name></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <operator pos:start="39:33" pos:end="39:33">-</operator><name pos:start="39:34" pos:end="39:43">nb_sectors</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="41:5" pos:end="43:49">else<block type="pseudo" pos:start="43:9" pos:end="43:49"><block_content pos:start="43:9" pos:end="43:49">

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:11">acb</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:18">aiocb</name><operator pos:start="43:19" pos:end="43:19">.</operator><name pos:start="43:20" pos:end="43:29">aio_nbytes</name></name> <operator pos:start="43:31" pos:end="43:31">=</operator> <name pos:start="43:33" pos:end="43:42">nb_sectors</name> <operator pos:start="43:44" pos:end="43:44">*</operator> <literal type="number" pos:start="43:46" pos:end="43:48">512</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:7">acb</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:14">aiocb</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:25">aio_offset</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:38">sector_num</name> <operator pos:start="45:40" pos:end="45:40">*</operator> <literal type="number" pos:start="45:42" pos:end="45:44">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:7">acb</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:13">next</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:42"><name pos:start="47:17" pos:end="47:31">posix_aio_state</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:42">first_aio</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:19">posix_aio_state</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:30">first_aio</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <name pos:start="49:34" pos:end="49:36">acb</name></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">acb</name></expr>;</return>

</block_content>}</block></function>
</unit>
