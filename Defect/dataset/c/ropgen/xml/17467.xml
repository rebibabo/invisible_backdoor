<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17467.c" pos:tabs="8"><function pos:start="1:1" pos:end="293:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">fourxm_read_header</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="293:15">{<block_content pos:start="5:5" pos:end="293:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:27">fourcc_tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">header_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">FourxmDemuxContext</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:30">fourxm</name> <init pos:start="13:32" pos:end="13:45">= <expr pos:start="13:34" pos:end="13:45"><name pos:start="13:34" pos:end="13:45"><name pos:start="13:34" pos:end="13:34">s</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:25">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">AVStream</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:10">fourxm</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:23">track_count</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:10">fourxm</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:18">tracks</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:10">fourxm</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:15">fps</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:21">1.0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:41">/* skip the first 3 32-bit numbers */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><call pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:13">avio_skip</name><argument_list pos:start="33:14" pos:end="33:21">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>, <argument pos:start="33:19" pos:end="33:20"><expr pos:start="33:19" pos:end="33:20"><literal type="number" pos:start="33:19" pos:end="33:20">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:29">/* check for LIST-HEAD */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><call pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:19">GET_LIST_HEADER</name><argument_list pos:start="39:20" pos:end="39:21">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:15">header_size</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:22">size</name> <operator pos:start="41:24" pos:end="41:24">-</operator> <literal type="number" pos:start="41:26" pos:end="41:26">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:35"><if pos:start="43:5" pos:end="45:35">if <condition pos:start="43:8" pos:end="43:50">(<expr pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:18">fourcc_tag</name> <operator pos:start="43:20" pos:end="43:21">!=</operator> <name pos:start="43:23" pos:end="43:30">HEAD_TAG</name> <operator pos:start="43:32" pos:end="43:33">||</operator> <name pos:start="43:35" pos:end="43:45">header_size</name> <operator pos:start="43:47" pos:end="43:47">&lt;</operator> <literal type="number" pos:start="43:49" pos:end="43:49">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:35"><block_content pos:start="45:9" pos:end="45:35">

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:64">/* allocate space for the header and load the whole thing */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:10">header</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:35"><name pos:start="51:14" pos:end="51:22">av_malloc</name><argument_list pos:start="51:23" pos:end="51:35">(<argument pos:start="51:24" pos:end="51:34"><expr pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:34">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:31"><if pos:start="53:5" pos:end="55:31">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:15">header</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:31"><block_content pos:start="55:9" pos:end="55:31">

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="293:15"><if pos:start="57:5" pos:end="293:15">if <condition pos:start="57:8" pos:end="57:58">(<expr pos:start="57:9" pos:end="57:57"><call pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:17">avio_read</name><argument_list pos:start="57:18" pos:end="57:42">(<argument pos:start="57:19" pos:end="57:20"><expr pos:start="57:19" pos:end="57:20"><name pos:start="57:19" pos:end="57:20">pb</name></expr></argument>, <argument pos:start="57:23" pos:end="57:28"><expr pos:start="57:23" pos:end="57:28"><name pos:start="57:23" pos:end="57:28">header</name></expr></argument>, <argument pos:start="57:31" pos:end="57:41"><expr pos:start="57:31" pos:end="57:41"><name pos:start="57:31" pos:end="57:41">header_size</name></expr></argument>)</argument_list></call> <operator pos:start="57:44" pos:end="57:45">!=</operator> <name pos:start="57:47" pos:end="57:57">header_size</name></expr>)</condition><block pos:start="57:59" pos:end="293:15">{<block_content pos:start="59:9" pos:end="293:15">

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><call pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:15">av_free</name><argument_list pos:start="59:16" pos:end="59:23">(<argument pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:22">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:28">return <expr pos:start="61:16" pos:end="61:27"><call pos:start="61:16" pos:end="61:27"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:27">(<argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>




    <comment type="block" pos:start="66:5" pos:end="66:80">/* take the lazy approach and search for any and all vtrk and strk chunks */</comment>

    <for pos:start="68:5" pos:end="293:15">for <control pos:start="68:9" pos:end="68:41">(<init pos:start="68:10" pos:end="68:15"><expr pos:start="68:10" pos:end="68:14"><name pos:start="68:10" pos:end="68:10">i</name> <operator pos:start="68:12" pos:end="68:12">=</operator> <literal type="number" pos:start="68:14" pos:end="68:14">0</literal></expr>;</init> <condition pos:start="68:17" pos:end="68:36"><expr pos:start="68:17" pos:end="68:35"><name pos:start="68:17" pos:end="68:17">i</name> <operator pos:start="68:19" pos:end="68:19">&lt;</operator> <name pos:start="68:21" pos:end="68:31">header_size</name> <operator pos:start="68:33" pos:end="68:33">-</operator> <literal type="number" pos:start="68:35" pos:end="68:35">8</literal></expr>;</condition> <incr pos:start="68:38" pos:end="68:40"><expr pos:start="68:38" pos:end="68:40"><name pos:start="68:38" pos:end="68:38">i</name><operator pos:start="68:39" pos:end="68:40">++</operator></expr></incr>)</control> <block pos:start="68:43" pos:end="293:15">{<block_content pos:start="70:9" pos:end="293:15">

        <expr_stmt pos:start="70:9" pos:end="70:41"><expr pos:start="70:9" pos:end="70:40"><name pos:start="70:9" pos:end="70:18">fourcc_tag</name> <operator pos:start="70:20" pos:end="70:20">=</operator> <call pos:start="70:22" pos:end="70:40"><name pos:start="70:22" pos:end="70:28">AV_RL32</name><argument_list pos:start="70:29" pos:end="70:40">(<argument pos:start="70:30" pos:end="70:39"><expr pos:start="70:30" pos:end="70:39"><operator pos:start="70:30" pos:end="70:30">&amp;</operator><name pos:start="70:31" pos:end="70:39"><name pos:start="70:31" pos:end="70:36">header</name><index pos:start="70:37" pos:end="70:39">[<expr pos:start="70:38" pos:end="70:38"><name pos:start="70:38" pos:end="70:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="72:9" pos:end="72:39"><expr pos:start="72:9" pos:end="72:38"><name pos:start="72:9" pos:end="72:12">size</name> <operator pos:start="72:14" pos:end="72:14">=</operator> <call pos:start="72:16" pos:end="72:38"><name pos:start="72:16" pos:end="72:22">AV_RL32</name><argument_list pos:start="72:23" pos:end="72:38">(<argument pos:start="72:24" pos:end="72:37"><expr pos:start="72:24" pos:end="72:37"><operator pos:start="72:24" pos:end="72:24">&amp;</operator><name pos:start="72:25" pos:end="72:37"><name pos:start="72:25" pos:end="72:30">header</name><index pos:start="72:31" pos:end="72:37">[<expr pos:start="72:32" pos:end="72:36"><name pos:start="72:32" pos:end="72:32">i</name> <operator pos:start="72:34" pos:end="72:34">+</operator> <literal type="number" pos:start="72:36" pos:end="72:36">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="74:9" pos:end="293:15"><if pos:start="74:9" pos:end="293:15">if <condition pos:start="74:12" pos:end="74:93">(<expr pos:start="74:13" pos:end="74:92"><name pos:start="74:13" pos:end="74:16">size</name> <operator pos:start="74:18" pos:end="74:18">&gt;</operator> <name pos:start="74:20" pos:end="74:30">header_size</name> <operator pos:start="74:32" pos:end="74:32">-</operator> <name pos:start="74:34" pos:end="74:34">i</name> <operator pos:start="74:36" pos:end="74:36">-</operator> <literal type="number" pos:start="74:38" pos:end="74:38">8</literal> <operator pos:start="74:40" pos:end="74:41">&amp;&amp;</operator> <operator pos:start="74:43" pos:end="74:43">(</operator><name pos:start="74:44" pos:end="74:53">fourcc_tag</name> <operator pos:start="74:55" pos:end="74:56">==</operator> <name pos:start="74:58" pos:end="74:65">vtrk_TAG</name> <operator pos:start="74:67" pos:end="74:68">||</operator> <name pos:start="74:70" pos:end="74:79">fourcc_tag</name> <operator pos:start="74:81" pos:end="74:82">==</operator> <name pos:start="74:84" pos:end="74:91">strk_TAG</name><operator pos:start="74:92" pos:end="74:92">)</operator></expr>)</condition> <block pos:start="74:95" pos:end="293:15">{<block_content pos:start="76:13" pos:end="293:15">

            <expr_stmt pos:start="76:13" pos:end="76:98"><expr pos:start="76:13" pos:end="76:97"><call pos:start="76:13" pos:end="76:97"><name pos:start="76:13" pos:end="76:18">av_log</name><argument_list pos:start="76:19" pos:end="76:97">(<argument pos:start="76:20" pos:end="76:20"><expr pos:start="76:20" pos:end="76:20"><name pos:start="76:20" pos:end="76:20">s</name></expr></argument>, <argument pos:start="76:23" pos:end="76:34"><expr pos:start="76:23" pos:end="76:34"><name pos:start="76:23" pos:end="76:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="76:37" pos:end="76:69"><expr pos:start="76:37" pos:end="76:69"><literal type="string" pos:start="76:37" pos:end="76:69">"chunk larger than array %d&gt;%d\n"</literal></expr></argument>, <argument pos:start="76:72" pos:end="76:75"><expr pos:start="76:72" pos:end="76:75"><name pos:start="76:72" pos:end="76:75">size</name></expr></argument>, <argument pos:start="76:78" pos:end="76:96"><expr pos:start="76:78" pos:end="76:96"><name pos:start="76:78" pos:end="76:88">header_size</name> <operator pos:start="76:90" pos:end="76:90">-</operator> <name pos:start="76:92" pos:end="76:92">i</name> <operator pos:start="76:94" pos:end="76:94">-</operator> <literal type="number" pos:start="76:96" pos:end="76:96">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="78:13" pos:end="78:39">return <expr pos:start="78:20" pos:end="78:38"><name pos:start="78:20" pos:end="78:38">AVERROR_INVALIDDATA</name></expr>;</return>




        <if_stmt pos:start="83:9" pos:end="293:15"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:35">(<expr pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:22">fourcc_tag</name> <operator pos:start="83:24" pos:end="83:25">==</operator> <name pos:start="83:27" pos:end="83:34">std__TAG</name></expr>)</condition> <block pos:start="83:37" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:65">

            <expr_stmt pos:start="85:13" pos:end="85:65"><expr pos:start="85:13" pos:end="85:64"><name pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:18">fourxm</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:23">fps</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <call pos:start="85:27" pos:end="85:64"><name pos:start="85:27" pos:end="85:38">av_int2float</name><argument_list pos:start="85:39" pos:end="85:64">(<argument pos:start="85:40" pos:end="85:63"><expr pos:start="85:40" pos:end="85:63"><call pos:start="85:40" pos:end="85:63"><name pos:start="85:40" pos:end="85:46">AV_RL32</name><argument_list pos:start="85:47" pos:end="85:63">(<argument pos:start="85:48" pos:end="85:62"><expr pos:start="85:48" pos:end="85:62"><operator pos:start="85:48" pos:end="85:48">&amp;</operator><name pos:start="85:49" pos:end="85:62"><name pos:start="85:49" pos:end="85:54">header</name><index pos:start="85:55" pos:end="85:62">[<expr pos:start="85:56" pos:end="85:61"><name pos:start="85:56" pos:end="85:56">i</name> <operator pos:start="85:58" pos:end="85:58">+</operator> <literal type="number" pos:start="85:60" pos:end="85:61">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="87:11" pos:end="293:15">else if <condition pos:start="87:19" pos:end="87:42">(<expr pos:start="87:20" pos:end="87:41"><name pos:start="87:20" pos:end="87:29">fourcc_tag</name> <operator pos:start="87:31" pos:end="87:32">==</operator> <name pos:start="87:34" pos:end="87:41">vtrk_TAG</name></expr>)</condition> <block pos:start="87:44" pos:end="293:15">{<block_content pos:start="91:13" pos:end="293:15">

            <comment type="block" pos:start="89:13" pos:end="89:49">/* check that there is enough data */</comment>

            <if_stmt pos:start="91:13" pos:end="293:15"><if pos:start="91:13" pos:end="293:15">if <condition pos:start="91:16" pos:end="91:34">(<expr pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:20">size</name> <operator pos:start="91:22" pos:end="91:23">!=</operator> <name pos:start="91:25" pos:end="91:33">vtrk_SIZE</name></expr>)</condition> <block pos:start="91:36" pos:end="293:15">{<block_content pos:start="93:17" pos:end="293:15">

                <expr_stmt pos:start="93:17" pos:end="93:41"><expr pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:19">ret</name><operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:40">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:54"><expr pos:start="97:13" pos:end="97:53"><name pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:18">fourxm</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:25">width</name></name>  <operator pos:start="97:28" pos:end="97:28">=</operator> <call pos:start="97:30" pos:end="97:53"><name pos:start="97:30" pos:end="97:36">AV_RL32</name><argument_list pos:start="97:37" pos:end="97:53">(<argument pos:start="97:38" pos:end="97:52"><expr pos:start="97:38" pos:end="97:52"><operator pos:start="97:38" pos:end="97:38">&amp;</operator><name pos:start="97:39" pos:end="97:52"><name pos:start="97:39" pos:end="97:44">header</name><index pos:start="97:45" pos:end="97:52">[<expr pos:start="97:46" pos:end="97:51"><name pos:start="97:46" pos:end="97:46">i</name> <operator pos:start="97:48" pos:end="97:48">+</operator> <literal type="number" pos:start="97:50" pos:end="97:51">36</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:54"><expr pos:start="99:13" pos:end="99:53"><name pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:18">fourxm</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:26">height</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <call pos:start="99:30" pos:end="99:53"><name pos:start="99:30" pos:end="99:36">AV_RL32</name><argument_list pos:start="99:37" pos:end="99:53">(<argument pos:start="99:38" pos:end="99:52"><expr pos:start="99:38" pos:end="99:52"><operator pos:start="99:38" pos:end="99:38">&amp;</operator><name pos:start="99:39" pos:end="99:52"><name pos:start="99:39" pos:end="99:44">header</name><index pos:start="99:45" pos:end="99:52">[<expr pos:start="99:46" pos:end="99:51"><name pos:start="99:46" pos:end="99:46">i</name> <operator pos:start="99:48" pos:end="99:48">+</operator> <literal type="number" pos:start="99:50" pos:end="99:51">40</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="103:13" pos:end="103:41">/* allocate a new AVStream */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:46"><expr pos:start="105:13" pos:end="105:45"><name pos:start="105:13" pos:end="105:14">st</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:45"><name pos:start="105:18" pos:end="105:36">avformat_new_stream</name><argument_list pos:start="105:37" pos:end="105:45">(<argument pos:start="105:38" pos:end="105:38"><expr pos:start="105:38" pos:end="105:38"><name pos:start="105:38" pos:end="105:38">s</name></expr></argument>, <argument pos:start="105:41" pos:end="105:44"><expr pos:start="105:41" pos:end="105:44"><name pos:start="105:41" pos:end="105:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="293:15"><if pos:start="107:13" pos:end="139:9">if <condition pos:start="107:16" pos:end="107:20">(<expr pos:start="107:17" pos:end="107:19"><operator pos:start="107:17" pos:end="107:17">!</operator><name pos:start="107:18" pos:end="107:19">st</name></expr>)</condition><block pos:start="107:21" pos:end="139:9">{<block_content pos:start="109:17" pos:end="137:26">

                <expr_stmt pos:start="109:17" pos:end="109:37"><expr pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:19">ret</name><operator pos:start="109:20" pos:end="109:20">=</operator> <call pos:start="109:22" pos:end="109:36"><name pos:start="109:22" pos:end="109:28">AVERROR</name><argument_list pos:start="109:29" pos:end="109:36">(<argument pos:start="109:30" pos:end="109:35"><expr pos:start="109:30" pos:end="109:35"><name pos:start="109:30" pos:end="109:35">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="113:13" pos:end="113:56"><expr pos:start="113:13" pos:end="113:55"><call pos:start="113:13" pos:end="113:55"><name pos:start="113:13" pos:end="113:31">avpriv_set_pts_info</name><argument_list pos:start="113:32" pos:end="113:55">(<argument pos:start="113:33" pos:end="113:34"><expr pos:start="113:33" pos:end="113:34"><name pos:start="113:33" pos:end="113:34">st</name></expr></argument>, <argument pos:start="113:37" pos:end="113:38"><expr pos:start="113:37" pos:end="113:38"><literal type="number" pos:start="113:37" pos:end="113:38">60</literal></expr></argument>, <argument pos:start="113:41" pos:end="113:41"><expr pos:start="113:41" pos:end="113:41"><literal type="number" pos:start="113:41" pos:end="113:41">1</literal></expr></argument>, <argument pos:start="113:44" pos:end="113:54"><expr pos:start="113:44" pos:end="113:54"><name pos:start="113:44" pos:end="113:54"><name pos:start="113:44" pos:end="113:49">fourxm</name><operator pos:start="113:50" pos:end="113:51">-&gt;</operator><name pos:start="113:52" pos:end="113:54">fps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:51"><expr pos:start="117:13" pos:end="117:50"><name pos:start="117:13" pos:end="117:38"><name pos:start="117:13" pos:end="117:18">fourxm</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:38">video_stream_index</name></name> <operator pos:start="117:40" pos:end="117:40">=</operator> <name pos:start="117:42" pos:end="117:50"><name pos:start="117:42" pos:end="117:43">st</name><operator pos:start="117:44" pos:end="117:45">-&gt;</operator><name pos:start="117:46" pos:end="117:50">index</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:55"><expr pos:start="121:13" pos:end="121:54"><name pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:14">st</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:21">codec</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:33">codec_type</name></name> <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:54">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:47"><expr pos:start="123:13" pos:end="123:46"><name pos:start="123:13" pos:end="123:31"><name pos:start="123:13" pos:end="123:14">st</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:21">codec</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:31">codec_id</name></name> <operator pos:start="123:33" pos:end="123:33">=</operator> <name pos:start="123:35" pos:end="123:46">CODEC_ID_4XM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:42"><expr pos:start="125:13" pos:end="125:41"><name pos:start="125:13" pos:end="125:37"><name pos:start="125:13" pos:end="125:14">st</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:21">codec</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:37">extradata_size</name></name> <operator pos:start="125:39" pos:end="125:39">=</operator> <literal type="number" pos:start="125:41" pos:end="125:41">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:48"><expr pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:14">st</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:21">codec</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:32">extradata</name></name> <operator pos:start="127:34" pos:end="127:34">=</operator> <call pos:start="127:36" pos:end="127:47"><name pos:start="127:36" pos:end="127:44">av_malloc</name><argument_list pos:start="127:45" pos:end="127:47">(<argument pos:start="127:46" pos:end="127:46"><expr pos:start="127:46" pos:end="127:46"><literal type="number" pos:start="127:46" pos:end="127:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:68"><expr pos:start="129:13" pos:end="129:67"><call pos:start="129:13" pos:end="129:67"><name pos:start="129:13" pos:end="129:19">AV_WL32</name><argument_list pos:start="129:20" pos:end="129:67">(<argument pos:start="129:21" pos:end="129:40"><expr pos:start="129:21" pos:end="129:40"><name pos:start="129:21" pos:end="129:40"><name pos:start="129:21" pos:end="129:22">st</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:29">codec</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:40">extradata</name></name></expr></argument>, <argument pos:start="129:43" pos:end="129:66"><expr pos:start="129:43" pos:end="129:66"><call pos:start="129:43" pos:end="129:66"><name pos:start="129:43" pos:end="129:49">AV_RL32</name><argument_list pos:start="129:50" pos:end="129:66">(<argument pos:start="129:51" pos:end="129:65"><expr pos:start="129:51" pos:end="129:65"><operator pos:start="129:51" pos:end="129:51">&amp;</operator><name pos:start="129:52" pos:end="129:65"><name pos:start="129:52" pos:end="129:57">header</name><index pos:start="129:58" pos:end="129:65">[<expr pos:start="129:59" pos:end="129:64"><name pos:start="129:59" pos:end="129:59">i</name> <operator pos:start="129:61" pos:end="129:61">+</operator> <literal type="number" pos:start="129:63" pos:end="129:64">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:46"><expr pos:start="131:13" pos:end="131:45"><name pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:14">st</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:21">codec</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:28">width</name></name>  <operator pos:start="131:31" pos:end="131:31">=</operator> <name pos:start="131:33" pos:end="131:45"><name pos:start="131:33" pos:end="131:38">fourxm</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:45">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:47"><expr pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:14">st</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:21">codec</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:29">height</name></name> <operator pos:start="133:31" pos:end="133:31">=</operator> <name pos:start="133:33" pos:end="133:46"><name pos:start="133:33" pos:end="133:38">fourxm</name><operator pos:start="133:39" pos:end="133:40">-&gt;</operator><name pos:start="133:41" pos:end="133:46">height</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="137:13" pos:end="137:26"><expr pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:13">i</name> <operator pos:start="137:15" pos:end="137:16">+=</operator> <literal type="number" pos:start="137:18" pos:end="137:20">8</literal> <operator pos:start="137:20" pos:end="137:20">+</operator> <name pos:start="137:22" pos:end="137:25">size</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="139:11" pos:end="293:15">else if <condition pos:start="139:19" pos:end="139:42">(<expr pos:start="139:20" pos:end="139:41"><name pos:start="139:20" pos:end="139:29">fourcc_tag</name> <operator pos:start="139:31" pos:end="139:32">==</operator> <name pos:start="139:34" pos:end="139:41">strk_TAG</name></expr>)</condition> <block pos:start="139:44" pos:end="293:15">{<block_content pos:start="141:13" pos:end="293:15">

            <decl_stmt pos:start="141:13" pos:end="141:30"><decl pos:start="141:13" pos:end="141:29"><type pos:start="141:13" pos:end="141:15"><name pos:start="141:13" pos:end="141:15">int</name></type> <name pos:start="141:17" pos:end="141:29">current_track</name></decl>;</decl_stmt>

            <comment type="block" pos:start="143:13" pos:end="143:49">/* check that there is enough data */</comment>

            <if_stmt pos:start="145:13" pos:end="293:15"><if pos:start="145:13" pos:end="293:15">if <condition pos:start="145:16" pos:end="145:34">(<expr pos:start="145:17" pos:end="145:33"><name pos:start="145:17" pos:end="145:20">size</name> <operator pos:start="145:22" pos:end="145:23">!=</operator> <name pos:start="145:25" pos:end="145:33">strk_SIZE</name></expr>)</condition> <block pos:start="145:36" pos:end="293:15">{<block_content pos:start="147:17" pos:end="293:15">

                <expr_stmt pos:start="147:17" pos:end="147:41"><expr pos:start="147:17" pos:end="147:40"><name pos:start="147:17" pos:end="147:19">ret</name><operator pos:start="147:20" pos:end="147:20">=</operator> <name pos:start="147:22" pos:end="147:40">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>



            <expr_stmt pos:start="151:13" pos:end="151:52"><expr pos:start="151:13" pos:end="151:51"><name pos:start="151:13" pos:end="151:25">current_track</name> <operator pos:start="151:27" pos:end="151:27">=</operator> <call pos:start="151:29" pos:end="151:51"><name pos:start="151:29" pos:end="151:35">AV_RL32</name><argument_list pos:start="151:36" pos:end="151:51">(<argument pos:start="151:37" pos:end="151:50"><expr pos:start="151:37" pos:end="151:50"><operator pos:start="151:37" pos:end="151:37">&amp;</operator><name pos:start="151:38" pos:end="151:50"><name pos:start="151:38" pos:end="151:43">header</name><index pos:start="151:44" pos:end="151:50">[<expr pos:start="151:45" pos:end="151:49"><name pos:start="151:45" pos:end="151:45">i</name> <operator pos:start="151:47" pos:end="151:47">+</operator> <literal type="number" pos:start="151:49" pos:end="151:49">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="293:15"><if pos:start="153:13" pos:end="293:15">if<condition pos:start="153:15" pos:end="153:76">(<expr pos:start="153:16" pos:end="153:75"><operator pos:start="153:16" pos:end="153:16">(</operator><name pos:start="153:17" pos:end="153:24">unsigned</name><operator pos:start="153:25" pos:end="153:25">)</operator><name pos:start="153:26" pos:end="153:38">current_track</name> <operator pos:start="153:40" pos:end="153:41">&gt;=</operator> <name pos:start="153:43" pos:end="153:50">UINT_MAX</name> <operator pos:start="153:52" pos:end="153:52">/</operator> <sizeof pos:start="153:54" pos:end="153:71">sizeof<argument_list pos:start="153:60" pos:end="153:71">(<argument pos:start="153:61" pos:end="153:70"><expr pos:start="153:61" pos:end="153:70"><name pos:start="153:61" pos:end="153:70">AudioTrack</name></expr></argument>)</argument_list></sizeof> <operator pos:start="153:73" pos:end="153:73">-</operator> <literal type="number" pos:start="153:75" pos:end="153:75">1</literal></expr>)</condition><block pos:start="153:77" pos:end="293:15">{<block_content pos:start="155:17" pos:end="293:15">

                <expr_stmt pos:start="155:17" pos:end="155:69"><expr pos:start="155:17" pos:end="155:68"><call pos:start="155:17" pos:end="155:68"><name pos:start="155:17" pos:end="155:22">av_log</name><argument_list pos:start="155:23" pos:end="155:68">(<argument pos:start="155:24" pos:end="155:24"><expr pos:start="155:24" pos:end="155:24"><name pos:start="155:24" pos:end="155:24">s</name></expr></argument>, <argument pos:start="155:27" pos:end="155:38"><expr pos:start="155:27" pos:end="155:38"><name pos:start="155:27" pos:end="155:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:41" pos:end="155:67"><expr pos:start="155:41" pos:end="155:67"><literal type="string" pos:start="155:41" pos:end="155:67">"current_track too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <if_stmt pos:start="160:13" pos:end="293:15"><if pos:start="160:13" pos:end="293:15">if <condition pos:start="160:16" pos:end="160:56">(<expr pos:start="160:17" pos:end="160:55"><name pos:start="160:17" pos:end="160:29">current_track</name> <operator pos:start="160:31" pos:end="160:31">+</operator> <literal type="number" pos:start="160:33" pos:end="160:33">1</literal> <operator pos:start="160:35" pos:end="160:35">&gt;</operator> <name pos:start="160:37" pos:end="160:55"><name pos:start="160:37" pos:end="160:42">fourxm</name><operator pos:start="160:43" pos:end="160:44">-&gt;</operator><name pos:start="160:45" pos:end="160:55">track_count</name></name></expr>)</condition> <block pos:start="160:58" pos:end="293:15">{<block_content pos:start="162:17" pos:end="293:15">

                <expr_stmt pos:start="162:17" pos:end="166:65"><expr pos:start="162:17" pos:end="166:64"><name pos:start="162:17" pos:end="162:30"><name pos:start="162:17" pos:end="162:22">fourxm</name><operator pos:start="162:23" pos:end="162:24">-&gt;</operator><name pos:start="162:25" pos:end="162:30">tracks</name></name> <operator pos:start="162:32" pos:end="162:32">=</operator> <call pos:start="162:34" pos:end="166:64"><name pos:start="162:34" pos:end="162:45">av_realloc_f</name><argument_list pos:start="162:46" pos:end="166:64">(<argument pos:start="162:47" pos:end="162:60"><expr pos:start="162:47" pos:end="162:60"><name pos:start="162:47" pos:end="162:60"><name pos:start="162:47" pos:end="162:52">fourxm</name><operator pos:start="162:53" pos:end="162:54">-&gt;</operator><name pos:start="162:55" pos:end="162:60">tracks</name></name></expr></argument>,

                                              <argument pos:start="164:47" pos:end="164:64"><expr pos:start="164:47" pos:end="164:64"><sizeof pos:start="164:47" pos:end="164:64">sizeof<argument_list pos:start="164:53" pos:end="164:64">(<argument pos:start="164:54" pos:end="164:63"><expr pos:start="164:54" pos:end="164:63"><name pos:start="164:54" pos:end="164:63">AudioTrack</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                              <argument pos:start="166:47" pos:end="166:63"><expr pos:start="166:47" pos:end="166:63"><name pos:start="166:47" pos:end="166:59">current_track</name> <operator pos:start="166:61" pos:end="166:61">+</operator> <literal type="number" pos:start="166:63" pos:end="166:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="168:17" pos:end="293:15"><if pos:start="168:17" pos:end="293:15">if <condition pos:start="168:20" pos:end="168:36">(<expr pos:start="168:21" pos:end="168:35"><operator pos:start="168:21" pos:end="168:21">!</operator><name pos:start="168:22" pos:end="168:35"><name pos:start="168:22" pos:end="168:27">fourxm</name><operator pos:start="168:28" pos:end="168:29">-&gt;</operator><name pos:start="168:30" pos:end="168:35">tracks</name></name></expr>)</condition> <block pos:start="168:38" pos:end="293:15">{<block_content pos:start="170:21" pos:end="293:15">

                    <expr_stmt pos:start="170:21" pos:end="170:42"><expr pos:start="170:21" pos:end="170:41"><name pos:start="170:21" pos:end="170:23">ret</name> <operator pos:start="170:25" pos:end="170:25">=</operator> <call pos:start="170:27" pos:end="170:41"><name pos:start="170:27" pos:end="170:33">AVERROR</name><argument_list pos:start="170:34" pos:end="170:41">(<argument pos:start="170:35" pos:end="170:40"><expr pos:start="170:35" pos:end="170:40"><name pos:start="170:35" pos:end="170:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="174:17" pos:end="176:87"><expr pos:start="174:17" pos:end="176:86"><call pos:start="174:17" pos:end="176:86"><name pos:start="174:17" pos:end="174:22">memset</name><argument_list pos:start="174:23" pos:end="176:86">(<argument pos:start="174:24" pos:end="174:59"><expr pos:start="174:24" pos:end="174:59"><operator pos:start="174:24" pos:end="174:24">&amp;</operator><name pos:start="174:25" pos:end="174:59"><name pos:start="174:25" pos:end="174:30">fourxm</name><operator pos:start="174:31" pos:end="174:32">-&gt;</operator><name pos:start="174:33" pos:end="174:38">tracks</name><index pos:start="174:39" pos:end="174:59">[<expr pos:start="174:40" pos:end="174:58"><name pos:start="174:40" pos:end="174:58"><name pos:start="174:40" pos:end="174:45">fourxm</name><operator pos:start="174:46" pos:end="174:47">-&gt;</operator><name pos:start="174:48" pos:end="174:58">track_count</name></name></expr>]</index></name></expr></argument>, <argument pos:start="174:62" pos:end="174:62"><expr pos:start="174:62" pos:end="174:62"><literal type="number" pos:start="174:62" pos:end="174:62">0</literal></expr></argument>,

                       <argument pos:start="176:24" pos:end="176:85"><expr pos:start="176:24" pos:end="176:85"><sizeof pos:start="176:24" pos:end="176:41">sizeof<argument_list pos:start="176:30" pos:end="176:41">(<argument pos:start="176:31" pos:end="176:40"><expr pos:start="176:31" pos:end="176:40"><name pos:start="176:31" pos:end="176:40">AudioTrack</name></expr></argument>)</argument_list></sizeof> <operator pos:start="176:43" pos:end="176:43">*</operator> <operator pos:start="176:45" pos:end="176:45">(</operator><name pos:start="176:46" pos:end="176:58">current_track</name> <operator pos:start="176:60" pos:end="176:60">+</operator> <literal type="number" pos:start="176:62" pos:end="176:64">1</literal> <operator pos:start="176:64" pos:end="176:64">-</operator> <name pos:start="176:66" pos:end="176:84"><name pos:start="176:66" pos:end="176:71">fourxm</name><operator pos:start="176:72" pos:end="176:73">-&gt;</operator><name pos:start="176:74" pos:end="176:84">track_count</name></name><operator pos:start="176:85" pos:end="176:85">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="178:17" pos:end="178:56"><expr pos:start="178:17" pos:end="178:55"><name pos:start="178:17" pos:end="178:35"><name pos:start="178:17" pos:end="178:22">fourxm</name><operator pos:start="178:23" pos:end="178:24">-&gt;</operator><name pos:start="178:25" pos:end="178:35">track_count</name></name> <operator pos:start="178:37" pos:end="178:37">=</operator> <name pos:start="178:39" pos:end="178:51">current_track</name> <operator pos:start="178:53" pos:end="178:53">+</operator> <literal type="number" pos:start="178:55" pos:end="178:55">1</literal></expr>;</expr_stmt>


            <expr_stmt pos:start="181:13" pos:end="181:81"><expr pos:start="181:13" pos:end="181:80"><name pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:18">fourxm</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:26">tracks</name><index pos:start="181:27" pos:end="181:41">[<expr pos:start="181:28" pos:end="181:40"><name pos:start="181:28" pos:end="181:40">current_track</name></expr>]</index></name><operator pos:start="181:42" pos:end="181:42">.</operator><name pos:start="181:43" pos:end="181:47">adpcm</name>       <operator pos:start="181:55" pos:end="181:55">=</operator> <call pos:start="181:57" pos:end="181:80"><name pos:start="181:57" pos:end="181:63">AV_RL32</name><argument_list pos:start="181:64" pos:end="181:80">(<argument pos:start="181:65" pos:end="181:79"><expr pos:start="181:65" pos:end="181:79"><operator pos:start="181:65" pos:end="181:65">&amp;</operator><name pos:start="181:66" pos:end="181:79"><name pos:start="181:66" pos:end="181:71">header</name><index pos:start="181:72" pos:end="181:79">[<expr pos:start="181:73" pos:end="181:78"><name pos:start="181:73" pos:end="181:73">i</name> <operator pos:start="181:75" pos:end="181:75">+</operator> <literal type="number" pos:start="181:77" pos:end="181:78">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:81"><expr pos:start="183:13" pos:end="183:80"><name pos:start="183:13" pos:end="183:41"><name pos:start="183:13" pos:end="183:18">fourxm</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:26">tracks</name><index pos:start="183:27" pos:end="183:41">[<expr pos:start="183:28" pos:end="183:40"><name pos:start="183:28" pos:end="183:40">current_track</name></expr>]</index></name><operator pos:start="183:42" pos:end="183:42">.</operator><name pos:start="183:43" pos:end="183:50">channels</name>    <operator pos:start="183:55" pos:end="183:55">=</operator> <call pos:start="183:57" pos:end="183:80"><name pos:start="183:57" pos:end="183:63">AV_RL32</name><argument_list pos:start="183:64" pos:end="183:80">(<argument pos:start="183:65" pos:end="183:79"><expr pos:start="183:65" pos:end="183:79"><operator pos:start="183:65" pos:end="183:65">&amp;</operator><name pos:start="183:66" pos:end="183:79"><name pos:start="183:66" pos:end="183:71">header</name><index pos:start="183:72" pos:end="183:79">[<expr pos:start="183:73" pos:end="183:78"><name pos:start="183:73" pos:end="183:73">i</name> <operator pos:start="183:75" pos:end="183:75">+</operator> <literal type="number" pos:start="183:77" pos:end="183:78">36</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:81"><expr pos:start="185:13" pos:end="185:80"><name pos:start="185:13" pos:end="185:41"><name pos:start="185:13" pos:end="185:18">fourxm</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:26">tracks</name><index pos:start="185:27" pos:end="185:41">[<expr pos:start="185:28" pos:end="185:40"><name pos:start="185:28" pos:end="185:40">current_track</name></expr>]</index></name><operator pos:start="185:42" pos:end="185:42">.</operator><name pos:start="185:43" pos:end="185:53">sample_rate</name> <operator pos:start="185:55" pos:end="185:55">=</operator> <call pos:start="185:57" pos:end="185:80"><name pos:start="185:57" pos:end="185:63">AV_RL32</name><argument_list pos:start="185:64" pos:end="185:80">(<argument pos:start="185:65" pos:end="185:79"><expr pos:start="185:65" pos:end="185:79"><operator pos:start="185:65" pos:end="185:65">&amp;</operator><name pos:start="185:66" pos:end="185:79"><name pos:start="185:66" pos:end="185:71">header</name><index pos:start="185:72" pos:end="185:79">[<expr pos:start="185:73" pos:end="185:78"><name pos:start="185:73" pos:end="185:73">i</name> <operator pos:start="185:75" pos:end="185:75">+</operator> <literal type="number" pos:start="185:77" pos:end="185:78">40</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:81"><expr pos:start="187:13" pos:end="187:80"><name pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:18">fourxm</name><operator pos:start="187:19" pos:end="187:20">-&gt;</operator><name pos:start="187:21" pos:end="187:26">tracks</name><index pos:start="187:27" pos:end="187:41">[<expr pos:start="187:28" pos:end="187:40"><name pos:start="187:28" pos:end="187:40">current_track</name></expr>]</index></name><operator pos:start="187:42" pos:end="187:42">.</operator><name pos:start="187:43" pos:end="187:46">bits</name>        <operator pos:start="187:55" pos:end="187:55">=</operator> <call pos:start="187:57" pos:end="187:80"><name pos:start="187:57" pos:end="187:63">AV_RL32</name><argument_list pos:start="187:64" pos:end="187:80">(<argument pos:start="187:65" pos:end="187:79"><expr pos:start="187:65" pos:end="187:79"><operator pos:start="187:65" pos:end="187:65">&amp;</operator><name pos:start="187:66" pos:end="187:79"><name pos:start="187:66" pos:end="187:71">header</name><index pos:start="187:72" pos:end="187:79">[<expr pos:start="187:73" pos:end="187:78"><name pos:start="187:73" pos:end="187:73">i</name> <operator pos:start="187:75" pos:end="187:75">+</operator> <literal type="number" pos:start="187:77" pos:end="187:78">44</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:58"><expr pos:start="189:13" pos:end="189:57"><name pos:start="189:13" pos:end="189:41"><name pos:start="189:13" pos:end="189:18">fourxm</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:26">tracks</name><index pos:start="189:27" pos:end="189:41">[<expr pos:start="189:28" pos:end="189:40"><name pos:start="189:28" pos:end="189:40">current_track</name></expr>]</index></name><operator pos:start="189:42" pos:end="189:42">.</operator><name pos:start="189:43" pos:end="189:51">audio_pts</name>   <operator pos:start="189:55" pos:end="189:55">=</operator> <literal type="number" pos:start="189:57" pos:end="189:57">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="191:13" pos:end="293:15"><if pos:start="191:13" pos:end="293:15">if<condition pos:start="191:15" pos:end="195:65">(   <expr pos:start="191:19" pos:end="195:64"><name pos:start="191:19" pos:end="191:47"><name pos:start="191:19" pos:end="191:24">fourxm</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:32">tracks</name><index pos:start="191:33" pos:end="191:47">[<expr pos:start="191:34" pos:end="191:46"><name pos:start="191:34" pos:end="191:46">current_track</name></expr>]</index></name><operator pos:start="191:48" pos:end="191:48">.</operator><name pos:start="191:49" pos:end="191:56">channels</name>    <operator pos:start="191:61" pos:end="191:62">&lt;=</operator> <literal type="number" pos:start="191:64" pos:end="191:64">0</literal>

               <operator pos:start="193:16" pos:end="193:17">||</operator> <name pos:start="193:19" pos:end="193:47"><name pos:start="193:19" pos:end="193:24">fourxm</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:32">tracks</name><index pos:start="193:33" pos:end="193:47">[<expr pos:start="193:34" pos:end="193:46"><name pos:start="193:34" pos:end="193:46">current_track</name></expr>]</index></name><operator pos:start="193:48" pos:end="193:48">.</operator><name pos:start="193:49" pos:end="193:59">sample_rate</name> <operator pos:start="193:61" pos:end="193:62">&lt;=</operator> <literal type="number" pos:start="193:64" pos:end="193:64">0</literal>

               <operator pos:start="195:16" pos:end="195:17">||</operator> <name pos:start="195:19" pos:end="195:47"><name pos:start="195:19" pos:end="195:24">fourxm</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:32">tracks</name><index pos:start="195:33" pos:end="195:47">[<expr pos:start="195:34" pos:end="195:46"><name pos:start="195:34" pos:end="195:46">current_track</name></expr>]</index></name><operator pos:start="195:48" pos:end="195:48">.</operator><name pos:start="195:49" pos:end="195:52">bits</name>        <operator pos:start="195:61" pos:end="195:61">&lt;</operator>  <literal type="number" pos:start="195:64" pos:end="195:64">0</literal></expr>)</condition><block pos:start="195:66" pos:end="293:15">{<block_content pos:start="197:17" pos:end="293:15">

                <expr_stmt pos:start="197:17" pos:end="197:66"><expr pos:start="197:17" pos:end="197:65"><call pos:start="197:17" pos:end="197:65"><name pos:start="197:17" pos:end="197:22">av_log</name><argument_list pos:start="197:23" pos:end="197:65">(<argument pos:start="197:24" pos:end="197:24"><expr pos:start="197:24" pos:end="197:24"><name pos:start="197:24" pos:end="197:24">s</name></expr></argument>, <argument pos:start="197:27" pos:end="197:38"><expr pos:start="197:27" pos:end="197:38"><name pos:start="197:27" pos:end="197:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="197:41" pos:end="197:64"><expr pos:start="197:41" pos:end="197:64"><literal type="string" pos:start="197:41" pos:end="197:64">"audio header invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>









            <expr_stmt pos:start="207:13" pos:end="207:26"><expr pos:start="207:13" pos:end="207:25"><name pos:start="207:13" pos:end="207:13">i</name> <operator pos:start="207:15" pos:end="207:16">+=</operator> <literal type="number" pos:start="207:18" pos:end="207:20">8</literal> <operator pos:start="207:20" pos:end="207:20">+</operator> <name pos:start="207:22" pos:end="207:25">size</name></expr>;</expr_stmt>



            <comment type="block" pos:start="211:13" pos:end="211:41">/* allocate a new AVStream */</comment>

            <expr_stmt pos:start="213:13" pos:end="213:46"><expr pos:start="213:13" pos:end="213:45"><name pos:start="213:13" pos:end="213:14">st</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <call pos:start="213:18" pos:end="213:45"><name pos:start="213:18" pos:end="213:36">avformat_new_stream</name><argument_list pos:start="213:37" pos:end="213:45">(<argument pos:start="213:38" pos:end="213:38"><expr pos:start="213:38" pos:end="213:38"><name pos:start="213:38" pos:end="213:38">s</name></expr></argument>, <argument pos:start="213:41" pos:end="213:44"><expr pos:start="213:41" pos:end="213:44"><name pos:start="213:41" pos:end="213:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="293:15"><if pos:start="215:13" pos:end="293:15">if <condition pos:start="215:16" pos:end="215:20">(<expr pos:start="215:17" pos:end="215:19"><operator pos:start="215:17" pos:end="215:17">!</operator><name pos:start="215:18" pos:end="215:19">st</name></expr>)</condition><block pos:start="215:21" pos:end="293:15">{<block_content pos:start="217:17" pos:end="293:15">

                <expr_stmt pos:start="217:17" pos:end="217:37"><expr pos:start="217:17" pos:end="217:36"><name pos:start="217:17" pos:end="217:19">ret</name><operator pos:start="217:20" pos:end="217:20">=</operator> <call pos:start="217:22" pos:end="217:36"><name pos:start="217:22" pos:end="217:28">AVERROR</name><argument_list pos:start="217:29" pos:end="217:36">(<argument pos:start="217:30" pos:end="217:35"><expr pos:start="217:30" pos:end="217:35"><name pos:start="217:30" pos:end="217:35">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="223:13" pos:end="223:35"><expr pos:start="223:13" pos:end="223:34"><name pos:start="223:13" pos:end="223:18"><name pos:start="223:13" pos:end="223:14">st</name><operator pos:start="223:15" pos:end="223:16">-&gt;</operator><name pos:start="223:17" pos:end="223:18">id</name></name> <operator pos:start="223:20" pos:end="223:20">=</operator> <name pos:start="223:22" pos:end="223:34">current_track</name></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:86"><expr pos:start="225:13" pos:end="225:85"><call pos:start="225:13" pos:end="225:85"><name pos:start="225:13" pos:end="225:31">avpriv_set_pts_info</name><argument_list pos:start="225:32" pos:end="225:85">(<argument pos:start="225:33" pos:end="225:34"><expr pos:start="225:33" pos:end="225:34"><name pos:start="225:33" pos:end="225:34">st</name></expr></argument>, <argument pos:start="225:37" pos:end="225:38"><expr pos:start="225:37" pos:end="225:38"><literal type="number" pos:start="225:37" pos:end="225:38">60</literal></expr></argument>, <argument pos:start="225:41" pos:end="225:41"><expr pos:start="225:41" pos:end="225:41"><literal type="number" pos:start="225:41" pos:end="225:41">1</literal></expr></argument>, <argument pos:start="225:44" pos:end="225:84"><expr pos:start="225:44" pos:end="225:84"><name pos:start="225:44" pos:end="225:72"><name pos:start="225:44" pos:end="225:49">fourxm</name><operator pos:start="225:50" pos:end="225:51">-&gt;</operator><name pos:start="225:52" pos:end="225:57">tracks</name><index pos:start="225:58" pos:end="225:72">[<expr pos:start="225:59" pos:end="225:71"><name pos:start="225:59" pos:end="225:71">current_track</name></expr>]</index></name><operator pos:start="225:73" pos:end="225:73">.</operator><name pos:start="225:74" pos:end="225:84">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="229:13" pos:end="229:67"><expr pos:start="229:13" pos:end="229:66"><name pos:start="229:13" pos:end="229:41"><name pos:start="229:13" pos:end="229:18">fourxm</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:26">tracks</name><index pos:start="229:27" pos:end="229:41">[<expr pos:start="229:28" pos:end="229:40"><name pos:start="229:28" pos:end="229:40">current_track</name></expr>]</index></name><operator pos:start="229:42" pos:end="229:42">.</operator><name pos:start="229:43" pos:end="229:54">stream_index</name> <operator pos:start="229:56" pos:end="229:56">=</operator> <name pos:start="229:58" pos:end="229:66"><name pos:start="229:58" pos:end="229:59">st</name><operator pos:start="229:60" pos:end="229:61">-&gt;</operator><name pos:start="229:62" pos:end="229:66">index</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="233:13" pos:end="233:55"><expr pos:start="233:13" pos:end="233:54"><name pos:start="233:13" pos:end="233:33"><name pos:start="233:13" pos:end="233:14">st</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:21">codec</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:33">codec_type</name></name> <operator pos:start="233:35" pos:end="233:35">=</operator> <name pos:start="233:37" pos:end="233:54">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:37"><expr pos:start="235:13" pos:end="235:36"><name pos:start="235:13" pos:end="235:32"><name pos:start="235:13" pos:end="235:14">st</name><operator pos:start="235:15" pos:end="235:16">-&gt;</operator><name pos:start="235:17" pos:end="235:21">codec</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:32">codec_tag</name></name> <operator pos:start="235:34" pos:end="235:34">=</operator> <literal type="number" pos:start="235:36" pos:end="235:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:86"><expr pos:start="237:13" pos:end="237:85"><name pos:start="237:13" pos:end="237:31"><name pos:start="237:13" pos:end="237:14">st</name><operator pos:start="237:15" pos:end="237:16">-&gt;</operator><name pos:start="237:17" pos:end="237:21">codec</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:31">channels</name></name>              <operator pos:start="237:46" pos:end="237:46">=</operator> <name pos:start="237:48" pos:end="237:76"><name pos:start="237:48" pos:end="237:53">fourxm</name><operator pos:start="237:54" pos:end="237:55">-&gt;</operator><name pos:start="237:56" pos:end="237:61">tracks</name><index pos:start="237:62" pos:end="237:76">[<expr pos:start="237:63" pos:end="237:75"><name pos:start="237:63" pos:end="237:75">current_track</name></expr>]</index></name><operator pos:start="237:77" pos:end="237:77">.</operator><name pos:start="237:78" pos:end="237:85">channels</name></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:89"><expr pos:start="239:13" pos:end="239:88"><name pos:start="239:13" pos:end="239:34"><name pos:start="239:13" pos:end="239:14">st</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:21">codec</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:34">sample_rate</name></name>           <operator pos:start="239:46" pos:end="239:46">=</operator> <name pos:start="239:48" pos:end="239:76"><name pos:start="239:48" pos:end="239:53">fourxm</name><operator pos:start="239:54" pos:end="239:55">-&gt;</operator><name pos:start="239:56" pos:end="239:61">tracks</name><index pos:start="239:62" pos:end="239:76">[<expr pos:start="239:63" pos:end="239:75"><name pos:start="239:63" pos:end="239:75">current_track</name></expr>]</index></name><operator pos:start="239:77" pos:end="239:77">.</operator><name pos:start="239:78" pos:end="239:88">sample_rate</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:82"><expr pos:start="241:13" pos:end="241:81"><name pos:start="241:13" pos:end="241:44"><name pos:start="241:13" pos:end="241:14">st</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:21">codec</name><operator pos:start="241:22" pos:end="241:23">-&gt;</operator><name pos:start="241:24" pos:end="241:44">bits_per_coded_sample</name></name> <operator pos:start="241:46" pos:end="241:46">=</operator> <name pos:start="241:48" pos:end="241:76"><name pos:start="241:48" pos:end="241:53">fourxm</name><operator pos:start="241:54" pos:end="241:55">-&gt;</operator><name pos:start="241:56" pos:end="241:61">tracks</name><index pos:start="241:62" pos:end="241:76">[<expr pos:start="241:63" pos:end="241:75"><name pos:start="241:63" pos:end="241:75">current_track</name></expr>]</index></name><operator pos:start="241:77" pos:end="241:77">.</operator><name pos:start="241:78" pos:end="241:81">bits</name></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="245:49"><expr pos:start="243:13" pos:end="245:48"><name pos:start="243:13" pos:end="243:31"><name pos:start="243:13" pos:end="243:14">st</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:21">codec</name><operator pos:start="243:22" pos:end="243:23">-&gt;</operator><name pos:start="243:24" pos:end="243:31">bit_rate</name></name>              <operator pos:start="243:46" pos:end="243:46">=</operator> <name pos:start="243:48" pos:end="243:66"><name pos:start="243:48" pos:end="243:49">st</name><operator pos:start="243:50" pos:end="243:51">-&gt;</operator><name pos:start="243:52" pos:end="243:56">codec</name><operator pos:start="243:57" pos:end="243:58">-&gt;</operator><name pos:start="243:59" pos:end="243:66">channels</name></name> <operator pos:start="243:68" pos:end="243:68">*</operator> <name pos:start="243:70" pos:end="243:91"><name pos:start="243:70" pos:end="243:71">st</name><operator pos:start="243:72" pos:end="243:73">-&gt;</operator><name pos:start="243:74" pos:end="243:78">codec</name><operator pos:start="243:79" pos:end="243:80">-&gt;</operator><name pos:start="243:81" pos:end="243:91">sample_rate</name></name> <operator pos:start="243:93" pos:end="243:93">*</operator>

                <name pos:start="245:17" pos:end="245:48"><name pos:start="245:17" pos:end="245:18">st</name><operator pos:start="245:19" pos:end="245:20">-&gt;</operator><name pos:start="245:21" pos:end="245:25">codec</name><operator pos:start="245:26" pos:end="245:27">-&gt;</operator><name pos:start="245:28" pos:end="245:48">bits_per_coded_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:92"><expr pos:start="247:13" pos:end="247:91"><name pos:start="247:13" pos:end="247:34"><name pos:start="247:13" pos:end="247:14">st</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:21">codec</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:34">block_align</name></name> <operator pos:start="247:36" pos:end="247:36">=</operator> <name pos:start="247:38" pos:end="247:56"><name pos:start="247:38" pos:end="247:39">st</name><operator pos:start="247:40" pos:end="247:41">-&gt;</operator><name pos:start="247:42" pos:end="247:46">codec</name><operator pos:start="247:47" pos:end="247:48">-&gt;</operator><name pos:start="247:49" pos:end="247:56">channels</name></name> <operator pos:start="247:58" pos:end="247:58">*</operator> <name pos:start="247:60" pos:end="247:91"><name pos:start="247:60" pos:end="247:61">st</name><operator pos:start="247:62" pos:end="247:63">-&gt;</operator><name pos:start="247:64" pos:end="247:68">codec</name><operator pos:start="247:69" pos:end="247:70">-&gt;</operator><name pos:start="247:71" pos:end="247:91">bits_per_coded_sample</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="249:13" pos:end="259:57"><if pos:start="249:13" pos:end="253:13">if <condition pos:start="249:16" pos:end="249:52">(<expr pos:start="249:17" pos:end="249:51"><name pos:start="249:17" pos:end="249:45"><name pos:start="249:17" pos:end="249:22">fourxm</name><operator pos:start="249:23" pos:end="249:24">-&gt;</operator><name pos:start="249:25" pos:end="249:30">tracks</name><index pos:start="249:31" pos:end="249:45">[<expr pos:start="249:32" pos:end="249:44"><name pos:start="249:32" pos:end="249:44">current_track</name></expr>]</index></name><operator pos:start="249:46" pos:end="249:46">.</operator><name pos:start="249:47" pos:end="249:51">adpcm</name></expr>)</condition><block pos:start="249:53" pos:end="253:13">{<block_content pos:start="251:17" pos:end="251:57">

                <expr_stmt pos:start="251:17" pos:end="251:57"><expr pos:start="251:17" pos:end="251:56"><name pos:start="251:17" pos:end="251:35"><name pos:start="251:17" pos:end="251:18">st</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:25">codec</name><operator pos:start="251:26" pos:end="251:27">-&gt;</operator><name pos:start="251:28" pos:end="251:35">codec_id</name></name> <operator pos:start="251:37" pos:end="251:37">=</operator> <name pos:start="251:39" pos:end="251:56">CODEC_ID_ADPCM_4XM</name></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="253:14" pos:end="257:13">else if <condition pos:start="253:22" pos:end="253:60">(<expr pos:start="253:23" pos:end="253:59"><name pos:start="253:23" pos:end="253:54"><name pos:start="253:23" pos:end="253:24">st</name><operator pos:start="253:25" pos:end="253:26">-&gt;</operator><name pos:start="253:27" pos:end="253:31">codec</name><operator pos:start="253:32" pos:end="253:33">-&gt;</operator><name pos:start="253:34" pos:end="253:54">bits_per_coded_sample</name></name> <operator pos:start="253:56" pos:end="253:57">==</operator> <literal type="number" pos:start="253:59" pos:end="253:59">8</literal></expr>)</condition><block pos:start="253:61" pos:end="257:13">{<block_content pos:start="255:17" pos:end="255:54">

                <expr_stmt pos:start="255:17" pos:end="255:54"><expr pos:start="255:17" pos:end="255:53"><name pos:start="255:17" pos:end="255:35"><name pos:start="255:17" pos:end="255:18">st</name><operator pos:start="255:19" pos:end="255:20">-&gt;</operator><name pos:start="255:21" pos:end="255:25">codec</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:35">codec_id</name></name> <operator pos:start="255:37" pos:end="255:37">=</operator> <name pos:start="255:39" pos:end="255:53">CODEC_ID_PCM_U8</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="257:14" pos:end="259:57">else<block type="pseudo" pos:start="259:17" pos:end="259:57"><block_content pos:start="259:17" pos:end="259:57">

                <expr_stmt pos:start="259:17" pos:end="259:57"><expr pos:start="259:17" pos:end="259:56"><name pos:start="259:17" pos:end="259:35"><name pos:start="259:17" pos:end="259:18">st</name><operator pos:start="259:19" pos:end="259:20">-&gt;</operator><name pos:start="259:21" pos:end="259:25">codec</name><operator pos:start="259:26" pos:end="259:27">-&gt;</operator><name pos:start="259:28" pos:end="259:35">codec_id</name></name> <operator pos:start="259:37" pos:end="259:37">=</operator> <name pos:start="259:39" pos:end="259:56">CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>





    <comment type="block" pos:start="265:5" pos:end="265:76">/* skip over the LIST-MOVI chunk (which is where the stream should be */</comment>

    <expr_stmt pos:start="267:5" pos:end="267:22"><expr pos:start="267:5" pos:end="267:21"><call pos:start="267:5" pos:end="267:21"><name pos:start="267:5" pos:end="267:19">GET_LIST_HEADER</name><argument_list pos:start="267:20" pos:end="267:21">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="269:5" pos:end="293:15"><if pos:start="269:5" pos:end="293:15">if <condition pos:start="269:8" pos:end="269:31">(<expr pos:start="269:9" pos:end="269:30"><name pos:start="269:9" pos:end="269:18">fourcc_tag</name> <operator pos:start="269:20" pos:end="269:21">!=</operator> <name pos:start="269:23" pos:end="269:30">MOVI_TAG</name></expr>)</condition><block pos:start="269:32" pos:end="293:15">{<block_content pos:start="271:9" pos:end="293:15">

        <expr_stmt pos:start="271:9" pos:end="271:33"><expr pos:start="271:9" pos:end="271:32"><name pos:start="271:9" pos:end="271:11">ret</name><operator pos:start="271:12" pos:end="271:12">=</operator> <name pos:start="271:14" pos:end="271:32">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>





    <expr_stmt pos:start="277:5" pos:end="277:20"><expr pos:start="277:5" pos:end="277:19"><call pos:start="277:5" pos:end="277:19"><name pos:start="277:5" pos:end="277:11">av_free</name><argument_list pos:start="277:12" pos:end="277:19">(<argument pos:start="277:13" pos:end="277:18"><expr pos:start="277:13" pos:end="277:18"><name pos:start="277:13" pos:end="277:18">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="279:5" pos:end="279:36">/* initialize context members */</comment>

    <expr_stmt pos:start="281:5" pos:end="281:27"><expr pos:start="281:5" pos:end="281:26"><name pos:start="281:5" pos:end="281:21"><name pos:start="281:5" pos:end="281:10">fourxm</name><operator pos:start="281:11" pos:end="281:12">-&gt;</operator><name pos:start="281:13" pos:end="281:21">video_pts</name></name> <operator pos:start="281:23" pos:end="281:23">=</operator> <operator pos:start="281:25" pos:end="281:25">-</operator><literal type="number" pos:start="281:26" pos:end="281:26">1</literal></expr>;</expr_stmt>  <comment type="block" pos:start="281:30" pos:end="281:61">/* first frame will push to 0 */</comment>



    <return pos:start="285:5" pos:end="285:13">return <expr pos:start="285:12" pos:end="285:12"><literal type="number" pos:start="285:12" pos:end="285:12">0</literal></expr>;</return>

<label pos:start="287:1" pos:end="287:5"><name pos:start="287:1" pos:end="287:4">fail</name>:</label>

    <expr_stmt pos:start="289:5" pos:end="289:30"><expr pos:start="289:5" pos:end="289:29"><call pos:start="289:5" pos:end="289:29"><name pos:start="289:5" pos:end="289:12">av_freep</name><argument_list pos:start="289:13" pos:end="289:29">(<argument pos:start="289:14" pos:end="289:28"><expr pos:start="289:14" pos:end="289:28"><operator pos:start="289:14" pos:end="289:14">&amp;</operator><name pos:start="289:15" pos:end="289:28"><name pos:start="289:15" pos:end="289:20">fourxm</name><operator pos:start="289:21" pos:end="289:22">-&gt;</operator><name pos:start="289:23" pos:end="289:28">tracks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:20"><expr pos:start="291:5" pos:end="291:19"><call pos:start="291:5" pos:end="291:19"><name pos:start="291:5" pos:end="291:11">av_free</name><argument_list pos:start="291:12" pos:end="291:19">(<argument pos:start="291:13" pos:end="291:18"><expr pos:start="291:13" pos:end="291:18"><name pos:start="291:13" pos:end="291:18">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="293:5" pos:end="293:15">return <expr pos:start="293:12" pos:end="293:14"><name pos:start="293:12" pos:end="293:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>
</unit>
