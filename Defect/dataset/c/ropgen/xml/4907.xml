<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4907.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="3:56">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:38"><decl pos:start="3:25" pos:end="3:38"><type pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:27">int</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:38">got_frame</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:55"><decl pos:start="3:41" pos:end="3:55"><type pos:start="3:41" pos:end="3:55"><name pos:start="3:41" pos:end="3:48">AVPacket</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:55">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="253:1">{<block_content pos:start="7:5" pos:end="251:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:21">C93DecoderContext</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier> <specifier pos:start="11:25" pos:end="11:29">const</specifier></type> <name pos:start="11:31" pos:end="11:33">c93</name> <init pos:start="11:35" pos:end="11:52">= <expr pos:start="11:37" pos:end="11:52"><name pos:start="11:37" pos:end="11:52"><name pos:start="11:37" pos:end="11:41">avctx</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:52">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:61"><decl pos:start="13:5" pos:end="13:60"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier> <specifier pos:start="13:15" pos:end="13:19">const</specifier></type> <name pos:start="13:21" pos:end="13:26">newpic</name> <init pos:start="13:28" pos:end="13:60">= <expr pos:start="13:30" pos:end="13:60"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:60"><name pos:start="13:31" pos:end="13:33">c93</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:43">pictures</name><index pos:start="13:44" pos:end="13:60">[<expr pos:start="13:45" pos:end="13:59"><name pos:start="13:45" pos:end="13:59"><name pos:start="13:45" pos:end="13:47">c93</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:59">currentpic</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:63"><decl pos:start="15:5" pos:end="15:62"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier> <specifier pos:start="15:15" pos:end="15:19">const</specifier></type> <name pos:start="15:21" pos:end="15:26">oldpic</name> <init pos:start="15:28" pos:end="15:62">= <expr pos:start="15:30" pos:end="15:62"><operator pos:start="15:30" pos:end="15:30">&amp;</operator><name pos:start="15:31" pos:end="15:62"><name pos:start="15:31" pos:end="15:33">c93</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:43">pictures</name><index pos:start="15:44" pos:end="15:62">[<expr pos:start="15:45" pos:end="15:61"><name pos:start="15:45" pos:end="15:59"><name pos:start="15:45" pos:end="15:47">c93</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:59">currentpic</name></name><operator pos:start="15:60" pos:end="15:60">^</operator><literal type="number" pos:start="15:61" pos:end="15:61">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:18">GetByteContext</name></type> <name pos:start="17:20" pos:end="17:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:40"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">stride</name></decl>, <decl pos:start="21:17" pos:end="21:19"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:17" pos:end="21:19">ret</name></decl>, <decl pos:start="21:22" pos:end="21:22"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:22" pos:end="21:22">i</name></decl>, <decl pos:start="21:25" pos:end="21:25"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:25" pos:end="21:25">x</name></decl>, <decl pos:start="21:28" pos:end="21:28"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:28" pos:end="21:28">y</name></decl>, <decl pos:start="21:31" pos:end="21:31"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:31" pos:end="21:31">b</name></decl>, <decl pos:start="21:34" pos:end="21:39"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:34" pos:end="21:35">bt</name> <init pos:start="21:37" pos:end="21:39">= <expr pos:start="21:39" pos:end="21:39"><literal type="number" pos:start="21:39" pos:end="21:39">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:7">c93</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:19">currentpic</name></name> <operator pos:start="25:21" pos:end="25:22">^=</operator> <literal type="number" pos:start="25:24" pos:end="25:24">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:19"><if pos:start="29:5" pos:end="31:19">if <condition pos:start="29:8" pos:end="29:51">(<expr pos:start="29:9" pos:end="29:50"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">ret</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:45"><name pos:start="29:16" pos:end="29:30">ff_reget_buffer</name><argument_list pos:start="29:31" pos:end="29:45">(<argument pos:start="29:32" pos:end="29:36"><expr pos:start="29:32" pos:end="29:36"><name pos:start="29:32" pos:end="29:36">avctx</name></expr></argument>, <argument pos:start="29:39" pos:end="29:44"><expr pos:start="29:39" pos:end="29:44"><name pos:start="29:39" pos:end="29:44">newpic</name></expr></argument>)</argument_list></call><operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:48">&lt;</operator> <literal type="number" pos:start="29:50" pos:end="29:50">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:10">stride</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:32"><name pos:start="35:14" pos:end="35:19">newpic</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:29">linesize</name><index pos:start="35:30" pos:end="35:32">[<expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><call pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:20">bytestream2_init</name><argument_list pos:start="39:21" pos:end="39:40">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:24">gb</name></expr></argument>, <argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">buf</name></expr></argument>, <argument pos:start="39:32" pos:end="39:39"><expr pos:start="39:32" pos:end="39:39"><name pos:start="39:32" pos:end="39:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:5">b</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:28">bytestream2_get_byte</name><argument_list pos:start="41:29" pos:end="41:33">(<argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:28">(<expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:9">b</name> <operator pos:start="43:11" pos:end="43:11">&amp;</operator> <name pos:start="43:13" pos:end="43:27">C93_FIRST_FRAME</name></expr>)</condition> <block pos:start="43:30" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:30">

        <expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:14">newpic</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:25">pict_type</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:45">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:14">newpic</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:25">key_frame</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <literal type="number" pos:start="47:29" pos:end="47:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="55:5">else <block pos:start="49:12" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:30">

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:14">newpic</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:25">pict_type</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:45">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:14">newpic</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:25">key_frame</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="59:5" pos:end="217:5">for <control pos:start="59:9" pos:end="59:35">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">y</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:27"><expr pos:start="59:17" pos:end="59:26"><name pos:start="59:17" pos:end="59:17">y</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:26">HEIGHT</name></expr>;</condition> <incr pos:start="59:29" pos:end="59:34"><expr pos:start="59:29" pos:end="59:34"><name pos:start="59:29" pos:end="59:29">y</name> <operator pos:start="59:31" pos:end="59:32">+=</operator> <literal type="number" pos:start="59:34" pos:end="59:34">8</literal></expr></incr>)</control> <block pos:start="59:37" pos:end="217:5">{<block_content pos:start="61:9" pos:end="215:9">

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:11">out</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:29"><name pos:start="61:15" pos:end="61:20">newpic</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:26">data</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>]</index></name> <operator pos:start="61:31" pos:end="61:31">+</operator> <name pos:start="61:33" pos:end="61:33">y</name> <operator pos:start="61:35" pos:end="61:35">*</operator> <name pos:start="61:37" pos:end="61:42">stride</name></expr>;</expr_stmt>

        <for pos:start="63:9" pos:end="215:9">for <control pos:start="63:13" pos:end="63:38">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">x</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:30"><expr pos:start="63:21" pos:end="63:29"><name pos:start="63:21" pos:end="63:21">x</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:29">WIDTH</name></expr>;</condition> <incr pos:start="63:32" pos:end="63:37"><expr pos:start="63:32" pos:end="63:37"><name pos:start="63:32" pos:end="63:32">x</name> <operator pos:start="63:34" pos:end="63:35">+=</operator> <literal type="number" pos:start="63:37" pos:end="63:37">8</literal></expr></incr>)</control> <block pos:start="63:40" pos:end="215:9">{<block_content pos:start="65:13" pos:end="213:21">

            <decl_stmt pos:start="65:13" pos:end="65:49"><decl pos:start="65:13" pos:end="65:48"><type pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:19">uint8_t</name> <modifier pos:start="65:21" pos:end="65:21">*</modifier></type><name pos:start="65:22" pos:end="65:30">copy_from</name> <init pos:start="65:32" pos:end="65:48">= <expr pos:start="65:34" pos:end="65:48"><name pos:start="65:34" pos:end="65:48"><name pos:start="65:34" pos:end="65:39">oldpic</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:45">data</name><index pos:start="65:46" pos:end="65:48">[<expr pos:start="65:47" pos:end="65:47"><literal type="number" pos:start="65:47" pos:end="65:47">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="67:13" pos:end="67:35"><decl pos:start="67:13" pos:end="67:31"><type pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:20">unsigned</name> <name pos:start="67:22" pos:end="67:24">int</name></type> <name pos:start="67:26" pos:end="67:31">offset</name></decl>, <decl pos:start="67:34" pos:end="67:34"><type ref="prev" pos:start="67:13" pos:end="67:24"/><name pos:start="67:34" pos:end="67:34">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="69:13" pos:end="69:37"><decl pos:start="69:13" pos:end="69:27"><type pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:19">uint8_t</name></type> <name pos:start="69:21" pos:end="69:27"><name pos:start="69:21" pos:end="69:24">cols</name><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">4</literal></expr>]</index></name></decl>, <decl pos:start="69:30" pos:end="69:36"><type ref="prev" pos:start="69:13" pos:end="69:19"/><name pos:start="69:30" pos:end="69:36"><name pos:start="69:30" pos:end="69:33">grps</name><index pos:start="69:34" pos:end="69:36">[<expr pos:start="69:35" pos:end="69:35"><literal type="number" pos:start="69:35" pos:end="69:35">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:36"><decl pos:start="71:13" pos:end="71:35"><type pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:24">C93BlockType</name></type> <name pos:start="71:26" pos:end="71:35">block_type</name></decl>;</decl_stmt>



            <if_stmt pos:start="75:13" pos:end="77:47"><if pos:start="75:13" pos:end="77:47">if <condition pos:start="75:16" pos:end="75:20">(<expr pos:start="75:17" pos:end="75:19"><operator pos:start="75:17" pos:end="75:17">!</operator><name pos:start="75:18" pos:end="75:19">bt</name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:47"><block_content pos:start="77:17" pos:end="77:47">

                <expr_stmt pos:start="77:17" pos:end="77:47"><expr pos:start="77:17" pos:end="77:46"><name pos:start="77:17" pos:end="77:18">bt</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:46"><name pos:start="77:22" pos:end="77:41">bytestream2_get_byte</name><argument_list pos:start="77:42" pos:end="77:46">(<argument pos:start="77:43" pos:end="77:45"><expr pos:start="77:43" pos:end="77:45"><operator pos:start="77:43" pos:end="77:43">&amp;</operator><name pos:start="77:44" pos:end="77:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:22">block_type</name><operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:26">bt</name> <operator pos:start="81:28" pos:end="81:28">&amp;</operator> <literal type="number" pos:start="81:30" pos:end="81:33">0x0F</literal></expr>;</expr_stmt>

            <switch pos:start="83:13" pos:end="209:13">switch <condition pos:start="83:20" pos:end="83:31">(<expr pos:start="83:21" pos:end="83:30"><name pos:start="83:21" pos:end="83:30">block_type</name></expr>)</condition> <block pos:start="83:33" pos:end="209:13">{<block_content pos:start="85:13" pos:end="207:43">

            <case pos:start="85:13" pos:end="85:35">case <expr pos:start="85:18" pos:end="85:34"><name pos:start="85:18" pos:end="85:34">C93_8X8_FROM_PREV</name></expr>:</case>

                <expr_stmt pos:start="87:17" pos:end="87:51"><expr pos:start="87:17" pos:end="87:50"><name pos:start="87:17" pos:end="87:22">offset</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <call pos:start="87:26" pos:end="87:50"><name pos:start="87:26" pos:end="87:45">bytestream2_get_le16</name><argument_list pos:start="87:46" pos:end="87:50">(<argument pos:start="87:47" pos:end="87:49"><expr pos:start="87:47" pos:end="87:49"><operator pos:start="87:47" pos:end="87:47">&amp;</operator><name pos:start="87:48" pos:end="87:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="91:31"><if pos:start="89:17" pos:end="91:31">if <condition pos:start="89:20" pos:end="89:85">(<expr pos:start="89:21" pos:end="89:84"><operator pos:start="89:21" pos:end="89:21">(</operator><name pos:start="89:22" pos:end="89:24">ret</name> <operator pos:start="89:26" pos:end="89:26">=</operator> <call pos:start="89:28" pos:end="89:79"><name pos:start="89:28" pos:end="89:37">copy_block</name><argument_list pos:start="89:38" pos:end="89:79">(<argument pos:start="89:39" pos:end="89:43"><expr pos:start="89:39" pos:end="89:43"><name pos:start="89:39" pos:end="89:43">avctx</name></expr></argument>, <argument pos:start="89:46" pos:end="89:48"><expr pos:start="89:46" pos:end="89:48"><name pos:start="89:46" pos:end="89:48">out</name></expr></argument>, <argument pos:start="89:51" pos:end="89:59"><expr pos:start="89:51" pos:end="89:59"><name pos:start="89:51" pos:end="89:59">copy_from</name></expr></argument>, <argument pos:start="89:62" pos:end="89:67"><expr pos:start="89:62" pos:end="89:67"><name pos:start="89:62" pos:end="89:67">offset</name></expr></argument>, <argument pos:start="89:70" pos:end="89:70"><expr pos:start="89:70" pos:end="89:70"><literal type="number" pos:start="89:70" pos:end="89:70">8</literal></expr></argument>, <argument pos:start="89:73" pos:end="89:78"><expr pos:start="89:73" pos:end="89:78"><name pos:start="89:73" pos:end="89:78">stride</name></expr></argument>)</argument_list></call><operator pos:start="89:80" pos:end="89:80">)</operator> <operator pos:start="89:82" pos:end="89:82">&lt;</operator> <literal type="number" pos:start="89:84" pos:end="89:84">0</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:31"><block_content pos:start="91:21" pos:end="91:31">

                    <return pos:start="91:21" pos:end="91:31">return <expr pos:start="91:28" pos:end="91:30"><name pos:start="91:28" pos:end="91:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="93:17" pos:end="93:22">break;</break>



            <case pos:start="97:13" pos:end="97:35">case <expr pos:start="97:18" pos:end="97:34"><name pos:start="97:18" pos:end="97:34">C93_4X4_FROM_CURR</name></expr>:</case>

                <expr_stmt pos:start="99:17" pos:end="99:44"><expr pos:start="99:17" pos:end="99:43"><name pos:start="99:17" pos:end="99:25">copy_from</name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:43"><name pos:start="99:29" pos:end="99:34">newpic</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:40">data</name><index pos:start="99:41" pos:end="99:43">[<expr pos:start="99:42" pos:end="99:42"><literal type="number" pos:start="99:42" pos:end="99:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <case pos:start="101:13" pos:end="101:35">case <expr pos:start="101:18" pos:end="101:34"><name pos:start="101:18" pos:end="101:34">C93_4X4_FROM_PREV</name></expr>:</case>

                <for pos:start="103:17" pos:end="117:17">for <control pos:start="103:21" pos:end="103:42">(<init pos:start="103:22" pos:end="103:27"><expr pos:start="103:22" pos:end="103:26"><name pos:start="103:22" pos:end="103:22">j</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <literal type="number" pos:start="103:26" pos:end="103:26">0</literal></expr>;</init> <condition pos:start="103:29" pos:end="103:34"><expr pos:start="103:29" pos:end="103:33"><name pos:start="103:29" pos:end="103:29">j</name> <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <literal type="number" pos:start="103:33" pos:end="103:33">8</literal></expr>;</condition> <incr pos:start="103:36" pos:end="103:41"><expr pos:start="103:36" pos:end="103:41"><name pos:start="103:36" pos:end="103:36">j</name> <operator pos:start="103:38" pos:end="103:39">+=</operator> <literal type="number" pos:start="103:41" pos:end="103:41">4</literal></expr></incr>)</control> <block pos:start="103:44" pos:end="117:17">{<block_content pos:start="105:21" pos:end="115:21">

                    <for pos:start="105:21" pos:end="115:21">for <control pos:start="105:25" pos:end="105:46">(<init pos:start="105:26" pos:end="105:31"><expr pos:start="105:26" pos:end="105:30"><name pos:start="105:26" pos:end="105:26">i</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>;</init> <condition pos:start="105:33" pos:end="105:38"><expr pos:start="105:33" pos:end="105:37"><name pos:start="105:33" pos:end="105:33">i</name> <operator pos:start="105:35" pos:end="105:35">&lt;</operator> <literal type="number" pos:start="105:37" pos:end="105:37">8</literal></expr>;</condition> <incr pos:start="105:40" pos:end="105:45"><expr pos:start="105:40" pos:end="105:45"><name pos:start="105:40" pos:end="105:40">i</name> <operator pos:start="105:42" pos:end="105:43">+=</operator> <literal type="number" pos:start="105:45" pos:end="105:45">4</literal></expr></incr>)</control> <block pos:start="105:48" pos:end="115:21">{<block_content pos:start="107:25" pos:end="113:39">

                        <expr_stmt pos:start="107:25" pos:end="107:59"><expr pos:start="107:25" pos:end="107:58"><name pos:start="107:25" pos:end="107:30">offset</name> <operator pos:start="107:32" pos:end="107:32">=</operator> <call pos:start="107:34" pos:end="107:58"><name pos:start="107:34" pos:end="107:53">bytestream2_get_le16</name><argument_list pos:start="107:54" pos:end="107:58">(<argument pos:start="107:55" pos:end="107:57"><expr pos:start="107:55" pos:end="107:57"><operator pos:start="107:55" pos:end="107:55">&amp;</operator><name pos:start="107:56" pos:end="107:57">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="109:25" pos:end="113:39"><if pos:start="109:25" pos:end="113:39">if <condition pos:start="109:28" pos:end="111:81">(<expr pos:start="109:29" pos:end="111:80"><operator pos:start="109:29" pos:end="109:29">(</operator><name pos:start="109:30" pos:end="109:32">ret</name> <operator pos:start="109:34" pos:end="109:34">=</operator> <call pos:start="109:36" pos:end="111:75"><name pos:start="109:36" pos:end="109:45">copy_block</name><argument_list pos:start="109:46" pos:end="111:75">(<argument pos:start="109:47" pos:end="109:51"><expr pos:start="109:47" pos:end="109:51"><name pos:start="109:47" pos:end="109:51">avctx</name></expr></argument>, <argument pos:start="109:54" pos:end="109:69"><expr pos:start="109:54" pos:end="109:69"><operator pos:start="109:54" pos:end="109:54">&amp;</operator><name pos:start="109:55" pos:end="109:69"><name pos:start="109:55" pos:end="109:57">out</name><index pos:start="109:58" pos:end="109:69">[<expr pos:start="109:59" pos:end="109:68"><name pos:start="109:59" pos:end="109:59">j</name><operator pos:start="109:60" pos:end="109:60">*</operator><name pos:start="109:61" pos:end="109:66">stride</name><operator pos:start="109:67" pos:end="109:67">+</operator><name pos:start="109:68" pos:end="109:68">i</name></expr>]</index></name></expr></argument>,

                                              <argument pos:start="111:47" pos:end="111:55"><expr pos:start="111:47" pos:end="111:55"><name pos:start="111:47" pos:end="111:55">copy_from</name></expr></argument>, <argument pos:start="111:58" pos:end="111:63"><expr pos:start="111:58" pos:end="111:63"><name pos:start="111:58" pos:end="111:63">offset</name></expr></argument>, <argument pos:start="111:66" pos:end="111:66"><expr pos:start="111:66" pos:end="111:66"><literal type="number" pos:start="111:66" pos:end="111:66">4</literal></expr></argument>, <argument pos:start="111:69" pos:end="111:74"><expr pos:start="111:69" pos:end="111:74"><name pos:start="111:69" pos:end="111:74">stride</name></expr></argument>)</argument_list></call><operator pos:start="111:76" pos:end="111:76">)</operator> <operator pos:start="111:78" pos:end="111:78">&lt;</operator> <literal type="number" pos:start="111:80" pos:end="111:80">0</literal></expr>)</condition><block type="pseudo" pos:start="113:29" pos:end="113:39"><block_content pos:start="113:29" pos:end="113:39">

                            <return pos:start="113:29" pos:end="113:39">return <expr pos:start="113:36" pos:end="113:38"><name pos:start="113:36" pos:end="113:38">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="119:17" pos:end="119:22">break;</break>



            <case pos:start="123:13" pos:end="123:32">case <expr pos:start="123:18" pos:end="123:31"><name pos:start="123:18" pos:end="123:31">C93_8X8_2COLOR</name></expr>:</case>

                <expr_stmt pos:start="125:17" pos:end="125:53"><expr pos:start="125:17" pos:end="125:52"><call pos:start="125:17" pos:end="125:52"><name pos:start="125:17" pos:end="125:38">bytestream2_get_buffer</name><argument_list pos:start="125:39" pos:end="125:52">(<argument pos:start="125:40" pos:end="125:42"><expr pos:start="125:40" pos:end="125:42"><operator pos:start="125:40" pos:end="125:40">&amp;</operator><name pos:start="125:41" pos:end="125:42">gb</name></expr></argument>, <argument pos:start="125:45" pos:end="125:48"><expr pos:start="125:45" pos:end="125:48"><name pos:start="125:45" pos:end="125:48">cols</name></expr></argument>, <argument pos:start="125:51" pos:end="125:51"><expr pos:start="125:51" pos:end="125:51"><literal type="number" pos:start="125:51" pos:end="125:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="127:17" pos:end="133:17">for <control pos:start="127:21" pos:end="127:39">(<init pos:start="127:22" pos:end="127:27"><expr pos:start="127:22" pos:end="127:26"><name pos:start="127:22" pos:end="127:22">i</name> <operator pos:start="127:24" pos:end="127:24">=</operator> <literal type="number" pos:start="127:26" pos:end="127:26">0</literal></expr>;</init> <condition pos:start="127:29" pos:end="127:34"><expr pos:start="127:29" pos:end="127:33"><name pos:start="127:29" pos:end="127:29">i</name> <operator pos:start="127:31" pos:end="127:31">&lt;</operator> <literal type="number" pos:start="127:33" pos:end="127:33">8</literal></expr>;</condition> <incr pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:36">i</name><operator pos:start="127:37" pos:end="127:38">++</operator></expr></incr>)</control> <block pos:start="127:41" pos:end="133:17">{<block_content pos:start="129:21" pos:end="131:70">

                    <expr_stmt pos:start="129:21" pos:end="131:70"><expr pos:start="129:21" pos:end="131:69"><call pos:start="129:21" pos:end="131:69"><name pos:start="129:21" pos:end="129:32">draw_n_color</name><argument_list pos:start="129:33" pos:end="131:69">(<argument pos:start="129:34" pos:end="129:47"><expr pos:start="129:34" pos:end="129:47"><name pos:start="129:34" pos:end="129:36">out</name> <operator pos:start="129:38" pos:end="129:38">+</operator> <name pos:start="129:40" pos:end="129:40">i</name><operator pos:start="129:41" pos:end="129:41">*</operator><name pos:start="129:42" pos:end="129:47">stride</name></expr></argument>, <argument pos:start="129:50" pos:end="129:55"><expr pos:start="129:50" pos:end="129:55"><name pos:start="129:50" pos:end="129:55">stride</name></expr></argument>, <argument pos:start="129:58" pos:end="129:58"><expr pos:start="129:58" pos:end="129:58"><literal type="number" pos:start="129:58" pos:end="129:58">8</literal></expr></argument>, <argument pos:start="129:61" pos:end="129:61"><expr pos:start="129:61" pos:end="129:61"><literal type="number" pos:start="129:61" pos:end="129:61">1</literal></expr></argument>, <argument pos:start="129:64" pos:end="129:64"><expr pos:start="129:64" pos:end="129:64"><literal type="number" pos:start="129:64" pos:end="129:64">1</literal></expr></argument>, <argument pos:start="129:67" pos:end="129:70"><expr pos:start="129:67" pos:end="129:70"><name pos:start="129:67" pos:end="129:70">cols</name></expr></argument>,

                                     <argument pos:start="131:38" pos:end="131:41"><expr pos:start="131:38" pos:end="131:41"><name pos:start="131:38" pos:end="131:41">NULL</name></expr></argument>, <argument pos:start="131:44" pos:end="131:68"><expr pos:start="131:44" pos:end="131:68"><call pos:start="131:44" pos:end="131:68"><name pos:start="131:44" pos:end="131:63">bytestream2_get_byte</name><argument_list pos:start="131:64" pos:end="131:68">(<argument pos:start="131:65" pos:end="131:67"><expr pos:start="131:65" pos:end="131:67"><operator pos:start="131:65" pos:end="131:65">&amp;</operator><name pos:start="131:66" pos:end="131:67">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <break pos:start="137:17" pos:end="137:22">break;</break>



            <case pos:start="141:13" pos:end="141:32">case <expr pos:start="141:18" pos:end="141:31"><name pos:start="141:18" pos:end="141:31">C93_4X4_2COLOR</name></expr>:</case>

            <case pos:start="143:13" pos:end="143:32">case <expr pos:start="143:18" pos:end="143:31"><name pos:start="143:18" pos:end="143:31">C93_4X4_4COLOR</name></expr>:</case>

            <case pos:start="145:13" pos:end="145:36">case <expr pos:start="145:18" pos:end="145:35"><name pos:start="145:18" pos:end="145:35">C93_4X4_4COLOR_GRP</name></expr>:</case>

                <for pos:start="147:17" pos:end="179:17">for <control pos:start="147:21" pos:end="147:42">(<init pos:start="147:22" pos:end="147:27"><expr pos:start="147:22" pos:end="147:26"><name pos:start="147:22" pos:end="147:22">j</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <literal type="number" pos:start="147:26" pos:end="147:26">0</literal></expr>;</init> <condition pos:start="147:29" pos:end="147:34"><expr pos:start="147:29" pos:end="147:33"><name pos:start="147:29" pos:end="147:29">j</name> <operator pos:start="147:31" pos:end="147:31">&lt;</operator> <literal type="number" pos:start="147:33" pos:end="147:33">8</literal></expr>;</condition> <incr pos:start="147:36" pos:end="147:41"><expr pos:start="147:36" pos:end="147:41"><name pos:start="147:36" pos:end="147:36">j</name> <operator pos:start="147:38" pos:end="147:39">+=</operator> <literal type="number" pos:start="147:41" pos:end="147:41">4</literal></expr></incr>)</control> <block pos:start="147:44" pos:end="179:17">{<block_content pos:start="149:21" pos:end="177:21">

                    <for pos:start="149:21" pos:end="177:21">for <control pos:start="149:25" pos:end="149:46">(<init pos:start="149:26" pos:end="149:31"><expr pos:start="149:26" pos:end="149:30"><name pos:start="149:26" pos:end="149:26">i</name> <operator pos:start="149:28" pos:end="149:28">=</operator> <literal type="number" pos:start="149:30" pos:end="149:30">0</literal></expr>;</init> <condition pos:start="149:33" pos:end="149:38"><expr pos:start="149:33" pos:end="149:37"><name pos:start="149:33" pos:end="149:33">i</name> <operator pos:start="149:35" pos:end="149:35">&lt;</operator> <literal type="number" pos:start="149:37" pos:end="149:37">8</literal></expr>;</condition> <incr pos:start="149:40" pos:end="149:45"><expr pos:start="149:40" pos:end="149:45"><name pos:start="149:40" pos:end="149:40">i</name> <operator pos:start="149:42" pos:end="149:43">+=</operator> <literal type="number" pos:start="149:45" pos:end="149:45">4</literal></expr></incr>)</control> <block pos:start="149:48" pos:end="177:21">{<block_content pos:start="151:25" pos:end="175:25">

                        <if_stmt pos:start="151:25" pos:end="175:25"><if pos:start="151:25" pos:end="159:25">if <condition pos:start="151:28" pos:end="151:57">(<expr pos:start="151:29" pos:end="151:56"><name pos:start="151:29" pos:end="151:38">block_type</name> <operator pos:start="151:40" pos:end="151:41">==</operator> <name pos:start="151:43" pos:end="151:56">C93_4X4_2COLOR</name></expr>)</condition> <block pos:start="151:59" pos:end="159:25">{<block_content pos:start="153:29" pos:end="157:78">

                            <expr_stmt pos:start="153:29" pos:end="153:65"><expr pos:start="153:29" pos:end="153:64"><call pos:start="153:29" pos:end="153:64"><name pos:start="153:29" pos:end="153:50">bytestream2_get_buffer</name><argument_list pos:start="153:51" pos:end="153:64">(<argument pos:start="153:52" pos:end="153:54"><expr pos:start="153:52" pos:end="153:54"><operator pos:start="153:52" pos:end="153:52">&amp;</operator><name pos:start="153:53" pos:end="153:54">gb</name></expr></argument>, <argument pos:start="153:57" pos:end="153:60"><expr pos:start="153:57" pos:end="153:60"><name pos:start="153:57" pos:end="153:60">cols</name></expr></argument>, <argument pos:start="153:63" pos:end="153:63"><expr pos:start="153:63" pos:end="153:63"><literal type="number" pos:start="153:63" pos:end="153:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="155:29" pos:end="157:78"><expr pos:start="155:29" pos:end="157:77"><call pos:start="155:29" pos:end="157:77"><name pos:start="155:29" pos:end="155:40">draw_n_color</name><argument_list pos:start="155:41" pos:end="157:77">(<argument pos:start="155:42" pos:end="155:59"><expr pos:start="155:42" pos:end="155:59"><name pos:start="155:42" pos:end="155:44">out</name> <operator pos:start="155:46" pos:end="155:46">+</operator> <name pos:start="155:48" pos:end="155:48">i</name> <operator pos:start="155:50" pos:end="155:50">+</operator> <name pos:start="155:52" pos:end="155:52">j</name><operator pos:start="155:53" pos:end="155:53">*</operator><name pos:start="155:54" pos:end="155:59">stride</name></expr></argument>, <argument pos:start="155:62" pos:end="155:67"><expr pos:start="155:62" pos:end="155:67"><name pos:start="155:62" pos:end="155:67">stride</name></expr></argument>, <argument pos:start="155:70" pos:end="155:70"><expr pos:start="155:70" pos:end="155:70"><literal type="number" pos:start="155:70" pos:end="155:70">4</literal></expr></argument>, <argument pos:start="155:73" pos:end="155:73"><expr pos:start="155:73" pos:end="155:73"><literal type="number" pos:start="155:73" pos:end="155:73">4</literal></expr></argument>,

                                    <argument pos:start="157:37" pos:end="157:37"><expr pos:start="157:37" pos:end="157:37"><literal type="number" pos:start="157:37" pos:end="157:37">1</literal></expr></argument>, <argument pos:start="157:40" pos:end="157:43"><expr pos:start="157:40" pos:end="157:43"><name pos:start="157:40" pos:end="157:43">cols</name></expr></argument>, <argument pos:start="157:46" pos:end="157:49"><expr pos:start="157:46" pos:end="157:49"><name pos:start="157:46" pos:end="157:49">NULL</name></expr></argument>, <argument pos:start="157:52" pos:end="157:76"><expr pos:start="157:52" pos:end="157:76"><call pos:start="157:52" pos:end="157:76"><name pos:start="157:52" pos:end="157:71">bytestream2_get_le16</name><argument_list pos:start="157:72" pos:end="157:76">(<argument pos:start="157:73" pos:end="157:75"><expr pos:start="157:73" pos:end="157:75"><operator pos:start="157:73" pos:end="157:73">&amp;</operator><name pos:start="157:74" pos:end="157:75">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="159:27" pos:end="167:25">else if <condition pos:start="159:35" pos:end="159:64">(<expr pos:start="159:36" pos:end="159:63"><name pos:start="159:36" pos:end="159:45">block_type</name> <operator pos:start="159:47" pos:end="159:48">==</operator> <name pos:start="159:50" pos:end="159:63">C93_4X4_4COLOR</name></expr>)</condition> <block pos:start="159:66" pos:end="167:25">{<block_content pos:start="161:29" pos:end="165:78">

                            <expr_stmt pos:start="161:29" pos:end="161:65"><expr pos:start="161:29" pos:end="161:64"><call pos:start="161:29" pos:end="161:64"><name pos:start="161:29" pos:end="161:50">bytestream2_get_buffer</name><argument_list pos:start="161:51" pos:end="161:64">(<argument pos:start="161:52" pos:end="161:54"><expr pos:start="161:52" pos:end="161:54"><operator pos:start="161:52" pos:end="161:52">&amp;</operator><name pos:start="161:53" pos:end="161:54">gb</name></expr></argument>, <argument pos:start="161:57" pos:end="161:60"><expr pos:start="161:57" pos:end="161:60"><name pos:start="161:57" pos:end="161:60">cols</name></expr></argument>, <argument pos:start="161:63" pos:end="161:63"><expr pos:start="161:63" pos:end="161:63"><literal type="number" pos:start="161:63" pos:end="161:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="163:29" pos:end="165:78"><expr pos:start="163:29" pos:end="165:77"><call pos:start="163:29" pos:end="165:77"><name pos:start="163:29" pos:end="163:40">draw_n_color</name><argument_list pos:start="163:41" pos:end="165:77">(<argument pos:start="163:42" pos:end="163:59"><expr pos:start="163:42" pos:end="163:59"><name pos:start="163:42" pos:end="163:44">out</name> <operator pos:start="163:46" pos:end="163:46">+</operator> <name pos:start="163:48" pos:end="163:48">i</name> <operator pos:start="163:50" pos:end="163:50">+</operator> <name pos:start="163:52" pos:end="163:52">j</name><operator pos:start="163:53" pos:end="163:53">*</operator><name pos:start="163:54" pos:end="163:59">stride</name></expr></argument>, <argument pos:start="163:62" pos:end="163:67"><expr pos:start="163:62" pos:end="163:67"><name pos:start="163:62" pos:end="163:67">stride</name></expr></argument>, <argument pos:start="163:70" pos:end="163:70"><expr pos:start="163:70" pos:end="163:70"><literal type="number" pos:start="163:70" pos:end="163:70">4</literal></expr></argument>, <argument pos:start="163:73" pos:end="163:73"><expr pos:start="163:73" pos:end="163:73"><literal type="number" pos:start="163:73" pos:end="163:73">4</literal></expr></argument>,

                                    <argument pos:start="165:37" pos:end="165:37"><expr pos:start="165:37" pos:end="165:37"><literal type="number" pos:start="165:37" pos:end="165:37">2</literal></expr></argument>, <argument pos:start="165:40" pos:end="165:43"><expr pos:start="165:40" pos:end="165:43"><name pos:start="165:40" pos:end="165:43">cols</name></expr></argument>, <argument pos:start="165:46" pos:end="165:49"><expr pos:start="165:46" pos:end="165:49"><name pos:start="165:46" pos:end="165:49">NULL</name></expr></argument>, <argument pos:start="165:52" pos:end="165:76"><expr pos:start="165:52" pos:end="165:76"><call pos:start="165:52" pos:end="165:76"><name pos:start="165:52" pos:end="165:71">bytestream2_get_le32</name><argument_list pos:start="165:72" pos:end="165:76">(<argument pos:start="165:73" pos:end="165:75"><expr pos:start="165:73" pos:end="165:75"><operator pos:start="165:73" pos:end="165:73">&amp;</operator><name pos:start="165:74" pos:end="165:75">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="167:27" pos:end="175:25">else <block pos:start="167:32" pos:end="175:25">{<block_content pos:start="169:29" pos:end="173:78">

                            <expr_stmt pos:start="169:29" pos:end="169:65"><expr pos:start="169:29" pos:end="169:64"><call pos:start="169:29" pos:end="169:64"><name pos:start="169:29" pos:end="169:50">bytestream2_get_buffer</name><argument_list pos:start="169:51" pos:end="169:64">(<argument pos:start="169:52" pos:end="169:54"><expr pos:start="169:52" pos:end="169:54"><operator pos:start="169:52" pos:end="169:52">&amp;</operator><name pos:start="169:53" pos:end="169:54">gb</name></expr></argument>, <argument pos:start="169:57" pos:end="169:60"><expr pos:start="169:57" pos:end="169:60"><name pos:start="169:57" pos:end="169:60">grps</name></expr></argument>, <argument pos:start="169:63" pos:end="169:63"><expr pos:start="169:63" pos:end="169:63"><literal type="number" pos:start="169:63" pos:end="169:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="171:29" pos:end="173:78"><expr pos:start="171:29" pos:end="173:77"><call pos:start="171:29" pos:end="173:77"><name pos:start="171:29" pos:end="171:40">draw_n_color</name><argument_list pos:start="171:41" pos:end="173:77">(<argument pos:start="171:42" pos:end="171:59"><expr pos:start="171:42" pos:end="171:59"><name pos:start="171:42" pos:end="171:44">out</name> <operator pos:start="171:46" pos:end="171:46">+</operator> <name pos:start="171:48" pos:end="171:48">i</name> <operator pos:start="171:50" pos:end="171:50">+</operator> <name pos:start="171:52" pos:end="171:52">j</name><operator pos:start="171:53" pos:end="171:53">*</operator><name pos:start="171:54" pos:end="171:59">stride</name></expr></argument>, <argument pos:start="171:62" pos:end="171:67"><expr pos:start="171:62" pos:end="171:67"><name pos:start="171:62" pos:end="171:67">stride</name></expr></argument>, <argument pos:start="171:70" pos:end="171:70"><expr pos:start="171:70" pos:end="171:70"><literal type="number" pos:start="171:70" pos:end="171:70">4</literal></expr></argument>, <argument pos:start="171:73" pos:end="171:73"><expr pos:start="171:73" pos:end="171:73"><literal type="number" pos:start="171:73" pos:end="171:73">4</literal></expr></argument>,

                                    <argument pos:start="173:37" pos:end="173:37"><expr pos:start="173:37" pos:end="173:37"><literal type="number" pos:start="173:37" pos:end="173:37">1</literal></expr></argument>, <argument pos:start="173:40" pos:end="173:43"><expr pos:start="173:40" pos:end="173:43"><name pos:start="173:40" pos:end="173:43">cols</name></expr></argument>, <argument pos:start="173:46" pos:end="173:49"><expr pos:start="173:46" pos:end="173:49"><name pos:start="173:46" pos:end="173:49">grps</name></expr></argument>, <argument pos:start="173:52" pos:end="173:76"><expr pos:start="173:52" pos:end="173:76"><call pos:start="173:52" pos:end="173:76"><name pos:start="173:52" pos:end="173:71">bytestream2_get_le16</name><argument_list pos:start="173:72" pos:end="173:76">(<argument pos:start="173:73" pos:end="173:75"><expr pos:start="173:73" pos:end="173:75"><operator pos:start="173:73" pos:end="173:73">&amp;</operator><name pos:start="173:74" pos:end="173:75">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="181:17" pos:end="181:22">break;</break>



            <case pos:start="185:13" pos:end="185:26">case <expr pos:start="185:18" pos:end="185:25"><name pos:start="185:18" pos:end="185:25">C93_NOOP</name></expr>:</case>

                <break pos:start="187:17" pos:end="187:22">break;</break>



            <case pos:start="191:13" pos:end="191:31">case <expr pos:start="191:18" pos:end="191:30"><name pos:start="191:18" pos:end="191:30">C93_8X8_INTRA</name></expr>:</case>

                <for pos:start="193:17" pos:end="195:67">for <control pos:start="193:21" pos:end="193:39">(<init pos:start="193:22" pos:end="193:27"><expr pos:start="193:22" pos:end="193:26"><name pos:start="193:22" pos:end="193:22">j</name> <operator pos:start="193:24" pos:end="193:24">=</operator> <literal type="number" pos:start="193:26" pos:end="193:26">0</literal></expr>;</init> <condition pos:start="193:29" pos:end="193:34"><expr pos:start="193:29" pos:end="193:33"><name pos:start="193:29" pos:end="193:29">j</name> <operator pos:start="193:31" pos:end="193:31">&lt;</operator> <literal type="number" pos:start="193:33" pos:end="193:33">8</literal></expr>;</condition> <incr pos:start="193:36" pos:end="193:38"><expr pos:start="193:36" pos:end="193:38"><name pos:start="193:36" pos:end="193:36">j</name><operator pos:start="193:37" pos:end="193:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="195:21" pos:end="195:67"><block_content pos:start="195:21" pos:end="195:67">

                    <expr_stmt pos:start="195:21" pos:end="195:67"><expr pos:start="195:21" pos:end="195:66"><call pos:start="195:21" pos:end="195:66"><name pos:start="195:21" pos:end="195:42">bytestream2_get_buffer</name><argument_list pos:start="195:43" pos:end="195:66">(<argument pos:start="195:44" pos:end="195:46"><expr pos:start="195:44" pos:end="195:46"><operator pos:start="195:44" pos:end="195:44">&amp;</operator><name pos:start="195:45" pos:end="195:46">gb</name></expr></argument>, <argument pos:start="195:49" pos:end="195:62"><expr pos:start="195:49" pos:end="195:62"><name pos:start="195:49" pos:end="195:51">out</name> <operator pos:start="195:53" pos:end="195:53">+</operator> <name pos:start="195:55" pos:end="195:55">j</name><operator pos:start="195:56" pos:end="195:56">*</operator><name pos:start="195:57" pos:end="195:62">stride</name></expr></argument>, <argument pos:start="195:65" pos:end="195:65"><expr pos:start="195:65" pos:end="195:65"><literal type="number" pos:start="195:65" pos:end="195:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <break pos:start="197:17" pos:end="197:22">break;</break>



            <default pos:start="201:13" pos:end="201:20">default:</default>

                <expr_stmt pos:start="203:17" pos:end="205:41"><expr pos:start="203:17" pos:end="205:40"><call pos:start="203:17" pos:end="205:40"><name pos:start="203:17" pos:end="203:22">av_log</name><argument_list pos:start="203:23" pos:end="205:40">(<argument pos:start="203:24" pos:end="203:28"><expr pos:start="203:24" pos:end="203:28"><name pos:start="203:24" pos:end="203:28">avctx</name></expr></argument>, <argument pos:start="203:31" pos:end="203:42"><expr pos:start="203:31" pos:end="203:42"><name pos:start="203:31" pos:end="203:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="203:45" pos:end="203:75"><expr pos:start="203:45" pos:end="203:75"><literal type="string" pos:start="203:45" pos:end="203:75">"unexpected type %x at %dx%d\n"</literal></expr></argument>,

                       <argument pos:start="205:24" pos:end="205:33"><expr pos:start="205:24" pos:end="205:33"><name pos:start="205:24" pos:end="205:33">block_type</name></expr></argument>, <argument pos:start="205:36" pos:end="205:36"><expr pos:start="205:36" pos:end="205:36"><name pos:start="205:36" pos:end="205:36">x</name></expr></argument>, <argument pos:start="205:39" pos:end="205:39"><expr pos:start="205:39" pos:end="205:39"><name pos:start="205:39" pos:end="205:39">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="207:17" pos:end="207:43">return <expr pos:start="207:24" pos:end="207:42"><name pos:start="207:24" pos:end="207:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></switch>

            <expr_stmt pos:start="211:13" pos:end="211:21"><expr pos:start="211:13" pos:end="211:20"><name pos:start="211:13" pos:end="211:14">bt</name> <operator pos:start="211:16" pos:end="211:18">&gt;&gt;=</operator> <literal type="number" pos:start="211:20" pos:end="211:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:21"><expr pos:start="213:13" pos:end="213:20"><name pos:start="213:13" pos:end="213:15">out</name> <operator pos:start="213:17" pos:end="213:18">+=</operator> <literal type="number" pos:start="213:20" pos:end="213:20">8</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="221:5" pos:end="239:5"><if pos:start="221:5" pos:end="233:5">if <condition pos:start="221:8" pos:end="221:28">(<expr pos:start="221:9" pos:end="221:27"><name pos:start="221:9" pos:end="221:9">b</name> <operator pos:start="221:11" pos:end="221:11">&amp;</operator> <name pos:start="221:13" pos:end="221:27">C93_HAS_PALETTE</name></expr>)</condition> <block pos:start="221:30" pos:end="233:5">{<block_content pos:start="223:9" pos:end="231:40">

        <decl_stmt pos:start="223:9" pos:end="223:57"><decl pos:start="223:9" pos:end="223:56"><type pos:start="223:9" pos:end="223:18"><name pos:start="223:9" pos:end="223:16">uint32_t</name> <modifier pos:start="223:18" pos:end="223:18">*</modifier></type><name pos:start="223:19" pos:end="223:25">palette</name> <init pos:start="223:27" pos:end="223:56">= <expr pos:start="223:29" pos:end="223:56"><operator pos:start="223:29" pos:end="223:29">(</operator><name pos:start="223:30" pos:end="223:37">uint32_t</name> <operator pos:start="223:39" pos:end="223:39">*</operator><operator pos:start="223:40" pos:end="223:40">)</operator> <name pos:start="223:42" pos:end="223:56"><name pos:start="223:42" pos:end="223:47">newpic</name><operator pos:start="223:48" pos:end="223:49">-&gt;</operator><name pos:start="223:50" pos:end="223:53">data</name><index pos:start="223:54" pos:end="223:56">[<expr pos:start="223:55" pos:end="223:55"><literal type="number" pos:start="223:55" pos:end="223:55">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="225:9" pos:end="229:9">for <control pos:start="225:13" pos:end="225:33">(<init pos:start="225:14" pos:end="225:19"><expr pos:start="225:14" pos:end="225:18"><name pos:start="225:14" pos:end="225:14">i</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>;</init> <condition pos:start="225:21" pos:end="225:28"><expr pos:start="225:21" pos:end="225:27"><name pos:start="225:21" pos:end="225:21">i</name> <operator pos:start="225:23" pos:end="225:23">&lt;</operator> <literal type="number" pos:start="225:25" pos:end="225:27">256</literal></expr>;</condition> <incr pos:start="225:30" pos:end="225:32"><expr pos:start="225:30" pos:end="225:32"><name pos:start="225:30" pos:end="225:30">i</name><operator pos:start="225:31" pos:end="225:32">++</operator></expr></incr>)</control> <block pos:start="225:35" pos:end="229:9">{<block_content pos:start="227:13" pos:end="227:65">

            <expr_stmt pos:start="227:13" pos:end="227:65"><expr pos:start="227:13" pos:end="227:64"><name pos:start="227:13" pos:end="227:22"><name pos:start="227:13" pos:end="227:19">palette</name><index pos:start="227:20" pos:end="227:22">[<expr pos:start="227:21" pos:end="227:21"><name pos:start="227:21" pos:end="227:21">i</name></expr>]</index></name> <operator pos:start="227:24" pos:end="227:24">=</operator> <literal type="number" pos:start="227:26" pos:end="227:30">0xFFU</literal> <operator pos:start="227:32" pos:end="227:33">&lt;&lt;</operator> <literal type="number" pos:start="227:35" pos:end="227:36">24</literal> <operator pos:start="227:38" pos:end="227:38">|</operator> <call pos:start="227:40" pos:end="227:64"><name pos:start="227:40" pos:end="227:59">bytestream2_get_be24</name><argument_list pos:start="227:60" pos:end="227:64">(<argument pos:start="227:61" pos:end="227:63"><expr pos:start="227:61" pos:end="227:63"><operator pos:start="227:61" pos:end="227:61">&amp;</operator><name pos:start="227:62" pos:end="227:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="231:9" pos:end="231:40"><expr pos:start="231:9" pos:end="231:39"><name pos:start="231:9" pos:end="231:35"><name pos:start="231:9" pos:end="231:14">newpic</name><operator pos:start="231:15" pos:end="231:16">-&gt;</operator><name pos:start="231:17" pos:end="231:35">palette_has_changed</name></name> <operator pos:start="231:37" pos:end="231:37">=</operator> <literal type="number" pos:start="231:39" pos:end="231:39">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="233:7" pos:end="239:5">else <block pos:start="233:12" pos:end="239:5">{<block_content pos:start="235:9" pos:end="237:62">

        <if_stmt pos:start="235:9" pos:end="237:62"><if pos:start="235:9" pos:end="237:62">if <condition pos:start="235:12" pos:end="235:28">(<expr pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:18">oldpic</name><operator pos:start="235:19" pos:end="235:20">-&gt;</operator><name pos:start="235:21" pos:end="235:24">data</name><index pos:start="235:25" pos:end="235:27">[<expr pos:start="235:26" pos:end="235:26"><literal type="number" pos:start="235:26" pos:end="235:26">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:62"><block_content pos:start="237:13" pos:end="237:62">

            <expr_stmt pos:start="237:13" pos:end="237:62"><expr pos:start="237:13" pos:end="237:61"><call pos:start="237:13" pos:end="237:61"><name pos:start="237:13" pos:end="237:18">memcpy</name><argument_list pos:start="237:19" pos:end="237:61">(<argument pos:start="237:20" pos:end="237:34"><expr pos:start="237:20" pos:end="237:34"><name pos:start="237:20" pos:end="237:34"><name pos:start="237:20" pos:end="237:25">newpic</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:31">data</name><index pos:start="237:32" pos:end="237:34">[<expr pos:start="237:33" pos:end="237:33"><literal type="number" pos:start="237:33" pos:end="237:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="237:37" pos:end="237:51"><expr pos:start="237:37" pos:end="237:51"><name pos:start="237:37" pos:end="237:51"><name pos:start="237:37" pos:end="237:42">oldpic</name><operator pos:start="237:43" pos:end="237:44">-&gt;</operator><name pos:start="237:45" pos:end="237:48">data</name><index pos:start="237:49" pos:end="237:51">[<expr pos:start="237:50" pos:end="237:50"><literal type="number" pos:start="237:50" pos:end="237:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="237:54" pos:end="237:60"><expr pos:start="237:54" pos:end="237:60"><literal type="number" pos:start="237:54" pos:end="237:56">256</literal> <operator pos:start="237:58" pos:end="237:58">*</operator> <literal type="number" pos:start="237:60" pos:end="237:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="243:5" pos:end="245:19"><if pos:start="243:5" pos:end="245:19">if <condition pos:start="243:8" pos:end="243:47">(<expr pos:start="243:9" pos:end="243:46"><operator pos:start="243:9" pos:end="243:9">(</operator><name pos:start="243:10" pos:end="243:12">ret</name> <operator pos:start="243:14" pos:end="243:14">=</operator> <call pos:start="243:16" pos:end="243:41"><name pos:start="243:16" pos:end="243:27">av_frame_ref</name><argument_list pos:start="243:28" pos:end="243:41">(<argument pos:start="243:29" pos:end="243:32"><expr pos:start="243:29" pos:end="243:32"><name pos:start="243:29" pos:end="243:32">data</name></expr></argument>, <argument pos:start="243:35" pos:end="243:40"><expr pos:start="243:35" pos:end="243:40"><name pos:start="243:35" pos:end="243:40">newpic</name></expr></argument>)</argument_list></call><operator pos:start="243:42" pos:end="243:42">)</operator> <operator pos:start="243:44" pos:end="243:44">&lt;</operator> <literal type="number" pos:start="243:46" pos:end="243:46">0</literal></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="245:19"><block_content pos:start="245:9" pos:end="245:19">

        <return pos:start="245:9" pos:end="245:19">return <expr pos:start="245:16" pos:end="245:18"><name pos:start="245:16" pos:end="245:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:19"><expr pos:start="247:5" pos:end="247:18"><operator pos:start="247:5" pos:end="247:5">*</operator><name pos:start="247:6" pos:end="247:14">got_frame</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <literal type="number" pos:start="247:18" pos:end="247:18">1</literal></expr>;</expr_stmt>



    <return pos:start="251:5" pos:end="251:20">return <expr pos:start="251:12" pos:end="251:19"><name pos:start="251:12" pos:end="251:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
