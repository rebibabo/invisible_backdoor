<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19695.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">flic_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">FlicDecodeContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:29">fli_header</name> <init pos:start="7:31" pos:end="7:65">= <expr pos:start="7:33" pos:end="7:65"><operator pos:start="7:33" pos:end="7:33">(</operator><name pos:start="7:34" pos:end="7:41">unsigned</name> <name pos:start="7:43" pos:end="7:46">char</name> <operator pos:start="7:48" pos:end="7:48">*</operator><operator pos:start="7:49" pos:end="7:49">)</operator><name pos:start="7:50" pos:end="7:65"><name pos:start="7:50" pos:end="7:54">avctx</name><operator pos:start="7:55" pos:end="7:56">-&gt;</operator><name pos:start="7:57" pos:end="7:65">extradata</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">depth</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="19:38">(<expr pos:start="13:9" pos:end="19:37"><name pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:29">extradata_size</name></name> <operator pos:start="13:31" pos:end="13:32">!=</operator> <literal type="number" pos:start="13:34" pos:end="13:34">0</literal> <operator pos:start="13:36" pos:end="13:37">&amp;&amp;</operator>

        <name pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:29">extradata_size</name></name> <operator pos:start="15:31" pos:end="15:32">!=</operator> <literal type="number" pos:start="15:34" pos:end="15:35">12</literal> <operator pos:start="15:37" pos:end="15:38">&amp;&amp;</operator>

        <name pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:29">extradata_size</name></name> <operator pos:start="17:31" pos:end="17:32">!=</operator> <literal type="number" pos:start="17:34" pos:end="17:36">128</literal> <operator pos:start="17:38" pos:end="17:39">&amp;&amp;</operator>

        <name pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:13">avctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:29">extradata_size</name></name> <operator pos:start="19:31" pos:end="19:32">!=</operator> <literal type="number" pos:start="19:34" pos:end="19:37">1024</literal></expr>)</condition> <block pos:start="19:40" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:35">

        <expr_stmt pos:start="21:9" pos:end="21:85"><expr pos:start="21:9" pos:end="21:84"><call pos:start="21:9" pos:end="21:84"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:84">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:83"><expr pos:start="21:37" pos:end="21:83"><literal type="string" pos:start="21:37" pos:end="21:83">"Expected extradata of 12, 128 or 1024 bytes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">avctx</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:20">avctx</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="73:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:39">(<expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">avctx</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:32">extradata_size</name></name> <operator pos:start="33:34" pos:end="33:35">==</operator> <literal type="number" pos:start="33:37" pos:end="33:38">12</literal></expr>)</condition> <block pos:start="33:41" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <comment type="block" pos:start="35:9" pos:end="35:48">/* special case for magic carpet FLIs */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">fli_type</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:58">FLC_MAGIC_CARPET_SYNTHETIC_TYPE_CODE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:13">depth</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="59:5">else if <condition pos:start="41:15" pos:end="41:45">(<expr pos:start="41:16" pos:end="41:44"><name pos:start="41:16" pos:end="41:36"><name pos:start="41:16" pos:end="41:20">avctx</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:36">extradata_size</name></name> <operator pos:start="41:38" pos:end="41:39">==</operator> <literal type="number" pos:start="41:41" pos:end="41:44">1024</literal></expr>)</condition> <block pos:start="41:47" pos:end="59:5">{<block_content pos:start="43:9" pos:end="57:18">

        <decl_stmt pos:start="43:9" pos:end="43:40"><decl pos:start="43:9" pos:end="43:39"><type pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:15">uint8_t</name> <modifier pos:start="43:17" pos:end="43:17">*</modifier></type><name pos:start="43:18" pos:end="43:20">ptr</name> <init pos:start="43:22" pos:end="43:39">= <expr pos:start="43:24" pos:end="43:39"><name pos:start="43:24" pos:end="43:39"><name pos:start="43:24" pos:end="43:28">avctx</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:39">extradata</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:14"><decl pos:start="45:9" pos:end="45:13"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:13">i</name></decl>;</decl_stmt>



        <for pos:start="49:9" pos:end="55:9">for <control pos:start="49:13" pos:end="49:33">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:28"><expr pos:start="49:21" pos:end="49:27"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <literal type="number" pos:start="49:25" pos:end="49:27">256</literal></expr>;</condition> <incr pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:30">i</name><operator pos:start="49:31" pos:end="49:32">++</operator></expr></incr>)</control> <block pos:start="49:35" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:21">

            <expr_stmt pos:start="51:13" pos:end="51:41"><expr pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">palette</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">i</name></expr>]</index></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <call pos:start="51:29" pos:end="51:40"><name pos:start="51:29" pos:end="51:35">AV_RL32</name><argument_list pos:start="51:36" pos:end="51:40">(<argument pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:39">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">ptr</name> <operator pos:start="53:17" pos:end="53:18">+=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">4</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:13">depth</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="67:5">else if <condition pos:start="59:15" pos:end="59:42">(<expr pos:start="59:16" pos:end="59:41"><name pos:start="59:16" pos:end="59:36"><name pos:start="59:16" pos:end="59:20">avctx</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:36">extradata_size</name></name> <operator pos:start="59:38" pos:end="59:39">==</operator> <literal type="number" pos:start="59:41" pos:end="59:41">0</literal></expr>)</condition> <block pos:start="59:44" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:18">

        <comment type="block" pos:start="61:9" pos:end="61:57">/* FLI in MOV, see e.g. FFmpeg trac issue #626 */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:36"><expr pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">fli_type</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:35">FLI_TYPE_CODE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:13">depth</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <literal type="number" pos:start="65:17" pos:end="65:17">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="73:5">else <block pos:start="67:12" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:41">

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:19">fli_type</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:45"><name pos:start="69:23" pos:end="69:29">AV_RL16</name><argument_list pos:start="69:30" pos:end="69:45">(<argument pos:start="69:31" pos:end="69:44"><expr pos:start="69:31" pos:end="69:44"><operator pos:start="69:31" pos:end="69:31">&amp;</operator><name pos:start="69:32" pos:end="69:44"><name pos:start="69:32" pos:end="69:41">fli_header</name><index pos:start="69:42" pos:end="69:44">[<expr pos:start="69:43" pos:end="69:43"><literal type="number" pos:start="69:43" pos:end="69:43">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:41"><expr pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:13">depth</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <call pos:start="71:17" pos:end="71:40"><name pos:start="71:17" pos:end="71:23">AV_RL16</name><argument_list pos:start="71:24" pos:end="71:40">(<argument pos:start="71:25" pos:end="71:39"><expr pos:start="71:25" pos:end="71:39"><operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:39"><name pos:start="71:26" pos:end="71:35">fli_header</name><index pos:start="71:36" pos:end="71:39">[<expr pos:start="71:37" pos:end="71:38"><literal type="number" pos:start="71:37" pos:end="71:38">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:19">(<expr pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:13">depth</name> <operator pos:start="77:15" pos:end="77:16">==</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>)</condition> <block pos:start="77:21" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:18">

        <expr_stmt pos:start="79:9" pos:end="79:18"><expr pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:13">depth</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <literal type="number" pos:start="79:17" pos:end="79:17">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="79:20" pos:end="79:96">/* Some FLC generators set depth to zero, when they mean 8Bpp. Fix up here */</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:60">(<expr pos:start="85:9" pos:end="85:59"><operator pos:start="85:9" pos:end="85:9">(</operator><name pos:start="85:10" pos:end="85:20"><name pos:start="85:10" pos:end="85:10">s</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:20">fli_type</name></name> <operator pos:start="85:22" pos:end="85:23">==</operator> <name pos:start="85:25" pos:end="85:41">FLC_FLX_TYPE_CODE</name><operator pos:start="85:42" pos:end="85:42">)</operator> <operator pos:start="85:44" pos:end="85:45">&amp;&amp;</operator> <operator pos:start="85:47" pos:end="85:47">(</operator><name pos:start="85:48" pos:end="85:52">depth</name> <operator pos:start="85:54" pos:end="85:55">==</operator> <literal type="number" pos:start="85:57" pos:end="85:58">16</literal><operator pos:start="85:59" pos:end="85:59">)</operator></expr>)</condition> <block pos:start="85:62" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:19">

        <expr_stmt pos:start="87:9" pos:end="87:19"><expr pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:13">depth</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <literal type="number" pos:start="87:17" pos:end="87:18">15</literal></expr>;</expr_stmt> <comment type="block" pos:start="87:21" pos:end="87:96">/* Original Autodesk FLX's say the depth is 16Bpp when it is really 15Bpp */</comment>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="93:5" pos:end="113:5">switch <condition pos:start="93:12" pos:end="93:18">(<expr pos:start="93:13" pos:end="93:17"><name pos:start="93:13" pos:end="93:17">depth</name></expr>)</condition> <block pos:start="93:20" pos:end="113:5">{<block_content pos:start="95:9" pos:end="111:28">

        <case pos:start="95:9" pos:end="95:17">case <expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">8</literal></expr>  :</case> <expr_stmt pos:start="95:19" pos:end="95:48"><expr pos:start="95:19" pos:end="95:47"><name pos:start="95:19" pos:end="95:32"><name pos:start="95:19" pos:end="95:23">avctx</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:32">pix_fmt</name></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <name pos:start="95:36" pos:end="95:47">PIX_FMT_PAL8</name></expr>;</expr_stmt> <break pos:start="95:50" pos:end="95:55">break;</break>

        <case pos:start="97:9" pos:end="97:17">case <expr pos:start="97:14" pos:end="97:15"><literal type="number" pos:start="97:14" pos:end="97:15">15</literal></expr> :</case> <expr_stmt pos:start="97:19" pos:end="97:50"><expr pos:start="97:19" pos:end="97:49"><name pos:start="97:19" pos:end="97:32"><name pos:start="97:19" pos:end="97:23">avctx</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:32">pix_fmt</name></name> <operator pos:start="97:34" pos:end="97:34">=</operator> <name pos:start="97:36" pos:end="97:49">PIX_FMT_RGB555</name></expr>;</expr_stmt> <break pos:start="97:52" pos:end="97:57">break;</break>

        <case pos:start="99:9" pos:end="99:17">case <expr pos:start="99:14" pos:end="99:15"><literal type="number" pos:start="99:14" pos:end="99:15">16</literal></expr> :</case> <expr_stmt pos:start="99:19" pos:end="99:50"><expr pos:start="99:19" pos:end="99:49"><name pos:start="99:19" pos:end="99:32"><name pos:start="99:19" pos:end="99:23">avctx</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:32">pix_fmt</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:49">PIX_FMT_RGB565</name></expr>;</expr_stmt> <break pos:start="99:52" pos:end="99:57">break;</break>

        <case pos:start="101:9" pos:end="101:17">case <expr pos:start="101:14" pos:end="101:15"><literal type="number" pos:start="101:14" pos:end="101:15">24</literal></expr> :</case> <expr_stmt pos:start="101:19" pos:end="101:49"><expr pos:start="101:19" pos:end="101:48"><name pos:start="101:19" pos:end="101:32"><name pos:start="101:19" pos:end="101:23">avctx</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:32">pix_fmt</name></name> <operator pos:start="101:34" pos:end="101:34">=</operator> <name pos:start="101:36" pos:end="101:48">PIX_FMT_BGR24</name></expr>;</expr_stmt> <comment type="block" pos:start="101:51" pos:end="101:105">/* Supposedly BGR, but havent any files to test with */</comment>

                  <expr_stmt pos:start="103:19" pos:end="103:102"><expr pos:start="103:19" pos:end="103:101"><call pos:start="103:19" pos:end="103:101"><name pos:start="103:19" pos:end="103:24">av_log</name><argument_list pos:start="103:25" pos:end="103:101">(<argument pos:start="103:26" pos:end="103:30"><expr pos:start="103:26" pos:end="103:30"><name pos:start="103:26" pos:end="103:30">avctx</name></expr></argument>, <argument pos:start="103:33" pos:end="103:44"><expr pos:start="103:33" pos:end="103:44"><name pos:start="103:33" pos:end="103:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:47" pos:end="103:100"><expr pos:start="103:47" pos:end="103:100"><literal type="string" pos:start="103:47" pos:end="103:100">"24Bpp FLC/FLX is unsupported due to no test files.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  <return pos:start="105:19" pos:end="105:28">return <expr pos:start="105:26" pos:end="105:27"><operator pos:start="105:26" pos:end="105:26">-</operator><literal type="number" pos:start="105:27" pos:end="105:27">1</literal></expr>;</return>

        <default pos:start="107:9" pos:end="107:17">default :</default>

                  <expr_stmt pos:start="109:19" pos:end="109:105"><expr pos:start="109:19" pos:end="109:104"><call pos:start="109:19" pos:end="109:104"><name pos:start="109:19" pos:end="109:24">av_log</name><argument_list pos:start="109:25" pos:end="109:104">(<argument pos:start="109:26" pos:end="109:30"><expr pos:start="109:26" pos:end="109:30"><name pos:start="109:26" pos:end="109:30">avctx</name></expr></argument>, <argument pos:start="109:33" pos:end="109:44"><expr pos:start="109:33" pos:end="109:44"><name pos:start="109:33" pos:end="109:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:47" pos:end="109:97"><expr pos:start="109:47" pos:end="109:97"><literal type="string" pos:start="109:47" pos:end="109:97">"Unknown FLC/FLX depth of %d Bpp is unsupported.\n"</literal></expr></argument>,<argument pos:start="109:99" pos:end="109:103"><expr pos:start="109:99" pos:end="109:103"><name pos:start="109:99" pos:end="109:103">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  <return pos:start="111:19" pos:end="111:28">return <expr pos:start="111:26" pos:end="111:27"><operator pos:start="111:26" pos:end="111:26">-</operator><literal type="number" pos:start="111:27" pos:end="111:27">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="117:5" pos:end="117:42"><expr pos:start="117:5" pos:end="117:41"><call pos:start="117:5" pos:end="117:41"><name pos:start="117:5" pos:end="117:30">avcodec_get_frame_defaults</name><argument_list pos:start="117:31" pos:end="117:41">(<argument pos:start="117:32" pos:end="117:40"><expr pos:start="117:32" pos:end="117:40"><operator pos:start="117:32" pos:end="117:32">&amp;</operator><name pos:start="117:33" pos:end="117:40"><name pos:start="117:33" pos:end="117:33">s</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:40">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:28"><expr pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:20"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:12">frame</name><operator pos:start="119:13" pos:end="119:13">.</operator><name pos:start="119:14" pos:end="119:17">data</name><index pos:start="119:18" pos:end="119:20">[<expr pos:start="119:19" pos:end="119:19"><literal type="number" pos:start="119:19" pos:end="119:19">0</literal></expr>]</index></name> <operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:23"><expr pos:start="121:5" pos:end="121:22"><name pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:18">new_palette</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">0</literal></expr>;</expr_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
