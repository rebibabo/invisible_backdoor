<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9010.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">xan_huffman_decode</name><parameter_list pos:start="1:30" pos:end="3:62">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:37">uint8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">dest</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:57">dest_len</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:43">uint8_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">src</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:61"><decl pos:start="3:51" pos:end="3:61"><type pos:start="3:51" pos:end="3:61"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:61">src_len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:29">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:16">byte</name> <init pos:start="7:18" pos:end="7:25">= <expr pos:start="7:20" pos:end="7:25"><operator pos:start="7:20" pos:end="7:20">*</operator><name pos:start="7:21" pos:end="7:23">src</name><operator pos:start="7:24" pos:end="7:25">++</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:16">ival</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:23">byte</name> <operator pos:start="9:25" pos:end="9:25">+</operator> <literal type="number" pos:start="9:27" pos:end="9:30">0x16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type> <name pos:start="11:21" pos:end="11:23">ptr</name> <init pos:start="11:25" pos:end="11:38">= <expr pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:29">src</name> <operator pos:start="11:31" pos:end="11:31">+</operator> <name pos:start="11:33" pos:end="11:36">byte</name><operator pos:start="11:37" pos:end="11:37">*</operator><literal type="number" pos:start="11:38" pos:end="11:38">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">ptr_len</name> <init pos:start="13:17" pos:end="13:38">= <expr pos:start="13:19" pos:end="13:38"><name pos:start="13:19" pos:end="13:25">src_len</name> <operator pos:start="13:27" pos:end="13:27">-</operator> <literal type="number" pos:start="13:29" pos:end="13:31">1</literal> <operator pos:start="13:31" pos:end="13:31">-</operator> <name pos:start="13:33" pos:end="13:36">byte</name><operator pos:start="13:37" pos:end="13:37">*</operator><literal type="number" pos:start="13:38" pos:end="13:38">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:15">val</name> <init pos:start="15:17" pos:end="15:22">= <expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">ival</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:40"><decl pos:start="17:5" pos:end="17:39"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:21">dest_end</name> <init pos:start="17:23" pos:end="17:39">= <expr pos:start="17:25" pos:end="17:39"><name pos:start="17:25" pos:end="17:28">dest</name> <operator pos:start="17:30" pos:end="17:30">+</operator> <name pos:start="17:32" pos:end="17:39">dest_len</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:23">dest_start</name> <init pos:start="19:25" pos:end="19:30">= <expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">dest</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:17">GetBitContext</name></type> <name pos:start="23:19" pos:end="23:20">gb</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:19"><if pos:start="27:5" pos:end="29:19">if <condition pos:start="27:8" pos:end="27:54">(<expr pos:start="27:9" pos:end="27:53"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">ret</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:48"><name pos:start="27:16" pos:end="27:29">init_get_bits8</name><argument_list pos:start="27:30" pos:end="27:48">(<argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><operator pos:start="27:31" pos:end="27:31">&amp;</operator><name pos:start="27:32" pos:end="27:33">gb</name></expr></argument>, <argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">ptr</name></expr></argument>, <argument pos:start="27:41" pos:end="27:47"><expr pos:start="27:41" pos:end="27:47"><name pos:start="27:41" pos:end="27:47">ptr_len</name></expr></argument>)</argument_list></call><operator pos:start="27:49" pos:end="27:49">)</operator> <operator pos:start="27:51" pos:end="27:51">&lt;</operator> <literal type="number" pos:start="27:53" pos:end="27:53">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:19"><block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="33:5" pos:end="57:5">while <condition pos:start="33:11" pos:end="33:23">(<expr pos:start="33:12" pos:end="33:22"><name pos:start="33:12" pos:end="33:14">val</name> <operator pos:start="33:16" pos:end="33:17">!=</operator> <literal type="number" pos:start="33:19" pos:end="33:22">0x16</literal></expr>)</condition> <block pos:start="33:25" pos:end="57:5">{<block_content pos:start="35:9" pos:end="55:9">

        <decl_stmt pos:start="35:9" pos:end="35:58"><decl pos:start="35:9" pos:end="35:57"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:16">unsigned</name></type> <name pos:start="35:18" pos:end="35:20">idx</name> <init pos:start="35:22" pos:end="35:57">= <expr pos:start="35:24" pos:end="35:57"><name pos:start="35:24" pos:end="35:26">val</name> <operator pos:start="35:28" pos:end="35:28">-</operator> <literal type="number" pos:start="35:30" pos:end="35:35">0x17</literal> <operator pos:start="35:35" pos:end="35:35">+</operator> <call pos:start="35:37" pos:end="35:50"><name pos:start="35:37" pos:end="35:45">get_bits1</name><argument_list pos:start="35:46" pos:end="35:50">(<argument pos:start="35:47" pos:end="35:49"><expr pos:start="35:47" pos:end="35:49"><operator pos:start="35:47" pos:end="35:47">&amp;</operator><name pos:start="35:48" pos:end="35:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="35:52" pos:end="35:52">*</operator> <name pos:start="35:54" pos:end="35:57">byte</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="39:39"><if pos:start="37:9" pos:end="39:39">if <condition pos:start="37:12" pos:end="37:28">(<expr pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:15">idx</name> <operator pos:start="37:17" pos:end="37:18">&gt;=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">2</literal> <operator pos:start="37:22" pos:end="37:22">*</operator> <name pos:start="37:24" pos:end="37:27">byte</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:39"><block_content pos:start="39:13" pos:end="39:39">

            <return pos:start="39:13" pos:end="39:39">return <expr pos:start="39:20" pos:end="39:38"><name pos:start="39:20" pos:end="39:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:11">val</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:22"><name pos:start="41:15" pos:end="41:17">src</name><index pos:start="41:18" pos:end="41:22">[<expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">idx</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="55:9"><if pos:start="45:9" pos:end="55:9">if <condition pos:start="45:12" pos:end="45:23">(<expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:15">val</name> <operator pos:start="45:17" pos:end="45:17">&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:22">0x16</literal></expr>)</condition> <block pos:start="45:25" pos:end="55:9">{<block_content pos:start="47:13" pos:end="53:23">

            <if_stmt pos:start="47:13" pos:end="49:32"><if pos:start="47:13" pos:end="49:32">if <condition pos:start="47:16" pos:end="47:33">(<expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:20">dest</name> <operator pos:start="47:22" pos:end="47:23">&gt;=</operator> <name pos:start="47:25" pos:end="47:32">dest_end</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:32"><block_content pos:start="49:17" pos:end="49:32">

                <return pos:start="49:17" pos:end="49:32">return <expr pos:start="49:24" pos:end="49:31"><name pos:start="49:24" pos:end="49:31">dest_len</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:26"><expr pos:start="51:13" pos:end="51:25"><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:17">dest</name><operator pos:start="51:18" pos:end="51:19">++</operator> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:25">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:23"><expr pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:15">val</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:22">ival</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="61:5" pos:end="61:29">return <expr pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:15">dest</name> <operator pos:start="61:17" pos:end="61:17">-</operator> <name pos:start="61:19" pos:end="61:28">dest_start</name></expr>;</return>

</block_content>}</block></function>
</unit>
