<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1842.c" pos:tabs="8"><function pos:start="1:1" pos:end="599:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">exynos4210_fimd_write</name><parameter_list pos:start="1:34" pos:end="3:58">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:73"><decl pos:start="1:49" pos:end="1:73"><type pos:start="1:49" pos:end="1:73"><name pos:start="1:49" pos:end="1:66">target_phys_addr_t</name></type> <name pos:start="1:68" pos:end="1:73">offset</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:42"><decl pos:start="3:31" pos:end="3:42"><type pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:38">uint64_t</name></type> <name pos:start="3:40" pos:end="3:42">val</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:52">unsigned</name></type> <name pos:start="3:54" pos:end="3:57">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="599:1">{<block_content pos:start="7:5" pos:end="597:5">

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">Exynos4210fimdState</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:58">= <expr pos:start="7:30" pos:end="7:58"><operator pos:start="7:30" pos:end="7:30">(</operator><name pos:start="7:31" pos:end="7:49">Exynos4210fimdState</name> <operator pos:start="7:51" pos:end="7:51">*</operator><operator pos:start="7:52" pos:end="7:52">)</operator><name pos:start="7:53" pos:end="7:58">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:14">w</name></decl>, <decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:17" pos:end="9:17">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:22">old_value</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:70"><expr pos:start="15:5" pos:end="17:69"><call pos:start="15:5" pos:end="17:69"><name pos:start="15:5" pos:end="15:13">DPRINT_L2</name><argument_list pos:start="15:14" pos:end="17:69">(<argument pos:start="15:15" pos:end="15:59"><expr pos:start="15:15" pos:end="15:59"><literal type="string" pos:start="15:15" pos:end="15:59">"write offset 0x%08x, value=%llu(0x%08llx)\n"</literal></expr></argument>, <argument pos:start="15:62" pos:end="15:67"><expr pos:start="15:62" pos:end="15:67"><name pos:start="15:62" pos:end="15:67">offset</name></expr></argument>,

            <argument pos:start="17:13" pos:end="17:39"><expr pos:start="17:13" pos:end="17:39"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:17">long</name> <name pos:start="17:19" pos:end="17:22">long</name> <name pos:start="17:24" pos:end="17:31">unsigned</name> <name pos:start="17:33" pos:end="17:35">int</name><operator pos:start="17:36" pos:end="17:36">)</operator><name pos:start="17:37" pos:end="17:39">val</name></expr></argument>, <argument pos:start="17:42" pos:end="17:68"><expr pos:start="17:42" pos:end="17:68"><operator pos:start="17:42" pos:end="17:42">(</operator><name pos:start="17:43" pos:end="17:46">long</name> <name pos:start="17:48" pos:end="17:51">long</name> <name pos:start="17:53" pos:end="17:60">unsigned</name> <name pos:start="17:62" pos:end="17:64">int</name><operator pos:start="17:65" pos:end="17:65">)</operator><name pos:start="17:66" pos:end="17:68">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="21:5" pos:end="597:5">switch <condition pos:start="21:12" pos:end="21:19">(<expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18">offset</name></expr>)</condition> <block pos:start="21:21" pos:end="597:5">{<block_content pos:start="23:5" pos:end="595:14">

    <case pos:start="23:5" pos:end="23:22">case <expr pos:start="23:10" pos:end="23:21"><name pos:start="23:10" pos:end="23:21">FIMD_VIDCON0</name></expr>:</case>

        <if_stmt pos:start="25:9" pos:end="37:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:71">(<expr pos:start="25:13" pos:end="25:70"><operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:16">val</name> <operator pos:start="25:18" pos:end="25:18">&amp;</operator> <name pos:start="25:20" pos:end="25:42">FIMD_VIDCON0_ENVID_MASK</name><operator pos:start="25:43" pos:end="25:43">)</operator> <operator pos:start="25:45" pos:end="25:46">==</operator> <name pos:start="25:48" pos:end="25:70">FIMD_VIDCON0_ENVID_MASK</name></expr>)</condition> <block pos:start="25:73" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:44">

            <expr_stmt pos:start="27:13" pos:end="27:44"><expr pos:start="27:13" pos:end="27:43"><call pos:start="27:13" pos:end="27:43"><name pos:start="27:13" pos:end="27:34">exynos4210_fimd_enable</name><argument_list pos:start="27:35" pos:end="27:43">(<argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">s</name></expr></argument>, <argument pos:start="27:39" pos:end="27:42"><expr pos:start="27:39" pos:end="27:42"><name pos:start="27:39" pos:end="27:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="37:9">else <block pos:start="29:16" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:13">

            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:48">(<expr pos:start="31:17" pos:end="31:47"><operator pos:start="31:17" pos:end="31:17">(</operator><name pos:start="31:18" pos:end="31:20">val</name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <name pos:start="31:24" pos:end="31:41">FIMD_VIDCON0_ENVID</name><operator pos:start="31:42" pos:end="31:42">)</operator> <operator pos:start="31:44" pos:end="31:45">==</operator> <literal type="number" pos:start="31:47" pos:end="31:47">0</literal></expr>)</condition> <block pos:start="31:50" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:49">

                <expr_stmt pos:start="33:17" pos:end="33:49"><expr pos:start="33:17" pos:end="33:48"><call pos:start="33:17" pos:end="33:48"><name pos:start="33:17" pos:end="33:38">exynos4210_fimd_enable</name><argument_list pos:start="33:39" pos:end="33:48">(<argument pos:start="33:40" pos:end="33:40"><expr pos:start="33:40" pos:end="33:40"><name pos:start="33:40" pos:end="33:40">s</name></expr></argument>, <argument pos:start="33:43" pos:end="33:47"><expr pos:start="33:43" pos:end="33:47"><name pos:start="33:43" pos:end="33:47">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">vidcon</name><index pos:start="39:18" pos:end="39:20">[<expr pos:start="39:19" pos:end="39:19"><literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>]</index></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:26">val</name></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:22">case <expr pos:start="43:10" pos:end="43:21"><name pos:start="43:10" pos:end="43:21">FIMD_VIDCON1</name></expr>:</case>

        <comment type="block" pos:start="45:9" pos:end="45:40">/* Leave read-only bits as is */</comment>

        <expr_stmt pos:start="47:9" pos:end="49:53"><expr pos:start="47:9" pos:end="49:52"><name pos:start="47:9" pos:end="47:11">val</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">(</operator><name pos:start="47:16" pos:end="47:18">val</name> <operator pos:start="47:20" pos:end="47:20">&amp;</operator> <operator pos:start="47:22" pos:end="47:22">(</operator><operator pos:start="47:23" pos:end="47:23">~</operator><name pos:start="47:24" pos:end="47:42">FIMD_VIDCON1_ROMASK</name><operator pos:start="47:43" pos:end="47:43">)</operator><operator pos:start="47:44" pos:end="47:44">)</operator> <operator pos:start="47:46" pos:end="47:46">|</operator>

                <operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:29"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:26">vidcon</name><index pos:start="49:27" pos:end="49:29">[<expr pos:start="49:28" pos:end="49:28"><literal type="number" pos:start="49:28" pos:end="49:28">1</literal></expr>]</index></name> <operator pos:start="49:31" pos:end="49:31">&amp;</operator> <name pos:start="49:33" pos:end="49:51">FIMD_VIDCON1_ROMASK</name><operator pos:start="49:52" pos:end="49:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">vidcon</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><literal type="number" pos:start="51:19" pos:end="51:19">1</literal></expr>]</index></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:26">val</name></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:39">case <expr pos:start="55:10" pos:end="55:38"><name pos:start="55:10" pos:end="55:21">FIMD_VIDCON2</name> <operator pos:start="55:23" pos:end="55:25">...</operator> <name pos:start="55:27" pos:end="55:38">FIMD_VIDCON3</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">vidcon</name><index pos:start="57:18" pos:end="57:32">[<expr pos:start="57:19" pos:end="57:31"><operator pos:start="57:19" pos:end="57:19">(</operator><name pos:start="57:20" pos:end="57:25">offset</name><operator pos:start="57:26" pos:end="57:26">)</operator> <operator pos:start="57:28" pos:end="57:29">&gt;&gt;</operator> <literal type="number" pos:start="57:31" pos:end="57:31">2</literal></expr>]</index></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:38">val</name></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:49">case <expr pos:start="61:10" pos:end="61:48"><name pos:start="61:10" pos:end="61:27">FIMD_VIDTCON_START</name> <operator pos:start="61:29" pos:end="61:31">...</operator> <name pos:start="61:33" pos:end="61:48">FIMD_VIDTCON_END</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:61"><expr pos:start="63:9" pos:end="63:60"><name pos:start="63:9" pos:end="63:54"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:18">vidtcon</name><index pos:start="63:19" pos:end="63:54">[<expr pos:start="63:20" pos:end="63:53"><operator pos:start="63:20" pos:end="63:20">(</operator><name pos:start="63:21" pos:end="63:26">offset</name> <operator pos:start="63:28" pos:end="63:28">-</operator> <name pos:start="63:30" pos:end="63:47">FIMD_VIDTCON_START</name><operator pos:start="63:48" pos:end="63:48">)</operator> <operator pos:start="63:50" pos:end="63:51">&gt;&gt;</operator> <literal type="number" pos:start="63:53" pos:end="63:53">2</literal></expr>]</index></name> <operator pos:start="63:56" pos:end="63:56">=</operator> <name pos:start="63:58" pos:end="63:60">val</name></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:47">case <expr pos:start="67:10" pos:end="67:46"><name pos:start="67:10" pos:end="67:26">FIMD_WINCON_START</name> <operator pos:start="67:28" pos:end="67:30">...</operator> <name pos:start="67:32" pos:end="67:46">FIMD_WINCON_END</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:9">w</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:19">offset</name> <operator pos:start="69:21" pos:end="69:21">-</operator> <name pos:start="69:23" pos:end="69:39">FIMD_WINCON_START</name><operator pos:start="69:40" pos:end="69:40">)</operator> <operator pos:start="69:42" pos:end="69:43">&gt;&gt;</operator> <literal type="number" pos:start="69:45" pos:end="69:45">2</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="71:9" pos:end="71:40">/* Window's current buffer ID */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:46"><expr pos:start="73:9" pos:end="73:45"><name pos:start="73:9" pos:end="73:9">i</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <call pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:30">fimd_get_buffer_id</name><argument_list pos:start="73:31" pos:end="73:45">(<argument pos:start="73:32" pos:end="73:44"><expr pos:start="73:32" pos:end="73:44"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:44"><name pos:start="73:33" pos:end="73:33">s</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:41">window</name><index pos:start="73:42" pos:end="73:44">[<expr pos:start="73:43" pos:end="73:43"><name pos:start="73:43" pos:end="73:43">w</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:40"><expr pos:start="75:9" pos:end="75:39"><name pos:start="75:9" pos:end="75:17">old_value</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:32"><name pos:start="75:21" pos:end="75:21">s</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:29">window</name><index pos:start="75:30" pos:end="75:32">[<expr pos:start="75:31" pos:end="75:31"><name pos:start="75:31" pos:end="75:31">w</name></expr>]</index></name><operator pos:start="75:33" pos:end="75:33">.</operator><name pos:start="75:34" pos:end="75:39">wincon</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="79:59"><expr pos:start="77:9" pos:end="79:58"><name pos:start="77:9" pos:end="77:11">val</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <operator pos:start="77:15" pos:end="77:15">(</operator><name pos:start="77:16" pos:end="77:18">val</name> <operator pos:start="77:20" pos:end="77:20">&amp;</operator> <operator pos:start="77:22" pos:end="77:22">~</operator><name pos:start="77:23" pos:end="77:40">FIMD_WINCON_ROMASK</name><operator pos:start="77:41" pos:end="77:41">)</operator> <operator pos:start="77:43" pos:end="77:43">|</operator>

                <operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:29"><name pos:start="79:18" pos:end="79:18">s</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:26">window</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">w</name></expr>]</index></name><operator pos:start="79:30" pos:end="79:30">.</operator><name pos:start="79:31" pos:end="79:36">wincon</name> <operator pos:start="79:38" pos:end="79:38">&amp;</operator> <name pos:start="79:40" pos:end="79:57">FIMD_WINCON_ROMASK</name><operator pos:start="79:58" pos:end="79:58">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:19">(<expr pos:start="81:13" pos:end="81:18"><name pos:start="81:13" pos:end="81:13">w</name> <operator pos:start="81:15" pos:end="81:16">==</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>)</condition> <block pos:start="81:21" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:42">

            <comment type="block" pos:start="83:13" pos:end="83:64">/* Window 0 wincon ALPHA_MUL bit must always be 0 */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:42"><expr pos:start="85:13" pos:end="85:41"><name pos:start="85:13" pos:end="85:15">val</name> <operator pos:start="85:17" pos:end="85:18">&amp;=</operator> <operator pos:start="85:20" pos:end="85:20">~</operator><name pos:start="85:21" pos:end="85:41">FIMD_WINCON_ALPHA_MUL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:49"><expr pos:start="89:9" pos:end="89:48"><call pos:start="89:9" pos:end="89:48"><name pos:start="89:9" pos:end="89:37">exynos4210_fimd_trace_bppmode</name><argument_list pos:start="89:38" pos:end="89:48">(<argument pos:start="89:39" pos:end="89:39"><expr pos:start="89:39" pos:end="89:39"><name pos:start="89:39" pos:end="89:39">s</name></expr></argument>, <argument pos:start="89:42" pos:end="89:42"><expr pos:start="89:42" pos:end="89:42"><name pos:start="89:42" pos:end="89:42">w</name></expr></argument>, <argument pos:start="89:45" pos:end="89:47"><expr pos:start="89:45" pos:end="89:47"><name pos:start="89:45" pos:end="89:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="91:9" pos:end="119:9">switch <condition pos:start="91:16" pos:end="91:44">(<expr pos:start="91:17" pos:end="91:43"><name pos:start="91:17" pos:end="91:19">val</name> <operator pos:start="91:21" pos:end="91:21">&amp;</operator> <name pos:start="91:23" pos:end="91:43">FIMD_WINCON_BUFSELECT</name></expr>)</condition> <block pos:start="91:46" pos:end="119:9">{<block_content pos:start="93:9" pos:end="117:18">

        <case pos:start="93:9" pos:end="93:34">case <expr pos:start="93:14" pos:end="93:33"><name pos:start="93:14" pos:end="93:33">FIMD_WINCON_BUF0_SEL</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:42"><expr pos:start="95:13" pos:end="95:41"><name pos:start="95:13" pos:end="95:15">val</name> <operator pos:start="95:17" pos:end="95:18">&amp;=</operator> <operator pos:start="95:20" pos:end="95:20">~</operator><name pos:start="95:21" pos:end="95:41">FIMD_WINCON_BUFSTATUS</name></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:34">case <expr pos:start="99:14" pos:end="99:33"><name pos:start="99:14" pos:end="99:33">FIMD_WINCON_BUF1_SEL</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:73"><expr pos:start="101:13" pos:end="101:72"><name pos:start="101:13" pos:end="101:15">val</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <operator pos:start="101:19" pos:end="101:19">(</operator><name pos:start="101:20" pos:end="101:22">val</name> <operator pos:start="101:24" pos:end="101:24">&amp;</operator> <operator pos:start="101:26" pos:end="101:26">~</operator><name pos:start="101:27" pos:end="101:47">FIMD_WINCON_BUFSTAT_H</name><operator pos:start="101:48" pos:end="101:48">)</operator> <operator pos:start="101:50" pos:end="101:50">|</operator> <name pos:start="101:52" pos:end="101:72">FIMD_WINCON_BUFSTAT_L</name></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:34">case <expr pos:start="105:14" pos:end="105:33"><name pos:start="105:14" pos:end="105:33">FIMD_WINCON_BUF2_SEL</name></expr>:</case>

            <if_stmt pos:start="107:13" pos:end="111:13"><if pos:start="107:13" pos:end="111:13">if <condition pos:start="107:16" pos:end="107:42">(<expr pos:start="107:17" pos:end="107:41"><name pos:start="107:17" pos:end="107:19">val</name> <operator pos:start="107:21" pos:end="107:21">&amp;</operator> <name pos:start="107:23" pos:end="107:41">FIMD_WINCON_BUFMODE</name></expr>)</condition> <block pos:start="107:44" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:77">

                <expr_stmt pos:start="109:17" pos:end="109:77"><expr pos:start="109:17" pos:end="109:76"><name pos:start="109:17" pos:end="109:19">val</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <operator pos:start="109:23" pos:end="109:23">(</operator><name pos:start="109:24" pos:end="109:26">val</name> <operator pos:start="109:28" pos:end="109:28">&amp;</operator> <operator pos:start="109:30" pos:end="109:30">~</operator><name pos:start="109:31" pos:end="109:51">FIMD_WINCON_BUFSTAT_L</name><operator pos:start="109:52" pos:end="109:52">)</operator> <operator pos:start="109:54" pos:end="109:54">|</operator> <name pos:start="109:56" pos:end="109:76">FIMD_WINCON_BUFSTAT_H</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <default pos:start="115:9" pos:end="115:16">default:</default>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="121:9" pos:end="121:34"><expr pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:17">window</name><index pos:start="121:18" pos:end="121:20">[<expr pos:start="121:19" pos:end="121:19"><name pos:start="121:19" pos:end="121:19">w</name></expr>]</index></name><operator pos:start="121:21" pos:end="121:21">.</operator><name pos:start="121:22" pos:end="121:27">wincon</name> <operator pos:start="121:29" pos:end="121:29">=</operator> <name pos:start="121:31" pos:end="121:33">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:49"><expr pos:start="123:9" pos:end="123:48"><call pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:42">exynos4210_fimd_update_win_bppmode</name><argument_list pos:start="123:43" pos:end="123:48">(<argument pos:start="123:44" pos:end="123:44"><expr pos:start="123:44" pos:end="123:44"><name pos:start="123:44" pos:end="123:44">s</name></expr></argument>, <argument pos:start="123:47" pos:end="123:47"><expr pos:start="123:47" pos:end="123:47"><name pos:start="123:47" pos:end="123:47">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:36"><expr pos:start="125:9" pos:end="125:35"><call pos:start="125:9" pos:end="125:35"><name pos:start="125:9" pos:end="125:29">fimd_update_get_alpha</name><argument_list pos:start="125:30" pos:end="125:35">(<argument pos:start="125:31" pos:end="125:31"><expr pos:start="125:31" pos:end="125:31"><name pos:start="125:31" pos:end="125:31">s</name></expr></argument>, <argument pos:start="125:34" pos:end="125:34"><expr pos:start="125:34" pos:end="125:34"><name pos:start="125:34" pos:end="125:34">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="131:44">(<expr pos:start="127:13" pos:end="131:43"><operator pos:start="127:13" pos:end="127:13">(</operator><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:17">!=</operator> <call pos:start="127:19" pos:end="127:51"><name pos:start="127:19" pos:end="127:36">fimd_get_buffer_id</name><argument_list pos:start="127:37" pos:end="127:51">(<argument pos:start="127:38" pos:end="127:50"><expr pos:start="127:38" pos:end="127:50"><operator pos:start="127:38" pos:end="127:38">&amp;</operator><name pos:start="127:39" pos:end="127:50"><name pos:start="127:39" pos:end="127:39">s</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:47">window</name><index pos:start="127:48" pos:end="127:50">[<expr pos:start="127:49" pos:end="127:49"><name pos:start="127:49" pos:end="127:49">w</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="127:52" pos:end="127:52">)</operator> <operator pos:start="127:54" pos:end="127:55">||</operator>

                <operator pos:start="129:17" pos:end="129:17">(</operator><operator pos:start="129:18" pos:end="129:18">!</operator><operator pos:start="129:19" pos:end="129:19">(</operator><name pos:start="129:20" pos:end="129:28">old_value</name> <operator pos:start="129:30" pos:end="129:30">&amp;</operator> <name pos:start="129:32" pos:end="129:48">FIMD_WINCON_ENWIN</name><operator pos:start="129:49" pos:end="129:49">)</operator> <operator pos:start="129:51" pos:end="129:52">&amp;&amp;</operator> <operator pos:start="129:54" pos:end="129:54">(</operator><name pos:start="129:55" pos:end="129:66"><name pos:start="129:55" pos:end="129:55">s</name><operator pos:start="129:56" pos:end="129:57">-&gt;</operator><name pos:start="129:58" pos:end="129:63">window</name><index pos:start="129:64" pos:end="129:66">[<expr pos:start="129:65" pos:end="129:65"><name pos:start="129:65" pos:end="129:65">w</name></expr>]</index></name><operator pos:start="129:67" pos:end="129:67">.</operator><name pos:start="129:68" pos:end="129:73">wincon</name> <operator pos:start="129:75" pos:end="129:75">&amp;</operator>

                        <name pos:start="131:25" pos:end="131:41">FIMD_WINCON_ENWIN</name><operator pos:start="131:42" pos:end="131:42">)</operator><operator pos:start="131:43" pos:end="131:43">)</operator></expr>)</condition> <block pos:start="131:46" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:45">

            <expr_stmt pos:start="133:13" pos:end="133:45"><expr pos:start="133:13" pos:end="133:44"><call pos:start="133:13" pos:end="133:44"><name pos:start="133:13" pos:end="133:38">fimd_update_memory_section</name><argument_list pos:start="133:39" pos:end="133:44">(<argument pos:start="133:40" pos:end="133:40"><expr pos:start="133:40" pos:end="133:40"><name pos:start="133:40" pos:end="133:40">s</name></expr></argument>, <argument pos:start="133:43" pos:end="133:43"><expr pos:start="133:43" pos:end="133:43"><name pos:start="133:43" pos:end="133:43">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:24">case <expr pos:start="139:10" pos:end="139:23"><name pos:start="139:10" pos:end="139:23">FIMD_SHADOWCON</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:33"><expr pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:17">old_value</name> <operator pos:start="141:19" pos:end="141:19">=</operator> <name pos:start="141:21" pos:end="141:32"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:32">shadowcon</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:27"><expr pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:20">shadowcon</name></name> <operator pos:start="143:22" pos:end="143:22">=</operator> <name pos:start="143:24" pos:end="143:26">val</name></expr>;</expr_stmt>

        <for pos:start="145:9" pos:end="155:9">for <control pos:start="145:13" pos:end="145:44">(<init pos:start="145:14" pos:end="145:19"><expr pos:start="145:14" pos:end="145:18"><name pos:start="145:14" pos:end="145:14">w</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</init> <condition pos:start="145:21" pos:end="145:39"><expr pos:start="145:21" pos:end="145:38"><name pos:start="145:21" pos:end="145:21">w</name> <operator pos:start="145:23" pos:end="145:23">&lt;</operator> <name pos:start="145:25" pos:end="145:38">NUM_OF_WINDOWS</name></expr>;</condition> <incr pos:start="145:41" pos:end="145:43"><expr pos:start="145:41" pos:end="145:43"><name pos:start="145:41" pos:end="145:41">w</name><operator pos:start="145:42" pos:end="145:43">++</operator></expr></incr>)</control> <block pos:start="145:46" pos:end="155:9">{<block_content pos:start="147:13" pos:end="153:13">

            <if_stmt pos:start="147:13" pos:end="153:13"><if pos:start="147:13" pos:end="153:13">if <condition pos:start="147:16" pos:end="149:60">(<expr pos:start="147:17" pos:end="149:59"><call pos:start="147:17" pos:end="147:51"><name pos:start="147:17" pos:end="147:37">FIMD_WINDOW_PROTECTED</name><argument_list pos:start="147:38" pos:end="147:51">(<argument pos:start="147:39" pos:end="147:47"><expr pos:start="147:39" pos:end="147:47"><name pos:start="147:39" pos:end="147:47">old_value</name></expr></argument>, <argument pos:start="147:50" pos:end="147:50"><expr pos:start="147:50" pos:end="147:50"><name pos:start="147:50" pos:end="147:50">w</name></expr></argument>)</argument_list></call> <operator pos:start="147:53" pos:end="147:54">&amp;&amp;</operator>

                    <operator pos:start="149:21" pos:end="149:21">!</operator><call pos:start="149:22" pos:end="149:59"><name pos:start="149:22" pos:end="149:42">FIMD_WINDOW_PROTECTED</name><argument_list pos:start="149:43" pos:end="149:59">(<argument pos:start="149:44" pos:end="149:55"><expr pos:start="149:44" pos:end="149:55"><name pos:start="149:44" pos:end="149:55"><name pos:start="149:44" pos:end="149:44">s</name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:55">shadowcon</name></name></expr></argument>, <argument pos:start="149:58" pos:end="149:58"><expr pos:start="149:58" pos:end="149:58"><name pos:start="149:58" pos:end="149:58">w</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:62" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:49">

                <expr_stmt pos:start="151:17" pos:end="151:49"><expr pos:start="151:17" pos:end="151:48"><call pos:start="151:17" pos:end="151:48"><name pos:start="151:17" pos:end="151:42">fimd_update_memory_section</name><argument_list pos:start="151:43" pos:end="151:48">(<argument pos:start="151:44" pos:end="151:44"><expr pos:start="151:44" pos:end="151:44"><name pos:start="151:44" pos:end="151:44">s</name></expr></argument>, <argument pos:start="151:47" pos:end="151:47"><expr pos:start="151:47" pos:end="151:47"><name pos:start="151:47" pos:end="151:47">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:23">case <expr pos:start="159:10" pos:end="159:22"><name pos:start="159:10" pos:end="159:22">FIMD_WINCHMAP</name></expr>:</case>

        <expr_stmt pos:start="161:9" pos:end="161:26"><expr pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:19">winchmap</name></name> <operator pos:start="161:21" pos:end="161:21">=</operator> <name pos:start="161:23" pos:end="161:25">val</name></expr>;</expr_stmt>

        <break pos:start="163:9" pos:end="163:14">break;</break>

    <case pos:start="165:5" pos:end="165:47">case <expr pos:start="165:10" pos:end="165:46"><name pos:start="165:10" pos:end="165:26">FIMD_VIDOSD_START</name> <operator pos:start="165:28" pos:end="165:30">...</operator> <name pos:start="165:32" pos:end="165:46">FIMD_VIDOSD_END</name></expr>:</case>

        <expr_stmt pos:start="167:9" pos:end="167:46"><expr pos:start="167:9" pos:end="167:45"><name pos:start="167:9" pos:end="167:9">w</name> <operator pos:start="167:11" pos:end="167:11">=</operator> <operator pos:start="167:13" pos:end="167:13">(</operator><name pos:start="167:14" pos:end="167:19">offset</name> <operator pos:start="167:21" pos:end="167:21">-</operator> <name pos:start="167:23" pos:end="167:39">FIMD_VIDOSD_START</name><operator pos:start="167:40" pos:end="167:40">)</operator> <operator pos:start="167:42" pos:end="167:43">&gt;&gt;</operator> <literal type="number" pos:start="167:45" pos:end="167:45">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:54"><expr pos:start="169:9" pos:end="169:53"><name pos:start="169:9" pos:end="169:9">i</name> <operator pos:start="169:11" pos:end="169:11">=</operator> <operator pos:start="169:13" pos:end="169:13">(</operator><operator pos:start="169:14" pos:end="169:14">(</operator><name pos:start="169:15" pos:end="169:20">offset</name> <operator pos:start="169:22" pos:end="169:22">-</operator> <name pos:start="169:24" pos:end="169:40">FIMD_VIDOSD_START</name><operator pos:start="169:41" pos:end="169:41">)</operator> <operator pos:start="169:43" pos:end="169:43">&amp;</operator> <literal type="number" pos:start="169:45" pos:end="169:47">0xF</literal><operator pos:start="169:48" pos:end="169:48">)</operator> <operator pos:start="169:50" pos:end="169:51">&gt;&gt;</operator> <literal type="number" pos:start="169:53" pos:end="169:53">2</literal></expr>;</expr_stmt>

        <switch pos:start="171:9" pos:end="253:9">switch <condition pos:start="171:16" pos:end="171:18">(<expr pos:start="171:17" pos:end="171:17"><name pos:start="171:17" pos:end="171:17">i</name></expr>)</condition> <block pos:start="171:20" pos:end="253:9">{<block_content pos:start="173:9" pos:end="251:18">

        <case pos:start="173:9" pos:end="173:15">case <expr pos:start="173:14" pos:end="173:14"><literal type="number" pos:start="173:14" pos:end="173:14">0</literal></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:47"><expr pos:start="175:13" pos:end="175:46"><name pos:start="175:13" pos:end="175:21">old_value</name> <operator pos:start="175:23" pos:end="175:23">=</operator> <name pos:start="175:25" pos:end="175:36"><name pos:start="175:25" pos:end="175:25">s</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:33">window</name><index pos:start="175:34" pos:end="175:36">[<expr pos:start="175:35" pos:end="175:35"><name pos:start="175:35" pos:end="175:35">w</name></expr>]</index></name><operator pos:start="175:37" pos:end="175:37">.</operator><name pos:start="175:38" pos:end="175:46">lefttop_y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="179:61"><expr pos:start="177:13" pos:end="179:60"><name pos:start="177:13" pos:end="177:24"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:21">window</name><index pos:start="177:22" pos:end="177:24">[<expr pos:start="177:23" pos:end="177:23"><name pos:start="177:23" pos:end="177:23">w</name></expr>]</index></name><operator pos:start="177:25" pos:end="177:25">.</operator><name pos:start="177:26" pos:end="177:34">lefttop_x</name> <operator pos:start="177:36" pos:end="177:36">=</operator> <operator pos:start="177:38" pos:end="177:38">(</operator><name pos:start="177:39" pos:end="177:41">val</name> <operator pos:start="177:43" pos:end="177:44">&gt;&gt;</operator> <name pos:start="177:46" pos:end="177:66">FIMD_VIDOSD_HOR_SHIFT</name><operator pos:start="177:67" pos:end="177:67">)</operator> <operator pos:start="177:69" pos:end="177:69">&amp;</operator>

                                      <name pos:start="179:39" pos:end="179:60">FIMD_VIDOSD_COORD_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="183:61"><expr pos:start="181:13" pos:end="183:60"><name pos:start="181:13" pos:end="181:24"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:21">window</name><index pos:start="181:22" pos:end="181:24">[<expr pos:start="181:23" pos:end="181:23"><name pos:start="181:23" pos:end="181:23">w</name></expr>]</index></name><operator pos:start="181:25" pos:end="181:25">.</operator><name pos:start="181:26" pos:end="181:34">lefttop_y</name> <operator pos:start="181:36" pos:end="181:36">=</operator> <operator pos:start="181:38" pos:end="181:38">(</operator><name pos:start="181:39" pos:end="181:41">val</name> <operator pos:start="181:43" pos:end="181:44">&gt;&gt;</operator> <name pos:start="181:46" pos:end="181:66">FIMD_VIDOSD_VER_SHIFT</name><operator pos:start="181:67" pos:end="181:67">)</operator> <operator pos:start="181:69" pos:end="181:69">&amp;</operator>

                                      <name pos:start="183:39" pos:end="183:60">FIMD_VIDOSD_COORD_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="185:13" pos:end="189:13"><if pos:start="185:13" pos:end="189:13">if <condition pos:start="185:16" pos:end="185:52">(<expr pos:start="185:17" pos:end="185:51"><name pos:start="185:17" pos:end="185:28"><name pos:start="185:17" pos:end="185:17">s</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:25">window</name><index pos:start="185:26" pos:end="185:28">[<expr pos:start="185:27" pos:end="185:27"><name pos:start="185:27" pos:end="185:27">w</name></expr>]</index></name><operator pos:start="185:29" pos:end="185:29">.</operator><name pos:start="185:30" pos:end="185:38">lefttop_y</name> <operator pos:start="185:40" pos:end="185:41">!=</operator> <name pos:start="185:43" pos:end="185:51">old_value</name></expr>)</condition> <block pos:start="185:54" pos:end="189:13">{<block_content pos:start="187:17" pos:end="187:49">

                <expr_stmt pos:start="187:17" pos:end="187:49"><expr pos:start="187:17" pos:end="187:48"><call pos:start="187:17" pos:end="187:48"><name pos:start="187:17" pos:end="187:42">fimd_update_memory_section</name><argument_list pos:start="187:43" pos:end="187:48">(<argument pos:start="187:44" pos:end="187:44"><expr pos:start="187:44" pos:end="187:44"><name pos:start="187:44" pos:end="187:44">s</name></expr></argument>, <argument pos:start="187:47" pos:end="187:47"><expr pos:start="187:47" pos:end="187:47"><name pos:start="187:47" pos:end="187:47">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="191:13" pos:end="191:18">break;</break>

        <case pos:start="193:9" pos:end="193:15">case <expr pos:start="193:14" pos:end="193:14"><literal type="number" pos:start="193:14" pos:end="193:14">1</literal></expr>:</case>

            <expr_stmt pos:start="195:13" pos:end="195:48"><expr pos:start="195:13" pos:end="195:47"><name pos:start="195:13" pos:end="195:21">old_value</name> <operator pos:start="195:23" pos:end="195:23">=</operator> <name pos:start="195:25" pos:end="195:36"><name pos:start="195:25" pos:end="195:25">s</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:33">window</name><index pos:start="195:34" pos:end="195:36">[<expr pos:start="195:35" pos:end="195:35"><name pos:start="195:35" pos:end="195:35">w</name></expr>]</index></name><operator pos:start="195:37" pos:end="195:37">.</operator><name pos:start="195:38" pos:end="195:47">rightbot_y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="199:62"><expr pos:start="197:13" pos:end="199:61"><name pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:21">window</name><index pos:start="197:22" pos:end="197:24">[<expr pos:start="197:23" pos:end="197:23"><name pos:start="197:23" pos:end="197:23">w</name></expr>]</index></name><operator pos:start="197:25" pos:end="197:25">.</operator><name pos:start="197:26" pos:end="197:35">rightbot_x</name> <operator pos:start="197:37" pos:end="197:37">=</operator> <operator pos:start="197:39" pos:end="197:39">(</operator><name pos:start="197:40" pos:end="197:42">val</name> <operator pos:start="197:44" pos:end="197:45">&gt;&gt;</operator> <name pos:start="197:47" pos:end="197:67">FIMD_VIDOSD_HOR_SHIFT</name><operator pos:start="197:68" pos:end="197:68">)</operator> <operator pos:start="197:70" pos:end="197:70">&amp;</operator>

                                       <name pos:start="199:40" pos:end="199:61">FIMD_VIDOSD_COORD_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="203:62"><expr pos:start="201:13" pos:end="203:61"><name pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:21">window</name><index pos:start="201:22" pos:end="201:24">[<expr pos:start="201:23" pos:end="201:23"><name pos:start="201:23" pos:end="201:23">w</name></expr>]</index></name><operator pos:start="201:25" pos:end="201:25">.</operator><name pos:start="201:26" pos:end="201:35">rightbot_y</name> <operator pos:start="201:37" pos:end="201:37">=</operator> <operator pos:start="201:39" pos:end="201:39">(</operator><name pos:start="201:40" pos:end="201:42">val</name> <operator pos:start="201:44" pos:end="201:45">&gt;&gt;</operator> <name pos:start="201:47" pos:end="201:67">FIMD_VIDOSD_VER_SHIFT</name><operator pos:start="201:68" pos:end="201:68">)</operator> <operator pos:start="201:70" pos:end="201:70">&amp;</operator>

                                       <name pos:start="203:40" pos:end="203:61">FIMD_VIDOSD_COORD_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="209:13"><if pos:start="205:13" pos:end="209:13">if <condition pos:start="205:16" pos:end="205:53">(<expr pos:start="205:17" pos:end="205:52"><name pos:start="205:17" pos:end="205:28"><name pos:start="205:17" pos:end="205:17">s</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:25">window</name><index pos:start="205:26" pos:end="205:28">[<expr pos:start="205:27" pos:end="205:27"><name pos:start="205:27" pos:end="205:27">w</name></expr>]</index></name><operator pos:start="205:29" pos:end="205:29">.</operator><name pos:start="205:30" pos:end="205:39">rightbot_y</name> <operator pos:start="205:41" pos:end="205:42">!=</operator> <name pos:start="205:44" pos:end="205:52">old_value</name></expr>)</condition> <block pos:start="205:55" pos:end="209:13">{<block_content pos:start="207:17" pos:end="207:49">

                <expr_stmt pos:start="207:17" pos:end="207:49"><expr pos:start="207:17" pos:end="207:48"><call pos:start="207:17" pos:end="207:48"><name pos:start="207:17" pos:end="207:42">fimd_update_memory_section</name><argument_list pos:start="207:43" pos:end="207:48">(<argument pos:start="207:44" pos:end="207:44"><expr pos:start="207:44" pos:end="207:44"><name pos:start="207:44" pos:end="207:44">s</name></expr></argument>, <argument pos:start="207:47" pos:end="207:47"><expr pos:start="207:47" pos:end="207:47"><name pos:start="207:47" pos:end="207:47">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        <case pos:start="213:9" pos:end="213:15">case <expr pos:start="213:14" pos:end="213:14"><literal type="number" pos:start="213:14" pos:end="213:14">2</literal></expr>:</case>

            <if_stmt pos:start="215:13" pos:end="235:13"><if pos:start="215:13" pos:end="219:13">if <condition pos:start="215:16" pos:end="215:23">(<expr pos:start="215:17" pos:end="215:22"><name pos:start="215:17" pos:end="215:17">w</name> <operator pos:start="215:19" pos:end="215:20">==</operator> <literal type="number" pos:start="215:22" pos:end="215:22">0</literal></expr>)</condition> <block pos:start="215:25" pos:end="219:13">{<block_content pos:start="217:17" pos:end="217:43">

                <expr_stmt pos:start="217:17" pos:end="217:43"><expr pos:start="217:17" pos:end="217:42"><name pos:start="217:17" pos:end="217:28"><name pos:start="217:17" pos:end="217:17">s</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:25">window</name><index pos:start="217:26" pos:end="217:28">[<expr pos:start="217:27" pos:end="217:27"><name pos:start="217:27" pos:end="217:27">w</name></expr>]</index></name><operator pos:start="217:29" pos:end="217:29">.</operator><name pos:start="217:30" pos:end="217:36">osdsize</name> <operator pos:start="217:38" pos:end="217:38">=</operator> <name pos:start="217:40" pos:end="217:42">val</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="219:15" pos:end="235:13">else <block pos:start="219:20" pos:end="235:13">{<block_content pos:start="221:17" pos:end="233:76">

                <expr_stmt pos:start="221:17" pos:end="227:76"><expr pos:start="221:17" pos:end="227:75"><name pos:start="221:17" pos:end="221:28"><name pos:start="221:17" pos:end="221:17">s</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:25">window</name><index pos:start="221:26" pos:end="221:28">[<expr pos:start="221:27" pos:end="221:27"><name pos:start="221:27" pos:end="221:27">w</name></expr>]</index></name><operator pos:start="221:29" pos:end="221:29">.</operator><name pos:start="221:30" pos:end="221:41"><name pos:start="221:30" pos:end="221:38">alpha_val</name><index pos:start="221:39" pos:end="221:41">[<expr pos:start="221:40" pos:end="221:40"><literal type="number" pos:start="221:40" pos:end="221:40">0</literal></expr>]</index></name> <operator pos:start="221:43" pos:end="221:43">=</operator>

                    <call pos:start="223:21" pos:end="225:43"><name pos:start="223:21" pos:end="223:34">unpack_upper_4</name><argument_list pos:start="223:35" pos:end="225:43">(<argument pos:start="223:36" pos:end="225:42"><expr pos:start="223:36" pos:end="225:42"><operator pos:start="223:36" pos:end="223:36">(</operator><name pos:start="223:37" pos:end="223:39">val</name> <operator pos:start="223:41" pos:end="223:41">&amp;</operator> <name pos:start="223:43" pos:end="223:64">FIMD_VIDOSD_ALPHA_AEN0</name><operator pos:start="223:65" pos:end="223:65">)</operator> <operator pos:start="223:67" pos:end="223:68">&gt;&gt;</operator>

                    <name pos:start="225:21" pos:end="225:42">FIMD_VIDOSD_AEN0_SHIFT</name></expr></argument>)</argument_list></call> <operator pos:start="225:45" pos:end="225:45">|</operator>

                    <operator pos:start="227:21" pos:end="227:21">(</operator><name pos:start="227:22" pos:end="227:33"><name pos:start="227:22" pos:end="227:22">s</name><operator pos:start="227:23" pos:end="227:24">-&gt;</operator><name pos:start="227:25" pos:end="227:30">window</name><index pos:start="227:31" pos:end="227:33">[<expr pos:start="227:32" pos:end="227:32"><name pos:start="227:32" pos:end="227:32">w</name></expr>]</index></name><operator pos:start="227:34" pos:end="227:34">.</operator><name pos:start="227:35" pos:end="227:46"><name pos:start="227:35" pos:end="227:43">alpha_val</name><index pos:start="227:44" pos:end="227:46">[<expr pos:start="227:45" pos:end="227:45"><literal type="number" pos:start="227:45" pos:end="227:45">0</literal></expr>]</index></name> <operator pos:start="227:48" pos:end="227:48">&amp;</operator> <name pos:start="227:50" pos:end="227:74">FIMD_VIDALPHA_ALPHA_LOWER</name><operator pos:start="227:75" pos:end="227:75">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="233:76"><expr pos:start="229:17" pos:end="233:75"><name pos:start="229:17" pos:end="229:28"><name pos:start="229:17" pos:end="229:17">s</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:25">window</name><index pos:start="229:26" pos:end="229:28">[<expr pos:start="229:27" pos:end="229:27"><name pos:start="229:27" pos:end="229:27">w</name></expr>]</index></name><operator pos:start="229:29" pos:end="229:29">.</operator><name pos:start="229:30" pos:end="229:41"><name pos:start="229:30" pos:end="229:38">alpha_val</name><index pos:start="229:39" pos:end="229:41">[<expr pos:start="229:40" pos:end="229:40"><literal type="number" pos:start="229:40" pos:end="229:40">1</literal></expr>]</index></name> <operator pos:start="229:43" pos:end="229:43">=</operator>

                    <call pos:start="231:21" pos:end="231:64"><name pos:start="231:21" pos:end="231:34">unpack_upper_4</name><argument_list pos:start="231:35" pos:end="231:64">(<argument pos:start="231:36" pos:end="231:63"><expr pos:start="231:36" pos:end="231:63"><name pos:start="231:36" pos:end="231:38">val</name> <operator pos:start="231:40" pos:end="231:40">&amp;</operator> <name pos:start="231:42" pos:end="231:63">FIMD_VIDOSD_ALPHA_AEN1</name></expr></argument>)</argument_list></call> <operator pos:start="231:66" pos:end="231:66">|</operator>

                    <operator pos:start="233:21" pos:end="233:21">(</operator><name pos:start="233:22" pos:end="233:33"><name pos:start="233:22" pos:end="233:22">s</name><operator pos:start="233:23" pos:end="233:24">-&gt;</operator><name pos:start="233:25" pos:end="233:30">window</name><index pos:start="233:31" pos:end="233:33">[<expr pos:start="233:32" pos:end="233:32"><name pos:start="233:32" pos:end="233:32">w</name></expr>]</index></name><operator pos:start="233:34" pos:end="233:34">.</operator><name pos:start="233:35" pos:end="233:46"><name pos:start="233:35" pos:end="233:43">alpha_val</name><index pos:start="233:44" pos:end="233:46">[<expr pos:start="233:45" pos:end="233:45"><literal type="number" pos:start="233:45" pos:end="233:45">1</literal></expr>]</index></name> <operator pos:start="233:48" pos:end="233:48">&amp;</operator> <name pos:start="233:50" pos:end="233:74">FIMD_VIDALPHA_ALPHA_LOWER</name><operator pos:start="233:75" pos:end="233:75">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>

        <case pos:start="239:9" pos:end="239:15">case <expr pos:start="239:14" pos:end="239:14"><literal type="number" pos:start="239:14" pos:end="239:14">3</literal></expr>:</case>

            <if_stmt pos:start="241:13" pos:end="247:13"><if pos:start="241:13" pos:end="247:13">if <condition pos:start="241:16" pos:end="241:33">(<expr pos:start="241:17" pos:end="241:32"><name pos:start="241:17" pos:end="241:17">w</name> <operator pos:start="241:19" pos:end="241:20">!=</operator> <literal type="number" pos:start="241:22" pos:end="241:22">1</literal> <operator pos:start="241:24" pos:end="241:25">&amp;&amp;</operator> <name pos:start="241:27" pos:end="241:27">w</name> <operator pos:start="241:29" pos:end="241:30">!=</operator> <literal type="number" pos:start="241:32" pos:end="241:32">2</literal></expr>)</condition> <block pos:start="241:35" pos:end="247:13">{<block_content pos:start="243:17" pos:end="245:23">

                <expr_stmt pos:start="243:17" pos:end="243:66"><expr pos:start="243:17" pos:end="243:65"><call pos:start="243:17" pos:end="243:65"><name pos:start="243:17" pos:end="243:28">DPRINT_ERROR</name><argument_list pos:start="243:29" pos:end="243:65">(<argument pos:start="243:30" pos:end="243:56"><expr pos:start="243:30" pos:end="243:56"><literal type="string" pos:start="243:30" pos:end="243:56">"Bad write offset 0x%08x\n"</literal></expr></argument>, <argument pos:start="243:59" pos:end="243:64"><expr pos:start="243:59" pos:end="243:64"><name pos:start="243:59" pos:end="243:64">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="245:17" pos:end="245:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:39"><expr pos:start="249:13" pos:end="249:38"><name pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:21">window</name><index pos:start="249:22" pos:end="249:24">[<expr pos:start="249:23" pos:end="249:23"><name pos:start="249:23" pos:end="249:23">w</name></expr>]</index></name><operator pos:start="249:25" pos:end="249:25">.</operator><name pos:start="249:26" pos:end="249:32">osdsize</name> <operator pos:start="249:34" pos:end="249:34">=</operator> <name pos:start="249:36" pos:end="249:38">val</name></expr>;</expr_stmt>

            <break pos:start="251:13" pos:end="251:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="255:9" pos:end="255:14">break;</break>

    <case pos:start="257:5" pos:end="257:51">case <expr pos:start="257:10" pos:end="257:50"><name pos:start="257:10" pos:end="257:28">FIMD_VIDWADD0_START</name> <operator pos:start="257:30" pos:end="257:32">...</operator> <name pos:start="257:34" pos:end="257:50">FIMD_VIDWADD0_END</name></expr>:</case>

        <expr_stmt pos:start="259:9" pos:end="259:48"><expr pos:start="259:9" pos:end="259:47"><name pos:start="259:9" pos:end="259:9">w</name> <operator pos:start="259:11" pos:end="259:11">=</operator> <operator pos:start="259:13" pos:end="259:13">(</operator><name pos:start="259:14" pos:end="259:19">offset</name> <operator pos:start="259:21" pos:end="259:21">-</operator> <name pos:start="259:23" pos:end="259:41">FIMD_VIDWADD0_START</name><operator pos:start="259:42" pos:end="259:42">)</operator> <operator pos:start="259:44" pos:end="259:45">&gt;&gt;</operator> <literal type="number" pos:start="259:47" pos:end="259:47">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:54"><expr pos:start="261:9" pos:end="261:53"><name pos:start="261:9" pos:end="261:9">i</name> <operator pos:start="261:11" pos:end="261:11">=</operator> <operator pos:start="261:13" pos:end="261:13">(</operator><operator pos:start="261:14" pos:end="261:14">(</operator><name pos:start="261:15" pos:end="261:20">offset</name> <operator pos:start="261:22" pos:end="261:22">-</operator> <name pos:start="261:24" pos:end="261:42">FIMD_VIDWADD0_START</name><operator pos:start="261:43" pos:end="261:43">)</operator> <operator pos:start="261:45" pos:end="261:46">&gt;&gt;</operator> <literal type="number" pos:start="261:48" pos:end="261:48">2</literal><operator pos:start="261:49" pos:end="261:49">)</operator> <operator pos:start="261:51" pos:end="261:51">&amp;</operator> <literal type="number" pos:start="261:53" pos:end="261:53">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="263:9" pos:end="273:9"><if pos:start="263:9" pos:end="273:9">if <condition pos:start="263:12" pos:end="265:49">(<expr pos:start="263:13" pos:end="265:48"><name pos:start="263:13" pos:end="263:13">i</name> <operator pos:start="263:15" pos:end="263:16">==</operator> <call pos:start="263:18" pos:end="263:50"><name pos:start="263:18" pos:end="263:35">fimd_get_buffer_id</name><argument_list pos:start="263:36" pos:end="263:50">(<argument pos:start="263:37" pos:end="263:49"><expr pos:start="263:37" pos:end="263:49"><operator pos:start="263:37" pos:end="263:37">&amp;</operator><name pos:start="263:38" pos:end="263:49"><name pos:start="263:38" pos:end="263:38">s</name><operator pos:start="263:39" pos:end="263:40">-&gt;</operator><name pos:start="263:41" pos:end="263:46">window</name><index pos:start="263:47" pos:end="263:49">[<expr pos:start="263:48" pos:end="263:48"><name pos:start="263:48" pos:end="263:48">w</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="263:52" pos:end="263:53">&amp;&amp;</operator>

                <name pos:start="265:17" pos:end="265:28"><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:25">window</name><index pos:start="265:26" pos:end="265:28">[<expr pos:start="265:27" pos:end="265:27"><name pos:start="265:27" pos:end="265:27">w</name></expr>]</index></name><operator pos:start="265:29" pos:end="265:29">.</operator><name pos:start="265:30" pos:end="265:41"><name pos:start="265:30" pos:end="265:38">buf_start</name><index pos:start="265:39" pos:end="265:41">[<expr pos:start="265:40" pos:end="265:40"><name pos:start="265:40" pos:end="265:40">i</name></expr>]</index></name> <operator pos:start="265:43" pos:end="265:44">!=</operator> <name pos:start="265:46" pos:end="265:48">val</name></expr>)</condition> <block pos:start="265:51" pos:end="273:9">{<block_content pos:start="267:13" pos:end="271:18">

            <expr_stmt pos:start="267:13" pos:end="267:44"><expr pos:start="267:13" pos:end="267:43"><name pos:start="267:13" pos:end="267:24"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:21">window</name><index pos:start="267:22" pos:end="267:24">[<expr pos:start="267:23" pos:end="267:23"><name pos:start="267:23" pos:end="267:23">w</name></expr>]</index></name><operator pos:start="267:25" pos:end="267:25">.</operator><name pos:start="267:26" pos:end="267:37"><name pos:start="267:26" pos:end="267:34">buf_start</name><index pos:start="267:35" pos:end="267:37">[<expr pos:start="267:36" pos:end="267:36"><name pos:start="267:36" pos:end="267:36">i</name></expr>]</index></name> <operator pos:start="267:39" pos:end="267:39">=</operator> <name pos:start="267:41" pos:end="267:43">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:45"><expr pos:start="269:13" pos:end="269:44"><call pos:start="269:13" pos:end="269:44"><name pos:start="269:13" pos:end="269:38">fimd_update_memory_section</name><argument_list pos:start="269:39" pos:end="269:44">(<argument pos:start="269:40" pos:end="269:40"><expr pos:start="269:40" pos:end="269:40"><name pos:start="269:40" pos:end="269:40">s</name></expr></argument>, <argument pos:start="269:43" pos:end="269:43"><expr pos:start="269:43" pos:end="269:43"><name pos:start="269:43" pos:end="269:43">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:40"><expr pos:start="275:9" pos:end="275:39"><name pos:start="275:9" pos:end="275:20"><name pos:start="275:9" pos:end="275:9">s</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:17">window</name><index pos:start="275:18" pos:end="275:20">[<expr pos:start="275:19" pos:end="275:19"><name pos:start="275:19" pos:end="275:19">w</name></expr>]</index></name><operator pos:start="275:21" pos:end="275:21">.</operator><name pos:start="275:22" pos:end="275:33"><name pos:start="275:22" pos:end="275:30">buf_start</name><index pos:start="275:31" pos:end="275:33">[<expr pos:start="275:32" pos:end="275:32"><name pos:start="275:32" pos:end="275:32">i</name></expr>]</index></name> <operator pos:start="275:35" pos:end="275:35">=</operator> <name pos:start="275:37" pos:end="275:39">val</name></expr>;</expr_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>

    <case pos:start="279:5" pos:end="279:51">case <expr pos:start="279:10" pos:end="279:50"><name pos:start="279:10" pos:end="279:28">FIMD_VIDWADD1_START</name> <operator pos:start="279:30" pos:end="279:32">...</operator> <name pos:start="279:34" pos:end="279:50">FIMD_VIDWADD1_END</name></expr>:</case>

        <expr_stmt pos:start="281:9" pos:end="281:48"><expr pos:start="281:9" pos:end="281:47"><name pos:start="281:9" pos:end="281:9">w</name> <operator pos:start="281:11" pos:end="281:11">=</operator> <operator pos:start="281:13" pos:end="281:13">(</operator><name pos:start="281:14" pos:end="281:19">offset</name> <operator pos:start="281:21" pos:end="281:21">-</operator> <name pos:start="281:23" pos:end="281:41">FIMD_VIDWADD1_START</name><operator pos:start="281:42" pos:end="281:42">)</operator> <operator pos:start="281:44" pos:end="281:45">&gt;&gt;</operator> <literal type="number" pos:start="281:47" pos:end="281:47">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:54"><expr pos:start="283:9" pos:end="283:53"><name pos:start="283:9" pos:end="283:9">i</name> <operator pos:start="283:11" pos:end="283:11">=</operator> <operator pos:start="283:13" pos:end="283:13">(</operator><operator pos:start="283:14" pos:end="283:14">(</operator><name pos:start="283:15" pos:end="283:20">offset</name> <operator pos:start="283:22" pos:end="283:22">-</operator> <name pos:start="283:24" pos:end="283:42">FIMD_VIDWADD1_START</name><operator pos:start="283:43" pos:end="283:43">)</operator> <operator pos:start="283:45" pos:end="283:46">&gt;&gt;</operator> <literal type="number" pos:start="283:48" pos:end="283:48">2</literal><operator pos:start="283:49" pos:end="283:49">)</operator> <operator pos:start="283:51" pos:end="283:51">&amp;</operator> <literal type="number" pos:start="283:53" pos:end="283:53">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:38"><expr pos:start="285:9" pos:end="285:37"><name pos:start="285:9" pos:end="285:20"><name pos:start="285:9" pos:end="285:9">s</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:17">window</name><index pos:start="285:18" pos:end="285:20">[<expr pos:start="285:19" pos:end="285:19"><name pos:start="285:19" pos:end="285:19">w</name></expr>]</index></name><operator pos:start="285:21" pos:end="285:21">.</operator><name pos:start="285:22" pos:end="285:31"><name pos:start="285:22" pos:end="285:28">buf_end</name><index pos:start="285:29" pos:end="285:31">[<expr pos:start="285:30" pos:end="285:30"><name pos:start="285:30" pos:end="285:30">i</name></expr>]</index></name> <operator pos:start="285:33" pos:end="285:33">=</operator> <name pos:start="285:35" pos:end="285:37">val</name></expr>;</expr_stmt>

        <break pos:start="287:9" pos:end="287:14">break;</break>

    <case pos:start="289:5" pos:end="289:51">case <expr pos:start="289:10" pos:end="289:50"><name pos:start="289:10" pos:end="289:28">FIMD_VIDWADD2_START</name> <operator pos:start="289:30" pos:end="289:32">...</operator> <name pos:start="289:34" pos:end="289:50">FIMD_VIDWADD2_END</name></expr>:</case>

        <expr_stmt pos:start="291:9" pos:end="291:48"><expr pos:start="291:9" pos:end="291:47"><name pos:start="291:9" pos:end="291:9">w</name> <operator pos:start="291:11" pos:end="291:11">=</operator> <operator pos:start="291:13" pos:end="291:13">(</operator><name pos:start="291:14" pos:end="291:19">offset</name> <operator pos:start="291:21" pos:end="291:21">-</operator> <name pos:start="291:23" pos:end="291:41">FIMD_VIDWADD2_START</name><operator pos:start="291:42" pos:end="291:42">)</operator> <operator pos:start="291:44" pos:end="291:45">&gt;&gt;</operator> <literal type="number" pos:start="291:47" pos:end="291:47">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="293:9" pos:end="307:9"><if pos:start="293:9" pos:end="307:9">if <condition pos:start="293:12" pos:end="297:55">(<expr pos:start="293:13" pos:end="297:54"><operator pos:start="293:13" pos:end="293:13">(</operator><operator pos:start="293:14" pos:end="293:14">(</operator><name pos:start="293:15" pos:end="293:17">val</name> <operator pos:start="293:19" pos:end="293:19">&amp;</operator> <name pos:start="293:21" pos:end="293:43">FIMD_VIDWADD2_PAGEWIDTH</name><operator pos:start="293:44" pos:end="293:44">)</operator> <operator pos:start="293:46" pos:end="293:47">!=</operator> <name pos:start="293:49" pos:end="293:60"><name pos:start="293:49" pos:end="293:49">s</name><operator pos:start="293:50" pos:end="293:51">-&gt;</operator><name pos:start="293:52" pos:end="293:57">window</name><index pos:start="293:58" pos:end="293:60">[<expr pos:start="293:59" pos:end="293:59"><name pos:start="293:59" pos:end="293:59">w</name></expr>]</index></name><operator pos:start="293:61" pos:end="293:61">.</operator><name pos:start="293:62" pos:end="293:75">virtpage_width</name><operator pos:start="293:76" pos:end="293:76">)</operator> <operator pos:start="293:78" pos:end="293:79">||</operator>

            <operator pos:start="295:13" pos:end="295:13">(</operator><operator pos:start="295:14" pos:end="295:14">(</operator><operator pos:start="295:15" pos:end="295:15">(</operator><name pos:start="295:16" pos:end="295:18">val</name> <operator pos:start="295:20" pos:end="295:21">&gt;&gt;</operator> <name pos:start="295:23" pos:end="295:49">FIMD_VIDWADD2_OFFSIZE_SHIFT</name><operator pos:start="295:50" pos:end="295:50">)</operator> <operator pos:start="295:52" pos:end="295:52">&amp;</operator> <name pos:start="295:54" pos:end="295:74">FIMD_VIDWADD2_OFFSIZE</name><operator pos:start="295:75" pos:end="295:75">)</operator> <operator pos:start="295:77" pos:end="295:78">!=</operator>

                        <name pos:start="297:25" pos:end="297:36"><name pos:start="297:25" pos:end="297:25">s</name><operator pos:start="297:26" pos:end="297:27">-&gt;</operator><name pos:start="297:28" pos:end="297:33">window</name><index pos:start="297:34" pos:end="297:36">[<expr pos:start="297:35" pos:end="297:35"><name pos:start="297:35" pos:end="297:35">w</name></expr>]</index></name><operator pos:start="297:37" pos:end="297:37">.</operator><name pos:start="297:38" pos:end="297:53">virtpage_offsize</name><operator pos:start="297:54" pos:end="297:54">)</operator></expr>)</condition> <block pos:start="297:57" pos:end="307:9">{<block_content pos:start="299:13" pos:end="305:45">

            <expr_stmt pos:start="299:13" pos:end="299:72"><expr pos:start="299:13" pos:end="299:71"><name pos:start="299:13" pos:end="299:24"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:21">window</name><index pos:start="299:22" pos:end="299:24">[<expr pos:start="299:23" pos:end="299:23"><name pos:start="299:23" pos:end="299:23">w</name></expr>]</index></name><operator pos:start="299:25" pos:end="299:25">.</operator><name pos:start="299:26" pos:end="299:39">virtpage_width</name> <operator pos:start="299:41" pos:end="299:41">=</operator> <name pos:start="299:43" pos:end="299:45">val</name> <operator pos:start="299:47" pos:end="299:47">&amp;</operator> <name pos:start="299:49" pos:end="299:71">FIMD_VIDWADD2_PAGEWIDTH</name></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="303:77"><expr pos:start="301:13" pos:end="303:76"><name pos:start="301:13" pos:end="301:24"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:21">window</name><index pos:start="301:22" pos:end="301:24">[<expr pos:start="301:23" pos:end="301:23"><name pos:start="301:23" pos:end="301:23">w</name></expr>]</index></name><operator pos:start="301:25" pos:end="301:25">.</operator><name pos:start="301:26" pos:end="301:41">virtpage_offsize</name> <operator pos:start="301:43" pos:end="301:43">=</operator>

                <operator pos:start="303:17" pos:end="303:17">(</operator><name pos:start="303:18" pos:end="303:20">val</name> <operator pos:start="303:22" pos:end="303:23">&gt;&gt;</operator> <name pos:start="303:25" pos:end="303:51">FIMD_VIDWADD2_OFFSIZE_SHIFT</name><operator pos:start="303:52" pos:end="303:52">)</operator> <operator pos:start="303:54" pos:end="303:54">&amp;</operator> <name pos:start="303:56" pos:end="303:76">FIMD_VIDWADD2_OFFSIZE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:45"><expr pos:start="305:13" pos:end="305:44"><call pos:start="305:13" pos:end="305:44"><name pos:start="305:13" pos:end="305:38">fimd_update_memory_section</name><argument_list pos:start="305:39" pos:end="305:44">(<argument pos:start="305:40" pos:end="305:40"><expr pos:start="305:40" pos:end="305:40"><name pos:start="305:40" pos:end="305:40">s</name></expr></argument>, <argument pos:start="305:43" pos:end="305:43"><expr pos:start="305:43" pos:end="305:43"><name pos:start="305:43" pos:end="305:43">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="309:9" pos:end="309:14">break;</break>

    <case pos:start="311:5" pos:end="311:25">case <expr pos:start="311:10" pos:end="311:24"><name pos:start="311:10" pos:end="311:24">FIMD_VIDINTCON0</name></expr>:</case>

        <expr_stmt pos:start="313:9" pos:end="313:30"><expr pos:start="313:9" pos:end="313:29"><name pos:start="313:9" pos:end="313:23"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:20">vidintcon</name><index pos:start="313:21" pos:end="313:23">[<expr pos:start="313:22" pos:end="313:22"><literal type="number" pos:start="313:22" pos:end="313:22">0</literal></expr>]</index></name> <operator pos:start="313:25" pos:end="313:25">=</operator> <name pos:start="313:27" pos:end="313:29">val</name></expr>;</expr_stmt>

        <break pos:start="315:9" pos:end="315:14">break;</break>

    <case pos:start="317:5" pos:end="317:25">case <expr pos:start="317:10" pos:end="317:24"><name pos:start="317:10" pos:end="317:24">FIMD_VIDINTCON1</name></expr>:</case>

        <expr_stmt pos:start="319:9" pos:end="319:38"><expr pos:start="319:9" pos:end="319:37"><name pos:start="319:9" pos:end="319:23"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:20">vidintcon</name><index pos:start="319:21" pos:end="319:23">[<expr pos:start="319:22" pos:end="319:22"><literal type="number" pos:start="319:22" pos:end="319:22">1</literal></expr>]</index></name> <operator pos:start="319:25" pos:end="319:26">&amp;=</operator> <operator pos:start="319:28" pos:end="319:28">~</operator><operator pos:start="319:29" pos:end="319:29">(</operator><name pos:start="319:30" pos:end="319:32">val</name> <operator pos:start="319:34" pos:end="319:34">&amp;</operator> <literal type="number" pos:start="319:36" pos:end="319:36">7</literal><operator pos:start="319:37" pos:end="319:37">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:38"><expr pos:start="321:9" pos:end="321:37"><call pos:start="321:9" pos:end="321:37"><name pos:start="321:9" pos:end="321:34">exynos4210_fimd_update_irq</name><argument_list pos:start="321:35" pos:end="321:37">(<argument pos:start="321:36" pos:end="321:36"><expr pos:start="321:36" pos:end="321:36"><name pos:start="321:36" pos:end="321:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="323:9" pos:end="323:14">break;</break>

    <case pos:start="325:5" pos:end="325:49">case <expr pos:start="325:10" pos:end="325:48"><name pos:start="325:10" pos:end="325:27">FIMD_WKEYCON_START</name> <operator pos:start="325:29" pos:end="325:31">...</operator> <name pos:start="325:33" pos:end="325:48">FIMD_WKEYCON_END</name></expr>:</case>

        <expr_stmt pos:start="327:9" pos:end="327:53"><expr pos:start="327:9" pos:end="327:52"><name pos:start="327:9" pos:end="327:9">w</name> <operator pos:start="327:11" pos:end="327:11">=</operator> <operator pos:start="327:13" pos:end="327:13">(</operator><operator pos:start="327:14" pos:end="327:14">(</operator><name pos:start="327:15" pos:end="327:20">offset</name> <operator pos:start="327:22" pos:end="327:22">-</operator> <name pos:start="327:24" pos:end="327:41">FIMD_WKEYCON_START</name><operator pos:start="327:42" pos:end="327:42">)</operator> <operator pos:start="327:44" pos:end="327:45">&gt;&gt;</operator> <literal type="number" pos:start="327:47" pos:end="327:47">3</literal><operator pos:start="327:48" pos:end="327:48">)</operator> <operator pos:start="327:50" pos:end="327:50">+</operator> <literal type="number" pos:start="327:52" pos:end="327:52">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:53"><expr pos:start="329:9" pos:end="329:52"><name pos:start="329:9" pos:end="329:9">i</name> <operator pos:start="329:11" pos:end="329:11">=</operator> <operator pos:start="329:13" pos:end="329:13">(</operator><operator pos:start="329:14" pos:end="329:14">(</operator><name pos:start="329:15" pos:end="329:20">offset</name> <operator pos:start="329:22" pos:end="329:22">-</operator> <name pos:start="329:24" pos:end="329:41">FIMD_WKEYCON_START</name><operator pos:start="329:42" pos:end="329:42">)</operator> <operator pos:start="329:44" pos:end="329:45">&gt;&gt;</operator> <literal type="number" pos:start="329:47" pos:end="329:47">2</literal><operator pos:start="329:48" pos:end="329:48">)</operator> <operator pos:start="329:50" pos:end="329:50">&amp;</operator> <literal type="number" pos:start="329:52" pos:end="329:52">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:37"><expr pos:start="331:9" pos:end="331:36"><name pos:start="331:9" pos:end="331:20"><name pos:start="331:9" pos:end="331:9">s</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:17">window</name><index pos:start="331:18" pos:end="331:20">[<expr pos:start="331:19" pos:end="331:19"><name pos:start="331:19" pos:end="331:19">w</name></expr>]</index></name><operator pos:start="331:21" pos:end="331:21">.</operator><name pos:start="331:22" pos:end="331:30"><name pos:start="331:22" pos:end="331:27">keycon</name><index pos:start="331:28" pos:end="331:30">[<expr pos:start="331:29" pos:end="331:29"><name pos:start="331:29" pos:end="331:29">i</name></expr>]</index></name> <operator pos:start="331:32" pos:end="331:32">=</operator> <name pos:start="331:34" pos:end="331:36">val</name></expr>;</expr_stmt>

        <break pos:start="333:9" pos:end="333:14">break;</break>

    <case pos:start="335:5" pos:end="335:53">case <expr pos:start="335:10" pos:end="335:52"><name pos:start="335:10" pos:end="335:29">FIMD_WKEYALPHA_START</name> <operator pos:start="335:31" pos:end="335:33">...</operator> <name pos:start="335:35" pos:end="335:52">FIMD_WKEYALPHA_END</name></expr>:</case>

        <expr_stmt pos:start="337:9" pos:end="337:55"><expr pos:start="337:9" pos:end="337:54"><name pos:start="337:9" pos:end="337:9">w</name> <operator pos:start="337:11" pos:end="337:11">=</operator> <operator pos:start="337:13" pos:end="337:13">(</operator><operator pos:start="337:14" pos:end="337:14">(</operator><name pos:start="337:15" pos:end="337:20">offset</name> <operator pos:start="337:22" pos:end="337:22">-</operator> <name pos:start="337:24" pos:end="337:43">FIMD_WKEYALPHA_START</name><operator pos:start="337:44" pos:end="337:44">)</operator> <operator pos:start="337:46" pos:end="337:47">&gt;&gt;</operator> <literal type="number" pos:start="337:49" pos:end="337:49">2</literal><operator pos:start="337:50" pos:end="337:50">)</operator> <operator pos:start="337:52" pos:end="337:52">+</operator> <literal type="number" pos:start="337:54" pos:end="337:54">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:36"><expr pos:start="339:9" pos:end="339:35"><name pos:start="339:9" pos:end="339:20"><name pos:start="339:9" pos:end="339:9">s</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:17">window</name><index pos:start="339:18" pos:end="339:20">[<expr pos:start="339:19" pos:end="339:19"><name pos:start="339:19" pos:end="339:19">w</name></expr>]</index></name><operator pos:start="339:21" pos:end="339:21">.</operator><name pos:start="339:22" pos:end="339:29">keyalpha</name> <operator pos:start="339:31" pos:end="339:31">=</operator> <name pos:start="339:33" pos:end="339:35">val</name></expr>;</expr_stmt>

        <break pos:start="341:9" pos:end="341:14">break;</break>

    <case pos:start="343:5" pos:end="343:23">case <expr pos:start="343:10" pos:end="343:22"><name pos:start="343:10" pos:end="343:22">FIMD_DITHMODE</name></expr>:</case>

        <expr_stmt pos:start="345:9" pos:end="345:26"><expr pos:start="345:9" pos:end="345:25"><name pos:start="345:9" pos:end="345:19"><name pos:start="345:9" pos:end="345:9">s</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:19">dithmode</name></name> <operator pos:start="345:21" pos:end="345:21">=</operator> <name pos:start="345:23" pos:end="345:25">val</name></expr>;</expr_stmt>

        <break pos:start="347:9" pos:end="347:14">break;</break>

    <case pos:start="349:5" pos:end="349:47">case <expr pos:start="349:10" pos:end="349:46"><name pos:start="349:10" pos:end="349:26">FIMD_WINMAP_START</name> <operator pos:start="349:28" pos:end="349:30">...</operator> <name pos:start="349:32" pos:end="349:46">FIMD_WINMAP_END</name></expr>:</case>

        <expr_stmt pos:start="351:9" pos:end="351:46"><expr pos:start="351:9" pos:end="351:45"><name pos:start="351:9" pos:end="351:9">w</name> <operator pos:start="351:11" pos:end="351:11">=</operator> <operator pos:start="351:13" pos:end="351:13">(</operator><name pos:start="351:14" pos:end="351:19">offset</name> <operator pos:start="351:21" pos:end="351:21">-</operator> <name pos:start="351:23" pos:end="351:39">FIMD_WINMAP_START</name><operator pos:start="351:40" pos:end="351:40">)</operator> <operator pos:start="351:42" pos:end="351:43">&gt;&gt;</operator> <literal type="number" pos:start="351:45" pos:end="351:45">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:40"><expr pos:start="353:9" pos:end="353:39"><name pos:start="353:9" pos:end="353:17">old_value</name> <operator pos:start="353:19" pos:end="353:19">=</operator> <name pos:start="353:21" pos:end="353:32"><name pos:start="353:21" pos:end="353:21">s</name><operator pos:start="353:22" pos:end="353:23">-&gt;</operator><name pos:start="353:24" pos:end="353:29">window</name><index pos:start="353:30" pos:end="353:32">[<expr pos:start="353:31" pos:end="353:31"><name pos:start="353:31" pos:end="353:31">w</name></expr>]</index></name><operator pos:start="353:33" pos:end="353:33">.</operator><name pos:start="353:34" pos:end="353:39">winmap</name></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:34"><expr pos:start="355:9" pos:end="355:33"><name pos:start="355:9" pos:end="355:20"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:17">window</name><index pos:start="355:18" pos:end="355:20">[<expr pos:start="355:19" pos:end="355:19"><name pos:start="355:19" pos:end="355:19">w</name></expr>]</index></name><operator pos:start="355:21" pos:end="355:21">.</operator><name pos:start="355:22" pos:end="355:27">winmap</name> <operator pos:start="355:29" pos:end="355:29">=</operator> <name pos:start="355:31" pos:end="355:33">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="357:9" pos:end="367:9"><if pos:start="357:9" pos:end="367:9">if <condition pos:start="357:12" pos:end="357:66">(<expr pos:start="357:13" pos:end="357:65"><operator pos:start="357:13" pos:end="357:13">(</operator><name pos:start="357:14" pos:end="357:16">val</name> <operator pos:start="357:18" pos:end="357:18">&amp;</operator> <name pos:start="357:20" pos:end="357:33">FIMD_WINMAP_EN</name><operator pos:start="357:34" pos:end="357:34">)</operator> <operator pos:start="357:36" pos:end="357:36">^</operator> <operator pos:start="357:38" pos:end="357:38">(</operator><name pos:start="357:39" pos:end="357:47">old_value</name> <operator pos:start="357:49" pos:end="357:49">&amp;</operator> <name pos:start="357:51" pos:end="357:64">FIMD_WINMAP_EN</name><operator pos:start="357:65" pos:end="357:65">)</operator></expr>)</condition> <block pos:start="357:68" pos:end="367:9">{<block_content pos:start="359:13" pos:end="365:38">

            <expr_stmt pos:start="359:13" pos:end="359:42"><expr pos:start="359:13" pos:end="359:41"><call pos:start="359:13" pos:end="359:41"><name pos:start="359:13" pos:end="359:38">exynos4210_fimd_invalidate</name><argument_list pos:start="359:39" pos:end="359:41">(<argument pos:start="359:40" pos:end="359:40"><expr pos:start="359:40" pos:end="359:40"><name pos:start="359:40" pos:end="359:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:53"><expr pos:start="361:13" pos:end="361:52"><call pos:start="361:13" pos:end="361:52"><name pos:start="361:13" pos:end="361:46">exynos4210_fimd_update_win_bppmode</name><argument_list pos:start="361:47" pos:end="361:52">(<argument pos:start="361:48" pos:end="361:48"><expr pos:start="361:48" pos:end="361:48"><name pos:start="361:48" pos:end="361:48">s</name></expr></argument>, <argument pos:start="361:51" pos:end="361:51"><expr pos:start="361:51" pos:end="361:51"><name pos:start="361:51" pos:end="361:51">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:60"><expr pos:start="363:13" pos:end="363:59"><call pos:start="363:13" pos:end="363:59"><name pos:start="363:13" pos:end="363:41">exynos4210_fimd_trace_bppmode</name><argument_list pos:start="363:42" pos:end="363:59">(<argument pos:start="363:43" pos:end="363:43"><expr pos:start="363:43" pos:end="363:43"><name pos:start="363:43" pos:end="363:43">s</name></expr></argument>, <argument pos:start="363:46" pos:end="363:46"><expr pos:start="363:46" pos:end="363:46"><name pos:start="363:46" pos:end="363:46">w</name></expr></argument>, <argument pos:start="363:49" pos:end="363:58"><expr pos:start="363:49" pos:end="363:58"><literal type="number" pos:start="363:49" pos:end="363:58">0xFFFFFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:38"><expr pos:start="365:13" pos:end="365:37"><call pos:start="365:13" pos:end="365:37"><name pos:start="365:13" pos:end="365:34">exynos4210_fimd_update</name><argument_list pos:start="365:35" pos:end="365:37">(<argument pos:start="365:36" pos:end="365:36"><expr pos:start="365:36" pos:end="365:36"><name pos:start="365:36" pos:end="365:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="369:9" pos:end="369:14">break;</break>

    <case pos:start="371:5" pos:end="371:48">case <expr pos:start="371:10" pos:end="371:47"><name pos:start="371:10" pos:end="371:26">FIMD_WPALCON_HIGH</name> <operator pos:start="371:28" pos:end="371:30">...</operator> <name pos:start="371:32" pos:end="371:47">FIMD_WPALCON_LOW</name></expr>:</case>

        <expr_stmt pos:start="373:9" pos:end="373:46"><expr pos:start="373:9" pos:end="373:45"><name pos:start="373:9" pos:end="373:9">i</name> <operator pos:start="373:11" pos:end="373:11">=</operator> <operator pos:start="373:13" pos:end="373:13">(</operator><name pos:start="373:14" pos:end="373:19">offset</name> <operator pos:start="373:21" pos:end="373:21">-</operator> <name pos:start="373:23" pos:end="373:39">FIMD_WPALCON_HIGH</name><operator pos:start="373:40" pos:end="373:40">)</operator> <operator pos:start="373:42" pos:end="373:43">&gt;&gt;</operator> <literal type="number" pos:start="373:45" pos:end="373:45">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:28"><expr pos:start="375:9" pos:end="375:27"><name pos:start="375:9" pos:end="375:21"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:18">wpalcon</name><index pos:start="375:19" pos:end="375:21">[<expr pos:start="375:20" pos:end="375:20"><name pos:start="375:20" pos:end="375:20">i</name></expr>]</index></name> <operator pos:start="375:23" pos:end="375:23">=</operator> <name pos:start="375:25" pos:end="375:27">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="377:9" pos:end="387:9"><if pos:start="377:9" pos:end="387:9">if <condition pos:start="377:12" pos:end="377:50">(<expr pos:start="377:13" pos:end="377:49"><name pos:start="377:13" pos:end="377:25"><name pos:start="377:13" pos:end="377:13">s</name><operator pos:start="377:14" pos:end="377:15">-&gt;</operator><name pos:start="377:16" pos:end="377:22">wpalcon</name><index pos:start="377:23" pos:end="377:25">[<expr pos:start="377:24" pos:end="377:24"><literal type="number" pos:start="377:24" pos:end="377:24">1</literal></expr>]</index></name> <operator pos:start="377:27" pos:end="377:27">&amp;</operator> <name pos:start="377:29" pos:end="377:49">FIMD_WPALCON_UPDATEEN</name></expr>)</condition> <block pos:start="377:52" pos:end="387:9">{<block_content pos:start="379:13" pos:end="385:13">

            <for pos:start="379:13" pos:end="385:13">for <control pos:start="379:17" pos:end="379:48">(<init pos:start="379:18" pos:end="379:23"><expr pos:start="379:18" pos:end="379:22"><name pos:start="379:18" pos:end="379:18">w</name> <operator pos:start="379:20" pos:end="379:20">=</operator> <literal type="number" pos:start="379:22" pos:end="379:22">0</literal></expr>;</init> <condition pos:start="379:25" pos:end="379:43"><expr pos:start="379:25" pos:end="379:42"><name pos:start="379:25" pos:end="379:25">w</name> <operator pos:start="379:27" pos:end="379:27">&lt;</operator> <name pos:start="379:29" pos:end="379:42">NUM_OF_WINDOWS</name></expr>;</condition> <incr pos:start="379:45" pos:end="379:47"><expr pos:start="379:45" pos:end="379:47"><name pos:start="379:45" pos:end="379:45">w</name><operator pos:start="379:46" pos:end="379:47">++</operator></expr></incr>)</control> <block pos:start="379:50" pos:end="385:13">{<block_content pos:start="381:17" pos:end="383:44">

                <expr_stmt pos:start="381:17" pos:end="381:57"><expr pos:start="381:17" pos:end="381:56"><call pos:start="381:17" pos:end="381:56"><name pos:start="381:17" pos:end="381:50">exynos4210_fimd_update_win_bppmode</name><argument_list pos:start="381:51" pos:end="381:56">(<argument pos:start="381:52" pos:end="381:52"><expr pos:start="381:52" pos:end="381:52"><name pos:start="381:52" pos:end="381:52">s</name></expr></argument>, <argument pos:start="381:55" pos:end="381:55"><expr pos:start="381:55" pos:end="381:55"><name pos:start="381:55" pos:end="381:55">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="383:17" pos:end="383:44"><expr pos:start="383:17" pos:end="383:43"><call pos:start="383:17" pos:end="383:43"><name pos:start="383:17" pos:end="383:37">fimd_update_get_alpha</name><argument_list pos:start="383:38" pos:end="383:43">(<argument pos:start="383:39" pos:end="383:39"><expr pos:start="383:39" pos:end="383:39"><name pos:start="383:39" pos:end="383:39">s</name></expr></argument>, <argument pos:start="383:42" pos:end="383:42"><expr pos:start="383:42" pos:end="383:42"><name pos:start="383:42" pos:end="383:42">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <break pos:start="389:9" pos:end="389:14">break;</break>

    <case pos:start="391:5" pos:end="391:22">case <expr pos:start="391:10" pos:end="391:21"><name pos:start="391:10" pos:end="391:21">FIMD_TRIGCON</name></expr>:</case>

        <expr_stmt pos:start="393:9" pos:end="393:80"><expr pos:start="393:9" pos:end="393:79"><name pos:start="393:9" pos:end="393:11">val</name> <operator pos:start="393:13" pos:end="393:13">=</operator> <operator pos:start="393:15" pos:end="393:15">(</operator><name pos:start="393:16" pos:end="393:18">val</name> <operator pos:start="393:20" pos:end="393:20">&amp;</operator> <operator pos:start="393:22" pos:end="393:22">~</operator><name pos:start="393:23" pos:end="393:41">FIMD_TRIGCON_ROMASK</name><operator pos:start="393:42" pos:end="393:42">)</operator> <operator pos:start="393:44" pos:end="393:44">|</operator> <operator pos:start="393:46" pos:end="393:46">(</operator><name pos:start="393:47" pos:end="393:56"><name pos:start="393:47" pos:end="393:47">s</name><operator pos:start="393:48" pos:end="393:49">-&gt;</operator><name pos:start="393:50" pos:end="393:56">trigcon</name></name> <operator pos:start="393:58" pos:end="393:58">&amp;</operator> <name pos:start="393:60" pos:end="393:78">FIMD_TRIGCON_ROMASK</name><operator pos:start="393:79" pos:end="393:79">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:25"><expr pos:start="395:9" pos:end="395:24"><name pos:start="395:9" pos:end="395:18"><name pos:start="395:9" pos:end="395:9">s</name><operator pos:start="395:10" pos:end="395:11">-&gt;</operator><name pos:start="395:12" pos:end="395:18">trigcon</name></name> <operator pos:start="395:20" pos:end="395:20">=</operator> <name pos:start="395:22" pos:end="395:24">val</name></expr>;</expr_stmt>

        <break pos:start="397:9" pos:end="397:14">break;</break>

    <case pos:start="399:5" pos:end="399:51">case <expr pos:start="399:10" pos:end="399:50"><name pos:start="399:10" pos:end="399:28">FIMD_I80IFCON_START</name> <operator pos:start="399:30" pos:end="399:32">...</operator> <name pos:start="399:34" pos:end="399:50">FIMD_I80IFCON_END</name></expr>:</case>

        <expr_stmt pos:start="401:9" pos:end="401:63"><expr pos:start="401:9" pos:end="401:62"><name pos:start="401:9" pos:end="401:56"><name pos:start="401:9" pos:end="401:9">s</name><operator pos:start="401:10" pos:end="401:11">-&gt;</operator><name pos:start="401:12" pos:end="401:19">i80ifcon</name><index pos:start="401:20" pos:end="401:56">[<expr pos:start="401:21" pos:end="401:55"><operator pos:start="401:21" pos:end="401:21">(</operator><name pos:start="401:22" pos:end="401:27">offset</name> <operator pos:start="401:29" pos:end="401:29">-</operator> <name pos:start="401:31" pos:end="401:49">FIMD_I80IFCON_START</name><operator pos:start="401:50" pos:end="401:50">)</operator> <operator pos:start="401:52" pos:end="401:53">&gt;&gt;</operator> <literal type="number" pos:start="401:55" pos:end="401:55">2</literal></expr>]</index></name> <operator pos:start="401:58" pos:end="401:58">=</operator> <name pos:start="401:60" pos:end="401:62">val</name></expr>;</expr_stmt>

        <break pos:start="403:9" pos:end="403:14">break;</break>

    <case pos:start="405:5" pos:end="405:27">case <expr pos:start="405:10" pos:end="405:26"><name pos:start="405:10" pos:end="405:26">FIMD_COLORGAINCON</name></expr>:</case>

        <expr_stmt pos:start="407:9" pos:end="407:30"><expr pos:start="407:9" pos:end="407:29"><name pos:start="407:9" pos:end="407:23"><name pos:start="407:9" pos:end="407:9">s</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:23">colorgaincon</name></name> <operator pos:start="407:25" pos:end="407:25">=</operator> <name pos:start="407:27" pos:end="407:29">val</name></expr>;</expr_stmt>

        <break pos:start="409:9" pos:end="409:14">break;</break>

    <case pos:start="411:5" pos:end="411:47">case <expr pos:start="411:10" pos:end="411:46"><name pos:start="411:10" pos:end="411:25">FIMD_LDI_CMDCON0</name> <operator pos:start="411:27" pos:end="411:29">...</operator> <name pos:start="411:31" pos:end="411:46">FIMD_LDI_CMDCON1</name></expr>:</case>

        <expr_stmt pos:start="413:9" pos:end="413:62"><expr pos:start="413:9" pos:end="413:61"><name pos:start="413:9" pos:end="413:55"><name pos:start="413:9" pos:end="413:9">s</name><operator pos:start="413:10" pos:end="413:11">-&gt;</operator><name pos:start="413:12" pos:end="413:21">ldi_cmdcon</name><index pos:start="413:22" pos:end="413:55">[<expr pos:start="413:23" pos:end="413:54"><operator pos:start="413:23" pos:end="413:23">(</operator><name pos:start="413:24" pos:end="413:29">offset</name> <operator pos:start="413:31" pos:end="413:31">-</operator> <name pos:start="413:33" pos:end="413:48">FIMD_LDI_CMDCON0</name><operator pos:start="413:49" pos:end="413:49">)</operator> <operator pos:start="413:51" pos:end="413:52">&gt;&gt;</operator> <literal type="number" pos:start="413:54" pos:end="413:54">2</literal></expr>]</index></name> <operator pos:start="413:57" pos:end="413:57">=</operator> <name pos:start="413:59" pos:end="413:61">val</name></expr>;</expr_stmt>

        <break pos:start="415:9" pos:end="415:14">break;</break>

    <case pos:start="417:5" pos:end="417:41">case <expr pos:start="417:10" pos:end="417:40"><name pos:start="417:10" pos:end="417:22">FIMD_SIFCCON0</name> <operator pos:start="417:24" pos:end="417:26">...</operator> <name pos:start="417:28" pos:end="417:40">FIMD_SIFCCON2</name></expr>:</case>

        <expr_stmt pos:start="419:9" pos:end="419:42"><expr pos:start="419:9" pos:end="419:41"><name pos:start="419:9" pos:end="419:9">i</name> <operator pos:start="419:11" pos:end="419:11">=</operator> <operator pos:start="419:13" pos:end="419:13">(</operator><name pos:start="419:14" pos:end="419:19">offset</name> <operator pos:start="419:21" pos:end="419:21">-</operator> <name pos:start="419:23" pos:end="419:35">FIMD_SIFCCON0</name><operator pos:start="419:36" pos:end="419:36">)</operator> <operator pos:start="419:38" pos:end="419:39">&gt;&gt;</operator> <literal type="number" pos:start="419:41" pos:end="419:41">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="421:9" pos:end="425:9"><if pos:start="421:9" pos:end="425:9">if <condition pos:start="421:12" pos:end="421:19">(<expr pos:start="421:13" pos:end="421:18"><name pos:start="421:13" pos:end="421:13">i</name> <operator pos:start="421:15" pos:end="421:16">!=</operator> <literal type="number" pos:start="421:18" pos:end="421:18">2</literal></expr>)</condition> <block pos:start="421:21" pos:end="425:9">{<block_content pos:start="423:13" pos:end="423:32">

            <expr_stmt pos:start="423:13" pos:end="423:32"><expr pos:start="423:13" pos:end="423:31"><name pos:start="423:13" pos:end="423:25"><name pos:start="423:13" pos:end="423:13">s</name><operator pos:start="423:14" pos:end="423:15">-&gt;</operator><name pos:start="423:16" pos:end="423:22">sifccon</name><index pos:start="423:23" pos:end="423:25">[<expr pos:start="423:24" pos:end="423:24"><name pos:start="423:24" pos:end="423:24">i</name></expr>]</index></name> <operator pos:start="423:27" pos:end="423:27">=</operator> <name pos:start="423:29" pos:end="423:31">val</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="427:9" pos:end="427:14">break;</break>

    <case pos:start="429:5" pos:end="429:53">case <expr pos:start="429:10" pos:end="429:52"><name pos:start="429:10" pos:end="429:29">FIMD_HUECOEFCR_START</name> <operator pos:start="429:31" pos:end="429:33">...</operator> <name pos:start="429:35" pos:end="429:52">FIMD_HUECOEFCR_END</name></expr>:</case>

        <expr_stmt pos:start="431:9" pos:end="431:49"><expr pos:start="431:9" pos:end="431:48"><name pos:start="431:9" pos:end="431:9">i</name> <operator pos:start="431:11" pos:end="431:11">=</operator> <operator pos:start="431:13" pos:end="431:13">(</operator><name pos:start="431:14" pos:end="431:19">offset</name> <operator pos:start="431:21" pos:end="431:21">-</operator> <name pos:start="431:23" pos:end="431:42">FIMD_HUECOEFCR_START</name><operator pos:start="431:43" pos:end="431:43">)</operator> <operator pos:start="431:45" pos:end="431:46">&gt;&gt;</operator> <literal type="number" pos:start="431:48" pos:end="431:48">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:31"><expr pos:start="433:9" pos:end="433:30"><name pos:start="433:9" pos:end="433:24"><name pos:start="433:9" pos:end="433:9">s</name><operator pos:start="433:10" pos:end="433:11">-&gt;</operator><name pos:start="433:12" pos:end="433:21">huecoef_cr</name><index pos:start="433:22" pos:end="433:24">[<expr pos:start="433:23" pos:end="433:23"><name pos:start="433:23" pos:end="433:23">i</name></expr>]</index></name> <operator pos:start="433:26" pos:end="433:26">=</operator> <name pos:start="433:28" pos:end="433:30">val</name></expr>;</expr_stmt>

        <break pos:start="435:9" pos:end="435:14">break;</break>

    <case pos:start="437:5" pos:end="437:53">case <expr pos:start="437:10" pos:end="437:52"><name pos:start="437:10" pos:end="437:29">FIMD_HUECOEFCB_START</name> <operator pos:start="437:31" pos:end="437:33">...</operator> <name pos:start="437:35" pos:end="437:52">FIMD_HUECOEFCB_END</name></expr>:</case>

        <expr_stmt pos:start="439:9" pos:end="439:49"><expr pos:start="439:9" pos:end="439:48"><name pos:start="439:9" pos:end="439:9">i</name> <operator pos:start="439:11" pos:end="439:11">=</operator> <operator pos:start="439:13" pos:end="439:13">(</operator><name pos:start="439:14" pos:end="439:19">offset</name> <operator pos:start="439:21" pos:end="439:21">-</operator> <name pos:start="439:23" pos:end="439:42">FIMD_HUECOEFCB_START</name><operator pos:start="439:43" pos:end="439:43">)</operator> <operator pos:start="439:45" pos:end="439:46">&gt;&gt;</operator> <literal type="number" pos:start="439:48" pos:end="439:48">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:31"><expr pos:start="441:9" pos:end="441:30"><name pos:start="441:9" pos:end="441:24"><name pos:start="441:9" pos:end="441:9">s</name><operator pos:start="441:10" pos:end="441:11">-&gt;</operator><name pos:start="441:12" pos:end="441:21">huecoef_cb</name><index pos:start="441:22" pos:end="441:24">[<expr pos:start="441:23" pos:end="441:23"><name pos:start="441:23" pos:end="441:23">i</name></expr>]</index></name> <operator pos:start="441:26" pos:end="441:26">=</operator> <name pos:start="441:28" pos:end="441:30">val</name></expr>;</expr_stmt>

        <break pos:start="443:9" pos:end="443:14">break;</break>

    <case pos:start="445:5" pos:end="445:24">case <expr pos:start="445:10" pos:end="445:23"><name pos:start="445:10" pos:end="445:23">FIMD_HUEOFFSET</name></expr>:</case>

        <expr_stmt pos:start="447:9" pos:end="447:27"><expr pos:start="447:9" pos:end="447:26"><name pos:start="447:9" pos:end="447:20"><name pos:start="447:9" pos:end="447:9">s</name><operator pos:start="447:10" pos:end="447:11">-&gt;</operator><name pos:start="447:12" pos:end="447:20">hueoffset</name></name> <operator pos:start="447:22" pos:end="447:22">=</operator> <name pos:start="447:24" pos:end="447:26">val</name></expr>;</expr_stmt>

        <break pos:start="449:9" pos:end="449:14">break;</break>

    <case pos:start="451:5" pos:end="451:53">case <expr pos:start="451:10" pos:end="451:52"><name pos:start="451:10" pos:end="451:29">FIMD_VIDWALPHA_START</name> <operator pos:start="451:31" pos:end="451:33">...</operator> <name pos:start="451:35" pos:end="451:52">FIMD_VIDWALPHA_END</name></expr>:</case>

        <expr_stmt pos:start="453:9" pos:end="453:51"><expr pos:start="453:9" pos:end="453:50"><name pos:start="453:9" pos:end="453:9">w</name> <operator pos:start="453:11" pos:end="453:11">=</operator> <operator pos:start="453:13" pos:end="453:13">(</operator><operator pos:start="453:14" pos:end="453:14">(</operator><name pos:start="453:15" pos:end="453:20">offset</name> <operator pos:start="453:22" pos:end="453:22">-</operator> <name pos:start="453:24" pos:end="453:43">FIMD_VIDWALPHA_START</name><operator pos:start="453:44" pos:end="453:44">)</operator> <operator pos:start="453:46" pos:end="453:47">&gt;&gt;</operator> <literal type="number" pos:start="453:49" pos:end="453:49">3</literal><operator pos:start="453:50" pos:end="453:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:55"><expr pos:start="455:9" pos:end="455:54"><name pos:start="455:9" pos:end="455:9">i</name> <operator pos:start="455:11" pos:end="455:11">=</operator> <operator pos:start="455:13" pos:end="455:13">(</operator><operator pos:start="455:14" pos:end="455:14">(</operator><name pos:start="455:15" pos:end="455:20">offset</name> <operator pos:start="455:22" pos:end="455:22">-</operator> <name pos:start="455:24" pos:end="455:43">FIMD_VIDWALPHA_START</name><operator pos:start="455:44" pos:end="455:44">)</operator> <operator pos:start="455:46" pos:end="455:47">&gt;&gt;</operator> <literal type="number" pos:start="455:49" pos:end="455:49">2</literal><operator pos:start="455:50" pos:end="455:50">)</operator> <operator pos:start="455:52" pos:end="455:52">&amp;</operator> <literal type="number" pos:start="455:54" pos:end="455:54">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="457:9" pos:end="467:9"><if pos:start="457:9" pos:end="461:9">if <condition pos:start="457:12" pos:end="457:19">(<expr pos:start="457:13" pos:end="457:18"><name pos:start="457:13" pos:end="457:13">w</name> <operator pos:start="457:15" pos:end="457:16">==</operator> <literal type="number" pos:start="457:18" pos:end="457:18">0</literal></expr>)</condition> <block pos:start="457:21" pos:end="461:9">{<block_content pos:start="459:13" pos:end="459:44">

            <expr_stmt pos:start="459:13" pos:end="459:44"><expr pos:start="459:13" pos:end="459:43"><name pos:start="459:13" pos:end="459:24"><name pos:start="459:13" pos:end="459:13">s</name><operator pos:start="459:14" pos:end="459:15">-&gt;</operator><name pos:start="459:16" pos:end="459:21">window</name><index pos:start="459:22" pos:end="459:24">[<expr pos:start="459:23" pos:end="459:23"><name pos:start="459:23" pos:end="459:23">w</name></expr>]</index></name><operator pos:start="459:25" pos:end="459:25">.</operator><name pos:start="459:26" pos:end="459:37"><name pos:start="459:26" pos:end="459:34">alpha_val</name><index pos:start="459:35" pos:end="459:37">[<expr pos:start="459:36" pos:end="459:36"><name pos:start="459:36" pos:end="459:36">i</name></expr>]</index></name> <operator pos:start="459:39" pos:end="459:39">=</operator> <name pos:start="459:41" pos:end="459:43">val</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="461:11" pos:end="467:9">else <block pos:start="461:16" pos:end="467:9">{<block_content pos:start="463:13" pos:end="465:72">

            <expr_stmt pos:start="463:13" pos:end="465:72"><expr pos:start="463:13" pos:end="465:71"><name pos:start="463:13" pos:end="463:24"><name pos:start="463:13" pos:end="463:13">s</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:21">window</name><index pos:start="463:22" pos:end="463:24">[<expr pos:start="463:23" pos:end="463:23"><name pos:start="463:23" pos:end="463:23">w</name></expr>]</index></name><operator pos:start="463:25" pos:end="463:25">.</operator><name pos:start="463:26" pos:end="463:37"><name pos:start="463:26" pos:end="463:34">alpha_val</name><index pos:start="463:35" pos:end="463:37">[<expr pos:start="463:36" pos:end="463:36"><name pos:start="463:36" pos:end="463:36">i</name></expr>]</index></name> <operator pos:start="463:39" pos:end="463:39">=</operator> <operator pos:start="463:41" pos:end="463:41">(</operator><name pos:start="463:42" pos:end="463:44">val</name> <operator pos:start="463:46" pos:end="463:46">&amp;</operator> <name pos:start="463:48" pos:end="463:72">FIMD_VIDALPHA_ALPHA_LOWER</name><operator pos:start="463:73" pos:end="463:73">)</operator> <operator pos:start="463:75" pos:end="463:75">|</operator>

                <operator pos:start="465:17" pos:end="465:17">(</operator><name pos:start="465:18" pos:end="465:29"><name pos:start="465:18" pos:end="465:18">s</name><operator pos:start="465:19" pos:end="465:20">-&gt;</operator><name pos:start="465:21" pos:end="465:26">window</name><index pos:start="465:27" pos:end="465:29">[<expr pos:start="465:28" pos:end="465:28"><name pos:start="465:28" pos:end="465:28">w</name></expr>]</index></name><operator pos:start="465:30" pos:end="465:30">.</operator><name pos:start="465:31" pos:end="465:42"><name pos:start="465:31" pos:end="465:39">alpha_val</name><index pos:start="465:40" pos:end="465:42">[<expr pos:start="465:41" pos:end="465:41"><name pos:start="465:41" pos:end="465:41">i</name></expr>]</index></name> <operator pos:start="465:44" pos:end="465:44">&amp;</operator> <name pos:start="465:46" pos:end="465:70">FIMD_VIDALPHA_ALPHA_UPPER</name><operator pos:start="465:71" pos:end="465:71">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="469:9" pos:end="469:14">break;</break>

    <case pos:start="471:5" pos:end="471:49">case <expr pos:start="471:10" pos:end="471:48"><name pos:start="471:10" pos:end="471:27">FIMD_BLENDEQ_START</name> <operator pos:start="471:29" pos:end="471:31">...</operator> <name pos:start="471:33" pos:end="471:48">FIMD_BLENDEQ_END</name></expr>:</case>

        <expr_stmt pos:start="473:9" pos:end="473:68"><expr pos:start="473:9" pos:end="473:67"><name pos:start="473:9" pos:end="473:53"><name pos:start="473:9" pos:end="473:9">s</name><operator pos:start="473:10" pos:end="473:11">-&gt;</operator><name pos:start="473:12" pos:end="473:17">window</name><index pos:start="473:18" pos:end="473:53">[<expr pos:start="473:19" pos:end="473:52"><operator pos:start="473:19" pos:end="473:19">(</operator><name pos:start="473:20" pos:end="473:25">offset</name> <operator pos:start="473:27" pos:end="473:27">-</operator> <name pos:start="473:29" pos:end="473:46">FIMD_BLENDEQ_START</name><operator pos:start="473:47" pos:end="473:47">)</operator> <operator pos:start="473:49" pos:end="473:50">&gt;&gt;</operator> <literal type="number" pos:start="473:52" pos:end="473:52">2</literal></expr>]</index></name><operator pos:start="473:54" pos:end="473:54">.</operator><name pos:start="473:55" pos:end="473:61">blendeq</name> <operator pos:start="473:63" pos:end="473:63">=</operator> <name pos:start="473:65" pos:end="473:67">val</name></expr>;</expr_stmt>

        <break pos:start="475:9" pos:end="475:14">break;</break>

    <case pos:start="477:5" pos:end="477:23">case <expr pos:start="477:10" pos:end="477:22"><name pos:start="477:10" pos:end="477:22">FIMD_BLENDCON</name></expr>:</case>

        <expr_stmt pos:start="479:9" pos:end="479:32"><expr pos:start="479:9" pos:end="479:31"><name pos:start="479:9" pos:end="479:17">old_value</name> <operator pos:start="479:19" pos:end="479:19">=</operator> <name pos:start="479:21" pos:end="479:31"><name pos:start="479:21" pos:end="479:21">s</name><operator pos:start="479:22" pos:end="479:23">-&gt;</operator><name pos:start="479:24" pos:end="479:31">blendcon</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="481:9" pos:end="481:26"><expr pos:start="481:9" pos:end="481:25"><name pos:start="481:9" pos:end="481:19"><name pos:start="481:9" pos:end="481:9">s</name><operator pos:start="481:10" pos:end="481:11">-&gt;</operator><name pos:start="481:12" pos:end="481:19">blendcon</name></name> <operator pos:start="481:21" pos:end="481:21">=</operator> <name pos:start="481:23" pos:end="481:25">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="483:9" pos:end="491:9"><if pos:start="483:9" pos:end="491:9">if <condition pos:start="483:12" pos:end="483:77">(<expr pos:start="483:13" pos:end="483:76"><operator pos:start="483:13" pos:end="483:13">(</operator><name pos:start="483:14" pos:end="483:24"><name pos:start="483:14" pos:end="483:14">s</name><operator pos:start="483:15" pos:end="483:16">-&gt;</operator><name pos:start="483:17" pos:end="483:24">blendcon</name></name> <operator pos:start="483:26" pos:end="483:26">&amp;</operator> <name pos:start="483:28" pos:end="483:42">FIMD_ALPHA_8BIT</name><operator pos:start="483:43" pos:end="483:43">)</operator> <operator pos:start="483:45" pos:end="483:46">!=</operator> <operator pos:start="483:48" pos:end="483:48">(</operator><name pos:start="483:49" pos:end="483:57">old_value</name> <operator pos:start="483:59" pos:end="483:59">&amp;</operator> <name pos:start="483:61" pos:end="483:75">FIMD_ALPHA_8BIT</name><operator pos:start="483:76" pos:end="483:76">)</operator></expr>)</condition> <block pos:start="483:79" pos:end="491:9">{<block_content pos:start="485:13" pos:end="489:13">

            <for pos:start="485:13" pos:end="489:13">for <control pos:start="485:17" pos:end="485:48">(<init pos:start="485:18" pos:end="485:23"><expr pos:start="485:18" pos:end="485:22"><name pos:start="485:18" pos:end="485:18">w</name> <operator pos:start="485:20" pos:end="485:20">=</operator> <literal type="number" pos:start="485:22" pos:end="485:22">0</literal></expr>;</init> <condition pos:start="485:25" pos:end="485:43"><expr pos:start="485:25" pos:end="485:42"><name pos:start="485:25" pos:end="485:25">w</name> <operator pos:start="485:27" pos:end="485:27">&lt;</operator> <name pos:start="485:29" pos:end="485:42">NUM_OF_WINDOWS</name></expr>;</condition> <incr pos:start="485:45" pos:end="485:47"><expr pos:start="485:45" pos:end="485:47"><name pos:start="485:45" pos:end="485:45">w</name><operator pos:start="485:46" pos:end="485:47">++</operator></expr></incr>)</control> <block pos:start="485:50" pos:end="489:13">{<block_content pos:start="487:17" pos:end="487:44">

                <expr_stmt pos:start="487:17" pos:end="487:44"><expr pos:start="487:17" pos:end="487:43"><call pos:start="487:17" pos:end="487:43"><name pos:start="487:17" pos:end="487:37">fimd_update_get_alpha</name><argument_list pos:start="487:38" pos:end="487:43">(<argument pos:start="487:39" pos:end="487:39"><expr pos:start="487:39" pos:end="487:39"><name pos:start="487:39" pos:end="487:39">s</name></expr></argument>, <argument pos:start="487:42" pos:end="487:42"><expr pos:start="487:42" pos:end="487:42"><name pos:start="487:42" pos:end="487:42">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <break pos:start="493:9" pos:end="493:14">break;</break>

    <case pos:start="495:5" pos:end="495:53">case <expr pos:start="495:10" pos:end="495:52"><name pos:start="495:10" pos:end="495:29">FIMD_WRTQOSCON_START</name> <operator pos:start="495:31" pos:end="495:33">...</operator> <name pos:start="495:35" pos:end="495:52">FIMD_WRTQOSCON_END</name></expr>:</case>

        <expr_stmt pos:start="497:9" pos:end="497:71"><expr pos:start="497:9" pos:end="497:70"><name pos:start="497:9" pos:end="497:55"><name pos:start="497:9" pos:end="497:9">s</name><operator pos:start="497:10" pos:end="497:11">-&gt;</operator><name pos:start="497:12" pos:end="497:17">window</name><index pos:start="497:18" pos:end="497:55">[<expr pos:start="497:19" pos:end="497:54"><operator pos:start="497:19" pos:end="497:19">(</operator><name pos:start="497:20" pos:end="497:25">offset</name> <operator pos:start="497:27" pos:end="497:27">-</operator> <name pos:start="497:29" pos:end="497:48">FIMD_WRTQOSCON_START</name><operator pos:start="497:49" pos:end="497:49">)</operator> <operator pos:start="497:51" pos:end="497:52">&gt;&gt;</operator> <literal type="number" pos:start="497:54" pos:end="497:54">2</literal></expr>]</index></name><operator pos:start="497:56" pos:end="497:56">.</operator><name pos:start="497:57" pos:end="497:64">rtqoscon</name> <operator pos:start="497:66" pos:end="497:66">=</operator> <name pos:start="497:68" pos:end="497:70">val</name></expr>;</expr_stmt>

        <break pos:start="499:9" pos:end="499:14">break;</break>

    <case pos:start="501:5" pos:end="501:51">case <expr pos:start="501:10" pos:end="501:50"><name pos:start="501:10" pos:end="501:28">FIMD_I80IFCMD_START</name> <operator pos:start="501:30" pos:end="501:32">...</operator> <name pos:start="501:34" pos:end="501:50">FIMD_I80IFCMD_END</name></expr>:</case>

        <expr_stmt pos:start="503:9" pos:end="503:63"><expr pos:start="503:9" pos:end="503:62"><name pos:start="503:9" pos:end="503:56"><name pos:start="503:9" pos:end="503:9">s</name><operator pos:start="503:10" pos:end="503:11">-&gt;</operator><name pos:start="503:12" pos:end="503:19">i80ifcmd</name><index pos:start="503:20" pos:end="503:56">[<expr pos:start="503:21" pos:end="503:55"><operator pos:start="503:21" pos:end="503:21">(</operator><name pos:start="503:22" pos:end="503:27">offset</name> <operator pos:start="503:29" pos:end="503:29">-</operator> <name pos:start="503:31" pos:end="503:49">FIMD_I80IFCMD_START</name><operator pos:start="503:50" pos:end="503:50">)</operator> <operator pos:start="503:52" pos:end="503:53">&gt;&gt;</operator> <literal type="number" pos:start="503:55" pos:end="503:55">2</literal></expr>]</index></name> <operator pos:start="503:58" pos:end="503:58">=</operator> <name pos:start="503:60" pos:end="503:62">val</name></expr>;</expr_stmt>

        <break pos:start="505:9" pos:end="505:14">break;</break>

    <case pos:start="507:5" pos:end="507:49">case <expr pos:start="507:10" pos:end="507:48"><name pos:start="507:10" pos:end="507:26">FIMD_VIDW0ADD0_B2</name> <operator pos:start="507:28" pos:end="507:30">...</operator> <name pos:start="507:32" pos:end="507:48">FIMD_VIDW4ADD0_B2</name></expr>:</case>

        <if_stmt pos:start="509:9" pos:end="515:9"><if pos:start="509:9" pos:end="515:9">if <condition pos:start="509:12" pos:end="509:28">(<expr pos:start="509:13" pos:end="509:27"><name pos:start="509:13" pos:end="509:18">offset</name> <operator pos:start="509:20" pos:end="509:20">&amp;</operator> <literal type="number" pos:start="509:22" pos:end="509:27">0x0004</literal></expr>)</condition> <block pos:start="509:30" pos:end="515:9">{<block_content pos:start="511:13" pos:end="513:18">

            <expr_stmt pos:start="511:13" pos:end="511:62"><expr pos:start="511:13" pos:end="511:61"><call pos:start="511:13" pos:end="511:61"><name pos:start="511:13" pos:end="511:24">DPRINT_ERROR</name><argument_list pos:start="511:25" pos:end="511:61">(<argument pos:start="511:26" pos:end="511:52"><expr pos:start="511:26" pos:end="511:52"><literal type="string" pos:start="511:26" pos:end="511:52">"bad write offset 0x%08x\n"</literal></expr></argument>, <argument pos:start="511:55" pos:end="511:60"><expr pos:start="511:55" pos:end="511:60"><name pos:start="511:55" pos:end="511:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="513:13" pos:end="513:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="517:9" pos:end="517:46"><expr pos:start="517:9" pos:end="517:45"><name pos:start="517:9" pos:end="517:9">w</name> <operator pos:start="517:11" pos:end="517:11">=</operator> <operator pos:start="517:13" pos:end="517:13">(</operator><name pos:start="517:14" pos:end="517:19">offset</name> <operator pos:start="517:21" pos:end="517:21">-</operator> <name pos:start="517:23" pos:end="517:39">FIMD_VIDW0ADD0_B2</name><operator pos:start="517:40" pos:end="517:40">)</operator> <operator pos:start="517:42" pos:end="517:43">&gt;&gt;</operator> <literal type="number" pos:start="517:45" pos:end="517:45">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="519:9" pos:end="529:9"><if pos:start="519:9" pos:end="529:9">if <condition pos:start="519:12" pos:end="521:49">(<expr pos:start="519:13" pos:end="521:48"><call pos:start="519:13" pos:end="519:45"><name pos:start="519:13" pos:end="519:30">fimd_get_buffer_id</name><argument_list pos:start="519:31" pos:end="519:45">(<argument pos:start="519:32" pos:end="519:44"><expr pos:start="519:32" pos:end="519:44"><operator pos:start="519:32" pos:end="519:32">&amp;</operator><name pos:start="519:33" pos:end="519:44"><name pos:start="519:33" pos:end="519:33">s</name><operator pos:start="519:34" pos:end="519:35">-&gt;</operator><name pos:start="519:36" pos:end="519:41">window</name><index pos:start="519:42" pos:end="519:44">[<expr pos:start="519:43" pos:end="519:43"><name pos:start="519:43" pos:end="519:43">w</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="519:47" pos:end="519:48">==</operator> <literal type="number" pos:start="519:50" pos:end="519:50">2</literal> <operator pos:start="519:52" pos:end="519:53">&amp;&amp;</operator>

                <name pos:start="521:17" pos:end="521:28"><name pos:start="521:17" pos:end="521:17">s</name><operator pos:start="521:18" pos:end="521:19">-&gt;</operator><name pos:start="521:20" pos:end="521:25">window</name><index pos:start="521:26" pos:end="521:28">[<expr pos:start="521:27" pos:end="521:27"><name pos:start="521:27" pos:end="521:27">w</name></expr>]</index></name><operator pos:start="521:29" pos:end="521:29">.</operator><name pos:start="521:30" pos:end="521:41"><name pos:start="521:30" pos:end="521:38">buf_start</name><index pos:start="521:39" pos:end="521:41">[<expr pos:start="521:40" pos:end="521:40"><literal type="number" pos:start="521:40" pos:end="521:40">2</literal></expr>]</index></name> <operator pos:start="521:43" pos:end="521:44">!=</operator> <name pos:start="521:46" pos:end="521:48">val</name></expr>)</condition> <block pos:start="521:51" pos:end="529:9">{<block_content pos:start="523:13" pos:end="527:18">

            <expr_stmt pos:start="523:13" pos:end="523:44"><expr pos:start="523:13" pos:end="523:43"><name pos:start="523:13" pos:end="523:24"><name pos:start="523:13" pos:end="523:13">s</name><operator pos:start="523:14" pos:end="523:15">-&gt;</operator><name pos:start="523:16" pos:end="523:21">window</name><index pos:start="523:22" pos:end="523:24">[<expr pos:start="523:23" pos:end="523:23"><name pos:start="523:23" pos:end="523:23">w</name></expr>]</index></name><operator pos:start="523:25" pos:end="523:25">.</operator><name pos:start="523:26" pos:end="523:37"><name pos:start="523:26" pos:end="523:34">buf_start</name><index pos:start="523:35" pos:end="523:37">[<expr pos:start="523:36" pos:end="523:36"><literal type="number" pos:start="523:36" pos:end="523:36">2</literal></expr>]</index></name> <operator pos:start="523:39" pos:end="523:39">=</operator> <name pos:start="523:41" pos:end="523:43">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:45"><expr pos:start="525:13" pos:end="525:44"><call pos:start="525:13" pos:end="525:44"><name pos:start="525:13" pos:end="525:38">fimd_update_memory_section</name><argument_list pos:start="525:39" pos:end="525:44">(<argument pos:start="525:40" pos:end="525:40"><expr pos:start="525:40" pos:end="525:40"><name pos:start="525:40" pos:end="525:40">s</name></expr></argument>, <argument pos:start="525:43" pos:end="525:43"><expr pos:start="525:43" pos:end="525:43"><name pos:start="525:43" pos:end="525:43">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="527:13" pos:end="527:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="531:9" pos:end="531:40"><expr pos:start="531:9" pos:end="531:39"><name pos:start="531:9" pos:end="531:20"><name pos:start="531:9" pos:end="531:9">s</name><operator pos:start="531:10" pos:end="531:11">-&gt;</operator><name pos:start="531:12" pos:end="531:17">window</name><index pos:start="531:18" pos:end="531:20">[<expr pos:start="531:19" pos:end="531:19"><name pos:start="531:19" pos:end="531:19">w</name></expr>]</index></name><operator pos:start="531:21" pos:end="531:21">.</operator><name pos:start="531:22" pos:end="531:33"><name pos:start="531:22" pos:end="531:30">buf_start</name><index pos:start="531:31" pos:end="531:33">[<expr pos:start="531:32" pos:end="531:32"><literal type="number" pos:start="531:32" pos:end="531:32">2</literal></expr>]</index></name> <operator pos:start="531:35" pos:end="531:35">=</operator> <name pos:start="531:37" pos:end="531:39">val</name></expr>;</expr_stmt>

        <break pos:start="533:9" pos:end="533:14">break;</break>

    <case pos:start="535:5" pos:end="535:51">case <expr pos:start="535:10" pos:end="535:50"><name pos:start="535:10" pos:end="535:28">FIMD_SHD_ADD0_START</name> <operator pos:start="535:30" pos:end="535:32">...</operator> <name pos:start="535:34" pos:end="535:50">FIMD_SHD_ADD0_END</name></expr>:</case>

        <if_stmt pos:start="537:9" pos:end="543:9"><if pos:start="537:9" pos:end="543:9">if <condition pos:start="537:12" pos:end="537:28">(<expr pos:start="537:13" pos:end="537:27"><name pos:start="537:13" pos:end="537:18">offset</name> <operator pos:start="537:20" pos:end="537:20">&amp;</operator> <literal type="number" pos:start="537:22" pos:end="537:27">0x0004</literal></expr>)</condition> <block pos:start="537:30" pos:end="543:9">{<block_content pos:start="539:13" pos:end="541:18">

            <expr_stmt pos:start="539:13" pos:end="539:62"><expr pos:start="539:13" pos:end="539:61"><call pos:start="539:13" pos:end="539:61"><name pos:start="539:13" pos:end="539:24">DPRINT_ERROR</name><argument_list pos:start="539:25" pos:end="539:61">(<argument pos:start="539:26" pos:end="539:52"><expr pos:start="539:26" pos:end="539:52"><literal type="string" pos:start="539:26" pos:end="539:52">"bad write offset 0x%08x\n"</literal></expr></argument>, <argument pos:start="539:55" pos:end="539:60"><expr pos:start="539:55" pos:end="539:60"><name pos:start="539:55" pos:end="539:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="541:13" pos:end="541:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="545:9" pos:end="545:78"><expr pos:start="545:9" pos:end="545:77"><name pos:start="545:9" pos:end="545:54"><name pos:start="545:9" pos:end="545:9">s</name><operator pos:start="545:10" pos:end="545:11">-&gt;</operator><name pos:start="545:12" pos:end="545:17">window</name><index pos:start="545:18" pos:end="545:54">[<expr pos:start="545:19" pos:end="545:53"><operator pos:start="545:19" pos:end="545:19">(</operator><name pos:start="545:20" pos:end="545:25">offset</name> <operator pos:start="545:27" pos:end="545:27">-</operator> <name pos:start="545:29" pos:end="545:47">FIMD_SHD_ADD0_START</name><operator pos:start="545:48" pos:end="545:48">)</operator> <operator pos:start="545:50" pos:end="545:51">&gt;&gt;</operator> <literal type="number" pos:start="545:53" pos:end="545:53">3</literal></expr>]</index></name><operator pos:start="545:55" pos:end="545:55">.</operator><name pos:start="545:56" pos:end="545:71">shadow_buf_start</name> <operator pos:start="545:73" pos:end="545:73">=</operator> <name pos:start="545:75" pos:end="545:77">val</name></expr>;</expr_stmt>

        <break pos:start="547:9" pos:end="547:14">break;</break>

    <case pos:start="549:5" pos:end="549:51">case <expr pos:start="549:10" pos:end="549:50"><name pos:start="549:10" pos:end="549:28">FIMD_SHD_ADD1_START</name> <operator pos:start="549:30" pos:end="549:32">...</operator> <name pos:start="549:34" pos:end="549:50">FIMD_SHD_ADD1_END</name></expr>:</case>

        <if_stmt pos:start="551:9" pos:end="557:9"><if pos:start="551:9" pos:end="557:9">if <condition pos:start="551:12" pos:end="551:28">(<expr pos:start="551:13" pos:end="551:27"><name pos:start="551:13" pos:end="551:18">offset</name> <operator pos:start="551:20" pos:end="551:20">&amp;</operator> <literal type="number" pos:start="551:22" pos:end="551:27">0x0004</literal></expr>)</condition> <block pos:start="551:30" pos:end="557:9">{<block_content pos:start="553:13" pos:end="555:18">

            <expr_stmt pos:start="553:13" pos:end="553:62"><expr pos:start="553:13" pos:end="553:61"><call pos:start="553:13" pos:end="553:61"><name pos:start="553:13" pos:end="553:24">DPRINT_ERROR</name><argument_list pos:start="553:25" pos:end="553:61">(<argument pos:start="553:26" pos:end="553:52"><expr pos:start="553:26" pos:end="553:52"><literal type="string" pos:start="553:26" pos:end="553:52">"bad write offset 0x%08x\n"</literal></expr></argument>, <argument pos:start="553:55" pos:end="553:60"><expr pos:start="553:55" pos:end="553:60"><name pos:start="553:55" pos:end="553:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="555:13" pos:end="555:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="559:9" pos:end="559:76"><expr pos:start="559:9" pos:end="559:75"><name pos:start="559:9" pos:end="559:54"><name pos:start="559:9" pos:end="559:9">s</name><operator pos:start="559:10" pos:end="559:11">-&gt;</operator><name pos:start="559:12" pos:end="559:17">window</name><index pos:start="559:18" pos:end="559:54">[<expr pos:start="559:19" pos:end="559:53"><operator pos:start="559:19" pos:end="559:19">(</operator><name pos:start="559:20" pos:end="559:25">offset</name> <operator pos:start="559:27" pos:end="559:27">-</operator> <name pos:start="559:29" pos:end="559:47">FIMD_SHD_ADD1_START</name><operator pos:start="559:48" pos:end="559:48">)</operator> <operator pos:start="559:50" pos:end="559:51">&gt;&gt;</operator> <literal type="number" pos:start="559:53" pos:end="559:53">3</literal></expr>]</index></name><operator pos:start="559:55" pos:end="559:55">.</operator><name pos:start="559:56" pos:end="559:69">shadow_buf_end</name> <operator pos:start="559:71" pos:end="559:71">=</operator> <name pos:start="559:73" pos:end="559:75">val</name></expr>;</expr_stmt>

        <break pos:start="561:9" pos:end="561:14">break;</break>

    <case pos:start="563:5" pos:end="563:51">case <expr pos:start="563:10" pos:end="563:50"><name pos:start="563:10" pos:end="563:28">FIMD_SHD_ADD2_START</name> <operator pos:start="563:30" pos:end="563:32">...</operator> <name pos:start="563:34" pos:end="563:50">FIMD_SHD_ADD2_END</name></expr>:</case>

        <expr_stmt pos:start="565:9" pos:end="565:77"><expr pos:start="565:9" pos:end="565:76"><name pos:start="565:9" pos:end="565:54"><name pos:start="565:9" pos:end="565:9">s</name><operator pos:start="565:10" pos:end="565:11">-&gt;</operator><name pos:start="565:12" pos:end="565:17">window</name><index pos:start="565:18" pos:end="565:54">[<expr pos:start="565:19" pos:end="565:53"><operator pos:start="565:19" pos:end="565:19">(</operator><name pos:start="565:20" pos:end="565:25">offset</name> <operator pos:start="565:27" pos:end="565:27">-</operator> <name pos:start="565:29" pos:end="565:47">FIMD_SHD_ADD2_START</name><operator pos:start="565:48" pos:end="565:48">)</operator> <operator pos:start="565:50" pos:end="565:51">&gt;&gt;</operator> <literal type="number" pos:start="565:53" pos:end="565:53">2</literal></expr>]</index></name><operator pos:start="565:55" pos:end="565:55">.</operator><name pos:start="565:56" pos:end="565:70">shadow_buf_size</name> <operator pos:start="565:72" pos:end="565:72">=</operator> <name pos:start="565:74" pos:end="565:76">val</name></expr>;</expr_stmt>

        <break pos:start="567:9" pos:end="567:14">break;</break>

    <case pos:start="569:5" pos:end="569:49">case <expr pos:start="569:10" pos:end="569:48"><name pos:start="569:10" pos:end="569:27">FIMD_PAL_MEM_START</name> <operator pos:start="569:29" pos:end="569:31">...</operator> <name pos:start="569:33" pos:end="569:48">FIMD_PAL_MEM_END</name></expr>:</case>

        <expr_stmt pos:start="571:9" pos:end="571:48"><expr pos:start="571:9" pos:end="571:47"><name pos:start="571:9" pos:end="571:9">w</name> <operator pos:start="571:11" pos:end="571:11">=</operator> <operator pos:start="571:13" pos:end="571:13">(</operator><name pos:start="571:14" pos:end="571:19">offset</name> <operator pos:start="571:21" pos:end="571:21">-</operator> <name pos:start="571:23" pos:end="571:40">FIMD_PAL_MEM_START</name><operator pos:start="571:41" pos:end="571:41">)</operator> <operator pos:start="571:43" pos:end="571:44">&gt;&gt;</operator> <literal type="number" pos:start="571:46" pos:end="571:47">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="573:9" pos:end="573:56"><expr pos:start="573:9" pos:end="573:55"><name pos:start="573:9" pos:end="573:9">i</name> <operator pos:start="573:11" pos:end="573:11">=</operator> <operator pos:start="573:13" pos:end="573:13">(</operator><operator pos:start="573:14" pos:end="573:14">(</operator><name pos:start="573:15" pos:end="573:20">offset</name> <operator pos:start="573:22" pos:end="573:22">-</operator> <name pos:start="573:24" pos:end="573:41">FIMD_PAL_MEM_START</name><operator pos:start="573:42" pos:end="573:42">)</operator> <operator pos:start="573:44" pos:end="573:45">&gt;&gt;</operator> <literal type="number" pos:start="573:47" pos:end="573:47">2</literal><operator pos:start="573:48" pos:end="573:48">)</operator> <operator pos:start="573:50" pos:end="573:50">&amp;</operator> <literal type="number" pos:start="573:52" pos:end="573:55">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="575:9" pos:end="575:38"><expr pos:start="575:9" pos:end="575:37"><name pos:start="575:9" pos:end="575:20"><name pos:start="575:9" pos:end="575:9">s</name><operator pos:start="575:10" pos:end="575:11">-&gt;</operator><name pos:start="575:12" pos:end="575:17">window</name><index pos:start="575:18" pos:end="575:20">[<expr pos:start="575:19" pos:end="575:19"><name pos:start="575:19" pos:end="575:19">w</name></expr>]</index></name><operator pos:start="575:21" pos:end="575:21">.</operator><name pos:start="575:22" pos:end="575:31"><name pos:start="575:22" pos:end="575:28">palette</name><index pos:start="575:29" pos:end="575:31">[<expr pos:start="575:30" pos:end="575:30"><name pos:start="575:30" pos:end="575:30">i</name></expr>]</index></name> <operator pos:start="575:33" pos:end="575:33">=</operator> <name pos:start="575:35" pos:end="575:37">val</name></expr>;</expr_stmt>

        <break pos:start="577:9" pos:end="577:14">break;</break>

    <case pos:start="579:5" pos:end="579:53">case <expr pos:start="579:10" pos:end="579:52"><name pos:start="579:10" pos:end="579:29">FIMD_PALMEM_AL_START</name> <operator pos:start="579:31" pos:end="579:33">...</operator> <name pos:start="579:35" pos:end="579:52">FIMD_PALMEM_AL_END</name></expr>:</case>

        <comment type="block" pos:start="581:9" pos:end="581:56">/* Palette memory aliases for windows 0 and 1 */</comment>

        <expr_stmt pos:start="583:9" pos:end="583:50"><expr pos:start="583:9" pos:end="583:49"><name pos:start="583:9" pos:end="583:9">w</name> <operator pos:start="583:11" pos:end="583:11">=</operator> <operator pos:start="583:13" pos:end="583:13">(</operator><name pos:start="583:14" pos:end="583:19">offset</name> <operator pos:start="583:21" pos:end="583:21">-</operator> <name pos:start="583:23" pos:end="583:42">FIMD_PALMEM_AL_START</name><operator pos:start="583:43" pos:end="583:43">)</operator> <operator pos:start="583:45" pos:end="583:46">&gt;&gt;</operator> <literal type="number" pos:start="583:48" pos:end="583:49">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="585:9" pos:end="585:58"><expr pos:start="585:9" pos:end="585:57"><name pos:start="585:9" pos:end="585:9">i</name> <operator pos:start="585:11" pos:end="585:11">=</operator> <operator pos:start="585:13" pos:end="585:13">(</operator><operator pos:start="585:14" pos:end="585:14">(</operator><name pos:start="585:15" pos:end="585:20">offset</name> <operator pos:start="585:22" pos:end="585:22">-</operator> <name pos:start="585:24" pos:end="585:43">FIMD_PALMEM_AL_START</name><operator pos:start="585:44" pos:end="585:44">)</operator> <operator pos:start="585:46" pos:end="585:47">&gt;&gt;</operator> <literal type="number" pos:start="585:49" pos:end="585:49">2</literal><operator pos:start="585:50" pos:end="585:50">)</operator> <operator pos:start="585:52" pos:end="585:52">&amp;</operator> <literal type="number" pos:start="585:54" pos:end="585:57">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="587:9" pos:end="587:38"><expr pos:start="587:9" pos:end="587:37"><name pos:start="587:9" pos:end="587:20"><name pos:start="587:9" pos:end="587:9">s</name><operator pos:start="587:10" pos:end="587:11">-&gt;</operator><name pos:start="587:12" pos:end="587:17">window</name><index pos:start="587:18" pos:end="587:20">[<expr pos:start="587:19" pos:end="587:19"><name pos:start="587:19" pos:end="587:19">w</name></expr>]</index></name><operator pos:start="587:21" pos:end="587:21">.</operator><name pos:start="587:22" pos:end="587:31"><name pos:start="587:22" pos:end="587:28">palette</name><index pos:start="587:29" pos:end="587:31">[<expr pos:start="587:30" pos:end="587:30"><name pos:start="587:30" pos:end="587:30">i</name></expr>]</index></name> <operator pos:start="587:33" pos:end="587:33">=</operator> <name pos:start="587:35" pos:end="587:37">val</name></expr>;</expr_stmt>

        <break pos:start="589:9" pos:end="589:14">break;</break>

    <default pos:start="591:5" pos:end="591:12">default:</default>

        <expr_stmt pos:start="593:9" pos:end="593:58"><expr pos:start="593:9" pos:end="593:57"><call pos:start="593:9" pos:end="593:57"><name pos:start="593:9" pos:end="593:20">DPRINT_ERROR</name><argument_list pos:start="593:21" pos:end="593:57">(<argument pos:start="593:22" pos:end="593:48"><expr pos:start="593:22" pos:end="593:48"><literal type="string" pos:start="593:22" pos:end="593:48">"bad write offset 0x%08x\n"</literal></expr></argument>, <argument pos:start="593:51" pos:end="593:56"><expr pos:start="593:51" pos:end="593:56"><name pos:start="593:51" pos:end="593:56">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="595:9" pos:end="595:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
