<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11710.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_pci_device_plugged</name><parameter_list pos:start="1:38" pos:end="1:67">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:49">DeviceState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">d</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:59">Error</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="273:1">{<block_content pos:start="5:5" pos:end="271:5">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtIOPCIProxy</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">proxy</name> <init pos:start="5:27" pos:end="5:41">= <expr pos:start="5:29" pos:end="5:41"><call pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:38">VIRTIO_PCI</name><argument_list pos:start="5:39" pos:end="5:41">(<argument pos:start="5:40" pos:end="5:40"><expr pos:start="5:40" pos:end="5:40"><name pos:start="5:40" pos:end="5:40">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtioBusState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">bus</name> <init pos:start="7:25" pos:end="7:37">= <expr pos:start="7:27" pos:end="7:37"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:32">proxy</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:37">bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:15">legacy</name> <init pos:start="9:17" pos:end="9:42">= <expr pos:start="9:19" pos:end="9:42"><call pos:start="9:19" pos:end="9:42"><name pos:start="9:19" pos:end="9:35">virtio_pci_legacy</name><argument_list pos:start="9:36" pos:end="9:42">(<argument pos:start="9:37" pos:end="9:41"><expr pos:start="9:37" pos:end="9:41"><name pos:start="9:37" pos:end="9:41">proxy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:15">modern</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:71"><decl pos:start="13:5" pos:end="13:70"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:19">modern_pio</name> <init pos:start="13:21" pos:end="13:70">= <expr pos:start="13:23" pos:end="13:70"><name pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:27">proxy</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:34">flags</name></name> <operator pos:start="13:36" pos:end="13:36">&amp;</operator> <name pos:start="13:38" pos:end="13:70">VIRTIO_PCI_FLAG_MODERN_PIO_NOTIFY</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:19">config</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:60"><decl pos:start="19:5" pos:end="19:59"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">VirtIODevice</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:22">vdev</name> <init pos:start="19:24" pos:end="19:59">= <expr pos:start="19:26" pos:end="19:59"><call pos:start="19:26" pos:end="19:59"><name pos:start="19:26" pos:end="19:46">virtio_bus_get_device</name><argument_list pos:start="19:47" pos:end="19:59">(<argument pos:start="19:48" pos:end="19:58"><expr pos:start="19:48" pos:end="19:58"><operator pos:start="19:48" pos:end="19:48">&amp;</operator><name pos:start="19:49" pos:end="19:58"><name pos:start="19:49" pos:end="19:53">proxy</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="29:7">/*

     * Virtio capabilities present without

     * VIRTIO_F_VERSION_1 confuses guests

     */</comment>

    <if_stmt pos:start="31:5" pos:end="53:5"><if pos:start="31:5" pos:end="53:5">if <condition pos:start="31:8" pos:end="33:73">(<expr pos:start="31:9" pos:end="33:72"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:39"><name pos:start="31:10" pos:end="31:14">proxy</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:39">ignore_backend_features</name></name> <operator pos:start="31:41" pos:end="31:42">&amp;&amp;</operator>

            <operator pos:start="33:13" pos:end="33:13">!</operator><call pos:start="33:14" pos:end="33:72"><name pos:start="33:14" pos:end="33:31">virtio_has_feature</name><argument_list pos:start="33:32" pos:end="33:72">(<argument pos:start="33:33" pos:end="33:51"><expr pos:start="33:33" pos:end="33:51"><name pos:start="33:33" pos:end="33:51"><name pos:start="33:33" pos:end="33:36">vdev</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:51">host_features</name></name></expr></argument>, <argument pos:start="33:54" pos:end="33:71"><expr pos:start="33:54" pos:end="33:71"><name pos:start="33:54" pos:end="33:71">VIRTIO_F_VERSION_1</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:75" pos:end="53:5">{<block_content pos:start="35:9" pos:end="51:9">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:33">virtio_pci_disable_modern</name><argument_list pos:start="35:34" pos:end="35:40">(<argument pos:start="35:35" pos:end="35:39"><expr pos:start="35:35" pos:end="35:39"><name pos:start="35:35" pos:end="35:39">proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="51:9"><if pos:start="39:9" pos:end="51:9">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:19">legacy</name></expr>)</condition> <block pos:start="39:22" pos:end="51:9">{<block_content pos:start="41:13" pos:end="49:19">

            <expr_stmt pos:start="41:13" pos:end="43:50"><expr pos:start="41:13" pos:end="43:49"><call pos:start="41:13" pos:end="43:49"><name pos:start="41:13" pos:end="41:22">error_setg</name><argument_list pos:start="41:23" pos:end="43:49">(<argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">errp</name></expr></argument>, <argument pos:start="41:30" pos:end="43:48"><expr pos:start="41:30" pos:end="43:48"><literal type="string" pos:start="41:30" pos:end="41:77">"Device doesn't support modern mode, and legacy"</literal>

                             <literal type="string" pos:start="43:30" pos:end="43:48">" mode is disabled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:67"><expr pos:start="45:13" pos:end="45:66"><call pos:start="45:13" pos:end="45:66"><name pos:start="45:13" pos:end="45:29">error_append_hint</name><argument_list pos:start="45:30" pos:end="45:66">(<argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><name pos:start="45:31" pos:end="45:34">errp</name></expr></argument>, <argument pos:start="45:37" pos:end="45:65"><expr pos:start="45:37" pos:end="45:65"><literal type="string" pos:start="45:37" pos:end="45:65">"Set disable-legacy to off\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="49:13" pos:end="49:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:38"><expr pos:start="57:5" pos:end="57:37"><name pos:start="57:5" pos:end="57:10">modern</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:37"><name pos:start="57:14" pos:end="57:30">virtio_pci_modern</name><argument_list pos:start="57:31" pos:end="57:37">(<argument pos:start="57:32" pos:end="57:36"><expr pos:start="57:32" pos:end="57:36"><name pos:start="57:32" pos:end="57:36">proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:10">config</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:34"><name pos:start="61:14" pos:end="61:18">proxy</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:27">pci_dev</name><operator pos:start="61:28" pos:end="61:28">.</operator><name pos:start="61:29" pos:end="61:34">config</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:26">(<expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:13">proxy</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:25">class_code</name></name></expr>)</condition> <block pos:start="63:28" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:56">

        <expr_stmt pos:start="65:9" pos:end="65:56"><expr pos:start="65:9" pos:end="65:55"><call pos:start="65:9" pos:end="65:55"><name pos:start="65:9" pos:end="65:28">pci_config_set_class</name><argument_list pos:start="65:29" pos:end="65:55">(<argument pos:start="65:30" pos:end="65:35"><expr pos:start="65:30" pos:end="65:35"><name pos:start="65:30" pos:end="65:35">config</name></expr></argument>, <argument pos:start="65:38" pos:end="65:54"><expr pos:start="65:38" pos:end="65:54"><name pos:start="65:38" pos:end="65:54"><name pos:start="65:38" pos:end="65:42">proxy</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:54">class_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="105:5"><if pos:start="71:5" pos:end="91:5">if <condition pos:start="71:8" pos:end="71:15">(<expr pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:14">legacy</name></expr>)</condition> <block pos:start="71:17" pos:end="91:5">{<block_content pos:start="73:9" pos:end="89:77">

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:67">(<expr pos:start="73:13" pos:end="73:66"><call pos:start="73:13" pos:end="73:66"><name pos:start="73:13" pos:end="73:35">virtio_host_has_feature</name><argument_list pos:start="73:36" pos:end="73:66">(<argument pos:start="73:37" pos:end="73:40"><expr pos:start="73:37" pos:end="73:40"><name pos:start="73:37" pos:end="73:40">vdev</name></expr></argument>, <argument pos:start="73:43" pos:end="73:65"><expr pos:start="73:43" pos:end="73:65"><name pos:start="73:43" pos:end="73:65">VIRTIO_F_IOMMU_PLATFORM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:69" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:20">

            <expr_stmt pos:start="75:13" pos:end="77:66"><expr pos:start="75:13" pos:end="77:65"><call pos:start="75:13" pos:end="77:65"><name pos:start="75:13" pos:end="75:22">error_setg</name><argument_list pos:start="75:23" pos:end="77:65">(<argument pos:start="75:24" pos:end="75:27"><expr pos:start="75:24" pos:end="75:27"><name pos:start="75:24" pos:end="75:27">errp</name></expr></argument>, <argument pos:start="75:30" pos:end="77:64"><expr pos:start="75:30" pos:end="77:64"><literal type="string" pos:start="75:30" pos:end="75:71">"VIRTIO_F_IOMMU_PLATFORM was supported by"</literal>

                       <literal type="string" pos:start="77:24" pos:end="77:64">"neither legacy nor transitional device."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:20">return ;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:37">/* legacy and transitional */</comment>

        <expr_stmt pos:start="85:9" pos:end="87:59"><expr pos:start="85:9" pos:end="87:58"><call pos:start="85:9" pos:end="87:58"><name pos:start="85:9" pos:end="85:20">pci_set_word</name><argument_list pos:start="85:21" pos:end="87:58">(<argument pos:start="85:22" pos:end="85:53"><expr pos:start="85:22" pos:end="85:53"><name pos:start="85:22" pos:end="85:27">config</name> <operator pos:start="85:29" pos:end="85:29">+</operator> <name pos:start="85:31" pos:end="85:53">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>,

                     <argument pos:start="87:22" pos:end="87:57"><expr pos:start="87:22" pos:end="87:57"><call pos:start="87:22" pos:end="87:57"><name pos:start="87:22" pos:end="87:33">pci_get_word</name><argument_list pos:start="87:34" pos:end="87:57">(<argument pos:start="87:35" pos:end="87:56"><expr pos:start="87:35" pos:end="87:56"><name pos:start="87:35" pos:end="87:40">config</name> <operator pos:start="87:42" pos:end="87:42">+</operator> <name pos:start="87:44" pos:end="87:56">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:77"><expr pos:start="89:9" pos:end="89:76"><call pos:start="89:9" pos:end="89:76"><name pos:start="89:9" pos:end="89:20">pci_set_word</name><argument_list pos:start="89:21" pos:end="89:76">(<argument pos:start="89:22" pos:end="89:46"><expr pos:start="89:22" pos:end="89:46"><name pos:start="89:22" pos:end="89:27">config</name> <operator pos:start="89:29" pos:end="89:29">+</operator> <name pos:start="89:31" pos:end="89:46">PCI_SUBSYSTEM_ID</name></expr></argument>, <argument pos:start="89:49" pos:end="89:75"><expr pos:start="89:49" pos:end="89:75"><call pos:start="89:49" pos:end="89:75"><name pos:start="89:49" pos:end="89:70">virtio_bus_get_vdev_id</name><argument_list pos:start="89:71" pos:end="89:75">(<argument pos:start="89:72" pos:end="89:74"><expr pos:start="89:72" pos:end="89:74"><name pos:start="89:72" pos:end="89:74">bus</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="105:5">else <block pos:start="91:12" pos:end="105:5">{<block_content pos:start="95:9" pos:end="103:43">

        <comment type="block" pos:start="93:9" pos:end="93:29">/* pure virtio-1.0 */</comment>

        <expr_stmt pos:start="95:9" pos:end="97:52"><expr pos:start="95:9" pos:end="97:51"><call pos:start="95:9" pos:end="97:51"><name pos:start="95:9" pos:end="95:20">pci_set_word</name><argument_list pos:start="95:21" pos:end="97:51">(<argument pos:start="95:22" pos:end="95:43"><expr pos:start="95:22" pos:end="95:43"><name pos:start="95:22" pos:end="95:27">config</name> <operator pos:start="95:29" pos:end="95:29">+</operator> <name pos:start="95:31" pos:end="95:43">PCI_VENDOR_ID</name></expr></argument>,

                     <argument pos:start="97:22" pos:end="97:50"><expr pos:start="97:22" pos:end="97:50"><name pos:start="97:22" pos:end="97:50">PCI_VENDOR_ID_REDHAT_QUMRANET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="101:59"><expr pos:start="99:9" pos:end="101:58"><call pos:start="99:9" pos:end="101:58"><name pos:start="99:9" pos:end="99:20">pci_set_word</name><argument_list pos:start="99:21" pos:end="101:58">(<argument pos:start="99:22" pos:end="99:43"><expr pos:start="99:22" pos:end="99:43"><name pos:start="99:22" pos:end="99:27">config</name> <operator pos:start="99:29" pos:end="99:29">+</operator> <name pos:start="99:31" pos:end="99:43">PCI_DEVICE_ID</name></expr></argument>,

                     <argument pos:start="101:22" pos:end="101:57"><expr pos:start="101:22" pos:end="101:57"><literal type="number" pos:start="101:22" pos:end="101:29">0x1040</literal> <operator pos:start="101:29" pos:end="101:29">+</operator> <call pos:start="101:31" pos:end="101:57"><name pos:start="101:31" pos:end="101:52">virtio_bus_get_vdev_id</name><argument_list pos:start="101:53" pos:end="101:57">(<argument pos:start="101:54" pos:end="101:56"><expr pos:start="101:54" pos:end="101:56"><name pos:start="101:54" pos:end="101:56">bus</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><call pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:31">pci_config_set_revision</name><argument_list pos:start="103:32" pos:end="103:42">(<argument pos:start="103:33" pos:end="103:38"><expr pos:start="103:33" pos:end="103:38"><name pos:start="103:33" pos:end="103:38">config</name></expr></argument>, <argument pos:start="103:41" pos:end="103:41"><expr pos:start="103:41" pos:end="103:41"><literal type="number" pos:start="103:41" pos:end="103:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:34"><expr pos:start="107:5" pos:end="107:33"><name pos:start="107:5" pos:end="107:29"><name pos:start="107:5" pos:end="107:10">config</name><index pos:start="107:11" pos:end="107:29">[<expr pos:start="107:12" pos:end="107:28"><name pos:start="107:12" pos:end="107:28">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <literal type="number" pos:start="107:33" pos:end="107:33">1</literal></expr>;</expr_stmt>





    <if_stmt pos:start="113:5" pos:end="213:5"><if pos:start="113:5" pos:end="213:5">if <condition pos:start="113:8" pos:end="113:15">(<expr pos:start="113:9" pos:end="113:14"><name pos:start="113:9" pos:end="113:14">modern</name></expr>)</condition> <block pos:start="113:17" pos:end="213:5">{<block_content pos:start="115:9" pos:end="211:51">

        <decl_stmt pos:start="115:9" pos:end="119:10"><decl pos:start="115:9" pos:end="119:9"><type pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:14">struct</name> <name pos:start="115:16" pos:end="115:29">virtio_pci_cap</name></name></type> <name pos:start="115:31" pos:end="115:33">cap</name> <init pos:start="115:35" pos:end="119:9">= <expr pos:start="115:37" pos:end="119:9"><block pos:start="115:37" pos:end="119:9">{

            <expr pos:start="117:13" pos:end="117:33"><operator pos:start="117:13" pos:end="117:13">.</operator><name pos:start="117:14" pos:end="117:20">cap_len</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <sizeof pos:start="117:24" pos:end="117:33">sizeof <name pos:start="117:31" pos:end="117:33">cap</name></sizeof></expr>,

        }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="129:10"><decl pos:start="121:9" pos:end="129:9"><type pos:start="121:9" pos:end="121:36"><name pos:start="121:9" pos:end="121:36"><name pos:start="121:9" pos:end="121:14">struct</name> <name pos:start="121:16" pos:end="121:36">virtio_pci_notify_cap</name></name></type> <name pos:start="121:38" pos:end="121:43">notify</name> <init pos:start="121:45" pos:end="129:9">= <expr pos:start="121:47" pos:end="129:9"><block pos:start="121:47" pos:end="129:9">{

            <expr pos:start="123:13" pos:end="123:40"><operator pos:start="123:13" pos:end="123:13">.</operator><name pos:start="123:14" pos:end="123:24"><name pos:start="123:14" pos:end="123:16">cap</name><operator pos:start="123:17" pos:end="123:17">.</operator><name pos:start="123:18" pos:end="123:24">cap_len</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <sizeof pos:start="123:28" pos:end="123:40">sizeof <name pos:start="123:35" pos:end="123:40">notify</name></sizeof></expr>,

            <expr pos:start="125:13" pos:end="127:61"><operator pos:start="125:13" pos:end="125:13">.</operator><name pos:start="125:14" pos:end="125:34">notify_off_multiplier</name> <operator pos:start="125:36" pos:end="125:36">=</operator>

                <call pos:start="127:17" pos:end="127:61"><name pos:start="127:17" pos:end="127:27">cpu_to_le32</name><argument_list pos:start="127:28" pos:end="127:61">(<argument pos:start="127:29" pos:end="127:60"><expr pos:start="127:29" pos:end="127:60"><call pos:start="127:29" pos:end="127:60"><name pos:start="127:29" pos:end="127:53">virtio_pci_queue_mem_mult</name><argument_list pos:start="127:54" pos:end="127:60">(<argument pos:start="127:55" pos:end="127:59"><expr pos:start="127:55" pos:end="127:59"><name pos:start="127:55" pos:end="127:59">proxy</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>,

        }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="137:10"><decl pos:start="131:9" pos:end="137:9"><type pos:start="131:9" pos:end="131:33"><name pos:start="131:9" pos:end="131:33"><name pos:start="131:9" pos:end="131:14">struct</name> <name pos:start="131:16" pos:end="131:33">virtio_pci_cfg_cap</name></name></type> <name pos:start="131:35" pos:end="131:37">cfg</name> <init pos:start="131:39" pos:end="137:9">= <expr pos:start="131:41" pos:end="137:9"><block pos:start="131:41" pos:end="137:9">{

            <expr pos:start="133:13" pos:end="133:37"><operator pos:start="133:13" pos:end="133:13">.</operator><name pos:start="133:14" pos:end="133:24"><name pos:start="133:14" pos:end="133:16">cap</name><operator pos:start="133:17" pos:end="133:17">.</operator><name pos:start="133:18" pos:end="133:24">cap_len</name></name> <operator pos:start="133:26" pos:end="133:26">=</operator> <sizeof pos:start="133:28" pos:end="133:37">sizeof <name pos:start="133:35" pos:end="133:37">cfg</name></sizeof></expr>,

            <expr pos:start="135:13" pos:end="135:50"><operator pos:start="135:13" pos:end="135:13">.</operator><name pos:start="135:14" pos:end="135:25"><name pos:start="135:14" pos:end="135:16">cap</name><operator pos:start="135:17" pos:end="135:17">.</operator><name pos:start="135:18" pos:end="135:25">cfg_type</name></name> <operator pos:start="135:27" pos:end="135:27">=</operator> <name pos:start="135:29" pos:end="135:50">VIRTIO_PCI_CAP_PCI_CFG</name></expr>,

        }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="145:10"><decl pos:start="139:9" pos:end="145:9"><type pos:start="139:9" pos:end="139:36"><name pos:start="139:9" pos:end="139:36"><name pos:start="139:9" pos:end="139:14">struct</name> <name pos:start="139:16" pos:end="139:36">virtio_pci_notify_cap</name></name></type> <name pos:start="139:38" pos:end="139:47">notify_pio</name> <init pos:start="139:49" pos:end="145:9">= <expr pos:start="139:51" pos:end="145:9"><block pos:start="139:51" pos:end="145:9">{

            <expr pos:start="141:13" pos:end="141:40"><operator pos:start="141:13" pos:end="141:13">.</operator><name pos:start="141:14" pos:end="141:24"><name pos:start="141:14" pos:end="141:16">cap</name><operator pos:start="141:17" pos:end="141:17">.</operator><name pos:start="141:18" pos:end="141:24">cap_len</name></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <sizeof pos:start="141:28" pos:end="141:40">sizeof <name pos:start="141:35" pos:end="141:40">notify</name></sizeof></expr>,

            <expr pos:start="143:13" pos:end="143:53"><operator pos:start="143:13" pos:end="143:13">.</operator><name pos:start="143:14" pos:end="143:34">notify_off_multiplier</name> <operator pos:start="143:36" pos:end="143:36">=</operator> <call pos:start="143:38" pos:end="143:53"><name pos:start="143:38" pos:end="143:48">cpu_to_le32</name><argument_list pos:start="143:49" pos:end="143:53">(<argument pos:start="143:50" pos:end="143:52"><expr pos:start="143:50" pos:end="143:52"><literal type="number" pos:start="143:50" pos:end="143:52">0x0</literal></expr></argument>)</argument_list></call></expr>,

        }</block></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="149:9" pos:end="149:44"><decl pos:start="149:9" pos:end="149:43"><type pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:33"><name pos:start="149:9" pos:end="149:14">struct</name> <name pos:start="149:16" pos:end="149:33">virtio_pci_cfg_cap</name></name> <modifier pos:start="149:35" pos:end="149:35">*</modifier></type><name pos:start="149:36" pos:end="149:43">cfg_mask</name></decl>;</decl_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:46"><expr pos:start="153:9" pos:end="153:45"><call pos:start="153:9" pos:end="153:45"><name pos:start="153:9" pos:end="153:38">virtio_pci_modern_regions_init</name><argument_list pos:start="153:39" pos:end="153:45">(<argument pos:start="153:40" pos:end="153:44"><expr pos:start="153:40" pos:end="153:44"><name pos:start="153:40" pos:end="153:44">proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:70"><expr pos:start="157:9" pos:end="157:69"><call pos:start="157:9" pos:end="157:69"><name pos:start="157:9" pos:end="157:40">virtio_pci_modern_mem_region_map</name><argument_list pos:start="157:41" pos:end="157:69">(<argument pos:start="157:42" pos:end="157:46"><expr pos:start="157:42" pos:end="157:46"><name pos:start="157:42" pos:end="157:46">proxy</name></expr></argument>, <argument pos:start="157:49" pos:end="157:62"><expr pos:start="157:49" pos:end="157:62"><operator pos:start="157:49" pos:end="157:49">&amp;</operator><name pos:start="157:50" pos:end="157:62"><name pos:start="157:50" pos:end="157:54">proxy</name><operator pos:start="157:55" pos:end="157:56">-&gt;</operator><name pos:start="157:57" pos:end="157:62">common</name></name></expr></argument>, <argument pos:start="157:65" pos:end="157:68"><expr pos:start="157:65" pos:end="157:68"><operator pos:start="157:65" pos:end="157:65">&amp;</operator><name pos:start="157:66" pos:end="157:68">cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:67"><expr pos:start="159:9" pos:end="159:66"><call pos:start="159:9" pos:end="159:66"><name pos:start="159:9" pos:end="159:40">virtio_pci_modern_mem_region_map</name><argument_list pos:start="159:41" pos:end="159:66">(<argument pos:start="159:42" pos:end="159:46"><expr pos:start="159:42" pos:end="159:46"><name pos:start="159:42" pos:end="159:46">proxy</name></expr></argument>, <argument pos:start="159:49" pos:end="159:59"><expr pos:start="159:49" pos:end="159:59"><operator pos:start="159:49" pos:end="159:49">&amp;</operator><name pos:start="159:50" pos:end="159:59"><name pos:start="159:50" pos:end="159:54">proxy</name><operator pos:start="159:55" pos:end="159:56">-&gt;</operator><name pos:start="159:57" pos:end="159:59">isr</name></name></expr></argument>, <argument pos:start="159:62" pos:end="159:65"><expr pos:start="159:62" pos:end="159:65"><operator pos:start="159:62" pos:end="159:62">&amp;</operator><name pos:start="159:63" pos:end="159:65">cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:70"><expr pos:start="161:9" pos:end="161:69"><call pos:start="161:9" pos:end="161:69"><name pos:start="161:9" pos:end="161:40">virtio_pci_modern_mem_region_map</name><argument_list pos:start="161:41" pos:end="161:69">(<argument pos:start="161:42" pos:end="161:46"><expr pos:start="161:42" pos:end="161:46"><name pos:start="161:42" pos:end="161:46">proxy</name></expr></argument>, <argument pos:start="161:49" pos:end="161:62"><expr pos:start="161:49" pos:end="161:62"><operator pos:start="161:49" pos:end="161:49">&amp;</operator><name pos:start="161:50" pos:end="161:62"><name pos:start="161:50" pos:end="161:54">proxy</name><operator pos:start="161:55" pos:end="161:56">-&gt;</operator><name pos:start="161:57" pos:end="161:62">device</name></name></expr></argument>, <argument pos:start="161:65" pos:end="161:68"><expr pos:start="161:65" pos:end="161:68"><operator pos:start="161:65" pos:end="161:65">&amp;</operator><name pos:start="161:66" pos:end="161:68">cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:77"><expr pos:start="163:9" pos:end="163:76"><call pos:start="163:9" pos:end="163:76"><name pos:start="163:9" pos:end="163:40">virtio_pci_modern_mem_region_map</name><argument_list pos:start="163:41" pos:end="163:76">(<argument pos:start="163:42" pos:end="163:46"><expr pos:start="163:42" pos:end="163:46"><name pos:start="163:42" pos:end="163:46">proxy</name></expr></argument>, <argument pos:start="163:49" pos:end="163:62"><expr pos:start="163:49" pos:end="163:62"><operator pos:start="163:49" pos:end="163:49">&amp;</operator><name pos:start="163:50" pos:end="163:62"><name pos:start="163:50" pos:end="163:54">proxy</name><operator pos:start="163:55" pos:end="163:56">-&gt;</operator><name pos:start="163:57" pos:end="163:62">notify</name></name></expr></argument>, <argument pos:start="163:65" pos:end="163:75"><expr pos:start="163:65" pos:end="163:75"><operator pos:start="163:65" pos:end="163:65">&amp;</operator><name pos:start="163:66" pos:end="163:75"><name pos:start="163:66" pos:end="163:71">notify</name><operator pos:start="163:72" pos:end="163:72">.</operator><name pos:start="163:73" pos:end="163:75">cap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="167:9" pos:end="185:9"><if pos:start="167:9" pos:end="185:9">if <condition pos:start="167:12" pos:end="167:23">(<expr pos:start="167:13" pos:end="167:22"><name pos:start="167:13" pos:end="167:22">modern_pio</name></expr>)</condition> <block pos:start="167:25" pos:end="185:9">{<block_content pos:start="169:13" pos:end="183:61">

            <expr_stmt pos:start="169:13" pos:end="171:53"><expr pos:start="169:13" pos:end="171:52"><call pos:start="169:13" pos:end="171:52"><name pos:start="169:13" pos:end="169:30">memory_region_init</name><argument_list pos:start="169:31" pos:end="171:52">(<argument pos:start="169:32" pos:end="169:45"><expr pos:start="169:32" pos:end="169:45"><operator pos:start="169:32" pos:end="169:32">&amp;</operator><name pos:start="169:33" pos:end="169:45"><name pos:start="169:33" pos:end="169:37">proxy</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:45">io_bar</name></name></expr></argument>, <argument pos:start="169:48" pos:end="169:60"><expr pos:start="169:48" pos:end="169:60"><call pos:start="169:48" pos:end="169:60"><name pos:start="169:48" pos:end="169:53">OBJECT</name><argument_list pos:start="169:54" pos:end="169:60">(<argument pos:start="169:55" pos:end="169:59"><expr pos:start="169:55" pos:end="169:59"><name pos:start="169:55" pos:end="169:59">proxy</name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="171:32" pos:end="171:46"><expr pos:start="171:32" pos:end="171:46"><literal type="string" pos:start="171:32" pos:end="171:46">"virtio-pci-io"</literal></expr></argument>, <argument pos:start="171:49" pos:end="171:51"><expr pos:start="171:49" pos:end="171:51"><literal type="number" pos:start="171:49" pos:end="171:51">0x4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="175:13" pos:end="177:72"><expr pos:start="175:13" pos:end="177:71"><call pos:start="175:13" pos:end="177:71"><name pos:start="175:13" pos:end="175:28">pci_register_bar</name><argument_list pos:start="175:29" pos:end="177:71">(<argument pos:start="175:30" pos:end="175:44"><expr pos:start="175:30" pos:end="175:44"><operator pos:start="175:30" pos:end="175:30">&amp;</operator><name pos:start="175:31" pos:end="175:44"><name pos:start="175:31" pos:end="175:35">proxy</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:44">pci_dev</name></name></expr></argument>, <argument pos:start="175:47" pos:end="175:70"><expr pos:start="175:47" pos:end="175:70"><name pos:start="175:47" pos:end="175:70"><name pos:start="175:47" pos:end="175:51">proxy</name><operator pos:start="175:52" pos:end="175:53">-&gt;</operator><name pos:start="175:54" pos:end="175:70">modern_io_bar_idx</name></name></expr></argument>,

                             <argument pos:start="177:30" pos:end="177:54"><expr pos:start="177:30" pos:end="177:54"><name pos:start="177:30" pos:end="177:54">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="177:57" pos:end="177:70"><expr pos:start="177:57" pos:end="177:70"><operator pos:start="177:57" pos:end="177:57">&amp;</operator><name pos:start="177:58" pos:end="177:70"><name pos:start="177:58" pos:end="177:62">proxy</name><operator pos:start="177:63" pos:end="177:64">-&gt;</operator><name pos:start="177:65" pos:end="177:70">io_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="181:13" pos:end="183:61"><expr pos:start="181:13" pos:end="183:60"><call pos:start="181:13" pos:end="183:60"><name pos:start="181:13" pos:end="181:43">virtio_pci_modern_io_region_map</name><argument_list pos:start="181:44" pos:end="183:60">(<argument pos:start="181:45" pos:end="181:49"><expr pos:start="181:45" pos:end="181:49"><name pos:start="181:45" pos:end="181:49">proxy</name></expr></argument>, <argument pos:start="181:52" pos:end="181:69"><expr pos:start="181:52" pos:end="181:69"><operator pos:start="181:52" pos:end="181:52">&amp;</operator><name pos:start="181:53" pos:end="181:69"><name pos:start="181:53" pos:end="181:57">proxy</name><operator pos:start="181:58" pos:end="181:59">-&gt;</operator><name pos:start="181:60" pos:end="181:69">notify_pio</name></name></expr></argument>,

                                            <argument pos:start="183:45" pos:end="183:59"><expr pos:start="183:45" pos:end="183:59"><operator pos:start="183:45" pos:end="183:45">&amp;</operator><name pos:start="183:46" pos:end="183:59"><name pos:start="183:46" pos:end="183:55">notify_pio</name><operator pos:start="183:56" pos:end="183:56">.</operator><name pos:start="183:57" pos:end="183:59">cap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="189:9" pos:end="197:45"><expr pos:start="189:9" pos:end="197:44"><call pos:start="189:9" pos:end="197:44"><name pos:start="189:9" pos:end="189:24">pci_register_bar</name><argument_list pos:start="189:25" pos:end="197:44">(<argument pos:start="189:26" pos:end="189:40"><expr pos:start="189:26" pos:end="189:40"><operator pos:start="189:26" pos:end="189:26">&amp;</operator><name pos:start="189:27" pos:end="189:40"><name pos:start="189:27" pos:end="189:31">proxy</name><operator pos:start="189:32" pos:end="189:33">-&gt;</operator><name pos:start="189:34" pos:end="189:40">pci_dev</name></name></expr></argument>, <argument pos:start="189:43" pos:end="189:67"><expr pos:start="189:43" pos:end="189:67"><name pos:start="189:43" pos:end="189:67"><name pos:start="189:43" pos:end="189:47">proxy</name><operator pos:start="189:48" pos:end="189:49">-&gt;</operator><name pos:start="189:50" pos:end="189:67">modern_mem_bar_idx</name></name></expr></argument>,

                         <argument pos:start="191:26" pos:end="195:53"><expr pos:start="191:26" pos:end="195:53"><name pos:start="191:26" pos:end="191:54">PCI_BASE_ADDRESS_SPACE_MEMORY</name> <operator pos:start="191:56" pos:end="191:56">|</operator>

                         <name pos:start="193:26" pos:end="193:54">PCI_BASE_ADDRESS_MEM_PREFETCH</name> <operator pos:start="193:56" pos:end="193:56">|</operator>

                         <name pos:start="195:26" pos:end="195:53">PCI_BASE_ADDRESS_MEM_TYPE_64</name></expr></argument>,

                         <argument pos:start="197:26" pos:end="197:43"><expr pos:start="197:26" pos:end="197:43"><operator pos:start="197:26" pos:end="197:26">&amp;</operator><name pos:start="197:27" pos:end="197:43"><name pos:start="197:27" pos:end="197:31">proxy</name><operator pos:start="197:32" pos:end="197:33">-&gt;</operator><name pos:start="197:34" pos:end="197:43">modern_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="201:9" pos:end="201:68"><expr pos:start="201:9" pos:end="201:67"><name pos:start="201:9" pos:end="201:25"><name pos:start="201:9" pos:end="201:13">proxy</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:25">config_cap</name></name> <operator pos:start="201:27" pos:end="201:27">=</operator> <call pos:start="201:29" pos:end="201:67"><name pos:start="201:29" pos:end="201:50">virtio_pci_add_mem_cap</name><argument_list pos:start="201:51" pos:end="201:67">(<argument pos:start="201:52" pos:end="201:56"><expr pos:start="201:52" pos:end="201:56"><name pos:start="201:52" pos:end="201:56">proxy</name></expr></argument>, <argument pos:start="201:59" pos:end="201:66"><expr pos:start="201:59" pos:end="201:66"><operator pos:start="201:59" pos:end="201:59">&amp;</operator><name pos:start="201:60" pos:end="201:66"><name pos:start="201:60" pos:end="201:62">cfg</name><operator pos:start="201:63" pos:end="201:63">.</operator><name pos:start="201:64" pos:end="201:66">cap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:70"><expr pos:start="203:9" pos:end="203:69"><name pos:start="203:9" pos:end="203:16">cfg_mask</name> <operator pos:start="203:18" pos:end="203:18">=</operator> <operator pos:start="203:20" pos:end="203:20">(</operator><name pos:start="203:21" pos:end="203:24">void</name> <operator pos:start="203:26" pos:end="203:26">*</operator><operator pos:start="203:27" pos:end="203:27">)</operator><operator pos:start="203:28" pos:end="203:28">(</operator><name pos:start="203:29" pos:end="203:48"><name pos:start="203:29" pos:end="203:33">proxy</name><operator pos:start="203:34" pos:end="203:35">-&gt;</operator><name pos:start="203:36" pos:end="203:42">pci_dev</name><operator pos:start="203:43" pos:end="203:43">.</operator><name pos:start="203:44" pos:end="203:48">wmask</name></name> <operator pos:start="203:50" pos:end="203:50">+</operator> <name pos:start="203:52" pos:end="203:68"><name pos:start="203:52" pos:end="203:56">proxy</name><operator pos:start="203:57" pos:end="203:58">-&gt;</operator><name pos:start="203:59" pos:end="203:68">config_cap</name></name><operator pos:start="203:69" pos:end="203:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:47"><expr pos:start="205:9" pos:end="205:46"><call pos:start="205:9" pos:end="205:46"><name pos:start="205:9" pos:end="205:20">pci_set_byte</name><argument_list pos:start="205:21" pos:end="205:46">(<argument pos:start="205:22" pos:end="205:39"><expr pos:start="205:22" pos:end="205:39"><operator pos:start="205:22" pos:end="205:22">&amp;</operator><name pos:start="205:23" pos:end="205:39"><name pos:start="205:23" pos:end="205:30">cfg_mask</name><operator pos:start="205:31" pos:end="205:32">-&gt;</operator><name pos:start="205:33" pos:end="205:35">cap</name><operator pos:start="205:36" pos:end="205:36">.</operator><name pos:start="205:37" pos:end="205:39">bar</name></name></expr></argument>, <argument pos:start="205:42" pos:end="205:45"><expr pos:start="205:42" pos:end="205:45"><operator pos:start="205:42" pos:end="205:42">~</operator><literal type="number" pos:start="205:43" pos:end="205:45">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:61"><expr pos:start="207:9" pos:end="207:60"><call pos:start="207:9" pos:end="207:60"><name pos:start="207:9" pos:end="207:20">pci_set_long</name><argument_list pos:start="207:21" pos:end="207:60">(<argument pos:start="207:22" pos:end="207:53"><expr pos:start="207:22" pos:end="207:53"><operator pos:start="207:22" pos:end="207:22">(</operator><name pos:start="207:23" pos:end="207:29">uint8_t</name> <operator pos:start="207:31" pos:end="207:31">*</operator><operator pos:start="207:32" pos:end="207:32">)</operator><operator pos:start="207:33" pos:end="207:33">&amp;</operator><name pos:start="207:34" pos:end="207:53"><name pos:start="207:34" pos:end="207:41">cfg_mask</name><operator pos:start="207:42" pos:end="207:43">-&gt;</operator><name pos:start="207:44" pos:end="207:46">cap</name><operator pos:start="207:47" pos:end="207:47">.</operator><name pos:start="207:48" pos:end="207:53">offset</name></name></expr></argument>, <argument pos:start="207:56" pos:end="207:59"><expr pos:start="207:56" pos:end="207:59"><operator pos:start="207:56" pos:end="207:56">~</operator><literal type="number" pos:start="207:57" pos:end="207:59">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:61"><expr pos:start="209:9" pos:end="209:60"><call pos:start="209:9" pos:end="209:60"><name pos:start="209:9" pos:end="209:20">pci_set_long</name><argument_list pos:start="209:21" pos:end="209:60">(<argument pos:start="209:22" pos:end="209:53"><expr pos:start="209:22" pos:end="209:53"><operator pos:start="209:22" pos:end="209:22">(</operator><name pos:start="209:23" pos:end="209:29">uint8_t</name> <operator pos:start="209:31" pos:end="209:31">*</operator><operator pos:start="209:32" pos:end="209:32">)</operator><operator pos:start="209:33" pos:end="209:33">&amp;</operator><name pos:start="209:34" pos:end="209:53"><name pos:start="209:34" pos:end="209:41">cfg_mask</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:46">cap</name><operator pos:start="209:47" pos:end="209:47">.</operator><name pos:start="209:48" pos:end="209:53">length</name></name></expr></argument>, <argument pos:start="209:56" pos:end="209:59"><expr pos:start="209:56" pos:end="209:59"><operator pos:start="209:56" pos:end="209:56">~</operator><literal type="number" pos:start="209:57" pos:end="209:59">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:51"><expr pos:start="211:9" pos:end="211:50"><call pos:start="211:9" pos:end="211:50"><name pos:start="211:9" pos:end="211:20">pci_set_long</name><argument_list pos:start="211:21" pos:end="211:50">(<argument pos:start="211:22" pos:end="211:43"><expr pos:start="211:22" pos:end="211:43"><name pos:start="211:22" pos:end="211:43"><name pos:start="211:22" pos:end="211:29">cfg_mask</name><operator pos:start="211:30" pos:end="211:31">-&gt;</operator><name pos:start="211:32" pos:end="211:43">pci_cfg_data</name></name></expr></argument>, <argument pos:start="211:46" pos:end="211:49"><expr pos:start="211:46" pos:end="211:49"><operator pos:start="211:46" pos:end="211:46">~</operator><literal type="number" pos:start="211:47" pos:end="211:49">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="239:5"><if pos:start="217:5" pos:end="239:5">if <condition pos:start="217:8" pos:end="217:24">(<expr pos:start="217:9" pos:end="217:23"><name pos:start="217:9" pos:end="217:23"><name pos:start="217:9" pos:end="217:13">proxy</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:23">nvectors</name></name></expr>)</condition> <block pos:start="217:26" pos:end="239:5">{<block_content pos:start="219:9" pos:end="237:9">

        <decl_stmt pos:start="219:9" pos:end="221:63"><decl pos:start="219:9" pos:end="221:62"><type pos:start="219:9" pos:end="219:11"><name pos:start="219:9" pos:end="219:11">int</name></type> <name pos:start="219:13" pos:end="219:15">err</name> <init pos:start="219:17" pos:end="221:62">= <expr pos:start="219:19" pos:end="221:62"><call pos:start="219:19" pos:end="221:62"><name pos:start="219:19" pos:end="219:41">msix_init_exclusive_bar</name><argument_list pos:start="219:42" pos:end="221:62">(<argument pos:start="219:43" pos:end="219:57"><expr pos:start="219:43" pos:end="219:57"><operator pos:start="219:43" pos:end="219:43">&amp;</operator><name pos:start="219:44" pos:end="219:57"><name pos:start="219:44" pos:end="219:48">proxy</name><operator pos:start="219:49" pos:end="219:50">-&gt;</operator><name pos:start="219:51" pos:end="219:57">pci_dev</name></name></expr></argument>, <argument pos:start="219:60" pos:end="219:74"><expr pos:start="219:60" pos:end="219:74"><name pos:start="219:60" pos:end="219:74"><name pos:start="219:60" pos:end="219:64">proxy</name><operator pos:start="219:65" pos:end="219:66">-&gt;</operator><name pos:start="219:67" pos:end="219:74">nvectors</name></name></expr></argument>,

                                          <argument pos:start="221:43" pos:end="221:61"><expr pos:start="221:43" pos:end="221:61"><name pos:start="221:43" pos:end="221:61"><name pos:start="221:43" pos:end="221:47">proxy</name><operator pos:start="221:48" pos:end="221:49">-&gt;</operator><name pos:start="221:50" pos:end="221:61">msix_bar_idx</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="223:9" pos:end="237:9"><if pos:start="223:9" pos:end="237:9">if <condition pos:start="223:12" pos:end="223:16">(<expr pos:start="223:13" pos:end="223:15"><name pos:start="223:13" pos:end="223:15">err</name></expr>)</condition> <block pos:start="223:18" pos:end="237:9">{<block_content pos:start="227:13" pos:end="235:32">

            <comment type="block" pos:start="225:13" pos:end="225:79">/* Notice when a system that supports MSIx can't initialize it.  */</comment>

            <if_stmt pos:start="227:13" pos:end="233:13"><if pos:start="227:13" pos:end="233:13">if <condition pos:start="227:16" pos:end="227:32">(<expr pos:start="227:17" pos:end="227:31"><name pos:start="227:17" pos:end="227:19">err</name> <operator pos:start="227:21" pos:end="227:22">!=</operator> <operator pos:start="227:24" pos:end="227:24">-</operator><name pos:start="227:25" pos:end="227:31">ENOTSUP</name></expr>)</condition> <block pos:start="227:34" pos:end="233:13">{<block_content pos:start="229:17" pos:end="231:46">

                <expr_stmt pos:start="229:17" pos:end="231:46"><expr pos:start="229:17" pos:end="231:45"><call pos:start="229:17" pos:end="231:45"><name pos:start="229:17" pos:end="229:28">error_report</name><argument_list pos:start="229:29" pos:end="231:45">(<argument pos:start="229:30" pos:end="229:70"><expr pos:start="229:30" pos:end="229:70"><literal type="string" pos:start="229:30" pos:end="229:63">"unable to init msix vectors to %"</literal> <name pos:start="229:65" pos:end="229:70">PRIu32</name></expr></argument>,

                             <argument pos:start="231:30" pos:end="231:44"><expr pos:start="231:30" pos:end="231:44"><name pos:start="231:30" pos:end="231:44"><name pos:start="231:30" pos:end="231:34">proxy</name><operator pos:start="231:35" pos:end="231:36">-&gt;</operator><name pos:start="231:37" pos:end="231:44">nvectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:32"><expr pos:start="235:13" pos:end="235:31"><name pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:17">proxy</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:27">nvectors</name></name> <operator pos:start="235:29" pos:end="235:29">=</operator> <literal type="number" pos:start="235:31" pos:end="235:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="243:5" pos:end="243:54"><expr pos:start="243:5" pos:end="243:53"><name pos:start="243:5" pos:end="243:31"><name pos:start="243:5" pos:end="243:9">proxy</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:18">pci_dev</name><operator pos:start="243:19" pos:end="243:19">.</operator><name pos:start="243:20" pos:end="243:31">config_write</name></name> <operator pos:start="243:33" pos:end="243:33">=</operator> <name pos:start="243:35" pos:end="243:53">virtio_write_config</name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:52"><expr pos:start="245:5" pos:end="245:51"><name pos:start="245:5" pos:end="245:30"><name pos:start="245:5" pos:end="245:9">proxy</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:18">pci_dev</name><operator pos:start="245:19" pos:end="245:19">.</operator><name pos:start="245:20" pos:end="245:30">config_read</name></name> <operator pos:start="245:32" pos:end="245:32">=</operator> <name pos:start="245:34" pos:end="245:51">virtio_read_config</name></expr>;</expr_stmt>



    <if_stmt pos:start="249:5" pos:end="271:5"><if pos:start="249:5" pos:end="271:5">if <condition pos:start="249:8" pos:end="249:15">(<expr pos:start="249:9" pos:end="249:14"><name pos:start="249:9" pos:end="249:14">legacy</name></expr>)</condition> <block pos:start="249:17" pos:end="271:5">{<block_content pos:start="251:9" pos:end="269:65">

        <expr_stmt pos:start="251:9" pos:end="253:50"><expr pos:start="251:9" pos:end="253:49"><name pos:start="251:9" pos:end="251:12">size</name> <operator pos:start="251:14" pos:end="251:14">=</operator> <call pos:start="251:16" pos:end="251:54"><name pos:start="251:16" pos:end="251:37">VIRTIO_PCI_REGION_SIZE</name><argument_list pos:start="251:38" pos:end="251:54">(<argument pos:start="251:39" pos:end="251:53"><expr pos:start="251:39" pos:end="251:53"><operator pos:start="251:39" pos:end="251:39">&amp;</operator><name pos:start="251:40" pos:end="251:53"><name pos:start="251:40" pos:end="251:44">proxy</name><operator pos:start="251:45" pos:end="251:46">-&gt;</operator><name pos:start="251:47" pos:end="251:53">pci_dev</name></name></expr></argument>)</argument_list></call>

            <operator pos:start="253:13" pos:end="253:13">+</operator> <call pos:start="253:15" pos:end="253:49"><name pos:start="253:15" pos:end="253:44">virtio_bus_get_vdev_config_len</name><argument_list pos:start="253:45" pos:end="253:49">(<argument pos:start="253:46" pos:end="253:48"><expr pos:start="253:46" pos:end="253:48"><name pos:start="253:46" pos:end="253:48">bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:30"><expr pos:start="255:9" pos:end="255:29"><name pos:start="255:9" pos:end="255:12">size</name> <operator pos:start="255:14" pos:end="255:14">=</operator> <call pos:start="255:16" pos:end="255:29"><name pos:start="255:16" pos:end="255:23">pow2ceil</name><argument_list pos:start="255:24" pos:end="255:29">(<argument pos:start="255:25" pos:end="255:28"><expr pos:start="255:25" pos:end="255:28"><name pos:start="255:25" pos:end="255:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="259:9" pos:end="263:57"><expr pos:start="259:9" pos:end="263:56"><call pos:start="259:9" pos:end="263:56"><name pos:start="259:9" pos:end="259:29">memory_region_init_io</name><argument_list pos:start="259:30" pos:end="263:56">(<argument pos:start="259:31" pos:end="259:41"><expr pos:start="259:31" pos:end="259:41"><operator pos:start="259:31" pos:end="259:31">&amp;</operator><name pos:start="259:32" pos:end="259:41"><name pos:start="259:32" pos:end="259:36">proxy</name><operator pos:start="259:37" pos:end="259:38">-&gt;</operator><name pos:start="259:39" pos:end="259:41">bar</name></name></expr></argument>, <argument pos:start="259:44" pos:end="259:56"><expr pos:start="259:44" pos:end="259:56"><call pos:start="259:44" pos:end="259:56"><name pos:start="259:44" pos:end="259:49">OBJECT</name><argument_list pos:start="259:50" pos:end="259:56">(<argument pos:start="259:51" pos:end="259:55"><expr pos:start="259:51" pos:end="259:55"><name pos:start="259:51" pos:end="259:55">proxy</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="261:31" pos:end="261:52"><expr pos:start="261:31" pos:end="261:52"><operator pos:start="261:31" pos:end="261:31">&amp;</operator><name pos:start="261:32" pos:end="261:52">virtio_pci_config_ops</name></expr></argument>,

                              <argument pos:start="263:31" pos:end="263:35"><expr pos:start="263:31" pos:end="263:35"><name pos:start="263:31" pos:end="263:35">proxy</name></expr></argument>, <argument pos:start="263:38" pos:end="263:49"><expr pos:start="263:38" pos:end="263:49"><literal type="string" pos:start="263:38" pos:end="263:49">"virtio-pci"</literal></expr></argument>, <argument pos:start="263:52" pos:end="263:55"><expr pos:start="263:52" pos:end="263:55"><name pos:start="263:52" pos:end="263:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="267:9" pos:end="269:65"><expr pos:start="267:9" pos:end="269:64"><call pos:start="267:9" pos:end="269:64"><name pos:start="267:9" pos:end="267:24">pci_register_bar</name><argument_list pos:start="267:25" pos:end="269:64">(<argument pos:start="267:26" pos:end="267:40"><expr pos:start="267:26" pos:end="267:40"><operator pos:start="267:26" pos:end="267:26">&amp;</operator><name pos:start="267:27" pos:end="267:40"><name pos:start="267:27" pos:end="267:31">proxy</name><operator pos:start="267:32" pos:end="267:33">-&gt;</operator><name pos:start="267:34" pos:end="267:40">pci_dev</name></name></expr></argument>, <argument pos:start="267:43" pos:end="267:66"><expr pos:start="267:43" pos:end="267:66"><name pos:start="267:43" pos:end="267:66"><name pos:start="267:43" pos:end="267:47">proxy</name><operator pos:start="267:48" pos:end="267:49">-&gt;</operator><name pos:start="267:50" pos:end="267:66">legacy_io_bar_idx</name></name></expr></argument>,

                         <argument pos:start="269:26" pos:end="269:50"><expr pos:start="269:26" pos:end="269:50"><name pos:start="269:26" pos:end="269:50">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="269:53" pos:end="269:63"><expr pos:start="269:53" pos:end="269:63"><operator pos:start="269:53" pos:end="269:53">&amp;</operator><name pos:start="269:54" pos:end="269:63"><name pos:start="269:54" pos:end="269:58">proxy</name><operator pos:start="269:59" pos:end="269:60">-&gt;</operator><name pos:start="269:61" pos:end="269:63">bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
