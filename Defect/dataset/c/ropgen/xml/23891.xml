<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23891.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">dma_bdrv_cb</name><parameter_list pos:start="1:24" pos:end="1:46">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:45"><decl pos:start="1:39" pos:end="1:45"><type pos:start="1:39" pos:end="1:45"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:45">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">DMAAIOCB</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">dbs</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:29">DMAAIOCB</name> <operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:38">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:31">cur_addr</name></decl>, <decl pos:start="7:34" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:22"/><name pos:start="7:34" pos:end="7:40">cur_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">mem</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">dbs</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:12">acb</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:7">dbs</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:19">sector_num</name></name> <operator pos:start="15:21" pos:end="15:22">+=</operator> <name pos:start="15:24" pos:end="15:36"><name pos:start="15:24" pos:end="15:26">dbs</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:31">iov</name><operator pos:start="15:32" pos:end="15:32">.</operator><name pos:start="15:33" pos:end="15:36">size</name></name> <operator pos:start="15:38" pos:end="15:38">/</operator> <literal type="number" pos:start="15:40" pos:end="15:42">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><call pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:18">dma_bdrv_unmap</name><argument_list pos:start="17:19" pos:end="17:23">(<argument pos:start="17:20" pos:end="17:22"><expr pos:start="17:20" pos:end="17:22"><name pos:start="17:20" pos:end="17:22">dbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:20">qemu_iovec_reset</name><argument_list pos:start="19:21" pos:end="19:31">(<argument pos:start="19:22" pos:end="19:30"><expr pos:start="19:22" pos:end="19:30"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:30"><name pos:start="19:23" pos:end="19:25">dbs</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:30">iov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:53">(<expr pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:11">dbs</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:25">sg_cur_index</name></name> <operator pos:start="23:27" pos:end="23:28">==</operator> <name pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:32">dbs</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:36">sg</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:41">nsg</name></name> <operator pos:start="23:43" pos:end="23:44">||</operator> <name pos:start="23:46" pos:end="23:48">ret</name> <operator pos:start="23:50" pos:end="23:50">&lt;</operator> <literal type="number" pos:start="23:52" pos:end="23:52">0</literal></expr>)</condition> <block pos:start="23:55" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:15">

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">dbs</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:19">common</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:22">cb</name></name><argument_list pos:start="25:23" pos:end="25:47">(<argument pos:start="25:24" pos:end="25:41"><expr pos:start="25:24" pos:end="25:41"><name pos:start="25:24" pos:end="25:41"><name pos:start="25:24" pos:end="25:26">dbs</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:34">common</name><operator pos:start="25:35" pos:end="25:35">.</operator><name pos:start="25:36" pos:end="25:41">opaque</name></name></expr></argument>, <argument pos:start="25:44" pos:end="25:46"><expr pos:start="25:44" pos:end="25:46"><name pos:start="25:44" pos:end="25:46">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:26">qemu_iovec_destroy</name><argument_list pos:start="27:27" pos:end="27:37">(<argument pos:start="27:28" pos:end="27:36"><expr pos:start="27:28" pos:end="27:36"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:31">dbs</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:36">iov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><call pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:24">qemu_aio_release</name><argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">dbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="37:5" pos:end="61:5">while <condition pos:start="37:11" pos:end="37:44">(<expr pos:start="37:12" pos:end="37:43"><name pos:start="37:12" pos:end="37:28"><name pos:start="37:12" pos:end="37:14">dbs</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:28">sg_cur_index</name></name> <operator pos:start="37:30" pos:end="37:30">&lt;</operator> <name pos:start="37:32" pos:end="37:43"><name pos:start="37:32" pos:end="37:34">dbs</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:38">sg</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:43">nsg</name></name></expr>)</condition> <block pos:start="37:46" pos:end="61:5">{<block_content pos:start="39:9" pos:end="59:9">

        <expr_stmt pos:start="39:9" pos:end="39:74"><expr pos:start="39:9" pos:end="39:73"><name pos:start="39:9" pos:end="39:16">cur_addr</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:49"><name pos:start="39:20" pos:end="39:22">dbs</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:26">sg</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:30">sg</name><index pos:start="39:31" pos:end="39:49">[<expr pos:start="39:32" pos:end="39:48"><name pos:start="39:32" pos:end="39:48"><name pos:start="39:32" pos:end="39:34">dbs</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:48">sg_cur_index</name></name></expr>]</index></name><operator pos:start="39:50" pos:end="39:50">.</operator><name pos:start="39:51" pos:end="39:54">base</name> <operator pos:start="39:56" pos:end="39:56">+</operator> <name pos:start="39:58" pos:end="39:73"><name pos:start="39:58" pos:end="39:60">dbs</name><operator pos:start="39:61" pos:end="39:62">-&gt;</operator><name pos:start="39:63" pos:end="39:73">sg_cur_byte</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:72"><expr pos:start="41:9" pos:end="41:71"><name pos:start="41:9" pos:end="41:15">cur_len</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:48"><name pos:start="41:19" pos:end="41:21">dbs</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:25">sg</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:29">sg</name><index pos:start="41:30" pos:end="41:48">[<expr pos:start="41:31" pos:end="41:47"><name pos:start="41:31" pos:end="41:47"><name pos:start="41:31" pos:end="41:33">dbs</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:47">sg_cur_index</name></name></expr>]</index></name><operator pos:start="41:49" pos:end="41:49">.</operator><name pos:start="41:50" pos:end="41:52">len</name> <operator pos:start="41:54" pos:end="41:54">-</operator> <name pos:start="41:56" pos:end="41:71"><name pos:start="41:56" pos:end="41:58">dbs</name><operator pos:start="41:59" pos:end="41:60">-&gt;</operator><name pos:start="41:61" pos:end="41:71">sg_cur_byte</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:72"><expr pos:start="43:9" pos:end="43:71"><name pos:start="43:9" pos:end="43:11">mem</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:71"><name pos:start="43:15" pos:end="43:37">cpu_physical_memory_map</name><argument_list pos:start="43:38" pos:end="43:71">(<argument pos:start="43:39" pos:end="43:46"><expr pos:start="43:39" pos:end="43:46"><name pos:start="43:39" pos:end="43:46">cur_addr</name></expr></argument>, <argument pos:start="43:49" pos:end="43:56"><expr pos:start="43:49" pos:end="43:56"><operator pos:start="43:49" pos:end="43:49">&amp;</operator><name pos:start="43:50" pos:end="43:56">cur_len</name></expr></argument>, <argument pos:start="43:59" pos:end="43:70"><expr pos:start="43:59" pos:end="43:70"><operator pos:start="43:59" pos:end="43:59">!</operator><name pos:start="43:60" pos:end="43:70"><name pos:start="43:60" pos:end="43:62">dbs</name><operator pos:start="43:63" pos:end="43:64">-&gt;</operator><name pos:start="43:65" pos:end="43:70">to_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:18"><if pos:start="45:9" pos:end="47:18">if <condition pos:start="45:12" pos:end="45:17">(<expr pos:start="45:13" pos:end="45:16"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:16">mem</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:18"><block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:48"><expr pos:start="49:9" pos:end="49:47"><call pos:start="49:9" pos:end="49:47"><name pos:start="49:9" pos:end="49:22">qemu_iovec_add</name><argument_list pos:start="49:23" pos:end="49:47">(<argument pos:start="49:24" pos:end="49:32"><expr pos:start="49:24" pos:end="49:32"><operator pos:start="49:24" pos:end="49:24">&amp;</operator><name pos:start="49:25" pos:end="49:32"><name pos:start="49:25" pos:end="49:27">dbs</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:32">iov</name></name></expr></argument>, <argument pos:start="49:35" pos:end="49:37"><expr pos:start="49:35" pos:end="49:37"><name pos:start="49:35" pos:end="49:37">mem</name></expr></argument>, <argument pos:start="49:40" pos:end="49:46"><expr pos:start="49:40" pos:end="49:46"><name pos:start="49:40" pos:end="49:46">cur_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:11">dbs</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:24">sg_cur_byte</name></name> <operator pos:start="51:26" pos:end="51:27">+=</operator> <name pos:start="51:29" pos:end="51:35">cur_len</name></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:67">(<expr pos:start="53:13" pos:end="53:66"><name pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:15">dbs</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:28">sg_cur_byte</name></name> <operator pos:start="53:30" pos:end="53:31">==</operator> <name pos:start="53:33" pos:end="53:62"><name pos:start="53:33" pos:end="53:35">dbs</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:39">sg</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:43">sg</name><index pos:start="53:44" pos:end="53:62">[<expr pos:start="53:45" pos:end="53:61"><name pos:start="53:45" pos:end="53:61"><name pos:start="53:45" pos:end="53:47">dbs</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:61">sg_cur_index</name></name></expr>]</index></name><operator pos:start="53:63" pos:end="53:63">.</operator><name pos:start="53:64" pos:end="53:66">len</name></expr>)</condition> <block pos:start="53:69" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:32">

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:15">dbs</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:28">sg_cur_byte</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <literal type="number" pos:start="55:32" pos:end="55:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:32"><expr pos:start="57:13" pos:end="57:31"><operator pos:start="57:13" pos:end="57:14">++</operator><name pos:start="57:15" pos:end="57:31"><name pos:start="57:15" pos:end="57:17">dbs</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:31">sg_cur_index</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:27">(<expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:11">dbs</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">iov</name><operator pos:start="65:17" pos:end="65:17">.</operator><name pos:start="65:18" pos:end="65:21">size</name></name> <operator pos:start="65:23" pos:end="65:24">==</operator> <literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>)</condition> <block pos:start="65:29" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:15">

        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:31">cpu_register_map_client</name><argument_list pos:start="67:32" pos:end="67:64">(<argument pos:start="67:33" pos:end="67:35"><expr pos:start="67:33" pos:end="67:35"><name pos:start="67:33" pos:end="67:35">dbs</name></expr></argument>, <argument pos:start="67:38" pos:end="67:63"><expr pos:start="67:38" pos:end="67:63"><name pos:start="67:38" pos:end="67:63">continue_after_map_failure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="77:67"><expr pos:start="75:5" pos:end="77:66"><name pos:start="75:5" pos:end="75:12"><name pos:start="75:5" pos:end="75:7">dbs</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:12">acb</name></name> <operator pos:start="75:14" pos:end="75:14">=</operator> <call pos:start="75:16" pos:end="77:66"><name pos:start="75:16" pos:end="75:27"><name pos:start="75:16" pos:end="75:18">dbs</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:27">io_func</name></name><argument_list pos:start="75:28" pos:end="77:66">(<argument pos:start="75:29" pos:end="75:35"><expr pos:start="75:29" pos:end="75:35"><name pos:start="75:29" pos:end="75:35"><name pos:start="75:29" pos:end="75:31">dbs</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:35">bs</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:52"><expr pos:start="75:38" pos:end="75:52"><name pos:start="75:38" pos:end="75:52"><name pos:start="75:38" pos:end="75:40">dbs</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:52">sector_num</name></name></expr></argument>, <argument pos:start="75:55" pos:end="75:63"><expr pos:start="75:55" pos:end="75:63"><operator pos:start="75:55" pos:end="75:55">&amp;</operator><name pos:start="75:56" pos:end="75:63"><name pos:start="75:56" pos:end="75:58">dbs</name><operator pos:start="75:59" pos:end="75:60">-&gt;</operator><name pos:start="75:61" pos:end="75:63">iov</name></name></expr></argument>,

                            <argument pos:start="77:29" pos:end="77:47"><expr pos:start="77:29" pos:end="77:47"><name pos:start="77:29" pos:end="77:41"><name pos:start="77:29" pos:end="77:31">dbs</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:36">iov</name><operator pos:start="77:37" pos:end="77:37">.</operator><name pos:start="77:38" pos:end="77:41">size</name></name> <operator pos:start="77:43" pos:end="77:43">/</operator> <literal type="number" pos:start="77:45" pos:end="77:47">512</literal></expr></argument>, <argument pos:start="77:50" pos:end="77:60"><expr pos:start="77:50" pos:end="77:60"><name pos:start="77:50" pos:end="77:60">dma_bdrv_cb</name></expr></argument>, <argument pos:start="77:63" pos:end="77:65"><expr pos:start="77:63" pos:end="77:65"><name pos:start="77:63" pos:end="77:65">dbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="87:5"><if pos:start="79:5" pos:end="87:5">if <condition pos:start="79:8" pos:end="79:18">(<expr pos:start="79:9" pos:end="79:17"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:17"><name pos:start="79:10" pos:end="79:12">dbs</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:17">acb</name></name></expr>)</condition> <block pos:start="79:20" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:15">

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><call pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:22">dma_bdrv_unmap</name><argument_list pos:start="81:23" pos:end="81:27">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">dbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><call pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:26">qemu_iovec_destroy</name><argument_list pos:start="83:27" pos:end="83:37">(<argument pos:start="83:28" pos:end="83:36"><expr pos:start="83:28" pos:end="83:36"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:31">dbs</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:36">iov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
