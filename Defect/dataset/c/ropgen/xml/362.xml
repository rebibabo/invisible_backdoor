<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/362.c" pos:tabs="8"><function pos:start="1:1" pos:end="317:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_mjpeg_decode_sos</name><parameter_list pos:start="1:24" pos:end="3:49">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:42">MJpegDecodeContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:60">uint8_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:72">mb_bitmask</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:48"><decl pos:start="3:25" pos:end="3:48"><type pos:start="3:25" pos:end="3:48"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:37">AVFrame</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:48">reference</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="317:1">{<block_content pos:start="7:5" pos:end="315:31">

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:26">nb_components</name></decl>, <decl pos:start="7:29" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:29">i</name></decl>, <decl pos:start="7:32" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:32">h</name></decl>, <decl pos:start="7:35" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:35">v</name></decl>, <decl pos:start="7:38" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:38" pos:end="7:46">predictor</name></decl>, <decl pos:start="7:49" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:49" pos:end="7:63">point_transform</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:17">id</name></decl>, <decl pos:start="9:20" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:22">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:24">block_size</name> <init pos:start="11:26" pos:end="11:46">= <expr pos:start="11:28" pos:end="11:46"><ternary pos:start="11:28" pos:end="11:46"><condition pos:start="11:28" pos:end="11:40"><expr pos:start="11:28" pos:end="11:38"><name pos:start="11:28" pos:end="11:38"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:38">lossless</name></name></expr> ?</condition><then pos:start="11:42" pos:end="11:42"> <expr pos:start="11:42" pos:end="11:42"><literal type="number" pos:start="11:42" pos:end="11:42">1</literal></expr> </then><else pos:start="11:44" pos:end="11:46">: <expr pos:start="11:46" pos:end="11:46"><literal type="number" pos:start="11:46" pos:end="11:46">8</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ilv</name></decl>, <decl pos:start="13:14" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:23">prev_shift</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:10">s</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:23">got_picture</name></name></expr>)</condition> <block pos:start="17:26" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:18">

        <expr_stmt pos:start="19:9" pos:end="21:62"><expr pos:start="19:9" pos:end="21:61"><call pos:start="19:9" pos:end="21:61"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="21:61">(<argument pos:start="19:16" pos:end="19:23"><expr pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:23">avctx</name></name></expr></argument>, <argument pos:start="19:26" pos:end="19:39"><expr pos:start="19:26" pos:end="19:39"><name pos:start="19:26" pos:end="19:39">AV_LOG_WARNING</name></expr></argument>,

                <argument pos:start="21:17" pos:end="21:60"><expr pos:start="21:17" pos:end="21:60"><literal type="string" pos:start="21:17" pos:end="21:60">"Can not process SOS before SOF, skipping\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><call pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:14">av_assert0</name><argument_list pos:start="29:15" pos:end="29:39">(<argument pos:start="29:16" pos:end="29:38"><expr pos:start="29:16" pos:end="29:38"><name pos:start="29:16" pos:end="29:38"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:29">picture_ptr</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:35">data</name><index pos:start="29:36" pos:end="29:38">[<expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:40">/* XXX: verify len field validity */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:7">len</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:30"><name pos:start="33:11" pos:end="33:18">get_bits</name><argument_list pos:start="33:19" pos:end="33:30">(<argument pos:start="33:20" pos:end="33:25"><expr pos:start="33:20" pos:end="33:25"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:25">gb</name></name></expr></argument>, <argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><literal type="number" pos:start="33:28" pos:end="33:29">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:17">nb_components</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:28">get_bits</name><argument_list pos:start="35:29" pos:end="35:39">(<argument pos:start="35:30" pos:end="35:35"><expr pos:start="35:30" pos:end="35:35"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:35"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:35">gb</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:38"><expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:61">(<expr pos:start="37:9" pos:end="37:60"><name pos:start="37:9" pos:end="37:21">nb_components</name> <operator pos:start="37:23" pos:end="37:24">==</operator> <literal type="number" pos:start="37:26" pos:end="37:26">0</literal> <operator pos:start="37:28" pos:end="37:29">||</operator> <name pos:start="37:31" pos:end="37:43">nb_components</name> <operator pos:start="37:45" pos:end="37:45">&gt;</operator> <name pos:start="37:47" pos:end="37:60">MAX_COMPONENTS</name></expr>)</condition> <block pos:start="37:63" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:36">

        <expr_stmt pos:start="39:9" pos:end="41:78"><expr pos:start="39:9" pos:end="41:77"><call pos:start="39:9" pos:end="41:77"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="41:77">(<argument pos:start="39:16" pos:end="39:23"><expr pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:23"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:23">avctx</name></name></expr></argument>, <argument pos:start="39:26" pos:end="39:37"><expr pos:start="39:26" pos:end="39:37"><name pos:start="39:26" pos:end="39:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="41:16" pos:end="41:61"><expr pos:start="41:16" pos:end="41:61"><literal type="string" pos:start="41:16" pos:end="41:61">"decode_sos: nb_components (%d) unsupported\n"</literal></expr></argument>, <argument pos:start="41:64" pos:end="41:76"><expr pos:start="41:64" pos:end="41:76"><name pos:start="41:64" pos:end="41:76">nb_components</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:36">return <expr pos:start="43:16" pos:end="43:35"><name pos:start="43:16" pos:end="43:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:37">(<expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:11">len</name> <operator pos:start="47:13" pos:end="47:14">!=</operator> <literal type="number" pos:start="47:16" pos:end="47:18">6</literal> <operator pos:start="47:18" pos:end="47:18">+</operator> <literal type="number" pos:start="47:20" pos:end="47:20">2</literal> <operator pos:start="47:22" pos:end="47:22">*</operator> <name pos:start="47:24" pos:end="47:36">nb_components</name></expr>)</condition> <block pos:start="47:39" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35">

        <expr_stmt pos:start="49:9" pos:end="49:78"><expr pos:start="49:9" pos:end="49:77"><call pos:start="49:9" pos:end="49:77"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:77">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:23">avctx</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:40" pos:end="49:71"><expr pos:start="49:40" pos:end="49:71"><literal type="string" pos:start="49:40" pos:end="49:71">"decode_sos: invalid len (%d)\n"</literal></expr></argument>, <argument pos:start="49:74" pos:end="49:76"><expr pos:start="49:74" pos:end="49:76"><name pos:start="49:74" pos:end="49:76">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="55:5" pos:end="129:5">for <control pos:start="55:9" pos:end="55:39">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:34"><expr pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:33">nb_components</name></expr>;</condition> <incr pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><name pos:start="55:36" pos:end="55:36">i</name><operator pos:start="55:37" pos:end="55:38">++</operator></expr></incr>)</control> <block pos:start="55:41" pos:end="129:5">{<block_content pos:start="57:9" pos:end="127:30">

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:10">id</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:32"><name pos:start="57:14" pos:end="57:21">get_bits</name><argument_list pos:start="57:22" pos:end="57:32">(<argument pos:start="57:23" pos:end="57:28"><expr pos:start="57:23" pos:end="57:28"><operator pos:start="57:23" pos:end="57:23">&amp;</operator><name pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:28">gb</name></name></expr></argument>, <argument pos:start="57:31" pos:end="57:31"><expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">8</literal></expr></argument>)</argument_list></call> <operator pos:start="57:34" pos:end="57:34">-</operator> <literal type="number" pos:start="57:36" pos:end="57:36">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:62"><expr pos:start="59:9" pos:end="59:61"><call pos:start="59:9" pos:end="59:61"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:61">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">avctx</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="59:40" pos:end="59:56"><expr pos:start="59:40" pos:end="59:56"><literal type="string" pos:start="59:40" pos:end="59:56">"component: %d\n"</literal></expr></argument>, <argument pos:start="59:59" pos:end="59:60"><expr pos:start="59:59" pos:end="59:60"><name pos:start="59:59" pos:end="59:60">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="61:9" pos:end="61:34">/* find component index */</comment>

        <for pos:start="63:9" pos:end="67:22">for <control pos:start="63:13" pos:end="63:58">(<init pos:start="63:14" pos:end="63:23"><expr pos:start="63:14" pos:end="63:22"><name pos:start="63:14" pos:end="63:18">index</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">0</literal></expr>;</init> <condition pos:start="63:25" pos:end="63:49"><expr pos:start="63:25" pos:end="63:48"><name pos:start="63:25" pos:end="63:29">index</name> <operator pos:start="63:31" pos:end="63:31">&lt;</operator> <name pos:start="63:33" pos:end="63:48"><name pos:start="63:33" pos:end="63:33">s</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:48">nb_components</name></name></expr>;</condition> <incr pos:start="63:51" pos:end="63:57"><expr pos:start="63:51" pos:end="63:57"><name pos:start="63:51" pos:end="63:55">index</name><operator pos:start="63:56" pos:end="63:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:13" pos:end="67:22"><block_content pos:start="65:13" pos:end="67:22">

            <if_stmt pos:start="65:13" pos:end="67:22"><if pos:start="65:13" pos:end="67:22">if <condition pos:start="65:16" pos:end="65:45">(<expr pos:start="65:17" pos:end="65:44"><name pos:start="65:17" pos:end="65:18">id</name> <operator pos:start="65:20" pos:end="65:21">==</operator> <name pos:start="65:23" pos:end="65:44"><name pos:start="65:23" pos:end="65:23">s</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:37">component_id</name><index pos:start="65:38" pos:end="65:44">[<expr pos:start="65:39" pos:end="65:43"><name pos:start="65:39" pos:end="65:43">index</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:22"><block_content pos:start="67:17" pos:end="67:22">

                <break pos:start="67:17" pos:end="67:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="69:9" pos:end="77:9"><if pos:start="69:9" pos:end="77:9">if <condition pos:start="69:12" pos:end="69:38">(<expr pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:17">index</name> <operator pos:start="69:19" pos:end="69:20">==</operator> <name pos:start="69:22" pos:end="69:37"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:37">nb_components</name></name></expr>)</condition> <block pos:start="69:40" pos:end="77:9">{<block_content pos:start="71:13" pos:end="75:39">

            <expr_stmt pos:start="71:13" pos:end="73:71"><expr pos:start="71:13" pos:end="73:70"><call pos:start="71:13" pos:end="73:70"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="73:70">(<argument pos:start="71:20" pos:end="71:27"><expr pos:start="71:20" pos:end="71:27"><name pos:start="71:20" pos:end="71:27"><name pos:start="71:20" pos:end="71:20">s</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:27">avctx</name></name></expr></argument>, <argument pos:start="71:30" pos:end="71:41"><expr pos:start="71:30" pos:end="71:41"><name pos:start="71:30" pos:end="71:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="73:20" pos:end="73:62"><expr pos:start="73:20" pos:end="73:62"><literal type="string" pos:start="73:20" pos:end="73:62">"decode_sos: index(%d) out of components\n"</literal></expr></argument>, <argument pos:start="73:65" pos:end="73:69"><expr pos:start="73:65" pos:end="73:69"><name pos:start="73:65" pos:end="73:69">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:39">return <expr pos:start="75:20" pos:end="75:38"><name pos:start="75:20" pos:end="75:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="79:9" pos:end="79:56">/* Metasoft MJPEG codec has Cb and Cr swapped */</comment>

        <if_stmt pos:start="81:9" pos:end="85:26"><if pos:start="81:9" pos:end="85:26">if <condition pos:start="81:12" pos:end="83:64">(<expr pos:start="81:13" pos:end="83:63"><name pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:20">avctx</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:31">codec_tag</name></name> <operator pos:start="81:33" pos:end="81:34">==</operator> <call pos:start="81:36" pos:end="81:60"><name pos:start="81:36" pos:end="81:40">MKTAG</name><argument_list pos:start="81:41" pos:end="81:60">(<argument pos:start="81:42" pos:end="81:44"><expr pos:start="81:42" pos:end="81:44"><literal type="char" pos:start="81:42" pos:end="81:44">'M'</literal></expr></argument>, <argument pos:start="81:47" pos:end="81:49"><expr pos:start="81:47" pos:end="81:49"><literal type="char" pos:start="81:47" pos:end="81:49">'T'</literal></expr></argument>, <argument pos:start="81:52" pos:end="81:54"><expr pos:start="81:52" pos:end="81:54"><literal type="char" pos:start="81:52" pos:end="81:54">'S'</literal></expr></argument>, <argument pos:start="81:57" pos:end="81:59"><expr pos:start="81:57" pos:end="81:59"><literal type="char" pos:start="81:57" pos:end="81:59">'J'</literal></expr></argument>)</argument_list></call>

            <operator pos:start="83:13" pos:end="83:14">&amp;&amp;</operator> <name pos:start="83:16" pos:end="83:28">nb_components</name> <operator pos:start="83:30" pos:end="83:31">==</operator> <literal type="number" pos:start="83:33" pos:end="83:33">3</literal> <operator pos:start="83:35" pos:end="83:36">&amp;&amp;</operator> <name pos:start="83:38" pos:end="83:53"><name pos:start="83:38" pos:end="83:38">s</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:53">nb_components</name></name> <operator pos:start="83:55" pos:end="83:56">==</operator> <literal type="number" pos:start="83:58" pos:end="83:58">3</literal> <operator pos:start="83:60" pos:end="83:61">&amp;&amp;</operator> <name pos:start="83:63" pos:end="83:63">i</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:26"><block_content pos:start="85:13" pos:end="85:26">

            <expr_stmt pos:start="85:13" pos:end="85:26"><expr pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:17">index</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <literal type="number" pos:start="85:21" pos:end="85:23">3</literal> <operator pos:start="85:23" pos:end="85:23">-</operator> <name pos:start="85:25" pos:end="85:25">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:51"><expr pos:start="89:9" pos:end="89:50"><name pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:23">quant_sindex</name><index pos:start="89:24" pos:end="89:26">[<expr pos:start="89:25" pos:end="89:25"><name pos:start="89:25" pos:end="89:25">i</name></expr>]</index></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:50"><name pos:start="89:30" pos:end="89:30">s</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:43">quant_index</name><index pos:start="89:44" pos:end="89:50">[<expr pos:start="89:45" pos:end="89:49"><name pos:start="89:45" pos:end="89:49">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:64"><expr pos:start="91:9" pos:end="91:63"><name pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:20">nb_blocks</name><index pos:start="91:21" pos:end="91:23">[<expr pos:start="91:22" pos:end="91:22"><name pos:start="91:22" pos:end="91:22">i</name></expr>]</index></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:43"><name pos:start="91:27" pos:end="91:27">s</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:36">h_count</name><index pos:start="91:37" pos:end="91:43">[<expr pos:start="91:38" pos:end="91:42"><name pos:start="91:38" pos:end="91:42">index</name></expr>]</index></name> <operator pos:start="91:45" pos:end="91:45">*</operator> <name pos:start="91:47" pos:end="91:63"><name pos:start="91:47" pos:end="91:47">s</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:56">v_count</name><index pos:start="91:57" pos:end="91:63">[<expr pos:start="91:58" pos:end="91:62"><name pos:start="91:58" pos:end="91:62">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:44"><expr pos:start="93:9" pos:end="93:43"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:19">h_scount</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><name pos:start="93:21" pos:end="93:21">i</name></expr>]</index></name>  <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:43"><name pos:start="93:27" pos:end="93:27">s</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:36">h_count</name><index pos:start="93:37" pos:end="93:43">[<expr pos:start="93:38" pos:end="93:42"><name pos:start="93:38" pos:end="93:42">index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:44"><expr pos:start="95:9" pos:end="95:43"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:19">v_scount</name><index pos:start="95:20" pos:end="95:22">[<expr pos:start="95:21" pos:end="95:21"><name pos:start="95:21" pos:end="95:21">i</name></expr>]</index></name>  <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:43"><name pos:start="95:27" pos:end="95:27">s</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:36">v_count</name><index pos:start="95:37" pos:end="95:43">[<expr pos:start="95:38" pos:end="95:42"><name pos:start="95:38" pos:end="95:42">index</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="101:28"><if pos:start="99:9" pos:end="101:28">if<condition pos:start="99:11" pos:end="99:97">(<expr pos:start="99:12" pos:end="99:96"><name pos:start="99:12" pos:end="99:24">nb_components</name> <operator pos:start="99:26" pos:end="99:27">==</operator> <literal type="number" pos:start="99:29" pos:end="99:29">3</literal> <operator pos:start="99:31" pos:end="99:32">&amp;&amp;</operator> <name pos:start="99:34" pos:end="99:49"><name pos:start="99:34" pos:end="99:34">s</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:49">nb_components</name></name> <operator pos:start="99:51" pos:end="99:52">==</operator> <literal type="number" pos:start="99:54" pos:end="99:54">3</literal> <operator pos:start="99:56" pos:end="99:57">&amp;&amp;</operator> <name pos:start="99:59" pos:end="99:75"><name pos:start="99:59" pos:end="99:59">s</name><operator pos:start="99:60" pos:end="99:61">-&gt;</operator><name pos:start="99:62" pos:end="99:66">avctx</name><operator pos:start="99:67" pos:end="99:68">-&gt;</operator><name pos:start="99:69" pos:end="99:75">pix_fmt</name></name> <operator pos:start="99:77" pos:end="99:78">==</operator> <name pos:start="99:80" pos:end="99:96">AV_PIX_FMT_GBR24P</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:28"><block_content pos:start="101:13" pos:end="101:28">

            <expr_stmt pos:start="101:13" pos:end="101:28"><expr pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:17">index</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:22">i</name><operator pos:start="101:23" pos:end="101:23">+</operator><literal type="number" pos:start="101:24" pos:end="101:24">2</literal><operator pos:start="101:25" pos:end="101:25">)</operator><operator pos:start="101:26" pos:end="101:26">%</operator><literal type="number" pos:start="101:27" pos:end="101:27">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="105:32"><if pos:start="103:9" pos:end="105:32">if<condition pos:start="103:11" pos:end="103:97">(<expr pos:start="103:12" pos:end="103:96"><name pos:start="103:12" pos:end="103:24">nb_components</name> <operator pos:start="103:26" pos:end="103:27">==</operator> <literal type="number" pos:start="103:29" pos:end="103:29">1</literal> <operator pos:start="103:31" pos:end="103:32">&amp;&amp;</operator> <name pos:start="103:34" pos:end="103:49"><name pos:start="103:34" pos:end="103:34">s</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:49">nb_components</name></name> <operator pos:start="103:51" pos:end="103:52">==</operator> <literal type="number" pos:start="103:54" pos:end="103:54">3</literal> <operator pos:start="103:56" pos:end="103:57">&amp;&amp;</operator> <name pos:start="103:59" pos:end="103:75"><name pos:start="103:59" pos:end="103:59">s</name><operator pos:start="103:60" pos:end="103:61">-&gt;</operator><name pos:start="103:62" pos:end="103:66">avctx</name><operator pos:start="103:67" pos:end="103:68">-&gt;</operator><name pos:start="103:69" pos:end="103:75">pix_fmt</name></name> <operator pos:start="103:77" pos:end="103:78">==</operator> <name pos:start="103:80" pos:end="103:96">AV_PIX_FMT_GBR24P</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:32"><block_content pos:start="105:13" pos:end="105:32">

            <expr_stmt pos:start="105:13" pos:end="105:32"><expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:17">index</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <operator pos:start="105:21" pos:end="105:21">(</operator><name pos:start="105:22" pos:end="105:26">index</name><operator pos:start="105:27" pos:end="105:27">+</operator><literal type="number" pos:start="105:28" pos:end="105:28">2</literal><operator pos:start="105:29" pos:end="105:29">)</operator><operator pos:start="105:30" pos:end="105:30">%</operator><literal type="number" pos:start="105:31" pos:end="105:31">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:33"><expr pos:start="109:9" pos:end="109:32"><name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:21">comp_index</name><index pos:start="109:22" pos:end="109:24">[<expr pos:start="109:23" pos:end="109:23"><name pos:start="109:23" pos:end="109:23">i</name></expr>]</index></name> <operator pos:start="109:26" pos:end="109:26">=</operator> <name pos:start="109:28" pos:end="109:32">index</name></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:45"><expr pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:19">dc_index</name><index pos:start="113:20" pos:end="113:22">[<expr pos:start="113:21" pos:end="113:21"><name pos:start="113:21" pos:end="113:21">i</name></expr>]</index></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <call pos:start="113:26" pos:end="113:44"><name pos:start="113:26" pos:end="113:33">get_bits</name><argument_list pos:start="113:34" pos:end="113:44">(<argument pos:start="113:35" pos:end="113:40"><expr pos:start="113:35" pos:end="113:40"><operator pos:start="113:35" pos:end="113:35">&amp;</operator><name pos:start="113:36" pos:end="113:40"><name pos:start="113:36" pos:end="113:36">s</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:40">gb</name></name></expr></argument>, <argument pos:start="113:43" pos:end="113:43"><expr pos:start="113:43" pos:end="113:43"><literal type="number" pos:start="113:43" pos:end="113:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:45"><expr pos:start="115:9" pos:end="115:44"><name pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:19">ac_index</name><index pos:start="115:20" pos:end="115:22">[<expr pos:start="115:21" pos:end="115:21"><name pos:start="115:21" pos:end="115:21">i</name></expr>]</index></name> <operator pos:start="115:24" pos:end="115:24">=</operator> <call pos:start="115:26" pos:end="115:44"><name pos:start="115:26" pos:end="115:33">get_bits</name><argument_list pos:start="115:34" pos:end="115:44">(<argument pos:start="115:35" pos:end="115:40"><expr pos:start="115:35" pos:end="115:40"><operator pos:start="115:35" pos:end="115:35">&amp;</operator><name pos:start="115:36" pos:end="115:40"><name pos:start="115:36" pos:end="115:36">s</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:40">gb</name></name></expr></argument>, <argument pos:start="115:43" pos:end="115:43"><expr pos:start="115:43" pos:end="115:43"><literal type="number" pos:start="115:43" pos:end="115:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="123:30"><if pos:start="119:9" pos:end="123:30">if <condition pos:start="119:12" pos:end="121:55">(<expr pos:start="119:13" pos:end="121:54"><name pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:23">dc_index</name><index pos:start="119:24" pos:end="119:26">[<expr pos:start="119:25" pos:end="119:25"><name pos:start="119:25" pos:end="119:25">i</name></expr>]</index></name> <operator pos:start="119:28" pos:end="119:28">&lt;</operator>  <literal type="number" pos:start="119:31" pos:end="119:31">0</literal> <operator pos:start="119:33" pos:end="119:34">||</operator> <name pos:start="119:36" pos:end="119:49"><name pos:start="119:36" pos:end="119:36">s</name><operator pos:start="119:37" pos:end="119:38">-&gt;</operator><name pos:start="119:39" pos:end="119:46">ac_index</name><index pos:start="119:47" pos:end="119:49">[<expr pos:start="119:48" pos:end="119:48"><name pos:start="119:48" pos:end="119:48">i</name></expr>]</index></name> <operator pos:start="119:51" pos:end="119:51">&lt;</operator> <literal type="number" pos:start="119:53" pos:end="119:53">0</literal> <operator pos:start="119:55" pos:end="119:56">||</operator>

            <name pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:23">dc_index</name><index pos:start="121:24" pos:end="121:26">[<expr pos:start="121:25" pos:end="121:25"><name pos:start="121:25" pos:end="121:25">i</name></expr>]</index></name> <operator pos:start="121:28" pos:end="121:29">&gt;=</operator> <literal type="number" pos:start="121:31" pos:end="121:31">4</literal> <operator pos:start="121:33" pos:end="121:34">||</operator> <name pos:start="121:36" pos:end="121:49"><name pos:start="121:36" pos:end="121:36">s</name><operator pos:start="121:37" pos:end="121:38">-&gt;</operator><name pos:start="121:39" pos:end="121:46">ac_index</name><index pos:start="121:47" pos:end="121:49">[<expr pos:start="121:48" pos:end="121:48"><name pos:start="121:48" pos:end="121:48">i</name></expr>]</index></name> <operator pos:start="121:51" pos:end="121:52">&gt;=</operator> <literal type="number" pos:start="121:54" pos:end="121:54">4</literal></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:30"><block_content pos:start="123:13" pos:end="123:30">

            <goto pos:start="123:13" pos:end="123:30">goto <name pos:start="123:18" pos:end="123:29">out_of_range</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="127:30"><if pos:start="125:9" pos:end="127:30">if <condition pos:start="125:12" pos:end="125:137">(<expr pos:start="125:13" pos:end="125:136"><operator pos:start="125:13" pos:end="125:13">!</operator><name pos:start="125:14" pos:end="125:39"><name pos:start="125:14" pos:end="125:14">s</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:20">vlcs</name><index pos:start="125:21" pos:end="125:23">[<expr pos:start="125:22" pos:end="125:22"><literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr>]</index><index pos:start="125:24" pos:end="125:39">[<expr pos:start="125:25" pos:end="125:38"><name pos:start="125:25" pos:end="125:38"><name pos:start="125:25" pos:end="125:25">s</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:35">dc_index</name><index pos:start="125:36" pos:end="125:38">[<expr pos:start="125:37" pos:end="125:37"><name pos:start="125:37" pos:end="125:37">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="125:40" pos:end="125:40">.</operator><name pos:start="125:41" pos:end="125:45">table</name> <operator pos:start="125:47" pos:end="125:48">||</operator> <operator pos:start="125:50" pos:end="125:50">!</operator><operator pos:start="125:51" pos:end="125:51">(</operator><ternary pos:start="125:52" pos:end="125:135"><condition pos:start="125:52" pos:end="125:67"><expr pos:start="125:52" pos:end="125:65"><name pos:start="125:52" pos:end="125:65"><name pos:start="125:52" pos:end="125:52">s</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:65">progressive</name></name></expr> ?</condition><then pos:start="125:69" pos:end="125:100"> <expr pos:start="125:69" pos:end="125:100"><name pos:start="125:69" pos:end="125:94"><name pos:start="125:69" pos:end="125:69">s</name><operator pos:start="125:70" pos:end="125:71">-&gt;</operator><name pos:start="125:72" pos:end="125:75">vlcs</name><index pos:start="125:76" pos:end="125:78">[<expr pos:start="125:77" pos:end="125:77"><literal type="number" pos:start="125:77" pos:end="125:77">2</literal></expr>]</index><index pos:start="125:79" pos:end="125:94">[<expr pos:start="125:80" pos:end="125:93"><name pos:start="125:80" pos:end="125:93"><name pos:start="125:80" pos:end="125:80">s</name><operator pos:start="125:81" pos:end="125:82">-&gt;</operator><name pos:start="125:83" pos:end="125:90">ac_index</name><index pos:start="125:91" pos:end="125:93">[<expr pos:start="125:92" pos:end="125:92"><literal type="number" pos:start="125:92" pos:end="125:92">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="125:95" pos:end="125:95">.</operator><name pos:start="125:96" pos:end="125:100">table</name></expr> </then><else pos:start="125:102" pos:end="125:135">: <expr pos:start="125:104" pos:end="125:135"><name pos:start="125:104" pos:end="125:129"><name pos:start="125:104" pos:end="125:104">s</name><operator pos:start="125:105" pos:end="125:106">-&gt;</operator><name pos:start="125:107" pos:end="125:110">vlcs</name><index pos:start="125:111" pos:end="125:113">[<expr pos:start="125:112" pos:end="125:112"><literal type="number" pos:start="125:112" pos:end="125:112">1</literal></expr>]</index><index pos:start="125:114" pos:end="125:129">[<expr pos:start="125:115" pos:end="125:128"><name pos:start="125:115" pos:end="125:128"><name pos:start="125:115" pos:end="125:115">s</name><operator pos:start="125:116" pos:end="125:117">-&gt;</operator><name pos:start="125:118" pos:end="125:125">ac_index</name><index pos:start="125:126" pos:end="125:128">[<expr pos:start="125:127" pos:end="125:127"><name pos:start="125:127" pos:end="125:127">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="125:130" pos:end="125:130">.</operator><name pos:start="125:131" pos:end="125:135">table</name></expr></else></ternary><operator pos:start="125:136" pos:end="125:136">)</operator></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:30"><block_content pos:start="127:13" pos:end="127:30">

            <goto pos:start="127:13" pos:end="127:30">goto <name pos:start="127:18" pos:end="127:29">out_of_range</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="133:5" pos:end="133:36"><expr pos:start="133:5" pos:end="133:35"><name pos:start="133:5" pos:end="133:13">predictor</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <call pos:start="133:17" pos:end="133:35"><name pos:start="133:17" pos:end="133:24">get_bits</name><argument_list pos:start="133:25" pos:end="133:35">(<argument pos:start="133:26" pos:end="133:31"><expr pos:start="133:26" pos:end="133:31"><operator pos:start="133:26" pos:end="133:26">&amp;</operator><name pos:start="133:27" pos:end="133:31"><name pos:start="133:27" pos:end="133:27">s</name><operator pos:start="133:28" pos:end="133:29">-&gt;</operator><name pos:start="133:30" pos:end="133:31">gb</name></name></expr></argument>, <argument pos:start="133:34" pos:end="133:34"><expr pos:start="133:34" pos:end="133:34"><literal type="number" pos:start="133:34" pos:end="133:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="133:44" pos:end="133:96">/* JPEG Ss / lossless JPEG predictor /JPEG-LS NEAR */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:30"><expr pos:start="135:5" pos:end="135:29"><name pos:start="135:5" pos:end="135:7">ilv</name> <operator pos:start="135:9" pos:end="135:9">=</operator> <call pos:start="135:11" pos:end="135:29"><name pos:start="135:11" pos:end="135:18">get_bits</name><argument_list pos:start="135:19" pos:end="135:29">(<argument pos:start="135:20" pos:end="135:25"><expr pos:start="135:20" pos:end="135:25"><operator pos:start="135:20" pos:end="135:20">&amp;</operator><name pos:start="135:21" pos:end="135:25"><name pos:start="135:21" pos:end="135:21">s</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:25">gb</name></name></expr></argument>, <argument pos:start="135:28" pos:end="135:28"><expr pos:start="135:28" pos:end="135:28"><literal type="number" pos:start="135:28" pos:end="135:28">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="135:44" pos:end="135:70">/* JPEG Se / JPEG-LS ILV */</comment>

    <if_stmt pos:start="137:5" pos:end="145:41"><if pos:start="137:5" pos:end="143:5">if<condition pos:start="137:7" pos:end="137:46">(<expr pos:start="137:8" pos:end="137:45"><name pos:start="137:8" pos:end="137:26"><name pos:start="137:8" pos:end="137:8">s</name><operator pos:start="137:9" pos:end="137:10">-&gt;</operator><name pos:start="137:11" pos:end="137:15">avctx</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:26">codec_tag</name></name> <operator pos:start="137:28" pos:end="137:29">!=</operator> <call pos:start="137:31" pos:end="137:45"><name pos:start="137:31" pos:end="137:37">AV_RL32</name><argument_list pos:start="137:38" pos:end="137:45">(<argument pos:start="137:39" pos:end="137:44"><expr pos:start="137:39" pos:end="137:44"><literal type="string" pos:start="137:39" pos:end="137:44">"CJPG"</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="137:47" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:46">

        <expr_stmt pos:start="139:9" pos:end="139:46"><expr pos:start="139:9" pos:end="139:45"><name pos:start="139:9" pos:end="139:18">prev_shift</name>      <operator pos:start="139:25" pos:end="139:25">=</operator> <call pos:start="139:27" pos:end="139:45"><name pos:start="139:27" pos:end="139:34">get_bits</name><argument_list pos:start="139:35" pos:end="139:45">(<argument pos:start="139:36" pos:end="139:41"><expr pos:start="139:36" pos:end="139:41"><operator pos:start="139:36" pos:end="139:36">&amp;</operator><name pos:start="139:37" pos:end="139:41"><name pos:start="139:37" pos:end="139:37">s</name><operator pos:start="139:38" pos:end="139:39">-&gt;</operator><name pos:start="139:40" pos:end="139:41">gb</name></name></expr></argument>, <argument pos:start="139:44" pos:end="139:44"><expr pos:start="139:44" pos:end="139:44"><literal type="number" pos:start="139:44" pos:end="139:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="139:48" pos:end="139:55">/* Ah */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:46"><expr pos:start="141:9" pos:end="141:45"><name pos:start="141:9" pos:end="141:23">point_transform</name> <operator pos:start="141:25" pos:end="141:25">=</operator> <call pos:start="141:27" pos:end="141:45"><name pos:start="141:27" pos:end="141:34">get_bits</name><argument_list pos:start="141:35" pos:end="141:45">(<argument pos:start="141:36" pos:end="141:41"><expr pos:start="141:36" pos:end="141:41"><operator pos:start="141:36" pos:end="141:36">&amp;</operator><name pos:start="141:37" pos:end="141:41"><name pos:start="141:37" pos:end="141:37">s</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:41">gb</name></name></expr></argument>, <argument pos:start="141:44" pos:end="141:44"><expr pos:start="141:44" pos:end="141:44"><literal type="number" pos:start="141:44" pos:end="141:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="141:48" pos:end="141:55">/* Al */</comment>

    </block_content>}</block></if><else pos:start="143:6" pos:end="145:41">else<block type="pseudo" pos:start="145:9" pos:end="145:41"><block_content pos:start="145:9" pos:end="145:41">

        <expr_stmt pos:start="145:9" pos:end="145:41"><expr pos:start="145:9" pos:end="145:40"><name pos:start="145:9" pos:end="145:18">prev_shift</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <name pos:start="145:22" pos:end="145:36">point_transform</name> <operator pos:start="145:38" pos:end="145:38">=</operator> <literal type="number" pos:start="145:40" pos:end="145:40">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="149:5" pos:end="173:5"><if pos:start="149:5" pos:end="157:5">if <condition pos:start="149:8" pos:end="149:26">(<expr pos:start="149:9" pos:end="149:25"><name pos:start="149:9" pos:end="149:21">nb_components</name> <operator pos:start="149:23" pos:end="149:23">&gt;</operator> <literal type="number" pos:start="149:25" pos:end="149:25">1</literal></expr>)</condition> <block pos:start="149:28" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:89">

        <comment type="block" pos:start="151:9" pos:end="151:32">/* interleaved stream */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:89"><expr pos:start="153:9" pos:end="153:88"><name pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:19">mb_width</name></name>  <operator pos:start="153:22" pos:end="153:22">=</operator> <operator pos:start="153:24" pos:end="153:24">(</operator><name pos:start="153:25" pos:end="153:32"><name pos:start="153:25" pos:end="153:25">s</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:32">width</name></name>  <operator pos:start="153:35" pos:end="153:35">+</operator> <name pos:start="153:37" pos:end="153:44"><name pos:start="153:37" pos:end="153:37">s</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:44">h_max</name></name> <operator pos:start="153:46" pos:end="153:46">*</operator> <name pos:start="153:48" pos:end="153:57">block_size</name> <operator pos:start="153:59" pos:end="153:59">-</operator> <literal type="number" pos:start="153:61" pos:end="153:61">1</literal><operator pos:start="153:62" pos:end="153:62">)</operator> <operator pos:start="153:64" pos:end="153:64">/</operator> <operator pos:start="153:66" pos:end="153:66">(</operator><name pos:start="153:67" pos:end="153:74"><name pos:start="153:67" pos:end="153:67">s</name><operator pos:start="153:68" pos:end="153:69">-&gt;</operator><name pos:start="153:70" pos:end="153:74">h_max</name></name> <operator pos:start="153:76" pos:end="153:76">*</operator> <name pos:start="153:78" pos:end="153:87">block_size</name><operator pos:start="153:88" pos:end="153:88">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:89"><expr pos:start="155:9" pos:end="155:88"><name pos:start="155:9" pos:end="155:20"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:20">mb_height</name></name> <operator pos:start="155:22" pos:end="155:22">=</operator> <operator pos:start="155:24" pos:end="155:24">(</operator><name pos:start="155:25" pos:end="155:33"><name pos:start="155:25" pos:end="155:25">s</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:33">height</name></name> <operator pos:start="155:35" pos:end="155:35">+</operator> <name pos:start="155:37" pos:end="155:44"><name pos:start="155:37" pos:end="155:37">s</name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:44">v_max</name></name> <operator pos:start="155:46" pos:end="155:46">*</operator> <name pos:start="155:48" pos:end="155:57">block_size</name> <operator pos:start="155:59" pos:end="155:59">-</operator> <literal type="number" pos:start="155:61" pos:end="155:61">1</literal><operator pos:start="155:62" pos:end="155:62">)</operator> <operator pos:start="155:64" pos:end="155:64">/</operator> <operator pos:start="155:66" pos:end="155:66">(</operator><name pos:start="155:67" pos:end="155:74"><name pos:start="155:67" pos:end="155:67">s</name><operator pos:start="155:68" pos:end="155:69">-&gt;</operator><name pos:start="155:70" pos:end="155:74">v_max</name></name> <operator pos:start="155:76" pos:end="155:76">*</operator> <name pos:start="155:78" pos:end="155:87">block_size</name><operator pos:start="155:88" pos:end="155:88">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="157:7" pos:end="173:5">else if <condition pos:start="157:15" pos:end="157:22">(<expr pos:start="157:16" pos:end="157:21"><operator pos:start="157:16" pos:end="157:16">!</operator><name pos:start="157:17" pos:end="157:21"><name pos:start="157:17" pos:end="157:17">s</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:21">ls</name></name></expr>)</condition> <block pos:start="157:24" pos:end="173:5">{<block_content pos:start="159:9" pos:end="171:28"> <comment type="block" pos:start="157:26" pos:end="157:52">/* skip this for JPEG-LS */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:38"><expr pos:start="159:9" pos:end="159:37"><name pos:start="159:9" pos:end="159:9">h</name> <operator pos:start="159:11" pos:end="159:11">=</operator> <name pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:20">h_max</name></name> <operator pos:start="159:22" pos:end="159:22">/</operator> <name pos:start="159:24" pos:end="159:37"><name pos:start="159:24" pos:end="159:24">s</name><operator pos:start="159:25" pos:end="159:26">-&gt;</operator><name pos:start="159:27" pos:end="159:34">h_scount</name><index pos:start="159:35" pos:end="159:37">[<expr pos:start="159:36" pos:end="159:36"><literal type="number" pos:start="159:36" pos:end="159:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:38"><expr pos:start="161:9" pos:end="161:37"><name pos:start="161:9" pos:end="161:9">v</name> <operator pos:start="161:11" pos:end="161:11">=</operator> <name pos:start="161:13" pos:end="161:20"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:20">v_max</name></name> <operator pos:start="161:22" pos:end="161:22">/</operator> <name pos:start="161:24" pos:end="161:37"><name pos:start="161:24" pos:end="161:24">s</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:34">v_scount</name><index pos:start="161:35" pos:end="161:37">[<expr pos:start="161:36" pos:end="161:36"><literal type="number" pos:start="161:36" pos:end="161:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:78"><expr pos:start="163:9" pos:end="163:77"><name pos:start="163:9" pos:end="163:19"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:19">mb_width</name></name>     <operator pos:start="163:25" pos:end="163:25">=</operator> <operator pos:start="163:27" pos:end="163:27">(</operator><name pos:start="163:28" pos:end="163:35"><name pos:start="163:28" pos:end="163:28">s</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:35">width</name></name>  <operator pos:start="163:38" pos:end="163:38">+</operator> <name pos:start="163:40" pos:end="163:40">h</name> <operator pos:start="163:42" pos:end="163:42">*</operator> <name pos:start="163:44" pos:end="163:53">block_size</name> <operator pos:start="163:55" pos:end="163:55">-</operator> <literal type="number" pos:start="163:57" pos:end="163:57">1</literal><operator pos:start="163:58" pos:end="163:58">)</operator> <operator pos:start="163:60" pos:end="163:60">/</operator> <operator pos:start="163:62" pos:end="163:62">(</operator><name pos:start="163:63" pos:end="163:63">h</name> <operator pos:start="163:65" pos:end="163:65">*</operator> <name pos:start="163:67" pos:end="163:76">block_size</name><operator pos:start="163:77" pos:end="163:77">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:78"><expr pos:start="165:9" pos:end="165:77"><name pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:20">mb_height</name></name>    <operator pos:start="165:25" pos:end="165:25">=</operator> <operator pos:start="165:27" pos:end="165:27">(</operator><name pos:start="165:28" pos:end="165:36"><name pos:start="165:28" pos:end="165:28">s</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:36">height</name></name> <operator pos:start="165:38" pos:end="165:38">+</operator> <name pos:start="165:40" pos:end="165:40">v</name> <operator pos:start="165:42" pos:end="165:42">*</operator> <name pos:start="165:44" pos:end="165:53">block_size</name> <operator pos:start="165:55" pos:end="165:55">-</operator> <literal type="number" pos:start="165:57" pos:end="165:57">1</literal><operator pos:start="165:58" pos:end="165:58">)</operator> <operator pos:start="165:60" pos:end="165:60">/</operator> <operator pos:start="165:62" pos:end="165:62">(</operator><name pos:start="165:63" pos:end="165:63">v</name> <operator pos:start="165:65" pos:end="165:65">*</operator> <name pos:start="165:67" pos:end="165:76">block_size</name><operator pos:start="165:77" pos:end="165:77">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:28"><expr pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:20">nb_blocks</name><index pos:start="167:21" pos:end="167:23">[<expr pos:start="167:22" pos:end="167:22"><literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>]</index></name> <operator pos:start="167:25" pos:end="167:25">=</operator> <literal type="number" pos:start="167:27" pos:end="167:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:28"><expr pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:19">h_scount</name><index pos:start="169:20" pos:end="169:22">[<expr pos:start="169:21" pos:end="169:21"><literal type="number" pos:start="169:21" pos:end="169:21">0</literal></expr>]</index></name>  <operator pos:start="169:25" pos:end="169:25">=</operator> <literal type="number" pos:start="169:27" pos:end="169:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:28"><expr pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:22"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:19">v_scount</name><index pos:start="171:20" pos:end="171:22">[<expr pos:start="171:21" pos:end="171:21"><literal type="number" pos:start="171:21" pos:end="171:21">0</literal></expr>]</index></name>  <operator pos:start="171:25" pos:end="171:25">=</operator> <literal type="number" pos:start="171:27" pos:end="171:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="177:5" pos:end="185:79"><if pos:start="177:5" pos:end="185:79">if <condition pos:start="177:8" pos:end="177:45">(<expr pos:start="177:9" pos:end="177:44"><name pos:start="177:9" pos:end="177:23"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:16">avctx</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:23">debug</name></name> <operator pos:start="177:25" pos:end="177:25">&amp;</operator> <name pos:start="177:27" pos:end="177:44">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="185:79"><block_content pos:start="179:9" pos:end="185:79">

        <expr_stmt pos:start="179:9" pos:end="185:79"><expr pos:start="179:9" pos:end="185:78"><call pos:start="179:9" pos:end="185:78"><name pos:start="179:9" pos:end="179:14">av_log</name><argument_list pos:start="179:15" pos:end="185:78">(<argument pos:start="179:16" pos:end="179:23"><expr pos:start="179:16" pos:end="179:23"><name pos:start="179:16" pos:end="179:23"><name pos:start="179:16" pos:end="179:16">s</name><operator pos:start="179:17" pos:end="179:18">-&gt;</operator><name pos:start="179:19" pos:end="179:23">avctx</name></name></expr></argument>, <argument pos:start="179:26" pos:end="179:37"><expr pos:start="179:26" pos:end="179:37"><name pos:start="179:26" pos:end="179:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="179:40" pos:end="179:93"><expr pos:start="179:40" pos:end="179:93"><literal type="string" pos:start="179:40" pos:end="179:93">"%s %s p:%d &gt;&gt;:%d ilv:%d bits:%d skip:%d %s comp:%d\n"</literal></expr></argument>,

               <argument pos:start="181:16" pos:end="181:58"><expr pos:start="181:16" pos:end="181:58"><ternary pos:start="181:16" pos:end="181:58"><condition pos:start="181:16" pos:end="181:28"><expr pos:start="181:16" pos:end="181:26"><name pos:start="181:16" pos:end="181:26"><name pos:start="181:16" pos:end="181:16">s</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:26">lossless</name></name></expr> ?</condition><then pos:start="181:30" pos:end="181:39"> <expr pos:start="181:30" pos:end="181:39"><literal type="string" pos:start="181:30" pos:end="181:39">"lossless"</literal></expr> </then><else pos:start="181:41" pos:end="181:58">: <expr pos:start="181:43" pos:end="181:58"><literal type="string" pos:start="181:43" pos:end="181:58">"sequential DCT"</literal></expr></else></ternary></expr></argument>, <argument pos:start="181:61" pos:end="181:79"><expr pos:start="181:61" pos:end="181:79"><ternary pos:start="181:61" pos:end="181:79"><condition pos:start="181:61" pos:end="181:68"><expr pos:start="181:61" pos:end="181:66"><name pos:start="181:61" pos:end="181:66"><name pos:start="181:61" pos:end="181:61">s</name><operator pos:start="181:62" pos:end="181:63">-&gt;</operator><name pos:start="181:64" pos:end="181:66">rgb</name></name></expr> ?</condition><then pos:start="181:70" pos:end="181:74"> <expr pos:start="181:70" pos:end="181:74"><literal type="string" pos:start="181:70" pos:end="181:74">"RGB"</literal></expr> </then><else pos:start="181:76" pos:end="181:79">: <expr pos:start="181:78" pos:end="181:79"><literal type="string" pos:start="181:78" pos:end="181:79">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="183:16" pos:end="183:24"><expr pos:start="183:16" pos:end="183:24"><name pos:start="183:16" pos:end="183:24">predictor</name></expr></argument>, <argument pos:start="183:27" pos:end="183:41"><expr pos:start="183:27" pos:end="183:41"><name pos:start="183:27" pos:end="183:41">point_transform</name></expr></argument>, <argument pos:start="183:44" pos:end="183:46"><expr pos:start="183:44" pos:end="183:46"><name pos:start="183:44" pos:end="183:46">ilv</name></expr></argument>, <argument pos:start="183:49" pos:end="183:55"><expr pos:start="183:49" pos:end="183:55"><name pos:start="183:49" pos:end="183:55"><name pos:start="183:49" pos:end="183:49">s</name><operator pos:start="183:50" pos:end="183:51">-&gt;</operator><name pos:start="183:52" pos:end="183:55">bits</name></name></expr></argument>, <argument pos:start="183:58" pos:end="183:74"><expr pos:start="183:58" pos:end="183:74"><name pos:start="183:58" pos:end="183:74"><name pos:start="183:58" pos:end="183:58">s</name><operator pos:start="183:59" pos:end="183:60">-&gt;</operator><name pos:start="183:61" pos:end="183:74">mjpb_skiptosod</name></name></expr></argument>,

               <argument pos:start="185:16" pos:end="185:62"><expr pos:start="185:16" pos:end="185:62"><ternary pos:start="185:16" pos:end="185:62"><condition pos:start="185:16" pos:end="185:31"><expr pos:start="185:16" pos:end="185:29"><name pos:start="185:16" pos:end="185:29"><name pos:start="185:16" pos:end="185:16">s</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:29">pegasus_rct</name></name></expr> ?</condition><then pos:start="185:33" pos:end="185:38"> <expr pos:start="185:33" pos:end="185:38"><literal type="string" pos:start="185:33" pos:end="185:38">"PRCT"</literal></expr> </then><else pos:start="185:40" pos:end="185:62">: <expr pos:start="185:42" pos:end="185:62"><operator pos:start="185:42" pos:end="185:42">(</operator><ternary pos:start="185:43" pos:end="185:61"><condition pos:start="185:43" pos:end="185:50"><expr pos:start="185:43" pos:end="185:48"><name pos:start="185:43" pos:end="185:48"><name pos:start="185:43" pos:end="185:43">s</name><operator pos:start="185:44" pos:end="185:45">-&gt;</operator><name pos:start="185:46" pos:end="185:48">rct</name></name></expr> ?</condition><then pos:start="185:52" pos:end="185:56"> <expr pos:start="185:52" pos:end="185:56"><literal type="string" pos:start="185:52" pos:end="185:56">"RCT"</literal></expr> </then><else pos:start="185:58" pos:end="185:61">: <expr pos:start="185:60" pos:end="185:61"><literal type="string" pos:start="185:60" pos:end="185:61">""</literal></expr></else></ternary><operator pos:start="185:62" pos:end="185:62">)</operator></expr></else></ternary></expr></argument>, <argument pos:start="185:65" pos:end="185:77"><expr pos:start="185:65" pos:end="185:77"><name pos:start="185:65" pos:end="185:77">nb_components</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>





    <comment type="block" pos:start="191:5" pos:end="191:78">/* mjpeg-b can have padding bytes between sos and image data, skip them */</comment>

    <for pos:start="193:5" pos:end="195:29">for <control pos:start="193:9" pos:end="193:43">(<init pos:start="193:10" pos:end="193:31"><expr pos:start="193:10" pos:end="193:30"><name pos:start="193:10" pos:end="193:10">i</name> <operator pos:start="193:12" pos:end="193:12">=</operator> <name pos:start="193:14" pos:end="193:30"><name pos:start="193:14" pos:end="193:14">s</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:30">mjpb_skiptosod</name></name></expr>;</init> <condition pos:start="193:33" pos:end="193:38"><expr pos:start="193:33" pos:end="193:37"><name pos:start="193:33" pos:end="193:33">i</name> <operator pos:start="193:35" pos:end="193:35">&gt;</operator> <literal type="number" pos:start="193:37" pos:end="193:37">0</literal></expr>;</condition> <incr pos:start="193:40" pos:end="193:42"><expr pos:start="193:40" pos:end="193:42"><name pos:start="193:40" pos:end="193:40">i</name><operator pos:start="193:41" pos:end="193:42">--</operator></expr></incr>)</control><block type="pseudo" pos:start="195:9" pos:end="195:29"><block_content pos:start="195:9" pos:end="195:29">

        <expr_stmt pos:start="195:9" pos:end="195:29"><expr pos:start="195:9" pos:end="195:28"><call pos:start="195:9" pos:end="195:28"><name pos:start="195:9" pos:end="195:17">skip_bits</name><argument_list pos:start="195:18" pos:end="195:28">(<argument pos:start="195:19" pos:end="195:24"><expr pos:start="195:19" pos:end="195:24"><operator pos:start="195:19" pos:end="195:19">&amp;</operator><name pos:start="195:20" pos:end="195:24"><name pos:start="195:20" pos:end="195:20">s</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:24">gb</name></name></expr></argument>, <argument pos:start="195:27" pos:end="195:27"><expr pos:start="195:27" pos:end="195:27"><literal type="number" pos:start="195:27" pos:end="195:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



<label pos:start="199:1" pos:end="199:11"><name pos:start="199:1" pos:end="199:10">next_field</name>:</label>

    <for pos:start="201:5" pos:end="203:39">for <control pos:start="201:9" pos:end="201:39">(<init pos:start="201:10" pos:end="201:15"><expr pos:start="201:10" pos:end="201:14"><name pos:start="201:10" pos:end="201:10">i</name> <operator pos:start="201:12" pos:end="201:12">=</operator> <literal type="number" pos:start="201:14" pos:end="201:14">0</literal></expr>;</init> <condition pos:start="201:17" pos:end="201:34"><expr pos:start="201:17" pos:end="201:33"><name pos:start="201:17" pos:end="201:17">i</name> <operator pos:start="201:19" pos:end="201:19">&lt;</operator> <name pos:start="201:21" pos:end="201:33">nb_components</name></expr>;</condition> <incr pos:start="201:36" pos:end="201:38"><expr pos:start="201:36" pos:end="201:38"><name pos:start="201:36" pos:end="201:36">i</name><operator pos:start="201:37" pos:end="201:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="203:9" pos:end="203:39"><block_content pos:start="203:9" pos:end="203:39">

        <expr_stmt pos:start="203:9" pos:end="203:39"><expr pos:start="203:9" pos:end="203:38"><name pos:start="203:9" pos:end="203:21"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:18">last_dc</name><index pos:start="203:19" pos:end="203:21">[<expr pos:start="203:20" pos:end="203:20"><name pos:start="203:20" pos:end="203:20">i</name></expr>]</index></name> <operator pos:start="203:23" pos:end="203:23">=</operator> <operator pos:start="203:25" pos:end="203:25">(</operator><literal type="number" pos:start="203:26" pos:end="203:26">4</literal> <operator pos:start="203:28" pos:end="203:29">&lt;&lt;</operator> <name pos:start="203:31" pos:end="203:37"><name pos:start="203:31" pos:end="203:31">s</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:37">bits</name></name><operator pos:start="203:38" pos:end="203:38">)</operator></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="207:5" pos:end="273:5"><if pos:start="207:5" pos:end="247:5">if <condition pos:start="207:8" pos:end="207:20">(<expr pos:start="207:9" pos:end="207:19"><name pos:start="207:9" pos:end="207:19"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:19">lossless</name></name></expr>)</condition> <block pos:start="207:22" pos:end="247:5">{<block_content pos:start="209:9" pos:end="245:9">

        <expr_stmt pos:start="209:9" pos:end="209:49"><expr pos:start="209:9" pos:end="209:48"><call pos:start="209:9" pos:end="209:48"><name pos:start="209:9" pos:end="209:18">av_assert0</name><argument_list pos:start="209:19" pos:end="209:48">(<argument pos:start="209:20" pos:end="209:47"><expr pos:start="209:20" pos:end="209:47"><name pos:start="209:20" pos:end="209:33"><name pos:start="209:20" pos:end="209:20">s</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:33">picture_ptr</name></name> <operator pos:start="209:35" pos:end="209:36">==</operator> <name pos:start="209:38" pos:end="209:47"><name pos:start="209:38" pos:end="209:38">s</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:47">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="211:9" pos:end="245:9"><if pos:start="211:9" pos:end="225:9">if <condition pos:start="211:12" pos:end="211:43">(<expr pos:start="211:13" pos:end="211:42"><name pos:start="211:13" pos:end="211:33">CONFIG_JPEGLS_DECODER</name> <operator pos:start="211:35" pos:end="211:36">&amp;&amp;</operator> <name pos:start="211:38" pos:end="211:42"><name pos:start="211:38" pos:end="211:38">s</name><operator pos:start="211:39" pos:end="211:40">-&gt;</operator><name pos:start="211:41" pos:end="211:42">ls</name></name></expr>)</condition> <block pos:start="211:45" pos:end="225:9">{<block_content pos:start="219:13" pos:end="223:27">

<comment type="line" pos:start="213:1" pos:end="213:22">//            for () {</comment>

<comment type="line" pos:start="215:1" pos:end="215:47">//            reset_ls_coding_parameters(s, 0);</comment>



            <if_stmt pos:start="219:13" pos:end="223:27"><if pos:start="219:13" pos:end="223:27">if <condition pos:start="219:16" pos:end="221:75">(<expr pos:start="219:17" pos:end="221:74"><operator pos:start="219:17" pos:end="219:17">(</operator><name pos:start="219:18" pos:end="219:20">ret</name> <operator pos:start="219:22" pos:end="219:22">=</operator> <call pos:start="219:24" pos:end="221:69"><name pos:start="219:24" pos:end="219:47">ff_jpegls_decode_picture</name><argument_list pos:start="219:48" pos:end="221:69">(<argument pos:start="219:49" pos:end="219:49"><expr pos:start="219:49" pos:end="219:49"><name pos:start="219:49" pos:end="219:49">s</name></expr></argument>, <argument pos:start="219:52" pos:end="219:60"><expr pos:start="219:52" pos:end="219:60"><name pos:start="219:52" pos:end="219:60">predictor</name></expr></argument>,

                                                <argument pos:start="221:49" pos:end="221:63"><expr pos:start="221:49" pos:end="221:63"><name pos:start="221:49" pos:end="221:63">point_transform</name></expr></argument>, <argument pos:start="221:66" pos:end="221:68"><expr pos:start="221:66" pos:end="221:68"><name pos:start="221:66" pos:end="221:68">ilv</name></expr></argument>)</argument_list></call><operator pos:start="221:70" pos:end="221:70">)</operator> <operator pos:start="221:72" pos:end="221:72">&lt;</operator> <literal type="number" pos:start="221:74" pos:end="221:74">0</literal></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:27"><block_content pos:start="223:17" pos:end="223:27">

                <return pos:start="223:17" pos:end="223:27">return <expr pos:start="223:24" pos:end="223:26"><name pos:start="223:24" pos:end="223:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="225:11" pos:end="245:9">else <block pos:start="225:16" pos:end="245:9">{<block_content pos:start="227:13" pos:end="243:13">

            <if_stmt pos:start="227:13" pos:end="243:13"><if pos:start="227:13" pos:end="233:13">if <condition pos:start="227:16" pos:end="227:23">(<expr pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:17">s</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:22">rgb</name></name></expr>)</condition> <block pos:start="227:25" pos:end="233:13">{<block_content pos:start="229:17" pos:end="231:31">

                <if_stmt pos:start="229:17" pos:end="231:31"><if pos:start="229:17" pos:end="231:31">if <condition pos:start="229:20" pos:end="229:100">(<expr pos:start="229:21" pos:end="229:99"><operator pos:start="229:21" pos:end="229:21">(</operator><name pos:start="229:22" pos:end="229:24">ret</name> <operator pos:start="229:26" pos:end="229:26">=</operator> <call pos:start="229:28" pos:end="229:94"><name pos:start="229:28" pos:end="229:48">ljpeg_decode_rgb_scan</name><argument_list pos:start="229:49" pos:end="229:94">(<argument pos:start="229:50" pos:end="229:50"><expr pos:start="229:50" pos:end="229:50"><name pos:start="229:50" pos:end="229:50">s</name></expr></argument>, <argument pos:start="229:53" pos:end="229:65"><expr pos:start="229:53" pos:end="229:65"><name pos:start="229:53" pos:end="229:65">nb_components</name></expr></argument>, <argument pos:start="229:68" pos:end="229:76"><expr pos:start="229:68" pos:end="229:76"><name pos:start="229:68" pos:end="229:76">predictor</name></expr></argument>, <argument pos:start="229:79" pos:end="229:93"><expr pos:start="229:79" pos:end="229:93"><name pos:start="229:79" pos:end="229:93">point_transform</name></expr></argument>)</argument_list></call><operator pos:start="229:95" pos:end="229:95">)</operator> <operator pos:start="229:97" pos:end="229:97">&lt;</operator> <literal type="number" pos:start="229:99" pos:end="229:99">0</literal></expr>)</condition><block type="pseudo" pos:start="231:21" pos:end="231:31"><block_content pos:start="231:21" pos:end="231:31">

                    <return pos:start="231:21" pos:end="231:31">return <expr pos:start="231:28" pos:end="231:30"><name pos:start="231:28" pos:end="231:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="233:15" pos:end="243:13">else <block pos:start="233:20" pos:end="243:13">{<block_content pos:start="235:17" pos:end="241:31">

                <if_stmt pos:start="235:17" pos:end="241:31"><if pos:start="235:17" pos:end="241:31">if <condition pos:start="235:20" pos:end="239:69">(<expr pos:start="235:21" pos:end="239:68"><operator pos:start="235:21" pos:end="235:21">(</operator><name pos:start="235:22" pos:end="235:24">ret</name> <operator pos:start="235:26" pos:end="235:26">=</operator> <call pos:start="235:28" pos:end="239:63"><name pos:start="235:28" pos:end="235:48">ljpeg_decode_yuv_scan</name><argument_list pos:start="235:49" pos:end="239:63">(<argument pos:start="235:50" pos:end="235:50"><expr pos:start="235:50" pos:end="235:50"><name pos:start="235:50" pos:end="235:50">s</name></expr></argument>, <argument pos:start="235:53" pos:end="235:61"><expr pos:start="235:53" pos:end="235:61"><name pos:start="235:53" pos:end="235:61">predictor</name></expr></argument>,

                                                 <argument pos:start="237:50" pos:end="237:64"><expr pos:start="237:50" pos:end="237:64"><name pos:start="237:50" pos:end="237:64">point_transform</name></expr></argument>,

                                                 <argument pos:start="239:50" pos:end="239:62"><expr pos:start="239:50" pos:end="239:62"><name pos:start="239:50" pos:end="239:62">nb_components</name></expr></argument>)</argument_list></call><operator pos:start="239:64" pos:end="239:64">)</operator> <operator pos:start="239:66" pos:end="239:66">&lt;</operator> <literal type="number" pos:start="239:68" pos:end="239:68">0</literal></expr>)</condition><block type="pseudo" pos:start="241:21" pos:end="241:31"><block_content pos:start="241:21" pos:end="241:31">

                    <return pos:start="241:21" pos:end="241:31">return <expr pos:start="241:28" pos:end="241:30"><name pos:start="241:28" pos:end="241:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="247:7" pos:end="273:5">else <block pos:start="247:12" pos:end="273:5">{<block_content pos:start="249:9" pos:end="271:9">

        <if_stmt pos:start="249:9" pos:end="271:9"><if pos:start="249:9" pos:end="261:9">if <condition pos:start="249:12" pos:end="249:40">(<expr pos:start="249:13" pos:end="249:39"><name pos:start="249:13" pos:end="249:26"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:26">progressive</name></name> <operator pos:start="249:28" pos:end="249:29">&amp;&amp;</operator> <name pos:start="249:31" pos:end="249:39">predictor</name></expr>)</condition> <block pos:start="249:42" pos:end="261:9">{<block_content pos:start="251:13" pos:end="259:27">

            <expr_stmt pos:start="251:13" pos:end="251:53"><expr pos:start="251:13" pos:end="251:52"><call pos:start="251:13" pos:end="251:52"><name pos:start="251:13" pos:end="251:22">av_assert0</name><argument_list pos:start="251:23" pos:end="251:52">(<argument pos:start="251:24" pos:end="251:51"><expr pos:start="251:24" pos:end="251:51"><name pos:start="251:24" pos:end="251:37"><name pos:start="251:24" pos:end="251:24">s</name><operator pos:start="251:25" pos:end="251:26">-&gt;</operator><name pos:start="251:27" pos:end="251:37">picture_ptr</name></name> <operator pos:start="251:39" pos:end="251:40">==</operator> <name pos:start="251:42" pos:end="251:51"><name pos:start="251:42" pos:end="251:42">s</name><operator pos:start="251:43" pos:end="251:44">-&gt;</operator><name pos:start="251:45" pos:end="251:51">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="253:13" pos:end="259:27"><if pos:start="253:13" pos:end="259:27">if <condition pos:start="253:16" pos:end="257:78">(<expr pos:start="253:17" pos:end="257:77"><operator pos:start="253:17" pos:end="253:17">(</operator><name pos:start="253:18" pos:end="253:20">ret</name> <operator pos:start="253:22" pos:end="253:22">=</operator> <call pos:start="253:24" pos:end="257:72"><name pos:start="253:24" pos:end="253:55">mjpeg_decode_scan_progressive_ac</name><argument_list pos:start="253:56" pos:end="257:72">(<argument pos:start="253:57" pos:end="253:57"><expr pos:start="253:57" pos:end="253:57"><name pos:start="253:57" pos:end="253:57">s</name></expr></argument>, <argument pos:start="253:60" pos:end="253:68"><expr pos:start="253:60" pos:end="253:68"><name pos:start="253:60" pos:end="253:68">predictor</name></expr></argument>,

                                                        <argument pos:start="255:57" pos:end="255:59"><expr pos:start="255:57" pos:end="255:59"><name pos:start="255:57" pos:end="255:59">ilv</name></expr></argument>, <argument pos:start="255:62" pos:end="255:71"><expr pos:start="255:62" pos:end="255:71"><name pos:start="255:62" pos:end="255:71">prev_shift</name></expr></argument>,

                                                        <argument pos:start="257:57" pos:end="257:71"><expr pos:start="257:57" pos:end="257:71"><name pos:start="257:57" pos:end="257:71">point_transform</name></expr></argument>)</argument_list></call><operator pos:start="257:73" pos:end="257:73">)</operator> <operator pos:start="257:75" pos:end="257:75">&lt;</operator> <literal type="number" pos:start="257:77" pos:end="257:77">0</literal></expr>)</condition><block type="pseudo" pos:start="259:17" pos:end="259:27"><block_content pos:start="259:17" pos:end="259:27">

                <return pos:start="259:17" pos:end="259:27">return <expr pos:start="259:24" pos:end="259:26"><name pos:start="259:24" pos:end="259:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="261:11" pos:end="271:9">else <block pos:start="261:16" pos:end="271:9">{<block_content pos:start="263:13" pos:end="269:27">

            <if_stmt pos:start="263:13" pos:end="269:27"><if pos:start="263:13" pos:end="269:27">if <condition pos:start="263:16" pos:end="267:69">(<expr pos:start="263:17" pos:end="267:68"><operator pos:start="263:17" pos:end="263:17">(</operator><name pos:start="263:18" pos:end="263:20">ret</name> <operator pos:start="263:22" pos:end="263:22">=</operator> <call pos:start="263:24" pos:end="267:63"><name pos:start="263:24" pos:end="263:40">mjpeg_decode_scan</name><argument_list pos:start="263:41" pos:end="267:63">(<argument pos:start="263:42" pos:end="263:42"><expr pos:start="263:42" pos:end="263:42"><name pos:start="263:42" pos:end="263:42">s</name></expr></argument>, <argument pos:start="263:45" pos:end="263:57"><expr pos:start="263:45" pos:end="263:57"><name pos:start="263:45" pos:end="263:57">nb_components</name></expr></argument>,

                                         <argument pos:start="265:42" pos:end="265:51"><expr pos:start="265:42" pos:end="265:51"><name pos:start="265:42" pos:end="265:51">prev_shift</name></expr></argument>, <argument pos:start="265:54" pos:end="265:68"><expr pos:start="265:54" pos:end="265:68"><name pos:start="265:54" pos:end="265:68">point_transform</name></expr></argument>,

                                         <argument pos:start="267:42" pos:end="267:51"><expr pos:start="267:42" pos:end="267:51"><name pos:start="267:42" pos:end="267:51">mb_bitmask</name></expr></argument>, <argument pos:start="267:54" pos:end="267:62"><expr pos:start="267:54" pos:end="267:62"><name pos:start="267:54" pos:end="267:62">reference</name></expr></argument>)</argument_list></call><operator pos:start="267:64" pos:end="267:64">)</operator> <operator pos:start="267:66" pos:end="267:66">&lt;</operator> <literal type="number" pos:start="267:68" pos:end="267:68">0</literal></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:27"><block_content pos:start="269:17" pos:end="269:27">

                <return pos:start="269:17" pos:end="269:27">return <expr pos:start="269:24" pos:end="269:26"><name pos:start="269:24" pos:end="269:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="277:5" pos:end="303:5"><if pos:start="277:5" pos:end="303:5">if <condition pos:start="277:8" pos:end="281:37">(<expr pos:start="277:9" pos:end="281:36"><name pos:start="277:9" pos:end="277:21"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:21">interlaced</name></name> <operator pos:start="277:23" pos:end="277:24">&amp;&amp;</operator>

        <call pos:start="279:9" pos:end="279:29"><name pos:start="279:9" pos:end="279:21">get_bits_left</name><argument_list pos:start="279:22" pos:end="279:29">(<argument pos:start="279:23" pos:end="279:28"><expr pos:start="279:23" pos:end="279:28"><operator pos:start="279:23" pos:end="279:23">&amp;</operator><name pos:start="279:24" pos:end="279:28"><name pos:start="279:24" pos:end="279:24">s</name><operator pos:start="279:25" pos:end="279:26">-&gt;</operator><name pos:start="279:27" pos:end="279:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="279:31" pos:end="279:31">&gt;</operator> <literal type="number" pos:start="279:33" pos:end="279:34">32</literal> <operator pos:start="279:36" pos:end="279:37">&amp;&amp;</operator>

        <call pos:start="281:9" pos:end="281:28"><name pos:start="281:9" pos:end="281:17">show_bits</name><argument_list pos:start="281:18" pos:end="281:28">(<argument pos:start="281:19" pos:end="281:24"><expr pos:start="281:19" pos:end="281:24"><operator pos:start="281:19" pos:end="281:19">&amp;</operator><name pos:start="281:20" pos:end="281:24"><name pos:start="281:20" pos:end="281:20">s</name><operator pos:start="281:21" pos:end="281:22">-&gt;</operator><name pos:start="281:23" pos:end="281:24">gb</name></name></expr></argument>, <argument pos:start="281:27" pos:end="281:27"><expr pos:start="281:27" pos:end="281:27"><literal type="number" pos:start="281:27" pos:end="281:27">8</literal></expr></argument>)</argument_list></call> <operator pos:start="281:30" pos:end="281:31">==</operator> <literal type="number" pos:start="281:33" pos:end="281:36">0xFF</literal></expr>)</condition> <block pos:start="281:39" pos:end="303:5">{<block_content pos:start="283:9" pos:end="301:9">

        <decl_stmt pos:start="283:9" pos:end="283:34"><decl pos:start="283:9" pos:end="283:33"><type pos:start="283:9" pos:end="283:21"><name pos:start="283:9" pos:end="283:21">GetBitContext</name></type> <name pos:start="283:23" pos:end="283:25">bak</name> <init pos:start="283:27" pos:end="283:33">= <expr pos:start="283:29" pos:end="283:33"><name pos:start="283:29" pos:end="283:33"><name pos:start="283:29" pos:end="283:29">s</name><operator pos:start="283:30" pos:end="283:31">-&gt;</operator><name pos:start="283:32" pos:end="283:33">gb</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:29"><expr pos:start="285:9" pos:end="285:28"><call pos:start="285:9" pos:end="285:28"><name pos:start="285:9" pos:end="285:22">align_get_bits</name><argument_list pos:start="285:23" pos:end="285:28">(<argument pos:start="285:24" pos:end="285:27"><expr pos:start="285:24" pos:end="285:27"><operator pos:start="285:24" pos:end="285:24">&amp;</operator><name pos:start="285:25" pos:end="285:27">bak</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="287:9" pos:end="301:9"><if pos:start="287:9" pos:end="301:9">if <condition pos:start="287:12" pos:end="287:42">(<expr pos:start="287:13" pos:end="287:41"><call pos:start="287:13" pos:end="287:31"><name pos:start="287:13" pos:end="287:21">show_bits</name><argument_list pos:start="287:22" pos:end="287:31">(<argument pos:start="287:23" pos:end="287:26"><expr pos:start="287:23" pos:end="287:26"><operator pos:start="287:23" pos:end="287:23">&amp;</operator><name pos:start="287:24" pos:end="287:26">bak</name></expr></argument>, <argument pos:start="287:29" pos:end="287:30"><expr pos:start="287:29" pos:end="287:30"><literal type="number" pos:start="287:29" pos:end="287:30">16</literal></expr></argument>)</argument_list></call> <operator pos:start="287:33" pos:end="287:34">==</operator> <literal type="number" pos:start="287:36" pos:end="287:41">0xFFD1</literal></expr>)</condition> <block pos:start="287:44" pos:end="301:9">{<block_content pos:start="289:13" pos:end="299:28">

            <expr_stmt pos:start="289:13" pos:end="289:85"><expr pos:start="289:13" pos:end="289:84"><call pos:start="289:13" pos:end="289:84"><name pos:start="289:13" pos:end="289:18">av_log</name><argument_list pos:start="289:19" pos:end="289:84">(<argument pos:start="289:20" pos:end="289:27"><expr pos:start="289:20" pos:end="289:27"><name pos:start="289:20" pos:end="289:27"><name pos:start="289:20" pos:end="289:20">s</name><operator pos:start="289:21" pos:end="289:22">-&gt;</operator><name pos:start="289:23" pos:end="289:27">avctx</name></name></expr></argument>, <argument pos:start="289:30" pos:end="289:41"><expr pos:start="289:30" pos:end="289:41"><name pos:start="289:30" pos:end="289:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="289:44" pos:end="289:83"><expr pos:start="289:44" pos:end="289:83"><literal type="string" pos:start="289:44" pos:end="289:83">"AVRn interlaced picture marker found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:24"><expr pos:start="291:13" pos:end="291:23"><name pos:start="291:13" pos:end="291:17"><name pos:start="291:13" pos:end="291:13">s</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:17">gb</name></name> <operator pos:start="291:19" pos:end="291:19">=</operator> <name pos:start="291:21" pos:end="291:23">bak</name></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:34"><expr pos:start="293:13" pos:end="293:33"><call pos:start="293:13" pos:end="293:33"><name pos:start="293:13" pos:end="293:21">skip_bits</name><argument_list pos:start="293:22" pos:end="293:33">(<argument pos:start="293:23" pos:end="293:28"><expr pos:start="293:23" pos:end="293:28"><operator pos:start="293:23" pos:end="293:23">&amp;</operator><name pos:start="293:24" pos:end="293:28"><name pos:start="293:24" pos:end="293:24">s</name><operator pos:start="293:25" pos:end="293:26">-&gt;</operator><name pos:start="293:27" pos:end="293:28">gb</name></name></expr></argument>, <argument pos:start="293:31" pos:end="293:32"><expr pos:start="293:31" pos:end="293:32"><literal type="number" pos:start="293:31" pos:end="293:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:33"><expr pos:start="295:13" pos:end="295:32"><name pos:start="295:13" pos:end="295:27"><name pos:start="295:13" pos:end="295:13">s</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:27">bottom_field</name></name> <operator pos:start="295:29" pos:end="295:30">^=</operator> <literal type="number" pos:start="295:32" pos:end="295:32">1</literal></expr>;</expr_stmt>



            <goto pos:start="299:13" pos:end="299:28">goto <name pos:start="299:18" pos:end="299:27">next_field</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:13"><expr pos:start="307:5" pos:end="307:12"><call pos:start="307:5" pos:end="307:12"><name pos:start="307:5" pos:end="307:10">emms_c</name><argument_list pos:start="307:11" pos:end="307:12">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="309:5" pos:end="309:13">return <expr pos:start="309:12" pos:end="309:12"><literal type="number" pos:start="309:12" pos:end="309:12">0</literal></expr>;</return>

 <label pos:start="311:2" pos:end="311:14"><name pos:start="311:2" pos:end="311:13">out_of_range</name>:</label>

    <expr_stmt pos:start="313:5" pos:end="313:77"><expr pos:start="313:5" pos:end="313:76"><call pos:start="313:5" pos:end="313:76"><name pos:start="313:5" pos:end="313:10">av_log</name><argument_list pos:start="313:11" pos:end="313:76">(<argument pos:start="313:12" pos:end="313:19"><expr pos:start="313:12" pos:end="313:19"><name pos:start="313:12" pos:end="313:19"><name pos:start="313:12" pos:end="313:12">s</name><operator pos:start="313:13" pos:end="313:14">-&gt;</operator><name pos:start="313:15" pos:end="313:19">avctx</name></name></expr></argument>, <argument pos:start="313:22" pos:end="313:33"><expr pos:start="313:22" pos:end="313:33"><name pos:start="313:22" pos:end="313:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="313:36" pos:end="313:75"><expr pos:start="313:36" pos:end="313:75"><literal type="string" pos:start="313:36" pos:end="313:75">"decode_sos: ac/dc index out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="315:5" pos:end="315:31">return <expr pos:start="315:12" pos:end="315:30"><name pos:start="315:12" pos:end="315:30">AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></function>
</unit>
