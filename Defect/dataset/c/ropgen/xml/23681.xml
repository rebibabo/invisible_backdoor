<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23681.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ogg_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="251:1">{<block_content pos:start="5:5" pos:end="249:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">OGGStreamContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:31">oggstream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="211:5">for <control pos:start="11:9" pos:end="11:39">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:34"><expr pos:start="11:17" pos:end="11:33"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:33"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:33">nb_streams</name></name></expr>;</condition> <incr pos:start="11:36" pos:end="11:38"><expr pos:start="11:36" pos:end="11:38"><name pos:start="11:36" pos:end="11:36">i</name><operator pos:start="11:37" pos:end="11:38">++</operator></expr></incr>)</control> <block pos:start="11:41" pos:end="211:5">{<block_content pos:start="13:9" pos:end="209:9">

        <decl_stmt pos:start="13:9" pos:end="13:37"><decl pos:start="13:9" pos:end="13:36"><type pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:16">AVStream</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">st</name> <init pos:start="13:22" pos:end="13:36">= <expr pos:start="13:24" pos:end="13:36"><name pos:start="13:24" pos:end="13:36"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:33">streams</name><index pos:start="13:34" pos:end="13:36">[<expr pos:start="13:35" pos:end="13:35"><name pos:start="13:35" pos:end="13:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:32"><decl pos:start="15:9" pos:end="15:31"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">unsigned</name></type> <name pos:start="15:18" pos:end="15:27">serial_num</name> <init pos:start="15:29" pos:end="15:31">= <expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">i</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="33:92"><if pos:start="19:9" pos:end="31:9">if <condition pos:start="19:12" pos:end="19:56">(<expr pos:start="19:13" pos:end="19:55"><name pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:14">st</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:21">codec</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:33">codec_type</name></name> <operator pos:start="19:35" pos:end="19:36">==</operator> <name pos:start="19:38" pos:end="19:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="19:58" pos:end="31:9">{<block_content pos:start="21:13" pos:end="29:71">

            <if_stmt pos:start="21:13" pos:end="29:71"><if pos:start="21:13" pos:end="25:54">if <condition pos:start="21:16" pos:end="21:56">(<expr pos:start="21:17" pos:end="21:55"><name pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:18">st</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:25">codec</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:35">codec_id</name></name> <operator pos:start="21:37" pos:end="21:38">==</operator> <name pos:start="21:40" pos:end="21:55">AV_CODEC_ID_OPUS</name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:54"><block_content pos:start="25:17" pos:end="25:54">

                <comment type="block" pos:start="23:17" pos:end="23:55">/* Opus requires a fixed 48kHz clock */</comment>

                <expr_stmt pos:start="25:17" pos:end="25:54"><expr pos:start="25:17" pos:end="25:53"><call pos:start="25:17" pos:end="25:53"><name pos:start="25:17" pos:end="25:35">avpriv_set_pts_info</name><argument_list pos:start="25:36" pos:end="25:53">(<argument pos:start="25:37" pos:end="25:38"><expr pos:start="25:37" pos:end="25:38"><name pos:start="25:37" pos:end="25:38">st</name></expr></argument>, <argument pos:start="25:41" pos:end="25:42"><expr pos:start="25:41" pos:end="25:42"><literal type="number" pos:start="25:41" pos:end="25:42">64</literal></expr></argument>, <argument pos:start="25:45" pos:end="25:45"><expr pos:start="25:45" pos:end="25:45"><literal type="number" pos:start="25:45" pos:end="25:45">1</literal></expr></argument>, <argument pos:start="25:48" pos:end="25:52"><expr pos:start="25:48" pos:end="25:52"><literal type="number" pos:start="25:48" pos:end="25:52">48000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="27:13" pos:end="29:71">else<block type="pseudo" pos:start="29:17" pos:end="29:71"><block_content pos:start="29:17" pos:end="29:71">

                <expr_stmt pos:start="29:17" pos:end="29:71"><expr pos:start="29:17" pos:end="29:70"><call pos:start="29:17" pos:end="29:70"><name pos:start="29:17" pos:end="29:35">avpriv_set_pts_info</name><argument_list pos:start="29:36" pos:end="29:70">(<argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">st</name></expr></argument>, <argument pos:start="29:41" pos:end="29:42"><expr pos:start="29:41" pos:end="29:42"><literal type="number" pos:start="29:41" pos:end="29:42">64</literal></expr></argument>, <argument pos:start="29:45" pos:end="29:45"><expr pos:start="29:45" pos:end="29:45"><literal type="number" pos:start="29:45" pos:end="29:45">1</literal></expr></argument>, <argument pos:start="29:48" pos:end="29:69"><expr pos:start="29:48" pos:end="29:69"><name pos:start="29:48" pos:end="29:69"><name pos:start="29:48" pos:end="29:49">st</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:56">codec</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:69">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="31:11" pos:end="33:92">else if <condition pos:start="31:19" pos:end="31:63">(<expr pos:start="31:20" pos:end="31:62"><name pos:start="31:20" pos:end="31:40"><name pos:start="31:20" pos:end="31:21">st</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">codec</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:40">codec_type</name></name> <operator pos:start="31:42" pos:end="31:43">==</operator> <name pos:start="31:45" pos:end="31:62">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:92"><block_content pos:start="33:13" pos:end="33:92">

            <expr_stmt pos:start="33:13" pos:end="33:92"><expr pos:start="33:13" pos:end="33:91"><call pos:start="33:13" pos:end="33:91"><name pos:start="33:13" pos:end="33:31">avpriv_set_pts_info</name><argument_list pos:start="33:32" pos:end="33:91">(<argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><name pos:start="33:33" pos:end="33:34">st</name></expr></argument>, <argument pos:start="33:37" pos:end="33:38"><expr pos:start="33:37" pos:end="33:38"><literal type="number" pos:start="33:37" pos:end="33:38">64</literal></expr></argument>, <argument pos:start="33:41" pos:end="33:64"><expr pos:start="33:41" pos:end="33:64"><name pos:start="33:41" pos:end="33:64"><name pos:start="33:41" pos:end="33:42">st</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:49">codec</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:60">time_base</name><operator pos:start="33:61" pos:end="33:61">.</operator><name pos:start="33:62" pos:end="33:64">num</name></name></expr></argument>, <argument pos:start="33:67" pos:end="33:90"><expr pos:start="33:67" pos:end="33:90"><name pos:start="33:67" pos:end="33:90"><name pos:start="33:67" pos:end="33:68">st</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:75">codec</name><operator pos:start="33:76" pos:end="33:77">-&gt;</operator><name pos:start="33:78" pos:end="33:86">time_base</name><operator pos:start="33:87" pos:end="33:87">.</operator><name pos:start="33:88" pos:end="33:90">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="49:9"><if pos:start="35:9" pos:end="49:9">if <condition pos:start="35:12" pos:end="43:52">(<expr pos:start="35:13" pos:end="43:51"><name pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:14">st</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:21">codec</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:31">codec_id</name></name> <operator pos:start="35:33" pos:end="35:34">!=</operator> <name pos:start="35:36" pos:end="35:53">AV_CODEC_ID_VORBIS</name> <operator pos:start="35:55" pos:end="35:56">&amp;&amp;</operator>

            <name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:14">st</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:21">codec</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:31">codec_id</name></name> <operator pos:start="37:33" pos:end="37:34">!=</operator> <name pos:start="37:36" pos:end="37:53">AV_CODEC_ID_THEORA</name> <operator pos:start="37:55" pos:end="37:56">&amp;&amp;</operator>

            <name pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:14">st</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:21">codec</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:31">codec_id</name></name> <operator pos:start="39:33" pos:end="39:34">!=</operator> <name pos:start="39:36" pos:end="39:52">AV_CODEC_ID_SPEEX</name>  <operator pos:start="39:55" pos:end="39:56">&amp;&amp;</operator>

            <name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:14">st</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">codec</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:31">codec_id</name></name> <operator pos:start="41:33" pos:end="41:34">!=</operator> <name pos:start="41:36" pos:end="41:51">AV_CODEC_ID_FLAC</name>   <operator pos:start="41:55" pos:end="41:56">&amp;&amp;</operator>

            <name pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:14">st</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:21">codec</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:31">codec_id</name></name> <operator pos:start="43:33" pos:end="43:34">!=</operator> <name pos:start="43:36" pos:end="43:51">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="43:54" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:22">

            <expr_stmt pos:start="45:13" pos:end="45:78"><expr pos:start="45:13" pos:end="45:77"><call pos:start="45:13" pos:end="45:77"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="45:77">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">s</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:73"><expr pos:start="45:37" pos:end="45:73"><literal type="string" pos:start="45:37" pos:end="45:73">"Unsupported codec id in stream %d\n"</literal></expr></argument>, <argument pos:start="45:76" pos:end="45:76"><expr pos:start="45:76" pos:end="45:76"><name pos:start="45:76" pos:end="45:76">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:64">(<expr pos:start="53:13" pos:end="53:63"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:33"><name pos:start="53:14" pos:end="53:15">st</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:22">codec</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:33">extradata</name></name> <operator pos:start="53:35" pos:end="53:36">||</operator> <operator pos:start="53:38" pos:end="53:38">!</operator><name pos:start="53:39" pos:end="53:63"><name pos:start="53:39" pos:end="53:40">st</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:47">codec</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:63">extradata_size</name></name></expr>)</condition> <block pos:start="53:66" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:62"><expr pos:start="55:13" pos:end="55:61"><call pos:start="55:13" pos:end="55:61"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:61">(<argument pos:start="55:20" pos:end="55:20"><expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">s</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:60"><expr pos:start="55:37" pos:end="55:60"><literal type="string" pos:start="55:37" pos:end="55:60">"No extradata present\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:51"><expr pos:start="61:9" pos:end="61:50"><name pos:start="61:9" pos:end="61:17">oggstream</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:50"><name pos:start="61:21" pos:end="61:30">av_mallocz</name><argument_list pos:start="61:31" pos:end="61:50">(<argument pos:start="61:32" pos:end="61:49"><expr pos:start="61:32" pos:end="61:49"><sizeof pos:start="61:32" pos:end="61:49">sizeof<argument_list pos:start="61:38" pos:end="61:49">(<argument pos:start="61:39" pos:end="61:48"><expr pos:start="61:39" pos:end="61:48"><operator pos:start="61:39" pos:end="61:39">*</operator><name pos:start="61:40" pos:end="61:48">oggstream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:41"><expr pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:17">oggstream</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:23">page</name><operator pos:start="63:24" pos:end="63:24">.</operator><name pos:start="63:25" pos:end="63:36">stream_index</name></name> <operator pos:start="63:38" pos:end="63:38">=</operator> <name pos:start="63:40" pos:end="63:40">i</name></expr>;</expr_stmt>



        <if_stmt pos:start="67:9" pos:end="83:28"><if pos:start="67:9" pos:end="83:28">if <condition pos:start="67:12" pos:end="67:54">(<expr pos:start="67:13" pos:end="67:53"><operator pos:start="67:13" pos:end="67:13">!</operator><operator pos:start="67:14" pos:end="67:14">(</operator><name pos:start="67:15" pos:end="67:30"><name pos:start="67:15" pos:end="67:16">st</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:23">codec</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:30">flags</name></name> <operator pos:start="67:32" pos:end="67:32">&amp;</operator> <name pos:start="67:34" pos:end="67:52">CODEC_FLAG_BITEXACT</name><operator pos:start="67:53" pos:end="67:53">)</operator></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="83:28"><block_content pos:start="69:13" pos:end="83:28">

            <do pos:start="69:13" pos:end="83:28">do <block pos:start="69:16" pos:end="83:13">{<block_content pos:start="71:17" pos:end="81:17">

                <expr_stmt pos:start="71:17" pos:end="71:50"><expr pos:start="71:17" pos:end="71:49"><name pos:start="71:17" pos:end="71:26">serial_num</name> <operator pos:start="71:28" pos:end="71:28">=</operator> <call pos:start="71:30" pos:end="71:49"><name pos:start="71:30" pos:end="71:47">av_get_random_seed</name><argument_list pos:start="71:48" pos:end="71:49">()</argument_list></call></expr>;</expr_stmt>

                <for pos:start="73:17" pos:end="81:17">for <control pos:start="73:21" pos:end="73:39">(<init pos:start="73:22" pos:end="73:27"><expr pos:start="73:22" pos:end="73:26"><name pos:start="73:22" pos:end="73:22">j</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <literal type="number" pos:start="73:26" pos:end="73:26">0</literal></expr>;</init> <condition pos:start="73:29" pos:end="73:34"><expr pos:start="73:29" pos:end="73:33"><name pos:start="73:29" pos:end="73:29">j</name> <operator pos:start="73:31" pos:end="73:31">&lt;</operator> <name pos:start="73:33" pos:end="73:33">i</name></expr>;</condition> <incr pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><name pos:start="73:36" pos:end="73:36">j</name><operator pos:start="73:37" pos:end="73:38">++</operator></expr></incr>)</control> <block pos:start="73:41" pos:end="81:17">{<block_content pos:start="75:21" pos:end="79:30">

                    <decl_stmt pos:start="75:21" pos:end="75:68"><decl pos:start="75:21" pos:end="75:67"><type pos:start="75:21" pos:end="75:38"><name pos:start="75:21" pos:end="75:36">OGGStreamContext</name> <modifier pos:start="75:38" pos:end="75:38">*</modifier></type><name pos:start="75:39" pos:end="75:40">sc</name> <init pos:start="75:42" pos:end="75:67">= <expr pos:start="75:44" pos:end="75:67"><name pos:start="75:44" pos:end="75:56"><name pos:start="75:44" pos:end="75:44">s</name><operator pos:start="75:45" pos:end="75:46">-&gt;</operator><name pos:start="75:47" pos:end="75:53">streams</name><index pos:start="75:54" pos:end="75:56">[<expr pos:start="75:55" pos:end="75:55"><name pos:start="75:55" pos:end="75:55">j</name></expr>]</index></name><operator pos:start="75:57" pos:end="75:58">-&gt;</operator><name pos:start="75:59" pos:end="75:67">priv_data</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="77:21" pos:end="79:30"><if pos:start="77:21" pos:end="79:30">if <condition pos:start="77:24" pos:end="77:53">(<expr pos:start="77:25" pos:end="77:52"><name pos:start="77:25" pos:end="77:34">serial_num</name> <operator pos:start="77:36" pos:end="77:37">==</operator> <name pos:start="77:39" pos:end="77:52"><name pos:start="77:39" pos:end="77:40">sc</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:52">serial_num</name></name></expr>)</condition><block type="pseudo" pos:start="79:25" pos:end="79:30"><block_content pos:start="79:25" pos:end="79:30">

                        <break pos:start="79:25" pos:end="79:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block> while <condition pos:start="83:21" pos:end="83:27">(<expr pos:start="83:22" pos:end="83:26"><name pos:start="83:22" pos:end="83:22">j</name> <operator pos:start="83:24" pos:end="83:24">&lt;</operator> <name pos:start="83:26" pos:end="83:26">i</name></expr>)</condition>;</do></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:43"><expr pos:start="85:9" pos:end="85:42"><name pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:17">oggstream</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:29">serial_num</name></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <name pos:start="85:33" pos:end="85:42">serial_num</name></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:10">st</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:21">priv_data</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:33">oggstream</name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="209:9"><if pos:start="91:9" pos:end="109:9">if <condition pos:start="91:12" pos:end="91:52">(<expr pos:start="91:13" pos:end="91:51"><name pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:14">st</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:21">codec</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:31">codec_id</name></name> <operator pos:start="91:33" pos:end="91:34">==</operator> <name pos:start="91:36" pos:end="91:51">AV_CODEC_ID_FLAC</name></expr>)</condition> <block pos:start="91:54" pos:end="109:9">{<block_content pos:start="93:13" pos:end="107:13">

            <decl_stmt pos:start="93:13" pos:end="97:59"><decl pos:start="93:13" pos:end="97:58"><type pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">int</name></type> <name pos:start="93:17" pos:end="93:19">err</name> <init pos:start="93:21" pos:end="97:58">= <expr pos:start="93:23" pos:end="97:58"><call pos:start="93:23" pos:end="97:58"><name pos:start="93:23" pos:end="93:44">ogg_build_flac_headers</name><argument_list pos:start="93:45" pos:end="97:58">(<argument pos:start="93:46" pos:end="93:54"><expr pos:start="93:46" pos:end="93:54"><name pos:start="93:46" pos:end="93:54"><name pos:start="93:46" pos:end="93:47">st</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:54">codec</name></name></expr></argument>, <argument pos:start="93:57" pos:end="93:65"><expr pos:start="93:57" pos:end="93:65"><name pos:start="93:57" pos:end="93:65">oggstream</name></expr></argument>,

                                             <argument pos:start="95:46" pos:end="95:83"><expr pos:start="95:46" pos:end="95:83"><name pos:start="95:46" pos:end="95:61"><name pos:start="95:46" pos:end="95:47">st</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:54">codec</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:61">flags</name></name> <operator pos:start="95:63" pos:end="95:63">&amp;</operator> <name pos:start="95:65" pos:end="95:83">CODEC_FLAG_BITEXACT</name></expr></argument>,

                                             <argument pos:start="97:46" pos:end="97:57"><expr pos:start="97:46" pos:end="97:57"><operator pos:start="97:46" pos:end="97:46">&amp;</operator><name pos:start="97:47" pos:end="97:57"><name pos:start="97:47" pos:end="97:47">s</name><operator pos:start="97:48" pos:end="97:49">-&gt;</operator><name pos:start="97:50" pos:end="97:57">metadata</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="99:13" pos:end="107:13"><if pos:start="99:13" pos:end="107:13">if <condition pos:start="99:16" pos:end="99:20">(<expr pos:start="99:17" pos:end="99:19"><name pos:start="99:17" pos:end="99:19">err</name></expr>)</condition> <block pos:start="99:22" pos:end="107:13">{<block_content pos:start="101:17" pos:end="105:27">

                <expr_stmt pos:start="101:17" pos:end="101:72"><expr pos:start="101:17" pos:end="101:71"><call pos:start="101:17" pos:end="101:71"><name pos:start="101:17" pos:end="101:22">av_log</name><argument_list pos:start="101:23" pos:end="101:71">(<argument pos:start="101:24" pos:end="101:24"><expr pos:start="101:24" pos:end="101:24"><name pos:start="101:24" pos:end="101:24">s</name></expr></argument>, <argument pos:start="101:27" pos:end="101:38"><expr pos:start="101:27" pos:end="101:38"><name pos:start="101:27" pos:end="101:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:41" pos:end="101:70"><expr pos:start="101:41" pos:end="101:70"><literal type="string" pos:start="101:41" pos:end="101:70">"Error writing FLAC headers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:41"><expr pos:start="103:17" pos:end="103:40"><call pos:start="103:17" pos:end="103:40"><name pos:start="103:17" pos:end="103:24">av_freep</name><argument_list pos:start="103:25" pos:end="103:40">(<argument pos:start="103:26" pos:end="103:39"><expr pos:start="103:26" pos:end="103:39"><operator pos:start="103:26" pos:end="103:26">&amp;</operator><name pos:start="103:27" pos:end="103:39"><name pos:start="103:27" pos:end="103:28">st</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:39">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="105:17" pos:end="105:27">return <expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="109:11" pos:end="127:9">else if <condition pos:start="109:19" pos:end="109:60">(<expr pos:start="109:20" pos:end="109:59"><name pos:start="109:20" pos:end="109:38"><name pos:start="109:20" pos:end="109:21">st</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:28">codec</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:38">codec_id</name></name> <operator pos:start="109:40" pos:end="109:41">==</operator> <name pos:start="109:43" pos:end="109:59">AV_CODEC_ID_SPEEX</name></expr>)</condition> <block pos:start="109:62" pos:end="127:9">{<block_content pos:start="111:13" pos:end="125:13">

            <decl_stmt pos:start="111:13" pos:end="115:60"><decl pos:start="111:13" pos:end="115:59"><type pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">int</name></type> <name pos:start="111:17" pos:end="111:19">err</name> <init pos:start="111:21" pos:end="115:59">= <expr pos:start="111:23" pos:end="115:59"><call pos:start="111:23" pos:end="115:59"><name pos:start="111:23" pos:end="111:45">ogg_build_speex_headers</name><argument_list pos:start="111:46" pos:end="115:59">(<argument pos:start="111:47" pos:end="111:55"><expr pos:start="111:47" pos:end="111:55"><name pos:start="111:47" pos:end="111:55"><name pos:start="111:47" pos:end="111:48">st</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:55">codec</name></name></expr></argument>, <argument pos:start="111:58" pos:end="111:66"><expr pos:start="111:58" pos:end="111:66"><name pos:start="111:58" pos:end="111:66">oggstream</name></expr></argument>,

                                              <argument pos:start="113:47" pos:end="113:84"><expr pos:start="113:47" pos:end="113:84"><name pos:start="113:47" pos:end="113:62"><name pos:start="113:47" pos:end="113:48">st</name><operator pos:start="113:49" pos:end="113:50">-&gt;</operator><name pos:start="113:51" pos:end="113:55">codec</name><operator pos:start="113:56" pos:end="113:57">-&gt;</operator><name pos:start="113:58" pos:end="113:62">flags</name></name> <operator pos:start="113:64" pos:end="113:64">&amp;</operator> <name pos:start="113:66" pos:end="113:84">CODEC_FLAG_BITEXACT</name></expr></argument>,

                                              <argument pos:start="115:47" pos:end="115:58"><expr pos:start="115:47" pos:end="115:58"><operator pos:start="115:47" pos:end="115:47">&amp;</operator><name pos:start="115:48" pos:end="115:58"><name pos:start="115:48" pos:end="115:48">s</name><operator pos:start="115:49" pos:end="115:50">-&gt;</operator><name pos:start="115:51" pos:end="115:58">metadata</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="117:13" pos:end="125:13"><if pos:start="117:13" pos:end="125:13">if <condition pos:start="117:16" pos:end="117:20">(<expr pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:19">err</name></expr>)</condition> <block pos:start="117:22" pos:end="125:13">{<block_content pos:start="119:17" pos:end="123:27">

                <expr_stmt pos:start="119:17" pos:end="119:73"><expr pos:start="119:17" pos:end="119:72"><call pos:start="119:17" pos:end="119:72"><name pos:start="119:17" pos:end="119:22">av_log</name><argument_list pos:start="119:23" pos:end="119:72">(<argument pos:start="119:24" pos:end="119:24"><expr pos:start="119:24" pos:end="119:24"><name pos:start="119:24" pos:end="119:24">s</name></expr></argument>, <argument pos:start="119:27" pos:end="119:38"><expr pos:start="119:27" pos:end="119:38"><name pos:start="119:27" pos:end="119:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:41" pos:end="119:71"><expr pos:start="119:41" pos:end="119:71"><literal type="string" pos:start="119:41" pos:end="119:71">"Error writing Speex headers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:41"><expr pos:start="121:17" pos:end="121:40"><call pos:start="121:17" pos:end="121:40"><name pos:start="121:17" pos:end="121:24">av_freep</name><argument_list pos:start="121:25" pos:end="121:40">(<argument pos:start="121:26" pos:end="121:39"><expr pos:start="121:26" pos:end="121:39"><operator pos:start="121:26" pos:end="121:26">&amp;</operator><name pos:start="121:27" pos:end="121:39"><name pos:start="121:27" pos:end="121:28">st</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:39">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="123:17" pos:end="123:27">return <expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="127:11" pos:end="145:9">else if <condition pos:start="127:19" pos:end="127:59">(<expr pos:start="127:20" pos:end="127:58"><name pos:start="127:20" pos:end="127:38"><name pos:start="127:20" pos:end="127:21">st</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:28">codec</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:38">codec_id</name></name> <operator pos:start="127:40" pos:end="127:41">==</operator> <name pos:start="127:43" pos:end="127:58">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="127:61" pos:end="145:9">{<block_content pos:start="129:13" pos:end="143:13">

            <decl_stmt pos:start="129:13" pos:end="133:59"><decl pos:start="129:13" pos:end="133:58"><type pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:15">int</name></type> <name pos:start="129:17" pos:end="129:19">err</name> <init pos:start="129:21" pos:end="133:58">= <expr pos:start="129:23" pos:end="133:58"><call pos:start="129:23" pos:end="133:58"><name pos:start="129:23" pos:end="129:44">ogg_build_opus_headers</name><argument_list pos:start="129:45" pos:end="133:58">(<argument pos:start="129:46" pos:end="129:54"><expr pos:start="129:46" pos:end="129:54"><name pos:start="129:46" pos:end="129:54"><name pos:start="129:46" pos:end="129:47">st</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:54">codec</name></name></expr></argument>, <argument pos:start="129:57" pos:end="129:65"><expr pos:start="129:57" pos:end="129:65"><name pos:start="129:57" pos:end="129:65">oggstream</name></expr></argument>,

                                             <argument pos:start="131:46" pos:end="131:83"><expr pos:start="131:46" pos:end="131:83"><name pos:start="131:46" pos:end="131:61"><name pos:start="131:46" pos:end="131:47">st</name><operator pos:start="131:48" pos:end="131:49">-&gt;</operator><name pos:start="131:50" pos:end="131:54">codec</name><operator pos:start="131:55" pos:end="131:56">-&gt;</operator><name pos:start="131:57" pos:end="131:61">flags</name></name> <operator pos:start="131:63" pos:end="131:63">&amp;</operator> <name pos:start="131:65" pos:end="131:83">CODEC_FLAG_BITEXACT</name></expr></argument>,

                                             <argument pos:start="133:46" pos:end="133:57"><expr pos:start="133:46" pos:end="133:57"><operator pos:start="133:46" pos:end="133:46">&amp;</operator><name pos:start="133:47" pos:end="133:57"><name pos:start="133:47" pos:end="133:47">s</name><operator pos:start="133:48" pos:end="133:49">-&gt;</operator><name pos:start="133:50" pos:end="133:57">metadata</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="135:13" pos:end="143:13"><if pos:start="135:13" pos:end="143:13">if <condition pos:start="135:16" pos:end="135:20">(<expr pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:19">err</name></expr>)</condition> <block pos:start="135:22" pos:end="143:13">{<block_content pos:start="137:17" pos:end="141:27">

                <expr_stmt pos:start="137:17" pos:end="137:72"><expr pos:start="137:17" pos:end="137:71"><call pos:start="137:17" pos:end="137:71"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="137:71">(<argument pos:start="137:24" pos:end="137:24"><expr pos:start="137:24" pos:end="137:24"><name pos:start="137:24" pos:end="137:24">s</name></expr></argument>, <argument pos:start="137:27" pos:end="137:38"><expr pos:start="137:27" pos:end="137:38"><name pos:start="137:27" pos:end="137:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:41" pos:end="137:70"><expr pos:start="137:41" pos:end="137:70"><literal type="string" pos:start="137:41" pos:end="137:70">"Error writing Opus headers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:41"><expr pos:start="139:17" pos:end="139:40"><call pos:start="139:17" pos:end="139:40"><name pos:start="139:17" pos:end="139:24">av_freep</name><argument_list pos:start="139:25" pos:end="139:40">(<argument pos:start="139:26" pos:end="139:39"><expr pos:start="139:26" pos:end="139:39"><operator pos:start="139:26" pos:end="139:26">&amp;</operator><name pos:start="139:27" pos:end="139:39"><name pos:start="139:27" pos:end="139:28">st</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:39">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="141:17" pos:end="141:27">return <expr pos:start="141:24" pos:end="141:26"><name pos:start="141:24" pos:end="141:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="145:11" pos:end="209:9">else <block pos:start="145:16" pos:end="209:9">{<block_content pos:start="147:13" pos:end="207:13">

            <decl_stmt pos:start="147:13" pos:end="147:23"><decl pos:start="147:13" pos:end="147:22"><type pos:start="147:13" pos:end="147:21"><name pos:start="147:13" pos:end="147:19">uint8_t</name> <modifier pos:start="147:21" pos:end="147:21">*</modifier></type><name pos:start="147:22" pos:end="147:22">p</name></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:95"><decl pos:start="149:13" pos:end="149:94"><type pos:start="149:13" pos:end="149:24"><specifier pos:start="149:13" pos:end="149:17">const</specifier> <name pos:start="149:19" pos:end="149:22">char</name> <modifier pos:start="149:24" pos:end="149:24">*</modifier></type><name pos:start="149:25" pos:end="149:28">cstr</name> <init pos:start="149:30" pos:end="149:94">= <expr pos:start="149:32" pos:end="149:94"><ternary pos:start="149:32" pos:end="149:94"><condition pos:start="149:32" pos:end="149:74"><expr pos:start="149:32" pos:end="149:72"><name pos:start="149:32" pos:end="149:50"><name pos:start="149:32" pos:end="149:33">st</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:40">codec</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:50">codec_id</name></name> <operator pos:start="149:52" pos:end="149:53">==</operator> <name pos:start="149:55" pos:end="149:72">AV_CODEC_ID_VORBIS</name></expr> ?</condition><then pos:start="149:76" pos:end="149:83"> <expr pos:start="149:76" pos:end="149:83"><literal type="string" pos:start="149:76" pos:end="149:83">"vorbis"</literal></expr> </then><else pos:start="149:85" pos:end="149:94">: <expr pos:start="149:87" pos:end="149:94"><literal type="string" pos:start="149:87" pos:end="149:94">"theora"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="151:13" pos:end="151:83"><decl pos:start="151:13" pos:end="151:82"><type pos:start="151:13" pos:end="151:15"><name pos:start="151:13" pos:end="151:15">int</name></type> <name pos:start="151:17" pos:end="151:27">header_type</name> <init pos:start="151:29" pos:end="151:82">= <expr pos:start="151:31" pos:end="151:82"><ternary pos:start="151:31" pos:end="151:82"><condition pos:start="151:31" pos:end="151:73"><expr pos:start="151:31" pos:end="151:71"><name pos:start="151:31" pos:end="151:49"><name pos:start="151:31" pos:end="151:32">st</name><operator pos:start="151:33" pos:end="151:34">-&gt;</operator><name pos:start="151:35" pos:end="151:39">codec</name><operator pos:start="151:40" pos:end="151:41">-&gt;</operator><name pos:start="151:42" pos:end="151:49">codec_id</name></name> <operator pos:start="151:51" pos:end="151:52">==</operator> <name pos:start="151:54" pos:end="151:71">AV_CODEC_ID_VORBIS</name></expr> ?</condition><then pos:start="151:75" pos:end="151:75"> <expr pos:start="151:75" pos:end="151:75"><literal type="number" pos:start="151:75" pos:end="151:75">3</literal></expr> </then><else pos:start="151:77" pos:end="151:82">: <expr pos:start="151:79" pos:end="151:82"><literal type="number" pos:start="151:79" pos:end="151:82">0x81</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="153:13" pos:end="153:80"><decl pos:start="153:13" pos:end="153:79"><type pos:start="153:13" pos:end="153:15"><name pos:start="153:13" pos:end="153:15">int</name></type> <name pos:start="153:17" pos:end="153:27">framing_bit</name> <init pos:start="153:29" pos:end="153:79">= <expr pos:start="153:31" pos:end="153:79"><ternary pos:start="153:31" pos:end="153:79"><condition pos:start="153:31" pos:end="153:73"><expr pos:start="153:31" pos:end="153:71"><name pos:start="153:31" pos:end="153:49"><name pos:start="153:31" pos:end="153:32">st</name><operator pos:start="153:33" pos:end="153:34">-&gt;</operator><name pos:start="153:35" pos:end="153:39">codec</name><operator pos:start="153:40" pos:end="153:41">-&gt;</operator><name pos:start="153:42" pos:end="153:49">codec_id</name></name> <operator pos:start="153:51" pos:end="153:52">==</operator> <name pos:start="153:54" pos:end="153:71">AV_CODEC_ID_VORBIS</name></expr> ?</condition><then pos:start="153:75" pos:end="153:75"> <expr pos:start="153:75" pos:end="153:75"><literal type="number" pos:start="153:75" pos:end="153:75">1</literal></expr> </then><else pos:start="153:77" pos:end="153:79">: <expr pos:start="153:79" pos:end="153:79"><literal type="number" pos:start="153:79" pos:end="153:79">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="157:13" pos:end="169:13"><if pos:start="157:13" pos:end="169:13">if <condition pos:start="157:16" pos:end="161:84">(<expr pos:start="157:17" pos:end="161:83"><call pos:start="157:17" pos:end="161:79"><name pos:start="157:17" pos:end="157:41">avpriv_split_xiph_headers</name><argument_list pos:start="157:42" pos:end="161:79">(<argument pos:start="157:43" pos:end="157:62"><expr pos:start="157:43" pos:end="157:62"><name pos:start="157:43" pos:end="157:62"><name pos:start="157:43" pos:end="157:44">st</name><operator pos:start="157:45" pos:end="157:46">-&gt;</operator><name pos:start="157:47" pos:end="157:51">codec</name><operator pos:start="157:52" pos:end="157:53">-&gt;</operator><name pos:start="157:54" pos:end="157:62">extradata</name></name></expr></argument>, <argument pos:start="157:65" pos:end="157:89"><expr pos:start="157:65" pos:end="157:89"><name pos:start="157:65" pos:end="157:89"><name pos:start="157:65" pos:end="157:66">st</name><operator pos:start="157:67" pos:end="157:68">-&gt;</operator><name pos:start="157:69" pos:end="157:73">codec</name><operator pos:start="157:74" pos:end="157:75">-&gt;</operator><name pos:start="157:76" pos:end="157:89">extradata_size</name></name></expr></argument>,

                                      <argument pos:start="159:39" pos:end="159:89"><expr pos:start="159:39" pos:end="159:89"><ternary pos:start="159:39" pos:end="159:89"><condition pos:start="159:39" pos:end="159:81"><expr pos:start="159:39" pos:end="159:79"><name pos:start="159:39" pos:end="159:57"><name pos:start="159:39" pos:end="159:40">st</name><operator pos:start="159:41" pos:end="159:42">-&gt;</operator><name pos:start="159:43" pos:end="159:47">codec</name><operator pos:start="159:48" pos:end="159:49">-&gt;</operator><name pos:start="159:50" pos:end="159:57">codec_id</name></name> <operator pos:start="159:59" pos:end="159:60">==</operator> <name pos:start="159:62" pos:end="159:79">AV_CODEC_ID_VORBIS</name></expr> ?</condition><then pos:start="159:83" pos:end="159:84"> <expr pos:start="159:83" pos:end="159:84"><literal type="number" pos:start="159:83" pos:end="159:84">30</literal></expr> </then><else pos:start="159:86" pos:end="159:89">: <expr pos:start="159:88" pos:end="159:89"><literal type="number" pos:start="159:88" pos:end="159:89">42</literal></expr></else></ternary></expr></argument>,

                                      <argument pos:start="161:39" pos:end="161:55"><expr pos:start="161:39" pos:end="161:55"><name pos:start="161:39" pos:end="161:55"><name pos:start="161:39" pos:end="161:47">oggstream</name><operator pos:start="161:48" pos:end="161:49">-&gt;</operator><name pos:start="161:50" pos:end="161:55">header</name></name></expr></argument>, <argument pos:start="161:58" pos:end="161:78"><expr pos:start="161:58" pos:end="161:78"><name pos:start="161:58" pos:end="161:78"><name pos:start="161:58" pos:end="161:66">oggstream</name><operator pos:start="161:67" pos:end="161:68">-&gt;</operator><name pos:start="161:69" pos:end="161:78">header_len</name></name></expr></argument>)</argument_list></call> <operator pos:start="161:81" pos:end="161:81">&lt;</operator> <literal type="number" pos:start="161:83" pos:end="161:83">0</literal></expr>)</condition> <block pos:start="161:86" pos:end="169:13">{<block_content pos:start="163:17" pos:end="167:26">

                <expr_stmt pos:start="163:17" pos:end="163:65"><expr pos:start="163:17" pos:end="163:64"><call pos:start="163:17" pos:end="163:64"><name pos:start="163:17" pos:end="163:22">av_log</name><argument_list pos:start="163:23" pos:end="163:64">(<argument pos:start="163:24" pos:end="163:24"><expr pos:start="163:24" pos:end="163:24"><name pos:start="163:24" pos:end="163:24">s</name></expr></argument>, <argument pos:start="163:27" pos:end="163:38"><expr pos:start="163:27" pos:end="163:38"><name pos:start="163:27" pos:end="163:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:41" pos:end="163:63"><expr pos:start="163:41" pos:end="163:63"><literal type="string" pos:start="163:41" pos:end="163:63">"Extradata corrupted\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:41"><expr pos:start="165:17" pos:end="165:40"><call pos:start="165:17" pos:end="165:40"><name pos:start="165:17" pos:end="165:24">av_freep</name><argument_list pos:start="165:25" pos:end="165:40">(<argument pos:start="165:26" pos:end="165:39"><expr pos:start="165:26" pos:end="165:39"><operator pos:start="165:26" pos:end="165:26">&amp;</operator><name pos:start="165:27" pos:end="165:39"><name pos:start="165:27" pos:end="165:28">st</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:39">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="167:17" pos:end="167:26">return <expr pos:start="167:24" pos:end="167:25"><operator pos:start="167:24" pos:end="167:24">-</operator><literal type="number" pos:start="167:25" pos:end="167:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="173:13" pos:end="177:53"><expr pos:start="173:13" pos:end="177:52"><name pos:start="173:13" pos:end="173:13">p</name> <operator pos:start="173:15" pos:end="173:15">=</operator> <call pos:start="173:17" pos:end="177:52"><name pos:start="173:17" pos:end="173:39">ogg_write_vorbiscomment</name><argument_list pos:start="173:40" pos:end="177:52">(<argument pos:start="173:41" pos:end="173:41"><expr pos:start="173:41" pos:end="173:41"><literal type="number" pos:start="173:41" pos:end="173:41">7</literal></expr></argument>, <argument pos:start="173:44" pos:end="173:81"><expr pos:start="173:44" pos:end="173:81"><name pos:start="173:44" pos:end="173:59"><name pos:start="173:44" pos:end="173:45">st</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:52">codec</name><operator pos:start="173:53" pos:end="173:54">-&gt;</operator><name pos:start="173:55" pos:end="173:59">flags</name></name> <operator pos:start="173:61" pos:end="173:61">&amp;</operator> <name pos:start="173:63" pos:end="173:81">CODEC_FLAG_BITEXACT</name></expr></argument>,

                                        <argument pos:start="175:41" pos:end="175:65"><expr pos:start="175:41" pos:end="175:65"><operator pos:start="175:41" pos:end="175:41">&amp;</operator><name pos:start="175:42" pos:end="175:65"><name pos:start="175:42" pos:end="175:50">oggstream</name><operator pos:start="175:51" pos:end="175:52">-&gt;</operator><name pos:start="175:53" pos:end="175:62">header_len</name><index pos:start="175:63" pos:end="175:65">[<expr pos:start="175:64" pos:end="175:64"><literal type="number" pos:start="175:64" pos:end="175:64">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="175:68" pos:end="175:79"><expr pos:start="175:68" pos:end="175:79"><operator pos:start="175:68" pos:end="175:68">&amp;</operator><name pos:start="175:69" pos:end="175:79"><name pos:start="175:69" pos:end="175:69">s</name><operator pos:start="175:70" pos:end="175:71">-&gt;</operator><name pos:start="175:72" pos:end="175:79">metadata</name></name></expr></argument>,

                                        <argument pos:start="177:41" pos:end="177:51"><expr pos:start="177:41" pos:end="177:51"><name pos:start="177:41" pos:end="177:51">framing_bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:37"><expr pos:start="179:13" pos:end="179:36"><name pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:21">oggstream</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:29">header</name><index pos:start="179:30" pos:end="179:32">[<expr pos:start="179:31" pos:end="179:31"><literal type="number" pos:start="179:31" pos:end="179:31">1</literal></expr>]</index></name> <operator pos:start="179:34" pos:end="179:34">=</operator> <name pos:start="179:36" pos:end="179:36">p</name></expr>;</expr_stmt>

            <if_stmt pos:start="181:13" pos:end="183:39"><if pos:start="181:13" pos:end="183:39">if <condition pos:start="181:16" pos:end="181:19">(<expr pos:start="181:17" pos:end="181:18"><operator pos:start="181:17" pos:end="181:17">!</operator><name pos:start="181:18" pos:end="181:18">p</name></expr>)</condition><block type="pseudo" pos:start="183:17" pos:end="183:39"><block_content pos:start="183:17" pos:end="183:39">

                <return pos:start="183:17" pos:end="183:39">return <expr pos:start="183:24" pos:end="183:38"><call pos:start="183:24" pos:end="183:38"><name pos:start="183:24" pos:end="183:30">AVERROR</name><argument_list pos:start="183:31" pos:end="183:38">(<argument pos:start="183:32" pos:end="183:37"><expr pos:start="183:32" pos:end="183:37"><name pos:start="183:32" pos:end="183:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="187:13" pos:end="187:49"><expr pos:start="187:13" pos:end="187:48"><call pos:start="187:13" pos:end="187:48"><name pos:start="187:13" pos:end="187:31">bytestream_put_byte</name><argument_list pos:start="187:32" pos:end="187:48">(<argument pos:start="187:33" pos:end="187:34"><expr pos:start="187:33" pos:end="187:34"><operator pos:start="187:33" pos:end="187:33">&amp;</operator><name pos:start="187:34" pos:end="187:34">p</name></expr></argument>, <argument pos:start="187:37" pos:end="187:47"><expr pos:start="187:37" pos:end="187:47"><name pos:start="187:37" pos:end="187:47">header_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:47"><expr pos:start="189:13" pos:end="189:46"><call pos:start="189:13" pos:end="189:46"><name pos:start="189:13" pos:end="189:33">bytestream_put_buffer</name><argument_list pos:start="189:34" pos:end="189:46">(<argument pos:start="189:35" pos:end="189:36"><expr pos:start="189:35" pos:end="189:36"><operator pos:start="189:35" pos:end="189:35">&amp;</operator><name pos:start="189:36" pos:end="189:36">p</name></expr></argument>, <argument pos:start="189:39" pos:end="189:42"><expr pos:start="189:39" pos:end="189:42"><name pos:start="189:39" pos:end="189:42">cstr</name></expr></argument>, <argument pos:start="189:45" pos:end="189:45"><expr pos:start="189:45" pos:end="189:45"><literal type="number" pos:start="189:45" pos:end="189:45">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="193:13" pos:end="207:13"><if pos:start="193:13" pos:end="207:13">if <condition pos:start="193:16" pos:end="193:58">(<expr pos:start="193:17" pos:end="193:57"><name pos:start="193:17" pos:end="193:35"><name pos:start="193:17" pos:end="193:18">st</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:25">codec</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:35">codec_id</name></name> <operator pos:start="193:37" pos:end="193:38">==</operator> <name pos:start="193:40" pos:end="193:57">AV_CODEC_ID_THEORA</name></expr>)</condition> <block pos:start="193:60" pos:end="207:13">{<block_content pos:start="199:17" pos:end="205:61">

                <comment type="block" format="doxygen" pos:start="195:17" pos:end="197:94">/** KFGSHIFT is the width of the less significant section of the granule position

                    The less significant section is the frame count since the last keyframe */</comment>

                <expr_stmt pos:start="199:17" pos:end="199:102"><expr pos:start="199:17" pos:end="199:101"><name pos:start="199:17" pos:end="199:35"><name pos:start="199:17" pos:end="199:25">oggstream</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:35">kfgshift</name></name> <operator pos:start="199:37" pos:end="199:37">=</operator> <operator pos:start="199:39" pos:end="199:39">(</operator><operator pos:start="199:40" pos:end="199:40">(</operator><name pos:start="199:41" pos:end="199:64"><name pos:start="199:41" pos:end="199:49">oggstream</name><operator pos:start="199:50" pos:end="199:51">-&gt;</operator><name pos:start="199:52" pos:end="199:57">header</name><index pos:start="199:58" pos:end="199:60">[<expr pos:start="199:59" pos:end="199:59"><literal type="number" pos:start="199:59" pos:end="199:59">0</literal></expr>]</index><index pos:start="199:61" pos:end="199:64">[<expr pos:start="199:62" pos:end="199:63"><literal type="number" pos:start="199:62" pos:end="199:63">40</literal></expr>]</index></name><operator pos:start="199:65" pos:end="199:65">&amp;</operator><literal type="number" pos:start="199:66" pos:end="199:66">3</literal><operator pos:start="199:67" pos:end="199:67">)</operator><operator pos:start="199:68" pos:end="199:69">&lt;&lt;</operator><literal type="number" pos:start="199:70" pos:end="199:70">3</literal><operator pos:start="199:71" pos:end="199:71">)</operator><operator pos:start="199:72" pos:end="199:72">|</operator><operator pos:start="199:73" pos:end="199:73">(</operator><name pos:start="199:74" pos:end="199:97"><name pos:start="199:74" pos:end="199:82">oggstream</name><operator pos:start="199:83" pos:end="199:84">-&gt;</operator><name pos:start="199:85" pos:end="199:90">header</name><index pos:start="199:91" pos:end="199:93">[<expr pos:start="199:92" pos:end="199:92"><literal type="number" pos:start="199:92" pos:end="199:92">0</literal></expr>]</index><index pos:start="199:94" pos:end="199:97">[<expr pos:start="199:95" pos:end="199:96"><literal type="number" pos:start="199:95" pos:end="199:96">41</literal></expr>]</index></name><operator pos:start="199:98" pos:end="199:99">&gt;&gt;</operator><literal type="number" pos:start="199:100" pos:end="199:100">5</literal><operator pos:start="199:101" pos:end="199:101">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:58"><expr pos:start="201:17" pos:end="201:57"><name pos:start="201:17" pos:end="201:31"><name pos:start="201:17" pos:end="201:25">oggstream</name><operator pos:start="201:26" pos:end="201:27">-&gt;</operator><name pos:start="201:28" pos:end="201:31">vrev</name></name> <operator pos:start="201:33" pos:end="201:33">=</operator> <name pos:start="201:35" pos:end="201:57"><name pos:start="201:35" pos:end="201:43">oggstream</name><operator pos:start="201:44" pos:end="201:45">-&gt;</operator><name pos:start="201:46" pos:end="201:51">header</name><index pos:start="201:52" pos:end="201:54">[<expr pos:start="201:53" pos:end="201:53"><literal type="number" pos:start="201:53" pos:end="201:53">0</literal></expr>]</index><index pos:start="201:55" pos:end="201:57">[<expr pos:start="201:56" pos:end="201:56"><literal type="number" pos:start="201:56" pos:end="201:56">9</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="205:61"><expr pos:start="203:17" pos:end="205:60"><call pos:start="203:17" pos:end="205:60"><name pos:start="203:17" pos:end="203:22">av_log</name><argument_list pos:start="203:23" pos:end="205:60">(<argument pos:start="203:24" pos:end="203:24"><expr pos:start="203:24" pos:end="203:24"><name pos:start="203:24" pos:end="203:24">s</name></expr></argument>, <argument pos:start="203:27" pos:end="203:38"><expr pos:start="203:27" pos:end="203:38"><name pos:start="203:27" pos:end="203:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="203:41" pos:end="203:71"><expr pos:start="203:41" pos:end="203:71"><literal type="string" pos:start="203:41" pos:end="203:71">"theora kfgshift %d, vrev %d\n"</literal></expr></argument>,

                       <argument pos:start="205:24" pos:end="205:42"><expr pos:start="205:24" pos:end="205:42"><name pos:start="205:24" pos:end="205:42"><name pos:start="205:24" pos:end="205:32">oggstream</name><operator pos:start="205:33" pos:end="205:34">-&gt;</operator><name pos:start="205:35" pos:end="205:42">kfgshift</name></name></expr></argument>, <argument pos:start="205:45" pos:end="205:59"><expr pos:start="205:45" pos:end="205:59"><name pos:start="205:45" pos:end="205:59"><name pos:start="205:45" pos:end="205:53">oggstream</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:59">vrev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <for pos:start="215:5" pos:end="227:5">for <control pos:start="215:9" pos:end="215:39">(<init pos:start="215:10" pos:end="215:15"><expr pos:start="215:10" pos:end="215:14"><name pos:start="215:10" pos:end="215:10">j</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <literal type="number" pos:start="215:14" pos:end="215:14">0</literal></expr>;</init> <condition pos:start="215:17" pos:end="215:34"><expr pos:start="215:17" pos:end="215:33"><name pos:start="215:17" pos:end="215:17">j</name> <operator pos:start="215:19" pos:end="215:19">&lt;</operator> <name pos:start="215:21" pos:end="215:33"><name pos:start="215:21" pos:end="215:21">s</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:33">nb_streams</name></name></expr>;</condition> <incr pos:start="215:36" pos:end="215:38"><expr pos:start="215:36" pos:end="215:38"><name pos:start="215:36" pos:end="215:36">j</name><operator pos:start="215:37" pos:end="215:38">++</operator></expr></incr>)</control> <block pos:start="215:41" pos:end="227:5">{<block_content pos:start="217:9" pos:end="225:38">

        <decl_stmt pos:start="217:9" pos:end="217:63"><decl pos:start="217:9" pos:end="217:62"><type pos:start="217:9" pos:end="217:26"><name pos:start="217:9" pos:end="217:24">OGGStreamContext</name> <modifier pos:start="217:26" pos:end="217:26">*</modifier></type><name pos:start="217:27" pos:end="217:35">oggstream</name> <init pos:start="217:37" pos:end="217:62">= <expr pos:start="217:39" pos:end="217:62"><name pos:start="217:39" pos:end="217:51"><name pos:start="217:39" pos:end="217:39">s</name><operator pos:start="217:40" pos:end="217:41">-&gt;</operator><name pos:start="217:42" pos:end="217:48">streams</name><index pos:start="217:49" pos:end="217:51">[<expr pos:start="217:50" pos:end="217:50"><name pos:start="217:50" pos:end="217:50">j</name></expr>]</index></name><operator pos:start="217:52" pos:end="217:53">-&gt;</operator><name pos:start="217:54" pos:end="217:62">priv_data</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="219:9" pos:end="221:56"><expr pos:start="219:9" pos:end="221:55"><call pos:start="219:9" pos:end="221:55"><name pos:start="219:9" pos:end="219:23">ogg_buffer_data</name><argument_list pos:start="219:24" pos:end="221:55">(<argument pos:start="219:25" pos:end="219:25"><expr pos:start="219:25" pos:end="219:25"><name pos:start="219:25" pos:end="219:25">s</name></expr></argument>, <argument pos:start="219:28" pos:end="219:40"><expr pos:start="219:28" pos:end="219:40"><name pos:start="219:28" pos:end="219:40"><name pos:start="219:28" pos:end="219:28">s</name><operator pos:start="219:29" pos:end="219:30">-&gt;</operator><name pos:start="219:31" pos:end="219:37">streams</name><index pos:start="219:38" pos:end="219:40">[<expr pos:start="219:39" pos:end="219:39"><name pos:start="219:39" pos:end="219:39">j</name></expr>]</index></name></expr></argument>, <argument pos:start="219:43" pos:end="219:62"><expr pos:start="219:43" pos:end="219:62"><name pos:start="219:43" pos:end="219:62"><name pos:start="219:43" pos:end="219:51">oggstream</name><operator pos:start="219:52" pos:end="219:53">-&gt;</operator><name pos:start="219:54" pos:end="219:59">header</name><index pos:start="219:60" pos:end="219:62">[<expr pos:start="219:61" pos:end="219:61"><literal type="number" pos:start="219:61" pos:end="219:61">0</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="221:25" pos:end="221:48"><expr pos:start="221:25" pos:end="221:48"><name pos:start="221:25" pos:end="221:48"><name pos:start="221:25" pos:end="221:33">oggstream</name><operator pos:start="221:34" pos:end="221:35">-&gt;</operator><name pos:start="221:36" pos:end="221:45">header_len</name><index pos:start="221:46" pos:end="221:48">[<expr pos:start="221:47" pos:end="221:47"><literal type="number" pos:start="221:47" pos:end="221:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="221:51" pos:end="221:51"><expr pos:start="221:51" pos:end="221:51"><literal type="number" pos:start="221:51" pos:end="221:51">0</literal></expr></argument>, <argument pos:start="221:54" pos:end="221:54"><expr pos:start="221:54" pos:end="221:54"><literal type="number" pos:start="221:54" pos:end="221:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:35"><expr pos:start="223:9" pos:end="223:34"><name pos:start="223:9" pos:end="223:29"><name pos:start="223:9" pos:end="223:17">oggstream</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:23">page</name><operator pos:start="223:24" pos:end="223:24">.</operator><name pos:start="223:25" pos:end="223:29">flags</name></name> <operator pos:start="223:31" pos:end="223:32">|=</operator> <literal type="number" pos:start="223:34" pos:end="223:34">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="223:37" pos:end="223:42">// bos</comment>

        <expr_stmt pos:start="225:9" pos:end="225:38"><expr pos:start="225:9" pos:end="225:37"><call pos:start="225:9" pos:end="225:37"><name pos:start="225:9" pos:end="225:23">ogg_buffer_page</name><argument_list pos:start="225:24" pos:end="225:37">(<argument pos:start="225:25" pos:end="225:25"><expr pos:start="225:25" pos:end="225:25"><name pos:start="225:25" pos:end="225:25">s</name></expr></argument>, <argument pos:start="225:28" pos:end="225:36"><expr pos:start="225:28" pos:end="225:36"><name pos:start="225:28" pos:end="225:36">oggstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="229:5" pos:end="247:5">for <control pos:start="229:9" pos:end="229:39">(<init pos:start="229:10" pos:end="229:15"><expr pos:start="229:10" pos:end="229:14"><name pos:start="229:10" pos:end="229:10">j</name> <operator pos:start="229:12" pos:end="229:12">=</operator> <literal type="number" pos:start="229:14" pos:end="229:14">0</literal></expr>;</init> <condition pos:start="229:17" pos:end="229:34"><expr pos:start="229:17" pos:end="229:33"><name pos:start="229:17" pos:end="229:17">j</name> <operator pos:start="229:19" pos:end="229:19">&lt;</operator> <name pos:start="229:21" pos:end="229:33"><name pos:start="229:21" pos:end="229:21">s</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:33">nb_streams</name></name></expr>;</condition> <incr pos:start="229:36" pos:end="229:38"><expr pos:start="229:36" pos:end="229:38"><name pos:start="229:36" pos:end="229:36">j</name><operator pos:start="229:37" pos:end="229:38">++</operator></expr></incr>)</control> <block pos:start="229:41" pos:end="247:5">{<block_content pos:start="231:9" pos:end="245:38">

        <decl_stmt pos:start="231:9" pos:end="231:37"><decl pos:start="231:9" pos:end="231:36"><type pos:start="231:9" pos:end="231:18"><name pos:start="231:9" pos:end="231:16">AVStream</name> <modifier pos:start="231:18" pos:end="231:18">*</modifier></type><name pos:start="231:19" pos:end="231:20">st</name> <init pos:start="231:22" pos:end="231:36">= <expr pos:start="231:24" pos:end="231:36"><name pos:start="231:24" pos:end="231:36"><name pos:start="231:24" pos:end="231:24">s</name><operator pos:start="231:25" pos:end="231:26">-&gt;</operator><name pos:start="231:27" pos:end="231:33">streams</name><index pos:start="231:34" pos:end="231:36">[<expr pos:start="231:35" pos:end="231:35"><name pos:start="231:35" pos:end="231:35">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="233:9" pos:end="233:52"><decl pos:start="233:9" pos:end="233:51"><type pos:start="233:9" pos:end="233:26"><name pos:start="233:9" pos:end="233:24">OGGStreamContext</name> <modifier pos:start="233:26" pos:end="233:26">*</modifier></type><name pos:start="233:27" pos:end="233:35">oggstream</name> <init pos:start="233:37" pos:end="233:51">= <expr pos:start="233:39" pos:end="233:51"><name pos:start="233:39" pos:end="233:51"><name pos:start="233:39" pos:end="233:40">st</name><operator pos:start="233:41" pos:end="233:42">-&gt;</operator><name pos:start="233:43" pos:end="233:51">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="235:9" pos:end="243:9">for <control pos:start="235:13" pos:end="235:31">(<init pos:start="235:14" pos:end="235:19"><expr pos:start="235:14" pos:end="235:18"><name pos:start="235:14" pos:end="235:14">i</name> <operator pos:start="235:16" pos:end="235:16">=</operator> <literal type="number" pos:start="235:18" pos:end="235:18">1</literal></expr>;</init> <condition pos:start="235:21" pos:end="235:26"><expr pos:start="235:21" pos:end="235:25"><name pos:start="235:21" pos:end="235:21">i</name> <operator pos:start="235:23" pos:end="235:23">&lt;</operator> <literal type="number" pos:start="235:25" pos:end="235:25">3</literal></expr>;</condition> <incr pos:start="235:28" pos:end="235:30"><expr pos:start="235:28" pos:end="235:30"><name pos:start="235:28" pos:end="235:28">i</name><operator pos:start="235:29" pos:end="235:30">++</operator></expr></incr>)</control> <block pos:start="235:33" pos:end="243:9">{<block_content pos:start="237:13" pos:end="241:64">

            <if_stmt pos:start="237:13" pos:end="241:64"><if pos:start="237:13" pos:end="241:64">if <condition pos:start="237:16" pos:end="237:54">(<expr pos:start="237:17" pos:end="237:53"><name pos:start="237:17" pos:end="237:25">oggstream</name> <operator pos:start="237:27" pos:end="237:28">&amp;&amp;</operator> <name pos:start="237:30" pos:end="237:53"><name pos:start="237:30" pos:end="237:38">oggstream</name><operator pos:start="237:39" pos:end="237:40">-&gt;</operator><name pos:start="237:41" pos:end="237:50">header_len</name><index pos:start="237:51" pos:end="237:53">[<expr pos:start="237:52" pos:end="237:52"><name pos:start="237:52" pos:end="237:52">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="241:64"><block_content pos:start="239:17" pos:end="241:64">

                <expr_stmt pos:start="239:17" pos:end="241:64"><expr pos:start="239:17" pos:end="241:63"><call pos:start="239:17" pos:end="241:63"><name pos:start="239:17" pos:end="239:31">ogg_buffer_data</name><argument_list pos:start="239:32" pos:end="241:63">(<argument pos:start="239:33" pos:end="239:33"><expr pos:start="239:33" pos:end="239:33"><name pos:start="239:33" pos:end="239:33">s</name></expr></argument>, <argument pos:start="239:36" pos:end="239:37"><expr pos:start="239:36" pos:end="239:37"><name pos:start="239:36" pos:end="239:37">st</name></expr></argument>, <argument pos:start="239:40" pos:end="239:59"><expr pos:start="239:40" pos:end="239:59"><name pos:start="239:40" pos:end="239:59"><name pos:start="239:40" pos:end="239:48">oggstream</name><operator pos:start="239:49" pos:end="239:50">-&gt;</operator><name pos:start="239:51" pos:end="239:56">header</name><index pos:start="239:57" pos:end="239:59">[<expr pos:start="239:58" pos:end="239:58"><name pos:start="239:58" pos:end="239:58">i</name></expr>]</index></name></expr></argument>,

                                <argument pos:start="241:33" pos:end="241:56"><expr pos:start="241:33" pos:end="241:56"><name pos:start="241:33" pos:end="241:56"><name pos:start="241:33" pos:end="241:41">oggstream</name><operator pos:start="241:42" pos:end="241:43">-&gt;</operator><name pos:start="241:44" pos:end="241:53">header_len</name><index pos:start="241:54" pos:end="241:56">[<expr pos:start="241:55" pos:end="241:55"><name pos:start="241:55" pos:end="241:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="241:59" pos:end="241:59"><expr pos:start="241:59" pos:end="241:59"><literal type="number" pos:start="241:59" pos:end="241:59">0</literal></expr></argument>, <argument pos:start="241:62" pos:end="241:62"><expr pos:start="241:62" pos:end="241:62"><literal type="number" pos:start="241:62" pos:end="241:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="245:9" pos:end="245:38"><expr pos:start="245:9" pos:end="245:37"><call pos:start="245:9" pos:end="245:37"><name pos:start="245:9" pos:end="245:23">ogg_buffer_page</name><argument_list pos:start="245:24" pos:end="245:37">(<argument pos:start="245:25" pos:end="245:25"><expr pos:start="245:25" pos:end="245:25"><name pos:start="245:25" pos:end="245:25">s</name></expr></argument>, <argument pos:start="245:28" pos:end="245:36"><expr pos:start="245:28" pos:end="245:36"><name pos:start="245:28" pos:end="245:36">oggstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="249:5" pos:end="249:13">return <expr pos:start="249:12" pos:end="249:12"><literal type="number" pos:start="249:12" pos:end="249:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
