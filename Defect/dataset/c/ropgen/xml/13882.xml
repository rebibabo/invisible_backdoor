<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13882.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">chr_baum_init</name><parameter_list pos:start="1:18" pos:end="1:57">(<parameter pos:start="1:19" pos:end="1:32"><decl pos:start="1:19" pos:end="1:32"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:26">QemuOpts</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:32">opts</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:56"><decl pos:start="1:35" pos:end="1:56"><type pos:start="1:35" pos:end="1:56"><name pos:start="1:35" pos:end="1:49">CharDriverState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier><modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">_chr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:16">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">BaumDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">baum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CharDriverState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">brlapi_handle_t</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:27">handle</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="11:1" pos:end="11:17">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:17">CONFIG_SDL</name></cpp:ifdef>

    <decl_stmt pos:start="13:5" pos:end="16:0"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">SDL_SysWMinfo</name></type> <name pos:start="13:19" pos:end="13:22">info</name></decl>;</decl_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">tty</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:8">baum</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:45"><name pos:start="21:12" pos:end="21:20">g_malloc0</name><argument_list pos:start="21:21" pos:end="21:45">(<argument pos:start="21:22" pos:end="21:44"><expr pos:start="21:22" pos:end="21:44"><sizeof pos:start="21:22" pos:end="21:44">sizeof<argument_list pos:start="21:28" pos:end="21:44">(<argument pos:start="21:29" pos:end="21:43"><expr pos:start="21:29" pos:end="21:43"><name pos:start="21:29" pos:end="21:43">BaumDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:8">baum</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:13">chr</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:19">chr</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:56"><name pos:start="23:23" pos:end="23:31">g_malloc0</name><argument_list pos:start="23:32" pos:end="23:56">(<argument pos:start="23:33" pos:end="23:55"><expr pos:start="23:33" pos:end="23:55"><sizeof pos:start="23:33" pos:end="23:55">sizeof<argument_list pos:start="23:39" pos:end="23:55">(<argument pos:start="23:40" pos:end="23:54"><expr pos:start="23:40" pos:end="23:54"><name pos:start="23:40" pos:end="23:54">CharDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:7">chr</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:15">opaque</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:22">baum</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">chr</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">chr_write</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:31">baum_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:7">chr</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:25">chr_accept_input</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:45">baum_accept_input</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">chr</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:18">chr_close</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:31">baum_close</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:47"><expr pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:10">handle</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:46"><name pos:start="37:14" pos:end="37:22">g_malloc0</name><argument_list pos:start="37:23" pos:end="37:46">(<argument pos:start="37:24" pos:end="37:45"><expr pos:start="37:24" pos:end="37:45"><call pos:start="37:24" pos:end="37:45"><name pos:start="37:24" pos:end="37:43">brlapi_getHandleSize</name><argument_list pos:start="37:44" pos:end="37:45">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:8">baum</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:16">brlapi</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:25">handle</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:65"><expr pos:start="43:5" pos:end="43:64"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:8">baum</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:19">brlapi_fd</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:64"><name pos:start="43:23" pos:end="43:44">brlapi__openConnection</name><argument_list pos:start="43:45" pos:end="43:64">(<argument pos:start="43:46" pos:end="43:51"><expr pos:start="43:46" pos:end="43:51"><name pos:start="43:46" pos:end="43:51">handle</name></expr></argument>, <argument pos:start="43:54" pos:end="43:57"><expr pos:start="43:54" pos:end="43:57"><name pos:start="43:54" pos:end="43:57">NULL</name></expr></argument>, <argument pos:start="43:60" pos:end="43:63"><expr pos:start="43:60" pos:end="43:63"><name pos:start="43:60" pos:end="43:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:30">(<expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:12">baum</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:23">brlapi_fd</name></name> <operator pos:start="45:25" pos:end="45:26">==</operator> <operator pos:start="45:28" pos:end="45:28">-</operator><literal type="number" pos:start="45:29" pos:end="45:29">1</literal></expr>)</condition> <block pos:start="45:32" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:25">

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><call pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:21">brlapi_perror</name><argument_list pos:start="47:22" pos:end="47:57">(<argument pos:start="47:23" pos:end="47:56"><expr pos:start="47:23" pos:end="47:56"><literal type="string" pos:start="47:23" pos:end="47:56">"baum_init: brlapi_openConnection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:25">goto <name pos:start="49:14" pos:end="49:24">fail_handle</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:87"><expr pos:start="55:5" pos:end="55:86"><name pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:8">baum</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:25">cellCount_timer</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <call pos:start="55:29" pos:end="55:86"><name pos:start="55:29" pos:end="55:45">qemu_new_timer_ns</name><argument_list pos:start="55:46" pos:end="55:86">(<argument pos:start="55:47" pos:end="55:54"><expr pos:start="55:47" pos:end="55:54"><name pos:start="55:47" pos:end="55:54">vm_clock</name></expr></argument>, <argument pos:start="55:57" pos:end="55:79"><expr pos:start="55:57" pos:end="55:79"><name pos:start="55:57" pos:end="55:79">baum_cellCount_timer_cb</name></expr></argument>, <argument pos:start="55:82" pos:end="55:85"><expr pos:start="55:82" pos:end="55:85"><name pos:start="55:82" pos:end="55:85">baum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="70:0"><if pos:start="59:5" pos:end="70:0">if <condition pos:start="59:8" pos:end="59:65">(<expr pos:start="59:9" pos:end="59:64"><call pos:start="59:9" pos:end="59:58"><name pos:start="59:9" pos:end="59:30">brlapi__getDisplaySize</name><argument_list pos:start="59:31" pos:end="59:58">(<argument pos:start="59:32" pos:end="59:37"><expr pos:start="59:32" pos:end="59:37"><name pos:start="59:32" pos:end="59:37">handle</name></expr></argument>, <argument pos:start="59:40" pos:end="59:47"><expr pos:start="59:40" pos:end="59:47"><operator pos:start="59:40" pos:end="59:40">&amp;</operator><name pos:start="59:41" pos:end="59:47"><name pos:start="59:41" pos:end="59:44">baum</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:47">x</name></name></expr></argument>, <argument pos:start="59:50" pos:end="59:57"><expr pos:start="59:50" pos:end="59:57"><operator pos:start="59:50" pos:end="59:50">&amp;</operator><name pos:start="59:51" pos:end="59:57"><name pos:start="59:51" pos:end="59:54">baum</name><operator pos:start="59:55" pos:end="59:56">-&gt;</operator><name pos:start="59:57" pos:end="59:57">y</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:60" pos:end="59:61">==</operator> <operator pos:start="59:63" pos:end="59:63">-</operator><literal type="number" pos:start="59:64" pos:end="59:64">1</literal></expr>)</condition> <block pos:start="59:67" pos:end="70:0">{<block_content pos:start="61:9" pos:end="63:18">

        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><call pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:21">brlapi_perror</name><argument_list pos:start="61:22" pos:end="61:57">(<argument pos:start="61:23" pos:end="61:56"><expr pos:start="61:23" pos:end="61:56"><literal type="string" pos:start="61:23" pos:end="61:56">"baum_init: brlapi_getDisplaySize"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="69:1" pos:end="69:17">#<cpp:directive pos:start="69:2" pos:end="69:6">ifdef</cpp:directive> <name pos:start="69:8" pos:end="69:17">CONFIG_SDL</name></cpp:ifdef>

    <expr_stmt pos:start="71:5" pos:end="71:35"><expr pos:start="71:5" pos:end="71:34"><call pos:start="71:5" pos:end="71:34"><name pos:start="71:5" pos:end="71:10">memset</name><argument_list pos:start="71:11" pos:end="71:34">(<argument pos:start="71:12" pos:end="71:16"><expr pos:start="71:12" pos:end="71:16"><operator pos:start="71:12" pos:end="71:12">&amp;</operator><name pos:start="71:13" pos:end="71:16">info</name></expr></argument>, <argument pos:start="71:19" pos:end="71:19"><expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr></argument>, <argument pos:start="71:22" pos:end="71:33"><expr pos:start="71:22" pos:end="71:33"><sizeof pos:start="71:22" pos:end="71:33">sizeof<argument_list pos:start="71:28" pos:end="71:33">(<argument pos:start="71:29" pos:end="71:32"><expr pos:start="71:29" pos:end="71:32"><name pos:start="71:29" pos:end="71:32">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:31"><expr pos:start="73:5" pos:end="73:30"><call pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:15">SDL_VERSION</name><argument_list pos:start="73:16" pos:end="73:30">(<argument pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:29"><operator pos:start="73:17" pos:end="73:17">&amp;</operator><name pos:start="73:18" pos:end="73:29"><name pos:start="73:18" pos:end="73:21">info</name><operator pos:start="73:22" pos:end="73:22">.</operator><name pos:start="73:23" pos:end="73:29">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="83:33"><if pos:start="75:5" pos:end="77:37">if <condition pos:start="75:8" pos:end="75:29">(<expr pos:start="75:9" pos:end="75:28"><call pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:21">SDL_GetWMInfo</name><argument_list pos:start="75:22" pos:end="75:28">(<argument pos:start="75:23" pos:end="75:27"><expr pos:start="75:23" pos:end="75:27"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:27">info</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:37"><block_content pos:start="77:9" pos:end="77:37">

        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:11">tty</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:36"><name pos:start="77:15" pos:end="77:18">info</name><operator pos:start="77:19" pos:end="77:19">.</operator><name pos:start="77:20" pos:end="77:23">info</name><operator pos:start="77:24" pos:end="77:24">.</operator><name pos:start="77:25" pos:end="77:27">x11</name><operator pos:start="77:28" pos:end="77:28">.</operator><name pos:start="77:29" pos:end="77:36">wmwindow</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="79:5" pos:end="83:33">else<block type="pseudo" pos:start="83:9" pos:end="83:33"><block_content pos:start="83:9" pos:end="83:33">

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:11">tty</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:32">BRLAPI_TTY_DEFAULT</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:54">(<expr pos:start="87:9" pos:end="87:53"><call pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:28">brlapi__enterTtyMode</name><argument_list pos:start="87:29" pos:end="87:47">(<argument pos:start="87:30" pos:end="87:35"><expr pos:start="87:30" pos:end="87:35"><name pos:start="87:30" pos:end="87:35">handle</name></expr></argument>, <argument pos:start="87:38" pos:end="87:40"><expr pos:start="87:38" pos:end="87:40"><name pos:start="87:38" pos:end="87:40">tty</name></expr></argument>, <argument pos:start="87:43" pos:end="87:46"><expr pos:start="87:43" pos:end="87:46"><name pos:start="87:43" pos:end="87:46">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="87:49" pos:end="87:50">==</operator> <operator pos:start="87:52" pos:end="87:52">-</operator><literal type="number" pos:start="87:53" pos:end="87:53">1</literal></expr>)</condition> <block pos:start="87:56" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:18">

        <expr_stmt pos:start="89:9" pos:end="89:56"><expr pos:start="89:9" pos:end="89:55"><call pos:start="89:9" pos:end="89:55"><name pos:start="89:9" pos:end="89:21">brlapi_perror</name><argument_list pos:start="89:22" pos:end="89:55">(<argument pos:start="89:23" pos:end="89:54"><expr pos:start="89:23" pos:end="89:54"><literal type="string" pos:start="89:23" pos:end="89:54">"baum_init: brlapi_enterTtyMode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:18">goto <name pos:start="91:14" pos:end="91:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:68"><expr pos:start="97:5" pos:end="97:67"><call pos:start="97:5" pos:end="97:67"><name pos:start="97:5" pos:end="97:23">qemu_set_fd_handler</name><argument_list pos:start="97:24" pos:end="97:67">(<argument pos:start="97:25" pos:end="97:39"><expr pos:start="97:25" pos:end="97:39"><name pos:start="97:25" pos:end="97:39"><name pos:start="97:25" pos:end="97:28">baum</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:39">brlapi_fd</name></name></expr></argument>, <argument pos:start="97:42" pos:end="97:54"><expr pos:start="97:42" pos:end="97:54"><name pos:start="97:42" pos:end="97:54">baum_chr_read</name></expr></argument>, <argument pos:start="97:57" pos:end="97:60"><expr pos:start="97:57" pos:end="97:60"><name pos:start="97:57" pos:end="97:60">NULL</name></expr></argument>, <argument pos:start="97:63" pos:end="97:66"><expr pos:start="97:63" pos:end="97:66"><name pos:start="97:63" pos:end="97:66">baum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:31"><expr pos:start="101:5" pos:end="101:30"><call pos:start="101:5" pos:end="101:30"><name pos:start="101:5" pos:end="101:25">qemu_chr_generic_open</name><argument_list pos:start="101:26" pos:end="101:30">(<argument pos:start="101:27" pos:end="101:29"><expr pos:start="101:27" pos:end="101:29"><name pos:start="101:27" pos:end="101:29">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:16"><expr pos:start="105:5" pos:end="105:15"><operator pos:start="105:5" pos:end="105:5">*</operator><name pos:start="105:6" pos:end="105:9">_chr</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <name pos:start="105:13" pos:end="105:15">chr</name></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>



<label pos:start="111:1" pos:end="111:5"><name pos:start="111:1" pos:end="111:4">fail</name>:</label>

    <expr_stmt pos:start="113:5" pos:end="113:43"><expr pos:start="113:5" pos:end="113:42"><call pos:start="113:5" pos:end="113:42"><name pos:start="113:5" pos:end="113:19">qemu_free_timer</name><argument_list pos:start="113:20" pos:end="113:42">(<argument pos:start="113:21" pos:end="113:41"><expr pos:start="113:21" pos:end="113:41"><name pos:start="113:21" pos:end="113:41"><name pos:start="113:21" pos:end="113:24">baum</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:41">cellCount_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:36"><expr pos:start="115:5" pos:end="115:35"><call pos:start="115:5" pos:end="115:35"><name pos:start="115:5" pos:end="115:27">brlapi__closeConnection</name><argument_list pos:start="115:28" pos:end="115:35">(<argument pos:start="115:29" pos:end="115:34"><expr pos:start="115:29" pos:end="115:34"><name pos:start="115:29" pos:end="115:34">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="117:1" pos:end="117:12"><name pos:start="117:1" pos:end="117:11">fail_handle</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:19"><expr pos:start="119:5" pos:end="119:18"><call pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:10">g_free</name><argument_list pos:start="119:11" pos:end="119:18">(<argument pos:start="119:12" pos:end="119:17"><expr pos:start="119:12" pos:end="119:17"><name pos:start="119:12" pos:end="119:17">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:16"><expr pos:start="121:5" pos:end="121:15"><call pos:start="121:5" pos:end="121:15"><name pos:start="121:5" pos:end="121:10">g_free</name><argument_list pos:start="121:11" pos:end="121:15">(<argument pos:start="121:12" pos:end="121:14"><expr pos:start="121:12" pos:end="121:14"><name pos:start="121:12" pos:end="121:14">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:17"><expr pos:start="123:5" pos:end="123:16"><call pos:start="123:5" pos:end="123:16"><name pos:start="123:5" pos:end="123:10">g_free</name><argument_list pos:start="123:11" pos:end="123:16">(<argument pos:start="123:12" pos:end="123:15"><expr pos:start="123:12" pos:end="123:15"><name pos:start="123:12" pos:end="123:15">baum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="125:5" pos:end="125:16">return <expr pos:start="125:12" pos:end="125:15"><operator pos:start="125:12" pos:end="125:12">-</operator><name pos:start="125:13" pos:end="125:15">EIO</name></expr>;</return>

</block_content>}</block></function>
</unit>
