<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1240.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">ff_af_queue_add</name><parameter_list pos:start="1:20" pos:end="1:59">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:35">AudioFrameQueue</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">afq</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:55">AVFrame</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AudioFrame</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:25">new_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AudioFrame</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:25">queue_end</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:31">afq</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:44">frame_queue</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:35">/* find the end of the queue */</comment>

    <while pos:start="13:5" pos:end="15:36">while <condition pos:start="13:11" pos:end="13:40">(<expr pos:start="13:12" pos:end="13:39"><name pos:start="13:12" pos:end="13:20">queue_end</name> <operator pos:start="13:22" pos:end="13:23">&amp;&amp;</operator> <name pos:start="13:25" pos:end="13:39"><name pos:start="13:25" pos:end="13:33">queue_end</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:39">next</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:36"><block_content pos:start="15:9" pos:end="15:36">

        <expr_stmt pos:start="15:9" pos:end="15:36"><expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:17">queue_end</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:35"><name pos:start="15:21" pos:end="15:29">queue_end</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">next</name></name></expr>;</expr_stmt></block_content></block></while>



    <comment type="block" pos:start="19:5" pos:end="19:40">/* allocate new frame queue entry */</comment>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:53">(<expr pos:start="21:9" pos:end="21:52"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:19">new_frame</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <call pos:start="21:23" pos:end="21:51"><name pos:start="21:23" pos:end="21:31">av_malloc</name><argument_list pos:start="21:32" pos:end="21:51">(<argument pos:start="21:33" pos:end="21:50"><expr pos:start="21:33" pos:end="21:50"><sizeof pos:start="21:33" pos:end="21:50">sizeof<argument_list pos:start="21:39" pos:end="21:50">(<argument pos:start="21:40" pos:end="21:49"><expr pos:start="21:40" pos:end="21:49"><operator pos:start="21:40" pos:end="21:40">*</operator><name pos:start="21:41" pos:end="21:49">new_frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="21:52" pos:end="21:52">)</operator></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:30">/* get frame parameters */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:13">new_frame</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">next</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:13">new_frame</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:23">duration</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:39"><name pos:start="31:27" pos:end="31:27">f</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:39">nb_samples</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="49:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:33">(<expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:9">f</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">pts</name></name> <operator pos:start="33:16" pos:end="33:17">!=</operator> <name pos:start="33:19" pos:end="33:32">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="33:35" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:61">

        <expr_stmt pos:start="35:9" pos:end="39:82"><expr pos:start="35:9" pos:end="39:81"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:17">new_frame</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:22">pts</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <macro pos:start="35:26" pos:end="39:81"><name pos:start="35:26" pos:end="35:37">av_rescale_q</name><argument_list pos:start="35:38" pos:end="39:81">(<argument pos:start="35:39" pos:end="35:44">f-&gt;pts</argument>,

                                      <argument pos:start="37:39" pos:end="37:59">afq-&gt;avctx-&gt;time_base</argument>,

                                      <argument pos:start="39:39" pos:end="39:53">(AVRational){ <literal type="number" pos:start="39:53" pos:end="39:53">1</literal></argument>, <argument pos:start="39:56" pos:end="39:80">afq-&gt;avctx-&gt;sample_rate }</argument>)</argument_list></macro></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:61"><expr pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">afq</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:21">next_pts</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:33">new_frame</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:38">pts</name></name> <operator pos:start="41:40" pos:end="41:40">+</operator> <name pos:start="41:42" pos:end="41:60"><name pos:start="41:42" pos:end="41:50">new_frame</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:60">duration</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="49:5">else <block pos:start="43:12" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:40">

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:17">new_frame</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:22">pts</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:40"><expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:11">afq</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:21">next_pts</name></name>  <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:47">/* add new frame to the end of the queue */</comment>

    <if_stmt pos:start="55:5" pos:end="61:36"><if pos:start="55:5" pos:end="57:37">if <condition pos:start="55:8" pos:end="55:19">(<expr pos:start="55:9" pos:end="55:18"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:18">queue_end</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:37"><block_content pos:start="57:9" pos:end="57:37">

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:11">afq</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:24">frame_queue</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:36">new_frame</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="59:5" pos:end="61:36">else<block type="pseudo" pos:start="61:9" pos:end="61:36"><block_content pos:start="61:9" pos:end="61:36">

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:17">queue_end</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:23">next</name></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:35">new_frame</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:32">/* add frame sample count */</comment>

    <expr_stmt pos:start="67:5" pos:end="72:0"><expr pos:start="67:5" pos:end="67:43"><name pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:7">afq</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:26">remaining_samples</name></name> <operator pos:start="67:28" pos:end="67:29">+=</operator> <name pos:start="67:31" pos:end="67:43"><name pos:start="67:31" pos:end="67:31">f</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:43">nb_samples</name></name></expr>;</expr_stmt>



<cpp:ifdef pos:start="71:1" pos:end="71:12">#<cpp:directive pos:start="71:2" pos:end="71:6">ifdef</cpp:directive> <name pos:start="71:8" pos:end="71:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="73:5" pos:end="76:0"><expr pos:start="73:5" pos:end="73:30"><call pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:25">ff_af_queue_log_state</name><argument_list pos:start="73:26" pos:end="73:30">(<argument pos:start="73:27" pos:end="73:29"><expr pos:start="73:27" pos:end="73:29"><name pos:start="73:27" pos:end="73:29">afq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
