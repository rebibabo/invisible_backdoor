<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14055.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:39">read_specific_config</name><parameter_list pos:start="1:40" pos:end="1:59">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:53">ALSDecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="277:1">{<block_content pos:start="5:5" pos:end="275:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">GetBitContext</name></type> <name pos:start="5:19" pos:end="5:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:20">ht_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:24">config_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20">MPEG4AudioConfig</name></type> <name pos:start="11:22" pos:end="11:25">m4ac</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">ALSSpecificConfig</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:28">sconf</name> <init pos:start="13:30" pos:end="13:42">= <expr pos:start="13:32" pos:end="13:42"><operator pos:start="13:32" pos:end="13:32">&amp;</operator><name pos:start="13:33" pos:end="13:42"><name pos:start="13:33" pos:end="13:35">ctx</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:42">sconf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:25">avctx</name>    <init pos:start="15:30" pos:end="15:41">= <expr pos:start="15:32" pos:end="15:41"><name pos:start="15:32" pos:end="15:41"><name pos:start="15:32" pos:end="15:34">ctx</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:41">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:47"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:19">als_id</name></decl>, <decl pos:start="17:22" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:22" pos:end="17:32">header_size</name></decl>, <decl pos:start="17:35" pos:end="17:46"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:35" pos:end="17:46">trailer_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:68"><expr pos:start="21:5" pos:end="21:67"><call pos:start="21:5" pos:end="21:67"><name pos:start="21:5" pos:end="21:17">init_get_bits</name><argument_list pos:start="21:18" pos:end="21:67">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:21">gb</name></expr></argument>, <argument pos:start="21:24" pos:end="21:39"><expr pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:39"><name pos:start="21:24" pos:end="21:28">avctx</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:39">extradata</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:66"><expr pos:start="21:42" pos:end="21:66"><name pos:start="21:42" pos:end="21:62"><name pos:start="21:42" pos:end="21:46">avctx</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:62">extradata_size</name></name> <operator pos:start="21:64" pos:end="21:64">*</operator> <literal type="number" pos:start="21:66" pos:end="21:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:79"><expr pos:start="25:5" pos:end="27:78"><name pos:start="25:5" pos:end="25:17">config_offset</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="27:78"><name pos:start="25:21" pos:end="25:48">avpriv_mpeg4audio_get_config</name><argument_list pos:start="25:49" pos:end="27:78">(<argument pos:start="25:50" pos:end="25:54"><expr pos:start="25:50" pos:end="25:54"><operator pos:start="25:50" pos:end="25:50">&amp;</operator><name pos:start="25:51" pos:end="25:54">m4ac</name></expr></argument>, <argument pos:start="25:57" pos:end="25:72"><expr pos:start="25:57" pos:end="25:72"><name pos:start="25:57" pos:end="25:72"><name pos:start="25:57" pos:end="25:61">avctx</name><operator pos:start="25:62" pos:end="25:63">-&gt;</operator><name pos:start="25:64" pos:end="25:72">extradata</name></name></expr></argument>,

                                                 <argument pos:start="27:50" pos:end="27:74"><expr pos:start="27:50" pos:end="27:74"><name pos:start="27:50" pos:end="27:70"><name pos:start="27:50" pos:end="27:54">avctx</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:70">extradata_size</name></name> <operator pos:start="27:72" pos:end="27:72">*</operator> <literal type="number" pos:start="27:74" pos:end="27:74">8</literal></expr></argument>, <argument pos:start="27:77" pos:end="27:77"><expr pos:start="27:77" pos:end="27:77"><literal type="number" pos:start="27:77" pos:end="27:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:26">(<expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:21">config_offset</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><call pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:18">skip_bits_long</name><argument_list pos:start="37:19" pos:end="37:38">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:22">gb</name></expr></argument>, <argument pos:start="37:25" pos:end="37:37"><expr pos:start="37:25" pos:end="37:37"><name pos:start="37:25" pos:end="37:37">config_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:39">(<expr pos:start="41:9" pos:end="41:38"><call pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:21">get_bits_left</name><argument_list pos:start="41:22" pos:end="41:26">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><operator pos:start="41:23" pos:end="41:23">&amp;</operator><name pos:start="41:24" pos:end="41:25">gb</name></expr></argument>)</argument_list></call> <operator pos:start="41:28" pos:end="41:28">&lt;</operator> <operator pos:start="41:30" pos:end="41:30">(</operator><literal type="number" pos:start="41:31" pos:end="41:32">30</literal> <operator pos:start="41:34" pos:end="41:35">&lt;&lt;</operator> <literal type="number" pos:start="41:37" pos:end="41:37">3</literal><operator pos:start="41:38" pos:end="41:38">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="47:5" pos:end="47:27">// read the fixed items</comment>

    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:10">als_id</name>                      <operator pos:start="49:33" pos:end="49:33">=</operator> <call pos:start="49:35" pos:end="49:56"><name pos:start="49:35" pos:end="49:47">get_bits_long</name><argument_list pos:start="49:48" pos:end="49:56">(<argument pos:start="49:49" pos:end="49:51"><expr pos:start="49:49" pos:end="49:51"><operator pos:start="49:49" pos:end="49:49">&amp;</operator><name pos:start="49:50" pos:end="49:51">gb</name></expr></argument>, <argument pos:start="49:54" pos:end="49:55"><expr pos:start="49:54" pos:end="49:55"><literal type="number" pos:start="49:54" pos:end="49:55">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:9">avctx</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:22">sample_rate</name></name>          <operator pos:start="51:33" pos:end="51:33">=</operator> <name pos:start="51:35" pos:end="51:50"><name pos:start="51:35" pos:end="51:38">m4ac</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:50">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><call pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:18">skip_bits_long</name><argument_list pos:start="53:19" pos:end="53:27">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:22">gb</name></expr></argument>, <argument pos:start="53:25" pos:end="53:26"><expr pos:start="53:25" pos:end="53:26"><literal type="number" pos:start="53:25" pos:end="53:26">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="53:30" pos:end="53:57">// sample rate already known</comment>

    <expr_stmt pos:start="55:5" pos:end="55:57"><expr pos:start="55:5" pos:end="55:56"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:9">sconf</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">samples</name></name>              <operator pos:start="55:33" pos:end="55:33">=</operator> <call pos:start="55:35" pos:end="55:56"><name pos:start="55:35" pos:end="55:47">get_bits_long</name><argument_list pos:start="55:48" pos:end="55:56">(<argument pos:start="55:49" pos:end="55:51"><expr pos:start="55:49" pos:end="55:51"><operator pos:start="55:49" pos:end="55:49">&amp;</operator><name pos:start="55:50" pos:end="55:51">gb</name></expr></argument>, <argument pos:start="55:54" pos:end="55:55"><expr pos:start="55:54" pos:end="55:55"><literal type="number" pos:start="55:54" pos:end="55:55">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:48"><expr pos:start="57:5" pos:end="57:47"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:9">avctx</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:19">channels</name></name>             <operator pos:start="57:33" pos:end="57:33">=</operator> <name pos:start="57:35" pos:end="57:47"><name pos:start="57:35" pos:end="57:38">m4ac</name><operator pos:start="57:39" pos:end="57:39">.</operator><name pos:start="57:40" pos:end="57:47">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><call pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:13">skip_bits</name><argument_list pos:start="59:14" pos:end="59:22">(<argument pos:start="59:15" pos:end="59:17"><expr pos:start="59:15" pos:end="59:17"><operator pos:start="59:15" pos:end="59:15">&amp;</operator><name pos:start="59:16" pos:end="59:17">gb</name></expr></argument>, <argument pos:start="59:20" pos:end="59:21"><expr pos:start="59:20" pos:end="59:21"><literal type="number" pos:start="59:20" pos:end="59:21">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="line" pos:start="59:30" pos:end="59:64">// number of channels already known</comment>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><call pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:13">skip_bits</name><argument_list pos:start="61:14" pos:end="61:21">(<argument pos:start="61:15" pos:end="61:17"><expr pos:start="61:15" pos:end="61:17"><operator pos:start="61:15" pos:end="61:15">&amp;</operator><name pos:start="61:16" pos:end="61:17">gb</name></expr></argument>, <argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="61:30" pos:end="61:46">// skip file_type</comment>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:9">sconf</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:21">resolution</name></name>           <operator pos:start="63:33" pos:end="63:33">=</operator> <call pos:start="63:35" pos:end="63:50"><name pos:start="63:35" pos:end="63:42">get_bits</name><argument_list pos:start="63:43" pos:end="63:50">(<argument pos:start="63:44" pos:end="63:46"><expr pos:start="63:44" pos:end="63:46"><operator pos:start="63:44" pos:end="63:44">&amp;</operator><name pos:start="63:45" pos:end="63:46">gb</name></expr></argument>, <argument pos:start="63:49" pos:end="63:49"><expr pos:start="63:49" pos:end="63:49"><literal type="number" pos:start="63:49" pos:end="63:49">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:49"><expr pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:9">sconf</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:19">floating</name></name>             <operator pos:start="65:33" pos:end="65:33">=</operator> <call pos:start="65:35" pos:end="65:48"><name pos:start="65:35" pos:end="65:43">get_bits1</name><argument_list pos:start="65:44" pos:end="65:48">(<argument pos:start="65:45" pos:end="65:47"><expr pos:start="65:45" pos:end="65:47"><operator pos:start="65:45" pos:end="65:45">&amp;</operator><name pos:start="65:46" pos:end="65:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:49"><expr pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:9">sconf</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:20">msb_first</name></name>            <operator pos:start="67:33" pos:end="67:33">=</operator> <call pos:start="67:35" pos:end="67:48"><name pos:start="67:35" pos:end="67:43">get_bits1</name><argument_list pos:start="67:44" pos:end="67:48">(<argument pos:start="67:45" pos:end="67:47"><expr pos:start="67:45" pos:end="67:47"><operator pos:start="67:45" pos:end="67:45">&amp;</operator><name pos:start="67:46" pos:end="67:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:56"><expr pos:start="69:5" pos:end="69:55"><name pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:9">sconf</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:23">frame_length</name></name>         <operator pos:start="69:33" pos:end="69:33">=</operator> <call pos:start="69:35" pos:end="69:51"><name pos:start="69:35" pos:end="69:42">get_bits</name><argument_list pos:start="69:43" pos:end="69:51">(<argument pos:start="69:44" pos:end="69:46"><expr pos:start="69:44" pos:end="69:46"><operator pos:start="69:44" pos:end="69:44">&amp;</operator><name pos:start="69:45" pos:end="69:46">gb</name></expr></argument>, <argument pos:start="69:49" pos:end="69:50"><expr pos:start="69:49" pos:end="69:50"><literal type="number" pos:start="69:49" pos:end="69:50">16</literal></expr></argument>)</argument_list></call> <operator pos:start="69:53" pos:end="69:53">+</operator> <literal type="number" pos:start="69:55" pos:end="69:55">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:51"><expr pos:start="71:5" pos:end="71:50"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:9">sconf</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:22">ra_distance</name></name>          <operator pos:start="71:33" pos:end="71:33">=</operator> <call pos:start="71:35" pos:end="71:50"><name pos:start="71:35" pos:end="71:42">get_bits</name><argument_list pos:start="71:43" pos:end="71:50">(<argument pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><operator pos:start="71:44" pos:end="71:44">&amp;</operator><name pos:start="71:45" pos:end="71:46">gb</name></expr></argument>, <argument pos:start="71:49" pos:end="71:49"><expr pos:start="71:49" pos:end="71:49"><literal type="number" pos:start="71:49" pos:end="71:49">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:51"><expr pos:start="73:5" pos:end="73:50"><name pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:9">sconf</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:18">ra_flag</name></name>              <operator pos:start="73:33" pos:end="73:33">=</operator> <call pos:start="73:35" pos:end="73:50"><name pos:start="73:35" pos:end="73:42">get_bits</name><argument_list pos:start="73:43" pos:end="73:50">(<argument pos:start="73:44" pos:end="73:46"><expr pos:start="73:44" pos:end="73:46"><operator pos:start="73:44" pos:end="73:44">&amp;</operator><name pos:start="73:45" pos:end="73:46">gb</name></expr></argument>, <argument pos:start="73:49" pos:end="73:49"><expr pos:start="73:49" pos:end="73:49"><literal type="number" pos:start="73:49" pos:end="73:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:49"><expr pos:start="75:5" pos:end="75:48"><name pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:9">sconf</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:22">adapt_order</name></name>          <operator pos:start="75:33" pos:end="75:33">=</operator> <call pos:start="75:35" pos:end="75:48"><name pos:start="75:35" pos:end="75:43">get_bits1</name><argument_list pos:start="75:44" pos:end="75:48">(<argument pos:start="75:45" pos:end="75:47"><expr pos:start="75:45" pos:end="75:47"><operator pos:start="75:45" pos:end="75:45">&amp;</operator><name pos:start="75:46" pos:end="75:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:51"><expr pos:start="77:5" pos:end="77:50"><name pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:9">sconf</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:21">coef_table</name></name>           <operator pos:start="77:33" pos:end="77:33">=</operator> <call pos:start="77:35" pos:end="77:50"><name pos:start="77:35" pos:end="77:42">get_bits</name><argument_list pos:start="77:43" pos:end="77:50">(<argument pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><operator pos:start="77:44" pos:end="77:44">&amp;</operator><name pos:start="77:45" pos:end="77:46">gb</name></expr></argument>, <argument pos:start="77:49" pos:end="77:49"><expr pos:start="77:49" pos:end="77:49"><literal type="number" pos:start="77:49" pos:end="77:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:49"><expr pos:start="79:5" pos:end="79:48"><name pos:start="79:5" pos:end="79:31"><name pos:start="79:5" pos:end="79:9">sconf</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:31">long_term_prediction</name></name> <operator pos:start="79:33" pos:end="79:33">=</operator> <call pos:start="79:35" pos:end="79:48"><name pos:start="79:35" pos:end="79:43">get_bits1</name><argument_list pos:start="79:44" pos:end="79:48">(<argument pos:start="79:45" pos:end="79:47"><expr pos:start="79:45" pos:end="79:47"><operator pos:start="79:45" pos:end="79:45">&amp;</operator><name pos:start="79:46" pos:end="79:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:52"><expr pos:start="81:5" pos:end="81:51"><name pos:start="81:5" pos:end="81:20"><name pos:start="81:5" pos:end="81:9">sconf</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:20">max_order</name></name>            <operator pos:start="81:33" pos:end="81:33">=</operator> <call pos:start="81:35" pos:end="81:51"><name pos:start="81:35" pos:end="81:42">get_bits</name><argument_list pos:start="81:43" pos:end="81:51">(<argument pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><operator pos:start="81:44" pos:end="81:44">&amp;</operator><name pos:start="81:45" pos:end="81:46">gb</name></expr></argument>, <argument pos:start="81:49" pos:end="81:50"><expr pos:start="81:49" pos:end="81:50"><literal type="number" pos:start="81:49" pos:end="81:50">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:51"><expr pos:start="83:5" pos:end="83:50"><name pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:9">sconf</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:26">block_switching</name></name>      <operator pos:start="83:33" pos:end="83:33">=</operator> <call pos:start="83:35" pos:end="83:50"><name pos:start="83:35" pos:end="83:42">get_bits</name><argument_list pos:start="83:43" pos:end="83:50">(<argument pos:start="83:44" pos:end="83:46"><expr pos:start="83:44" pos:end="83:46"><operator pos:start="83:44" pos:end="83:44">&amp;</operator><name pos:start="83:45" pos:end="83:46">gb</name></expr></argument>, <argument pos:start="83:49" pos:end="83:49"><expr pos:start="83:49" pos:end="83:49"><literal type="number" pos:start="83:49" pos:end="83:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:49"><expr pos:start="85:5" pos:end="85:48"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:9">sconf</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:15">bgmc</name></name>                 <operator pos:start="85:33" pos:end="85:33">=</operator> <call pos:start="85:35" pos:end="85:48"><name pos:start="85:35" pos:end="85:43">get_bits1</name><argument_list pos:start="85:44" pos:end="85:48">(<argument pos:start="85:45" pos:end="85:47"><expr pos:start="85:45" pos:end="85:47"><operator pos:start="85:45" pos:end="85:45">&amp;</operator><name pos:start="85:46" pos:end="85:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:49"><expr pos:start="87:5" pos:end="87:48"><name pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:9">sconf</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:18">sb_part</name></name>              <operator pos:start="87:33" pos:end="87:33">=</operator> <call pos:start="87:35" pos:end="87:48"><name pos:start="87:35" pos:end="87:43">get_bits1</name><argument_list pos:start="87:44" pos:end="87:48">(<argument pos:start="87:45" pos:end="87:47"><expr pos:start="87:45" pos:end="87:47"><operator pos:start="87:45" pos:end="87:45">&amp;</operator><name pos:start="87:46" pos:end="87:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:49"><expr pos:start="89:5" pos:end="89:48"><name pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:9">sconf</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:23">joint_stereo</name></name>         <operator pos:start="89:33" pos:end="89:33">=</operator> <call pos:start="89:35" pos:end="89:48"><name pos:start="89:35" pos:end="89:43">get_bits1</name><argument_list pos:start="89:44" pos:end="89:48">(<argument pos:start="89:45" pos:end="89:47"><expr pos:start="89:45" pos:end="89:47"><operator pos:start="89:45" pos:end="89:45">&amp;</operator><name pos:start="89:46" pos:end="89:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:49"><expr pos:start="91:5" pos:end="91:48"><name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:9">sconf</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:20">mc_coding</name></name>            <operator pos:start="91:33" pos:end="91:33">=</operator> <call pos:start="91:35" pos:end="91:48"><name pos:start="91:35" pos:end="91:43">get_bits1</name><argument_list pos:start="91:44" pos:end="91:48">(<argument pos:start="91:45" pos:end="91:47"><expr pos:start="91:45" pos:end="91:47"><operator pos:start="91:45" pos:end="91:45">&amp;</operator><name pos:start="91:46" pos:end="91:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:49"><expr pos:start="93:5" pos:end="93:48"><name pos:start="93:5" pos:end="93:22"><name pos:start="93:5" pos:end="93:9">sconf</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:22">chan_config</name></name>          <operator pos:start="93:33" pos:end="93:33">=</operator> <call pos:start="93:35" pos:end="93:48"><name pos:start="93:35" pos:end="93:43">get_bits1</name><argument_list pos:start="93:44" pos:end="93:48">(<argument pos:start="93:45" pos:end="93:47"><expr pos:start="93:45" pos:end="93:47"><operator pos:start="93:45" pos:end="93:45">&amp;</operator><name pos:start="93:46" pos:end="93:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:49"><expr pos:start="95:5" pos:end="95:48"><name pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:9">sconf</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:20">chan_sort</name></name>            <operator pos:start="95:33" pos:end="95:33">=</operator> <call pos:start="95:35" pos:end="95:48"><name pos:start="95:35" pos:end="95:43">get_bits1</name><argument_list pos:start="95:44" pos:end="95:48">(<argument pos:start="95:45" pos:end="95:47"><expr pos:start="95:45" pos:end="95:47"><operator pos:start="95:45" pos:end="95:45">&amp;</operator><name pos:start="95:46" pos:end="95:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:49"><expr pos:start="97:5" pos:end="97:48"><name pos:start="97:5" pos:end="97:22"><name pos:start="97:5" pos:end="97:9">sconf</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:22">crc_enabled</name></name>          <operator pos:start="97:33" pos:end="97:33">=</operator> <call pos:start="97:35" pos:end="97:48"><name pos:start="97:35" pos:end="97:43">get_bits1</name><argument_list pos:start="97:44" pos:end="97:48">(<argument pos:start="97:45" pos:end="97:47"><expr pos:start="97:45" pos:end="97:47"><operator pos:start="97:45" pos:end="97:45">&amp;</operator><name pos:start="97:46" pos:end="97:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:49"><expr pos:start="99:5" pos:end="99:48"><name pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:9">sconf</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:17">rlslms</name></name>               <operator pos:start="99:33" pos:end="99:33">=</operator> <call pos:start="99:35" pos:end="99:48"><name pos:start="99:35" pos:end="99:43">get_bits1</name><argument_list pos:start="99:44" pos:end="99:48">(<argument pos:start="99:45" pos:end="99:47"><expr pos:start="99:45" pos:end="99:47"><operator pos:start="99:45" pos:end="99:45">&amp;</operator><name pos:start="99:46" pos:end="99:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:22"><expr pos:start="101:5" pos:end="101:21"><call pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:13">skip_bits</name><argument_list pos:start="101:14" pos:end="101:21">(<argument pos:start="101:15" pos:end="101:17"><expr pos:start="101:15" pos:end="101:17"><operator pos:start="101:15" pos:end="101:15">&amp;</operator><name pos:start="101:16" pos:end="101:17">gb</name></expr></argument>, <argument pos:start="101:20" pos:end="101:20"><expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="101:30" pos:end="101:52">// skip 5 reserved bits</comment>

    <expr_stmt pos:start="103:5" pos:end="103:20"><expr pos:start="103:5" pos:end="103:19"><call pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:14">skip_bits1</name><argument_list pos:start="103:15" pos:end="103:19">(<argument pos:start="103:16" pos:end="103:18"><expr pos:start="103:16" pos:end="103:18"><operator pos:start="103:16" pos:end="103:16">&amp;</operator><name pos:start="103:17" pos:end="103:18">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="line" pos:start="103:30" pos:end="103:53">// skip aux_data_enabled</comment>





    <comment type="line" pos:start="109:5" pos:end="109:41">// check for ALSSpecificConfig struct</comment>

    <if_stmt pos:start="111:5" pos:end="113:18"><if pos:start="111:5" pos:end="113:18">if <condition pos:start="111:8" pos:end="111:44">(<expr pos:start="111:9" pos:end="111:43"><name pos:start="111:9" pos:end="111:14">als_id</name> <operator pos:start="111:16" pos:end="111:17">!=</operator> <call pos:start="111:19" pos:end="111:43"><name pos:start="111:19" pos:end="111:25">MKBETAG</name><argument_list pos:start="111:26" pos:end="111:43">(<argument pos:start="111:27" pos:end="111:29"><expr pos:start="111:27" pos:end="111:29"><literal type="char" pos:start="111:27" pos:end="111:29">'A'</literal></expr></argument>,<argument pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><literal type="char" pos:start="111:31" pos:end="111:33">'L'</literal></expr></argument>,<argument pos:start="111:35" pos:end="111:37"><expr pos:start="111:35" pos:end="111:37"><literal type="char" pos:start="111:35" pos:end="111:37">'S'</literal></expr></argument>,<argument pos:start="111:39" pos:end="111:42"><expr pos:start="111:39" pos:end="111:42"><literal type="char" pos:start="111:39" pos:end="111:42">'\0'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:18"><block_content pos:start="113:9" pos:end="113:18">

        <return pos:start="113:9" pos:end="113:18">return <expr pos:start="113:16" pos:end="113:17"><operator pos:start="113:16" pos:end="113:16">-</operator><literal type="number" pos:start="113:17" pos:end="113:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:48"><expr pos:start="117:5" pos:end="117:47"><name pos:start="117:5" pos:end="117:25"><name pos:start="117:5" pos:end="117:7">ctx</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:25">cur_frame_length</name></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:47"><name pos:start="117:29" pos:end="117:33">sconf</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:47">frame_length</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="121:5" pos:end="121:26">// read channel config</comment>

    <if_stmt pos:start="123:5" pos:end="125:52"><if pos:start="123:5" pos:end="125:52">if <condition pos:start="123:8" pos:end="123:27">(<expr pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:13">sconf</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:26">chan_config</name></name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:52"><block_content pos:start="125:9" pos:end="125:52">

        <expr_stmt pos:start="125:9" pos:end="125:52"><expr pos:start="125:9" pos:end="125:51"><name pos:start="125:9" pos:end="125:31"><name pos:start="125:9" pos:end="125:13">sconf</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:31">chan_config_info</name></name> <operator pos:start="125:33" pos:end="125:33">=</operator> <call pos:start="125:35" pos:end="125:51"><name pos:start="125:35" pos:end="125:42">get_bits</name><argument_list pos:start="125:43" pos:end="125:51">(<argument pos:start="125:44" pos:end="125:46"><expr pos:start="125:44" pos:end="125:46"><operator pos:start="125:44" pos:end="125:44">&amp;</operator><name pos:start="125:45" pos:end="125:46">gb</name></expr></argument>, <argument pos:start="125:49" pos:end="125:50"><expr pos:start="125:49" pos:end="125:50"><literal type="number" pos:start="125:49" pos:end="125:50">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="127:5" pos:end="127:50">// TODO: use this to set avctx-&gt;channel_layout</comment>





    <comment type="line" pos:start="133:5" pos:end="133:27">// read channel sorting</comment>

    <if_stmt pos:start="135:5" pos:end="183:5"><if pos:start="135:5" pos:end="183:5">if <condition pos:start="135:8" pos:end="135:48">(<expr pos:start="135:9" pos:end="135:47"><name pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:13">sconf</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:24">chan_sort</name></name> <operator pos:start="135:26" pos:end="135:27">&amp;&amp;</operator> <name pos:start="135:29" pos:end="135:43"><name pos:start="135:29" pos:end="135:33">avctx</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:43">channels</name></name> <operator pos:start="135:45" pos:end="135:45">&gt;</operator> <literal type="number" pos:start="135:47" pos:end="135:47">1</literal></expr>)</condition> <block pos:start="135:50" pos:end="183:5">{<block_content pos:start="137:9" pos:end="181:28">

        <decl_stmt pos:start="137:9" pos:end="137:58"><decl pos:start="137:9" pos:end="137:57"><type pos:start="137:9" pos:end="137:11"><name pos:start="137:9" pos:end="137:11">int</name></type> <name pos:start="137:13" pos:end="137:25">chan_pos_bits</name> <init pos:start="137:27" pos:end="137:57">= <expr pos:start="137:29" pos:end="137:57"><call pos:start="137:29" pos:end="137:57"><name pos:start="137:29" pos:end="137:40">av_ceil_log2</name><argument_list pos:start="137:41" pos:end="137:57">(<argument pos:start="137:42" pos:end="137:56"><expr pos:start="137:42" pos:end="137:56"><name pos:start="137:42" pos:end="137:56"><name pos:start="137:42" pos:end="137:46">avctx</name><operator pos:start="137:47" pos:end="137:48">-&gt;</operator><name pos:start="137:49" pos:end="137:56">channels</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="139:63"><decl pos:start="139:9" pos:end="139:62"><type pos:start="139:9" pos:end="139:11"><name pos:start="139:9" pos:end="139:11">int</name></type> <name pos:start="139:13" pos:end="139:23">bits_needed</name>  <init pos:start="139:26" pos:end="139:62">= <expr pos:start="139:28" pos:end="139:62"><name pos:start="139:28" pos:end="139:42"><name pos:start="139:28" pos:end="139:32">avctx</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:42">channels</name></name> <operator pos:start="139:44" pos:end="139:44">*</operator> <name pos:start="139:46" pos:end="139:58">chan_pos_bits</name> <operator pos:start="139:60" pos:end="139:60">+</operator> <literal type="number" pos:start="139:62" pos:end="139:62">7</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="141:9" pos:end="143:22"><if pos:start="141:9" pos:end="143:22">if <condition pos:start="141:12" pos:end="141:45">(<expr pos:start="141:13" pos:end="141:44"><call pos:start="141:13" pos:end="141:30"><name pos:start="141:13" pos:end="141:25">get_bits_left</name><argument_list pos:start="141:26" pos:end="141:30">(<argument pos:start="141:27" pos:end="141:29"><expr pos:start="141:27" pos:end="141:29"><operator pos:start="141:27" pos:end="141:27">&amp;</operator><name pos:start="141:28" pos:end="141:29">gb</name></expr></argument>)</argument_list></call> <operator pos:start="141:32" pos:end="141:32">&lt;</operator> <name pos:start="141:34" pos:end="141:44">bits_needed</name></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:22"><block_content pos:start="143:13" pos:end="143:22">

            <return pos:start="143:13" pos:end="143:22">return <expr pos:start="143:20" pos:end="143:21"><operator pos:start="143:20" pos:end="143:20">-</operator><literal type="number" pos:start="143:21" pos:end="143:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="147:9" pos:end="149:35"><if pos:start="147:9" pos:end="149:35">if <condition pos:start="147:12" pos:end="147:87">(<expr pos:start="147:13" pos:end="147:86"><operator pos:start="147:13" pos:end="147:13">!</operator><operator pos:start="147:14" pos:end="147:14">(</operator><name pos:start="147:15" pos:end="147:29"><name pos:start="147:15" pos:end="147:19">sconf</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:29">chan_pos</name></name> <operator pos:start="147:31" pos:end="147:31">=</operator> <call pos:start="147:33" pos:end="147:85"><name pos:start="147:33" pos:end="147:41">av_malloc</name><argument_list pos:start="147:42" pos:end="147:85">(<argument pos:start="147:43" pos:end="147:84"><expr pos:start="147:43" pos:end="147:84"><name pos:start="147:43" pos:end="147:57"><name pos:start="147:43" pos:end="147:47">avctx</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:57">channels</name></name> <operator pos:start="147:59" pos:end="147:59">*</operator> <sizeof pos:start="147:61" pos:end="147:84">sizeof<argument_list pos:start="147:67" pos:end="147:84">(<argument pos:start="147:68" pos:end="147:83"><expr pos:start="147:68" pos:end="147:83"><operator pos:start="147:68" pos:end="147:68">*</operator><name pos:start="147:69" pos:end="147:83"><name pos:start="147:69" pos:end="147:73">sconf</name><operator pos:start="147:74" pos:end="147:75">-&gt;</operator><name pos:start="147:76" pos:end="147:83">chan_pos</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="147:86" pos:end="147:86">)</operator></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:35"><block_content pos:start="149:13" pos:end="149:35">

            <return pos:start="149:13" pos:end="149:35">return <expr pos:start="149:20" pos:end="149:34"><call pos:start="149:20" pos:end="149:34"><name pos:start="149:20" pos:end="149:26">AVERROR</name><argument_list pos:start="149:27" pos:end="149:34">(<argument pos:start="149:28" pos:end="149:33"><expr pos:start="149:28" pos:end="149:33"><name pos:start="149:28" pos:end="149:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:27"><expr pos:start="153:9" pos:end="153:26"><name pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:11">ctx</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:22">cs_switch</name></name> <operator pos:start="153:24" pos:end="153:24">=</operator> <literal type="number" pos:start="153:26" pos:end="153:26">1</literal></expr>;</expr_stmt>



        <for pos:start="157:9" pos:end="177:9">for <control pos:start="157:13" pos:end="157:45">(<init pos:start="157:14" pos:end="157:19"><expr pos:start="157:14" pos:end="157:18"><name pos:start="157:14" pos:end="157:14">i</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <literal type="number" pos:start="157:18" pos:end="157:18">0</literal></expr>;</init> <condition pos:start="157:21" pos:end="157:40"><expr pos:start="157:21" pos:end="157:39"><name pos:start="157:21" pos:end="157:21">i</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <name pos:start="157:25" pos:end="157:39"><name pos:start="157:25" pos:end="157:29">avctx</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:39">channels</name></name></expr>;</condition> <incr pos:start="157:42" pos:end="157:44"><expr pos:start="157:42" pos:end="157:44"><name pos:start="157:42" pos:end="157:42">i</name><operator pos:start="157:43" pos:end="157:44">++</operator></expr></incr>)</control> <block pos:start="157:47" pos:end="177:9">{<block_content pos:start="159:13" pos:end="175:37">

            <decl_stmt pos:start="159:13" pos:end="159:20"><decl pos:start="159:13" pos:end="159:19"><type pos:start="159:13" pos:end="159:15"><name pos:start="159:13" pos:end="159:15">int</name></type> <name pos:start="159:17" pos:end="159:19">idx</name></decl>;</decl_stmt>



            <expr_stmt pos:start="163:13" pos:end="163:47"><expr pos:start="163:13" pos:end="163:46"><name pos:start="163:13" pos:end="163:15">idx</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <call pos:start="163:19" pos:end="163:46"><name pos:start="163:19" pos:end="163:26">get_bits</name><argument_list pos:start="163:27" pos:end="163:46">(<argument pos:start="163:28" pos:end="163:30"><expr pos:start="163:28" pos:end="163:30"><operator pos:start="163:28" pos:end="163:28">&amp;</operator><name pos:start="163:29" pos:end="163:30">gb</name></expr></argument>, <argument pos:start="163:33" pos:end="163:45"><expr pos:start="163:33" pos:end="163:45"><name pos:start="163:33" pos:end="163:45">chan_pos_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="165:13" pos:end="173:13"><if pos:start="165:13" pos:end="173:13">if <condition pos:start="165:16" pos:end="165:39">(<expr pos:start="165:17" pos:end="165:38"><name pos:start="165:17" pos:end="165:19">idx</name> <operator pos:start="165:21" pos:end="165:22">&gt;=</operator> <name pos:start="165:24" pos:end="165:38"><name pos:start="165:24" pos:end="165:28">avctx</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:38">channels</name></name></expr>)</condition> <block pos:start="165:41" pos:end="173:13">{<block_content pos:start="167:17" pos:end="171:22">

                <expr_stmt pos:start="167:17" pos:end="167:79"><expr pos:start="167:17" pos:end="167:78"><call pos:start="167:17" pos:end="167:78"><name pos:start="167:17" pos:end="167:22">av_log</name><argument_list pos:start="167:23" pos:end="167:78">(<argument pos:start="167:24" pos:end="167:28"><expr pos:start="167:24" pos:end="167:28"><name pos:start="167:24" pos:end="167:28">avctx</name></expr></argument>, <argument pos:start="167:31" pos:end="167:44"><expr pos:start="167:31" pos:end="167:44"><name pos:start="167:31" pos:end="167:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="167:47" pos:end="167:77"><expr pos:start="167:47" pos:end="167:77"><literal type="string" pos:start="167:47" pos:end="167:77">"Invalid channel reordering.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:35"><expr pos:start="169:17" pos:end="169:34"><name pos:start="169:17" pos:end="169:30"><name pos:start="169:17" pos:end="169:19">ctx</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:30">cs_switch</name></name> <operator pos:start="169:32" pos:end="169:32">=</operator> <literal type="number" pos:start="169:34" pos:end="169:34">0</literal></expr>;</expr_stmt>

                <break pos:start="171:17" pos:end="171:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:37"><expr pos:start="175:13" pos:end="175:36"><name pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:17">sconf</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:27">chan_pos</name><index pos:start="175:28" pos:end="175:32">[<expr pos:start="175:29" pos:end="175:31"><name pos:start="175:29" pos:end="175:31">idx</name></expr>]</index></name> <operator pos:start="175:34" pos:end="175:34">=</operator> <name pos:start="175:36" pos:end="175:36">i</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="181:9" pos:end="181:28"><expr pos:start="181:9" pos:end="181:27"><call pos:start="181:9" pos:end="181:27"><name pos:start="181:9" pos:end="181:22">align_get_bits</name><argument_list pos:start="181:23" pos:end="181:27">(<argument pos:start="181:24" pos:end="181:26"><expr pos:start="181:24" pos:end="181:26"><operator pos:start="181:24" pos:end="181:24">&amp;</operator><name pos:start="181:25" pos:end="181:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <comment type="line" pos:start="189:5" pos:end="189:43">// read fixed header and trailer sizes,</comment>

    <comment type="line" pos:start="191:5" pos:end="191:56">// if size = 0xFFFFFFFF then there is no data field!</comment>

    <if_stmt pos:start="193:5" pos:end="195:18"><if pos:start="193:5" pos:end="195:18">if <condition pos:start="193:8" pos:end="193:32">(<expr pos:start="193:9" pos:end="193:31"><call pos:start="193:9" pos:end="193:26"><name pos:start="193:9" pos:end="193:21">get_bits_left</name><argument_list pos:start="193:22" pos:end="193:26">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><operator pos:start="193:23" pos:end="193:23">&amp;</operator><name pos:start="193:24" pos:end="193:25">gb</name></expr></argument>)</argument_list></call> <operator pos:start="193:28" pos:end="193:28">&lt;</operator> <literal type="number" pos:start="193:30" pos:end="193:31">64</literal></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:18"><block_content pos:start="195:9" pos:end="195:18">

        <return pos:start="195:9" pos:end="195:18">return <expr pos:start="195:16" pos:end="195:17"><operator pos:start="195:16" pos:end="195:16">-</operator><literal type="number" pos:start="195:17" pos:end="195:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:42"><expr pos:start="199:5" pos:end="199:41"><name pos:start="199:5" pos:end="199:15">header_size</name>  <operator pos:start="199:18" pos:end="199:18">=</operator> <call pos:start="199:20" pos:end="199:41"><name pos:start="199:20" pos:end="199:32">get_bits_long</name><argument_list pos:start="199:33" pos:end="199:41">(<argument pos:start="199:34" pos:end="199:36"><expr pos:start="199:34" pos:end="199:36"><operator pos:start="199:34" pos:end="199:34">&amp;</operator><name pos:start="199:35" pos:end="199:36">gb</name></expr></argument>, <argument pos:start="199:39" pos:end="199:40"><expr pos:start="199:39" pos:end="199:40"><literal type="number" pos:start="199:39" pos:end="199:40">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:42"><expr pos:start="201:5" pos:end="201:41"><name pos:start="201:5" pos:end="201:16">trailer_size</name> <operator pos:start="201:18" pos:end="201:18">=</operator> <call pos:start="201:20" pos:end="201:41"><name pos:start="201:20" pos:end="201:32">get_bits_long</name><argument_list pos:start="201:33" pos:end="201:41">(<argument pos:start="201:34" pos:end="201:36"><expr pos:start="201:34" pos:end="201:36"><operator pos:start="201:34" pos:end="201:34">&amp;</operator><name pos:start="201:35" pos:end="201:36">gb</name></expr></argument>, <argument pos:start="201:39" pos:end="201:40"><expr pos:start="201:39" pos:end="201:40"><literal type="number" pos:start="201:39" pos:end="201:40">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="203:5" pos:end="205:25"><if pos:start="203:5" pos:end="205:25">if <condition pos:start="203:8" pos:end="203:35">(<expr pos:start="203:9" pos:end="203:34"><name pos:start="203:9" pos:end="203:19">header_size</name>  <operator pos:start="203:22" pos:end="203:23">==</operator> <literal type="number" pos:start="203:25" pos:end="203:34">0xFFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="205:25"><block_content pos:start="205:9" pos:end="205:25">

        <expr_stmt pos:start="205:9" pos:end="205:25"><expr pos:start="205:9" pos:end="205:24"><name pos:start="205:9" pos:end="205:19">header_size</name>  <operator pos:start="205:22" pos:end="205:22">=</operator> <literal type="number" pos:start="205:24" pos:end="205:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="207:5" pos:end="209:25"><if pos:start="207:5" pos:end="209:25">if <condition pos:start="207:8" pos:end="207:35">(<expr pos:start="207:9" pos:end="207:34"><name pos:start="207:9" pos:end="207:20">trailer_size</name> <operator pos:start="207:22" pos:end="207:23">==</operator> <literal type="number" pos:start="207:25" pos:end="207:34">0xFFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:25"><block_content pos:start="209:9" pos:end="209:25">

        <expr_stmt pos:start="209:9" pos:end="209:25"><expr pos:start="209:9" pos:end="209:24"><name pos:start="209:9" pos:end="209:20">trailer_size</name> <operator pos:start="209:22" pos:end="209:22">=</operator> <literal type="number" pos:start="209:24" pos:end="209:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:70"><expr pos:start="213:5" pos:end="213:69"><name pos:start="213:5" pos:end="213:11">ht_size</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <operator pos:start="213:15" pos:end="213:15">(</operator><operator pos:start="213:16" pos:end="213:16">(</operator><name pos:start="213:17" pos:end="213:23">int64_t</name><operator pos:start="213:24" pos:end="213:24">)</operator><operator pos:start="213:25" pos:end="213:25">(</operator><name pos:start="213:26" pos:end="213:36">header_size</name><operator pos:start="213:37" pos:end="213:37">)</operator> <operator pos:start="213:39" pos:end="213:39">+</operator> <operator pos:start="213:41" pos:end="213:41">(</operator><name pos:start="213:42" pos:end="213:48">int64_t</name><operator pos:start="213:49" pos:end="213:49">)</operator><operator pos:start="213:50" pos:end="213:50">(</operator><name pos:start="213:51" pos:end="213:62">trailer_size</name><operator pos:start="213:63" pos:end="213:63">)</operator><operator pos:start="213:64" pos:end="213:64">)</operator> <operator pos:start="213:66" pos:end="213:67">&lt;&lt;</operator> <literal type="number" pos:start="213:69" pos:end="213:69">3</literal></expr>;</expr_stmt>





    <comment type="line" pos:start="219:5" pos:end="219:39">// skip the header and trailer data</comment>

    <if_stmt pos:start="221:5" pos:end="223:18"><if pos:start="221:5" pos:end="223:18">if <condition pos:start="221:8" pos:end="221:37">(<expr pos:start="221:9" pos:end="221:36"><call pos:start="221:9" pos:end="221:26"><name pos:start="221:9" pos:end="221:21">get_bits_left</name><argument_list pos:start="221:22" pos:end="221:26">(<argument pos:start="221:23" pos:end="221:25"><expr pos:start="221:23" pos:end="221:25"><operator pos:start="221:23" pos:end="221:23">&amp;</operator><name pos:start="221:24" pos:end="221:25">gb</name></expr></argument>)</argument_list></call> <operator pos:start="221:28" pos:end="221:28">&lt;</operator> <name pos:start="221:30" pos:end="221:36">ht_size</name></expr>)</condition><block type="pseudo" pos:start="223:9" pos:end="223:18"><block_content pos:start="223:9" pos:end="223:18">

        <return pos:start="223:9" pos:end="223:18">return <expr pos:start="223:16" pos:end="223:17"><operator pos:start="223:16" pos:end="223:16">-</operator><literal type="number" pos:start="223:17" pos:end="223:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="227:5" pos:end="229:18"><if pos:start="227:5" pos:end="229:18">if <condition pos:start="227:8" pos:end="227:28">(<expr pos:start="227:9" pos:end="227:27"><name pos:start="227:9" pos:end="227:15">ht_size</name> <operator pos:start="227:17" pos:end="227:17">&gt;</operator> <name pos:start="227:19" pos:end="227:27">INT32_MAX</name></expr>)</condition><block type="pseudo" pos:start="229:9" pos:end="229:18"><block_content pos:start="229:9" pos:end="229:18">

        <return pos:start="229:9" pos:end="229:18">return <expr pos:start="229:16" pos:end="229:17"><operator pos:start="229:16" pos:end="229:16">-</operator><literal type="number" pos:start="229:17" pos:end="229:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="233:5" pos:end="233:33"><expr pos:start="233:5" pos:end="233:32"><call pos:start="233:5" pos:end="233:32"><name pos:start="233:5" pos:end="233:18">skip_bits_long</name><argument_list pos:start="233:19" pos:end="233:32">(<argument pos:start="233:20" pos:end="233:22"><expr pos:start="233:20" pos:end="233:22"><operator pos:start="233:20" pos:end="233:20">&amp;</operator><name pos:start="233:21" pos:end="233:22">gb</name></expr></argument>, <argument pos:start="233:25" pos:end="233:31"><expr pos:start="233:25" pos:end="233:31"><name pos:start="233:25" pos:end="233:31">ht_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="line" pos:start="239:5" pos:end="239:33">// initialize CRC calculation</comment>

    <if_stmt pos:start="241:5" pos:end="261:5"><if pos:start="241:5" pos:end="261:5">if <condition pos:start="241:8" pos:end="241:27">(<expr pos:start="241:9" pos:end="241:26"><name pos:start="241:9" pos:end="241:26"><name pos:start="241:9" pos:end="241:13">sconf</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:26">crc_enabled</name></name></expr>)</condition> <block pos:start="241:29" pos:end="261:5">{<block_content pos:start="243:9" pos:end="259:36">

        <if_stmt pos:start="243:9" pos:end="245:22"><if pos:start="243:9" pos:end="245:22">if <condition pos:start="243:12" pos:end="243:36">(<expr pos:start="243:13" pos:end="243:35"><call pos:start="243:13" pos:end="243:30"><name pos:start="243:13" pos:end="243:25">get_bits_left</name><argument_list pos:start="243:26" pos:end="243:30">(<argument pos:start="243:27" pos:end="243:29"><expr pos:start="243:27" pos:end="243:29"><operator pos:start="243:27" pos:end="243:27">&amp;</operator><name pos:start="243:28" pos:end="243:29">gb</name></expr></argument>)</argument_list></call> <operator pos:start="243:32" pos:end="243:32">&lt;</operator> <literal type="number" pos:start="243:34" pos:end="243:35">32</literal></expr>)</condition><block type="pseudo" pos:start="245:13" pos:end="245:22"><block_content pos:start="245:13" pos:end="245:22">

            <return pos:start="245:13" pos:end="245:22">return <expr pos:start="245:20" pos:end="245:21"><operator pos:start="245:20" pos:end="245:20">-</operator><literal type="number" pos:start="245:21" pos:end="245:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="249:9" pos:end="259:36"><if pos:start="249:9" pos:end="257:9">if <condition pos:start="249:12" pos:end="249:68">(<expr pos:start="249:13" pos:end="249:67"><name pos:start="249:13" pos:end="249:34"><name pos:start="249:13" pos:end="249:17">avctx</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:34">err_recognition</name></name> <operator pos:start="249:36" pos:end="249:36">&amp;</operator> <operator pos:start="249:38" pos:end="249:38">(</operator><name pos:start="249:39" pos:end="249:52">AV_EF_CRCCHECK</name><operator pos:start="249:53" pos:end="249:53">|</operator><name pos:start="249:54" pos:end="249:66">AV_EF_CAREFUL</name><operator pos:start="249:67" pos:end="249:67">)</operator></expr>)</condition> <block pos:start="249:70" pos:end="257:9">{<block_content pos:start="251:13" pos:end="255:53">

            <expr_stmt pos:start="251:13" pos:end="251:65"><expr pos:start="251:13" pos:end="251:64"><name pos:start="251:13" pos:end="251:26"><name pos:start="251:13" pos:end="251:15">ctx</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:26">crc_table</name></name> <operator pos:start="251:28" pos:end="251:28">=</operator> <call pos:start="251:30" pos:end="251:64"><name pos:start="251:30" pos:end="251:45">av_crc_get_table</name><argument_list pos:start="251:46" pos:end="251:64">(<argument pos:start="251:47" pos:end="251:63"><expr pos:start="251:47" pos:end="251:63"><name pos:start="251:47" pos:end="251:63">AV_CRC_32_IEEE_LE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:40"><expr pos:start="253:13" pos:end="253:39"><name pos:start="253:13" pos:end="253:20"><name pos:start="253:13" pos:end="253:15">ctx</name><operator pos:start="253:16" pos:end="253:17">-&gt;</operator><name pos:start="253:18" pos:end="253:20">crc</name></name>       <operator pos:start="253:28" pos:end="253:28">=</operator> <literal type="number" pos:start="253:30" pos:end="253:39">0xFFFFFFFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:53"><expr pos:start="255:13" pos:end="255:52"><name pos:start="255:13" pos:end="255:24"><name pos:start="255:13" pos:end="255:15">ctx</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:24">crc_org</name></name>   <operator pos:start="255:28" pos:end="255:28">=</operator> <operator pos:start="255:30" pos:end="255:30">~</operator><call pos:start="255:31" pos:end="255:52"><name pos:start="255:31" pos:end="255:43">get_bits_long</name><argument_list pos:start="255:44" pos:end="255:52">(<argument pos:start="255:45" pos:end="255:47"><expr pos:start="255:45" pos:end="255:47"><operator pos:start="255:45" pos:end="255:45">&amp;</operator><name pos:start="255:46" pos:end="255:47">gb</name></expr></argument>, <argument pos:start="255:50" pos:end="255:51"><expr pos:start="255:50" pos:end="255:51"><literal type="number" pos:start="255:50" pos:end="255:51">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="259:36">else<block type="pseudo" pos:start="259:13" pos:end="259:36"><block_content pos:start="259:13" pos:end="259:36">

            <expr_stmt pos:start="259:13" pos:end="259:36"><expr pos:start="259:13" pos:end="259:35"><call pos:start="259:13" pos:end="259:35"><name pos:start="259:13" pos:end="259:26">skip_bits_long</name><argument_list pos:start="259:27" pos:end="259:35">(<argument pos:start="259:28" pos:end="259:30"><expr pos:start="259:28" pos:end="259:30"><operator pos:start="259:28" pos:end="259:28">&amp;</operator><name pos:start="259:29" pos:end="259:30">gb</name></expr></argument>, <argument pos:start="259:33" pos:end="259:34"><expr pos:start="259:33" pos:end="259:34"><literal type="number" pos:start="259:33" pos:end="259:34">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>





    <comment type="line" pos:start="267:5" pos:end="267:78">// no need to read the rest of ALSSpecificConfig (ra_unit_size &amp; aux data)</comment>



    <expr_stmt pos:start="271:5" pos:end="271:32"><expr pos:start="271:5" pos:end="271:31"><call pos:start="271:5" pos:end="271:31"><name pos:start="271:5" pos:end="271:26">dprint_specific_config</name><argument_list pos:start="271:27" pos:end="271:31">(<argument pos:start="271:28" pos:end="271:30"><expr pos:start="271:28" pos:end="271:30"><name pos:start="271:28" pos:end="271:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="275:5" pos:end="275:13">return <expr pos:start="275:12" pos:end="275:12"><literal type="number" pos:start="275:12" pos:end="275:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
