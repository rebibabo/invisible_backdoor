<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15667.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">decode_q_branch</name><parameter_list pos:start="1:28" pos:end="1:68">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">SnowContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:53"><decl pos:start="1:45" pos:end="1:53"><type pos:start="1:45" pos:end="1:53"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:53">level</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:60"><decl pos:start="1:56" pos:end="1:60"><type pos:start="1:56" pos:end="1:60"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:60">x</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:67"><decl pos:start="1:63" pos:end="1:67"><type pos:start="1:63" pos:end="1:67"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:67">y</name></decl></parameter>)</parameter_list><block pos:start="1:69" pos:end="95:1">{<block_content pos:start="3:5" pos:end="93:5">

    <decl_stmt pos:start="3:5" pos:end="3:50"><decl pos:start="3:5" pos:end="3:49"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:15">w</name><init pos:start="3:16" pos:end="3:49">= <expr pos:start="3:18" pos:end="3:49"><name pos:start="3:18" pos:end="3:27"><name pos:start="3:18" pos:end="3:18">s</name><operator pos:start="3:19" pos:end="3:20">-&gt;</operator><name pos:start="3:21" pos:end="3:27">b_width</name></name> <operator pos:start="3:29" pos:end="3:30">&lt;&lt;</operator> <name pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:32">s</name><operator pos:start="3:33" pos:end="3:34">-&gt;</operator><name pos:start="3:35" pos:end="3:49">block_max_depth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:23">rem_depth</name><init pos:start="5:24" pos:end="5:51">= <expr pos:start="5:26" pos:end="5:51"><name pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:43">block_max_depth</name></name> <operator pos:start="5:45" pos:end="5:45">-</operator> <name pos:start="5:47" pos:end="5:51">level</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">index</name><init pos:start="7:20" pos:end="7:43">= <expr pos:start="7:22" pos:end="7:43"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:23">x</name> <operator pos:start="7:25" pos:end="7:25">+</operator> <name pos:start="7:27" pos:end="7:27">y</name><operator pos:start="7:28" pos:end="7:28">*</operator><name pos:start="7:29" pos:end="7:29">w</name><operator pos:start="7:30" pos:end="7:30">)</operator> <operator pos:start="7:32" pos:end="7:33">&lt;&lt;</operator> <name pos:start="7:35" pos:end="7:43">rem_depth</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">trx</name><init pos:start="9:12" pos:end="9:29">= <expr pos:start="9:14" pos:end="9:29"><operator pos:start="9:14" pos:end="9:14">(</operator><name pos:start="9:15" pos:end="9:15">x</name><operator pos:start="9:16" pos:end="9:16">+</operator><literal type="number" pos:start="9:17" pos:end="9:17">1</literal><operator pos:start="9:18" pos:end="9:18">)</operator><operator pos:start="9:19" pos:end="9:20">&lt;&lt;</operator><name pos:start="9:21" pos:end="9:29">rem_depth</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:21"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:19">BlockNode</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:25">left</name>  <init pos:start="11:28" pos:end="11:65">= <expr pos:start="11:30" pos:end="11:65"><ternary pos:start="11:30" pos:end="11:65"><condition pos:start="11:30" pos:end="11:32"><expr pos:start="11:30" pos:end="11:30"><name pos:start="11:30" pos:end="11:30">x</name></expr> ?</condition><then pos:start="11:34" pos:end="11:51"> <expr pos:start="11:34" pos:end="11:51"><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:51"><name pos:start="11:35" pos:end="11:35">s</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:42">block</name><index pos:start="11:43" pos:end="11:51">[<expr pos:start="11:44" pos:end="11:50"><name pos:start="11:44" pos:end="11:48">index</name><operator pos:start="11:49" pos:end="11:49">-</operator><literal type="number" pos:start="11:50" pos:end="11:50">1</literal></expr>]</index></name></expr> </then><else pos:start="11:53" pos:end="11:65">: <expr pos:start="11:55" pos:end="11:65"><operator pos:start="11:55" pos:end="11:55">&amp;</operator><name pos:start="11:56" pos:end="11:65">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:65"><type pos:start="13:5" pos:end="13:21"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:19">BlockNode</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">top</name>   <init pos:start="13:28" pos:end="13:65">= <expr pos:start="13:30" pos:end="13:65"><ternary pos:start="13:30" pos:end="13:65"><condition pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:30"><name pos:start="13:30" pos:end="13:30">y</name></expr> ?</condition><then pos:start="13:34" pos:end="13:51"> <expr pos:start="13:34" pos:end="13:51"><operator pos:start="13:34" pos:end="13:34">&amp;</operator><name pos:start="13:35" pos:end="13:51"><name pos:start="13:35" pos:end="13:35">s</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:42">block</name><index pos:start="13:43" pos:end="13:51">[<expr pos:start="13:44" pos:end="13:50"><name pos:start="13:44" pos:end="13:48">index</name><operator pos:start="13:49" pos:end="13:49">-</operator><name pos:start="13:50" pos:end="13:50">w</name></expr>]</index></name></expr> </then><else pos:start="13:53" pos:end="13:65">: <expr pos:start="13:55" pos:end="13:65"><operator pos:start="13:55" pos:end="13:55">&amp;</operator><name pos:start="13:56" pos:end="13:65">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:66"><decl pos:start="15:5" pos:end="15:65"><type pos:start="15:5" pos:end="15:21"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:19">BlockNode</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:23">tl</name>    <init pos:start="15:28" pos:end="15:65">= <expr pos:start="15:30" pos:end="15:65"><ternary pos:start="15:30" pos:end="15:65"><condition pos:start="15:30" pos:end="15:37"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:30">y</name> <operator pos:start="15:32" pos:end="15:33">&amp;&amp;</operator> <name pos:start="15:35" pos:end="15:35">x</name></expr> ?</condition><then pos:start="15:39" pos:end="15:58"> <expr pos:start="15:39" pos:end="15:58"><operator pos:start="15:39" pos:end="15:39">&amp;</operator><name pos:start="15:40" pos:end="15:58"><name pos:start="15:40" pos:end="15:40">s</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:47">block</name><index pos:start="15:48" pos:end="15:58">[<expr pos:start="15:49" pos:end="15:57"><name pos:start="15:49" pos:end="15:53">index</name><operator pos:start="15:54" pos:end="15:54">-</operator><name pos:start="15:55" pos:end="15:55">w</name><operator pos:start="15:56" pos:end="15:56">-</operator><literal type="number" pos:start="15:57" pos:end="15:57">1</literal></expr>]</index></name></expr> </then><else pos:start="15:60" pos:end="15:65">: <expr pos:start="15:62" pos:end="15:65"><name pos:start="15:62" pos:end="15:65">left</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:107"><decl pos:start="17:5" pos:end="17:106"><type pos:start="17:5" pos:end="17:21"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:19">BlockNode</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:23">tr</name>    <init pos:start="17:28" pos:end="17:106">= <expr pos:start="17:30" pos:end="17:106"><ternary pos:start="17:30" pos:end="17:106"><condition pos:start="17:30" pos:end="17:67"><expr pos:start="17:30" pos:end="17:65"><name pos:start="17:30" pos:end="17:30">y</name> <operator pos:start="17:32" pos:end="17:33">&amp;&amp;</operator> <name pos:start="17:35" pos:end="17:37">trx</name><operator pos:start="17:38" pos:end="17:38">&lt;</operator><name pos:start="17:39" pos:end="17:39">w</name> <operator pos:start="17:41" pos:end="17:42">&amp;&amp;</operator> <operator pos:start="17:44" pos:end="17:44">(</operator><operator pos:start="17:45" pos:end="17:45">(</operator><name pos:start="17:46" pos:end="17:46">x</name><operator pos:start="17:47" pos:end="17:47">&amp;</operator><literal type="number" pos:start="17:48" pos:end="17:48">1</literal><operator pos:start="17:49" pos:end="17:49">)</operator><operator pos:start="17:50" pos:end="17:51">==</operator><literal type="number" pos:start="17:52" pos:end="17:52">0</literal> <operator pos:start="17:54" pos:end="17:55">||</operator> <name pos:start="17:57" pos:end="17:61">level</name><operator pos:start="17:62" pos:end="17:63">==</operator><literal type="number" pos:start="17:64" pos:end="17:64">0</literal><operator pos:start="17:65" pos:end="17:65">)</operator></expr> ?</condition><then pos:start="17:69" pos:end="17:101"> <expr pos:start="17:69" pos:end="17:101"><operator pos:start="17:69" pos:end="17:69">&amp;</operator><name pos:start="17:70" pos:end="17:101"><name pos:start="17:70" pos:end="17:70">s</name><operator pos:start="17:71" pos:end="17:72">-&gt;</operator><name pos:start="17:73" pos:end="17:77">block</name><index pos:start="17:78" pos:end="17:101">[<expr pos:start="17:79" pos:end="17:100"><name pos:start="17:79" pos:end="17:83">index</name><operator pos:start="17:84" pos:end="17:84">-</operator><name pos:start="17:85" pos:end="17:85">w</name><operator pos:start="17:86" pos:end="17:86">+</operator><operator pos:start="17:87" pos:end="17:87">(</operator><literal type="number" pos:start="17:88" pos:end="17:88">1</literal><operator pos:start="17:89" pos:end="17:90">&lt;&lt;</operator><name pos:start="17:91" pos:end="17:99">rem_depth</name><operator pos:start="17:100" pos:end="17:100">)</operator></expr>]</index></name></expr> </then><else pos:start="17:103" pos:end="17:106">: <expr pos:start="17:105" pos:end="17:106"><name pos:start="17:105" pos:end="17:106">tl</name></expr></else></ternary></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="17:109" pos:end="17:122">//FIXME use lt</comment>

    <decl_stmt pos:start="19:5" pos:end="19:72"><decl pos:start="19:5" pos:end="19:71"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">s_context</name><init pos:start="19:18" pos:end="19:71">= <expr pos:start="19:20" pos:end="19:71"><literal type="number" pos:start="19:20" pos:end="19:20">2</literal><operator pos:start="19:21" pos:end="19:21">*</operator><name pos:start="19:22" pos:end="19:32"><name pos:start="19:22" pos:end="19:25">left</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:32">level</name></name> <operator pos:start="19:34" pos:end="19:34">+</operator> <literal type="number" pos:start="19:36" pos:end="19:36">2</literal><operator pos:start="19:37" pos:end="19:37">*</operator><name pos:start="19:38" pos:end="19:47"><name pos:start="19:38" pos:end="19:40">top</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:47">level</name></name> <operator pos:start="19:49" pos:end="19:49">+</operator> <name pos:start="19:51" pos:end="19:59"><name pos:start="19:51" pos:end="19:52">tl</name><operator pos:start="19:53" pos:end="19:54">-&gt;</operator><name pos:start="19:55" pos:end="19:59">level</name></name> <operator pos:start="19:61" pos:end="19:61">+</operator> <name pos:start="19:63" pos:end="19:71"><name pos:start="19:63" pos:end="19:64">tr</name><operator pos:start="19:65" pos:end="19:66">-&gt;</operator><name pos:start="19:67" pos:end="19:71">level</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if<condition pos:start="23:7" pos:end="23:19">(<expr pos:start="23:8" pos:end="23:18"><name pos:start="23:8" pos:end="23:18"><name pos:start="23:8" pos:end="23:8">s</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:18">keyframe</name></name></expr>)</condition><block pos:start="23:20" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:157"><expr pos:start="25:9" pos:end="25:156"><call pos:start="25:9" pos:end="25:156"><name pos:start="25:9" pos:end="25:18">set_blocks</name><argument_list pos:start="25:19" pos:end="25:156">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">s</name></expr></argument>, <argument pos:start="25:23" pos:end="25:27"><expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27">level</name></expr></argument>, <argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">x</name></expr></argument>, <argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><name pos:start="25:33" pos:end="25:33">y</name></expr></argument>, <argument pos:start="25:36" pos:end="25:54"><expr pos:start="25:36" pos:end="25:54"><name pos:start="25:36" pos:end="25:54"><name pos:start="25:36" pos:end="25:45">null_block</name><operator pos:start="25:46" pos:end="25:46">.</operator><name pos:start="25:47" pos:end="25:51">color</name><index pos:start="25:52" pos:end="25:54">[<expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:57" pos:end="25:75"><expr pos:start="25:57" pos:end="25:75"><name pos:start="25:57" pos:end="25:75"><name pos:start="25:57" pos:end="25:66">null_block</name><operator pos:start="25:67" pos:end="25:67">.</operator><name pos:start="25:68" pos:end="25:72">color</name><index pos:start="25:73" pos:end="25:75">[<expr pos:start="25:74" pos:end="25:74"><literal type="number" pos:start="25:74" pos:end="25:74">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:78" pos:end="25:96"><expr pos:start="25:78" pos:end="25:96"><name pos:start="25:78" pos:end="25:96"><name pos:start="25:78" pos:end="25:87">null_block</name><operator pos:start="25:88" pos:end="25:88">.</operator><name pos:start="25:89" pos:end="25:93">color</name><index pos:start="25:94" pos:end="25:96">[<expr pos:start="25:95" pos:end="25:95"><literal type="number" pos:start="25:95" pos:end="25:95">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:99" pos:end="25:111"><expr pos:start="25:99" pos:end="25:111"><name pos:start="25:99" pos:end="25:111"><name pos:start="25:99" pos:end="25:108">null_block</name><operator pos:start="25:109" pos:end="25:109">.</operator><name pos:start="25:110" pos:end="25:111">mx</name></name></expr></argument>, <argument pos:start="25:114" pos:end="25:126"><expr pos:start="25:114" pos:end="25:126"><name pos:start="25:114" pos:end="25:126"><name pos:start="25:114" pos:end="25:123">null_block</name><operator pos:start="25:124" pos:end="25:124">.</operator><name pos:start="25:125" pos:end="25:126">my</name></name></expr></argument>, <argument pos:start="25:129" pos:end="25:142"><expr pos:start="25:129" pos:end="25:142"><name pos:start="25:129" pos:end="25:142"><name pos:start="25:129" pos:end="25:138">null_block</name><operator pos:start="25:139" pos:end="25:139">.</operator><name pos:start="25:140" pos:end="25:142">ref</name></name></expr></argument>, <argument pos:start="25:145" pos:end="25:155"><expr pos:start="25:145" pos:end="25:155"><name pos:start="25:145" pos:end="25:155">BLOCK_INTRA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="93:5"><if pos:start="33:5" pos:end="83:5">if<condition pos:start="33:7" pos:end="33:83">(<expr pos:start="33:8" pos:end="33:82"><name pos:start="33:8" pos:end="33:12">level</name><operator pos:start="33:13" pos:end="33:14">==</operator><name pos:start="33:15" pos:end="33:32"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:32">block_max_depth</name></name> <operator pos:start="33:34" pos:end="33:35">||</operator> <call pos:start="33:37" pos:end="33:82"><name pos:start="33:37" pos:end="33:43">get_rac</name><argument_list pos:start="33:44" pos:end="33:82">(<argument pos:start="33:45" pos:end="33:49"><expr pos:start="33:45" pos:end="33:49"><operator pos:start="33:45" pos:end="33:45">&amp;</operator><name pos:start="33:46" pos:end="33:49"><name pos:start="33:46" pos:end="33:46">s</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:49">c</name></name></expr></argument>, <argument pos:start="33:52" pos:end="33:81"><expr pos:start="33:52" pos:end="33:81"><operator pos:start="33:52" pos:end="33:52">&amp;</operator><name pos:start="33:53" pos:end="33:81"><name pos:start="33:53" pos:end="33:53">s</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:66">block_state</name><index pos:start="33:67" pos:end="33:81">[<expr pos:start="33:68" pos:end="33:80"><literal type="number" pos:start="33:68" pos:end="33:70">4</literal> <operator pos:start="33:70" pos:end="33:70">+</operator> <name pos:start="33:72" pos:end="33:80">s_context</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="33:84" pos:end="83:5">{<block_content pos:start="35:9" pos:end="81:65">

        <decl_stmt pos:start="35:9" pos:end="35:25"><decl pos:start="35:9" pos:end="35:16"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:16">type</name></decl>, <decl pos:start="35:19" pos:end="35:20"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:19" pos:end="35:20">mx</name></decl>, <decl pos:start="35:23" pos:end="35:24"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:23" pos:end="35:24">my</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:31"><decl pos:start="37:9" pos:end="37:30"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">l</name> <init pos:start="37:15" pos:end="37:30">= <expr pos:start="37:17" pos:end="37:30"><name pos:start="37:17" pos:end="37:30"><name pos:start="37:17" pos:end="37:20">left</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">color</name><index pos:start="37:28" pos:end="37:30">[<expr pos:start="37:29" pos:end="37:29"><literal type="number" pos:start="37:29" pos:end="37:29">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:31"><decl pos:start="39:9" pos:end="39:30"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:14">cb</name><init pos:start="39:15" pos:end="39:30">= <expr pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:20">left</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:27">color</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:31"><decl pos:start="41:9" pos:end="41:30"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:14">cr</name><init pos:start="41:15" pos:end="41:30">= <expr pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:20">left</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">color</name><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:20"><decl pos:start="43:9" pos:end="43:19"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:15">ref</name> <init pos:start="43:17" pos:end="43:19">= <expr pos:start="43:19" pos:end="43:19"><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:68"><decl pos:start="45:9" pos:end="45:67"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:23">ref_context</name><init pos:start="45:24" pos:end="45:67">= <expr pos:start="45:26" pos:end="45:67"><call pos:start="45:26" pos:end="45:45"><name pos:start="45:26" pos:end="45:32">av_log2</name><argument_list pos:start="45:33" pos:end="45:45">(<argument pos:start="45:34" pos:end="45:44"><expr pos:start="45:34" pos:end="45:44"><literal type="number" pos:start="45:34" pos:end="45:34">2</literal><operator pos:start="45:35" pos:end="45:35">*</operator><name pos:start="45:36" pos:end="45:44"><name pos:start="45:36" pos:end="45:39">left</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:44">ref</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:47" pos:end="45:47">+</operator> <call pos:start="45:49" pos:end="45:67"><name pos:start="45:49" pos:end="45:55">av_log2</name><argument_list pos:start="45:56" pos:end="45:67">(<argument pos:start="45:57" pos:end="45:66"><expr pos:start="45:57" pos:end="45:66"><literal type="number" pos:start="45:57" pos:end="45:57">2</literal><operator pos:start="45:58" pos:end="45:58">*</operator><name pos:start="45:59" pos:end="45:66"><name pos:start="45:59" pos:end="45:61">top</name><operator pos:start="45:62" pos:end="45:63">-&gt;</operator><name pos:start="45:64" pos:end="45:66">ref</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:100"><decl pos:start="47:9" pos:end="47:99"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:22">mx_context</name><init pos:start="47:23" pos:end="47:99">= <expr pos:start="47:25" pos:end="47:99"><call pos:start="47:25" pos:end="47:60"><name pos:start="47:25" pos:end="47:31">av_log2</name><argument_list pos:start="47:32" pos:end="47:60">(<argument pos:start="47:33" pos:end="47:59"><expr pos:start="47:33" pos:end="47:59"><literal type="number" pos:start="47:33" pos:end="47:33">2</literal><operator pos:start="47:34" pos:end="47:34">*</operator><call pos:start="47:35" pos:end="47:59"><name pos:start="47:35" pos:end="47:39">FFABS</name><argument_list pos:start="47:40" pos:end="47:59">(<argument pos:start="47:41" pos:end="47:58"><expr pos:start="47:41" pos:end="47:58"><name pos:start="47:41" pos:end="47:48"><name pos:start="47:41" pos:end="47:44">left</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:48">mx</name></name> <operator pos:start="47:50" pos:end="47:50">-</operator> <name pos:start="47:52" pos:end="47:58"><name pos:start="47:52" pos:end="47:54">top</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:58">mx</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="47:62" pos:end="47:62">+</operator> <literal type="number" pos:start="47:64" pos:end="47:64">0</literal><operator pos:start="47:65" pos:end="47:65">*</operator><call pos:start="47:66" pos:end="47:99"><name pos:start="47:66" pos:end="47:72">av_log2</name><argument_list pos:start="47:73" pos:end="47:99">(<argument pos:start="47:74" pos:end="47:98"><expr pos:start="47:74" pos:end="47:98"><literal type="number" pos:start="47:74" pos:end="47:74">2</literal><operator pos:start="47:75" pos:end="47:75">*</operator><call pos:start="47:76" pos:end="47:98"><name pos:start="47:76" pos:end="47:80">FFABS</name><argument_list pos:start="47:81" pos:end="47:98">(<argument pos:start="47:82" pos:end="47:97"><expr pos:start="47:82" pos:end="47:97"><name pos:start="47:82" pos:end="47:87"><name pos:start="47:82" pos:end="47:83">tr</name><operator pos:start="47:84" pos:end="47:85">-&gt;</operator><name pos:start="47:86" pos:end="47:87">mx</name></name> <operator pos:start="47:89" pos:end="47:89">-</operator> <name pos:start="47:91" pos:end="47:97"><name pos:start="47:91" pos:end="47:93">top</name><operator pos:start="47:94" pos:end="47:95">-&gt;</operator><name pos:start="47:96" pos:end="47:97">mx</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:100"><decl pos:start="49:9" pos:end="49:99"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:22">my_context</name><init pos:start="49:23" pos:end="49:99">= <expr pos:start="49:25" pos:end="49:99"><call pos:start="49:25" pos:end="49:60"><name pos:start="49:25" pos:end="49:31">av_log2</name><argument_list pos:start="49:32" pos:end="49:60">(<argument pos:start="49:33" pos:end="49:59"><expr pos:start="49:33" pos:end="49:59"><literal type="number" pos:start="49:33" pos:end="49:33">2</literal><operator pos:start="49:34" pos:end="49:34">*</operator><call pos:start="49:35" pos:end="49:59"><name pos:start="49:35" pos:end="49:39">FFABS</name><argument_list pos:start="49:40" pos:end="49:59">(<argument pos:start="49:41" pos:end="49:58"><expr pos:start="49:41" pos:end="49:58"><name pos:start="49:41" pos:end="49:48"><name pos:start="49:41" pos:end="49:44">left</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:48">my</name></name> <operator pos:start="49:50" pos:end="49:50">-</operator> <name pos:start="49:52" pos:end="49:58"><name pos:start="49:52" pos:end="49:54">top</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:58">my</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="49:62" pos:end="49:62">+</operator> <literal type="number" pos:start="49:64" pos:end="49:64">0</literal><operator pos:start="49:65" pos:end="49:65">*</operator><call pos:start="49:66" pos:end="49:99"><name pos:start="49:66" pos:end="49:72">av_log2</name><argument_list pos:start="49:73" pos:end="49:99">(<argument pos:start="49:74" pos:end="49:98"><expr pos:start="49:74" pos:end="49:98"><literal type="number" pos:start="49:74" pos:end="49:74">2</literal><operator pos:start="49:75" pos:end="49:75">*</operator><call pos:start="49:76" pos:end="49:98"><name pos:start="49:76" pos:end="49:80">FFABS</name><argument_list pos:start="49:81" pos:end="49:98">(<argument pos:start="49:82" pos:end="49:97"><expr pos:start="49:82" pos:end="49:97"><name pos:start="49:82" pos:end="49:87"><name pos:start="49:82" pos:end="49:83">tr</name><operator pos:start="49:84" pos:end="49:85">-&gt;</operator><name pos:start="49:86" pos:end="49:87">my</name></name> <operator pos:start="49:89" pos:end="49:89">-</operator> <name pos:start="49:91" pos:end="49:97"><name pos:start="49:91" pos:end="49:93">top</name><operator pos:start="49:94" pos:end="49:95">-&gt;</operator><name pos:start="49:96" pos:end="49:97">my</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:92"><expr pos:start="53:9" pos:end="53:91"><name pos:start="53:9" pos:end="53:12">type</name><operator pos:start="53:13" pos:end="53:13">=</operator> <ternary pos:start="53:15" pos:end="53:91"><condition pos:start="53:15" pos:end="53:75"><expr pos:start="53:15" pos:end="53:73"><call pos:start="53:15" pos:end="53:73"><name pos:start="53:15" pos:end="53:21">get_rac</name><argument_list pos:start="53:22" pos:end="53:73">(<argument pos:start="53:23" pos:end="53:27"><expr pos:start="53:23" pos:end="53:27"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:27">c</name></name></expr></argument>, <argument pos:start="53:30" pos:end="53:72"><expr pos:start="53:30" pos:end="53:72"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:72"><name pos:start="53:31" pos:end="53:31">s</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:44">block_state</name><index pos:start="53:45" pos:end="53:72">[<expr pos:start="53:46" pos:end="53:71"><literal type="number" pos:start="53:46" pos:end="53:48">1</literal> <operator pos:start="53:48" pos:end="53:48">+</operator> <name pos:start="53:50" pos:end="53:59"><name pos:start="53:50" pos:end="53:53">left</name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:59">type</name></name> <operator pos:start="53:61" pos:end="53:61">+</operator> <name pos:start="53:63" pos:end="53:71"><name pos:start="53:63" pos:end="53:65">top</name><operator pos:start="53:66" pos:end="53:67">-&gt;</operator><name pos:start="53:68" pos:end="53:71">type</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="53:77" pos:end="53:87"> <expr pos:start="53:77" pos:end="53:87"><name pos:start="53:77" pos:end="53:87">BLOCK_INTRA</name></expr> </then><else pos:start="53:89" pos:end="53:91">: <expr pos:start="53:91" pos:end="53:91"><literal type="number" pos:start="53:91" pos:end="53:91">0</literal></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="79:9"><if pos:start="57:9" pos:end="67:9">if<condition pos:start="57:11" pos:end="57:16">(<expr pos:start="57:12" pos:end="57:15"><name pos:start="57:12" pos:end="57:15">type</name></expr>)</condition><block pos:start="57:17" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:59">

            <expr_stmt pos:start="59:13" pos:end="59:51"><expr pos:start="59:13" pos:end="59:50"><call pos:start="59:13" pos:end="59:50"><name pos:start="59:13" pos:end="59:19">pred_mv</name><argument_list pos:start="59:20" pos:end="59:50">(<argument pos:start="59:21" pos:end="59:21"><expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">s</name></expr></argument>, <argument pos:start="59:24" pos:end="59:26"><expr pos:start="59:24" pos:end="59:26"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:26">mx</name></expr></argument>, <argument pos:start="59:29" pos:end="59:31"><expr pos:start="59:29" pos:end="59:31"><operator pos:start="59:29" pos:end="59:29">&amp;</operator><name pos:start="59:30" pos:end="59:31">my</name></expr></argument>, <argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">0</literal></expr></argument>, <argument pos:start="59:37" pos:end="59:40"><expr pos:start="59:37" pos:end="59:40"><name pos:start="59:37" pos:end="59:40">left</name></expr></argument>, <argument pos:start="59:43" pos:end="59:45"><expr pos:start="59:43" pos:end="59:45"><name pos:start="59:43" pos:end="59:45">top</name></expr></argument>, <argument pos:start="59:48" pos:end="59:49"><expr pos:start="59:48" pos:end="59:49"><name pos:start="59:48" pos:end="59:49">tr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:59"><expr pos:start="61:13" pos:end="61:58"><name pos:start="61:13" pos:end="61:13">l</name> <operator pos:start="61:15" pos:end="61:16">+=</operator> <call pos:start="61:18" pos:end="61:58"><name pos:start="61:18" pos:end="61:27">get_symbol</name><argument_list pos:start="61:28" pos:end="61:58">(<argument pos:start="61:29" pos:end="61:33"><expr pos:start="61:29" pos:end="61:33"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:33"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:33">c</name></name></expr></argument>, <argument pos:start="61:36" pos:end="61:54"><expr pos:start="61:36" pos:end="61:54"><operator pos:start="61:36" pos:end="61:36">&amp;</operator><name pos:start="61:37" pos:end="61:54"><name pos:start="61:37" pos:end="61:37">s</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:50">block_state</name><index pos:start="61:51" pos:end="61:54">[<expr pos:start="61:52" pos:end="61:53"><literal type="number" pos:start="61:52" pos:end="61:53">32</literal></expr>]</index></name></expr></argument>, <argument pos:start="61:57" pos:end="61:57"><expr pos:start="61:57" pos:end="61:57"><literal type="number" pos:start="61:57" pos:end="61:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:59"><expr pos:start="63:13" pos:end="63:58"><name pos:start="63:13" pos:end="63:14">cb</name><operator pos:start="63:15" pos:end="63:16">+=</operator> <call pos:start="63:18" pos:end="63:58"><name pos:start="63:18" pos:end="63:27">get_symbol</name><argument_list pos:start="63:28" pos:end="63:58">(<argument pos:start="63:29" pos:end="63:33"><expr pos:start="63:29" pos:end="63:33"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:33"><name pos:start="63:30" pos:end="63:30">s</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:33">c</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:54"><expr pos:start="63:36" pos:end="63:54"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:54"><name pos:start="63:37" pos:end="63:37">s</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:50">block_state</name><index pos:start="63:51" pos:end="63:54">[<expr pos:start="63:52" pos:end="63:53"><literal type="number" pos:start="63:52" pos:end="63:53">64</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:57" pos:end="63:57"><expr pos:start="63:57" pos:end="63:57"><literal type="number" pos:start="63:57" pos:end="63:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:59"><expr pos:start="65:13" pos:end="65:58"><name pos:start="65:13" pos:end="65:14">cr</name><operator pos:start="65:15" pos:end="65:16">+=</operator> <call pos:start="65:18" pos:end="65:58"><name pos:start="65:18" pos:end="65:27">get_symbol</name><argument_list pos:start="65:28" pos:end="65:58">(<argument pos:start="65:29" pos:end="65:33"><expr pos:start="65:29" pos:end="65:33"><operator pos:start="65:29" pos:end="65:29">&amp;</operator><name pos:start="65:30" pos:end="65:33"><name pos:start="65:30" pos:end="65:30">s</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:33">c</name></name></expr></argument>, <argument pos:start="65:36" pos:end="65:54"><expr pos:start="65:36" pos:end="65:54"><operator pos:start="65:36" pos:end="65:36">&amp;</operator><name pos:start="65:37" pos:end="65:54"><name pos:start="65:37" pos:end="65:37">s</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:50">block_state</name><index pos:start="65:51" pos:end="65:54">[<expr pos:start="65:52" pos:end="65:53"><literal type="number" pos:start="65:52" pos:end="65:53">96</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:57" pos:end="65:57"><expr pos:start="65:57" pos:end="65:57"><literal type="number" pos:start="65:57" pos:end="65:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="67:10" pos:end="79:9">else<block pos:start="67:14" pos:end="79:9">{<block_content pos:start="69:13" pos:end="77:89">

            <if_stmt pos:start="69:13" pos:end="71:88"><if pos:start="69:13" pos:end="71:88">if<condition pos:start="69:15" pos:end="69:33">(<expr pos:start="69:16" pos:end="69:32"><name pos:start="69:16" pos:end="69:28"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:28">ref_frames</name></name> <operator pos:start="69:30" pos:end="69:30">&gt;</operator> <literal type="number" pos:start="69:32" pos:end="69:32">1</literal></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:88"><block_content pos:start="71:17" pos:end="71:88">

                <expr_stmt pos:start="71:17" pos:end="71:88"><expr pos:start="71:17" pos:end="71:87"><name pos:start="71:17" pos:end="71:19">ref</name><operator pos:start="71:20" pos:end="71:20">=</operator> <call pos:start="71:22" pos:end="71:87"><name pos:start="71:22" pos:end="71:31">get_symbol</name><argument_list pos:start="71:32" pos:end="71:87">(<argument pos:start="71:33" pos:end="71:37"><expr pos:start="71:33" pos:end="71:37"><operator pos:start="71:33" pos:end="71:33">&amp;</operator><name pos:start="71:34" pos:end="71:37"><name pos:start="71:34" pos:end="71:34">s</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:37">c</name></name></expr></argument>, <argument pos:start="71:40" pos:end="71:83"><expr pos:start="71:40" pos:end="71:83"><operator pos:start="71:40" pos:end="71:40">&amp;</operator><name pos:start="71:41" pos:end="71:83"><name pos:start="71:41" pos:end="71:41">s</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:54">block_state</name><index pos:start="71:55" pos:end="71:83">[<expr pos:start="71:56" pos:end="71:82"><literal type="number" pos:start="71:56" pos:end="71:60">128</literal> <operator pos:start="71:60" pos:end="71:60">+</operator> <literal type="number" pos:start="71:62" pos:end="71:67">1024</literal> <operator pos:start="71:67" pos:end="71:67">+</operator> <literal type="number" pos:start="71:69" pos:end="71:70">32</literal><operator pos:start="71:71" pos:end="71:71">*</operator><name pos:start="71:72" pos:end="71:82">ref_context</name></expr>]</index></name></expr></argument>, <argument pos:start="71:86" pos:end="71:86"><expr pos:start="71:86" pos:end="71:86"><literal type="number" pos:start="71:86" pos:end="71:86">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:53"><expr pos:start="73:13" pos:end="73:52"><call pos:start="73:13" pos:end="73:52"><name pos:start="73:13" pos:end="73:19">pred_mv</name><argument_list pos:start="73:20" pos:end="73:52">(<argument pos:start="73:21" pos:end="73:21"><expr pos:start="73:21" pos:end="73:21"><name pos:start="73:21" pos:end="73:21">s</name></expr></argument>, <argument pos:start="73:24" pos:end="73:26"><expr pos:start="73:24" pos:end="73:26"><operator pos:start="73:24" pos:end="73:24">&amp;</operator><name pos:start="73:25" pos:end="73:26">mx</name></expr></argument>, <argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><operator pos:start="73:29" pos:end="73:29">&amp;</operator><name pos:start="73:30" pos:end="73:31">my</name></expr></argument>, <argument pos:start="73:34" pos:end="73:36"><expr pos:start="73:34" pos:end="73:36"><name pos:start="73:34" pos:end="73:36">ref</name></expr></argument>, <argument pos:start="73:39" pos:end="73:42"><expr pos:start="73:39" pos:end="73:42"><name pos:start="73:39" pos:end="73:42">left</name></expr></argument>, <argument pos:start="73:45" pos:end="73:47"><expr pos:start="73:45" pos:end="73:47"><name pos:start="73:45" pos:end="73:47">top</name></expr></argument>, <argument pos:start="73:50" pos:end="73:51"><expr pos:start="73:50" pos:end="73:51"><name pos:start="73:50" pos:end="73:51">tr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:89"><expr pos:start="75:13" pos:end="75:88"><name pos:start="75:13" pos:end="75:14">mx</name><operator pos:start="75:15" pos:end="75:16">+=</operator> <call pos:start="75:18" pos:end="75:88"><name pos:start="75:18" pos:end="75:27">get_symbol</name><argument_list pos:start="75:28" pos:end="75:88">(<argument pos:start="75:29" pos:end="75:33"><expr pos:start="75:29" pos:end="75:33"><operator pos:start="75:29" pos:end="75:29">&amp;</operator><name pos:start="75:30" pos:end="75:33"><name pos:start="75:30" pos:end="75:30">s</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:33">c</name></name></expr></argument>, <argument pos:start="75:36" pos:end="75:84"><expr pos:start="75:36" pos:end="75:84"><operator pos:start="75:36" pos:end="75:36">&amp;</operator><name pos:start="75:37" pos:end="75:84"><name pos:start="75:37" pos:end="75:37">s</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:50">block_state</name><index pos:start="75:51" pos:end="75:84">[<expr pos:start="75:52" pos:end="75:83"><literal type="number" pos:start="75:52" pos:end="75:56">128</literal> <operator pos:start="75:56" pos:end="75:56">+</operator> <literal type="number" pos:start="75:58" pos:end="75:59">32</literal><operator pos:start="75:60" pos:end="75:60">*</operator><operator pos:start="75:61" pos:end="75:61">(</operator><name pos:start="75:62" pos:end="75:71">mx_context</name> <operator pos:start="75:73" pos:end="75:73">+</operator> <literal type="number" pos:start="75:75" pos:end="75:76">16</literal><operator pos:start="75:77" pos:end="75:77">*</operator><operator pos:start="75:78" pos:end="75:78">!</operator><operator pos:start="75:79" pos:end="75:79">!</operator><name pos:start="75:80" pos:end="75:82">ref</name><operator pos:start="75:83" pos:end="75:83">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="75:87" pos:end="75:87"><expr pos:start="75:87" pos:end="75:87"><literal type="number" pos:start="75:87" pos:end="75:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:89"><expr pos:start="77:13" pos:end="77:88"><name pos:start="77:13" pos:end="77:14">my</name><operator pos:start="77:15" pos:end="77:16">+=</operator> <call pos:start="77:18" pos:end="77:88"><name pos:start="77:18" pos:end="77:27">get_symbol</name><argument_list pos:start="77:28" pos:end="77:88">(<argument pos:start="77:29" pos:end="77:33"><expr pos:start="77:29" pos:end="77:33"><operator pos:start="77:29" pos:end="77:29">&amp;</operator><name pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:30">s</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:33">c</name></name></expr></argument>, <argument pos:start="77:36" pos:end="77:84"><expr pos:start="77:36" pos:end="77:84"><operator pos:start="77:36" pos:end="77:36">&amp;</operator><name pos:start="77:37" pos:end="77:84"><name pos:start="77:37" pos:end="77:37">s</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:50">block_state</name><index pos:start="77:51" pos:end="77:84">[<expr pos:start="77:52" pos:end="77:83"><literal type="number" pos:start="77:52" pos:end="77:56">128</literal> <operator pos:start="77:56" pos:end="77:56">+</operator> <literal type="number" pos:start="77:58" pos:end="77:59">32</literal><operator pos:start="77:60" pos:end="77:60">*</operator><operator pos:start="77:61" pos:end="77:61">(</operator><name pos:start="77:62" pos:end="77:71">my_context</name> <operator pos:start="77:73" pos:end="77:73">+</operator> <literal type="number" pos:start="77:75" pos:end="77:76">16</literal><operator pos:start="77:77" pos:end="77:77">*</operator><operator pos:start="77:78" pos:end="77:78">!</operator><operator pos:start="77:79" pos:end="77:79">!</operator><name pos:start="77:80" pos:end="77:82">ref</name><operator pos:start="77:83" pos:end="77:83">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="77:87" pos:end="77:87"><expr pos:start="77:87" pos:end="77:87"><literal type="number" pos:start="77:87" pos:end="77:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:65"><expr pos:start="81:9" pos:end="81:64"><call pos:start="81:9" pos:end="81:64"><name pos:start="81:9" pos:end="81:18">set_blocks</name><argument_list pos:start="81:19" pos:end="81:64">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">s</name></expr></argument>, <argument pos:start="81:23" pos:end="81:27"><expr pos:start="81:23" pos:end="81:27"><name pos:start="81:23" pos:end="81:27">level</name></expr></argument>, <argument pos:start="81:30" pos:end="81:30"><expr pos:start="81:30" pos:end="81:30"><name pos:start="81:30" pos:end="81:30">x</name></expr></argument>, <argument pos:start="81:33" pos:end="81:33"><expr pos:start="81:33" pos:end="81:33"><name pos:start="81:33" pos:end="81:33">y</name></expr></argument>, <argument pos:start="81:36" pos:end="81:36"><expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">l</name></expr></argument>, <argument pos:start="81:39" pos:end="81:40"><expr pos:start="81:39" pos:end="81:40"><name pos:start="81:39" pos:end="81:40">cb</name></expr></argument>, <argument pos:start="81:43" pos:end="81:44"><expr pos:start="81:43" pos:end="81:44"><name pos:start="81:43" pos:end="81:44">cr</name></expr></argument>, <argument pos:start="81:47" pos:end="81:48"><expr pos:start="81:47" pos:end="81:48"><name pos:start="81:47" pos:end="81:48">mx</name></expr></argument>, <argument pos:start="81:51" pos:end="81:52"><expr pos:start="81:51" pos:end="81:52"><name pos:start="81:51" pos:end="81:52">my</name></expr></argument>, <argument pos:start="81:55" pos:end="81:57"><expr pos:start="81:55" pos:end="81:57"><name pos:start="81:55" pos:end="81:57">ref</name></expr></argument>, <argument pos:start="81:60" pos:end="81:63"><expr pos:start="81:60" pos:end="81:63"><name pos:start="81:60" pos:end="81:63">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="83:6" pos:end="93:5">else<block pos:start="83:10" pos:end="93:5">{<block_content pos:start="85:9" pos:end="91:50">

        <expr_stmt pos:start="85:9" pos:end="85:50"><expr pos:start="85:9" pos:end="85:49"><call pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:23">decode_q_branch</name><argument_list pos:start="85:24" pos:end="85:49">(<argument pos:start="85:25" pos:end="85:25"><expr pos:start="85:25" pos:end="85:25"><name pos:start="85:25" pos:end="85:25">s</name></expr></argument>, <argument pos:start="85:28" pos:end="85:34"><expr pos:start="85:28" pos:end="85:34"><name pos:start="85:28" pos:end="85:32">level</name><operator pos:start="85:33" pos:end="85:33">+</operator><literal type="number" pos:start="85:34" pos:end="85:34">1</literal></expr></argument>, <argument pos:start="85:37" pos:end="85:41"><expr pos:start="85:37" pos:end="85:41"><literal type="number" pos:start="85:37" pos:end="85:37">2</literal><operator pos:start="85:38" pos:end="85:38">*</operator><name pos:start="85:39" pos:end="85:39">x</name><operator pos:start="85:40" pos:end="85:40">+</operator><literal type="number" pos:start="85:41" pos:end="85:41">0</literal></expr></argument>, <argument pos:start="85:44" pos:end="85:48"><expr pos:start="85:44" pos:end="85:48"><literal type="number" pos:start="85:44" pos:end="85:44">2</literal><operator pos:start="85:45" pos:end="85:45">*</operator><name pos:start="85:46" pos:end="85:46">y</name><operator pos:start="85:47" pos:end="85:47">+</operator><literal type="number" pos:start="85:48" pos:end="85:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:50"><expr pos:start="87:9" pos:end="87:49"><call pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:23">decode_q_branch</name><argument_list pos:start="87:24" pos:end="87:49">(<argument pos:start="87:25" pos:end="87:25"><expr pos:start="87:25" pos:end="87:25"><name pos:start="87:25" pos:end="87:25">s</name></expr></argument>, <argument pos:start="87:28" pos:end="87:34"><expr pos:start="87:28" pos:end="87:34"><name pos:start="87:28" pos:end="87:32">level</name><operator pos:start="87:33" pos:end="87:33">+</operator><literal type="number" pos:start="87:34" pos:end="87:34">1</literal></expr></argument>, <argument pos:start="87:37" pos:end="87:41"><expr pos:start="87:37" pos:end="87:41"><literal type="number" pos:start="87:37" pos:end="87:37">2</literal><operator pos:start="87:38" pos:end="87:38">*</operator><name pos:start="87:39" pos:end="87:39">x</name><operator pos:start="87:40" pos:end="87:40">+</operator><literal type="number" pos:start="87:41" pos:end="87:41">1</literal></expr></argument>, <argument pos:start="87:44" pos:end="87:48"><expr pos:start="87:44" pos:end="87:48"><literal type="number" pos:start="87:44" pos:end="87:44">2</literal><operator pos:start="87:45" pos:end="87:45">*</operator><name pos:start="87:46" pos:end="87:46">y</name><operator pos:start="87:47" pos:end="87:47">+</operator><literal type="number" pos:start="87:48" pos:end="87:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:50"><expr pos:start="89:9" pos:end="89:49"><call pos:start="89:9" pos:end="89:49"><name pos:start="89:9" pos:end="89:23">decode_q_branch</name><argument_list pos:start="89:24" pos:end="89:49">(<argument pos:start="89:25" pos:end="89:25"><expr pos:start="89:25" pos:end="89:25"><name pos:start="89:25" pos:end="89:25">s</name></expr></argument>, <argument pos:start="89:28" pos:end="89:34"><expr pos:start="89:28" pos:end="89:34"><name pos:start="89:28" pos:end="89:32">level</name><operator pos:start="89:33" pos:end="89:33">+</operator><literal type="number" pos:start="89:34" pos:end="89:34">1</literal></expr></argument>, <argument pos:start="89:37" pos:end="89:41"><expr pos:start="89:37" pos:end="89:41"><literal type="number" pos:start="89:37" pos:end="89:37">2</literal><operator pos:start="89:38" pos:end="89:38">*</operator><name pos:start="89:39" pos:end="89:39">x</name><operator pos:start="89:40" pos:end="89:40">+</operator><literal type="number" pos:start="89:41" pos:end="89:41">0</literal></expr></argument>, <argument pos:start="89:44" pos:end="89:48"><expr pos:start="89:44" pos:end="89:48"><literal type="number" pos:start="89:44" pos:end="89:44">2</literal><operator pos:start="89:45" pos:end="89:45">*</operator><name pos:start="89:46" pos:end="89:46">y</name><operator pos:start="89:47" pos:end="89:47">+</operator><literal type="number" pos:start="89:48" pos:end="89:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><call pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:23">decode_q_branch</name><argument_list pos:start="91:24" pos:end="91:49">(<argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">s</name></expr></argument>, <argument pos:start="91:28" pos:end="91:34"><expr pos:start="91:28" pos:end="91:34"><name pos:start="91:28" pos:end="91:32">level</name><operator pos:start="91:33" pos:end="91:33">+</operator><literal type="number" pos:start="91:34" pos:end="91:34">1</literal></expr></argument>, <argument pos:start="91:37" pos:end="91:41"><expr pos:start="91:37" pos:end="91:41"><literal type="number" pos:start="91:37" pos:end="91:37">2</literal><operator pos:start="91:38" pos:end="91:38">*</operator><name pos:start="91:39" pos:end="91:39">x</name><operator pos:start="91:40" pos:end="91:40">+</operator><literal type="number" pos:start="91:41" pos:end="91:41">1</literal></expr></argument>, <argument pos:start="91:44" pos:end="91:48"><expr pos:start="91:44" pos:end="91:48"><literal type="number" pos:start="91:44" pos:end="91:44">2</literal><operator pos:start="91:45" pos:end="91:45">*</operator><name pos:start="91:46" pos:end="91:46">y</name><operator pos:start="91:47" pos:end="91:47">+</operator><literal type="number" pos:start="91:48" pos:end="91:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
