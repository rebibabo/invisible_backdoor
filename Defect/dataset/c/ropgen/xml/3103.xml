<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3103.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">qmp_guest_set_user_password</name><parameter_list pos:start="1:33" pos:end="7:46">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:53">username</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:53"><decl pos:start="3:34" pos:end="3:53"><type pos:start="3:34" pos:end="3:53"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:43">char</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:53">password</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:45"><decl pos:start="5:34" pos:end="5:45"><type pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:37">bool</name></type> <name pos:start="5:39" pos:end="5:45">crypted</name></decl></parameter>,

                                 <parameter pos:start="7:34" pos:end="7:45"><decl pos:start="7:34" pos:end="7:45"><type pos:start="7:34" pos:end="7:45"><name pos:start="7:34" pos:end="7:38">Error</name> <modifier pos:start="7:40" pos:end="7:40">*</modifier><modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:45">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="81:1">{<block_content pos:start="11:5" pos:end="79:26">

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18">NET_API_STATUS</name></type> <name pos:start="11:20" pos:end="11:22">nas</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:23">rawpasswddata</name> <init pos:start="13:25" pos:end="13:30">= <expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:23">rawpasswdlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">wchar_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">user</name></decl>, <decl pos:start="17:20" pos:end="17:25"><type ref="prev" pos:start="17:5" pos:end="17:13"><modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:25">wpass</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:18">USER_INFO_1003</name></type> <name pos:start="19:20" pos:end="19:25">pi1003</name> <init pos:start="19:27" pos:end="19:34">= <expr pos:start="19:29" pos:end="19:34"><block pos:start="19:29" pos:end="19:34">{ <expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr>, }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">crypted</name></expr>)</condition> <block pos:start="23:18" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="25:42">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:41"><expr pos:start="25:26" pos:end="25:41"><name pos:start="25:26" pos:end="25:41">QERR_UNSUPPORTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:78"><expr pos:start="33:5" pos:end="33:77"><name pos:start="33:5" pos:end="33:17">rawpasswddata</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:25">char</name> <operator pos:start="33:27" pos:end="33:27">*</operator><operator pos:start="33:28" pos:end="33:28">)</operator><call pos:start="33:29" pos:end="33:77"><name pos:start="33:29" pos:end="33:42">qbase64_decode</name><argument_list pos:start="33:43" pos:end="33:77">(<argument pos:start="33:44" pos:end="33:51"><expr pos:start="33:44" pos:end="33:51"><name pos:start="33:44" pos:end="33:51">password</name></expr></argument>, <argument pos:start="33:54" pos:end="33:55"><expr pos:start="33:54" pos:end="33:55"><operator pos:start="33:54" pos:end="33:54">-</operator><literal type="number" pos:start="33:55" pos:end="33:55">1</literal></expr></argument>, <argument pos:start="33:58" pos:end="33:70"><expr pos:start="33:58" pos:end="33:70"><operator pos:start="33:58" pos:end="33:58">&amp;</operator><name pos:start="33:59" pos:end="33:70">rawpasswdlen</name></expr></argument>, <argument pos:start="33:73" pos:end="33:76"><expr pos:start="33:73" pos:end="33:76"><name pos:start="33:73" pos:end="33:76">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:22">rawpasswddata</name></expr>)</condition> <block pos:start="35:25" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:67"><expr pos:start="41:5" pos:end="41:66"><name pos:start="41:5" pos:end="41:17">rawpasswddata</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:66"><name pos:start="41:21" pos:end="41:27">g_renew</name><argument_list pos:start="41:28" pos:end="41:66">(<argument pos:start="41:29" pos:end="41:32"><expr pos:start="41:29" pos:end="41:32"><name pos:start="41:29" pos:end="41:32">char</name></expr></argument>, <argument pos:start="41:35" pos:end="41:47"><expr pos:start="41:35" pos:end="41:47"><name pos:start="41:35" pos:end="41:47">rawpasswddata</name></expr></argument>, <argument pos:start="41:50" pos:end="41:65"><expr pos:start="41:50" pos:end="41:65"><name pos:start="41:50" pos:end="41:61">rawpasswdlen</name> <operator pos:start="41:63" pos:end="41:63">+</operator> <literal type="number" pos:start="41:65" pos:end="41:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:17">rawpasswddata</name><index pos:start="43:18" pos:end="43:31">[<expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">rawpasswdlen</name></expr>]</index></name> <operator pos:start="43:33" pos:end="43:33">=</operator> <literal type="char" pos:start="43:35" pos:end="43:38">'\0'</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:59"><expr pos:start="47:5" pos:end="47:58"><name pos:start="47:5" pos:end="47:8">user</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:58"><name pos:start="47:12" pos:end="47:26">g_utf8_to_utf16</name><argument_list pos:start="47:27" pos:end="47:58">(<argument pos:start="47:28" pos:end="47:35"><expr pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:35">username</name></expr></argument>, <argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><operator pos:start="47:38" pos:end="47:38">-</operator><literal type="number" pos:start="47:39" pos:end="47:39">1</literal></expr></argument>, <argument pos:start="47:42" pos:end="47:45"><expr pos:start="47:42" pos:end="47:45"><name pos:start="47:42" pos:end="47:45">NULL</name></expr></argument>, <argument pos:start="47:48" pos:end="47:51"><expr pos:start="47:48" pos:end="47:51"><name pos:start="47:48" pos:end="47:51">NULL</name></expr></argument>, <argument pos:start="47:54" pos:end="47:57"><expr pos:start="47:54" pos:end="47:57"><name pos:start="47:54" pos:end="47:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:65"><expr pos:start="49:5" pos:end="49:64"><name pos:start="49:5" pos:end="49:9">wpass</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:64"><name pos:start="49:13" pos:end="49:27">g_utf8_to_utf16</name><argument_list pos:start="49:28" pos:end="49:64">(<argument pos:start="49:29" pos:end="49:41"><expr pos:start="49:29" pos:end="49:41"><name pos:start="49:29" pos:end="49:41">rawpasswddata</name></expr></argument>, <argument pos:start="49:44" pos:end="49:45"><expr pos:start="49:44" pos:end="49:45"><operator pos:start="49:44" pos:end="49:44">-</operator><literal type="number" pos:start="49:45" pos:end="49:45">1</literal></expr></argument>, <argument pos:start="49:48" pos:end="49:51"><expr pos:start="49:48" pos:end="49:51"><name pos:start="49:48" pos:end="49:51">NULL</name></expr></argument>, <argument pos:start="49:54" pos:end="49:57"><expr pos:start="49:54" pos:end="49:57"><name pos:start="49:54" pos:end="49:57">NULL</name></expr></argument>, <argument pos:start="49:60" pos:end="49:63"><expr pos:start="49:60" pos:end="49:63"><name pos:start="49:60" pos:end="49:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:10">pi1003</name><operator pos:start="53:11" pos:end="53:11">.</operator><name pos:start="53:12" pos:end="53:28">usri1003_password</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:36">wpass</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="59:31"><expr pos:start="55:5" pos:end="59:30"><name pos:start="55:5" pos:end="55:7">nas</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="59:30"><name pos:start="55:11" pos:end="55:24">NetUserSetInfo</name><argument_list pos:start="55:25" pos:end="59:30">(<argument pos:start="55:26" pos:end="55:29"><expr pos:start="55:26" pos:end="55:29"><name pos:start="55:26" pos:end="55:29">NULL</name></expr></argument>, <argument pos:start="55:32" pos:end="55:35"><expr pos:start="55:32" pos:end="55:35"><name pos:start="55:32" pos:end="55:35">user</name></expr></argument>,

                         <argument pos:start="57:26" pos:end="57:29"><expr pos:start="57:26" pos:end="57:29"><literal type="number" pos:start="57:26" pos:end="57:29">1003</literal></expr></argument>, <argument pos:start="57:32" pos:end="57:46"><expr pos:start="57:32" pos:end="57:46"><operator pos:start="57:32" pos:end="57:32">(</operator><name pos:start="57:33" pos:end="57:38">LPBYTE</name><operator pos:start="57:39" pos:end="57:39">)</operator><operator pos:start="57:40" pos:end="57:40">&amp;</operator><name pos:start="57:41" pos:end="57:46">pi1003</name></expr></argument>,

                         <argument pos:start="59:26" pos:end="59:29"><expr pos:start="59:26" pos:end="59:29"><name pos:start="59:26" pos:end="59:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:28">(<expr pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:11">nas</name> <operator pos:start="63:13" pos:end="63:14">!=</operator> <name pos:start="63:16" pos:end="63:27">NERR_Success</name></expr>)</condition> <block pos:start="63:30" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:20">

        <decl_stmt pos:start="65:9" pos:end="65:48"><decl pos:start="65:9" pos:end="65:47"><type pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:13">gchar</name> <modifier pos:start="65:15" pos:end="65:15">*</modifier></type><name pos:start="65:16" pos:end="65:18">msg</name> <init pos:start="65:20" pos:end="65:47">= <expr pos:start="65:22" pos:end="65:47"><call pos:start="65:22" pos:end="65:47"><name pos:start="65:22" pos:end="65:42">get_net_error_message</name><argument_list pos:start="65:43" pos:end="65:47">(<argument pos:start="65:44" pos:end="65:46"><expr pos:start="65:44" pos:end="65:46"><name pos:start="65:44" pos:end="65:46">nas</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:60"><expr pos:start="67:9" pos:end="67:59"><call pos:start="67:9" pos:end="67:59"><name pos:start="67:9" pos:end="67:18">error_setg</name><argument_list pos:start="67:19" pos:end="67:59">(<argument pos:start="67:20" pos:end="67:23"><expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">errp</name></expr></argument>, <argument pos:start="67:26" pos:end="67:53"><expr pos:start="67:26" pos:end="67:53"><literal type="string" pos:start="67:26" pos:end="67:53">"failed to set password: %s"</literal></expr></argument>, <argument pos:start="67:56" pos:end="67:58"><expr pos:start="67:56" pos:end="67:58"><name pos:start="67:56" pos:end="67:58">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:20"><expr pos:start="69:9" pos:end="69:19"><call pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:14">g_free</name><argument_list pos:start="69:15" pos:end="69:19">(<argument pos:start="69:16" pos:end="69:18"><expr pos:start="69:16" pos:end="69:18"><name pos:start="69:16" pos:end="69:18">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:17"><expr pos:start="75:5" pos:end="75:16"><call pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:16">(<argument pos:start="75:12" pos:end="75:15"><expr pos:start="75:12" pos:end="75:15"><name pos:start="75:12" pos:end="75:15">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:18"><expr pos:start="77:5" pos:end="77:17"><call pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:10">g_free</name><argument_list pos:start="77:11" pos:end="77:17">(<argument pos:start="77:12" pos:end="77:16"><expr pos:start="77:12" pos:end="77:16"><name pos:start="77:12" pos:end="77:16">wpass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:26"><expr pos:start="79:5" pos:end="79:25"><call pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:10">g_free</name><argument_list pos:start="79:11" pos:end="79:25">(<argument pos:start="79:12" pos:end="79:24"><expr pos:start="79:12" pos:end="79:24"><name pos:start="79:12" pos:end="79:24">rawpasswddata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
