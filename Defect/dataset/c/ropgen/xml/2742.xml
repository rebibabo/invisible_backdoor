<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2742.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">sdram_set_bcr</name> <parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:35">uint32_t</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">bcrp</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:51">uint32_t</name></type> <name pos:start="1:53" pos:end="1:55">bcr</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:68"><decl pos:start="1:58" pos:end="1:68"><type pos:start="1:58" pos:end="1:68"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:68">enabled</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <if_stmt pos:start="5:5" pos:end="21:5"><if pos:start="5:5" pos:end="21:5">if <condition pos:start="5:8" pos:end="5:27">(<expr pos:start="5:9" pos:end="5:26"><operator pos:start="5:9" pos:end="5:9">*</operator><name pos:start="5:10" pos:end="5:13">bcrp</name> <operator pos:start="5:15" pos:end="5:15">&amp;</operator> <literal type="number" pos:start="5:17" pos:end="5:26">0x00000001</literal></expr>)</condition> <block pos:start="5:29" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:56">

        <comment type="block" pos:start="7:9" pos:end="7:23">/* Unmap RAM */</comment>

<cpp:ifdef pos:start="9:1" pos:end="9:18">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:18">DEBUG_SDRAM</name></cpp:ifdef>

        <expr_stmt pos:start="11:9" pos:end="16:0"><expr pos:start="11:9" pos:end="13:62"><call pos:start="11:9" pos:end="13:62"><name pos:start="11:9" pos:end="11:14">printf</name><argument_list pos:start="11:15" pos:end="13:62">(<argument pos:start="11:16" pos:end="11:74"><expr pos:start="11:16" pos:end="11:74"><literal type="string" pos:start="11:16" pos:end="11:36">"%s: unmap RAM area "</literal> <name pos:start="11:38" pos:end="11:51">TARGET_FMT_plx</name> <literal type="string" pos:start="11:53" pos:end="11:55">" "</literal> <name pos:start="11:57" pos:end="11:69">TARGET_FMT_lx</name> <literal type="string" pos:start="11:71" pos:end="11:74">"\n"</literal></expr></argument>,

               <argument pos:start="13:16" pos:end="13:23"><expr pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:23">__func__</name></expr></argument>, <argument pos:start="13:26" pos:end="13:42"><expr pos:start="13:26" pos:end="13:42"><call pos:start="13:26" pos:end="13:42"><name pos:start="13:26" pos:end="13:35">sdram_base</name><argument_list pos:start="13:36" pos:end="13:42">(<argument pos:start="13:37" pos:end="13:41"><expr pos:start="13:37" pos:end="13:41"><operator pos:start="13:37" pos:end="13:37">*</operator><name pos:start="13:38" pos:end="13:41">bcrp</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:45" pos:end="13:61"><expr pos:start="13:45" pos:end="13:61"><call pos:start="13:45" pos:end="13:61"><name pos:start="13:45" pos:end="13:54">sdram_size</name><argument_list pos:start="13:55" pos:end="13:61">(<argument pos:start="13:56" pos:end="13:60"><expr pos:start="13:56" pos:end="13:60"><operator pos:start="13:56" pos:end="13:56">*</operator><name pos:start="13:57" pos:end="13:60">bcrp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="17:9" pos:end="19:56"><expr pos:start="17:9" pos:end="19:55"><call pos:start="17:9" pos:end="19:55"><name pos:start="17:9" pos:end="17:36">cpu_register_physical_memory</name><argument_list pos:start="17:37" pos:end="19:55">(<argument pos:start="17:38" pos:end="17:54"><expr pos:start="17:38" pos:end="17:54"><call pos:start="17:38" pos:end="17:54"><name pos:start="17:38" pos:end="17:47">sdram_base</name><argument_list pos:start="17:48" pos:end="17:54">(<argument pos:start="17:49" pos:end="17:53"><expr pos:start="17:49" pos:end="17:53"><operator pos:start="17:49" pos:end="17:49">*</operator><name pos:start="17:50" pos:end="17:53">bcrp</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:57" pos:end="17:73"><expr pos:start="17:57" pos:end="17:73"><call pos:start="17:57" pos:end="17:73"><name pos:start="17:57" pos:end="17:66">sdram_size</name><argument_list pos:start="17:67" pos:end="17:73">(<argument pos:start="17:68" pos:end="17:72"><expr pos:start="17:68" pos:end="17:72"><operator pos:start="17:68" pos:end="17:68">*</operator><name pos:start="17:69" pos:end="17:72">bcrp</name></expr></argument>)</argument_list></call></expr></argument>,

                                     <argument pos:start="19:38" pos:end="19:54"><expr pos:start="19:38" pos:end="19:54"><name pos:start="19:38" pos:end="19:54">IO_MEM_UNASSIGNED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><operator pos:start="23:5" pos:end="23:5">*</operator><name pos:start="23:6" pos:end="23:9">bcrp</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:15">bcr</name> <operator pos:start="23:17" pos:end="23:17">&amp;</operator> <literal type="number" pos:start="23:19" pos:end="23:28">0xFFDEE001</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:38">(<expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:15">enabled</name> <operator pos:start="25:17" pos:end="25:18">&amp;&amp;</operator> <operator pos:start="25:20" pos:end="25:20">(</operator><name pos:start="25:21" pos:end="25:23">bcr</name> <operator pos:start="25:25" pos:end="25:25">&amp;</operator> <literal type="number" pos:start="25:27" pos:end="25:36">0x00000001</literal><operator pos:start="25:37" pos:end="25:37">)</operator></expr>)</condition> <block pos:start="25:40" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:67">

<cpp:ifdef pos:start="27:1" pos:end="27:18">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:18">DEBUG_SDRAM</name></cpp:ifdef>

        <expr_stmt pos:start="29:9" pos:end="34:0"><expr pos:start="29:9" pos:end="31:58"><call pos:start="29:9" pos:end="31:58"><name pos:start="29:9" pos:end="29:14">printf</name><argument_list pos:start="29:15" pos:end="31:58">(<argument pos:start="29:16" pos:end="29:72"><expr pos:start="29:16" pos:end="29:72"><literal type="string" pos:start="29:16" pos:end="29:34">"%s: Map RAM area "</literal> <name pos:start="29:36" pos:end="29:49">TARGET_FMT_plx</name> <literal type="string" pos:start="29:51" pos:end="29:53">" "</literal> <name pos:start="29:55" pos:end="29:67">TARGET_FMT_lx</name> <literal type="string" pos:start="29:69" pos:end="29:72">"\n"</literal></expr></argument>,

               <argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23">__func__</name></expr></argument>, <argument pos:start="31:26" pos:end="31:40"><expr pos:start="31:26" pos:end="31:40"><call pos:start="31:26" pos:end="31:40"><name pos:start="31:26" pos:end="31:35">sdram_base</name><argument_list pos:start="31:36" pos:end="31:40">(<argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:39">bcr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:43" pos:end="31:57"><expr pos:start="31:43" pos:end="31:57"><call pos:start="31:43" pos:end="31:57"><name pos:start="31:43" pos:end="31:52">sdram_size</name><argument_list pos:start="31:53" pos:end="31:57">(<argument pos:start="31:54" pos:end="31:56"><expr pos:start="31:54" pos:end="31:56"><name pos:start="31:54" pos:end="31:56">bcr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="35:9" pos:end="37:67"><expr pos:start="35:9" pos:end="37:66"><call pos:start="35:9" pos:end="37:66"><name pos:start="35:9" pos:end="35:36">cpu_register_physical_memory</name><argument_list pos:start="35:37" pos:end="37:66">(<argument pos:start="35:38" pos:end="35:52"><expr pos:start="35:38" pos:end="35:52"><call pos:start="35:38" pos:end="35:52"><name pos:start="35:38" pos:end="35:47">sdram_base</name><argument_list pos:start="35:48" pos:end="35:52">(<argument pos:start="35:49" pos:end="35:51"><expr pos:start="35:49" pos:end="35:51"><name pos:start="35:49" pos:end="35:51">bcr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:55" pos:end="35:69"><expr pos:start="35:55" pos:end="35:69"><call pos:start="35:55" pos:end="35:69"><name pos:start="35:55" pos:end="35:64">sdram_size</name><argument_list pos:start="35:65" pos:end="35:69">(<argument pos:start="35:66" pos:end="35:68"><expr pos:start="35:66" pos:end="35:68"><name pos:start="35:66" pos:end="35:68">bcr</name></expr></argument>)</argument_list></call></expr></argument>,

                                     <argument pos:start="37:38" pos:end="37:65"><expr pos:start="37:38" pos:end="37:65"><call pos:start="37:38" pos:end="37:52"><name pos:start="37:38" pos:end="37:47">sdram_base</name><argument_list pos:start="37:48" pos:end="37:52">(<argument pos:start="37:49" pos:end="37:51"><expr pos:start="37:49" pos:end="37:51"><name pos:start="37:49" pos:end="37:51">bcr</name></expr></argument>)</argument_list></call> <operator pos:start="37:54" pos:end="37:54">|</operator> <name pos:start="37:56" pos:end="37:65">IO_MEM_RAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
