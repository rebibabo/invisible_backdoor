<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4821.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">decode_picture_timing</name><parameter_list pos:start="1:33" pos:end="1:48">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:44">H264Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:13">

    <if_stmt pos:start="5:5" pos:end="17:5"><if pos:start="5:5" pos:end="17:5">if <condition pos:start="5:8" pos:end="7:47">(<expr pos:start="5:9" pos:end="7:46"><name pos:start="5:9" pos:end="5:46"><name pos:start="5:9" pos:end="5:9">h</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:14">sps</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:46">nal_hrd_parameters_present_flag</name></name> <operator pos:start="5:48" pos:end="5:49">||</operator>

        <name pos:start="7:9" pos:end="7:46"><name pos:start="7:9" pos:end="7:9">h</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:14">sps</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:46">vcl_hrd_parameters_present_flag</name></name></expr>)</condition> <block pos:start="7:49" pos:end="17:5">{<block_content pos:start="9:9" pos:end="15:76">

        <expr_stmt pos:start="9:9" pos:end="11:77"><expr pos:start="9:9" pos:end="11:76"><name pos:start="9:9" pos:end="9:32"><name pos:start="9:9" pos:end="9:9">h</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:32">sei_cpb_removal_delay</name></name> <operator pos:start="9:34" pos:end="9:34">=</operator> <call pos:start="9:36" pos:end="11:76"><name pos:start="9:36" pos:end="9:43">get_bits</name><argument_list pos:start="9:44" pos:end="11:76">(<argument pos:start="9:45" pos:end="9:50"><expr pos:start="9:45" pos:end="9:50"><operator pos:start="9:45" pos:end="9:45">&amp;</operator><name pos:start="9:46" pos:end="9:50"><name pos:start="9:46" pos:end="9:46">h</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:50">gb</name></name></expr></argument>,

                                            <argument pos:start="11:45" pos:end="11:75"><expr pos:start="11:45" pos:end="11:75"><name pos:start="11:45" pos:end="11:75"><name pos:start="11:45" pos:end="11:45">h</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:50">sps</name><operator pos:start="11:51" pos:end="11:51">.</operator><name pos:start="11:52" pos:end="11:75">cpb_removal_delay_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="15:76"><expr pos:start="13:9" pos:end="15:75"><name pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:9">h</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:31">sei_dpb_output_delay</name></name>  <operator pos:start="13:34" pos:end="13:34">=</operator> <call pos:start="13:36" pos:end="15:75"><name pos:start="13:36" pos:end="13:43">get_bits</name><argument_list pos:start="13:44" pos:end="15:75">(<argument pos:start="13:45" pos:end="13:50"><expr pos:start="13:45" pos:end="13:50"><operator pos:start="13:45" pos:end="13:45">&amp;</operator><name pos:start="13:46" pos:end="13:50"><name pos:start="13:46" pos:end="13:46">h</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:50">gb</name></name></expr></argument>,

                                            <argument pos:start="15:45" pos:end="15:74"><expr pos:start="15:45" pos:end="15:74"><name pos:start="15:45" pos:end="15:74"><name pos:start="15:45" pos:end="15:45">h</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:50">sps</name><operator pos:start="15:51" pos:end="15:51">.</operator><name pos:start="15:52" pos:end="15:74">dpb_output_delay_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="109:5"><if pos:start="19:5" pos:end="109:5">if <condition pos:start="19:8" pos:end="19:39">(<expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:9">h</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:14">sps</name><operator pos:start="19:15" pos:end="19:15">.</operator><name pos:start="19:16" pos:end="19:38">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="19:41" pos:end="109:5">{<block_content pos:start="21:9" pos:end="107:54">

        <decl_stmt pos:start="21:9" pos:end="21:37"><decl pos:start="21:9" pos:end="21:22"><type pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:16">unsigned</name> <name pos:start="21:18" pos:end="21:20">int</name></type> <name pos:start="21:22" pos:end="21:22">i</name></decl>, <decl pos:start="21:25" pos:end="21:36"><type ref="prev" pos:start="21:9" pos:end="21:20"/><name pos:start="21:25" pos:end="21:36">num_clock_ts</name></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:9">h</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:25">sei_pic_struct</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <call pos:start="25:29" pos:end="25:47"><name pos:start="25:29" pos:end="25:36">get_bits</name><argument_list pos:start="25:37" pos:end="25:47">(<argument pos:start="25:38" pos:end="25:43"><expr pos:start="25:38" pos:end="25:43"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:43"><name pos:start="25:39" pos:end="25:39">h</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:43">gb</name></name></expr></argument>, <argument pos:start="25:46" pos:end="25:46"><expr pos:start="25:46" pos:end="25:46"><literal type="number" pos:start="25:46" pos:end="25:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:9">h</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:22">sei_ct_type</name></name>    <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="33:39"><if pos:start="31:9" pos:end="33:39">if <condition pos:start="31:12" pos:end="31:62">(<expr pos:start="31:13" pos:end="31:61"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:13">h</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:29">sei_pic_struct</name></name> <operator pos:start="31:31" pos:end="31:31">&gt;</operator> <name pos:start="31:33" pos:end="31:61">SEI_PIC_STRUCT_FRAME_TRIPLING</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:39"><block_content pos:start="33:13" pos:end="33:39">

            <return pos:start="33:13" pos:end="33:39">return <expr pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:65"><expr pos:start="37:9" pos:end="37:64"><name pos:start="37:9" pos:end="37:20">num_clock_ts</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:64"><name pos:start="37:24" pos:end="37:45">sei_num_clock_ts_table</name><index pos:start="37:46" pos:end="37:64">[<expr pos:start="37:47" pos:end="37:63"><name pos:start="37:47" pos:end="37:63"><name pos:start="37:47" pos:end="37:47">h</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:63">sei_pic_struct</name></name></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="41:9" pos:end="99:9">for <control pos:start="41:13" pos:end="41:42">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:37"><expr pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:36">num_clock_ts</name></expr>;</condition> <incr pos:start="41:39" pos:end="41:41"><expr pos:start="41:39" pos:end="41:41"><name pos:start="41:39" pos:end="41:39">i</name><operator pos:start="41:40" pos:end="41:41">++</operator></expr></incr>)</control> <block pos:start="41:44" pos:end="99:9">{<block_content pos:start="43:13" pos:end="97:13">

            <if_stmt pos:start="43:13" pos:end="97:13"><if pos:start="43:13" pos:end="97:13">if <condition pos:start="43:16" pos:end="43:36">(<expr pos:start="43:17" pos:end="43:35"><call pos:start="43:17" pos:end="43:35"><name pos:start="43:17" pos:end="43:24">get_bits</name><argument_list pos:start="43:25" pos:end="43:35">(<argument pos:start="43:26" pos:end="43:31"><expr pos:start="43:26" pos:end="43:31"><operator pos:start="43:26" pos:end="43:26">&amp;</operator><name pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:27">h</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:31">gb</name></name></expr></argument>, <argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><literal type="number" pos:start="43:34" pos:end="43:34">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:38" pos:end="97:13">{<block_content pos:start="45:17" pos:end="95:57">                <comment type="block" pos:start="43:55" pos:end="43:80">/* clock_timestamp_flag */</comment>

                <decl_stmt pos:start="45:17" pos:end="45:49"><decl pos:start="45:17" pos:end="45:48"><type pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:24">unsigned</name> <name pos:start="45:26" pos:end="45:28">int</name></type> <name pos:start="45:30" pos:end="45:48">full_timestamp_flag</name></decl>;</decl_stmt>



                <expr_stmt pos:start="49:17" pos:end="49:59"><expr pos:start="49:17" pos:end="49:58"><name pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:17">h</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:30">sei_ct_type</name></name> <operator pos:start="49:32" pos:end="49:33">|=</operator> <literal type="number" pos:start="49:35" pos:end="49:35">1</literal> <operator pos:start="49:37" pos:end="49:38">&lt;&lt;</operator> <call pos:start="49:40" pos:end="49:58"><name pos:start="49:40" pos:end="49:47">get_bits</name><argument_list pos:start="49:48" pos:end="49:58">(<argument pos:start="49:49" pos:end="49:54"><expr pos:start="49:49" pos:end="49:54"><operator pos:start="49:49" pos:end="49:49">&amp;</operator><name pos:start="49:50" pos:end="49:54"><name pos:start="49:50" pos:end="49:50">h</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:54">gb</name></name></expr></argument>, <argument pos:start="49:57" pos:end="49:57"><expr pos:start="49:57" pos:end="49:57"><literal type="number" pos:start="49:57" pos:end="49:57">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:37"><expr pos:start="51:17" pos:end="51:36"><call pos:start="51:17" pos:end="51:36"><name pos:start="51:17" pos:end="51:25">skip_bits</name><argument_list pos:start="51:26" pos:end="51:36">(<argument pos:start="51:27" pos:end="51:32"><expr pos:start="51:27" pos:end="51:32"><operator pos:start="51:27" pos:end="51:27">&amp;</operator><name pos:start="51:28" pos:end="51:32"><name pos:start="51:28" pos:end="51:28">h</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:32">gb</name></name></expr></argument>, <argument pos:start="51:35" pos:end="51:35"><expr pos:start="51:35" pos:end="51:35"><literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="51:55" pos:end="51:81">/* nuit_field_based_flag */</comment>

                <expr_stmt pos:start="53:17" pos:end="53:37"><expr pos:start="53:17" pos:end="53:36"><call pos:start="53:17" pos:end="53:36"><name pos:start="53:17" pos:end="53:25">skip_bits</name><argument_list pos:start="53:26" pos:end="53:36">(<argument pos:start="53:27" pos:end="53:32"><expr pos:start="53:27" pos:end="53:32"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:28">h</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:32">gb</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><literal type="number" pos:start="53:35" pos:end="53:35">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="53:55" pos:end="53:73">/* counting_type */</comment>

                <expr_stmt pos:start="55:17" pos:end="55:58"><expr pos:start="55:17" pos:end="55:57"><name pos:start="55:17" pos:end="55:35">full_timestamp_flag</name> <operator pos:start="55:37" pos:end="55:37">=</operator> <call pos:start="55:39" pos:end="55:57"><name pos:start="55:39" pos:end="55:46">get_bits</name><argument_list pos:start="55:47" pos:end="55:57">(<argument pos:start="55:48" pos:end="55:53"><expr pos:start="55:48" pos:end="55:53"><operator pos:start="55:48" pos:end="55:48">&amp;</operator><name pos:start="55:49" pos:end="55:53"><name pos:start="55:49" pos:end="55:49">h</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:53">gb</name></name></expr></argument>, <argument pos:start="55:56" pos:end="55:56"><expr pos:start="55:56" pos:end="55:56"><literal type="number" pos:start="55:56" pos:end="55:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:37"><expr pos:start="57:17" pos:end="57:36"><call pos:start="57:17" pos:end="57:36"><name pos:start="57:17" pos:end="57:25">skip_bits</name><argument_list pos:start="57:26" pos:end="57:36">(<argument pos:start="57:27" pos:end="57:32"><expr pos:start="57:27" pos:end="57:32"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:32"><name pos:start="57:28" pos:end="57:28">h</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:32">gb</name></name></expr></argument>, <argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="57:55" pos:end="57:78">/* discontinuity_flag */</comment>

                <expr_stmt pos:start="59:17" pos:end="59:37"><expr pos:start="59:17" pos:end="59:36"><call pos:start="59:17" pos:end="59:36"><name pos:start="59:17" pos:end="59:25">skip_bits</name><argument_list pos:start="59:26" pos:end="59:36">(<argument pos:start="59:27" pos:end="59:32"><expr pos:start="59:27" pos:end="59:32"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:28">h</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:32">gb</name></name></expr></argument>, <argument pos:start="59:35" pos:end="59:35"><expr pos:start="59:35" pos:end="59:35"><literal type="number" pos:start="59:35" pos:end="59:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="59:55" pos:end="59:76">/* cnt_dropped_flag */</comment>

                <expr_stmt pos:start="61:17" pos:end="61:37"><expr pos:start="61:17" pos:end="61:36"><call pos:start="61:17" pos:end="61:36"><name pos:start="61:17" pos:end="61:25">skip_bits</name><argument_list pos:start="61:26" pos:end="61:36">(<argument pos:start="61:27" pos:end="61:32"><expr pos:start="61:27" pos:end="61:32"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:32"><name pos:start="61:28" pos:end="61:28">h</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:32">gb</name></name></expr></argument>, <argument pos:start="61:35" pos:end="61:35"><expr pos:start="61:35" pos:end="61:35"><literal type="number" pos:start="61:35" pos:end="61:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="61:55" pos:end="61:68">/* n_frames */</comment>

                <if_stmt pos:start="63:17" pos:end="89:17"><if pos:start="63:17" pos:end="71:17">if <condition pos:start="63:20" pos:end="63:40">(<expr pos:start="63:21" pos:end="63:39"><name pos:start="63:21" pos:end="63:39">full_timestamp_flag</name></expr>)</condition> <block pos:start="63:42" pos:end="71:17">{<block_content pos:start="65:21" pos:end="69:41">

                    <expr_stmt pos:start="65:21" pos:end="65:41"><expr pos:start="65:21" pos:end="65:40"><call pos:start="65:21" pos:end="65:40"><name pos:start="65:21" pos:end="65:29">skip_bits</name><argument_list pos:start="65:30" pos:end="65:40">(<argument pos:start="65:31" pos:end="65:36"><expr pos:start="65:31" pos:end="65:36"><operator pos:start="65:31" pos:end="65:31">&amp;</operator><name pos:start="65:32" pos:end="65:36"><name pos:start="65:32" pos:end="65:32">h</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:36">gb</name></name></expr></argument>, <argument pos:start="65:39" pos:end="65:39"><expr pos:start="65:39" pos:end="65:39"><literal type="number" pos:start="65:39" pos:end="65:39">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="65:55" pos:end="65:79">/* seconds_value 0..59 */</comment>

                    <expr_stmt pos:start="67:21" pos:end="67:41"><expr pos:start="67:21" pos:end="67:40"><call pos:start="67:21" pos:end="67:40"><name pos:start="67:21" pos:end="67:29">skip_bits</name><argument_list pos:start="67:30" pos:end="67:40">(<argument pos:start="67:31" pos:end="67:36"><expr pos:start="67:31" pos:end="67:36"><operator pos:start="67:31" pos:end="67:31">&amp;</operator><name pos:start="67:32" pos:end="67:36"><name pos:start="67:32" pos:end="67:32">h</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:36">gb</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:39"><expr pos:start="67:39" pos:end="67:39"><literal type="number" pos:start="67:39" pos:end="67:39">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="67:55" pos:end="67:79">/* minutes_value 0..59 */</comment>

                    <expr_stmt pos:start="69:21" pos:end="69:41"><expr pos:start="69:21" pos:end="69:40"><call pos:start="69:21" pos:end="69:40"><name pos:start="69:21" pos:end="69:29">skip_bits</name><argument_list pos:start="69:30" pos:end="69:40">(<argument pos:start="69:31" pos:end="69:36"><expr pos:start="69:31" pos:end="69:36"><operator pos:start="69:31" pos:end="69:31">&amp;</operator><name pos:start="69:32" pos:end="69:36"><name pos:start="69:32" pos:end="69:32">h</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:36">gb</name></name></expr></argument>, <argument pos:start="69:39" pos:end="69:39"><expr pos:start="69:39" pos:end="69:39"><literal type="number" pos:start="69:39" pos:end="69:39">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="block" pos:start="69:55" pos:end="69:77">/* hours_value 0..23 */</comment>

                </block_content>}</block></if> <else pos:start="71:19" pos:end="89:17">else <block pos:start="71:24" pos:end="89:17">{<block_content pos:start="73:21" pos:end="87:21">

                    <if_stmt pos:start="73:21" pos:end="87:21"><if pos:start="73:21" pos:end="87:21">if <condition pos:start="73:24" pos:end="73:44">(<expr pos:start="73:25" pos:end="73:43"><call pos:start="73:25" pos:end="73:43"><name pos:start="73:25" pos:end="73:32">get_bits</name><argument_list pos:start="73:33" pos:end="73:43">(<argument pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:39"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:39"><name pos:start="73:35" pos:end="73:35">h</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:39">gb</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:42"><expr pos:start="73:42" pos:end="73:42"><literal type="number" pos:start="73:42" pos:end="73:42">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:46" pos:end="87:21">{<block_content pos:start="75:25" pos:end="85:25">        <comment type="block" pos:start="73:55" pos:end="73:72">/* seconds_flag */</comment>

                        <expr_stmt pos:start="75:25" pos:end="75:45"><expr pos:start="75:25" pos:end="75:44"><call pos:start="75:25" pos:end="75:44"><name pos:start="75:25" pos:end="75:33">skip_bits</name><argument_list pos:start="75:34" pos:end="75:44">(<argument pos:start="75:35" pos:end="75:40"><expr pos:start="75:35" pos:end="75:40"><operator pos:start="75:35" pos:end="75:35">&amp;</operator><name pos:start="75:36" pos:end="75:40"><name pos:start="75:36" pos:end="75:36">h</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:40">gb</name></name></expr></argument>, <argument pos:start="75:43" pos:end="75:43"><expr pos:start="75:43" pos:end="75:43"><literal type="number" pos:start="75:43" pos:end="75:43">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="75:55" pos:end="75:85">/* seconds_value range 0..59 */</comment>

                        <if_stmt pos:start="77:25" pos:end="85:25"><if pos:start="77:25" pos:end="85:25">if <condition pos:start="77:28" pos:end="77:48">(<expr pos:start="77:29" pos:end="77:47"><call pos:start="77:29" pos:end="77:47"><name pos:start="77:29" pos:end="77:36">get_bits</name><argument_list pos:start="77:37" pos:end="77:47">(<argument pos:start="77:38" pos:end="77:43"><expr pos:start="77:38" pos:end="77:43"><operator pos:start="77:38" pos:end="77:38">&amp;</operator><name pos:start="77:39" pos:end="77:43"><name pos:start="77:39" pos:end="77:39">h</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:43">gb</name></name></expr></argument>, <argument pos:start="77:46" pos:end="77:46"><expr pos:start="77:46" pos:end="77:46"><literal type="number" pos:start="77:46" pos:end="77:46">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:50" pos:end="85:25">{<block_content pos:start="79:29" pos:end="83:53">    <comment type="block" pos:start="77:55" pos:end="77:72">/* minutes_flag */</comment>

                            <expr_stmt pos:start="79:29" pos:end="79:49"><expr pos:start="79:29" pos:end="79:48"><call pos:start="79:29" pos:end="79:48"><name pos:start="79:29" pos:end="79:37">skip_bits</name><argument_list pos:start="79:38" pos:end="79:48">(<argument pos:start="79:39" pos:end="79:44"><expr pos:start="79:39" pos:end="79:44"><operator pos:start="79:39" pos:end="79:39">&amp;</operator><name pos:start="79:40" pos:end="79:44"><name pos:start="79:40" pos:end="79:40">h</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:44">gb</name></name></expr></argument>, <argument pos:start="79:47" pos:end="79:47"><expr pos:start="79:47" pos:end="79:47"><literal type="number" pos:start="79:47" pos:end="79:47">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="79:55" pos:end="79:79">/* minutes_value 0..59 */</comment>

                            <if_stmt pos:start="81:29" pos:end="83:53"><if pos:start="81:29" pos:end="83:53">if <condition pos:start="81:32" pos:end="81:52">(<expr pos:start="81:33" pos:end="81:51"><call pos:start="81:33" pos:end="81:51"><name pos:start="81:33" pos:end="81:40">get_bits</name><argument_list pos:start="81:41" pos:end="81:51">(<argument pos:start="81:42" pos:end="81:47"><expr pos:start="81:42" pos:end="81:47"><operator pos:start="81:42" pos:end="81:42">&amp;</operator><name pos:start="81:43" pos:end="81:47"><name pos:start="81:43" pos:end="81:43">h</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:47">gb</name></name></expr></argument>, <argument pos:start="81:50" pos:end="81:50"><expr pos:start="81:50" pos:end="81:50"><literal type="number" pos:start="81:50" pos:end="81:50">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="83:33" pos:end="83:53"><block_content pos:start="83:33" pos:end="83:53">  <comment type="block" pos:start="81:55" pos:end="81:70">/* hours_flag */</comment>

                                <expr_stmt pos:start="83:33" pos:end="83:53"><expr pos:start="83:33" pos:end="83:52"><call pos:start="83:33" pos:end="83:52"><name pos:start="83:33" pos:end="83:41">skip_bits</name><argument_list pos:start="83:42" pos:end="83:52">(<argument pos:start="83:43" pos:end="83:48"><expr pos:start="83:43" pos:end="83:48"><operator pos:start="83:43" pos:end="83:43">&amp;</operator><name pos:start="83:44" pos:end="83:48"><name pos:start="83:44" pos:end="83:44">h</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:48">gb</name></name></expr></argument>, <argument pos:start="83:51" pos:end="83:51"><expr pos:start="83:51" pos:end="83:51"><literal type="number" pos:start="83:51" pos:end="83:51">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="83:55" pos:end="83:77">/* hours_value 0..23 */</comment>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="91:17" pos:end="95:57"><if pos:start="91:17" pos:end="95:57">if <condition pos:start="91:20" pos:end="91:50">(<expr pos:start="91:21" pos:end="91:49"><name pos:start="91:21" pos:end="91:45"><name pos:start="91:21" pos:end="91:21">h</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:26">sps</name><operator pos:start="91:27" pos:end="91:27">.</operator><name pos:start="91:28" pos:end="91:45">time_offset_length</name></name> <operator pos:start="91:47" pos:end="91:47">&gt;</operator> <literal type="number" pos:start="91:49" pos:end="91:49">0</literal></expr>)</condition><block type="pseudo" pos:start="93:21" pos:end="95:57"><block_content pos:start="93:21" pos:end="95:57">

                    <expr_stmt pos:start="93:21" pos:end="95:57"><expr pos:start="93:21" pos:end="95:56"><call pos:start="93:21" pos:end="95:56"><name pos:start="93:21" pos:end="93:29">skip_bits</name><argument_list pos:start="93:30" pos:end="95:56">(<argument pos:start="93:31" pos:end="93:36"><expr pos:start="93:31" pos:end="93:36"><operator pos:start="93:31" pos:end="93:31">&amp;</operator><name pos:start="93:32" pos:end="93:36"><name pos:start="93:32" pos:end="93:32">h</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:36">gb</name></name></expr></argument>,

                              <argument pos:start="95:31" pos:end="95:55"><expr pos:start="95:31" pos:end="95:55"><name pos:start="95:31" pos:end="95:55"><name pos:start="95:31" pos:end="95:31">h</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:36">sps</name><operator pos:start="95:37" pos:end="95:37">.</operator><name pos:start="95:38" pos:end="95:55">time_offset_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="95:59" pos:end="95:75">/* time_offset */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="103:9" pos:end="107:54"><if pos:start="103:9" pos:end="107:54">if <condition pos:start="103:12" pos:end="103:49">(<expr pos:start="103:13" pos:end="103:48"><name pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:13">h</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:20">avctx</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:27">debug</name></name> <operator pos:start="103:29" pos:end="103:29">&amp;</operator> <name pos:start="103:31" pos:end="103:48">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="107:54"><block_content pos:start="105:13" pos:end="107:54">

            <expr_stmt pos:start="105:13" pos:end="107:54"><expr pos:start="105:13" pos:end="107:53"><call pos:start="105:13" pos:end="107:53"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="107:53">(<argument pos:start="105:20" pos:end="105:27"><expr pos:start="105:20" pos:end="105:27"><name pos:start="105:20" pos:end="105:27"><name pos:start="105:20" pos:end="105:20">h</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:27">avctx</name></name></expr></argument>, <argument pos:start="105:30" pos:end="105:41"><expr pos:start="105:30" pos:end="105:41"><name pos:start="105:30" pos:end="105:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:44" pos:end="105:71"><expr pos:start="105:44" pos:end="105:71"><literal type="string" pos:start="105:44" pos:end="105:71">"ct_type:%X pic_struct:%d\n"</literal></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:33"><expr pos:start="107:20" pos:end="107:33"><name pos:start="107:20" pos:end="107:33"><name pos:start="107:20" pos:end="107:20">h</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:33">sei_ct_type</name></name></expr></argument>, <argument pos:start="107:36" pos:end="107:52"><expr pos:start="107:36" pos:end="107:52"><name pos:start="107:36" pos:end="107:52"><name pos:start="107:36" pos:end="107:36">h</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:52">sei_pic_struct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
