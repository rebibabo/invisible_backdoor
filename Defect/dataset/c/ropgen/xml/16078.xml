<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16078.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">abi_long</name></type> <name pos:start="1:17" pos:end="1:23">do_bind</name><parameter_list pos:start="1:24" pos:end="3:42">(<parameter pos:start="1:25" pos:end="1:34"><decl pos:start="1:25" pos:end="1:34"><type pos:start="1:25" pos:end="1:34"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:34">sockfd</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:45">abi_ulong</name></type> <name pos:start="1:47" pos:end="1:57">target_addr</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:41"><decl pos:start="3:25" pos:end="3:41"><type pos:start="3:25" pos:end="3:41"><name pos:start="3:25" pos:end="3:33">socklen_t</name></type> <name pos:start="3:35" pos:end="3:41">addrlen</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:50">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">abi_long</name></type> <name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:30"><if pos:start="13:5" pos:end="15:30">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:15">addrlen</name> <operator pos:start="13:17" pos:end="13:17">&lt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:30"><block_content pos:start="15:9" pos:end="15:30">

        <return pos:start="15:9" pos:end="15:30">return <expr pos:start="15:16" pos:end="15:29"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:29">TARGET_EINVAL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:8">addr</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:17">alloca</name><argument_list pos:start="19:18" pos:end="19:28">(<argument pos:start="19:19" pos:end="19:27"><expr pos:start="19:19" pos:end="19:27"><name pos:start="19:19" pos:end="19:25">addrlen</name><operator pos:start="19:26" pos:end="19:26">+</operator><literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:61"><name pos:start="23:11" pos:end="23:33">target_to_host_sockaddr</name><argument_list pos:start="23:34" pos:end="23:61">(<argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:38">addr</name></expr></argument>, <argument pos:start="23:41" pos:end="23:51"><expr pos:start="23:41" pos:end="23:51"><name pos:start="23:41" pos:end="23:51">target_addr</name></expr></argument>, <argument pos:start="23:54" pos:end="23:60"><expr pos:start="23:54" pos:end="23:60"><name pos:start="23:54" pos:end="23:60">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">ret</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:50">return <expr pos:start="31:12" pos:end="31:49"><call pos:start="31:12" pos:end="31:49"><name pos:start="31:12" pos:end="31:20">get_errno</name><argument_list pos:start="31:21" pos:end="31:49">(<argument pos:start="31:22" pos:end="31:48"><expr pos:start="31:22" pos:end="31:48"><call pos:start="31:22" pos:end="31:48"><name pos:start="31:22" pos:end="31:25">bind</name><argument_list pos:start="31:26" pos:end="31:48">(<argument pos:start="31:27" pos:end="31:32"><expr pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:32">sockfd</name></expr></argument>, <argument pos:start="31:35" pos:end="31:38"><expr pos:start="31:35" pos:end="31:38"><name pos:start="31:35" pos:end="31:38">addr</name></expr></argument>, <argument pos:start="31:41" pos:end="31:47"><expr pos:start="31:41" pos:end="31:47"><name pos:start="31:41" pos:end="31:47">addrlen</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
