<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21351.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">cpu_restore_state_from_tb</name><parameter_list pos:start="1:37" pos:end="3:59">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">cpu</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><name pos:start="1:53" pos:end="1:68">TranslationBlock</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">tb</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:58"><decl pos:start="3:38" pos:end="3:58"><type pos:start="3:38" pos:end="3:58"><name pos:start="3:38" pos:end="3:46">uintptr_t</name></type> <name pos:start="3:48" pos:end="3:58">searched_pc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">CPUArchState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">env</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">env_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">TCGContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:28">= <expr pos:start="9:21" pos:end="9:28"><operator pos:start="9:21" pos:end="9:21">&amp;</operator><name pos:start="9:22" pos:end="9:28">tcg_ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="16:0"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">uintptr_t</name></type> <name pos:start="13:15" pos:end="13:20">tc_ptr</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="15:1" pos:end="15:22">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:22">CONFIG_PROFILER</name></cpp:ifdef>

    <decl_stmt pos:start="17:5" pos:end="24:0"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:14">ti</name></decl>;</decl_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="23:1" pos:end="23:22">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:6">ti</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:27"><name pos:start="25:10" pos:end="25:25">profile_getclock</name><argument_list pos:start="25:26" pos:end="25:27">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><call pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:18">tcg_func_start</name><argument_list pos:start="29:19" pos:end="29:21">(<argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><call pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:28">gen_intermediate_code_pc</name><argument_list pos:start="33:29" pos:end="33:37">(<argument pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:32"><name pos:start="33:30" pos:end="33:32">env</name></expr></argument>, <argument pos:start="33:35" pos:end="33:36"><expr pos:start="33:35" pos:end="33:36"><name pos:start="33:35" pos:end="33:36">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:18">use_icount</name></expr>)</condition> <block pos:start="37:21" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:27">

        <comment type="block" pos:start="39:9" pos:end="39:65">/* Reset the cycle counter to the start of the block.  */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:11">cpu</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:24">icount_decr</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:28">u16</name><operator pos:start="41:29" pos:end="41:29">.</operator><name pos:start="41:30" pos:end="41:32">low</name></name> <operator pos:start="41:34" pos:end="41:35">+=</operator> <name pos:start="41:37" pos:end="41:46"><name pos:start="41:37" pos:end="41:38">tb</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:46">icount</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="43:9" pos:end="43:33">/* Clear the IO flag.  */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:11">cpu</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:22">can_do_io</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:51">/* find opc index corresponding to search_pc */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:35"><expr pos:start="53:5" pos:end="53:34"><name pos:start="53:5" pos:end="53:10">tc_ptr</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <operator pos:start="53:14" pos:end="53:14">(</operator><name pos:start="53:15" pos:end="53:23">uintptr_t</name><operator pos:start="53:24" pos:end="53:24">)</operator><name pos:start="53:25" pos:end="53:34"><name pos:start="53:25" pos:end="53:26">tb</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:34">tc_ptr</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:18"><if pos:start="55:5" pos:end="57:18">if <condition pos:start="55:8" pos:end="55:29">(<expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:19">searched_pc</name> <operator pos:start="55:21" pos:end="55:21">&lt;</operator> <name pos:start="55:23" pos:end="55:28">tc_ptr</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:18"><block_content pos:start="57:9" pos:end="57:18">

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:21">tb_next_offset</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:42"><name pos:start="61:25" pos:end="61:26">tb</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:42">tb_next_offset</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="63:1" pos:end="63:22">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:22">USE_DIRECT_JUMP</name></cpp:ifdef>

    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:20">tb_jmp_offset</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:40"><name pos:start="65:24" pos:end="65:25">tb</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:40">tb_jmp_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="70:0"><expr pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:14">tb_next</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:21">NULL</name></expr>;</expr_stmt>

<cpp:else pos:start="69:1" pos:end="69:5">#<cpp:directive pos:start="69:2" pos:end="69:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:20">tb_jmp_offset</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="76:0"><expr pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:14">tb_next</name></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:28"><name pos:start="73:18" pos:end="73:19">tb</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:28">tb_next</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="77:5" pos:end="79:53"><expr pos:start="77:5" pos:end="79:52"><name pos:start="77:5" pos:end="77:5">j</name> <operator pos:start="77:7" pos:end="77:7">=</operator> <call pos:start="77:9" pos:end="79:52"><name pos:start="77:9" pos:end="77:30">tcg_gen_code_search_pc</name><argument_list pos:start="77:31" pos:end="79:52">(<argument pos:start="77:32" pos:end="77:32"><expr pos:start="77:32" pos:end="77:32"><name pos:start="77:32" pos:end="77:32">s</name></expr></argument>, <argument pos:start="77:35" pos:end="77:57"><expr pos:start="77:35" pos:end="77:57"><operator pos:start="77:35" pos:end="77:35">(</operator><name pos:start="77:36" pos:end="77:48">tcg_insn_unit</name> <operator pos:start="77:50" pos:end="77:50">*</operator><operator pos:start="77:51" pos:end="77:51">)</operator><name pos:start="77:52" pos:end="77:57">tc_ptr</name></expr></argument>,

                               <argument pos:start="79:32" pos:end="79:51"><expr pos:start="79:32" pos:end="79:51"><name pos:start="79:32" pos:end="79:42">searched_pc</name> <operator pos:start="79:44" pos:end="79:44">-</operator> <name pos:start="79:46" pos:end="79:51">tc_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="83:18"><if pos:start="81:5" pos:end="83:18">if <condition pos:start="81:8" pos:end="81:14">(<expr pos:start="81:9" pos:end="81:13"><name pos:start="81:9" pos:end="81:9">j</name> <operator pos:start="81:11" pos:end="81:11">&lt;</operator> <literal type="number" pos:start="81:13" pos:end="81:13">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:18"><block_content pos:start="83:9" pos:end="83:18">

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="85:5" pos:end="85:46">/* now find start of instruction before */</comment>

    <while pos:start="87:5" pos:end="91:5">while <condition pos:start="87:11" pos:end="87:42">(<expr pos:start="87:12" pos:end="87:41"><name pos:start="87:12" pos:end="87:36"><name pos:start="87:12" pos:end="87:12">s</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:33">gen_opc_instr_start</name><index pos:start="87:34" pos:end="87:36">[<expr pos:start="87:35" pos:end="87:35"><name pos:start="87:35" pos:end="87:35">j</name></expr>]</index></name> <operator pos:start="87:38" pos:end="87:39">==</operator> <literal type="number" pos:start="87:41" pos:end="87:41">0</literal></expr>)</condition> <block pos:start="87:44" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:12">

        <expr_stmt pos:start="89:9" pos:end="89:12"><expr pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:9">j</name><operator pos:start="89:10" pos:end="89:11">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="93:5" pos:end="93:53"><expr pos:start="93:5" pos:end="93:52"><name pos:start="93:5" pos:end="93:28"><name pos:start="93:5" pos:end="93:7">cpu</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:20">icount_decr</name><operator pos:start="93:21" pos:end="93:21">.</operator><name pos:start="93:22" pos:end="93:24">u16</name><operator pos:start="93:25" pos:end="93:25">.</operator><name pos:start="93:26" pos:end="93:28">low</name></name> <operator pos:start="93:30" pos:end="93:31">-=</operator> <name pos:start="93:33" pos:end="93:52"><name pos:start="93:33" pos:end="93:33">s</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:49">gen_opc_icount</name><index pos:start="93:50" pos:end="93:52">[<expr pos:start="93:51" pos:end="93:51"><name pos:start="93:51" pos:end="93:51">j</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="102:0"><expr pos:start="97:5" pos:end="97:36"><call pos:start="97:5" pos:end="97:36"><name pos:start="97:5" pos:end="97:24">restore_state_to_opc</name><argument_list pos:start="97:25" pos:end="97:36">(<argument pos:start="97:26" pos:end="97:28"><expr pos:start="97:26" pos:end="97:28"><name pos:start="97:26" pos:end="97:28">env</name></expr></argument>, <argument pos:start="97:31" pos:end="97:32"><expr pos:start="97:31" pos:end="97:32"><name pos:start="97:31" pos:end="97:32">tb</name></expr></argument>, <argument pos:start="97:35" pos:end="97:35"><expr pos:start="97:35" pos:end="97:35"><name pos:start="97:35" pos:end="97:35">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="101:1" pos:end="101:22">#<cpp:directive pos:start="101:2" pos:end="101:6">ifdef</cpp:directive> <name pos:start="101:8" pos:end="101:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="103:5" pos:end="103:47"><expr pos:start="103:5" pos:end="103:46"><name pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:19">restore_time</name></name> <operator pos:start="103:21" pos:end="103:22">+=</operator> <call pos:start="103:24" pos:end="103:41"><name pos:start="103:24" pos:end="103:39">profile_getclock</name><argument_list pos:start="103:40" pos:end="103:41">()</argument_list></call> <operator pos:start="103:43" pos:end="103:43">-</operator> <name pos:start="103:45" pos:end="103:46">ti</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="108:0"><expr pos:start="105:5" pos:end="105:22"><name pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:20">restore_count</name></name><operator pos:start="105:21" pos:end="105:22">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
