<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5722.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">decode_clnpass</name><parameter_list pos:start="1:27" pos:end="5:76">(<parameter pos:start="1:28" pos:end="1:52"><decl pos:start="1:28" pos:end="1:52"><type pos:start="1:28" pos:end="1:52"><name pos:start="1:28" pos:end="1:49">Jpeg2000DecoderContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:75"><decl pos:start="1:55" pos:end="1:75"><type pos:start="1:55" pos:end="1:75"><name pos:start="1:55" pos:end="1:71">Jpeg2000T1Context</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:75">t1</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:36">width</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:48"><decl pos:start="3:39" pos:end="3:48"><type pos:start="3:39" pos:end="3:48"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:48">height</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:58"><decl pos:start="3:51" pos:end="3:58"><type pos:start="3:51" pos:end="3:58"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:58">bpno</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:70"><decl pos:start="3:61" pos:end="3:70"><type pos:start="3:61" pos:end="3:70"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:70">bandno</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:42"><decl pos:start="5:28" pos:end="5:42"><type pos:start="5:28" pos:end="5:42"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:42">seg_symbols</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:75"><decl pos:start="5:45" pos:end="5:75"><type pos:start="5:45" pos:end="5:75"><name pos:start="5:45" pos:end="5:47">int</name></type> <name pos:start="5:49" pos:end="5:75">vert_causal_ctx_csty_symbol</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="129:1">{<block_content pos:start="9:5" pos:end="127:5">

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">mask</name> <init pos:start="9:14" pos:end="9:30">= <expr pos:start="9:16" pos:end="9:30"><literal type="number" pos:start="9:16" pos:end="9:16">3</literal> <operator pos:start="9:18" pos:end="9:19">&lt;&lt;</operator> <operator pos:start="9:21" pos:end="9:21">(</operator><name pos:start="9:22" pos:end="9:25">bpno</name> <operator pos:start="9:27" pos:end="9:27">-</operator> <literal type="number" pos:start="9:29" pos:end="9:29">1</literal><operator pos:start="9:30" pos:end="9:30">)</operator></expr></init></decl>, <decl pos:start="9:33" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:34">y0</name></decl>, <decl pos:start="9:37" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:37">x</name></decl>, <decl pos:start="9:40" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:40">y</name></decl>, <decl pos:start="9:43" pos:end="9:48"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:43" pos:end="9:48">runlen</name></decl>, <decl pos:start="9:51" pos:end="9:53"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:51" pos:end="9:53">dec</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="107:5">for <control pos:start="13:9" pos:end="13:38">(<init pos:start="13:10" pos:end="13:16"><expr pos:start="13:10" pos:end="13:15"><name pos:start="13:10" pos:end="13:11">y0</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</init> <condition pos:start="13:18" pos:end="13:29"><expr pos:start="13:18" pos:end="13:28"><name pos:start="13:18" pos:end="13:19">y0</name> <operator pos:start="13:21" pos:end="13:21">&lt;</operator> <name pos:start="13:23" pos:end="13:28">height</name></expr>;</condition> <incr pos:start="13:31" pos:end="13:37"><expr pos:start="13:31" pos:end="13:37"><name pos:start="13:31" pos:end="13:32">y0</name> <operator pos:start="13:34" pos:end="13:35">+=</operator> <literal type="number" pos:start="13:37" pos:end="13:37">4</literal></expr></incr>)</control> <block pos:start="13:40" pos:end="107:5">{<block_content pos:start="15:9" pos:end="105:9">

        <for pos:start="15:9" pos:end="105:9">for <control pos:start="15:13" pos:end="15:35">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">x</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:30"><expr pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:21">x</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:29">width</name></expr>;</condition> <incr pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:32">x</name><operator pos:start="15:33" pos:end="15:34">++</operator></expr></incr>)</control> <block pos:start="15:37" pos:end="105:9">{<block_content pos:start="17:13" pos:end="103:13">

            <decl_stmt pos:start="17:13" pos:end="17:32"><decl pos:start="17:13" pos:end="17:31"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:26">flags_mask</name> <init pos:start="17:28" pos:end="17:31">= <expr pos:start="17:30" pos:end="17:31"><operator pos:start="17:30" pos:end="17:30">-</operator><literal type="number" pos:start="17:31" pos:end="17:31">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="19:13" pos:end="21:113"><if pos:start="19:13" pos:end="21:113">if <condition pos:start="19:16" pos:end="19:44">(<expr pos:start="19:17" pos:end="19:43"><name pos:start="19:17" pos:end="19:43">vert_causal_ctx_csty_symbol</name></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:113"><block_content pos:start="21:17" pos:end="21:113">

                <expr_stmt pos:start="21:17" pos:end="21:113"><expr pos:start="21:17" pos:end="21:112"><name pos:start="21:17" pos:end="21:26">flags_mask</name> <operator pos:start="21:28" pos:end="21:29">&amp;=</operator> <operator pos:start="21:31" pos:end="21:31">~</operator><operator pos:start="21:32" pos:end="21:32">(</operator><name pos:start="21:33" pos:end="21:49">JPEG2000_T1_SIG_S</name> <operator pos:start="21:51" pos:end="21:51">|</operator> <name pos:start="21:53" pos:end="21:70">JPEG2000_T1_SIG_SW</name> <operator pos:start="21:72" pos:end="21:72">|</operator> <name pos:start="21:74" pos:end="21:91">JPEG2000_T1_SIG_SE</name> <operator pos:start="21:93" pos:end="21:93">|</operator> <name pos:start="21:95" pos:end="21:111">JPEG2000_T1_SGN_S</name><operator pos:start="21:112" pos:end="21:112">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="23:13" pos:end="55:13"><if pos:start="23:13" pos:end="49:13">if <condition pos:start="23:16" pos:end="31:118">(<expr pos:start="23:17" pos:end="31:117"><name pos:start="23:17" pos:end="23:18">y0</name> <operator pos:start="23:20" pos:end="23:20">+</operator> <literal type="number" pos:start="23:22" pos:end="23:22">3</literal> <operator pos:start="23:24" pos:end="23:24">&lt;</operator> <name pos:start="23:26" pos:end="23:31">height</name> <operator pos:start="23:33" pos:end="23:34">&amp;&amp;</operator>

                <operator pos:start="25:17" pos:end="25:17">!</operator><operator pos:start="25:18" pos:end="25:18">(</operator><operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:43"><name pos:start="25:20" pos:end="25:21">t1</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:28">flags</name><index pos:start="25:29" pos:end="25:36">[<expr pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:31">y0</name> <operator pos:start="25:33" pos:end="25:33">+</operator> <literal type="number" pos:start="25:35" pos:end="25:35">1</literal></expr>]</index><index pos:start="25:37" pos:end="25:43">[<expr pos:start="25:38" pos:end="25:42"><name pos:start="25:38" pos:end="25:38">x</name> <operator pos:start="25:40" pos:end="25:40">+</operator> <literal type="number" pos:start="25:42" pos:end="25:42">1</literal></expr>]</index></name> <operator pos:start="25:45" pos:end="25:45">&amp;</operator> <operator pos:start="25:47" pos:end="25:47">(</operator><name pos:start="25:48" pos:end="25:65">JPEG2000_T1_SIG_NB</name> <operator pos:start="25:67" pos:end="25:67">|</operator> <name pos:start="25:69" pos:end="25:83">JPEG2000_T1_VIS</name> <operator pos:start="25:85" pos:end="25:85">|</operator> <name pos:start="25:87" pos:end="25:101">JPEG2000_T1_SIG</name><operator pos:start="25:102" pos:end="25:102">)</operator><operator pos:start="25:103" pos:end="25:103">)</operator> <operator pos:start="25:105" pos:end="25:106">||</operator>

                  <operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:43"><name pos:start="27:20" pos:end="27:21">t1</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:28">flags</name><index pos:start="27:29" pos:end="27:36">[<expr pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:31">y0</name> <operator pos:start="27:33" pos:end="27:33">+</operator> <literal type="number" pos:start="27:35" pos:end="27:35">2</literal></expr>]</index><index pos:start="27:37" pos:end="27:43">[<expr pos:start="27:38" pos:end="27:42"><name pos:start="27:38" pos:end="27:38">x</name> <operator pos:start="27:40" pos:end="27:40">+</operator> <literal type="number" pos:start="27:42" pos:end="27:42">1</literal></expr>]</index></name> <operator pos:start="27:45" pos:end="27:45">&amp;</operator> <operator pos:start="27:47" pos:end="27:47">(</operator><name pos:start="27:48" pos:end="27:65">JPEG2000_T1_SIG_NB</name> <operator pos:start="27:67" pos:end="27:67">|</operator> <name pos:start="27:69" pos:end="27:83">JPEG2000_T1_VIS</name> <operator pos:start="27:85" pos:end="27:85">|</operator> <name pos:start="27:87" pos:end="27:101">JPEG2000_T1_SIG</name><operator pos:start="27:102" pos:end="27:102">)</operator><operator pos:start="27:103" pos:end="27:103">)</operator> <operator pos:start="27:105" pos:end="27:106">||</operator>

                  <operator pos:start="29:19" pos:end="29:19">(</operator><name pos:start="29:20" pos:end="29:43"><name pos:start="29:20" pos:end="29:21">t1</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">flags</name><index pos:start="29:29" pos:end="29:36">[<expr pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:31">y0</name> <operator pos:start="29:33" pos:end="29:33">+</operator> <literal type="number" pos:start="29:35" pos:end="29:35">3</literal></expr>]</index><index pos:start="29:37" pos:end="29:43">[<expr pos:start="29:38" pos:end="29:42"><name pos:start="29:38" pos:end="29:38">x</name> <operator pos:start="29:40" pos:end="29:40">+</operator> <literal type="number" pos:start="29:42" pos:end="29:42">1</literal></expr>]</index></name> <operator pos:start="29:45" pos:end="29:45">&amp;</operator> <operator pos:start="29:47" pos:end="29:47">(</operator><name pos:start="29:48" pos:end="29:65">JPEG2000_T1_SIG_NB</name> <operator pos:start="29:67" pos:end="29:67">|</operator> <name pos:start="29:69" pos:end="29:83">JPEG2000_T1_VIS</name> <operator pos:start="29:85" pos:end="29:85">|</operator> <name pos:start="29:87" pos:end="29:101">JPEG2000_T1_SIG</name><operator pos:start="29:102" pos:end="29:102">)</operator><operator pos:start="29:103" pos:end="29:103">)</operator> <operator pos:start="29:105" pos:end="29:106">||</operator>

                  <operator pos:start="31:19" pos:end="31:19">(</operator><name pos:start="31:20" pos:end="31:43"><name pos:start="31:20" pos:end="31:21">t1</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">flags</name><index pos:start="31:29" pos:end="31:36">[<expr pos:start="31:30" pos:end="31:35"><name pos:start="31:30" pos:end="31:31">y0</name> <operator pos:start="31:33" pos:end="31:33">+</operator> <literal type="number" pos:start="31:35" pos:end="31:35">4</literal></expr>]</index><index pos:start="31:37" pos:end="31:43">[<expr pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:38">x</name> <operator pos:start="31:40" pos:end="31:40">+</operator> <literal type="number" pos:start="31:42" pos:end="31:42">1</literal></expr>]</index></name> <operator pos:start="31:45" pos:end="31:45">&amp;</operator> <operator pos:start="31:47" pos:end="31:47">(</operator><name pos:start="31:48" pos:end="31:65">JPEG2000_T1_SIG_NB</name> <operator pos:start="31:67" pos:end="31:67">|</operator> <name pos:start="31:69" pos:end="31:83">JPEG2000_T1_VIS</name> <operator pos:start="31:85" pos:end="31:85">|</operator> <name pos:start="31:87" pos:end="31:101">JPEG2000_T1_SIG</name><operator pos:start="31:102" pos:end="31:102">)</operator> <operator pos:start="31:104" pos:end="31:104">&amp;</operator> <name pos:start="31:106" pos:end="31:115">flags_mask</name><operator pos:start="31:116" pos:end="31:116">)</operator><operator pos:start="31:117" pos:end="31:117">)</operator></expr>)</condition> <block pos:start="31:120" pos:end="49:13">{<block_content pos:start="33:17" pos:end="47:24">

                <if_stmt pos:start="33:17" pos:end="35:29"><if pos:start="33:17" pos:end="35:29">if <condition pos:start="33:20" pos:end="33:76">(<expr pos:start="33:21" pos:end="33:75"><operator pos:start="33:21" pos:end="33:21">!</operator><call pos:start="33:22" pos:end="33:75"><name pos:start="33:22" pos:end="33:34">ff_mqc_decode</name><argument_list pos:start="33:35" pos:end="33:75">(<argument pos:start="33:36" pos:end="33:43"><expr pos:start="33:36" pos:end="33:43"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:43"><name pos:start="33:37" pos:end="33:38">t1</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:43">mqc</name></name></expr></argument>, <argument pos:start="33:46" pos:end="33:74"><expr pos:start="33:46" pos:end="33:74"><name pos:start="33:46" pos:end="33:62"><name pos:start="33:46" pos:end="33:47">t1</name><operator pos:start="33:48" pos:end="33:49">-&gt;</operator><name pos:start="33:50" pos:end="33:52">mqc</name><operator pos:start="33:53" pos:end="33:53">.</operator><name pos:start="33:54" pos:end="33:62">cx_states</name></name> <operator pos:start="33:64" pos:end="33:64">+</operator> <name pos:start="33:66" pos:end="33:74">MQC_CX_RL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:21" pos:end="35:29"><block_content pos:start="35:21" pos:end="35:29">

                    <continue pos:start="35:21" pos:end="35:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="37:17" pos:end="39:71"><expr pos:start="37:17" pos:end="39:70"><name pos:start="37:17" pos:end="37:22">runlen</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="39:70"><name pos:start="37:26" pos:end="37:38">ff_mqc_decode</name><argument_list pos:start="37:39" pos:end="39:70">(<argument pos:start="37:40" pos:end="37:47"><expr pos:start="37:40" pos:end="37:47"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:47"><name pos:start="37:41" pos:end="37:42">t1</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:47">mqc</name></name></expr></argument>,

                                       <argument pos:start="39:40" pos:end="39:69"><expr pos:start="39:40" pos:end="39:69"><name pos:start="39:40" pos:end="39:56"><name pos:start="39:40" pos:end="39:41">t1</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:46">mqc</name><operator pos:start="39:47" pos:end="39:47">.</operator><name pos:start="39:48" pos:end="39:56">cx_states</name></name> <operator pos:start="39:58" pos:end="39:58">+</operator> <name pos:start="39:60" pos:end="39:69">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="45:67"><expr pos:start="41:17" pos:end="45:66"><name pos:start="41:17" pos:end="41:22">runlen</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <operator pos:start="41:26" pos:end="41:26">(</operator><name pos:start="41:27" pos:end="41:32">runlen</name> <operator pos:start="41:34" pos:end="41:35">&lt;&lt;</operator> <literal type="number" pos:start="41:37" pos:end="41:37">1</literal><operator pos:start="41:38" pos:end="41:38">)</operator> <operator pos:start="41:40" pos:end="41:40">|</operator> <call pos:start="41:42" pos:end="45:66"><name pos:start="41:42" pos:end="41:54">ff_mqc_decode</name><argument_list pos:start="41:55" pos:end="45:66">(<argument pos:start="41:56" pos:end="41:63"><expr pos:start="41:56" pos:end="41:63"><operator pos:start="41:56" pos:end="41:56">&amp;</operator><name pos:start="41:57" pos:end="41:63"><name pos:start="41:57" pos:end="41:58">t1</name><operator pos:start="41:59" pos:end="41:60">-&gt;</operator><name pos:start="41:61" pos:end="41:63">mqc</name></name></expr></argument>,

                                                       <argument pos:start="43:56" pos:end="45:65"><expr pos:start="43:56" pos:end="45:65"><name pos:start="43:56" pos:end="43:72"><name pos:start="43:56" pos:end="43:57">t1</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:62">mqc</name><operator pos:start="43:63" pos:end="43:63">.</operator><name pos:start="43:64" pos:end="43:72">cx_states</name></name> <operator pos:start="43:74" pos:end="43:74">+</operator>

                                                       <name pos:start="45:56" pos:end="45:65">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:24"><expr pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:19">dec</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="49:15" pos:end="55:13">else <block pos:start="49:20" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:27">

                <expr_stmt pos:start="51:17" pos:end="51:27"><expr pos:start="51:17" pos:end="51:26"><name pos:start="51:17" pos:end="51:22">runlen</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:27"><expr pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:19">dec</name>    <operator pos:start="53:24" pos:end="53:24">=</operator> <literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <for pos:start="59:13" pos:end="103:13">for <control pos:start="59:17" pos:end="59:64">(<init pos:start="59:18" pos:end="59:33"><expr pos:start="59:18" pos:end="59:32"><name pos:start="59:18" pos:end="59:18">y</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:23">y0</name> <operator pos:start="59:25" pos:end="59:25">+</operator> <name pos:start="59:27" pos:end="59:32">runlen</name></expr>;</init> <condition pos:start="59:35" pos:end="59:59"><expr pos:start="59:35" pos:end="59:58"><name pos:start="59:35" pos:end="59:35">y</name> <operator pos:start="59:37" pos:end="59:37">&lt;</operator> <name pos:start="59:39" pos:end="59:40">y0</name> <operator pos:start="59:42" pos:end="59:42">+</operator> <literal type="number" pos:start="59:44" pos:end="59:44">4</literal> <operator pos:start="59:46" pos:end="59:47">&amp;&amp;</operator> <name pos:start="59:49" pos:end="59:49">y</name> <operator pos:start="59:51" pos:end="59:51">&lt;</operator> <name pos:start="59:53" pos:end="59:58">height</name></expr>;</condition> <incr pos:start="59:61" pos:end="59:63"><expr pos:start="59:61" pos:end="59:63"><name pos:start="59:61" pos:end="59:61">y</name><operator pos:start="59:62" pos:end="59:63">++</operator></expr></incr>)</control> <block pos:start="59:66" pos:end="103:13">{<block_content pos:start="61:17" pos:end="101:60">

                <decl_stmt pos:start="61:17" pos:end="61:36"><decl pos:start="61:17" pos:end="61:35"><type pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:19">int</name></type> <name pos:start="61:21" pos:end="61:30">flags_mask</name> <init pos:start="61:32" pos:end="61:35">= <expr pos:start="61:34" pos:end="61:35"><operator pos:start="61:34" pos:end="61:34">-</operator><literal type="number" pos:start="61:35" pos:end="61:35">1</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="63:17" pos:end="65:117"><if pos:start="63:17" pos:end="65:117">if <condition pos:start="63:20" pos:end="63:63">(<expr pos:start="63:21" pos:end="63:62"><name pos:start="63:21" pos:end="63:47">vert_causal_ctx_csty_symbol</name> <operator pos:start="63:49" pos:end="63:50">&amp;&amp;</operator> <name pos:start="63:52" pos:end="63:52">y</name> <operator pos:start="63:54" pos:end="63:55">==</operator> <name pos:start="63:57" pos:end="63:58">y0</name> <operator pos:start="63:60" pos:end="63:60">+</operator> <literal type="number" pos:start="63:62" pos:end="63:62">3</literal></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:117"><block_content pos:start="65:21" pos:end="65:117">

                    <expr_stmt pos:start="65:21" pos:end="65:117"><expr pos:start="65:21" pos:end="65:116"><name pos:start="65:21" pos:end="65:30">flags_mask</name> <operator pos:start="65:32" pos:end="65:33">&amp;=</operator> <operator pos:start="65:35" pos:end="65:35">~</operator><operator pos:start="65:36" pos:end="65:36">(</operator><name pos:start="65:37" pos:end="65:53">JPEG2000_T1_SIG_S</name> <operator pos:start="65:55" pos:end="65:55">|</operator> <name pos:start="65:57" pos:end="65:74">JPEG2000_T1_SIG_SW</name> <operator pos:start="65:76" pos:end="65:76">|</operator> <name pos:start="65:78" pos:end="65:95">JPEG2000_T1_SIG_SE</name> <operator pos:start="65:97" pos:end="65:97">|</operator> <name pos:start="65:99" pos:end="65:115">JPEG2000_T1_SGN_S</name><operator pos:start="65:116" pos:end="65:116">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="67:17" pos:end="77:17"><if pos:start="67:17" pos:end="77:17">if <condition pos:start="67:20" pos:end="67:25">(<expr pos:start="67:21" pos:end="67:24"><operator pos:start="67:21" pos:end="67:21">!</operator><name pos:start="67:22" pos:end="67:24">dec</name></expr>)</condition> <block pos:start="67:27" pos:end="77:17">{<block_content pos:start="69:21" pos:end="75:21">

                    <if_stmt pos:start="69:21" pos:end="75:21"><if pos:start="69:21" pos:end="75:21">if <condition pos:start="69:24" pos:end="69:85">(<expr pos:start="69:25" pos:end="69:84"><operator pos:start="69:25" pos:end="69:25">!</operator><operator pos:start="69:26" pos:end="69:26">(</operator><name pos:start="69:27" pos:end="69:45"><name pos:start="69:27" pos:end="69:28">t1</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:35">flags</name><index pos:start="69:36" pos:end="69:40">[<expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:37">y</name><operator pos:start="69:38" pos:end="69:38">+</operator><literal type="number" pos:start="69:39" pos:end="69:39">1</literal></expr>]</index><index pos:start="69:41" pos:end="69:45">[<expr pos:start="69:42" pos:end="69:44"><name pos:start="69:42" pos:end="69:42">x</name><operator pos:start="69:43" pos:end="69:43">+</operator><literal type="number" pos:start="69:44" pos:end="69:44">1</literal></expr>]</index></name> <operator pos:start="69:47" pos:end="69:47">&amp;</operator> <operator pos:start="69:49" pos:end="69:49">(</operator><name pos:start="69:50" pos:end="69:64">JPEG2000_T1_SIG</name> <operator pos:start="69:66" pos:end="69:66">|</operator> <name pos:start="69:68" pos:end="69:82">JPEG2000_T1_VIS</name><operator pos:start="69:83" pos:end="69:83">)</operator><operator pos:start="69:84" pos:end="69:84">)</operator></expr>)</condition> <block pos:start="69:87" pos:end="75:21">{<block_content pos:start="71:25" pos:end="73:102">

                        <expr_stmt pos:start="71:25" pos:end="73:102"><expr pos:start="71:25" pos:end="73:101"><name pos:start="71:25" pos:end="71:27">dec</name> <operator pos:start="71:29" pos:end="71:29">=</operator> <call pos:start="71:31" pos:end="73:101"><name pos:start="71:31" pos:end="71:43">ff_mqc_decode</name><argument_list pos:start="71:44" pos:end="73:101">(<argument pos:start="71:45" pos:end="71:52"><expr pos:start="71:45" pos:end="71:52"><operator pos:start="71:45" pos:end="71:45">&amp;</operator><name pos:start="71:46" pos:end="71:52"><name pos:start="71:46" pos:end="71:47">t1</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:52">mqc</name></name></expr></argument>, <argument pos:start="71:55" pos:end="73:100"><expr pos:start="71:55" pos:end="73:100"><name pos:start="71:55" pos:end="71:71"><name pos:start="71:55" pos:end="71:56">t1</name><operator pos:start="71:57" pos:end="71:58">-&gt;</operator><name pos:start="71:59" pos:end="71:61">mqc</name><operator pos:start="71:62" pos:end="71:62">.</operator><name pos:start="71:63" pos:end="71:71">cx_states</name></name> <operator pos:start="71:73" pos:end="71:73">+</operator> <call pos:start="71:75" pos:end="73:100"><name pos:start="71:75" pos:end="71:97">ff_jpeg2000_getsigctxno</name><argument_list pos:start="71:98" pos:end="73:100">(<argument pos:start="71:99" pos:end="71:130"><expr pos:start="71:99" pos:end="71:130"><name pos:start="71:99" pos:end="71:117"><name pos:start="71:99" pos:end="71:100">t1</name><operator pos:start="71:101" pos:end="71:102">-&gt;</operator><name pos:start="71:103" pos:end="71:107">flags</name><index pos:start="71:108" pos:end="71:112">[<expr pos:start="71:109" pos:end="71:111"><name pos:start="71:109" pos:end="71:109">y</name><operator pos:start="71:110" pos:end="71:110">+</operator><literal type="number" pos:start="71:111" pos:end="71:111">1</literal></expr>]</index><index pos:start="71:113" pos:end="71:117">[<expr pos:start="71:114" pos:end="71:116"><name pos:start="71:114" pos:end="71:114">x</name><operator pos:start="71:115" pos:end="71:115">+</operator><literal type="number" pos:start="71:116" pos:end="71:116">1</literal></expr>]</index></name> <operator pos:start="71:119" pos:end="71:119">&amp;</operator> <name pos:start="71:121" pos:end="71:130">flags_mask</name></expr></argument>,

                                                                                             <argument pos:start="73:94" pos:end="73:99"><expr pos:start="73:94" pos:end="73:99"><name pos:start="73:94" pos:end="73:99">bandno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="79:17" pos:end="97:17"><if pos:start="79:17" pos:end="97:17">if <condition pos:start="79:20" pos:end="79:24">(<expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:23">dec</name></expr>)</condition> <block pos:start="79:26" pos:end="97:17">{<block_content pos:start="81:21" pos:end="95:79">

                    <decl_stmt pos:start="81:21" pos:end="81:31"><decl pos:start="81:21" pos:end="81:30"><type pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">int</name></type> <name pos:start="81:25" pos:end="81:30">xorbit</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="83:21" pos:end="85:65"><decl pos:start="83:21" pos:end="85:64"><type pos:start="83:21" pos:end="83:23"><name pos:start="83:21" pos:end="83:23">int</name></type> <name pos:start="83:25" pos:end="83:29">ctxno</name> <init pos:start="83:31" pos:end="85:64">= <expr pos:start="83:33" pos:end="85:64"><call pos:start="83:33" pos:end="85:64"><name pos:start="83:33" pos:end="83:55">ff_jpeg2000_getsgnctxno</name><argument_list pos:start="83:56" pos:end="85:64">(<argument pos:start="83:57" pos:end="83:92"><expr pos:start="83:57" pos:end="83:92"><name pos:start="83:57" pos:end="83:79"><name pos:start="83:57" pos:end="83:58">t1</name><operator pos:start="83:59" pos:end="83:60">-&gt;</operator><name pos:start="83:61" pos:end="83:65">flags</name><index pos:start="83:66" pos:end="83:72">[<expr pos:start="83:67" pos:end="83:71"><name pos:start="83:67" pos:end="83:67">y</name> <operator pos:start="83:69" pos:end="83:69">+</operator> <literal type="number" pos:start="83:71" pos:end="83:71">1</literal></expr>]</index><index pos:start="83:73" pos:end="83:79">[<expr pos:start="83:74" pos:end="83:78"><name pos:start="83:74" pos:end="83:74">x</name> <operator pos:start="83:76" pos:end="83:76">+</operator> <literal type="number" pos:start="83:78" pos:end="83:78">1</literal></expr>]</index></name> <operator pos:start="83:81" pos:end="83:81">&amp;</operator> <name pos:start="83:83" pos:end="83:92">flags_mask</name></expr></argument>,

                                                        <argument pos:start="85:57" pos:end="85:63"><expr pos:start="85:57" pos:end="85:63"><operator pos:start="85:57" pos:end="85:57">&amp;</operator><name pos:start="85:58" pos:end="85:63">xorbit</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="87:21" pos:end="93:52"><expr pos:start="87:21" pos:end="93:51"><name pos:start="87:21" pos:end="87:34"><name pos:start="87:21" pos:end="87:22">t1</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:28">data</name><index pos:start="87:29" pos:end="87:31">[<expr pos:start="87:30" pos:end="87:30"><name pos:start="87:30" pos:end="87:30">y</name></expr>]</index><index pos:start="87:32" pos:end="87:34">[<expr pos:start="87:33" pos:end="87:33"><name pos:start="87:33" pos:end="87:33">x</name></expr>]</index></name> <operator pos:start="87:36" pos:end="87:36">=</operator> <ternary pos:start="87:38" pos:end="93:51"><condition pos:start="87:38" pos:end="93:38"><expr pos:start="87:38" pos:end="91:45"><operator pos:start="87:38" pos:end="87:38">(</operator><call pos:start="87:39" pos:end="89:78"><name pos:start="87:39" pos:end="87:51">ff_mqc_decode</name><argument_list pos:start="87:52" pos:end="89:78">(<argument pos:start="87:53" pos:end="87:60"><expr pos:start="87:53" pos:end="87:60"><operator pos:start="87:53" pos:end="87:53">&amp;</operator><name pos:start="87:54" pos:end="87:60"><name pos:start="87:54" pos:end="87:55">t1</name><operator pos:start="87:56" pos:end="87:57">-&gt;</operator><name pos:start="87:58" pos:end="87:60">mqc</name></name></expr></argument>,

                                                    <argument pos:start="89:53" pos:end="89:77"><expr pos:start="89:53" pos:end="89:77"><name pos:start="89:53" pos:end="89:69"><name pos:start="89:53" pos:end="89:54">t1</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:59">mqc</name><operator pos:start="89:60" pos:end="89:60">.</operator><name pos:start="89:61" pos:end="89:69">cx_states</name></name> <operator pos:start="89:71" pos:end="89:71">+</operator> <name pos:start="89:73" pos:end="89:77">ctxno</name></expr></argument>)</argument_list></call> <operator pos:start="89:80" pos:end="89:80">^</operator>

                                      <name pos:start="91:39" pos:end="91:44">xorbit</name><operator pos:start="91:45" pos:end="91:45">)</operator></expr>

                                     ?</condition><then pos:start="93:40" pos:end="93:44"> <expr pos:start="93:40" pos:end="93:44"><operator pos:start="93:40" pos:end="93:40">-</operator><name pos:start="93:41" pos:end="93:44">mask</name></expr> </then><else pos:start="93:46" pos:end="93:51">: <expr pos:start="93:48" pos:end="93:51"><name pos:start="93:48" pos:end="93:51">mask</name></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:79"><expr pos:start="95:21" pos:end="95:78"><call pos:start="95:21" pos:end="95:78"><name pos:start="95:21" pos:end="95:48">ff_jpeg2000_set_significance</name><argument_list pos:start="95:49" pos:end="95:78">(<argument pos:start="95:50" pos:end="95:51"><expr pos:start="95:50" pos:end="95:51"><name pos:start="95:50" pos:end="95:51">t1</name></expr></argument>, <argument pos:start="95:54" pos:end="95:54"><expr pos:start="95:54" pos:end="95:54"><name pos:start="95:54" pos:end="95:54">x</name></expr></argument>, <argument pos:start="95:57" pos:end="95:57"><expr pos:start="95:57" pos:end="95:57"><name pos:start="95:57" pos:end="95:57">y</name></expr></argument>, <argument pos:start="95:60" pos:end="95:77"><expr pos:start="95:60" pos:end="95:77"><name pos:start="95:60" pos:end="95:73"><name pos:start="95:60" pos:end="95:61">t1</name><operator pos:start="95:62" pos:end="95:63">-&gt;</operator><name pos:start="95:64" pos:end="95:67">data</name><index pos:start="95:68" pos:end="95:70">[<expr pos:start="95:69" pos:end="95:69"><name pos:start="95:69" pos:end="95:69">y</name></expr>]</index><index pos:start="95:71" pos:end="95:73">[<expr pos:start="95:72" pos:end="95:72"><name pos:start="95:72" pos:end="95:72">x</name></expr>]</index></name> <operator pos:start="95:75" pos:end="95:75">&lt;</operator> <literal type="number" pos:start="95:77" pos:end="95:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:24"><expr pos:start="99:17" pos:end="99:23"><name pos:start="99:17" pos:end="99:19">dec</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <literal type="number" pos:start="99:23" pos:end="99:23">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:60"><expr pos:start="101:17" pos:end="101:59"><name pos:start="101:17" pos:end="101:39"><name pos:start="101:17" pos:end="101:18">t1</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:25">flags</name><index pos:start="101:26" pos:end="101:32">[<expr pos:start="101:27" pos:end="101:31"><name pos:start="101:27" pos:end="101:27">y</name> <operator pos:start="101:29" pos:end="101:29">+</operator> <literal type="number" pos:start="101:31" pos:end="101:31">1</literal></expr>]</index><index pos:start="101:33" pos:end="101:39">[<expr pos:start="101:34" pos:end="101:38"><name pos:start="101:34" pos:end="101:34">x</name> <operator pos:start="101:36" pos:end="101:36">+</operator> <literal type="number" pos:start="101:38" pos:end="101:38">1</literal></expr>]</index></name> <operator pos:start="101:41" pos:end="101:42">&amp;=</operator> <operator pos:start="101:44" pos:end="101:44">~</operator><name pos:start="101:45" pos:end="101:59">JPEG2000_T1_VIS</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <if_stmt pos:start="109:5" pos:end="127:5"><if pos:start="109:5" pos:end="127:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:19">seg_symbols</name></expr>)</condition> <block pos:start="109:22" pos:end="127:5">{<block_content pos:start="111:9" pos:end="125:60">

        <decl_stmt pos:start="111:9" pos:end="111:16"><decl pos:start="111:9" pos:end="111:15"><type pos:start="111:9" pos:end="111:11"><name pos:start="111:9" pos:end="111:11">int</name></type> <name pos:start="111:13" pos:end="111:15">val</name></decl>;</decl_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:70"><expr pos:start="113:9" pos:end="113:69"><name pos:start="113:9" pos:end="113:11">val</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:69"><name pos:start="113:15" pos:end="113:27">ff_mqc_decode</name><argument_list pos:start="113:28" pos:end="113:69">(<argument pos:start="113:29" pos:end="113:36"><expr pos:start="113:29" pos:end="113:36"><operator pos:start="113:29" pos:end="113:29">&amp;</operator><name pos:start="113:30" pos:end="113:36"><name pos:start="113:30" pos:end="113:31">t1</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:36">mqc</name></name></expr></argument>, <argument pos:start="113:39" pos:end="113:68"><expr pos:start="113:39" pos:end="113:68"><name pos:start="113:39" pos:end="113:55"><name pos:start="113:39" pos:end="113:40">t1</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:45">mqc</name><operator pos:start="113:46" pos:end="113:46">.</operator><name pos:start="113:47" pos:end="113:55">cx_states</name></name> <operator pos:start="113:57" pos:end="113:57">+</operator> <name pos:start="113:59" pos:end="113:68">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:83"><expr pos:start="115:9" pos:end="115:82"><name pos:start="115:9" pos:end="115:11">val</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <operator pos:start="115:15" pos:end="115:15">(</operator><name pos:start="115:16" pos:end="115:18">val</name> <operator pos:start="115:20" pos:end="115:21">&lt;&lt;</operator> <literal type="number" pos:start="115:23" pos:end="115:23">1</literal><operator pos:start="115:24" pos:end="115:24">)</operator> <operator pos:start="115:26" pos:end="115:26">+</operator> <call pos:start="115:28" pos:end="115:82"><name pos:start="115:28" pos:end="115:40">ff_mqc_decode</name><argument_list pos:start="115:41" pos:end="115:82">(<argument pos:start="115:42" pos:end="115:49"><expr pos:start="115:42" pos:end="115:49"><operator pos:start="115:42" pos:end="115:42">&amp;</operator><name pos:start="115:43" pos:end="115:49"><name pos:start="115:43" pos:end="115:44">t1</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:49">mqc</name></name></expr></argument>, <argument pos:start="115:52" pos:end="115:81"><expr pos:start="115:52" pos:end="115:81"><name pos:start="115:52" pos:end="115:68"><name pos:start="115:52" pos:end="115:53">t1</name><operator pos:start="115:54" pos:end="115:55">-&gt;</operator><name pos:start="115:56" pos:end="115:58">mqc</name><operator pos:start="115:59" pos:end="115:59">.</operator><name pos:start="115:60" pos:end="115:68">cx_states</name></name> <operator pos:start="115:70" pos:end="115:70">+</operator> <name pos:start="115:72" pos:end="115:81">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:83"><expr pos:start="117:9" pos:end="117:82"><name pos:start="117:9" pos:end="117:11">val</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <operator pos:start="117:15" pos:end="117:15">(</operator><name pos:start="117:16" pos:end="117:18">val</name> <operator pos:start="117:20" pos:end="117:21">&lt;&lt;</operator> <literal type="number" pos:start="117:23" pos:end="117:23">1</literal><operator pos:start="117:24" pos:end="117:24">)</operator> <operator pos:start="117:26" pos:end="117:26">+</operator> <call pos:start="117:28" pos:end="117:82"><name pos:start="117:28" pos:end="117:40">ff_mqc_decode</name><argument_list pos:start="117:41" pos:end="117:82">(<argument pos:start="117:42" pos:end="117:49"><expr pos:start="117:42" pos:end="117:49"><operator pos:start="117:42" pos:end="117:42">&amp;</operator><name pos:start="117:43" pos:end="117:49"><name pos:start="117:43" pos:end="117:44">t1</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:49">mqc</name></name></expr></argument>, <argument pos:start="117:52" pos:end="117:81"><expr pos:start="117:52" pos:end="117:81"><name pos:start="117:52" pos:end="117:68"><name pos:start="117:52" pos:end="117:53">t1</name><operator pos:start="117:54" pos:end="117:55">-&gt;</operator><name pos:start="117:56" pos:end="117:58">mqc</name><operator pos:start="117:59" pos:end="117:59">.</operator><name pos:start="117:60" pos:end="117:68">cx_states</name></name> <operator pos:start="117:70" pos:end="117:70">+</operator> <name pos:start="117:72" pos:end="117:81">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:83"><expr pos:start="119:9" pos:end="119:82"><name pos:start="119:9" pos:end="119:11">val</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <operator pos:start="119:15" pos:end="119:15">(</operator><name pos:start="119:16" pos:end="119:18">val</name> <operator pos:start="119:20" pos:end="119:21">&lt;&lt;</operator> <literal type="number" pos:start="119:23" pos:end="119:23">1</literal><operator pos:start="119:24" pos:end="119:24">)</operator> <operator pos:start="119:26" pos:end="119:26">+</operator> <call pos:start="119:28" pos:end="119:82"><name pos:start="119:28" pos:end="119:40">ff_mqc_decode</name><argument_list pos:start="119:41" pos:end="119:82">(<argument pos:start="119:42" pos:end="119:49"><expr pos:start="119:42" pos:end="119:49"><operator pos:start="119:42" pos:end="119:42">&amp;</operator><name pos:start="119:43" pos:end="119:49"><name pos:start="119:43" pos:end="119:44">t1</name><operator pos:start="119:45" pos:end="119:46">-&gt;</operator><name pos:start="119:47" pos:end="119:49">mqc</name></name></expr></argument>, <argument pos:start="119:52" pos:end="119:81"><expr pos:start="119:52" pos:end="119:81"><name pos:start="119:52" pos:end="119:68"><name pos:start="119:52" pos:end="119:53">t1</name><operator pos:start="119:54" pos:end="119:55">-&gt;</operator><name pos:start="119:56" pos:end="119:58">mqc</name><operator pos:start="119:59" pos:end="119:59">.</operator><name pos:start="119:60" pos:end="119:68">cx_states</name></name> <operator pos:start="119:70" pos:end="119:70">+</operator> <name pos:start="119:72" pos:end="119:81">MQC_CX_UNI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="125:60"><if pos:start="121:9" pos:end="125:60">if <condition pos:start="121:12" pos:end="121:23">(<expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:15">val</name> <operator pos:start="121:17" pos:end="121:18">!=</operator> <literal type="number" pos:start="121:20" pos:end="121:22">0xa</literal></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="125:60"><block_content pos:start="123:13" pos:end="125:60">

            <expr_stmt pos:start="123:13" pos:end="125:60"><expr pos:start="123:13" pos:end="125:59"><call pos:start="123:13" pos:end="125:59"><name pos:start="123:13" pos:end="123:18">av_log</name><argument_list pos:start="123:19" pos:end="125:59">(<argument pos:start="123:20" pos:end="123:27"><expr pos:start="123:20" pos:end="123:27"><name pos:start="123:20" pos:end="123:27"><name pos:start="123:20" pos:end="123:20">s</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:27">avctx</name></name></expr></argument>, <argument pos:start="123:30" pos:end="123:41"><expr pos:start="123:30" pos:end="123:41"><name pos:start="123:30" pos:end="123:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="125:20" pos:end="125:58"><expr pos:start="125:20" pos:end="125:58"><literal type="string" pos:start="125:20" pos:end="125:58">"Segmentation symbol value incorrect\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
