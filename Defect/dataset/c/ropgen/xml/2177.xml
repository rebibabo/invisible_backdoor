<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2177.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_udta</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:69">MOV_atom_t</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">end</name> <init pos:start="5:18" pos:end="5:44">= <expr pos:start="5:20" pos:end="5:44"><call pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:28">url_ftell</name><argument_list pos:start="5:29" pos:end="5:32">(<argument pos:start="5:30" pos:end="5:31"><expr pos:start="5:30" pos:end="5:31"><name pos:start="5:30" pos:end="5:31">pb</name></expr></argument>)</argument_list></call> <operator pos:start="5:34" pos:end="5:34">+</operator> <name pos:start="5:36" pos:end="5:44"><name pos:start="5:36" pos:end="5:39">atom</name><operator pos:start="5:40" pos:end="5:40">.</operator><name pos:start="5:41" pos:end="5:44">size</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="61:5">while <condition pos:start="9:11" pos:end="9:35">(<expr pos:start="9:12" pos:end="9:34"><call pos:start="9:12" pos:end="9:24"><name pos:start="9:12" pos:end="9:20">url_ftell</name><argument_list pos:start="9:21" pos:end="9:24">(<argument pos:start="9:22" pos:end="9:23"><expr pos:start="9:22" pos:end="9:23"><name pos:start="9:22" pos:end="9:23">pb</name></expr></argument>)</argument_list></call> <operator pos:start="9:26" pos:end="9:26">+</operator> <literal type="number" pos:start="9:28" pos:end="9:28">8</literal> <operator pos:start="9:30" pos:end="9:30">&lt;</operator> <name pos:start="9:32" pos:end="9:34">end</name></expr>)</condition> <block pos:start="9:37" pos:end="61:5">{<block_content pos:start="11:9" pos:end="59:38">

        <decl_stmt pos:start="11:9" pos:end="11:41"><decl pos:start="11:9" pos:end="11:40"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint32_t</name></type> <name pos:start="11:18" pos:end="11:25">tag_size</name> <init pos:start="11:27" pos:end="11:40">= <expr pos:start="11:29" pos:end="11:40"><call pos:start="11:29" pos:end="11:40"><name pos:start="11:29" pos:end="11:36">get_be32</name><argument_list pos:start="11:37" pos:end="11:40">(<argument pos:start="11:38" pos:end="11:39"><expr pos:start="11:38" pos:end="11:39"><name pos:start="11:38" pos:end="11:39">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:41"><decl pos:start="13:9" pos:end="13:40"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">uint32_t</name></type> <name pos:start="13:18" pos:end="13:20">tag</name>      <init pos:start="13:27" pos:end="13:40">= <expr pos:start="13:29" pos:end="13:40"><call pos:start="13:29" pos:end="13:40"><name pos:start="13:29" pos:end="13:36">get_le32</name><argument_list pos:start="13:37" pos:end="13:40">(<argument pos:start="13:38" pos:end="13:39"><expr pos:start="13:38" pos:end="13:39"><name pos:start="13:38" pos:end="13:39">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:57"><decl pos:start="15:9" pos:end="15:56"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint64_t</name></type> <name pos:start="15:18" pos:end="15:21">next</name>     <init pos:start="15:27" pos:end="15:56">= <expr pos:start="15:29" pos:end="15:56"><call pos:start="15:29" pos:end="15:41"><name pos:start="15:29" pos:end="15:37">url_ftell</name><argument_list pos:start="15:38" pos:end="15:41">(<argument pos:start="15:39" pos:end="15:40"><expr pos:start="15:39" pos:end="15:40"><name pos:start="15:39" pos:end="15:40">pb</name></expr></argument>)</argument_list></call> <operator pos:start="15:43" pos:end="15:43">+</operator> <name pos:start="15:45" pos:end="15:52">tag_size</name> <operator pos:start="15:54" pos:end="15:54">-</operator> <literal type="number" pos:start="15:56" pos:end="15:56">8</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="21:18"><if pos:start="19:9" pos:end="21:18">if <condition pos:start="19:12" pos:end="19:23">(<expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:16">next</name> <operator pos:start="19:18" pos:end="19:18">&gt;</operator> <name pos:start="19:20" pos:end="19:22">end</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:18"><block_content pos:start="21:13" pos:end="21:18"> <comment type="line" pos:start="19:25" pos:end="19:52">// stop if tag_size is wrong</comment>

            <break pos:start="21:13" pos:end="21:18">break;</break></block_content></block></if></if_stmt>



        <switch pos:start="25:9" pos:end="55:9">switch <condition pos:start="25:16" pos:end="25:20">(<expr pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">tag</name></expr>)</condition> <block pos:start="25:22" pos:end="55:9">{<block_content pos:start="27:9" pos:end="53:18">

        <case pos:start="27:9" pos:end="27:37">case <expr pos:start="27:14" pos:end="27:36"><call pos:start="27:14" pos:end="27:36"><name pos:start="27:14" pos:end="27:18">MKTAG</name><argument_list pos:start="27:19" pos:end="27:36">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><literal type="number" pos:start="27:20" pos:end="27:23">0xa9</literal></expr></argument>,<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><literal type="char" pos:start="27:25" pos:end="27:27">'n'</literal></expr></argument>,<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><literal type="char" pos:start="27:29" pos:end="27:31">'a'</literal></expr></argument>,<argument pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><literal type="char" pos:start="27:33" pos:end="27:35">'m'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:78"><expr pos:start="29:13" pos:end="29:77"><call pos:start="29:13" pos:end="29:77"><name pos:start="29:13" pos:end="29:33">mov_parse_udta_string</name><argument_list pos:start="29:34" pos:end="29:77">(<argument pos:start="29:35" pos:end="29:36"><expr pos:start="29:35" pos:end="29:36"><name pos:start="29:35" pos:end="29:36">pb</name></expr></argument>, <argument pos:start="29:39" pos:end="29:50"><expr pos:start="29:39" pos:end="29:50"><name pos:start="29:39" pos:end="29:50"><name pos:start="29:39" pos:end="29:39">c</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:43">fc</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:50">title</name></name></expr></argument>,     <argument pos:start="29:57" pos:end="29:76"><expr pos:start="29:57" pos:end="29:76"><sizeof pos:start="29:57" pos:end="29:76">sizeof<argument_list pos:start="29:63" pos:end="29:76">(<argument pos:start="29:64" pos:end="29:75"><expr pos:start="29:64" pos:end="29:75"><name pos:start="29:64" pos:end="29:75"><name pos:start="29:64" pos:end="29:64">c</name><operator pos:start="29:65" pos:end="29:66">-&gt;</operator><name pos:start="29:67" pos:end="29:68">fc</name><operator pos:start="29:69" pos:end="29:70">-&gt;</operator><name pos:start="29:71" pos:end="29:75">title</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:37">case <expr pos:start="33:14" pos:end="33:36"><call pos:start="33:14" pos:end="33:36"><name pos:start="33:14" pos:end="33:18">MKTAG</name><argument_list pos:start="33:19" pos:end="33:36">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><literal type="number" pos:start="33:20" pos:end="33:23">0xa9</literal></expr></argument>,<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><literal type="char" pos:start="33:25" pos:end="33:27">'w'</literal></expr></argument>,<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><literal type="char" pos:start="33:29" pos:end="33:31">'r'</literal></expr></argument>,<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><literal type="char" pos:start="33:33" pos:end="33:35">'t'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:79"><expr pos:start="35:13" pos:end="35:78"><call pos:start="35:13" pos:end="35:78"><name pos:start="35:13" pos:end="35:33">mov_parse_udta_string</name><argument_list pos:start="35:34" pos:end="35:78">(<argument pos:start="35:35" pos:end="35:36"><expr pos:start="35:35" pos:end="35:36"><name pos:start="35:35" pos:end="35:36">pb</name></expr></argument>, <argument pos:start="35:39" pos:end="35:51"><expr pos:start="35:39" pos:end="35:51"><name pos:start="35:39" pos:end="35:51"><name pos:start="35:39" pos:end="35:39">c</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:43">fc</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:51">author</name></name></expr></argument>,    <argument pos:start="35:57" pos:end="35:77"><expr pos:start="35:57" pos:end="35:77"><sizeof pos:start="35:57" pos:end="35:77">sizeof<argument_list pos:start="35:63" pos:end="35:77">(<argument pos:start="35:64" pos:end="35:76"><expr pos:start="35:64" pos:end="35:76"><name pos:start="35:64" pos:end="35:76"><name pos:start="35:64" pos:end="35:64">c</name><operator pos:start="35:65" pos:end="35:66">-&gt;</operator><name pos:start="35:67" pos:end="35:68">fc</name><operator pos:start="35:69" pos:end="35:70">-&gt;</operator><name pos:start="35:71" pos:end="35:76">author</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:37">case <expr pos:start="39:14" pos:end="39:36"><call pos:start="39:14" pos:end="39:36"><name pos:start="39:14" pos:end="39:18">MKTAG</name><argument_list pos:start="39:19" pos:end="39:36">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><literal type="number" pos:start="39:20" pos:end="39:23">0xa9</literal></expr></argument>,<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><literal type="char" pos:start="39:25" pos:end="39:27">'c'</literal></expr></argument>,<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><literal type="char" pos:start="39:29" pos:end="39:31">'p'</literal></expr></argument>,<argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><literal type="char" pos:start="39:33" pos:end="39:35">'y'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:82"><expr pos:start="41:13" pos:end="41:81"><call pos:start="41:13" pos:end="41:81"><name pos:start="41:13" pos:end="41:33">mov_parse_udta_string</name><argument_list pos:start="41:34" pos:end="41:81">(<argument pos:start="41:35" pos:end="41:36"><expr pos:start="41:35" pos:end="41:36"><name pos:start="41:35" pos:end="41:36">pb</name></expr></argument>, <argument pos:start="41:39" pos:end="41:54"><expr pos:start="41:39" pos:end="41:54"><name pos:start="41:39" pos:end="41:54"><name pos:start="41:39" pos:end="41:39">c</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:43">fc</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:54">copyright</name></name></expr></argument>, <argument pos:start="41:57" pos:end="41:80"><expr pos:start="41:57" pos:end="41:80"><sizeof pos:start="41:57" pos:end="41:80">sizeof<argument_list pos:start="41:63" pos:end="41:80">(<argument pos:start="41:64" pos:end="41:79"><expr pos:start="41:64" pos:end="41:79"><name pos:start="41:64" pos:end="41:79"><name pos:start="41:64" pos:end="41:64">c</name><operator pos:start="41:65" pos:end="41:66">-&gt;</operator><name pos:start="41:67" pos:end="41:68">fc</name><operator pos:start="41:69" pos:end="41:70">-&gt;</operator><name pos:start="41:71" pos:end="41:79">copyright</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:37">case <expr pos:start="45:14" pos:end="45:36"><call pos:start="45:14" pos:end="45:36"><name pos:start="45:14" pos:end="45:18">MKTAG</name><argument_list pos:start="45:19" pos:end="45:36">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><literal type="number" pos:start="45:20" pos:end="45:23">0xa9</literal></expr></argument>,<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><literal type="char" pos:start="45:25" pos:end="45:27">'i'</literal></expr></argument>,<argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><literal type="char" pos:start="45:29" pos:end="45:31">'n'</literal></expr></argument>,<argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><literal type="char" pos:start="45:33" pos:end="45:35">'f'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:80"><expr pos:start="47:13" pos:end="47:79"><call pos:start="47:13" pos:end="47:79"><name pos:start="47:13" pos:end="47:33">mov_parse_udta_string</name><argument_list pos:start="47:34" pos:end="47:79">(<argument pos:start="47:35" pos:end="47:36"><expr pos:start="47:35" pos:end="47:36"><name pos:start="47:35" pos:end="47:36">pb</name></expr></argument>, <argument pos:start="47:39" pos:end="47:52"><expr pos:start="47:39" pos:end="47:52"><name pos:start="47:39" pos:end="47:52"><name pos:start="47:39" pos:end="47:39">c</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:43">fc</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:52">comment</name></name></expr></argument>,   <argument pos:start="47:57" pos:end="47:78"><expr pos:start="47:57" pos:end="47:78"><sizeof pos:start="47:57" pos:end="47:78">sizeof<argument_list pos:start="47:63" pos:end="47:78">(<argument pos:start="47:64" pos:end="47:77"><expr pos:start="47:64" pos:end="47:77"><name pos:start="47:64" pos:end="47:77"><name pos:start="47:64" pos:end="47:64">c</name><operator pos:start="47:65" pos:end="47:66">-&gt;</operator><name pos:start="47:67" pos:end="47:68">fc</name><operator pos:start="47:69" pos:end="47:70">-&gt;</operator><name pos:start="47:71" pos:end="47:77">comment</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <default pos:start="51:9" pos:end="51:16">default:</default>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><call pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:17">url_fseek</name><argument_list pos:start="59:18" pos:end="59:37">(<argument pos:start="59:19" pos:end="59:20"><expr pos:start="59:19" pos:end="59:20"><name pos:start="59:19" pos:end="59:20">pb</name></expr></argument>, <argument pos:start="59:23" pos:end="59:26"><expr pos:start="59:23" pos:end="59:26"><name pos:start="59:23" pos:end="59:26">next</name></expr></argument>, <argument pos:start="59:29" pos:end="59:36"><expr pos:start="59:29" pos:end="59:36"><name pos:start="59:29" pos:end="59:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
