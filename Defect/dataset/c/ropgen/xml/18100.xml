<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18100.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">usb_host_handle_control</name><parameter_list pos:start="1:36" pos:end="5:62">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:45">USBDevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">udev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:62">USBPacket</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">p</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:47"><decl pos:start="3:37" pos:end="3:47"><type pos:start="3:37" pos:end="3:47"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:47">request</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:58"><decl pos:start="3:50" pos:end="3:58"><type pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:58">value</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:69"><decl pos:start="3:61" pos:end="3:69"><type pos:start="3:61" pos:end="3:69"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:69">index</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:46"><decl pos:start="5:37" pos:end="5:46"><type pos:start="5:37" pos:end="5:46"><name pos:start="5:37" pos:end="5:39">int</name></type> <name pos:start="5:41" pos:end="5:46">length</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:61"><decl pos:start="5:49" pos:end="5:61"><type pos:start="5:49" pos:end="5:61"><name pos:start="5:49" pos:end="5:55">uint8_t</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:61">data</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="147:1">{<block_content pos:start="9:5" pos:end="145:30">

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">USBHostDevice</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:44">= <expr pos:start="9:24" pos:end="9:44"><call pos:start="9:24" pos:end="9:44"><name pos:start="9:24" pos:end="9:38">USB_HOST_DEVICE</name><argument_list pos:start="9:39" pos:end="9:44">(<argument pos:start="9:40" pos:end="9:43"><expr pos:start="9:40" pos:end="9:43"><name pos:start="9:40" pos:end="9:43">udev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">USBHostRequest</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:11"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:78"><expr pos:start="17:5" pos:end="17:77"><call pos:start="17:5" pos:end="17:77"><name pos:start="17:5" pos:end="17:30">trace_usb_host_req_control</name><argument_list pos:start="17:31" pos:end="17:77">(<argument pos:start="17:32" pos:end="17:41"><expr pos:start="17:32" pos:end="17:41"><name pos:start="17:32" pos:end="17:41"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:41">bus_num</name></name></expr></argument>, <argument pos:start="17:44" pos:end="17:50"><expr pos:start="17:44" pos:end="17:50"><name pos:start="17:44" pos:end="17:50"><name pos:start="17:44" pos:end="17:44">s</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:50">addr</name></name></expr></argument>, <argument pos:start="17:53" pos:end="17:53"><expr pos:start="17:53" pos:end="17:53"><name pos:start="17:53" pos:end="17:53">p</name></expr></argument>, <argument pos:start="17:56" pos:end="17:62"><expr pos:start="17:56" pos:end="17:62"><name pos:start="17:56" pos:end="17:62">request</name></expr></argument>, <argument pos:start="17:65" pos:end="17:69"><expr pos:start="17:65" pos:end="17:69"><name pos:start="17:65" pos:end="17:69">value</name></expr></argument>, <argument pos:start="17:72" pos:end="17:76"><expr pos:start="17:72" pos:end="17:76"><name pos:start="17:72" pos:end="17:76">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:13">dh</name></name> <operator pos:start="21:15" pos:end="21:16">==</operator> <name pos:start="21:18" pos:end="21:21">NULL</name></expr>)</condition> <block pos:start="21:24" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:15">

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">p</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">status</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:33">USB_RET_NODEV</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:71"><expr pos:start="25:9" pos:end="25:70"><call pos:start="25:9" pos:end="25:70"><name pos:start="25:9" pos:end="25:35">trace_usb_host_req_emulated</name><argument_list pos:start="25:36" pos:end="25:70">(<argument pos:start="25:37" pos:end="25:46"><expr pos:start="25:37" pos:end="25:46"><name pos:start="25:37" pos:end="25:46"><name pos:start="25:37" pos:end="25:37">s</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:46">bus_num</name></name></expr></argument>, <argument pos:start="25:49" pos:end="25:55"><expr pos:start="25:49" pos:end="25:55"><name pos:start="25:49" pos:end="25:55"><name pos:start="25:49" pos:end="25:49">s</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:55">addr</name></name></expr></argument>, <argument pos:start="25:58" pos:end="25:58"><expr pos:start="25:58" pos:end="25:58"><name pos:start="25:58" pos:end="25:58">p</name></expr></argument>, <argument pos:start="25:61" pos:end="25:69"><expr pos:start="25:61" pos:end="25:69"><name pos:start="25:61" pos:end="25:69"><name pos:start="25:61" pos:end="25:61">p</name><operator pos:start="25:62" pos:end="25:63">-&gt;</operator><name pos:start="25:64" pos:end="25:69">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="33:5" pos:end="81:5">switch <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:19">request</name></expr>)</condition> <block pos:start="33:22" pos:end="81:5">{<block_content pos:start="35:5" pos:end="79:9">

    <case pos:start="35:5" pos:end="35:48">case <expr pos:start="35:10" pos:end="35:47"><name pos:start="35:10" pos:end="35:25">DeviceOutRequest</name> <operator pos:start="35:27" pos:end="35:27">|</operator> <name pos:start="35:29" pos:end="35:47">USB_REQ_SET_ADDRESS</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><call pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:28">usb_host_set_address</name><argument_list pos:start="37:29" pos:end="37:38">(<argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">s</name></expr></argument>, <argument pos:start="37:33" pos:end="37:37"><expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:71"><expr pos:start="39:9" pos:end="39:70"><call pos:start="39:9" pos:end="39:70"><name pos:start="39:9" pos:end="39:35">trace_usb_host_req_emulated</name><argument_list pos:start="39:36" pos:end="39:70">(<argument pos:start="39:37" pos:end="39:46"><expr pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:37">s</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:46">bus_num</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:55"><expr pos:start="39:49" pos:end="39:55"><name pos:start="39:49" pos:end="39:55"><name pos:start="39:49" pos:end="39:49">s</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:55">addr</name></name></expr></argument>, <argument pos:start="39:58" pos:end="39:58"><expr pos:start="39:58" pos:end="39:58"><name pos:start="39:58" pos:end="39:58">p</name></expr></argument>, <argument pos:start="39:61" pos:end="39:69"><expr pos:start="39:61" pos:end="39:69"><name pos:start="39:61" pos:end="39:69"><name pos:start="39:61" pos:end="39:61">p</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:69">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:15">return;</return>



    <case pos:start="45:5" pos:end="45:54">case <expr pos:start="45:10" pos:end="45:53"><name pos:start="45:10" pos:end="45:25">DeviceOutRequest</name> <operator pos:start="45:27" pos:end="45:27">|</operator> <name pos:start="45:29" pos:end="45:53">USB_REQ_SET_CONFIGURATION</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:48"><expr pos:start="47:9" pos:end="47:47"><call pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:27">usb_host_set_config</name><argument_list pos:start="47:28" pos:end="47:47">(<argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">s</name></expr></argument>, <argument pos:start="47:32" pos:end="47:43"><expr pos:start="47:32" pos:end="47:43"><name pos:start="47:32" pos:end="47:36">value</name> <operator pos:start="47:38" pos:end="47:38">&amp;</operator> <literal type="number" pos:start="47:40" pos:end="47:43">0xff</literal></expr></argument>, <argument pos:start="47:46" pos:end="47:46"><expr pos:start="47:46" pos:end="47:46"><name pos:start="47:46" pos:end="47:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:71"><expr pos:start="49:9" pos:end="49:70"><call pos:start="49:9" pos:end="49:70"><name pos:start="49:9" pos:end="49:35">trace_usb_host_req_emulated</name><argument_list pos:start="49:36" pos:end="49:70">(<argument pos:start="49:37" pos:end="49:46"><expr pos:start="49:37" pos:end="49:46"><name pos:start="49:37" pos:end="49:46"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:46">bus_num</name></name></expr></argument>, <argument pos:start="49:49" pos:end="49:55"><expr pos:start="49:49" pos:end="49:55"><name pos:start="49:49" pos:end="49:55"><name pos:start="49:49" pos:end="49:49">s</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:55">addr</name></name></expr></argument>, <argument pos:start="49:58" pos:end="49:58"><expr pos:start="49:58" pos:end="49:58"><name pos:start="49:58" pos:end="49:58">p</name></expr></argument>, <argument pos:start="49:61" pos:end="49:69"><expr pos:start="49:61" pos:end="49:69"><name pos:start="49:61" pos:end="49:69"><name pos:start="49:61" pos:end="49:61">p</name><operator pos:start="49:62" pos:end="49:63">-&gt;</operator><name pos:start="49:64" pos:end="49:69">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>



    <case pos:start="55:5" pos:end="55:53">case <expr pos:start="55:10" pos:end="55:52"><name pos:start="55:10" pos:end="55:28">InterfaceOutRequest</name> <operator pos:start="55:30" pos:end="55:30">|</operator> <name pos:start="55:32" pos:end="55:52">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:51"><expr pos:start="57:9" pos:end="57:50"><call pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:30">usb_host_set_interface</name><argument_list pos:start="57:31" pos:end="57:50">(<argument pos:start="57:32" pos:end="57:32"><expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">s</name></expr></argument>, <argument pos:start="57:35" pos:end="57:39"><expr pos:start="57:35" pos:end="57:39"><name pos:start="57:35" pos:end="57:39">index</name></expr></argument>, <argument pos:start="57:42" pos:end="57:46"><expr pos:start="57:42" pos:end="57:46"><name pos:start="57:42" pos:end="57:46">value</name></expr></argument>, <argument pos:start="57:49" pos:end="57:49"><expr pos:start="57:49" pos:end="57:49"><name pos:start="57:49" pos:end="57:49">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:71"><expr pos:start="59:9" pos:end="59:70"><call pos:start="59:9" pos:end="59:70"><name pos:start="59:9" pos:end="59:35">trace_usb_host_req_emulated</name><argument_list pos:start="59:36" pos:end="59:70">(<argument pos:start="59:37" pos:end="59:46"><expr pos:start="59:37" pos:end="59:46"><name pos:start="59:37" pos:end="59:46"><name pos:start="59:37" pos:end="59:37">s</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:46">bus_num</name></name></expr></argument>, <argument pos:start="59:49" pos:end="59:55"><expr pos:start="59:49" pos:end="59:55"><name pos:start="59:49" pos:end="59:55"><name pos:start="59:49" pos:end="59:49">s</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:55">addr</name></name></expr></argument>, <argument pos:start="59:58" pos:end="59:58"><expr pos:start="59:58" pos:end="59:58"><name pos:start="59:58" pos:end="59:58">p</name></expr></argument>, <argument pos:start="59:61" pos:end="59:69"><expr pos:start="59:61" pos:end="59:69"><name pos:start="59:61" pos:end="59:69"><name pos:start="59:61" pos:end="59:61">p</name><operator pos:start="59:62" pos:end="59:63">-&gt;</operator><name pos:start="59:64" pos:end="59:69">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:15">return;</return>



    <case pos:start="65:5" pos:end="65:52">case <expr pos:start="65:10" pos:end="65:51"><name pos:start="65:10" pos:end="65:27">EndpointOutRequest</name> <operator pos:start="65:29" pos:end="65:29">|</operator> <name pos:start="65:31" pos:end="65:51">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <if_stmt pos:start="67:9" pos:end="79:9"><if pos:start="67:9" pos:end="79:9">if <condition pos:start="67:12" pos:end="67:23">(<expr pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:17">value</name> <operator pos:start="67:19" pos:end="67:20">==</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>)</condition> <block pos:start="67:25" pos:end="79:9">{<block_content pos:start="69:13" pos:end="77:19"> <comment type="block" pos:start="67:27" pos:end="67:42">/* clear halt */</comment>

            <decl_stmt pos:start="69:13" pos:end="69:74"><decl pos:start="69:13" pos:end="69:73"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:19">pid</name> <init pos:start="69:21" pos:end="69:73">= <expr pos:start="69:23" pos:end="69:73"><ternary pos:start="69:23" pos:end="69:73"><condition pos:start="69:23" pos:end="69:44"><expr pos:start="69:23" pos:end="69:42"><operator pos:start="69:23" pos:end="69:23">(</operator><name pos:start="69:24" pos:end="69:28">index</name> <operator pos:start="69:30" pos:end="69:30">&amp;</operator> <name pos:start="69:32" pos:end="69:41">USB_DIR_IN</name><operator pos:start="69:42" pos:end="69:42">)</operator></expr> ?</condition><then pos:start="69:46" pos:end="69:57"> <expr pos:start="69:46" pos:end="69:57"><name pos:start="69:46" pos:end="69:57">USB_TOKEN_IN</name></expr> </then><else pos:start="69:59" pos:end="69:73">: <expr pos:start="69:61" pos:end="69:73"><name pos:start="69:61" pos:end="69:73">USB_TOKEN_OUT</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:44"><expr pos:start="71:13" pos:end="71:43"><call pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:29">libusb_clear_halt</name><argument_list pos:start="71:30" pos:end="71:43">(<argument pos:start="71:31" pos:end="71:35"><expr pos:start="71:31" pos:end="71:35"><name pos:start="71:31" pos:end="71:35"><name pos:start="71:31" pos:end="71:31">s</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:35">dh</name></name></expr></argument>, <argument pos:start="71:38" pos:end="71:42"><expr pos:start="71:38" pos:end="71:42"><name pos:start="71:38" pos:end="71:42">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:58"><expr pos:start="73:13" pos:end="73:57"><call pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:29">usb_ep_set_halted</name><argument_list pos:start="73:30" pos:end="73:57">(<argument pos:start="73:31" pos:end="73:34"><expr pos:start="73:31" pos:end="73:34"><name pos:start="73:31" pos:end="73:34">udev</name></expr></argument>, <argument pos:start="73:37" pos:end="73:39"><expr pos:start="73:37" pos:end="73:39"><name pos:start="73:37" pos:end="73:39">pid</name></expr></argument>, <argument pos:start="73:42" pos:end="73:53"><expr pos:start="73:42" pos:end="73:53"><name pos:start="73:42" pos:end="73:46">index</name> <operator pos:start="73:48" pos:end="73:48">&amp;</operator> <literal type="number" pos:start="73:50" pos:end="73:53">0x0f</literal></expr></argument>, <argument pos:start="73:56" pos:end="73:56"><expr pos:start="73:56" pos:end="73:56"><literal type="number" pos:start="73:56" pos:end="73:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:75"><expr pos:start="75:13" pos:end="75:74"><call pos:start="75:13" pos:end="75:74"><name pos:start="75:13" pos:end="75:39">trace_usb_host_req_emulated</name><argument_list pos:start="75:40" pos:end="75:74">(<argument pos:start="75:41" pos:end="75:50"><expr pos:start="75:41" pos:end="75:50"><name pos:start="75:41" pos:end="75:50"><name pos:start="75:41" pos:end="75:41">s</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:50">bus_num</name></name></expr></argument>, <argument pos:start="75:53" pos:end="75:59"><expr pos:start="75:53" pos:end="75:59"><name pos:start="75:53" pos:end="75:59"><name pos:start="75:53" pos:end="75:53">s</name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:59">addr</name></name></expr></argument>, <argument pos:start="75:62" pos:end="75:62"><expr pos:start="75:62" pos:end="75:62"><name pos:start="75:62" pos:end="75:62">p</name></expr></argument>, <argument pos:start="75:65" pos:end="75:73"><expr pos:start="75:65" pos:end="75:73"><name pos:start="75:65" pos:end="75:73"><name pos:start="75:65" pos:end="75:65">p</name><operator pos:start="75:66" pos:end="75:67">-&gt;</operator><name pos:start="75:68" pos:end="75:73">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="85:5" pos:end="85:74"><expr pos:start="85:5" pos:end="85:73"><name pos:start="85:5" pos:end="85:5">r</name> <operator pos:start="85:7" pos:end="85:7">=</operator> <call pos:start="85:9" pos:end="85:73"><name pos:start="85:9" pos:end="85:26">usb_host_req_alloc</name><argument_list pos:start="85:27" pos:end="85:73">(<argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">s</name></expr></argument>, <argument pos:start="85:31" pos:end="85:31"><expr pos:start="85:31" pos:end="85:31"><name pos:start="85:31" pos:end="85:31">p</name></expr></argument>, <argument pos:start="85:34" pos:end="85:60"><expr pos:start="85:34" pos:end="85:60"><operator pos:start="85:34" pos:end="85:34">(</operator><name pos:start="85:35" pos:end="85:41">request</name> <operator pos:start="85:43" pos:end="85:44">&gt;&gt;</operator> <literal type="number" pos:start="85:46" pos:end="85:46">8</literal><operator pos:start="85:47" pos:end="85:47">)</operator> <operator pos:start="85:49" pos:end="85:49">&amp;</operator> <name pos:start="85:51" pos:end="85:60">USB_DIR_IN</name></expr></argument>, <argument pos:start="85:63" pos:end="85:72"><expr pos:start="85:63" pos:end="85:72"><name pos:start="85:63" pos:end="85:68">length</name> <operator pos:start="85:70" pos:end="85:70">+</operator> <literal type="number" pos:start="85:72" pos:end="85:72">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:19"><expr pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:11"><name pos:start="87:5" pos:end="87:5">r</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:11">cbuf</name></name> <operator pos:start="87:13" pos:end="87:13">=</operator> <name pos:start="87:15" pos:end="87:18">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:21"><expr pos:start="89:5" pos:end="89:20"><name pos:start="89:5" pos:end="89:11"><name pos:start="89:5" pos:end="89:5">r</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:11">clen</name></name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:20">length</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:42"><expr pos:start="91:5" pos:end="91:41"><call pos:start="91:5" pos:end="91:41"><name pos:start="91:5" pos:end="91:10">memcpy</name><argument_list pos:start="91:11" pos:end="91:41">(<argument pos:start="91:12" pos:end="91:20"><expr pos:start="91:12" pos:end="91:20"><name pos:start="91:12" pos:end="91:20"><name pos:start="91:12" pos:end="91:12">r</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:20">buffer</name></name></expr></argument>, <argument pos:start="91:23" pos:end="91:37"><expr pos:start="91:23" pos:end="91:37"><name pos:start="91:23" pos:end="91:37"><name pos:start="91:23" pos:end="91:26">udev</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:37">setup_buf</name></name></expr></argument>, <argument pos:start="91:40" pos:end="91:40"><expr pos:start="91:40" pos:end="91:40"><literal type="number" pos:start="91:40" pos:end="91:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:15">(<expr pos:start="93:9" pos:end="93:14"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">r</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:14">in</name></name></expr>)</condition> <block pos:start="93:17" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:48">

        <expr_stmt pos:start="95:9" pos:end="95:48"><expr pos:start="95:9" pos:end="95:47"><call pos:start="95:9" pos:end="95:47"><name pos:start="95:9" pos:end="95:14">memcpy</name><argument_list pos:start="95:15" pos:end="95:47">(<argument pos:start="95:16" pos:end="95:28"><expr pos:start="95:16" pos:end="95:28"><name pos:start="95:16" pos:end="95:24"><name pos:start="95:16" pos:end="95:16">r</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:24">buffer</name></name> <operator pos:start="95:26" pos:end="95:26">+</operator> <literal type="number" pos:start="95:28" pos:end="95:28">8</literal></expr></argument>, <argument pos:start="95:31" pos:end="95:37"><expr pos:start="95:31" pos:end="95:37"><name pos:start="95:31" pos:end="95:37"><name pos:start="95:31" pos:end="95:31">r</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:37">cbuf</name></name></expr></argument>, <argument pos:start="95:40" pos:end="95:46"><expr pos:start="95:40" pos:end="95:46"><name pos:start="95:40" pos:end="95:46"><name pos:start="95:40" pos:end="95:40">r</name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:46">clen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="101:5" pos:end="103:60">/* Fix up USB-3 ep0 maxpacket size to allow superspeed connected devices

     * to work redirected to a not superspeed capable hcd */</comment>

    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="109:58">(<expr pos:start="105:9" pos:end="109:57"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:12">udev</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:19">speed</name></name> <operator pos:start="105:21" pos:end="105:22">==</operator> <name pos:start="105:24" pos:end="105:38">USB_SPEED_SUPER</name> <operator pos:start="105:40" pos:end="105:41">&amp;&amp;</operator>

        <operator pos:start="107:9" pos:end="107:9">!</operator><operator pos:start="107:10" pos:end="107:10">(</operator><name pos:start="107:11" pos:end="107:31"><name pos:start="107:11" pos:end="107:14">udev</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:20">port</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:31">speedmask</name></name> <operator pos:start="107:33" pos:end="107:33">&amp;</operator> <name pos:start="107:35" pos:end="107:54">USB_SPEED_MASK_SUPER</name><operator pos:start="107:55" pos:end="107:55">)</operator> <operator pos:start="107:57" pos:end="107:58">&amp;&amp;</operator>

        <name pos:start="109:9" pos:end="109:15">request</name> <operator pos:start="109:17" pos:end="109:18">==</operator> <literal type="number" pos:start="109:20" pos:end="109:25">0x8006</literal> <operator pos:start="109:27" pos:end="109:28">&amp;&amp;</operator> <name pos:start="109:30" pos:end="109:34">value</name> <operator pos:start="109:36" pos:end="109:37">==</operator> <literal type="number" pos:start="109:39" pos:end="109:43">0x100</literal> <operator pos:start="109:45" pos:end="109:46">&amp;&amp;</operator> <name pos:start="109:48" pos:end="109:52">index</name> <operator pos:start="109:54" pos:end="109:55">==</operator> <literal type="number" pos:start="109:57" pos:end="109:57">0</literal></expr>)</condition> <block pos:start="109:60" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:31">

        <expr_stmt pos:start="111:9" pos:end="111:31"><expr pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:9">r</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:23">usb3ep0quirk</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:30">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="121:50"><expr pos:start="117:5" pos:end="121:49"><call pos:start="117:5" pos:end="121:49"><name pos:start="117:5" pos:end="117:32">libusb_fill_control_transfer</name><argument_list pos:start="117:33" pos:end="121:49">(<argument pos:start="117:34" pos:end="117:40"><expr pos:start="117:34" pos:end="117:40"><name pos:start="117:34" pos:end="117:40"><name pos:start="117:34" pos:end="117:34">r</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:40">xfer</name></name></expr></argument>, <argument pos:start="117:43" pos:end="117:47"><expr pos:start="117:43" pos:end="117:47"><name pos:start="117:43" pos:end="117:47"><name pos:start="117:43" pos:end="117:43">s</name><operator pos:start="117:44" pos:end="117:45">-&gt;</operator><name pos:start="117:46" pos:end="117:47">dh</name></name></expr></argument>, <argument pos:start="117:50" pos:end="117:58"><expr pos:start="117:50" pos:end="117:58"><name pos:start="117:50" pos:end="117:58"><name pos:start="117:50" pos:end="117:50">r</name><operator pos:start="117:51" pos:end="117:52">-&gt;</operator><name pos:start="117:53" pos:end="117:58">buffer</name></name></expr></argument>,

                                 <argument pos:start="119:34" pos:end="119:59"><expr pos:start="119:34" pos:end="119:59"><name pos:start="119:34" pos:end="119:59">usb_host_req_complete_ctrl</name></expr></argument>, <argument pos:start="119:62" pos:end="119:62"><expr pos:start="119:62" pos:end="119:62"><name pos:start="119:62" pos:end="119:62">r</name></expr></argument>,

                                 <argument pos:start="121:34" pos:end="121:48"><expr pos:start="121:34" pos:end="121:48"><name pos:start="121:34" pos:end="121:48">CONTROL_TIMEOUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:41"><expr pos:start="123:5" pos:end="123:40"><name pos:start="123:5" pos:end="123:6">rc</name> <operator pos:start="123:8" pos:end="123:8">=</operator> <call pos:start="123:10" pos:end="123:40"><name pos:start="123:10" pos:end="123:31">libusb_submit_transfer</name><argument_list pos:start="123:32" pos:end="123:40">(<argument pos:start="123:33" pos:end="123:39"><expr pos:start="123:33" pos:end="123:39"><name pos:start="123:33" pos:end="123:39"><name pos:start="123:33" pos:end="123:33">r</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:39">xfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="141:5"><if pos:start="125:5" pos:end="141:5">if <condition pos:start="125:8" pos:end="125:16">(<expr pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:10">rc</name> <operator pos:start="125:12" pos:end="125:13">!=</operator> <literal type="number" pos:start="125:15" pos:end="125:15">0</literal></expr>)</condition> <block pos:start="125:18" pos:end="141:5">{<block_content pos:start="127:9" pos:end="139:15">

        <expr_stmt pos:start="127:9" pos:end="127:34"><expr pos:start="127:9" pos:end="127:33"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:9">p</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:17">status</name></name> <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:33">USB_RET_NODEV</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="131:65"><expr pos:start="129:9" pos:end="131:64"><call pos:start="129:9" pos:end="131:64"><name pos:start="129:9" pos:end="129:35">trace_usb_host_req_complete</name><argument_list pos:start="129:36" pos:end="131:64">(<argument pos:start="129:37" pos:end="129:46"><expr pos:start="129:37" pos:end="129:46"><name pos:start="129:37" pos:end="129:46"><name pos:start="129:37" pos:end="129:37">s</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:46">bus_num</name></name></expr></argument>, <argument pos:start="129:49" pos:end="129:55"><expr pos:start="129:49" pos:end="129:55"><name pos:start="129:49" pos:end="129:55"><name pos:start="129:49" pos:end="129:49">s</name><operator pos:start="129:50" pos:end="129:51">-&gt;</operator><name pos:start="129:52" pos:end="129:55">addr</name></name></expr></argument>, <argument pos:start="129:58" pos:end="129:58"><expr pos:start="129:58" pos:end="129:58"><name pos:start="129:58" pos:end="129:58">p</name></expr></argument>,

                                    <argument pos:start="131:37" pos:end="131:45"><expr pos:start="131:37" pos:end="131:45"><name pos:start="131:37" pos:end="131:45"><name pos:start="131:37" pos:end="131:37">p</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:45">status</name></name></expr></argument>, <argument pos:start="131:48" pos:end="131:63"><expr pos:start="131:48" pos:end="131:63"><name pos:start="131:48" pos:end="131:63"><name pos:start="131:48" pos:end="131:48">p</name><operator pos:start="131:49" pos:end="131:50">-&gt;</operator><name pos:start="131:51" pos:end="131:63">actual_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="137:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:41">(<expr pos:start="133:13" pos:end="133:40"><name pos:start="133:13" pos:end="133:14">rc</name> <operator pos:start="133:16" pos:end="133:17">==</operator> <name pos:start="133:19" pos:end="133:40">LIBUSB_ERROR_NO_DEVICE</name></expr>)</condition> <block pos:start="133:43" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:30">

            <expr_stmt pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><call pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:26">usb_host_nodev</name><argument_list pos:start="135:27" pos:end="135:29">(<argument pos:start="135:28" pos:end="135:28"><expr pos:start="135:28" pos:end="135:28"><name pos:start="135:28" pos:end="135:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="139:9" pos:end="139:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:30"><expr pos:start="145:5" pos:end="145:29"><name pos:start="145:5" pos:end="145:13"><name pos:start="145:5" pos:end="145:5">p</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:13">status</name></name> <operator pos:start="145:15" pos:end="145:15">=</operator> <name pos:start="145:17" pos:end="145:29">USB_RET_ASYNC</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
