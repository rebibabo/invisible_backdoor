<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/69.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">qxl_render_cursor</name><parameter_list pos:start="1:22" pos:end="1:60">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:34">PCIQXLDevice</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">qxl</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:54">QXLCommandExt</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">ext</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:13">

    <decl_stmt pos:start="5:5" pos:end="5:73"><decl pos:start="5:5" pos:end="5:72"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">QXLCursorCmd</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">cmd</name> <init pos:start="5:23" pos:end="5:72">= <expr pos:start="5:25" pos:end="5:72"><call pos:start="5:25" pos:end="5:72"><name pos:start="5:25" pos:end="5:37">qxl_phys2virt</name><argument_list pos:start="5:38" pos:end="5:72">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">qxl</name></expr></argument>, <argument pos:start="5:44" pos:end="5:56"><expr pos:start="5:44" pos:end="5:56"><name pos:start="5:44" pos:end="5:56"><name pos:start="5:44" pos:end="5:46">ext</name><operator pos:start="5:47" pos:end="5:48">-&gt;</operator><name pos:start="5:49" pos:end="5:51">cmd</name><operator pos:start="5:52" pos:end="5:52">.</operator><name pos:start="5:53" pos:end="5:56">data</name></name></expr></argument>, <argument pos:start="5:59" pos:end="5:71"><expr pos:start="5:59" pos:end="5:71"><name pos:start="5:59" pos:end="5:71"><name pos:start="5:59" pos:end="5:61">ext</name><operator pos:start="5:62" pos:end="5:63">-&gt;</operator><name pos:start="5:64" pos:end="5:71">group_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">QXLCursor</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">cursor</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">QEMUCursor</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">c</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:12">cmd</name></expr>)</condition> <block pos:start="13:15" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:51">(<expr pos:start="21:9" pos:end="21:50"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:50"><name pos:start="21:10" pos:end="21:36">dpy_cursor_define_supported</name><argument_list pos:start="21:37" pos:end="21:50">(<argument pos:start="21:38" pos:end="21:49"><expr pos:start="21:38" pos:end="21:49"><name pos:start="21:38" pos:end="21:49"><name pos:start="21:38" pos:end="21:40">qxl</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:45">vga</name><operator pos:start="21:46" pos:end="21:46">.</operator><name pos:start="21:47" pos:end="21:49">con</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:53" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:55">(<expr pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:11">qxl</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:18">debug</name></name> <operator pos:start="29:20" pos:end="29:20">&gt;</operator> <literal type="number" pos:start="29:22" pos:end="29:22">1</literal> <operator pos:start="29:24" pos:end="29:25">&amp;&amp;</operator> <name pos:start="29:27" pos:end="29:35"><name pos:start="29:27" pos:end="29:29">cmd</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:35">type</name></name> <operator pos:start="29:37" pos:end="29:38">!=</operator> <name pos:start="29:40" pos:end="29:54">QXL_CURSOR_MOVE</name></expr>)</condition> <block pos:start="29:57" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:30">

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:15">fprintf</name><argument_list pos:start="31:16" pos:end="31:43">(<argument pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:22">stderr</name></expr></argument>, <argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><literal type="string" pos:start="31:25" pos:end="31:28">"%s"</literal></expr></argument>, <argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:42">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><call pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:26">qxl_log_cmd_cursor</name><argument_list pos:start="33:27" pos:end="33:51">(<argument pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:30">qxl</name></expr></argument>, <argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">cmd</name></expr></argument>, <argument pos:start="33:38" pos:end="33:50"><expr pos:start="33:38" pos:end="33:50"><name pos:start="33:38" pos:end="33:50"><name pos:start="33:38" pos:end="33:40">ext</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:50">group_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><call pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="35:29">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><literal type="string" pos:start="35:25" pos:end="35:28">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="39:5" pos:end="93:5">switch <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:15">cmd</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:21">type</name></name></expr>)</condition> <block pos:start="39:24" pos:end="93:5">{<block_content pos:start="41:5" pos:end="91:14">

    <case pos:start="41:5" pos:end="41:24">case <expr pos:start="41:10" pos:end="41:23"><name pos:start="41:10" pos:end="41:23">QXL_CURSOR_SET</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:69"><expr pos:start="43:9" pos:end="43:68"><name pos:start="43:9" pos:end="43:14">cursor</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:68"><name pos:start="43:18" pos:end="43:30">qxl_phys2virt</name><argument_list pos:start="43:31" pos:end="43:68">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">qxl</name></expr></argument>, <argument pos:start="43:37" pos:end="43:52"><expr pos:start="43:37" pos:end="43:52"><name pos:start="43:37" pos:end="43:52"><name pos:start="43:37" pos:end="43:39">cmd</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:42">u</name><operator pos:start="43:43" pos:end="43:43">.</operator><name pos:start="43:44" pos:end="43:46">set</name><operator pos:start="43:47" pos:end="43:47">.</operator><name pos:start="43:48" pos:end="43:52">shape</name></name></expr></argument>, <argument pos:start="43:55" pos:end="43:67"><expr pos:start="43:55" pos:end="43:67"><name pos:start="43:55" pos:end="43:67"><name pos:start="43:55" pos:end="43:57">ext</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:67">group_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:19">cursor</name></expr>)</condition> <block pos:start="45:22" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:21">

            <return pos:start="47:13" pos:end="47:21">return <expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:51"><expr pos:start="51:9" pos:end="51:50"><name pos:start="51:9" pos:end="51:9">c</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:22">qxl_cursor</name><argument_list pos:start="51:23" pos:end="51:50">(<argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">qxl</name></expr></argument>, <argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:34">cursor</name></expr></argument>, <argument pos:start="51:37" pos:end="51:49"><expr pos:start="51:37" pos:end="51:49"><name pos:start="51:37" pos:end="51:49"><name pos:start="51:37" pos:end="51:39">ext</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:49">group_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:13">c</name> <operator pos:start="53:15" pos:end="53:16">==</operator> <name pos:start="53:18" pos:end="53:21">NULL</name></expr>)</condition> <block pos:start="53:24" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:42">

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:13">c</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <call pos:start="55:17" pos:end="55:41"><name pos:start="55:17" pos:end="55:39">cursor_builtin_left_ptr</name><argument_list pos:start="55:40" pos:end="55:41">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><call pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:23">qemu_mutex_lock</name><argument_list pos:start="59:24" pos:end="59:39">(<argument pos:start="59:25" pos:end="59:38"><expr pos:start="59:25" pos:end="59:38"><operator pos:start="59:25" pos:end="59:25">&amp;</operator><name pos:start="59:26" pos:end="59:38"><name pos:start="59:26" pos:end="59:28">qxl</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:33">ssd</name><operator pos:start="59:34" pos:end="59:34">.</operator><name pos:start="59:35" pos:end="59:38">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:28">(<expr pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:15">qxl</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:20">ssd</name><operator pos:start="61:21" pos:end="61:21">.</operator><name pos:start="61:22" pos:end="61:27">cursor</name></name></expr>)</condition> <block pos:start="61:30" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:40">

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><call pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:22">cursor_put</name><argument_list pos:start="63:23" pos:end="63:39">(<argument pos:start="63:24" pos:end="63:38"><expr pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:26">qxl</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:31">ssd</name><operator pos:start="63:32" pos:end="63:32">.</operator><name pos:start="63:33" pos:end="63:38">cursor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:11">qxl</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:16">ssd</name><operator pos:start="67:17" pos:end="67:17">.</operator><name pos:start="67:18" pos:end="67:23">cursor</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:27">c</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:49"><expr pos:start="69:9" pos:end="69:48"><name pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:11">qxl</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:16">ssd</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:24">mouse_x</name></name> <operator pos:start="69:26" pos:end="69:26">=</operator> <name pos:start="69:28" pos:end="69:48"><name pos:start="69:28" pos:end="69:30">cmd</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:33">u</name><operator pos:start="69:34" pos:end="69:34">.</operator><name pos:start="69:35" pos:end="69:37">set</name><operator pos:start="69:38" pos:end="69:38">.</operator><name pos:start="69:39" pos:end="69:46">position</name><operator pos:start="69:47" pos:end="69:47">.</operator><name pos:start="69:48" pos:end="69:48">x</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:49"><expr pos:start="71:9" pos:end="71:48"><name pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:11">qxl</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:16">ssd</name><operator pos:start="71:17" pos:end="71:17">.</operator><name pos:start="71:18" pos:end="71:24">mouse_y</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <name pos:start="71:28" pos:end="71:48"><name pos:start="71:28" pos:end="71:30">cmd</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:33">u</name><operator pos:start="71:34" pos:end="71:34">.</operator><name pos:start="71:35" pos:end="71:37">set</name><operator pos:start="71:38" pos:end="71:38">.</operator><name pos:start="71:39" pos:end="71:46">position</name><operator pos:start="71:47" pos:end="71:47">.</operator><name pos:start="71:48" pos:end="71:48">y</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:42"><expr pos:start="73:9" pos:end="73:41"><call pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:25">qemu_mutex_unlock</name><argument_list pos:start="73:26" pos:end="73:41">(<argument pos:start="73:27" pos:end="73:40"><expr pos:start="73:27" pos:end="73:40"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:40"><name pos:start="73:28" pos:end="73:30">qxl</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:35">ssd</name><operator pos:start="73:36" pos:end="73:36">.</operator><name pos:start="73:37" pos:end="73:40">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><call pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:24">qemu_bh_schedule</name><argument_list pos:start="75:25" pos:end="75:44">(<argument pos:start="75:26" pos:end="75:43"><expr pos:start="75:26" pos:end="75:43"><name pos:start="75:26" pos:end="75:43"><name pos:start="75:26" pos:end="75:28">qxl</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:33">ssd</name><operator pos:start="75:34" pos:end="75:34">.</operator><name pos:start="75:35" pos:end="75:43">cursor_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:25">case <expr pos:start="79:10" pos:end="79:24"><name pos:start="79:10" pos:end="79:24">QXL_CURSOR_MOVE</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:40"><expr pos:start="81:9" pos:end="81:39"><call pos:start="81:9" pos:end="81:39"><name pos:start="81:9" pos:end="81:23">qemu_mutex_lock</name><argument_list pos:start="81:24" pos:end="81:39">(<argument pos:start="81:25" pos:end="81:38"><expr pos:start="81:25" pos:end="81:38"><operator pos:start="81:25" pos:end="81:25">&amp;</operator><name pos:start="81:26" pos:end="81:38"><name pos:start="81:26" pos:end="81:28">qxl</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:33">ssd</name><operator pos:start="81:34" pos:end="81:34">.</operator><name pos:start="81:35" pos:end="81:38">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:45"><expr pos:start="83:9" pos:end="83:44"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:11">qxl</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:16">ssd</name><operator pos:start="83:17" pos:end="83:17">.</operator><name pos:start="83:18" pos:end="83:24">mouse_x</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:44"><name pos:start="83:28" pos:end="83:30">cmd</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:33">u</name><operator pos:start="83:34" pos:end="83:34">.</operator><name pos:start="83:35" pos:end="83:42">position</name><operator pos:start="83:43" pos:end="83:43">.</operator><name pos:start="83:44" pos:end="83:44">x</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:45"><expr pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:11">qxl</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:16">ssd</name><operator pos:start="85:17" pos:end="85:17">.</operator><name pos:start="85:18" pos:end="85:24">mouse_y</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:44"><name pos:start="85:28" pos:end="85:30">cmd</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:33">u</name><operator pos:start="85:34" pos:end="85:34">.</operator><name pos:start="85:35" pos:end="85:42">position</name><operator pos:start="85:43" pos:end="85:43">.</operator><name pos:start="85:44" pos:end="85:44">y</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><call pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:25">qemu_mutex_unlock</name><argument_list pos:start="87:26" pos:end="87:41">(<argument pos:start="87:27" pos:end="87:40"><expr pos:start="87:27" pos:end="87:40"><operator pos:start="87:27" pos:end="87:27">&amp;</operator><name pos:start="87:28" pos:end="87:40"><name pos:start="87:28" pos:end="87:30">qxl</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:35">ssd</name><operator pos:start="87:36" pos:end="87:36">.</operator><name pos:start="87:37" pos:end="87:40">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:45"><expr pos:start="89:9" pos:end="89:44"><call pos:start="89:9" pos:end="89:44"><name pos:start="89:9" pos:end="89:24">qemu_bh_schedule</name><argument_list pos:start="89:25" pos:end="89:44">(<argument pos:start="89:26" pos:end="89:43"><expr pos:start="89:26" pos:end="89:43"><name pos:start="89:26" pos:end="89:43"><name pos:start="89:26" pos:end="89:28">qxl</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:33">ssd</name><operator pos:start="89:34" pos:end="89:34">.</operator><name pos:start="89:35" pos:end="89:43">cursor_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
