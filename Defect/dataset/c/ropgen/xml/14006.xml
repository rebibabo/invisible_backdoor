<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14006.c" pos:tabs="8"><function pos:start="1:1" pos:end="54:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">nvdimm_realize</name><parameter_list pos:start="1:27" pos:end="1:60">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:39">PCDIMMDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">dimm</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="54:1">{<block_content pos:start="5:5" pos:end="52:36">

    <decl_stmt pos:start="5:5" pos:end="5:75"><decl pos:start="5:5" pos:end="5:74"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MemoryRegion</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mr</name> <init pos:start="5:22" pos:end="5:74">= <expr pos:start="5:24" pos:end="5:74"><call pos:start="5:24" pos:end="5:74"><name pos:start="5:24" pos:end="5:53">host_memory_backend_get_memory</name><argument_list pos:start="5:54" pos:end="5:74">(<argument pos:start="5:55" pos:end="5:67"><expr pos:start="5:55" pos:end="5:67"><name pos:start="5:55" pos:end="5:67"><name pos:start="5:55" pos:end="5:58">dimm</name><operator pos:start="5:59" pos:end="5:60">-&gt;</operator><name pos:start="5:61" pos:end="5:67">hostmem</name></name></expr></argument>, <argument pos:start="5:70" pos:end="5:73"><expr pos:start="5:70" pos:end="5:73"><name pos:start="5:70" pos:end="5:73">errp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">NVDIMMDevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:24">nvdimm</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><call pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:33">NVDIMM</name><argument_list pos:start="7:34" pos:end="7:39">(<argument pos:start="7:35" pos:end="7:38"><expr pos:start="7:35" pos:end="7:38"><name pos:start="7:35" pos:end="7:38">dimm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:18">align</name></decl>, <decl pos:start="9:21" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:21" pos:end="9:29">pmem_size</name></decl>, <decl pos:start="9:32" pos:end="9:60"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:32" pos:end="9:35">size</name> <init pos:start="9:37" pos:end="9:60">= <expr pos:start="9:39" pos:end="9:60"><call pos:start="9:39" pos:end="9:60"><name pos:start="9:39" pos:end="9:56">memory_region_size</name><argument_list pos:start="9:57" pos:end="9:60">(<argument pos:start="9:58" pos:end="9:59"><expr pos:start="9:58" pos:end="9:59"><name pos:start="9:58" pos:end="9:59">mr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:44"><expr pos:start="13:5" pos:end="13:43"><name pos:start="13:5" pos:end="13:9">align</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:43"><name pos:start="13:13" pos:end="13:39">memory_region_get_alignment</name><argument_list pos:start="13:40" pos:end="13:43">(<argument pos:start="13:41" pos:end="13:42"><expr pos:start="13:41" pos:end="13:42"><name pos:start="13:41" pos:end="13:42">mr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:13">pmem_size</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:20">size</name> <operator pos:start="17:22" pos:end="17:22">-</operator> <name pos:start="17:24" pos:end="17:41"><name pos:start="17:24" pos:end="17:29">nvdimm</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">label_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:67"><expr pos:start="19:5" pos:end="19:66"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:10">nvdimm</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:22">label_data</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="19:54"><name pos:start="19:26" pos:end="19:50">memory_region_get_ram_ptr</name><argument_list pos:start="19:51" pos:end="19:54">(<argument pos:start="19:52" pos:end="19:53"><expr pos:start="19:52" pos:end="19:53"><name pos:start="19:52" pos:end="19:53">mr</name></expr></argument>)</argument_list></call> <operator pos:start="19:56" pos:end="19:56">+</operator> <name pos:start="19:58" pos:end="19:66">pmem_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:13">pmem_size</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:49"><name pos:start="21:17" pos:end="21:31">QEMU_ALIGN_DOWN</name><argument_list pos:start="21:32" pos:end="21:49">(<argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:41">pmem_size</name></expr></argument>, <argument pos:start="21:44" pos:end="21:48"><expr pos:start="21:44" pos:end="21:48"><name pos:start="21:44" pos:end="21:48">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="44:5"><if pos:start="25:5" pos:end="44:5">if <condition pos:start="25:8" pos:end="25:49">(<expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:12">size</name> <operator pos:start="25:14" pos:end="25:15">&lt;=</operator> <name pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:22">nvdimm</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:34">label_size</name></name> <operator pos:start="25:36" pos:end="25:37">||</operator> <operator pos:start="25:39" pos:end="25:39">!</operator><name pos:start="25:40" pos:end="25:48">pmem_size</name></expr>)</condition> <block pos:start="25:51" pos:end="44:5">{<block_content pos:start="27:9" pos:end="42:15">

        <decl_stmt pos:start="27:9" pos:end="27:51"><decl pos:start="27:9" pos:end="27:50"><type pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:25">HostMemoryBackend</name> <modifier pos:start="27:27" pos:end="27:27">*</modifier></type><name pos:start="27:28" pos:end="27:34">hostmem</name> <init pos:start="27:36" pos:end="27:50">= <expr pos:start="27:38" pos:end="27:50"><name pos:start="27:38" pos:end="27:50"><name pos:start="27:38" pos:end="27:41">dimm</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:50">hostmem</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:74"><decl pos:start="29:9" pos:end="29:73"><type pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:12">char</name> <modifier pos:start="29:14" pos:end="29:14">*</modifier></type><name pos:start="29:15" pos:end="29:18">path</name> <init pos:start="29:20" pos:end="29:73">= <expr pos:start="29:22" pos:end="29:73"><call pos:start="29:22" pos:end="29:73"><name pos:start="29:22" pos:end="29:56">object_get_canonical_path_component</name><argument_list pos:start="29:57" pos:end="29:73">(<argument pos:start="29:58" pos:end="29:72"><expr pos:start="29:58" pos:end="29:72"><call pos:start="29:58" pos:end="29:72"><name pos:start="29:58" pos:end="29:63">OBJECT</name><argument_list pos:start="29:64" pos:end="29:72">(<argument pos:start="29:65" pos:end="29:71"><expr pos:start="29:65" pos:end="29:71"><name pos:start="29:65" pos:end="29:71">hostmem</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="39:76"><expr pos:start="33:9" pos:end="39:75"><call pos:start="33:9" pos:end="39:75"><name pos:start="33:9" pos:end="33:18">error_setg</name><argument_list pos:start="33:19" pos:end="39:75">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">errp</name></expr></argument>, <argument pos:start="33:26" pos:end="37:49"><expr pos:start="33:26" pos:end="37:49"><literal type="string" pos:start="33:26" pos:end="33:53">"the size of memdev %s (0x%"</literal> <name pos:start="33:55" pos:end="33:60">PRIx64</name> <literal type="string" pos:start="33:62" pos:end="33:72">") is too "</literal>

                   <literal type="string" pos:start="35:20" pos:end="35:55">"small to contain nvdimm label (0x%"</literal> <name pos:start="35:57" pos:end="35:62">PRIx64</name> <literal type="string" pos:start="35:64" pos:end="35:71">") and "</literal>

                   <literal type="string" pos:start="37:20" pos:end="37:38">"aligned PMEM (0x%"</literal> <name pos:start="37:40" pos:end="37:45">PRIx64</name> <literal type="string" pos:start="37:47" pos:end="37:49">")"</literal></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">path</name></expr></argument>, <argument pos:start="39:26" pos:end="39:47"><expr pos:start="39:26" pos:end="39:47"><call pos:start="39:26" pos:end="39:47"><name pos:start="39:26" pos:end="39:43">memory_region_size</name><argument_list pos:start="39:44" pos:end="39:47">(<argument pos:start="39:45" pos:end="39:46"><expr pos:start="39:45" pos:end="39:46"><name pos:start="39:45" pos:end="39:46">mr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:50" pos:end="39:67"><expr pos:start="39:50" pos:end="39:67"><name pos:start="39:50" pos:end="39:67"><name pos:start="39:50" pos:end="39:55">nvdimm</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:67">label_size</name></name></expr></argument>, <argument pos:start="39:70" pos:end="39:74"><expr pos:start="39:70" pos:end="39:74"><name pos:start="39:70" pos:end="39:74">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="42:9" pos:end="42:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="48:5" pos:end="50:64"><expr pos:start="48:5" pos:end="50:63"><call pos:start="48:5" pos:end="50:63"><name pos:start="48:5" pos:end="48:28">memory_region_init_alias</name><argument_list pos:start="48:29" pos:end="50:63">(<argument pos:start="48:30" pos:end="48:47"><expr pos:start="48:30" pos:end="48:47"><operator pos:start="48:30" pos:end="48:30">&amp;</operator><name pos:start="48:31" pos:end="48:47"><name pos:start="48:31" pos:end="48:36">nvdimm</name><operator pos:start="48:37" pos:end="48:38">-&gt;</operator><name pos:start="48:39" pos:end="48:47">nvdimm_mr</name></name></expr></argument>, <argument pos:start="48:50" pos:end="48:61"><expr pos:start="48:50" pos:end="48:61"><call pos:start="48:50" pos:end="48:61"><name pos:start="48:50" pos:end="48:55">OBJECT</name><argument_list pos:start="48:56" pos:end="48:61">(<argument pos:start="48:57" pos:end="48:60"><expr pos:start="48:57" pos:end="48:60"><name pos:start="48:57" pos:end="48:60">dimm</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="50:30" pos:end="50:44"><expr pos:start="50:30" pos:end="50:44"><literal type="string" pos:start="50:30" pos:end="50:44">"nvdimm-memory"</literal></expr></argument>, <argument pos:start="50:47" pos:end="50:48"><expr pos:start="50:47" pos:end="50:48"><name pos:start="50:47" pos:end="50:48">mr</name></expr></argument>, <argument pos:start="50:51" pos:end="50:51"><expr pos:start="50:51" pos:end="50:51"><literal type="number" pos:start="50:51" pos:end="50:51">0</literal></expr></argument>, <argument pos:start="50:54" pos:end="50:62"><expr pos:start="50:54" pos:end="50:62"><name pos:start="50:54" pos:end="50:62">pmem_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="52:5" pos:end="52:36"><expr pos:start="52:5" pos:end="52:35"><name pos:start="52:5" pos:end="52:27"><name pos:start="52:5" pos:end="52:10">nvdimm</name><operator pos:start="52:11" pos:end="52:12">-&gt;</operator><name pos:start="52:13" pos:end="52:21">nvdimm_mr</name><operator pos:start="52:22" pos:end="52:22">.</operator><name pos:start="52:23" pos:end="52:27">align</name></name> <operator pos:start="52:29" pos:end="52:29">=</operator> <name pos:start="52:31" pos:end="52:35">align</name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
