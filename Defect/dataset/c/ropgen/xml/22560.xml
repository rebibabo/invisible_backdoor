<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22560.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">monitor_get_fd</name><parameter_list pos:start="1:19" pos:end="1:52">(<parameter pos:start="1:20" pos:end="1:31"><decl pos:start="1:20" pos:end="1:31"><type pos:start="1:20" pos:end="1:31"><name pos:start="1:20" pos:end="1:26">Monitor</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">mon</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">fdname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:14">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">mon_fd_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:19">monfd</name></decl>;</decl_stmt>



    <macro pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:16">LIST_FOREACH</name><argument_list pos:start="9:17" pos:end="9:40">(<argument pos:start="9:18" pos:end="9:22">monfd</argument>, <argument pos:start="9:25" pos:end="9:33">&amp;mon-&gt;fds</argument>, <argument pos:start="9:36" pos:end="9:39">next</argument>)</argument_list></macro> <block pos:start="9:42" pos:end="39:5">{<block_content pos:start="11:9" pos:end="37:18">

        <decl_stmt pos:start="11:9" pos:end="11:15"><decl pos:start="11:9" pos:end="11:14"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:14">fd</name></decl>;</decl_stmt>



        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:45">(<expr pos:start="15:13" pos:end="15:44"><call pos:start="15:13" pos:end="15:39"><name pos:start="15:13" pos:end="15:18">strcmp</name><argument_list pos:start="15:19" pos:end="15:39">(<argument pos:start="15:20" pos:end="15:30"><expr pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:24">monfd</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:30">name</name></name></expr></argument>, <argument pos:start="15:33" pos:end="15:38"><expr pos:start="15:33" pos:end="15:38"><name pos:start="15:33" pos:end="15:38">fdname</name></expr></argument>)</argument_list></call> <operator pos:start="15:41" pos:end="15:42">!=</operator> <literal type="number" pos:start="15:44" pos:end="15:44">0</literal></expr>)</condition> <block pos:start="15:47" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:21">

            <continue pos:start="17:13" pos:end="17:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:10">fd</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:22"><name pos:start="23:14" pos:end="23:18">monfd</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:22">fd</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="27:9" pos:end="27:42">/* caller takes ownership of fd */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><call pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:19">LIST_REMOVE</name><argument_list pos:start="29:20" pos:end="29:32">(<argument pos:start="29:21" pos:end="29:25"><expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:25">monfd</name></expr></argument>, <argument pos:start="29:28" pos:end="29:31"><expr pos:start="29:28" pos:end="29:31"><name pos:start="29:28" pos:end="29:31">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><call pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:17">qemu_free</name><argument_list pos:start="31:18" pos:end="31:30">(<argument pos:start="31:19" pos:end="31:29"><expr pos:start="31:19" pos:end="31:29"><name pos:start="31:19" pos:end="31:29"><name pos:start="31:19" pos:end="31:23">monfd</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><call pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:17">qemu_free</name><argument_list pos:start="33:18" pos:end="33:24">(<argument pos:start="33:19" pos:end="33:23"><expr pos:start="33:19" pos:end="33:23"><name pos:start="33:19" pos:end="33:23">monfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><name pos:start="37:16" pos:end="37:17">fd</name></expr>;</return>

    </block_content>}</block>



    <return pos:start="43:5" pos:end="43:14">return <expr pos:start="43:12" pos:end="43:13"><operator pos:start="43:12" pos:end="43:12">-</operator><literal type="number" pos:start="43:13" pos:end="43:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
