<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10157.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">vc1_sprite_flush</name><parameter_list pos:start="1:29" pos:end="1:51">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:60">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VC1Context</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">v</name>     <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">f</name> <init pos:start="9:16" pos:end="9:38">= <expr pos:start="9:18" pos:end="9:38"><operator pos:start="9:18" pos:end="9:18">&amp;</operator><name pos:start="9:19" pos:end="9:38"><name pos:start="9:19" pos:end="9:19">s</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:36">current_picture</name><operator pos:start="9:37" pos:end="9:37">.</operator><name pos:start="9:38" pos:end="9:38">f</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">plane</name></decl>, <decl pos:start="11:16" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:16">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="19:55">/* Windows Media Image codecs have a convergence interval of two keyframes.

       Since we can't enforce it, clear to black the missing sprite. This is

       wrong but it looks better than doing nothing. */</comment>



    <if_stmt pos:start="23:5" pos:end="31:60"><if pos:start="23:5" pos:end="31:60">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">f</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">data</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="31:60"><block_content pos:start="25:9" pos:end="31:60">

        <for pos:start="25:9" pos:end="31:60">for <control pos:start="25:13" pos:end="25:76">(<init pos:start="25:14" pos:end="25:23"><expr pos:start="25:14" pos:end="25:22"><name pos:start="25:14" pos:end="25:18">plane</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</init> <condition pos:start="25:25" pos:end="25:67"><expr pos:start="25:25" pos:end="25:66"><name pos:start="25:25" pos:end="25:29">plane</name> <operator pos:start="25:31" pos:end="25:31">&lt;</operator> <operator pos:start="25:33" pos:end="25:33">(</operator><ternary pos:start="25:34" pos:end="25:65"><condition pos:start="25:34" pos:end="25:59"><expr pos:start="25:34" pos:end="25:57"><name pos:start="25:34" pos:end="25:41"><name pos:start="25:34" pos:end="25:34">s</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:41">flags</name></name><operator pos:start="25:42" pos:end="25:42">&amp;</operator><name pos:start="25:43" pos:end="25:57">CODEC_FLAG_GRAY</name></expr> ?</condition><then pos:start="25:61" pos:end="25:61"> <expr pos:start="25:61" pos:end="25:61"><literal type="number" pos:start="25:61" pos:end="25:61">1</literal></expr> </then><else pos:start="25:63" pos:end="25:65">: <expr pos:start="25:65" pos:end="25:65"><literal type="number" pos:start="25:65" pos:end="25:65">3</literal></expr></else></ternary><operator pos:start="25:66" pos:end="25:66">)</operator></expr>;</condition> <incr pos:start="25:69" pos:end="25:75"><expr pos:start="25:69" pos:end="25:75"><name pos:start="25:69" pos:end="25:73">plane</name><operator pos:start="25:74" pos:end="25:75">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:13" pos:end="31:60"><block_content pos:start="27:13" pos:end="31:60">

            <for pos:start="27:13" pos:end="31:60">for <control pos:start="27:17" pos:end="27:59">(<init pos:start="27:18" pos:end="27:23"><expr pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:18">i</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</init> <condition pos:start="27:25" pos:end="27:54"><expr pos:start="27:25" pos:end="27:53"><name pos:start="27:25" pos:end="27:45"><name pos:start="27:25" pos:end="27:25">i</name> <argument_list type="generic" pos:start="27:27" pos:end="27:45">&lt; <argument pos:start="27:29" pos:end="27:44"><expr pos:start="27:29" pos:end="27:44"><name pos:start="27:29" pos:end="27:44"><name pos:start="27:29" pos:end="27:29">v</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:44">sprite_height</name></name></expr></argument>&gt;</argument_list></name><operator pos:start="27:46" pos:end="27:46">&gt;</operator><operator pos:start="27:47" pos:end="27:47">!</operator><operator pos:start="27:48" pos:end="27:48">!</operator><name pos:start="27:49" pos:end="27:53">plane</name></expr>;</condition> <incr pos:start="27:56" pos:end="27:58"><expr pos:start="27:56" pos:end="27:58"><name pos:start="27:56" pos:end="27:56">i</name><operator pos:start="27:57" pos:end="27:58">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:17" pos:end="31:60"><block_content pos:start="29:17" pos:end="31:60">

                <expr_stmt pos:start="29:17" pos:end="31:60"><expr pos:start="29:17" pos:end="31:59"><call pos:start="29:17" pos:end="31:59"><name pos:start="29:17" pos:end="29:22">memset</name><argument_list pos:start="29:23" pos:end="31:59">(<argument pos:start="29:24" pos:end="29:62"><expr pos:start="29:24" pos:end="29:62"><name pos:start="29:24" pos:end="29:37"><name pos:start="29:24" pos:end="29:24">f</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:30">data</name><index pos:start="29:31" pos:end="29:37">[<expr pos:start="29:32" pos:end="29:36"><name pos:start="29:32" pos:end="29:36">plane</name></expr>]</index></name> <operator pos:start="29:39" pos:end="29:39">+</operator> <name pos:start="29:41" pos:end="29:41">i</name> <operator pos:start="29:43" pos:end="29:43">*</operator> <name pos:start="29:45" pos:end="29:62"><name pos:start="29:45" pos:end="29:45">f</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:55">linesize</name><index pos:start="29:56" pos:end="29:62">[<expr pos:start="29:57" pos:end="29:61"><name pos:start="29:57" pos:end="29:61">plane</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="31:24" pos:end="31:38"><expr pos:start="31:24" pos:end="31:38"><ternary pos:start="31:24" pos:end="31:38"><condition pos:start="31:24" pos:end="31:30"><expr pos:start="31:24" pos:end="31:28"><name pos:start="31:24" pos:end="31:28">plane</name></expr> ?</condition><then pos:start="31:32" pos:end="31:34"> <expr pos:start="31:32" pos:end="31:34"><literal type="number" pos:start="31:32" pos:end="31:34">128</literal></expr> </then><else pos:start="31:36" pos:end="31:38">: <expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="31:41" pos:end="31:58"><expr pos:start="31:41" pos:end="31:58"><name pos:start="31:41" pos:end="31:58"><name pos:start="31:41" pos:end="31:41">f</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:51">linesize</name><index pos:start="31:52" pos:end="31:58">[<expr pos:start="31:53" pos:end="31:57"><name pos:start="31:53" pos:end="31:57">plane</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
