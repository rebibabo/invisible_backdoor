<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7525.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">nbd_parse_filename</name><parameter_list pos:start="1:31" pos:end="3:44">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:51">filename</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:58">QDict</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:67">options</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:36">Error</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier><modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:5" pos:end="131:17">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:21">export_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:25">host_spec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:24">unixpath</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="21:41">(<expr pos:start="17:9" pos:end="21:40"><call pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:20">qdict_haskey</name><argument_list pos:start="17:21" pos:end="17:37">(<argument pos:start="17:22" pos:end="17:28"><expr pos:start="17:22" pos:end="17:28"><name pos:start="17:22" pos:end="17:28">options</name></expr></argument>, <argument pos:start="17:31" pos:end="17:36"><expr pos:start="17:31" pos:end="17:36"><literal type="string" pos:start="17:31" pos:end="17:36">"host"</literal></expr></argument>)</argument_list></call>

        <operator pos:start="19:9" pos:end="19:10">||</operator> <call pos:start="19:12" pos:end="19:40"><name pos:start="19:12" pos:end="19:23">qdict_haskey</name><argument_list pos:start="19:24" pos:end="19:40">(<argument pos:start="19:25" pos:end="19:31"><expr pos:start="19:25" pos:end="19:31"><name pos:start="19:25" pos:end="19:31">options</name></expr></argument>, <argument pos:start="19:34" pos:end="19:39"><expr pos:start="19:34" pos:end="19:39"><literal type="string" pos:start="19:34" pos:end="19:39">"port"</literal></expr></argument>)</argument_list></call>

        <operator pos:start="21:9" pos:end="21:10">||</operator> <call pos:start="21:12" pos:end="21:40"><name pos:start="21:12" pos:end="21:23">qdict_haskey</name><argument_list pos:start="21:24" pos:end="21:40">(<argument pos:start="21:25" pos:end="21:31"><expr pos:start="21:25" pos:end="21:31"><name pos:start="21:25" pos:end="21:31">options</name></expr></argument>, <argument pos:start="21:34" pos:end="21:39"><expr pos:start="21:34" pos:end="21:39"><literal type="string" pos:start="21:34" pos:end="21:39">"path"</literal></expr></argument>)</argument_list></call></expr>)</condition>

    <block pos:start="23:5" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:15">

        <expr_stmt pos:start="25:9" pos:end="27:45"><expr pos:start="25:9" pos:end="27:44"><call pos:start="25:9" pos:end="27:44"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="27:44">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="27:43"><expr pos:start="25:26" pos:end="27:43"><literal type="string" pos:start="25:26" pos:end="25:79">"host/port/path and a file name may not be specified "</literal>

                         <literal type="string" pos:start="27:26" pos:end="27:43">"at the same time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:32">(<expr pos:start="35:9" pos:end="35:31"><call pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:14">strstr</name><argument_list pos:start="35:15" pos:end="35:31">(<argument pos:start="35:16" pos:end="35:23"><expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:23">filename</name></expr></argument>, <argument pos:start="35:26" pos:end="35:30"><expr pos:start="35:26" pos:end="35:30"><literal type="string" pos:start="35:26" pos:end="35:30">"://"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:34" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:15">

        <decl_stmt pos:start="37:9" pos:end="37:51"><decl pos:start="37:9" pos:end="37:50"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:15">ret</name> <init pos:start="37:17" pos:end="37:50">= <expr pos:start="37:19" pos:end="37:50"><call pos:start="37:19" pos:end="37:50"><name pos:start="37:19" pos:end="37:31">nbd_parse_uri</name><argument_list pos:start="37:32" pos:end="37:50">(<argument pos:start="37:33" pos:end="37:40"><expr pos:start="37:33" pos:end="37:40"><name pos:start="37:33" pos:end="37:40">filename</name></expr></argument>, <argument pos:start="37:43" pos:end="37:49"><expr pos:start="37:43" pos:end="37:49"><name pos:start="37:43" pos:end="37:49">options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition> <block pos:start="39:22" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:55">

            <expr_stmt pos:start="41:13" pos:end="41:55"><expr pos:start="41:13" pos:end="41:54"><call pos:start="41:13" pos:end="41:54"><name pos:start="41:13" pos:end="41:22">error_setg</name><argument_list pos:start="41:23" pos:end="41:54">(<argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">errp</name></expr></argument>, <argument pos:start="41:30" pos:end="41:53"><expr pos:start="41:30" pos:end="41:53"><literal type="string" pos:start="41:30" pos:end="41:53">"No valid URL specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:8">file</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:29"><name pos:start="51:12" pos:end="51:19">g_strdup</name><argument_list pos:start="51:20" pos:end="51:29">(<argument pos:start="51:21" pos:end="51:28"><expr pos:start="51:21" pos:end="51:28"><name pos:start="51:21" pos:end="51:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:15">export_name</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:41"><name pos:start="55:19" pos:end="55:24">strstr</name><argument_list pos:start="55:25" pos:end="55:41">(<argument pos:start="55:26" pos:end="55:29"><expr pos:start="55:26" pos:end="55:29"><name pos:start="55:26" pos:end="55:29">file</name></expr></argument>, <argument pos:start="55:32" pos:end="55:40"><expr pos:start="55:32" pos:end="55:40"><name pos:start="55:32" pos:end="55:40">EN_OPTSTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="73:5"><if pos:start="57:5" pos:end="73:5">if <condition pos:start="57:8" pos:end="57:20">(<expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:19">export_name</name></expr>)</condition> <block pos:start="57:22" pos:end="73:5">{<block_content pos:start="59:9" pos:end="71:68">

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:48">(<expr pos:start="59:13" pos:end="59:47"><name pos:start="59:13" pos:end="59:42"><name pos:start="59:13" pos:end="59:23">export_name</name><index pos:start="59:24" pos:end="59:42">[<expr pos:start="59:25" pos:end="59:41"><call pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:30">strlen</name><argument_list pos:start="59:31" pos:end="59:41">(<argument pos:start="59:32" pos:end="59:40"><expr pos:start="59:32" pos:end="59:40"><name pos:start="59:32" pos:end="59:40">EN_OPTSTR</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="59:44" pos:end="59:45">==</operator> <literal type="number" pos:start="59:47" pos:end="59:47">0</literal></expr>)</condition> <block pos:start="59:50" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:21">

            <goto pos:start="61:13" pos:end="61:21">goto <name pos:start="61:18" pos:end="61:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:19">export_name</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>]</index></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:29" pos:end="65:49">/* truncate 'file' */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:19">export_name</name> <operator pos:start="67:21" pos:end="67:22">+=</operator> <call pos:start="67:24" pos:end="67:40"><name pos:start="67:24" pos:end="67:29">strlen</name><argument_list pos:start="67:30" pos:end="67:40">(<argument pos:start="67:31" pos:end="67:39"><expr pos:start="67:31" pos:end="67:39"><name pos:start="67:31" pos:end="67:39">EN_OPTSTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:68"><expr pos:start="71:9" pos:end="71:67"><call pos:start="71:9" pos:end="71:67"><name pos:start="71:9" pos:end="71:17">qdict_put</name><argument_list pos:start="71:18" pos:end="71:67">(<argument pos:start="71:19" pos:end="71:25"><expr pos:start="71:19" pos:end="71:25"><name pos:start="71:19" pos:end="71:25">options</name></expr></argument>, <argument pos:start="71:28" pos:end="71:35"><expr pos:start="71:28" pos:end="71:35"><literal type="string" pos:start="71:28" pos:end="71:35">"export"</literal></expr></argument>, <argument pos:start="71:38" pos:end="71:66"><expr pos:start="71:38" pos:end="71:66"><call pos:start="71:38" pos:end="71:66"><name pos:start="71:38" pos:end="71:53">qstring_from_str</name><argument_list pos:start="71:54" pos:end="71:66">(<argument pos:start="71:55" pos:end="71:65"><expr pos:start="71:55" pos:end="71:65"><name pos:start="71:55" pos:end="71:65">export_name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:58">/* extract the host_spec - fail if it's not nbd:... */</comment>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:44">(<expr pos:start="79:9" pos:end="79:43"><operator pos:start="79:9" pos:end="79:9">!</operator><call pos:start="79:10" pos:end="79:43"><name pos:start="79:10" pos:end="79:17">strstart</name><argument_list pos:start="79:18" pos:end="79:43">(<argument pos:start="79:19" pos:end="79:22"><expr pos:start="79:19" pos:end="79:22"><name pos:start="79:19" pos:end="79:22">file</name></expr></argument>, <argument pos:start="79:25" pos:end="79:30"><expr pos:start="79:25" pos:end="79:30"><literal type="string" pos:start="79:25" pos:end="79:30">"nbd:"</literal></expr></argument>, <argument pos:start="79:33" pos:end="79:42"><expr pos:start="79:33" pos:end="79:42"><operator pos:start="79:33" pos:end="79:33">&amp;</operator><name pos:start="79:34" pos:end="79:42">host_spec</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:46" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:17">

        <expr_stmt pos:start="81:9" pos:end="81:76"><expr pos:start="81:9" pos:end="81:75"><call pos:start="81:9" pos:end="81:75"><name pos:start="81:9" pos:end="81:18">error_setg</name><argument_list pos:start="81:19" pos:end="81:75">(<argument pos:start="81:20" pos:end="81:23"><expr pos:start="81:20" pos:end="81:23"><name pos:start="81:20" pos:end="81:23">errp</name></expr></argument>, <argument pos:start="81:26" pos:end="81:74"><expr pos:start="81:26" pos:end="81:74"><literal type="string" pos:start="81:26" pos:end="81:74">"File name string for NBD must start with 'nbd:'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:17">goto <name pos:start="83:14" pos:end="83:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:20">(<expr pos:start="89:9" pos:end="89:19"><operator pos:start="89:9" pos:end="89:9">!</operator><operator pos:start="89:10" pos:end="89:10">*</operator><name pos:start="89:11" pos:end="89:19">host_spec</name></expr>)</condition> <block pos:start="89:22" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:17">

        <goto pos:start="91:9" pos:end="91:17">goto <name pos:start="91:14" pos:end="91:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:38">/* are we a UNIX or TCP socket? */</comment>

    <if_stmt pos:start="99:5" pos:end="125:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:48">(<expr pos:start="99:9" pos:end="99:47"><call pos:start="99:9" pos:end="99:47"><name pos:start="99:9" pos:end="99:16">strstart</name><argument_list pos:start="99:17" pos:end="99:47">(<argument pos:start="99:18" pos:end="99:26"><expr pos:start="99:18" pos:end="99:26"><name pos:start="99:18" pos:end="99:26">host_spec</name></expr></argument>, <argument pos:start="99:29" pos:end="99:35"><expr pos:start="99:29" pos:end="99:35"><literal type="string" pos:start="99:29" pos:end="99:35">"unix:"</literal></expr></argument>, <argument pos:start="99:38" pos:end="99:46"><expr pos:start="99:38" pos:end="99:46"><operator pos:start="99:38" pos:end="99:38">&amp;</operator><name pos:start="99:39" pos:end="99:46">unixpath</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:50" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:63">

        <expr_stmt pos:start="101:9" pos:end="101:63"><expr pos:start="101:9" pos:end="101:62"><call pos:start="101:9" pos:end="101:62"><name pos:start="101:9" pos:end="101:17">qdict_put</name><argument_list pos:start="101:18" pos:end="101:62">(<argument pos:start="101:19" pos:end="101:25"><expr pos:start="101:19" pos:end="101:25"><name pos:start="101:19" pos:end="101:25">options</name></expr></argument>, <argument pos:start="101:28" pos:end="101:33"><expr pos:start="101:28" pos:end="101:33"><literal type="string" pos:start="101:28" pos:end="101:33">"path"</literal></expr></argument>, <argument pos:start="101:36" pos:end="101:61"><expr pos:start="101:36" pos:end="101:61"><call pos:start="101:36" pos:end="101:61"><name pos:start="101:36" pos:end="101:51">qstring_from_str</name><argument_list pos:start="101:52" pos:end="101:61">(<argument pos:start="101:53" pos:end="101:60"><expr pos:start="101:53" pos:end="101:60"><name pos:start="101:53" pos:end="101:60">unixpath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="125:5">else <block pos:start="103:12" pos:end="125:5">{<block_content pos:start="105:9" pos:end="123:42">

        <decl_stmt pos:start="105:9" pos:end="105:39"><decl pos:start="105:9" pos:end="105:38"><type pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:25">InetSocketAddress</name> <modifier pos:start="105:27" pos:end="105:27">*</modifier></type><name pos:start="105:28" pos:end="105:31">addr</name> <init pos:start="105:33" pos:end="105:38">= <expr pos:start="105:35" pos:end="105:38"><name pos:start="105:35" pos:end="105:38">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:43"><expr pos:start="109:9" pos:end="109:42"><name pos:start="109:9" pos:end="109:12">addr</name> <operator pos:start="109:14" pos:end="109:14">=</operator> <call pos:start="109:16" pos:end="109:42"><name pos:start="109:16" pos:end="109:25">inet_parse</name><argument_list pos:start="109:26" pos:end="109:42">(<argument pos:start="109:27" pos:end="109:35"><expr pos:start="109:27" pos:end="109:35"><name pos:start="109:27" pos:end="109:35">host_spec</name></expr></argument>, <argument pos:start="109:38" pos:end="109:41"><expr pos:start="109:38" pos:end="109:41"><name pos:start="109:38" pos:end="109:41">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="115:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:31">(<expr pos:start="111:13" pos:end="111:30"><call pos:start="111:13" pos:end="111:30"><name pos:start="111:13" pos:end="111:24">error_is_set</name><argument_list pos:start="111:25" pos:end="111:30">(<argument pos:start="111:26" pos:end="111:29"><expr pos:start="111:26" pos:end="111:29"><name pos:start="111:26" pos:end="111:29">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:33" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:21">

            <goto pos:start="113:13" pos:end="113:21">goto <name pos:start="113:18" pos:end="113:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:65"><expr pos:start="119:9" pos:end="119:64"><call pos:start="119:9" pos:end="119:64"><name pos:start="119:9" pos:end="119:17">qdict_put</name><argument_list pos:start="119:18" pos:end="119:64">(<argument pos:start="119:19" pos:end="119:25"><expr pos:start="119:19" pos:end="119:25"><name pos:start="119:19" pos:end="119:25">options</name></expr></argument>, <argument pos:start="119:28" pos:end="119:33"><expr pos:start="119:28" pos:end="119:33"><literal type="string" pos:start="119:28" pos:end="119:33">"host"</literal></expr></argument>, <argument pos:start="119:36" pos:end="119:63"><expr pos:start="119:36" pos:end="119:63"><call pos:start="119:36" pos:end="119:63"><name pos:start="119:36" pos:end="119:51">qstring_from_str</name><argument_list pos:start="119:52" pos:end="119:63">(<argument pos:start="119:53" pos:end="119:62"><expr pos:start="119:53" pos:end="119:62"><name pos:start="119:53" pos:end="119:62"><name pos:start="119:53" pos:end="119:56">addr</name><operator pos:start="119:57" pos:end="119:58">-&gt;</operator><name pos:start="119:59" pos:end="119:62">host</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:65"><expr pos:start="121:9" pos:end="121:64"><call pos:start="121:9" pos:end="121:64"><name pos:start="121:9" pos:end="121:17">qdict_put</name><argument_list pos:start="121:18" pos:end="121:64">(<argument pos:start="121:19" pos:end="121:25"><expr pos:start="121:19" pos:end="121:25"><name pos:start="121:19" pos:end="121:25">options</name></expr></argument>, <argument pos:start="121:28" pos:end="121:33"><expr pos:start="121:28" pos:end="121:33"><literal type="string" pos:start="121:28" pos:end="121:33">"port"</literal></expr></argument>, <argument pos:start="121:36" pos:end="121:63"><expr pos:start="121:36" pos:end="121:63"><call pos:start="121:36" pos:end="121:63"><name pos:start="121:36" pos:end="121:51">qstring_from_str</name><argument_list pos:start="121:52" pos:end="121:63">(<argument pos:start="121:53" pos:end="121:62"><expr pos:start="121:53" pos:end="121:62"><name pos:start="121:53" pos:end="121:62"><name pos:start="121:53" pos:end="121:56">addr</name><operator pos:start="121:57" pos:end="121:58">-&gt;</operator><name pos:start="121:59" pos:end="121:62">port</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:42"><expr pos:start="123:9" pos:end="123:41"><call pos:start="123:9" pos:end="123:41"><name pos:start="123:9" pos:end="123:35">qapi_free_InetSocketAddress</name><argument_list pos:start="123:36" pos:end="123:41">(<argument pos:start="123:37" pos:end="123:40"><expr pos:start="123:37" pos:end="123:40"><name pos:start="123:37" pos:end="123:40">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="129:1" pos:end="129:4"><name pos:start="129:1" pos:end="129:3">out</name>:</label>

    <expr_stmt pos:start="131:5" pos:end="131:17"><expr pos:start="131:5" pos:end="131:16"><call pos:start="131:5" pos:end="131:16"><name pos:start="131:5" pos:end="131:10">g_free</name><argument_list pos:start="131:11" pos:end="131:16">(<argument pos:start="131:12" pos:end="131:15"><expr pos:start="131:12" pos:end="131:15"><name pos:start="131:12" pos:end="131:15">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
