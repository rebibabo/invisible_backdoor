<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17110.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">kbd_layout_t</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:42">parse_keyboard_layout</name><parameter_list pos:start="1:43" pos:end="5:60">(<parameter pos:start="1:44" pos:end="1:69"><decl pos:start="1:44" pos:end="1:69"><type pos:start="1:44" pos:end="1:69"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:62">name2keysym_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">table</name></decl></parameter>,

					   <parameter pos:start="3:44" pos:end="3:63"><decl pos:start="3:44" pos:end="3:63"><type pos:start="3:44" pos:end="3:63"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:53">char</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:63">language</name></decl></parameter>,

					   <parameter pos:start="5:44" pos:end="5:59"><decl pos:start="5:44" pos:end="5:59"><type pos:start="5:44" pos:end="5:59"><name pos:start="5:44" pos:end="5:55">kbd_layout_t</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type> <name pos:start="5:59" pos:end="5:59">k</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="151:1">{<block_content pos:start="9:5" pos:end="149:13">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">FILE</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type> <name pos:start="11:12" pos:end="11:19">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:19"><name pos:start="13:10" pos:end="13:13">line</name><index pos:start="13:14" pos:end="13:19">[<expr pos:start="13:15" pos:end="13:18"><literal type="number" pos:start="13:15" pos:end="13:18">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:12">filename</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:62"><name pos:start="19:16" pos:end="19:29">qemu_find_file</name><argument_list pos:start="19:30" pos:end="19:62">(<argument pos:start="19:31" pos:end="19:51"><expr pos:start="19:31" pos:end="19:51"><name pos:start="19:31" pos:end="19:51">QEMU_FILE_TYPE_KEYMAP</name></expr></argument>, <argument pos:start="19:54" pos:end="19:61"><expr pos:start="19:54" pos:end="19:61"><name pos:start="19:54" pos:end="19:61">language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:44"><if pos:start="23:5" pos:end="25:44">if <condition pos:start="23:8" pos:end="23:11">(<expr pos:start="23:9" pos:end="23:10"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:10">k</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:44"><block_content pos:start="25:9" pos:end="25:44">

	<expr_stmt pos:start="25:9" pos:end="25:44"><expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:9">k</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:43"><name pos:start="25:13" pos:end="25:21">g_malloc0</name><argument_list pos:start="25:22" pos:end="25:43">(<argument pos:start="25:23" pos:end="25:42"><expr pos:start="25:23" pos:end="25:42"><sizeof pos:start="25:23" pos:end="25:42">sizeof<argument_list pos:start="25:29" pos:end="25:42">(<argument pos:start="25:30" pos:end="25:41"><expr pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:41">kbd_layout_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:50">(<expr pos:start="27:9" pos:end="27:49"><operator pos:start="27:9" pos:end="27:9">!</operator><operator pos:start="27:10" pos:end="27:10">(</operator><name pos:start="27:11" pos:end="27:18">filename</name> <operator pos:start="27:20" pos:end="27:21">&amp;&amp;</operator> <operator pos:start="27:23" pos:end="27:23">(</operator><name pos:start="27:24" pos:end="27:24">f</name> <operator pos:start="27:26" pos:end="27:26">=</operator> <call pos:start="27:28" pos:end="27:47"><name pos:start="27:28" pos:end="27:32">fopen</name><argument_list pos:start="27:33" pos:end="27:47">(<argument pos:start="27:34" pos:end="27:41"><expr pos:start="27:34" pos:end="27:41"><name pos:start="27:34" pos:end="27:41">filename</name></expr></argument>, <argument pos:start="27:44" pos:end="27:46"><expr pos:start="27:44" pos:end="27:46"><literal type="string" pos:start="27:44" pos:end="27:46">"r"</literal></expr></argument>)</argument_list></call><operator pos:start="27:48" pos:end="27:48">)</operator><operator pos:start="27:49" pos:end="27:49">)</operator></expr>)</condition> <block pos:start="27:52" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:20">

	<expr_stmt pos:start="29:9" pos:end="31:64"><expr pos:start="29:9" pos:end="31:63"><call pos:start="29:9" pos:end="31:63"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="31:63">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>,

		<argument pos:start="31:17" pos:end="31:52"><expr pos:start="31:17" pos:end="31:52"><literal type="string" pos:start="31:17" pos:end="31:52">"Could not read keymap file: '%s'\n"</literal></expr></argument>, <argument pos:start="31:55" pos:end="31:62"><expr pos:start="31:55" pos:end="31:62"><name pos:start="31:55" pos:end="31:62">language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="33:9" pos:end="33:20">return <expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><call pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:10">g_free</name><argument_list pos:start="37:11" pos:end="37:20">(<argument pos:start="37:12" pos:end="37:19"><expr pos:start="37:12" pos:end="37:19"><name pos:start="37:12" pos:end="37:19">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="145:5">for<control pos:start="39:8" pos:end="39:11">(<init pos:start="39:9" pos:end="39:9">;</init><condition pos:start="39:10" pos:end="39:10">;</condition><incr/>)</control> <block pos:start="39:13" pos:end="145:5">{<block_content pos:start="41:9" pos:end="143:9">

	<if_stmt pos:start="41:9" pos:end="43:18"><if pos:start="41:9" pos:end="43:18">if <condition pos:start="41:12" pos:end="41:41">(<expr pos:start="41:13" pos:end="41:40"><call pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:17">fgets</name><argument_list pos:start="41:18" pos:end="41:32">(<argument pos:start="41:19" pos:end="41:22"><expr pos:start="41:19" pos:end="41:22"><name pos:start="41:19" pos:end="41:22">line</name></expr></argument>, <argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><literal type="number" pos:start="41:25" pos:end="41:28">1024</literal></expr></argument>, <argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">f</name></expr></argument>)</argument_list></call> <operator pos:start="41:34" pos:end="41:35">==</operator> <name pos:start="41:37" pos:end="41:40">NULL</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:18"><block_content pos:start="43:13" pos:end="43:18">

            <break pos:start="43:13" pos:end="43:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:11">len</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:26"><name pos:start="45:15" pos:end="45:20">strlen</name><argument_list pos:start="45:21" pos:end="45:26">(<argument pos:start="45:22" pos:end="45:25"><expr pos:start="45:22" pos:end="45:25"><name pos:start="45:22" pos:end="45:25">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:33"><if pos:start="47:9" pos:end="49:33">if <condition pos:start="47:12" pos:end="47:45">(<expr pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:15">len</name> <operator pos:start="47:17" pos:end="47:17">&gt;</operator> <literal type="number" pos:start="47:19" pos:end="47:19">0</literal> <operator pos:start="47:21" pos:end="47:22">&amp;&amp;</operator> <name pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:27">line</name><index pos:start="47:28" pos:end="47:36">[<expr pos:start="47:29" pos:end="47:35"><name pos:start="47:29" pos:end="47:31">len</name> <operator pos:start="47:33" pos:end="47:33">-</operator> <literal type="number" pos:start="47:35" pos:end="47:35">1</literal></expr>]</index></name> <operator pos:start="47:38" pos:end="47:39">==</operator> <literal type="char" pos:start="47:41" pos:end="47:44">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:33"><block_content pos:start="49:13" pos:end="49:33">

            <expr_stmt pos:start="49:13" pos:end="49:33"><expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:16">line</name><index pos:start="49:17" pos:end="49:25">[<expr pos:start="49:18" pos:end="49:24"><name pos:start="49:18" pos:end="49:20">len</name> <operator pos:start="49:22" pos:end="49:22">-</operator> <literal type="number" pos:start="49:24" pos:end="49:24">1</literal></expr>]</index></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <literal type="char" pos:start="49:29" pos:end="49:32">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="53:21"><if pos:start="51:9" pos:end="53:21">if <condition pos:start="51:12" pos:end="51:27">(<expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:16">line</name><index pos:start="51:17" pos:end="51:19">[<expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>]</index></name> <operator pos:start="51:21" pos:end="51:22">==</operator> <literal type="char" pos:start="51:24" pos:end="51:26">'#'</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:21"><block_content pos:start="53:13" pos:end="53:21">

	    <continue pos:start="53:13" pos:end="53:21">continue;</continue></block_content></block></if></if_stmt>

	<if_stmt pos:start="55:9" pos:end="57:21"><if pos:start="55:9" pos:end="57:21">if <condition pos:start="55:12" pos:end="55:38">(<expr pos:start="55:13" pos:end="55:37"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:37"><name pos:start="55:14" pos:end="55:20">strncmp</name><argument_list pos:start="55:21" pos:end="55:37">(<argument pos:start="55:22" pos:end="55:25"><expr pos:start="55:22" pos:end="55:25"><name pos:start="55:22" pos:end="55:25">line</name></expr></argument>, <argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><literal type="string" pos:start="55:28" pos:end="55:33">"map "</literal></expr></argument>, <argument pos:start="55:36" pos:end="55:36"><expr pos:start="55:36" pos:end="55:36"><literal type="number" pos:start="55:36" pos:end="55:36">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:21"><block_content pos:start="57:13" pos:end="57:21">

	    <continue pos:start="57:13" pos:end="57:21">continue;</continue></block_content></block></if></if_stmt>

	<if_stmt pos:start="59:9" pos:end="143:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:42">(<expr pos:start="59:13" pos:end="59:41"><operator pos:start="59:13" pos:end="59:13">!</operator><call pos:start="59:14" pos:end="59:41"><name pos:start="59:14" pos:end="59:20">strncmp</name><argument_list pos:start="59:21" pos:end="59:41">(<argument pos:start="59:22" pos:end="59:25"><expr pos:start="59:22" pos:end="59:25"><name pos:start="59:22" pos:end="59:25">line</name></expr></argument>, <argument pos:start="59:28" pos:end="59:37"><expr pos:start="59:28" pos:end="59:37"><literal type="string" pos:start="59:28" pos:end="59:37">"include "</literal></expr></argument>, <argument pos:start="59:40" pos:end="59:40"><expr pos:start="59:40" pos:end="59:40"><literal type="number" pos:start="59:40" pos:end="59:40">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:44" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:54">

	    <expr_stmt pos:start="61:13" pos:end="61:54"><expr pos:start="61:13" pos:end="61:53"><call pos:start="61:13" pos:end="61:53"><name pos:start="61:13" pos:end="61:33">parse_keyboard_layout</name><argument_list pos:start="61:34" pos:end="61:53">(<argument pos:start="61:35" pos:end="61:39"><expr pos:start="61:35" pos:end="61:39"><name pos:start="61:35" pos:end="61:39">table</name></expr></argument>, <argument pos:start="61:42" pos:end="61:49"><expr pos:start="61:42" pos:end="61:49"><name pos:start="61:42" pos:end="61:45">line</name> <operator pos:start="61:47" pos:end="61:47">+</operator> <literal type="number" pos:start="61:49" pos:end="61:49">8</literal></expr></argument>, <argument pos:start="61:52" pos:end="61:52"><expr pos:start="61:52" pos:end="61:52"><name pos:start="61:52" pos:end="61:52">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="143:9">else <block pos:start="63:16" pos:end="143:9">{<block_content pos:start="65:13" pos:end="141:13">

	    <decl_stmt pos:start="65:13" pos:end="65:39"><decl pos:start="65:13" pos:end="65:38"><type pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:16">char</name> <modifier pos:start="65:18" pos:end="65:18">*</modifier></type><name pos:start="65:19" pos:end="65:31">end_of_keysym</name> <init pos:start="65:33" pos:end="65:38">= <expr pos:start="65:35" pos:end="65:38"><name pos:start="65:35" pos:end="65:38">line</name></expr></init></decl>;</decl_stmt>

	    <while pos:start="67:13" pos:end="69:32">while <condition pos:start="67:19" pos:end="67:64">(<expr pos:start="67:20" pos:end="67:63"><operator pos:start="67:20" pos:end="67:20">*</operator><name pos:start="67:21" pos:end="67:33">end_of_keysym</name> <operator pos:start="67:35" pos:end="67:36">!=</operator> <literal type="number" pos:start="67:38" pos:end="67:38">0</literal> <operator pos:start="67:40" pos:end="67:41">&amp;&amp;</operator> <operator pos:start="67:43" pos:end="67:43">*</operator><name pos:start="67:44" pos:end="67:56">end_of_keysym</name> <operator pos:start="67:58" pos:end="67:59">!=</operator> <literal type="char" pos:start="67:61" pos:end="67:63">' '</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:32"><block_content pos:start="69:17" pos:end="69:32">

		<expr_stmt pos:start="69:17" pos:end="69:32"><expr pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:29">end_of_keysym</name><operator pos:start="69:30" pos:end="69:31">++</operator></expr>;</expr_stmt></block_content></block></while>

	    <if_stmt pos:start="71:13" pos:end="141:13"><if pos:start="71:13" pos:end="141:13">if <condition pos:start="71:16" pos:end="71:31">(<expr pos:start="71:17" pos:end="71:30"><operator pos:start="71:17" pos:end="71:17">*</operator><name pos:start="71:18" pos:end="71:30">end_of_keysym</name></expr>)</condition> <block pos:start="71:33" pos:end="141:13">{<block_content pos:start="73:17" pos:end="139:17">

		<decl_stmt pos:start="73:17" pos:end="73:27"><decl pos:start="73:17" pos:end="73:26"><type pos:start="73:17" pos:end="73:19"><name pos:start="73:17" pos:end="73:19">int</name></type> <name pos:start="73:21" pos:end="73:26">keysym</name></decl>;</decl_stmt>

		<expr_stmt pos:start="75:17" pos:end="75:35"><expr pos:start="75:17" pos:end="75:34"><operator pos:start="75:17" pos:end="75:17">*</operator><name pos:start="75:18" pos:end="75:30">end_of_keysym</name> <operator pos:start="75:32" pos:end="75:32">=</operator> <literal type="number" pos:start="75:34" pos:end="75:34">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="77:17" pos:end="77:49"><expr pos:start="77:17" pos:end="77:48"><name pos:start="77:17" pos:end="77:22">keysym</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <call pos:start="77:26" pos:end="77:48"><name pos:start="77:26" pos:end="77:35">get_keysym</name><argument_list pos:start="77:36" pos:end="77:48">(<argument pos:start="77:37" pos:end="77:41"><expr pos:start="77:37" pos:end="77:41"><name pos:start="77:37" pos:end="77:41">table</name></expr></argument>, <argument pos:start="77:44" pos:end="77:47"><expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:47">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="79:17" pos:end="139:17"><if pos:start="79:17" pos:end="83:17">if <condition pos:start="79:20" pos:end="79:32">(<expr pos:start="79:21" pos:end="79:31"><name pos:start="79:21" pos:end="79:26">keysym</name> <operator pos:start="79:28" pos:end="79:29">==</operator> <literal type="number" pos:start="79:31" pos:end="79:31">0</literal></expr>)</condition> <block pos:start="79:34" pos:end="83:17">{<block_content>

                    <comment type="line" pos:start="81:21" pos:end="81:90">//		    fprintf(stderr, "Warning: unknown keysym %s\n", line);</comment>

		</block_content>}</block></if> <else pos:start="83:19" pos:end="139:17">else <block pos:start="83:24" pos:end="139:17">{<block_content pos:start="85:21" pos:end="137:21">

		    <decl_stmt pos:start="85:21" pos:end="85:57"><decl pos:start="85:21" pos:end="85:56"><type pos:start="85:21" pos:end="85:32"><specifier pos:start="85:21" pos:end="85:25">const</specifier> <name pos:start="85:27" pos:end="85:30">char</name> <modifier pos:start="85:32" pos:end="85:32">*</modifier></type><name pos:start="85:33" pos:end="85:36">rest</name> <init pos:start="85:38" pos:end="85:56">= <expr pos:start="85:40" pos:end="85:56"><name pos:start="85:40" pos:end="85:52">end_of_keysym</name> <operator pos:start="85:54" pos:end="85:54">+</operator> <literal type="number" pos:start="85:56" pos:end="85:56">1</literal></expr></init></decl>;</decl_stmt>

		    <decl_stmt pos:start="87:21" pos:end="87:32"><decl pos:start="87:21" pos:end="87:31"><type pos:start="87:21" pos:end="87:26"><name pos:start="87:21" pos:end="87:24">char</name> <modifier pos:start="87:26" pos:end="87:26">*</modifier></type><name pos:start="87:27" pos:end="87:31">rest2</name></decl>;</decl_stmt>

		    <decl_stmt pos:start="89:21" pos:end="89:58"><decl pos:start="89:21" pos:end="89:57"><type pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">int</name></type> <name pos:start="89:25" pos:end="89:31">keycode</name> <init pos:start="89:33" pos:end="89:57">= <expr pos:start="89:35" pos:end="89:57"><call pos:start="89:35" pos:end="89:57"><name pos:start="89:35" pos:end="89:40">strtol</name><argument_list pos:start="89:41" pos:end="89:57">(<argument pos:start="89:42" pos:end="89:45"><expr pos:start="89:42" pos:end="89:45"><name pos:start="89:42" pos:end="89:45">rest</name></expr></argument>, <argument pos:start="89:48" pos:end="89:53"><expr pos:start="89:48" pos:end="89:53"><operator pos:start="89:48" pos:end="89:48">&amp;</operator><name pos:start="89:49" pos:end="89:53">rest2</name></expr></argument>, <argument pos:start="89:56" pos:end="89:56"><expr pos:start="89:56" pos:end="89:56"><literal type="number" pos:start="89:56" pos:end="89:56">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



		    <if_stmt pos:start="93:21" pos:end="101:21"><if pos:start="93:21" pos:end="101:21">if <condition pos:start="93:24" pos:end="93:56">(<expr pos:start="93:25" pos:end="93:55"><name pos:start="93:25" pos:end="93:28">rest</name> <operator pos:start="93:30" pos:end="93:31">&amp;&amp;</operator> <call pos:start="93:33" pos:end="93:55"><name pos:start="93:33" pos:end="93:38">strstr</name><argument_list pos:start="93:39" pos:end="93:55">(<argument pos:start="93:40" pos:end="93:43"><expr pos:start="93:40" pos:end="93:43"><name pos:start="93:40" pos:end="93:43">rest</name></expr></argument>, <argument pos:start="93:46" pos:end="93:54"><expr pos:start="93:46" pos:end="93:54"><literal type="string" pos:start="93:46" pos:end="93:54">"numlock"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:58" pos:end="101:21">{<block_content pos:start="95:25" pos:end="97:68">

			<expr_stmt pos:start="95:25" pos:end="95:68"><expr pos:start="95:25" pos:end="95:67"><call pos:start="95:25" pos:end="95:67"><name pos:start="95:25" pos:end="95:40">add_to_key_range</name><argument_list pos:start="95:41" pos:end="95:67">(<argument pos:start="95:42" pos:end="95:57"><expr pos:start="95:42" pos:end="95:57"><operator pos:start="95:42" pos:end="95:42">&amp;</operator><name pos:start="95:43" pos:end="95:57"><name pos:start="95:43" pos:end="95:43">k</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:57">keypad_range</name></name></expr></argument>, <argument pos:start="95:60" pos:end="95:66"><expr pos:start="95:60" pos:end="95:66"><name pos:start="95:60" pos:end="95:66">keycode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="97:25" pos:end="97:68"><expr pos:start="97:25" pos:end="97:67"><call pos:start="97:25" pos:end="97:67"><name pos:start="97:25" pos:end="97:40">add_to_key_range</name><argument_list pos:start="97:41" pos:end="97:67">(<argument pos:start="97:42" pos:end="97:58"><expr pos:start="97:42" pos:end="97:58"><operator pos:start="97:42" pos:end="97:42">&amp;</operator><name pos:start="97:43" pos:end="97:58"><name pos:start="97:43" pos:end="97:43">k</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:58">numlock_range</name></name></expr></argument>, <argument pos:start="97:61" pos:end="97:66"><expr pos:start="97:61" pos:end="97:66"><name pos:start="97:61" pos:end="97:66">keysym</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:start="99:25" pos:end="99:94">//fprintf(stderr, "keypad keysym %04x keycode %d\n", keysym, keycode);</comment>

		    </block_content>}</block></if></if_stmt>



		    <if_stmt pos:start="105:21" pos:end="107:50"><if pos:start="105:21" pos:end="107:50">if <condition pos:start="105:24" pos:end="105:54">(<expr pos:start="105:25" pos:end="105:53"><name pos:start="105:25" pos:end="105:28">rest</name> <operator pos:start="105:30" pos:end="105:31">&amp;&amp;</operator> <call pos:start="105:33" pos:end="105:53"><name pos:start="105:33" pos:end="105:38">strstr</name><argument_list pos:start="105:39" pos:end="105:53">(<argument pos:start="105:40" pos:end="105:43"><expr pos:start="105:40" pos:end="105:43"><name pos:start="105:40" pos:end="105:43">rest</name></expr></argument>, <argument pos:start="105:46" pos:end="105:52"><expr pos:start="105:46" pos:end="105:52"><literal type="string" pos:start="105:46" pos:end="105:52">"shift"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="107:25" pos:end="107:50"><block_content pos:start="107:25" pos:end="107:50">

			<expr_stmt pos:start="107:25" pos:end="107:50"><expr pos:start="107:25" pos:end="107:49"><name pos:start="107:25" pos:end="107:31">keycode</name> <operator pos:start="107:33" pos:end="107:34">|=</operator> <name pos:start="107:36" pos:end="107:49">SCANCODE_SHIFT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		    <if_stmt pos:start="109:21" pos:end="111:50"><if pos:start="109:21" pos:end="111:50">if <condition pos:start="109:24" pos:end="109:54">(<expr pos:start="109:25" pos:end="109:53"><name pos:start="109:25" pos:end="109:28">rest</name> <operator pos:start="109:30" pos:end="109:31">&amp;&amp;</operator> <call pos:start="109:33" pos:end="109:53"><name pos:start="109:33" pos:end="109:38">strstr</name><argument_list pos:start="109:39" pos:end="109:53">(<argument pos:start="109:40" pos:end="109:43"><expr pos:start="109:40" pos:end="109:43"><name pos:start="109:40" pos:end="109:43">rest</name></expr></argument>, <argument pos:start="109:46" pos:end="109:52"><expr pos:start="109:46" pos:end="109:52"><literal type="string" pos:start="109:46" pos:end="109:52">"altgr"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="111:25" pos:end="111:50"><block_content pos:start="111:25" pos:end="111:50">

			<expr_stmt pos:start="111:25" pos:end="111:50"><expr pos:start="111:25" pos:end="111:49"><name pos:start="111:25" pos:end="111:31">keycode</name> <operator pos:start="111:33" pos:end="111:34">|=</operator> <name pos:start="111:36" pos:end="111:49">SCANCODE_ALTGR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		    <if_stmt pos:start="113:21" pos:end="115:49"><if pos:start="113:21" pos:end="115:49">if <condition pos:start="113:24" pos:end="113:53">(<expr pos:start="113:25" pos:end="113:52"><name pos:start="113:25" pos:end="113:28">rest</name> <operator pos:start="113:30" pos:end="113:31">&amp;&amp;</operator> <call pos:start="113:33" pos:end="113:52"><name pos:start="113:33" pos:end="113:38">strstr</name><argument_list pos:start="113:39" pos:end="113:52">(<argument pos:start="113:40" pos:end="113:43"><expr pos:start="113:40" pos:end="113:43"><name pos:start="113:40" pos:end="113:43">rest</name></expr></argument>, <argument pos:start="113:46" pos:end="113:51"><expr pos:start="113:46" pos:end="113:51"><literal type="string" pos:start="113:46" pos:end="113:51">"ctrl"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="115:25" pos:end="115:49"><block_content pos:start="115:25" pos:end="115:49">

			<expr_stmt pos:start="115:25" pos:end="115:49"><expr pos:start="115:25" pos:end="115:48"><name pos:start="115:25" pos:end="115:31">keycode</name> <operator pos:start="115:33" pos:end="115:34">|=</operator> <name pos:start="115:36" pos:end="115:48">SCANCODE_CTRL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



		    <expr_stmt pos:start="119:21" pos:end="119:57"><expr pos:start="119:21" pos:end="119:56"><call pos:start="119:21" pos:end="119:56"><name pos:start="119:21" pos:end="119:30">add_keysym</name><argument_list pos:start="119:31" pos:end="119:56">(<argument pos:start="119:32" pos:end="119:35"><expr pos:start="119:32" pos:end="119:35"><name pos:start="119:32" pos:end="119:35">line</name></expr></argument>, <argument pos:start="119:38" pos:end="119:43"><expr pos:start="119:38" pos:end="119:43"><name pos:start="119:38" pos:end="119:43">keysym</name></expr></argument>, <argument pos:start="119:46" pos:end="119:52"><expr pos:start="119:46" pos:end="119:52"><name pos:start="119:46" pos:end="119:52">keycode</name></expr></argument>, <argument pos:start="119:55" pos:end="119:55"><expr pos:start="119:55" pos:end="119:55"><name pos:start="119:55" pos:end="119:55">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		    <if_stmt pos:start="123:21" pos:end="137:21"><if pos:start="123:21" pos:end="137:21">if <condition pos:start="123:24" pos:end="123:57">(<expr pos:start="123:25" pos:end="123:56"><name pos:start="123:25" pos:end="123:28">rest</name> <operator pos:start="123:30" pos:end="123:31">&amp;&amp;</operator> <call pos:start="123:33" pos:end="123:56"><name pos:start="123:33" pos:end="123:38">strstr</name><argument_list pos:start="123:39" pos:end="123:56">(<argument pos:start="123:40" pos:end="123:43"><expr pos:start="123:40" pos:end="123:43"><name pos:start="123:40" pos:end="123:43">rest</name></expr></argument>, <argument pos:start="123:46" pos:end="123:55"><expr pos:start="123:46" pos:end="123:55"><literal type="string" pos:start="123:46" pos:end="123:55">"addupper"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:59" pos:end="137:21">{<block_content pos:start="125:25" pos:end="135:82">

			<decl_stmt pos:start="125:25" pos:end="125:32"><decl pos:start="125:25" pos:end="125:31"><type pos:start="125:25" pos:end="125:30"><name pos:start="125:25" pos:end="125:28">char</name> <modifier pos:start="125:30" pos:end="125:30">*</modifier></type><name pos:start="125:31" pos:end="125:31">c</name></decl>;</decl_stmt>

			<for pos:start="127:25" pos:end="129:50">for <control pos:start="127:29" pos:end="127:47">(<init pos:start="127:30" pos:end="127:38"><expr pos:start="127:30" pos:end="127:37"><name pos:start="127:30" pos:end="127:30">c</name> <operator pos:start="127:32" pos:end="127:32">=</operator> <name pos:start="127:34" pos:end="127:37">line</name></expr>;</init> <condition pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:41"><operator pos:start="127:40" pos:end="127:40">*</operator><name pos:start="127:41" pos:end="127:41">c</name></expr>;</condition> <incr pos:start="127:44" pos:end="127:46"><expr pos:start="127:44" pos:end="127:46"><name pos:start="127:44" pos:end="127:44">c</name><operator pos:start="127:45" pos:end="127:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:29" pos:end="129:50"><block_content pos:start="129:29" pos:end="129:50">

			    <expr_stmt pos:start="129:29" pos:end="129:50"><expr pos:start="129:29" pos:end="129:49"><operator pos:start="129:29" pos:end="129:29">*</operator><name pos:start="129:30" pos:end="129:30">c</name> <operator pos:start="129:32" pos:end="129:32">=</operator> <call pos:start="129:34" pos:end="129:49"><name pos:start="129:34" pos:end="129:45">qemu_toupper</name><argument_list pos:start="129:46" pos:end="129:49">(<argument pos:start="129:47" pos:end="129:48"><expr pos:start="129:47" pos:end="129:48"><operator pos:start="129:47" pos:end="129:47">*</operator><name pos:start="129:48" pos:end="129:48">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

			<expr_stmt pos:start="131:25" pos:end="131:57"><expr pos:start="131:25" pos:end="131:56"><name pos:start="131:25" pos:end="131:30">keysym</name> <operator pos:start="131:32" pos:end="131:32">=</operator> <call pos:start="131:34" pos:end="131:56"><name pos:start="131:34" pos:end="131:43">get_keysym</name><argument_list pos:start="131:44" pos:end="131:56">(<argument pos:start="131:45" pos:end="131:49"><expr pos:start="131:45" pos:end="131:49"><name pos:start="131:45" pos:end="131:49">table</name></expr></argument>, <argument pos:start="131:52" pos:end="131:55"><expr pos:start="131:52" pos:end="131:55"><name pos:start="131:52" pos:end="131:55">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt pos:start="133:25" pos:end="135:82"><if pos:start="133:25" pos:end="135:82">if <condition pos:start="133:28" pos:end="133:35">(<expr pos:start="133:29" pos:end="133:34"><name pos:start="133:29" pos:end="133:34">keysym</name></expr>)</condition><block type="pseudo" pos:start="135:29" pos:end="135:82"><block_content pos:start="135:29" pos:end="135:82">

			    <expr_stmt pos:start="135:29" pos:end="135:82"><expr pos:start="135:29" pos:end="135:81"><call pos:start="135:29" pos:end="135:81"><name pos:start="135:29" pos:end="135:38">add_keysym</name><argument_list pos:start="135:39" pos:end="135:81">(<argument pos:start="135:40" pos:end="135:43"><expr pos:start="135:40" pos:end="135:43"><name pos:start="135:40" pos:end="135:43">line</name></expr></argument>, <argument pos:start="135:46" pos:end="135:51"><expr pos:start="135:46" pos:end="135:51"><name pos:start="135:46" pos:end="135:51">keysym</name></expr></argument>, <argument pos:start="135:54" pos:end="135:77"><expr pos:start="135:54" pos:end="135:77"><name pos:start="135:54" pos:end="135:60">keycode</name> <operator pos:start="135:62" pos:end="135:62">|</operator> <name pos:start="135:64" pos:end="135:77">SCANCODE_SHIFT</name></expr></argument>, <argument pos:start="135:80" pos:end="135:80"><expr pos:start="135:80" pos:end="135:80"><name pos:start="135:80" pos:end="135:80">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		    </block_content>}</block></if></if_stmt>

		</block_content>}</block></else></if_stmt>

	    </block_content>}</block></if></if_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="147:5" pos:end="147:14"><expr pos:start="147:5" pos:end="147:13"><call pos:start="147:5" pos:end="147:13"><name pos:start="147:5" pos:end="147:10">fclose</name><argument_list pos:start="147:11" pos:end="147:13">(<argument pos:start="147:12" pos:end="147:12"><expr pos:start="147:12" pos:end="147:12"><name pos:start="147:12" pos:end="147:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><name pos:start="149:12" pos:end="149:12">k</name></expr>;</return>

</block_content>}</block></function>
</unit>
