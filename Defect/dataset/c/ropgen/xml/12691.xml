<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12691.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mov_read_default</name><parameter_list pos:start="1:28" pos:end="1:78">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">MOVContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:56">ByteIOContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">pb</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:77"><decl pos:start="1:63" pos:end="1:77"><type pos:start="1:63" pos:end="1:77"><name pos:start="1:63" pos:end="1:72">MOV_atom_t</name></type> <name pos:start="1:74" pos:end="1:77">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:15">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:22">total_size</name> <init pos:start="5:24" pos:end="5:26">= <expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">MOV_atom_t</name></type> <name pos:start="7:16" pos:end="7:16">a</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">err</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:5">a</name><operator pos:start="15:6" pos:end="15:6">.</operator><name pos:start="15:7" pos:end="15:12">offset</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:19">atom</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:26">offset</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:30"><if pos:start="19:5" pos:end="21:30">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:12">atom</name><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:17">size</name></name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:30"><block_content pos:start="21:9" pos:end="21:30">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:12">atom</name><operator pos:start="21:13" pos:end="21:13">.</operator><name pos:start="21:14" pos:end="21:17">size</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:29">INT64_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <while pos:start="23:5" pos:end="105:5">while<condition pos:start="23:10" pos:end="23:66">(<expr pos:start="23:11" pos:end="23:65"><operator pos:start="23:11" pos:end="23:11">(</operator><operator pos:start="23:12" pos:end="23:12">(</operator><name pos:start="23:13" pos:end="23:22">total_size</name> <operator pos:start="23:24" pos:end="23:24">+</operator> <literal type="number" pos:start="23:26" pos:end="23:26">8</literal><operator pos:start="23:27" pos:end="23:27">)</operator> <operator pos:start="23:29" pos:end="23:29">&lt;</operator> <name pos:start="23:31" pos:end="23:39"><name pos:start="23:31" pos:end="23:34">atom</name><operator pos:start="23:35" pos:end="23:35">.</operator><name pos:start="23:36" pos:end="23:39">size</name></name><operator pos:start="23:40" pos:end="23:40">)</operator> <operator pos:start="23:42" pos:end="23:43">&amp;&amp;</operator> <operator pos:start="23:45" pos:end="23:45">!</operator><call pos:start="23:46" pos:end="23:57"><name pos:start="23:46" pos:end="23:53">url_feof</name><argument_list pos:start="23:54" pos:end="23:57">(<argument pos:start="23:55" pos:end="23:56"><expr pos:start="23:55" pos:end="23:56"><name pos:start="23:55" pos:end="23:56">pb</name></expr></argument>)</argument_list></call> <operator pos:start="23:59" pos:end="23:60">&amp;&amp;</operator> <operator pos:start="23:62" pos:end="23:62">!</operator><name pos:start="23:63" pos:end="23:65">err</name></expr>)</condition> <block pos:start="23:68" pos:end="105:5">{<block_content pos:start="25:9" pos:end="103:29">

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:9">a</name><operator pos:start="25:10" pos:end="25:10">.</operator><name pos:start="25:11" pos:end="25:14">size</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:26"><name pos:start="25:18" pos:end="25:21">atom</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:26">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:9">a</name><operator pos:start="27:10" pos:end="27:10">.</operator><name pos:start="27:11" pos:end="27:14">type</name></name><operator pos:start="27:15" pos:end="27:15">=</operator><literal type="number" pos:start="27:16" pos:end="27:17">0L</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if<condition pos:start="29:11" pos:end="29:26">(<expr pos:start="29:12" pos:end="29:25"><name pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:15">atom</name><operator pos:start="29:16" pos:end="29:16">.</operator><name pos:start="29:17" pos:end="29:20">size</name></name> <operator pos:start="29:22" pos:end="29:23">&gt;=</operator> <literal type="number" pos:start="29:25" pos:end="29:25">8</literal></expr>)</condition> <block pos:start="29:28" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:34">

            <expr_stmt pos:start="31:13" pos:end="31:34"><expr pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:13">a</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:18">size</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="31:33"><name pos:start="31:22" pos:end="31:29">get_be32</name><argument_list pos:start="31:30" pos:end="31:33">(<argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:13">a</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:18">type</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <call pos:start="33:22" pos:end="33:33"><name pos:start="33:22" pos:end="33:29">get_le32</name><argument_list pos:start="33:30" pos:end="33:33">(<argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><name pos:start="33:31" pos:end="33:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:18">total_size</name> <operator pos:start="37:20" pos:end="37:21">+=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:9">a</name><operator pos:start="39:10" pos:end="39:10">.</operator><name pos:start="39:11" pos:end="39:16">offset</name></name> <operator pos:start="39:18" pos:end="39:19">+=</operator> <literal type="number" pos:start="39:21" pos:end="39:21">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:138"><expr pos:start="41:9" pos:end="41:137"><call pos:start="41:9" pos:end="41:137"><name pos:start="41:9" pos:end="41:15">dprintf</name><argument_list pos:start="41:16" pos:end="41:137">(<argument pos:start="41:17" pos:end="41:21"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:21">fc</name></name></expr></argument>, <argument pos:start="41:24" pos:end="41:81"><expr pos:start="41:24" pos:end="41:81"><literal type="string" pos:start="41:24" pos:end="41:48">"type: %08x  %.4s  sz: %"</literal><name pos:start="41:49" pos:end="41:54">PRIx64</name><literal type="string" pos:start="41:55" pos:end="41:59">"  %"</literal><name pos:start="41:60" pos:end="41:65">PRIx64</name><literal type="string" pos:start="41:66" pos:end="41:71">"   %"</literal><name pos:start="41:72" pos:end="41:77">PRIx64</name><literal type="string" pos:start="41:78" pos:end="41:81">"\n"</literal></expr></argument>, <argument pos:start="41:84" pos:end="41:89"><expr pos:start="41:84" pos:end="41:89"><name pos:start="41:84" pos:end="41:89"><name pos:start="41:84" pos:end="41:84">a</name><operator pos:start="41:85" pos:end="41:85">.</operator><name pos:start="41:86" pos:end="41:89">type</name></name></expr></argument>, <argument pos:start="41:92" pos:end="41:105"><expr pos:start="41:92" pos:end="41:105"><operator pos:start="41:92" pos:end="41:92">(</operator><name pos:start="41:93" pos:end="41:96">char</name><operator pos:start="41:97" pos:end="41:97">*</operator><operator pos:start="41:98" pos:end="41:98">)</operator><operator pos:start="41:99" pos:end="41:99">&amp;</operator><name pos:start="41:100" pos:end="41:105"><name pos:start="41:100" pos:end="41:100">a</name><operator pos:start="41:101" pos:end="41:101">.</operator><name pos:start="41:102" pos:end="41:105">type</name></name></expr></argument>, <argument pos:start="41:108" pos:end="41:113"><expr pos:start="41:108" pos:end="41:113"><name pos:start="41:108" pos:end="41:113"><name pos:start="41:108" pos:end="41:108">a</name><operator pos:start="41:109" pos:end="41:109">.</operator><name pos:start="41:110" pos:end="41:113">size</name></name></expr></argument>, <argument pos:start="41:116" pos:end="41:124"><expr pos:start="41:116" pos:end="41:124"><name pos:start="41:116" pos:end="41:124"><name pos:start="41:116" pos:end="41:119">atom</name><operator pos:start="41:120" pos:end="41:120">.</operator><name pos:start="41:121" pos:end="41:124">size</name></name></expr></argument>, <argument pos:start="41:127" pos:end="41:136"><expr pos:start="41:127" pos:end="41:136"><name pos:start="41:127" pos:end="41:136">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:24">(<expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:18"><name pos:start="43:13" pos:end="43:13">a</name><operator pos:start="43:14" pos:end="43:14">.</operator><name pos:start="43:15" pos:end="43:18">size</name></name> <operator pos:start="43:20" pos:end="43:21">==</operator> <literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>)</condition> <block pos:start="43:26" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:28"> <comment type="block" pos:start="43:28" pos:end="43:53">/* 64 bit extended size */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:38"><expr pos:start="45:13" pos:end="45:37"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">a</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:18">size</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <call pos:start="45:22" pos:end="45:33"><name pos:start="45:22" pos:end="45:29">get_be64</name><argument_list pos:start="45:30" pos:end="45:33">(<argument pos:start="45:31" pos:end="45:32"><expr pos:start="45:31" pos:end="45:32"><name pos:start="45:31" pos:end="45:32">pb</name></expr></argument>)</argument_list></call> <operator pos:start="45:35" pos:end="45:35">-</operator> <literal type="number" pos:start="45:37" pos:end="45:37">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:13">a</name><operator pos:start="47:14" pos:end="47:14">.</operator><name pos:start="47:15" pos:end="47:20">offset</name></name> <operator pos:start="47:22" pos:end="47:23">+=</operator> <literal type="number" pos:start="47:25" pos:end="47:25">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:22">total_size</name> <operator pos:start="49:24" pos:end="49:25">+=</operator> <literal type="number" pos:start="49:27" pos:end="49:27">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:24">(<expr pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:13">a</name><operator pos:start="53:14" pos:end="53:14">.</operator><name pos:start="53:15" pos:end="53:18">size</name></name> <operator pos:start="53:20" pos:end="53:21">==</operator> <literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>)</condition> <block pos:start="53:26" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:22">

            <expr_stmt pos:start="55:13" pos:end="55:44"><expr pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:13">a</name><operator pos:start="55:14" pos:end="55:14">.</operator><name pos:start="55:15" pos:end="55:18">size</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:30"><name pos:start="55:22" pos:end="55:25">atom</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:30">size</name></name> <operator pos:start="55:32" pos:end="55:32">-</operator> <name pos:start="55:34" pos:end="55:43">total_size</name></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:22"><if pos:start="57:13" pos:end="59:22">if <condition pos:start="57:16" pos:end="57:28">(<expr pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:17">a</name><operator pos:start="57:18" pos:end="57:18">.</operator><name pos:start="57:19" pos:end="57:22">size</name></name> <operator pos:start="57:24" pos:end="57:25">&lt;=</operator> <literal type="number" pos:start="57:27" pos:end="57:27">8</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:22"><block_content pos:start="59:17" pos:end="59:22">

                <break pos:start="59:17" pos:end="59:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:20"><expr pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:9">a</name><operator pos:start="63:10" pos:end="63:10">.</operator><name pos:start="63:11" pos:end="63:14">size</name></name> <operator pos:start="63:16" pos:end="63:17">-=</operator> <literal type="number" pos:start="63:19" pos:end="63:19">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:18"><if pos:start="65:9" pos:end="67:18">if<condition pos:start="65:11" pos:end="65:57">(<expr pos:start="65:12" pos:end="65:56"><name pos:start="65:12" pos:end="65:17"><name pos:start="65:12" pos:end="65:12">a</name><operator pos:start="65:13" pos:end="65:13">.</operator><name pos:start="65:14" pos:end="65:17">size</name></name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <literal type="number" pos:start="65:21" pos:end="65:21">0</literal> <operator pos:start="65:23" pos:end="65:24">||</operator> <name pos:start="65:26" pos:end="65:31"><name pos:start="65:26" pos:end="65:26">a</name><operator pos:start="65:27" pos:end="65:27">.</operator><name pos:start="65:28" pos:end="65:31">size</name></name> <operator pos:start="65:33" pos:end="65:33">&gt;</operator> <name pos:start="65:35" pos:end="65:43"><name pos:start="65:35" pos:end="65:38">atom</name><operator pos:start="65:39" pos:end="65:39">.</operator><name pos:start="65:40" pos:end="65:43">size</name></name> <operator pos:start="65:45" pos:end="65:45">-</operator> <name pos:start="65:47" pos:end="65:56">total_size</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:18"><block_content pos:start="67:13" pos:end="67:18">

            <break pos:start="67:13" pos:end="67:18">break;</break></block_content></block></if></if_stmt>



        <for pos:start="71:9" pos:end="75:24">for <control pos:start="71:13" pos:end="73:54">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="73:49"><expr pos:start="71:21" pos:end="73:48"><name pos:start="71:21" pos:end="71:37"><name pos:start="71:21" pos:end="71:21">c</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:34">parse_table</name><index pos:start="71:35" pos:end="71:37">[<expr pos:start="71:36" pos:end="71:36"><name pos:start="71:36" pos:end="71:36">i</name></expr>]</index></name><operator pos:start="71:38" pos:end="71:38">.</operator><name pos:start="71:39" pos:end="71:42">type</name> <operator pos:start="71:44" pos:end="71:45">!=</operator> <literal type="number" pos:start="71:47" pos:end="71:48">0L</literal>

             <operator pos:start="73:14" pos:end="73:15">&amp;&amp;</operator> <name pos:start="73:17" pos:end="73:33"><name pos:start="73:17" pos:end="73:17">c</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:30">parse_table</name><index pos:start="73:31" pos:end="73:33">[<expr pos:start="73:32" pos:end="73:32"><name pos:start="73:32" pos:end="73:32">i</name></expr>]</index></name><operator pos:start="73:34" pos:end="73:34">.</operator><name pos:start="73:35" pos:end="73:38">type</name> <operator pos:start="73:40" pos:end="73:41">!=</operator> <name pos:start="73:43" pos:end="73:48"><name pos:start="73:43" pos:end="73:43">a</name><operator pos:start="73:44" pos:end="73:44">.</operator><name pos:start="73:45" pos:end="73:48">type</name></name></expr>;</condition> <incr pos:start="73:51" pos:end="73:53"><expr pos:start="73:51" pos:end="73:53"><name pos:start="73:51" pos:end="73:51">i</name><operator pos:start="73:52" pos:end="73:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:24" pos:end="75:24"><block_content pos:start="75:24" pos:end="75:24">

            <comment type="block" pos:start="75:13" pos:end="75:23">/* empty */</comment><empty_stmt pos:start="75:24" pos:end="75:24">;</empty_stmt></block_content></block></for>



        <if_stmt pos:start="79:9" pos:end="97:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:40">(<expr pos:start="79:13" pos:end="79:39"><name pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:13">c</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:26">parse_table</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">i</name></expr>]</index></name><operator pos:start="79:30" pos:end="79:30">.</operator><name pos:start="79:31" pos:end="79:34">type</name> <operator pos:start="79:36" pos:end="79:37">==</operator> <literal type="number" pos:start="79:39" pos:end="79:39">0</literal></expr>)</condition> <block pos:start="79:42" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:34"> <comment type="block" pos:start="79:44" pos:end="79:69">/* skip leaf atoms data */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><call pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:21">url_fskip</name><argument_list pos:start="81:22" pos:end="81:33">(<argument pos:start="81:23" pos:end="81:24"><expr pos:start="81:23" pos:end="81:24"><name pos:start="81:23" pos:end="81:24">pb</name></expr></argument>, <argument pos:start="81:27" pos:end="81:32"><expr pos:start="81:27" pos:end="81:32"><name pos:start="81:27" pos:end="81:32"><name pos:start="81:27" pos:end="81:27">a</name><operator pos:start="81:28" pos:end="81:28">.</operator><name pos:start="81:29" pos:end="81:32">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="97:9">else <block pos:start="83:16" pos:end="97:9">{<block_content pos:start="85:13" pos:end="95:36">

            <decl_stmt pos:start="85:13" pos:end="85:47"><decl pos:start="85:13" pos:end="85:46"><type pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:20">offset_t</name></type> <name pos:start="85:22" pos:end="85:30">start_pos</name> <init pos:start="85:32" pos:end="85:46">= <expr pos:start="85:34" pos:end="85:46"><call pos:start="85:34" pos:end="85:46"><name pos:start="85:34" pos:end="85:42">url_ftell</name><argument_list pos:start="85:43" pos:end="85:46">(<argument pos:start="85:44" pos:end="85:45"><expr pos:start="85:44" pos:end="85:45"><name pos:start="85:44" pos:end="85:45">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="87:13" pos:end="87:25"><decl pos:start="87:13" pos:end="87:24"><type pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:19">int64_t</name></type> <name pos:start="87:21" pos:end="87:24">left</name></decl>;</decl_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:15">err</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <operator pos:start="89:19" pos:end="89:19">(</operator><name pos:start="89:20" pos:end="89:36"><name pos:start="89:20" pos:end="89:20">c</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:33">parse_table</name><index pos:start="89:34" pos:end="89:36">[<expr pos:start="89:35" pos:end="89:35"><name pos:start="89:35" pos:end="89:35">i</name></expr>]</index></name><operator pos:start="89:37" pos:end="89:37">.</operator><name pos:start="89:38" pos:end="89:41">func</name><operator pos:start="89:42" pos:end="89:42">)</operator><operator pos:start="89:43" pos:end="89:43">(</operator><name pos:start="89:44" pos:end="89:44">c</name><operator pos:start="89:45" pos:end="89:45">,</operator> <name pos:start="89:47" pos:end="89:48">pb</name><operator pos:start="89:49" pos:end="89:49">,</operator> <name pos:start="89:51" pos:end="89:51">a</name><operator pos:start="89:52" pos:end="89:52">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:54"><expr pos:start="91:13" pos:end="91:53"><name pos:start="91:13" pos:end="91:16">left</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:25"><name pos:start="91:20" pos:end="91:20">a</name><operator pos:start="91:21" pos:end="91:21">.</operator><name pos:start="91:22" pos:end="91:25">size</name></name> <operator pos:start="91:27" pos:end="91:27">-</operator> <call pos:start="91:29" pos:end="91:41"><name pos:start="91:29" pos:end="91:37">url_ftell</name><argument_list pos:start="91:38" pos:end="91:41">(<argument pos:start="91:39" pos:end="91:40"><expr pos:start="91:39" pos:end="91:40"><name pos:start="91:39" pos:end="91:40">pb</name></expr></argument>)</argument_list></call> <operator pos:start="91:43" pos:end="91:43">+</operator> <name pos:start="91:45" pos:end="91:53">start_pos</name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="95:36"><if pos:start="93:13" pos:end="95:36">if <condition pos:start="93:16" pos:end="93:25">(<expr pos:start="93:17" pos:end="93:24"><name pos:start="93:17" pos:end="93:20">left</name> <operator pos:start="93:22" pos:end="93:22">&gt;</operator> <literal type="number" pos:start="93:24" pos:end="93:24">0</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:36"><block_content pos:start="95:17" pos:end="95:36"> <comment type="block" pos:start="93:27" pos:end="93:56">/* skip garbage at atom end */</comment>

                <expr_stmt pos:start="95:17" pos:end="95:36"><expr pos:start="95:17" pos:end="95:35"><call pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:25">url_fskip</name><argument_list pos:start="95:26" pos:end="95:35">(<argument pos:start="95:27" pos:end="95:28"><expr pos:start="95:27" pos:end="95:28"><name pos:start="95:27" pos:end="95:28">pb</name></expr></argument>, <argument pos:start="95:31" pos:end="95:34"><expr pos:start="95:31" pos:end="95:34"><name pos:start="95:31" pos:end="95:34">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:27"><expr pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:9">a</name><operator pos:start="101:10" pos:end="101:10">.</operator><name pos:start="101:11" pos:end="101:16">offset</name></name> <operator pos:start="101:18" pos:end="101:19">+=</operator> <name pos:start="101:21" pos:end="101:26"><name pos:start="101:21" pos:end="101:21">a</name><operator pos:start="101:22" pos:end="101:22">.</operator><name pos:start="101:23" pos:end="101:26">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:18">total_size</name> <operator pos:start="103:20" pos:end="103:21">+=</operator> <name pos:start="103:23" pos:end="103:28"><name pos:start="103:23" pos:end="103:23">a</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:28">size</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:62">(<expr pos:start="109:9" pos:end="109:61"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:12">err</name> <operator pos:start="109:14" pos:end="109:15">&amp;&amp;</operator> <name pos:start="109:17" pos:end="109:26">total_size</name> <operator pos:start="109:28" pos:end="109:28">&lt;</operator> <name pos:start="109:30" pos:end="109:38"><name pos:start="109:30" pos:end="109:33">atom</name><operator pos:start="109:34" pos:end="109:34">.</operator><name pos:start="109:35" pos:end="109:38">size</name></name> <operator pos:start="109:40" pos:end="109:41">&amp;&amp;</operator> <name pos:start="109:43" pos:end="109:51"><name pos:start="109:43" pos:end="109:46">atom</name><operator pos:start="109:47" pos:end="109:47">.</operator><name pos:start="109:48" pos:end="109:51">size</name></name> <operator pos:start="109:53" pos:end="109:53">&lt;</operator> <literal type="number" pos:start="109:55" pos:end="109:61">0x7ffff</literal></expr>)</condition> <block pos:start="109:64" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:46">

        <expr_stmt pos:start="111:9" pos:end="111:46"><expr pos:start="111:9" pos:end="111:45"><call pos:start="111:9" pos:end="111:45"><name pos:start="111:9" pos:end="111:17">url_fskip</name><argument_list pos:start="111:18" pos:end="111:45">(<argument pos:start="111:19" pos:end="111:20"><expr pos:start="111:19" pos:end="111:20"><name pos:start="111:19" pos:end="111:20">pb</name></expr></argument>, <argument pos:start="111:23" pos:end="111:44"><expr pos:start="111:23" pos:end="111:44"><name pos:start="111:23" pos:end="111:31"><name pos:start="111:23" pos:end="111:26">atom</name><operator pos:start="111:27" pos:end="111:27">.</operator><name pos:start="111:28" pos:end="111:31">size</name></name> <operator pos:start="111:33" pos:end="111:33">-</operator> <name pos:start="111:35" pos:end="111:44">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="117:5" pos:end="117:15">return <expr pos:start="117:12" pos:end="117:14"><name pos:start="117:12" pos:end="117:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
