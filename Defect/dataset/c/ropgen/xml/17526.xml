<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17526.c" pos:tabs="8"><function pos:start="1:1" pos:end="483:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:37">rgb24toyv12</name>)<parameter_list pos:start="1:39" pos:end="5:85">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">src</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">ydst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:87"><decl pos:start="1:75" pos:end="1:87"><type pos:start="1:75" pos:end="1:87"><name pos:start="1:75" pos:end="1:81">uint8_t</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:87">udst</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:102"><decl pos:start="1:90" pos:end="1:102"><type pos:start="1:90" pos:end="1:102"><name pos:start="1:90" pos:end="1:96">uint8_t</name> <modifier pos:start="1:98" pos:end="1:98">*</modifier></type><name pos:start="1:99" pos:end="1:102">vdst</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:48"><decl pos:start="3:40" pos:end="3:48"><type pos:start="3:40" pos:end="3:48"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:48">width</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:60"><decl pos:start="3:51" pos:end="3:60"><type pos:start="3:51" pos:end="3:60"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:60">height</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:52"><decl pos:start="5:40" pos:end="5:52"><type pos:start="5:40" pos:end="5:52"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:52">lumStride</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:69"><decl pos:start="5:55" pos:end="5:69"><type pos:start="5:55" pos:end="5:69"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:69">chromStride</name></decl></parameter>, <parameter pos:start="5:72" pos:end="5:84"><decl pos:start="5:72" pos:end="5:84"><type pos:start="5:72" pos:end="5:84"><name pos:start="5:72" pos:end="5:74">int</name></type> <name pos:start="5:76" pos:end="5:84">srcStride</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="483:1">{<block_content pos:start="9:5" pos:end="481:94">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:17"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">x86_reg</name></type> <name pos:start="11:19" pos:end="11:28">chromWidth</name><init pos:start="11:29" pos:end="11:38">= <expr pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:35">width</name><operator pos:start="11:36" pos:end="11:37">&gt;&gt;</operator><literal type="number" pos:start="11:38" pos:end="11:38">1</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="13:5" pos:end="469:5">for <control pos:start="13:9" pos:end="13:31">(<init pos:start="13:10" pos:end="13:13"><expr pos:start="13:10" pos:end="13:12"><name pos:start="13:10" pos:end="13:10">y</name><operator pos:start="13:11" pos:end="13:11">=</operator><literal type="number" pos:start="13:12" pos:end="13:12">0</literal></expr>;</init> <condition pos:start="13:15" pos:end="13:25"><expr pos:start="13:15" pos:end="13:24"><name pos:start="13:15" pos:end="13:15">y</name><operator pos:start="13:16" pos:end="13:16">&lt;</operator><name pos:start="13:17" pos:end="13:22">height</name><operator pos:start="13:23" pos:end="13:23">-</operator><literal type="number" pos:start="13:24" pos:end="13:24">2</literal></expr>;</condition> <incr pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:27">y</name><operator pos:start="13:28" pos:end="13:29">+=</operator><literal type="number" pos:start="13:30" pos:end="13:30">2</literal></expr></incr>)</control> <block pos:start="13:33" pos:end="469:5">{<block_content pos:start="15:9" pos:end="467:28">

        <decl_stmt pos:start="15:9" pos:end="15:14"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name></decl>;</decl_stmt>

        <for pos:start="17:9" pos:end="161:9">for <control pos:start="17:13" pos:end="17:27">(<init pos:start="17:14" pos:end="17:17"><expr pos:start="17:14" pos:end="17:16"><name pos:start="17:14" pos:end="17:14">i</name><operator pos:start="17:15" pos:end="17:15">=</operator><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</init> <condition pos:start="17:19" pos:end="17:22"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:19">i</name><operator pos:start="17:20" pos:end="17:20">&lt;</operator><literal type="number" pos:start="17:21" pos:end="17:21">2</literal></expr>;</condition> <incr pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:24">i</name><operator pos:start="17:25" pos:end="17:26">++</operator></expr></incr>)</control> <block pos:start="17:29" pos:end="161:9">{<block_content pos:start="19:13" pos:end="159:30">

            <asm pos:start="19:13" pos:end="155:14">__asm__ <specifier pos:start="19:21" pos:end="19:28">volatile</specifier>(

                "mov                        %2, %%"REG_a"   \n\t"

                "movq  "MANGLE(ff_bgr2YCoeff)", %%mm6       \n\t"

                "movq       "MANGLE(ff_w1111)", %%mm5       \n\t"

                "pxor                    %%mm7, %%mm7       \n\t"

                "lea (%%"REG_a", %%"REG_a", 2), %%"REG_d"   \n\t"

                ".p2align                    4              \n\t"

                "1:                                         \n\t"

                PREFETCH"    64(%0, %%"REG_d")              \n\t"

                "movd          (%0, %%"REG_d"), %%mm0       \n\t"

                "movd         3(%0, %%"REG_d"), %%mm1       \n\t"

                "punpcklbw               %%mm7, %%mm0       \n\t"

                "punpcklbw               %%mm7, %%mm1       \n\t"

                "movd         6(%0, %%"REG_d"), %%mm2       \n\t"

                "movd         9(%0, %%"REG_d"), %%mm3       \n\t"

                "punpcklbw               %%mm7, %%mm2       \n\t"

                "punpcklbw               %%mm7, %%mm3       \n\t"

                "pmaddwd                 %%mm6, %%mm0       \n\t"

                "pmaddwd                 %%mm6, %%mm1       \n\t"

                "pmaddwd                 %%mm6, %%mm2       \n\t"

                "pmaddwd                 %%mm6, %%mm3       \n\t"

<cpp:ifndef pos:start="61:1" pos:end="61:21">#<cpp:directive pos:start="61:2" pos:end="61:7">ifndef</cpp:directive> <name pos:start="61:9" pos:end="61:21">FAST_BGR2YV12</name></cpp:ifndef>

                "psrad                      $8, %%mm0       \n\t"

                "psrad                      $8, %%mm1       \n\t"

                "psrad                      $8, %%mm2       \n\t"

                "psrad                      $8, %%mm3       \n\t"

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

                "packssdw                %%mm1, %%mm0       \n\t"

                "packssdw                %%mm3, %%mm2       \n\t"

                "pmaddwd                 %%mm5, %%mm0       \n\t"

                "pmaddwd                 %%mm5, %%mm2       \n\t"

                "packssdw                %%mm2, %%mm0       \n\t"

                "psraw                      $7, %%mm0       \n\t"



                "movd        12(%0, %%"REG_d"), %%mm4       \n\t"

                "movd        15(%0, %%"REG_d"), %%mm1       \n\t"

                "punpcklbw               %%mm7, %%mm4       \n\t"

                "punpcklbw               %%mm7, %%mm1       \n\t"

                "movd        18(%0, %%"REG_d"), %%mm2       \n\t"

                "movd        21(%0, %%"REG_d"), %%mm3       \n\t"

                "punpcklbw               %%mm7, %%mm2       \n\t"

                "punpcklbw               %%mm7, %%mm3       \n\t"

                "pmaddwd                 %%mm6, %%mm4       \n\t"

                "pmaddwd                 %%mm6, %%mm1       \n\t"

                "pmaddwd                 %%mm6, %%mm2       \n\t"

                "pmaddwd                 %%mm6, %%mm3       \n\t"

<cpp:ifndef pos:start="111:1" pos:end="111:21">#<cpp:directive pos:start="111:2" pos:end="111:7">ifndef</cpp:directive> <name pos:start="111:9" pos:end="111:21">FAST_BGR2YV12</name></cpp:ifndef>

                "psrad                      $8, %%mm4       \n\t"

                "psrad                      $8, %%mm1       \n\t"

                "psrad                      $8, %%mm2       \n\t"

                "psrad                      $8, %%mm3       \n\t"

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

                "packssdw                %%mm1, %%mm4       \n\t"

                "packssdw                %%mm3, %%mm2       \n\t"

                "pmaddwd                 %%mm5, %%mm4       \n\t"

                "pmaddwd                 %%mm5, %%mm2       \n\t"

                "add                       $24, %%"REG_d"   \n\t"

                "packssdw                %%mm2, %%mm4       \n\t"

                "psraw                      $7, %%mm4       \n\t"



                "packuswb                %%mm4, %%mm0       \n\t"

                "paddusb "MANGLE(ff_bgr2YOffset)", %%mm0    \n\t"



                MOVNTQ"                  %%mm0, (%1, %%"REG_a") \n\t"

                "add                        $8,      %%"REG_a"  \n\t"

                " js                        1b                  \n\t"

                : : "r" (src+width*3), "r" (ydst+width), "g" ((x86_reg)-width)

                : "%"REG_a, "%"REG_d

            );</asm>

            <expr_stmt pos:start="157:13" pos:end="157:30"><expr pos:start="157:13" pos:end="157:29"><name pos:start="157:13" pos:end="157:16">ydst</name> <operator pos:start="157:18" pos:end="157:19">+=</operator> <name pos:start="157:21" pos:end="157:29">lumStride</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:30"><expr pos:start="159:13" pos:end="159:29"><name pos:start="159:13" pos:end="159:15">src</name>  <operator pos:start="159:18" pos:end="159:19">+=</operator> <name pos:start="159:21" pos:end="159:29">srcStride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="163:9" pos:end="163:27"><expr pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:11">src</name> <operator pos:start="163:13" pos:end="163:14">-=</operator> <name pos:start="163:16" pos:end="163:24">srcStride</name><operator pos:start="163:25" pos:end="163:25">*</operator><literal type="number" pos:start="163:26" pos:end="163:26">2</literal></expr>;</expr_stmt>

        <asm pos:start="165:9" pos:end="459:10">__asm__ <specifier pos:start="165:17" pos:end="165:24">volatile</specifier>(

            "mov                        %4, %%"REG_a"   \n\t"

            "movq       "MANGLE(ff_w1111)", %%mm5       \n\t"

            "movq  "MANGLE(ff_bgr2UCoeff)", %%mm6       \n\t"

            "pxor                    %%mm7, %%mm7       \n\t"

            "lea (%%"REG_a", %%"REG_a", 2), %%"REG_d"   \n\t"

            "add                 %%"REG_d", %%"REG_d"   \n\t"

            ".p2align                    4              \n\t"

            "1:                                         \n\t"

            PREFETCH"    64(%0, %%"REG_d")              \n\t"

            PREFETCH"    64(%1, %%"REG_d")              \n\t"

<cpp:if pos:start="187:1" pos:end="187:56">#<cpp:directive pos:start="187:2" pos:end="187:3">if</cpp:directive> <expr pos:start="187:5" pos:end="187:56"><name pos:start="187:5" pos:end="187:27">COMPILE_TEMPLATE_MMXEXT</name> <operator pos:start="187:29" pos:end="187:30">||</operator> <name pos:start="187:32" pos:end="187:56">COMPILE_TEMPLATE_AMD3DNOW</name></expr></cpp:if>

            "movq          (%0, %%"REG_d"), %%mm0       \n\t"

            "movq          (%1, %%"REG_d"), %%mm1       \n\t"

            "movq         6(%0, %%"REG_d"), %%mm2       \n\t"

            "movq         6(%1, %%"REG_d"), %%mm3       \n\t"

            PAVGB"                   %%mm1, %%mm0       \n\t"

            PAVGB"                   %%mm3, %%mm2       \n\t"

            "movq                    %%mm0, %%mm1       \n\t"

            "movq                    %%mm2, %%mm3       \n\t"

            "psrlq                     $24, %%mm0       \n\t"

            "psrlq                     $24, %%mm2       \n\t"

            PAVGB"                   %%mm1, %%mm0       \n\t"

            PAVGB"                   %%mm3, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm0       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

<cpp:else pos:start="217:1" pos:end="217:5">#<cpp:directive pos:start="217:2" pos:end="217:5">else</cpp:directive></cpp:else>

            "movd          (%0, %%"REG_d"), %%mm0       \n\t"

            "movd          (%1, %%"REG_d"), %%mm1       \n\t"

            "movd         3(%0, %%"REG_d"), %%mm2       \n\t"

            "movd         3(%1, %%"REG_d"), %%mm3       \n\t"

            "punpcklbw               %%mm7, %%mm0       \n\t"

            "punpcklbw               %%mm7, %%mm1       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm3       \n\t"

            "paddw                   %%mm1, %%mm0       \n\t"

            "paddw                   %%mm3, %%mm2       \n\t"

            "paddw                   %%mm2, %%mm0       \n\t"

            "movd         6(%0, %%"REG_d"), %%mm4       \n\t"

            "movd         6(%1, %%"REG_d"), %%mm1       \n\t"

            "movd         9(%0, %%"REG_d"), %%mm2       \n\t"

            "movd         9(%1, %%"REG_d"), %%mm3       \n\t"

            "punpcklbw               %%mm7, %%mm4       \n\t"

            "punpcklbw               %%mm7, %%mm1       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm3       \n\t"

            "paddw                   %%mm1, %%mm4       \n\t"

            "paddw                   %%mm3, %%mm2       \n\t"

            "paddw                   %%mm4, %%mm2       \n\t"

            "psrlw                      $2, %%mm0       \n\t"

            "psrlw                      $2, %%mm2       \n\t"

<cpp:endif pos:start="267:1" pos:end="267:6">#<cpp:directive pos:start="267:2" pos:end="267:6">endif</cpp:directive></cpp:endif>

            "movq  "MANGLE(ff_bgr2VCoeff)", %%mm1       \n\t"

            "movq  "MANGLE(ff_bgr2VCoeff)", %%mm3       \n\t"



            "pmaddwd                 %%mm0, %%mm1       \n\t"

            "pmaddwd                 %%mm2, %%mm3       \n\t"

            "pmaddwd                 %%mm6, %%mm0       \n\t"

            "pmaddwd                 %%mm6, %%mm2       \n\t"

<cpp:ifndef pos:start="283:1" pos:end="283:21">#<cpp:directive pos:start="283:2" pos:end="283:7">ifndef</cpp:directive> <name pos:start="283:9" pos:end="283:21">FAST_BGR2YV12</name></cpp:ifndef>

            "psrad                      $8, %%mm0       \n\t"

            "psrad                      $8, %%mm1       \n\t"

            "psrad                      $8, %%mm2       \n\t"

            "psrad                      $8, %%mm3       \n\t"

<cpp:endif pos:start="293:1" pos:end="293:6">#<cpp:directive pos:start="293:2" pos:end="293:6">endif</cpp:directive></cpp:endif>

            "packssdw                %%mm2, %%mm0       \n\t"

            "packssdw                %%mm3, %%mm1       \n\t"

            "pmaddwd                 %%mm5, %%mm0       \n\t"

            "pmaddwd                 %%mm5, %%mm1       \n\t"

            "packssdw                %%mm1, %%mm0       \n\t" <comment type="line" pos:start="303:63" pos:end="303:76">// V1 V0 U1 U0</comment>

            "psraw                      $7, %%mm0       \n\t"



<cpp:if pos:start="309:1" pos:end="309:56">#<cpp:directive pos:start="309:2" pos:end="309:3">if</cpp:directive> <expr pos:start="309:5" pos:end="309:56"><name pos:start="309:5" pos:end="309:27">COMPILE_TEMPLATE_MMXEXT</name> <operator pos:start="309:29" pos:end="309:30">||</operator> <name pos:start="309:32" pos:end="309:56">COMPILE_TEMPLATE_AMD3DNOW</name></expr></cpp:if>

            "movq        12(%0, %%"REG_d"), %%mm4       \n\t"

            "movq        12(%1, %%"REG_d"), %%mm1       \n\t"

            "movq        18(%0, %%"REG_d"), %%mm2       \n\t"

            "movq        18(%1, %%"REG_d"), %%mm3       \n\t"

            PAVGB"                   %%mm1, %%mm4       \n\t"

            PAVGB"                   %%mm3, %%mm2       \n\t"

            "movq                    %%mm4, %%mm1       \n\t"

            "movq                    %%mm2, %%mm3       \n\t"

            "psrlq                     $24, %%mm4       \n\t"

            "psrlq                     $24, %%mm2       \n\t"

            PAVGB"                   %%mm1, %%mm4       \n\t"

            PAVGB"                   %%mm3, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm4       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

<cpp:else pos:start="339:1" pos:end="339:5">#<cpp:directive pos:start="339:2" pos:end="339:5">else</cpp:directive></cpp:else>

            "movd        12(%0, %%"REG_d"), %%mm4       \n\t"

            "movd        12(%1, %%"REG_d"), %%mm1       \n\t"

            "movd        15(%0, %%"REG_d"), %%mm2       \n\t"

            "movd        15(%1, %%"REG_d"), %%mm3       \n\t"

            "punpcklbw               %%mm7, %%mm4       \n\t"

            "punpcklbw               %%mm7, %%mm1       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm3       \n\t"

            "paddw                   %%mm1, %%mm4       \n\t"

            "paddw                   %%mm3, %%mm2       \n\t"

            "paddw                   %%mm2, %%mm4       \n\t"

            "movd        18(%0, %%"REG_d"), %%mm5       \n\t"

            "movd        18(%1, %%"REG_d"), %%mm1       \n\t"

            "movd        21(%0, %%"REG_d"), %%mm2       \n\t"

            "movd        21(%1, %%"REG_d"), %%mm3       \n\t"

            "punpcklbw               %%mm7, %%mm5       \n\t"

            "punpcklbw               %%mm7, %%mm1       \n\t"

            "punpcklbw               %%mm7, %%mm2       \n\t"

            "punpcklbw               %%mm7, %%mm3       \n\t"

            "paddw                   %%mm1, %%mm5       \n\t"

            "paddw                   %%mm3, %%mm2       \n\t"

            "paddw                   %%mm5, %%mm2       \n\t"

            "movq       "MANGLE(ff_w1111)", %%mm5       \n\t"

            "psrlw                      $2, %%mm4       \n\t"

            "psrlw                      $2, %%mm2       \n\t"

<cpp:endif pos:start="391:1" pos:end="391:6">#<cpp:directive pos:start="391:2" pos:end="391:6">endif</cpp:directive></cpp:endif>

            "movq  "MANGLE(ff_bgr2VCoeff)", %%mm1       \n\t"

            "movq  "MANGLE(ff_bgr2VCoeff)", %%mm3       \n\t"



            "pmaddwd                 %%mm4, %%mm1       \n\t"

            "pmaddwd                 %%mm2, %%mm3       \n\t"

            "pmaddwd                 %%mm6, %%mm4       \n\t"

            "pmaddwd                 %%mm6, %%mm2       \n\t"

<cpp:ifndef pos:start="407:1" pos:end="407:21">#<cpp:directive pos:start="407:2" pos:end="407:7">ifndef</cpp:directive> <name pos:start="407:9" pos:end="407:21">FAST_BGR2YV12</name></cpp:ifndef>

            "psrad                      $8, %%mm4       \n\t"

            "psrad                      $8, %%mm1       \n\t"

            "psrad                      $8, %%mm2       \n\t"

            "psrad                      $8, %%mm3       \n\t"

<cpp:endif pos:start="417:1" pos:end="417:6">#<cpp:directive pos:start="417:2" pos:end="417:6">endif</cpp:directive></cpp:endif>

            "packssdw                %%mm2, %%mm4       \n\t"

            "packssdw                %%mm3, %%mm1       \n\t"

            "pmaddwd                 %%mm5, %%mm4       \n\t"

            "pmaddwd                 %%mm5, %%mm1       \n\t"

            "add                       $24, %%"REG_d"   \n\t"

            "packssdw                %%mm1, %%mm4       \n\t" <comment type="line" pos:start="429:63" pos:end="429:76">// V3 V2 U3 U2</comment>

            "psraw                      $7, %%mm4       \n\t"



            "movq                    %%mm0, %%mm1           \n\t"

            "punpckldq               %%mm4, %%mm0           \n\t"

            "punpckhdq               %%mm4, %%mm1           \n\t"

            "packsswb                %%mm1, %%mm0           \n\t"

            "paddb "MANGLE(ff_bgr2UVOffset)", %%mm0         \n\t"

            "movd                    %%mm0, (%2, %%"REG_a") \n\t"

            "punpckhdq               %%mm0, %%mm0           \n\t"

            "movd                    %%mm0, (%3, %%"REG_a") \n\t"

            "add                        $4, %%"REG_a"       \n\t"

            " js                        1b                  \n\t"

            : : "r" (src+chromWidth*6), "r" (src+srcStride+chromWidth*6), "r" (udst+chromWidth), "r" (vdst+chromWidth), "g" (-chromWidth)

            : "%"REG_a, "%"REG_d

        );</asm>



        <expr_stmt pos:start="463:9" pos:end="463:28"><expr pos:start="463:9" pos:end="463:27"><name pos:start="463:9" pos:end="463:12">udst</name> <operator pos:start="463:14" pos:end="463:15">+=</operator> <name pos:start="463:17" pos:end="463:27">chromStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:28"><expr pos:start="465:9" pos:end="465:27"><name pos:start="465:9" pos:end="465:12">vdst</name> <operator pos:start="465:14" pos:end="465:15">+=</operator> <name pos:start="465:17" pos:end="465:27">chromStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:28"><expr pos:start="467:9" pos:end="467:27"><name pos:start="467:9" pos:end="467:11">src</name>  <operator pos:start="467:14" pos:end="467:15">+=</operator> <name pos:start="467:17" pos:end="467:25">srcStride</name><operator pos:start="467:26" pos:end="467:26">*</operator><literal type="number" pos:start="467:27" pos:end="467:27">2</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <asm pos:start="473:5" pos:end="477:34">__asm__ <specifier pos:start="473:13" pos:end="473:20">volatile</specifier>(EMMS"       \n\t"

                     SFENCE"     \n\t"

                     :::"memory");</asm>



     <expr_stmt pos:start="481:6" pos:end="481:94"><expr pos:start="481:6" pos:end="481:93"><call pos:start="481:6" pos:end="481:93"><name pos:start="481:6" pos:end="481:18">rgb24toyv12_c</name><argument_list pos:start="481:19" pos:end="481:93">(<argument pos:start="481:20" pos:end="481:22"><expr pos:start="481:20" pos:end="481:22"><name pos:start="481:20" pos:end="481:22">src</name></expr></argument>, <argument pos:start="481:25" pos:end="481:28"><expr pos:start="481:25" pos:end="481:28"><name pos:start="481:25" pos:end="481:28">ydst</name></expr></argument>, <argument pos:start="481:31" pos:end="481:34"><expr pos:start="481:31" pos:end="481:34"><name pos:start="481:31" pos:end="481:34">udst</name></expr></argument>, <argument pos:start="481:37" pos:end="481:40"><expr pos:start="481:37" pos:end="481:40"><name pos:start="481:37" pos:end="481:40">vdst</name></expr></argument>, <argument pos:start="481:43" pos:end="481:47"><expr pos:start="481:43" pos:end="481:47"><name pos:start="481:43" pos:end="481:47">width</name></expr></argument>, <argument pos:start="481:50" pos:end="481:57"><expr pos:start="481:50" pos:end="481:57"><name pos:start="481:50" pos:end="481:55">height</name><operator pos:start="481:56" pos:end="481:56">-</operator><name pos:start="481:57" pos:end="481:57">y</name></expr></argument>, <argument pos:start="481:60" pos:end="481:68"><expr pos:start="481:60" pos:end="481:68"><name pos:start="481:60" pos:end="481:68">lumStride</name></expr></argument>, <argument pos:start="481:71" pos:end="481:81"><expr pos:start="481:71" pos:end="481:81"><name pos:start="481:71" pos:end="481:81">chromStride</name></expr></argument>, <argument pos:start="481:84" pos:end="481:92"><expr pos:start="481:84" pos:end="481:92"><name pos:start="481:84" pos:end="481:92">srcStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
