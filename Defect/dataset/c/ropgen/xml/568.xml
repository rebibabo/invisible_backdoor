<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/568.c" pos:tabs="8"><function pos:start="1:1" pos:end="391:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mkv_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="391:1">{<block_content pos:start="5:5" pos:end="389:15">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MatroskaMuxContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">mkv</name> <init pos:start="5:29" pos:end="5:42">= <expr pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:31">s</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">ebml_master</name></type> <name pos:start="9:17" pos:end="9:27">ebml_header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVDictionaryEntry</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:26">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>, <decl pos:start="13:17" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:23">version</name> <init pos:start="13:25" pos:end="13:27">= <expr pos:start="13:27" pos:end="13:27"><literal type="number" pos:start="13:27" pos:end="13:27">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:25">creation_time</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:36"><if pos:start="19:5" pos:end="21:30">if <condition pos:start="19:8" pos:end="19:42">(<expr pos:start="19:9" pos:end="19:41"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:41"><name pos:start="19:10" pos:end="19:15">strcmp</name><argument_list pos:start="19:16" pos:end="19:41">(<argument pos:start="19:17" pos:end="19:32"><expr pos:start="19:17" pos:end="19:32"><name pos:start="19:17" pos:end="19:32"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">oformat</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">name</name></name></expr></argument>, <argument pos:start="19:35" pos:end="19:40"><expr pos:start="19:35" pos:end="19:40"><literal type="string" pos:start="19:35" pos:end="19:40">"webm"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:30"><block_content pos:start="21:9" pos:end="21:30">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">mkv</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">mode</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:29">MODE_WEBM</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="23:5" pos:end="25:36">else<block type="pseudo" pos:start="25:9" pos:end="25:36"><block_content pos:start="25:9" pos:end="25:36">

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:11">mkv</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:17">mode</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:35">MODE_MATROSKAv2</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:20"><if pos:start="29:5" pos:end="35:20">if <condition pos:start="29:8" pos:end="33:56">(<expr pos:start="29:9" pos:end="33:55"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">mkv</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">mode</name></name> <operator pos:start="29:19" pos:end="29:20">!=</operator> <name pos:start="29:22" pos:end="29:30">MODE_WEBM</name> <operator pos:start="29:32" pos:end="29:33">||</operator>

        <call pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:19">av_dict_get</name><argument_list pos:start="31:20" pos:end="31:56">(<argument pos:start="31:21" pos:end="31:31"><expr pos:start="31:21" pos:end="31:31"><name pos:start="31:21" pos:end="31:31"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:31">metadata</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:46"><expr pos:start="31:34" pos:end="31:46"><literal type="string" pos:start="31:34" pos:end="31:46">"stereo_mode"</literal></expr></argument>, <argument pos:start="31:49" pos:end="31:52"><expr pos:start="31:49" pos:end="31:52"><name pos:start="31:49" pos:end="31:52">NULL</name></expr></argument>, <argument pos:start="31:55" pos:end="31:55"><expr pos:start="31:55" pos:end="31:55"><literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="31:58" pos:end="31:59">||</operator>

        <call pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:19">av_dict_get</name><argument_list pos:start="33:20" pos:end="33:55">(<argument pos:start="33:21" pos:end="33:31"><expr pos:start="33:21" pos:end="33:31"><name pos:start="33:21" pos:end="33:31"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:31">metadata</name></name></expr></argument>, <argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><literal type="string" pos:start="33:34" pos:end="33:45">"alpha_mode"</literal></expr></argument>, <argument pos:start="33:48" pos:end="33:51"><expr pos:start="33:48" pos:end="33:51"><name pos:start="33:48" pos:end="33:51">NULL</name></expr></argument>, <argument pos:start="33:54" pos:end="33:54"><expr pos:start="33:54" pos:end="33:54"><literal type="number" pos:start="33:54" pos:end="33:54">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:20"><block_content pos:start="35:9" pos:end="35:20">

        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:15">version</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="39:5" pos:end="71:5">for <control pos:start="39:9" pos:end="39:39">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:33">nb_streams</name></name></expr>;</condition> <incr pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:36">i</name><operator pos:start="39:37" pos:end="39:38">++</operator></expr></incr>)</control> <block pos:start="39:41" pos:end="71:5">{<block_content pos:start="41:9" pos:end="69:24">

        <if_stmt pos:start="41:9" pos:end="61:9"><if pos:start="41:9" pos:end="61:9">if <condition pos:start="41:12" pos:end="51:66">(<expr pos:start="41:13" pos:end="51:65"><name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">streams</name><index pos:start="41:23" pos:end="41:25">[<expr pos:start="41:24" pos:end="41:24"><name pos:start="41:24" pos:end="41:24">i</name></expr>]</index></name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:45"><name pos:start="41:28" pos:end="41:35">codecpar</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:45">codec_id</name></name> <operator pos:start="41:47" pos:end="41:48">==</operator> <name pos:start="41:50" pos:end="41:67">AV_CODEC_ID_ATRAC3</name> <operator pos:start="41:69" pos:end="41:70">||</operator>

            <name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">streams</name><index pos:start="43:23" pos:end="43:25">[<expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">i</name></expr>]</index></name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:45"><name pos:start="43:28" pos:end="43:35">codecpar</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:45">codec_id</name></name> <operator pos:start="43:47" pos:end="43:48">==</operator> <name pos:start="43:50" pos:end="43:65">AV_CODEC_ID_COOK</name> <operator pos:start="43:67" pos:end="43:68">||</operator>

            <name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">streams</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">i</name></expr>]</index></name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:45"><name pos:start="45:28" pos:end="45:35">codecpar</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:45">codec_id</name></name> <operator pos:start="45:47" pos:end="45:48">==</operator> <name pos:start="45:50" pos:end="45:67">AV_CODEC_ID_RA_288</name> <operator pos:start="45:69" pos:end="45:70">||</operator>

            <name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">streams</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>]</index></name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:45"><name pos:start="47:28" pos:end="47:35">codecpar</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:45">codec_id</name></name> <operator pos:start="47:47" pos:end="47:48">==</operator> <name pos:start="47:50" pos:end="47:65">AV_CODEC_ID_SIPR</name> <operator pos:start="47:67" pos:end="47:68">||</operator>

            <name pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">streams</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">i</name></expr>]</index></name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:45"><name pos:start="49:28" pos:end="49:35">codecpar</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:45">codec_id</name></name> <operator pos:start="49:47" pos:end="49:48">==</operator> <name pos:start="49:50" pos:end="49:65">AV_CODEC_ID_RV10</name> <operator pos:start="49:67" pos:end="49:68">||</operator>

            <name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">streams</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">i</name></expr>]</index></name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:45"><name pos:start="51:28" pos:end="51:35">codecpar</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:45">codec_id</name></name> <operator pos:start="51:47" pos:end="51:48">==</operator> <name pos:start="51:50" pos:end="51:65">AV_CODEC_ID_RV20</name></expr>)</condition> <block pos:start="51:68" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:40">

            <expr_stmt pos:start="53:13" pos:end="57:72"><expr pos:start="53:13" pos:end="57:71"><call pos:start="53:13" pos:end="57:71"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="57:71">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">s</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="55:20" pos:end="55:72"><expr pos:start="55:20" pos:end="55:72"><literal type="string" pos:start="55:20" pos:end="55:72">"The Matroska muxer does not yet support muxing %s\n"</literal></expr></argument>,

                   <argument pos:start="57:20" pos:end="57:70"><expr pos:start="57:20" pos:end="57:70"><call pos:start="57:20" pos:end="57:70"><name pos:start="57:20" pos:end="57:35">avcodec_get_name</name><argument_list pos:start="57:36" pos:end="57:70">(<argument pos:start="57:37" pos:end="57:69"><expr pos:start="57:37" pos:end="57:69"><name pos:start="57:37" pos:end="57:49"><name pos:start="57:37" pos:end="57:37">s</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:46">streams</name><index pos:start="57:47" pos:end="57:49">[<expr pos:start="57:48" pos:end="57:48"><name pos:start="57:48" pos:end="57:48">i</name></expr>]</index></name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:69"><name pos:start="57:52" pos:end="57:59">codecpar</name><operator pos:start="57:60" pos:end="57:61">-&gt;</operator><name pos:start="57:62" pos:end="57:69">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:40">return <expr pos:start="59:20" pos:end="59:39"><name pos:start="59:20" pos:end="59:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="69:24"><if pos:start="63:9" pos:end="69:24">if <condition pos:start="63:12" pos:end="67:72">(<expr pos:start="63:13" pos:end="67:71"><name pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:22">streams</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">i</name></expr>]</index></name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:45"><name pos:start="63:28" pos:end="63:35">codecpar</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:45">codec_id</name></name> <operator pos:start="63:47" pos:end="63:48">==</operator> <name pos:start="63:50" pos:end="63:65">AV_CODEC_ID_OPUS</name> <operator pos:start="63:67" pos:end="63:68">||</operator>

            <call pos:start="65:13" pos:end="65:72"><name pos:start="65:13" pos:end="65:23">av_dict_get</name><argument_list pos:start="65:24" pos:end="65:72">(<argument pos:start="65:25" pos:end="65:47"><expr pos:start="65:25" pos:end="65:47"><name pos:start="65:25" pos:end="65:37"><name pos:start="65:25" pos:end="65:25">s</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:34">streams</name><index pos:start="65:35" pos:end="65:37">[<expr pos:start="65:36" pos:end="65:36"><name pos:start="65:36" pos:end="65:36">i</name></expr>]</index></name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:47">metadata</name></expr></argument>, <argument pos:start="65:50" pos:end="65:62"><expr pos:start="65:50" pos:end="65:62"><literal type="string" pos:start="65:50" pos:end="65:62">"stereo_mode"</literal></expr></argument>, <argument pos:start="65:65" pos:end="65:68"><expr pos:start="65:65" pos:end="65:68"><name pos:start="65:65" pos:end="65:68">NULL</name></expr></argument>, <argument pos:start="65:71" pos:end="65:71"><expr pos:start="65:71" pos:end="65:71"><literal type="number" pos:start="65:71" pos:end="65:71">0</literal></expr></argument>)</argument_list></call> <operator pos:start="65:74" pos:end="65:75">||</operator>

            <call pos:start="67:13" pos:end="67:71"><name pos:start="67:13" pos:end="67:23">av_dict_get</name><argument_list pos:start="67:24" pos:end="67:71">(<argument pos:start="67:25" pos:end="67:47"><expr pos:start="67:25" pos:end="67:47"><name pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:34">streams</name><index pos:start="67:35" pos:end="67:37">[<expr pos:start="67:36" pos:end="67:36"><name pos:start="67:36" pos:end="67:36">i</name></expr>]</index></name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:47">metadata</name></expr></argument>, <argument pos:start="67:50" pos:end="67:61"><expr pos:start="67:50" pos:end="67:61"><literal type="string" pos:start="67:50" pos:end="67:61">"alpha_mode"</literal></expr></argument>, <argument pos:start="67:64" pos:end="67:67"><expr pos:start="67:64" pos:end="67:67"><name pos:start="67:64" pos:end="67:67">NULL</name></expr></argument>, <argument pos:start="67:70" pos:end="67:70"><expr pos:start="67:70" pos:end="67:70"><literal type="number" pos:start="67:70" pos:end="67:70">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:24"><block_content pos:start="69:13" pos:end="69:24">

            <expr_stmt pos:start="69:13" pos:end="69:24"><expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:19">version</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <literal type="number" pos:start="69:23" pos:end="69:23">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="75:5" pos:end="75:72"><expr pos:start="75:5" pos:end="75:71"><name pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:7">mkv</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:15">tracks</name></name> <operator pos:start="75:17" pos:end="75:17">=</operator> <call pos:start="75:19" pos:end="75:71"><name pos:start="75:19" pos:end="75:34">av_mallocz_array</name><argument_list pos:start="75:35" pos:end="75:71">(<argument pos:start="75:36" pos:end="75:48"><expr pos:start="75:36" pos:end="75:48"><name pos:start="75:36" pos:end="75:48"><name pos:start="75:36" pos:end="75:36">s</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:48">nb_streams</name></name></expr></argument>, <argument pos:start="75:51" pos:end="75:70"><expr pos:start="75:51" pos:end="75:70"><sizeof pos:start="75:51" pos:end="75:70">sizeof<argument_list pos:start="75:57" pos:end="75:70">(<argument pos:start="75:58" pos:end="75:69"><expr pos:start="75:58" pos:end="75:69"><operator pos:start="75:58" pos:end="75:58">*</operator><name pos:start="75:59" pos:end="75:69"><name pos:start="75:59" pos:end="75:61">mkv</name><operator pos:start="75:62" pos:end="75:63">-&gt;</operator><name pos:start="75:64" pos:end="75:69">tracks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:21">(<expr pos:start="77:9" pos:end="77:20"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:20"><name pos:start="77:10" pos:end="77:12">mkv</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:20">tracks</name></name></expr>)</condition> <block pos:start="77:23" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:18">

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:29"><name pos:start="79:15" pos:end="79:21">AVERROR</name><argument_list pos:start="79:22" pos:end="79:29">(<argument pos:start="79:23" pos:end="79:28"><expr pos:start="79:23" pos:end="79:28"><name pos:start="79:23" pos:end="79:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:18">goto <name pos:start="81:14" pos:end="81:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:59"><expr pos:start="85:5" pos:end="85:58"><name pos:start="85:5" pos:end="85:15">ebml_header</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:58"><name pos:start="85:19" pos:end="85:35">start_ebml_master</name><argument_list pos:start="85:36" pos:end="85:58">(<argument pos:start="85:37" pos:end="85:38"><expr pos:start="85:37" pos:end="85:38"><name pos:start="85:37" pos:end="85:38">pb</name></expr></argument>, <argument pos:start="85:41" pos:end="85:54"><expr pos:start="85:41" pos:end="85:54"><name pos:start="85:41" pos:end="85:54">EBML_ID_HEADER</name></expr></argument>, <argument pos:start="85:57" pos:end="85:57"><expr pos:start="85:57" pos:end="85:57"><literal type="number" pos:start="85:57" pos:end="85:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:67"><expr pos:start="87:5" pos:end="87:66"><call pos:start="87:5" pos:end="87:66"><name pos:start="87:5" pos:end="87:17">put_ebml_uint</name>   <argument_list pos:start="87:21" pos:end="87:66">(<argument pos:start="87:22" pos:end="87:23"><expr pos:start="87:22" pos:end="87:23"><name pos:start="87:22" pos:end="87:23">pb</name></expr></argument>, <argument pos:start="87:26" pos:end="87:44"><expr pos:start="87:26" pos:end="87:44"><name pos:start="87:26" pos:end="87:44">EBML_ID_EBMLVERSION</name></expr></argument>        ,           <argument pos:start="87:65" pos:end="87:65"><expr pos:start="87:65" pos:end="87:65"><literal type="number" pos:start="87:65" pos:end="87:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:67"><expr pos:start="89:5" pos:end="89:66"><call pos:start="89:5" pos:end="89:66"><name pos:start="89:5" pos:end="89:17">put_ebml_uint</name>   <argument_list pos:start="89:21" pos:end="89:66">(<argument pos:start="89:22" pos:end="89:23"><expr pos:start="89:22" pos:end="89:23"><name pos:start="89:22" pos:end="89:23">pb</name></expr></argument>, <argument pos:start="89:26" pos:end="89:48"><expr pos:start="89:26" pos:end="89:48"><name pos:start="89:26" pos:end="89:48">EBML_ID_EBMLREADVERSION</name></expr></argument>    ,           <argument pos:start="89:65" pos:end="89:65"><expr pos:start="89:65" pos:end="89:65"><literal type="number" pos:start="89:65" pos:end="89:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:67"><expr pos:start="91:5" pos:end="91:66"><call pos:start="91:5" pos:end="91:66"><name pos:start="91:5" pos:end="91:17">put_ebml_uint</name>   <argument_list pos:start="91:21" pos:end="91:66">(<argument pos:start="91:22" pos:end="91:23"><expr pos:start="91:22" pos:end="91:23"><name pos:start="91:22" pos:end="91:23">pb</name></expr></argument>, <argument pos:start="91:26" pos:end="91:48"><expr pos:start="91:26" pos:end="91:48"><name pos:start="91:26" pos:end="91:48">EBML_ID_EBMLMAXIDLENGTH</name></expr></argument>    ,           <argument pos:start="91:65" pos:end="91:65"><expr pos:start="91:65" pos:end="91:65"><literal type="number" pos:start="91:65" pos:end="91:65">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:67"><expr pos:start="93:5" pos:end="93:66"><call pos:start="93:5" pos:end="93:66"><name pos:start="93:5" pos:end="93:17">put_ebml_uint</name>   <argument_list pos:start="93:21" pos:end="93:66">(<argument pos:start="93:22" pos:end="93:23"><expr pos:start="93:22" pos:end="93:23"><name pos:start="93:22" pos:end="93:23">pb</name></expr></argument>, <argument pos:start="93:26" pos:end="93:50"><expr pos:start="93:26" pos:end="93:50"><name pos:start="93:26" pos:end="93:50">EBML_ID_EBMLMAXSIZELENGTH</name></expr></argument>  ,           <argument pos:start="93:65" pos:end="93:65"><expr pos:start="93:65" pos:end="93:65"><literal type="number" pos:start="93:65" pos:end="93:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:72"><expr pos:start="95:5" pos:end="95:71"><call pos:start="95:5" pos:end="95:71"><name pos:start="95:5" pos:end="95:19">put_ebml_string</name> <argument_list pos:start="95:21" pos:end="95:71">(<argument pos:start="95:22" pos:end="95:23"><expr pos:start="95:22" pos:end="95:23"><name pos:start="95:22" pos:end="95:23">pb</name></expr></argument>, <argument pos:start="95:26" pos:end="95:40"><expr pos:start="95:26" pos:end="95:40"><name pos:start="95:26" pos:end="95:40">EBML_ID_DOCTYPE</name></expr></argument>            , <argument pos:start="95:55" pos:end="95:70"><expr pos:start="95:55" pos:end="95:70"><name pos:start="95:55" pos:end="95:70"><name pos:start="95:55" pos:end="95:55">s</name><operator pos:start="95:56" pos:end="95:57">-&gt;</operator><name pos:start="95:58" pos:end="95:64">oformat</name><operator pos:start="95:65" pos:end="95:66">-&gt;</operator><name pos:start="95:67" pos:end="95:70">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:67"><expr pos:start="97:5" pos:end="97:66"><call pos:start="97:5" pos:end="97:66"><name pos:start="97:5" pos:end="97:17">put_ebml_uint</name>   <argument_list pos:start="97:21" pos:end="97:66">(<argument pos:start="97:22" pos:end="97:23"><expr pos:start="97:22" pos:end="97:23"><name pos:start="97:22" pos:end="97:23">pb</name></expr></argument>, <argument pos:start="97:26" pos:end="97:47"><expr pos:start="97:26" pos:end="97:47"><name pos:start="97:26" pos:end="97:47">EBML_ID_DOCTYPEVERSION</name></expr></argument>     ,     <argument pos:start="97:59" pos:end="97:65"><expr pos:start="97:59" pos:end="97:65"><name pos:start="97:59" pos:end="97:65">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:67"><expr pos:start="99:5" pos:end="99:66"><call pos:start="99:5" pos:end="99:66"><name pos:start="99:5" pos:end="99:17">put_ebml_uint</name>   <argument_list pos:start="99:21" pos:end="99:66">(<argument pos:start="99:22" pos:end="99:23"><expr pos:start="99:22" pos:end="99:23"><name pos:start="99:22" pos:end="99:23">pb</name></expr></argument>, <argument pos:start="99:26" pos:end="99:51"><expr pos:start="99:26" pos:end="99:51"><name pos:start="99:26" pos:end="99:51">EBML_ID_DOCTYPEREADVERSION</name></expr></argument> ,           <argument pos:start="99:65" pos:end="99:65"><expr pos:start="99:65" pos:end="99:65"><literal type="number" pos:start="99:65" pos:end="99:65">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:37"><expr pos:start="101:5" pos:end="101:36"><call pos:start="101:5" pos:end="101:36"><name pos:start="101:5" pos:end="101:19">end_ebml_master</name><argument_list pos:start="101:20" pos:end="101:36">(<argument pos:start="101:21" pos:end="101:22"><expr pos:start="101:21" pos:end="101:22"><name pos:start="101:21" pos:end="101:22">pb</name></expr></argument>, <argument pos:start="101:25" pos:end="101:35"><expr pos:start="101:25" pos:end="101:35"><name pos:start="101:25" pos:end="101:35">ebml_header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:65"><expr pos:start="105:5" pos:end="105:64"><name pos:start="105:5" pos:end="105:16"><name pos:start="105:5" pos:end="105:7">mkv</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:16">segment</name></name> <operator pos:start="105:18" pos:end="105:18">=</operator> <call pos:start="105:20" pos:end="105:64"><name pos:start="105:20" pos:end="105:36">start_ebml_master</name><argument_list pos:start="105:37" pos:end="105:64">(<argument pos:start="105:38" pos:end="105:39"><expr pos:start="105:38" pos:end="105:39"><name pos:start="105:38" pos:end="105:39">pb</name></expr></argument>, <argument pos:start="105:42" pos:end="105:60"><expr pos:start="105:42" pos:end="105:60"><name pos:start="105:42" pos:end="105:60">MATROSKA_ID_SEGMENT</name></expr></argument>, <argument pos:start="105:63" pos:end="105:63"><expr pos:start="105:63" pos:end="105:63"><literal type="number" pos:start="105:63" pos:end="105:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:40"><expr pos:start="107:5" pos:end="107:39"><name pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:7">mkv</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:23">segment_offset</name></name> <operator pos:start="107:25" pos:end="107:25">=</operator> <call pos:start="107:27" pos:end="107:39"><name pos:start="107:27" pos:end="107:35">avio_tell</name><argument_list pos:start="107:36" pos:end="107:39">(<argument pos:start="107:37" pos:end="107:38"><expr pos:start="107:37" pos:end="107:38"><name pos:start="107:37" pos:end="107:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="111:5" pos:end="111:74">// we write 2 seek heads - one at the end of the file to point to each</comment>

    <comment type="line" pos:start="113:5" pos:end="113:72">// cluster, and one at the beginning to point to all other level one</comment>

    <comment type="line" pos:start="115:5" pos:end="115:71">// elements (including the seek head at the end of the file), which</comment>

    <comment type="line" pos:start="117:5" pos:end="117:69">// isn't more than 10 elements if we only write one of each other</comment>

    <comment type="line" pos:start="119:5" pos:end="119:40">// currently defined level 1 element</comment>

    <expr_stmt pos:start="121:5" pos:end="121:76"><expr pos:start="121:5" pos:end="121:75"><name pos:start="121:5" pos:end="121:22"><name pos:start="121:5" pos:end="121:7">mkv</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:22">main_seekhead</name></name>    <operator pos:start="121:27" pos:end="121:27">=</operator> <call pos:start="121:29" pos:end="121:75"><name pos:start="121:29" pos:end="121:46">mkv_start_seekhead</name><argument_list pos:start="121:47" pos:end="121:75">(<argument pos:start="121:48" pos:end="121:49"><expr pos:start="121:48" pos:end="121:49"><name pos:start="121:48" pos:end="121:49">pb</name></expr></argument>, <argument pos:start="121:52" pos:end="121:70"><expr pos:start="121:52" pos:end="121:70"><name pos:start="121:52" pos:end="121:70"><name pos:start="121:52" pos:end="121:54">mkv</name><operator pos:start="121:55" pos:end="121:56">-&gt;</operator><name pos:start="121:57" pos:end="121:70">segment_offset</name></name></expr></argument>, <argument pos:start="121:73" pos:end="121:74"><expr pos:start="121:73" pos:end="121:74"><literal type="number" pos:start="121:73" pos:end="121:74">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="129:5"><if pos:start="123:5" pos:end="129:5">if <condition pos:start="123:8" pos:end="123:28">(<expr pos:start="123:9" pos:end="123:27"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:27"><name pos:start="123:10" pos:end="123:12">mkv</name><operator pos:start="123:13" pos:end="123:14">-&gt;</operator><name pos:start="123:15" pos:end="123:27">main_seekhead</name></name></expr>)</condition> <block pos:start="123:30" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:18">

        <expr_stmt pos:start="125:9" pos:end="125:30"><expr pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:11">ret</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="125:29"><name pos:start="125:15" pos:end="125:21">AVERROR</name><argument_list pos:start="125:22" pos:end="125:29">(<argument pos:start="125:23" pos:end="125:28"><expr pos:start="125:23" pos:end="125:28"><name pos:start="125:23" pos:end="125:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="127:9" pos:end="127:18">goto <name pos:start="127:14" pos:end="127:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:86"><expr pos:start="133:5" pos:end="133:85"><name pos:start="133:5" pos:end="133:7">ret</name> <operator pos:start="133:9" pos:end="133:9">=</operator> <call pos:start="133:11" pos:end="133:85"><name pos:start="133:11" pos:end="133:32">mkv_add_seekhead_entry</name><argument_list pos:start="133:33" pos:end="133:85">(<argument pos:start="133:34" pos:end="133:51"><expr pos:start="133:34" pos:end="133:51"><name pos:start="133:34" pos:end="133:51"><name pos:start="133:34" pos:end="133:36">mkv</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:51">main_seekhead</name></name></expr></argument>, <argument pos:start="133:54" pos:end="133:69"><expr pos:start="133:54" pos:end="133:69"><name pos:start="133:54" pos:end="133:69">MATROSKA_ID_INFO</name></expr></argument>, <argument pos:start="133:72" pos:end="133:84"><expr pos:start="133:72" pos:end="133:84"><call pos:start="133:72" pos:end="133:84"><name pos:start="133:72" pos:end="133:80">avio_tell</name><argument_list pos:start="133:81" pos:end="133:84">(<argument pos:start="133:82" pos:end="133:83"><expr pos:start="133:82" pos:end="133:83"><name pos:start="133:82" pos:end="133:83">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="135:27"><if pos:start="135:5" pos:end="135:27">if <condition pos:start="135:8" pos:end="135:16">(<expr pos:start="135:9" pos:end="135:15"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">&lt;</operator> <literal type="number" pos:start="135:15" pos:end="135:15">0</literal></expr>)</condition><block type="pseudo" pos:start="135:18" pos:end="135:27"><block_content pos:start="135:18" pos:end="135:27"> <goto pos:start="135:18" pos:end="135:27">goto <name pos:start="135:23" pos:end="135:26">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:91"><expr pos:start="139:5" pos:end="139:90"><name pos:start="139:5" pos:end="139:7">ret</name> <operator pos:start="139:9" pos:end="139:9">=</operator> <call pos:start="139:11" pos:end="139:90"><name pos:start="139:11" pos:end="139:33">start_ebml_master_crc32</name><argument_list pos:start="139:34" pos:end="139:90">(<argument pos:start="139:35" pos:end="139:36"><expr pos:start="139:35" pos:end="139:36"><name pos:start="139:35" pos:end="139:36">pb</name></expr></argument>, <argument pos:start="139:39" pos:end="139:51"><expr pos:start="139:39" pos:end="139:51"><operator pos:start="139:39" pos:end="139:39">&amp;</operator><name pos:start="139:40" pos:end="139:51"><name pos:start="139:40" pos:end="139:42">mkv</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:51">info_bc</name></name></expr></argument>, <argument pos:start="139:54" pos:end="139:56"><expr pos:start="139:54" pos:end="139:56"><name pos:start="139:54" pos:end="139:56">mkv</name></expr></argument>, <argument pos:start="139:59" pos:end="139:68"><expr pos:start="139:59" pos:end="139:68"><operator pos:start="139:59" pos:end="139:59">&amp;</operator><name pos:start="139:60" pos:end="139:68"><name pos:start="139:60" pos:end="139:62">mkv</name><operator pos:start="139:63" pos:end="139:64">-&gt;</operator><name pos:start="139:65" pos:end="139:68">info</name></name></expr></argument>, <argument pos:start="139:71" pos:end="139:86"><expr pos:start="139:71" pos:end="139:86"><name pos:start="139:71" pos:end="139:86">MATROSKA_ID_INFO</name></expr></argument>, <argument pos:start="139:89" pos:end="139:89"><expr pos:start="139:89" pos:end="139:89"><literal type="number" pos:start="139:89" pos:end="139:89">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="143:19"><if pos:start="141:5" pos:end="143:19">if <condition pos:start="141:8" pos:end="141:16">(<expr pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">&lt;</operator> <literal type="number" pos:start="141:15" pos:end="141:15">0</literal></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:19"><block_content pos:start="143:9" pos:end="143:19">

        <return pos:start="143:9" pos:end="143:19">return <expr pos:start="143:16" pos:end="143:18"><name pos:start="143:16" pos:end="143:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:22"><expr pos:start="145:5" pos:end="145:21"><name pos:start="145:5" pos:end="145:6">pb</name> <operator pos:start="145:8" pos:end="145:8">=</operator> <name pos:start="145:10" pos:end="145:21"><name pos:start="145:10" pos:end="145:12">mkv</name><operator pos:start="145:13" pos:end="145:14">-&gt;</operator><name pos:start="145:15" pos:end="145:21">info_bc</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:58"><expr pos:start="149:5" pos:end="149:57"><call pos:start="149:5" pos:end="149:57"><name pos:start="149:5" pos:end="149:17">put_ebml_uint</name><argument_list pos:start="149:18" pos:end="149:57">(<argument pos:start="149:19" pos:end="149:20"><expr pos:start="149:19" pos:end="149:20"><name pos:start="149:19" pos:end="149:20">pb</name></expr></argument>, <argument pos:start="149:23" pos:end="149:47"><expr pos:start="149:23" pos:end="149:47"><name pos:start="149:23" pos:end="149:47">MATROSKA_ID_TIMECODESCALE</name></expr></argument>, <argument pos:start="149:50" pos:end="149:56"><expr pos:start="149:50" pos:end="149:56"><literal type="number" pos:start="149:50" pos:end="149:56">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="153:59"><if pos:start="151:5" pos:end="153:59">if <condition pos:start="151:8" pos:end="151:59">(<expr pos:start="151:9" pos:end="151:58"><operator pos:start="151:9" pos:end="151:9">(</operator><name pos:start="151:10" pos:end="151:12">tag</name> <operator pos:start="151:14" pos:end="151:14">=</operator> <call pos:start="151:16" pos:end="151:57"><name pos:start="151:16" pos:end="151:26">av_dict_get</name><argument_list pos:start="151:27" pos:end="151:57">(<argument pos:start="151:28" pos:end="151:38"><expr pos:start="151:28" pos:end="151:38"><name pos:start="151:28" pos:end="151:38"><name pos:start="151:28" pos:end="151:28">s</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:38">metadata</name></name></expr></argument>, <argument pos:start="151:41" pos:end="151:47"><expr pos:start="151:41" pos:end="151:47"><literal type="string" pos:start="151:41" pos:end="151:47">"title"</literal></expr></argument>, <argument pos:start="151:50" pos:end="151:53"><expr pos:start="151:50" pos:end="151:53"><name pos:start="151:50" pos:end="151:53">NULL</name></expr></argument>, <argument pos:start="151:56" pos:end="151:56"><expr pos:start="151:56" pos:end="151:56"><literal type="number" pos:start="151:56" pos:end="151:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="151:58" pos:end="151:58">)</operator></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:59"><block_content pos:start="153:9" pos:end="153:59">

        <expr_stmt pos:start="153:9" pos:end="153:59"><expr pos:start="153:9" pos:end="153:58"><call pos:start="153:9" pos:end="153:58"><name pos:start="153:9" pos:end="153:23">put_ebml_string</name><argument_list pos:start="153:24" pos:end="153:58">(<argument pos:start="153:25" pos:end="153:26"><expr pos:start="153:25" pos:end="153:26"><name pos:start="153:25" pos:end="153:26">pb</name></expr></argument>, <argument pos:start="153:29" pos:end="153:45"><expr pos:start="153:29" pos:end="153:45"><name pos:start="153:29" pos:end="153:45">MATROSKA_ID_TITLE</name></expr></argument>, <argument pos:start="153:48" pos:end="153:57"><expr pos:start="153:48" pos:end="153:57"><name pos:start="153:48" pos:end="153:57"><name pos:start="153:48" pos:end="153:50">tag</name><operator pos:start="153:51" pos:end="153:52">-&gt;</operator><name pos:start="153:53" pos:end="153:57">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="155:5" pos:end="199:5"><if pos:start="155:5" pos:end="191:5">if <condition pos:start="155:8" pos:end="155:42">(<expr pos:start="155:9" pos:end="155:41"><operator pos:start="155:9" pos:end="155:9">!</operator><operator pos:start="155:10" pos:end="155:10">(</operator><name pos:start="155:11" pos:end="155:18"><name pos:start="155:11" pos:end="155:11">s</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:18">flags</name></name> <operator pos:start="155:20" pos:end="155:20">&amp;</operator> <name pos:start="155:22" pos:end="155:40">AVFMT_FLAG_BITEXACT</name><operator pos:start="155:41" pos:end="155:41">)</operator></expr>)</condition> <block pos:start="155:44" pos:end="191:5">{<block_content pos:start="157:9" pos:end="189:9">

        <expr_stmt pos:start="157:9" pos:end="157:70"><expr pos:start="157:9" pos:end="157:69"><call pos:start="157:9" pos:end="157:69"><name pos:start="157:9" pos:end="157:23">put_ebml_string</name><argument_list pos:start="157:24" pos:end="157:69">(<argument pos:start="157:25" pos:end="157:26"><expr pos:start="157:25" pos:end="157:26"><name pos:start="157:25" pos:end="157:26">pb</name></expr></argument>, <argument pos:start="157:29" pos:end="157:49"><expr pos:start="157:29" pos:end="157:49"><name pos:start="157:29" pos:end="157:49">MATROSKA_ID_MUXINGAPP</name></expr></argument>, <argument pos:start="157:52" pos:end="157:68"><expr pos:start="157:52" pos:end="157:68"><name pos:start="157:52" pos:end="157:68">LIBAVFORMAT_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="165:75"><if pos:start="159:9" pos:end="161:68">if <condition pos:start="159:12" pos:end="159:71">(<expr pos:start="159:13" pos:end="159:70"><operator pos:start="159:13" pos:end="159:13">(</operator><name pos:start="159:14" pos:end="159:16">tag</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <call pos:start="159:20" pos:end="159:69"><name pos:start="159:20" pos:end="159:30">av_dict_get</name><argument_list pos:start="159:31" pos:end="159:69">(<argument pos:start="159:32" pos:end="159:42"><expr pos:start="159:32" pos:end="159:42"><name pos:start="159:32" pos:end="159:42"><name pos:start="159:32" pos:end="159:32">s</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:42">metadata</name></name></expr></argument>, <argument pos:start="159:45" pos:end="159:59"><expr pos:start="159:45" pos:end="159:59"><literal type="string" pos:start="159:45" pos:end="159:59">"encoding_tool"</literal></expr></argument>, <argument pos:start="159:62" pos:end="159:65"><expr pos:start="159:62" pos:end="159:65"><name pos:start="159:62" pos:end="159:65">NULL</name></expr></argument>, <argument pos:start="159:68" pos:end="159:68"><expr pos:start="159:68" pos:end="159:68"><literal type="number" pos:start="159:68" pos:end="159:68">0</literal></expr></argument>)</argument_list></call><operator pos:start="159:70" pos:end="159:70">)</operator></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:68"><block_content pos:start="161:13" pos:end="161:68">

            <expr_stmt pos:start="161:13" pos:end="161:68"><expr pos:start="161:13" pos:end="161:67"><call pos:start="161:13" pos:end="161:67"><name pos:start="161:13" pos:end="161:27">put_ebml_string</name><argument_list pos:start="161:28" pos:end="161:67">(<argument pos:start="161:29" pos:end="161:30"><expr pos:start="161:29" pos:end="161:30"><name pos:start="161:29" pos:end="161:30">pb</name></expr></argument>, <argument pos:start="161:33" pos:end="161:54"><expr pos:start="161:33" pos:end="161:54"><name pos:start="161:33" pos:end="161:54">MATROSKA_ID_WRITINGAPP</name></expr></argument>, <argument pos:start="161:57" pos:end="161:66"><expr pos:start="161:57" pos:end="161:66"><name pos:start="161:57" pos:end="161:66"><name pos:start="161:57" pos:end="161:59">tag</name><operator pos:start="161:60" pos:end="161:61">-&gt;</operator><name pos:start="161:62" pos:end="161:66">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="163:9" pos:end="165:75">else<block type="pseudo" pos:start="165:13" pos:end="165:75"><block_content pos:start="165:13" pos:end="165:75">

            <expr_stmt pos:start="165:13" pos:end="165:75"><expr pos:start="165:13" pos:end="165:74"><call pos:start="165:13" pos:end="165:74"><name pos:start="165:13" pos:end="165:27">put_ebml_string</name><argument_list pos:start="165:28" pos:end="165:74">(<argument pos:start="165:29" pos:end="165:30"><expr pos:start="165:29" pos:end="165:30"><name pos:start="165:29" pos:end="165:30">pb</name></expr></argument>, <argument pos:start="165:33" pos:end="165:54"><expr pos:start="165:33" pos:end="165:54"><name pos:start="165:33" pos:end="165:54">MATROSKA_ID_WRITINGAPP</name></expr></argument>, <argument pos:start="165:57" pos:end="165:73"><expr pos:start="165:57" pos:end="165:73"><name pos:start="165:57" pos:end="165:73">LIBAVFORMAT_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="169:9" pos:end="189:9"><if pos:start="169:9" pos:end="189:9">if <condition pos:start="169:12" pos:end="169:35">(<expr pos:start="169:13" pos:end="169:34"><name pos:start="169:13" pos:end="169:21"><name pos:start="169:13" pos:end="169:15">mkv</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:21">mode</name></name> <operator pos:start="169:23" pos:end="169:24">!=</operator> <name pos:start="169:26" pos:end="169:34">MODE_WEBM</name></expr>)</condition> <block pos:start="169:37" pos:end="189:9">{<block_content pos:start="171:13" pos:end="187:73">

            <decl_stmt pos:start="171:13" pos:end="171:36"><decl pos:start="171:13" pos:end="171:35"><type pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:20">uint32_t</name></type> <name pos:start="171:22" pos:end="171:35"><name pos:start="171:22" pos:end="171:32">segment_uid</name><index pos:start="171:33" pos:end="171:35">[<expr pos:start="171:34" pos:end="171:34"><literal type="number" pos:start="171:34" pos:end="171:34">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:22"><decl pos:start="173:13" pos:end="173:21"><type pos:start="173:13" pos:end="173:17"><name pos:start="173:13" pos:end="173:17">AVLFG</name></type> <name pos:start="173:19" pos:end="173:21">lfg</name></decl>;</decl_stmt>



            <expr_stmt pos:start="177:13" pos:end="177:52"><expr pos:start="177:13" pos:end="177:51"><call pos:start="177:13" pos:end="177:51"><name pos:start="177:13" pos:end="177:23">av_lfg_init</name><argument_list pos:start="177:24" pos:end="177:51">(<argument pos:start="177:25" pos:end="177:28"><expr pos:start="177:25" pos:end="177:28"><operator pos:start="177:25" pos:end="177:25">&amp;</operator><name pos:start="177:26" pos:end="177:28">lfg</name></expr></argument>, <argument pos:start="177:31" pos:end="177:50"><expr pos:start="177:31" pos:end="177:50"><call pos:start="177:31" pos:end="177:50"><name pos:start="177:31" pos:end="177:48">av_get_random_seed</name><argument_list pos:start="177:49" pos:end="177:50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="181:13" pos:end="183:50">for <control pos:start="181:17" pos:end="181:35">(<init pos:start="181:18" pos:end="181:23"><expr pos:start="181:18" pos:end="181:22"><name pos:start="181:18" pos:end="181:18">i</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>;</init> <condition pos:start="181:25" pos:end="181:30"><expr pos:start="181:25" pos:end="181:29"><name pos:start="181:25" pos:end="181:25">i</name> <operator pos:start="181:27" pos:end="181:27">&lt;</operator> <literal type="number" pos:start="181:29" pos:end="181:29">4</literal></expr>;</condition> <incr pos:start="181:32" pos:end="181:34"><expr pos:start="181:32" pos:end="181:34"><name pos:start="181:32" pos:end="181:32">i</name><operator pos:start="181:33" pos:end="181:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:17" pos:end="183:50"><block_content pos:start="183:17" pos:end="183:50">

                <expr_stmt pos:start="183:17" pos:end="183:50"><expr pos:start="183:17" pos:end="183:49"><name pos:start="183:17" pos:end="183:30"><name pos:start="183:17" pos:end="183:27">segment_uid</name><index pos:start="183:28" pos:end="183:30">[<expr pos:start="183:29" pos:end="183:29"><name pos:start="183:29" pos:end="183:29">i</name></expr>]</index></name> <operator pos:start="183:32" pos:end="183:32">=</operator> <call pos:start="183:34" pos:end="183:49"><name pos:start="183:34" pos:end="183:43">av_lfg_get</name><argument_list pos:start="183:44" pos:end="183:49">(<argument pos:start="183:45" pos:end="183:48"><expr pos:start="183:45" pos:end="183:48"><operator pos:start="183:45" pos:end="183:45">&amp;</operator><name pos:start="183:46" pos:end="183:48">lfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="187:13" pos:end="187:73"><expr pos:start="187:13" pos:end="187:72"><call pos:start="187:13" pos:end="187:72"><name pos:start="187:13" pos:end="187:27">put_ebml_binary</name><argument_list pos:start="187:28" pos:end="187:72">(<argument pos:start="187:29" pos:end="187:30"><expr pos:start="187:29" pos:end="187:30"><name pos:start="187:29" pos:end="187:30">pb</name></expr></argument>, <argument pos:start="187:33" pos:end="187:54"><expr pos:start="187:33" pos:end="187:54"><name pos:start="187:33" pos:end="187:54">MATROSKA_ID_SEGMENTUID</name></expr></argument>, <argument pos:start="187:57" pos:end="187:67"><expr pos:start="187:57" pos:end="187:67"><name pos:start="187:57" pos:end="187:67">segment_uid</name></expr></argument>, <argument pos:start="187:70" pos:end="187:71"><expr pos:start="187:70" pos:end="187:71"><literal type="number" pos:start="187:70" pos:end="187:71">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="191:7" pos:end="199:5">else <block pos:start="191:12" pos:end="199:5">{<block_content pos:start="193:9" pos:end="197:59">

        <decl_stmt pos:start="193:9" pos:end="193:35"><decl pos:start="193:9" pos:end="193:34"><type pos:start="193:9" pos:end="193:20"><specifier pos:start="193:9" pos:end="193:13">const</specifier> <name pos:start="193:15" pos:end="193:18">char</name> <modifier pos:start="193:20" pos:end="193:20">*</modifier></type><name pos:start="193:21" pos:end="193:25">ident</name> <init pos:start="193:27" pos:end="193:34">= <expr pos:start="193:29" pos:end="193:34"><literal type="string" pos:start="193:29" pos:end="193:34">"Lavf"</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:59"><expr pos:start="195:9" pos:end="195:58"><call pos:start="195:9" pos:end="195:58"><name pos:start="195:9" pos:end="195:23">put_ebml_string</name><argument_list pos:start="195:24" pos:end="195:58">(<argument pos:start="195:25" pos:end="195:26"><expr pos:start="195:25" pos:end="195:26"><name pos:start="195:25" pos:end="195:26">pb</name></expr></argument>, <argument pos:start="195:29" pos:end="195:49"><expr pos:start="195:29" pos:end="195:49"><name pos:start="195:29" pos:end="195:49">MATROSKA_ID_MUXINGAPP</name></expr></argument> , <argument pos:start="195:53" pos:end="195:57"><expr pos:start="195:53" pos:end="195:57"><name pos:start="195:53" pos:end="195:57">ident</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:59"><expr pos:start="197:9" pos:end="197:58"><call pos:start="197:9" pos:end="197:58"><name pos:start="197:9" pos:end="197:23">put_ebml_string</name><argument_list pos:start="197:24" pos:end="197:58">(<argument pos:start="197:25" pos:end="197:26"><expr pos:start="197:25" pos:end="197:26"><name pos:start="197:25" pos:end="197:26">pb</name></expr></argument>, <argument pos:start="197:29" pos:end="197:50"><expr pos:start="197:29" pos:end="197:50"><name pos:start="197:29" pos:end="197:50">MATROSKA_ID_WRITINGAPP</name></expr></argument>, <argument pos:start="197:53" pos:end="197:57"><expr pos:start="197:53" pos:end="197:57"><name pos:start="197:53" pos:end="197:57">ident</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="203:5" pos:end="215:5"><if pos:start="203:5" pos:end="215:5">if <condition pos:start="203:8" pos:end="203:66">(<expr pos:start="203:9" pos:end="203:65"><call pos:start="203:9" pos:end="203:61"><name pos:start="203:9" pos:end="203:39">ff_parse_creation_time_metadata</name><argument_list pos:start="203:40" pos:end="203:61">(<argument pos:start="203:41" pos:end="203:41"><expr pos:start="203:41" pos:end="203:41"><name pos:start="203:41" pos:end="203:41">s</name></expr></argument>, <argument pos:start="203:44" pos:end="203:57"><expr pos:start="203:44" pos:end="203:57"><operator pos:start="203:44" pos:end="203:44">&amp;</operator><name pos:start="203:45" pos:end="203:57">creation_time</name></expr></argument>, <argument pos:start="203:60" pos:end="203:60"><expr pos:start="203:60" pos:end="203:60"><literal type="number" pos:start="203:60" pos:end="203:60">0</literal></expr></argument>)</argument_list></call> <operator pos:start="203:63" pos:end="203:63">&gt;</operator> <literal type="number" pos:start="203:65" pos:end="203:65">0</literal></expr>)</condition> <block pos:start="203:68" pos:end="215:5">{<block_content pos:start="207:9" pos:end="213:66">

        <comment type="line" pos:start="205:9" pos:end="205:81">// Adjust time so it's relative to 2001-01-01 and convert to nanoseconds.</comment>

        <decl_stmt pos:start="207:9" pos:end="207:70"><decl pos:start="207:9" pos:end="207:69"><type pos:start="207:9" pos:end="207:15"><name pos:start="207:9" pos:end="207:15">int64_t</name></type> <name pos:start="207:17" pos:end="207:24">date_utc</name> <init pos:start="207:26" pos:end="207:69">= <expr pos:start="207:28" pos:end="207:69"><operator pos:start="207:28" pos:end="207:28">(</operator><name pos:start="207:29" pos:end="207:41">creation_time</name> <operator pos:start="207:43" pos:end="207:43">-</operator> <literal type="number" pos:start="207:45" pos:end="207:61">978307200000000LL</literal><operator pos:start="207:62" pos:end="207:62">)</operator> <operator pos:start="207:64" pos:end="207:64">*</operator> <literal type="number" pos:start="207:66" pos:end="207:69">1000</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="209:9" pos:end="209:32"><decl pos:start="209:9" pos:end="209:31"><type pos:start="209:9" pos:end="209:15"><name pos:start="209:9" pos:end="209:15">uint8_t</name></type> <name pos:start="209:17" pos:end="209:31"><name pos:start="209:17" pos:end="209:28">date_utc_buf</name><index pos:start="209:29" pos:end="209:31">[<expr pos:start="209:30" pos:end="209:30"><literal type="number" pos:start="209:30" pos:end="209:30">8</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:40"><expr pos:start="211:9" pos:end="211:39"><call pos:start="211:9" pos:end="211:39"><name pos:start="211:9" pos:end="211:15">AV_WB64</name><argument_list pos:start="211:16" pos:end="211:39">(<argument pos:start="211:17" pos:end="211:28"><expr pos:start="211:17" pos:end="211:28"><name pos:start="211:17" pos:end="211:28">date_utc_buf</name></expr></argument>, <argument pos:start="211:31" pos:end="211:38"><expr pos:start="211:31" pos:end="211:38"><name pos:start="211:31" pos:end="211:38">date_utc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:66"><expr pos:start="213:9" pos:end="213:65"><call pos:start="213:9" pos:end="213:65"><name pos:start="213:9" pos:end="213:23">put_ebml_binary</name><argument_list pos:start="213:24" pos:end="213:65">(<argument pos:start="213:25" pos:end="213:26"><expr pos:start="213:25" pos:end="213:26"><name pos:start="213:25" pos:end="213:26">pb</name></expr></argument>, <argument pos:start="213:29" pos:end="213:47"><expr pos:start="213:29" pos:end="213:47"><name pos:start="213:29" pos:end="213:47">MATROSKA_ID_DATEUTC</name></expr></argument>, <argument pos:start="213:50" pos:end="213:61"><expr pos:start="213:50" pos:end="213:61"><name pos:start="213:50" pos:end="213:61">date_utc_buf</name></expr></argument>, <argument pos:start="213:64" pos:end="213:64"><expr pos:start="213:64" pos:end="213:64"><literal type="number" pos:start="213:64" pos:end="213:64">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="219:5" pos:end="219:37">// reserve space for the duration</comment>

    <expr_stmt pos:start="221:5" pos:end="221:22"><expr pos:start="221:5" pos:end="221:21"><name pos:start="221:5" pos:end="221:17"><name pos:start="221:5" pos:end="221:7">mkv</name><operator pos:start="221:8" pos:end="221:9">-&gt;</operator><name pos:start="221:10" pos:end="221:17">duration</name></name> <operator pos:start="221:19" pos:end="221:19">=</operator> <literal type="number" pos:start="221:21" pos:end="221:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:41"><expr pos:start="223:5" pos:end="223:40"><name pos:start="223:5" pos:end="223:24"><name pos:start="223:5" pos:end="223:7">mkv</name><operator pos:start="223:8" pos:end="223:9">-&gt;</operator><name pos:start="223:10" pos:end="223:24">duration_offset</name></name> <operator pos:start="223:26" pos:end="223:26">=</operator> <call pos:start="223:28" pos:end="223:40"><name pos:start="223:28" pos:end="223:36">avio_tell</name><argument_list pos:start="223:37" pos:end="223:40">(<argument pos:start="223:38" pos:end="223:39"><expr pos:start="223:38" pos:end="223:39"><name pos:start="223:38" pos:end="223:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="253:5"><if pos:start="225:5" pos:end="253:5">if <condition pos:start="225:8" pos:end="225:22">(<expr pos:start="225:9" pos:end="225:21"><operator pos:start="225:9" pos:end="225:9">!</operator><name pos:start="225:10" pos:end="225:21"><name pos:start="225:10" pos:end="225:12">mkv</name><operator pos:start="225:13" pos:end="225:14">-&gt;</operator><name pos:start="225:15" pos:end="225:21">is_live</name></name></expr>)</condition> <block pos:start="225:24" pos:end="253:5">{<block_content pos:start="227:9" pos:end="251:9">

        <decl_stmt pos:start="227:9" pos:end="227:61"><decl pos:start="227:9" pos:end="227:60"><type pos:start="227:9" pos:end="227:15"><name pos:start="227:9" pos:end="227:15">int64_t</name></type> <name pos:start="227:17" pos:end="227:33">metadata_duration</name> <init pos:start="227:35" pos:end="227:60">= <expr pos:start="227:37" pos:end="227:60"><call pos:start="227:37" pos:end="227:60"><name pos:start="227:37" pos:end="227:57">get_metadata_duration</name><argument_list pos:start="227:58" pos:end="227:60">(<argument pos:start="227:59" pos:end="227:59"><expr pos:start="227:59" pos:end="227:59"><name pos:start="227:59" pos:end="227:59">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="231:9" pos:end="251:9"><if pos:start="231:9" pos:end="239:9">if <condition pos:start="231:12" pos:end="231:28">(<expr pos:start="231:13" pos:end="231:27"><name pos:start="231:13" pos:end="231:23"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:23">duration</name></name> <operator pos:start="231:25" pos:end="231:25">&gt;</operator> <literal type="number" pos:start="231:27" pos:end="231:27">0</literal></expr>)</condition> <block pos:start="231:30" pos:end="239:9">{<block_content pos:start="233:13" pos:end="237:112">

            <decl_stmt pos:start="233:13" pos:end="233:81"><decl pos:start="233:13" pos:end="233:80"><type pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:19">int64_t</name></type> <name pos:start="233:21" pos:end="233:34">scaledDuration</name> <init pos:start="233:36" pos:end="233:80">= <expr pos:start="233:38" pos:end="233:80"><call pos:start="233:38" pos:end="233:80"><name pos:start="233:38" pos:end="233:47">av_rescale</name><argument_list pos:start="233:48" pos:end="233:80">(<argument pos:start="233:49" pos:end="233:59"><expr pos:start="233:49" pos:end="233:59"><name pos:start="233:49" pos:end="233:59"><name pos:start="233:49" pos:end="233:49">s</name><operator pos:start="233:50" pos:end="233:51">-&gt;</operator><name pos:start="233:52" pos:end="233:59">duration</name></name></expr></argument>, <argument pos:start="233:62" pos:end="233:65"><expr pos:start="233:62" pos:end="233:65"><literal type="number" pos:start="233:62" pos:end="233:65">1000</literal></expr></argument>, <argument pos:start="233:68" pos:end="233:79"><expr pos:start="233:68" pos:end="233:79"><name pos:start="233:68" pos:end="233:79">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:69"><expr pos:start="235:13" pos:end="235:68"><call pos:start="235:13" pos:end="235:68"><name pos:start="235:13" pos:end="235:26">put_ebml_float</name><argument_list pos:start="235:27" pos:end="235:68">(<argument pos:start="235:28" pos:end="235:29"><expr pos:start="235:28" pos:end="235:29"><name pos:start="235:28" pos:end="235:29">pb</name></expr></argument>, <argument pos:start="235:32" pos:end="235:51"><expr pos:start="235:32" pos:end="235:51"><name pos:start="235:32" pos:end="235:51">MATROSKA_ID_DURATION</name></expr></argument>, <argument pos:start="235:54" pos:end="235:67"><expr pos:start="235:54" pos:end="235:67"><name pos:start="235:54" pos:end="235:67">scaledDuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:112"><expr pos:start="237:13" pos:end="237:111"><call pos:start="237:13" pos:end="237:111"><name pos:start="237:13" pos:end="237:18">av_log</name><argument_list pos:start="237:19" pos:end="237:111">(<argument pos:start="237:20" pos:end="237:20"><expr pos:start="237:20" pos:end="237:20"><name pos:start="237:20" pos:end="237:20">s</name></expr></argument>, <argument pos:start="237:23" pos:end="237:34"><expr pos:start="237:23" pos:end="237:34"><name pos:start="237:23" pos:end="237:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="237:37" pos:end="237:94"><expr pos:start="237:37" pos:end="237:94"><literal type="string" pos:start="237:37" pos:end="237:82">"Write early duration from recording time = %"</literal> <name pos:start="237:84" pos:end="237:89">PRIu64</name> <literal type="string" pos:start="237:91" pos:end="237:94">"\n"</literal></expr></argument>, <argument pos:start="237:97" pos:end="237:110"><expr pos:start="237:97" pos:end="237:110"><name pos:start="237:97" pos:end="237:110">scaledDuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="239:11" pos:end="247:9">else if <condition pos:start="239:19" pos:end="239:41">(<expr pos:start="239:20" pos:end="239:40"><name pos:start="239:20" pos:end="239:36">metadata_duration</name> <operator pos:start="239:38" pos:end="239:38">&gt;</operator> <literal type="number" pos:start="239:40" pos:end="239:40">0</literal></expr>)</condition> <block pos:start="239:43" pos:end="247:9">{<block_content pos:start="241:13" pos:end="245:106">

            <decl_stmt pos:start="241:13" pos:end="241:87"><decl pos:start="241:13" pos:end="241:86"><type pos:start="241:13" pos:end="241:19"><name pos:start="241:13" pos:end="241:19">int64_t</name></type> <name pos:start="241:21" pos:end="241:34">scaledDuration</name> <init pos:start="241:36" pos:end="241:86">= <expr pos:start="241:38" pos:end="241:86"><call pos:start="241:38" pos:end="241:86"><name pos:start="241:38" pos:end="241:47">av_rescale</name><argument_list pos:start="241:48" pos:end="241:86">(<argument pos:start="241:49" pos:end="241:65"><expr pos:start="241:49" pos:end="241:65"><name pos:start="241:49" pos:end="241:65">metadata_duration</name></expr></argument>, <argument pos:start="241:68" pos:end="241:71"><expr pos:start="241:68" pos:end="241:71"><literal type="number" pos:start="241:68" pos:end="241:71">1000</literal></expr></argument>, <argument pos:start="241:74" pos:end="241:85"><expr pos:start="241:74" pos:end="241:85"><name pos:start="241:74" pos:end="241:85">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:69"><expr pos:start="243:13" pos:end="243:68"><call pos:start="243:13" pos:end="243:68"><name pos:start="243:13" pos:end="243:26">put_ebml_float</name><argument_list pos:start="243:27" pos:end="243:68">(<argument pos:start="243:28" pos:end="243:29"><expr pos:start="243:28" pos:end="243:29"><name pos:start="243:28" pos:end="243:29">pb</name></expr></argument>, <argument pos:start="243:32" pos:end="243:51"><expr pos:start="243:32" pos:end="243:51"><name pos:start="243:32" pos:end="243:51">MATROSKA_ID_DURATION</name></expr></argument>, <argument pos:start="243:54" pos:end="243:67"><expr pos:start="243:54" pos:end="243:67"><name pos:start="243:54" pos:end="243:67">scaledDuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:106"><expr pos:start="245:13" pos:end="245:105"><call pos:start="245:13" pos:end="245:105"><name pos:start="245:13" pos:end="245:18">av_log</name><argument_list pos:start="245:19" pos:end="245:105">(<argument pos:start="245:20" pos:end="245:20"><expr pos:start="245:20" pos:end="245:20"><name pos:start="245:20" pos:end="245:20">s</name></expr></argument>, <argument pos:start="245:23" pos:end="245:34"><expr pos:start="245:23" pos:end="245:34"><name pos:start="245:23" pos:end="245:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="245:37" pos:end="245:88"><expr pos:start="245:37" pos:end="245:88"><literal type="string" pos:start="245:37" pos:end="245:76">"Write early duration from metadata = %"</literal> <name pos:start="245:78" pos:end="245:83">PRIu64</name> <literal type="string" pos:start="245:85" pos:end="245:88">"\n"</literal></expr></argument>, <argument pos:start="245:91" pos:end="245:104"><expr pos:start="245:91" pos:end="245:104"><name pos:start="245:91" pos:end="245:104">scaledDuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="247:11" pos:end="251:9">else <block pos:start="247:16" pos:end="251:9">{<block_content pos:start="249:13" pos:end="249:34">

            <expr_stmt pos:start="249:13" pos:end="249:34"><expr pos:start="249:13" pos:end="249:33"><call pos:start="249:13" pos:end="249:33"><name pos:start="249:13" pos:end="249:25">put_ebml_void</name><argument_list pos:start="249:26" pos:end="249:33">(<argument pos:start="249:27" pos:end="249:28"><expr pos:start="249:27" pos:end="249:28"><name pos:start="249:27" pos:end="249:28">pb</name></expr></argument>, <argument pos:start="249:31" pos:end="249:32"><expr pos:start="249:31" pos:end="249:32"><literal type="number" pos:start="249:31" pos:end="249:32">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>              <comment type="line" pos:start="249:49" pos:end="249:95">// assumes double-precision float to be written</comment>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="255:5" pos:end="261:68"><if pos:start="255:5" pos:end="257:44">if <condition pos:start="255:8" pos:end="255:41">(<expr pos:start="255:9" pos:end="255:40"><name pos:start="255:9" pos:end="255:23"><name pos:start="255:9" pos:end="255:9">s</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:13">pb</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:23">seekable</name></name> <operator pos:start="255:25" pos:end="255:26">&amp;&amp;</operator> <operator pos:start="255:28" pos:end="255:28">!</operator><name pos:start="255:29" pos:end="255:40"><name pos:start="255:29" pos:end="255:31">mkv</name><operator pos:start="255:32" pos:end="255:33">-&gt;</operator><name pos:start="255:34" pos:end="255:40">is_live</name></name></expr>)</condition><block type="pseudo" pos:start="257:9" pos:end="257:44"><block_content pos:start="257:9" pos:end="257:44">

        <expr_stmt pos:start="257:9" pos:end="257:44"><expr pos:start="257:9" pos:end="257:43"><call pos:start="257:9" pos:end="257:43"><name pos:start="257:9" pos:end="257:21">put_ebml_void</name><argument_list pos:start="257:22" pos:end="257:43">(<argument pos:start="257:23" pos:end="257:27"><expr pos:start="257:23" pos:end="257:27"><name pos:start="257:23" pos:end="257:27"><name pos:start="257:23" pos:end="257:23">s</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:27">pb</name></name></expr></argument>, <argument pos:start="257:30" pos:end="257:42"><expr pos:start="257:30" pos:end="257:42"><call pos:start="257:30" pos:end="257:42"><name pos:start="257:30" pos:end="257:38">avio_tell</name><argument_list pos:start="257:39" pos:end="257:42">(<argument pos:start="257:40" pos:end="257:41"><expr pos:start="257:40" pos:end="257:41"><name pos:start="257:40" pos:end="257:41">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="259:5" pos:end="261:68">else<block type="pseudo" pos:start="261:9" pos:end="261:68"><block_content pos:start="261:9" pos:end="261:68">

        <expr_stmt pos:start="261:9" pos:end="261:68"><expr pos:start="261:9" pos:end="261:67"><call pos:start="261:9" pos:end="261:67"><name pos:start="261:9" pos:end="261:29">end_ebml_master_crc32</name><argument_list pos:start="261:30" pos:end="261:67">(<argument pos:start="261:31" pos:end="261:35"><expr pos:start="261:31" pos:end="261:35"><name pos:start="261:31" pos:end="261:35"><name pos:start="261:31" pos:end="261:31">s</name><operator pos:start="261:32" pos:end="261:33">-&gt;</operator><name pos:start="261:34" pos:end="261:35">pb</name></name></expr></argument>, <argument pos:start="261:38" pos:end="261:50"><expr pos:start="261:38" pos:end="261:50"><operator pos:start="261:38" pos:end="261:38">&amp;</operator><name pos:start="261:39" pos:end="261:50"><name pos:start="261:39" pos:end="261:41">mkv</name><operator pos:start="261:42" pos:end="261:43">-&gt;</operator><name pos:start="261:44" pos:end="261:50">info_bc</name></name></expr></argument>, <argument pos:start="261:53" pos:end="261:55"><expr pos:start="261:53" pos:end="261:55"><name pos:start="261:53" pos:end="261:55">mkv</name></expr></argument>, <argument pos:start="261:58" pos:end="261:66"><expr pos:start="261:58" pos:end="261:66"><name pos:start="261:58" pos:end="261:66"><name pos:start="261:58" pos:end="261:60">mkv</name><operator pos:start="261:61" pos:end="261:62">-&gt;</operator><name pos:start="261:63" pos:end="261:66">info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:15"><expr pos:start="263:5" pos:end="263:14"><name pos:start="263:5" pos:end="263:6">pb</name> <operator pos:start="263:8" pos:end="263:8">=</operator> <name pos:start="263:10" pos:end="263:14"><name pos:start="263:10" pos:end="263:10">s</name><operator pos:start="263:11" pos:end="263:12">-&gt;</operator><name pos:start="263:13" pos:end="263:14">pb</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="267:5" pos:end="267:40">// initialize stream_duration fields</comment>

    <expr_stmt pos:start="269:5" pos:end="269:72"><expr pos:start="269:5" pos:end="269:71"><name pos:start="269:5" pos:end="269:25"><name pos:start="269:5" pos:end="269:7">mkv</name><operator pos:start="269:8" pos:end="269:9">-&gt;</operator><name pos:start="269:10" pos:end="269:25">stream_durations</name></name> <operator pos:start="269:27" pos:end="269:27">=</operator> <call pos:start="269:29" pos:end="269:71"><name pos:start="269:29" pos:end="269:38">av_mallocz</name><argument_list pos:start="269:39" pos:end="269:71">(<argument pos:start="269:40" pos:end="269:70"><expr pos:start="269:40" pos:end="269:70"><name pos:start="269:40" pos:end="269:52"><name pos:start="269:40" pos:end="269:40">s</name><operator pos:start="269:41" pos:end="269:42">-&gt;</operator><name pos:start="269:43" pos:end="269:52">nb_streams</name></name> <operator pos:start="269:54" pos:end="269:54">*</operator> <sizeof pos:start="269:56" pos:end="269:70">sizeof<argument_list pos:start="269:62" pos:end="269:70">(<argument pos:start="269:63" pos:end="269:69"><expr pos:start="269:63" pos:end="269:69"><name pos:start="269:63" pos:end="269:69">int64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="271:5" pos:end="271:79"><expr pos:start="271:5" pos:end="271:78"><name pos:start="271:5" pos:end="271:32"><name pos:start="271:5" pos:end="271:7">mkv</name><operator pos:start="271:8" pos:end="271:9">-&gt;</operator><name pos:start="271:10" pos:end="271:32">stream_duration_offsets</name></name> <operator pos:start="271:34" pos:end="271:34">=</operator> <call pos:start="271:36" pos:end="271:78"><name pos:start="271:36" pos:end="271:45">av_mallocz</name><argument_list pos:start="271:46" pos:end="271:78">(<argument pos:start="271:47" pos:end="271:77"><expr pos:start="271:47" pos:end="271:77"><name pos:start="271:47" pos:end="271:59"><name pos:start="271:47" pos:end="271:47">s</name><operator pos:start="271:48" pos:end="271:49">-&gt;</operator><name pos:start="271:50" pos:end="271:59">nb_streams</name></name> <operator pos:start="271:61" pos:end="271:61">*</operator> <sizeof pos:start="271:63" pos:end="271:77">sizeof<argument_list pos:start="271:69" pos:end="271:77">(<argument pos:start="271:70" pos:end="271:76"><expr pos:start="271:70" pos:end="271:76"><name pos:start="271:70" pos:end="271:76">int64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="275:5" pos:end="275:30"><expr pos:start="275:5" pos:end="275:29"><name pos:start="275:5" pos:end="275:7">ret</name> <operator pos:start="275:9" pos:end="275:9">=</operator> <call pos:start="275:11" pos:end="275:29"><name pos:start="275:11" pos:end="275:26">mkv_write_tracks</name><argument_list pos:start="275:27" pos:end="275:29">(<argument pos:start="275:28" pos:end="275:28"><expr pos:start="275:28" pos:end="275:28"><name pos:start="275:28" pos:end="275:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="277:5" pos:end="279:18"><if pos:start="277:5" pos:end="279:18">if <condition pos:start="277:8" pos:end="277:16">(<expr pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:11">ret</name> <operator pos:start="277:13" pos:end="277:13">&lt;</operator> <literal type="number" pos:start="277:15" pos:end="277:15">0</literal></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:18"><block_content pos:start="279:9" pos:end="279:18">

        <goto pos:start="279:9" pos:end="279:18">goto <name pos:start="279:14" pos:end="279:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="283:5" pos:end="285:89">for <control pos:start="283:9" pos:end="283:40">(<init pos:start="283:10" pos:end="283:15"><expr pos:start="283:10" pos:end="283:14"><name pos:start="283:10" pos:end="283:10">i</name> <operator pos:start="283:12" pos:end="283:12">=</operator> <literal type="number" pos:start="283:14" pos:end="283:14">0</literal></expr>;</init> <condition pos:start="283:17" pos:end="283:35"><expr pos:start="283:17" pos:end="283:34"><name pos:start="283:17" pos:end="283:17">i</name> <operator pos:start="283:19" pos:end="283:19">&lt;</operator> <name pos:start="283:21" pos:end="283:34"><name pos:start="283:21" pos:end="283:21">s</name><operator pos:start="283:22" pos:end="283:23">-&gt;</operator><name pos:start="283:24" pos:end="283:34">nb_chapters</name></name></expr>;</condition> <incr pos:start="283:37" pos:end="283:39"><expr pos:start="283:37" pos:end="283:39"><name pos:start="283:37" pos:end="283:37">i</name><operator pos:start="283:38" pos:end="283:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="285:9" pos:end="285:89"><block_content pos:start="285:9" pos:end="285:89">

        <expr_stmt pos:start="285:9" pos:end="285:89"><expr pos:start="285:9" pos:end="285:88"><name pos:start="285:9" pos:end="285:30"><name pos:start="285:9" pos:end="285:11">mkv</name><operator pos:start="285:12" pos:end="285:13">-&gt;</operator><name pos:start="285:14" pos:end="285:30">chapter_id_offset</name></name> <operator pos:start="285:32" pos:end="285:32">=</operator> <call pos:start="285:34" pos:end="285:88"><name pos:start="285:34" pos:end="285:38">FFMAX</name><argument_list pos:start="285:39" pos:end="285:88">(<argument pos:start="285:40" pos:end="285:61"><expr pos:start="285:40" pos:end="285:61"><name pos:start="285:40" pos:end="285:61"><name pos:start="285:40" pos:end="285:42">mkv</name><operator pos:start="285:43" pos:end="285:44">-&gt;</operator><name pos:start="285:45" pos:end="285:61">chapter_id_offset</name></name></expr></argument>, <argument pos:start="285:64" pos:end="285:87"><expr pos:start="285:64" pos:end="285:87"><literal type="number" pos:start="285:64" pos:end="285:68">1LL</literal> <operator pos:start="285:68" pos:end="285:68">-</operator> <name pos:start="285:70" pos:end="285:83"><name pos:start="285:70" pos:end="285:70">s</name><operator pos:start="285:71" pos:end="285:72">-&gt;</operator><name pos:start="285:73" pos:end="285:80">chapters</name><index pos:start="285:81" pos:end="285:83">[<expr pos:start="285:82" pos:end="285:82"><name pos:start="285:82" pos:end="285:82">i</name></expr>]</index></name><operator pos:start="285:84" pos:end="285:85">-&gt;</operator><name pos:start="285:86" pos:end="285:87">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="289:5" pos:end="313:5"><if pos:start="289:5" pos:end="313:5">if <condition pos:start="289:8" pos:end="289:31">(<expr pos:start="289:9" pos:end="289:30"><name pos:start="289:9" pos:end="289:17"><name pos:start="289:9" pos:end="289:11">mkv</name><operator pos:start="289:12" pos:end="289:13">-&gt;</operator><name pos:start="289:14" pos:end="289:17">mode</name></name> <operator pos:start="289:19" pos:end="289:20">!=</operator> <name pos:start="289:22" pos:end="289:30">MODE_WEBM</name></expr>)</condition> <block pos:start="289:33" pos:end="313:5">{<block_content pos:start="291:9" pos:end="311:22">

        <expr_stmt pos:start="291:9" pos:end="291:36"><expr pos:start="291:9" pos:end="291:35"><name pos:start="291:9" pos:end="291:11">ret</name> <operator pos:start="291:13" pos:end="291:13">=</operator> <call pos:start="291:15" pos:end="291:35"><name pos:start="291:15" pos:end="291:32">mkv_write_chapters</name><argument_list pos:start="291:33" pos:end="291:35">(<argument pos:start="291:34" pos:end="291:34"><expr pos:start="291:34" pos:end="291:34"><name pos:start="291:34" pos:end="291:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="293:9" pos:end="295:22"><if pos:start="293:9" pos:end="295:22">if <condition pos:start="293:12" pos:end="293:20">(<expr pos:start="293:13" pos:end="293:19"><name pos:start="293:13" pos:end="293:15">ret</name> <operator pos:start="293:17" pos:end="293:17">&lt;</operator> <literal type="number" pos:start="293:19" pos:end="293:19">0</literal></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:22"><block_content pos:start="295:13" pos:end="295:22">

            <goto pos:start="295:13" pos:end="295:22">goto <name pos:start="295:18" pos:end="295:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="299:9" pos:end="299:39"><expr pos:start="299:9" pos:end="299:38"><name pos:start="299:9" pos:end="299:11">ret</name> <operator pos:start="299:13" pos:end="299:13">=</operator> <call pos:start="299:15" pos:end="299:38"><name pos:start="299:15" pos:end="299:35">mkv_write_attachments</name><argument_list pos:start="299:36" pos:end="299:38">(<argument pos:start="299:37" pos:end="299:37"><expr pos:start="299:37" pos:end="299:37"><name pos:start="299:37" pos:end="299:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="303:22"><if pos:start="301:9" pos:end="303:22">if <condition pos:start="301:12" pos:end="301:20">(<expr pos:start="301:13" pos:end="301:19"><name pos:start="301:13" pos:end="301:15">ret</name> <operator pos:start="301:17" pos:end="301:17">&lt;</operator> <literal type="number" pos:start="301:19" pos:end="301:19">0</literal></expr>)</condition><block type="pseudo" pos:start="303:13" pos:end="303:22"><block_content pos:start="303:13" pos:end="303:22">

            <goto pos:start="303:13" pos:end="303:22">goto <name pos:start="303:18" pos:end="303:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="307:9" pos:end="307:32"><expr pos:start="307:9" pos:end="307:31"><name pos:start="307:9" pos:end="307:11">ret</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <call pos:start="307:15" pos:end="307:31"><name pos:start="307:15" pos:end="307:28">mkv_write_tags</name><argument_list pos:start="307:29" pos:end="307:31">(<argument pos:start="307:30" pos:end="307:30"><expr pos:start="307:30" pos:end="307:30"><name pos:start="307:30" pos:end="307:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="309:9" pos:end="311:22"><if pos:start="309:9" pos:end="311:22">if <condition pos:start="309:12" pos:end="309:20">(<expr pos:start="309:13" pos:end="309:19"><name pos:start="309:13" pos:end="309:15">ret</name> <operator pos:start="309:17" pos:end="309:17">&lt;</operator> <literal type="number" pos:start="309:19" pos:end="309:19">0</literal></expr>)</condition><block type="pseudo" pos:start="311:13" pos:end="311:22"><block_content pos:start="311:13" pos:end="311:22">

            <goto pos:start="311:13" pos:end="311:22">goto <name pos:start="311:18" pos:end="311:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="317:5" pos:end="319:36"><if pos:start="317:5" pos:end="319:36">if <condition pos:start="317:8" pos:end="317:42">(<expr pos:start="317:9" pos:end="317:41"><operator pos:start="317:9" pos:end="317:9">!</operator><name pos:start="317:10" pos:end="317:24"><name pos:start="317:10" pos:end="317:10">s</name><operator pos:start="317:11" pos:end="317:12">-&gt;</operator><name pos:start="317:13" pos:end="317:14">pb</name><operator pos:start="317:15" pos:end="317:16">-&gt;</operator><name pos:start="317:17" pos:end="317:24">seekable</name></name> <operator pos:start="317:26" pos:end="317:27">&amp;&amp;</operator> <operator pos:start="317:29" pos:end="317:29">!</operator><name pos:start="317:30" pos:end="317:41"><name pos:start="317:30" pos:end="317:32">mkv</name><operator pos:start="317:33" pos:end="317:34">-&gt;</operator><name pos:start="317:35" pos:end="317:41">is_live</name></name></expr>)</condition><block type="pseudo" pos:start="319:9" pos:end="319:36"><block_content pos:start="319:9" pos:end="319:36">

        <expr_stmt pos:start="319:9" pos:end="319:36"><expr pos:start="319:9" pos:end="319:35"><call pos:start="319:9" pos:end="319:35"><name pos:start="319:9" pos:end="319:26">mkv_write_seekhead</name><argument_list pos:start="319:27" pos:end="319:35">(<argument pos:start="319:28" pos:end="319:29"><expr pos:start="319:28" pos:end="319:29"><name pos:start="319:28" pos:end="319:29">pb</name></expr></argument>, <argument pos:start="319:32" pos:end="319:34"><expr pos:start="319:32" pos:end="319:34"><name pos:start="319:32" pos:end="319:34">mkv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="323:5" pos:end="323:52"><expr pos:start="323:5" pos:end="323:51"><name pos:start="323:5" pos:end="323:13"><name pos:start="323:5" pos:end="323:7">mkv</name><operator pos:start="323:8" pos:end="323:9">-&gt;</operator><name pos:start="323:10" pos:end="323:13">cues</name></name> <operator pos:start="323:15" pos:end="323:15">=</operator> <call pos:start="323:17" pos:end="323:51"><name pos:start="323:17" pos:end="323:30">mkv_start_cues</name><argument_list pos:start="323:31" pos:end="323:51">(<argument pos:start="323:32" pos:end="323:50"><expr pos:start="323:32" pos:end="323:50"><name pos:start="323:32" pos:end="323:50"><name pos:start="323:32" pos:end="323:34">mkv</name><operator pos:start="323:35" pos:end="323:36">-&gt;</operator><name pos:start="323:37" pos:end="323:50">segment_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="325:5" pos:end="331:5"><if pos:start="325:5" pos:end="331:5">if <condition pos:start="325:8" pos:end="325:19">(<expr pos:start="325:9" pos:end="325:18"><operator pos:start="325:9" pos:end="325:9">!</operator><name pos:start="325:10" pos:end="325:18"><name pos:start="325:10" pos:end="325:12">mkv</name><operator pos:start="325:13" pos:end="325:14">-&gt;</operator><name pos:start="325:15" pos:end="325:18">cues</name></name></expr>)</condition> <block pos:start="325:21" pos:end="331:5">{<block_content pos:start="327:9" pos:end="329:18">

        <expr_stmt pos:start="327:9" pos:end="327:30"><expr pos:start="327:9" pos:end="327:29"><name pos:start="327:9" pos:end="327:11">ret</name> <operator pos:start="327:13" pos:end="327:13">=</operator> <call pos:start="327:15" pos:end="327:29"><name pos:start="327:15" pos:end="327:21">AVERROR</name><argument_list pos:start="327:22" pos:end="327:29">(<argument pos:start="327:23" pos:end="327:28"><expr pos:start="327:23" pos:end="327:28"><name pos:start="327:23" pos:end="327:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="329:9" pos:end="329:18">goto <name pos:start="329:14" pos:end="329:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="333:5" pos:end="339:5"><if pos:start="333:5" pos:end="339:5">if <condition pos:start="333:8" pos:end="333:48">(<expr pos:start="333:9" pos:end="333:47"><name pos:start="333:9" pos:end="333:20"><name pos:start="333:9" pos:end="333:10">pb</name><operator pos:start="333:11" pos:end="333:12">-&gt;</operator><name pos:start="333:13" pos:end="333:20">seekable</name></name> <operator pos:start="333:22" pos:end="333:23">&amp;&amp;</operator> <name pos:start="333:25" pos:end="333:47"><name pos:start="333:25" pos:end="333:27">mkv</name><operator pos:start="333:28" pos:end="333:29">-&gt;</operator><name pos:start="333:30" pos:end="333:47">reserve_cues_space</name></name></expr>)</condition> <block pos:start="333:50" pos:end="339:5">{<block_content pos:start="335:9" pos:end="337:51">

        <expr_stmt pos:start="335:9" pos:end="335:38"><expr pos:start="335:9" pos:end="335:37"><name pos:start="335:9" pos:end="335:21"><name pos:start="335:9" pos:end="335:11">mkv</name><operator pos:start="335:12" pos:end="335:13">-&gt;</operator><name pos:start="335:14" pos:end="335:21">cues_pos</name></name> <operator pos:start="335:23" pos:end="335:23">=</operator> <call pos:start="335:25" pos:end="335:37"><name pos:start="335:25" pos:end="335:33">avio_tell</name><argument_list pos:start="335:34" pos:end="335:37">(<argument pos:start="335:35" pos:end="335:36"><expr pos:start="335:35" pos:end="335:36"><name pos:start="335:35" pos:end="335:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:51"><expr pos:start="337:9" pos:end="337:50"><call pos:start="337:9" pos:end="337:50"><name pos:start="337:9" pos:end="337:21">put_ebml_void</name><argument_list pos:start="337:22" pos:end="337:50">(<argument pos:start="337:23" pos:end="337:24"><expr pos:start="337:23" pos:end="337:24"><name pos:start="337:23" pos:end="337:24">pb</name></expr></argument>, <argument pos:start="337:27" pos:end="337:49"><expr pos:start="337:27" pos:end="337:49"><name pos:start="337:27" pos:end="337:49"><name pos:start="337:27" pos:end="337:29">mkv</name><operator pos:start="337:30" pos:end="337:31">-&gt;</operator><name pos:start="337:32" pos:end="337:49">reserve_cues_space</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="343:5" pos:end="343:40"><expr pos:start="343:5" pos:end="343:39"><call pos:start="343:5" pos:end="343:39"><name pos:start="343:5" pos:end="343:18">av_init_packet</name><argument_list pos:start="343:19" pos:end="343:39">(<argument pos:start="343:20" pos:end="343:38"><expr pos:start="343:20" pos:end="343:38"><operator pos:start="343:20" pos:end="343:20">&amp;</operator><name pos:start="343:21" pos:end="343:38"><name pos:start="343:21" pos:end="343:23">mkv</name><operator pos:start="343:24" pos:end="343:25">-&gt;</operator><name pos:start="343:26" pos:end="343:38">cur_audio_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:32"><expr pos:start="345:5" pos:end="345:31"><name pos:start="345:5" pos:end="345:27"><name pos:start="345:5" pos:end="345:7">mkv</name><operator pos:start="345:8" pos:end="345:9">-&gt;</operator><name pos:start="345:10" pos:end="345:22">cur_audio_pkt</name><operator pos:start="345:23" pos:end="345:23">.</operator><name pos:start="345:24" pos:end="345:27">size</name></name> <operator pos:start="345:29" pos:end="345:29">=</operator> <literal type="number" pos:start="345:31" pos:end="345:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:26"><expr pos:start="347:5" pos:end="347:25"><name pos:start="347:5" pos:end="347:20"><name pos:start="347:5" pos:end="347:7">mkv</name><operator pos:start="347:8" pos:end="347:9">-&gt;</operator><name pos:start="347:10" pos:end="347:20">cluster_pos</name></name> <operator pos:start="347:22" pos:end="347:22">=</operator> <operator pos:start="347:24" pos:end="347:24">-</operator><literal type="number" pos:start="347:25" pos:end="347:25">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="351:5" pos:end="351:19"><expr pos:start="351:5" pos:end="351:18"><call pos:start="351:5" pos:end="351:18"><name pos:start="351:5" pos:end="351:14">avio_flush</name><argument_list pos:start="351:15" pos:end="351:18">(<argument pos:start="351:16" pos:end="351:17"><expr pos:start="351:16" pos:end="351:17"><name pos:start="351:16" pos:end="351:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="355:5" pos:end="355:79">// start a new cluster every 5 MB or 5 sec, or 32k / 1 sec for streaming or</comment>

    <comment type="line" pos:start="357:5" pos:end="357:33">// after 4k and on a keyframe</comment>

    <if_stmt pos:start="359:5" pos:end="379:5"><if pos:start="359:5" pos:end="369:5">if <condition pos:start="359:8" pos:end="359:21">(<expr pos:start="359:9" pos:end="359:20"><name pos:start="359:9" pos:end="359:20"><name pos:start="359:9" pos:end="359:10">pb</name><operator pos:start="359:11" pos:end="359:12">-&gt;</operator><name pos:start="359:13" pos:end="359:20">seekable</name></name></expr>)</condition> <block pos:start="359:23" pos:end="369:5">{<block_content pos:start="361:9" pos:end="367:54">

        <if_stmt pos:start="361:9" pos:end="363:43"><if pos:start="361:9" pos:end="363:43">if <condition pos:start="361:12" pos:end="361:40">(<expr pos:start="361:13" pos:end="361:39"><name pos:start="361:13" pos:end="361:35"><name pos:start="361:13" pos:end="361:15">mkv</name><operator pos:start="361:16" pos:end="361:17">-&gt;</operator><name pos:start="361:18" pos:end="361:35">cluster_time_limit</name></name> <operator pos:start="361:37" pos:end="361:37">&lt;</operator> <literal type="number" pos:start="361:39" pos:end="361:39">0</literal></expr>)</condition><block type="pseudo" pos:start="363:13" pos:end="363:43"><block_content pos:start="363:13" pos:end="363:43">

            <expr_stmt pos:start="363:13" pos:end="363:43"><expr pos:start="363:13" pos:end="363:42"><name pos:start="363:13" pos:end="363:35"><name pos:start="363:13" pos:end="363:15">mkv</name><operator pos:start="363:16" pos:end="363:17">-&gt;</operator><name pos:start="363:18" pos:end="363:35">cluster_time_limit</name></name> <operator pos:start="363:37" pos:end="363:37">=</operator> <literal type="number" pos:start="363:39" pos:end="363:42">5000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="365:9" pos:end="367:54"><if pos:start="365:9" pos:end="367:54">if <condition pos:start="365:12" pos:end="365:40">(<expr pos:start="365:13" pos:end="365:39"><name pos:start="365:13" pos:end="365:35"><name pos:start="365:13" pos:end="365:15">mkv</name><operator pos:start="365:16" pos:end="365:17">-&gt;</operator><name pos:start="365:18" pos:end="365:35">cluster_size_limit</name></name> <operator pos:start="365:37" pos:end="365:37">&lt;</operator> <literal type="number" pos:start="365:39" pos:end="365:39">0</literal></expr>)</condition><block type="pseudo" pos:start="367:13" pos:end="367:54"><block_content pos:start="367:13" pos:end="367:54">

            <expr_stmt pos:start="367:13" pos:end="367:54"><expr pos:start="367:13" pos:end="367:53"><name pos:start="367:13" pos:end="367:35"><name pos:start="367:13" pos:end="367:15">mkv</name><operator pos:start="367:16" pos:end="367:17">-&gt;</operator><name pos:start="367:18" pos:end="367:35">cluster_size_limit</name></name> <operator pos:start="367:37" pos:end="367:37">=</operator> <literal type="number" pos:start="367:39" pos:end="367:39">5</literal> <operator pos:start="367:41" pos:end="367:41">*</operator> <literal type="number" pos:start="367:43" pos:end="367:46">1024</literal> <operator pos:start="367:48" pos:end="367:48">*</operator> <literal type="number" pos:start="367:50" pos:end="367:53">1024</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="369:7" pos:end="379:5">else <block pos:start="369:12" pos:end="379:5">{<block_content pos:start="371:9" pos:end="377:48">

        <if_stmt pos:start="371:9" pos:end="373:43"><if pos:start="371:9" pos:end="373:43">if <condition pos:start="371:12" pos:end="371:40">(<expr pos:start="371:13" pos:end="371:39"><name pos:start="371:13" pos:end="371:35"><name pos:start="371:13" pos:end="371:15">mkv</name><operator pos:start="371:16" pos:end="371:17">-&gt;</operator><name pos:start="371:18" pos:end="371:35">cluster_time_limit</name></name> <operator pos:start="371:37" pos:end="371:37">&lt;</operator> <literal type="number" pos:start="371:39" pos:end="371:39">0</literal></expr>)</condition><block type="pseudo" pos:start="373:13" pos:end="373:43"><block_content pos:start="373:13" pos:end="373:43">

            <expr_stmt pos:start="373:13" pos:end="373:43"><expr pos:start="373:13" pos:end="373:42"><name pos:start="373:13" pos:end="373:35"><name pos:start="373:13" pos:end="373:15">mkv</name><operator pos:start="373:16" pos:end="373:17">-&gt;</operator><name pos:start="373:18" pos:end="373:35">cluster_time_limit</name></name> <operator pos:start="373:37" pos:end="373:37">=</operator> <literal type="number" pos:start="373:39" pos:end="373:42">1000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="375:9" pos:end="377:48"><if pos:start="375:9" pos:end="377:48">if <condition pos:start="375:12" pos:end="375:40">(<expr pos:start="375:13" pos:end="375:39"><name pos:start="375:13" pos:end="375:35"><name pos:start="375:13" pos:end="375:15">mkv</name><operator pos:start="375:16" pos:end="375:17">-&gt;</operator><name pos:start="375:18" pos:end="375:35">cluster_size_limit</name></name> <operator pos:start="375:37" pos:end="375:37">&lt;</operator> <literal type="number" pos:start="375:39" pos:end="375:39">0</literal></expr>)</condition><block type="pseudo" pos:start="377:13" pos:end="377:48"><block_content pos:start="377:13" pos:end="377:48">

            <expr_stmt pos:start="377:13" pos:end="377:48"><expr pos:start="377:13" pos:end="377:47"><name pos:start="377:13" pos:end="377:35"><name pos:start="377:13" pos:end="377:15">mkv</name><operator pos:start="377:16" pos:end="377:17">-&gt;</operator><name pos:start="377:18" pos:end="377:35">cluster_size_limit</name></name> <operator pos:start="377:37" pos:end="377:37">=</operator> <literal type="number" pos:start="377:39" pos:end="377:40">32</literal> <operator pos:start="377:42" pos:end="377:42">*</operator> <literal type="number" pos:start="377:44" pos:end="377:47">1024</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="383:5" pos:end="383:13">return <expr pos:start="383:12" pos:end="383:12"><literal type="number" pos:start="383:12" pos:end="383:12">0</literal></expr>;</return>

<label pos:start="385:1" pos:end="385:5"><name pos:start="385:1" pos:end="385:4">fail</name>:</label>

    <expr_stmt pos:start="387:5" pos:end="387:18"><expr pos:start="387:5" pos:end="387:17"><call pos:start="387:5" pos:end="387:17"><name pos:start="387:5" pos:end="387:12">mkv_free</name><argument_list pos:start="387:13" pos:end="387:17">(<argument pos:start="387:14" pos:end="387:16"><expr pos:start="387:14" pos:end="387:16"><name pos:start="387:14" pos:end="387:16">mkv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="389:5" pos:end="389:15">return <expr pos:start="389:12" pos:end="389:14"><name pos:start="389:12" pos:end="389:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
