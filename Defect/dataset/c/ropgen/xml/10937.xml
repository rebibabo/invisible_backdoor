<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10937.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">omap_mcbsp_sink_tick</name><parameter_list pos:start="1:33" pos:end="1:46">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:39"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:43">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:23">omap_mcbsp_s</name></name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:59">= <expr pos:start="5:30" pos:end="5:59"><operator pos:start="5:30" pos:end="5:30">(</operator>struct <name pos:start="5:38" pos:end="5:49">omap_mcbsp_s</name> <operator pos:start="5:51" pos:end="5:51">*</operator><operator pos:start="5:52" pos:end="5:52">)</operator> <name pos:start="5:54" pos:end="5:59">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:20">int</name></type> <name pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:24">bps</name><index pos:start="7:25" pos:end="7:27">[<expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">8</literal></expr>]</index></name> <init pos:start="7:29" pos:end="7:62">= <expr pos:start="7:31" pos:end="7:62"><block pos:start="7:31" pos:end="7:62">{ <expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr>, <expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">1</literal></expr>, <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">1</literal></expr>, <expr pos:start="7:42" pos:end="7:42"><literal type="number" pos:start="7:42" pos:end="7:42">2</literal></expr>, <expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">2</literal></expr>, <expr pos:start="7:48" pos:end="7:48"><literal type="number" pos:start="7:48" pos:end="7:48">2</literal></expr>, <expr pos:start="7:51" pos:end="7:54"><operator pos:start="7:51" pos:end="7:51">-</operator><literal type="number" pos:start="7:52" pos:end="7:54">255</literal></expr>, <expr pos:start="7:57" pos:end="7:60"><operator pos:start="7:57" pos:end="7:57">-</operator><literal type="number" pos:start="7:58" pos:end="7:60">255</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:19">tx_rate</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="17:55"><if pos:start="15:5" pos:end="17:55">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:17">tx_req</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:55"><block_content pos:start="17:9" pos:end="17:55">

        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><call pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:14">printf</name><argument_list pos:start="17:15" pos:end="17:54">(<argument pos:start="17:16" pos:end="17:39"><expr pos:start="17:16" pos:end="17:39"><literal type="string" pos:start="17:16" pos:end="17:39">"%s: Tx FIFO underrun\n"</literal></expr></argument>, <argument pos:start="17:42" pos:end="17:53"><expr pos:start="17:42" pos:end="17:53"><name pos:start="17:42" pos:end="17:53">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:13">tx_req</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:26">tx_rate</name></name> <operator pos:start="21:28" pos:end="21:29">&lt;&lt;</operator> <name pos:start="21:31" pos:end="21:55"><name pos:start="21:31" pos:end="21:33">bps</name><index pos:start="21:34" pos:end="21:55">[<expr pos:start="21:35" pos:end="21:54"><operator pos:start="21:35" pos:end="21:35">(</operator><name pos:start="21:36" pos:end="21:44"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:41">xcr</name><index pos:start="21:42" pos:end="21:44">[<expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">0</literal></expr>]</index></name> <operator pos:start="21:46" pos:end="21:47">&gt;&gt;</operator> <literal type="number" pos:start="21:49" pos:end="21:49">5</literal><operator pos:start="21:50" pos:end="21:50">)</operator> <operator pos:start="21:52" pos:end="21:52">&amp;</operator> <literal type="number" pos:start="21:54" pos:end="21:54">7</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><call pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:25">omap_mcbsp_tx_newdata</name><argument_list pos:start="25:26" pos:end="25:28">(<argument pos:start="25:27" pos:end="25:27"><expr pos:start="25:27" pos:end="25:27"><name pos:start="25:27" pos:end="25:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:43"><expr pos:start="27:5" pos:end="29:42"><call pos:start="27:5" pos:end="29:42"><name pos:start="27:5" pos:end="27:13">timer_mod</name><argument_list pos:start="27:14" pos:end="29:42">(<argument pos:start="27:15" pos:end="27:27"><expr pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:27">sink_timer</name></name></expr></argument>, <argument pos:start="27:30" pos:end="29:41"><expr pos:start="27:30" pos:end="29:41"><call pos:start="27:30" pos:end="27:66"><name pos:start="27:30" pos:end="27:46">qemu_clock_get_ns</name><argument_list pos:start="27:47" pos:end="27:66">(<argument pos:start="27:48" pos:end="27:65"><expr pos:start="27:48" pos:end="27:65"><name pos:start="27:48" pos:end="27:65">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call> <operator pos:start="27:68" pos:end="27:68">+</operator>

                   <name pos:start="29:20" pos:end="29:41">NANOSECONDS_PER_SECOND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
