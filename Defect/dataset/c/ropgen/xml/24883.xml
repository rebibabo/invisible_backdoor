<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24883.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">mmu40x_get_physical_address</name> <parameter_list pos:start="1:33" pos:end="3:79">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:41">CPUState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:57">mmu_ctx_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">ctx</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:53"><decl pos:start="3:34" pos:end="3:53"><type pos:start="3:34" pos:end="3:53"><name pos:start="3:34" pos:end="3:45">target_ulong</name></type> <name pos:start="3:47" pos:end="3:53">address</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:61"><decl pos:start="3:56" pos:end="3:61"><type pos:start="3:56" pos:end="3:61"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:61">rw</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:78"><decl pos:start="3:64" pos:end="3:78"><type pos:start="3:64" pos:end="3:78"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:78">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="229:1">{<block_content pos:start="7:5" pos:end="227:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ppcemb_tlb_t</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:28">raddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>, <decl pos:start="11:17" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:20">zsel</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:25">zpr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">-</operator><literal type="number" pos:start="15:12" pos:end="15:12">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:9">raddr</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">-</operator><literal type="number" pos:start="17:14" pos:end="17:14">1</literal></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="212:0">for <control pos:start="19:9" pos:end="19:37">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:32"><expr pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:23">env</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:31">nb_tlb</name></name></expr>;</condition> <incr pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:34">i</name><operator pos:start="19:35" pos:end="19:36">++</operator></expr></incr>)</control> <block pos:start="19:39" pos:end="212:0">{<block_content pos:start="21:9" pos:end="207:9">

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:11">tlb</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:18">env</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:23">tlb</name><index pos:start="21:24" pos:end="21:26">[<expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">i</name></expr>]</index></name><operator pos:start="21:27" pos:end="21:27">.</operator><name pos:start="21:28" pos:end="21:31">tlbe</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:21"><if pos:start="23:9" pos:end="27:21">if <condition pos:start="23:12" pos:end="25:62">(<expr pos:start="23:13" pos:end="25:61"><call pos:start="23:13" pos:end="25:57"><name pos:start="23:13" pos:end="23:28">ppcemb_tlb_check</name><argument_list pos:start="23:29" pos:end="25:57">(<argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">env</name></expr></argument>, <argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><name pos:start="23:35" pos:end="23:37">tlb</name></expr></argument>, <argument pos:start="23:40" pos:end="23:45"><expr pos:start="23:40" pos:end="23:45"><operator pos:start="23:40" pos:end="23:40">&amp;</operator><name pos:start="23:41" pos:end="23:45">raddr</name></expr></argument>, <argument pos:start="23:48" pos:end="23:54"><expr pos:start="23:48" pos:end="23:54"><name pos:start="23:48" pos:end="23:54">address</name></expr></argument>,

                             <argument pos:start="25:30" pos:end="25:50"><expr pos:start="25:30" pos:end="25:50"><name pos:start="25:30" pos:end="25:50"><name pos:start="25:30" pos:end="25:32">env</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:37">spr</name><index pos:start="25:38" pos:end="25:50">[<expr pos:start="25:39" pos:end="25:49"><name pos:start="25:39" pos:end="25:49">SPR_40x_PID</name></expr>]</index></name></expr></argument>, <argument pos:start="25:53" pos:end="25:53"><expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">0</literal></expr></argument>, <argument pos:start="25:56" pos:end="25:56"><expr pos:start="25:56" pos:end="25:56"><name pos:start="25:56" pos:end="25:56">i</name></expr></argument>)</argument_list></call> <operator pos:start="25:59" pos:end="25:59">&lt;</operator> <literal type="number" pos:start="25:61" pos:end="25:61">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <continue pos:start="27:13" pos:end="27:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:12">zsel</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:19">tlb</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:25">attr</name></name> <operator pos:start="29:27" pos:end="29:28">&gt;&gt;</operator> <literal type="number" pos:start="29:30" pos:end="29:30">4</literal><operator pos:start="29:31" pos:end="29:31">)</operator> <operator pos:start="29:33" pos:end="29:33">&amp;</operator> <literal type="number" pos:start="29:35" pos:end="29:37">0xF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="34:0"><expr pos:start="31:9" pos:end="31:64"><name pos:start="31:9" pos:end="31:11">zpr</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <operator pos:start="31:15" pos:end="31:15">(</operator><name pos:start="31:16" pos:end="31:36"><name pos:start="31:16" pos:end="31:18">env</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:23">spr</name><index pos:start="31:24" pos:end="31:36">[<expr pos:start="31:25" pos:end="31:35"><name pos:start="31:25" pos:end="31:35">SPR_40x_ZPR</name></expr>]</index></name> <operator pos:start="31:38" pos:end="31:39">&gt;&gt;</operator> <operator pos:start="31:41" pos:end="31:41">(</operator><literal type="number" pos:start="31:42" pos:end="31:45">28</literal> <operator pos:start="31:45" pos:end="31:45">-</operator> <operator pos:start="31:47" pos:end="31:47">(</operator><literal type="number" pos:start="31:48" pos:end="31:48">2</literal> <operator pos:start="31:50" pos:end="31:50">*</operator> <name pos:start="31:52" pos:end="31:55">zsel</name><operator pos:start="31:56" pos:end="31:56">)</operator><operator pos:start="31:57" pos:end="31:57">)</operator><operator pos:start="31:58" pos:end="31:58">)</operator> <operator pos:start="31:60" pos:end="31:60">&amp;</operator> <literal type="number" pos:start="31:62" pos:end="31:64">0x3</literal></expr>;</expr_stmt>

<cpp:if pos:start="33:1" pos:end="33:32">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:32"><call pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:11">defined</name> <argument_list pos:start="33:13" pos:end="33:32">(<argument pos:start="33:14" pos:end="33:31"><expr pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="35:9" pos:end="44:0"><if pos:start="35:9" pos:end="44:0">if <condition pos:start="35:12" pos:end="35:26">(<expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:20">loglevel</name> <operator pos:start="35:22" pos:end="35:23">!=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>)</condition> <block pos:start="35:28" pos:end="44:0">{<block_content pos:start="37:13" pos:end="39:59">

            <expr_stmt pos:start="37:13" pos:end="39:59"><expr pos:start="37:13" pos:end="39:58"><call pos:start="37:13" pos:end="39:58"><name pos:start="37:13" pos:end="37:19">fprintf</name><argument_list pos:start="37:20" pos:end="39:58">(<argument pos:start="37:21" pos:end="37:27"><expr pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:27">logfile</name></expr></argument>, <argument pos:start="37:30" pos:end="37:74"><expr pos:start="37:30" pos:end="37:74"><literal type="string" pos:start="37:30" pos:end="37:74">"%s: TLB %d zsel %d zpr %d rw %d attr %08x\n"</literal></expr></argument>,

                    <argument pos:start="39:21" pos:end="39:28"><expr pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:28">__func__</name></expr></argument>, <argument pos:start="39:31" pos:end="39:31"><expr pos:start="39:31" pos:end="39:31"><name pos:start="39:31" pos:end="39:31">i</name></expr></argument>, <argument pos:start="39:34" pos:end="39:37"><expr pos:start="39:34" pos:end="39:37"><name pos:start="39:34" pos:end="39:37">zsel</name></expr></argument>, <argument pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><name pos:start="39:40" pos:end="39:42">zpr</name></expr></argument>, <argument pos:start="39:45" pos:end="39:46"><expr pos:start="39:45" pos:end="39:46"><name pos:start="39:45" pos:end="39:46">rw</name></expr></argument>, <argument pos:start="39:49" pos:end="39:57"><expr pos:start="39:49" pos:end="39:57"><name pos:start="39:49" pos:end="39:57"><name pos:start="39:49" pos:end="39:51">tlb</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:57">attr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="45:9" pos:end="185:9"><if pos:start="45:9" pos:end="115:9">if <condition pos:start="45:12" pos:end="45:39">(<expr pos:start="45:13" pos:end="45:38"><name pos:start="45:13" pos:end="45:23">access_type</name> <operator pos:start="45:25" pos:end="45:26">==</operator> <name pos:start="45:28" pos:end="45:38">ACCESS_CODE</name></expr>)</condition> <block pos:start="45:41" pos:end="115:9">{<block_content pos:start="49:13" pos:end="113:13">

            <comment type="block" pos:start="47:13" pos:end="47:42">/* Check execute enable bit */</comment>

            <switch pos:start="49:13" pos:end="113:13">switch <condition pos:start="49:20" pos:end="49:24">(<expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">zpr</name></expr>)</condition> <block pos:start="49:26" pos:end="113:13">{<block_content pos:start="51:13" pos:end="111:22">

            <case pos:start="51:13" pos:end="51:21">case <expr pos:start="51:18" pos:end="51:20"><literal type="number" pos:start="51:18" pos:end="51:20">0x2</literal></expr>:</case>

                <if_stmt pos:start="53:17" pos:end="55:41"><if pos:start="53:17" pos:end="55:41">if <condition pos:start="53:20" pos:end="53:27">(<expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">msr_pr</name></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:41"><block_content pos:start="55:21" pos:end="55:41">

                    <goto pos:start="55:21" pos:end="55:41">goto <name pos:start="55:26" pos:end="55:40">check_exec_perm</name>;</goto></block_content></block></if></if_stmt>

                <goto pos:start="57:17" pos:end="57:34">goto <name pos:start="57:22" pos:end="57:33">exec_granted</name>;</goto>

            <case pos:start="59:13" pos:end="59:21">case <expr pos:start="59:18" pos:end="59:20"><literal type="number" pos:start="59:18" pos:end="59:20">0x0</literal></expr>:</case>

                <if_stmt pos:start="61:17" pos:end="69:17"><if pos:start="61:17" pos:end="69:17">if <condition pos:start="61:20" pos:end="61:27">(<expr pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:26">msr_pr</name></expr>)</condition> <block pos:start="61:29" pos:end="69:17">{<block_content pos:start="63:21" pos:end="67:26">

                    <expr_stmt pos:start="63:21" pos:end="63:34"><expr pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:29"><name pos:start="63:21" pos:end="63:23">ctx</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:29">prot</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <literal type="number" pos:start="63:33" pos:end="63:33">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:29"><expr pos:start="65:21" pos:end="65:28"><name pos:start="65:21" pos:end="65:23">ret</name> <operator pos:start="65:25" pos:end="65:25">=</operator> <operator pos:start="65:27" pos:end="65:27">-</operator><literal type="number" pos:start="65:28" pos:end="65:28">3</literal></expr>;</expr_stmt>

                    <break pos:start="67:21" pos:end="67:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="71:17" pos:end="71:35">/* No break here */</comment>

            <case pos:start="73:13" pos:end="73:21">case <expr pos:start="73:18" pos:end="73:20"><literal type="number" pos:start="73:18" pos:end="73:20">0x1</literal></expr>:</case>

            <label pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:27">check_exec_perm</name>:</label>

                <comment type="block" pos:start="77:17" pos:end="77:42">/* Check from TLB entry */</comment>

                <if_stmt pos:start="79:17" pos:end="97:17"><if pos:start="79:17" pos:end="83:17">if <condition pos:start="79:20" pos:end="79:45">(<expr pos:start="79:21" pos:end="79:44"><operator pos:start="79:21" pos:end="79:21">!</operator><operator pos:start="79:22" pos:end="79:22">(</operator><name pos:start="79:23" pos:end="79:31"><name pos:start="79:23" pos:end="79:25">tlb</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:31">prot</name></name> <operator pos:start="79:33" pos:end="79:33">&amp;</operator> <name pos:start="79:35" pos:end="79:43">PAGE_EXEC</name><operator pos:start="79:44" pos:end="79:44">)</operator></expr>)</condition> <block pos:start="79:47" pos:end="83:17">{<block_content pos:start="81:21" pos:end="81:29">

                    <expr_stmt pos:start="81:21" pos:end="81:29"><expr pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:23">ret</name> <operator pos:start="81:25" pos:end="81:25">=</operator> <operator pos:start="81:27" pos:end="81:27">-</operator><literal type="number" pos:start="81:28" pos:end="81:28">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="83:19" pos:end="97:17">else <block pos:start="83:24" pos:end="97:17">{<block_content pos:start="85:21" pos:end="95:28">

                    <if_stmt pos:start="85:21" pos:end="93:21"><if pos:start="85:21" pos:end="89:21">if <condition pos:start="85:24" pos:end="85:47">(<expr pos:start="85:25" pos:end="85:46"><name pos:start="85:25" pos:end="85:33"><name pos:start="85:25" pos:end="85:27">tlb</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:33">prot</name></name> <operator pos:start="85:35" pos:end="85:35">&amp;</operator> <name pos:start="85:37" pos:end="85:46">PAGE_WRITE</name></expr>)</condition> <block pos:start="85:49" pos:end="89:21">{<block_content pos:start="87:25" pos:end="87:59">

                        <expr_stmt pos:start="87:25" pos:end="87:59"><expr pos:start="87:25" pos:end="87:58"><name pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:27">ctx</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:33">prot</name></name> <operator pos:start="87:35" pos:end="87:35">=</operator> <name pos:start="87:37" pos:end="87:45">PAGE_READ</name> <operator pos:start="87:47" pos:end="87:47">|</operator> <name pos:start="87:49" pos:end="87:58">PAGE_WRITE</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="89:23" pos:end="93:21">else <block pos:start="89:28" pos:end="93:21">{<block_content pos:start="91:25" pos:end="91:46">

                        <expr_stmt pos:start="91:25" pos:end="91:46"><expr pos:start="91:25" pos:end="91:45"><name pos:start="91:25" pos:end="91:33"><name pos:start="91:25" pos:end="91:27">ctx</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:33">prot</name></name> <operator pos:start="91:35" pos:end="91:35">=</operator> <name pos:start="91:37" pos:end="91:45">PAGE_READ</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:28"><expr pos:start="95:21" pos:end="95:27"><name pos:start="95:21" pos:end="95:23">ret</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <literal type="number" pos:start="95:27" pos:end="95:27">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="99:17" pos:end="99:22">break;</break>

            <case pos:start="101:13" pos:end="101:21">case <expr pos:start="101:18" pos:end="101:20"><literal type="number" pos:start="101:18" pos:end="101:20">0x3</literal></expr>:</case>

            <label pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:24">exec_granted</name>:</label>

                <comment type="block" pos:start="105:17" pos:end="105:42">/* All accesses granted */</comment>

                <expr_stmt pos:start="107:17" pos:end="107:51"><expr pos:start="107:17" pos:end="107:50"><name pos:start="107:17" pos:end="107:25"><name pos:start="107:17" pos:end="107:19">ctx</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:25">prot</name></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <name pos:start="107:29" pos:end="107:37">PAGE_READ</name> <operator pos:start="107:39" pos:end="107:39">|</operator> <name pos:start="107:41" pos:end="107:50">PAGE_WRITE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:24"><expr pos:start="109:17" pos:end="109:23"><name pos:start="109:17" pos:end="109:19">ret</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <literal type="number" pos:start="109:23" pos:end="109:23">0</literal></expr>;</expr_stmt>

                <break pos:start="111:17" pos:end="111:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="185:9">else <block pos:start="115:16" pos:end="185:9">{<block_content pos:start="117:13" pos:end="183:13">

            <switch pos:start="117:13" pos:end="183:13">switch <condition pos:start="117:20" pos:end="117:24">(<expr pos:start="117:21" pos:end="117:23"><name pos:start="117:21" pos:end="117:23">zpr</name></expr>)</condition> <block pos:start="117:26" pos:end="183:13">{<block_content pos:start="119:13" pos:end="181:22">

            <case pos:start="119:13" pos:end="119:21">case <expr pos:start="119:18" pos:end="119:20"><literal type="number" pos:start="119:18" pos:end="119:20">0x2</literal></expr>:</case>

                <if_stmt pos:start="121:17" pos:end="123:39"><if pos:start="121:17" pos:end="123:39">if <condition pos:start="121:20" pos:end="121:27">(<expr pos:start="121:21" pos:end="121:26"><name pos:start="121:21" pos:end="121:26">msr_pr</name></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:39"><block_content pos:start="123:21" pos:end="123:39">

                    <goto pos:start="123:21" pos:end="123:39">goto <name pos:start="123:26" pos:end="123:38">check_rw_perm</name>;</goto></block_content></block></if></if_stmt>

                <goto pos:start="125:17" pos:end="125:32">goto <name pos:start="125:22" pos:end="125:31">rw_granted</name>;</goto>

            <case pos:start="127:13" pos:end="127:21">case <expr pos:start="127:18" pos:end="127:20"><literal type="number" pos:start="127:18" pos:end="127:20">0x0</literal></expr>:</case>

                <if_stmt pos:start="129:17" pos:end="137:17"><if pos:start="129:17" pos:end="137:17">if <condition pos:start="129:20" pos:end="129:27">(<expr pos:start="129:21" pos:end="129:26"><name pos:start="129:21" pos:end="129:26">msr_pr</name></expr>)</condition> <block pos:start="129:29" pos:end="137:17">{<block_content pos:start="131:21" pos:end="135:26">

                    <expr_stmt pos:start="131:21" pos:end="131:34"><expr pos:start="131:21" pos:end="131:33"><name pos:start="131:21" pos:end="131:29"><name pos:start="131:21" pos:end="131:23">ctx</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:29">prot</name></name> <operator pos:start="131:31" pos:end="131:31">=</operator> <literal type="number" pos:start="131:33" pos:end="131:33">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:29"><expr pos:start="133:21" pos:end="133:28"><name pos:start="133:21" pos:end="133:23">ret</name> <operator pos:start="133:25" pos:end="133:25">=</operator> <operator pos:start="133:27" pos:end="133:27">-</operator><literal type="number" pos:start="133:28" pos:end="133:28">2</literal></expr>;</expr_stmt>

                    <break pos:start="135:21" pos:end="135:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="139:17" pos:end="139:35">/* No break here */</comment>

            <case pos:start="141:13" pos:end="141:21">case <expr pos:start="141:18" pos:end="141:20"><literal type="number" pos:start="141:18" pos:end="141:20">0x1</literal></expr>:</case>

            <label pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:25">check_rw_perm</name>:</label>

                <comment type="block" pos:start="145:17" pos:end="145:42">/* Check from TLB entry */</comment>

                <comment type="block" pos:start="147:17" pos:end="147:48">/* Check write protection bit */</comment>

                <if_stmt pos:start="149:17" pos:end="167:17"><if pos:start="149:17" pos:end="155:17">if <condition pos:start="149:20" pos:end="149:43">(<expr pos:start="149:21" pos:end="149:42"><name pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:23">tlb</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:29">prot</name></name> <operator pos:start="149:31" pos:end="149:31">&amp;</operator> <name pos:start="149:33" pos:end="149:42">PAGE_WRITE</name></expr>)</condition> <block pos:start="149:45" pos:end="155:17">{<block_content pos:start="151:21" pos:end="153:28">

                    <expr_stmt pos:start="151:21" pos:end="151:55"><expr pos:start="151:21" pos:end="151:54"><name pos:start="151:21" pos:end="151:29"><name pos:start="151:21" pos:end="151:23">ctx</name><operator pos:start="151:24" pos:end="151:25">-&gt;</operator><name pos:start="151:26" pos:end="151:29">prot</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <name pos:start="151:33" pos:end="151:41">PAGE_READ</name> <operator pos:start="151:43" pos:end="151:43">|</operator> <name pos:start="151:45" pos:end="151:54">PAGE_WRITE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:28"><expr pos:start="153:21" pos:end="153:27"><name pos:start="153:21" pos:end="153:23">ret</name> <operator pos:start="153:25" pos:end="153:25">=</operator> <literal type="number" pos:start="153:27" pos:end="153:27">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="155:19" pos:end="167:17">else <block pos:start="155:24" pos:end="167:17">{<block_content pos:start="157:21" pos:end="165:32">

                    <expr_stmt pos:start="157:21" pos:end="157:42"><expr pos:start="157:21" pos:end="157:41"><name pos:start="157:21" pos:end="157:29"><name pos:start="157:21" pos:end="157:23">ctx</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:29">prot</name></name> <operator pos:start="157:31" pos:end="157:31">=</operator> <name pos:start="157:33" pos:end="157:41">PAGE_READ</name></expr>;</expr_stmt>

                    <if_stmt pos:start="159:21" pos:end="165:32"><if pos:start="159:21" pos:end="161:33">if <condition pos:start="159:24" pos:end="159:27">(<expr pos:start="159:25" pos:end="159:26"><name pos:start="159:25" pos:end="159:26">rw</name></expr>)</condition><block type="pseudo" pos:start="161:25" pos:end="161:33"><block_content pos:start="161:25" pos:end="161:33">

                        <expr_stmt pos:start="161:25" pos:end="161:33"><expr pos:start="161:25" pos:end="161:32"><name pos:start="161:25" pos:end="161:27">ret</name> <operator pos:start="161:29" pos:end="161:29">=</operator> <operator pos:start="161:31" pos:end="161:31">-</operator><literal type="number" pos:start="161:32" pos:end="161:32">2</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="163:21" pos:end="165:32">else<block type="pseudo" pos:start="165:25" pos:end="165:32"><block_content pos:start="165:25" pos:end="165:32">

                        <expr_stmt pos:start="165:25" pos:end="165:32"><expr pos:start="165:25" pos:end="165:31"><name pos:start="165:25" pos:end="165:27">ret</name> <operator pos:start="165:29" pos:end="165:29">=</operator> <literal type="number" pos:start="165:31" pos:end="165:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="169:17" pos:end="169:22">break;</break>

            <case pos:start="171:13" pos:end="171:21">case <expr pos:start="171:18" pos:end="171:20"><literal type="number" pos:start="171:18" pos:end="171:20">0x3</literal></expr>:</case>

            <label pos:start="173:13" pos:end="173:23"><name pos:start="173:13" pos:end="173:22">rw_granted</name>:</label>

                <comment type="block" pos:start="175:17" pos:end="175:42">/* All accesses granted */</comment>

                <expr_stmt pos:start="177:17" pos:end="177:51"><expr pos:start="177:17" pos:end="177:50"><name pos:start="177:17" pos:end="177:25"><name pos:start="177:17" pos:end="177:19">ctx</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:25">prot</name></name> <operator pos:start="177:27" pos:end="177:27">=</operator> <name pos:start="177:29" pos:end="177:37">PAGE_READ</name> <operator pos:start="177:39" pos:end="177:39">|</operator> <name pos:start="177:41" pos:end="177:50">PAGE_WRITE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:24"><expr pos:start="179:17" pos:end="179:23"><name pos:start="179:17" pos:end="179:19">ret</name> <operator pos:start="179:21" pos:end="179:21">=</operator> <literal type="number" pos:start="179:23" pos:end="179:23">0</literal></expr>;</expr_stmt>

                <break pos:start="181:17" pos:end="181:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="187:9" pos:end="207:9"><if pos:start="187:9" pos:end="207:9">if <condition pos:start="187:12" pos:end="187:21">(<expr pos:start="187:13" pos:end="187:20"><name pos:start="187:13" pos:end="187:15">ret</name> <operator pos:start="187:17" pos:end="187:18">&gt;=</operator> <literal type="number" pos:start="187:20" pos:end="187:20">0</literal></expr>)</condition> <block pos:start="187:23" pos:end="207:9">{<block_content pos:start="189:13" pos:end="205:21">

            <expr_stmt pos:start="189:13" pos:end="192:0"><expr pos:start="189:13" pos:end="189:30"><name pos:start="189:13" pos:end="189:22"><name pos:start="189:13" pos:end="189:15">ctx</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:22">raddr</name></name> <operator pos:start="189:24" pos:end="189:24">=</operator> <name pos:start="189:26" pos:end="189:30">raddr</name></expr>;</expr_stmt>

<cpp:if pos:start="191:1" pos:end="191:32">#<cpp:directive pos:start="191:2" pos:end="191:3">if</cpp:directive> <expr pos:start="191:5" pos:end="191:32"><call pos:start="191:5" pos:end="191:32"><name pos:start="191:5" pos:end="191:11">defined</name> <argument_list pos:start="191:13" pos:end="191:32">(<argument pos:start="191:14" pos:end="191:31"><expr pos:start="191:14" pos:end="191:31"><name pos:start="191:14" pos:end="191:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="193:13" pos:end="204:0"><if pos:start="193:13" pos:end="204:0">if <condition pos:start="193:16" pos:end="193:30">(<expr pos:start="193:17" pos:end="193:29"><name pos:start="193:17" pos:end="193:24">loglevel</name> <operator pos:start="193:26" pos:end="193:27">!=</operator> <literal type="number" pos:start="193:29" pos:end="193:29">0</literal></expr>)</condition> <block pos:start="193:32" pos:end="204:0">{<block_content pos:start="195:17" pos:end="199:29">

                <expr_stmt pos:start="195:17" pos:end="199:29"><expr pos:start="195:17" pos:end="199:28"><call pos:start="195:17" pos:end="199:28"><name pos:start="195:17" pos:end="195:23">fprintf</name><argument_list pos:start="195:24" pos:end="199:28">(<argument pos:start="195:25" pos:end="195:31"><expr pos:start="195:25" pos:end="195:31"><name pos:start="195:25" pos:end="195:31">logfile</name></expr></argument>, <argument pos:start="195:34" pos:end="197:34"><expr pos:start="195:34" pos:end="197:34"><literal type="string" pos:start="195:34" pos:end="195:54">"%s: access granted "</literal> <name pos:start="195:56" pos:end="195:60">ADDRX</name> <literal type="string" pos:start="195:62" pos:end="195:67">" =&gt; "</literal> <name pos:start="195:69" pos:end="195:72">REGX</name>

                        <literal type="string" pos:start="197:25" pos:end="197:34">" %d %d\n"</literal></expr></argument>, <argument pos:start="197:37" pos:end="197:44"><expr pos:start="197:37" pos:end="197:44"><name pos:start="197:37" pos:end="197:44">__func__</name></expr></argument>, <argument pos:start="197:47" pos:end="197:53"><expr pos:start="197:47" pos:end="197:53"><name pos:start="197:47" pos:end="197:53">address</name></expr></argument>, <argument pos:start="197:56" pos:end="197:65"><expr pos:start="197:56" pos:end="197:65"><name pos:start="197:56" pos:end="197:65"><name pos:start="197:56" pos:end="197:58">ctx</name><operator pos:start="197:59" pos:end="197:60">-&gt;</operator><name pos:start="197:61" pos:end="197:65">raddr</name></name></expr></argument>, <argument pos:start="197:68" pos:end="197:76"><expr pos:start="197:68" pos:end="197:76"><name pos:start="197:68" pos:end="197:76"><name pos:start="197:68" pos:end="197:70">ctx</name><operator pos:start="197:71" pos:end="197:72">-&gt;</operator><name pos:start="197:73" pos:end="197:76">prot</name></name></expr></argument>,

                        <argument pos:start="199:25" pos:end="199:27"><expr pos:start="199:25" pos:end="199:27"><name pos:start="199:25" pos:end="199:27">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>

            <return pos:start="205:13" pos:end="205:21">return <expr pos:start="205:20" pos:end="205:20"><literal type="number" pos:start="205:20" pos:end="205:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:if pos:start="211:1" pos:end="211:32">#<cpp:directive pos:start="211:2" pos:end="211:3">if</cpp:directive> <expr pos:start="211:5" pos:end="211:32"><call pos:start="211:5" pos:end="211:32"><name pos:start="211:5" pos:end="211:11">defined</name> <argument_list pos:start="211:13" pos:end="211:32">(<argument pos:start="211:14" pos:end="211:31"><expr pos:start="211:14" pos:end="211:31"><name pos:start="211:14" pos:end="211:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="213:5" pos:end="224:0"><if pos:start="213:5" pos:end="224:0">if <condition pos:start="213:8" pos:end="213:22">(<expr pos:start="213:9" pos:end="213:21"><name pos:start="213:9" pos:end="213:16">loglevel</name> <operator pos:start="213:18" pos:end="213:19">!=</operator> <literal type="number" pos:start="213:21" pos:end="213:21">0</literal></expr>)</condition> <block pos:start="213:24" pos:end="224:0">{<block_content pos:start="215:9" pos:end="219:21">

        <expr_stmt pos:start="215:9" pos:end="219:21"><expr pos:start="215:9" pos:end="219:20"><call pos:start="215:9" pos:end="219:20"><name pos:start="215:9" pos:end="215:15">fprintf</name><argument_list pos:start="215:16" pos:end="219:20">(<argument pos:start="215:17" pos:end="215:23"><expr pos:start="215:17" pos:end="215:23"><name pos:start="215:17" pos:end="215:23">logfile</name></expr></argument>, <argument pos:start="215:26" pos:end="217:26"><expr pos:start="215:26" pos:end="217:26"><literal type="string" pos:start="215:26" pos:end="215:46">"%s: access refused "</literal> <name pos:start="215:48" pos:end="215:52">ADDRX</name> <literal type="string" pos:start="215:54" pos:end="215:59">" =&gt; "</literal> <name pos:start="215:61" pos:end="215:64">REGX</name>

                <literal type="string" pos:start="217:17" pos:end="217:26">" %d %d\n"</literal></expr></argument>, <argument pos:start="217:29" pos:end="217:36"><expr pos:start="217:29" pos:end="217:36"><name pos:start="217:29" pos:end="217:36">__func__</name></expr></argument>, <argument pos:start="217:39" pos:end="217:45"><expr pos:start="217:39" pos:end="217:45"><name pos:start="217:39" pos:end="217:45">address</name></expr></argument>, <argument pos:start="217:48" pos:end="217:52"><expr pos:start="217:48" pos:end="217:52"><name pos:start="217:48" pos:end="217:52">raddr</name></expr></argument>, <argument pos:start="217:55" pos:end="217:63"><expr pos:start="217:55" pos:end="217:63"><name pos:start="217:55" pos:end="217:63"><name pos:start="217:55" pos:end="217:57">ctx</name><operator pos:start="217:58" pos:end="217:59">-&gt;</operator><name pos:start="217:60" pos:end="217:63">prot</name></name></expr></argument>,

                <argument pos:start="219:17" pos:end="219:19"><expr pos:start="219:17" pos:end="219:19"><name pos:start="219:17" pos:end="219:19">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="223:1" pos:end="223:6">#<cpp:directive pos:start="223:2" pos:end="223:6">endif</cpp:directive></cpp:endif>



    <return pos:start="227:5" pos:end="227:15">return <expr pos:start="227:12" pos:end="227:14"><name pos:start="227:12" pos:end="227:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
