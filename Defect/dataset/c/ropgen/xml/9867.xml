<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9867.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">mmio_ide_init</name> <parameter_list pos:start="1:20" pos:end="7:51">(<parameter pos:start="1:21" pos:end="1:46"><decl pos:start="1:21" pos:end="1:46"><type pos:start="1:21" pos:end="1:46"><name pos:start="1:21" pos:end="1:38">target_phys_addr_t</name></type> <name pos:start="1:40" pos:end="1:46">membase</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:75"><decl pos:start="1:49" pos:end="1:75"><type pos:start="1:49" pos:end="1:75"><name pos:start="1:49" pos:end="1:66">target_phys_addr_t</name></type> <name pos:start="1:68" pos:end="1:75">membase2</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:47"><decl pos:start="3:21" pos:end="3:47"><type pos:start="3:21" pos:end="3:47"><name pos:start="3:21" pos:end="3:32">MemoryRegion</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:47">address_space</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:32"><decl pos:start="5:21" pos:end="5:32"><type pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:28">qemu_irq</name></type> <name pos:start="5:30" pos:end="5:32">irq</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:43"><decl pos:start="5:35" pos:end="5:43"><type pos:start="5:35" pos:end="5:43"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:43">shift</name></decl></parameter>,

                    <parameter pos:start="7:21" pos:end="7:34"><decl pos:start="7:21" pos:end="7:34"><type pos:start="7:21" pos:end="7:34"><name pos:start="7:21" pos:end="7:29">DriveInfo</name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:34">hd0</name></decl></parameter>, <parameter pos:start="7:37" pos:end="7:50"><decl pos:start="7:37" pos:end="7:50"><type pos:start="7:37" pos:end="7:50"><name pos:start="7:37" pos:end="7:45">DriveInfo</name> <modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:50">hd1</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="39:1">{<block_content pos:start="11:5" pos:end="37:43">

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">MMIOState</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:16">s</name> <init pos:start="11:18" pos:end="11:47">= <expr pos:start="11:20" pos:end="11:47"><call pos:start="11:20" pos:end="11:47"><name pos:start="11:20" pos:end="11:28">g_malloc0</name><argument_list pos:start="11:29" pos:end="11:47">(<argument pos:start="11:30" pos:end="11:46"><expr pos:start="11:30" pos:end="11:46"><sizeof pos:start="11:30" pos:end="11:46">sizeof<argument_list pos:start="11:36" pos:end="11:46">(<argument pos:start="11:37" pos:end="11:45"><expr pos:start="11:37" pos:end="11:45"><name pos:start="11:37" pos:end="11:45">MMIOState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:59"><expr pos:start="15:5" pos:end="15:58"><call pos:start="15:5" pos:end="15:58"><name pos:start="15:5" pos:end="15:34">ide_init2_with_non_qdev_drives</name><argument_list pos:start="15:35" pos:end="15:58">(<argument pos:start="15:36" pos:end="15:42"><expr pos:start="15:36" pos:end="15:42"><operator pos:start="15:36" pos:end="15:36">&amp;</operator><name pos:start="15:37" pos:end="15:42"><name pos:start="15:37" pos:end="15:37">s</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:42">bus</name></name></expr></argument>, <argument pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><name pos:start="15:45" pos:end="15:47">hd0</name></expr></argument>, <argument pos:start="15:50" pos:end="15:52"><expr pos:start="15:50" pos:end="15:52"><name pos:start="15:50" pos:end="15:52">hd1</name></expr></argument>, <argument pos:start="15:55" pos:end="15:57"><expr pos:start="15:55" pos:end="15:57"><name pos:start="15:55" pos:end="15:57">irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">shift</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:20">shift</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:53"><expr pos:start="23:5" pos:end="25:52"><call pos:start="23:5" pos:end="25:52"><name pos:start="23:5" pos:end="23:25">memory_region_init_io</name><argument_list pos:start="23:26" pos:end="25:52">(<argument pos:start="23:27" pos:end="23:36"><expr pos:start="23:27" pos:end="23:36"><operator pos:start="23:27" pos:end="23:27">&amp;</operator><name pos:start="23:28" pos:end="23:36"><name pos:start="23:28" pos:end="23:28">s</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:36">iomem1</name></name></expr></argument>, <argument pos:start="23:39" pos:end="23:51"><expr pos:start="23:39" pos:end="23:51"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:51">mmio_ide_ops</name></expr></argument>, <argument pos:start="23:54" pos:end="23:54"><expr pos:start="23:54" pos:end="23:54"><name pos:start="23:54" pos:end="23:54">s</name></expr></argument>,

                          <argument pos:start="25:27" pos:end="25:38"><expr pos:start="25:27" pos:end="25:38"><literal type="string" pos:start="25:27" pos:end="25:38">"ide-mmio.1"</literal></expr></argument>, <argument pos:start="25:41" pos:end="25:51"><expr pos:start="25:41" pos:end="25:51"><literal type="number" pos:start="25:41" pos:end="25:42">16</literal> <operator pos:start="25:44" pos:end="25:45">&lt;&lt;</operator> <name pos:start="25:47" pos:end="25:51">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:52"><expr pos:start="27:5" pos:end="29:51"><call pos:start="27:5" pos:end="29:51"><name pos:start="27:5" pos:end="27:25">memory_region_init_io</name><argument_list pos:start="27:26" pos:end="29:51">(<argument pos:start="27:27" pos:end="27:36"><expr pos:start="27:27" pos:end="27:36"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:36"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:36">iomem2</name></name></expr></argument>, <argument pos:start="27:39" pos:end="27:54"><expr pos:start="27:39" pos:end="27:54"><operator pos:start="27:39" pos:end="27:39">&amp;</operator><name pos:start="27:40" pos:end="27:54">mmio_ide_cs_ops</name></expr></argument>, <argument pos:start="27:57" pos:end="27:57"><expr pos:start="27:57" pos:end="27:57"><name pos:start="27:57" pos:end="27:57">s</name></expr></argument>,

                          <argument pos:start="29:27" pos:end="29:38"><expr pos:start="29:27" pos:end="29:38"><literal type="string" pos:start="29:27" pos:end="29:38">"ide-mmio.2"</literal></expr></argument>, <argument pos:start="29:41" pos:end="29:50"><expr pos:start="29:41" pos:end="29:50"><literal type="number" pos:start="29:41" pos:end="29:41">2</literal> <operator pos:start="29:43" pos:end="29:44">&lt;&lt;</operator> <name pos:start="29:46" pos:end="29:50">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:68"><expr pos:start="31:5" pos:end="31:67"><call pos:start="31:5" pos:end="31:67"><name pos:start="31:5" pos:end="31:31">memory_region_add_subregion</name><argument_list pos:start="31:32" pos:end="31:67">(<argument pos:start="31:33" pos:end="31:45"><expr pos:start="31:33" pos:end="31:45"><name pos:start="31:33" pos:end="31:45">address_space</name></expr></argument>, <argument pos:start="31:48" pos:end="31:54"><expr pos:start="31:48" pos:end="31:54"><name pos:start="31:48" pos:end="31:54">membase</name></expr></argument>, <argument pos:start="31:57" pos:end="31:66"><expr pos:start="31:57" pos:end="31:66"><operator pos:start="31:57" pos:end="31:57">&amp;</operator><name pos:start="31:58" pos:end="31:66"><name pos:start="31:58" pos:end="31:58">s</name><operator pos:start="31:59" pos:end="31:60">-&gt;</operator><name pos:start="31:61" pos:end="31:66">iomem1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:69"><expr pos:start="33:5" pos:end="33:68"><call pos:start="33:5" pos:end="33:68"><name pos:start="33:5" pos:end="33:31">memory_region_add_subregion</name><argument_list pos:start="33:32" pos:end="33:68">(<argument pos:start="33:33" pos:end="33:45"><expr pos:start="33:33" pos:end="33:45"><name pos:start="33:33" pos:end="33:45">address_space</name></expr></argument>, <argument pos:start="33:48" pos:end="33:55"><expr pos:start="33:48" pos:end="33:55"><name pos:start="33:48" pos:end="33:55">membase2</name></expr></argument>, <argument pos:start="33:58" pos:end="33:67"><expr pos:start="33:58" pos:end="33:67"><operator pos:start="33:58" pos:end="33:58">&amp;</operator><name pos:start="33:59" pos:end="33:67"><name pos:start="33:59" pos:end="33:59">s</name><operator pos:start="33:60" pos:end="33:61">-&gt;</operator><name pos:start="33:62" pos:end="33:67">iomem2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><call pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:20">vmstate_register</name><argument_list pos:start="35:21" pos:end="35:51">(<argument pos:start="35:22" pos:end="35:25"><expr pos:start="35:22" pos:end="35:25"><name pos:start="35:22" pos:end="35:25">NULL</name></expr></argument>, <argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr></argument>, <argument pos:start="35:31" pos:end="35:47"><expr pos:start="35:31" pos:end="35:47"><operator pos:start="35:31" pos:end="35:31">&amp;</operator><name pos:start="35:32" pos:end="35:47">vmstate_ide_mmio</name></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><call pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:23">qemu_register_reset</name><argument_list pos:start="37:24" pos:end="37:42">(<argument pos:start="37:25" pos:end="37:38"><expr pos:start="37:25" pos:end="37:38"><name pos:start="37:25" pos:end="37:38">mmio_ide_reset</name></expr></argument>, <argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><name pos:start="37:41" pos:end="37:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
