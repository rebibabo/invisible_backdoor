<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9135.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">udp_read_packet</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:5">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">ic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">RTSPStream</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">fd_set</name></type> <name pos:start="13:12" pos:end="13:15">rfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">fd1</name></decl>, <decl pos:start="15:14" pos:end="15:16"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:16">fd2</name></decl>, <decl pos:start="15:19" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:24">fd_max</name></decl>, <decl pos:start="15:27" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:27">n</name></decl>, <decl pos:start="15:30" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:30" pos:end="15:30">i</name></decl>, <decl pos:start="15:33" pos:end="15:35"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:33" pos:end="15:35">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:35"><name pos:start="17:10" pos:end="17:12">buf</name><index pos:start="17:13" pos:end="17:35">[<expr pos:start="17:14" pos:end="17:34"><name pos:start="17:14" pos:end="17:34">RTP_MAX_PACKET_LENGTH</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:18">timeval</name></name></type> <name pos:start="19:20" pos:end="19:21">tv</name></decl>;</decl_stmt>



    <for pos:start="23:5" pos:end="93:5">for<control pos:start="23:8" pos:end="23:11">(<init pos:start="23:9" pos:end="23:9">;</init><condition pos:start="23:10" pos:end="23:10">;</condition><incr/>)</control> <block pos:start="23:13" pos:end="93:5">{<block_content pos:start="25:9" pos:end="91:9">

        <if_stmt pos:start="25:9" pos:end="27:24"><if pos:start="25:9" pos:end="27:24">if <condition pos:start="25:12" pos:end="25:27">(<expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:26">rtsp_abort_req</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:24"><block_content pos:start="27:13" pos:end="27:24">

            <return pos:start="27:13" pos:end="27:24">return <expr pos:start="27:20" pos:end="27:23"><operator pos:start="27:20" pos:end="27:20">-</operator><name pos:start="27:21" pos:end="27:23">EIO</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:15">FD_ZERO</name><argument_list pos:start="29:16" pos:end="29:22">(<argument pos:start="29:17" pos:end="29:21"><expr pos:start="29:17" pos:end="29:21"><operator pos:start="29:17" pos:end="29:17">&amp;</operator><name pos:start="29:18" pos:end="29:21">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:14">fd_max</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <operator pos:start="31:18" pos:end="31:18">-</operator><literal type="number" pos:start="31:19" pos:end="31:19">1</literal></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="51:9">for<control pos:start="33:12" pos:end="33:42">(<init pos:start="33:13" pos:end="33:18"><expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">i</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>;</init> <condition pos:start="33:20" pos:end="33:37"><expr pos:start="33:20" pos:end="33:36"><name pos:start="33:20" pos:end="33:20">i</name> <operator pos:start="33:22" pos:end="33:22">&lt;</operator> <name pos:start="33:24" pos:end="33:36"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:36">nb_streams</name></name></expr>;</condition> <incr pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:39">i</name><operator pos:start="33:40" pos:end="33:41">++</operator></expr></incr>)</control> <block pos:start="33:44" pos:end="51:9">{<block_content pos:start="35:13" pos:end="49:31">

            <expr_stmt pos:start="35:13" pos:end="35:31"><expr pos:start="35:13" pos:end="35:30"><name pos:start="35:13" pos:end="35:14">st</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:30"><name pos:start="35:18" pos:end="35:18">s</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:27">streams</name><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:19">rtsp_st</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:35"><name pos:start="37:23" pos:end="37:24">st</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:35">priv_data</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:14">ic</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:28"><name pos:start="39:18" pos:end="39:24">rtsp_st</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:28">ic</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="41:13" pos:end="41:89">/* currently, we cannot probe RTCP handle because of blocking restrictions */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:66"><expr pos:start="43:13" pos:end="43:65"><call pos:start="43:13" pos:end="43:65"><name pos:start="43:13" pos:end="43:32">rtp_get_file_handles</name><argument_list pos:start="43:33" pos:end="43:65">(<argument pos:start="43:34" pos:end="43:52"><expr pos:start="43:34" pos:end="43:52"><call pos:start="43:34" pos:end="43:52"><name pos:start="43:34" pos:end="43:43">url_fileno</name><argument_list pos:start="43:44" pos:end="43:52">(<argument pos:start="43:45" pos:end="43:51"><expr pos:start="43:45" pos:end="43:51"><operator pos:start="43:45" pos:end="43:45">&amp;</operator><name pos:start="43:46" pos:end="43:51"><name pos:start="43:46" pos:end="43:47">ic</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:51">pb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:55" pos:end="43:58"><expr pos:start="43:55" pos:end="43:58"><operator pos:start="43:55" pos:end="43:55">&amp;</operator><name pos:start="43:56" pos:end="43:58">fd1</name></expr></argument>, <argument pos:start="43:61" pos:end="43:64"><expr pos:start="43:61" pos:end="43:64"><operator pos:start="43:61" pos:end="43:61">&amp;</operator><name pos:start="43:62" pos:end="43:64">fd2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:29"><if pos:start="45:13" pos:end="47:29">if <condition pos:start="45:16" pos:end="45:29">(<expr pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:19">fd1</name> <operator pos:start="45:21" pos:end="45:21">&gt;</operator> <name pos:start="45:23" pos:end="45:28">fd_max</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:29"><block_content pos:start="47:17" pos:end="47:29">

                <expr_stmt pos:start="47:17" pos:end="47:29"><expr pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:22">fd_max</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:28">fd1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><call pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:18">FD_SET</name><argument_list pos:start="49:19" pos:end="49:30">(<argument pos:start="49:20" pos:end="49:22"><expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">fd1</name></expr></argument>, <argument pos:start="49:25" pos:end="49:29"><expr pos:start="49:25" pos:end="49:29"><operator pos:start="49:25" pos:end="49:25">&amp;</operator><name pos:start="49:26" pos:end="49:29">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="53:9" pos:end="53:47">/* XXX: also add proper API to abort */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:10">tv</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:17">tv_sec</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:10">tv</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:18">tv_usec</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:27">500000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:55"><expr pos:start="59:9" pos:end="59:54"><name pos:start="59:9" pos:end="59:9">n</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:54"><name pos:start="59:13" pos:end="59:18">select</name><argument_list pos:start="59:19" pos:end="59:54">(<argument pos:start="59:20" pos:end="59:29"><expr pos:start="59:20" pos:end="59:29"><name pos:start="59:20" pos:end="59:25">fd_max</name> <operator pos:start="59:27" pos:end="59:27">+</operator> <literal type="number" pos:start="59:29" pos:end="59:29">1</literal></expr></argument>, <argument pos:start="59:32" pos:end="59:36"><expr pos:start="59:32" pos:end="59:36"><operator pos:start="59:32" pos:end="59:32">&amp;</operator><name pos:start="59:33" pos:end="59:36">rfds</name></expr></argument>, <argument pos:start="59:39" pos:end="59:42"><expr pos:start="59:39" pos:end="59:42"><name pos:start="59:39" pos:end="59:42">NULL</name></expr></argument>, <argument pos:start="59:45" pos:end="59:48"><expr pos:start="59:45" pos:end="59:48"><name pos:start="59:45" pos:end="59:48">NULL</name></expr></argument>, <argument pos:start="59:51" pos:end="59:53"><expr pos:start="59:51" pos:end="59:53"><operator pos:start="59:51" pos:end="59:51">&amp;</operator><name pos:start="59:52" pos:end="59:53">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="91:9"><if pos:start="61:9" pos:end="91:9">if <condition pos:start="61:12" pos:end="61:18">(<expr pos:start="61:13" pos:end="61:17"><name pos:start="61:13" pos:end="61:13">n</name> <operator pos:start="61:15" pos:end="61:15">&gt;</operator> <literal type="number" pos:start="61:17" pos:end="61:17">0</literal></expr>)</condition> <block pos:start="61:20" pos:end="91:9">{<block_content pos:start="63:13" pos:end="89:13">

            <for pos:start="63:13" pos:end="89:13">for<control pos:start="63:16" pos:end="63:46">(<init pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>;</init> <condition pos:start="63:24" pos:end="63:41"><expr pos:start="63:24" pos:end="63:40"><name pos:start="63:24" pos:end="63:24">i</name> <operator pos:start="63:26" pos:end="63:26">&lt;</operator> <name pos:start="63:28" pos:end="63:40"><name pos:start="63:28" pos:end="63:28">s</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:40">nb_streams</name></name></expr>;</condition> <incr pos:start="63:43" pos:end="63:45"><expr pos:start="63:43" pos:end="63:45"><name pos:start="63:43" pos:end="63:43">i</name><operator pos:start="63:44" pos:end="63:45">++</operator></expr></incr>)</control> <block pos:start="63:48" pos:end="89:13">{<block_content pos:start="65:17" pos:end="87:17">

                <expr_stmt pos:start="65:17" pos:end="65:35"><expr pos:start="65:17" pos:end="65:34"><name pos:start="65:17" pos:end="65:18">st</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:34"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:31">streams</name><index pos:start="65:32" pos:end="65:34">[<expr pos:start="65:33" pos:end="65:33"><name pos:start="65:33" pos:end="65:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:40"><expr pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:23">rtsp_st</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:39"><name pos:start="67:27" pos:end="67:28">st</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:39">priv_data</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:33"><expr pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:18">ic</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:32"><name pos:start="69:22" pos:end="69:28">rtsp_st</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:32">ic</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:70"><expr pos:start="71:17" pos:end="71:69"><call pos:start="71:17" pos:end="71:69"><name pos:start="71:17" pos:end="71:36">rtp_get_file_handles</name><argument_list pos:start="71:37" pos:end="71:69">(<argument pos:start="71:38" pos:end="71:56"><expr pos:start="71:38" pos:end="71:56"><call pos:start="71:38" pos:end="71:56"><name pos:start="71:38" pos:end="71:47">url_fileno</name><argument_list pos:start="71:48" pos:end="71:56">(<argument pos:start="71:49" pos:end="71:55"><expr pos:start="71:49" pos:end="71:55"><operator pos:start="71:49" pos:end="71:49">&amp;</operator><name pos:start="71:50" pos:end="71:55"><name pos:start="71:50" pos:end="71:51">ic</name><operator pos:start="71:52" pos:end="71:53">-&gt;</operator><name pos:start="71:54" pos:end="71:55">pb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:59" pos:end="71:62"><expr pos:start="71:59" pos:end="71:62"><operator pos:start="71:59" pos:end="71:59">&amp;</operator><name pos:start="71:60" pos:end="71:62">fd1</name></expr></argument>, <argument pos:start="71:65" pos:end="71:68"><expr pos:start="71:65" pos:end="71:68"><operator pos:start="71:65" pos:end="71:65">&amp;</operator><name pos:start="71:66" pos:end="71:68">fd2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="73:17" pos:end="87:17"><if pos:start="73:17" pos:end="87:17">if <condition pos:start="73:20" pos:end="73:41">(<expr pos:start="73:21" pos:end="73:40"><call pos:start="73:21" pos:end="73:40"><name pos:start="73:21" pos:end="73:28">FD_ISSET</name><argument_list pos:start="73:29" pos:end="73:40">(<argument pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><name pos:start="73:30" pos:end="73:32">fd1</name></expr></argument>, <argument pos:start="73:35" pos:end="73:39"><expr pos:start="73:35" pos:end="73:39"><operator pos:start="73:35" pos:end="73:35">&amp;</operator><name pos:start="73:36" pos:end="73:39">rfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:43" pos:end="87:17">{<block_content pos:start="75:21" pos:end="85:21">

                    <expr_stmt pos:start="75:21" pos:end="75:74"><expr pos:start="75:21" pos:end="75:73"><name pos:start="75:21" pos:end="75:23">ret</name> <operator pos:start="75:25" pos:end="75:25">=</operator> <call pos:start="75:27" pos:end="75:73"><name pos:start="75:27" pos:end="75:34">url_read</name><argument_list pos:start="75:35" pos:end="75:73">(<argument pos:start="75:36" pos:end="75:54"><expr pos:start="75:36" pos:end="75:54"><call pos:start="75:36" pos:end="75:54"><name pos:start="75:36" pos:end="75:45">url_fileno</name><argument_list pos:start="75:46" pos:end="75:54">(<argument pos:start="75:47" pos:end="75:53"><expr pos:start="75:47" pos:end="75:53"><operator pos:start="75:47" pos:end="75:47">&amp;</operator><name pos:start="75:48" pos:end="75:53"><name pos:start="75:48" pos:end="75:49">ic</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:53">pb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:57" pos:end="75:59"><expr pos:start="75:57" pos:end="75:59"><name pos:start="75:57" pos:end="75:59">buf</name></expr></argument>, <argument pos:start="75:62" pos:end="75:72"><expr pos:start="75:62" pos:end="75:72"><sizeof pos:start="75:62" pos:end="75:72">sizeof<argument_list pos:start="75:68" pos:end="75:72">(<argument pos:start="75:69" pos:end="75:71"><expr pos:start="75:69" pos:end="75:71"><name pos:start="75:69" pos:end="75:71">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="77:21" pos:end="85:21"><if pos:start="77:21" pos:end="85:21">if <condition pos:start="77:24" pos:end="79:65">(<expr pos:start="77:25" pos:end="79:64"><name pos:start="77:25" pos:end="77:27">ret</name> <operator pos:start="77:29" pos:end="77:30">&gt;=</operator> <literal type="number" pos:start="77:32" pos:end="77:32">0</literal> <operator pos:start="77:34" pos:end="77:35">&amp;&amp;</operator> 

                        <call pos:start="79:25" pos:end="79:59"><name pos:start="79:25" pos:end="79:40">rtp_parse_packet</name><argument_list pos:start="79:41" pos:end="79:59">(<argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><name pos:start="79:42" pos:end="79:43">ic</name></expr></argument>, <argument pos:start="79:46" pos:end="79:48"><expr pos:start="79:46" pos:end="79:48"><name pos:start="79:46" pos:end="79:48">pkt</name></expr></argument>, <argument pos:start="79:51" pos:end="79:53"><expr pos:start="79:51" pos:end="79:53"><name pos:start="79:51" pos:end="79:53">buf</name></expr></argument>, <argument pos:start="79:56" pos:end="79:58"><expr pos:start="79:56" pos:end="79:58"><name pos:start="79:56" pos:end="79:58">ret</name></expr></argument>)</argument_list></call> <operator pos:start="79:61" pos:end="79:62">==</operator> <literal type="number" pos:start="79:64" pos:end="79:64">0</literal></expr>)</condition> <block pos:start="79:67" pos:end="85:21">{<block_content pos:start="81:25" pos:end="83:35">

                        <expr_stmt pos:start="81:25" pos:end="81:46"><expr pos:start="81:25" pos:end="81:45"><name pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:27">pkt</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:41">stream_index</name></name> <operator pos:start="81:43" pos:end="81:43">=</operator> <name pos:start="81:45" pos:end="81:45">i</name></expr>;</expr_stmt>

                        <return pos:start="83:25" pos:end="83:35">return <expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:34">ret</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
