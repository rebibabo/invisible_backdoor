<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1523.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">bethsoftvid_decode_frame</name><parameter_list pos:start="1:36" pos:end="5:46">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">data_size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:38">AVPacket</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:45">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="141:1">{<block_content pos:start="9:5" pos:end="139:23">

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">BethsoftvidContext</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type> <name pos:start="9:26" pos:end="9:28">vid</name> <init pos:start="9:30" pos:end="9:47">= <expr pos:start="9:32" pos:end="9:47"><name pos:start="9:32" pos:end="9:47"><name pos:start="9:32" pos:end="9:36">avctx</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:19">block_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type> <name pos:start="13:15" pos:end="13:17">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type> <name pos:start="15:15" pos:end="15:23">frame_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">remaining</name> <init pos:start="17:19" pos:end="17:32">= <expr pos:start="17:21" pos:end="17:32"><name pos:start="17:21" pos:end="17:32"><name pos:start="17:21" pos:end="17:25">avctx</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:32">width</name></name></expr></init></decl>;</decl_stmt>          <comment type="line" pos:start="17:44" pos:end="17:81">// number of bytes remaining on a line</comment>

    <decl_stmt pos:start="19:5" pos:end="19:72"><decl pos:start="19:5" pos:end="19:71"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:31">wrap_to_next_line</name> <init pos:start="19:33" pos:end="19:71">= <expr pos:start="19:35" pos:end="19:71"><name pos:start="19:35" pos:end="19:56"><name pos:start="19:35" pos:end="19:37">vid</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:44">frame</name><operator pos:start="19:45" pos:end="19:45">.</operator><name pos:start="19:46" pos:end="19:53">linesize</name><index pos:start="19:54" pos:end="19:56">[<expr pos:start="19:55" pos:end="19:55"><literal type="number" pos:start="19:55" pos:end="19:55">0</literal></expr>]</index></name> <operator pos:start="19:58" pos:end="19:58">-</operator> <name pos:start="19:60" pos:end="19:71"><name pos:start="19:60" pos:end="19:64">avctx</name><operator pos:start="19:65" pos:end="19:66">-&gt;</operator><name pos:start="19:67" pos:end="19:71">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:15">yoffset</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:48">(<expr pos:start="27:9" pos:end="27:47"><call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:27">reget_buffer</name></name><argument_list pos:start="27:28" pos:end="27:47">(<argument pos:start="27:29" pos:end="27:33"><expr pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:33">avctx</name></expr></argument>, <argument pos:start="27:36" pos:end="27:46"><expr pos:start="27:36" pos:end="27:46"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:46"><name pos:start="27:37" pos:end="27:39">vid</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:46">frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:50" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:63"><expr pos:start="29:9" pos:end="29:62"><call pos:start="29:9" pos:end="29:62"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:62">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:61"><expr pos:start="29:37" pos:end="29:61"><literal type="string" pos:start="29:37" pos:end="29:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><call pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:20">bytestream2_init</name><argument_list pos:start="37:21" pos:end="37:55">(<argument pos:start="37:22" pos:end="37:28"><expr pos:start="37:22" pos:end="37:28"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:28"><name pos:start="37:23" pos:end="37:25">vid</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:28">g</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:35">avpkt</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">data</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:54"><expr pos:start="37:44" pos:end="37:54"><name pos:start="37:44" pos:end="37:54"><name pos:start="37:44" pos:end="37:48">avpkt</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:7">dst</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:28"><name pos:start="39:11" pos:end="39:13">vid</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:20">frame</name><operator pos:start="39:21" pos:end="39:21">.</operator><name pos:start="39:22" pos:end="39:25">data</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:76"><expr pos:start="41:5" pos:end="41:75"><name pos:start="41:5" pos:end="41:13">frame_end</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:19">vid</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:26">frame</name><operator pos:start="41:27" pos:end="41:27">.</operator><name pos:start="41:28" pos:end="41:31">data</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">0</literal></expr>]</index></name> <operator pos:start="41:36" pos:end="41:36">+</operator> <name pos:start="41:38" pos:end="41:59"><name pos:start="41:38" pos:end="41:40">vid</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:47">frame</name><operator pos:start="41:48" pos:end="41:48">.</operator><name pos:start="41:49" pos:end="41:56">linesize</name><index pos:start="41:57" pos:end="41:59">[<expr pos:start="41:58" pos:end="41:58"><literal type="number" pos:start="41:58" pos:end="41:58">0</literal></expr>]</index></name> <operator pos:start="41:61" pos:end="41:61">*</operator> <name pos:start="41:63" pos:end="41:75"><name pos:start="41:63" pos:end="41:67">avctx</name><operator pos:start="41:68" pos:end="41:69">-&gt;</operator><name pos:start="41:70" pos:end="41:75">height</name></name></expr>;</expr_stmt>



    <switch pos:start="45:5" pos:end="75:5">switch<condition pos:start="45:11" pos:end="45:54">(<expr pos:start="45:12" pos:end="45:53"><name pos:start="45:12" pos:end="45:21">block_type</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <call pos:start="45:25" pos:end="45:53"><name pos:start="45:25" pos:end="45:44">bytestream2_get_byte</name><argument_list pos:start="45:45" pos:end="45:53">(<argument pos:start="45:46" pos:end="45:52"><expr pos:start="45:46" pos:end="45:52"><operator pos:start="45:46" pos:end="45:46">&amp;</operator><name pos:start="45:47" pos:end="45:52"><name pos:start="45:47" pos:end="45:49">vid</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:52">g</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="45:55" pos:end="75:5">{<block_content pos:start="47:9" pos:end="73:52">

        <case pos:start="47:9" pos:end="47:27">case <expr pos:start="47:14" pos:end="47:26"><name pos:start="47:14" pos:end="47:26">PALETTE_BLOCK</name></expr>:</case> <block pos:start="47:29" pos:end="63:9">{<block_content pos:start="49:13" pos:end="61:45">

            <decl_stmt pos:start="49:13" pos:end="49:20"><decl pos:start="49:13" pos:end="49:19"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:19">ret</name></decl>;</decl_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:27"><expr pos:start="51:13" pos:end="51:26"><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:22">data_size</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:45">(<expr pos:start="53:17" pos:end="53:44"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:20">ret</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:39"><name pos:start="53:24" pos:end="53:34">set_palette</name><argument_list pos:start="53:35" pos:end="53:39">(<argument pos:start="53:36" pos:end="53:38"><expr pos:start="53:36" pos:end="53:38"><name pos:start="53:36" pos:end="53:38">vid</name></expr></argument>)</argument_list></call><operator pos:start="53:40" pos:end="53:40">)</operator> <operator pos:start="53:42" pos:end="53:42">&lt;</operator> <literal type="number" pos:start="53:44" pos:end="53:44">0</literal></expr>)</condition> <block pos:start="53:47" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:27">

                <expr_stmt pos:start="55:17" pos:end="55:71"><expr pos:start="55:17" pos:end="55:70"><call pos:start="55:17" pos:end="55:70"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="55:70">(<argument pos:start="55:24" pos:end="55:28"><expr pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:28">avctx</name></expr></argument>, <argument pos:start="55:31" pos:end="55:42"><expr pos:start="55:31" pos:end="55:42"><name pos:start="55:31" pos:end="55:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:45" pos:end="55:69"><expr pos:start="55:45" pos:end="55:69"><literal type="string" pos:start="55:45" pos:end="55:69">"error reading palette\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="57:17" pos:end="57:27">return <expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="61:13" pos:end="61:45">return <expr pos:start="61:20" pos:end="61:44"><call pos:start="61:20" pos:end="61:44"><name pos:start="61:20" pos:end="61:35">bytestream2_tell</name><argument_list pos:start="61:36" pos:end="61:44">(<argument pos:start="61:37" pos:end="61:43"><expr pos:start="61:37" pos:end="61:43"><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:43"><name pos:start="61:38" pos:end="61:40">vid</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:43">g</name></name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block>

        <case pos:start="65:9" pos:end="65:32">case <expr pos:start="65:14" pos:end="65:31"><name pos:start="65:14" pos:end="65:31">VIDEO_YOFF_P_FRAME</name></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:52"><expr pos:start="67:13" pos:end="67:51"><name pos:start="67:13" pos:end="67:19">yoffset</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <call pos:start="67:23" pos:end="67:51"><name pos:start="67:23" pos:end="67:42">bytestream2_get_le16</name><argument_list pos:start="67:43" pos:end="67:51">(<argument pos:start="67:44" pos:end="67:50"><expr pos:start="67:44" pos:end="67:50"><operator pos:start="67:44" pos:end="67:44">&amp;</operator><name pos:start="67:45" pos:end="67:50"><name pos:start="67:45" pos:end="67:47">vid</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:50">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="69:13" pos:end="71:26"><if pos:start="69:13" pos:end="71:26">if<condition pos:start="69:15" pos:end="69:40">(<expr pos:start="69:16" pos:end="69:39"><name pos:start="69:16" pos:end="69:22">yoffset</name> <operator pos:start="69:24" pos:end="69:25">&gt;=</operator> <name pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:31">avctx</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:39">height</name></name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:26"><block_content pos:start="71:17" pos:end="71:26">

                <return pos:start="71:17" pos:end="71:26">return <expr pos:start="71:24" pos:end="71:25"><operator pos:start="71:24" pos:end="71:24">-</operator><literal type="number" pos:start="71:25" pos:end="71:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:52"><expr pos:start="73:13" pos:end="73:51"><name pos:start="73:13" pos:end="73:15">dst</name> <operator pos:start="73:17" pos:end="73:18">+=</operator> <name pos:start="73:20" pos:end="73:41"><name pos:start="73:20" pos:end="73:22">vid</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:29">frame</name><operator pos:start="73:30" pos:end="73:30">.</operator><name pos:start="73:31" pos:end="73:38">linesize</name><index pos:start="73:39" pos:end="73:41">[<expr pos:start="73:40" pos:end="73:40"><literal type="number" pos:start="73:40" pos:end="73:40">0</literal></expr>]</index></name> <operator pos:start="73:43" pos:end="73:43">*</operator> <name pos:start="73:45" pos:end="73:51">yoffset</name></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <comment type="line" pos:start="79:5" pos:end="79:16">// main code</comment>

    <while pos:start="81:5" pos:end="127:5">while<condition pos:start="81:10" pos:end="81:49">(<expr pos:start="81:11" pos:end="81:48"><operator pos:start="81:11" pos:end="81:11">(</operator><name pos:start="81:12" pos:end="81:15">code</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <call pos:start="81:19" pos:end="81:47"><name pos:start="81:19" pos:end="81:38">bytestream2_get_byte</name><argument_list pos:start="81:39" pos:end="81:47">(<argument pos:start="81:40" pos:end="81:46"><expr pos:start="81:40" pos:end="81:46"><operator pos:start="81:40" pos:end="81:40">&amp;</operator><name pos:start="81:41" pos:end="81:46"><name pos:start="81:41" pos:end="81:43">vid</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:46">g</name></name></expr></argument>)</argument_list></call><operator pos:start="81:48" pos:end="81:48">)</operator></expr>)</condition><block pos:start="81:50" pos:end="127:5">{<block_content pos:start="83:9" pos:end="125:22">

        <decl_stmt pos:start="83:9" pos:end="83:33"><decl pos:start="83:9" pos:end="83:32"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:18">length</name> <init pos:start="83:20" pos:end="83:32">= <expr pos:start="83:22" pos:end="83:32"><name pos:start="83:22" pos:end="83:25">code</name> <operator pos:start="83:27" pos:end="83:27">&amp;</operator> <literal type="number" pos:start="83:29" pos:end="83:32">0x7f</literal></expr></init></decl>;</decl_stmt>



        <comment type="line" pos:start="87:9" pos:end="87:89">// copy any bytes starting at the current position, and ending at the frame width</comment>

        <while pos:start="89:9" pos:end="109:9">while<condition pos:start="89:14" pos:end="89:33">(<expr pos:start="89:15" pos:end="89:32"><name pos:start="89:15" pos:end="89:20">length</name> <operator pos:start="89:22" pos:end="89:22">&gt;</operator> <name pos:start="89:24" pos:end="89:32">remaining</name></expr>)</condition><block pos:start="89:34" pos:end="109:9">{<block_content pos:start="91:13" pos:end="107:25">

            <if_stmt pos:start="91:13" pos:end="97:71"><if pos:start="91:13" pos:end="93:64">if<condition pos:start="91:15" pos:end="91:27">(<expr pos:start="91:16" pos:end="91:26"><name pos:start="91:16" pos:end="91:19">code</name> <operator pos:start="91:21" pos:end="91:21">&lt;</operator> <literal type="number" pos:start="91:23" pos:end="91:26">0x80</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:64"><block_content pos:start="93:17" pos:end="93:64">

                <expr_stmt pos:start="93:17" pos:end="93:64"><expr pos:start="93:17" pos:end="93:63"><call pos:start="93:17" pos:end="93:63"><name pos:start="93:17" pos:end="93:38">bytestream2_get_buffer</name><argument_list pos:start="93:39" pos:end="93:63">(<argument pos:start="93:40" pos:end="93:46"><expr pos:start="93:40" pos:end="93:46"><operator pos:start="93:40" pos:end="93:40">&amp;</operator><name pos:start="93:41" pos:end="93:46"><name pos:start="93:41" pos:end="93:43">vid</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:46">g</name></name></expr></argument>, <argument pos:start="93:49" pos:end="93:51"><expr pos:start="93:49" pos:end="93:51"><name pos:start="93:49" pos:end="93:51">dst</name></expr></argument>, <argument pos:start="93:54" pos:end="93:62"><expr pos:start="93:54" pos:end="93:62"><name pos:start="93:54" pos:end="93:62">remaining</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="95:13" pos:end="97:71">else if<condition pos:start="95:20" pos:end="95:48">(<expr pos:start="95:21" pos:end="95:47"><name pos:start="95:21" pos:end="95:30">block_type</name> <operator pos:start="95:32" pos:end="95:33">==</operator> <name pos:start="95:35" pos:end="95:47">VIDEO_I_FRAME</name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:71"><block_content pos:start="97:17" pos:end="97:71">

                <expr_stmt pos:start="97:17" pos:end="97:71"><expr pos:start="97:17" pos:end="97:70"><call pos:start="97:17" pos:end="97:70"><name pos:start="97:17" pos:end="97:22">memset</name><argument_list pos:start="97:23" pos:end="97:70">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">dst</name></expr></argument>, <argument pos:start="97:29" pos:end="97:58"><expr pos:start="97:29" pos:end="97:58"><call pos:start="97:29" pos:end="97:58"><name pos:start="97:29" pos:end="97:49">bytestream2_peek_byte</name><argument_list pos:start="97:50" pos:end="97:58">(<argument pos:start="97:51" pos:end="97:57"><expr pos:start="97:51" pos:end="97:57"><operator pos:start="97:51" pos:end="97:51">&amp;</operator><name pos:start="97:52" pos:end="97:57"><name pos:start="97:52" pos:end="97:54">vid</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:57">g</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:61" pos:end="97:69"><expr pos:start="97:61" pos:end="97:69"><name pos:start="97:61" pos:end="97:69">remaining</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:32"><expr pos:start="99:13" pos:end="99:31"><name pos:start="99:13" pos:end="99:18">length</name> <operator pos:start="99:20" pos:end="99:21">-=</operator> <name pos:start="99:23" pos:end="99:31">remaining</name></expr>;</expr_stmt>      <comment type="line" pos:start="99:39" pos:end="99:83">// decrement the number of bytes to be copied</comment>

            <expr_stmt pos:start="101:13" pos:end="101:49"><expr pos:start="101:13" pos:end="101:48"><name pos:start="101:13" pos:end="101:15">dst</name> <operator pos:start="101:17" pos:end="101:18">+=</operator> <name pos:start="101:20" pos:end="101:28">remaining</name> <operator pos:start="101:30" pos:end="101:30">+</operator> <name pos:start="101:32" pos:end="101:48">wrap_to_next_line</name></expr>;</expr_stmt>    <comment type="line" pos:start="101:54" pos:end="101:93">// skip over extra bytes at end of frame</comment>

            <expr_stmt pos:start="103:13" pos:end="103:37"><expr pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:21">remaining</name> <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:36"><name pos:start="103:25" pos:end="103:29">avctx</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:36">width</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:25"><if pos:start="105:13" pos:end="107:25">if<condition pos:start="105:15" pos:end="105:32">(<expr pos:start="105:16" pos:end="105:31"><name pos:start="105:16" pos:end="105:18">dst</name> <operator pos:start="105:20" pos:end="105:21">==</operator> <name pos:start="105:23" pos:end="105:31">frame_end</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:25"><block_content pos:start="107:17" pos:end="107:25">

                <goto pos:start="107:17" pos:end="107:25">goto <name pos:start="107:22" pos:end="107:24">end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></while>



        <comment type="line" pos:start="113:9" pos:end="113:61">// copy any remaining bytes after / if line overflows</comment>

        <if_stmt pos:start="115:9" pos:end="121:63"><if pos:start="115:9" pos:end="117:57">if<condition pos:start="115:11" pos:end="115:23">(<expr pos:start="115:12" pos:end="115:22"><name pos:start="115:12" pos:end="115:15">code</name> <operator pos:start="115:17" pos:end="115:17">&lt;</operator> <literal type="number" pos:start="115:19" pos:end="115:22">0x80</literal></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:57"><block_content pos:start="117:13" pos:end="117:57">

            <expr_stmt pos:start="117:13" pos:end="117:57"><expr pos:start="117:13" pos:end="117:56"><call pos:start="117:13" pos:end="117:56"><name pos:start="117:13" pos:end="117:34">bytestream2_get_buffer</name><argument_list pos:start="117:35" pos:end="117:56">(<argument pos:start="117:36" pos:end="117:42"><expr pos:start="117:36" pos:end="117:42"><operator pos:start="117:36" pos:end="117:36">&amp;</operator><name pos:start="117:37" pos:end="117:42"><name pos:start="117:37" pos:end="117:39">vid</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:42">g</name></name></expr></argument>, <argument pos:start="117:45" pos:end="117:47"><expr pos:start="117:45" pos:end="117:47"><name pos:start="117:45" pos:end="117:47">dst</name></expr></argument>, <argument pos:start="117:50" pos:end="117:55"><expr pos:start="117:50" pos:end="117:55"><name pos:start="117:50" pos:end="117:55">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="119:9" pos:end="121:63">else if<condition pos:start="119:16" pos:end="119:44">(<expr pos:start="119:17" pos:end="119:43"><name pos:start="119:17" pos:end="119:26">block_type</name> <operator pos:start="119:28" pos:end="119:29">==</operator> <name pos:start="119:31" pos:end="119:43">VIDEO_I_FRAME</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:63"><block_content pos:start="121:13" pos:end="121:63">

            <expr_stmt pos:start="121:13" pos:end="121:63"><expr pos:start="121:13" pos:end="121:62"><call pos:start="121:13" pos:end="121:62"><name pos:start="121:13" pos:end="121:18">memset</name><argument_list pos:start="121:19" pos:end="121:62">(<argument pos:start="121:20" pos:end="121:22"><expr pos:start="121:20" pos:end="121:22"><name pos:start="121:20" pos:end="121:22">dst</name></expr></argument>, <argument pos:start="121:25" pos:end="121:53"><expr pos:start="121:25" pos:end="121:53"><call pos:start="121:25" pos:end="121:53"><name pos:start="121:25" pos:end="121:44">bytestream2_get_byte</name><argument_list pos:start="121:45" pos:end="121:53">(<argument pos:start="121:46" pos:end="121:52"><expr pos:start="121:46" pos:end="121:52"><operator pos:start="121:46" pos:end="121:46">&amp;</operator><name pos:start="121:47" pos:end="121:52"><name pos:start="121:47" pos:end="121:49">vid</name><operator pos:start="121:50" pos:end="121:51">-&gt;</operator><name pos:start="121:52" pos:end="121:52">g</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:56" pos:end="121:61"><expr pos:start="121:56" pos:end="121:61"><name pos:start="121:56" pos:end="121:61">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:28"><expr pos:start="123:9" pos:end="123:27"><name pos:start="123:9" pos:end="123:17">remaining</name> <operator pos:start="123:19" pos:end="123:20">-=</operator> <name pos:start="123:22" pos:end="123:27">length</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:22"><expr pos:start="125:9" pos:end="125:21"><name pos:start="125:9" pos:end="125:11">dst</name> <operator pos:start="125:13" pos:end="125:14">+=</operator> <name pos:start="125:16" pos:end="125:21">length</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <label pos:start="129:5" pos:end="129:8"><name pos:start="129:5" pos:end="129:7">end</name>:</label>



    <expr_stmt pos:start="133:5" pos:end="133:33"><expr pos:start="133:5" pos:end="133:32"><operator pos:start="133:5" pos:end="133:5">*</operator><name pos:start="133:6" pos:end="133:14">data_size</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <sizeof pos:start="133:18" pos:end="133:32">sizeof<argument_list pos:start="133:24" pos:end="133:32">(<argument pos:start="133:25" pos:end="133:31"><expr pos:start="133:25" pos:end="133:31"><name pos:start="133:25" pos:end="133:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:33"><expr pos:start="135:5" pos:end="135:32"><operator pos:start="135:5" pos:end="135:5">*</operator><operator pos:start="135:6" pos:end="135:6">(</operator><name pos:start="135:7" pos:end="135:13">AVFrame</name><operator pos:start="135:14" pos:end="135:14">*</operator><operator pos:start="135:15" pos:end="135:15">)</operator><name pos:start="135:16" pos:end="135:19">data</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:32"><name pos:start="135:23" pos:end="135:25">vid</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:32">frame</name></name></expr>;</expr_stmt>



    <return pos:start="139:5" pos:end="139:23">return <expr pos:start="139:12" pos:end="139:22"><name pos:start="139:12" pos:end="139:22"><name pos:start="139:12" pos:end="139:16">avpkt</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
