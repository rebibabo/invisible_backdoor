<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11042.c" pos:tabs="8"><function pos:start="1:1" pos:end="313:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:30">nfs_client_open</name><parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:40">NFSClient</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">client</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:55">QDict</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:64">options</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:40">flags</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:47">Error</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier><modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">errp</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:70"><decl pos:start="3:57" pos:end="3:70"><type pos:start="3:57" pos:end="3:70"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:70">open_flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="313:1">{<block_content pos:start="7:5" pos:end="311:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:21">= <expr pos:start="7:15" pos:end="7:21"><operator pos:start="7:15" pos:end="7:15">-</operator><name pos:start="7:16" pos:end="7:21">EINVAL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:15">stat</name></name></type> <name pos:start="13:17" pos:end="13:18">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:14">file</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>, <decl pos:start="15:24" pos:end="15:35"><type ref="prev" pos:start="15:5" pos:end="15:10"><modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:28">strp</name> <init pos:start="15:30" pos:end="15:35">= <expr pos:start="15:32" pos:end="15:35"><name pos:start="15:32" pos:end="15:35">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:66"><expr pos:start="19:5" pos:end="19:65"><name pos:start="19:5" pos:end="19:8">opts</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:65"><name pos:start="19:12" pos:end="19:27">qemu_opts_create</name><argument_list pos:start="19:28" pos:end="19:65">(<argument pos:start="19:29" pos:end="19:41"><expr pos:start="19:29" pos:end="19:41"><operator pos:start="19:29" pos:end="19:29">&amp;</operator><name pos:start="19:30" pos:end="19:41">runtime_opts</name></expr></argument>, <argument pos:start="19:44" pos:end="19:47"><expr pos:start="19:44" pos:end="19:47"><name pos:start="19:44" pos:end="19:47">NULL</name></expr></argument>, <argument pos:start="19:50" pos:end="19:50"><expr pos:start="19:50" pos:end="19:50"><literal type="number" pos:start="19:50" pos:end="19:50">0</literal></expr></argument>, <argument pos:start="19:53" pos:end="19:64"><expr pos:start="19:53" pos:end="19:64"><operator pos:start="19:53" pos:end="19:53">&amp;</operator><name pos:start="19:54" pos:end="19:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:26">qemu_opts_absorb_qdict</name><argument_list pos:start="21:27" pos:end="21:53">(<argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">opts</name></expr></argument>, <argument pos:start="21:34" pos:end="21:40"><expr pos:start="21:34" pos:end="21:40"><name pos:start="21:34" pos:end="21:40">options</name></expr></argument>, <argument pos:start="21:43" pos:end="21:52"><expr pos:start="21:43" pos:end="21:52"><operator pos:start="21:43" pos:end="21:43">&amp;</operator><name pos:start="21:44" pos:end="21:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:17">local_err</name></expr>)</condition> <block pos:start="23:20" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:18">

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:23">error_propagate</name><argument_list pos:start="25:24" pos:end="25:40">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">errp</name></expr></argument>, <argument pos:start="25:31" pos:end="25:39"><expr pos:start="25:31" pos:end="25:39"><name pos:start="25:31" pos:end="25:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <operator pos:start="27:15" pos:end="27:15">-</operator><name pos:start="27:16" pos:end="27:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:10">client</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:16">path</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:55"><name pos:start="35:20" pos:end="35:27">g_strdup</name><argument_list pos:start="35:28" pos:end="35:55">(<argument pos:start="35:29" pos:end="35:54"><expr pos:start="35:29" pos:end="35:54"><call pos:start="35:29" pos:end="35:54"><name pos:start="35:29" pos:end="35:40">qemu_opt_get</name><argument_list pos:start="35:41" pos:end="35:54">(<argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">opts</name></expr></argument>, <argument pos:start="35:48" pos:end="35:53"><expr pos:start="35:48" pos:end="35:53"><literal type="string" pos:start="35:48" pos:end="35:53">"path"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:22">(<expr pos:start="37:9" pos:end="37:21"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:21"><name pos:start="37:10" pos:end="37:15">client</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:21">path</name></name></expr>)</condition> <block pos:start="37:24" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:18">

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <operator pos:start="39:15" pos:end="39:15">-</operator><name pos:start="39:16" pos:end="39:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:50"><expr pos:start="41:9" pos:end="41:49"><call pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:18">error_setg</name><argument_list pos:start="41:19" pos:end="41:49">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">errp</name></expr></argument>, <argument pos:start="41:26" pos:end="41:48"><expr pos:start="41:26" pos:end="41:48"><literal type="string" pos:start="41:26" pos:end="41:48">"No path was specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:8">strp</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:37"><name pos:start="49:12" pos:end="49:18">strrchr</name><argument_list pos:start="49:19" pos:end="49:37">(<argument pos:start="49:20" pos:end="49:31"><expr pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:25">client</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:31">path</name></name></expr></argument>, <argument pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><literal type="char" pos:start="49:34" pos:end="49:36">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:21">(<expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:12">strp</name> <operator pos:start="51:14" pos:end="51:15">==</operator> <name pos:start="51:17" pos:end="51:20">NULL</name></expr>)</condition> <block pos:start="51:23" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <expr_stmt pos:start="53:9" pos:end="53:50"><expr pos:start="53:9" pos:end="53:49"><call pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:18">error_setg</name><argument_list pos:start="53:19" pos:end="53:49">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">errp</name></expr></argument>, <argument pos:start="53:26" pos:end="53:48"><expr pos:start="53:26" pos:end="53:48"><literal type="string" pos:start="53:26" pos:end="53:48">"Invalid URL specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:26"><expr pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:8">file</name> <operator pos:start="59:10" pos:end="59:10">=</operator> <call pos:start="59:12" pos:end="59:25"><name pos:start="59:12" pos:end="59:19">g_strdup</name><argument_list pos:start="59:20" pos:end="59:25">(<argument pos:start="59:21" pos:end="59:24"><expr pos:start="59:21" pos:end="59:24"><name pos:start="59:21" pos:end="59:24">strp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:14"><expr pos:start="61:5" pos:end="61:13"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:9">strp</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <literal type="number" pos:start="61:13" pos:end="61:13">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:63">/* Pop the config into our state object, Exit if invalid */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:47"><expr pos:start="67:5" pos:end="67:46"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:10">client</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:18">server</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <call pos:start="67:22" pos:end="67:46"><name pos:start="67:22" pos:end="67:31">nfs_config</name><argument_list pos:start="67:32" pos:end="67:46">(<argument pos:start="67:33" pos:end="67:39"><expr pos:start="67:33" pos:end="67:39"><name pos:start="67:33" pos:end="67:39">options</name></expr></argument>, <argument pos:start="67:42" pos:end="67:45"><expr pos:start="67:42" pos:end="67:45"><name pos:start="67:42" pos:end="67:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:24">(<expr pos:start="69:9" pos:end="69:23"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:23"><name pos:start="69:10" pos:end="69:15">client</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:23">server</name></name></expr>)</condition> <block pos:start="69:26" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:18">

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <operator pos:start="71:15" pos:end="71:15">-</operator><name pos:start="71:16" pos:end="71:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:18">goto <name pos:start="73:14" pos:end="73:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:41"><expr pos:start="79:5" pos:end="79:40"><name pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:10">client</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:19">context</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <call pos:start="79:23" pos:end="79:40"><name pos:start="79:23" pos:end="79:38">nfs_init_context</name><argument_list pos:start="79:39" pos:end="79:40">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:32">(<expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:14">client</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:23">context</name></name> <operator pos:start="81:25" pos:end="81:26">==</operator> <name pos:start="81:28" pos:end="81:31">NULL</name></expr>)</condition> <block pos:start="81:34" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:18">

        <expr_stmt pos:start="83:9" pos:end="83:55"><expr pos:start="83:9" pos:end="83:54"><call pos:start="83:9" pos:end="83:54"><name pos:start="83:9" pos:end="83:18">error_setg</name><argument_list pos:start="83:19" pos:end="83:54">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">errp</name></expr></argument>, <argument pos:start="83:26" pos:end="83:53"><expr pos:start="83:26" pos:end="83:53"><literal type="string" pos:start="83:26" pos:end="83:53">"Failed to init NFS context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:18">goto <name pos:start="85:14" pos:end="85:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:34">(<expr pos:start="91:9" pos:end="91:33"><call pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:20">qemu_opt_get</name><argument_list pos:start="91:21" pos:end="91:33">(<argument pos:start="91:22" pos:end="91:25"><expr pos:start="91:22" pos:end="91:25"><name pos:start="91:22" pos:end="91:25">opts</name></expr></argument>, <argument pos:start="91:28" pos:end="91:32"><expr pos:start="91:28" pos:end="91:32"><literal type="string" pos:start="91:28" pos:end="91:32">"uid"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:36" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:50">

        <expr_stmt pos:start="93:9" pos:end="93:58"><expr pos:start="93:9" pos:end="93:57"><name pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:14">client</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:19">uid</name></name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:57"><name pos:start="93:23" pos:end="93:41">qemu_opt_get_number</name><argument_list pos:start="93:42" pos:end="93:57">(<argument pos:start="93:43" pos:end="93:46"><expr pos:start="93:43" pos:end="93:46"><name pos:start="93:43" pos:end="93:46">opts</name></expr></argument>, <argument pos:start="93:49" pos:end="93:53"><expr pos:start="93:49" pos:end="93:53"><literal type="string" pos:start="93:49" pos:end="93:53">"uid"</literal></expr></argument>, <argument pos:start="93:56" pos:end="93:56"><expr pos:start="93:56" pos:end="93:56"><literal type="number" pos:start="93:56" pos:end="93:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:50"><expr pos:start="95:9" pos:end="95:49"><call pos:start="95:9" pos:end="95:49"><name pos:start="95:9" pos:end="95:19">nfs_set_uid</name><argument_list pos:start="95:20" pos:end="95:49">(<argument pos:start="95:21" pos:end="95:35"><expr pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:26">client</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:35">context</name></name></expr></argument>, <argument pos:start="95:38" pos:end="95:48"><expr pos:start="95:38" pos:end="95:48"><name pos:start="95:38" pos:end="95:48"><name pos:start="95:38" pos:end="95:43">client</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:48">uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:34">(<expr pos:start="101:9" pos:end="101:33"><call pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:20">qemu_opt_get</name><argument_list pos:start="101:21" pos:end="101:33">(<argument pos:start="101:22" pos:end="101:25"><expr pos:start="101:22" pos:end="101:25"><name pos:start="101:22" pos:end="101:25">opts</name></expr></argument>, <argument pos:start="101:28" pos:end="101:32"><expr pos:start="101:28" pos:end="101:32"><literal type="string" pos:start="101:28" pos:end="101:32">"gid"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:36" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:50">

        <expr_stmt pos:start="103:9" pos:end="103:58"><expr pos:start="103:9" pos:end="103:57"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:14">client</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:19">gid</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="103:57"><name pos:start="103:23" pos:end="103:41">qemu_opt_get_number</name><argument_list pos:start="103:42" pos:end="103:57">(<argument pos:start="103:43" pos:end="103:46"><expr pos:start="103:43" pos:end="103:46"><name pos:start="103:43" pos:end="103:46">opts</name></expr></argument>, <argument pos:start="103:49" pos:end="103:53"><expr pos:start="103:49" pos:end="103:53"><literal type="string" pos:start="103:49" pos:end="103:53">"gid"</literal></expr></argument>, <argument pos:start="103:56" pos:end="103:56"><expr pos:start="103:56" pos:end="103:56"><literal type="number" pos:start="103:56" pos:end="103:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:50"><expr pos:start="105:9" pos:end="105:49"><call pos:start="105:9" pos:end="105:49"><name pos:start="105:9" pos:end="105:19">nfs_set_gid</name><argument_list pos:start="105:20" pos:end="105:49">(<argument pos:start="105:21" pos:end="105:35"><expr pos:start="105:21" pos:end="105:35"><name pos:start="105:21" pos:end="105:35"><name pos:start="105:21" pos:end="105:26">client</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:35">context</name></name></expr></argument>, <argument pos:start="105:38" pos:end="105:48"><expr pos:start="105:38" pos:end="105:48"><name pos:start="105:38" pos:end="105:48"><name pos:start="105:38" pos:end="105:43">client</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:48">gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="122:0"><if pos:start="111:5" pos:end="122:0">if <condition pos:start="111:8" pos:end="111:41">(<expr pos:start="111:9" pos:end="111:40"><call pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:20">qemu_opt_get</name><argument_list pos:start="111:21" pos:end="111:40">(<argument pos:start="111:22" pos:end="111:25"><expr pos:start="111:22" pos:end="111:25"><name pos:start="111:22" pos:end="111:25">opts</name></expr></argument>, <argument pos:start="111:28" pos:end="111:39"><expr pos:start="111:28" pos:end="111:39"><literal type="string" pos:start="111:28" pos:end="111:39">"tcp-syncnt"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:43" pos:end="122:0">{<block_content pos:start="113:9" pos:end="115:64">

        <expr_stmt pos:start="113:9" pos:end="113:72"><expr pos:start="113:9" pos:end="113:71"><name pos:start="113:9" pos:end="113:26"><name pos:start="113:9" pos:end="113:14">client</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:26">tcp_syncnt</name></name> <operator pos:start="113:28" pos:end="113:28">=</operator> <call pos:start="113:30" pos:end="113:71"><name pos:start="113:30" pos:end="113:48">qemu_opt_get_number</name><argument_list pos:start="113:49" pos:end="113:71">(<argument pos:start="113:50" pos:end="113:53"><expr pos:start="113:50" pos:end="113:53"><name pos:start="113:50" pos:end="113:53">opts</name></expr></argument>, <argument pos:start="113:56" pos:end="113:67"><expr pos:start="113:56" pos:end="113:67"><literal type="string" pos:start="113:56" pos:end="113:67">"tcp-syncnt"</literal></expr></argument>, <argument pos:start="113:70" pos:end="113:70"><expr pos:start="113:70" pos:end="113:70"><literal type="number" pos:start="113:70" pos:end="113:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:64"><expr pos:start="115:9" pos:end="115:63"><call pos:start="115:9" pos:end="115:63"><name pos:start="115:9" pos:end="115:26">nfs_set_tcp_syncnt</name><argument_list pos:start="115:27" pos:end="115:63">(<argument pos:start="115:28" pos:end="115:42"><expr pos:start="115:28" pos:end="115:42"><name pos:start="115:28" pos:end="115:42"><name pos:start="115:28" pos:end="115:33">client</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:42">context</name></name></expr></argument>, <argument pos:start="115:45" pos:end="115:62"><expr pos:start="115:45" pos:end="115:62"><name pos:start="115:45" pos:end="115:62"><name pos:start="115:45" pos:end="115:50">client</name><operator pos:start="115:51" pos:end="115:52">-&gt;</operator><name pos:start="115:53" pos:end="115:62">tcp_syncnt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="121:1" pos:end="121:31">#<cpp:directive pos:start="121:2" pos:end="121:6">ifdef</cpp:directive> <name pos:start="121:8" pos:end="121:31">LIBNFS_FEATURE_READAHEAD</name></cpp:ifdef>

    <if_stmt pos:start="123:5" pos:end="164:0"><if pos:start="123:5" pos:end="164:0">if <condition pos:start="123:8" pos:end="123:40">(<expr pos:start="123:9" pos:end="123:39"><call pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:20">qemu_opt_get</name><argument_list pos:start="123:21" pos:end="123:39">(<argument pos:start="123:22" pos:end="123:25"><expr pos:start="123:22" pos:end="123:25"><name pos:start="123:22" pos:end="123:25">opts</name></expr></argument>, <argument pos:start="123:28" pos:end="123:38"><expr pos:start="123:28" pos:end="123:38"><literal type="string" pos:start="123:28" pos:end="123:38">"readahead"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:42" pos:end="164:0">{<block_content pos:start="125:9" pos:end="155:34">

        <if_stmt pos:start="125:9" pos:end="133:9"><if pos:start="125:9" pos:end="133:9">if <condition pos:start="125:12" pos:end="125:40">(<expr pos:start="125:13" pos:end="125:39"><name pos:start="125:13" pos:end="125:22">open_flags</name> <operator pos:start="125:24" pos:end="125:24">&amp;</operator> <name pos:start="125:26" pos:end="125:39">BDRV_O_NOCACHE</name></expr>)</condition> <block pos:start="125:42" pos:end="133:9">{<block_content pos:start="127:13" pos:end="131:22">

            <expr_stmt pos:start="127:13" pos:end="129:53"><expr pos:start="127:13" pos:end="129:52"><call pos:start="127:13" pos:end="129:52"><name pos:start="127:13" pos:end="127:22">error_setg</name><argument_list pos:start="127:23" pos:end="129:52">(<argument pos:start="127:24" pos:end="127:27"><expr pos:start="127:24" pos:end="127:27"><name pos:start="127:24" pos:end="127:27">errp</name></expr></argument>, <argument pos:start="127:30" pos:end="129:51"><expr pos:start="127:30" pos:end="129:51"><literal type="string" pos:start="127:30" pos:end="127:59">"Cannot enable NFS readahead "</literal>

                             <literal type="string" pos:start="129:30" pos:end="129:51">"if cache.direct = on"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="131:13" pos:end="131:22">goto <name pos:start="131:18" pos:end="131:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:70"><expr pos:start="135:9" pos:end="135:69"><name pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:14">client</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:25">readahead</name></name> <operator pos:start="135:27" pos:end="135:27">=</operator> <call pos:start="135:29" pos:end="135:69"><name pos:start="135:29" pos:end="135:47">qemu_opt_get_number</name><argument_list pos:start="135:48" pos:end="135:69">(<argument pos:start="135:49" pos:end="135:52"><expr pos:start="135:49" pos:end="135:52"><name pos:start="135:49" pos:end="135:52">opts</name></expr></argument>, <argument pos:start="135:55" pos:end="135:65"><expr pos:start="135:55" pos:end="135:65"><literal type="string" pos:start="135:55" pos:end="135:65">"readahead"</literal></expr></argument>, <argument pos:start="135:68" pos:end="135:68"><expr pos:start="135:68" pos:end="135:68"><literal type="number" pos:start="135:68" pos:end="135:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="145:9"><if pos:start="137:9" pos:end="145:9">if <condition pos:start="137:12" pos:end="137:60">(<expr pos:start="137:13" pos:end="137:59"><name pos:start="137:13" pos:end="137:29"><name pos:start="137:13" pos:end="137:18">client</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:29">readahead</name></name> <operator pos:start="137:31" pos:end="137:31">&gt;</operator> <name pos:start="137:33" pos:end="137:59">QEMU_NFS_MAX_READAHEAD_SIZE</name></expr>)</condition> <block pos:start="137:62" pos:end="145:9">{<block_content pos:start="139:13" pos:end="143:60">

            <expr_stmt pos:start="139:13" pos:end="141:68"><expr pos:start="139:13" pos:end="141:67"><call pos:start="139:13" pos:end="141:67"><name pos:start="139:13" pos:end="139:24">error_report</name><argument_list pos:start="139:25" pos:end="141:67">(<argument pos:start="139:26" pos:end="141:37"><expr pos:start="139:26" pos:end="141:37"><literal type="string" pos:start="139:26" pos:end="139:65">"NFS Warning: Truncating NFS readahead "</literal>

                         <literal type="string" pos:start="141:26" pos:end="141:37">"size to %d"</literal></expr></argument>, <argument pos:start="141:40" pos:end="141:66"><expr pos:start="141:40" pos:end="141:66"><name pos:start="141:40" pos:end="141:66">QEMU_NFS_MAX_READAHEAD_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:60"><expr pos:start="143:13" pos:end="143:59"><name pos:start="143:13" pos:end="143:29"><name pos:start="143:13" pos:end="143:18">client</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:29">readahead</name></name> <operator pos:start="143:31" pos:end="143:31">=</operator> <name pos:start="143:33" pos:end="143:59">QEMU_NFS_MAX_READAHEAD_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="150:0"><expr pos:start="147:9" pos:end="147:61"><call pos:start="147:9" pos:end="147:61"><name pos:start="147:9" pos:end="147:25">nfs_set_readahead</name><argument_list pos:start="147:26" pos:end="147:61">(<argument pos:start="147:27" pos:end="147:41"><expr pos:start="147:27" pos:end="147:41"><name pos:start="147:27" pos:end="147:41"><name pos:start="147:27" pos:end="147:32">client</name><operator pos:start="147:33" pos:end="147:34">-&gt;</operator><name pos:start="147:35" pos:end="147:41">context</name></name></expr></argument>, <argument pos:start="147:44" pos:end="147:60"><expr pos:start="147:44" pos:end="147:60"><name pos:start="147:44" pos:end="147:60"><name pos:start="147:44" pos:end="147:49">client</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:60">readahead</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="149:1" pos:end="149:31">#<cpp:directive pos:start="149:2" pos:end="149:6">ifdef</cpp:directive> <name pos:start="149:8" pos:end="149:31">LIBNFS_FEATURE_PAGECACHE</name></cpp:ifdef>

        <expr_stmt pos:start="151:9" pos:end="154:0"><expr pos:start="151:9" pos:end="151:49"><call pos:start="151:9" pos:end="151:49"><name pos:start="151:9" pos:end="151:29">nfs_set_pagecache_ttl</name><argument_list pos:start="151:30" pos:end="151:49">(<argument pos:start="151:31" pos:end="151:45"><expr pos:start="151:31" pos:end="151:45"><name pos:start="151:31" pos:end="151:45"><name pos:start="151:31" pos:end="151:36">client</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:45">context</name></name></expr></argument>, <argument pos:start="151:48" pos:end="151:48"><expr pos:start="151:48" pos:end="151:48"><literal type="number" pos:start="151:48" pos:end="151:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="155:9" pos:end="155:34"><expr pos:start="155:9" pos:end="155:33"><name pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:14">client</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:26">cache_used</name></name> <operator pos:start="155:28" pos:end="155:28">=</operator> <name pos:start="155:30" pos:end="155:33">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="163:1" pos:end="163:31">#<cpp:directive pos:start="163:2" pos:end="163:6">ifdef</cpp:directive> <name pos:start="163:8" pos:end="163:31">LIBNFS_FEATURE_PAGECACHE</name></cpp:ifdef>

    <if_stmt pos:start="165:5" pos:end="202:0"><if pos:start="165:5" pos:end="202:0">if <condition pos:start="165:8" pos:end="165:40">(<expr pos:start="165:9" pos:end="165:39"><call pos:start="165:9" pos:end="165:39"><name pos:start="165:9" pos:end="165:20">qemu_opt_get</name><argument_list pos:start="165:21" pos:end="165:39">(<argument pos:start="165:22" pos:end="165:25"><expr pos:start="165:22" pos:end="165:25"><name pos:start="165:22" pos:end="165:25">opts</name></expr></argument>, <argument pos:start="165:28" pos:end="165:38"><expr pos:start="165:28" pos:end="165:38"><literal type="string" pos:start="165:28" pos:end="165:38">"pagecache"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:42" pos:end="202:0">{<block_content pos:start="167:9" pos:end="193:34">

        <if_stmt pos:start="167:9" pos:end="175:9"><if pos:start="167:9" pos:end="175:9">if <condition pos:start="167:12" pos:end="167:40">(<expr pos:start="167:13" pos:end="167:39"><name pos:start="167:13" pos:end="167:22">open_flags</name> <operator pos:start="167:24" pos:end="167:24">&amp;</operator> <name pos:start="167:26" pos:end="167:39">BDRV_O_NOCACHE</name></expr>)</condition> <block pos:start="167:42" pos:end="175:9">{<block_content pos:start="169:13" pos:end="173:22">

            <expr_stmt pos:start="169:13" pos:end="171:53"><expr pos:start="169:13" pos:end="171:52"><call pos:start="169:13" pos:end="171:52"><name pos:start="169:13" pos:end="169:22">error_setg</name><argument_list pos:start="169:23" pos:end="171:52">(<argument pos:start="169:24" pos:end="169:27"><expr pos:start="169:24" pos:end="169:27"><name pos:start="169:24" pos:end="169:27">errp</name></expr></argument>, <argument pos:start="169:30" pos:end="171:51"><expr pos:start="169:30" pos:end="171:51"><literal type="string" pos:start="169:30" pos:end="169:59">"Cannot enable NFS pagecache "</literal>

                             <literal type="string" pos:start="171:30" pos:end="171:51">"if cache.direct = on"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="173:13" pos:end="173:22">goto <name pos:start="173:18" pos:end="173:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:70"><expr pos:start="177:9" pos:end="177:69"><name pos:start="177:9" pos:end="177:25"><name pos:start="177:9" pos:end="177:14">client</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:25">pagecache</name></name> <operator pos:start="177:27" pos:end="177:27">=</operator> <call pos:start="177:29" pos:end="177:69"><name pos:start="177:29" pos:end="177:47">qemu_opt_get_number</name><argument_list pos:start="177:48" pos:end="177:69">(<argument pos:start="177:49" pos:end="177:52"><expr pos:start="177:49" pos:end="177:52"><name pos:start="177:49" pos:end="177:52">opts</name></expr></argument>, <argument pos:start="177:55" pos:end="177:65"><expr pos:start="177:55" pos:end="177:65"><literal type="string" pos:start="177:55" pos:end="177:65">"pagecache"</literal></expr></argument>, <argument pos:start="177:68" pos:end="177:68"><expr pos:start="177:68" pos:end="177:68"><literal type="number" pos:start="177:68" pos:end="177:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if <condition pos:start="179:12" pos:end="179:60">(<expr pos:start="179:13" pos:end="179:59"><name pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:18">client</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:29">pagecache</name></name> <operator pos:start="179:31" pos:end="179:31">&gt;</operator> <name pos:start="179:33" pos:end="179:59">QEMU_NFS_MAX_PAGECACHE_SIZE</name></expr>)</condition> <block pos:start="179:62" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:60">

            <expr_stmt pos:start="181:13" pos:end="183:74"><expr pos:start="181:13" pos:end="183:73"><call pos:start="181:13" pos:end="183:73"><name pos:start="181:13" pos:end="181:24">error_report</name><argument_list pos:start="181:25" pos:end="183:73">(<argument pos:start="181:26" pos:end="183:43"><expr pos:start="181:26" pos:end="183:43"><literal type="string" pos:start="181:26" pos:end="181:65">"NFS Warning: Truncating NFS pagecache "</literal>

                         <literal type="string" pos:start="183:26" pos:end="183:43">"size to %d pages"</literal></expr></argument>, <argument pos:start="183:46" pos:end="183:72"><expr pos:start="183:46" pos:end="183:72"><name pos:start="183:46" pos:end="183:72">QEMU_NFS_MAX_PAGECACHE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:60"><expr pos:start="185:13" pos:end="185:59"><name pos:start="185:13" pos:end="185:29"><name pos:start="185:13" pos:end="185:18">client</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:29">pagecache</name></name> <operator pos:start="185:31" pos:end="185:31">=</operator> <name pos:start="185:33" pos:end="185:59">QEMU_NFS_MAX_PAGECACHE_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:62"><expr pos:start="189:9" pos:end="189:61"><call pos:start="189:9" pos:end="189:61"><name pos:start="189:9" pos:end="189:25">nfs_set_pagecache</name><argument_list pos:start="189:26" pos:end="189:61">(<argument pos:start="189:27" pos:end="189:41"><expr pos:start="189:27" pos:end="189:41"><name pos:start="189:27" pos:end="189:41"><name pos:start="189:27" pos:end="189:32">client</name><operator pos:start="189:33" pos:end="189:34">-&gt;</operator><name pos:start="189:35" pos:end="189:41">context</name></name></expr></argument>, <argument pos:start="189:44" pos:end="189:60"><expr pos:start="189:44" pos:end="189:60"><name pos:start="189:44" pos:end="189:60"><name pos:start="189:44" pos:end="189:49">client</name><operator pos:start="189:50" pos:end="189:51">-&gt;</operator><name pos:start="189:52" pos:end="189:60">pagecache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:50"><expr pos:start="191:9" pos:end="191:49"><call pos:start="191:9" pos:end="191:49"><name pos:start="191:9" pos:end="191:29">nfs_set_pagecache_ttl</name><argument_list pos:start="191:30" pos:end="191:49">(<argument pos:start="191:31" pos:end="191:45"><expr pos:start="191:31" pos:end="191:45"><name pos:start="191:31" pos:end="191:45"><name pos:start="191:31" pos:end="191:36">client</name><operator pos:start="191:37" pos:end="191:38">-&gt;</operator><name pos:start="191:39" pos:end="191:45">context</name></name></expr></argument>, <argument pos:start="191:48" pos:end="191:48"><expr pos:start="191:48" pos:end="191:48"><literal type="number" pos:start="191:48" pos:end="191:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:34"><expr pos:start="193:9" pos:end="193:33"><name pos:start="193:9" pos:end="193:26"><name pos:start="193:9" pos:end="193:14">client</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:26">cache_used</name></name> <operator pos:start="193:28" pos:end="193:28">=</operator> <name pos:start="193:30" pos:end="193:33">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="197:1" pos:end="197:6">#<cpp:directive pos:start="197:2" pos:end="197:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="201:1" pos:end="201:27">#<cpp:directive pos:start="201:2" pos:end="201:6">ifdef</cpp:directive> <name pos:start="201:8" pos:end="201:27">LIBNFS_FEATURE_DEBUG</name></cpp:ifdef>

    <if_stmt pos:start="203:5" pos:end="226:0"><if pos:start="203:5" pos:end="226:0">if <condition pos:start="203:8" pos:end="203:36">(<expr pos:start="203:9" pos:end="203:35"><call pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:20">qemu_opt_get</name><argument_list pos:start="203:21" pos:end="203:35">(<argument pos:start="203:22" pos:end="203:25"><expr pos:start="203:22" pos:end="203:25"><name pos:start="203:22" pos:end="203:25">opts</name></expr></argument>, <argument pos:start="203:28" pos:end="203:34"><expr pos:start="203:28" pos:end="203:34"><literal type="string" pos:start="203:28" pos:end="203:34">"debug"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="203:38" pos:end="226:0">{<block_content pos:start="205:9" pos:end="221:54">

        <expr_stmt pos:start="205:9" pos:end="205:62"><expr pos:start="205:9" pos:end="205:61"><name pos:start="205:9" pos:end="205:21"><name pos:start="205:9" pos:end="205:14">client</name><operator pos:start="205:15" pos:end="205:16">-&gt;</operator><name pos:start="205:17" pos:end="205:21">debug</name></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <call pos:start="205:25" pos:end="205:61"><name pos:start="205:25" pos:end="205:43">qemu_opt_get_number</name><argument_list pos:start="205:44" pos:end="205:61">(<argument pos:start="205:45" pos:end="205:48"><expr pos:start="205:45" pos:end="205:48"><name pos:start="205:45" pos:end="205:48">opts</name></expr></argument>, <argument pos:start="205:51" pos:end="205:57"><expr pos:start="205:51" pos:end="205:57"><literal type="string" pos:start="205:51" pos:end="205:57">"debug"</literal></expr></argument>, <argument pos:start="205:60" pos:end="205:60"><expr pos:start="205:60" pos:end="205:60"><literal type="number" pos:start="205:60" pos:end="205:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="207:9" pos:end="209:31">/* limit the maximum debug level to avoid potential flooding

         * of our log files. */</comment>

        <if_stmt pos:start="211:9" pos:end="219:9"><if pos:start="211:9" pos:end="219:9">if <condition pos:start="211:12" pos:end="211:53">(<expr pos:start="211:13" pos:end="211:52"><name pos:start="211:13" pos:end="211:25"><name pos:start="211:13" pos:end="211:18">client</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:25">debug</name></name> <operator pos:start="211:27" pos:end="211:27">&gt;</operator> <name pos:start="211:29" pos:end="211:52">QEMU_NFS_MAX_DEBUG_LEVEL</name></expr>)</condition> <block pos:start="211:55" pos:end="219:9">{<block_content pos:start="213:13" pos:end="217:53">

            <expr_stmt pos:start="213:13" pos:end="215:60"><expr pos:start="213:13" pos:end="215:59"><call pos:start="213:13" pos:end="215:59"><name pos:start="213:13" pos:end="213:24">error_report</name><argument_list pos:start="213:25" pos:end="215:59">(<argument pos:start="213:26" pos:end="215:32"><expr pos:start="213:26" pos:end="215:32"><literal type="string" pos:start="213:26" pos:end="213:65">"NFS Warning: Limiting NFS debug level "</literal>

                         <literal type="string" pos:start="215:26" pos:end="215:32">"to %d"</literal></expr></argument>, <argument pos:start="215:35" pos:end="215:58"><expr pos:start="215:35" pos:end="215:58"><name pos:start="215:35" pos:end="215:58">QEMU_NFS_MAX_DEBUG_LEVEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:53"><expr pos:start="217:13" pos:end="217:52"><name pos:start="217:13" pos:end="217:25"><name pos:start="217:13" pos:end="217:18">client</name><operator pos:start="217:19" pos:end="217:20">-&gt;</operator><name pos:start="217:21" pos:end="217:25">debug</name></name> <operator pos:start="217:27" pos:end="217:27">=</operator> <name pos:start="217:29" pos:end="217:52">QEMU_NFS_MAX_DEBUG_LEVEL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:54"><expr pos:start="221:9" pos:end="221:53"><call pos:start="221:9" pos:end="221:53"><name pos:start="221:9" pos:end="221:21">nfs_set_debug</name><argument_list pos:start="221:22" pos:end="221:53">(<argument pos:start="221:23" pos:end="221:37"><expr pos:start="221:23" pos:end="221:37"><name pos:start="221:23" pos:end="221:37"><name pos:start="221:23" pos:end="221:28">client</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:37">context</name></name></expr></argument>, <argument pos:start="221:40" pos:end="221:52"><expr pos:start="221:40" pos:end="221:52"><name pos:start="221:40" pos:end="221:52"><name pos:start="221:40" pos:end="221:45">client</name><operator pos:start="221:46" pos:end="221:47">-&gt;</operator><name pos:start="221:48" pos:end="221:52">debug</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="229:5" pos:end="229:73"><expr pos:start="229:5" pos:end="229:72"><name pos:start="229:5" pos:end="229:7">ret</name> <operator pos:start="229:9" pos:end="229:9">=</operator> <call pos:start="229:11" pos:end="229:72"><name pos:start="229:11" pos:end="229:19">nfs_mount</name><argument_list pos:start="229:20" pos:end="229:72">(<argument pos:start="229:21" pos:end="229:35"><expr pos:start="229:21" pos:end="229:35"><name pos:start="229:21" pos:end="229:35"><name pos:start="229:21" pos:end="229:26">client</name><operator pos:start="229:27" pos:end="229:28">-&gt;</operator><name pos:start="229:29" pos:end="229:35">context</name></name></expr></argument>, <argument pos:start="229:38" pos:end="229:57"><expr pos:start="229:38" pos:end="229:57"><name pos:start="229:38" pos:end="229:57"><name pos:start="229:38" pos:end="229:43">client</name><operator pos:start="229:44" pos:end="229:45">-&gt;</operator><name pos:start="229:46" pos:end="229:51">server</name><operator pos:start="229:52" pos:end="229:53">-&gt;</operator><name pos:start="229:54" pos:end="229:57">host</name></name></expr></argument>, <argument pos:start="229:60" pos:end="229:71"><expr pos:start="229:60" pos:end="229:71"><name pos:start="229:60" pos:end="229:71"><name pos:start="229:60" pos:end="229:65">client</name><operator pos:start="229:66" pos:end="229:67">-&gt;</operator><name pos:start="229:68" pos:end="229:71">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="239:5"><if pos:start="231:5" pos:end="239:5">if <condition pos:start="231:8" pos:end="231:16">(<expr pos:start="231:9" pos:end="231:15"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">&lt;</operator> <literal type="number" pos:start="231:15" pos:end="231:15">0</literal></expr>)</condition> <block pos:start="231:18" pos:end="239:5">{<block_content pos:start="233:9" pos:end="237:18">

        <expr_stmt pos:start="233:9" pos:end="235:51"><expr pos:start="233:9" pos:end="235:50"><call pos:start="233:9" pos:end="235:50"><name pos:start="233:9" pos:end="233:18">error_setg</name><argument_list pos:start="233:19" pos:end="235:50">(<argument pos:start="233:20" pos:end="233:23"><expr pos:start="233:20" pos:end="233:23"><name pos:start="233:20" pos:end="233:23">errp</name></expr></argument>, <argument pos:start="233:26" pos:end="233:56"><expr pos:start="233:26" pos:end="233:56"><literal type="string" pos:start="233:26" pos:end="233:56">"Failed to mount nfs share: %s"</literal></expr></argument>,

                   <argument pos:start="235:20" pos:end="235:49"><expr pos:start="235:20" pos:end="235:49"><call pos:start="235:20" pos:end="235:49"><name pos:start="235:20" pos:end="235:32">nfs_get_error</name><argument_list pos:start="235:33" pos:end="235:49">(<argument pos:start="235:34" pos:end="235:48"><expr pos:start="235:34" pos:end="235:48"><name pos:start="235:34" pos:end="235:48"><name pos:start="235:34" pos:end="235:39">client</name><operator pos:start="235:40" pos:end="235:41">-&gt;</operator><name pos:start="235:42" pos:end="235:48">context</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="237:9" pos:end="237:18">goto <name pos:start="237:14" pos:end="237:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="243:5" pos:end="271:5"><if pos:start="243:5" pos:end="257:5">if <condition pos:start="243:8" pos:end="243:24">(<expr pos:start="243:9" pos:end="243:23"><name pos:start="243:9" pos:end="243:13">flags</name> <operator pos:start="243:15" pos:end="243:15">&amp;</operator> <name pos:start="243:17" pos:end="243:23">O_CREAT</name></expr>)</condition> <block pos:start="243:26" pos:end="257:5">{<block_content pos:start="245:9" pos:end="255:9">

        <expr_stmt pos:start="245:9" pos:end="245:66"><expr pos:start="245:9" pos:end="245:65"><name pos:start="245:9" pos:end="245:11">ret</name> <operator pos:start="245:13" pos:end="245:13">=</operator> <call pos:start="245:15" pos:end="245:65"><name pos:start="245:15" pos:end="245:23">nfs_creat</name><argument_list pos:start="245:24" pos:end="245:65">(<argument pos:start="245:25" pos:end="245:39"><expr pos:start="245:25" pos:end="245:39"><name pos:start="245:25" pos:end="245:39"><name pos:start="245:25" pos:end="245:30">client</name><operator pos:start="245:31" pos:end="245:32">-&gt;</operator><name pos:start="245:33" pos:end="245:39">context</name></name></expr></argument>, <argument pos:start="245:42" pos:end="245:45"><expr pos:start="245:42" pos:end="245:45"><name pos:start="245:42" pos:end="245:45">file</name></expr></argument>, <argument pos:start="245:48" pos:end="245:51"><expr pos:start="245:48" pos:end="245:51"><literal type="number" pos:start="245:48" pos:end="245:51">0600</literal></expr></argument>, <argument pos:start="245:54" pos:end="245:64"><expr pos:start="245:54" pos:end="245:64"><operator pos:start="245:54" pos:end="245:54">&amp;</operator><name pos:start="245:55" pos:end="245:64"><name pos:start="245:55" pos:end="245:60">client</name><operator pos:start="245:61" pos:end="245:62">-&gt;</operator><name pos:start="245:63" pos:end="245:64">fh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="255:9"><if pos:start="247:9" pos:end="255:9">if <condition pos:start="247:12" pos:end="247:20">(<expr pos:start="247:13" pos:end="247:19"><name pos:start="247:13" pos:end="247:15">ret</name> <operator pos:start="247:17" pos:end="247:17">&lt;</operator> <literal type="number" pos:start="247:19" pos:end="247:19">0</literal></expr>)</condition> <block pos:start="247:22" pos:end="255:9">{<block_content pos:start="249:13" pos:end="253:22">

            <expr_stmt pos:start="249:13" pos:end="251:55"><expr pos:start="249:13" pos:end="251:54"><call pos:start="249:13" pos:end="251:54"><name pos:start="249:13" pos:end="249:22">error_setg</name><argument_list pos:start="249:23" pos:end="251:54">(<argument pos:start="249:24" pos:end="249:27"><expr pos:start="249:24" pos:end="249:27"><name pos:start="249:24" pos:end="249:27">errp</name></expr></argument>, <argument pos:start="249:30" pos:end="249:56"><expr pos:start="249:30" pos:end="249:56"><literal type="string" pos:start="249:30" pos:end="249:56">"Failed to create file: %s"</literal></expr></argument>,

                       <argument pos:start="251:24" pos:end="251:53"><expr pos:start="251:24" pos:end="251:53"><call pos:start="251:24" pos:end="251:53"><name pos:start="251:24" pos:end="251:36">nfs_get_error</name><argument_list pos:start="251:37" pos:end="251:53">(<argument pos:start="251:38" pos:end="251:52"><expr pos:start="251:38" pos:end="251:52"><name pos:start="251:38" pos:end="251:52"><name pos:start="251:38" pos:end="251:43">client</name><operator pos:start="251:44" pos:end="251:45">-&gt;</operator><name pos:start="251:46" pos:end="251:52">context</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="253:13" pos:end="253:22">goto <name pos:start="253:18" pos:end="253:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="257:7" pos:end="271:5">else <block pos:start="257:12" pos:end="271:5">{<block_content pos:start="259:9" pos:end="269:9">

        <expr_stmt pos:start="259:9" pos:end="259:66"><expr pos:start="259:9" pos:end="259:65"><name pos:start="259:9" pos:end="259:11">ret</name> <operator pos:start="259:13" pos:end="259:13">=</operator> <call pos:start="259:15" pos:end="259:65"><name pos:start="259:15" pos:end="259:22">nfs_open</name><argument_list pos:start="259:23" pos:end="259:65">(<argument pos:start="259:24" pos:end="259:38"><expr pos:start="259:24" pos:end="259:38"><name pos:start="259:24" pos:end="259:38"><name pos:start="259:24" pos:end="259:29">client</name><operator pos:start="259:30" pos:end="259:31">-&gt;</operator><name pos:start="259:32" pos:end="259:38">context</name></name></expr></argument>, <argument pos:start="259:41" pos:end="259:44"><expr pos:start="259:41" pos:end="259:44"><name pos:start="259:41" pos:end="259:44">file</name></expr></argument>, <argument pos:start="259:47" pos:end="259:51"><expr pos:start="259:47" pos:end="259:51"><name pos:start="259:47" pos:end="259:51">flags</name></expr></argument>, <argument pos:start="259:54" pos:end="259:64"><expr pos:start="259:54" pos:end="259:64"><operator pos:start="259:54" pos:end="259:54">&amp;</operator><name pos:start="259:55" pos:end="259:64"><name pos:start="259:55" pos:end="259:60">client</name><operator pos:start="259:61" pos:end="259:62">-&gt;</operator><name pos:start="259:63" pos:end="259:64">fh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="269:9"><if pos:start="261:9" pos:end="269:9">if <condition pos:start="261:12" pos:end="261:20">(<expr pos:start="261:13" pos:end="261:19"><name pos:start="261:13" pos:end="261:15">ret</name> <operator pos:start="261:17" pos:end="261:17">&lt;</operator> <literal type="number" pos:start="261:19" pos:end="261:19">0</literal></expr>)</condition> <block pos:start="261:22" pos:end="269:9">{<block_content pos:start="263:13" pos:end="267:22">

            <expr_stmt pos:start="263:13" pos:end="265:55"><expr pos:start="263:13" pos:end="265:54"><call pos:start="263:13" pos:end="265:54"><name pos:start="263:13" pos:end="263:22">error_setg</name><argument_list pos:start="263:23" pos:end="265:54">(<argument pos:start="263:24" pos:end="263:27"><expr pos:start="263:24" pos:end="263:27"><name pos:start="263:24" pos:end="263:27">errp</name></expr></argument>, <argument pos:start="263:30" pos:end="263:55"><expr pos:start="263:30" pos:end="263:55"><literal type="string" pos:start="263:30" pos:end="263:55">"Failed to open file : %s"</literal></expr></argument>,

                       <argument pos:start="265:24" pos:end="265:53"><expr pos:start="265:24" pos:end="265:53"><call pos:start="265:24" pos:end="265:53"><name pos:start="265:24" pos:end="265:36">nfs_get_error</name><argument_list pos:start="265:37" pos:end="265:53">(<argument pos:start="265:38" pos:end="265:52"><expr pos:start="265:38" pos:end="265:52"><name pos:start="265:38" pos:end="265:52"><name pos:start="265:38" pos:end="265:43">client</name><operator pos:start="265:44" pos:end="265:45">-&gt;</operator><name pos:start="265:46" pos:end="265:52">context</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="267:13" pos:end="267:22">goto <name pos:start="267:18" pos:end="267:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="275:5" pos:end="275:54"><expr pos:start="275:5" pos:end="275:53"><name pos:start="275:5" pos:end="275:7">ret</name> <operator pos:start="275:9" pos:end="275:9">=</operator> <call pos:start="275:11" pos:end="275:53"><name pos:start="275:11" pos:end="275:19">nfs_fstat</name><argument_list pos:start="275:20" pos:end="275:53">(<argument pos:start="275:21" pos:end="275:35"><expr pos:start="275:21" pos:end="275:35"><name pos:start="275:21" pos:end="275:35"><name pos:start="275:21" pos:end="275:26">client</name><operator pos:start="275:27" pos:end="275:28">-&gt;</operator><name pos:start="275:29" pos:end="275:35">context</name></name></expr></argument>, <argument pos:start="275:38" pos:end="275:47"><expr pos:start="275:38" pos:end="275:47"><name pos:start="275:38" pos:end="275:47"><name pos:start="275:38" pos:end="275:43">client</name><operator pos:start="275:44" pos:end="275:45">-&gt;</operator><name pos:start="275:46" pos:end="275:47">fh</name></name></expr></argument>, <argument pos:start="275:50" pos:end="275:52"><expr pos:start="275:50" pos:end="275:52"><operator pos:start="275:50" pos:end="275:50">&amp;</operator><name pos:start="275:51" pos:end="275:52">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="277:5" pos:end="285:5"><if pos:start="277:5" pos:end="285:5">if <condition pos:start="277:8" pos:end="277:16">(<expr pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:11">ret</name> <operator pos:start="277:13" pos:end="277:13">&lt;</operator> <literal type="number" pos:start="277:15" pos:end="277:15">0</literal></expr>)</condition> <block pos:start="277:18" pos:end="285:5">{<block_content pos:start="279:9" pos:end="283:18">

        <expr_stmt pos:start="279:9" pos:end="281:51"><expr pos:start="279:9" pos:end="281:50"><call pos:start="279:9" pos:end="281:50"><name pos:start="279:9" pos:end="279:18">error_setg</name><argument_list pos:start="279:19" pos:end="281:50">(<argument pos:start="279:20" pos:end="279:23"><expr pos:start="279:20" pos:end="279:23"><name pos:start="279:20" pos:end="279:23">errp</name></expr></argument>, <argument pos:start="279:26" pos:end="279:51"><expr pos:start="279:26" pos:end="279:51"><literal type="string" pos:start="279:26" pos:end="279:51">"Failed to fstat file: %s"</literal></expr></argument>,

                   <argument pos:start="281:20" pos:end="281:49"><expr pos:start="281:20" pos:end="281:49"><call pos:start="281:20" pos:end="281:49"><name pos:start="281:20" pos:end="281:32">nfs_get_error</name><argument_list pos:start="281:33" pos:end="281:49">(<argument pos:start="281:34" pos:end="281:48"><expr pos:start="281:34" pos:end="281:48"><name pos:start="281:34" pos:end="281:48"><name pos:start="281:34" pos:end="281:39">client</name><operator pos:start="281:40" pos:end="281:41">-&gt;</operator><name pos:start="281:42" pos:end="281:48">context</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="283:9" pos:end="283:18">goto <name pos:start="283:14" pos:end="283:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="289:5" pos:end="289:53"><expr pos:start="289:5" pos:end="289:52"><name pos:start="289:5" pos:end="289:7">ret</name> <operator pos:start="289:9" pos:end="289:9">=</operator> <call pos:start="289:11" pos:end="289:52"><name pos:start="289:11" pos:end="289:22">DIV_ROUND_UP</name><argument_list pos:start="289:23" pos:end="289:52">(<argument pos:start="289:24" pos:end="289:33"><expr pos:start="289:24" pos:end="289:33"><name pos:start="289:24" pos:end="289:33"><name pos:start="289:24" pos:end="289:25">st</name><operator pos:start="289:26" pos:end="289:26">.</operator><name pos:start="289:27" pos:end="289:33">st_size</name></name></expr></argument>, <argument pos:start="289:36" pos:end="289:51"><expr pos:start="289:36" pos:end="289:51"><name pos:start="289:36" pos:end="289:51">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:37"><expr pos:start="291:5" pos:end="291:36"><name pos:start="291:5" pos:end="291:21"><name pos:start="291:5" pos:end="291:10">client</name><operator pos:start="291:11" pos:end="291:12">-&gt;</operator><name pos:start="291:13" pos:end="291:21">st_blocks</name></name> <operator pos:start="291:23" pos:end="291:23">=</operator> <name pos:start="291:25" pos:end="291:36"><name pos:start="291:25" pos:end="291:26">st</name><operator pos:start="291:27" pos:end="291:27">.</operator><name pos:start="291:28" pos:end="291:36">st_blocks</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:48"><expr pos:start="293:5" pos:end="293:47"><name pos:start="293:5" pos:end="293:25"><name pos:start="293:5" pos:end="293:10">client</name><operator pos:start="293:11" pos:end="293:12">-&gt;</operator><name pos:start="293:13" pos:end="293:25">has_zero_init</name></name> <operator pos:start="293:27" pos:end="293:27">=</operator> <call pos:start="293:29" pos:end="293:47"><name pos:start="293:29" pos:end="293:35">S_ISREG</name><argument_list pos:start="293:36" pos:end="293:47">(<argument pos:start="293:37" pos:end="293:46"><expr pos:start="293:37" pos:end="293:46"><name pos:start="293:37" pos:end="293:46"><name pos:start="293:37" pos:end="293:38">st</name><operator pos:start="293:39" pos:end="293:39">.</operator><name pos:start="293:40" pos:end="293:46">st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:16"><expr pos:start="295:5" pos:end="295:15"><operator pos:start="295:5" pos:end="295:5">*</operator><name pos:start="295:6" pos:end="295:9">strp</name> <operator pos:start="295:11" pos:end="295:11">=</operator> <literal type="char" pos:start="295:13" pos:end="295:15">'/'</literal></expr>;</expr_stmt>

    <goto pos:start="297:5" pos:end="297:13">goto <name pos:start="297:10" pos:end="297:12">out</name>;</goto>



<label pos:start="301:1" pos:end="301:5"><name pos:start="301:1" pos:end="301:4">fail</name>:</label>

    <expr_stmt pos:start="303:5" pos:end="303:29"><expr pos:start="303:5" pos:end="303:28"><call pos:start="303:5" pos:end="303:28"><name pos:start="303:5" pos:end="303:20">nfs_client_close</name><argument_list pos:start="303:21" pos:end="303:28">(<argument pos:start="303:22" pos:end="303:27"><expr pos:start="303:22" pos:end="303:27"><name pos:start="303:22" pos:end="303:27">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="305:1" pos:end="305:4"><name pos:start="305:1" pos:end="305:3">out</name>:</label>

    <expr_stmt pos:start="307:5" pos:end="307:24"><expr pos:start="307:5" pos:end="307:23"><call pos:start="307:5" pos:end="307:23"><name pos:start="307:5" pos:end="307:17">qemu_opts_del</name><argument_list pos:start="307:18" pos:end="307:23">(<argument pos:start="307:19" pos:end="307:22"><expr pos:start="307:19" pos:end="307:22"><name pos:start="307:19" pos:end="307:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:17"><expr pos:start="309:5" pos:end="309:16"><call pos:start="309:5" pos:end="309:16"><name pos:start="309:5" pos:end="309:10">g_free</name><argument_list pos:start="309:11" pos:end="309:16">(<argument pos:start="309:12" pos:end="309:15"><expr pos:start="309:12" pos:end="309:15"><name pos:start="309:12" pos:end="309:15">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="311:5" pos:end="311:15">return <expr pos:start="311:12" pos:end="311:14"><name pos:start="311:12" pos:end="311:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
