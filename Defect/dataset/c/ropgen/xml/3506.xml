<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3506.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">lowpass16</name><parameter_list pos:start="1:22" pos:end="3:75">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">WaveformContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:49">AVFrame</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">in</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">AVFrame</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">out</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:35"><decl pos:start="3:23" pos:end="3:35"><type pos:start="3:23" pos:end="3:35"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:35">component</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:50">intensity</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:62"><decl pos:start="3:53" pos:end="3:62"><type pos:start="3:53" pos:end="3:62"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:62">offset</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:74"><decl pos:start="3:65" pos:end="3:74"><type pos:start="3:65" pos:end="3:74"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:74">column</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:5" pos:end="95:37">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">plane</name> <init pos:start="7:21" pos:end="7:52">= <expr pos:start="7:23" pos:end="7:52"><name pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:29">desc</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">comp</name><index pos:start="7:36" pos:end="7:46">[<expr pos:start="7:37" pos:end="7:45"><name pos:start="7:37" pos:end="7:45">component</name></expr>]</index></name><operator pos:start="7:47" pos:end="7:47">.</operator><name pos:start="7:48" pos:end="7:52">plane</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:20">mirror</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">mirror</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:61"><decl pos:start="11:5" pos:end="11:60"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:23">is_chroma</name> <init pos:start="11:25" pos:end="11:60">= <expr pos:start="11:27" pos:end="11:60"><operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:36">component</name> <operator pos:start="11:38" pos:end="11:39">==</operator> <literal type="number" pos:start="11:41" pos:end="11:41">1</literal> <operator pos:start="11:43" pos:end="11:44">||</operator> <name pos:start="11:46" pos:end="11:54">component</name> <operator pos:start="11:56" pos:end="11:57">==</operator> <literal type="number" pos:start="11:59" pos:end="11:59">2</literal><operator pos:start="11:60" pos:end="11:60">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:65"><decl pos:start="13:5" pos:end="13:64"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:21">shift_w</name> <init pos:start="13:23" pos:end="13:64">= <expr pos:start="13:25" pos:end="13:64"><operator pos:start="13:25" pos:end="13:25">(</operator><ternary pos:start="13:26" pos:end="13:63"><condition pos:start="13:26" pos:end="13:36"><expr pos:start="13:26" pos:end="13:34"><name pos:start="13:26" pos:end="13:34">is_chroma</name></expr> ?</condition><then pos:start="13:38" pos:end="13:59"> <expr pos:start="13:38" pos:end="13:59"><name pos:start="13:38" pos:end="13:59"><name pos:start="13:38" pos:end="13:38">s</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:44">desc</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:59">log2_chroma_w</name></name></expr> </then><else pos:start="13:61" pos:end="13:63">: <expr pos:start="13:63" pos:end="13:63"><literal type="number" pos:start="13:63" pos:end="13:63">0</literal></expr></else></ternary><operator pos:start="13:64" pos:end="13:64">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:65"><decl pos:start="15:5" pos:end="15:64"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:21">shift_h</name> <init pos:start="15:23" pos:end="15:64">= <expr pos:start="15:25" pos:end="15:64"><operator pos:start="15:25" pos:end="15:25">(</operator><ternary pos:start="15:26" pos:end="15:63"><condition pos:start="15:26" pos:end="15:36"><expr pos:start="15:26" pos:end="15:34"><name pos:start="15:26" pos:end="15:34">is_chroma</name></expr> ?</condition><then pos:start="15:38" pos:end="15:59"> <expr pos:start="15:38" pos:end="15:59"><name pos:start="15:38" pos:end="15:59"><name pos:start="15:38" pos:end="15:38">s</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:44">desc</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:59">log2_chroma_h</name></name></expr> </then><else pos:start="15:61" pos:end="15:63">: <expr pos:start="15:63" pos:end="15:63"><literal type="number" pos:start="15:63" pos:end="15:63">0</literal></expr></else></ternary><operator pos:start="15:64" pos:end="15:64">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:53"><decl pos:start="17:5" pos:end="17:52"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:26">src_linesize</name> <init pos:start="17:28" pos:end="17:52">= <expr pos:start="17:30" pos:end="17:52"><name pos:start="17:30" pos:end="17:48"><name pos:start="17:30" pos:end="17:31">in</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:41">linesize</name><index pos:start="17:42" pos:end="17:48">[<expr pos:start="17:43" pos:end="17:47"><name pos:start="17:43" pos:end="17:47">plane</name></expr>]</index></name> <operator pos:start="17:50" pos:end="17:50">/</operator> <literal type="number" pos:start="17:52" pos:end="17:52">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:54"><decl pos:start="19:5" pos:end="19:53"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:26">dst_linesize</name> <init pos:start="19:28" pos:end="19:53">= <expr pos:start="19:30" pos:end="19:53"><name pos:start="19:30" pos:end="19:49"><name pos:start="19:30" pos:end="19:32">out</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:42">linesize</name><index pos:start="19:43" pos:end="19:49">[<expr pos:start="19:44" pos:end="19:48"><name pos:start="19:44" pos:end="19:48">plane</name></expr>]</index></name> <operator pos:start="19:51" pos:end="19:51">/</operator> <literal type="number" pos:start="19:53" pos:end="19:53">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:74"><decl pos:start="21:5" pos:end="21:73"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:33">dst_signed_linesize</name> <init pos:start="21:35" pos:end="21:73">= <expr pos:start="21:37" pos:end="21:73"><name pos:start="21:37" pos:end="21:48">dst_linesize</name> <operator pos:start="21:50" pos:end="21:50">*</operator> <operator pos:start="21:52" pos:end="21:52">(</operator><ternary pos:start="21:53" pos:end="21:72"><condition pos:start="21:53" pos:end="21:65"><expr pos:start="21:53" pos:end="21:63"><name pos:start="21:53" pos:end="21:58">mirror</name> <operator pos:start="21:60" pos:end="21:61">==</operator> <literal type="number" pos:start="21:63" pos:end="21:63">1</literal></expr> ?</condition><then pos:start="21:67" pos:end="21:68"> <expr pos:start="21:67" pos:end="21:68"><operator pos:start="21:67" pos:end="21:67">-</operator><literal type="number" pos:start="21:68" pos:end="21:68">1</literal></expr> </then><else pos:start="21:70" pos:end="21:72">: <expr pos:start="21:72" pos:end="21:72"><literal type="number" pos:start="21:72" pos:end="21:72">1</literal></expr></else></ternary><operator pos:start="21:73" pos:end="21:73">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:34"><decl pos:start="23:5" pos:end="23:33"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:19">limit</name> <init pos:start="23:21" pos:end="23:33">= <expr pos:start="23:23" pos:end="23:33"><name pos:start="23:23" pos:end="23:29"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:29">size</name></name> <operator pos:start="23:31" pos:end="23:31">-</operator> <literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:38"><decl pos:start="25:5" pos:end="25:37"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:17">max</name> <init pos:start="25:19" pos:end="25:37">= <expr pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:25">limit</name> <operator pos:start="25:27" pos:end="25:27">-</operator> <name pos:start="25:29" pos:end="25:37">intensity</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:58"><decl pos:start="27:5" pos:end="27:57"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:19">src_h</name> <init pos:start="27:21" pos:end="27:57">= <expr pos:start="27:23" pos:end="27:57"><call pos:start="27:23" pos:end="27:57"><name pos:start="27:23" pos:end="27:36">FF_CEIL_RSHIFT</name><argument_list pos:start="27:37" pos:end="27:57">(<argument pos:start="27:38" pos:end="27:47"><expr pos:start="27:38" pos:end="27:47"><name pos:start="27:38" pos:end="27:47"><name pos:start="27:38" pos:end="27:39">in</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:47">height</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:56"><expr pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:56">shift_h</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:57"><decl pos:start="29:5" pos:end="29:56"><type pos:start="29:5" pos:end="29:13"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:13">int</name></type> <name pos:start="29:15" pos:end="29:19">src_w</name> <init pos:start="29:21" pos:end="29:56">= <expr pos:start="29:23" pos:end="29:56"><call pos:start="29:23" pos:end="29:56"><name pos:start="29:23" pos:end="29:36">FF_CEIL_RSHIFT</name><argument_list pos:start="29:37" pos:end="29:56">(<argument pos:start="29:38" pos:end="29:46"><expr pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:39">in</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:46">width</name></name></expr></argument>, <argument pos:start="29:49" pos:end="29:55"><expr pos:start="29:49" pos:end="29:55"><name pos:start="29:49" pos:end="29:55">shift_w</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:65"><decl pos:start="31:5" pos:end="31:64"><type pos:start="31:5" pos:end="31:20"><specifier pos:start="31:5" pos:end="31:9">const</specifier> <name pos:start="31:11" pos:end="31:18">uint16_t</name> <modifier pos:start="31:20" pos:end="31:20">*</modifier></type><name pos:start="31:21" pos:end="31:28">src_data</name> <init pos:start="31:30" pos:end="31:64">= <expr pos:start="31:32" pos:end="31:64"><operator pos:start="31:32" pos:end="31:32">(</operator><specifier pos:start="31:33" pos:end="31:37">const</specifier> <name pos:start="31:39" pos:end="31:46">uint16_t</name> <operator pos:start="31:48" pos:end="31:48">*</operator><operator pos:start="31:49" pos:end="31:49">)</operator><name pos:start="31:50" pos:end="31:64"><name pos:start="31:50" pos:end="31:51">in</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:57">data</name><index pos:start="31:58" pos:end="31:64">[<expr pos:start="31:59" pos:end="31:63"><name pos:start="31:59" pos:end="31:63">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:122"><decl pos:start="33:5" pos:end="33:121"><type pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:12">uint16_t</name> <modifier pos:start="33:14" pos:end="33:14">*</modifier></type><name pos:start="33:15" pos:end="33:22">dst_data</name> <init pos:start="33:24" pos:end="33:121">= <expr pos:start="33:26" pos:end="33:121"><operator pos:start="33:26" pos:end="33:26">(</operator><name pos:start="33:27" pos:end="33:34">uint16_t</name> <operator pos:start="33:36" pos:end="33:36">*</operator><operator pos:start="33:37" pos:end="33:37">)</operator><name pos:start="33:38" pos:end="33:53"><name pos:start="33:38" pos:end="33:40">out</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:46">data</name><index pos:start="33:47" pos:end="33:53">[<expr pos:start="33:48" pos:end="33:52"><name pos:start="33:48" pos:end="33:52">plane</name></expr>]</index></name> <operator pos:start="33:55" pos:end="33:55">+</operator> <operator pos:start="33:57" pos:end="33:57">(</operator><ternary pos:start="33:58" pos:end="33:120"><condition pos:start="33:58" pos:end="33:65"><expr pos:start="33:58" pos:end="33:63"><name pos:start="33:58" pos:end="33:63">column</name></expr> ?</condition><then pos:start="33:67" pos:end="33:100"> <expr pos:start="33:67" pos:end="33:100"><operator pos:start="33:67" pos:end="33:67">(</operator><name pos:start="33:68" pos:end="33:73">offset</name> <operator pos:start="33:75" pos:end="33:76">&gt;&gt;</operator> <name pos:start="33:78" pos:end="33:84">shift_h</name><operator pos:start="33:85" pos:end="33:85">)</operator> <operator pos:start="33:87" pos:end="33:87">*</operator> <name pos:start="33:89" pos:end="33:100">dst_linesize</name></expr> </then><else pos:start="33:102" pos:end="33:120">: <expr pos:start="33:104" pos:end="33:120"><name pos:start="33:104" pos:end="33:109">offset</name> <operator pos:start="33:111" pos:end="33:112">&gt;&gt;</operator> <name pos:start="33:114" pos:end="33:120">shift_w</name></expr></else></ternary><operator pos:start="33:121" pos:end="33:121">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:92"><decl pos:start="35:5" pos:end="35:91"><type pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:12">uint16_t</name> <modifier pos:start="35:14" pos:end="35:14">*</modifier> <specifier pos:start="35:16" pos:end="35:20">const</specifier></type> <name pos:start="35:22" pos:end="35:36">dst_bottom_line</name> <init pos:start="35:38" pos:end="35:91">= <expr pos:start="35:40" pos:end="35:91"><name pos:start="35:40" pos:end="35:47">dst_data</name> <operator pos:start="35:49" pos:end="35:49">+</operator> <name pos:start="35:51" pos:end="35:62">dst_linesize</name> <operator pos:start="35:64" pos:end="35:64">*</operator> <operator pos:start="35:66" pos:end="35:66">(</operator><operator pos:start="35:67" pos:end="35:67">(</operator><name pos:start="35:68" pos:end="35:74"><name pos:start="35:68" pos:end="35:68">s</name><operator pos:start="35:69" pos:end="35:70">-&gt;</operator><name pos:start="35:71" pos:end="35:74">size</name></name> <operator pos:start="35:76" pos:end="35:77">&gt;&gt;</operator> <name pos:start="35:79" pos:end="35:85">shift_h</name><operator pos:start="35:86" pos:end="35:86">)</operator> <operator pos:start="35:88" pos:end="35:88">-</operator> <literal type="number" pos:start="35:90" pos:end="35:90">1</literal><operator pos:start="35:91" pos:end="35:91">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:70"><decl pos:start="37:5" pos:end="37:69"><type pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:12">uint16_t</name> <modifier pos:start="37:14" pos:end="37:14">*</modifier> <specifier pos:start="37:16" pos:end="37:20">const</specifier></type> <name pos:start="37:22" pos:end="37:29">dst_line</name> <init pos:start="37:31" pos:end="37:69">= <expr pos:start="37:33" pos:end="37:69"><operator pos:start="37:33" pos:end="37:33">(</operator><ternary pos:start="37:34" pos:end="37:68"><condition pos:start="37:34" pos:end="37:41"><expr pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:39">mirror</name></expr> ?</condition><then pos:start="37:43" pos:end="37:57"> <expr pos:start="37:43" pos:end="37:57"><name pos:start="37:43" pos:end="37:57">dst_bottom_line</name></expr> </then><else pos:start="37:59" pos:end="37:68">: <expr pos:start="37:61" pos:end="37:68"><name pos:start="37:61" pos:end="37:68">dst_data</name></expr></else></ternary><operator pos:start="37:69" pos:end="37:69">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:22"><decl pos:start="39:5" pos:end="39:21"><type pos:start="39:5" pos:end="39:20"><specifier pos:start="39:5" pos:end="39:9">const</specifier> <name pos:start="39:11" pos:end="39:18">uint16_t</name> <modifier pos:start="39:20" pos:end="39:20">*</modifier></type><name pos:start="39:21" pos:end="39:21">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:10"><decl pos:start="41:5" pos:end="41:9"><type pos:start="41:5" pos:end="41:7"><name pos:start="41:5" pos:end="41:7">int</name></type> <name pos:start="41:9" pos:end="41:9">y</name></decl>;</decl_stmt>



    <if_stmt pos:start="45:5" pos:end="47:39"><if pos:start="45:5" pos:end="47:39">if <condition pos:start="45:8" pos:end="45:26">(<expr pos:start="45:9" pos:end="45:25"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:15">column</name> <operator pos:start="45:17" pos:end="45:18">&amp;&amp;</operator> <name pos:start="45:20" pos:end="45:25">mirror</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:39"><block_content pos:start="47:9" pos:end="47:39">

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:16">dst_data</name> <operator pos:start="47:18" pos:end="47:19">+=</operator> <name pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:27">size</name></name> <operator pos:start="47:29" pos:end="47:30">&gt;&gt;</operator> <name pos:start="47:32" pos:end="47:38">shift_w</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="51:5" pos:end="91:5">for <control pos:start="51:9" pos:end="51:31">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">y</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:26"><expr pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:17">y</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:25">src_h</name></expr>;</condition> <incr pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:28">y</name><operator pos:start="51:29" pos:end="51:30">++</operator></expr></incr>)</control> <block pos:start="51:33" pos:end="91:5">{<block_content pos:start="53:9" pos:end="89:33">

        <decl_stmt pos:start="53:9" pos:end="53:56"><decl pos:start="53:9" pos:end="53:55"><type pos:start="53:9" pos:end="53:24"><specifier pos:start="53:9" pos:end="53:13">const</specifier> <name pos:start="53:15" pos:end="53:22">uint16_t</name> <modifier pos:start="53:24" pos:end="53:24">*</modifier></type><name pos:start="53:25" pos:end="53:36">src_data_end</name> <init pos:start="53:38" pos:end="53:55">= <expr pos:start="53:40" pos:end="53:55"><name pos:start="53:40" pos:end="53:47">src_data</name> <operator pos:start="53:49" pos:end="53:49">+</operator> <name pos:start="53:51" pos:end="53:55">src_w</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:33"><decl pos:start="55:9" pos:end="55:32"><type pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:16">uint16_t</name> <modifier pos:start="55:18" pos:end="55:18">*</modifier></type><name pos:start="55:19" pos:end="55:21">dst</name> <init pos:start="55:23" pos:end="55:32">= <expr pos:start="55:25" pos:end="55:32"><name pos:start="55:25" pos:end="55:32">dst_line</name></expr></init></decl>;</decl_stmt>



        <for pos:start="59:9" pos:end="85:9">for <control pos:start="59:13" pos:end="59:49">(<init pos:start="59:14" pos:end="59:26"><expr pos:start="59:14" pos:end="59:25"><name pos:start="59:14" pos:end="59:14">p</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:25">src_data</name></expr>;</init> <condition pos:start="59:28" pos:end="59:44"><expr pos:start="59:28" pos:end="59:43"><name pos:start="59:28" pos:end="59:28">p</name> <operator pos:start="59:30" pos:end="59:30">&lt;</operator> <name pos:start="59:32" pos:end="59:43">src_data_end</name></expr>;</condition> <incr pos:start="59:46" pos:end="59:48"><expr pos:start="59:46" pos:end="59:48"><name pos:start="59:46" pos:end="59:46">p</name><operator pos:start="59:47" pos:end="59:48">++</operator></expr></incr>)</control> <block pos:start="59:51" pos:end="85:9">{<block_content pos:start="61:13" pos:end="83:52">

            <decl_stmt pos:start="61:13" pos:end="61:29"><decl pos:start="61:13" pos:end="61:28"><type pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:20">uint16_t</name> <modifier pos:start="61:22" pos:end="61:22">*</modifier></type><name pos:start="61:23" pos:end="61:28">target</name></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:37"><decl pos:start="63:13" pos:end="63:36"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:17">v</name> <init pos:start="63:19" pos:end="63:36">= <expr pos:start="63:21" pos:end="63:36"><call pos:start="63:21" pos:end="63:36"><name pos:start="63:21" pos:end="63:25">FFMIN</name><argument_list pos:start="63:26" pos:end="63:36">(<argument pos:start="63:27" pos:end="63:28"><expr pos:start="63:27" pos:end="63:28"><operator pos:start="63:27" pos:end="63:27">*</operator><name pos:start="63:28" pos:end="63:28">p</name></expr></argument>, <argument pos:start="63:31" pos:end="63:35"><expr pos:start="63:31" pos:end="63:35"><name pos:start="63:31" pos:end="63:35">limit</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="67:13" pos:end="81:13"><if pos:start="67:13" pos:end="71:13">if <condition pos:start="67:16" pos:end="67:23">(<expr pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:22">column</name></expr>)</condition> <block pos:start="67:25" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:70">

                <expr_stmt pos:start="69:17" pos:end="69:70"><expr pos:start="69:17" pos:end="69:69"><name pos:start="69:17" pos:end="69:22">target</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:28">dst</name><operator pos:start="69:29" pos:end="69:30">++</operator> <operator pos:start="69:32" pos:end="69:32">+</operator> <name pos:start="69:34" pos:end="69:52">dst_signed_linesize</name> <operator pos:start="69:54" pos:end="69:54">*</operator> <operator pos:start="69:56" pos:end="69:56">(</operator><name pos:start="69:57" pos:end="69:57">v</name> <operator pos:start="69:59" pos:end="69:60">&gt;&gt;</operator> <name pos:start="69:62" pos:end="69:68">shift_h</name><operator pos:start="69:69" pos:end="69:69">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="81:13">else <block pos:start="71:20" pos:end="81:13">{<block_content pos:start="73:17" pos:end="79:55">

                <if_stmt pos:start="73:17" pos:end="79:55"><if pos:start="73:17" pos:end="75:59">if <condition pos:start="73:20" pos:end="73:27">(<expr pos:start="73:21" pos:end="73:26"><name pos:start="73:21" pos:end="73:26">mirror</name></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:59"><block_content pos:start="75:21" pos:end="75:59">

                    <expr_stmt pos:start="75:21" pos:end="75:59"><expr pos:start="75:21" pos:end="75:58"><name pos:start="75:21" pos:end="75:26">target</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:37">dst_data</name> <operator pos:start="75:39" pos:end="75:39">-</operator> <operator pos:start="75:41" pos:end="75:41">(</operator><name pos:start="75:42" pos:end="75:42">v</name> <operator pos:start="75:44" pos:end="75:45">&gt;&gt;</operator> <name pos:start="75:47" pos:end="75:53">shift_w</name><operator pos:start="75:54" pos:end="75:54">)</operator> <operator pos:start="75:56" pos:end="75:56">-</operator> <literal type="number" pos:start="75:58" pos:end="75:58">1</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="77:17" pos:end="79:55">else<block type="pseudo" pos:start="79:21" pos:end="79:55"><block_content pos:start="79:21" pos:end="79:55">

                    <expr_stmt pos:start="79:21" pos:end="79:55"><expr pos:start="79:21" pos:end="79:54"><name pos:start="79:21" pos:end="79:26">target</name> <operator pos:start="79:28" pos:end="79:28">=</operator> <name pos:start="79:30" pos:end="79:37">dst_data</name> <operator pos:start="79:39" pos:end="79:39">+</operator> <operator pos:start="79:41" pos:end="79:41">(</operator><name pos:start="79:42" pos:end="79:42">v</name> <operator pos:start="79:44" pos:end="79:45">&gt;&gt;</operator> <name pos:start="79:47" pos:end="79:53">shift_w</name><operator pos:start="79:54" pos:end="79:54">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:52"><expr pos:start="83:13" pos:end="83:51"><call pos:start="83:13" pos:end="83:51"><name pos:start="83:13" pos:end="83:20">update16</name><argument_list pos:start="83:21" pos:end="83:51">(<argument pos:start="83:22" pos:end="83:27"><expr pos:start="83:22" pos:end="83:27"><name pos:start="83:22" pos:end="83:27">target</name></expr></argument>, <argument pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><name pos:start="83:30" pos:end="83:32">max</name></expr></argument>, <argument pos:start="83:35" pos:end="83:43"><expr pos:start="83:35" pos:end="83:43"><name pos:start="83:35" pos:end="83:43">intensity</name></expr></argument>, <argument pos:start="83:46" pos:end="83:50"><expr pos:start="83:46" pos:end="83:50"><name pos:start="83:46" pos:end="83:50">limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:16">src_data</name> <operator pos:start="87:18" pos:end="87:19">+=</operator> <name pos:start="87:21" pos:end="87:32">src_linesize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:33"><expr pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:16">dst_data</name> <operator pos:start="89:18" pos:end="89:19">+=</operator> <name pos:start="89:21" pos:end="89:32">dst_linesize</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="95:5" pos:end="95:37"><expr pos:start="95:5" pos:end="95:36"><call pos:start="95:5" pos:end="95:36"><name pos:start="95:5" pos:end="95:14">envelope16</name><argument_list pos:start="95:15" pos:end="95:36">(<argument pos:start="95:16" pos:end="95:16"><expr pos:start="95:16" pos:end="95:16"><name pos:start="95:16" pos:end="95:16">s</name></expr></argument>, <argument pos:start="95:19" pos:end="95:21"><expr pos:start="95:19" pos:end="95:21"><name pos:start="95:19" pos:end="95:21">out</name></expr></argument>, <argument pos:start="95:24" pos:end="95:28"><expr pos:start="95:24" pos:end="95:28"><name pos:start="95:24" pos:end="95:28">plane</name></expr></argument>, <argument pos:start="95:31" pos:end="95:35"><expr pos:start="95:31" pos:end="95:35"><name pos:start="95:31" pos:end="95:35">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
