<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6878.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">opt_recording_timestamp</name><parameter_list pos:start="1:35" pos:end="1:82">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">optctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">opt</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:81"><decl pos:start="1:67" pos:end="1:81"><type pos:start="1:67" pos:end="1:81"><specifier pos:start="1:67" pos:end="1:71">const</specifier> <name pos:start="1:73" pos:end="1:76">char</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:81">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">OptionsContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">o</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">optctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:71"><decl pos:start="9:5" pos:end="9:70"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:31">recording_timestamp</name> <init pos:start="9:33" pos:end="9:70">= <expr pos:start="9:35" pos:end="9:70"><call pos:start="9:35" pos:end="9:64"><name pos:start="9:35" pos:end="9:51">parse_time_or_die</name><argument_list pos:start="9:52" pos:end="9:64">(<argument pos:start="9:53" pos:end="9:55"><expr pos:start="9:53" pos:end="9:55"><name pos:start="9:53" pos:end="9:55">opt</name></expr></argument>, <argument pos:start="9:58" pos:end="9:60"><expr pos:start="9:58" pos:end="9:60"><name pos:start="9:58" pos:end="9:60">arg</name></expr></argument>, <argument pos:start="9:63" pos:end="9:63"><expr pos:start="9:63" pos:end="9:63"><literal type="number" pos:start="9:63" pos:end="9:63">0</literal></expr></argument>)</argument_list></call> <operator pos:start="9:66" pos:end="9:66">/</operator> <literal type="number" pos:start="9:68" pos:end="9:70">1E6</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:13">tm</name></name></type> <name pos:start="11:15" pos:end="11:18">time</name> <init pos:start="11:20" pos:end="11:59">= <expr pos:start="11:22" pos:end="11:59"><operator pos:start="11:22" pos:end="11:22">*</operator><call pos:start="11:23" pos:end="11:59"><name pos:start="11:23" pos:end="11:28">gmtime</name><argument_list pos:start="11:29" pos:end="11:59">(<argument pos:start="11:30" pos:end="11:58"><expr pos:start="11:30" pos:end="11:58"><operator pos:start="11:30" pos:end="11:30">(</operator><name pos:start="11:31" pos:end="11:36">time_t</name><operator pos:start="11:37" pos:end="11:37">*</operator><operator pos:start="11:38" pos:end="11:38">)</operator><operator pos:start="11:39" pos:end="11:39">&amp;</operator><name pos:start="11:40" pos:end="11:58">recording_timestamp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:63"><expr pos:start="13:5" pos:end="13:62"><call pos:start="13:5" pos:end="13:62"><name pos:start="13:5" pos:end="13:12">strftime</name><argument_list pos:start="13:13" pos:end="13:62">(<argument pos:start="13:14" pos:end="13:16"><expr pos:start="13:14" pos:end="13:16"><name pos:start="13:14" pos:end="13:16">buf</name></expr></argument>, <argument pos:start="13:19" pos:end="13:29"><expr pos:start="13:19" pos:end="13:29"><sizeof pos:start="13:19" pos:end="13:29">sizeof<argument_list pos:start="13:25" pos:end="13:29">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="13:32" pos:end="13:54"><expr pos:start="13:32" pos:end="13:54"><literal type="string" pos:start="13:32" pos:end="13:54">"creation_time=%FT%T%z"</literal></expr></argument>, <argument pos:start="13:57" pos:end="13:61"><expr pos:start="13:57" pos:end="13:61"><operator pos:start="13:57" pos:end="13:57">&amp;</operator><name pos:start="13:58" pos:end="13:61">time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:16">parse_option</name><argument_list pos:start="15:17" pos:end="15:45">(<argument pos:start="15:18" pos:end="15:18"><expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">o</name></expr></argument>, <argument pos:start="15:21" pos:end="15:30"><expr pos:start="15:21" pos:end="15:30"><literal type="string" pos:start="15:21" pos:end="15:30">"metadata"</literal></expr></argument>, <argument pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:35">buf</name></expr></argument>, <argument pos:start="15:38" pos:end="15:44"><expr pos:start="15:38" pos:end="15:44"><name pos:start="15:38" pos:end="15:44">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:56"><expr pos:start="19:5" pos:end="21:55"><call pos:start="19:5" pos:end="21:55"><name pos:start="19:5" pos:end="19:10">av_log</name><argument_list pos:start="19:11" pos:end="21:55">(<argument pos:start="19:12" pos:end="19:15"><expr pos:start="19:12" pos:end="19:15"><name pos:start="19:12" pos:end="19:15">NULL</name></expr></argument>, <argument pos:start="19:18" pos:end="19:31"><expr pos:start="19:18" pos:end="19:31"><name pos:start="19:18" pos:end="19:31">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="19:34" pos:end="21:49"><expr pos:start="19:34" pos:end="21:49"><literal type="string" pos:start="19:34" pos:end="19:86">"%s is deprecated, set the 'creation_time' metadata "</literal>

                                 <literal type="string" pos:start="21:34" pos:end="21:49">"tag instead.\n"</literal></expr></argument>, <argument pos:start="21:52" pos:end="21:54"><expr pos:start="21:52" pos:end="21:54"><name pos:start="21:52" pos:end="21:54">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
