<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8932.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">dump_exec_info</name><parameter_list pos:start="1:20" pos:end="1:58">(<parameter pos:start="1:21" pos:end="1:27"><decl pos:start="1:21" pos:end="1:27"><type pos:start="1:21" pos:end="1:27"><name pos:start="1:21" pos:end="1:24">FILE</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:27">f</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:57"><decl pos:start="1:30" pos:end="1:57"><type pos:start="1:30" pos:end="1:57"><name pos:start="1:30" pos:end="1:45">fprintf_function</name></type> <name pos:start="1:47" pos:end="1:57">cpu_fprintf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:16">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:27">target_code_size</name></decl>, <decl pos:start="5:30" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:30" pos:end="5:49">max_target_code_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:24">direct_jmp_count</name></decl>, <decl pos:start="7:27" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:43">direct_jmp2_count</name></decl>, <decl pos:start="7:46" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:46" pos:end="7:55">cross_page</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">TranslationBlock</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:20">qht_stats</name></name></type> <name pos:start="11:22" pos:end="11:24">hst</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><call pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">tb_lock</name><argument_list pos:start="15:12" pos:end="15:13">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:20">tcg_enabled</name><argument_list pos:start="19:21" pos:end="19:22">()</argument_list></call></expr>)</condition> <block pos:start="19:25" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:44"><expr pos:start="21:9" pos:end="21:43"><call pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:19">cpu_fprintf</name><argument_list pos:start="21:20" pos:end="21:43">(<argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><name pos:start="21:21" pos:end="21:21">f</name></expr></argument>, <argument pos:start="21:24" pos:end="21:42"><expr pos:start="21:24" pos:end="21:42"><literal type="string" pos:start="21:24" pos:end="21:42">"TCG not enabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:20">target_code_size</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:24">max_target_code_size</name> <operator pos:start="31:26" pos:end="31:26">=</operator> <literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:14">cross_page</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:20">direct_jmp_count</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:21">direct_jmp2_count</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="69:5">for <control pos:start="39:9" pos:end="39:47">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:42"><expr pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:41"><name pos:start="39:21" pos:end="39:27">tcg_ctx</name><operator pos:start="39:28" pos:end="39:28">.</operator><name pos:start="39:29" pos:end="39:34">tb_ctx</name><operator pos:start="39:35" pos:end="39:35">.</operator><name pos:start="39:36" pos:end="39:41">nb_tbs</name></name></expr>;</condition> <incr pos:start="39:44" pos:end="39:46"><expr pos:start="39:44" pos:end="39:46"><name pos:start="39:44" pos:end="39:44">i</name><operator pos:start="39:45" pos:end="39:46">++</operator></expr></incr>)</control> <block pos:start="39:49" pos:end="69:5">{<block_content pos:start="41:9" pos:end="67:9">

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:10">tb</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:34"><name pos:start="41:14" pos:end="41:20">tcg_ctx</name><operator pos:start="41:21" pos:end="41:21">.</operator><name pos:start="41:22" pos:end="41:27">tb_ctx</name><operator pos:start="41:28" pos:end="41:28">.</operator><name pos:start="41:29" pos:end="41:31">tbs</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:24">target_code_size</name> <operator pos:start="43:26" pos:end="43:27">+=</operator> <name pos:start="43:29" pos:end="43:36"><name pos:start="43:29" pos:end="43:30">tb</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:36">size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:44">(<expr pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:14">tb</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:20">size</name></name> <operator pos:start="45:22" pos:end="45:22">&gt;</operator> <name pos:start="45:24" pos:end="45:43">max_target_code_size</name></expr>)</condition> <block pos:start="45:46" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:44">

            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:32">max_target_code_size</name> <operator pos:start="47:34" pos:end="47:34">=</operator> <name pos:start="47:36" pos:end="47:43"><name pos:start="47:36" pos:end="47:37">tb</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:43">size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:35">(<expr pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:14">tb</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:25">page_addr</name><index pos:start="51:26" pos:end="51:28">[<expr pos:start="51:27" pos:end="51:27"><literal type="number" pos:start="51:27" pos:end="51:27">1</literal></expr>]</index></name> <operator pos:start="51:30" pos:end="51:31">!=</operator> <operator pos:start="51:33" pos:end="51:33">-</operator><literal type="number" pos:start="51:34" pos:end="51:34">1</literal></expr>)</condition> <block pos:start="51:37" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:25">

            <expr_stmt pos:start="53:13" pos:end="53:25"><expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:22">cross_page</name><operator pos:start="53:23" pos:end="53:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:67">(<expr pos:start="57:13" pos:end="57:66"><name pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:14">tb</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:32">jmp_reset_offset</name><index pos:start="57:33" pos:end="57:35">[<expr pos:start="57:34" pos:end="57:34"><literal type="number" pos:start="57:34" pos:end="57:34">0</literal></expr>]</index></name> <operator pos:start="57:37" pos:end="57:38">!=</operator> <name pos:start="57:40" pos:end="57:66">TB_JMP_RESET_OFFSET_INVALID</name></expr>)</condition> <block pos:start="57:69" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:13">

            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:28">direct_jmp_count</name><operator pos:start="59:29" pos:end="59:30">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="65:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:71">(<expr pos:start="61:17" pos:end="61:70"><name pos:start="61:17" pos:end="61:39"><name pos:start="61:17" pos:end="61:18">tb</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:36">jmp_reset_offset</name><index pos:start="61:37" pos:end="61:39">[<expr pos:start="61:38" pos:end="61:38"><literal type="number" pos:start="61:38" pos:end="61:38">1</literal></expr>]</index></name> <operator pos:start="61:41" pos:end="61:42">!=</operator> <name pos:start="61:44" pos:end="61:70">TB_JMP_RESET_OFFSET_INVALID</name></expr>)</condition> <block pos:start="61:73" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:36">

                <expr_stmt pos:start="63:17" pos:end="63:36"><expr pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:33">direct_jmp2_count</name><operator pos:start="63:34" pos:end="63:35">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="71:5" pos:end="71:36">/* XXX: avoid using doubles ? */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:50"><expr pos:start="73:5" pos:end="73:49"><call pos:start="73:5" pos:end="73:49"><name pos:start="73:5" pos:end="73:15">cpu_fprintf</name><argument_list pos:start="73:16" pos:end="73:49">(<argument pos:start="73:17" pos:end="73:17"><expr pos:start="73:17" pos:end="73:17"><name pos:start="73:17" pos:end="73:17">f</name></expr></argument>, <argument pos:start="73:20" pos:end="73:48"><expr pos:start="73:20" pos:end="73:48"><literal type="string" pos:start="73:20" pos:end="73:48">"Translation buffer state:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="79:70"><expr pos:start="75:5" pos:end="79:69"><call pos:start="75:5" pos:end="79:69"><name pos:start="75:5" pos:end="75:15">cpu_fprintf</name><argument_list pos:start="75:16" pos:end="79:69">(<argument pos:start="75:17" pos:end="75:17"><expr pos:start="75:17" pos:end="75:17"><name pos:start="75:17" pos:end="75:17">f</name></expr></argument>, <argument pos:start="75:20" pos:end="75:50"><expr pos:start="75:20" pos:end="75:50"><literal type="string" pos:start="75:20" pos:end="75:50">"gen code size       %td/%zd\n"</literal></expr></argument>,

                <argument pos:start="77:17" pos:end="77:62"><expr pos:start="77:17" pos:end="77:62"><name pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:23">tcg_ctx</name><operator pos:start="77:24" pos:end="77:24">.</operator><name pos:start="77:25" pos:end="77:36">code_gen_ptr</name></name> <operator pos:start="77:38" pos:end="77:38">-</operator> <name pos:start="77:40" pos:end="77:62"><name pos:start="77:40" pos:end="77:46">tcg_ctx</name><operator pos:start="77:47" pos:end="77:47">.</operator><name pos:start="77:48" pos:end="77:62">code_gen_buffer</name></name></expr></argument>,

                <argument pos:start="79:17" pos:end="79:68"><expr pos:start="79:17" pos:end="79:68"><name pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:23">tcg_ctx</name><operator pos:start="79:24" pos:end="79:24">.</operator><name pos:start="79:25" pos:end="79:42">code_gen_highwater</name></name> <operator pos:start="79:44" pos:end="79:44">-</operator> <name pos:start="79:46" pos:end="79:68"><name pos:start="79:46" pos:end="79:52">tcg_ctx</name><operator pos:start="79:53" pos:end="79:53">.</operator><name pos:start="79:54" pos:end="79:68">code_gen_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:70"><expr pos:start="81:5" pos:end="81:69"><call pos:start="81:5" pos:end="81:69"><name pos:start="81:5" pos:end="81:15">cpu_fprintf</name><argument_list pos:start="81:16" pos:end="81:69">(<argument pos:start="81:17" pos:end="81:17"><expr pos:start="81:17" pos:end="81:17"><name pos:start="81:17" pos:end="81:17">f</name></expr></argument>, <argument pos:start="81:20" pos:end="81:45"><expr pos:start="81:20" pos:end="81:45"><literal type="string" pos:start="81:20" pos:end="81:45">"TB count            %d\n"</literal></expr></argument>, <argument pos:start="81:48" pos:end="81:68"><expr pos:start="81:48" pos:end="81:68"><name pos:start="81:48" pos:end="81:68"><name pos:start="81:48" pos:end="81:54">tcg_ctx</name><operator pos:start="81:55" pos:end="81:55">.</operator><name pos:start="81:56" pos:end="81:61">tb_ctx</name><operator pos:start="81:62" pos:end="81:62">.</operator><name pos:start="81:63" pos:end="81:68">nb_tbs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="89:34"><expr pos:start="83:5" pos:end="89:33"><call pos:start="83:5" pos:end="89:33"><name pos:start="83:5" pos:end="83:15">cpu_fprintf</name><argument_list pos:start="83:16" pos:end="89:33">(<argument pos:start="83:17" pos:end="83:17"><expr pos:start="83:17" pos:end="83:17"><name pos:start="83:17" pos:end="83:17">f</name></expr></argument>, <argument pos:start="83:20" pos:end="83:58"><expr pos:start="83:20" pos:end="83:58"><literal type="string" pos:start="83:20" pos:end="83:58">"TB avg target size  %d max=%d bytes\n"</literal></expr></argument>,

            <argument pos:start="85:13" pos:end="87:45"><expr pos:start="85:13" pos:end="87:45"><ternary pos:start="85:13" pos:end="87:45"><condition pos:start="85:13" pos:end="85:35"><expr pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:19">tcg_ctx</name><operator pos:start="85:20" pos:end="85:20">.</operator><name pos:start="85:21" pos:end="85:26">tb_ctx</name><operator pos:start="85:27" pos:end="85:27">.</operator><name pos:start="85:28" pos:end="85:33">nb_tbs</name></name></expr> ?</condition><then pos:start="85:37" pos:end="87:41"> <expr pos:start="85:37" pos:end="87:41"><name pos:start="85:37" pos:end="85:52">target_code_size</name> <operator pos:start="85:54" pos:end="85:54">/</operator>

                    <name pos:start="87:21" pos:end="87:41"><name pos:start="87:21" pos:end="87:27">tcg_ctx</name><operator pos:start="87:28" pos:end="87:28">.</operator><name pos:start="87:29" pos:end="87:34">tb_ctx</name><operator pos:start="87:35" pos:end="87:35">.</operator><name pos:start="87:36" pos:end="87:41">nb_tbs</name></name></expr> </then><else pos:start="87:43" pos:end="87:45">: <expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">0</literal></expr></else></ternary></expr></argument>,

            <argument pos:start="89:13" pos:end="89:32"><expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:32">max_target_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="103:67"><expr pos:start="91:5" pos:end="103:66"><call pos:start="91:5" pos:end="103:66"><name pos:start="91:5" pos:end="91:15">cpu_fprintf</name><argument_list pos:start="91:16" pos:end="103:66">(<argument pos:start="91:17" pos:end="91:17"><expr pos:start="91:17" pos:end="91:17"><name pos:start="91:17" pos:end="91:17">f</name></expr></argument>, <argument pos:start="91:20" pos:end="91:77"><expr pos:start="91:20" pos:end="91:77"><literal type="string" pos:start="91:20" pos:end="91:77">"TB avg host size    %td bytes (expansion ratio: %0.1f)\n"</literal></expr></argument>,

            <argument pos:start="93:13" pos:end="97:62"><expr pos:start="93:13" pos:end="97:62"><ternary pos:start="93:13" pos:end="97:62"><condition pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:19">tcg_ctx</name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:26">tb_ctx</name><operator pos:start="93:27" pos:end="93:27">.</operator><name pos:start="93:28" pos:end="93:33">nb_tbs</name></name></expr> ?</condition><then pos:start="93:37" pos:end="97:58"> <expr pos:start="93:37" pos:end="97:58"><operator pos:start="93:37" pos:end="93:37">(</operator><name pos:start="93:38" pos:end="93:57"><name pos:start="93:38" pos:end="93:44">tcg_ctx</name><operator pos:start="93:45" pos:end="93:45">.</operator><name pos:start="93:46" pos:end="93:57">code_gen_ptr</name></name> <operator pos:start="93:59" pos:end="93:59">-</operator>

                                     <name pos:start="95:38" pos:end="95:60"><name pos:start="95:38" pos:end="95:44">tcg_ctx</name><operator pos:start="95:45" pos:end="95:45">.</operator><name pos:start="95:46" pos:end="95:60">code_gen_buffer</name></name><operator pos:start="95:61" pos:end="95:61">)</operator> <operator pos:start="95:63" pos:end="95:63">/</operator>

                                     <name pos:start="97:38" pos:end="97:58"><name pos:start="97:38" pos:end="97:44">tcg_ctx</name><operator pos:start="97:45" pos:end="97:45">.</operator><name pos:start="97:46" pos:end="97:51">tb_ctx</name><operator pos:start="97:52" pos:end="97:52">.</operator><name pos:start="97:53" pos:end="97:58">nb_tbs</name></name></expr> </then><else pos:start="97:60" pos:end="97:62">: <expr pos:start="97:62" pos:end="97:62"><literal type="number" pos:start="97:62" pos:end="97:62">0</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="99:17" pos:end="103:65"><expr pos:start="99:17" pos:end="103:65"><ternary pos:start="99:17" pos:end="103:65"><condition pos:start="99:17" pos:end="99:34"><expr pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:32">target_code_size</name></expr> ?</condition><then pos:start="99:36" pos:end="103:61"> <expr pos:start="99:36" pos:end="103:61"><operator pos:start="99:36" pos:end="99:36">(</operator><name pos:start="99:37" pos:end="99:42">double</name><operator pos:start="99:43" pos:end="99:43">)</operator> <operator pos:start="99:45" pos:end="99:45">(</operator><name pos:start="99:46" pos:end="99:65"><name pos:start="99:46" pos:end="99:52">tcg_ctx</name><operator pos:start="99:53" pos:end="99:53">.</operator><name pos:start="99:54" pos:end="99:65">code_gen_ptr</name></name> <operator pos:start="99:67" pos:end="99:67">-</operator>

                                             <name pos:start="101:46" pos:end="101:68"><name pos:start="101:46" pos:end="101:52">tcg_ctx</name><operator pos:start="101:53" pos:end="101:53">.</operator><name pos:start="101:54" pos:end="101:68">code_gen_buffer</name></name><operator pos:start="101:69" pos:end="101:69">)</operator> <operator pos:start="101:71" pos:end="101:71">/</operator>

                                             <name pos:start="103:46" pos:end="103:61">target_code_size</name></expr> </then><else pos:start="103:63" pos:end="103:65">: <expr pos:start="103:65" pos:end="103:65"><literal type="number" pos:start="103:65" pos:end="103:65">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="109:63"><expr pos:start="105:5" pos:end="109:62"><call pos:start="105:5" pos:end="109:62"><name pos:start="105:5" pos:end="105:15">cpu_fprintf</name><argument_list pos:start="105:16" pos:end="109:62">(<argument pos:start="105:17" pos:end="105:17"><expr pos:start="105:17" pos:end="105:17"><name pos:start="105:17" pos:end="105:17">f</name></expr></argument>, <argument pos:start="105:20" pos:end="105:52"><expr pos:start="105:20" pos:end="105:52"><literal type="string" pos:start="105:20" pos:end="105:52">"cross page TB count %d (%d%%)\n"</literal></expr></argument>, <argument pos:start="105:55" pos:end="105:64"><expr pos:start="105:55" pos:end="105:64"><name pos:start="105:55" pos:end="105:64">cross_page</name></expr></argument>,

            <argument pos:start="107:13" pos:end="109:61"><expr pos:start="107:13" pos:end="109:61"><ternary pos:start="107:13" pos:end="109:61"><condition pos:start="107:13" pos:end="107:35"><expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:19">tcg_ctx</name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:26">tb_ctx</name><operator pos:start="107:27" pos:end="107:27">.</operator><name pos:start="107:28" pos:end="107:33">nb_tbs</name></name></expr> ?</condition><then pos:start="107:37" pos:end="109:57"> <expr pos:start="107:37" pos:end="109:57"><operator pos:start="107:37" pos:end="107:37">(</operator><name pos:start="107:38" pos:end="107:47">cross_page</name> <operator pos:start="107:49" pos:end="107:49">*</operator> <literal type="number" pos:start="107:51" pos:end="107:53">100</literal><operator pos:start="107:54" pos:end="107:54">)</operator> <operator pos:start="107:56" pos:end="107:56">/</operator>

                                    <name pos:start="109:37" pos:end="109:57"><name pos:start="109:37" pos:end="109:43">tcg_ctx</name><operator pos:start="109:44" pos:end="109:44">.</operator><name pos:start="109:45" pos:end="109:50">tb_ctx</name><operator pos:start="109:51" pos:end="109:51">.</operator><name pos:start="109:52" pos:end="109:57">nb_tbs</name></name></expr> </then><else pos:start="109:59" pos:end="109:61">: <expr pos:start="109:61" pos:end="109:61"><literal type="number" pos:start="109:61" pos:end="109:61">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="123:51"><expr pos:start="111:5" pos:end="123:50"><call pos:start="111:5" pos:end="123:50"><name pos:start="111:5" pos:end="111:15">cpu_fprintf</name><argument_list pos:start="111:16" pos:end="123:50">(<argument pos:start="111:17" pos:end="111:17"><expr pos:start="111:17" pos:end="111:17"><name pos:start="111:17" pos:end="111:17">f</name></expr></argument>, <argument pos:start="111:20" pos:end="111:70"><expr pos:start="111:20" pos:end="111:70"><literal type="string" pos:start="111:20" pos:end="111:70">"direct jump count   %d (%d%%) (2 jumps=%d %d%%)\n"</literal></expr></argument>,

                <argument pos:start="113:17" pos:end="113:32"><expr pos:start="113:17" pos:end="113:32"><name pos:start="113:17" pos:end="113:32">direct_jmp_count</name></expr></argument>,

                <argument pos:start="115:17" pos:end="117:49"><expr pos:start="115:17" pos:end="117:49"><ternary pos:start="115:17" pos:end="117:49"><condition pos:start="115:17" pos:end="115:39"><expr pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:23">tcg_ctx</name><operator pos:start="115:24" pos:end="115:24">.</operator><name pos:start="115:25" pos:end="115:30">tb_ctx</name><operator pos:start="115:31" pos:end="115:31">.</operator><name pos:start="115:32" pos:end="115:37">nb_tbs</name></name></expr> ?</condition><then pos:start="115:41" pos:end="117:45"> <expr pos:start="115:41" pos:end="117:45"><operator pos:start="115:41" pos:end="115:41">(</operator><name pos:start="115:42" pos:end="115:57">direct_jmp_count</name> <operator pos:start="115:59" pos:end="115:59">*</operator> <literal type="number" pos:start="115:61" pos:end="115:63">100</literal><operator pos:start="115:64" pos:end="115:64">)</operator> <operator pos:start="115:66" pos:end="115:66">/</operator>

                        <name pos:start="117:25" pos:end="117:45"><name pos:start="117:25" pos:end="117:31">tcg_ctx</name><operator pos:start="117:32" pos:end="117:32">.</operator><name pos:start="117:33" pos:end="117:38">tb_ctx</name><operator pos:start="117:39" pos:end="117:39">.</operator><name pos:start="117:40" pos:end="117:45">nb_tbs</name></name></expr> </then><else pos:start="117:47" pos:end="117:49">: <expr pos:start="117:49" pos:end="117:49"><literal type="number" pos:start="117:49" pos:end="117:49">0</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="119:17" pos:end="119:33"><expr pos:start="119:17" pos:end="119:33"><name pos:start="119:17" pos:end="119:33">direct_jmp2_count</name></expr></argument>,

                <argument pos:start="121:17" pos:end="123:49"><expr pos:start="121:17" pos:end="123:49"><ternary pos:start="121:17" pos:end="123:49"><condition pos:start="121:17" pos:end="121:39"><expr pos:start="121:17" pos:end="121:37"><name pos:start="121:17" pos:end="121:37"><name pos:start="121:17" pos:end="121:23">tcg_ctx</name><operator pos:start="121:24" pos:end="121:24">.</operator><name pos:start="121:25" pos:end="121:30">tb_ctx</name><operator pos:start="121:31" pos:end="121:31">.</operator><name pos:start="121:32" pos:end="121:37">nb_tbs</name></name></expr> ?</condition><then pos:start="121:41" pos:end="123:45"> <expr pos:start="121:41" pos:end="123:45"><operator pos:start="121:41" pos:end="121:41">(</operator><name pos:start="121:42" pos:end="121:58">direct_jmp2_count</name> <operator pos:start="121:60" pos:end="121:60">*</operator> <literal type="number" pos:start="121:62" pos:end="121:64">100</literal><operator pos:start="121:65" pos:end="121:65">)</operator> <operator pos:start="121:67" pos:end="121:67">/</operator>

                        <name pos:start="123:25" pos:end="123:45"><name pos:start="123:25" pos:end="123:31">tcg_ctx</name><operator pos:start="123:32" pos:end="123:32">.</operator><name pos:start="123:33" pos:end="123:38">tb_ctx</name><operator pos:start="123:39" pos:end="123:39">.</operator><name pos:start="123:40" pos:end="123:45">nb_tbs</name></name></expr> </then><else pos:start="123:47" pos:end="123:49">: <expr pos:start="123:49" pos:end="123:49"><literal type="number" pos:start="123:49" pos:end="123:49">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:54"><expr pos:start="127:5" pos:end="127:53"><call pos:start="127:5" pos:end="127:53"><name pos:start="127:5" pos:end="127:23">qht_statistics_init</name><argument_list pos:start="127:24" pos:end="127:53">(<argument pos:start="127:25" pos:end="127:46"><expr pos:start="127:25" pos:end="127:46"><operator pos:start="127:25" pos:end="127:25">&amp;</operator><name pos:start="127:26" pos:end="127:46"><name pos:start="127:26" pos:end="127:32">tcg_ctx</name><operator pos:start="127:33" pos:end="127:33">.</operator><name pos:start="127:34" pos:end="127:39">tb_ctx</name><operator pos:start="127:40" pos:end="127:40">.</operator><name pos:start="127:41" pos:end="127:46">htable</name></name></expr></argument>, <argument pos:start="127:49" pos:end="127:52"><expr pos:start="127:49" pos:end="127:52"><operator pos:start="127:49" pos:end="127:49">&amp;</operator><name pos:start="127:50" pos:end="127:52">hst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:46"><expr pos:start="129:5" pos:end="129:45"><call pos:start="129:5" pos:end="129:45"><name pos:start="129:5" pos:end="129:24">print_qht_statistics</name><argument_list pos:start="129:25" pos:end="129:45">(<argument pos:start="129:26" pos:end="129:26"><expr pos:start="129:26" pos:end="129:26"><name pos:start="129:26" pos:end="129:26">f</name></expr></argument>, <argument pos:start="129:29" pos:end="129:39"><expr pos:start="129:29" pos:end="129:39"><name pos:start="129:29" pos:end="129:39">cpu_fprintf</name></expr></argument>, <argument pos:start="129:42" pos:end="129:44"><expr pos:start="129:42" pos:end="129:44"><name pos:start="129:42" pos:end="129:44">hst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:33"><expr pos:start="131:5" pos:end="131:32"><call pos:start="131:5" pos:end="131:32"><name pos:start="131:5" pos:end="131:26">qht_statistics_destroy</name><argument_list pos:start="131:27" pos:end="131:32">(<argument pos:start="131:28" pos:end="131:31"><expr pos:start="131:28" pos:end="131:31"><operator pos:start="131:28" pos:end="131:28">&amp;</operator><name pos:start="131:29" pos:end="131:31">hst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:38"><expr pos:start="135:5" pos:end="135:37"><call pos:start="135:5" pos:end="135:37"><name pos:start="135:5" pos:end="135:15">cpu_fprintf</name><argument_list pos:start="135:16" pos:end="135:37">(<argument pos:start="135:17" pos:end="135:17"><expr pos:start="135:17" pos:end="135:17"><name pos:start="135:17" pos:end="135:17">f</name></expr></argument>, <argument pos:start="135:20" pos:end="135:36"><expr pos:start="135:20" pos:end="135:36"><literal type="string" pos:start="135:20" pos:end="135:36">"\nStatistics:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="139:57"><expr pos:start="137:5" pos:end="139:56"><call pos:start="137:5" pos:end="139:56"><name pos:start="137:5" pos:end="137:15">cpu_fprintf</name><argument_list pos:start="137:16" pos:end="139:56">(<argument pos:start="137:17" pos:end="137:17"><expr pos:start="137:17" pos:end="137:17"><name pos:start="137:17" pos:end="137:17">f</name></expr></argument>, <argument pos:start="137:20" pos:end="137:45"><expr pos:start="137:20" pos:end="137:45"><literal type="string" pos:start="137:20" pos:end="137:45">"TB flush count      %u\n"</literal></expr></argument>,

            <argument pos:start="139:13" pos:end="139:55"><expr pos:start="139:13" pos:end="139:55"><call pos:start="139:13" pos:end="139:55"><name pos:start="139:13" pos:end="139:23">atomic_read</name><argument_list pos:start="139:24" pos:end="139:55">(<argument pos:start="139:25" pos:end="139:54"><expr pos:start="139:25" pos:end="139:54"><operator pos:start="139:25" pos:end="139:25">&amp;</operator><name pos:start="139:26" pos:end="139:54"><name pos:start="139:26" pos:end="139:32">tcg_ctx</name><operator pos:start="139:33" pos:end="139:33">.</operator><name pos:start="139:34" pos:end="139:39">tb_ctx</name><operator pos:start="139:40" pos:end="139:40">.</operator><name pos:start="139:41" pos:end="139:54">tb_flush_count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="143:53"><expr pos:start="141:5" pos:end="143:52"><call pos:start="141:5" pos:end="143:52"><name pos:start="141:5" pos:end="141:15">cpu_fprintf</name><argument_list pos:start="141:16" pos:end="143:52">(<argument pos:start="141:17" pos:end="141:17"><expr pos:start="141:17" pos:end="141:17"><name pos:start="141:17" pos:end="141:17">f</name></expr></argument>, <argument pos:start="141:20" pos:end="141:45"><expr pos:start="141:20" pos:end="141:45"><literal type="string" pos:start="141:20" pos:end="141:45">"TB invalidate count %d\n"</literal></expr></argument>,

            <argument pos:start="143:13" pos:end="143:51"><expr pos:start="143:13" pos:end="143:51"><name pos:start="143:13" pos:end="143:51"><name pos:start="143:13" pos:end="143:19">tcg_ctx</name><operator pos:start="143:20" pos:end="143:20">.</operator><name pos:start="143:21" pos:end="143:26">tb_ctx</name><operator pos:start="143:27" pos:end="143:27">.</operator><name pos:start="143:28" pos:end="143:51">tb_phys_invalidate_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:64"><expr pos:start="145:5" pos:end="145:63"><call pos:start="145:5" pos:end="145:63"><name pos:start="145:5" pos:end="145:15">cpu_fprintf</name><argument_list pos:start="145:16" pos:end="145:63">(<argument pos:start="145:17" pos:end="145:17"><expr pos:start="145:17" pos:end="145:17"><name pos:start="145:17" pos:end="145:17">f</name></expr></argument>, <argument pos:start="145:20" pos:end="145:45"><expr pos:start="145:20" pos:end="145:45"><literal type="string" pos:start="145:20" pos:end="145:45">"TLB flush count     %d\n"</literal></expr></argument>, <argument pos:start="145:48" pos:end="145:62"><expr pos:start="145:48" pos:end="145:62"><name pos:start="145:48" pos:end="145:62">tlb_flush_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:34"><expr pos:start="147:5" pos:end="147:33"><call pos:start="147:5" pos:end="147:33"><name pos:start="147:5" pos:end="147:17">tcg_dump_info</name><argument_list pos:start="147:18" pos:end="147:33">(<argument pos:start="147:19" pos:end="147:19"><expr pos:start="147:19" pos:end="147:19"><name pos:start="147:19" pos:end="147:19">f</name></expr></argument>, <argument pos:start="147:22" pos:end="147:32"><expr pos:start="147:22" pos:end="147:32"><name pos:start="147:22" pos:end="147:32">cpu_fprintf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:16"><expr pos:start="151:5" pos:end="151:15"><call pos:start="151:5" pos:end="151:15"><name pos:start="151:5" pos:end="151:13">tb_unlock</name><argument_list pos:start="151:14" pos:end="151:15">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
