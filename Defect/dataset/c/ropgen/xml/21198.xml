<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21198.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:70"><name pos:start="1:1" pos:end="1:14">build_mcfg_q35</name><argument_list pos:start="1:15" pos:end="1:70">(<argument pos:start="1:16" pos:end="1:33">GArray *table_data</argument>, <argument pos:start="1:36" pos:end="1:49">GArray *linker</argument>, <argument pos:start="1:52" pos:end="1:69">AcpiMcfgInfo *info</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:76">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">AcpiTableMcfg</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">mcfg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">sig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name> <init pos:start="9:13" pos:end="9:61">= <expr pos:start="9:15" pos:end="9:61"><sizeof pos:start="9:15" pos:end="9:27">sizeof<argument_list pos:start="9:21" pos:end="9:27">(<argument pos:start="9:22" pos:end="9:26"><expr pos:start="9:22" pos:end="9:26"><operator pos:start="9:22" pos:end="9:22">*</operator><name pos:start="9:23" pos:end="9:26">mcfg</name></expr></argument>)</argument_list></sizeof> <operator pos:start="9:29" pos:end="9:29">+</operator> <literal type="number" pos:start="9:31" pos:end="9:31">1</literal> <operator pos:start="9:33" pos:end="9:33">*</operator> <sizeof pos:start="9:35" pos:end="9:61">sizeof<argument_list pos:start="9:41" pos:end="9:61">(<argument pos:start="9:42" pos:end="9:60"><expr pos:start="9:42" pos:end="9:60"><name pos:start="9:42" pos:end="9:60"><name pos:start="9:42" pos:end="9:45">mcfg</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:57">allocation</name><index pos:start="9:58" pos:end="9:60">[<expr pos:start="9:59" pos:end="9:59"><literal type="number" pos:start="9:59" pos:end="9:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:8">mcfg</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:42"><name pos:start="13:12" pos:end="13:25">acpi_data_push</name><argument_list pos:start="13:26" pos:end="13:42">(<argument pos:start="13:27" pos:end="13:36"><expr pos:start="13:27" pos:end="13:36"><name pos:start="13:27" pos:end="13:36">table_data</name></expr></argument>, <argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:63"><expr pos:start="15:5" pos:end="15:62"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:8">mcfg</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:20">allocation</name><index pos:start="15:21" pos:end="15:23">[<expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>]</index></name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:31">address</name> <operator pos:start="15:33" pos:end="15:33">=</operator> <call pos:start="15:35" pos:end="15:62"><name pos:start="15:35" pos:end="15:45">cpu_to_le64</name><argument_list pos:start="15:46" pos:end="15:62">(<argument pos:start="15:47" pos:end="15:61"><expr pos:start="15:47" pos:end="15:61"><name pos:start="15:47" pos:end="15:61"><name pos:start="15:47" pos:end="15:50">info</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:61">mcfg_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="17:5" pos:end="17:67">/* Only a single allocation so no need to play with segments */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:8">mcfg</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:20">allocation</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>]</index></name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:35">pci_segment</name> <operator pos:start="19:37" pos:end="19:37">=</operator> <call pos:start="19:39" pos:end="19:52"><name pos:start="19:39" pos:end="19:49">cpu_to_le16</name><argument_list pos:start="19:50" pos:end="19:52">(<argument pos:start="19:51" pos:end="19:51"><expr pos:start="19:51" pos:end="19:51"><literal type="number" pos:start="19:51" pos:end="19:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:8">mcfg</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:20">allocation</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>]</index></name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:40">start_bus_number</name> <operator pos:start="21:42" pos:end="21:42">=</operator> <literal type="number" pos:start="21:44" pos:end="21:44">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:77"><expr pos:start="23:5" pos:end="23:76"><name pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:8">mcfg</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:20">allocation</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>]</index></name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:38">end_bus_number</name> <operator pos:start="23:40" pos:end="23:40">=</operator> <call pos:start="23:42" pos:end="23:76"><name pos:start="23:42" pos:end="23:55">PCIE_MMCFG_BUS</name><argument_list pos:start="23:56" pos:end="23:76">(<argument pos:start="23:57" pos:end="23:75"><expr pos:start="23:57" pos:end="23:75"><name pos:start="23:57" pos:end="23:71"><name pos:start="23:57" pos:end="23:60">info</name><operator pos:start="23:61" pos:end="23:62">-&gt;</operator><name pos:start="23:63" pos:end="23:71">mcfg_size</name></name> <operator pos:start="23:73" pos:end="23:73">-</operator> <literal type="number" pos:start="23:75" pos:end="23:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="37:7">/* MCFG is used for ECAM which can be enabled or disabled by guest.

     * To avoid table size changes (which create migration issues),

     * always create the table even if there are no allocations,

     * but set the signature to a reserved value in this case.

     * ACPI spec requires OSPMs to ignore such tables.

     */</comment>

    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:51">(<expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:12">info</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:23">mcfg_base</name></name> <operator pos:start="39:25" pos:end="39:26">==</operator> <name pos:start="39:28" pos:end="39:50">PCIE_BASE_ADDR_UNMAPPED</name></expr>)</condition> <block pos:start="39:53" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:21">

        <comment type="block" pos:start="41:9" pos:end="41:49">/* Reserved signature: ignored by OSPM */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:11">sig</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <literal type="string" pos:start="43:15" pos:end="43:20">"QEMU"</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:21">

        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:11">sig</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <literal type="string" pos:start="47:15" pos:end="47:20">"MCFG"</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:76"><expr pos:start="51:5" pos:end="51:75"><call pos:start="51:5" pos:end="51:75"><name pos:start="51:5" pos:end="51:16">build_header</name><argument_list pos:start="51:17" pos:end="51:75">(<argument pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:23"><name pos:start="51:18" pos:end="51:23">linker</name></expr></argument>, <argument pos:start="51:26" pos:end="51:35"><expr pos:start="51:26" pos:end="51:35"><name pos:start="51:26" pos:end="51:35">table_data</name></expr></argument>, <argument pos:start="51:38" pos:end="51:49"><expr pos:start="51:38" pos:end="51:49"><operator pos:start="51:38" pos:end="51:38">(</operator><name pos:start="51:39" pos:end="51:42">void</name> <operator pos:start="51:44" pos:end="51:44">*</operator><operator pos:start="51:45" pos:end="51:45">)</operator><name pos:start="51:46" pos:end="51:49">mcfg</name></expr></argument>, <argument pos:start="51:52" pos:end="51:54"><expr pos:start="51:52" pos:end="51:54"><name pos:start="51:52" pos:end="51:54">sig</name></expr></argument>, <argument pos:start="51:57" pos:end="51:59"><expr pos:start="51:57" pos:end="51:59"><name pos:start="51:57" pos:end="51:59">len</name></expr></argument>, <argument pos:start="51:62" pos:end="51:62"><expr pos:start="51:62" pos:end="51:62"><literal type="number" pos:start="51:62" pos:end="51:62">1</literal></expr></argument>, <argument pos:start="51:65" pos:end="51:68"><expr pos:start="51:65" pos:end="51:68"><name pos:start="51:65" pos:end="51:68">NULL</name></expr></argument>, <argument pos:start="51:71" pos:end="51:74"><expr pos:start="51:71" pos:end="51:74"><name pos:start="51:71" pos:end="51:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
