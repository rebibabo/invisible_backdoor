<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22255.c" pos:tabs="8"><function pos:start="1:1" pos:end="389:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:27">MPV_common_init</name><parameter_list pos:start="1:28" pos:end="1:46">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">MpegEncContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="389:1">{<block_content pos:start="5:5" pos:end="387:14">

    <decl_stmt pos:start="5:5" pos:end="5:80"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">y_size</name></decl>, <decl pos:start="5:17" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:22">c_size</name></decl>, <decl pos:start="5:25" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:31">yc_size</name></decl>, <decl pos:start="5:34" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:34" pos:end="5:34">i</name></decl>, <decl pos:start="5:37" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:49">mb_array_size</name></decl>, <decl pos:start="5:52" pos:end="5:64"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:52" pos:end="5:64">mv_table_size</name></decl>, <decl pos:start="5:67" pos:end="5:67"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:67" pos:end="5:67">x</name></decl>, <decl pos:start="5:70" pos:end="5:70"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:70" pos:end="5:70">y</name></decl>, <decl pos:start="5:73" pos:end="5:79"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:73" pos:end="5:79">threads</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:45"><if pos:start="9:5" pos:end="11:49">if<condition pos:start="9:7" pos:end="9:70">(<expr pos:start="9:8" pos:end="9:69"><name pos:start="9:8" pos:end="9:18"><name pos:start="9:8" pos:end="9:8">s</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:18">codec_id</name></name> <operator pos:start="9:20" pos:end="9:21">==</operator> <name pos:start="9:23" pos:end="9:41">CODEC_ID_MPEG2VIDEO</name> <operator pos:start="9:43" pos:end="9:44">&amp;&amp;</operator> <operator pos:start="9:46" pos:end="9:46">!</operator><name pos:start="9:47" pos:end="9:69"><name pos:start="9:47" pos:end="9:47">s</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:69">progressive_sequence</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:49"><block_content pos:start="11:9" pos:end="11:49">

        <expr_stmt pos:start="11:9" pos:end="11:49"><expr pos:start="11:9" pos:end="11:48"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:20">mb_height</name></name> <operator pos:start="11:22" pos:end="11:22">=</operator> <operator pos:start="11:24" pos:end="11:24">(</operator><name pos:start="11:25" pos:end="11:33"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">height</name></name> <operator pos:start="11:35" pos:end="11:35">+</operator> <literal type="number" pos:start="11:37" pos:end="11:38">31</literal><operator pos:start="11:39" pos:end="11:39">)</operator> <operator pos:start="11:41" pos:end="11:41">/</operator> <literal type="number" pos:start="11:43" pos:end="11:44">32</literal> <operator pos:start="11:46" pos:end="11:46">*</operator> <literal type="number" pos:start="11:48" pos:end="11:48">2</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="13:5" pos:end="15:45">else<block type="pseudo" pos:start="15:9" pos:end="15:45"><block_content pos:start="15:9" pos:end="15:45">

        <expr_stmt pos:start="15:9" pos:end="15:45"><expr pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:20">mb_height</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <operator pos:start="15:24" pos:end="15:24">(</operator><name pos:start="15:25" pos:end="15:33"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:33">height</name></name> <operator pos:start="15:35" pos:end="15:35">+</operator> <literal type="number" pos:start="15:37" pos:end="15:38">15</literal><operator pos:start="15:39" pos:end="15:39">)</operator> <operator pos:start="15:41" pos:end="15:41">/</operator> <literal type="number" pos:start="15:43" pos:end="15:44">16</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if<condition pos:start="19:7" pos:end="19:41">(<expr pos:start="19:8" pos:end="19:40"><name pos:start="19:8" pos:end="19:24"><name pos:start="19:8" pos:end="19:8">s</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:15">avctx</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:24">pix_fmt</name></name> <operator pos:start="19:26" pos:end="19:27">==</operator> <name pos:start="19:29" pos:end="19:40">PIX_FMT_NONE</name></expr>)</condition><block pos:start="19:42" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:87"><expr pos:start="21:9" pos:end="21:86"><call pos:start="21:9" pos:end="21:86"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:86">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">avctx</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:40" pos:end="21:85"><expr pos:start="21:40" pos:end="21:85"><literal type="string" pos:start="21:40" pos:end="21:85">"decoding to PIX_FMT_NONE is not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if<condition pos:start="29:7" pos:end="29:103">(<expr pos:start="29:8" pos:end="29:102"><name pos:start="29:8" pos:end="29:29"><name pos:start="29:8" pos:end="29:8">s</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:15">avctx</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:29">thread_count</name></name> <operator pos:start="29:31" pos:end="29:31">&gt;</operator> <name pos:start="29:33" pos:end="29:43">MAX_THREADS</name> <operator pos:start="29:45" pos:end="29:46">||</operator> <operator pos:start="29:48" pos:end="29:48">(</operator><name pos:start="29:49" pos:end="29:70"><name pos:start="29:49" pos:end="29:49">s</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:56">avctx</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:70">thread_count</name></name> <operator pos:start="29:72" pos:end="29:72">&gt;</operator> <name pos:start="29:74" pos:end="29:85"><name pos:start="29:74" pos:end="29:74">s</name><operator pos:start="29:75" pos:end="29:76">-&gt;</operator><name pos:start="29:77" pos:end="29:85">mb_height</name></name> <operator pos:start="29:87" pos:end="29:88">&amp;&amp;</operator> <name pos:start="29:90" pos:end="29:101"><name pos:start="29:90" pos:end="29:90">s</name><operator pos:start="29:91" pos:end="29:92">-&gt;</operator><name pos:start="29:93" pos:end="29:101">mb_height</name></name><operator pos:start="29:102" pos:end="29:102">)</operator></expr>)</condition><block pos:start="29:104" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:61"><expr pos:start="31:9" pos:end="31:60"><call pos:start="31:9" pos:end="31:60"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:60">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">avctx</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:40" pos:end="31:59"><expr pos:start="31:40" pos:end="31:59"><literal type="string" pos:start="31:40" pos:end="31:59">"too many threads\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if<condition pos:start="39:7" pos:end="39:90">(<expr pos:start="39:8" pos:end="39:89"><operator pos:start="39:8" pos:end="39:8">(</operator><name pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:16">width</name></name> <operator pos:start="39:18" pos:end="39:19">||</operator> <name pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:29">height</name></name><operator pos:start="39:30" pos:end="39:30">)</operator> <operator pos:start="39:32" pos:end="39:33">&amp;&amp;</operator> <call pos:start="39:35" pos:end="39:89"><name pos:start="39:35" pos:end="39:58">avcodec_check_dimensions</name><argument_list pos:start="39:59" pos:end="39:89">(<argument pos:start="39:60" pos:end="39:67"><expr pos:start="39:60" pos:end="39:67"><name pos:start="39:60" pos:end="39:67"><name pos:start="39:60" pos:end="39:60">s</name><operator pos:start="39:61" pos:end="39:62">-&gt;</operator><name pos:start="39:63" pos:end="39:67">avctx</name></name></expr></argument>, <argument pos:start="39:70" pos:end="39:77"><expr pos:start="39:70" pos:end="39:77"><name pos:start="39:70" pos:end="39:77"><name pos:start="39:70" pos:end="39:70">s</name><operator pos:start="39:71" pos:end="39:72">-&gt;</operator><name pos:start="39:73" pos:end="39:77">width</name></name></expr></argument>, <argument pos:start="39:80" pos:end="39:88"><expr pos:start="39:80" pos:end="39:88"><name pos:start="39:80" pos:end="39:88"><name pos:start="39:80" pos:end="39:80">s</name><operator pos:start="39:81" pos:end="39:82">-&gt;</operator><name pos:start="39:83" pos:end="39:88">height</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:16">dsputil_init</name><argument_list pos:start="45:17" pos:end="45:35">(<argument pos:start="45:18" pos:end="45:24"><expr pos:start="45:18" pos:end="45:24"><operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:24"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:24">dsp</name></name></expr></argument>, <argument pos:start="45:27" pos:end="45:34"><expr pos:start="45:27" pos:end="45:34"><name pos:start="45:27" pos:end="45:34"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:34">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><call pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:22">ff_dct_common_init</name><argument_list pos:start="47:23" pos:end="47:25">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:12">flags</name></name><operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:29"><name pos:start="51:15" pos:end="51:15">s</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:22">avctx</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:29">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:13">flags2</name></name><operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:31"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:23">avctx</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:31">flags2</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:15">mb_width</name></name>  <operator pos:start="57:18" pos:end="57:18">=</operator> <operator pos:start="57:20" pos:end="57:20">(</operator><name pos:start="57:21" pos:end="57:28"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:28">width</name></name>  <operator pos:start="57:31" pos:end="57:31">+</operator> <literal type="number" pos:start="57:33" pos:end="57:34">15</literal><operator pos:start="57:35" pos:end="57:35">)</operator> <operator pos:start="57:37" pos:end="57:37">/</operator> <literal type="number" pos:start="57:39" pos:end="57:40">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:16">mb_stride</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:30"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:30">mb_width</name></name> <operator pos:start="59:32" pos:end="59:32">+</operator> <literal type="number" pos:start="59:34" pos:end="59:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:37"><expr pos:start="61:5" pos:end="61:36"><name pos:start="61:5" pos:end="61:16"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:16">b8_stride</name></name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:30"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:30">mb_width</name></name><operator pos:start="61:31" pos:end="61:31">*</operator><literal type="number" pos:start="61:32" pos:end="61:34">2</literal> <operator pos:start="61:34" pos:end="61:34">+</operator> <literal type="number" pos:start="61:36" pos:end="61:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:16">b4_stride</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:30"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:30">mb_width</name></name><operator pos:start="63:31" pos:end="63:31">*</operator><literal type="number" pos:start="63:32" pos:end="63:34">4</literal> <operator pos:start="63:34" pos:end="63:34">+</operator> <literal type="number" pos:start="63:36" pos:end="63:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:47"><expr pos:start="65:5" pos:end="65:46"><name pos:start="65:5" pos:end="65:17">mb_array_size</name><operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:31"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:31">mb_height</name></name> <operator pos:start="65:33" pos:end="65:33">*</operator> <name pos:start="65:35" pos:end="65:46"><name pos:start="65:35" pos:end="65:35">s</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:46">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:55"><expr pos:start="67:5" pos:end="67:54"><name pos:start="67:5" pos:end="67:17">mv_table_size</name><operator pos:start="67:18" pos:end="67:18">=</operator> <operator pos:start="67:20" pos:end="67:20">(</operator><name pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:32">mb_height</name></name><operator pos:start="67:33" pos:end="67:33">+</operator><literal type="number" pos:start="67:34" pos:end="67:34">2</literal><operator pos:start="67:35" pos:end="67:35">)</operator> <operator pos:start="67:37" pos:end="67:37">*</operator> <name pos:start="67:39" pos:end="67:50"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:50">mb_stride</name></name> <operator pos:start="67:52" pos:end="67:52">+</operator> <literal type="number" pos:start="67:54" pos:end="67:54">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:27">/* set chroma shifts */</comment>

    <expr_stmt pos:start="73:5" pos:end="75:75"><expr pos:start="73:5" pos:end="75:74"><call pos:start="73:5" pos:end="75:74"><name pos:start="73:5" pos:end="73:33">avcodec_get_chroma_sub_sample</name><argument_list pos:start="73:34" pos:end="75:74">(<argument pos:start="73:35" pos:end="73:51"><expr pos:start="73:35" pos:end="73:51"><name pos:start="73:35" pos:end="73:51"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:42">avctx</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:51">pix_fmt</name></name></expr></argument>,<argument pos:start="73:53" pos:end="73:72"><expr pos:start="73:53" pos:end="73:72"><operator pos:start="73:53" pos:end="73:53">&amp;</operator><operator pos:start="73:54" pos:end="73:54">(</operator><name pos:start="73:55" pos:end="73:71"><name pos:start="73:55" pos:end="73:55">s</name><operator pos:start="73:56" pos:end="73:57">-&gt;</operator><name pos:start="73:58" pos:end="73:71">chroma_x_shift</name></name><operator pos:start="73:72" pos:end="73:72">)</operator></expr></argument>,

                                                    <argument pos:start="75:53" pos:end="75:72"><expr pos:start="75:53" pos:end="75:72"><operator pos:start="75:53" pos:end="75:53">&amp;</operator><operator pos:start="75:54" pos:end="75:54">(</operator><name pos:start="75:55" pos:end="75:71"><name pos:start="75:55" pos:end="75:55">s</name><operator pos:start="75:56" pos:end="75:57">-&gt;</operator><name pos:start="75:58" pos:end="75:71">chroma_y_shift</name></name><operator pos:start="75:72" pos:end="75:72">)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:76">/* set default edge pos, will be overriden in decode_header if needed */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:17">h_edge_pos</name></name><operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:30"><name pos:start="81:20" pos:end="81:20">s</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:30">mb_width</name></name><operator pos:start="81:31" pos:end="81:31">*</operator><literal type="number" pos:start="81:32" pos:end="81:33">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:35"><expr pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:17"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:17">v_edge_pos</name></name><operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:31"><name pos:start="83:20" pos:end="83:20">s</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:31">mb_height</name></name><operator pos:start="83:32" pos:end="83:32">*</operator><literal type="number" pos:start="83:33" pos:end="83:34">16</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:43"><expr pos:start="87:5" pos:end="87:42"><name pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:13">mb_num</name></name> <operator pos:start="87:15" pos:end="87:15">=</operator> <name pos:start="87:17" pos:end="87:27"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:27">mb_width</name></name> <operator pos:start="87:29" pos:end="87:29">*</operator> <name pos:start="87:31" pos:end="87:42"><name pos:start="87:31" pos:end="87:31">s</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:42">mb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="97:35"><expr pos:start="91:5" pos:end="97:34"><name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:17">block_wrap</name><index pos:start="91:18" pos:end="91:20">[<expr pos:start="91:19" pos:end="91:19"><literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>]</index></name><operator pos:start="91:21" pos:end="91:21">=</operator>

    <name pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:17">block_wrap</name><index pos:start="93:18" pos:end="93:20">[<expr pos:start="93:19" pos:end="93:19"><literal type="number" pos:start="93:19" pos:end="93:19">1</literal></expr>]</index></name><operator pos:start="93:21" pos:end="93:21">=</operator>

    <name pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:17">block_wrap</name><index pos:start="95:18" pos:end="95:20">[<expr pos:start="95:19" pos:end="95:19"><literal type="number" pos:start="95:19" pos:end="95:19">2</literal></expr>]</index></name><operator pos:start="95:21" pos:end="95:21">=</operator>

    <name pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:17">block_wrap</name><index pos:start="97:18" pos:end="97:20">[<expr pos:start="97:19" pos:end="97:19"><literal type="number" pos:start="97:19" pos:end="97:19">3</literal></expr>]</index></name><operator pos:start="97:21" pos:end="97:21">=</operator> <name pos:start="97:23" pos:end="97:34"><name pos:start="97:23" pos:end="97:23">s</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:34">b8_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="101:35"><expr pos:start="99:5" pos:end="101:34"><name pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:17">block_wrap</name><index pos:start="99:18" pos:end="99:20">[<expr pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">4</literal></expr>]</index></name><operator pos:start="99:21" pos:end="99:21">=</operator>

    <name pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:17">block_wrap</name><index pos:start="101:18" pos:end="101:20">[<expr pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">5</literal></expr>]</index></name><operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:23">s</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:34">mb_stride</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:51"><expr pos:start="105:5" pos:end="105:50"><name pos:start="105:5" pos:end="105:10">y_size</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <name pos:start="105:14" pos:end="105:25"><name pos:start="105:14" pos:end="105:14">s</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:25">b8_stride</name></name> <operator pos:start="105:27" pos:end="105:27">*</operator> <operator pos:start="105:29" pos:end="105:29">(</operator><literal type="number" pos:start="105:30" pos:end="105:30">2</literal> <operator pos:start="105:32" pos:end="105:32">*</operator> <name pos:start="105:34" pos:end="105:45"><name pos:start="105:34" pos:end="105:34">s</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:45">mb_height</name></name> <operator pos:start="105:47" pos:end="105:47">+</operator> <literal type="number" pos:start="105:49" pos:end="105:49">1</literal><operator pos:start="105:50" pos:end="105:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:47"><expr pos:start="107:5" pos:end="107:46"><name pos:start="107:5" pos:end="107:10">c_size</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <name pos:start="107:14" pos:end="107:25"><name pos:start="107:14" pos:end="107:14">s</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:25">mb_stride</name></name> <operator pos:start="107:27" pos:end="107:27">*</operator> <operator pos:start="107:29" pos:end="107:29">(</operator><name pos:start="107:30" pos:end="107:41"><name pos:start="107:30" pos:end="107:30">s</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:41">mb_height</name></name> <operator pos:start="107:43" pos:end="107:43">+</operator> <literal type="number" pos:start="107:45" pos:end="107:45">1</literal><operator pos:start="107:46" pos:end="107:46">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:34"><expr pos:start="109:5" pos:end="109:33"><name pos:start="109:5" pos:end="109:11">yc_size</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <name pos:start="109:15" pos:end="109:20">y_size</name> <operator pos:start="109:22" pos:end="109:22">+</operator> <literal type="number" pos:start="109:24" pos:end="109:24">2</literal> <operator pos:start="109:26" pos:end="109:26">*</operator> <name pos:start="109:28" pos:end="109:33">c_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:38">/* convert fourcc to upper case */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:52"><expr pos:start="115:5" pos:end="115:51"><name pos:start="115:5" pos:end="115:16"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:16">codec_tag</name></name> <operator pos:start="115:18" pos:end="115:18">=</operator> <call pos:start="115:20" pos:end="115:51"><name pos:start="115:20" pos:end="115:30">ff_toupper4</name><argument_list pos:start="115:31" pos:end="115:51">(<argument pos:start="115:32" pos:end="115:50"><expr pos:start="115:32" pos:end="115:50"><name pos:start="115:32" pos:end="115:50"><name pos:start="115:32" pos:end="115:32">s</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:39">avctx</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:50">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:66"><expr pos:start="119:5" pos:end="119:65"><name pos:start="119:5" pos:end="119:23"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:23">stream_codec_tag</name></name> <operator pos:start="119:25" pos:end="119:25">=</operator> <call pos:start="119:27" pos:end="119:65"><name pos:start="119:27" pos:end="119:37">ff_toupper4</name><argument_list pos:start="119:38" pos:end="119:65">(<argument pos:start="119:39" pos:end="119:64"><expr pos:start="119:39" pos:end="119:64"><name pos:start="119:39" pos:end="119:64"><name pos:start="119:39" pos:end="119:39">s</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:46">avctx</name><operator pos:start="119:47" pos:end="119:48">-&gt;</operator><name pos:start="119:49" pos:end="119:64">stream_codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:57"><expr pos:start="123:5" pos:end="123:56"><name pos:start="123:5" pos:end="123:25"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:12">avctx</name><operator pos:start="123:13" pos:end="123:14">-&gt;</operator><name pos:start="123:15" pos:end="123:25">coded_frame</name></name><operator pos:start="123:26" pos:end="123:26">=</operator> <operator pos:start="123:28" pos:end="123:28">(</operator><name pos:start="123:29" pos:end="123:35">AVFrame</name><operator pos:start="123:36" pos:end="123:36">*</operator><operator pos:start="123:37" pos:end="123:37">)</operator><operator pos:start="123:38" pos:end="123:38">&amp;</operator><name pos:start="123:39" pos:end="123:56"><name pos:start="123:39" pos:end="123:39">s</name><operator pos:start="123:40" pos:end="123:41">-&gt;</operator><name pos:start="123:42" pos:end="123:56">current_picture</name></name></expr>;</expr_stmt>



    <macro pos:start="127:5" pos:end="127:80"><name pos:start="127:5" pos:end="127:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="127:22" pos:end="127:80">(<argument pos:start="127:23" pos:end="127:30">s-&gt;avctx</argument>, <argument pos:start="127:33" pos:end="127:46">s-&gt;mb_index2xy</argument>, <argument pos:start="127:49" pos:end="127:73">(s-&gt;mb_num+<literal type="number" pos:start="127:60" pos:end="127:60">1</literal>)*sizeof(int)</argument>, <argument pos:start="127:76" pos:end="127:79">fail</argument>)</argument_list></macro> <comment type="line" pos:start="127:82" pos:end="127:129">//error ressilience code looks cleaner with this</comment>

    <for pos:start="129:5" pos:end="137:5">for<control pos:start="129:8" pos:end="129:33">(<init pos:start="129:9" pos:end="129:12"><expr pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:9">y</name><operator pos:start="129:10" pos:end="129:10">=</operator><literal type="number" pos:start="129:11" pos:end="129:11">0</literal></expr>;</init> <condition pos:start="129:14" pos:end="129:28"><expr pos:start="129:14" pos:end="129:27"><name pos:start="129:14" pos:end="129:14">y</name><operator pos:start="129:15" pos:end="129:15">&lt;</operator><name pos:start="129:16" pos:end="129:27"><name pos:start="129:16" pos:end="129:16">s</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:27">mb_height</name></name></expr>;</condition> <incr pos:start="129:30" pos:end="129:32"><expr pos:start="129:30" pos:end="129:32"><name pos:start="129:30" pos:end="129:30">y</name><operator pos:start="129:31" pos:end="129:32">++</operator></expr></incr>)</control><block pos:start="129:34" pos:end="137:5">{<block_content pos:start="131:9" pos:end="135:9">

        <for pos:start="131:9" pos:end="135:9">for<control pos:start="131:12" pos:end="131:36">(<init pos:start="131:13" pos:end="131:16"><expr pos:start="131:13" pos:end="131:15"><name pos:start="131:13" pos:end="131:13">x</name><operator pos:start="131:14" pos:end="131:14">=</operator><literal type="number" pos:start="131:15" pos:end="131:15">0</literal></expr>;</init> <condition pos:start="131:18" pos:end="131:31"><expr pos:start="131:18" pos:end="131:30"><name pos:start="131:18" pos:end="131:18">x</name><operator pos:start="131:19" pos:end="131:19">&lt;</operator><name pos:start="131:20" pos:end="131:30"><name pos:start="131:20" pos:end="131:20">s</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:30">mb_width</name></name></expr>;</condition> <incr pos:start="131:33" pos:end="131:35"><expr pos:start="131:33" pos:end="131:35"><name pos:start="131:33" pos:end="131:33">x</name><operator pos:start="131:34" pos:end="131:35">++</operator></expr></incr>)</control><block pos:start="131:37" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:69">

            <expr_stmt pos:start="133:13" pos:end="133:69"><expr pos:start="133:13" pos:end="133:68"><name pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:26">mb_index2xy</name><index pos:start="133:27" pos:end="133:47">[ <expr pos:start="133:29" pos:end="133:45"><name pos:start="133:29" pos:end="133:29">x</name> <operator pos:start="133:31" pos:end="133:31">+</operator> <name pos:start="133:33" pos:end="133:33">y</name><operator pos:start="133:34" pos:end="133:34">*</operator><name pos:start="133:35" pos:end="133:45"><name pos:start="133:35" pos:end="133:35">s</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:45">mb_width</name></name></expr> ]</index></name> <operator pos:start="133:49" pos:end="133:49">=</operator> <name pos:start="133:51" pos:end="133:51">x</name> <operator pos:start="133:53" pos:end="133:53">+</operator> <name pos:start="133:55" pos:end="133:55">y</name><operator pos:start="133:56" pos:end="133:56">*</operator><name pos:start="133:57" pos:end="133:68"><name pos:start="133:57" pos:end="133:57">s</name><operator pos:start="133:58" pos:end="133:59">-&gt;</operator><name pos:start="133:60" pos:end="133:68">mb_stride</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="139:5" pos:end="139:93"><expr pos:start="139:5" pos:end="139:92"><name pos:start="139:5" pos:end="139:46"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:18">mb_index2xy</name><index pos:start="139:19" pos:end="139:46">[ <expr pos:start="139:21" pos:end="139:44"><name pos:start="139:21" pos:end="139:32"><name pos:start="139:21" pos:end="139:21">s</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:32">mb_height</name></name><operator pos:start="139:33" pos:end="139:33">*</operator><name pos:start="139:34" pos:end="139:44"><name pos:start="139:34" pos:end="139:34">s</name><operator pos:start="139:35" pos:end="139:36">-&gt;</operator><name pos:start="139:37" pos:end="139:44">mb_width</name></name></expr> ]</index></name> <operator pos:start="139:48" pos:end="139:48">=</operator> <operator pos:start="139:50" pos:end="139:50">(</operator><name pos:start="139:51" pos:end="139:62"><name pos:start="139:51" pos:end="139:51">s</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:62">mb_height</name></name><operator pos:start="139:63" pos:end="139:63">-</operator><literal type="number" pos:start="139:64" pos:end="139:64">1</literal><operator pos:start="139:65" pos:end="139:65">)</operator><operator pos:start="139:66" pos:end="139:66">*</operator><name pos:start="139:67" pos:end="139:78"><name pos:start="139:67" pos:end="139:67">s</name><operator pos:start="139:68" pos:end="139:69">-&gt;</operator><name pos:start="139:70" pos:end="139:78">mb_stride</name></name> <operator pos:start="139:80" pos:end="139:80">+</operator> <name pos:start="139:82" pos:end="139:92"><name pos:start="139:82" pos:end="139:82">s</name><operator pos:start="139:83" pos:end="139:84">-&gt;</operator><name pos:start="139:85" pos:end="139:92">mb_width</name></name></expr>;</expr_stmt> <comment type="line" pos:start="139:95" pos:end="139:116">//FIXME really needed?</comment>



    <if_stmt pos:start="143:5" pos:end="213:5"><if pos:start="143:5" pos:end="213:5">if <condition pos:start="143:8" pos:end="143:20">(<expr pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:19">encoding</name></name></expr>)</condition> <block pos:start="143:22" pos:end="213:5">{<block_content pos:start="147:9" pos:end="211:9">

        <comment type="block" pos:start="145:9" pos:end="145:32">/* Allocate MV tables */</comment>

        <macro pos:start="147:9" pos:end="147:110"><name pos:start="147:9" pos:end="147:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="147:26" pos:end="147:110">(<argument pos:start="147:27" pos:end="147:34">s-&gt;avctx</argument>, <argument pos:start="147:37" pos:end="147:54">s-&gt;p_mv_table_base</argument>            , <argument pos:start="147:69" pos:end="147:103">mv_table_size * <literal type="number" pos:start="147:85" pos:end="147:85">2</literal> * sizeof(int16_t)</argument>, <argument pos:start="147:106" pos:end="147:109">fail</argument>)</argument_list></macro>

        <macro pos:start="149:9" pos:end="149:110"><name pos:start="149:9" pos:end="149:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="149:26" pos:end="149:110">(<argument pos:start="149:27" pos:end="149:34">s-&gt;avctx</argument>, <argument pos:start="149:37" pos:end="149:59">s-&gt;b_forw_mv_table_base</argument>       , <argument pos:start="149:69" pos:end="149:103">mv_table_size * <literal type="number" pos:start="149:85" pos:end="149:85">2</literal> * sizeof(int16_t)</argument>, <argument pos:start="149:106" pos:end="149:109">fail</argument>)</argument_list></macro>

        <macro pos:start="151:9" pos:end="151:110"><name pos:start="151:9" pos:end="151:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="151:26" pos:end="151:110">(<argument pos:start="151:27" pos:end="151:34">s-&gt;avctx</argument>, <argument pos:start="151:37" pos:end="151:59">s-&gt;b_back_mv_table_base</argument>       , <argument pos:start="151:69" pos:end="151:103">mv_table_size * <literal type="number" pos:start="151:85" pos:end="151:85">2</literal> * sizeof(int16_t)</argument>, <argument pos:start="151:106" pos:end="151:109">fail</argument>)</argument_list></macro>

        <macro pos:start="153:9" pos:end="153:110"><name pos:start="153:9" pos:end="153:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="153:26" pos:end="153:110">(<argument pos:start="153:27" pos:end="153:34">s-&gt;avctx</argument>, <argument pos:start="153:37" pos:end="153:65">s-&gt;b_bidir_forw_mv_table_base</argument> , <argument pos:start="153:69" pos:end="153:103">mv_table_size * <literal type="number" pos:start="153:85" pos:end="153:85">2</literal> * sizeof(int16_t)</argument>, <argument pos:start="153:106" pos:end="153:109">fail</argument>)</argument_list></macro>

        <macro pos:start="155:9" pos:end="155:110"><name pos:start="155:9" pos:end="155:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="155:26" pos:end="155:110">(<argument pos:start="155:27" pos:end="155:34">s-&gt;avctx</argument>, <argument pos:start="155:37" pos:end="155:65">s-&gt;b_bidir_back_mv_table_base</argument> , <argument pos:start="155:69" pos:end="155:103">mv_table_size * <literal type="number" pos:start="155:85" pos:end="155:85">2</literal> * sizeof(int16_t)</argument>, <argument pos:start="155:106" pos:end="155:109">fail</argument>)</argument_list></macro>

        <macro pos:start="157:9" pos:end="157:110"><name pos:start="157:9" pos:end="157:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="157:26" pos:end="157:110">(<argument pos:start="157:27" pos:end="157:34">s-&gt;avctx</argument>, <argument pos:start="157:37" pos:end="157:61">s-&gt;b_direct_mv_table_base</argument>     , <argument pos:start="157:69" pos:end="157:103">mv_table_size * <literal type="number" pos:start="157:85" pos:end="157:85">2</literal> * sizeof(int16_t)</argument>, <argument pos:start="157:106" pos:end="157:109">fail</argument>)</argument_list></macro>

        <expr_stmt pos:start="159:9" pos:end="159:83"><expr pos:start="159:9" pos:end="159:82"><name pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:21">p_mv_table</name></name>           <operator pos:start="159:33" pos:end="159:33">=</operator> <name pos:start="159:35" pos:end="159:52"><name pos:start="159:35" pos:end="159:35">s</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:52">p_mv_table_base</name></name>            <operator pos:start="159:65" pos:end="159:65">+</operator> <name pos:start="159:67" pos:end="159:78"><name pos:start="159:67" pos:end="159:67">s</name><operator pos:start="159:68" pos:end="159:69">-&gt;</operator><name pos:start="159:70" pos:end="159:78">mb_stride</name></name> <operator pos:start="159:80" pos:end="159:80">+</operator> <literal type="number" pos:start="159:82" pos:end="159:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:83"><expr pos:start="161:9" pos:end="161:82"><name pos:start="161:9" pos:end="161:26"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:26">b_forw_mv_table</name></name>      <operator pos:start="161:33" pos:end="161:33">=</operator> <name pos:start="161:35" pos:end="161:57"><name pos:start="161:35" pos:end="161:35">s</name><operator pos:start="161:36" pos:end="161:37">-&gt;</operator><name pos:start="161:38" pos:end="161:57">b_forw_mv_table_base</name></name>       <operator pos:start="161:65" pos:end="161:65">+</operator> <name pos:start="161:67" pos:end="161:78"><name pos:start="161:67" pos:end="161:67">s</name><operator pos:start="161:68" pos:end="161:69">-&gt;</operator><name pos:start="161:70" pos:end="161:78">mb_stride</name></name> <operator pos:start="161:80" pos:end="161:80">+</operator> <literal type="number" pos:start="161:82" pos:end="161:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:83"><expr pos:start="163:9" pos:end="163:82"><name pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:26">b_back_mv_table</name></name>      <operator pos:start="163:33" pos:end="163:33">=</operator> <name pos:start="163:35" pos:end="163:57"><name pos:start="163:35" pos:end="163:35">s</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:57">b_back_mv_table_base</name></name>       <operator pos:start="163:65" pos:end="163:65">+</operator> <name pos:start="163:67" pos:end="163:78"><name pos:start="163:67" pos:end="163:67">s</name><operator pos:start="163:68" pos:end="163:69">-&gt;</operator><name pos:start="163:70" pos:end="163:78">mb_stride</name></name> <operator pos:start="163:80" pos:end="163:80">+</operator> <literal type="number" pos:start="163:82" pos:end="163:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:83"><expr pos:start="165:9" pos:end="165:82"><name pos:start="165:9" pos:end="165:32"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:32">b_bidir_forw_mv_table</name></name><operator pos:start="165:33" pos:end="165:33">=</operator> <name pos:start="165:35" pos:end="165:63"><name pos:start="165:35" pos:end="165:35">s</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:63">b_bidir_forw_mv_table_base</name></name> <operator pos:start="165:65" pos:end="165:65">+</operator> <name pos:start="165:67" pos:end="165:78"><name pos:start="165:67" pos:end="165:67">s</name><operator pos:start="165:68" pos:end="165:69">-&gt;</operator><name pos:start="165:70" pos:end="165:78">mb_stride</name></name> <operator pos:start="165:80" pos:end="165:80">+</operator> <literal type="number" pos:start="165:82" pos:end="165:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:83"><expr pos:start="167:9" pos:end="167:82"><name pos:start="167:9" pos:end="167:32"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:32">b_bidir_back_mv_table</name></name><operator pos:start="167:33" pos:end="167:33">=</operator> <name pos:start="167:35" pos:end="167:63"><name pos:start="167:35" pos:end="167:35">s</name><operator pos:start="167:36" pos:end="167:37">-&gt;</operator><name pos:start="167:38" pos:end="167:63">b_bidir_back_mv_table_base</name></name> <operator pos:start="167:65" pos:end="167:65">+</operator> <name pos:start="167:67" pos:end="167:78"><name pos:start="167:67" pos:end="167:67">s</name><operator pos:start="167:68" pos:end="167:69">-&gt;</operator><name pos:start="167:70" pos:end="167:78">mb_stride</name></name> <operator pos:start="167:80" pos:end="167:80">+</operator> <literal type="number" pos:start="167:82" pos:end="167:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:83"><expr pos:start="169:9" pos:end="169:82"><name pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:28">b_direct_mv_table</name></name>    <operator pos:start="169:33" pos:end="169:33">=</operator> <name pos:start="169:35" pos:end="169:59"><name pos:start="169:35" pos:end="169:35">s</name><operator pos:start="169:36" pos:end="169:37">-&gt;</operator><name pos:start="169:38" pos:end="169:59">b_direct_mv_table_base</name></name>     <operator pos:start="169:65" pos:end="169:65">+</operator> <name pos:start="169:67" pos:end="169:78"><name pos:start="169:67" pos:end="169:67">s</name><operator pos:start="169:68" pos:end="169:69">-&gt;</operator><name pos:start="169:70" pos:end="169:78">mb_stride</name></name> <operator pos:start="169:80" pos:end="169:80">+</operator> <literal type="number" pos:start="169:82" pos:end="169:82">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="173:9" pos:end="177:9"><if pos:start="173:9" pos:end="177:9">if<condition pos:start="173:11" pos:end="173:30">(<expr pos:start="173:12" pos:end="173:29"><name pos:start="173:12" pos:end="173:29"><name pos:start="173:12" pos:end="173:12">s</name><operator pos:start="173:13" pos:end="173:14">-&gt;</operator><name pos:start="173:15" pos:end="173:29">msmpeg4_version</name></name></expr>)</condition><block pos:start="173:31" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:104">

            <expr_stmt pos:start="175:13" pos:end="175:104"><expr pos:start="175:13" pos:end="175:103"><call pos:start="175:13" pos:end="175:103"><name pos:start="175:13" pos:end="175:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="175:30" pos:end="175:103">(<argument pos:start="175:31" pos:end="175:38"><expr pos:start="175:31" pos:end="175:38"><name pos:start="175:31" pos:end="175:38"><name pos:start="175:31" pos:end="175:31">s</name><operator pos:start="175:32" pos:end="175:33">-&gt;</operator><name pos:start="175:34" pos:end="175:38">avctx</name></name></expr></argument>, <argument pos:start="175:41" pos:end="175:51"><expr pos:start="175:41" pos:end="175:51"><name pos:start="175:41" pos:end="175:51"><name pos:start="175:41" pos:end="175:41">s</name><operator pos:start="175:42" pos:end="175:43">-&gt;</operator><name pos:start="175:44" pos:end="175:51">ac_stats</name></name></expr></argument>, <argument pos:start="175:54" pos:end="175:96"><expr pos:start="175:54" pos:end="175:96"><literal type="number" pos:start="175:54" pos:end="175:54">2</literal><operator pos:start="175:55" pos:end="175:55">*</operator><literal type="number" pos:start="175:56" pos:end="175:56">2</literal><operator pos:start="175:57" pos:end="175:57">*</operator><operator pos:start="175:58" pos:end="175:58">(</operator><name pos:start="175:59" pos:end="175:67">MAX_LEVEL</name><operator pos:start="175:68" pos:end="175:68">+</operator><literal type="number" pos:start="175:69" pos:end="175:69">1</literal><operator pos:start="175:70" pos:end="175:70">)</operator><operator pos:start="175:71" pos:end="175:71">*</operator><operator pos:start="175:72" pos:end="175:72">(</operator><name pos:start="175:73" pos:end="175:79">MAX_RUN</name><operator pos:start="175:80" pos:end="175:80">+</operator><literal type="number" pos:start="175:81" pos:end="175:81">1</literal><operator pos:start="175:82" pos:end="175:82">)</operator><operator pos:start="175:83" pos:end="175:83">*</operator><literal type="number" pos:start="175:84" pos:end="175:84">2</literal><operator pos:start="175:85" pos:end="175:85">*</operator><sizeof pos:start="175:86" pos:end="175:96">sizeof<argument_list pos:start="175:92" pos:end="175:96">(<argument pos:start="175:93" pos:end="175:95"><expr pos:start="175:93" pos:end="175:95"><name pos:start="175:93" pos:end="175:95">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="175:99" pos:end="175:102"><expr pos:start="175:99" pos:end="175:102"><name pos:start="175:99" pos:end="175:102">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:68"><expr pos:start="179:9" pos:end="179:67"><call pos:start="179:9" pos:end="179:67"><name pos:start="179:9" pos:end="179:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="179:26" pos:end="179:67">(<argument pos:start="179:27" pos:end="179:34"><expr pos:start="179:27" pos:end="179:34"><name pos:start="179:27" pos:end="179:34"><name pos:start="179:27" pos:end="179:27">s</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:34">avctx</name></name></expr></argument>, <argument pos:start="179:37" pos:end="179:55"><expr pos:start="179:37" pos:end="179:55"><name pos:start="179:37" pos:end="179:55"><name pos:start="179:37" pos:end="179:37">s</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:44">avctx</name><operator pos:start="179:45" pos:end="179:46">-&gt;</operator><name pos:start="179:47" pos:end="179:55">stats_out</name></name></expr></argument>, <argument pos:start="179:58" pos:end="179:60"><expr pos:start="179:58" pos:end="179:60"><literal type="number" pos:start="179:58" pos:end="179:60">256</literal></expr></argument>, <argument pos:start="179:63" pos:end="179:66"><expr pos:start="179:63" pos:end="179:66"><name pos:start="179:63" pos:end="179:66">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="183:9" pos:end="183:36">/* Allocate MB type table */</comment>

        <macro pos:start="185:9" pos:end="185:89"><name pos:start="185:9" pos:end="185:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="185:26" pos:end="185:89">(<argument pos:start="185:27" pos:end="185:34">s-&gt;avctx</argument>, <argument pos:start="185:37" pos:end="185:46">s-&gt;mb_type</argument>  , <argument pos:start="185:51" pos:end="185:82">mb_array_size * sizeof(uint16_t)</argument>, <argument pos:start="185:85" pos:end="185:88">fail</argument>)</argument_list></macro> <comment type="line" pos:start="185:91" pos:end="185:111">//needed for encoding</comment>



        <macro pos:start="189:9" pos:end="189:87"><name pos:start="189:9" pos:end="189:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="189:26" pos:end="189:87">(<argument pos:start="189:27" pos:end="189:34">s-&gt;avctx</argument>, <argument pos:start="189:37" pos:end="189:51">s-&gt;lambda_table</argument>, <argument pos:start="189:54" pos:end="189:80">mb_array_size * sizeof(int)</argument>, <argument pos:start="189:83" pos:end="189:86">fail</argument>)</argument_list></macro>



        <macro pos:start="193:9" pos:end="193:85"><name pos:start="193:9" pos:end="193:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="193:26" pos:end="193:85">(<argument pos:start="193:27" pos:end="193:34">s-&gt;avctx</argument>, <argument pos:start="193:37" pos:end="193:53">s-&gt;q_intra_matrix</argument>  , <argument pos:start="193:58" pos:end="193:78"><literal type="number" pos:start="193:58" pos:end="193:59">64</literal>*<literal type="number" pos:start="193:61" pos:end="193:62">32</literal>   * sizeof(int)</argument>, <argument pos:start="193:81" pos:end="193:84">fail</argument>)</argument_list></macro>

        <macro pos:start="195:9" pos:end="195:85"><name pos:start="195:9" pos:end="195:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="195:26" pos:end="195:85">(<argument pos:start="195:27" pos:end="195:34">s-&gt;avctx</argument>, <argument pos:start="195:37" pos:end="195:53">s-&gt;q_inter_matrix</argument>  , <argument pos:start="195:58" pos:end="195:78"><literal type="number" pos:start="195:58" pos:end="195:59">64</literal>*<literal type="number" pos:start="195:61" pos:end="195:62">32</literal>   * sizeof(int)</argument>, <argument pos:start="195:81" pos:end="195:84">fail</argument>)</argument_list></macro>

        <macro pos:start="197:9" pos:end="197:90"><name pos:start="197:9" pos:end="197:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="197:26" pos:end="197:90">(<argument pos:start="197:27" pos:end="197:34">s-&gt;avctx</argument>, <argument pos:start="197:37" pos:end="197:55">s-&gt;q_intra_matrix16</argument>, <argument pos:start="197:58" pos:end="197:83"><literal type="number" pos:start="197:58" pos:end="197:59">64</literal>*<literal type="number" pos:start="197:61" pos:end="197:62">32</literal>*<literal type="number" pos:start="197:64" pos:end="197:64">2</literal> * sizeof(uint16_t)</argument>, <argument pos:start="197:86" pos:end="197:89">fail</argument>)</argument_list></macro>

        <macro pos:start="199:9" pos:end="199:90"><name pos:start="199:9" pos:end="199:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="199:26" pos:end="199:90">(<argument pos:start="199:27" pos:end="199:34">s-&gt;avctx</argument>, <argument pos:start="199:37" pos:end="199:55">s-&gt;q_inter_matrix16</argument>, <argument pos:start="199:58" pos:end="199:83"><literal type="number" pos:start="199:58" pos:end="199:59">64</literal>*<literal type="number" pos:start="199:61" pos:end="199:62">32</literal>*<literal type="number" pos:start="199:64" pos:end="199:64">2</literal> * sizeof(uint16_t)</argument>, <argument pos:start="199:86" pos:end="199:89">fail</argument>)</argument_list></macro>

        <macro pos:start="201:9" pos:end="201:97"><name pos:start="201:9" pos:end="201:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="201:26" pos:end="201:97">(<argument pos:start="201:27" pos:end="201:34">s-&gt;avctx</argument>, <argument pos:start="201:37" pos:end="201:52">s-&gt;input_picture</argument>, <argument pos:start="201:55" pos:end="201:90">MAX_PICTURE_COUNT * sizeof(Picture*)</argument>, <argument pos:start="201:93" pos:end="201:96">fail</argument>)</argument_list></macro>

        <macro pos:start="203:9" pos:end="203:107"><name pos:start="203:9" pos:end="203:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="203:26" pos:end="203:107">(<argument pos:start="203:27" pos:end="203:34">s-&gt;avctx</argument>, <argument pos:start="203:37" pos:end="203:62">s-&gt;reordered_input_picture</argument>, <argument pos:start="203:65" pos:end="203:100">MAX_PICTURE_COUNT * sizeof(Picture*)</argument>, <argument pos:start="203:103" pos:end="203:106">fail</argument>)</argument_list></macro>



        <if_stmt pos:start="207:9" pos:end="211:9"><if pos:start="207:9" pos:end="211:9">if<condition pos:start="207:11" pos:end="207:37">(<expr pos:start="207:12" pos:end="207:36"><name pos:start="207:12" pos:end="207:36"><name pos:start="207:12" pos:end="207:12">s</name><operator pos:start="207:13" pos:end="207:14">-&gt;</operator><name pos:start="207:15" pos:end="207:19">avctx</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:36">noise_reduction</name></name></expr>)</condition><block pos:start="207:38" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:87">

            <macro pos:start="209:13" pos:end="209:87"><name pos:start="209:13" pos:end="209:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="209:30" pos:end="209:87">(<argument pos:start="209:31" pos:end="209:38">s-&gt;avctx</argument>, <argument pos:start="209:41" pos:end="209:53">s-&gt;dct_offset</argument>, <argument pos:start="209:56" pos:end="209:80"><literal type="number" pos:start="209:56" pos:end="209:56">2</literal> * <literal type="number" pos:start="209:60" pos:end="209:61">64</literal> * sizeof(uint16_t)</argument>, <argument pos:start="209:83" pos:end="209:86">fail</argument>)</argument_list></macro>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <macro pos:start="215:5" pos:end="215:86"><name pos:start="215:5" pos:end="215:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="215:22" pos:end="215:86">(<argument pos:start="215:23" pos:end="215:30">s-&gt;avctx</argument>, <argument pos:start="215:33" pos:end="215:42">s-&gt;picture</argument>, <argument pos:start="215:45" pos:end="215:79">MAX_PICTURE_COUNT * sizeof(Picture)</argument>, <argument pos:start="215:82" pos:end="215:85">fail</argument>)</argument_list></macro>

    <for pos:start="217:5" pos:end="221:5">for<control pos:start="217:8" pos:end="217:42">(<init pos:start="217:9" pos:end="217:14"><expr pos:start="217:9" pos:end="217:13"><name pos:start="217:9" pos:end="217:9">i</name> <operator pos:start="217:11" pos:end="217:11">=</operator> <literal type="number" pos:start="217:13" pos:end="217:13">0</literal></expr>;</init> <condition pos:start="217:16" pos:end="217:37"><expr pos:start="217:16" pos:end="217:36"><name pos:start="217:16" pos:end="217:16">i</name> <operator pos:start="217:18" pos:end="217:18">&lt;</operator> <name pos:start="217:20" pos:end="217:36">MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="217:39" pos:end="217:41"><expr pos:start="217:39" pos:end="217:41"><name pos:start="217:39" pos:end="217:39">i</name><operator pos:start="217:40" pos:end="217:41">++</operator></expr></incr>)</control> <block pos:start="217:44" pos:end="221:5">{<block_content pos:start="219:9" pos:end="219:62">

        <expr_stmt pos:start="219:9" pos:end="219:62"><expr pos:start="219:9" pos:end="219:61"><call pos:start="219:9" pos:end="219:61"><name pos:start="219:9" pos:end="219:34">avcodec_get_frame_defaults</name><argument_list pos:start="219:35" pos:end="219:61">(<argument pos:start="219:36" pos:end="219:60"><expr pos:start="219:36" pos:end="219:60"><operator pos:start="219:36" pos:end="219:36">(</operator><name pos:start="219:37" pos:end="219:43">AVFrame</name> <operator pos:start="219:45" pos:end="219:45">*</operator><operator pos:start="219:46" pos:end="219:46">)</operator><operator pos:start="219:47" pos:end="219:47">&amp;</operator><name pos:start="219:48" pos:end="219:60"><name pos:start="219:48" pos:end="219:48">s</name><operator pos:start="219:49" pos:end="219:50">-&gt;</operator><name pos:start="219:51" pos:end="219:57">picture</name><index pos:start="219:58" pos:end="219:60">[<expr pos:start="219:59" pos:end="219:59"><name pos:start="219:59" pos:end="219:59">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <macro pos:start="225:5" pos:end="225:91"><name pos:start="225:5" pos:end="225:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="225:22" pos:end="225:91">(<argument pos:start="225:23" pos:end="225:30">s-&gt;avctx</argument>, <argument pos:start="225:33" pos:end="225:53">s-&gt;error_status_table</argument>, <argument pos:start="225:56" pos:end="225:84">mb_array_size*sizeof(uint8_t)</argument>, <argument pos:start="225:87" pos:end="225:90">fail</argument>)</argument_list></macro>



    <if_stmt pos:start="229:5" pos:end="259:5"><if pos:start="229:5" pos:end="259:5">if<condition pos:start="229:7" pos:end="229:76">(<expr pos:start="229:8" pos:end="229:75"><name pos:start="229:8" pos:end="229:18"><name pos:start="229:8" pos:end="229:8">s</name><operator pos:start="229:9" pos:end="229:10">-&gt;</operator><name pos:start="229:11" pos:end="229:18">codec_id</name></name><operator pos:start="229:19" pos:end="229:20">==</operator><name pos:start="229:21" pos:end="229:34">CODEC_ID_MPEG4</name> <operator pos:start="229:36" pos:end="229:37">||</operator> <operator pos:start="229:39" pos:end="229:39">(</operator><name pos:start="229:40" pos:end="229:47"><name pos:start="229:40" pos:end="229:40">s</name><operator pos:start="229:41" pos:end="229:42">-&gt;</operator><name pos:start="229:43" pos:end="229:47">flags</name></name> <operator pos:start="229:49" pos:end="229:49">&amp;</operator> <name pos:start="229:51" pos:end="229:74">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="229:75" pos:end="229:75">)</operator></expr>)</condition><block pos:start="229:77" pos:end="259:5">{<block_content pos:start="233:13" pos:end="257:13">

        <comment type="block" pos:start="231:9" pos:end="231:52">/* interlaced direct mode decoding tables */</comment>

            <for pos:start="233:13" pos:end="257:13">for<control pos:start="233:16" pos:end="233:30">(<init pos:start="233:17" pos:end="233:20"><expr pos:start="233:17" pos:end="233:19"><name pos:start="233:17" pos:end="233:17">i</name><operator pos:start="233:18" pos:end="233:18">=</operator><literal type="number" pos:start="233:19" pos:end="233:19">0</literal></expr>;</init> <condition pos:start="233:22" pos:end="233:25"><expr pos:start="233:22" pos:end="233:24"><name pos:start="233:22" pos:end="233:22">i</name><operator pos:start="233:23" pos:end="233:23">&lt;</operator><literal type="number" pos:start="233:24" pos:end="233:24">2</literal></expr>;</condition> <incr pos:start="233:27" pos:end="233:29"><expr pos:start="233:27" pos:end="233:29"><name pos:start="233:27" pos:end="233:27">i</name><operator pos:start="233:28" pos:end="233:29">++</operator></expr></incr>)</control><block pos:start="233:31" pos:end="257:13">{<block_content pos:start="235:17" pos:end="255:114">

                <decl_stmt pos:start="235:17" pos:end="235:25"><decl pos:start="235:17" pos:end="235:21"><type pos:start="235:17" pos:end="235:19"><name pos:start="235:17" pos:end="235:19">int</name></type> <name pos:start="235:21" pos:end="235:21">j</name></decl>, <decl pos:start="235:24" pos:end="235:24"><type ref="prev" pos:start="235:17" pos:end="235:19"/><name pos:start="235:24" pos:end="235:24">k</name></decl>;</decl_stmt>

                <for pos:start="237:17" pos:end="253:17">for<control pos:start="237:20" pos:end="237:34">(<init pos:start="237:21" pos:end="237:24"><expr pos:start="237:21" pos:end="237:23"><name pos:start="237:21" pos:end="237:21">j</name><operator pos:start="237:22" pos:end="237:22">=</operator><literal type="number" pos:start="237:23" pos:end="237:23">0</literal></expr>;</init> <condition pos:start="237:26" pos:end="237:29"><expr pos:start="237:26" pos:end="237:28"><name pos:start="237:26" pos:end="237:26">j</name><operator pos:start="237:27" pos:end="237:27">&lt;</operator><literal type="number" pos:start="237:28" pos:end="237:28">2</literal></expr>;</condition> <incr pos:start="237:31" pos:end="237:33"><expr pos:start="237:31" pos:end="237:33"><name pos:start="237:31" pos:end="237:31">j</name><operator pos:start="237:32" pos:end="237:33">++</operator></expr></incr>)</control><block pos:start="237:35" pos:end="253:17">{<block_content pos:start="239:21" pos:end="251:97">

                    <for pos:start="239:21" pos:end="245:21">for<control pos:start="239:24" pos:end="239:38">(<init pos:start="239:25" pos:end="239:28"><expr pos:start="239:25" pos:end="239:27"><name pos:start="239:25" pos:end="239:25">k</name><operator pos:start="239:26" pos:end="239:26">=</operator><literal type="number" pos:start="239:27" pos:end="239:27">0</literal></expr>;</init> <condition pos:start="239:30" pos:end="239:33"><expr pos:start="239:30" pos:end="239:32"><name pos:start="239:30" pos:end="239:30">k</name><operator pos:start="239:31" pos:end="239:31">&lt;</operator><literal type="number" pos:start="239:32" pos:end="239:32">2</literal></expr>;</condition> <incr pos:start="239:35" pos:end="239:37"><expr pos:start="239:35" pos:end="239:37"><name pos:start="239:35" pos:end="239:35">k</name><operator pos:start="239:36" pos:end="239:37">++</operator></expr></incr>)</control><block pos:start="239:39" pos:end="245:21">{<block_content pos:start="241:25" pos:end="243:108">

                        <macro pos:start="241:25" pos:end="241:132"><name pos:start="241:25" pos:end="241:41">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="241:42" pos:end="241:132">(<argument pos:start="241:43" pos:end="241:50">s-&gt;avctx</argument>,    <argument pos:start="241:56" pos:end="241:88">s-&gt;b_field_mv_table_base[i][j][k]</argument>, <argument pos:start="241:91" pos:end="241:125">mv_table_size * <literal type="number" pos:start="241:107" pos:end="241:107">2</literal> * sizeof(int16_t)</argument>, <argument pos:start="241:128" pos:end="241:131">fail</argument>)</argument_list></macro>

                        <expr_stmt pos:start="243:25" pos:end="243:108"><expr pos:start="243:25" pos:end="243:107"><name pos:start="243:25" pos:end="243:52"><name pos:start="243:25" pos:end="243:25">s</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:43">b_field_mv_table</name><index pos:start="243:44" pos:end="243:46">[<expr pos:start="243:45" pos:end="243:45"><name pos:start="243:45" pos:end="243:45">i</name></expr>]</index><index pos:start="243:47" pos:end="243:49">[<expr pos:start="243:48" pos:end="243:48"><name pos:start="243:48" pos:end="243:48">j</name></expr>]</index><index pos:start="243:50" pos:end="243:52">[<expr pos:start="243:51" pos:end="243:51"><name pos:start="243:51" pos:end="243:51">k</name></expr>]</index></name> <operator pos:start="243:54" pos:end="243:54">=</operator> <name pos:start="243:56" pos:end="243:88"><name pos:start="243:56" pos:end="243:56">s</name><operator pos:start="243:57" pos:end="243:58">-&gt;</operator><name pos:start="243:59" pos:end="243:79">b_field_mv_table_base</name><index pos:start="243:80" pos:end="243:82">[<expr pos:start="243:81" pos:end="243:81"><name pos:start="243:81" pos:end="243:81">i</name></expr>]</index><index pos:start="243:83" pos:end="243:85">[<expr pos:start="243:84" pos:end="243:84"><name pos:start="243:84" pos:end="243:84">j</name></expr>]</index><index pos:start="243:86" pos:end="243:88">[<expr pos:start="243:87" pos:end="243:87"><name pos:start="243:87" pos:end="243:87">k</name></expr>]</index></name> <operator pos:start="243:90" pos:end="243:90">+</operator> <name pos:start="243:92" pos:end="243:103"><name pos:start="243:92" pos:end="243:92">s</name><operator pos:start="243:93" pos:end="243:94">-&gt;</operator><name pos:start="243:95" pos:end="243:103">mb_stride</name></name> <operator pos:start="243:105" pos:end="243:105">+</operator> <literal type="number" pos:start="243:107" pos:end="243:107">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <macro pos:start="247:21" pos:end="247:122"><name pos:start="247:21" pos:end="247:37">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="247:38" pos:end="247:122">(<argument pos:start="247:39" pos:end="247:46">s-&gt;avctx</argument>, <argument pos:start="247:49" pos:end="247:78">s-&gt;b_field_select_table [i][j]</argument>, <argument pos:start="247:81" pos:end="247:115">mb_array_size * <literal type="number" pos:start="247:97" pos:end="247:97">2</literal> * sizeof(uint8_t)</argument>, <argument pos:start="247:118" pos:end="247:121">fail</argument>)</argument_list></macro>

                    <macro pos:start="249:21" pos:end="249:122"><name pos:start="249:21" pos:end="249:37">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="249:38" pos:end="249:122">(<argument pos:start="249:39" pos:end="249:46">s-&gt;avctx</argument>, <argument pos:start="249:49" pos:end="249:78">s-&gt;p_field_mv_table_base[i][j]</argument>, <argument pos:start="249:81" pos:end="249:115">mv_table_size * <literal type="number" pos:start="249:97" pos:end="249:97">2</literal> * sizeof(int16_t)</argument>, <argument pos:start="249:118" pos:end="249:121">fail</argument>)</argument_list></macro>

                    <expr_stmt pos:start="251:21" pos:end="251:97"><expr pos:start="251:21" pos:end="251:96"><name pos:start="251:21" pos:end="251:45"><name pos:start="251:21" pos:end="251:21">s</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:39">p_field_mv_table</name><index pos:start="251:40" pos:end="251:42">[<expr pos:start="251:41" pos:end="251:41"><name pos:start="251:41" pos:end="251:41">i</name></expr>]</index><index pos:start="251:43" pos:end="251:45">[<expr pos:start="251:44" pos:end="251:44"><name pos:start="251:44" pos:end="251:44">j</name></expr>]</index></name> <operator pos:start="251:47" pos:end="251:47">=</operator> <name pos:start="251:49" pos:end="251:78"><name pos:start="251:49" pos:end="251:49">s</name><operator pos:start="251:50" pos:end="251:51">-&gt;</operator><name pos:start="251:52" pos:end="251:72">p_field_mv_table_base</name><index pos:start="251:73" pos:end="251:75">[<expr pos:start="251:74" pos:end="251:74"><name pos:start="251:74" pos:end="251:74">i</name></expr>]</index><index pos:start="251:76" pos:end="251:78">[<expr pos:start="251:77" pos:end="251:77"><name pos:start="251:77" pos:end="251:77">j</name></expr>]</index></name><operator pos:start="251:79" pos:end="251:79">+</operator> <name pos:start="251:81" pos:end="251:92"><name pos:start="251:81" pos:end="251:81">s</name><operator pos:start="251:82" pos:end="251:83">-&gt;</operator><name pos:start="251:84" pos:end="251:92">mb_stride</name></name> <operator pos:start="251:94" pos:end="251:94">+</operator> <literal type="number" pos:start="251:96" pos:end="251:96">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <macro pos:start="255:17" pos:end="255:114"><name pos:start="255:17" pos:end="255:33">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="255:34" pos:end="255:114">(<argument pos:start="255:35" pos:end="255:42">s-&gt;avctx</argument>, <argument pos:start="255:45" pos:end="255:70">s-&gt;p_field_select_table[i]</argument>, <argument pos:start="255:73" pos:end="255:107">mb_array_size * <literal type="number" pos:start="255:89" pos:end="255:89">2</literal> * sizeof(uint8_t)</argument>, <argument pos:start="255:110" pos:end="255:113">fail</argument>)</argument_list></macro>

            </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="261:5" pos:end="289:5"><if pos:start="261:5" pos:end="289:5">if <condition pos:start="261:8" pos:end="261:34">(<expr pos:start="261:9" pos:end="261:33"><name pos:start="261:9" pos:end="261:21"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:21">out_format</name></name> <operator pos:start="261:23" pos:end="261:24">==</operator> <name pos:start="261:26" pos:end="261:33">FMT_H263</name></expr>)</condition> <block pos:start="261:36" pos:end="289:5">{<block_content pos:start="265:9" pos:end="287:93">

        <comment type="block" pos:start="263:9" pos:end="263:23">/* ac values */</comment>

        <expr_stmt pos:start="265:9" pos:end="265:90"><expr pos:start="265:9" pos:end="265:89"><call pos:start="265:9" pos:end="265:89"><name pos:start="265:9" pos:end="265:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="265:26" pos:end="265:89">(<argument pos:start="265:27" pos:end="265:34"><expr pos:start="265:27" pos:end="265:34"><name pos:start="265:27" pos:end="265:34"><name pos:start="265:27" pos:end="265:27">s</name><operator pos:start="265:28" pos:end="265:29">-&gt;</operator><name pos:start="265:30" pos:end="265:34">avctx</name></name></expr></argument>, <argument pos:start="265:37" pos:end="265:50"><expr pos:start="265:37" pos:end="265:50"><name pos:start="265:37" pos:end="265:50"><name pos:start="265:37" pos:end="265:37">s</name><operator pos:start="265:38" pos:end="265:39">-&gt;</operator><name pos:start="265:40" pos:end="265:50">ac_val_base</name></name></expr></argument>, <argument pos:start="265:53" pos:end="265:82"><expr pos:start="265:53" pos:end="265:82"><name pos:start="265:53" pos:end="265:59">yc_size</name> <operator pos:start="265:61" pos:end="265:61">*</operator> <sizeof pos:start="265:63" pos:end="265:77">sizeof<argument_list pos:start="265:69" pos:end="265:77">(<argument pos:start="265:70" pos:end="265:76"><expr pos:start="265:70" pos:end="265:76"><name pos:start="265:70" pos:end="265:76">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="265:79" pos:end="265:79">*</operator> <literal type="number" pos:start="265:81" pos:end="265:82">16</literal></expr></argument>, <argument pos:start="265:85" pos:end="265:88"><expr pos:start="265:85" pos:end="265:88"><name pos:start="265:85" pos:end="265:88">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:57"><expr pos:start="267:9" pos:end="267:56"><name pos:start="267:9" pos:end="267:20"><name pos:start="267:9" pos:end="267:9">s</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:17">ac_val</name><index pos:start="267:18" pos:end="267:20">[<expr pos:start="267:19" pos:end="267:19"><literal type="number" pos:start="267:19" pos:end="267:19">0</literal></expr>]</index></name> <operator pos:start="267:22" pos:end="267:22">=</operator> <name pos:start="267:24" pos:end="267:37"><name pos:start="267:24" pos:end="267:24">s</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:37">ac_val_base</name></name> <operator pos:start="267:39" pos:end="267:39">+</operator> <name pos:start="267:41" pos:end="267:52"><name pos:start="267:41" pos:end="267:41">s</name><operator pos:start="267:42" pos:end="267:43">-&gt;</operator><name pos:start="267:44" pos:end="267:52">b8_stride</name></name> <operator pos:start="267:54" pos:end="267:54">+</operator> <literal type="number" pos:start="267:56" pos:end="267:56">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:66"><expr pos:start="269:9" pos:end="269:65"><name pos:start="269:9" pos:end="269:20"><name pos:start="269:9" pos:end="269:9">s</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:17">ac_val</name><index pos:start="269:18" pos:end="269:20">[<expr pos:start="269:19" pos:end="269:19"><literal type="number" pos:start="269:19" pos:end="269:19">1</literal></expr>]</index></name> <operator pos:start="269:22" pos:end="269:22">=</operator> <name pos:start="269:24" pos:end="269:37"><name pos:start="269:24" pos:end="269:24">s</name><operator pos:start="269:25" pos:end="269:26">-&gt;</operator><name pos:start="269:27" pos:end="269:37">ac_val_base</name></name> <operator pos:start="269:39" pos:end="269:39">+</operator> <name pos:start="269:41" pos:end="269:46">y_size</name> <operator pos:start="269:48" pos:end="269:48">+</operator> <name pos:start="269:50" pos:end="269:61"><name pos:start="269:50" pos:end="269:50">s</name><operator pos:start="269:51" pos:end="269:52">-&gt;</operator><name pos:start="269:53" pos:end="269:61">mb_stride</name></name> <operator pos:start="269:63" pos:end="269:63">+</operator> <literal type="number" pos:start="269:65" pos:end="269:65">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:45"><expr pos:start="271:9" pos:end="271:44"><name pos:start="271:9" pos:end="271:20"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:17">ac_val</name><index pos:start="271:18" pos:end="271:20">[<expr pos:start="271:19" pos:end="271:19"><literal type="number" pos:start="271:19" pos:end="271:19">2</literal></expr>]</index></name> <operator pos:start="271:22" pos:end="271:22">=</operator> <name pos:start="271:24" pos:end="271:35"><name pos:start="271:24" pos:end="271:24">s</name><operator pos:start="271:25" pos:end="271:26">-&gt;</operator><name pos:start="271:27" pos:end="271:32">ac_val</name><index pos:start="271:33" pos:end="271:35">[<expr pos:start="271:34" pos:end="271:34"><literal type="number" pos:start="271:34" pos:end="271:34">1</literal></expr>]</index></name> <operator pos:start="271:37" pos:end="271:37">+</operator> <name pos:start="271:39" pos:end="271:44">c_size</name></expr>;</expr_stmt>



        <comment type="block" pos:start="275:9" pos:end="275:24">/* cbp values */</comment>

        <expr_stmt pos:start="277:9" pos:end="277:71"><expr pos:start="277:9" pos:end="277:70"><call pos:start="277:9" pos:end="277:70"><name pos:start="277:9" pos:end="277:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="277:26" pos:end="277:70">(<argument pos:start="277:27" pos:end="277:34"><expr pos:start="277:27" pos:end="277:34"><name pos:start="277:27" pos:end="277:34"><name pos:start="277:27" pos:end="277:27">s</name><operator pos:start="277:28" pos:end="277:29">-&gt;</operator><name pos:start="277:30" pos:end="277:34">avctx</name></name></expr></argument>, <argument pos:start="277:37" pos:end="277:55"><expr pos:start="277:37" pos:end="277:55"><name pos:start="277:37" pos:end="277:55"><name pos:start="277:37" pos:end="277:37">s</name><operator pos:start="277:38" pos:end="277:39">-&gt;</operator><name pos:start="277:40" pos:end="277:55">coded_block_base</name></name></expr></argument>, <argument pos:start="277:58" pos:end="277:63"><expr pos:start="277:58" pos:end="277:63"><name pos:start="277:58" pos:end="277:63">y_size</name></expr></argument>, <argument pos:start="277:66" pos:end="277:69"><expr pos:start="277:66" pos:end="277:69"><name pos:start="277:66" pos:end="277:69">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:63"><expr pos:start="279:9" pos:end="279:62"><name pos:start="279:9" pos:end="279:22"><name pos:start="279:9" pos:end="279:9">s</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:22">coded_block</name></name><operator pos:start="279:23" pos:end="279:23">=</operator> <name pos:start="279:25" pos:end="279:43"><name pos:start="279:25" pos:end="279:25">s</name><operator pos:start="279:26" pos:end="279:27">-&gt;</operator><name pos:start="279:28" pos:end="279:43">coded_block_base</name></name> <operator pos:start="279:45" pos:end="279:45">+</operator> <name pos:start="279:47" pos:end="279:58"><name pos:start="279:47" pos:end="279:47">s</name><operator pos:start="279:48" pos:end="279:49">-&gt;</operator><name pos:start="279:50" pos:end="279:58">b8_stride</name></name> <operator pos:start="279:60" pos:end="279:60">+</operator> <literal type="number" pos:start="279:62" pos:end="279:62">1</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="283:9" pos:end="283:36">/* cbp, ac_pred, pred_dir */</comment>

        <macro pos:start="285:9" pos:end="285:93"><name pos:start="285:9" pos:end="285:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="285:26" pos:end="285:93">(<argument pos:start="285:27" pos:end="285:34">s-&gt;avctx</argument>, <argument pos:start="285:37" pos:end="285:48">s-&gt;cbp_table</argument>     , <argument pos:start="285:56" pos:end="285:86">mb_array_size * sizeof(uint8_t)</argument>, <argument pos:start="285:89" pos:end="285:92">fail</argument>)</argument_list></macro>

        <macro pos:start="287:9" pos:end="287:93"><name pos:start="287:9" pos:end="287:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="287:26" pos:end="287:93">(<argument pos:start="287:27" pos:end="287:34">s-&gt;avctx</argument>, <argument pos:start="287:37" pos:end="287:53">s-&gt;pred_dir_table</argument>, <argument pos:start="287:56" pos:end="287:86">mb_array_size * sizeof(uint8_t)</argument>, <argument pos:start="287:89" pos:end="287:92">fail</argument>)</argument_list></macro>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="293:5" pos:end="311:5"><if pos:start="293:5" pos:end="311:5">if <condition pos:start="293:8" pos:end="293:53">(<expr pos:start="293:9" pos:end="293:52"><name pos:start="293:9" pos:end="293:20"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:20">h263_pred</name></name> <operator pos:start="293:22" pos:end="293:23">||</operator> <name pos:start="293:25" pos:end="293:36"><name pos:start="293:25" pos:end="293:25">s</name><operator pos:start="293:26" pos:end="293:27">-&gt;</operator><name pos:start="293:28" pos:end="293:36">h263_plus</name></name> <operator pos:start="293:38" pos:end="293:39">||</operator> <operator pos:start="293:41" pos:end="293:41">!</operator><name pos:start="293:42" pos:end="293:52"><name pos:start="293:42" pos:end="293:42">s</name><operator pos:start="293:43" pos:end="293:44">-&gt;</operator><name pos:start="293:45" pos:end="293:52">encoding</name></name></expr>)</condition> <block pos:start="293:55" pos:end="311:5">{<block_content pos:start="299:9" pos:end="309:37">

        <comment type="block" pos:start="295:9" pos:end="295:23">/* dc values */</comment>

        <comment type="line" pos:start="297:9" pos:end="297:64">//MN: we need these for error resilience of intra-frames</comment>

        <expr_stmt pos:start="299:9" pos:end="299:85"><expr pos:start="299:9" pos:end="299:84"><call pos:start="299:9" pos:end="299:84"><name pos:start="299:9" pos:end="299:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="299:26" pos:end="299:84">(<argument pos:start="299:27" pos:end="299:34"><expr pos:start="299:27" pos:end="299:34"><name pos:start="299:27" pos:end="299:34"><name pos:start="299:27" pos:end="299:27">s</name><operator pos:start="299:28" pos:end="299:29">-&gt;</operator><name pos:start="299:30" pos:end="299:34">avctx</name></name></expr></argument>, <argument pos:start="299:37" pos:end="299:50"><expr pos:start="299:37" pos:end="299:50"><name pos:start="299:37" pos:end="299:50"><name pos:start="299:37" pos:end="299:37">s</name><operator pos:start="299:38" pos:end="299:39">-&gt;</operator><name pos:start="299:40" pos:end="299:50">dc_val_base</name></name></expr></argument>, <argument pos:start="299:53" pos:end="299:77"><expr pos:start="299:53" pos:end="299:77"><name pos:start="299:53" pos:end="299:59">yc_size</name> <operator pos:start="299:61" pos:end="299:61">*</operator> <sizeof pos:start="299:63" pos:end="299:77">sizeof<argument_list pos:start="299:69" pos:end="299:77">(<argument pos:start="299:70" pos:end="299:76"><expr pos:start="299:70" pos:end="299:76"><name pos:start="299:70" pos:end="299:76">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="299:80" pos:end="299:83"><expr pos:start="299:80" pos:end="299:83"><name pos:start="299:80" pos:end="299:83">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:57"><expr pos:start="301:9" pos:end="301:56"><name pos:start="301:9" pos:end="301:20"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:17">dc_val</name><index pos:start="301:18" pos:end="301:20">[<expr pos:start="301:19" pos:end="301:19"><literal type="number" pos:start="301:19" pos:end="301:19">0</literal></expr>]</index></name> <operator pos:start="301:22" pos:end="301:22">=</operator> <name pos:start="301:24" pos:end="301:37"><name pos:start="301:24" pos:end="301:24">s</name><operator pos:start="301:25" pos:end="301:26">-&gt;</operator><name pos:start="301:27" pos:end="301:37">dc_val_base</name></name> <operator pos:start="301:39" pos:end="301:39">+</operator> <name pos:start="301:41" pos:end="301:52"><name pos:start="301:41" pos:end="301:41">s</name><operator pos:start="301:42" pos:end="301:43">-&gt;</operator><name pos:start="301:44" pos:end="301:52">b8_stride</name></name> <operator pos:start="301:54" pos:end="301:54">+</operator> <literal type="number" pos:start="301:56" pos:end="301:56">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:66"><expr pos:start="303:9" pos:end="303:65"><name pos:start="303:9" pos:end="303:20"><name pos:start="303:9" pos:end="303:9">s</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:17">dc_val</name><index pos:start="303:18" pos:end="303:20">[<expr pos:start="303:19" pos:end="303:19"><literal type="number" pos:start="303:19" pos:end="303:19">1</literal></expr>]</index></name> <operator pos:start="303:22" pos:end="303:22">=</operator> <name pos:start="303:24" pos:end="303:37"><name pos:start="303:24" pos:end="303:24">s</name><operator pos:start="303:25" pos:end="303:26">-&gt;</operator><name pos:start="303:27" pos:end="303:37">dc_val_base</name></name> <operator pos:start="303:39" pos:end="303:39">+</operator> <name pos:start="303:41" pos:end="303:46">y_size</name> <operator pos:start="303:48" pos:end="303:48">+</operator> <name pos:start="303:50" pos:end="303:61"><name pos:start="303:50" pos:end="303:50">s</name><operator pos:start="303:51" pos:end="303:52">-&gt;</operator><name pos:start="303:53" pos:end="303:61">mb_stride</name></name> <operator pos:start="303:63" pos:end="303:63">+</operator> <literal type="number" pos:start="303:65" pos:end="303:65">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:45"><expr pos:start="305:9" pos:end="305:44"><name pos:start="305:9" pos:end="305:20"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:17">dc_val</name><index pos:start="305:18" pos:end="305:20">[<expr pos:start="305:19" pos:end="305:19"><literal type="number" pos:start="305:19" pos:end="305:19">2</literal></expr>]</index></name> <operator pos:start="305:22" pos:end="305:22">=</operator> <name pos:start="305:24" pos:end="305:35"><name pos:start="305:24" pos:end="305:24">s</name><operator pos:start="305:25" pos:end="305:26">-&gt;</operator><name pos:start="305:27" pos:end="305:32">dc_val</name><index pos:start="305:33" pos:end="305:35">[<expr pos:start="305:34" pos:end="305:34"><literal type="number" pos:start="305:34" pos:end="305:34">1</literal></expr>]</index></name> <operator pos:start="305:37" pos:end="305:37">+</operator> <name pos:start="305:39" pos:end="305:44">c_size</name></expr>;</expr_stmt>

        <for pos:start="307:9" pos:end="309:37">for<control pos:start="307:12" pos:end="307:30">(<init pos:start="307:13" pos:end="307:16"><expr pos:start="307:13" pos:end="307:15"><name pos:start="307:13" pos:end="307:13">i</name><operator pos:start="307:14" pos:end="307:14">=</operator><literal type="number" pos:start="307:15" pos:end="307:15">0</literal></expr>;</init><condition pos:start="307:17" pos:end="307:26"><expr pos:start="307:17" pos:end="307:25"><name pos:start="307:17" pos:end="307:17">i</name><operator pos:start="307:18" pos:end="307:18">&lt;</operator><name pos:start="307:19" pos:end="307:25">yc_size</name></expr>;</condition><incr pos:start="307:27" pos:end="307:29"><expr pos:start="307:27" pos:end="307:29"><name pos:start="307:27" pos:end="307:27">i</name><operator pos:start="307:28" pos:end="307:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="309:13" pos:end="309:37"><block_content pos:start="309:13" pos:end="309:37">

            <expr_stmt pos:start="309:13" pos:end="309:37"><expr pos:start="309:13" pos:end="309:36"><name pos:start="309:13" pos:end="309:29"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:26">dc_val_base</name><index pos:start="309:27" pos:end="309:29">[<expr pos:start="309:28" pos:end="309:28"><name pos:start="309:28" pos:end="309:28">i</name></expr>]</index></name> <operator pos:start="309:31" pos:end="309:31">=</operator> <literal type="number" pos:start="309:33" pos:end="309:36">1024</literal></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="315:5" pos:end="315:35">/* which mb is a intra block */</comment>

    <expr_stmt pos:start="317:5" pos:end="317:71"><expr pos:start="317:5" pos:end="317:70"><call pos:start="317:5" pos:end="317:70"><name pos:start="317:5" pos:end="317:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="317:22" pos:end="317:70">(<argument pos:start="317:23" pos:end="317:30"><expr pos:start="317:23" pos:end="317:30"><name pos:start="317:23" pos:end="317:30"><name pos:start="317:23" pos:end="317:23">s</name><operator pos:start="317:24" pos:end="317:25">-&gt;</operator><name pos:start="317:26" pos:end="317:30">avctx</name></name></expr></argument>, <argument pos:start="317:33" pos:end="317:48"><expr pos:start="317:33" pos:end="317:48"><name pos:start="317:33" pos:end="317:48"><name pos:start="317:33" pos:end="317:33">s</name><operator pos:start="317:34" pos:end="317:35">-&gt;</operator><name pos:start="317:36" pos:end="317:48">mbintra_table</name></name></expr></argument>, <argument pos:start="317:51" pos:end="317:63"><expr pos:start="317:51" pos:end="317:63"><name pos:start="317:51" pos:end="317:63">mb_array_size</name></expr></argument>, <argument pos:start="317:66" pos:end="317:69"><expr pos:start="317:66" pos:end="317:69"><name pos:start="317:66" pos:end="317:69">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:47"><expr pos:start="319:5" pos:end="319:46"><call pos:start="319:5" pos:end="319:46"><name pos:start="319:5" pos:end="319:10">memset</name><argument_list pos:start="319:11" pos:end="319:46">(<argument pos:start="319:12" pos:end="319:27"><expr pos:start="319:12" pos:end="319:27"><name pos:start="319:12" pos:end="319:27"><name pos:start="319:12" pos:end="319:12">s</name><operator pos:start="319:13" pos:end="319:14">-&gt;</operator><name pos:start="319:15" pos:end="319:27">mbintra_table</name></name></expr></argument>, <argument pos:start="319:30" pos:end="319:30"><expr pos:start="319:30" pos:end="319:30"><literal type="number" pos:start="319:30" pos:end="319:30">1</literal></expr></argument>, <argument pos:start="319:33" pos:end="319:45"><expr pos:start="319:33" pos:end="319:45"><name pos:start="319:33" pos:end="319:45">mb_array_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="323:5" pos:end="323:36">/* init macroblock skip table */</comment>

    <expr_stmt pos:start="325:5" pos:end="325:72"><expr pos:start="325:5" pos:end="325:71"><call pos:start="325:5" pos:end="325:71"><name pos:start="325:5" pos:end="325:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="325:22" pos:end="325:71">(<argument pos:start="325:23" pos:end="325:30"><expr pos:start="325:23" pos:end="325:30"><name pos:start="325:23" pos:end="325:30"><name pos:start="325:23" pos:end="325:23">s</name><operator pos:start="325:24" pos:end="325:25">-&gt;</operator><name pos:start="325:26" pos:end="325:30">avctx</name></name></expr></argument>, <argument pos:start="325:33" pos:end="325:47"><expr pos:start="325:33" pos:end="325:47"><name pos:start="325:33" pos:end="325:47"><name pos:start="325:33" pos:end="325:33">s</name><operator pos:start="325:34" pos:end="325:35">-&gt;</operator><name pos:start="325:36" pos:end="325:47">mbskip_table</name></name></expr></argument>, <argument pos:start="325:50" pos:end="325:64"><expr pos:start="325:50" pos:end="325:64"><name pos:start="325:50" pos:end="325:62">mb_array_size</name><operator pos:start="325:63" pos:end="325:63">+</operator><literal type="number" pos:start="325:64" pos:end="325:64">2</literal></expr></argument>, <argument pos:start="325:67" pos:end="325:70"><expr pos:start="325:67" pos:end="325:70"><name pos:start="325:67" pos:end="325:70">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="327:5" pos:end="327:60">//Note the +1 is for a quicker mpeg4 slice_end detection</comment>

    <expr_stmt pos:start="329:5" pos:end="329:87"><expr pos:start="329:5" pos:end="329:86"><call pos:start="329:5" pos:end="329:86"><name pos:start="329:5" pos:end="329:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="329:22" pos:end="329:86">(<argument pos:start="329:23" pos:end="329:30"><expr pos:start="329:23" pos:end="329:30"><name pos:start="329:23" pos:end="329:30"><name pos:start="329:23" pos:end="329:23">s</name><operator pos:start="329:24" pos:end="329:25">-&gt;</operator><name pos:start="329:26" pos:end="329:30">avctx</name></name></expr></argument>, <argument pos:start="329:33" pos:end="329:50"><expr pos:start="329:33" pos:end="329:50"><name pos:start="329:33" pos:end="329:50"><name pos:start="329:33" pos:end="329:33">s</name><operator pos:start="329:34" pos:end="329:35">-&gt;</operator><name pos:start="329:36" pos:end="329:50">prev_pict_types</name></name></expr></argument>, <argument pos:start="329:53" pos:end="329:79"><expr pos:start="329:53" pos:end="329:79"><name pos:start="329:53" pos:end="329:79">PREV_PICT_TYPES_BUFFER_SIZE</name></expr></argument>, <argument pos:start="329:82" pos:end="329:85"><expr pos:start="329:82" pos:end="329:85"><name pos:start="329:82" pos:end="329:85">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="333:5" pos:end="333:31"><expr pos:start="333:5" pos:end="333:30"><name pos:start="333:5" pos:end="333:26"><name pos:start="333:5" pos:end="333:5">s</name><operator pos:start="333:6" pos:end="333:7">-&gt;</operator><name pos:start="333:8" pos:end="333:20">parse_context</name><operator pos:start="333:21" pos:end="333:21">.</operator><name pos:start="333:22" pos:end="333:26">state</name></name><operator pos:start="333:27" pos:end="333:27">=</operator> <operator pos:start="333:29" pos:end="333:29">-</operator><literal type="number" pos:start="333:30" pos:end="333:30">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="335:5" pos:end="343:5"><if pos:start="335:5" pos:end="343:5">if<condition pos:start="335:7" pos:end="335:88">(<expr pos:start="335:8" pos:end="335:87"><operator pos:start="335:8" pos:end="335:8">(</operator><name pos:start="335:9" pos:end="335:23"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:16">avctx</name><operator pos:start="335:17" pos:end="335:18">-&gt;</operator><name pos:start="335:19" pos:end="335:23">debug</name></name><operator pos:start="335:24" pos:end="335:24">&amp;</operator><operator pos:start="335:25" pos:end="335:25">(</operator><name pos:start="335:26" pos:end="335:40">FF_DEBUG_VIS_QP</name><operator pos:start="335:41" pos:end="335:41">|</operator><name pos:start="335:42" pos:end="335:61">FF_DEBUG_VIS_MB_TYPE</name><operator pos:start="335:62" pos:end="335:62">)</operator><operator pos:start="335:63" pos:end="335:63">)</operator> <operator pos:start="335:65" pos:end="335:66">||</operator> <operator pos:start="335:68" pos:end="335:68">(</operator><name pos:start="335:69" pos:end="335:86"><name pos:start="335:69" pos:end="335:69">s</name><operator pos:start="335:70" pos:end="335:71">-&gt;</operator><name pos:start="335:72" pos:end="335:76">avctx</name><operator pos:start="335:77" pos:end="335:78">-&gt;</operator><name pos:start="335:79" pos:end="335:86">debug_mv</name></name><operator pos:start="335:87" pos:end="335:87">)</operator></expr>)</condition><block pos:start="335:89" pos:end="343:5">{<block_content pos:start="337:8" pos:end="341:112">

       <expr_stmt pos:start="337:8" pos:end="337:112"><expr pos:start="337:8" pos:end="337:111"><name pos:start="337:8" pos:end="337:33"><name pos:start="337:8" pos:end="337:8">s</name><operator pos:start="337:9" pos:end="337:10">-&gt;</operator><name pos:start="337:11" pos:end="337:30">visualization_buffer</name><index pos:start="337:31" pos:end="337:33">[<expr pos:start="337:32" pos:end="337:32"><literal type="number" pos:start="337:32" pos:end="337:32">0</literal></expr>]</index></name> <operator pos:start="337:35" pos:end="337:35">=</operator> <call pos:start="337:37" pos:end="337:111"><name pos:start="337:37" pos:end="337:45">av_malloc</name><argument_list pos:start="337:46" pos:end="337:111">(<argument pos:start="337:47" pos:end="337:110"><expr pos:start="337:47" pos:end="337:110"><operator pos:start="337:47" pos:end="337:47">(</operator><name pos:start="337:48" pos:end="337:58"><name pos:start="337:48" pos:end="337:48">s</name><operator pos:start="337:49" pos:end="337:50">-&gt;</operator><name pos:start="337:51" pos:end="337:58">mb_width</name></name><operator pos:start="337:59" pos:end="337:59">*</operator><literal type="number" pos:start="337:60" pos:end="337:63">16</literal> <operator pos:start="337:63" pos:end="337:63">+</operator> <literal type="number" pos:start="337:65" pos:end="337:65">2</literal><operator pos:start="337:66" pos:end="337:66">*</operator><name pos:start="337:67" pos:end="337:76">EDGE_WIDTH</name><operator pos:start="337:77" pos:end="337:77">)</operator> <operator pos:start="337:79" pos:end="337:79">*</operator> <name pos:start="337:81" pos:end="337:92"><name pos:start="337:81" pos:end="337:81">s</name><operator pos:start="337:82" pos:end="337:83">-&gt;</operator><name pos:start="337:84" pos:end="337:92">mb_height</name></name><operator pos:start="337:93" pos:end="337:93">*</operator><literal type="number" pos:start="337:94" pos:end="337:97">16</literal> <operator pos:start="337:97" pos:end="337:97">+</operator> <literal type="number" pos:start="337:99" pos:end="337:99">2</literal><operator pos:start="337:100" pos:end="337:100">*</operator><name pos:start="337:101" pos:end="337:110">EDGE_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <expr_stmt pos:start="339:8" pos:end="339:112"><expr pos:start="339:8" pos:end="339:111"><name pos:start="339:8" pos:end="339:33"><name pos:start="339:8" pos:end="339:8">s</name><operator pos:start="339:9" pos:end="339:10">-&gt;</operator><name pos:start="339:11" pos:end="339:30">visualization_buffer</name><index pos:start="339:31" pos:end="339:33">[<expr pos:start="339:32" pos:end="339:32"><literal type="number" pos:start="339:32" pos:end="339:32">1</literal></expr>]</index></name> <operator pos:start="339:35" pos:end="339:35">=</operator> <call pos:start="339:37" pos:end="339:111"><name pos:start="339:37" pos:end="339:45">av_malloc</name><argument_list pos:start="339:46" pos:end="339:111">(<argument pos:start="339:47" pos:end="339:110"><expr pos:start="339:47" pos:end="339:110"><operator pos:start="339:47" pos:end="339:47">(</operator><name pos:start="339:48" pos:end="339:58"><name pos:start="339:48" pos:end="339:48">s</name><operator pos:start="339:49" pos:end="339:50">-&gt;</operator><name pos:start="339:51" pos:end="339:58">mb_width</name></name><operator pos:start="339:59" pos:end="339:59">*</operator><literal type="number" pos:start="339:60" pos:end="339:63">16</literal> <operator pos:start="339:63" pos:end="339:63">+</operator> <literal type="number" pos:start="339:65" pos:end="339:65">2</literal><operator pos:start="339:66" pos:end="339:66">*</operator><name pos:start="339:67" pos:end="339:76">EDGE_WIDTH</name><operator pos:start="339:77" pos:end="339:77">)</operator> <operator pos:start="339:79" pos:end="339:79">*</operator> <name pos:start="339:81" pos:end="339:92"><name pos:start="339:81" pos:end="339:81">s</name><operator pos:start="339:82" pos:end="339:83">-&gt;</operator><name pos:start="339:84" pos:end="339:92">mb_height</name></name><operator pos:start="339:93" pos:end="339:93">*</operator><literal type="number" pos:start="339:94" pos:end="339:97">16</literal> <operator pos:start="339:97" pos:end="339:97">+</operator> <literal type="number" pos:start="339:99" pos:end="339:99">2</literal><operator pos:start="339:100" pos:end="339:100">*</operator><name pos:start="339:101" pos:end="339:110">EDGE_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <expr_stmt pos:start="341:8" pos:end="341:112"><expr pos:start="341:8" pos:end="341:111"><name pos:start="341:8" pos:end="341:33"><name pos:start="341:8" pos:end="341:8">s</name><operator pos:start="341:9" pos:end="341:10">-&gt;</operator><name pos:start="341:11" pos:end="341:30">visualization_buffer</name><index pos:start="341:31" pos:end="341:33">[<expr pos:start="341:32" pos:end="341:32"><literal type="number" pos:start="341:32" pos:end="341:32">2</literal></expr>]</index></name> <operator pos:start="341:35" pos:end="341:35">=</operator> <call pos:start="341:37" pos:end="341:111"><name pos:start="341:37" pos:end="341:45">av_malloc</name><argument_list pos:start="341:46" pos:end="341:111">(<argument pos:start="341:47" pos:end="341:110"><expr pos:start="341:47" pos:end="341:110"><operator pos:start="341:47" pos:end="341:47">(</operator><name pos:start="341:48" pos:end="341:58"><name pos:start="341:48" pos:end="341:48">s</name><operator pos:start="341:49" pos:end="341:50">-&gt;</operator><name pos:start="341:51" pos:end="341:58">mb_width</name></name><operator pos:start="341:59" pos:end="341:59">*</operator><literal type="number" pos:start="341:60" pos:end="341:63">16</literal> <operator pos:start="341:63" pos:end="341:63">+</operator> <literal type="number" pos:start="341:65" pos:end="341:65">2</literal><operator pos:start="341:66" pos:end="341:66">*</operator><name pos:start="341:67" pos:end="341:76">EDGE_WIDTH</name><operator pos:start="341:77" pos:end="341:77">)</operator> <operator pos:start="341:79" pos:end="341:79">*</operator> <name pos:start="341:81" pos:end="341:92"><name pos:start="341:81" pos:end="341:81">s</name><operator pos:start="341:82" pos:end="341:83">-&gt;</operator><name pos:start="341:84" pos:end="341:92">mb_height</name></name><operator pos:start="341:93" pos:end="341:93">*</operator><literal type="number" pos:start="341:94" pos:end="341:97">16</literal> <operator pos:start="341:97" pos:end="341:97">+</operator> <literal type="number" pos:start="341:99" pos:end="341:99">2</literal><operator pos:start="341:100" pos:end="341:100">*</operator><name pos:start="341:101" pos:end="341:110">EDGE_WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="347:5" pos:end="347:31"><expr pos:start="347:5" pos:end="347:30"><name pos:start="347:5" pos:end="347:26"><name pos:start="347:5" pos:end="347:5">s</name><operator pos:start="347:6" pos:end="347:7">-&gt;</operator><name pos:start="347:8" pos:end="347:26">context_initialized</name></name> <operator pos:start="347:28" pos:end="347:28">=</operator> <literal type="number" pos:start="347:30" pos:end="347:30">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="351:5" pos:end="351:28"><expr pos:start="351:5" pos:end="351:27"><name pos:start="351:5" pos:end="351:24"><name pos:start="351:5" pos:end="351:5">s</name><operator pos:start="351:6" pos:end="351:7">-&gt;</operator><name pos:start="351:8" pos:end="351:21">thread_context</name><index pos:start="351:22" pos:end="351:24">[<expr pos:start="351:23" pos:end="351:23"><literal type="number" pos:start="351:23" pos:end="351:23">0</literal></expr>]</index></name><operator pos:start="351:25" pos:end="351:25">=</operator> <name pos:start="351:27" pos:end="351:27">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:37"><expr pos:start="353:5" pos:end="353:36"><name pos:start="353:5" pos:end="353:11">threads</name> <operator pos:start="353:13" pos:end="353:13">=</operator> <name pos:start="353:15" pos:end="353:36"><name pos:start="353:15" pos:end="353:15">s</name><operator pos:start="353:16" pos:end="353:17">-&gt;</operator><name pos:start="353:18" pos:end="353:22">avctx</name><operator pos:start="353:23" pos:end="353:24">-&gt;</operator><name pos:start="353:25" pos:end="353:36">thread_count</name></name></expr>;</expr_stmt>



    <for pos:start="357:5" pos:end="363:5">for<control pos:start="357:8" pos:end="357:28">(<init pos:start="357:9" pos:end="357:12"><expr pos:start="357:9" pos:end="357:11"><name pos:start="357:9" pos:end="357:9">i</name><operator pos:start="357:10" pos:end="357:10">=</operator><literal type="number" pos:start="357:11" pos:end="357:11">1</literal></expr>;</init> <condition pos:start="357:14" pos:end="357:23"><expr pos:start="357:14" pos:end="357:22"><name pos:start="357:14" pos:end="357:14">i</name><operator pos:start="357:15" pos:end="357:15">&lt;</operator><name pos:start="357:16" pos:end="357:22">threads</name></expr>;</condition> <incr pos:start="357:25" pos:end="357:27"><expr pos:start="357:25" pos:end="357:27"><name pos:start="357:25" pos:end="357:25">i</name><operator pos:start="357:26" pos:end="357:27">++</operator></expr></incr>)</control><block pos:start="357:29" pos:end="363:5">{<block_content pos:start="359:9" pos:end="361:64">

        <expr_stmt pos:start="359:9" pos:end="359:64"><expr pos:start="359:9" pos:end="359:63"><name pos:start="359:9" pos:end="359:28"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:25">thread_context</name><index pos:start="359:26" pos:end="359:28">[<expr pos:start="359:27" pos:end="359:27"><name pos:start="359:27" pos:end="359:27">i</name></expr>]</index></name><operator pos:start="359:29" pos:end="359:29">=</operator> <call pos:start="359:31" pos:end="359:63"><name pos:start="359:31" pos:end="359:39">av_malloc</name><argument_list pos:start="359:40" pos:end="359:63">(<argument pos:start="359:41" pos:end="359:62"><expr pos:start="359:41" pos:end="359:62"><sizeof pos:start="359:41" pos:end="359:62">sizeof<argument_list pos:start="359:47" pos:end="359:62">(<argument pos:start="359:48" pos:end="359:61"><expr pos:start="359:48" pos:end="359:61"><name pos:start="359:48" pos:end="359:61">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:64"><expr pos:start="361:9" pos:end="361:63"><call pos:start="361:9" pos:end="361:63"><name pos:start="361:9" pos:end="361:14">memcpy</name><argument_list pos:start="361:15" pos:end="361:63">(<argument pos:start="361:16" pos:end="361:35"><expr pos:start="361:16" pos:end="361:35"><name pos:start="361:16" pos:end="361:35"><name pos:start="361:16" pos:end="361:16">s</name><operator pos:start="361:17" pos:end="361:18">-&gt;</operator><name pos:start="361:19" pos:end="361:32">thread_context</name><index pos:start="361:33" pos:end="361:35">[<expr pos:start="361:34" pos:end="361:34"><name pos:start="361:34" pos:end="361:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="361:38" pos:end="361:38"><expr pos:start="361:38" pos:end="361:38"><name pos:start="361:38" pos:end="361:38">s</name></expr></argument>, <argument pos:start="361:41" pos:end="361:62"><expr pos:start="361:41" pos:end="361:62"><sizeof pos:start="361:41" pos:end="361:62">sizeof<argument_list pos:start="361:47" pos:end="361:62">(<argument pos:start="361:48" pos:end="361:61"><expr pos:start="361:48" pos:end="361:61"><name pos:start="361:48" pos:end="361:61">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="367:5" pos:end="377:5">for<control pos:start="367:8" pos:end="367:28">(<init pos:start="367:9" pos:end="367:12"><expr pos:start="367:9" pos:end="367:11"><name pos:start="367:9" pos:end="367:9">i</name><operator pos:start="367:10" pos:end="367:10">=</operator><literal type="number" pos:start="367:11" pos:end="367:11">0</literal></expr>;</init> <condition pos:start="367:14" pos:end="367:23"><expr pos:start="367:14" pos:end="367:22"><name pos:start="367:14" pos:end="367:14">i</name><operator pos:start="367:15" pos:end="367:15">&lt;</operator><name pos:start="367:16" pos:end="367:22">threads</name></expr>;</condition> <incr pos:start="367:25" pos:end="367:27"><expr pos:start="367:25" pos:end="367:27"><name pos:start="367:25" pos:end="367:25">i</name><operator pos:start="367:26" pos:end="367:27">++</operator></expr></incr>)</control><block pos:start="367:29" pos:end="377:5">{<block_content pos:start="369:9" pos:end="375:115">

        <if_stmt pos:start="369:9" pos:end="371:21"><if pos:start="369:9" pos:end="371:21">if<condition pos:start="369:11" pos:end="369:63">(<expr pos:start="369:12" pos:end="369:62"><call pos:start="369:12" pos:end="369:58"><name pos:start="369:12" pos:end="369:33">init_duplicate_context</name><argument_list pos:start="369:34" pos:end="369:58">(<argument pos:start="369:35" pos:end="369:54"><expr pos:start="369:35" pos:end="369:54"><name pos:start="369:35" pos:end="369:54"><name pos:start="369:35" pos:end="369:35">s</name><operator pos:start="369:36" pos:end="369:37">-&gt;</operator><name pos:start="369:38" pos:end="369:51">thread_context</name><index pos:start="369:52" pos:end="369:54">[<expr pos:start="369:53" pos:end="369:53"><name pos:start="369:53" pos:end="369:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="369:57" pos:end="369:57"><expr pos:start="369:57" pos:end="369:57"><name pos:start="369:57" pos:end="369:57">s</name></expr></argument>)</argument_list></call> <operator pos:start="369:60" pos:end="369:60">&lt;</operator> <literal type="number" pos:start="369:62" pos:end="369:62">0</literal></expr>)</condition><block type="pseudo" pos:start="371:12" pos:end="371:21"><block_content pos:start="371:12" pos:end="371:21">

           <goto pos:start="371:12" pos:end="371:21">goto <name pos:start="371:17" pos:end="371:20">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:115"><expr pos:start="373:9" pos:end="373:114"><name pos:start="373:9" pos:end="373:28"><name pos:start="373:9" pos:end="373:9">s</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:25">thread_context</name><index pos:start="373:26" pos:end="373:28">[<expr pos:start="373:27" pos:end="373:27"><name pos:start="373:27" pos:end="373:27">i</name></expr>]</index></name><operator pos:start="373:29" pos:end="373:30">-&gt;</operator><name pos:start="373:31" pos:end="373:40">start_mb_y</name><operator pos:start="373:41" pos:end="373:41">=</operator> <operator pos:start="373:43" pos:end="373:43">(</operator><name pos:start="373:44" pos:end="373:55"><name pos:start="373:44" pos:end="373:44">s</name><operator pos:start="373:45" pos:end="373:46">-&gt;</operator><name pos:start="373:47" pos:end="373:55">mb_height</name></name><operator pos:start="373:56" pos:end="373:56">*</operator><operator pos:start="373:57" pos:end="373:57">(</operator><name pos:start="373:58" pos:end="373:58">i</name>  <operator pos:start="373:61" pos:end="373:61">)</operator> <operator pos:start="373:63" pos:end="373:63">+</operator> <name pos:start="373:65" pos:end="373:86"><name pos:start="373:65" pos:end="373:65">s</name><operator pos:start="373:66" pos:end="373:67">-&gt;</operator><name pos:start="373:68" pos:end="373:72">avctx</name><operator pos:start="373:73" pos:end="373:74">-&gt;</operator><name pos:start="373:75" pos:end="373:86">thread_count</name></name><operator pos:start="373:87" pos:end="373:87">/</operator><literal type="number" pos:start="373:88" pos:end="373:88">2</literal><operator pos:start="373:89" pos:end="373:89">)</operator> <operator pos:start="373:91" pos:end="373:91">/</operator> <name pos:start="373:93" pos:end="373:114"><name pos:start="373:93" pos:end="373:93">s</name><operator pos:start="373:94" pos:end="373:95">-&gt;</operator><name pos:start="373:96" pos:end="373:100">avctx</name><operator pos:start="373:101" pos:end="373:102">-&gt;</operator><name pos:start="373:103" pos:end="373:114">thread_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:115"><expr pos:start="375:9" pos:end="375:114"><name pos:start="375:9" pos:end="375:28"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:25">thread_context</name><index pos:start="375:26" pos:end="375:28">[<expr pos:start="375:27" pos:end="375:27"><name pos:start="375:27" pos:end="375:27">i</name></expr>]</index></name><operator pos:start="375:29" pos:end="375:30">-&gt;</operator><name pos:start="375:31" pos:end="375:38">end_mb_y</name>  <operator pos:start="375:41" pos:end="375:41">=</operator> <operator pos:start="375:43" pos:end="375:43">(</operator><name pos:start="375:44" pos:end="375:55"><name pos:start="375:44" pos:end="375:44">s</name><operator pos:start="375:45" pos:end="375:46">-&gt;</operator><name pos:start="375:47" pos:end="375:55">mb_height</name></name><operator pos:start="375:56" pos:end="375:56">*</operator><operator pos:start="375:57" pos:end="375:57">(</operator><name pos:start="375:58" pos:end="375:58">i</name><operator pos:start="375:59" pos:end="375:59">+</operator><literal type="number" pos:start="375:60" pos:end="375:60">1</literal><operator pos:start="375:61" pos:end="375:61">)</operator> <operator pos:start="375:63" pos:end="375:63">+</operator> <name pos:start="375:65" pos:end="375:86"><name pos:start="375:65" pos:end="375:65">s</name><operator pos:start="375:66" pos:end="375:67">-&gt;</operator><name pos:start="375:68" pos:end="375:72">avctx</name><operator pos:start="375:73" pos:end="375:74">-&gt;</operator><name pos:start="375:75" pos:end="375:86">thread_count</name></name><operator pos:start="375:87" pos:end="375:87">/</operator><literal type="number" pos:start="375:88" pos:end="375:88">2</literal><operator pos:start="375:89" pos:end="375:89">)</operator> <operator pos:start="375:91" pos:end="375:91">/</operator> <name pos:start="375:93" pos:end="375:114"><name pos:start="375:93" pos:end="375:93">s</name><operator pos:start="375:94" pos:end="375:95">-&gt;</operator><name pos:start="375:96" pos:end="375:100">avctx</name><operator pos:start="375:101" pos:end="375:102">-&gt;</operator><name pos:start="375:103" pos:end="375:114">thread_count</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="381:5" pos:end="381:13">return <expr pos:start="381:12" pos:end="381:12"><literal type="number" pos:start="381:12" pos:end="381:12">0</literal></expr>;</return>

 <label pos:start="383:2" pos:end="383:6"><name pos:start="383:2" pos:end="383:5">fail</name>:</label>

    <expr_stmt pos:start="385:5" pos:end="385:22"><expr pos:start="385:5" pos:end="385:21"><call pos:start="385:5" pos:end="385:21"><name pos:start="385:5" pos:end="385:18">MPV_common_end</name><argument_list pos:start="385:19" pos:end="385:21">(<argument pos:start="385:20" pos:end="385:20"><expr pos:start="385:20" pos:end="385:20"><name pos:start="385:20" pos:end="385:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="387:5" pos:end="387:14">return <expr pos:start="387:12" pos:end="387:13"><operator pos:start="387:12" pos:end="387:12">-</operator><literal type="number" pos:start="387:13" pos:end="387:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
