<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13010.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">X86CPU</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:25">pc_new_cpu</name><parameter_list pos:start="1:26" pos:end="3:39">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:47">cpu_model</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:56">int64_t</name></type> <name pos:start="1:58" pos:end="1:64">apic_id</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:38"><decl pos:start="3:27" pos:end="3:38"><type pos:start="3:27" pos:end="3:38"><name pos:start="3:27" pos:end="3:31">Error</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier><modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:15">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">X86CPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:22">= <expr pos:start="7:19" pos:end="7:22"><name pos:start="7:19" pos:end="7:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:7">cpu</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:47"><name pos:start="13:11" pos:end="13:24">cpu_x86_create</name><argument_list pos:start="13:25" pos:end="13:47">(<argument pos:start="13:26" pos:end="13:34"><expr pos:start="13:26" pos:end="13:34"><name pos:start="13:26" pos:end="13:34">cpu_model</name></expr></argument>, <argument pos:start="13:37" pos:end="13:46"><expr pos:start="13:37" pos:end="13:46"><operator pos:start="13:37" pos:end="13:37">&amp;</operator><name pos:start="13:38" pos:end="13:46">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:26">(<expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:17">local_err</name> <operator pos:start="15:19" pos:end="15:20">!=</operator> <name pos:start="15:22" pos:end="15:25">NULL</name></expr>)</condition> <block pos:start="15:28" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <goto pos:start="17:9" pos:end="17:17">goto <name pos:start="17:14" pos:end="17:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:73"><expr pos:start="23:5" pos:end="23:72"><call pos:start="23:5" pos:end="23:72"><name pos:start="23:5" pos:end="23:27">object_property_set_int</name><argument_list pos:start="23:28" pos:end="23:72">(<argument pos:start="23:29" pos:end="23:39"><expr pos:start="23:29" pos:end="23:39"><call pos:start="23:29" pos:end="23:39"><name pos:start="23:29" pos:end="23:34">OBJECT</name><argument_list pos:start="23:35" pos:end="23:39">(<argument pos:start="23:36" pos:end="23:38"><expr pos:start="23:36" pos:end="23:38"><name pos:start="23:36" pos:end="23:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:42" pos:end="23:48"><expr pos:start="23:42" pos:end="23:48"><name pos:start="23:42" pos:end="23:48">apic_id</name></expr></argument>, <argument pos:start="23:51" pos:end="23:59"><expr pos:start="23:51" pos:end="23:59"><literal type="string" pos:start="23:51" pos:end="23:59">"apic-id"</literal></expr></argument>, <argument pos:start="23:62" pos:end="23:71"><expr pos:start="23:62" pos:end="23:71"><operator pos:start="23:62" pos:end="23:62">&amp;</operator><name pos:start="23:63" pos:end="23:71">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:72"><expr pos:start="25:5" pos:end="25:71"><call pos:start="25:5" pos:end="25:71"><name pos:start="25:5" pos:end="25:28">object_property_set_bool</name><argument_list pos:start="25:29" pos:end="25:71">(<argument pos:start="25:30" pos:end="25:40"><expr pos:start="25:30" pos:end="25:40"><call pos:start="25:30" pos:end="25:40"><name pos:start="25:30" pos:end="25:35">OBJECT</name><argument_list pos:start="25:36" pos:end="25:40">(<argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:43" pos:end="25:46"><expr pos:start="25:43" pos:end="25:46"><name pos:start="25:43" pos:end="25:46">true</name></expr></argument>, <argument pos:start="25:49" pos:end="25:58"><expr pos:start="25:49" pos:end="25:58"><literal type="string" pos:start="25:49" pos:end="25:58">"realized"</literal></expr></argument>, <argument pos:start="25:61" pos:end="25:70"><expr pos:start="25:61" pos:end="25:70"><operator pos:start="25:61" pos:end="25:61">&amp;</operator><name pos:start="25:62" pos:end="25:70">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="29:1" pos:end="29:4"><name pos:start="29:1" pos:end="29:3">out</name>:</label>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:18">(<expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:17">local_err</name></expr>)</condition> <block pos:start="31:20" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:19">

        <expr_stmt pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:40"><call pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:23">error_propagate</name><argument_list pos:start="33:24" pos:end="33:40">(<argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:28">errp</name></expr></argument>, <argument pos:start="33:31" pos:end="33:39"><expr pos:start="33:31" pos:end="33:39"><name pos:start="33:31" pos:end="33:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><call pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:20">object_unref</name><argument_list pos:start="35:21" pos:end="35:33">(<argument pos:start="35:22" pos:end="35:32"><expr pos:start="35:22" pos:end="35:32"><call pos:start="35:22" pos:end="35:32"><name pos:start="35:22" pos:end="35:27">OBJECT</name><argument_list pos:start="35:28" pos:end="35:32">(<argument pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:31">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:11">cpu</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">cpu</name></expr>;</return>

</block_content>}</block></function>
</unit>
