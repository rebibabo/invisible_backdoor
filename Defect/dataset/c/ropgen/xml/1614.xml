<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1614.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">mipsnet_receive</name><parameter_list pos:start="1:28" pos:end="1:74">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">buf</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:73"><decl pos:start="1:63" pos:end="1:73"><type pos:start="1:63" pos:end="1:73"><name pos:start="1:63" pos:end="1:68">size_t</name></type> <name pos:start="1:70" pos:end="1:73">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:26">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MIPSnetState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="9:1" pos:end="9:28">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:28">DEBUG_MIPSNET_RECEIVE</name></cpp:ifdef>

    <expr_stmt pos:start="11:5" pos:end="14:0"><expr pos:start="11:5" pos:end="11:47"><call pos:start="11:5" pos:end="11:47"><name pos:start="11:5" pos:end="11:10">printf</name><argument_list pos:start="11:11" pos:end="11:47">(<argument pos:start="11:12" pos:end="11:40"><expr pos:start="11:12" pos:end="11:40"><literal type="string" pos:start="11:12" pos:end="11:40">"mipsnet: receiving len=%d\n"</literal></expr></argument>, <argument pos:start="11:43" pos:end="11:46"><expr pos:start="11:43" pos:end="11:46"><name pos:start="11:43" pos:end="11:46">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:36"><name pos:start="15:10" pos:end="15:28">mipsnet_can_receive</name><argument_list pos:start="15:29" pos:end="15:36">(<argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:35">opaque</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:16"><expr pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:11">busy</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:33">/* Just accept everything. */</comment>



    <comment type="block" pos:start="29:5" pos:end="29:28">/* Write packet data. */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:10">memcpy</name><argument_list pos:start="31:11" pos:end="31:35">(<argument pos:start="31:12" pos:end="31:23"><expr pos:start="31:12" pos:end="31:23"><name pos:start="31:12" pos:end="31:23"><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:23">rx_buffer</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">buf</name></expr></argument>, <argument pos:start="31:31" pos:end="31:34"><expr pos:start="31:31" pos:end="31:34"><name pos:start="31:31" pos:end="31:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:15">rx_count</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:22">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:14">rx_read</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:55">/* Now we can signal we have received something. */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:13">intctl</name></name> <operator pos:start="43:15" pos:end="43:16">|=</operator> <name pos:start="43:18" pos:end="43:38">MIPSNET_INTCTL_RXDONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><call pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:22">mipsnet_update_irq</name><argument_list pos:start="45:23" pos:end="45:25">(<argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
