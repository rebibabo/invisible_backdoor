<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5473.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">set_pixel_format</name><parameter_list pos:start="1:29" pos:end="9:76">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">VncState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">vs</name></decl></parameter>,

			     <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:47">bits_per_pixel</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:58"><decl pos:start="3:50" pos:end="3:58"><type pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:58">depth</name></decl></parameter>,

			     <parameter pos:start="5:30" pos:end="5:48"><decl pos:start="5:30" pos:end="5:48"><type pos:start="5:30" pos:end="5:48"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:48">big_endian_flag</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:69"><decl pos:start="5:51" pos:end="5:69"><type pos:start="5:51" pos:end="5:69"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:69">true_color_flag</name></decl></parameter>,

			     <parameter pos:start="7:30" pos:end="7:40"><decl pos:start="7:30" pos:end="7:40"><type pos:start="7:30" pos:end="7:40"><name pos:start="7:30" pos:end="7:32">int</name></type> <name pos:start="7:34" pos:end="7:40">red_max</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:55"><decl pos:start="7:43" pos:end="7:55"><type pos:start="7:43" pos:end="7:55"><name pos:start="7:43" pos:end="7:45">int</name></type> <name pos:start="7:47" pos:end="7:55">green_max</name></decl></parameter>, <parameter pos:start="7:58" pos:end="7:69"><decl pos:start="7:58" pos:end="7:69"><type pos:start="7:58" pos:end="7:69"><name pos:start="7:58" pos:end="7:60">int</name></type> <name pos:start="7:62" pos:end="7:69">blue_max</name></decl></parameter>,

			     <parameter pos:start="9:30" pos:end="9:42"><decl pos:start="9:30" pos:end="9:42"><type pos:start="9:30" pos:end="9:42"><name pos:start="9:30" pos:end="9:32">int</name></type> <name pos:start="9:34" pos:end="9:42">red_shift</name></decl></parameter>, <parameter pos:start="9:45" pos:end="9:59"><decl pos:start="9:45" pos:end="9:59"><type pos:start="9:45" pos:end="9:59"><name pos:start="9:45" pos:end="9:47">int</name></type> <name pos:start="9:49" pos:end="9:59">green_shift</name></decl></parameter>, <parameter pos:start="9:62" pos:end="9:75"><decl pos:start="9:62" pos:end="9:75"><type pos:start="9:62" pos:end="9:75"><name pos:start="9:62" pos:end="9:64">int</name></type> <name pos:start="9:66" pos:end="9:75">blue_shift</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="139:1">{<block_content pos:start="13:5" pos:end="137:20">

    <decl_stmt pos:start="13:5" pos:end="18:0"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:28">host_big_endian_flag</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="17:1" pos:end="17:22">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:22">WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:24">host_big_endian_flag</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:24">host_big_endian_flag</name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:24">true_color_flag</name></expr>)</condition> <block pos:start="27:27" pos:end="35:5">{<block_content pos:start="29:5" pos:end="33:15">

    <label pos:start="29:5" pos:end="29:9"><name pos:start="29:5" pos:end="29:8">fail</name>:</label>

	<expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><call pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:24">vnc_client_error</name><argument_list pos:start="31:25" pos:end="31:28">(<argument pos:start="31:26" pos:end="31:27"><expr pos:start="31:26" pos:end="31:27"><name pos:start="31:26" pos:end="31:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="123:5"><if pos:start="37:5" pos:end="51:5">if <condition pos:start="37:8" pos:end="43:63">(<expr pos:start="37:9" pos:end="43:62"><name pos:start="37:9" pos:end="37:22">bits_per_pixel</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <literal type="number" pos:start="37:27" pos:end="37:28">32</literal> <operator pos:start="37:30" pos:end="37:31">&amp;&amp;</operator>

        <name pos:start="39:9" pos:end="39:28">host_big_endian_flag</name> <operator pos:start="39:30" pos:end="39:31">==</operator> <name pos:start="39:33" pos:end="39:47">big_endian_flag</name> <operator pos:start="39:49" pos:end="39:50">&amp;&amp;</operator>

        <name pos:start="41:9" pos:end="41:15">red_max</name> <operator pos:start="41:17" pos:end="41:18">==</operator> <literal type="number" pos:start="41:20" pos:end="41:23">0xff</literal> <operator pos:start="41:25" pos:end="41:26">&amp;&amp;</operator> <name pos:start="41:28" pos:end="41:36">green_max</name> <operator pos:start="41:38" pos:end="41:39">==</operator> <literal type="number" pos:start="41:41" pos:end="41:44">0xff</literal> <operator pos:start="41:46" pos:end="41:47">&amp;&amp;</operator> <name pos:start="41:49" pos:end="41:56">blue_max</name> <operator pos:start="41:58" pos:end="41:59">==</operator> <literal type="number" pos:start="41:61" pos:end="41:64">0xff</literal> <operator pos:start="41:66" pos:end="41:67">&amp;&amp;</operator>

        <name pos:start="43:9" pos:end="43:17">red_shift</name> <operator pos:start="43:19" pos:end="43:20">==</operator> <literal type="number" pos:start="43:22" pos:end="43:23">16</literal> <operator pos:start="43:25" pos:end="43:26">&amp;&amp;</operator> <name pos:start="43:28" pos:end="43:38">green_shift</name> <operator pos:start="43:40" pos:end="43:41">==</operator> <literal type="number" pos:start="43:43" pos:end="43:43">8</literal> <operator pos:start="43:45" pos:end="43:46">&amp;&amp;</operator> <name pos:start="43:48" pos:end="43:57">blue_shift</name> <operator pos:start="43:59" pos:end="43:60">==</operator> <literal type="number" pos:start="43:62" pos:end="43:62">0</literal></expr>)</condition> <block pos:start="43:65" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:53">

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:10">vs</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:17">depth</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <literal type="number" pos:start="45:21" pos:end="45:21">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:49"><expr pos:start="47:9" pos:end="47:48"><name pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:10">vs</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:24">write_pixels</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:48">vnc_write_pixels_copy</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:53"><expr pos:start="49:9" pos:end="49:52"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:10">vs</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:29">send_hextile_tile</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:52">send_hextile_tile_32</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="67:5">else

    if <condition pos:start="53:8" pos:end="59:63">(<expr pos:start="53:9" pos:end="59:62"><name pos:start="53:9" pos:end="53:22">bits_per_pixel</name> <operator pos:start="53:24" pos:end="53:25">==</operator> <literal type="number" pos:start="53:27" pos:end="53:28">16</literal> <operator pos:start="53:30" pos:end="53:31">&amp;&amp;</operator>

        <name pos:start="55:9" pos:end="55:28">host_big_endian_flag</name> <operator pos:start="55:30" pos:end="55:31">==</operator> <name pos:start="55:33" pos:end="55:47">big_endian_flag</name> <operator pos:start="55:49" pos:end="55:50">&amp;&amp;</operator>

        <name pos:start="57:9" pos:end="57:15">red_max</name> <operator pos:start="57:17" pos:end="57:18">==</operator> <literal type="number" pos:start="57:20" pos:end="57:21">31</literal> <operator pos:start="57:23" pos:end="57:24">&amp;&amp;</operator> <name pos:start="57:26" pos:end="57:34">green_max</name> <operator pos:start="57:36" pos:end="57:37">==</operator> <literal type="number" pos:start="57:39" pos:end="57:40">63</literal> <operator pos:start="57:42" pos:end="57:43">&amp;&amp;</operator> <name pos:start="57:45" pos:end="57:52">blue_max</name> <operator pos:start="57:54" pos:end="57:55">==</operator> <literal type="number" pos:start="57:57" pos:end="57:58">31</literal> <operator pos:start="57:60" pos:end="57:61">&amp;&amp;</operator>

        <name pos:start="59:9" pos:end="59:17">red_shift</name> <operator pos:start="59:19" pos:end="59:20">==</operator> <literal type="number" pos:start="59:22" pos:end="59:23">11</literal> <operator pos:start="59:25" pos:end="59:26">&amp;&amp;</operator> <name pos:start="59:28" pos:end="59:38">green_shift</name> <operator pos:start="59:40" pos:end="59:41">==</operator> <literal type="number" pos:start="59:43" pos:end="59:43">5</literal> <operator pos:start="59:45" pos:end="59:46">&amp;&amp;</operator> <name pos:start="59:48" pos:end="59:57">blue_shift</name> <operator pos:start="59:59" pos:end="59:60">==</operator> <literal type="number" pos:start="59:62" pos:end="59:62">0</literal></expr>)</condition> <block pos:start="59:65" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:53">

        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:10">vs</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:17">depth</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:21">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:49"><expr pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:10">vs</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:24">write_pixels</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:48">vnc_write_pixels_copy</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:53"><expr pos:start="65:9" pos:end="65:52"><name pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:10">vs</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:29">send_hextile_tile</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <name pos:start="65:33" pos:end="65:52">send_hextile_tile_16</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="81:5">else

    if <condition pos:start="69:8" pos:end="73:62">(<expr pos:start="69:9" pos:end="73:61"><name pos:start="69:9" pos:end="69:22">bits_per_pixel</name> <operator pos:start="69:24" pos:end="69:25">==</operator> <literal type="number" pos:start="69:27" pos:end="69:27">8</literal> <operator pos:start="69:29" pos:end="69:30">&amp;&amp;</operator>

        <name pos:start="71:9" pos:end="71:15">red_max</name> <operator pos:start="71:17" pos:end="71:18">==</operator> <literal type="number" pos:start="71:20" pos:end="71:20">7</literal> <operator pos:start="71:22" pos:end="71:23">&amp;&amp;</operator> <name pos:start="71:25" pos:end="71:33">green_max</name> <operator pos:start="71:35" pos:end="71:36">==</operator> <literal type="number" pos:start="71:38" pos:end="71:38">7</literal> <operator pos:start="71:40" pos:end="71:41">&amp;&amp;</operator> <name pos:start="71:43" pos:end="71:50">blue_max</name> <operator pos:start="71:52" pos:end="71:53">==</operator> <literal type="number" pos:start="71:55" pos:end="71:55">3</literal> <operator pos:start="71:57" pos:end="71:58">&amp;&amp;</operator>

        <name pos:start="73:9" pos:end="73:17">red_shift</name> <operator pos:start="73:19" pos:end="73:20">==</operator> <literal type="number" pos:start="73:22" pos:end="73:22">5</literal> <operator pos:start="73:24" pos:end="73:25">&amp;&amp;</operator> <name pos:start="73:27" pos:end="73:37">green_shift</name> <operator pos:start="73:39" pos:end="73:40">==</operator> <literal type="number" pos:start="73:42" pos:end="73:42">2</literal> <operator pos:start="73:44" pos:end="73:45">&amp;&amp;</operator> <name pos:start="73:47" pos:end="73:56">blue_shift</name> <operator pos:start="73:58" pos:end="73:59">==</operator> <literal type="number" pos:start="73:61" pos:end="73:61">0</literal></expr>)</condition> <block pos:start="73:64" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:52">

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:10">vs</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:17">depth</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:49"><expr pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:10">vs</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:24">write_pixels</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:48">vnc_write_pixels_copy</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:52"><expr pos:start="79:9" pos:end="79:51"><name pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:10">vs</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:29">send_hextile_tile</name></name> <operator pos:start="79:31" pos:end="79:31">=</operator> <name pos:start="79:33" pos:end="79:51">send_hextile_tile_8</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="123:5">else

    <block pos:start="83:5" pos:end="123:5">{<block_content pos:start="87:9" pos:end="121:58">

        <comment type="block" pos:start="85:9" pos:end="85:37">/* generic and slower case */</comment>

        <if_stmt pos:start="87:9" pos:end="93:22"><if pos:start="87:9" pos:end="93:22">if <condition pos:start="87:12" pos:end="91:33">(<expr pos:start="87:13" pos:end="91:32"><name pos:start="87:13" pos:end="87:26">bits_per_pixel</name> <operator pos:start="87:28" pos:end="87:29">!=</operator> <literal type="number" pos:start="87:31" pos:end="87:31">8</literal> <operator pos:start="87:33" pos:end="87:34">&amp;&amp;</operator>

            <name pos:start="89:13" pos:end="89:26">bits_per_pixel</name> <operator pos:start="89:28" pos:end="89:29">!=</operator> <literal type="number" pos:start="89:31" pos:end="89:32">16</literal> <operator pos:start="89:34" pos:end="89:35">&amp;&amp;</operator>

            <name pos:start="91:13" pos:end="91:26">bits_per_pixel</name> <operator pos:start="91:28" pos:end="91:29">!=</operator> <literal type="number" pos:start="91:31" pos:end="91:32">32</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:22"><block_content pos:start="93:13" pos:end="93:22">

            <goto pos:start="93:13" pos:end="93:22">goto <name pos:start="93:18" pos:end="93:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:22"><expr pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:10">vs</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:17">depth</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <literal type="number" pos:start="95:21" pos:end="95:21">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:34"><expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:10">vs</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:21">red_shift</name></name> <operator pos:start="97:23" pos:end="97:23">=</operator> <name pos:start="97:25" pos:end="97:33">red_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:10">vs</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:19">red_max</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:29">red_max</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:53"><expr pos:start="101:9" pos:end="101:52"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:10">vs</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:22">red_shift1</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:29">24</literal> <operator pos:start="101:29" pos:end="101:29">-</operator> <call pos:start="101:31" pos:end="101:52"><name pos:start="101:31" pos:end="101:43">compute_nbits</name><argument_list pos:start="101:44" pos:end="101:52">(<argument pos:start="101:45" pos:end="101:51"><expr pos:start="101:45" pos:end="101:51"><name pos:start="101:45" pos:end="101:51">red_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:10">vs</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:23">green_shift</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:37">green_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:34"><expr pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:10">vs</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:21">green_max</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:33">green_max</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:57"><expr pos:start="107:9" pos:end="107:56"><name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:10">vs</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:24">green_shift1</name></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <literal type="number" pos:start="107:28" pos:end="107:31">16</literal> <operator pos:start="107:31" pos:end="107:31">-</operator> <call pos:start="107:33" pos:end="107:56"><name pos:start="107:33" pos:end="107:45">compute_nbits</name><argument_list pos:start="107:46" pos:end="107:56">(<argument pos:start="107:47" pos:end="107:55"><expr pos:start="107:47" pos:end="107:55"><name pos:start="107:47" pos:end="107:55">green_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:36"><expr pos:start="109:9" pos:end="109:35"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:10">vs</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:22">blue_shift</name></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:35">blue_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:32"><expr pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:10">vs</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:20">blue_max</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:31">blue_max</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:54"><expr pos:start="113:9" pos:end="113:53"><name pos:start="113:9" pos:end="113:23"><name pos:start="113:9" pos:end="113:10">vs</name><operator pos:start="113:11" pos:end="113:12">-&gt;</operator><name pos:start="113:13" pos:end="113:23">blue_shift1</name></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <literal type="number" pos:start="113:27" pos:end="113:29">8</literal> <operator pos:start="113:29" pos:end="113:29">-</operator> <call pos:start="113:31" pos:end="113:53"><name pos:start="113:31" pos:end="113:43">compute_nbits</name><argument_list pos:start="113:44" pos:end="113:53">(<argument pos:start="113:45" pos:end="113:52"><expr pos:start="113:45" pos:end="113:52"><name pos:start="113:45" pos:end="113:52">blue_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:41"><expr pos:start="115:9" pos:end="115:40"><name pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:10">vs</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:19">pix_bpp</name></name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:36">bits_per_pixel</name> <operator pos:start="115:38" pos:end="115:38">/</operator> <literal type="number" pos:start="115:40" pos:end="115:40">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:45"><expr pos:start="117:9" pos:end="117:44"><name pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:10">vs</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:26">pix_big_endian</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:44">big_endian_flag</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:52"><expr pos:start="119:9" pos:end="119:51"><name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:10">vs</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:24">write_pixels</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:51">vnc_write_pixels_generic</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:58"><expr pos:start="121:9" pos:end="121:57"><name pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:10">vs</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:29">send_hextile_tile</name></name> <operator pos:start="121:31" pos:end="121:31">=</operator> <name pos:start="121:33" pos:end="121:57">send_hextile_tile_generic</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:58"><expr pos:start="127:5" pos:end="127:57"><call pos:start="127:5" pos:end="127:57"><name pos:start="127:5" pos:end="127:18">vnc_dpy_resize</name><argument_list pos:start="127:19" pos:end="127:57">(<argument pos:start="127:20" pos:end="127:25"><expr pos:start="127:20" pos:end="127:25"><name pos:start="127:20" pos:end="127:25"><name pos:start="127:20" pos:end="127:21">vs</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:25">ds</name></name></expr></argument>, <argument pos:start="127:28" pos:end="127:40"><expr pos:start="127:28" pos:end="127:40"><name pos:start="127:28" pos:end="127:40"><name pos:start="127:28" pos:end="127:29">vs</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:33">ds</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:40">width</name></name></expr></argument>, <argument pos:start="127:43" pos:end="127:56"><expr pos:start="127:43" pos:end="127:56"><name pos:start="127:43" pos:end="127:56"><name pos:start="127:43" pos:end="127:44">vs</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:48">ds</name><operator pos:start="127:49" pos:end="127:50">-&gt;</operator><name pos:start="127:51" pos:end="127:56">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:55"><expr pos:start="129:5" pos:end="129:54"><call pos:start="129:5" pos:end="129:54"><name pos:start="129:5" pos:end="129:10">memset</name><argument_list pos:start="129:11" pos:end="129:54">(<argument pos:start="129:12" pos:end="129:24"><expr pos:start="129:12" pos:end="129:24"><name pos:start="129:12" pos:end="129:24"><name pos:start="129:12" pos:end="129:13">vs</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:24">dirty_row</name></name></expr></argument>, <argument pos:start="129:27" pos:end="129:30"><expr pos:start="129:27" pos:end="129:30"><literal type="number" pos:start="129:27" pos:end="129:30">0xFF</literal></expr></argument>, <argument pos:start="129:33" pos:end="129:53"><expr pos:start="129:33" pos:end="129:53"><sizeof pos:start="129:33" pos:end="129:53">sizeof<argument_list pos:start="129:39" pos:end="129:53">(<argument pos:start="129:40" pos:end="129:52"><expr pos:start="129:40" pos:end="129:52"><name pos:start="129:40" pos:end="129:52"><name pos:start="129:40" pos:end="129:41">vs</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:52">dirty_row</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:64"><expr pos:start="131:5" pos:end="131:63"><call pos:start="131:5" pos:end="131:63"><name pos:start="131:5" pos:end="131:10">memset</name><argument_list pos:start="131:11" pos:end="131:63">(<argument pos:start="131:12" pos:end="131:23"><expr pos:start="131:12" pos:end="131:23"><name pos:start="131:12" pos:end="131:23"><name pos:start="131:12" pos:end="131:13">vs</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:23">old_data</name></name></expr></argument>, <argument pos:start="131:26" pos:end="131:27"><expr pos:start="131:26" pos:end="131:27"><literal type="number" pos:start="131:26" pos:end="131:27">42</literal></expr></argument>, <argument pos:start="131:30" pos:end="131:62"><expr pos:start="131:30" pos:end="131:62"><name pos:start="131:30" pos:end="131:45"><name pos:start="131:30" pos:end="131:31">vs</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:35">ds</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:45">linesize</name></name> <operator pos:start="131:47" pos:end="131:47">*</operator> <name pos:start="131:49" pos:end="131:62"><name pos:start="131:49" pos:end="131:50">vs</name><operator pos:start="131:51" pos:end="131:52">-&gt;</operator><name pos:start="131:53" pos:end="131:54">ds</name><operator pos:start="131:55" pos:end="131:56">-&gt;</operator><name pos:start="131:57" pos:end="131:62">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:24"><expr pos:start="135:5" pos:end="135:23"><call pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:21">vga_hw_invalidate</name><argument_list pos:start="135:22" pos:end="135:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:20"><expr pos:start="137:5" pos:end="137:19"><call pos:start="137:5" pos:end="137:19"><name pos:start="137:5" pos:end="137:17">vga_hw_update</name><argument_list pos:start="137:18" pos:end="137:19">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
