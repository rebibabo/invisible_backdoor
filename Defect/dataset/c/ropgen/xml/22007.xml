<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22007.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:17">SYNTH_FILTER_FUNC</name><argument_list pos:start="1:18" pos:end="1:23">(<argument pos:start="1:19" pos:end="1:22">sse2</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:22"><name pos:start="3:1" pos:end="3:17">SYNTH_FILTER_FUNC</name><argument_list pos:start="3:18" pos:end="3:22">(<argument pos:start="3:19" pos:end="3:21">avx</argument>)</argument_list></macro>




<function pos:start="8:1" pos:end="40:1"><type pos:start="8:1" pos:end="8:12"><name pos:start="8:1" pos:end="8:7">av_cold</name> <name pos:start="8:9" pos:end="8:12">void</name></type> <name pos:start="8:14" pos:end="8:37">ff_synth_filter_init_x86</name><parameter_list pos:start="8:38" pos:end="8:60">(<parameter pos:start="8:39" pos:end="8:59"><decl pos:start="8:39" pos:end="8:59"><type pos:start="8:39" pos:end="8:58"><name pos:start="8:39" pos:end="8:56">SynthFilterContext</name> <modifier pos:start="8:58" pos:end="8:58">*</modifier></type><name pos:start="8:59" pos:end="8:59">s</name></decl></parameter>)</parameter_list>

<block pos:start="10:1" pos:end="40:1">{<block_content pos:start="14:5" pos:end="37:5">

<cpp:if pos:start="12:1" pos:end="12:13">#<cpp:directive pos:start="12:2" pos:end="12:3">if</cpp:directive> <expr pos:start="12:5" pos:end="12:13"><name pos:start="12:5" pos:end="12:13">HAVE_YASM</name></expr></cpp:if>

    <decl_stmt pos:start="14:5" pos:end="19:0"><decl pos:start="14:5" pos:end="14:38"><type pos:start="14:5" pos:end="14:7"><name pos:start="14:5" pos:end="14:7">int</name></type> <name pos:start="14:9" pos:end="14:17">cpu_flags</name> <init pos:start="14:19" pos:end="14:38">= <expr pos:start="14:21" pos:end="14:38"><call pos:start="14:21" pos:end="14:38"><name pos:start="14:21" pos:end="14:36">av_get_cpu_flags</name><argument_list pos:start="14:37" pos:end="14:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="18:1" pos:end="18:15">#<cpp:directive pos:start="18:2" pos:end="18:3">if</cpp:directive> <expr pos:start="18:5" pos:end="18:15"><name pos:start="18:5" pos:end="18:15">ARCH_X86_32</name></expr></cpp:if>

    <if_stmt pos:start="20:5" pos:end="24:5"><if pos:start="20:5" pos:end="24:5">if <condition pos:start="20:8" pos:end="20:32">(<expr pos:start="20:9" pos:end="20:31"><call pos:start="20:9" pos:end="20:31"><name pos:start="20:9" pos:end="20:20">EXTERNAL_SSE</name><argument_list pos:start="20:21" pos:end="20:31">(<argument pos:start="20:22" pos:end="20:30"><expr pos:start="20:22" pos:end="20:30"><name pos:start="20:22" pos:end="20:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="20:34" pos:end="24:5">{<block_content pos:start="22:9" pos:end="22:49">

        <expr_stmt pos:start="22:9" pos:end="22:49"><expr pos:start="22:9" pos:end="22:48"><name pos:start="22:9" pos:end="22:29"><name pos:start="22:9" pos:end="22:9">s</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:29">synth_filter_float</name></name> <operator pos:start="22:31" pos:end="22:31">=</operator> <name pos:start="22:33" pos:end="22:48">synth_filter_sse</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>


    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:33">(<expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:21">EXTERNAL_SSE2</name><argument_list pos:start="27:22" pos:end="27:32">(<argument pos:start="27:23" pos:end="27:31"><expr pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:35" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:50">

        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:29">synth_filter_float</name></name> <operator pos:start="29:31" pos:end="29:31">=</operator> <name pos:start="29:33" pos:end="29:49">synth_filter_sse2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:32">(<expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:20">EXTERNAL_AVX</name><argument_list pos:start="33:21" pos:end="33:31">(<argument pos:start="33:22" pos:end="33:30"><expr pos:start="33:22" pos:end="33:30"><name pos:start="33:22" pos:end="33:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:34" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:49">

        <expr_stmt pos:start="35:9" pos:end="35:49"><expr pos:start="35:9" pos:end="35:48"><name pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:29">synth_filter_float</name></name> <operator pos:start="35:31" pos:end="35:31">=</operator> <name pos:start="35:33" pos:end="35:48">synth_filter_avx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>


</block_content>}</block></function></unit>
