<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25894.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">start_frame</name><parameter_list pos:start="1:24" pos:end="1:72">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:36">AVFilterLink</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">inlink</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:71"><decl pos:start="1:47" pos:end="1:71"><type pos:start="1:47" pos:end="1:71"><name pos:start="1:47" pos:end="1:63">AVFilterBufferRef</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:71">picref</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:70">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">PixdescTestContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:28">priv</name> <init pos:start="5:30" pos:end="5:48">= <expr pos:start="5:32" pos:end="5:48"><name pos:start="5:32" pos:end="5:48"><name pos:start="5:32" pos:end="5:37">inlink</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:42">dst</name><operator pos:start="5:43" pos:end="5:44">-&gt;</operator><name pos:start="5:45" pos:end="5:48">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVFilterLink</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:25">outlink</name>    <init pos:start="7:30" pos:end="7:54">= <expr pos:start="7:32" pos:end="7:54"><name pos:start="7:32" pos:end="7:54"><name pos:start="7:32" pos:end="7:37">inlink</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:42">dst</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:51">outputs</name><index pos:start="7:52" pos:end="7:54">[<expr pos:start="7:53" pos:end="7:53"><literal type="number" pos:start="7:53" pos:end="7:53">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVFilterBufferRef</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:32">outpicref</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:72"><expr pos:start="15:5" pos:end="17:71"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:11">outlink</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:20">out_buf</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="17:71"><name pos:start="15:24" pos:end="15:48">avfilter_get_video_buffer</name><argument_list pos:start="15:49" pos:end="17:71">(<argument pos:start="15:50" pos:end="15:56"><expr pos:start="15:50" pos:end="15:56"><name pos:start="15:50" pos:end="15:56">outlink</name></expr></argument>, <argument pos:start="15:59" pos:end="15:71"><expr pos:start="15:59" pos:end="15:71"><name pos:start="15:59" pos:end="15:71">AV_PERM_WRITE</name></expr></argument>,

                                                <argument pos:start="17:49" pos:end="17:58"><expr pos:start="17:49" pos:end="17:58"><name pos:start="17:49" pos:end="17:58"><name pos:start="17:49" pos:end="17:55">outlink</name><operator pos:start="17:56" pos:end="17:57">-&gt;</operator><name pos:start="17:58" pos:end="17:58">w</name></name></expr></argument>, <argument pos:start="17:61" pos:end="17:70"><expr pos:start="17:61" pos:end="17:70"><name pos:start="17:61" pos:end="17:70"><name pos:start="17:61" pos:end="17:67">outlink</name><operator pos:start="17:68" pos:end="17:69">-&gt;</operator><name pos:start="17:70" pos:end="17:70">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:13">outpicref</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:32"><name pos:start="19:17" pos:end="19:23">outlink</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:32">out_buf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:34">avfilter_copy_buffer_ref_props</name><argument_list pos:start="21:35" pos:end="21:53">(<argument pos:start="21:36" pos:end="21:44"><expr pos:start="21:36" pos:end="21:44"><name pos:start="21:36" pos:end="21:44">outpicref</name></expr></argument>, <argument pos:start="21:47" pos:end="21:52"><expr pos:start="21:47" pos:end="21:52"><name pos:start="21:47" pos:end="21:52">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="41:5">for <control pos:start="25:9" pos:end="25:27">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:21">4</literal></expr>;</condition> <incr pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:24">i</name><operator pos:start="25:25" pos:end="25:26">++</operator></expr></incr>)</control> <block pos:start="25:29" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:9">

        <decl_stmt pos:start="27:9" pos:end="27:27"><decl pos:start="27:9" pos:end="27:26"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">h</name> <init pos:start="27:15" pos:end="27:26">= <expr pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:23">outlink</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:26">h</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:68"><expr pos:start="29:9" pos:end="29:67"><name pos:start="29:9" pos:end="29:9">h</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <ternary pos:start="29:13" pos:end="29:67"><condition pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:13">i</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <literal type="number" pos:start="29:18" pos:end="29:18">1</literal> <operator pos:start="29:20" pos:end="29:21">||</operator> <name pos:start="29:23" pos:end="29:23">i</name> <operator pos:start="29:25" pos:end="29:26">==</operator> <literal type="number" pos:start="29:28" pos:end="29:28">2</literal></expr> ?</condition><then pos:start="29:32" pos:end="29:63"> <expr pos:start="29:32" pos:end="29:63"><name pos:start="29:32" pos:end="29:32">h</name><operator pos:start="29:33" pos:end="29:34">&gt;&gt;</operator><name pos:start="29:35" pos:end="29:63"><name pos:start="29:35" pos:end="29:38">priv</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:48">pix_desc</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:63">log2_chroma_h</name></name></expr> </then><else pos:start="29:65" pos:end="29:67">: <expr pos:start="29:67" pos:end="29:67"><name pos:start="29:67" pos:end="29:67">h</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:31">(<expr pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:21">outpicref</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:27">data</name><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><name pos:start="31:29" pos:end="31:29">i</name></expr>]</index></name></expr>)</condition> <block pos:start="31:33" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:63">

            <decl_stmt pos:start="33:13" pos:end="35:82"><decl pos:start="33:13" pos:end="35:81"><type pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:19">uint8_t</name> <modifier pos:start="33:21" pos:end="33:21">*</modifier></type><name pos:start="33:22" pos:end="33:25">data</name> <init pos:start="33:27" pos:end="35:81">= <expr pos:start="33:29" pos:end="35:81"><name pos:start="33:29" pos:end="33:46"><name pos:start="33:29" pos:end="33:37">outpicref</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:43">data</name><index pos:start="33:44" pos:end="33:46">[<expr pos:start="33:45" pos:end="33:45"><name pos:start="33:45" pos:end="33:45">i</name></expr>]</index></name> <operator pos:start="33:48" pos:end="33:48">+</operator>

                <operator pos:start="35:17" pos:end="35:17">(</operator><ternary pos:start="35:18" pos:end="35:80"><condition pos:start="35:18" pos:end="35:45"><expr pos:start="35:18" pos:end="35:43"><name pos:start="35:18" pos:end="35:39"><name pos:start="35:18" pos:end="35:26">outpicref</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:36">linesize</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">i</name></expr>]</index></name> <operator pos:start="35:41" pos:end="35:41">&gt;</operator> <literal type="number" pos:start="35:43" pos:end="35:43">0</literal></expr> ?</condition><then pos:start="35:47" pos:end="35:47"> <expr pos:start="35:47" pos:end="35:47"><literal type="number" pos:start="35:47" pos:end="35:47">0</literal></expr> </then><else pos:start="35:49" pos:end="35:80">: <expr pos:start="35:51" pos:end="35:80"><name pos:start="35:51" pos:end="35:72"><name pos:start="35:51" pos:end="35:59">outpicref</name><operator pos:start="35:60" pos:end="35:61">-&gt;</operator><name pos:start="35:62" pos:end="35:69">linesize</name><index pos:start="35:70" pos:end="35:72">[<expr pos:start="35:71" pos:end="35:71"><name pos:start="35:71" pos:end="35:71">i</name></expr>]</index></name> <operator pos:start="35:74" pos:end="35:74">*</operator> <operator pos:start="35:76" pos:end="35:76">(</operator><name pos:start="35:77" pos:end="35:77">h</name><operator pos:start="35:78" pos:end="35:78">-</operator><literal type="number" pos:start="35:79" pos:end="35:79">1</literal><operator pos:start="35:80" pos:end="35:80">)</operator></expr></else></ternary><operator pos:start="35:81" pos:end="35:81">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:63"><expr pos:start="37:13" pos:end="37:62"><call pos:start="37:13" pos:end="37:62"><name pos:start="37:13" pos:end="37:18">memset</name><argument_list pos:start="37:19" pos:end="37:62">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">data</name></expr></argument>, <argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr></argument>, <argument pos:start="37:29" pos:end="37:61"><expr pos:start="37:29" pos:end="37:61"><call pos:start="37:29" pos:end="37:57"><name pos:start="37:29" pos:end="37:33">FFABS</name><argument_list pos:start="37:34" pos:end="37:57">(<argument pos:start="37:35" pos:end="37:56"><expr pos:start="37:35" pos:end="37:56"><name pos:start="37:35" pos:end="37:56"><name pos:start="37:35" pos:end="37:43">outpicref</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:53">linesize</name><index pos:start="37:54" pos:end="37:56">[<expr pos:start="37:55" pos:end="37:55"><name pos:start="37:55" pos:end="37:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="37:59" pos:end="37:59">*</operator> <name pos:start="37:61" pos:end="37:61">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="45:5" pos:end="45:22">/* copy palette */</comment>

    <if_stmt pos:start="47:5" pos:end="49:62"><if pos:start="47:5" pos:end="49:62">if <condition pos:start="47:8" pos:end="47:44">(<expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:12">priv</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:22">pix_desc</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:29">flags</name></name> <operator pos:start="47:31" pos:end="47:31">&amp;</operator> <name pos:start="47:33" pos:end="47:43">PIX_FMT_PAL</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:62"><block_content pos:start="49:9" pos:end="49:62">

        <expr_stmt pos:start="49:9" pos:end="49:62"><expr pos:start="49:9" pos:end="49:61"><call pos:start="49:9" pos:end="49:61"><name pos:start="49:9" pos:end="49:14">memcpy</name><argument_list pos:start="49:15" pos:end="49:61">(<argument pos:start="49:16" pos:end="49:33"><expr pos:start="49:16" pos:end="49:33"><name pos:start="49:16" pos:end="49:33"><name pos:start="49:16" pos:end="49:24">outpicref</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:30">data</name><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="49:36" pos:end="49:53"><expr pos:start="49:36" pos:end="49:53"><name pos:start="49:36" pos:end="49:53"><name pos:start="49:36" pos:end="49:44">outpicref</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:50">data</name><index pos:start="49:51" pos:end="49:53">[<expr pos:start="49:52" pos:end="49:52"><literal type="number" pos:start="49:52" pos:end="49:52">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="49:56" pos:end="49:60"><expr pos:start="49:56" pos:end="49:60"><literal type="number" pos:start="49:56" pos:end="49:58">256</literal><operator pos:start="49:59" pos:end="49:59">*</operator><literal type="number" pos:start="49:60" pos:end="49:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:70"><expr pos:start="53:5" pos:end="53:69"><call pos:start="53:5" pos:end="53:69"><name pos:start="53:5" pos:end="53:24">avfilter_start_frame</name><argument_list pos:start="53:25" pos:end="53:69">(<argument pos:start="53:26" pos:end="53:32"><expr pos:start="53:26" pos:end="53:32"><name pos:start="53:26" pos:end="53:32">outlink</name></expr></argument>, <argument pos:start="53:35" pos:end="53:68"><expr pos:start="53:35" pos:end="53:68"><call pos:start="53:35" pos:end="53:68"><name pos:start="53:35" pos:end="53:53">avfilter_ref_buffer</name><argument_list pos:start="53:54" pos:end="53:68">(<argument pos:start="53:55" pos:end="53:63"><expr pos:start="53:55" pos:end="53:63"><name pos:start="53:55" pos:end="53:63">outpicref</name></expr></argument>, <argument pos:start="53:66" pos:end="53:67"><expr pos:start="53:66" pos:end="53:67"><operator pos:start="53:66" pos:end="53:66">~</operator><literal type="number" pos:start="53:67" pos:end="53:67">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
