<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20740.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">helper_sysenter</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">CPUX86State</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:33">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:30">(<expr pos:start="5:9" pos:end="5:29"><name pos:start="5:9" pos:end="5:24"><name pos:start="5:9" pos:end="5:11">env</name><operator pos:start="5:12" pos:end="5:13">-&gt;</operator><name pos:start="5:14" pos:end="5:24">sysenter_cs</name></name> <operator pos:start="5:26" pos:end="5:27">==</operator> <literal type="number" pos:start="5:29" pos:end="5:29">0</literal></expr>)</condition> <block pos:start="5:32" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:48">

        <expr_stmt pos:start="7:9" pos:end="7:48"><expr pos:start="7:9" pos:end="7:47"><call pos:start="7:9" pos:end="7:47"><name pos:start="7:9" pos:end="7:27">raise_exception_err</name><argument_list pos:start="7:28" pos:end="7:47">(<argument pos:start="7:29" pos:end="7:31"><expr pos:start="7:29" pos:end="7:31"><name pos:start="7:29" pos:end="7:31">env</name></expr></argument>, <argument pos:start="7:34" pos:end="7:43"><expr pos:start="7:34" pos:end="7:43"><name pos:start="7:34" pos:end="7:43">EXCP0D_GPF</name></expr></argument>, <argument pos:start="7:46" pos:end="7:46"><expr pos:start="7:46" pos:end="7:46"><literal type="number" pos:start="7:46" pos:end="7:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:50"><expr pos:start="11:5" pos:end="11:49"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:15">eflags</name></name> <operator pos:start="11:17" pos:end="11:18">&amp;=</operator> <operator pos:start="11:20" pos:end="11:20">~</operator><operator pos:start="11:21" pos:end="11:21">(</operator><name pos:start="11:22" pos:end="11:28">VM_MASK</name> <operator pos:start="11:30" pos:end="11:30">|</operator> <name pos:start="11:32" pos:end="11:38">IF_MASK</name> <operator pos:start="11:40" pos:end="11:40">|</operator> <name pos:start="11:42" pos:end="11:48">RF_MASK</name><operator pos:start="11:49" pos:end="11:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="18:0"><expr pos:start="13:5" pos:end="13:27"><call pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:19">cpu_x86_set_cpl</name><argument_list pos:start="13:20" pos:end="13:27">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">env</name></expr></argument>, <argument pos:start="13:26" pos:end="13:26"><expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="17:1" pos:end="17:20">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="19:5" pos:end="49:5"><if pos:start="19:5" pos:end="33:5">if <condition pos:start="19:8" pos:end="19:34">(<expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:19">hflags</name></name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <name pos:start="19:23" pos:end="19:33">HF_LMA_MASK</name></expr>)</condition> <block pos:start="19:36" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:44">

        <expr_stmt pos:start="21:9" pos:end="31:44"><expr pos:start="21:9" pos:end="31:43"><call pos:start="21:9" pos:end="31:43"><name pos:start="21:9" pos:end="21:30">cpu_x86_load_seg_cache</name><argument_list pos:start="21:31" pos:end="31:43">(<argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">env</name></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">R_CS</name></expr></argument>, <argument pos:start="21:43" pos:end="21:67"><expr pos:start="21:43" pos:end="21:67"><name pos:start="21:43" pos:end="21:58"><name pos:start="21:43" pos:end="21:45">env</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:58">sysenter_cs</name></name> <operator pos:start="21:60" pos:end="21:60">&amp;</operator> <literal type="number" pos:start="21:62" pos:end="21:67">0xfffc</literal></expr></argument>,

                               <argument pos:start="23:32" pos:end="23:32"><expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">0</literal></expr></argument>, <argument pos:start="23:35" pos:end="23:44"><expr pos:start="23:35" pos:end="23:44"><literal type="number" pos:start="23:35" pos:end="23:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="25:32" pos:end="31:42"><expr pos:start="25:32" pos:end="31:42"><name pos:start="25:32" pos:end="25:42">DESC_G_MASK</name> <operator pos:start="25:44" pos:end="25:44">|</operator> <name pos:start="25:46" pos:end="25:56">DESC_B_MASK</name> <operator pos:start="25:58" pos:end="25:58">|</operator> <name pos:start="25:60" pos:end="25:70">DESC_P_MASK</name> <operator pos:start="25:72" pos:end="25:72">|</operator>

                               <name pos:start="27:32" pos:end="27:42">DESC_S_MASK</name> <operator pos:start="27:44" pos:end="27:44">|</operator>

                               <name pos:start="29:32" pos:end="29:43">DESC_CS_MASK</name> <operator pos:start="29:45" pos:end="29:45">|</operator> <name pos:start="29:47" pos:end="29:57">DESC_R_MASK</name> <operator pos:start="29:59" pos:end="29:59">|</operator> <name pos:start="29:61" pos:end="29:71">DESC_A_MASK</name> <operator pos:start="29:73" pos:end="29:73">|</operator>

                               <name pos:start="31:32" pos:end="31:42">DESC_L_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="49:5">else

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    <block pos:start="37:5" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:73">

        <expr_stmt pos:start="39:9" pos:end="47:73"><expr pos:start="39:9" pos:end="47:72"><call pos:start="39:9" pos:end="47:72"><name pos:start="39:9" pos:end="39:30">cpu_x86_load_seg_cache</name><argument_list pos:start="39:31" pos:end="47:72">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">env</name></expr></argument>, <argument pos:start="39:37" pos:end="39:40"><expr pos:start="39:37" pos:end="39:40"><name pos:start="39:37" pos:end="39:40">R_CS</name></expr></argument>, <argument pos:start="39:43" pos:end="39:67"><expr pos:start="39:43" pos:end="39:67"><name pos:start="39:43" pos:end="39:58"><name pos:start="39:43" pos:end="39:45">env</name><operator pos:start="39:46" pos:end="39:47">-&gt;</operator><name pos:start="39:48" pos:end="39:58">sysenter_cs</name></name> <operator pos:start="39:60" pos:end="39:60">&amp;</operator> <literal type="number" pos:start="39:62" pos:end="39:67">0xfffc</literal></expr></argument>,

                               <argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr></argument>, <argument pos:start="41:35" pos:end="41:44"><expr pos:start="41:35" pos:end="41:44"><literal type="number" pos:start="41:35" pos:end="41:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="43:32" pos:end="47:71"><expr pos:start="43:32" pos:end="47:71"><name pos:start="43:32" pos:end="43:42">DESC_G_MASK</name> <operator pos:start="43:44" pos:end="43:44">|</operator> <name pos:start="43:46" pos:end="43:56">DESC_B_MASK</name> <operator pos:start="43:58" pos:end="43:58">|</operator> <name pos:start="43:60" pos:end="43:70">DESC_P_MASK</name> <operator pos:start="43:72" pos:end="43:72">|</operator>

                               <name pos:start="45:32" pos:end="45:42">DESC_S_MASK</name> <operator pos:start="45:44" pos:end="45:44">|</operator>

                               <name pos:start="47:32" pos:end="47:43">DESC_CS_MASK</name> <operator pos:start="47:45" pos:end="47:45">|</operator> <name pos:start="47:47" pos:end="47:57">DESC_R_MASK</name> <operator pos:start="47:59" pos:end="47:59">|</operator> <name pos:start="47:61" pos:end="47:71">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="59:54"><expr pos:start="51:5" pos:end="59:53"><call pos:start="51:5" pos:end="59:53"><name pos:start="51:5" pos:end="51:26">cpu_x86_load_seg_cache</name><argument_list pos:start="51:27" pos:end="59:53">(<argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:30">env</name></expr></argument>, <argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">R_SS</name></expr></argument>, <argument pos:start="51:39" pos:end="51:69"><expr pos:start="51:39" pos:end="51:69"><operator pos:start="51:39" pos:end="51:39">(</operator><name pos:start="51:40" pos:end="51:55"><name pos:start="51:40" pos:end="51:42">env</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:55">sysenter_cs</name></name> <operator pos:start="51:57" pos:end="51:57">+</operator> <literal type="number" pos:start="51:59" pos:end="51:59">8</literal><operator pos:start="51:60" pos:end="51:60">)</operator> <operator pos:start="51:62" pos:end="51:62">&amp;</operator> <literal type="number" pos:start="51:64" pos:end="51:69">0xfffc</literal></expr></argument>,

                           <argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr></argument>, <argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><literal type="number" pos:start="53:31" pos:end="53:40">0xffffffff</literal></expr></argument>,

                           <argument pos:start="55:28" pos:end="59:52"><expr pos:start="55:28" pos:end="59:52"><name pos:start="55:28" pos:end="55:38">DESC_G_MASK</name> <operator pos:start="55:40" pos:end="55:40">|</operator> <name pos:start="55:42" pos:end="55:52">DESC_B_MASK</name> <operator pos:start="55:54" pos:end="55:54">|</operator> <name pos:start="55:56" pos:end="55:66">DESC_P_MASK</name> <operator pos:start="55:68" pos:end="55:68">|</operator>

                           <name pos:start="57:28" pos:end="57:38">DESC_S_MASK</name> <operator pos:start="57:40" pos:end="57:40">|</operator>

                           <name pos:start="59:28" pos:end="59:38">DESC_W_MASK</name> <operator pos:start="59:40" pos:end="59:40">|</operator> <name pos:start="59:42" pos:end="59:52">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:41"><expr pos:start="61:5" pos:end="61:40"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:7">env</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:13">regs</name><index pos:start="61:14" pos:end="61:20">[<expr pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:19">R_ESP</name></expr>]</index></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:40"><name pos:start="61:24" pos:end="61:26">env</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:40">sysenter_esp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:12"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:12">eip</name></name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:32"><name pos:start="63:16" pos:end="63:18">env</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:32">sysenter_eip</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
