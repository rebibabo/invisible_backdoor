<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15898.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">test_io_channel_setup_sync</name><parameter_list pos:start="1:39" pos:end="7:56">(<parameter pos:start="1:40" pos:end="1:65"><decl pos:start="1:40" pos:end="1:65"><type pos:start="1:40" pos:end="1:65"><name pos:start="1:40" pos:end="1:52">SocketAddress</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:65">listen_addr</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:66"><decl pos:start="3:40" pos:end="3:66"><type pos:start="3:40" pos:end="3:66"><name pos:start="3:40" pos:end="3:52">SocketAddress</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:66">connect_addr</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:55"><decl pos:start="5:40" pos:end="5:55"><type pos:start="5:40" pos:end="5:55"><name pos:start="5:40" pos:end="5:49">QIOChannel</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier><modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:55">src</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:55"><decl pos:start="7:40" pos:end="7:55"><type pos:start="7:40" pos:end="7:55"><name pos:start="7:40" pos:end="7:49">QIOChannel</name> <modifier pos:start="7:51" pos:end="7:51">*</modifier><modifier pos:start="7:52" pos:end="7:52">*</modifier></type><name pos:start="7:53" pos:end="7:55">dst</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="65:1">{<block_content pos:start="11:5" pos:end="63:31">

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">QIOChannelSocket</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:26">lioc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:8">lioc</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:35"><name pos:start="15:12" pos:end="15:33">qio_channel_socket_new</name><argument_list pos:start="15:34" pos:end="15:35">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:68"><expr pos:start="17:5" pos:end="17:67"><call pos:start="17:5" pos:end="17:67"><name pos:start="17:5" pos:end="17:34">qio_channel_socket_listen_sync</name><argument_list pos:start="17:35" pos:end="17:67">(<argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><name pos:start="17:36" pos:end="17:39">lioc</name></expr></argument>, <argument pos:start="17:42" pos:end="17:52"><expr pos:start="17:42" pos:end="17:52"><name pos:start="17:42" pos:end="17:52">listen_addr</name></expr></argument>, <argument pos:start="17:55" pos:end="17:66"><expr pos:start="17:55" pos:end="17:66"><operator pos:start="17:55" pos:end="17:55">&amp;</operator><name pos:start="17:56" pos:end="17:66">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="37:5"><if pos:start="21:5" pos:end="37:5">if <condition pos:start="21:8" pos:end="21:54">(<expr pos:start="21:9" pos:end="21:53"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:19">listen_addr</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:25">type</name></name> <operator pos:start="21:27" pos:end="21:28">==</operator> <name pos:start="21:30" pos:end="21:53">SOCKET_ADDRESS_KIND_INET</name></expr>)</condition> <block pos:start="21:56" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:39">

        <decl_stmt pos:start="23:9" pos:end="25:32"><decl pos:start="23:9" pos:end="25:31"><type pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:21">SocketAddress</name> <modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:28">laddr</name> <init pos:start="23:30" pos:end="25:31">= <expr pos:start="23:32" pos:end="25:31"><call pos:start="23:32" pos:end="25:31"><name pos:start="23:32" pos:end="23:67">qio_channel_socket_get_local_address</name><argument_list pos:start="23:68" pos:end="25:31">(

            <argument pos:start="25:13" pos:end="25:16"><expr pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:16">lioc</name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:30">error_abort</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><call pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:14">g_free</name><argument_list pos:start="29:15" pos:end="29:47">(<argument pos:start="29:16" pos:end="29:46"><expr pos:start="29:16" pos:end="29:46"><name pos:start="29:16" pos:end="29:46"><name pos:start="29:16" pos:end="29:27">connect_addr</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:30">u</name><operator pos:start="29:31" pos:end="29:31">.</operator><name pos:start="29:32" pos:end="29:35">inet</name><operator pos:start="29:36" pos:end="29:36">.</operator><name pos:start="29:37" pos:end="29:40">data</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:46">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:77"><expr pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:20">connect_addr</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:23">u</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:28">inet</name><operator pos:start="31:29" pos:end="31:29">.</operator><name pos:start="31:30" pos:end="31:33">data</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:39">port</name></name> <operator pos:start="31:41" pos:end="31:41">=</operator> <call pos:start="31:43" pos:end="31:76"><name pos:start="31:43" pos:end="31:50">g_strdup</name><argument_list pos:start="31:51" pos:end="31:76">(<argument pos:start="31:52" pos:end="31:75"><expr pos:start="31:52" pos:end="31:75"><name pos:start="31:52" pos:end="31:75"><name pos:start="31:52" pos:end="31:56">laddr</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:59">u</name><operator pos:start="31:60" pos:end="31:60">.</operator><name pos:start="31:61" pos:end="31:64">inet</name><operator pos:start="31:65" pos:end="31:65">.</operator><name pos:start="31:66" pos:end="31:69">data</name><operator pos:start="31:70" pos:end="31:71">-&gt;</operator><name pos:start="31:72" pos:end="31:75">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><call pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:31">qapi_free_SocketAddress</name><argument_list pos:start="35:32" pos:end="35:38">(<argument pos:start="35:33" pos:end="35:37"><expr pos:start="35:33" pos:end="35:37"><name pos:start="35:33" pos:end="35:37">laddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:49"><expr pos:start="41:5" pos:end="41:48"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:8">src</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:48"><name pos:start="41:12" pos:end="41:22">QIO_CHANNEL</name><argument_list pos:start="41:23" pos:end="41:48">(<argument pos:start="41:24" pos:end="41:47"><expr pos:start="41:24" pos:end="41:47"><call pos:start="41:24" pos:end="41:47"><name pos:start="41:24" pos:end="41:45">qio_channel_socket_new</name><argument_list pos:start="41:46" pos:end="41:47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:62"><expr pos:start="43:5" pos:end="45:61"><call pos:start="43:5" pos:end="45:61"><name pos:start="43:5" pos:end="43:35">qio_channel_socket_connect_sync</name><argument_list pos:start="43:36" pos:end="45:61">(

        <argument pos:start="45:9" pos:end="45:32"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:26">QIO_CHANNEL_SOCKET</name><argument_list pos:start="45:27" pos:end="45:32">(<argument pos:start="45:28" pos:end="45:31"><expr pos:start="45:28" pos:end="45:31"><operator pos:start="45:28" pos:end="45:28">*</operator><name pos:start="45:29" pos:end="45:31">src</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:35" pos:end="45:46"><expr pos:start="45:35" pos:end="45:46"><name pos:start="45:35" pos:end="45:46">connect_addr</name></expr></argument>, <argument pos:start="45:49" pos:end="45:60"><expr pos:start="45:49" pos:end="45:60"><operator pos:start="45:49" pos:end="45:49">&amp;</operator><name pos:start="45:50" pos:end="45:60">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><call pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:25">qio_channel_set_delay</name><argument_list pos:start="47:26" pos:end="47:38">(<argument pos:start="47:27" pos:end="47:30"><expr pos:start="47:27" pos:end="47:30"><operator pos:start="47:27" pos:end="47:27">*</operator><name pos:start="47:28" pos:end="47:30">src</name></expr></argument>, <argument pos:start="47:33" pos:end="47:37"><expr pos:start="47:33" pos:end="47:37"><name pos:start="47:33" pos:end="47:37">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:49"><expr pos:start="51:5" pos:end="51:48"><call pos:start="51:5" pos:end="51:48"><name pos:start="51:5" pos:end="51:20">qio_channel_wait</name><argument_list pos:start="51:21" pos:end="51:48">(<argument pos:start="51:22" pos:end="51:38"><expr pos:start="51:22" pos:end="51:38"><call pos:start="51:22" pos:end="51:38"><name pos:start="51:22" pos:end="51:32">QIO_CHANNEL</name><argument_list pos:start="51:33" pos:end="51:38">(<argument pos:start="51:34" pos:end="51:37"><expr pos:start="51:34" pos:end="51:37"><name pos:start="51:34" pos:end="51:37">lioc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:41" pos:end="51:47"><expr pos:start="51:41" pos:end="51:47"><name pos:start="51:41" pos:end="51:47">G_IO_IN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:70"><expr pos:start="53:5" pos:end="53:69"><operator pos:start="53:5" pos:end="53:5">*</operator><name pos:start="53:6" pos:end="53:8">dst</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:69"><name pos:start="53:12" pos:end="53:22">QIO_CHANNEL</name><argument_list pos:start="53:23" pos:end="53:69">(<argument pos:start="53:24" pos:end="53:68"><expr pos:start="53:24" pos:end="53:68"><call pos:start="53:24" pos:end="53:68"><name pos:start="53:24" pos:end="53:48">qio_channel_socket_accept</name><argument_list pos:start="53:49" pos:end="53:68">(<argument pos:start="53:50" pos:end="53:53"><expr pos:start="53:50" pos:end="53:53"><name pos:start="53:50" pos:end="53:53">lioc</name></expr></argument>, <argument pos:start="53:56" pos:end="53:67"><expr pos:start="53:56" pos:end="53:67"><operator pos:start="53:56" pos:end="53:56">&amp;</operator><name pos:start="53:57" pos:end="53:67">error_abort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><call pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:12">g_assert</name><argument_list pos:start="55:13" pos:end="55:18">(<argument pos:start="55:14" pos:end="55:17"><expr pos:start="55:14" pos:end="55:17"><operator pos:start="55:14" pos:end="55:14">*</operator><name pos:start="55:15" pos:end="55:17">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:48"><expr pos:start="59:5" pos:end="59:47"><call pos:start="59:5" pos:end="59:47"><name pos:start="59:5" pos:end="59:35">test_io_channel_set_socket_bufs</name><argument_list pos:start="59:36" pos:end="59:47">(<argument pos:start="59:37" pos:end="59:40"><expr pos:start="59:37" pos:end="59:40"><operator pos:start="59:37" pos:end="59:37">*</operator><name pos:start="59:38" pos:end="59:40">src</name></expr></argument>, <argument pos:start="59:43" pos:end="59:46"><expr pos:start="59:43" pos:end="59:46"><operator pos:start="59:43" pos:end="59:43">*</operator><name pos:start="59:44" pos:end="59:46">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><call pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:16">object_unref</name><argument_list pos:start="63:17" pos:end="63:30">(<argument pos:start="63:18" pos:end="63:29"><expr pos:start="63:18" pos:end="63:29"><call pos:start="63:18" pos:end="63:29"><name pos:start="63:18" pos:end="63:23">OBJECT</name><argument_list pos:start="63:24" pos:end="63:29">(<argument pos:start="63:25" pos:end="63:28"><expr pos:start="63:25" pos:end="63:28"><name pos:start="63:25" pos:end="63:28">lioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
