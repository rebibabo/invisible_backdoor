<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4004.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:31">encode_close</name><parameter_list pos:start="1:32" pos:end="1:54">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:13">

    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="13:5">if <condition pos:start="5:8" pos:end="5:25">(<expr pos:start="5:9" pos:end="5:24"><name pos:start="5:9" pos:end="5:24"><name pos:start="5:9" pos:end="5:13">avctx</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:24">priv_data</name></name></expr>)</condition> <block pos:start="5:27" pos:end="13:5">{<block_content pos:start="7:9" pos:end="11:40">

        <decl_stmt pos:start="7:9" pos:end="7:44"><decl pos:start="7:9" pos:end="7:43"><type pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:21">DCAEncContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">c</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:30"><expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:26">subband_bufer_free</name><argument_list pos:start="9:27" pos:end="9:29">(<argument pos:start="9:28" pos:end="9:28"><expr pos:start="9:28" pos:end="9:28"><name pos:start="9:28" pos:end="9:28">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:40"><expr pos:start="11:9" pos:end="11:39"><call pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:24">ff_dcaadpcm_free</name><argument_list pos:start="11:25" pos:end="11:39">(<argument pos:start="11:26" pos:end="11:38"><expr pos:start="11:26" pos:end="11:38"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:27">c</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:38">adpcm_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="15:5" pos:end="15:13">return <expr pos:start="15:12" pos:end="15:12"><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
