<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23224.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockReopenQueue</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:48">bdrv_reopen_queue_child</name><parameter_list pos:start="1:49" pos:end="13:66">(<parameter pos:start="1:50" pos:end="1:75"><decl pos:start="1:50" pos:end="1:75"><type pos:start="1:50" pos:end="1:75"><name pos:start="1:50" pos:end="1:65">BlockReopenQueue</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:75">bs_queue</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:69"><decl pos:start="3:50" pos:end="3:69"><type pos:start="3:50" pos:end="3:69"><name pos:start="3:50" pos:end="3:65">BlockDriverState</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:69">bs</name></decl></parameter>,

                                                 <parameter pos:start="5:50" pos:end="5:63"><decl pos:start="5:50" pos:end="5:63"><type pos:start="5:50" pos:end="5:63"><name pos:start="5:50" pos:end="5:54">QDict</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:63">options</name></decl></parameter>,

                                                 <parameter pos:start="7:50" pos:end="7:58"><decl pos:start="7:50" pos:end="7:58"><type pos:start="7:50" pos:end="7:58"><name pos:start="7:50" pos:end="7:52">int</name></type> <name pos:start="7:54" pos:end="7:58">flags</name></decl></parameter>,

                                                 <parameter pos:start="9:50" pos:end="9:74"><decl pos:start="9:50" pos:end="9:74"><type pos:start="9:50" pos:end="9:74"><specifier pos:start="9:50" pos:end="9:54">const</specifier> <name pos:start="9:56" pos:end="9:68">BdrvChildRole</name> <modifier pos:start="9:70" pos:end="9:70">*</modifier></type><name pos:start="9:71" pos:end="9:74">role</name></decl></parameter>,

                                                 <parameter pos:start="11:50" pos:end="11:70"><decl pos:start="11:50" pos:end="11:70"><type pos:start="11:50" pos:end="11:70"><name pos:start="11:50" pos:end="11:54">QDict</name> <modifier pos:start="11:56" pos:end="11:56">*</modifier></type><name pos:start="11:57" pos:end="11:70">parent_options</name></decl></parameter>,

                                                 <parameter pos:start="13:50" pos:end="13:65"><decl pos:start="13:50" pos:end="13:65"><type pos:start="13:50" pos:end="13:65"><name pos:start="13:50" pos:end="13:52">int</name></type> <name pos:start="13:54" pos:end="13:65">parent_flags</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="183:1">{<block_content pos:start="17:5" pos:end="181:20">

    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:22">(<argument pos:start="17:12" pos:end="17:21"><expr pos:start="17:12" pos:end="17:21"><name pos:start="17:12" pos:end="17:13">bs</name> <operator pos:start="17:15" pos:end="17:16">!=</operator> <name pos:start="17:18" pos:end="17:21">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:35"><type pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:25">BlockReopenQueueEntry</name> <modifier pos:start="21:27" pos:end="21:27">*</modifier></type><name pos:start="21:28" pos:end="21:35">bs_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:13">BdrvChild</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:20">child</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:42"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:9">QDict</name> <modifier pos:start="25:11" pos:end="25:11">*</modifier></type><name pos:start="25:12" pos:end="25:22">old_options</name></decl>, <decl pos:start="25:25" pos:end="25:41"><type ref="prev" pos:start="25:5" pos:end="25:11"><modifier pos:start="25:25" pos:end="25:25">*</modifier></type><name pos:start="25:26" pos:end="25:41">explicit_options</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:25">(<expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:16">bs_queue</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <name pos:start="29:21" pos:end="29:24">NULL</name></expr>)</condition> <block pos:start="29:27" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:32">

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:16">bs_queue</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:46"><name pos:start="31:20" pos:end="31:25">g_new0</name><argument_list pos:start="31:26" pos:end="31:46">(<argument pos:start="31:27" pos:end="31:42"><expr pos:start="31:27" pos:end="31:42"><name pos:start="31:27" pos:end="31:42">BlockReopenQueue</name></expr></argument>, <argument pos:start="31:45" pos:end="31:45"><expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:21">QSIMPLEQ_INIT</name><argument_list pos:start="33:22" pos:end="33:31">(<argument pos:start="33:23" pos:end="33:30"><expr pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:30">bs_queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:16">options</name></expr>)</condition> <block pos:start="39:19" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:30">

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:15">options</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:29"><name pos:start="41:19" pos:end="41:27">qdict_new</name><argument_list pos:start="41:28" pos:end="41:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="61:7">/*

     * Precedence of options:

     * 1. Explicitly passed in options (highest)

     * 2. Set in flags (only for top level)

     * 3. Retained from explicitly set options of bs

     * 4. Inherited from parent node

     * 5. Retained from effective options of bs

     */</comment>



    <if_stmt pos:start="65:5" pos:end="81:5"><if pos:start="65:5" pos:end="81:5">if <condition pos:start="65:8" pos:end="65:24">(<expr pos:start="65:9" pos:end="65:23"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:23">parent_options</name></expr>)</condition> <block pos:start="65:26" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:50">

        <comment type="block" pos:start="67:9" pos:end="77:11">/*

         * Any setting represented by flags is always updated. If the

         * corresponding QDict option is set, it takes precedence. Otherwise

         * the flag is translated into a QDict option. The old setting of bs is

         * not considered.

         */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:50"><expr pos:start="79:9" pos:end="79:49"><call pos:start="79:9" pos:end="79:49"><name pos:start="79:9" pos:end="79:33">update_options_from_flags</name><argument_list pos:start="79:34" pos:end="79:49">(<argument pos:start="79:35" pos:end="79:41"><expr pos:start="79:35" pos:end="79:41"><name pos:start="79:35" pos:end="79:41">options</name></expr></argument>, <argument pos:start="79:44" pos:end="79:48"><expr pos:start="79:44" pos:end="79:48"><name pos:start="79:44" pos:end="79:48">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:72">/* Old explicitly set values (don't overwrite by inherited value) */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:60"><expr pos:start="87:5" pos:end="87:59"><name pos:start="87:5" pos:end="87:15">old_options</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:59"><name pos:start="87:19" pos:end="87:37">qdict_clone_shallow</name><argument_list pos:start="87:38" pos:end="87:59">(<argument pos:start="87:39" pos:end="87:58"><expr pos:start="87:39" pos:end="87:58"><name pos:start="87:39" pos:end="87:58"><name pos:start="87:39" pos:end="87:40">bs</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:58">explicit_options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:48"><expr pos:start="89:5" pos:end="89:47"><call pos:start="89:5" pos:end="89:47"><name pos:start="89:5" pos:end="89:21">bdrv_join_options</name><argument_list pos:start="89:22" pos:end="89:47">(<argument pos:start="89:23" pos:end="89:24"><expr pos:start="89:23" pos:end="89:24"><name pos:start="89:23" pos:end="89:24">bs</name></expr></argument>, <argument pos:start="89:27" pos:end="89:33"><expr pos:start="89:27" pos:end="89:33"><name pos:start="89:27" pos:end="89:33">options</name></expr></argument>, <argument pos:start="89:36" pos:end="89:46"><expr pos:start="89:36" pos:end="89:46"><name pos:start="89:36" pos:end="89:46">old_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:25"><expr pos:start="91:5" pos:end="91:24"><call pos:start="91:5" pos:end="91:24"><name pos:start="91:5" pos:end="91:11">QDECREF</name><argument_list pos:start="91:12" pos:end="91:24">(<argument pos:start="91:13" pos:end="91:23"><expr pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:23">old_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:52"><expr pos:start="95:5" pos:end="95:51"><name pos:start="95:5" pos:end="95:20">explicit_options</name> <operator pos:start="95:22" pos:end="95:22">=</operator> <call pos:start="95:24" pos:end="95:51"><name pos:start="95:24" pos:end="95:42">qdict_clone_shallow</name><argument_list pos:start="95:43" pos:end="95:51">(<argument pos:start="95:44" pos:end="95:50"><expr pos:start="95:44" pos:end="95:50"><name pos:start="95:44" pos:end="95:50">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:34">/* Inherit from parent node */</comment>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:23">(<expr pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:22">parent_options</name></expr>)</condition> <block pos:start="101:25" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:77">

        <expr_stmt pos:start="103:9" pos:end="103:23"><expr pos:start="103:9" pos:end="103:22"><call pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:14">assert</name><argument_list pos:start="103:15" pos:end="103:22">(<argument pos:start="103:16" pos:end="103:21"><expr pos:start="103:16" pos:end="103:21"><operator pos:start="103:16" pos:end="103:16">!</operator><name pos:start="103:17" pos:end="103:21">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:77"><expr pos:start="105:9" pos:end="105:76"><call pos:start="105:9" pos:end="105:76"><name pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:12">role</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:29">inherit_options</name></name><argument_list pos:start="105:30" pos:end="105:76">(<argument pos:start="105:31" pos:end="105:36"><expr pos:start="105:31" pos:end="105:36"><operator pos:start="105:31" pos:end="105:31">&amp;</operator><name pos:start="105:32" pos:end="105:36">flags</name></expr></argument>, <argument pos:start="105:39" pos:end="105:45"><expr pos:start="105:39" pos:end="105:45"><name pos:start="105:39" pos:end="105:45">options</name></expr></argument>, <argument pos:start="105:48" pos:end="105:59"><expr pos:start="105:48" pos:end="105:59"><name pos:start="105:48" pos:end="105:59">parent_flags</name></expr></argument>, <argument pos:start="105:62" pos:end="105:75"><expr pos:start="105:62" pos:end="105:75"><name pos:start="105:62" pos:end="105:75">parent_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:61">/* Old values are used for options that aren't set yet */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:51"><expr pos:start="113:5" pos:end="113:50"><name pos:start="113:5" pos:end="113:15">old_options</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:50"><name pos:start="113:19" pos:end="113:37">qdict_clone_shallow</name><argument_list pos:start="113:38" pos:end="113:50">(<argument pos:start="113:39" pos:end="113:49"><expr pos:start="113:39" pos:end="113:49"><name pos:start="113:39" pos:end="113:49"><name pos:start="113:39" pos:end="113:40">bs</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:49">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:48"><expr pos:start="115:5" pos:end="115:47"><call pos:start="115:5" pos:end="115:47"><name pos:start="115:5" pos:end="115:21">bdrv_join_options</name><argument_list pos:start="115:22" pos:end="115:47">(<argument pos:start="115:23" pos:end="115:24"><expr pos:start="115:23" pos:end="115:24"><name pos:start="115:23" pos:end="115:24">bs</name></expr></argument>, <argument pos:start="115:27" pos:end="115:33"><expr pos:start="115:27" pos:end="115:33"><name pos:start="115:27" pos:end="115:33">options</name></expr></argument>, <argument pos:start="115:36" pos:end="115:46"><expr pos:start="115:36" pos:end="115:46"><name pos:start="115:36" pos:end="115:46">old_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:25"><expr pos:start="117:5" pos:end="117:24"><call pos:start="117:5" pos:end="117:24"><name pos:start="117:5" pos:end="117:11">QDECREF</name><argument_list pos:start="117:12" pos:end="117:24">(<argument pos:start="117:13" pos:end="117:23"><expr pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:23">old_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:41">/* bdrv_open() masks this flag out */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:30"><expr pos:start="123:5" pos:end="123:29"><name pos:start="123:5" pos:end="123:9">flags</name> <operator pos:start="123:11" pos:end="123:12">&amp;=</operator> <operator pos:start="123:14" pos:end="123:14">~</operator><name pos:start="123:15" pos:end="123:29">BDRV_O_PROTOCOL</name></expr>;</expr_stmt>



    <macro pos:start="127:5" pos:end="127:45"><name pos:start="127:5" pos:end="127:17">QLIST_FOREACH</name><argument_list pos:start="127:18" pos:end="127:45">(<argument pos:start="127:19" pos:end="127:23">child</argument>, <argument pos:start="127:26" pos:end="127:38">&amp;bs-&gt;children</argument>, <argument pos:start="127:41" pos:end="127:44">next</argument>)</argument_list></macro> <block pos:start="127:47" pos:end="161:5">{<block_content pos:start="129:9" pos:end="159:61">

        <decl_stmt pos:start="129:9" pos:end="129:33"><decl pos:start="129:9" pos:end="129:32"><type pos:start="129:9" pos:end="129:15"><name pos:start="129:9" pos:end="129:13">QDict</name> <modifier pos:start="129:15" pos:end="129:15">*</modifier></type><name pos:start="129:16" pos:end="129:32">new_child_options</name></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:28"><decl pos:start="131:9" pos:end="131:27"><type pos:start="131:9" pos:end="131:14"><name pos:start="131:9" pos:end="131:12">char</name> <modifier pos:start="131:14" pos:end="131:14">*</modifier></type><name pos:start="131:15" pos:end="131:27">child_key_dot</name></decl>;</decl_stmt>



        <comment type="block" pos:start="135:9" pos:end="139:77">/* reopen can only change the options of block devices that were

         * implicitly created and inherited options. For other (referenced)

         * block devices, a syntax like "backing.foo" results in an error. */</comment>

        <if_stmt pos:start="141:9" pos:end="145:9"><if pos:start="141:9" pos:end="145:9">if <condition pos:start="141:12" pos:end="141:43">(<expr pos:start="141:13" pos:end="141:42"><name pos:start="141:13" pos:end="141:36"><name pos:start="141:13" pos:end="141:17">child</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:21">bs</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:36">inherits_from</name></name> <operator pos:start="141:38" pos:end="141:39">!=</operator> <name pos:start="141:41" pos:end="141:42">bs</name></expr>)</condition> <block pos:start="141:45" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:21">

            <continue pos:start="143:13" pos:end="143:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:60"><expr pos:start="149:9" pos:end="149:59"><name pos:start="149:9" pos:end="149:21">child_key_dot</name> <operator pos:start="149:23" pos:end="149:23">=</operator> <call pos:start="149:25" pos:end="149:59"><name pos:start="149:25" pos:end="149:39">g_strdup_printf</name><argument_list pos:start="149:40" pos:end="149:59">(<argument pos:start="149:41" pos:end="149:45"><expr pos:start="149:41" pos:end="149:45"><literal type="string" pos:start="149:41" pos:end="149:45">"%s."</literal></expr></argument>, <argument pos:start="149:48" pos:end="149:58"><expr pos:start="149:48" pos:end="149:58"><name pos:start="149:48" pos:end="149:58"><name pos:start="149:48" pos:end="149:52">child</name><operator pos:start="149:53" pos:end="149:54">-&gt;</operator><name pos:start="149:55" pos:end="149:58">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:75"><expr pos:start="151:9" pos:end="151:74"><call pos:start="151:9" pos:end="151:74"><name pos:start="151:9" pos:end="151:30">qdict_extract_subqdict</name><argument_list pos:start="151:31" pos:end="151:74">(<argument pos:start="151:32" pos:end="151:38"><expr pos:start="151:32" pos:end="151:38"><name pos:start="151:32" pos:end="151:38">options</name></expr></argument>, <argument pos:start="151:41" pos:end="151:58"><expr pos:start="151:41" pos:end="151:58"><operator pos:start="151:41" pos:end="151:41">&amp;</operator><name pos:start="151:42" pos:end="151:58">new_child_options</name></expr></argument>, <argument pos:start="151:61" pos:end="151:73"><expr pos:start="151:61" pos:end="151:73"><name pos:start="151:61" pos:end="151:73">child_key_dot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:30"><expr pos:start="153:9" pos:end="153:29"><call pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:14">g_free</name><argument_list pos:start="153:15" pos:end="153:29">(<argument pos:start="153:16" pos:end="153:28"><expr pos:start="153:16" pos:end="153:28"><name pos:start="153:16" pos:end="153:28">child_key_dot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="159:61"><expr pos:start="157:9" pos:end="159:60"><call pos:start="157:9" pos:end="159:60"><name pos:start="157:9" pos:end="157:31">bdrv_reopen_queue_child</name><argument_list pos:start="157:32" pos:end="159:60">(<argument pos:start="157:33" pos:end="157:40"><expr pos:start="157:33" pos:end="157:40"><name pos:start="157:33" pos:end="157:40">bs_queue</name></expr></argument>, <argument pos:start="157:43" pos:end="157:51"><expr pos:start="157:43" pos:end="157:51"><name pos:start="157:43" pos:end="157:51"><name pos:start="157:43" pos:end="157:47">child</name><operator pos:start="157:48" pos:end="157:49">-&gt;</operator><name pos:start="157:50" pos:end="157:51">bs</name></name></expr></argument>, <argument pos:start="157:54" pos:end="157:70"><expr pos:start="157:54" pos:end="157:70"><name pos:start="157:54" pos:end="157:70">new_child_options</name></expr></argument>, <argument pos:start="157:73" pos:end="157:73"><expr pos:start="157:73" pos:end="157:73"><literal type="number" pos:start="157:73" pos:end="157:73">0</literal></expr></argument>,

                                <argument pos:start="159:33" pos:end="159:43"><expr pos:start="159:33" pos:end="159:43"><name pos:start="159:33" pos:end="159:43"><name pos:start="159:33" pos:end="159:37">child</name><operator pos:start="159:38" pos:end="159:39">-&gt;</operator><name pos:start="159:40" pos:end="159:43">role</name></name></expr></argument>, <argument pos:start="159:46" pos:end="159:52"><expr pos:start="159:46" pos:end="159:52"><name pos:start="159:46" pos:end="159:52">options</name></expr></argument>, <argument pos:start="159:55" pos:end="159:59"><expr pos:start="159:55" pos:end="159:59"><name pos:start="159:55" pos:end="159:59">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="165:5" pos:end="165:48"><expr pos:start="165:5" pos:end="165:47"><name pos:start="165:5" pos:end="165:12">bs_entry</name> <operator pos:start="165:14" pos:end="165:14">=</operator> <call pos:start="165:16" pos:end="165:47"><name pos:start="165:16" pos:end="165:21">g_new0</name><argument_list pos:start="165:22" pos:end="165:47">(<argument pos:start="165:23" pos:end="165:43"><expr pos:start="165:23" pos:end="165:43"><name pos:start="165:23" pos:end="165:43">BlockReopenQueueEntry</name></expr></argument>, <argument pos:start="165:46" pos:end="165:46"><expr pos:start="165:46" pos:end="165:46"><literal type="number" pos:start="165:46" pos:end="165:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:52"><expr pos:start="167:5" pos:end="167:51"><call pos:start="167:5" pos:end="167:51"><name pos:start="167:5" pos:end="167:24">QSIMPLEQ_INSERT_TAIL</name><argument_list pos:start="167:25" pos:end="167:51">(<argument pos:start="167:26" pos:end="167:33"><expr pos:start="167:26" pos:end="167:33"><name pos:start="167:26" pos:end="167:33">bs_queue</name></expr></argument>, <argument pos:start="167:36" pos:end="167:43"><expr pos:start="167:36" pos:end="167:43"><name pos:start="167:36" pos:end="167:43">bs_entry</name></expr></argument>, <argument pos:start="167:46" pos:end="167:50"><expr pos:start="167:46" pos:end="167:50"><name pos:start="167:46" pos:end="167:50">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:28"><expr pos:start="171:5" pos:end="171:27"><name pos:start="171:5" pos:end="171:22"><name pos:start="171:5" pos:end="171:12">bs_entry</name><operator pos:start="171:13" pos:end="171:14">-&gt;</operator><name pos:start="171:15" pos:end="171:19">state</name><operator pos:start="171:20" pos:end="171:20">.</operator><name pos:start="171:21" pos:end="171:22">bs</name></name> <operator pos:start="171:24" pos:end="171:24">=</operator> <name pos:start="171:26" pos:end="171:27">bs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:38"><expr pos:start="173:5" pos:end="173:37"><name pos:start="173:5" pos:end="173:27"><name pos:start="173:5" pos:end="173:12">bs_entry</name><operator pos:start="173:13" pos:end="173:14">-&gt;</operator><name pos:start="173:15" pos:end="173:19">state</name><operator pos:start="173:20" pos:end="173:20">.</operator><name pos:start="173:21" pos:end="173:27">options</name></name> <operator pos:start="173:29" pos:end="173:29">=</operator> <name pos:start="173:31" pos:end="173:37">options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:56"><expr pos:start="175:5" pos:end="175:55"><name pos:start="175:5" pos:end="175:36"><name pos:start="175:5" pos:end="175:12">bs_entry</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:19">state</name><operator pos:start="175:20" pos:end="175:20">.</operator><name pos:start="175:21" pos:end="175:36">explicit_options</name></name> <operator pos:start="175:38" pos:end="175:38">=</operator> <name pos:start="175:40" pos:end="175:55">explicit_options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:34"><expr pos:start="177:5" pos:end="177:33"><name pos:start="177:5" pos:end="177:25"><name pos:start="177:5" pos:end="177:12">bs_entry</name><operator pos:start="177:13" pos:end="177:14">-&gt;</operator><name pos:start="177:15" pos:end="177:19">state</name><operator pos:start="177:20" pos:end="177:20">.</operator><name pos:start="177:21" pos:end="177:25">flags</name></name> <operator pos:start="177:27" pos:end="177:27">=</operator> <name pos:start="177:29" pos:end="177:33">flags</name></expr>;</expr_stmt>



    <return pos:start="181:5" pos:end="181:20">return <expr pos:start="181:12" pos:end="181:19"><name pos:start="181:12" pos:end="181:19">bs_queue</name></expr>;</return>

</block_content>}</block></function>
</unit>
