<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3669.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:60"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vmdk_open_desc_file</name><parameter_list pos:start="1:31" pos:end="3:51">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:62">flags</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:50"><decl pos:start="3:32" pos:end="3:50"><type pos:start="3:32" pos:end="3:50"><name pos:start="3:32" pos:end="3:38">int64_t</name></type> <name pos:start="3:40" pos:end="3:50">desc_offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:60">{<block_content pos:start="7:5" pos:end="41:60">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:12">buf</name><index pos:start="9:13" pos:end="9:18">[<expr pos:start="9:14" pos:end="9:17"><literal type="number" pos:start="9:14" pos:end="9:17">2048</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:16"><name pos:start="11:10" pos:end="11:11">ct</name><index pos:start="11:12" pos:end="11:16">[<expr pos:start="11:13" pos:end="11:15"><literal type="number" pos:start="11:13" pos:end="11:15">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">BDRVVmdkState</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">s</name> <init pos:start="13:22" pos:end="13:33">= <expr pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:25">bs</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:33">opaque</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:61"><name pos:start="17:11" pos:end="17:20">bdrv_pread</name><argument_list pos:start="17:21" pos:end="17:61">(<argument pos:start="17:22" pos:end="17:29"><expr pos:start="17:22" pos:end="17:29"><name pos:start="17:22" pos:end="17:29"><name pos:start="17:22" pos:end="17:23">bs</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:29">file</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:42"><expr pos:start="17:32" pos:end="17:42"><name pos:start="17:32" pos:end="17:42">desc_offset</name></expr></argument>, <argument pos:start="17:45" pos:end="17:47"><expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:47">buf</name></expr></argument>, <argument pos:start="17:50" pos:end="17:60"><expr pos:start="17:50" pos:end="17:60"><sizeof pos:start="17:50" pos:end="17:60">sizeof<argument_list pos:start="17:56" pos:end="17:60">(<argument pos:start="17:57" pos:end="17:59"><expr pos:start="17:57" pos:end="17:59"><name pos:start="17:57" pos:end="17:59">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:7">buf</name><index pos:start="25:8" pos:end="25:13">[<expr pos:start="25:9" pos:end="25:12"><literal type="number" pos:start="25:9" pos:end="25:12">2047</literal></expr>]</index></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="char" pos:start="25:17" pos:end="25:20">'\0'</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:66">(<expr pos:start="27:9" pos:end="27:65"><call pos:start="27:9" pos:end="27:65"><name pos:start="27:9" pos:end="27:30">vmdk_parse_description</name><argument_list pos:start="27:31" pos:end="27:65">(<argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">buf</name></expr></argument>, <argument pos:start="27:37" pos:end="27:48"><expr pos:start="27:37" pos:end="27:48"><literal type="string" pos:start="27:37" pos:end="27:48">"createType"</literal></expr></argument>, <argument pos:start="27:51" pos:end="27:52"><expr pos:start="27:51" pos:end="27:52"><name pos:start="27:51" pos:end="27:52">ct</name></expr></argument>, <argument pos:start="27:55" pos:end="27:64"><expr pos:start="27:55" pos:end="27:64"><sizeof pos:start="27:55" pos:end="27:64">sizeof<argument_list pos:start="27:61" pos:end="27:64">(<argument pos:start="27:62" pos:end="27:63"><expr pos:start="27:62" pos:end="27:63"><name pos:start="27:62" pos:end="27:63">ct</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:68" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="41:60"><if pos:start="33:5" pos:end="41:60">if <condition pos:start="33:8" pos:end="37:41">(<expr pos:start="33:9" pos:end="37:40"><call pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:14">strcmp</name><argument_list pos:start="33:15" pos:end="33:36">(<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">ct</name></expr></argument>, <argument pos:start="33:20" pos:end="33:35"><expr pos:start="33:20" pos:end="33:35"><literal type="string" pos:start="33:20" pos:end="33:35">"monolithicFlat"</literal></expr></argument>)</argument_list></call> <operator pos:start="33:38" pos:end="33:39">&amp;&amp;</operator>

        <call pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:14">strcmp</name><argument_list pos:start="35:15" pos:end="35:42">(<argument pos:start="35:16" pos:end="35:17"><expr pos:start="35:16" pos:end="35:17"><name pos:start="35:16" pos:end="35:17">ct</name></expr></argument>, <argument pos:start="35:20" pos:end="35:41"><expr pos:start="35:20" pos:end="35:41"><literal type="string" pos:start="35:20" pos:end="35:41">"twoGbMaxExtentSparse"</literal></expr></argument>)</argument_list></call> <operator pos:start="35:44" pos:end="35:45">&amp;&amp;</operator>

        <call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:14">strcmp</name><argument_list pos:start="37:15" pos:end="37:40">(<argument pos:start="37:16" pos:end="37:17"><expr pos:start="37:16" pos:end="37:17"><name pos:start="37:16" pos:end="37:17">ct</name></expr></argument>, <argument pos:start="37:20" pos:end="37:39"><expr pos:start="37:20" pos:end="37:39"><literal type="string" pos:start="37:20" pos:end="37:39">"twoGbMaxExtentFlat"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:43" pos:end="41:60">{<block_content pos:start="39:9" pos:end="41:60">

        <macro pos:start="39:9" pos:end="41:60"><name pos:start="39:9" pos:end="39:15">fprintf</name><argument_list pos:start="39:16" pos:end="41:60">(<argument pos:start="39:17" pos:end="39:22">stderr</argument>,

                <argument pos:start="41:17" pos:end="41:60"><literal type="string" pos:start="41:17" pos:end="41:56">"VMDK: Not supported image type \"%s\"""</literal>.\n<literal type="string" pos:start="41:60" pos:end="41:60">"</literal></argument></argument_list></macro></block_content></block></if></if_stmt></block_content></block></function>, ct);

        return -ENOTSUP;

    }

    s-&gt;desc_offset = 0;

    ret = vmdk_parse_extents(buf, bs, bs-&gt;file-&gt;filename);

    if (ret) {

        return ret;

    }



    /* try to open parent images, if exist */

    if (vmdk_parent_open(bs)) {

        g_free(s-&gt;extents);

        return -EINVAL;

    }

    s-&gt;parent_cid = vmdk_read_cid(bs, 1);

    return 0;

}
</unit>
