<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23233.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">blk_mig_save_bulked_block</name><parameter_list pos:start="1:37" pos:end="1:63">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:44">Monitor</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">mon</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:59">QEMUFile</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:15">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:32">completed_sector_sum</name> <init pos:start="5:34" pos:end="5:36">= <expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">BlkMigDevState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">bmds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">progress</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:20">QSIMPLEQ_FOREACH</name><argument_list pos:start="15:21" pos:end="15:61">(<argument pos:start="15:22" pos:end="15:25">bmds</argument>, <argument pos:start="15:28" pos:end="15:53">&amp;block_mig_state.bmds_list</argument>, <argument pos:start="15:56" pos:end="15:60">entry</argument>)</argument_list></macro> <block pos:start="15:63" pos:end="39:5">{<block_content pos:start="17:9" pos:end="37:9">

        <if_stmt pos:start="17:9" pos:end="37:9"><if pos:start="17:9" pos:end="33:9">if <condition pos:start="17:12" pos:end="17:38">(<expr pos:start="17:13" pos:end="17:37"><name pos:start="17:13" pos:end="17:32"><name pos:start="17:13" pos:end="17:16">bmds</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:32">bulk_completed</name></name> <operator pos:start="17:34" pos:end="17:35">==</operator> <literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr>)</condition> <block pos:start="17:40" pos:end="33:9">{<block_content pos:start="19:13" pos:end="31:18">

            <if_stmt pos:start="19:13" pos:end="25:13"><if pos:start="19:13" pos:end="25:13">if <condition pos:start="19:16" pos:end="19:56">(<expr pos:start="19:17" pos:end="19:55"><call pos:start="19:17" pos:end="19:50"><name pos:start="19:17" pos:end="19:36">mig_save_device_bulk</name><argument_list pos:start="19:37" pos:end="19:50">(<argument pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><name pos:start="19:38" pos:end="19:40">mon</name></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">f</name></expr></argument>, <argument pos:start="19:46" pos:end="19:49"><expr pos:start="19:46" pos:end="19:49"><name pos:start="19:46" pos:end="19:49">bmds</name></expr></argument>)</argument_list></call> <operator pos:start="19:52" pos:end="19:53">==</operator> <literal type="number" pos:start="19:55" pos:end="19:55">1</literal></expr>)</condition> <block pos:start="19:58" pos:end="25:13">{<block_content pos:start="23:17" pos:end="23:41">

                <comment type="block" pos:start="21:17" pos:end="21:60">/* completed bulk section for this device */</comment>

                <expr_stmt pos:start="23:17" pos:end="23:41"><expr pos:start="23:17" pos:end="23:40"><name pos:start="23:17" pos:end="23:36"><name pos:start="23:17" pos:end="23:20">bmds</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:36">bulk_completed</name></name> <operator pos:start="23:38" pos:end="23:38">=</operator> <literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:60"><expr pos:start="27:13" pos:end="27:59"><name pos:start="27:13" pos:end="27:32">completed_sector_sum</name> <operator pos:start="27:34" pos:end="27:35">+=</operator> <name pos:start="27:37" pos:end="27:59"><name pos:start="27:37" pos:end="27:40">bmds</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:59">completed_sectors</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:20"><expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="37:9">else <block pos:start="33:16" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:60">

            <expr_stmt pos:start="35:13" pos:end="35:60"><expr pos:start="35:13" pos:end="35:59"><name pos:start="35:13" pos:end="35:32">completed_sector_sum</name> <operator pos:start="35:34" pos:end="35:35">+=</operator> <name pos:start="35:37" pos:end="35:59"><name pos:start="35:37" pos:end="35:40">bmds</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:59">completed_sectors</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:46">(<expr pos:start="43:9" pos:end="43:45"><name pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:23">block_mig_state</name><operator pos:start="43:24" pos:end="43:24">.</operator><name pos:start="43:25" pos:end="43:40">total_sector_sum</name></name> <operator pos:start="43:42" pos:end="43:43">!=</operator> <literal type="number" pos:start="43:45" pos:end="43:45">0</literal></expr>)</condition> <block pos:start="43:48" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:52">

        <expr_stmt pos:start="45:9" pos:end="47:52"><expr pos:start="45:9" pos:end="47:51"><name pos:start="45:9" pos:end="45:16">progress</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:39">completed_sector_sum</name> <operator pos:start="45:41" pos:end="45:41">*</operator> <literal type="number" pos:start="45:43" pos:end="45:45">100</literal> <operator pos:start="45:47" pos:end="45:47">/</operator>

                   <name pos:start="47:20" pos:end="47:51"><name pos:start="47:20" pos:end="47:34">block_mig_state</name><operator pos:start="47:35" pos:end="47:35">.</operator><name pos:start="47:36" pos:end="47:51">total_sector_sum</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:23">

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:16">progress</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:22">100</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="55:5" pos:end="67:5"><if pos:start="55:5" pos:end="67:5">if <condition pos:start="55:8" pos:end="55:50">(<expr pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:16">progress</name> <operator pos:start="55:18" pos:end="55:19">!=</operator> <name pos:start="55:21" pos:end="55:49"><name pos:start="55:21" pos:end="55:35">block_mig_state</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:49">prev_progress</name></name></expr>)</condition> <block pos:start="55:52" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:27">

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:23">block_mig_state</name><operator pos:start="57:24" pos:end="57:24">.</operator><name pos:start="57:25" pos:end="57:37">prev_progress</name></name> <operator pos:start="57:39" pos:end="57:39">=</operator> <name pos:start="57:41" pos:end="57:48">progress</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="61:50"><expr pos:start="59:9" pos:end="61:49"><call pos:start="59:9" pos:end="61:49"><name pos:start="59:9" pos:end="59:21">qemu_put_be64</name><argument_list pos:start="59:22" pos:end="61:49">(<argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">f</name></expr></argument>, <argument pos:start="59:26" pos:end="61:48"><expr pos:start="59:26" pos:end="61:48"><operator pos:start="59:26" pos:end="59:26">(</operator><name pos:start="59:27" pos:end="59:34">progress</name> <operator pos:start="59:36" pos:end="59:37">&lt;&lt;</operator> <name pos:start="59:39" pos:end="59:54">BDRV_SECTOR_BITS</name><operator pos:start="59:55" pos:end="59:55">)</operator>

                         <operator pos:start="61:26" pos:end="61:26">|</operator> <name pos:start="61:28" pos:end="61:48">BLK_MIG_FLAG_PROGRESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:59"><expr pos:start="63:9" pos:end="63:58"><call pos:start="63:9" pos:end="63:58"><name pos:start="63:9" pos:end="63:22">monitor_printf</name><argument_list pos:start="63:23" pos:end="63:58">(<argument pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">mon</name></expr></argument>, <argument pos:start="63:29" pos:end="63:47"><expr pos:start="63:29" pos:end="63:47"><literal type="string" pos:start="63:29" pos:end="63:47">"Completed %d %%\r"</literal></expr></argument>, <argument pos:start="63:50" pos:end="63:57"><expr pos:start="63:50" pos:end="63:57"><name pos:start="63:50" pos:end="63:57">progress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><call pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:21">monitor_flush</name><argument_list pos:start="65:22" pos:end="65:26">(<argument pos:start="65:23" pos:end="65:25"><expr pos:start="65:23" pos:end="65:25"><name pos:start="65:23" pos:end="65:25">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="71:5" pos:end="71:15">return <expr pos:start="71:12" pos:end="71:14"><name pos:start="71:12" pos:end="71:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
