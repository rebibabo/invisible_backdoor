<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9917.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:49">gen_op_arith_compute_ca</name><parameter_list pos:start="1:50" pos:end="1:99">(<parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:62">DisasContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">ctx</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:78"><decl pos:start="1:70" pos:end="1:78"><type pos:start="1:70" pos:end="1:78"><name pos:start="1:70" pos:end="1:73">TCGv</name></type> <name pos:start="1:75" pos:end="1:78">arg1</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:89"><decl pos:start="1:81" pos:end="1:89"><type pos:start="1:81" pos:end="1:89"><name pos:start="1:81" pos:end="1:84">TCGv</name></type> <name pos:start="1:86" pos:end="1:89">arg2</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:98"><decl pos:start="1:92" pos:end="1:98"><type pos:start="1:92" pos:end="1:98"><name pos:start="1:92" pos:end="1:94">int</name></type> <name pos:start="1:96" pos:end="1:98">sub</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:22">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">l1</name> <init pos:start="5:12" pos:end="5:28">= <expr pos:start="5:14" pos:end="5:28"><call pos:start="5:14" pos:end="5:28"><name pos:start="5:14" pos:end="5:26">gen_new_label</name><argument_list pos:start="5:27" pos:end="5:28">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="9:1" pos:end="9:25">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:25"><call pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:11">defined</name><argument_list pos:start="9:12" pos:end="9:25">(<argument pos:start="9:13" pos:end="9:24"><expr pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="11:5" pos:end="47:5"><if pos:start="11:5" pos:end="35:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:22"><name pos:start="11:11" pos:end="11:13">ctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:22">sf_mode</name></name><operator pos:start="11:23" pos:end="11:23">)</operator></expr>)</condition> <block pos:start="11:26" pos:end="35:5">{<block_content pos:start="13:9" pos:end="33:9">

        <decl_stmt pos:start="13:9" pos:end="13:20"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">TCGv</name></type> <name pos:start="13:14" pos:end="13:15">t0</name></decl>, <decl pos:start="13:18" pos:end="13:19"><type ref="prev" pos:start="13:9" pos:end="13:12"/><name pos:start="13:18" pos:end="13:19">t1</name></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:10">t0</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:38"><name pos:start="15:14" pos:end="15:25">tcg_temp_new</name><argument_list pos:start="15:26" pos:end="15:38">(<argument pos:start="15:27" pos:end="15:37"><expr pos:start="15:27" pos:end="15:37"><name pos:start="15:27" pos:end="15:37">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:39"><expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:10">t1</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:38"><name pos:start="17:14" pos:end="17:25">tcg_temp_new</name><argument_list pos:start="17:26" pos:end="17:38">(<argument pos:start="17:27" pos:end="17:37"><expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:36"><expr pos:start="21:9" pos:end="21:35"><call pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:25">tcg_gen_ext32u_tl</name><argument_list pos:start="21:26" pos:end="21:35">(<argument pos:start="21:27" pos:end="21:28"><expr pos:start="21:27" pos:end="21:28"><name pos:start="21:27" pos:end="21:28">t0</name></expr></argument>, <argument pos:start="21:31" pos:end="21:34"><expr pos:start="21:31" pos:end="21:34"><name pos:start="21:31" pos:end="21:34">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><call pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:25">tcg_gen_ext32u_tl</name><argument_list pos:start="23:26" pos:end="23:35">(<argument pos:start="23:27" pos:end="23:28"><expr pos:start="23:27" pos:end="23:28"><name pos:start="23:27" pos:end="23:28">t1</name></expr></argument>, <argument pos:start="23:31" pos:end="23:34"><expr pos:start="23:31" pos:end="23:34"><name pos:start="23:31" pos:end="23:34">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:16">(<expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">sub</name></expr>)</condition> <block pos:start="25:18" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:56">

            <expr_stmt pos:start="27:13" pos:end="27:56"><expr pos:start="27:13" pos:end="27:55"><call pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:29">tcg_gen_brcond_tl</name><argument_list pos:start="27:30" pos:end="27:55">(<argument pos:start="27:31" pos:end="27:42"><expr pos:start="27:31" pos:end="27:42"><name pos:start="27:31" pos:end="27:42">TCG_COND_GTU</name></expr></argument>, <argument pos:start="27:45" pos:end="27:46"><expr pos:start="27:45" pos:end="27:46"><name pos:start="27:45" pos:end="27:46">t0</name></expr></argument>, <argument pos:start="27:49" pos:end="27:50"><expr pos:start="27:49" pos:end="27:50"><name pos:start="27:49" pos:end="27:50">t1</name></expr></argument>, <argument pos:start="27:53" pos:end="27:54"><expr pos:start="27:53" pos:end="27:54"><name pos:start="27:53" pos:end="27:54">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="33:9">else <block pos:start="29:16" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:56">

            <expr_stmt pos:start="31:13" pos:end="31:56"><expr pos:start="31:13" pos:end="31:55"><call pos:start="31:13" pos:end="31:55"><name pos:start="31:13" pos:end="31:29">tcg_gen_brcond_tl</name><argument_list pos:start="31:30" pos:end="31:55">(<argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:42">TCG_COND_GEU</name></expr></argument>, <argument pos:start="31:45" pos:end="31:46"><expr pos:start="31:45" pos:end="31:46"><name pos:start="31:45" pos:end="31:46">t0</name></expr></argument>, <argument pos:start="31:49" pos:end="31:50"><expr pos:start="31:49" pos:end="31:50"><name pos:start="31:49" pos:end="31:50">t1</name></expr></argument>, <argument pos:start="31:53" pos:end="31:54"><expr pos:start="31:53" pos:end="31:54"><name pos:start="31:53" pos:end="31:54">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="43:5">else

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">sub</name></expr>)</condition> <block pos:start="39:14" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:56">

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><call pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:25">tcg_gen_brcond_tl</name><argument_list pos:start="41:26" pos:end="41:55">(<argument pos:start="41:27" pos:end="41:38"><expr pos:start="41:27" pos:end="41:38"><name pos:start="41:27" pos:end="41:38">TCG_COND_GTU</name></expr></argument>, <argument pos:start="41:41" pos:end="41:44"><expr pos:start="41:41" pos:end="41:44"><name pos:start="41:41" pos:end="41:44">arg1</name></expr></argument>, <argument pos:start="41:47" pos:end="41:50"><expr pos:start="41:47" pos:end="41:50"><name pos:start="41:47" pos:end="41:50">arg2</name></expr></argument>, <argument pos:start="41:53" pos:end="41:54"><expr pos:start="41:53" pos:end="41:54"><name pos:start="41:53" pos:end="41:54">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:56">

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><call pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:25">tcg_gen_brcond_tl</name><argument_list pos:start="45:26" pos:end="45:55">(<argument pos:start="45:27" pos:end="45:38"><expr pos:start="45:27" pos:end="45:38"><name pos:start="45:27" pos:end="45:38">TCG_COND_GEU</name></expr></argument>, <argument pos:start="45:41" pos:end="45:44"><expr pos:start="45:41" pos:end="45:44"><name pos:start="45:41" pos:end="45:44">arg1</name></expr></argument>, <argument pos:start="45:47" pos:end="45:50"><expr pos:start="45:47" pos:end="45:50"><name pos:start="45:47" pos:end="45:50">arg2</name></expr></argument>, <argument pos:start="45:53" pos:end="45:54"><expr pos:start="45:53" pos:end="45:54"><name pos:start="45:53" pos:end="45:54">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><call pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:18">tcg_gen_ori_tl</name><argument_list pos:start="49:19" pos:end="49:49">(<argument pos:start="49:20" pos:end="49:26"><expr pos:start="49:20" pos:end="49:26"><name pos:start="49:20" pos:end="49:26">cpu_xer</name></expr></argument>, <argument pos:start="49:29" pos:end="49:35"><expr pos:start="49:29" pos:end="49:35"><name pos:start="49:29" pos:end="49:35">cpu_xer</name></expr></argument>, <argument pos:start="49:38" pos:end="49:48"><expr pos:start="49:38" pos:end="49:48"><literal type="number" pos:start="49:38" pos:end="49:38">1</literal> <operator pos:start="49:40" pos:end="49:41">&lt;&lt;</operator> <name pos:start="49:43" pos:end="49:48">XER_CA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><call pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:17">gen_set_label</name><argument_list pos:start="51:18" pos:end="51:21">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
