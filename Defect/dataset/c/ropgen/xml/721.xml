<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/721.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:20"><name pos:start="1:1" pos:end="1:10">DISAS_INSN</name><argument_list pos:start="1:11" pos:end="1:20">(<argument pos:start="1:12" pos:end="1:19">shift_im</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">reg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:14">shift</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><call pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:13">set_cc_op</name><argument_list pos:start="13:14" pos:end="13:29">(<argument pos:start="13:15" pos:end="13:15"><expr pos:start="13:15" pos:end="13:15"><name pos:start="13:15" pos:end="13:15">s</name></expr></argument>, <argument pos:start="13:18" pos:end="13:28"><expr pos:start="13:18" pos:end="13:28"><name pos:start="13:18" pos:end="13:28">CC_OP_FLAGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:7">reg</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:23"><name pos:start="17:11" pos:end="17:14">DREG</name><argument_list pos:start="17:15" pos:end="17:23">(<argument pos:start="17:16" pos:end="17:19"><expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">insn</name></expr></argument>, <argument pos:start="17:22" pos:end="17:22"><expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:7">tmp</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <operator pos:start="19:11" pos:end="19:11">(</operator><name pos:start="19:12" pos:end="19:15">insn</name> <operator pos:start="19:17" pos:end="19:18">&gt;&gt;</operator> <literal type="number" pos:start="19:20" pos:end="19:20">9</literal><operator pos:start="19:21" pos:end="19:21">)</operator> <operator pos:start="19:23" pos:end="19:23">&amp;</operator> <literal type="number" pos:start="19:25" pos:end="19:25">7</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:16"><if pos:start="21:5" pos:end="23:16">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">tmp</name> <operator pos:start="21:13" pos:end="21:14">==</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:16"><block_content pos:start="23:9" pos:end="23:16">

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">tmp</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <literal type="number" pos:start="23:15" pos:end="23:15">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:9">shift</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:25">tcg_const_i32</name><argument_list pos:start="25:26" pos:end="25:30">(<argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:68">/* No need to flush flags becuse we know we will set C flag.  */</comment>

    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:12">insn</name> <operator pos:start="29:14" pos:end="29:14">&amp;</operator> <literal type="number" pos:start="29:16" pos:end="29:20">0x100</literal></expr>)</condition> <block pos:start="29:23" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:52">

        <expr_stmt pos:start="31:9" pos:end="31:52"><expr pos:start="31:9" pos:end="31:51"><call pos:start="31:9" pos:end="31:51"><name pos:start="31:9" pos:end="31:25">gen_helper_shl_cc</name><argument_list pos:start="31:26" pos:end="31:51">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">reg</name></expr></argument>, <argument pos:start="31:32" pos:end="31:38"><expr pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:38">cpu_env</name></expr></argument>, <argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:43">reg</name></expr></argument>, <argument pos:start="31:46" pos:end="31:50"><expr pos:start="31:46" pos:end="31:50"><name pos:start="31:46" pos:end="31:50">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="45:5">else <block pos:start="33:12" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:9">

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:21">(<expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:16">insn</name> <operator pos:start="35:18" pos:end="35:18">&amp;</operator> <literal type="number" pos:start="35:20" pos:end="35:20">8</literal></expr>)</condition> <block pos:start="35:23" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:56">

            <expr_stmt pos:start="37:13" pos:end="37:56"><expr pos:start="37:13" pos:end="37:55"><call pos:start="37:13" pos:end="37:55"><name pos:start="37:13" pos:end="37:29">gen_helper_shr_cc</name><argument_list pos:start="37:30" pos:end="37:55">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">reg</name></expr></argument>, <argument pos:start="37:36" pos:end="37:42"><expr pos:start="37:36" pos:end="37:42"><name pos:start="37:36" pos:end="37:42">cpu_env</name></expr></argument>, <argument pos:start="37:45" pos:end="37:47"><expr pos:start="37:45" pos:end="37:47"><name pos:start="37:45" pos:end="37:47">reg</name></expr></argument>, <argument pos:start="37:50" pos:end="37:54"><expr pos:start="37:50" pos:end="37:54"><name pos:start="37:50" pos:end="37:54">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="43:9">else <block pos:start="39:16" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:56">

            <expr_stmt pos:start="41:13" pos:end="41:56"><expr pos:start="41:13" pos:end="41:55"><call pos:start="41:13" pos:end="41:55"><name pos:start="41:13" pos:end="41:29">gen_helper_sar_cc</name><argument_list pos:start="41:30" pos:end="41:55">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">reg</name></expr></argument>, <argument pos:start="41:36" pos:end="41:42"><expr pos:start="41:36" pos:end="41:42"><name pos:start="41:36" pos:end="41:42">cpu_env</name></expr></argument>, <argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">reg</name></expr></argument>, <argument pos:start="41:50" pos:end="41:54"><expr pos:start="41:50" pos:end="41:54"><name pos:start="41:50" pos:end="41:54">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
