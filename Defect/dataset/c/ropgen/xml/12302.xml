<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12302.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:46"><name pos:start="1:1" pos:end="1:30">gen_intermediate_code_internal</name><argument_list pos:start="1:31" pos:end="3:46">(<argument pos:start="1:32" pos:end="1:45">SuperHCPU *cpu</argument>, <argument pos:start="1:48" pos:end="1:67">TranslationBlock *tb</argument>,

                               <argument pos:start="3:32" pos:end="3:45">bool search_pc</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="245:1">{<block_content pos:start="7:5" pos:end="244:0">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">CPUSH4State</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">env</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:27">cpu</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">DisasContext</name></type> <name pos:start="11:18" pos:end="11:20">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:25">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:21"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <name pos:start="15:12" pos:end="15:19">uint16_t</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:32">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">CPUBreakpoint</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:21">bp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:13"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:13">ii</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:12">pc_start</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:17">tb</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:15">gen_opc_end</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:37"><name pos:start="29:19" pos:end="29:25">tcg_ctx</name><operator pos:start="29:26" pos:end="29:26">.</operator><name pos:start="29:27" pos:end="29:37">gen_opc_buf</name></name> <operator pos:start="29:39" pos:end="29:39">+</operator> <name pos:start="29:41" pos:end="29:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:7">ctx</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:10">pc</name></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:7">ctx</name><operator pos:start="33:8" pos:end="33:8">.</operator><name pos:start="33:9" pos:end="33:13">flags</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:25">uint32_t</name><operator pos:start="33:26" pos:end="33:26">)</operator><name pos:start="33:27" pos:end="33:35"><name pos:start="33:27" pos:end="33:28">tb</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:35">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:8">.</operator><name pos:start="35:9" pos:end="35:14">bstate</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:24">BS_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:8">.</operator><name pos:start="37:9" pos:end="37:14">memidx</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <ternary pos:start="37:18" pos:end="37:49"><condition pos:start="37:18" pos:end="37:43"><expr pos:start="37:18" pos:end="37:41"><operator pos:start="37:18" pos:end="37:18">(</operator><name pos:start="37:19" pos:end="37:27"><name pos:start="37:19" pos:end="37:21">ctx</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:27">flags</name></name> <operator pos:start="37:29" pos:end="37:29">&amp;</operator> <name pos:start="37:31" pos:end="37:35">SR_MD</name><operator pos:start="37:36" pos:end="37:36">)</operator> <operator pos:start="37:38" pos:end="37:39">==</operator> <literal type="number" pos:start="37:41" pos:end="37:41">0</literal></expr> ?</condition><then pos:start="37:45" pos:end="37:45"> <expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr> </then><else pos:start="37:47" pos:end="37:49">: <expr pos:start="37:49" pos:end="37:49"><literal type="number" pos:start="37:49" pos:end="37:49">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="41:44">/* We don't know if the delayed pc came from a dynamic or static branch,

       so assume it is a dynamic branch.  */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:7">ctx</name><operator pos:start="43:8" pos:end="43:8">.</operator><name pos:start="43:9" pos:end="43:18">delayed_pc</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">-</operator><literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="43:26" pos:end="43:62">/* use delayed pc from env pointer */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:16"><expr pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:7">ctx</name><operator pos:start="45:8" pos:end="45:8">.</operator><name pos:start="45:9" pos:end="45:10">tb</name></name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:15">tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:52"><expr pos:start="47:5" pos:end="47:51"><name pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:7">ctx</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:26">singlestep_enabled</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:51"><name pos:start="47:30" pos:end="47:31">cs</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:51">singlestep_enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:7">ctx</name><operator pos:start="49:8" pos:end="49:8">.</operator><name pos:start="49:9" pos:end="49:16">features</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:22">env</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:32">features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:7">ctx</name><operator pos:start="51:8" pos:end="51:8">.</operator><name pos:start="51:9" pos:end="51:18">has_movcal</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:25">ctx</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:31">flags</name></name> <operator pos:start="51:33" pos:end="51:33">&amp;</operator> <name pos:start="51:35" pos:end="51:55">TB_FLAG_PENDING_MOVCA</name><operator pos:start="51:56" pos:end="51:56">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:12"><expr pos:start="55:5" pos:end="55:11"><name pos:start="55:5" pos:end="55:6">ii</name> <operator pos:start="55:8" pos:end="55:8">=</operator> <operator pos:start="55:10" pos:end="55:10">-</operator><literal type="number" pos:start="55:11" pos:end="55:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:13">num_insns</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:13">max_insns</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:26"><name pos:start="59:17" pos:end="59:18">tb</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:26">cflags</name></name> <operator pos:start="59:28" pos:end="59:28">&amp;</operator> <name pos:start="59:30" pos:end="59:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:34"><if pos:start="61:5" pos:end="63:34">if <condition pos:start="61:8" pos:end="61:23">(<expr pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:17">max_insns</name> <operator pos:start="61:19" pos:end="61:20">==</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:34"><block_content pos:start="63:9" pos:end="63:34">

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:17">max_insns</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:33">CF_COUNT_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:19"><expr pos:start="65:5" pos:end="65:18"><call pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:16">gen_tb_start</name><argument_list pos:start="65:17" pos:end="65:18">()</argument_list></call></expr>;</expr_stmt>

    <while pos:start="67:5" pos:end="153:5">while <condition pos:start="67:11" pos:end="67:70">(<expr pos:start="67:12" pos:end="67:69"><name pos:start="67:12" pos:end="67:21"><name pos:start="67:12" pos:end="67:14">ctx</name><operator pos:start="67:15" pos:end="67:15">.</operator><name pos:start="67:16" pos:end="67:21">bstate</name></name> <operator pos:start="67:23" pos:end="67:24">==</operator> <name pos:start="67:26" pos:end="67:32">BS_NONE</name> <operator pos:start="67:34" pos:end="67:35">&amp;&amp;</operator> <name pos:start="67:37" pos:end="67:55"><name pos:start="67:37" pos:end="67:43">tcg_ctx</name><operator pos:start="67:44" pos:end="67:44">.</operator><name pos:start="67:45" pos:end="67:55">gen_opc_ptr</name></name> <operator pos:start="67:57" pos:end="67:57">&lt;</operator> <name pos:start="67:59" pos:end="67:69">gen_opc_end</name></expr>)</condition> <block pos:start="67:72" pos:end="153:5">{<block_content pos:start="69:9" pos:end="151:18">

        <if_stmt pos:start="69:9" pos:end="89:9"><if pos:start="69:9" pos:end="89:9">if <condition pos:start="69:12" pos:end="69:54">(<expr pos:start="69:13" pos:end="69:53"><call pos:start="69:13" pos:end="69:53"><name pos:start="69:13" pos:end="69:20">unlikely</name><argument_list pos:start="69:21" pos:end="69:53">(<argument pos:start="69:22" pos:end="69:52"><expr pos:start="69:22" pos:end="69:52"><operator pos:start="69:22" pos:end="69:22">!</operator><call pos:start="69:23" pos:end="69:52"><name pos:start="69:23" pos:end="69:34">QTAILQ_EMPTY</name><argument_list pos:start="69:35" pos:end="69:52">(<argument pos:start="69:36" pos:end="69:51"><expr pos:start="69:36" pos:end="69:51"><operator pos:start="69:36" pos:end="69:36">&amp;</operator><name pos:start="69:37" pos:end="69:51"><name pos:start="69:37" pos:end="69:38">cs</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:51">breakpoints</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:56" pos:end="89:9">{<block_content pos:start="71:13" pos:end="87:13">

            <macro pos:start="71:13" pos:end="71:55"><name pos:start="71:13" pos:end="71:26">QTAILQ_FOREACH</name><argument_list pos:start="71:27" pos:end="71:55">(<argument pos:start="71:28" pos:end="71:29">bp</argument>, <argument pos:start="71:32" pos:end="71:47">&amp;cs-&gt;breakpoints</argument>, <argument pos:start="71:50" pos:end="71:54">entry</argument>)</argument_list></macro> <block pos:start="71:57" pos:end="87:13">{<block_content pos:start="73:17" pos:end="85:17">

                <if_stmt pos:start="73:17" pos:end="85:17"><if pos:start="73:17" pos:end="85:17">if <condition pos:start="73:20" pos:end="73:37">(<expr pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:26"><name pos:start="73:21" pos:end="73:23">ctx</name><operator pos:start="73:24" pos:end="73:24">.</operator><name pos:start="73:25" pos:end="73:26">pc</name></name> <operator pos:start="73:28" pos:end="73:29">==</operator> <name pos:start="73:31" pos:end="73:36"><name pos:start="73:31" pos:end="73:32">bp</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:36">pc</name></name></expr>)</condition> <block pos:start="73:39" pos:end="85:17">{<block_content pos:start="77:21" pos:end="83:26">

		    <comment type="block" pos:start="75:21" pos:end="75:79">/* We have hit a breakpoint - make sure PC is up-to-date */</comment>

		    <expr_stmt pos:start="77:21" pos:end="77:53"><expr pos:start="77:21" pos:end="77:52"><call pos:start="77:21" pos:end="77:52"><name pos:start="77:21" pos:end="77:36">tcg_gen_movi_i32</name><argument_list pos:start="77:37" pos:end="77:52">(<argument pos:start="77:38" pos:end="77:43"><expr pos:start="77:38" pos:end="77:43"><name pos:start="77:38" pos:end="77:43">cpu_pc</name></expr></argument>, <argument pos:start="77:46" pos:end="77:51"><expr pos:start="77:46" pos:end="77:51"><name pos:start="77:46" pos:end="77:51"><name pos:start="77:46" pos:end="77:48">ctx</name><operator pos:start="77:49" pos:end="77:49">.</operator><name pos:start="77:50" pos:end="77:51">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:46"><expr pos:start="79:21" pos:end="79:45"><call pos:start="79:21" pos:end="79:45"><name pos:start="79:21" pos:end="79:36">gen_helper_debug</name><argument_list pos:start="79:37" pos:end="79:45">(<argument pos:start="79:38" pos:end="79:44"><expr pos:start="79:38" pos:end="79:44"><name pos:start="79:38" pos:end="79:44">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:43"><expr pos:start="81:21" pos:end="81:42"><name pos:start="81:21" pos:end="81:30"><name pos:start="81:21" pos:end="81:23">ctx</name><operator pos:start="81:24" pos:end="81:24">.</operator><name pos:start="81:25" pos:end="81:30">bstate</name></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:42">BS_BRANCH</name></expr>;</expr_stmt>

		    <break pos:start="83:21" pos:end="83:26">break;</break>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block>

	</block_content>}</block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="113:9"><if pos:start="91:9" pos:end="113:9">if <condition pos:start="91:12" pos:end="91:22">(<expr pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:21">search_pc</name></expr>)</condition> <block pos:start="91:24" pos:end="113:9">{<block_content pos:start="93:13" pos:end="111:51">

            <expr_stmt pos:start="93:13" pos:end="93:58"><expr pos:start="93:13" pos:end="93:57"><name pos:start="93:13" pos:end="93:13">i</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <name pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:23">tcg_ctx</name><operator pos:start="93:24" pos:end="93:24">.</operator><name pos:start="93:25" pos:end="93:35">gen_opc_ptr</name></name> <operator pos:start="93:37" pos:end="93:37">-</operator> <name pos:start="93:39" pos:end="93:57"><name pos:start="93:39" pos:end="93:45">tcg_ctx</name><operator pos:start="93:46" pos:end="93:46">.</operator><name pos:start="93:47" pos:end="93:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="103:13"><if pos:start="95:13" pos:end="103:13">if <condition pos:start="95:16" pos:end="95:23">(<expr pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:18">ii</name> <operator pos:start="95:20" pos:end="95:20">&lt;</operator> <name pos:start="95:22" pos:end="95:22">i</name></expr>)</condition> <block pos:start="95:25" pos:end="103:13">{<block_content pos:start="97:17" pos:end="101:58">

                <expr_stmt pos:start="97:17" pos:end="97:21"><expr pos:start="97:17" pos:end="97:20"><name pos:start="97:17" pos:end="97:18">ii</name><operator pos:start="97:19" pos:end="97:20">++</operator></expr>;</expr_stmt>

                <while pos:start="99:17" pos:end="101:58">while <condition pos:start="99:23" pos:end="99:30">(<expr pos:start="99:24" pos:end="99:29"><name pos:start="99:24" pos:end="99:25">ii</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <name pos:start="99:29" pos:end="99:29">i</name></expr>)</condition><block type="pseudo" pos:start="101:21" pos:end="101:58"><block_content pos:start="101:21" pos:end="101:58">

                    <expr_stmt pos:start="101:21" pos:end="101:58"><expr pos:start="101:21" pos:end="101:57"><name pos:start="101:21" pos:end="101:53"><name pos:start="101:21" pos:end="101:27">tcg_ctx</name><operator pos:start="101:28" pos:end="101:28">.</operator><name pos:start="101:29" pos:end="101:47">gen_opc_instr_start</name><index pos:start="101:48" pos:end="101:53">[<expr pos:start="101:49" pos:end="101:52"><name pos:start="101:49" pos:end="101:50">ii</name><operator pos:start="101:51" pos:end="101:52">++</operator></expr>]</index></name> <operator pos:start="101:55" pos:end="101:55">=</operator> <literal type="number" pos:start="101:57" pos:end="101:57">0</literal></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:44"><expr pos:start="105:13" pos:end="105:43"><name pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:19">tcg_ctx</name><operator pos:start="105:20" pos:end="105:20">.</operator><name pos:start="105:21" pos:end="105:30">gen_opc_pc</name><index pos:start="105:31" pos:end="105:34">[<expr pos:start="105:32" pos:end="105:33"><name pos:start="105:32" pos:end="105:33">ii</name></expr>]</index></name> <operator pos:start="105:36" pos:end="105:36">=</operator> <name pos:start="105:38" pos:end="105:43"><name pos:start="105:38" pos:end="105:40">ctx</name><operator pos:start="105:41" pos:end="105:41">.</operator><name pos:start="105:42" pos:end="105:43">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:43"><expr pos:start="107:13" pos:end="107:42"><name pos:start="107:13" pos:end="107:30"><name pos:start="107:13" pos:end="107:26">gen_opc_hflags</name><index pos:start="107:27" pos:end="107:30">[<expr pos:start="107:28" pos:end="107:29"><name pos:start="107:28" pos:end="107:29">ii</name></expr>]</index></name> <operator pos:start="107:32" pos:end="107:32">=</operator> <name pos:start="107:34" pos:end="107:42"><name pos:start="107:34" pos:end="107:36">ctx</name><operator pos:start="107:37" pos:end="107:37">.</operator><name pos:start="107:38" pos:end="107:42">flags</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:48"><expr pos:start="109:13" pos:end="109:47"><name pos:start="109:13" pos:end="109:43"><name pos:start="109:13" pos:end="109:19">tcg_ctx</name><operator pos:start="109:20" pos:end="109:20">.</operator><name pos:start="109:21" pos:end="109:39">gen_opc_instr_start</name><index pos:start="109:40" pos:end="109:43">[<expr pos:start="109:41" pos:end="109:42"><name pos:start="109:41" pos:end="109:42">ii</name></expr>]</index></name> <operator pos:start="109:45" pos:end="109:45">=</operator> <literal type="number" pos:start="109:47" pos:end="109:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:51"><expr pos:start="111:13" pos:end="111:50"><name pos:start="111:13" pos:end="111:38"><name pos:start="111:13" pos:end="111:19">tcg_ctx</name><operator pos:start="111:20" pos:end="111:20">.</operator><name pos:start="111:21" pos:end="111:34">gen_opc_icount</name><index pos:start="111:35" pos:end="111:38">[<expr pos:start="111:36" pos:end="111:37"><name pos:start="111:36" pos:end="111:37">ii</name></expr>]</index></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <name pos:start="111:42" pos:end="111:50">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="115:9" pos:end="126:0"><if pos:start="115:9" pos:end="126:0">if <condition pos:start="115:12" pos:end="115:68">(<expr pos:start="115:13" pos:end="115:67"><name pos:start="115:13" pos:end="115:21">num_insns</name> <operator pos:start="115:23" pos:end="115:23">+</operator> <literal type="number" pos:start="115:25" pos:end="115:25">1</literal> <operator pos:start="115:27" pos:end="115:28">==</operator> <name pos:start="115:30" pos:end="115:38">max_insns</name> <operator pos:start="115:40" pos:end="115:41">&amp;&amp;</operator> <operator pos:start="115:43" pos:end="115:43">(</operator><name pos:start="115:44" pos:end="115:53"><name pos:start="115:44" pos:end="115:45">tb</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:53">cflags</name></name> <operator pos:start="115:55" pos:end="115:55">&amp;</operator> <name pos:start="115:57" pos:end="115:66">CF_LAST_IO</name><operator pos:start="115:67" pos:end="115:67">)</operator></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="126:0"><block_content pos:start="117:13" pos:end="126:0">

            <expr_stmt pos:start="117:13" pos:end="126:0"><expr pos:start="117:13" pos:end="117:26"><call pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:24">gen_io_start</name><argument_list pos:start="117:25" pos:end="117:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="119:1" pos:end="119:5">#<cpp:directive pos:start="119:2" pos:end="119:3">if</cpp:directive> <expr pos:start="119:5" pos:end="119:5"><literal type="number" pos:start="119:5" pos:end="119:5">0</literal></expr></cpp:if>

	fprintf(stderr, "Loading opcode at address 0x%08x\n", ctx.pc);

	fflush(stderr);

<cpp:endif pos:start="125:1" pos:end="125:6">#<cpp:directive pos:start="125:2" pos:end="125:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="127:9" pos:end="127:48"><expr pos:start="127:9" pos:end="127:47"><name pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:11">ctx</name><operator pos:start="127:12" pos:end="127:12">.</operator><name pos:start="127:13" pos:end="127:18">opcode</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <call pos:start="127:22" pos:end="127:47"><name pos:start="127:22" pos:end="127:34">cpu_lduw_code</name><argument_list pos:start="127:35" pos:end="127:47">(<argument pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:38">env</name></expr></argument>, <argument pos:start="127:41" pos:end="127:46"><expr pos:start="127:41" pos:end="127:46"><name pos:start="127:41" pos:end="127:46"><name pos:start="127:41" pos:end="127:43">ctx</name><operator pos:start="127:44" pos:end="127:44">.</operator><name pos:start="127:45" pos:end="127:46">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="129:9" pos:end="129:25"><expr pos:start="129:9" pos:end="129:24"><call pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:18">decode_opc</name><argument_list pos:start="129:19" pos:end="129:24">(<argument pos:start="129:20" pos:end="129:23"><expr pos:start="129:20" pos:end="129:23"><operator pos:start="129:20" pos:end="129:20">&amp;</operator><name pos:start="129:21" pos:end="129:23">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:20"><expr pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:17">num_insns</name><operator pos:start="131:18" pos:end="131:19">++</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:14"><name pos:start="133:9" pos:end="133:11">ctx</name><operator pos:start="133:12" pos:end="133:12">.</operator><name pos:start="133:13" pos:end="133:14">pc</name></name> <operator pos:start="133:16" pos:end="133:17">+=</operator> <literal type="number" pos:start="133:19" pos:end="133:19">2</literal></expr>;</expr_stmt>

	<if_stmt pos:start="135:9" pos:end="137:18"><if pos:start="135:9" pos:end="137:18">if <condition pos:start="135:12" pos:end="135:51">(<expr pos:start="135:13" pos:end="135:50"><operator pos:start="135:13" pos:end="135:13">(</operator><name pos:start="135:14" pos:end="135:19"><name pos:start="135:14" pos:end="135:16">ctx</name><operator pos:start="135:17" pos:end="135:17">.</operator><name pos:start="135:18" pos:end="135:19">pc</name></name> <operator pos:start="135:21" pos:end="135:21">&amp;</operator> <operator pos:start="135:23" pos:end="135:23">(</operator><name pos:start="135:24" pos:end="135:39">TARGET_PAGE_SIZE</name> <operator pos:start="135:41" pos:end="135:41">-</operator> <literal type="number" pos:start="135:43" pos:end="135:43">1</literal><operator pos:start="135:44" pos:end="135:44">)</operator><operator pos:start="135:45" pos:end="135:45">)</operator> <operator pos:start="135:47" pos:end="135:48">==</operator> <literal type="number" pos:start="135:50" pos:end="135:50">0</literal></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:18"><block_content pos:start="137:13" pos:end="137:18">

	    <break pos:start="137:13" pos:end="137:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:35">(<expr pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:14">cs</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:34">singlestep_enabled</name></name></expr>)</condition> <block pos:start="139:37" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:18">

	    <break pos:start="141:13" pos:end="141:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="145:9" pos:end="147:18"><if pos:start="145:9" pos:end="147:18">if <condition pos:start="145:12" pos:end="145:35">(<expr pos:start="145:13" pos:end="145:34"><name pos:start="145:13" pos:end="145:21">num_insns</name> <operator pos:start="145:23" pos:end="145:24">&gt;=</operator> <name pos:start="145:26" pos:end="145:34">max_insns</name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:18"><block_content pos:start="147:13" pos:end="147:18">

            <break pos:start="147:13" pos:end="147:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="149:9" pos:end="151:18"><if pos:start="149:9" pos:end="151:18">if <condition pos:start="149:12" pos:end="149:23">(<expr pos:start="149:13" pos:end="149:22"><name pos:start="149:13" pos:end="149:22">singlestep</name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:18"><block_content pos:start="151:13" pos:end="151:18">

            <break pos:start="151:13" pos:end="151:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="155:5" pos:end="157:21"><if pos:start="155:5" pos:end="157:21">if <condition pos:start="155:8" pos:end="155:32">(<expr pos:start="155:9" pos:end="155:31"><name pos:start="155:9" pos:end="155:18"><name pos:start="155:9" pos:end="155:10">tb</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:18">cflags</name></name> <operator pos:start="155:20" pos:end="155:20">&amp;</operator> <name pos:start="155:22" pos:end="155:31">CF_LAST_IO</name></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:21"><block_content pos:start="157:9" pos:end="157:21">

        <expr_stmt pos:start="157:9" pos:end="157:21"><expr pos:start="157:9" pos:end="157:20"><call pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:18">gen_io_end</name><argument_list pos:start="157:19" pos:end="157:20">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="159:5" pos:end="203:5"><if pos:start="159:5" pos:end="165:5">if <condition pos:start="159:8" pos:end="159:31">(<expr pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:10">cs</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:30">singlestep_enabled</name></name></expr>)</condition> <block pos:start="159:33" pos:end="165:5">{<block_content pos:start="161:9" pos:end="163:34">

        <expr_stmt pos:start="161:9" pos:end="161:41"><expr pos:start="161:9" pos:end="161:40"><call pos:start="161:9" pos:end="161:40"><name pos:start="161:9" pos:end="161:24">tcg_gen_movi_i32</name><argument_list pos:start="161:25" pos:end="161:40">(<argument pos:start="161:26" pos:end="161:31"><expr pos:start="161:26" pos:end="161:31"><name pos:start="161:26" pos:end="161:31">cpu_pc</name></expr></argument>, <argument pos:start="161:34" pos:end="161:39"><expr pos:start="161:34" pos:end="161:39"><name pos:start="161:34" pos:end="161:39"><name pos:start="161:34" pos:end="161:36">ctx</name><operator pos:start="161:37" pos:end="161:37">.</operator><name pos:start="161:38" pos:end="161:39">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:34"><expr pos:start="163:9" pos:end="163:33"><call pos:start="163:9" pos:end="163:33"><name pos:start="163:9" pos:end="163:24">gen_helper_debug</name><argument_list pos:start="163:25" pos:end="163:33">(<argument pos:start="163:26" pos:end="163:32"><expr pos:start="163:26" pos:end="163:32"><name pos:start="163:26" pos:end="163:32">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="165:7" pos:end="203:5">else <block pos:start="165:12" pos:end="203:5">{<block_content pos:start="167:9" pos:end="201:9">

	<switch pos:start="167:9" pos:end="201:9">switch <condition pos:start="167:16" pos:end="167:27">(<expr pos:start="167:17" pos:end="167:26"><name pos:start="167:17" pos:end="167:26"><name pos:start="167:17" pos:end="167:19">ctx</name><operator pos:start="167:20" pos:end="167:20">.</operator><name pos:start="167:21" pos:end="167:26">bstate</name></name></expr>)</condition> <block pos:start="167:29" pos:end="201:9">{<block_content pos:start="169:9" pos:end="199:18">

        <case pos:start="169:9" pos:end="169:21">case <expr pos:start="169:14" pos:end="169:20"><name pos:start="169:14" pos:end="169:20">BS_STOP</name></expr>:</case>

            <comment type="block" pos:start="171:13" pos:end="171:45">/* gen_op_interrupt_restart(); */</comment>

            <comment type="block" pos:start="173:13" pos:end="173:30">/* fall through */</comment>

        <case pos:start="175:9" pos:end="175:21">case <expr pos:start="175:14" pos:end="175:20"><name pos:start="175:14" pos:end="175:20">BS_NONE</name></expr>:</case>

            <if_stmt pos:start="177:13" pos:end="181:13"><if pos:start="177:13" pos:end="181:13">if <condition pos:start="177:16" pos:end="177:26">(<expr pos:start="177:17" pos:end="177:25"><name pos:start="177:17" pos:end="177:25"><name pos:start="177:17" pos:end="177:19">ctx</name><operator pos:start="177:20" pos:end="177:20">.</operator><name pos:start="177:21" pos:end="177:25">flags</name></name></expr>)</condition> <block pos:start="177:28" pos:end="181:13">{<block_content pos:start="179:17" pos:end="179:64">

                <expr_stmt pos:start="179:17" pos:end="179:64"><expr pos:start="179:17" pos:end="179:63"><call pos:start="179:17" pos:end="179:63"><name pos:start="179:17" pos:end="179:31">gen_store_flags</name><argument_list pos:start="179:32" pos:end="179:63">(<argument pos:start="179:33" pos:end="179:62"><expr pos:start="179:33" pos:end="179:62"><name pos:start="179:33" pos:end="179:41"><name pos:start="179:33" pos:end="179:35">ctx</name><operator pos:start="179:36" pos:end="179:36">.</operator><name pos:start="179:37" pos:end="179:41">flags</name></name> <operator pos:start="179:43" pos:end="179:43">|</operator> <name pos:start="179:45" pos:end="179:62">DELAY_SLOT_CLEARME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:41"><expr pos:start="183:13" pos:end="183:40"><call pos:start="183:13" pos:end="183:40"><name pos:start="183:13" pos:end="183:23">gen_goto_tb</name><argument_list pos:start="183:24" pos:end="183:40">(<argument pos:start="183:25" pos:end="183:28"><expr pos:start="183:25" pos:end="183:28"><operator pos:start="183:25" pos:end="183:25">&amp;</operator><name pos:start="183:26" pos:end="183:28">ctx</name></expr></argument>, <argument pos:start="183:31" pos:end="183:31"><expr pos:start="183:31" pos:end="183:31"><literal type="number" pos:start="183:31" pos:end="183:31">0</literal></expr></argument>, <argument pos:start="183:34" pos:end="183:39"><expr pos:start="183:34" pos:end="183:39"><name pos:start="183:34" pos:end="183:39"><name pos:start="183:34" pos:end="183:36">ctx</name><operator pos:start="183:37" pos:end="183:37">.</operator><name pos:start="183:38" pos:end="183:39">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="185:13" pos:end="185:18">break;</break>

        <case pos:start="187:9" pos:end="187:21">case <expr pos:start="187:14" pos:end="187:20"><name pos:start="187:14" pos:end="187:20">BS_EXCP</name></expr>:</case>

            <comment type="block" pos:start="189:13" pos:end="189:45">/* gen_op_interrupt_restart(); */</comment>

            <expr_stmt pos:start="191:13" pos:end="191:31"><expr pos:start="191:13" pos:end="191:30"><call pos:start="191:13" pos:end="191:30"><name pos:start="191:13" pos:end="191:27">tcg_gen_exit_tb</name><argument_list pos:start="191:28" pos:end="191:30">(<argument pos:start="191:29" pos:end="191:29"><expr pos:start="191:29" pos:end="191:29"><literal type="number" pos:start="191:29" pos:end="191:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:23">case <expr pos:start="195:14" pos:end="195:22"><name pos:start="195:14" pos:end="195:22">BS_BRANCH</name></expr>:</case>

        <default pos:start="197:9" pos:end="197:16">default:</default>

            <break pos:start="199:13" pos:end="199:18">break;</break>

	</block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:30"><expr pos:start="207:5" pos:end="207:29"><call pos:start="207:5" pos:end="207:29"><name pos:start="207:5" pos:end="207:14">gen_tb_end</name><argument_list pos:start="207:15" pos:end="207:29">(<argument pos:start="207:16" pos:end="207:17"><expr pos:start="207:16" pos:end="207:17"><name pos:start="207:16" pos:end="207:17">tb</name></expr></argument>, <argument pos:start="207:20" pos:end="207:28"><expr pos:start="207:20" pos:end="207:28"><name pos:start="207:20" pos:end="207:28">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:40"><expr pos:start="209:5" pos:end="209:39"><operator pos:start="209:5" pos:end="209:5">*</operator><name pos:start="209:6" pos:end="209:24"><name pos:start="209:6" pos:end="209:12">tcg_ctx</name><operator pos:start="209:13" pos:end="209:13">.</operator><name pos:start="209:14" pos:end="209:24">gen_opc_ptr</name></name> <operator pos:start="209:26" pos:end="209:26">=</operator> <name pos:start="209:28" pos:end="209:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="211:5" pos:end="232:0"><if pos:start="211:5" pos:end="221:5">if <condition pos:start="211:8" pos:end="211:18">(<expr pos:start="211:9" pos:end="211:17"><name pos:start="211:9" pos:end="211:17">search_pc</name></expr>)</condition> <block pos:start="211:20" pos:end="221:5">{<block_content pos:start="213:9" pos:end="219:50">

        <expr_stmt pos:start="213:9" pos:end="213:54"><expr pos:start="213:9" pos:end="213:53"><name pos:start="213:9" pos:end="213:9">i</name> <operator pos:start="213:11" pos:end="213:11">=</operator> <name pos:start="213:13" pos:end="213:31"><name pos:start="213:13" pos:end="213:19">tcg_ctx</name><operator pos:start="213:20" pos:end="213:20">.</operator><name pos:start="213:21" pos:end="213:31">gen_opc_ptr</name></name> <operator pos:start="213:33" pos:end="213:33">-</operator> <name pos:start="213:35" pos:end="213:53"><name pos:start="213:35" pos:end="213:41">tcg_ctx</name><operator pos:start="213:42" pos:end="213:42">.</operator><name pos:start="213:43" pos:end="213:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:13"><expr pos:start="215:9" pos:end="215:12"><name pos:start="215:9" pos:end="215:10">ii</name><operator pos:start="215:11" pos:end="215:12">++</operator></expr>;</expr_stmt>

        <while pos:start="217:9" pos:end="219:50">while <condition pos:start="217:15" pos:end="217:23">(<expr pos:start="217:16" pos:end="217:22"><name pos:start="217:16" pos:end="217:17">ii</name> <operator pos:start="217:19" pos:end="217:20">&lt;=</operator> <name pos:start="217:22" pos:end="217:22">i</name></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="219:50"><block_content pos:start="219:13" pos:end="219:50">

            <expr_stmt pos:start="219:13" pos:end="219:50"><expr pos:start="219:13" pos:end="219:49"><name pos:start="219:13" pos:end="219:45"><name pos:start="219:13" pos:end="219:19">tcg_ctx</name><operator pos:start="219:20" pos:end="219:20">.</operator><name pos:start="219:21" pos:end="219:39">gen_opc_instr_start</name><index pos:start="219:40" pos:end="219:45">[<expr pos:start="219:41" pos:end="219:44"><name pos:start="219:41" pos:end="219:42">ii</name><operator pos:start="219:43" pos:end="219:44">++</operator></expr>]</index></name> <operator pos:start="219:47" pos:end="219:47">=</operator> <literal type="number" pos:start="219:49" pos:end="219:49">0</literal></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></if> <else pos:start="221:7" pos:end="232:0">else <block pos:start="221:12" pos:end="232:0">{<block_content pos:start="223:9" pos:end="225:31">

        <expr_stmt pos:start="223:9" pos:end="223:37"><expr pos:start="223:9" pos:end="223:36"><name pos:start="223:9" pos:end="223:16"><name pos:start="223:9" pos:end="223:10">tb</name><operator pos:start="223:11" pos:end="223:12">-&gt;</operator><name pos:start="223:13" pos:end="223:16">size</name></name> <operator pos:start="223:18" pos:end="223:18">=</operator> <name pos:start="223:20" pos:end="223:25"><name pos:start="223:20" pos:end="223:22">ctx</name><operator pos:start="223:23" pos:end="223:23">.</operator><name pos:start="223:24" pos:end="223:25">pc</name></name> <operator pos:start="223:27" pos:end="223:27">-</operator> <name pos:start="223:29" pos:end="223:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:31"><expr pos:start="225:9" pos:end="225:30"><name pos:start="225:9" pos:end="225:18"><name pos:start="225:9" pos:end="225:10">tb</name><operator pos:start="225:11" pos:end="225:12">-&gt;</operator><name pos:start="225:13" pos:end="225:18">icount</name></name> <operator pos:start="225:20" pos:end="225:20">=</operator> <name pos:start="225:22" pos:end="225:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="231:1" pos:end="231:18">#<cpp:directive pos:start="231:2" pos:end="231:6">ifdef</cpp:directive> <name pos:start="231:8" pos:end="231:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="233:5" pos:end="244:0"><if pos:start="233:5" pos:end="244:0">if <condition pos:start="233:8" pos:end="233:46">(<expr pos:start="233:9" pos:end="233:45"><call pos:start="233:9" pos:end="233:45"><name pos:start="233:9" pos:end="233:26">qemu_loglevel_mask</name><argument_list pos:start="233:27" pos:end="233:45">(<argument pos:start="233:28" pos:end="233:44"><expr pos:start="233:28" pos:end="233:44"><name pos:start="233:28" pos:end="233:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="233:48" pos:end="244:0">{<block_content pos:start="235:9" pos:end="239:23">

	<expr_stmt pos:start="235:9" pos:end="235:26"><expr pos:start="235:9" pos:end="235:25"><call pos:start="235:9" pos:end="235:25"><name pos:start="235:9" pos:end="235:16">qemu_log</name><argument_list pos:start="235:17" pos:end="235:25">(<argument pos:start="235:18" pos:end="235:24"><expr pos:start="235:18" pos:end="235:24"><literal type="string" pos:start="235:18" pos:end="235:24">"IN:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="235:33" pos:end="235:65">/* , lookup_symbol(pc_start)); */</comment>

        <expr_stmt pos:start="237:9" pos:end="237:62"><expr pos:start="237:9" pos:end="237:61"><call pos:start="237:9" pos:end="237:61"><name pos:start="237:9" pos:end="237:24">log_target_disas</name><argument_list pos:start="237:25" pos:end="237:61">(<argument pos:start="237:26" pos:end="237:28"><expr pos:start="237:26" pos:end="237:28"><name pos:start="237:26" pos:end="237:28">env</name></expr></argument>, <argument pos:start="237:31" pos:end="237:38"><expr pos:start="237:31" pos:end="237:38"><name pos:start="237:31" pos:end="237:38">pc_start</name></expr></argument>, <argument pos:start="237:41" pos:end="237:57"><expr pos:start="237:41" pos:end="237:57"><name pos:start="237:41" pos:end="237:46"><name pos:start="237:41" pos:end="237:43">ctx</name><operator pos:start="237:44" pos:end="237:44">.</operator><name pos:start="237:45" pos:end="237:46">pc</name></name> <operator pos:start="237:48" pos:end="237:48">-</operator> <name pos:start="237:50" pos:end="237:57">pc_start</name></expr></argument>, <argument pos:start="237:60" pos:end="237:60"><expr pos:start="237:60" pos:end="237:60"><literal type="number" pos:start="237:60" pos:end="237:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="239:9" pos:end="239:23"><expr pos:start="239:9" pos:end="239:22"><call pos:start="239:9" pos:end="239:22"><name pos:start="239:9" pos:end="239:16">qemu_log</name><argument_list pos:start="239:17" pos:end="239:22">(<argument pos:start="239:18" pos:end="239:21"><expr pos:start="239:18" pos:end="239:21"><literal type="string" pos:start="239:18" pos:end="239:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="243:1" pos:end="243:6">#<cpp:directive pos:start="243:2" pos:end="243:6">endif</cpp:directive></cpp:endif>

</block_content>}</block>
</unit>
