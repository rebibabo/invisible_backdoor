<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15851.c" pos:tabs="8"><function pos:start="1:1" pos:end="42:42"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">clv_decode_frame</name><parameter_list pos:start="1:28" pos:end="2:60">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:42"><decl pos:start="2:29" pos:end="2:42"><type pos:start="2:29" pos:end="2:42"><name pos:start="2:29" pos:end="2:31">int</name> <modifier pos:start="2:33" pos:end="2:33">*</modifier></type><name pos:start="2:34" pos:end="2:42">got_frame</name></decl></parameter>, <parameter pos:start="2:45" pos:end="2:59"><decl pos:start="2:45" pos:end="2:59"><type pos:start="2:45" pos:end="2:59"><name pos:start="2:45" pos:end="2:52">AVPacket</name> <modifier pos:start="2:54" pos:end="2:54">*</modifier></type><name pos:start="2:55" pos:end="2:59">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="42:42">{<block_content pos:start="4:5" pos:end="42:42">
    <decl_stmt pos:start="4:5" pos:end="4:37"><decl pos:start="4:5" pos:end="4:36"><type pos:start="4:5" pos:end="4:19"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:17">uint8_t</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:22">buf</name> <init pos:start="4:24" pos:end="4:36">= <expr pos:start="4:26" pos:end="4:36"><name pos:start="4:26" pos:end="4:36"><name pos:start="4:26" pos:end="4:30">avpkt</name><operator pos:start="4:31" pos:end="4:32">-&gt;</operator><name pos:start="4:33" pos:end="4:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">buf_size</name> <init pos:start="5:18" pos:end="5:30">= <expr pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:24">avpkt</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:30">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:37"><decl pos:start="6:5" pos:end="6:36"><type pos:start="6:5" pos:end="6:16"><name pos:start="6:5" pos:end="6:14">CLVContext</name> <modifier pos:start="6:16" pos:end="6:16">*</modifier></type><name pos:start="6:17" pos:end="6:17">c</name> <init pos:start="6:19" pos:end="6:36">= <expr pos:start="6:21" pos:end="6:36"><name pos:start="6:21" pos:end="6:36"><name pos:start="6:21" pos:end="6:25">avctx</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">GetByteContext</name></type> <name pos:start="7:20" pos:end="7:21">gb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:24"><decl pos:start="8:5" pos:end="8:23"><type pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:12">uint32_t</name></type> <name pos:start="8:14" pos:end="8:23">frame_type</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:12"><decl pos:start="10:5" pos:end="10:11"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:11">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">mb_ret</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:41"><expr pos:start="12:5" pos:end="12:40"><call pos:start="12:5" pos:end="12:40"><name pos:start="12:5" pos:end="12:20">bytestream2_init</name><argument_list pos:start="12:21" pos:end="12:40">(<argument pos:start="12:22" pos:end="12:24"><expr pos:start="12:22" pos:end="12:24"><operator pos:start="12:22" pos:end="12:22">&amp;</operator><name pos:start="12:23" pos:end="12:24">gb</name></expr></argument>, <argument pos:start="12:27" pos:end="12:29"><expr pos:start="12:27" pos:end="12:29"><name pos:start="12:27" pos:end="12:29">buf</name></expr></argument>, <argument pos:start="12:32" pos:end="12:39"><expr pos:start="12:32" pos:end="12:39"><name pos:start="12:32" pos:end="12:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="42:42"><if pos:start="13:5" pos:end="42:42">if <condition pos:start="13:8" pos:end="13:51">(<expr pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:24">codec_tag</name></name> <operator pos:start="13:26" pos:end="13:27">==</operator> <call pos:start="13:29" pos:end="13:50"><name pos:start="13:29" pos:end="13:33">MKTAG</name><argument_list pos:start="13:34" pos:end="13:50">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><literal type="char" pos:start="13:35" pos:end="13:37">'C'</literal></expr></argument>,<argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><literal type="char" pos:start="13:39" pos:end="13:41">'L'</literal></expr></argument>,<argument pos:start="13:43" pos:end="13:45"><expr pos:start="13:43" pos:end="13:45"><literal type="char" pos:start="13:43" pos:end="13:45">'V'</literal></expr></argument>,<argument pos:start="13:47" pos:end="13:49"><expr pos:start="13:47" pos:end="13:49"><literal type="char" pos:start="13:47" pos:end="13:49">'1'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:53" pos:end="42:42">{<block_content pos:start="14:9" pos:end="42:42">
        <decl_stmt pos:start="14:9" pos:end="14:45"><decl pos:start="14:9" pos:end="14:44"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:16">skip</name> <init pos:start="14:18" pos:end="14:44">= <expr pos:start="14:20" pos:end="14:44"><call pos:start="14:20" pos:end="14:44"><name pos:start="14:20" pos:end="14:39">bytestream2_get_byte</name><argument_list pos:start="14:40" pos:end="14:44">(<argument pos:start="14:41" pos:end="14:43"><expr pos:start="14:41" pos:end="14:43"><operator pos:start="14:41" pos:end="14:41">&amp;</operator><name pos:start="14:42" pos:end="14:43">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:46"><expr pos:start="15:9" pos:end="15:45"><call pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:24">bytestream2_skip</name><argument_list pos:start="15:25" pos:end="15:45">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:28">gb</name></expr></argument>, <argument pos:start="15:31" pos:end="15:44"><expr pos:start="15:31" pos:end="15:44"><operator pos:start="15:31" pos:end="15:31">(</operator><name pos:start="15:32" pos:end="15:35">skip</name> <operator pos:start="15:37" pos:end="15:37">+</operator> <literal type="number" pos:start="15:39" pos:end="15:39">1</literal><operator pos:start="15:40" pos:end="15:40">)</operator> <operator pos:start="15:42" pos:end="15:42">*</operator> <literal type="number" pos:start="15:44" pos:end="15:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:43"><expr pos:start="16:5" pos:end="16:42"><name pos:start="16:5" pos:end="16:14">frame_type</name> <operator pos:start="16:16" pos:end="16:16">=</operator> <call pos:start="16:18" pos:end="16:42"><name pos:start="16:18" pos:end="16:37">bytestream2_get_byte</name><argument_list pos:start="16:38" pos:end="16:42">(<argument pos:start="16:39" pos:end="16:41"><expr pos:start="16:39" pos:end="16:41"><operator pos:start="16:39" pos:end="16:39">&amp;</operator><name pos:start="16:40" pos:end="16:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="18:19"><if pos:start="17:5" pos:end="18:19">if <condition pos:start="17:8" pos:end="17:51">(<expr pos:start="17:9" pos:end="17:50"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:12">ret</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:45"><name pos:start="17:16" pos:end="17:30">ff_reget_buffer</name><argument_list pos:start="17:31" pos:end="17:45">(<argument pos:start="17:32" pos:end="17:36"><expr pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:36">avctx</name></expr></argument>, <argument pos:start="17:39" pos:end="17:44"><expr pos:start="17:39" pos:end="17:44"><name pos:start="17:39" pos:end="17:44"><name pos:start="17:39" pos:end="17:39">c</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:44">pic</name></name></expr></argument>)</argument_list></call><operator pos:start="17:46" pos:end="17:46">)</operator> <operator pos:start="17:48" pos:end="17:48">&lt;</operator> <literal type="number" pos:start="17:50" pos:end="17:50">0</literal></expr>)</condition><block type="pseudo" pos:start="18:9" pos:end="18:19"><block_content pos:start="18:9" pos:end="18:19">
        <return pos:start="18:9" pos:end="18:19">return <expr pos:start="18:16" pos:end="18:18"><name pos:start="18:16" pos:end="18:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:5">c</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:10">pic</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:21">key_frame</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <ternary pos:start="19:25" pos:end="19:49"><condition pos:start="19:25" pos:end="19:43"><expr pos:start="19:25" pos:end="19:41"><name pos:start="19:25" pos:end="19:34">frame_type</name> <operator pos:start="19:36" pos:end="19:36">&amp;</operator> <literal type="number" pos:start="19:38" pos:end="19:41">0x20</literal></expr> ?</condition><then pos:start="19:45" pos:end="19:45"> <expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">1</literal></expr> </then><else pos:start="19:47" pos:end="19:49">: <expr pos:start="19:49" pos:end="19:49"><literal type="number" pos:start="19:49" pos:end="19:49">0</literal></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:82"><expr pos:start="20:5" pos:end="20:81"><name pos:start="20:5" pos:end="20:21"><name pos:start="20:5" pos:end="20:5">c</name><operator pos:start="20:6" pos:end="20:7">-&gt;</operator><name pos:start="20:8" pos:end="20:10">pic</name><operator pos:start="20:11" pos:end="20:12">-&gt;</operator><name pos:start="20:13" pos:end="20:21">pict_type</name></name> <operator pos:start="20:23" pos:end="20:23">=</operator> <ternary pos:start="20:25" pos:end="20:81"><condition pos:start="20:25" pos:end="20:43"><expr pos:start="20:25" pos:end="20:41"><name pos:start="20:25" pos:end="20:34">frame_type</name> <operator pos:start="20:36" pos:end="20:36">&amp;</operator> <literal type="number" pos:start="20:38" pos:end="20:41">0x20</literal></expr> ?</condition><then pos:start="20:45" pos:end="20:61"> <expr pos:start="20:45" pos:end="20:61"><name pos:start="20:45" pos:end="20:61">AV_PICTURE_TYPE_I</name></expr> </then><else pos:start="20:63" pos:end="20:81">: <expr pos:start="20:65" pos:end="20:81"><name pos:start="20:65" pos:end="20:81">AV_PICTURE_TYPE_P</name></expr></else></ternary></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="42:42"><if pos:start="21:5" pos:end="42:42">if <condition pos:start="21:8" pos:end="21:25">(<expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:18">frame_type</name> <operator pos:start="21:20" pos:end="21:20">&amp;</operator> <literal type="number" pos:start="21:22" pos:end="21:24">0x2</literal></expr>)</condition> <block pos:start="21:27" pos:end="42:42">{<block_content pos:start="22:9" pos:end="42:42">
        <expr_stmt pos:start="22:9" pos:end="22:34"><expr pos:start="22:9" pos:end="22:33"><call pos:start="22:9" pos:end="22:33"><name pos:start="22:9" pos:end="22:28">bytestream2_get_be32</name><argument_list pos:start="22:29" pos:end="22:33">(<argument pos:start="22:30" pos:end="22:32"><expr pos:start="22:30" pos:end="22:32"><operator pos:start="22:30" pos:end="22:30">&amp;</operator><name pos:start="22:31" pos:end="22:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="22:36" pos:end="22:49">// frame size;</comment>
        <expr_stmt pos:start="23:9" pos:end="23:55"><expr pos:start="23:9" pos:end="23:54"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">ac_quant</name></name>        <operator pos:start="23:28" pos:end="23:28">=</operator> <call pos:start="23:30" pos:end="23:54"><name pos:start="23:30" pos:end="23:49">bytestream2_get_byte</name><argument_list pos:start="23:50" pos:end="23:54">(<argument pos:start="23:51" pos:end="23:53"><expr pos:start="23:51" pos:end="23:53"><operator pos:start="23:51" pos:end="23:51">&amp;</operator><name pos:start="23:52" pos:end="23:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:32"><expr pos:start="24:9" pos:end="24:31"><name pos:start="24:9" pos:end="24:24"><name pos:start="24:9" pos:end="24:9">c</name><operator pos:start="24:10" pos:end="24:11">-&gt;</operator><name pos:start="24:12" pos:end="24:24">luma_dc_quant</name></name>   <operator pos:start="24:28" pos:end="24:28">=</operator> <literal type="number" pos:start="24:30" pos:end="24:31">32</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:32"><expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:9">c</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:26">chroma_dc_quant</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <literal type="number" pos:start="25:30" pos:end="25:31">32</literal></expr>;</expr_stmt>
        <if_stmt pos:start="26:9" pos:end="28:23"><if pos:start="26:9" pos:end="28:23">if <condition pos:start="26:12" pos:end="27:75">(<expr pos:start="26:13" pos:end="27:74"><operator pos:start="26:13" pos:end="26:13">(</operator><name pos:start="26:14" pos:end="26:16">ret</name> <operator pos:start="26:18" pos:end="26:18">=</operator> <call pos:start="26:20" pos:end="27:69"><name pos:start="26:20" pos:end="26:33">init_get_bits8</name><argument_list pos:start="26:34" pos:end="27:69">(<argument pos:start="26:35" pos:end="26:40"><expr pos:start="26:35" pos:end="26:40"><operator pos:start="26:35" pos:end="26:35">&amp;</operator><name pos:start="26:36" pos:end="26:40"><name pos:start="26:36" pos:end="26:36">c</name><operator pos:start="26:37" pos:end="26:38">-&gt;</operator><name pos:start="26:39" pos:end="26:40">gb</name></name></expr></argument>, <argument pos:start="26:43" pos:end="26:69"><expr pos:start="26:43" pos:end="26:69"><name pos:start="26:43" pos:end="26:45">buf</name> <operator pos:start="26:47" pos:end="26:47">+</operator> <call pos:start="26:49" pos:end="26:69"><name pos:start="26:49" pos:end="26:64">bytestream2_tell</name><argument_list pos:start="26:65" pos:end="26:69">(<argument pos:start="26:66" pos:end="26:68"><expr pos:start="26:66" pos:end="26:68"><operator pos:start="26:66" pos:end="26:66">&amp;</operator><name pos:start="26:67" pos:end="26:68">gb</name></expr></argument>)</argument_list></call></expr></argument>,
                                  <argument pos:start="27:35" pos:end="27:68"><expr pos:start="27:35" pos:end="27:68"><operator pos:start="27:35" pos:end="27:35">(</operator><name pos:start="27:36" pos:end="27:43">buf_size</name> <operator pos:start="27:45" pos:end="27:45">-</operator> <call pos:start="27:47" pos:end="27:67"><name pos:start="27:47" pos:end="27:62">bytestream2_tell</name><argument_list pos:start="27:63" pos:end="27:67">(<argument pos:start="27:64" pos:end="27:66"><expr pos:start="27:64" pos:end="27:66"><operator pos:start="27:64" pos:end="27:64">&amp;</operator><name pos:start="27:65" pos:end="27:66">gb</name></expr></argument>)</argument_list></call><operator pos:start="27:68" pos:end="27:68">)</operator></expr></argument>)</argument_list></call><operator pos:start="27:70" pos:end="27:70">)</operator> <operator pos:start="27:72" pos:end="27:72">&lt;</operator> <literal type="number" pos:start="27:74" pos:end="27:74">0</literal></expr>)</condition><block type="pseudo" pos:start="28:13" pos:end="28:23"><block_content pos:start="28:13" pos:end="28:23">
            <return pos:start="28:13" pos:end="28:23">return <expr pos:start="28:20" pos:end="28:22"><name pos:start="28:20" pos:end="28:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <for pos:start="29:9" pos:end="30:30">for <control pos:start="29:13" pos:end="29:31">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <literal type="number" pos:start="29:25" pos:end="29:25">3</literal></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">i</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="30:13" pos:end="30:30"><block_content pos:start="30:13" pos:end="30:30">
            <expr_stmt pos:start="30:13" pos:end="30:30"><expr pos:start="30:13" pos:end="30:29"><name pos:start="30:13" pos:end="30:24"><name pos:start="30:13" pos:end="30:13">c</name><operator pos:start="30:14" pos:end="30:15">-&gt;</operator><name pos:start="30:16" pos:end="30:21">top_dc</name><index pos:start="30:22" pos:end="30:24">[<expr pos:start="30:23" pos:end="30:23"><name pos:start="30:23" pos:end="30:23">i</name></expr>]</index></name> <operator pos:start="30:26" pos:end="30:26">=</operator> <literal type="number" pos:start="30:28" pos:end="30:29">32</literal></expr>;</expr_stmt></block_content></block></for>
        <for pos:start="31:9" pos:end="32:31">for <control pos:start="31:13" pos:end="31:31">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <literal type="number" pos:start="31:25" pos:end="31:25">4</literal></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="32:13" pos:end="32:31"><block_content pos:start="32:13" pos:end="32:31">
            <expr_stmt pos:start="32:13" pos:end="32:31"><expr pos:start="32:13" pos:end="32:30"><name pos:start="32:13" pos:end="32:25"><name pos:start="32:13" pos:end="32:13">c</name><operator pos:start="32:14" pos:end="32:15">-&gt;</operator><name pos:start="32:16" pos:end="32:22">left_dc</name><index pos:start="32:23" pos:end="32:25">[<expr pos:start="32:24" pos:end="32:24"><name pos:start="32:24" pos:end="32:24">i</name></expr>]</index></name> <operator pos:start="32:27" pos:end="32:27">=</operator> <literal type="number" pos:start="32:29" pos:end="32:30">32</literal></expr>;</expr_stmt></block_content></block></for>
        <for pos:start="33:9" pos:end="42:42">for <control pos:start="33:13" pos:end="33:42">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">j</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:37"><expr pos:start="33:21" pos:end="33:36"><name pos:start="33:21" pos:end="33:21">j</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:36"><name pos:start="33:25" pos:end="33:25">c</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:36">mb_height</name></name></expr>;</condition> <incr pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:39">j</name><operator pos:start="33:40" pos:end="33:41">++</operator></expr></incr>)</control> <block pos:start="33:44" pos:end="42:42">{<block_content pos:start="34:13" pos:end="42:42">
            <for pos:start="34:13" pos:end="38:5">for <control pos:start="34:17" pos:end="34:45">(<init pos:start="34:18" pos:end="34:23"><expr pos:start="34:18" pos:end="34:22"><name pos:start="34:18" pos:end="34:18">i</name> <operator pos:start="34:20" pos:end="34:20">=</operator> <literal type="number" pos:start="34:22" pos:end="34:22">0</literal></expr>;</init> <condition pos:start="34:25" pos:end="34:40"><expr pos:start="34:25" pos:end="34:39"><name pos:start="34:25" pos:end="34:25">i</name> <operator pos:start="34:27" pos:end="34:27">&lt;</operator> <name pos:start="34:29" pos:end="34:39"><name pos:start="34:29" pos:end="34:29">c</name><operator pos:start="34:30" pos:end="34:31">-&gt;</operator><name pos:start="34:32" pos:end="34:39">mb_width</name></name></expr>;</condition> <incr pos:start="34:42" pos:end="34:44"><expr pos:start="34:42" pos:end="34:44"><name pos:start="34:42" pos:end="34:42">i</name><operator pos:start="34:43" pos:end="34:44">++</operator></expr></incr>)</control> <block pos:start="34:47" pos:end="38:5">{<block_content pos:start="35:17" pos:end="37:33">
                <expr_stmt pos:start="35:17" pos:end="35:41"><expr pos:start="35:17" pos:end="35:40"><name pos:start="35:17" pos:end="35:19">ret</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:40"><name pos:start="35:23" pos:end="35:31">decode_mb</name><argument_list pos:start="35:32" pos:end="35:40">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">c</name></expr></argument>, <argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">i</name></expr></argument>, <argument pos:start="35:39" pos:end="35:39"><expr pos:start="35:39" pos:end="35:39"><name pos:start="35:39" pos:end="35:39">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="36:17" pos:end="37:33"><if pos:start="36:17" pos:end="37:33">if <condition pos:start="36:20" pos:end="36:28">(<expr pos:start="36:21" pos:end="36:27"><name pos:start="36:21" pos:end="36:23">ret</name> <operator pos:start="36:25" pos:end="36:25">&lt;</operator> <literal type="number" pos:start="36:27" pos:end="36:27">0</literal></expr>)</condition><block type="pseudo" pos:start="37:21" pos:end="37:33"><block_content pos:start="37:21" pos:end="37:33">
                    <expr_stmt pos:start="37:21" pos:end="37:33"><expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:26">mb_ret</name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:32">ret</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for> <if_stmt pos:start="38:7" pos:end="42:42"><else pos:start="38:7" pos:end="42:42">else <block pos:start="38:12" pos:end="42:42">{<block_content pos:start="39:5" pos:end="42:42">
    <if_stmt pos:start="39:5" pos:end="40:19"><if pos:start="39:5" pos:end="40:19">if <condition pos:start="39:8" pos:end="39:47">(<expr pos:start="39:9" pos:end="39:46"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:12">ret</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:41"><name pos:start="39:16" pos:end="39:27">av_frame_ref</name><argument_list pos:start="39:28" pos:end="39:41">(<argument pos:start="39:29" pos:end="39:32"><expr pos:start="39:29" pos:end="39:32"><name pos:start="39:29" pos:end="39:32">data</name></expr></argument>, <argument pos:start="39:35" pos:end="39:40"><expr pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:40"><name pos:start="39:35" pos:end="39:35">c</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:40">pic</name></name></expr></argument>)</argument_list></call><operator pos:start="39:42" pos:end="39:42">)</operator> <operator pos:start="39:44" pos:end="39:44">&lt;</operator> <literal type="number" pos:start="39:46" pos:end="39:46">0</literal></expr>)</condition><block type="pseudo" pos:start="40:9" pos:end="40:19"><block_content pos:start="40:9" pos:end="40:19">
        <return pos:start="40:9" pos:end="40:19">return <expr pos:start="40:16" pos:end="40:18"><name pos:start="40:16" pos:end="40:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:14">got_frame</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">1</literal></expr>;</expr_stmt>
    <return pos:start="42:5" pos:end="42:42">return <expr pos:start="42:12" pos:end="42:41"><ternary pos:start="42:12" pos:end="42:41"><condition pos:start="42:12" pos:end="42:23"><expr pos:start="42:12" pos:end="42:21"><name pos:start="42:12" pos:end="42:17">mb_ret</name> <operator pos:start="42:19" pos:end="42:19">&lt;</operator> <literal type="number" pos:start="42:21" pos:end="42:21">0</literal></expr> ?</condition><then pos:start="42:25" pos:end="42:30"> <expr pos:start="42:25" pos:end="42:30"><name pos:start="42:25" pos:end="42:30">mb_ret</name></expr> </then><else pos:start="42:32" pos:end="42:41">: <expr pos:start="42:34" pos:end="42:41"><name pos:start="42:34" pos:end="42:41">buf_size</name></expr></else></ternary></expr>;</return></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
