<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3264.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">qmp_block_set_io_throttle</name><parameter_list pos:start="1:31" pos:end="41:63">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">device</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:58">int64_t</name></type> <name pos:start="1:60" pos:end="1:62">bps</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:71">int64_t</name></type> <name pos:start="1:73" pos:end="1:78">bps_rd</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:38">int64_t</name></type> <name pos:start="3:40" pos:end="3:45">bps_wr</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:43"><decl pos:start="5:32" pos:end="5:43"><type pos:start="5:32" pos:end="5:43"><name pos:start="5:32" pos:end="5:38">int64_t</name></type> <name pos:start="5:40" pos:end="5:43">iops</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:46"><decl pos:start="7:32" pos:end="7:46"><type pos:start="7:32" pos:end="7:46"><name pos:start="7:32" pos:end="7:38">int64_t</name></type> <name pos:start="7:40" pos:end="7:46">iops_rd</name></decl></parameter>,

                               <parameter pos:start="9:32" pos:end="9:46"><decl pos:start="9:32" pos:end="9:46"><type pos:start="9:32" pos:end="9:46"><name pos:start="9:32" pos:end="9:38">int64_t</name></type> <name pos:start="9:40" pos:end="9:46">iops_wr</name></decl></parameter>,

                               <parameter pos:start="11:32" pos:end="11:47"><decl pos:start="11:32" pos:end="11:47"><type pos:start="11:32" pos:end="11:47"><name pos:start="11:32" pos:end="11:35">bool</name></type> <name pos:start="11:37" pos:end="11:47">has_bps_max</name></decl></parameter>,

                               <parameter pos:start="13:32" pos:end="13:46"><decl pos:start="13:32" pos:end="13:46"><type pos:start="13:32" pos:end="13:46"><name pos:start="13:32" pos:end="13:38">int64_t</name></type> <name pos:start="13:40" pos:end="13:46">bps_max</name></decl></parameter>,

                               <parameter pos:start="15:32" pos:end="15:50"><decl pos:start="15:32" pos:end="15:50"><type pos:start="15:32" pos:end="15:50"><name pos:start="15:32" pos:end="15:35">bool</name></type> <name pos:start="15:37" pos:end="15:50">has_bps_rd_max</name></decl></parameter>,

                               <parameter pos:start="17:32" pos:end="17:49"><decl pos:start="17:32" pos:end="17:49"><type pos:start="17:32" pos:end="17:49"><name pos:start="17:32" pos:end="17:38">int64_t</name></type> <name pos:start="17:40" pos:end="17:49">bps_rd_max</name></decl></parameter>,

                               <parameter pos:start="19:32" pos:end="19:50"><decl pos:start="19:32" pos:end="19:50"><type pos:start="19:32" pos:end="19:50"><name pos:start="19:32" pos:end="19:35">bool</name></type> <name pos:start="19:37" pos:end="19:50">has_bps_wr_max</name></decl></parameter>,

                               <parameter pos:start="21:32" pos:end="21:49"><decl pos:start="21:32" pos:end="21:49"><type pos:start="21:32" pos:end="21:49"><name pos:start="21:32" pos:end="21:38">int64_t</name></type> <name pos:start="21:40" pos:end="21:49">bps_wr_max</name></decl></parameter>,

                               <parameter pos:start="23:32" pos:end="23:48"><decl pos:start="23:32" pos:end="23:48"><type pos:start="23:32" pos:end="23:48"><name pos:start="23:32" pos:end="23:35">bool</name></type> <name pos:start="23:37" pos:end="23:48">has_iops_max</name></decl></parameter>,

                               <parameter pos:start="25:32" pos:end="25:47"><decl pos:start="25:32" pos:end="25:47"><type pos:start="25:32" pos:end="25:47"><name pos:start="25:32" pos:end="25:38">int64_t</name></type> <name pos:start="25:40" pos:end="25:47">iops_max</name></decl></parameter>,

                               <parameter pos:start="27:32" pos:end="27:51"><decl pos:start="27:32" pos:end="27:51"><type pos:start="27:32" pos:end="27:51"><name pos:start="27:32" pos:end="27:35">bool</name></type> <name pos:start="27:37" pos:end="27:51">has_iops_rd_max</name></decl></parameter>,

                               <parameter pos:start="29:32" pos:end="29:50"><decl pos:start="29:32" pos:end="29:50"><type pos:start="29:32" pos:end="29:50"><name pos:start="29:32" pos:end="29:38">int64_t</name></type> <name pos:start="29:40" pos:end="29:50">iops_rd_max</name></decl></parameter>,

                               <parameter pos:start="31:32" pos:end="31:51"><decl pos:start="31:32" pos:end="31:51"><type pos:start="31:32" pos:end="31:51"><name pos:start="31:32" pos:end="31:35">bool</name></type> <name pos:start="31:37" pos:end="31:51">has_iops_wr_max</name></decl></parameter>,

                               <parameter pos:start="33:32" pos:end="33:50"><decl pos:start="33:32" pos:end="33:50"><type pos:start="33:32" pos:end="33:50"><name pos:start="33:32" pos:end="33:38">int64_t</name></type> <name pos:start="33:40" pos:end="33:50">iops_wr_max</name></decl></parameter>,

                               <parameter pos:start="35:32" pos:end="35:49"><decl pos:start="35:32" pos:end="35:49"><type pos:start="35:32" pos:end="35:49"><name pos:start="35:32" pos:end="35:35">bool</name></type> <name pos:start="35:37" pos:end="35:49">has_iops_size</name></decl></parameter>,

                               <parameter pos:start="37:32" pos:end="37:48"><decl pos:start="37:32" pos:end="37:48"><type pos:start="37:32" pos:end="37:48"><name pos:start="37:32" pos:end="37:38">int64_t</name></type> <name pos:start="37:40" pos:end="37:48">iops_size</name></decl></parameter>,

                               <parameter pos:start="39:32" pos:end="39:45"><decl pos:start="39:32" pos:end="39:45"><type pos:start="39:32" pos:end="39:45"><name pos:start="39:32" pos:end="39:35">bool</name></type> <name pos:start="39:37" pos:end="39:45">has_group</name></decl></parameter>,

                               <parameter pos:start="41:32" pos:end="41:48"><decl pos:start="41:32" pos:end="41:48"><type pos:start="41:32" pos:end="41:48"><specifier pos:start="41:32" pos:end="41:36">const</specifier> <name pos:start="41:38" pos:end="41:41">char</name> <modifier pos:start="41:43" pos:end="41:43">*</modifier></type><name pos:start="41:44" pos:end="41:48">group</name></decl></parameter>, <parameter pos:start="41:51" pos:end="41:62"><decl pos:start="41:51" pos:end="41:62"><type pos:start="41:51" pos:end="41:62"><name pos:start="41:51" pos:end="41:55">Error</name> <modifier pos:start="41:57" pos:end="41:57">*</modifier><modifier pos:start="41:58" pos:end="41:58">*</modifier></type><name pos:start="41:59" pos:end="41:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="43:1" pos:end="193:1">{<block_content pos:start="45:5" pos:end="191:37">

    <decl_stmt pos:start="45:5" pos:end="45:23"><decl pos:start="45:5" pos:end="45:22"><type pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:18">ThrottleConfig</name></type> <name pos:start="45:20" pos:end="45:22">cfg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:25"><decl pos:start="47:5" pos:end="47:24"><type pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:20">BlockDriverState</name> <modifier pos:start="47:22" pos:end="47:22">*</modifier></type><name pos:start="47:23" pos:end="47:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:22"><decl pos:start="49:5" pos:end="49:21"><type pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:16">BlockBackend</name> <modifier pos:start="49:18" pos:end="49:18">*</modifier></type><name pos:start="49:19" pos:end="49:21">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:28"><decl pos:start="51:5" pos:end="51:27"><type pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:14">AioContext</name> <modifier pos:start="51:16" pos:end="51:16">*</modifier></type><name pos:start="51:17" pos:end="51:27">aio_context</name></decl>;</decl_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:7">blk</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:29"><name pos:start="55:11" pos:end="55:21">blk_by_name</name><argument_list pos:start="55:22" pos:end="55:29">(<argument pos:start="55:23" pos:end="55:28"><expr pos:start="55:23" pos:end="55:28"><name pos:start="55:23" pos:end="55:28">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:13">(<expr pos:start="57:9" pos:end="57:12"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:12">blk</name></expr>)</condition> <block pos:start="57:15" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:15">

        <expr_stmt pos:start="59:9" pos:end="61:51"><expr pos:start="59:9" pos:end="61:50"><call pos:start="59:9" pos:end="61:50"><name pos:start="59:9" pos:end="59:17">error_set</name><argument_list pos:start="59:18" pos:end="61:50">(<argument pos:start="59:19" pos:end="59:22"><expr pos:start="59:19" pos:end="59:22"><name pos:start="59:19" pos:end="59:22">errp</name></expr></argument>, <argument pos:start="59:25" pos:end="59:52"><expr pos:start="59:25" pos:end="59:52"><name pos:start="59:25" pos:end="59:52">ERROR_CLASS_DEVICE_NOT_FOUND</name></expr></argument>,

                  <argument pos:start="61:19" pos:end="61:41"><expr pos:start="61:19" pos:end="61:41"><literal type="string" pos:start="61:19" pos:end="61:41">"Device '%s' not found"</literal></expr></argument>, <argument pos:start="61:44" pos:end="61:49"><expr pos:start="61:44" pos:end="61:49"><name pos:start="61:44" pos:end="61:49">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:43"><expr pos:start="69:5" pos:end="69:42"><name pos:start="69:5" pos:end="69:15">aio_context</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:42"><name pos:start="69:19" pos:end="69:37">blk_get_aio_context</name><argument_list pos:start="69:38" pos:end="69:42">(<argument pos:start="69:39" pos:end="69:41"><expr pos:start="69:39" pos:end="69:41"><name pos:start="69:39" pos:end="69:41">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:37"><expr pos:start="71:5" pos:end="71:36"><call pos:start="71:5" pos:end="71:36"><name pos:start="71:5" pos:end="71:23">aio_context_acquire</name><argument_list pos:start="71:24" pos:end="71:36">(<argument pos:start="71:25" pos:end="71:35"><expr pos:start="71:25" pos:end="71:35"><name pos:start="71:25" pos:end="71:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:21"><expr pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:6">bs</name> <operator pos:start="75:8" pos:end="75:8">=</operator> <call pos:start="75:10" pos:end="75:20"><name pos:start="75:10" pos:end="75:15">blk_bs</name><argument_list pos:start="75:16" pos:end="75:20">(<argument pos:start="75:17" pos:end="75:19"><expr pos:start="75:17" pos:end="75:19"><name pos:start="75:17" pos:end="75:19">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:12">(<expr pos:start="77:9" pos:end="77:11"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:11">bs</name></expr>)</condition> <block pos:start="77:14" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:17">

        <expr_stmt pos:start="79:9" pos:end="79:62"><expr pos:start="79:9" pos:end="79:61"><call pos:start="79:9" pos:end="79:61"><name pos:start="79:9" pos:end="79:18">error_setg</name><argument_list pos:start="79:19" pos:end="79:61">(<argument pos:start="79:20" pos:end="79:23"><expr pos:start="79:20" pos:end="79:23"><name pos:start="79:20" pos:end="79:23">errp</name></expr></argument>, <argument pos:start="79:26" pos:end="79:52"><expr pos:start="79:26" pos:end="79:52"><literal type="string" pos:start="79:26" pos:end="79:52">"Device '%s' has no medium"</literal></expr></argument>, <argument pos:start="79:55" pos:end="79:60"><expr pos:start="79:55" pos:end="79:60"><name pos:start="79:55" pos:end="79:60">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:17">goto <name pos:start="81:14" pos:end="81:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:33"><expr pos:start="87:5" pos:end="87:32"><call pos:start="87:5" pos:end="87:32"><name pos:start="87:5" pos:end="87:10">memset</name><argument_list pos:start="87:11" pos:end="87:32">(<argument pos:start="87:12" pos:end="87:15"><expr pos:start="87:12" pos:end="87:15"><operator pos:start="87:12" pos:end="87:12">&amp;</operator><name pos:start="87:13" pos:end="87:15">cfg</name></expr></argument>, <argument pos:start="87:18" pos:end="87:18"><expr pos:start="87:18" pos:end="87:18"><literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr></argument>, <argument pos:start="87:21" pos:end="87:31"><expr pos:start="87:21" pos:end="87:31"><sizeof pos:start="87:21" pos:end="87:31">sizeof<argument_list pos:start="87:27" pos:end="87:31">(<argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">cfg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:46"><expr pos:start="89:5" pos:end="89:45"><name pos:start="89:5" pos:end="89:35"><name pos:start="89:5" pos:end="89:7">cfg</name><operator pos:start="89:8" pos:end="89:8">.</operator><name pos:start="89:9" pos:end="89:15">buckets</name><index pos:start="89:16" pos:end="89:35">[<expr pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:34">THROTTLE_BPS_TOTAL</name></expr>]</index></name><operator pos:start="89:36" pos:end="89:36">.</operator><name pos:start="89:37" pos:end="89:39">avg</name> <operator pos:start="89:41" pos:end="89:41">=</operator> <name pos:start="89:43" pos:end="89:45">bps</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:49"><expr pos:start="91:5" pos:end="91:48"><name pos:start="91:5" pos:end="91:34"><name pos:start="91:5" pos:end="91:7">cfg</name><operator pos:start="91:8" pos:end="91:8">.</operator><name pos:start="91:9" pos:end="91:15">buckets</name><index pos:start="91:16" pos:end="91:34">[<expr pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:33">THROTTLE_BPS_READ</name></expr>]</index></name><operator pos:start="91:35" pos:end="91:35">.</operator><name pos:start="91:36" pos:end="91:38">avg</name>  <operator pos:start="91:41" pos:end="91:41">=</operator> <name pos:start="91:43" pos:end="91:48">bps_rd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:49"><expr pos:start="93:5" pos:end="93:48"><name pos:start="93:5" pos:end="93:35"><name pos:start="93:5" pos:end="93:7">cfg</name><operator pos:start="93:8" pos:end="93:8">.</operator><name pos:start="93:9" pos:end="93:15">buckets</name><index pos:start="93:16" pos:end="93:35">[<expr pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:34">THROTTLE_BPS_WRITE</name></expr>]</index></name><operator pos:start="93:36" pos:end="93:36">.</operator><name pos:start="93:37" pos:end="93:39">avg</name> <operator pos:start="93:41" pos:end="93:41">=</operator> <name pos:start="93:43" pos:end="93:48">bps_wr</name></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:47"><expr pos:start="97:5" pos:end="97:46"><name pos:start="97:5" pos:end="97:35"><name pos:start="97:5" pos:end="97:7">cfg</name><operator pos:start="97:8" pos:end="97:8">.</operator><name pos:start="97:9" pos:end="97:15">buckets</name><index pos:start="97:16" pos:end="97:35">[<expr pos:start="97:17" pos:end="97:34"><name pos:start="97:17" pos:end="97:34">THROTTLE_OPS_TOTAL</name></expr>]</index></name><operator pos:start="97:36" pos:end="97:36">.</operator><name pos:start="97:37" pos:end="97:39">avg</name> <operator pos:start="97:41" pos:end="97:41">=</operator> <name pos:start="97:43" pos:end="97:46">iops</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:50"><expr pos:start="99:5" pos:end="99:49"><name pos:start="99:5" pos:end="99:34"><name pos:start="99:5" pos:end="99:7">cfg</name><operator pos:start="99:8" pos:end="99:8">.</operator><name pos:start="99:9" pos:end="99:15">buckets</name><index pos:start="99:16" pos:end="99:34">[<expr pos:start="99:17" pos:end="99:33"><name pos:start="99:17" pos:end="99:33">THROTTLE_OPS_READ</name></expr>]</index></name><operator pos:start="99:35" pos:end="99:35">.</operator><name pos:start="99:36" pos:end="99:38">avg</name>  <operator pos:start="99:41" pos:end="99:41">=</operator> <name pos:start="99:43" pos:end="99:49">iops_rd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:50"><expr pos:start="101:5" pos:end="101:49"><name pos:start="101:5" pos:end="101:35"><name pos:start="101:5" pos:end="101:7">cfg</name><operator pos:start="101:8" pos:end="101:8">.</operator><name pos:start="101:9" pos:end="101:15">buckets</name><index pos:start="101:16" pos:end="101:35">[<expr pos:start="101:17" pos:end="101:34"><name pos:start="101:17" pos:end="101:34">THROTTLE_OPS_WRITE</name></expr>]</index></name><operator pos:start="101:36" pos:end="101:36">.</operator><name pos:start="101:37" pos:end="101:39">avg</name> <operator pos:start="101:41" pos:end="101:41">=</operator> <name pos:start="101:43" pos:end="101:49">iops_wr</name></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="109:5"><if pos:start="105:5" pos:end="109:5">if <condition pos:start="105:8" pos:end="105:20">(<expr pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:19">has_bps_max</name></expr>)</condition> <block pos:start="105:22" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:54">

        <expr_stmt pos:start="107:9" pos:end="107:54"><expr pos:start="107:9" pos:end="107:53"><name pos:start="107:9" pos:end="107:39"><name pos:start="107:9" pos:end="107:11">cfg</name><operator pos:start="107:12" pos:end="107:12">.</operator><name pos:start="107:13" pos:end="107:19">buckets</name><index pos:start="107:20" pos:end="107:39">[<expr pos:start="107:21" pos:end="107:38"><name pos:start="107:21" pos:end="107:38">THROTTLE_BPS_TOTAL</name></expr>]</index></name><operator pos:start="107:40" pos:end="107:40">.</operator><name pos:start="107:41" pos:end="107:43">max</name> <operator pos:start="107:45" pos:end="107:45">=</operator> <name pos:start="107:47" pos:end="107:53">bps_max</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:23">(<expr pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:22">has_bps_rd_max</name></expr>)</condition> <block pos:start="111:25" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:56">

        <expr_stmt pos:start="113:9" pos:end="113:56"><expr pos:start="113:9" pos:end="113:55"><name pos:start="113:9" pos:end="113:38"><name pos:start="113:9" pos:end="113:11">cfg</name><operator pos:start="113:12" pos:end="113:12">.</operator><name pos:start="113:13" pos:end="113:19">buckets</name><index pos:start="113:20" pos:end="113:38">[<expr pos:start="113:21" pos:end="113:37"><name pos:start="113:21" pos:end="113:37">THROTTLE_BPS_READ</name></expr>]</index></name><operator pos:start="113:39" pos:end="113:39">.</operator><name pos:start="113:40" pos:end="113:42">max</name> <operator pos:start="113:44" pos:end="113:44">=</operator> <name pos:start="113:46" pos:end="113:55">bps_rd_max</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="121:5"><if pos:start="117:5" pos:end="121:5">if <condition pos:start="117:8" pos:end="117:23">(<expr pos:start="117:9" pos:end="117:22"><name pos:start="117:9" pos:end="117:22">has_bps_wr_max</name></expr>)</condition> <block pos:start="117:25" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:57">

        <expr_stmt pos:start="119:9" pos:end="119:57"><expr pos:start="119:9" pos:end="119:56"><name pos:start="119:9" pos:end="119:39"><name pos:start="119:9" pos:end="119:11">cfg</name><operator pos:start="119:12" pos:end="119:12">.</operator><name pos:start="119:13" pos:end="119:19">buckets</name><index pos:start="119:20" pos:end="119:39">[<expr pos:start="119:21" pos:end="119:38"><name pos:start="119:21" pos:end="119:38">THROTTLE_BPS_WRITE</name></expr>]</index></name><operator pos:start="119:40" pos:end="119:40">.</operator><name pos:start="119:41" pos:end="119:43">max</name> <operator pos:start="119:45" pos:end="119:45">=</operator> <name pos:start="119:47" pos:end="119:56">bps_wr_max</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:21">(<expr pos:start="123:9" pos:end="123:20"><name pos:start="123:9" pos:end="123:20">has_iops_max</name></expr>)</condition> <block pos:start="123:23" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:55">

        <expr_stmt pos:start="125:9" pos:end="125:55"><expr pos:start="125:9" pos:end="125:54"><name pos:start="125:9" pos:end="125:39"><name pos:start="125:9" pos:end="125:11">cfg</name><operator pos:start="125:12" pos:end="125:12">.</operator><name pos:start="125:13" pos:end="125:19">buckets</name><index pos:start="125:20" pos:end="125:39">[<expr pos:start="125:21" pos:end="125:38"><name pos:start="125:21" pos:end="125:38">THROTTLE_OPS_TOTAL</name></expr>]</index></name><operator pos:start="125:40" pos:end="125:40">.</operator><name pos:start="125:41" pos:end="125:43">max</name> <operator pos:start="125:45" pos:end="125:45">=</operator> <name pos:start="125:47" pos:end="125:54">iops_max</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="129:5" pos:end="133:5"><if pos:start="129:5" pos:end="133:5">if <condition pos:start="129:8" pos:end="129:24">(<expr pos:start="129:9" pos:end="129:23"><name pos:start="129:9" pos:end="129:23">has_iops_rd_max</name></expr>)</condition> <block pos:start="129:26" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:57">

        <expr_stmt pos:start="131:9" pos:end="131:57"><expr pos:start="131:9" pos:end="131:56"><name pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:11">cfg</name><operator pos:start="131:12" pos:end="131:12">.</operator><name pos:start="131:13" pos:end="131:19">buckets</name><index pos:start="131:20" pos:end="131:38">[<expr pos:start="131:21" pos:end="131:37"><name pos:start="131:21" pos:end="131:37">THROTTLE_OPS_READ</name></expr>]</index></name><operator pos:start="131:39" pos:end="131:39">.</operator><name pos:start="131:40" pos:end="131:42">max</name> <operator pos:start="131:44" pos:end="131:44">=</operator> <name pos:start="131:46" pos:end="131:56">iops_rd_max</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="135:5" pos:end="139:5"><if pos:start="135:5" pos:end="139:5">if <condition pos:start="135:8" pos:end="135:24">(<expr pos:start="135:9" pos:end="135:23"><name pos:start="135:9" pos:end="135:23">has_iops_wr_max</name></expr>)</condition> <block pos:start="135:26" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:58">

        <expr_stmt pos:start="137:9" pos:end="137:58"><expr pos:start="137:9" pos:end="137:57"><name pos:start="137:9" pos:end="137:39"><name pos:start="137:9" pos:end="137:11">cfg</name><operator pos:start="137:12" pos:end="137:12">.</operator><name pos:start="137:13" pos:end="137:19">buckets</name><index pos:start="137:20" pos:end="137:39">[<expr pos:start="137:21" pos:end="137:38"><name pos:start="137:21" pos:end="137:38">THROTTLE_OPS_WRITE</name></expr>]</index></name><operator pos:start="137:40" pos:end="137:40">.</operator><name pos:start="137:41" pos:end="137:43">max</name> <operator pos:start="137:45" pos:end="137:45">=</operator> <name pos:start="137:47" pos:end="137:57">iops_wr_max</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="147:5"><if pos:start="143:5" pos:end="147:5">if <condition pos:start="143:8" pos:end="143:22">(<expr pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:21">has_iops_size</name></expr>)</condition> <block pos:start="143:24" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:32">

        <expr_stmt pos:start="145:9" pos:end="145:32"><expr pos:start="145:9" pos:end="145:31"><name pos:start="145:9" pos:end="145:19"><name pos:start="145:9" pos:end="145:11">cfg</name><operator pos:start="145:12" pos:end="145:12">.</operator><name pos:start="145:13" pos:end="145:19">op_size</name></name> <operator pos:start="145:21" pos:end="145:21">=</operator> <name pos:start="145:23" pos:end="145:31">iops_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="151:5" pos:end="155:5"><if pos:start="151:5" pos:end="155:5">if <condition pos:start="151:8" pos:end="151:43">(<expr pos:start="151:9" pos:end="151:42"><operator pos:start="151:9" pos:end="151:9">!</operator><call pos:start="151:10" pos:end="151:42"><name pos:start="151:10" pos:end="151:30">check_throttle_config</name><argument_list pos:start="151:31" pos:end="151:42">(<argument pos:start="151:32" pos:end="151:35"><expr pos:start="151:32" pos:end="151:35"><operator pos:start="151:32" pos:end="151:32">&amp;</operator><name pos:start="151:33" pos:end="151:35">cfg</name></expr></argument>, <argument pos:start="151:38" pos:end="151:41"><expr pos:start="151:38" pos:end="151:41"><name pos:start="151:38" pos:end="151:41">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:45" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:17">

        <goto pos:start="153:9" pos:end="153:17">goto <name pos:start="153:14" pos:end="153:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="185:5"><if pos:start="159:5" pos:end="179:5">if <condition pos:start="159:8" pos:end="159:31">(<expr pos:start="159:9" pos:end="159:30"><call pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:24">throttle_enabled</name><argument_list pos:start="159:25" pos:end="159:30">(<argument pos:start="159:26" pos:end="159:29"><expr pos:start="159:26" pos:end="159:29"><operator pos:start="159:26" pos:end="159:26">&amp;</operator><name pos:start="159:27" pos:end="159:29">cfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:33" pos:end="179:5">{<block_content pos:start="165:9" pos:end="177:37">

        <comment type="block" pos:start="161:9" pos:end="163:47">/* Enable I/O limits if they're not enabled yet, otherwise

         * just update the throttling group. */</comment>

        <if_stmt pos:start="165:9" pos:end="173:9"><if pos:start="165:9" pos:end="169:9">if <condition pos:start="165:12" pos:end="165:35">(<expr pos:start="165:13" pos:end="165:34"><operator pos:start="165:13" pos:end="165:13">!</operator><name pos:start="165:14" pos:end="165:34"><name pos:start="165:14" pos:end="165:15">bs</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:34">io_limits_enabled</name></name></expr>)</condition> <block pos:start="165:37" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:66">

            <expr_stmt pos:start="167:13" pos:end="167:66"><expr pos:start="167:13" pos:end="167:65"><call pos:start="167:13" pos:end="167:65"><name pos:start="167:13" pos:end="167:33">bdrv_io_limits_enable</name><argument_list pos:start="167:34" pos:end="167:65">(<argument pos:start="167:35" pos:end="167:36"><expr pos:start="167:35" pos:end="167:36"><name pos:start="167:35" pos:end="167:36">bs</name></expr></argument>, <argument pos:start="167:39" pos:end="167:64"><expr pos:start="167:39" pos:end="167:64"><ternary pos:start="167:39" pos:end="167:64"><condition pos:start="167:39" pos:end="167:49"><expr pos:start="167:39" pos:end="167:47"><name pos:start="167:39" pos:end="167:47">has_group</name></expr> ?</condition><then pos:start="167:51" pos:end="167:55"> <expr pos:start="167:51" pos:end="167:55"><name pos:start="167:51" pos:end="167:55">group</name></expr> </then><else pos:start="167:57" pos:end="167:64">: <expr pos:start="167:59" pos:end="167:64"><name pos:start="167:59" pos:end="167:64">device</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="169:11" pos:end="173:9">else if <condition pos:start="169:19" pos:end="169:29">(<expr pos:start="169:20" pos:end="169:28"><name pos:start="169:20" pos:end="169:28">has_group</name></expr>)</condition> <block pos:start="169:31" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:51">

            <expr_stmt pos:start="171:13" pos:end="171:51"><expr pos:start="171:13" pos:end="171:50"><call pos:start="171:13" pos:end="171:50"><name pos:start="171:13" pos:end="171:39">bdrv_io_limits_update_group</name><argument_list pos:start="171:40" pos:end="171:50">(<argument pos:start="171:41" pos:end="171:42"><expr pos:start="171:41" pos:end="171:42"><name pos:start="171:41" pos:end="171:42">bs</name></expr></argument>, <argument pos:start="171:45" pos:end="171:49"><expr pos:start="171:45" pos:end="171:49"><name pos:start="171:45" pos:end="171:49">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="175:9" pos:end="175:50">/* Set the new throttling configuration */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:37"><expr pos:start="177:9" pos:end="177:36"><call pos:start="177:9" pos:end="177:36"><name pos:start="177:9" pos:end="177:26">bdrv_set_io_limits</name><argument_list pos:start="177:27" pos:end="177:36">(<argument pos:start="177:28" pos:end="177:29"><expr pos:start="177:28" pos:end="177:29"><name pos:start="177:28" pos:end="177:29">bs</name></expr></argument>, <argument pos:start="177:32" pos:end="177:35"><expr pos:start="177:32" pos:end="177:35"><operator pos:start="177:32" pos:end="177:32">&amp;</operator><name pos:start="177:33" pos:end="177:35">cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="179:7" pos:end="185:5">else if <condition pos:start="179:15" pos:end="179:37">(<expr pos:start="179:16" pos:end="179:36"><name pos:start="179:16" pos:end="179:36"><name pos:start="179:16" pos:end="179:17">bs</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:36">io_limits_enabled</name></name></expr>)</condition> <block pos:start="179:39" pos:end="185:5">{<block_content pos:start="183:9" pos:end="183:35">

        <comment type="block" pos:start="181:9" pos:end="181:73">/* If all throttling settings are set to 0, disable I/O limits */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:35"><expr pos:start="183:9" pos:end="183:34"><call pos:start="183:9" pos:end="183:34"><name pos:start="183:9" pos:end="183:30">bdrv_io_limits_disable</name><argument_list pos:start="183:31" pos:end="183:34">(<argument pos:start="183:32" pos:end="183:33"><expr pos:start="183:32" pos:end="183:33"><name pos:start="183:32" pos:end="183:33">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="189:1" pos:end="189:4"><name pos:start="189:1" pos:end="189:3">out</name>:</label>

    <expr_stmt pos:start="191:5" pos:end="191:37"><expr pos:start="191:5" pos:end="191:36"><call pos:start="191:5" pos:end="191:36"><name pos:start="191:5" pos:end="191:23">aio_context_release</name><argument_list pos:start="191:24" pos:end="191:36">(<argument pos:start="191:25" pos:end="191:35"><expr pos:start="191:25" pos:end="191:35"><name pos:start="191:25" pos:end="191:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
