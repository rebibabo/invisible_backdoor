<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3292.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">pci_add_option_rom</name><parameter_list pos:start="1:30" pos:end="1:46">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:39">PCIDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">pdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:13">name</name><index pos:start="11:14" pos:end="11:17">[<expr pos:start="11:15" pos:end="11:16"><literal type="number" pos:start="11:15" pos:end="11:16">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:13">pdev</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">romfile</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:14">strlen</name><argument_list pos:start="19:15" pos:end="19:29">(<argument pos:start="19:16" pos:end="19:28"><expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:19">pdev</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:28">romfile</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:31" pos:end="19:32">==</operator> <literal type="number" pos:start="19:34" pos:end="19:34">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="49:5"><if pos:start="25:5" pos:end="49:5">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:13">pdev</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">rom_bar</name></name></expr>)</condition> <block pos:start="25:25" pos:end="49:5">{<block_content pos:start="35:9" pos:end="47:17">

        <comment type="block" pos:start="27:9" pos:end="33:11">/*

         * Load rom via fw_cfg instead of creating a rom bar,

         * for 0.11 compatibility.

         */</comment>

        <decl_stmt pos:start="35:9" pos:end="35:66"><decl pos:start="35:9" pos:end="35:65"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:17">class</name> <init pos:start="35:19" pos:end="35:65">= <expr pos:start="35:21" pos:end="35:65"><call pos:start="35:21" pos:end="35:65"><name pos:start="35:21" pos:end="35:32">pci_get_word</name><argument_list pos:start="35:33" pos:end="35:65">(<argument pos:start="35:34" pos:end="35:64"><expr pos:start="35:34" pos:end="35:64"><name pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:37">pdev</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:45">config</name></name> <operator pos:start="35:47" pos:end="35:47">+</operator> <name pos:start="35:49" pos:end="35:64">PCI_CLASS_DEVICE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:28">(<expr pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:17">class</name> <operator pos:start="37:19" pos:end="37:20">==</operator> <literal type="number" pos:start="37:22" pos:end="37:27">0x0300</literal></expr>)</condition> <block pos:start="37:30" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:39">

            <expr_stmt pos:start="39:13" pos:end="39:39"><expr pos:start="39:13" pos:end="39:38"><call pos:start="39:13" pos:end="39:38"><name pos:start="39:13" pos:end="39:23">rom_add_vga</name><argument_list pos:start="39:24" pos:end="39:38">(<argument pos:start="39:25" pos:end="39:37"><expr pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:28">pdev</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:37">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="45:9">else <block pos:start="41:16" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:42">

            <expr_stmt pos:start="43:13" pos:end="43:42"><expr pos:start="43:13" pos:end="43:41"><call pos:start="43:13" pos:end="43:41"><name pos:start="43:13" pos:end="43:26">rom_add_option</name><argument_list pos:start="43:27" pos:end="43:41">(<argument pos:start="43:28" pos:end="43:40"><expr pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:31">pdev</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:40">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:62"><expr pos:start="53:5" pos:end="53:61"><name pos:start="53:5" pos:end="53:8">path</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:61"><name pos:start="53:12" pos:end="53:25">qemu_find_file</name><argument_list pos:start="53:26" pos:end="53:61">(<argument pos:start="53:27" pos:end="53:45"><expr pos:start="53:27" pos:end="53:45"><name pos:start="53:27" pos:end="53:45">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="53:48" pos:end="53:60"><expr pos:start="53:48" pos:end="53:60"><name pos:start="53:48" pos:end="53:60"><name pos:start="53:48" pos:end="53:51">pdev</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:60">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:21">(<expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:12">path</name> <operator pos:start="55:14" pos:end="55:15">==</operator> <name pos:start="55:17" pos:end="55:20">NULL</name></expr>)</condition> <block pos:start="55:23" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:42">

        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:12">path</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:41"><name pos:start="57:16" pos:end="57:26">qemu_strdup</name><argument_list pos:start="57:27" pos:end="57:41">(<argument pos:start="57:28" pos:end="57:40"><expr pos:start="57:28" pos:end="57:40"><name pos:start="57:28" pos:end="57:40"><name pos:start="57:28" pos:end="57:31">pdev</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:40">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:8">size</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <call pos:start="63:12" pos:end="63:31"><name pos:start="63:12" pos:end="63:25">get_image_size</name><argument_list pos:start="63:26" pos:end="63:31">(<argument pos:start="63:27" pos:end="63:30"><expr pos:start="63:27" pos:end="63:30"><name pos:start="63:27" pos:end="63:30">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:17">(<expr pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:12">size</name> <operator pos:start="65:14" pos:end="65:14">&lt;</operator> <literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>)</condition> <block pos:start="65:19" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:18">

        <expr_stmt pos:start="67:9" pos:end="69:50"><expr pos:start="67:9" pos:end="69:49"><call pos:start="67:9" pos:end="69:49"><name pos:start="67:9" pos:end="67:20">error_report</name><argument_list pos:start="67:21" pos:end="69:49">(<argument pos:start="67:22" pos:end="67:56"><expr pos:start="67:22" pos:end="67:56"><literal type="string" pos:start="67:22" pos:end="67:56">"%s: failed to find romfile \"%s\""</literal></expr></argument>,

                     <argument pos:start="69:22" pos:end="69:33"><expr pos:start="69:22" pos:end="69:33"><name pos:start="69:22" pos:end="69:33">__FUNCTION__</name></expr></argument>, <argument pos:start="69:36" pos:end="69:48"><expr pos:start="69:36" pos:end="69:48"><name pos:start="69:36" pos:end="69:48"><name pos:start="69:36" pos:end="69:39">pdev</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:48">romfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:26">(<expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:12">size</name> <operator pos:start="75:14" pos:end="75:14">&amp;</operator> <operator pos:start="75:16" pos:end="75:16">(</operator><name pos:start="75:17" pos:end="75:20">size</name> <operator pos:start="75:22" pos:end="75:22">-</operator> <literal type="number" pos:start="75:24" pos:end="75:24">1</literal><operator pos:start="75:25" pos:end="75:25">)</operator></expr>)</condition> <block pos:start="75:28" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:35">

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:12">size</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <literal type="number" pos:start="77:16" pos:end="77:16">1</literal> <operator pos:start="77:18" pos:end="77:19">&lt;&lt;</operator> <call pos:start="77:21" pos:end="77:34"><name pos:start="77:21" pos:end="77:28">qemu_fls</name><argument_list pos:start="77:29" pos:end="77:34">(<argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="89:70"><if pos:start="83:5" pos:end="85:76">if <condition pos:start="83:8" pos:end="83:30">(<expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:12">pdev</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:18">qdev</name><operator pos:start="83:19" pos:end="83:19">.</operator><name pos:start="83:20" pos:end="83:23">info</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:29">vmsd</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:76"><block_content pos:start="85:9" pos:end="85:76">

        <expr_stmt pos:start="85:9" pos:end="85:76"><expr pos:start="85:9" pos:end="85:75"><call pos:start="85:9" pos:end="85:75"><name pos:start="85:9" pos:end="85:16">snprintf</name><argument_list pos:start="85:17" pos:end="85:75">(<argument pos:start="85:18" pos:end="85:21"><expr pos:start="85:18" pos:end="85:21"><name pos:start="85:18" pos:end="85:21">name</name></expr></argument>, <argument pos:start="85:24" pos:end="85:35"><expr pos:start="85:24" pos:end="85:35"><sizeof pos:start="85:24" pos:end="85:35">sizeof<argument_list pos:start="85:30" pos:end="85:35">(<argument pos:start="85:31" pos:end="85:34"><expr pos:start="85:31" pos:end="85:34"><name pos:start="85:31" pos:end="85:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="85:38" pos:end="85:45"><expr pos:start="85:38" pos:end="85:45"><literal type="string" pos:start="85:38" pos:end="85:45">"%s.rom"</literal></expr></argument>, <argument pos:start="85:48" pos:end="85:74"><expr pos:start="85:48" pos:end="85:74"><name pos:start="85:48" pos:end="85:74"><name pos:start="85:48" pos:end="85:51">pdev</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:57">qdev</name><operator pos:start="85:58" pos:end="85:58">.</operator><name pos:start="85:59" pos:end="85:62">info</name><operator pos:start="85:63" pos:end="85:64">-&gt;</operator><name pos:start="85:65" pos:end="85:68">vmsd</name><operator pos:start="85:69" pos:end="85:70">-&gt;</operator><name pos:start="85:71" pos:end="85:74">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="87:5" pos:end="89:70">else<block type="pseudo" pos:start="89:9" pos:end="89:70"><block_content pos:start="89:9" pos:end="89:70">

        <expr_stmt pos:start="89:9" pos:end="89:70"><expr pos:start="89:9" pos:end="89:69"><call pos:start="89:9" pos:end="89:69"><name pos:start="89:9" pos:end="89:16">snprintf</name><argument_list pos:start="89:17" pos:end="89:69">(<argument pos:start="89:18" pos:end="89:21"><expr pos:start="89:18" pos:end="89:21"><name pos:start="89:18" pos:end="89:21">name</name></expr></argument>, <argument pos:start="89:24" pos:end="89:35"><expr pos:start="89:24" pos:end="89:35"><sizeof pos:start="89:24" pos:end="89:35">sizeof<argument_list pos:start="89:30" pos:end="89:35">(<argument pos:start="89:31" pos:end="89:34"><expr pos:start="89:31" pos:end="89:34"><name pos:start="89:31" pos:end="89:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="89:38" pos:end="89:45"><expr pos:start="89:38" pos:end="89:45"><literal type="string" pos:start="89:38" pos:end="89:45">"%s.rom"</literal></expr></argument>, <argument pos:start="89:48" pos:end="89:68"><expr pos:start="89:48" pos:end="89:68"><name pos:start="89:48" pos:end="89:68"><name pos:start="89:48" pos:end="89:51">pdev</name><operator pos:start="89:52" pos:end="89:53">-&gt;</operator><name pos:start="89:54" pos:end="89:57">qdev</name><operator pos:start="89:58" pos:end="89:58">.</operator><name pos:start="89:59" pos:end="89:62">info</name><operator pos:start="89:63" pos:end="89:64">-&gt;</operator><name pos:start="89:65" pos:end="89:68">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:63"><expr pos:start="91:5" pos:end="91:62"><name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:8">pdev</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:20">rom_offset</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:62"><name pos:start="91:24" pos:end="91:37">qemu_ram_alloc</name><argument_list pos:start="91:38" pos:end="91:62">(<argument pos:start="91:39" pos:end="91:49"><expr pos:start="91:39" pos:end="91:49"><operator pos:start="91:39" pos:end="91:39">&amp;</operator><name pos:start="91:40" pos:end="91:49"><name pos:start="91:40" pos:end="91:43">pdev</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:49">qdev</name></name></expr></argument>, <argument pos:start="91:52" pos:end="91:55"><expr pos:start="91:52" pos:end="91:55"><name pos:start="91:52" pos:end="91:55">name</name></expr></argument>, <argument pos:start="91:58" pos:end="91:61"><expr pos:start="91:58" pos:end="91:61"><name pos:start="91:58" pos:end="91:61">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:45"><expr pos:start="95:5" pos:end="95:44"><name pos:start="95:5" pos:end="95:7">ptr</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <call pos:start="95:11" pos:end="95:44"><name pos:start="95:11" pos:end="95:26">qemu_get_ram_ptr</name><argument_list pos:start="95:27" pos:end="95:44">(<argument pos:start="95:28" pos:end="95:43"><expr pos:start="95:28" pos:end="95:43"><name pos:start="95:28" pos:end="95:43"><name pos:start="95:28" pos:end="95:31">pdev</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:43">rom_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:26"><expr pos:start="97:5" pos:end="97:25"><call pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:14">load_image</name><argument_list pos:start="97:15" pos:end="97:25">(<argument pos:start="97:16" pos:end="97:19"><expr pos:start="97:16" pos:end="97:19"><name pos:start="97:16" pos:end="97:19">path</name></expr></argument>, <argument pos:start="97:22" pos:end="97:24"><expr pos:start="97:22" pos:end="97:24"><name pos:start="97:22" pos:end="97:24">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:20"><expr pos:start="99:5" pos:end="99:19"><call pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:13">qemu_free</name><argument_list pos:start="99:14" pos:end="99:19">(<argument pos:start="99:15" pos:end="99:18"><expr pos:start="99:15" pos:end="99:18"><name pos:start="99:15" pos:end="99:18">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="105:44"><expr pos:start="103:5" pos:end="105:43"><call pos:start="103:5" pos:end="105:43"><name pos:start="103:5" pos:end="103:20">pci_register_bar</name><argument_list pos:start="103:21" pos:end="105:43">(<argument pos:start="103:22" pos:end="103:25"><expr pos:start="103:22" pos:end="103:25"><name pos:start="103:22" pos:end="103:25">pdev</name></expr></argument>, <argument pos:start="103:28" pos:end="103:39"><expr pos:start="103:28" pos:end="103:39"><name pos:start="103:28" pos:end="103:39">PCI_ROM_SLOT</name></expr></argument>, <argument pos:start="103:42" pos:end="103:45"><expr pos:start="103:42" pos:end="103:45"><name pos:start="103:42" pos:end="103:45">size</name></expr></argument>,

                     <argument pos:start="105:22" pos:end="105:22"><expr pos:start="105:22" pos:end="105:22"><literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr></argument>, <argument pos:start="105:25" pos:end="105:42"><expr pos:start="105:25" pos:end="105:42"><name pos:start="105:25" pos:end="105:42">pci_map_option_rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
