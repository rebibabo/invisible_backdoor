<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6091.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">init_directories</name><parameter_list pos:start="1:28" pos:end="5:41">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:42">BDRVVVFATState</name><modifier pos:start="1:43" pos:end="1:43">*</modifier></type> <name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:47">dirname</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:58"><decl pos:start="3:50" pos:end="3:58"><type pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:58">heads</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:68"><decl pos:start="3:61" pos:end="3:68"><type pos:start="3:61" pos:end="3:68"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:68">secs</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:33">Error</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier><modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:40">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="291:1">{<block_content pos:start="9:5" pos:end="289:13">

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:16">bootsector_t</name><modifier pos:start="9:17" pos:end="9:17">*</modifier></type> <name pos:start="9:19" pos:end="9:28">bootsector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:13">mapping_t</name><modifier pos:start="11:14" pos:end="11:14">*</modifier></type> <name pos:start="11:16" pos:end="11:22">mapping</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:24">cluster</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><call pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:47">(<argument pos:start="19:12" pos:end="19:33"><expr pos:start="19:12" pos:end="19:33"><operator pos:start="19:12" pos:end="19:12">&amp;</operator><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:32"><name pos:start="19:14" pos:end="19:14">s</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:29">first_sectors</name><index pos:start="19:30" pos:end="19:32">[<expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr>]</index></name><operator pos:start="19:33" pos:end="19:33">)</operator></expr></argument>,<argument pos:start="19:35" pos:end="19:35"><expr pos:start="19:35" pos:end="19:35"><literal type="number" pos:start="19:35" pos:end="19:35">0</literal></expr></argument>,<argument pos:start="19:37" pos:end="19:46"><expr pos:start="19:37" pos:end="19:46"><literal type="number" pos:start="19:37" pos:end="19:40">0x40</literal><operator pos:start="19:41" pos:end="19:41">*</operator><literal type="number" pos:start="19:42" pos:end="19:46">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:19">cluster_size</name></name><operator pos:start="23:20" pos:end="23:20">=</operator><name pos:start="23:21" pos:end="23:42"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:42">sectors_per_cluster</name></name><operator pos:start="23:43" pos:end="23:43">*</operator><literal type="number" pos:start="23:44" pos:end="23:48">0x200</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:21">cluster_buffer</name></name><operator pos:start="25:22" pos:end="25:22">=</operator><call pos:start="25:23" pos:end="25:47"><name pos:start="25:23" pos:end="25:30">g_malloc</name><argument_list pos:start="25:31" pos:end="25:47">(<argument pos:start="25:32" pos:end="25:46"><expr pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:32">s</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:46">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="41:7">/*

     * The formula: sc = spf+1+spf*spc*(512*8/fat_type),

     * where sc is sector_count,

     * spf is sectors_per_fat,

     * spc is sectors_per_clusters, and

     * fat_type = 12, 16 or 32.

     */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:53"><expr pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:5">i</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <literal type="number" pos:start="43:9" pos:end="43:10">1</literal><operator pos:start="43:10" pos:end="43:10">+</operator><name pos:start="43:11" pos:end="43:32"><name pos:start="43:11" pos:end="43:11">s</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:32">sectors_per_cluster</name></name><operator pos:start="43:33" pos:end="43:33">*</operator><literal type="number" pos:start="43:34" pos:end="43:38">0x200</literal><operator pos:start="43:39" pos:end="43:39">*</operator><literal type="number" pos:start="43:40" pos:end="43:40">8</literal><operator pos:start="43:41" pos:end="43:41">/</operator><name pos:start="43:42" pos:end="43:52"><name pos:start="43:42" pos:end="43:42">s</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:52">fat_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:22">sectors_per_fat</name></name><operator pos:start="45:23" pos:end="45:23">=</operator><operator pos:start="45:24" pos:end="45:24">(</operator><name pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:39">sector_count</name></name><operator pos:start="45:40" pos:end="45:40">+</operator><name pos:start="45:41" pos:end="45:41">i</name><operator pos:start="45:42" pos:end="45:42">)</operator><operator pos:start="45:43" pos:end="45:43">/</operator><name pos:start="45:44" pos:end="45:44">i</name></expr>;</expr_stmt> <comment type="block" pos:start="45:47" pos:end="45:60">/* round up */</comment>



    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><call pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:14">array_init</name><argument_list pos:start="49:15" pos:end="49:47">(<argument pos:start="49:16" pos:end="49:28"><expr pos:start="49:16" pos:end="49:28"><operator pos:start="49:16" pos:end="49:16">&amp;</operator><operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:27"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:27">mapping</name></name><operator pos:start="49:28" pos:end="49:28">)</operator></expr></argument>,<argument pos:start="49:30" pos:end="49:46"><expr pos:start="49:30" pos:end="49:46"><sizeof pos:start="49:30" pos:end="49:46">sizeof<argument_list pos:start="49:36" pos:end="49:46">(<argument pos:start="49:37" pos:end="49:45"><expr pos:start="49:37" pos:end="49:45"><name pos:start="49:37" pos:end="49:45">mapping_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><call pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:14">array_init</name><argument_list pos:start="51:15" pos:end="51:50">(<argument pos:start="51:16" pos:end="51:30"><expr pos:start="51:16" pos:end="51:30"><operator pos:start="51:16" pos:end="51:16">&amp;</operator><operator pos:start="51:17" pos:end="51:17">(</operator><name pos:start="51:18" pos:end="51:29"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:29">directory</name></name><operator pos:start="51:30" pos:end="51:30">)</operator></expr></argument>,<argument pos:start="51:32" pos:end="51:49"><expr pos:start="51:32" pos:end="51:49"><sizeof pos:start="51:32" pos:end="51:49">sizeof<argument_list pos:start="51:38" pos:end="51:49">(<argument pos:start="51:39" pos:end="51:48"><expr pos:start="51:39" pos:end="51:48"><name pos:start="51:39" pos:end="51:48">direntry_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:26">/* add volume label */</comment>

    <block pos:start="57:5" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:64">

	<decl_stmt pos:start="59:9" pos:end="59:58"><decl pos:start="59:9" pos:end="59:57"><type pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:18">direntry_t</name><modifier pos:start="59:19" pos:end="59:19">*</modifier></type> <name pos:start="59:21" pos:end="59:25">entry</name><init pos:start="59:26" pos:end="59:57">=<expr pos:start="59:27" pos:end="59:57"><call pos:start="59:27" pos:end="59:57"><name pos:start="59:27" pos:end="59:40">array_get_next</name><argument_list pos:start="59:41" pos:end="59:57">(<argument pos:start="59:42" pos:end="59:56"><expr pos:start="59:42" pos:end="59:56"><operator pos:start="59:42" pos:end="59:42">&amp;</operator><operator pos:start="59:43" pos:end="59:43">(</operator><name pos:start="59:44" pos:end="59:55"><name pos:start="59:44" pos:end="59:44">s</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:55">directory</name></name><operator pos:start="59:56" pos:end="59:56">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:13">entry</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:25">attributes</name></name><operator pos:start="61:26" pos:end="61:26">=</operator><literal type="number" pos:start="61:27" pos:end="61:30">0x28</literal></expr>;</expr_stmt> <comment type="block" pos:start="61:33" pos:end="61:60">/* archive | volume label */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:64"><expr pos:start="63:9" pos:end="63:63"><call pos:start="63:9" pos:end="63:63"><name pos:start="63:9" pos:end="63:14">memcpy</name><argument_list pos:start="63:15" pos:end="63:63">(<argument pos:start="63:16" pos:end="63:26"><expr pos:start="63:16" pos:end="63:26"><name pos:start="63:16" pos:end="63:26"><name pos:start="63:16" pos:end="63:20">entry</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:26">name</name></name></expr></argument>, <argument pos:start="63:29" pos:end="63:41"><expr pos:start="63:29" pos:end="63:41"><literal type="string" pos:start="63:29" pos:end="63:41">"QEMU VVFAT "</literal></expr></argument>, <argument pos:start="63:44" pos:end="63:62"><expr pos:start="63:44" pos:end="63:62"><sizeof pos:start="63:44" pos:end="63:62">sizeof<argument_list pos:start="63:50" pos:end="63:62">(<argument pos:start="63:51" pos:end="63:61"><expr pos:start="63:51" pos:end="63:61"><name pos:start="63:51" pos:end="63:61"><name pos:start="63:51" pos:end="63:55">entry</name><operator pos:start="63:56" pos:end="63:57">-&gt;</operator><name pos:start="63:58" pos:end="63:61">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="69:5" pos:end="69:66">/* Now build FAT, and write back information into directory */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:16"><expr pos:start="71:5" pos:end="71:15"><call pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:12">init_fat</name><argument_list pos:start="71:13" pos:end="71:15">(<argument pos:start="71:14" pos:end="71:14"><expr pos:start="71:14" pos:end="71:14"><name pos:start="71:14" pos:end="71:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:66"><expr pos:start="75:5" pos:end="75:65"><name pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:20">faked_sectors</name></name><operator pos:start="75:21" pos:end="75:21">=</operator><name pos:start="75:22" pos:end="75:44"><name pos:start="75:22" pos:end="75:22">s</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:44">first_sectors_number</name></name><operator pos:start="75:45" pos:end="75:45">+</operator><name pos:start="75:46" pos:end="75:63"><name pos:start="75:46" pos:end="75:46">s</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:63">sectors_per_fat</name></name><operator pos:start="75:64" pos:end="75:64">*</operator><literal type="number" pos:start="75:65" pos:end="75:65">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:56"><expr pos:start="77:5" pos:end="77:55"><name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:20">cluster_count</name></name><operator pos:start="77:21" pos:end="77:21">=</operator><call pos:start="77:22" pos:end="77:55"><name pos:start="77:22" pos:end="77:35">sector2cluster</name><argument_list pos:start="77:36" pos:end="77:55">(<argument pos:start="77:37" pos:end="77:37"><expr pos:start="77:37" pos:end="77:37"><name pos:start="77:37" pos:end="77:37">s</name></expr></argument>, <argument pos:start="77:40" pos:end="77:54"><expr pos:start="77:40" pos:end="77:54"><name pos:start="77:40" pos:end="77:54"><name pos:start="77:40" pos:end="77:40">s</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:54">sector_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:44"><expr pos:start="81:5" pos:end="81:43"><name pos:start="81:5" pos:end="81:11">mapping</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:43"><name pos:start="81:15" pos:end="81:28">array_get_next</name><argument_list pos:start="81:29" pos:end="81:43">(<argument pos:start="81:30" pos:end="81:42"><expr pos:start="81:30" pos:end="81:42"><operator pos:start="81:30" pos:end="81:30">&amp;</operator><operator pos:start="81:31" pos:end="81:31">(</operator><name pos:start="81:32" pos:end="81:41"><name pos:start="81:32" pos:end="81:32">s</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:41">mapping</name></name><operator pos:start="81:42" pos:end="81:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:23"><expr pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:11">mapping</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:18">begin</name></name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:27"><expr pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:11">mapping</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:22">dir_index</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:48"><expr pos:start="87:5" pos:end="87:47"><name pos:start="87:5" pos:end="87:42"><name pos:start="87:5" pos:end="87:11">mapping</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:17">info</name><operator pos:start="87:18" pos:end="87:18">.</operator><name pos:start="87:19" pos:end="87:21">dir</name><operator pos:start="87:22" pos:end="87:22">.</operator><name pos:start="87:23" pos:end="87:42">parent_mapping_index</name></name> <operator pos:start="87:44" pos:end="87:44">=</operator> <operator pos:start="87:46" pos:end="87:46">-</operator><literal type="number" pos:start="87:47" pos:end="87:47">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:38"><expr pos:start="89:5" pos:end="89:37"><name pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:11">mapping</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:32">first_mapping_index</name></name> <operator pos:start="89:34" pos:end="89:34">=</operator> <operator pos:start="89:36" pos:end="89:36">-</operator><literal type="number" pos:start="89:37" pos:end="89:37">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:11">mapping</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:17">path</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="91:37"><name pos:start="91:21" pos:end="91:28">g_strdup</name><argument_list pos:start="91:29" pos:end="91:37">(<argument pos:start="91:30" pos:end="91:36"><expr pos:start="91:30" pos:end="91:36"><name pos:start="91:30" pos:end="91:36">dirname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:30"><expr pos:start="93:5" pos:end="93:29"><name pos:start="93:5" pos:end="93:5">i</name> <operator pos:start="93:7" pos:end="93:7">=</operator> <call pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:14">strlen</name><argument_list pos:start="93:15" pos:end="93:29">(<argument pos:start="93:16" pos:end="93:28"><expr pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:22">mapping</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:28">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="97:36"><if pos:start="95:5" pos:end="97:36">if <condition pos:start="95:8" pos:end="95:45">(<expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:9">i</name> <operator pos:start="95:11" pos:end="95:11">&gt;</operator> <literal type="number" pos:start="95:13" pos:end="95:13">0</literal> <operator pos:start="95:15" pos:end="95:16">&amp;&amp;</operator> <name pos:start="95:18" pos:end="95:37"><name pos:start="95:18" pos:end="95:24">mapping</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:30">path</name><index pos:start="95:31" pos:end="95:37">[<expr pos:start="95:32" pos:end="95:36"><name pos:start="95:32" pos:end="95:32">i</name> <operator pos:start="95:34" pos:end="95:34">-</operator> <literal type="number" pos:start="95:36" pos:end="95:36">1</literal></expr>]</index></name> <operator pos:start="95:39" pos:end="95:40">==</operator> <literal type="char" pos:start="95:42" pos:end="95:44">'/'</literal></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:36"><block_content pos:start="97:9" pos:end="97:36">

	<expr_stmt pos:start="97:9" pos:end="97:36"><expr pos:start="97:9" pos:end="97:35"><name pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:15">mapping</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:21">path</name><index pos:start="97:22" pos:end="97:28">[<expr pos:start="97:23" pos:end="97:27"><name pos:start="97:23" pos:end="97:23">i</name> <operator pos:start="97:25" pos:end="97:25">-</operator> <literal type="number" pos:start="97:27" pos:end="97:27">1</literal></expr>]</index></name> <operator pos:start="97:30" pos:end="97:30">=</operator> <literal type="char" pos:start="97:32" pos:end="97:35">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:35"><expr pos:start="99:5" pos:end="99:34"><name pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:11">mapping</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:17">mode</name></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:34">MODE_DIRECTORY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:22"><name pos:start="101:5" pos:end="101:11">mapping</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:22">read_only</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:28"><expr pos:start="103:5" pos:end="103:27"><name pos:start="103:5" pos:end="103:11"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:11">path</name></name> <operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:27"><name pos:start="103:15" pos:end="103:21">mapping</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:27">path</name></name></expr>;</expr_stmt>



    <for pos:start="107:5" pos:end="207:5">for <control pos:start="107:9" pos:end="107:54">(<init pos:start="107:10" pos:end="107:28"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr><operator pos:start="107:15" pos:end="107:15">,</operator> <expr pos:start="107:17" pos:end="107:27"><name pos:start="107:17" pos:end="107:23">cluster</name> <operator pos:start="107:25" pos:end="107:25">=</operator> <literal type="number" pos:start="107:27" pos:end="107:27">0</literal></expr>;</init> <condition pos:start="107:30" pos:end="107:49"><expr pos:start="107:30" pos:end="107:48"><name pos:start="107:30" pos:end="107:30">i</name> <operator pos:start="107:32" pos:end="107:32">&lt;</operator> <name pos:start="107:34" pos:end="107:48"><name pos:start="107:34" pos:end="107:34">s</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:43">mapping</name><operator pos:start="107:44" pos:end="107:44">.</operator><name pos:start="107:45" pos:end="107:48">next</name></name></expr>;</condition> <incr pos:start="107:51" pos:end="107:53"><expr pos:start="107:51" pos:end="107:53"><name pos:start="107:51" pos:end="107:51">i</name><operator pos:start="107:52" pos:end="107:53">++</operator></expr></incr>)</control> <block pos:start="107:56" pos:end="207:5">{<block_content pos:start="115:9" pos:end="205:9">

	<comment type="block" pos:start="109:9" pos:end="111:42">/* MS-DOS expects the FAT to be 0 for the root directory

	 * (except for the media byte). */</comment>

	<comment type="block" pos:start="113:9" pos:end="113:47">/* LATER TODO: still true for FAT32? */</comment>

	<decl_stmt pos:start="115:9" pos:end="115:31"><decl pos:start="115:9" pos:end="115:30"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:19">fix_fat</name> <init pos:start="115:21" pos:end="115:30">= <expr pos:start="115:23" pos:end="115:30"><operator pos:start="115:23" pos:end="115:23">(</operator><name pos:start="115:24" pos:end="115:24">i</name> <operator pos:start="115:26" pos:end="115:27">!=</operator> <literal type="number" pos:start="115:29" pos:end="115:29">0</literal><operator pos:start="115:30" pos:end="115:30">)</operator></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="117:9" pos:end="117:46"><expr pos:start="117:9" pos:end="117:45"><name pos:start="117:9" pos:end="117:15">mapping</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:45"><name pos:start="117:19" pos:end="117:27">array_get</name><argument_list pos:start="117:28" pos:end="117:45">(<argument pos:start="117:29" pos:end="117:41"><expr pos:start="117:29" pos:end="117:41"><operator pos:start="117:29" pos:end="117:29">&amp;</operator><operator pos:start="117:30" pos:end="117:30">(</operator><name pos:start="117:31" pos:end="117:40"><name pos:start="117:31" pos:end="117:31">s</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:40">mapping</name></name><operator pos:start="117:41" pos:end="117:41">)</operator></expr></argument>, <argument pos:start="117:44" pos:end="117:44"><expr pos:start="117:44" pos:end="117:44"><name pos:start="117:44" pos:end="117:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="165:9"><if pos:start="121:9" pos:end="137:9">if <condition pos:start="121:12" pos:end="121:43">(<expr pos:start="121:13" pos:end="121:42"><name pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:19">mapping</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:25">mode</name></name> <operator pos:start="121:27" pos:end="121:27">&amp;</operator> <name pos:start="121:29" pos:end="121:42">MODE_DIRECTORY</name></expr>)</condition> <block pos:start="121:45" pos:end="137:9">{<block_content pos:start="123:13" pos:end="135:50">

	    <expr_stmt pos:start="123:13" pos:end="123:37"><expr pos:start="123:13" pos:end="123:36"><name pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:19">mapping</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:26">begin</name></name> <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:36">cluster</name></expr>;</expr_stmt>

	    <if_stmt pos:start="125:13" pos:end="133:13"><if pos:start="125:13" pos:end="133:13">if<condition pos:start="125:15" pos:end="125:36">(<expr pos:start="125:16" pos:end="125:35"><call pos:start="125:16" pos:end="125:35"><name pos:start="125:16" pos:end="125:29">read_directory</name><argument_list pos:start="125:30" pos:end="125:35">(<argument pos:start="125:31" pos:end="125:31"><expr pos:start="125:31" pos:end="125:31"><name pos:start="125:31" pos:end="125:31">s</name></expr></argument>, <argument pos:start="125:34" pos:end="125:34"><expr pos:start="125:34" pos:end="125:34"><name pos:start="125:34" pos:end="125:34">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:38" pos:end="133:13">{<block_content pos:start="127:17" pos:end="131:26">

                <expr_stmt pos:start="127:17" pos:end="129:42"><expr pos:start="127:17" pos:end="129:41"><call pos:start="127:17" pos:end="129:41"><name pos:start="127:17" pos:end="127:26">error_setg</name><argument_list pos:start="127:27" pos:end="129:41">(<argument pos:start="127:28" pos:end="127:31"><expr pos:start="127:28" pos:end="127:31"><name pos:start="127:28" pos:end="127:31">errp</name></expr></argument>, <argument pos:start="127:34" pos:end="127:62"><expr pos:start="127:34" pos:end="127:62"><literal type="string" pos:start="127:34" pos:end="127:62">"Could not read directory %s"</literal></expr></argument>,

                           <argument pos:start="129:28" pos:end="129:40"><expr pos:start="129:28" pos:end="129:40"><name pos:start="129:28" pos:end="129:40"><name pos:start="129:28" pos:end="129:34">mapping</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:40">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="131:17" pos:end="131:26">return <expr pos:start="131:24" pos:end="131:25"><operator pos:start="131:24" pos:end="131:24">-</operator><literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>;</return>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="135:13" pos:end="135:50"><expr pos:start="135:13" pos:end="135:49"><name pos:start="135:13" pos:end="135:19">mapping</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <call pos:start="135:23" pos:end="135:49"><name pos:start="135:23" pos:end="135:31">array_get</name><argument_list pos:start="135:32" pos:end="135:49">(<argument pos:start="135:33" pos:end="135:45"><expr pos:start="135:33" pos:end="135:45"><operator pos:start="135:33" pos:end="135:33">&amp;</operator><operator pos:start="135:34" pos:end="135:34">(</operator><name pos:start="135:35" pos:end="135:44"><name pos:start="135:35" pos:end="135:35">s</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:44">mapping</name></name><operator pos:start="135:45" pos:end="135:45">)</operator></expr></argument>, <argument pos:start="135:48" pos:end="135:48"><expr pos:start="135:48" pos:end="135:48"><name pos:start="135:48" pos:end="135:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="137:11" pos:end="165:9">else <block pos:start="137:16" pos:end="165:9">{<block_content pos:start="139:13" pos:end="163:13">

	    <expr_stmt pos:start="139:13" pos:end="139:52"><expr pos:start="139:13" pos:end="139:51"><call pos:start="139:13" pos:end="139:51"><name pos:start="139:13" pos:end="139:18">assert</name><argument_list pos:start="139:19" pos:end="139:51">(<argument pos:start="139:20" pos:end="139:50"><expr pos:start="139:20" pos:end="139:50"><name pos:start="139:20" pos:end="139:32"><name pos:start="139:20" pos:end="139:26">mapping</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:32">mode</name></name> <operator pos:start="139:34" pos:end="139:35">==</operator> <name pos:start="139:37" pos:end="139:50">MODE_UNDEFINED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="141:13" pos:end="141:38"><expr pos:start="141:13" pos:end="141:37"><name pos:start="141:13" pos:end="141:25"><name pos:start="141:13" pos:end="141:19">mapping</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:25">mode</name></name><operator pos:start="141:26" pos:end="141:26">=</operator><name pos:start="141:27" pos:end="141:37">MODE_NORMAL</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="143:13" pos:end="143:37"><expr pos:start="143:13" pos:end="143:36"><name pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:19">mapping</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:26">begin</name></name> <operator pos:start="143:28" pos:end="143:28">=</operator> <name pos:start="143:30" pos:end="143:36">cluster</name></expr>;</expr_stmt>

	    <if_stmt pos:start="145:13" pos:end="163:13"><if pos:start="145:13" pos:end="157:13">if <condition pos:start="145:16" pos:end="145:33">(<expr pos:start="145:17" pos:end="145:32"><name pos:start="145:17" pos:end="145:28"><name pos:start="145:17" pos:end="145:23">mapping</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:28">end</name></name> <operator pos:start="145:30" pos:end="145:30">&gt;</operator> <literal type="number" pos:start="145:32" pos:end="145:32">0</literal></expr>)</condition> <block pos:start="145:35" pos:end="157:13">{<block_content pos:start="147:17" pos:end="155:64">

		<decl_stmt pos:start="147:17" pos:end="149:44"><decl pos:start="147:17" pos:end="149:43"><type pos:start="147:17" pos:end="147:27"><name pos:start="147:17" pos:end="147:26">direntry_t</name><modifier pos:start="147:27" pos:end="147:27">*</modifier></type> <name pos:start="147:29" pos:end="147:36">direntry</name> <init pos:start="147:38" pos:end="149:43">= <expr pos:start="147:40" pos:end="149:43"><call pos:start="147:40" pos:end="149:43"><name pos:start="147:40" pos:end="147:48">array_get</name><argument_list pos:start="147:49" pos:end="149:43">(<argument pos:start="147:50" pos:end="147:64"><expr pos:start="147:50" pos:end="147:64"><operator pos:start="147:50" pos:end="147:50">&amp;</operator><operator pos:start="147:51" pos:end="147:51">(</operator><name pos:start="147:52" pos:end="147:63"><name pos:start="147:52" pos:end="147:52">s</name><operator pos:start="147:53" pos:end="147:54">-&gt;</operator><name pos:start="147:55" pos:end="147:63">directory</name></name><operator pos:start="147:64" pos:end="147:64">)</operator></expr></argument>,

			<argument pos:start="149:25" pos:end="149:42"><expr pos:start="149:25" pos:end="149:42"><name pos:start="149:25" pos:end="149:42"><name pos:start="149:25" pos:end="149:31">mapping</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:42">dir_index</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



		<expr_stmt pos:start="153:17" pos:end="153:78"><expr pos:start="153:17" pos:end="153:77"><name pos:start="153:17" pos:end="153:28"><name pos:start="153:17" pos:end="153:23">mapping</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:28">end</name></name> <operator pos:start="153:30" pos:end="153:30">=</operator> <name pos:start="153:32" pos:end="153:38">cluster</name> <operator pos:start="153:40" pos:end="153:40">+</operator> <literal type="number" pos:start="153:42" pos:end="153:44">1</literal> <operator pos:start="153:44" pos:end="153:44">+</operator> <operator pos:start="153:46" pos:end="153:46">(</operator><name pos:start="153:47" pos:end="153:58"><name pos:start="153:47" pos:end="153:53">mapping</name><operator pos:start="153:54" pos:end="153:55">-&gt;</operator><name pos:start="153:56" pos:end="153:58">end</name></name><operator pos:start="153:59" pos:end="153:59">-</operator><literal type="number" pos:start="153:60" pos:end="153:60">1</literal><operator pos:start="153:61" pos:end="153:61">)</operator><operator pos:start="153:62" pos:end="153:62">/</operator><name pos:start="153:63" pos:end="153:77"><name pos:start="153:63" pos:end="153:63">s</name><operator pos:start="153:64" pos:end="153:65">-&gt;</operator><name pos:start="153:66" pos:end="153:77">cluster_size</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="155:17" pos:end="155:64"><expr pos:start="155:17" pos:end="155:63"><call pos:start="155:17" pos:end="155:63"><name pos:start="155:17" pos:end="155:37">set_begin_of_direntry</name><argument_list pos:start="155:38" pos:end="155:63">(<argument pos:start="155:39" pos:end="155:46"><expr pos:start="155:39" pos:end="155:46"><name pos:start="155:39" pos:end="155:46">direntry</name></expr></argument>, <argument pos:start="155:49" pos:end="155:62"><expr pos:start="155:49" pos:end="155:62"><name pos:start="155:49" pos:end="155:62"><name pos:start="155:49" pos:end="155:55">mapping</name><operator pos:start="155:56" pos:end="155:57">-&gt;</operator><name pos:start="155:58" pos:end="155:62">begin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if> <else pos:start="157:15" pos:end="163:13">else <block pos:start="157:20" pos:end="163:13">{<block_content pos:start="159:17" pos:end="161:28">

		<expr_stmt pos:start="159:17" pos:end="159:43"><expr pos:start="159:17" pos:end="159:42"><name pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:23">mapping</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:28">end</name></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <name pos:start="159:32" pos:end="159:38">cluster</name> <operator pos:start="159:40" pos:end="159:40">+</operator> <literal type="number" pos:start="159:42" pos:end="159:42">1</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="161:17" pos:end="161:28"><expr pos:start="161:17" pos:end="161:27"><name pos:start="161:17" pos:end="161:23">fix_fat</name> <operator pos:start="161:25" pos:end="161:25">=</operator> <literal type="number" pos:start="161:27" pos:end="161:27">0</literal></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>

	</block_content>}</block></else></if_stmt>



	<expr_stmt pos:start="169:9" pos:end="169:46"><expr pos:start="169:9" pos:end="169:45"><call pos:start="169:9" pos:end="169:45"><name pos:start="169:9" pos:end="169:14">assert</name><argument_list pos:start="169:15" pos:end="169:45">(<argument pos:start="169:16" pos:end="169:44"><expr pos:start="169:16" pos:end="169:44"><name pos:start="169:16" pos:end="169:29"><name pos:start="169:16" pos:end="169:22">mapping</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:29">begin</name></name> <operator pos:start="169:31" pos:end="169:31">&lt;</operator> <name pos:start="169:33" pos:end="169:44"><name pos:start="169:33" pos:end="169:39">mapping</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:44">end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="block" pos:start="173:9" pos:end="173:31">/* next free cluster */</comment>

	<expr_stmt pos:start="175:9" pos:end="175:31"><expr pos:start="175:9" pos:end="175:30"><name pos:start="175:9" pos:end="175:15">cluster</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:30"><name pos:start="175:19" pos:end="175:25">mapping</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:30">end</name></name></expr>;</expr_stmt>



	<if_stmt pos:start="179:9" pos:end="189:9"><if pos:start="179:9" pos:end="189:9">if<condition pos:start="179:11" pos:end="179:38">(<expr pos:start="179:12" pos:end="179:37"><name pos:start="179:12" pos:end="179:18">cluster</name> <operator pos:start="179:20" pos:end="179:20">&gt;</operator> <name pos:start="179:22" pos:end="179:37"><name pos:start="179:22" pos:end="179:22">s</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:37">cluster_count</name></name></expr>)</condition> <block pos:start="179:40" pos:end="189:9">{<block_content pos:start="181:13" pos:end="187:22">

            <expr_stmt pos:start="181:13" pos:end="185:62"><expr pos:start="181:13" pos:end="185:61"><call pos:start="181:13" pos:end="185:61"><name pos:start="181:13" pos:end="181:22">error_setg</name><argument_list pos:start="181:23" pos:end="185:61">(<argument pos:start="181:24" pos:end="181:27"><expr pos:start="181:24" pos:end="181:27"><name pos:start="181:24" pos:end="181:27">errp</name></expr></argument>,

                       <argument pos:start="183:24" pos:end="183:75"><expr pos:start="183:24" pos:end="183:75"><literal type="string" pos:start="183:24" pos:end="183:75">"Directory does not fit in FAT%d (capacity %.2f MB)"</literal></expr></argument>,

                       <argument pos:start="185:24" pos:end="185:34"><expr pos:start="185:24" pos:end="185:34"><name pos:start="185:24" pos:end="185:34"><name pos:start="185:24" pos:end="185:24">s</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:34">fat_type</name></name></expr></argument>, <argument pos:start="185:37" pos:end="185:60"><expr pos:start="185:37" pos:end="185:60"><name pos:start="185:37" pos:end="185:51"><name pos:start="185:37" pos:end="185:37">s</name><operator pos:start="185:38" pos:end="185:39">-&gt;</operator><name pos:start="185:40" pos:end="185:51">sector_count</name></name> <operator pos:start="185:53" pos:end="185:53">/</operator> <literal type="number" pos:start="185:55" pos:end="185:60">2000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="187:13" pos:end="187:22">return <expr pos:start="187:20" pos:end="187:21"><operator pos:start="187:20" pos:end="187:20">-</operator><literal type="number" pos:start="187:21" pos:end="187:21">1</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>



	<comment type="block" pos:start="193:9" pos:end="193:31">/* fix fat for entry */</comment>

	<if_stmt pos:start="195:9" pos:end="205:9"><if pos:start="195:9" pos:end="205:9">if <condition pos:start="195:12" pos:end="195:20">(<expr pos:start="195:13" pos:end="195:19"><name pos:start="195:13" pos:end="195:19">fix_fat</name></expr>)</condition> <block pos:start="195:22" pos:end="205:9">{<block_content pos:start="197:13" pos:end="203:59">

	    <decl_stmt pos:start="197:13" pos:end="197:18"><decl pos:start="197:13" pos:end="197:17"><type pos:start="197:13" pos:end="197:15"><name pos:start="197:13" pos:end="197:15">int</name></type> <name pos:start="197:17" pos:end="197:17">j</name></decl>;</decl_stmt>

	    <for pos:start="199:13" pos:end="201:35">for<control pos:start="199:16" pos:end="199:62">(<init pos:start="199:17" pos:end="199:35"><expr pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:17">j</name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:34"><name pos:start="199:21" pos:end="199:27">mapping</name><operator pos:start="199:28" pos:end="199:29">-&gt;</operator><name pos:start="199:30" pos:end="199:34">begin</name></name></expr>;</init> <condition pos:start="199:37" pos:end="199:57"><expr pos:start="199:37" pos:end="199:56"><name pos:start="199:37" pos:end="199:37">j</name> <operator pos:start="199:39" pos:end="199:39">&lt;</operator> <name pos:start="199:41" pos:end="199:52"><name pos:start="199:41" pos:end="199:47">mapping</name><operator pos:start="199:48" pos:end="199:49">-&gt;</operator><name pos:start="199:50" pos:end="199:52">end</name></name> <operator pos:start="199:54" pos:end="199:54">-</operator> <literal type="number" pos:start="199:56" pos:end="199:56">1</literal></expr>;</condition> <incr pos:start="199:59" pos:end="199:61"><expr pos:start="199:59" pos:end="199:61"><name pos:start="199:59" pos:end="199:59">j</name><operator pos:start="199:60" pos:end="199:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="201:17" pos:end="201:35"><block_content pos:start="201:17" pos:end="201:35">

		<expr_stmt pos:start="201:17" pos:end="201:35"><expr pos:start="201:17" pos:end="201:34"><call pos:start="201:17" pos:end="201:34"><name pos:start="201:17" pos:end="201:23">fat_set</name><argument_list pos:start="201:24" pos:end="201:34">(<argument pos:start="201:25" pos:end="201:25"><expr pos:start="201:25" pos:end="201:25"><name pos:start="201:25" pos:end="201:25">s</name></expr></argument>, <argument pos:start="201:28" pos:end="201:28"><expr pos:start="201:28" pos:end="201:28"><name pos:start="201:28" pos:end="201:28">j</name></expr></argument>, <argument pos:start="201:31" pos:end="201:33"><expr pos:start="201:31" pos:end="201:33"><name pos:start="201:31" pos:end="201:31">j</name><operator pos:start="201:32" pos:end="201:32">+</operator><literal type="number" pos:start="201:33" pos:end="201:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

	    <expr_stmt pos:start="203:13" pos:end="203:59"><expr pos:start="203:13" pos:end="203:58"><call pos:start="203:13" pos:end="203:58"><name pos:start="203:13" pos:end="203:19">fat_set</name><argument_list pos:start="203:20" pos:end="203:58">(<argument pos:start="203:21" pos:end="203:21"><expr pos:start="203:21" pos:end="203:21"><name pos:start="203:21" pos:end="203:21">s</name></expr></argument>, <argument pos:start="203:24" pos:end="203:39"><expr pos:start="203:24" pos:end="203:39"><name pos:start="203:24" pos:end="203:35"><name pos:start="203:24" pos:end="203:30">mapping</name><operator pos:start="203:31" pos:end="203:32">-&gt;</operator><name pos:start="203:33" pos:end="203:35">end</name></name> <operator pos:start="203:37" pos:end="203:37">-</operator> <literal type="number" pos:start="203:39" pos:end="203:39">1</literal></expr></argument>, <argument pos:start="203:42" pos:end="203:57"><expr pos:start="203:42" pos:end="203:57"><name pos:start="203:42" pos:end="203:57"><name pos:start="203:42" pos:end="203:42">s</name><operator pos:start="203:43" pos:end="203:44">-&gt;</operator><name pos:start="203:45" pos:end="203:57">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="211:5" pos:end="211:42"><expr pos:start="211:5" pos:end="211:41"><name pos:start="211:5" pos:end="211:11">mapping</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <call pos:start="211:15" pos:end="211:41"><name pos:start="211:15" pos:end="211:23">array_get</name><argument_list pos:start="211:24" pos:end="211:41">(<argument pos:start="211:25" pos:end="211:37"><expr pos:start="211:25" pos:end="211:37"><operator pos:start="211:25" pos:end="211:25">&amp;</operator><operator pos:start="211:26" pos:end="211:26">(</operator><name pos:start="211:27" pos:end="211:36"><name pos:start="211:27" pos:end="211:27">s</name><operator pos:start="211:28" pos:end="211:29">-&gt;</operator><name pos:start="211:30" pos:end="211:36">mapping</name></name><operator pos:start="211:37" pos:end="211:37">)</operator></expr></argument>, <argument pos:start="211:40" pos:end="211:40"><expr pos:start="211:40" pos:end="211:40"><literal type="number" pos:start="211:40" pos:end="211:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:73"><expr pos:start="213:5" pos:end="213:72"><name pos:start="213:5" pos:end="213:32"><name pos:start="213:5" pos:end="213:5">s</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:32">sectors_of_root_directory</name></name> <operator pos:start="213:34" pos:end="213:34">=</operator> <name pos:start="213:36" pos:end="213:47"><name pos:start="213:36" pos:end="213:42">mapping</name><operator pos:start="213:43" pos:end="213:44">-&gt;</operator><name pos:start="213:45" pos:end="213:47">end</name></name> <operator pos:start="213:49" pos:end="213:49">*</operator> <name pos:start="213:51" pos:end="213:72"><name pos:start="213:51" pos:end="213:51">s</name><operator pos:start="213:52" pos:end="213:53">-&gt;</operator><name pos:start="213:54" pos:end="213:72">sectors_per_cluster</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:53"><expr pos:start="215:5" pos:end="215:52"><name pos:start="215:5" pos:end="215:37"><name pos:start="215:5" pos:end="215:5">s</name><operator pos:start="215:6" pos:end="215:7">-&gt;</operator><name pos:start="215:8" pos:end="215:37">last_cluster_of_root_directory</name></name> <operator pos:start="215:39" pos:end="215:39">=</operator> <name pos:start="215:41" pos:end="215:52"><name pos:start="215:41" pos:end="215:47">mapping</name><operator pos:start="215:48" pos:end="215:49">-&gt;</operator><name pos:start="215:50" pos:end="215:52">end</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="219:5" pos:end="219:27">/* the FAT signature */</comment>

    <expr_stmt pos:start="221:5" pos:end="221:34"><expr pos:start="221:5" pos:end="221:33"><call pos:start="221:5" pos:end="221:33"><name pos:start="221:5" pos:end="221:11">fat_set</name><argument_list pos:start="221:12" pos:end="221:33">(<argument pos:start="221:13" pos:end="221:13"><expr pos:start="221:13" pos:end="221:13"><name pos:start="221:13" pos:end="221:13">s</name></expr></argument>,<argument pos:start="221:15" pos:end="221:15"><expr pos:start="221:15" pos:end="221:15"><literal type="number" pos:start="221:15" pos:end="221:15">0</literal></expr></argument>,<argument pos:start="221:17" pos:end="221:32"><expr pos:start="221:17" pos:end="221:32"><name pos:start="221:17" pos:end="221:32"><name pos:start="221:17" pos:end="221:17">s</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:32">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:34"><expr pos:start="223:5" pos:end="223:33"><call pos:start="223:5" pos:end="223:33"><name pos:start="223:5" pos:end="223:11">fat_set</name><argument_list pos:start="223:12" pos:end="223:33">(<argument pos:start="223:13" pos:end="223:13"><expr pos:start="223:13" pos:end="223:13"><name pos:start="223:13" pos:end="223:13">s</name></expr></argument>,<argument pos:start="223:15" pos:end="223:15"><expr pos:start="223:15" pos:end="223:15"><literal type="number" pos:start="223:15" pos:end="223:15">1</literal></expr></argument>,<argument pos:start="223:17" pos:end="223:32"><expr pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:32">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:30"><expr pos:start="227:5" pos:end="227:29"><name pos:start="227:5" pos:end="227:22"><name pos:start="227:5" pos:end="227:5">s</name><operator pos:start="227:6" pos:end="227:7">-&gt;</operator><name pos:start="227:8" pos:end="227:22">current_mapping</name></name> <operator pos:start="227:24" pos:end="227:24">=</operator> <name pos:start="227:26" pos:end="227:29">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:83"><expr pos:start="231:5" pos:end="231:82"><name pos:start="231:5" pos:end="231:14">bootsector</name><operator pos:start="231:15" pos:end="231:15">=</operator><operator pos:start="231:16" pos:end="231:16">(</operator><name pos:start="231:17" pos:end="231:28">bootsector_t</name><operator pos:start="231:29" pos:end="231:29">*</operator><operator pos:start="231:30" pos:end="231:30">)</operator><operator pos:start="231:31" pos:end="231:31">(</operator><name pos:start="231:32" pos:end="231:47"><name pos:start="231:32" pos:end="231:32">s</name><operator pos:start="231:33" pos:end="231:34">-&gt;</operator><name pos:start="231:35" pos:end="231:47">first_sectors</name></name><operator pos:start="231:48" pos:end="231:48">+</operator><operator pos:start="231:49" pos:end="231:49">(</operator><name pos:start="231:50" pos:end="231:72"><name pos:start="231:50" pos:end="231:50">s</name><operator pos:start="231:51" pos:end="231:52">-&gt;</operator><name pos:start="231:53" pos:end="231:72">first_sectors_number</name></name><operator pos:start="231:73" pos:end="231:73">-</operator><literal type="number" pos:start="231:74" pos:end="231:74">1</literal><operator pos:start="231:75" pos:end="231:75">)</operator><operator pos:start="231:76" pos:end="231:76">*</operator><literal type="number" pos:start="231:77" pos:end="231:81">0x200</literal><operator pos:start="231:82" pos:end="231:82">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:29"><expr pos:start="233:5" pos:end="233:28"><name pos:start="233:5" pos:end="233:23"><name pos:start="233:5" pos:end="233:14">bootsector</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:20">jump</name><index pos:start="233:21" pos:end="233:23">[<expr pos:start="233:22" pos:end="233:22"><literal type="number" pos:start="233:22" pos:end="233:22">0</literal></expr>]</index></name><operator pos:start="233:24" pos:end="233:24">=</operator><literal type="number" pos:start="233:25" pos:end="233:28">0xeb</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:29"><expr pos:start="235:5" pos:end="235:28"><name pos:start="235:5" pos:end="235:23"><name pos:start="235:5" pos:end="235:14">bootsector</name><operator pos:start="235:15" pos:end="235:16">-&gt;</operator><name pos:start="235:17" pos:end="235:20">jump</name><index pos:start="235:21" pos:end="235:23">[<expr pos:start="235:22" pos:end="235:22"><literal type="number" pos:start="235:22" pos:end="235:22">1</literal></expr>]</index></name><operator pos:start="235:24" pos:end="235:24">=</operator><literal type="number" pos:start="235:25" pos:end="235:28">0x3e</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:29"><expr pos:start="237:5" pos:end="237:28"><name pos:start="237:5" pos:end="237:23"><name pos:start="237:5" pos:end="237:14">bootsector</name><operator pos:start="237:15" pos:end="237:16">-&gt;</operator><name pos:start="237:17" pos:end="237:20">jump</name><index pos:start="237:21" pos:end="237:23">[<expr pos:start="237:22" pos:end="237:22"><literal type="number" pos:start="237:22" pos:end="237:22">2</literal></expr>]</index></name><operator pos:start="237:24" pos:end="237:24">=</operator><literal type="number" pos:start="237:25" pos:end="237:28">0x90</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:42"><expr pos:start="239:5" pos:end="239:41"><call pos:start="239:5" pos:end="239:41"><name pos:start="239:5" pos:end="239:10">memcpy</name><argument_list pos:start="239:11" pos:end="239:41">(<argument pos:start="239:12" pos:end="239:27"><expr pos:start="239:12" pos:end="239:27"><name pos:start="239:12" pos:end="239:27"><name pos:start="239:12" pos:end="239:21">bootsector</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:27">name</name></name></expr></argument>,<argument pos:start="239:29" pos:end="239:38"><expr pos:start="239:29" pos:end="239:38"><literal type="string" pos:start="239:29" pos:end="239:38">"QEMU    "</literal></expr></argument>,<argument pos:start="239:40" pos:end="239:40"><expr pos:start="239:40" pos:end="239:40"><literal type="number" pos:start="239:40" pos:end="239:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:47"><expr pos:start="241:5" pos:end="241:46"><name pos:start="241:5" pos:end="241:27"><name pos:start="241:5" pos:end="241:14">bootsector</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:27">sector_size</name></name><operator pos:start="241:28" pos:end="241:28">=</operator><call pos:start="241:29" pos:end="241:46"><name pos:start="241:29" pos:end="241:39">cpu_to_le16</name><argument_list pos:start="241:40" pos:end="241:46">(<argument pos:start="241:41" pos:end="241:45"><expr pos:start="241:41" pos:end="241:45"><literal type="number" pos:start="241:41" pos:end="241:45">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:59"><expr pos:start="243:5" pos:end="243:58"><name pos:start="243:5" pos:end="243:35"><name pos:start="243:5" pos:end="243:14">bootsector</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:35">sectors_per_cluster</name></name><operator pos:start="243:36" pos:end="243:36">=</operator><name pos:start="243:37" pos:end="243:58"><name pos:start="243:37" pos:end="243:37">s</name><operator pos:start="243:38" pos:end="243:39">-&gt;</operator><name pos:start="243:40" pos:end="243:58">sectors_per_cluster</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:48"><expr pos:start="245:5" pos:end="245:47"><name pos:start="245:5" pos:end="245:32"><name pos:start="245:5" pos:end="245:14">bootsector</name><operator pos:start="245:15" pos:end="245:16">-&gt;</operator><name pos:start="245:17" pos:end="245:32">reserved_sectors</name></name><operator pos:start="245:33" pos:end="245:33">=</operator><call pos:start="245:34" pos:end="245:47"><name pos:start="245:34" pos:end="245:44">cpu_to_le16</name><argument_list pos:start="245:45" pos:end="245:47">(<argument pos:start="245:46" pos:end="245:46"><expr pos:start="245:46" pos:end="245:46"><literal type="number" pos:start="245:46" pos:end="245:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:35"><expr pos:start="247:5" pos:end="247:34"><name pos:start="247:5" pos:end="247:30"><name pos:start="247:5" pos:end="247:14">bootsector</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:30">number_of_fats</name></name><operator pos:start="247:31" pos:end="247:31">=</operator><literal type="number" pos:start="247:32" pos:end="247:34">0x2</literal></expr>;</expr_stmt> <comment type="block" pos:start="247:37" pos:end="247:56">/* number of FATs */</comment>

    <expr_stmt pos:start="249:5" pos:end="249:76"><expr pos:start="249:5" pos:end="249:75"><name pos:start="249:5" pos:end="249:28"><name pos:start="249:5" pos:end="249:14">bootsector</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:28">root_entries</name></name><operator pos:start="249:29" pos:end="249:29">=</operator><call pos:start="249:30" pos:end="249:75"><name pos:start="249:30" pos:end="249:40">cpu_to_le16</name><argument_list pos:start="249:41" pos:end="249:75">(<argument pos:start="249:42" pos:end="249:74"><expr pos:start="249:42" pos:end="249:74"><name pos:start="249:42" pos:end="249:69"><name pos:start="249:42" pos:end="249:42">s</name><operator pos:start="249:43" pos:end="249:44">-&gt;</operator><name pos:start="249:45" pos:end="249:69">sectors_of_root_directory</name></name><operator pos:start="249:70" pos:end="249:70">*</operator><literal type="number" pos:start="249:71" pos:end="249:74">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:86"><expr pos:start="251:5" pos:end="251:85"><name pos:start="251:5" pos:end="251:31"><name pos:start="251:5" pos:end="251:14">bootsector</name><operator pos:start="251:15" pos:end="251:16">-&gt;</operator><name pos:start="251:17" pos:end="251:31">total_sectors16</name></name><operator pos:start="251:32" pos:end="251:32">=</operator><ternary pos:start="251:33" pos:end="251:85"><condition pos:start="251:33" pos:end="251:55"><expr pos:start="251:33" pos:end="251:54"><name pos:start="251:33" pos:end="251:47"><name pos:start="251:33" pos:end="251:33">s</name><operator pos:start="251:34" pos:end="251:35">-&gt;</operator><name pos:start="251:36" pos:end="251:47">sector_count</name></name><operator pos:start="251:48" pos:end="251:48">&gt;</operator><literal type="number" pos:start="251:49" pos:end="251:54">0xffff</literal></expr>?</condition><then pos:start="251:56" pos:end="251:56"><expr pos:start="251:56" pos:end="251:56"><literal type="number" pos:start="251:56" pos:end="251:56">0</literal></expr></then><else pos:start="251:57" pos:end="251:85">:<expr pos:start="251:58" pos:end="251:85"><call pos:start="251:58" pos:end="251:85"><name pos:start="251:58" pos:end="251:68">cpu_to_le16</name><argument_list pos:start="251:69" pos:end="251:85">(<argument pos:start="251:70" pos:end="251:84"><expr pos:start="251:70" pos:end="251:84"><name pos:start="251:70" pos:end="251:84"><name pos:start="251:70" pos:end="251:70">s</name><operator pos:start="251:71" pos:end="251:72">-&gt;</operator><name pos:start="251:73" pos:end="251:84">sector_count</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:65"><expr pos:start="253:5" pos:end="253:64"><name pos:start="253:5" pos:end="253:26"><name pos:start="253:5" pos:end="253:14">bootsector</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:26">media_type</name></name><operator pos:start="253:27" pos:end="253:27">=</operator><operator pos:start="253:28" pos:end="253:28">(</operator><ternary pos:start="253:29" pos:end="253:63"><condition pos:start="253:29" pos:end="253:54"><expr pos:start="253:29" pos:end="253:53"><name pos:start="253:29" pos:end="253:51"><name pos:start="253:29" pos:end="253:29">s</name><operator pos:start="253:30" pos:end="253:31">-&gt;</operator><name pos:start="253:32" pos:end="253:51">first_sectors_number</name></name><operator pos:start="253:52" pos:end="253:52">&gt;</operator><literal type="number" pos:start="253:53" pos:end="253:53">1</literal></expr>?</condition><then pos:start="253:55" pos:end="253:58"><expr pos:start="253:55" pos:end="253:58"><literal type="number" pos:start="253:55" pos:end="253:58">0xf8</literal></expr></then><else pos:start="253:59" pos:end="253:63">:<expr pos:start="253:60" pos:end="253:63"><literal type="number" pos:start="253:60" pos:end="253:63">0xf0</literal></expr></else></ternary><operator pos:start="253:64" pos:end="253:64">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="253:67" pos:end="253:106">/* media descriptor (f8=hd, f0=3.5 fd)*/</comment>

    <expr_stmt pos:start="255:5" pos:end="255:47"><expr pos:start="255:5" pos:end="255:46"><name pos:start="255:5" pos:end="255:21"><name pos:start="255:5" pos:end="255:5">s</name><operator pos:start="255:6" pos:end="255:7">-&gt;</operator><name pos:start="255:8" pos:end="255:10">fat</name><operator pos:start="255:11" pos:end="255:11">.</operator><name pos:start="255:12" pos:end="255:18">pointer</name><index pos:start="255:19" pos:end="255:21">[<expr pos:start="255:20" pos:end="255:20"><literal type="number" pos:start="255:20" pos:end="255:20">0</literal></expr>]</index></name> <operator pos:start="255:23" pos:end="255:23">=</operator> <name pos:start="255:25" pos:end="255:46"><name pos:start="255:25" pos:end="255:34">bootsector</name><operator pos:start="255:35" pos:end="255:36">-&gt;</operator><name pos:start="255:37" pos:end="255:46">media_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:64"><expr pos:start="257:5" pos:end="257:63"><name pos:start="257:5" pos:end="257:31"><name pos:start="257:5" pos:end="257:14">bootsector</name><operator pos:start="257:15" pos:end="257:16">-&gt;</operator><name pos:start="257:17" pos:end="257:31">sectors_per_fat</name></name><operator pos:start="257:32" pos:end="257:32">=</operator><call pos:start="257:33" pos:end="257:63"><name pos:start="257:33" pos:end="257:43">cpu_to_le16</name><argument_list pos:start="257:44" pos:end="257:63">(<argument pos:start="257:45" pos:end="257:62"><expr pos:start="257:45" pos:end="257:62"><name pos:start="257:45" pos:end="257:62"><name pos:start="257:45" pos:end="257:45">s</name><operator pos:start="257:46" pos:end="257:47">-&gt;</operator><name pos:start="257:48" pos:end="257:62">sectors_per_fat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:54"><expr pos:start="259:5" pos:end="259:53"><name pos:start="259:5" pos:end="259:33"><name pos:start="259:5" pos:end="259:14">bootsector</name><operator pos:start="259:15" pos:end="259:16">-&gt;</operator><name pos:start="259:17" pos:end="259:33">sectors_per_track</name></name> <operator pos:start="259:35" pos:end="259:35">=</operator> <call pos:start="259:37" pos:end="259:53"><name pos:start="259:37" pos:end="259:47">cpu_to_le16</name><argument_list pos:start="259:48" pos:end="259:53">(<argument pos:start="259:49" pos:end="259:52"><expr pos:start="259:49" pos:end="259:52"><name pos:start="259:49" pos:end="259:52">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:53"><expr pos:start="261:5" pos:end="261:52"><name pos:start="261:5" pos:end="261:31"><name pos:start="261:5" pos:end="261:14">bootsector</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:31">number_of_heads</name></name> <operator pos:start="261:33" pos:end="261:33">=</operator> <call pos:start="261:35" pos:end="261:52"><name pos:start="261:35" pos:end="261:45">cpu_to_le16</name><argument_list pos:start="261:46" pos:end="261:52">(<argument pos:start="261:47" pos:end="261:51"><expr pos:start="261:47" pos:end="261:51"><name pos:start="261:47" pos:end="261:51">heads</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:78"><expr pos:start="263:5" pos:end="263:77"><name pos:start="263:5" pos:end="263:30"><name pos:start="263:5" pos:end="263:14">bootsector</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:30">hidden_sectors</name></name><operator pos:start="263:31" pos:end="263:31">=</operator><call pos:start="263:32" pos:end="263:77"><name pos:start="263:32" pos:end="263:42">cpu_to_le32</name><argument_list pos:start="263:43" pos:end="263:77">(<argument pos:start="263:44" pos:end="263:76"><expr pos:start="263:44" pos:end="263:76"><ternary pos:start="263:44" pos:end="263:76"><condition pos:start="263:44" pos:end="263:70"><expr pos:start="263:44" pos:end="263:69"><name pos:start="263:44" pos:end="263:66"><name pos:start="263:44" pos:end="263:44">s</name><operator pos:start="263:45" pos:end="263:46">-&gt;</operator><name pos:start="263:47" pos:end="263:66">first_sectors_number</name></name><operator pos:start="263:67" pos:end="263:68">==</operator><literal type="number" pos:start="263:69" pos:end="263:69">1</literal></expr>?</condition><then pos:start="263:71" pos:end="263:71"><expr pos:start="263:71" pos:end="263:71"><literal type="number" pos:start="263:71" pos:end="263:71">0</literal></expr></then><else pos:start="263:72" pos:end="263:76">:<expr pos:start="263:73" pos:end="263:76"><literal type="number" pos:start="263:73" pos:end="263:76">0x3f</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:84"><expr pos:start="265:5" pos:end="265:83"><name pos:start="265:5" pos:end="265:29"><name pos:start="265:5" pos:end="265:14">bootsector</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:29">total_sectors</name></name><operator pos:start="265:30" pos:end="265:30">=</operator><call pos:start="265:31" pos:end="265:83"><name pos:start="265:31" pos:end="265:41">cpu_to_le32</name><argument_list pos:start="265:42" pos:end="265:83">(<argument pos:start="265:43" pos:end="265:82"><expr pos:start="265:43" pos:end="265:82"><ternary pos:start="265:43" pos:end="265:82"><condition pos:start="265:43" pos:end="265:65"><expr pos:start="265:43" pos:end="265:64"><name pos:start="265:43" pos:end="265:57"><name pos:start="265:43" pos:end="265:43">s</name><operator pos:start="265:44" pos:end="265:45">-&gt;</operator><name pos:start="265:46" pos:end="265:57">sector_count</name></name><operator pos:start="265:58" pos:end="265:58">&gt;</operator><literal type="number" pos:start="265:59" pos:end="265:64">0xffff</literal></expr>?</condition><then pos:start="265:66" pos:end="265:80"><expr pos:start="265:66" pos:end="265:80"><name pos:start="265:66" pos:end="265:80"><name pos:start="265:66" pos:end="265:66">s</name><operator pos:start="265:67" pos:end="265:68">-&gt;</operator><name pos:start="265:69" pos:end="265:80">sector_count</name></name></expr></then><else pos:start="265:81" pos:end="265:82">:<expr pos:start="265:82" pos:end="265:82"><literal type="number" pos:start="265:82" pos:end="265:82">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="269:5" pos:end="269:45">/* LATER TODO: if FAT32, this is wrong */</comment>

    <expr_stmt pos:start="271:5" pos:end="271:71"><expr pos:start="271:5" pos:end="271:70"><name pos:start="271:5" pos:end="271:36"><name pos:start="271:5" pos:end="271:14">bootsector</name><operator pos:start="271:15" pos:end="271:16">-&gt;</operator><name pos:start="271:17" pos:end="271:17">u</name><operator pos:start="271:18" pos:end="271:18">.</operator><name pos:start="271:19" pos:end="271:23">fat16</name><operator pos:start="271:24" pos:end="271:24">.</operator><name pos:start="271:25" pos:end="271:36">drive_number</name></name><operator pos:start="271:37" pos:end="271:37">=</operator><ternary pos:start="271:38" pos:end="271:70"><condition pos:start="271:38" pos:end="271:64"><expr pos:start="271:38" pos:end="271:63"><name pos:start="271:38" pos:end="271:60"><name pos:start="271:38" pos:end="271:38">s</name><operator pos:start="271:39" pos:end="271:40">-&gt;</operator><name pos:start="271:41" pos:end="271:60">first_sectors_number</name></name><operator pos:start="271:61" pos:end="271:62">==</operator><literal type="number" pos:start="271:63" pos:end="271:63">1</literal></expr>?</condition><then pos:start="271:65" pos:end="271:65"><expr pos:start="271:65" pos:end="271:65"><literal type="number" pos:start="271:65" pos:end="271:65">0</literal></expr></then><else pos:start="271:66" pos:end="271:70">:<expr pos:start="271:67" pos:end="271:70"><literal type="number" pos:start="271:67" pos:end="271:70">0x80</literal></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="271:73" pos:end="271:93">/* fda=0, hda=0x80 */</comment>

    <expr_stmt pos:start="273:5" pos:end="273:39"><expr pos:start="273:5" pos:end="273:38"><name pos:start="273:5" pos:end="273:36"><name pos:start="273:5" pos:end="273:14">bootsector</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:17">u</name><operator pos:start="273:18" pos:end="273:18">.</operator><name pos:start="273:19" pos:end="273:23">fat16</name><operator pos:start="273:24" pos:end="273:24">.</operator><name pos:start="273:25" pos:end="273:36">current_head</name></name><operator pos:start="273:37" pos:end="273:37">=</operator><literal type="number" pos:start="273:38" pos:end="273:38">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:39"><expr pos:start="275:5" pos:end="275:38"><name pos:start="275:5" pos:end="275:33"><name pos:start="275:5" pos:end="275:14">bootsector</name><operator pos:start="275:15" pos:end="275:16">-&gt;</operator><name pos:start="275:17" pos:end="275:17">u</name><operator pos:start="275:18" pos:end="275:18">.</operator><name pos:start="275:19" pos:end="275:23">fat16</name><operator pos:start="275:24" pos:end="275:24">.</operator><name pos:start="275:25" pos:end="275:33">signature</name></name><operator pos:start="275:34" pos:end="275:34">=</operator><literal type="number" pos:start="275:35" pos:end="275:38">0x29</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:51"><expr pos:start="277:5" pos:end="277:50"><name pos:start="277:5" pos:end="277:26"><name pos:start="277:5" pos:end="277:14">bootsector</name><operator pos:start="277:15" pos:end="277:16">-&gt;</operator><name pos:start="277:17" pos:end="277:17">u</name><operator pos:start="277:18" pos:end="277:18">.</operator><name pos:start="277:19" pos:end="277:23">fat16</name><operator pos:start="277:24" pos:end="277:24">.</operator><name pos:start="277:25" pos:end="277:26">id</name></name><operator pos:start="277:27" pos:end="277:27">=</operator><call pos:start="277:28" pos:end="277:50"><name pos:start="277:28" pos:end="277:38">cpu_to_le32</name><argument_list pos:start="277:39" pos:end="277:50">(<argument pos:start="277:40" pos:end="277:49"><expr pos:start="277:40" pos:end="277:49"><literal type="number" pos:start="277:40" pos:end="277:49">0xfabe1afd</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="281:5" pos:end="281:62"><expr pos:start="281:5" pos:end="281:61"><call pos:start="281:5" pos:end="281:61"><name pos:start="281:5" pos:end="281:10">memcpy</name><argument_list pos:start="281:11" pos:end="281:61">(<argument pos:start="281:12" pos:end="281:43"><expr pos:start="281:12" pos:end="281:43"><name pos:start="281:12" pos:end="281:43"><name pos:start="281:12" pos:end="281:21">bootsector</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:24">u</name><operator pos:start="281:25" pos:end="281:25">.</operator><name pos:start="281:26" pos:end="281:30">fat16</name><operator pos:start="281:31" pos:end="281:31">.</operator><name pos:start="281:32" pos:end="281:43">volume_label</name></name></expr></argument>,<argument pos:start="281:45" pos:end="281:57"><expr pos:start="281:45" pos:end="281:57"><literal type="string" pos:start="281:45" pos:end="281:57">"QEMU VVFAT "</literal></expr></argument>,<argument pos:start="281:59" pos:end="281:60"><expr pos:start="281:59" pos:end="281:60"><literal type="number" pos:start="281:59" pos:end="281:60">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:102"><expr pos:start="283:5" pos:end="283:101"><call pos:start="283:5" pos:end="283:101"><name pos:start="283:5" pos:end="283:10">memcpy</name><argument_list pos:start="283:11" pos:end="283:101">(<argument pos:start="283:12" pos:end="283:31"><expr pos:start="283:12" pos:end="283:31"><name pos:start="283:12" pos:end="283:31"><name pos:start="283:12" pos:end="283:21">bootsector</name><operator pos:start="283:22" pos:end="283:23">-&gt;</operator><name pos:start="283:24" pos:end="283:31">fat_type</name></name></expr></argument>,<argument pos:start="283:33" pos:end="283:98"><expr pos:start="283:33" pos:end="283:98"><operator pos:start="283:33" pos:end="283:33">(</operator><ternary pos:start="283:34" pos:end="283:97"><condition pos:start="283:34" pos:end="283:49"><expr pos:start="283:34" pos:end="283:48"><name pos:start="283:34" pos:end="283:44"><name pos:start="283:34" pos:end="283:34">s</name><operator pos:start="283:35" pos:end="283:36">-&gt;</operator><name pos:start="283:37" pos:end="283:44">fat_type</name></name><operator pos:start="283:45" pos:end="283:46">==</operator><literal type="number" pos:start="283:47" pos:end="283:48">12</literal></expr>?</condition><then pos:start="283:50" pos:end="283:59"><expr pos:start="283:50" pos:end="283:59"><literal type="string" pos:start="283:50" pos:end="283:59">"FAT12   "</literal></expr></then><else pos:start="283:60" pos:end="283:97">:<expr pos:start="283:61" pos:end="283:97"><ternary pos:start="283:61" pos:end="283:97"><condition pos:start="283:61" pos:end="283:76"><expr pos:start="283:61" pos:end="283:75"><name pos:start="283:61" pos:end="283:71"><name pos:start="283:61" pos:end="283:61">s</name><operator pos:start="283:62" pos:end="283:63">-&gt;</operator><name pos:start="283:64" pos:end="283:71">fat_type</name></name><operator pos:start="283:72" pos:end="283:73">==</operator><literal type="number" pos:start="283:74" pos:end="283:75">16</literal></expr>?</condition><then pos:start="283:77" pos:end="283:86"><expr pos:start="283:77" pos:end="283:86"><literal type="string" pos:start="283:77" pos:end="283:86">"FAT16   "</literal></expr></then><else pos:start="283:87" pos:end="283:97">:<expr pos:start="283:88" pos:end="283:97"><literal type="string" pos:start="283:88" pos:end="283:97">"FAT32   "</literal></expr></else></ternary></expr></else></ternary><operator pos:start="283:98" pos:end="283:98">)</operator></expr></argument>,<argument pos:start="283:100" pos:end="283:100"><expr pos:start="283:100" pos:end="283:100"><literal type="number" pos:start="283:100" pos:end="283:100">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:30"><expr pos:start="285:5" pos:end="285:29"><name pos:start="285:5" pos:end="285:24"><name pos:start="285:5" pos:end="285:14">bootsector</name><operator pos:start="285:15" pos:end="285:16">-&gt;</operator><name pos:start="285:17" pos:end="285:21">magic</name><index pos:start="285:22" pos:end="285:24">[<expr pos:start="285:23" pos:end="285:23"><literal type="number" pos:start="285:23" pos:end="285:23">0</literal></expr>]</index></name><operator pos:start="285:25" pos:end="285:25">=</operator><literal type="number" pos:start="285:26" pos:end="285:29">0x55</literal></expr>;</expr_stmt> <expr_stmt pos:start="285:32" pos:end="285:57"><expr pos:start="285:32" pos:end="285:56"><name pos:start="285:32" pos:end="285:51"><name pos:start="285:32" pos:end="285:41">bootsector</name><operator pos:start="285:42" pos:end="285:43">-&gt;</operator><name pos:start="285:44" pos:end="285:48">magic</name><index pos:start="285:49" pos:end="285:51">[<expr pos:start="285:50" pos:end="285:50"><literal type="number" pos:start="285:50" pos:end="285:50">1</literal></expr>]</index></name><operator pos:start="285:52" pos:end="285:52">=</operator><literal type="number" pos:start="285:53" pos:end="285:56">0xaa</literal></expr>;</expr_stmt>



    <return pos:start="289:5" pos:end="289:13">return <expr pos:start="289:12" pos:end="289:12"><literal type="number" pos:start="289:12" pos:end="289:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
