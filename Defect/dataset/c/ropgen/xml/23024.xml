<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23024.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">hap_encode</name><parameter_list pos:start="1:22" pos:end="3:60">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pkt</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:42"><decl pos:start="3:23" pos:end="3:42"><type pos:start="3:23" pos:end="3:42"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">AVFrame</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:42">frame</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:59">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">HapContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ctx</name> <init pos:start="7:21" pos:end="7:38">= <expr pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:38"><name pos:start="7:23" pos:end="7:27">avctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">header_length</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><call pos:start="9:25" pos:end="9:46"><name pos:start="9:25" pos:end="9:41">hap_header_length</name><argument_list pos:start="9:42" pos:end="9:46">(<argument pos:start="9:43" pos:end="9:45"><expr pos:start="9:43" pos:end="9:45"><name pos:start="9:43" pos:end="9:45">ctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:23">final_data_size</name></decl>, <decl pos:start="11:26" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:28">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:91"><decl pos:start="13:5" pos:end="13:90"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">pktsize</name> <init pos:start="13:17" pos:end="13:90">= <expr pos:start="13:19" pos:end="13:90"><call pos:start="13:19" pos:end="13:74"><name pos:start="13:19" pos:end="13:23">FFMAX</name><argument_list pos:start="13:24" pos:end="13:74">(<argument pos:start="13:25" pos:end="13:37"><expr pos:start="13:25" pos:end="13:37"><name pos:start="13:25" pos:end="13:37"><name pos:start="13:25" pos:end="13:27">ctx</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:37">tex_size</name></name></expr></argument>, <argument pos:start="13:40" pos:end="13:73"><expr pos:start="13:40" pos:end="13:73"><name pos:start="13:40" pos:end="13:54"><name pos:start="13:40" pos:end="13:42">ctx</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:54">max_snappy</name></name> <operator pos:start="13:56" pos:end="13:56">*</operator> <name pos:start="13:58" pos:end="13:73"><name pos:start="13:58" pos:end="13:60">ctx</name><operator pos:start="13:61" pos:end="13:62">-&gt;</operator><name pos:start="13:63" pos:end="13:73">chunk_count</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:76" pos:end="13:76">+</operator> <name pos:start="13:78" pos:end="13:90">header_length</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:53">/* Allocate maximum size packet, shrink later. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:62"><name pos:start="19:11" pos:end="19:26">ff_alloc_packet2</name><argument_list pos:start="19:27" pos:end="19:62">(<argument pos:start="19:28" pos:end="19:32"><expr pos:start="19:28" pos:end="19:32"><name pos:start="19:28" pos:end="19:32">avctx</name></expr></argument>, <argument pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:37">pkt</name></expr></argument>, <argument pos:start="19:40" pos:end="19:46"><expr pos:start="19:40" pos:end="19:46"><name pos:start="19:40" pos:end="19:46">pktsize</name></expr></argument>, <argument pos:start="19:49" pos:end="19:61"><expr pos:start="19:49" pos:end="19:61"><name pos:start="19:49" pos:end="19:61">header_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:27">/* DXTC compression. */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:70"><expr pos:start="29:5" pos:end="29:69"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:69"><name pos:start="29:11" pos:end="29:26">compress_texture</name><argument_list pos:start="29:27" pos:end="29:69">(<argument pos:start="29:28" pos:end="29:32"><expr pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:32">avctx</name></expr></argument>, <argument pos:start="29:35" pos:end="29:46"><expr pos:start="29:35" pos:end="29:46"><name pos:start="29:35" pos:end="29:46"><name pos:start="29:35" pos:end="29:37">ctx</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:46">tex_buf</name></name></expr></argument>, <argument pos:start="29:49" pos:end="29:61"><expr pos:start="29:49" pos:end="29:61"><name pos:start="29:49" pos:end="29:61"><name pos:start="29:49" pos:end="29:51">ctx</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:61">tex_size</name></name></expr></argument>, <argument pos:start="29:64" pos:end="29:68"><expr pos:start="29:64" pos:end="29:68"><name pos:start="29:64" pos:end="29:68">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:19"><if pos:start="31:5" pos:end="33:19">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:19"><block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:43">/* Compress (using Snappy) the frame */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:75"><expr pos:start="39:5" pos:end="39:74"><name pos:start="39:5" pos:end="39:19">final_data_size</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:74"><name pos:start="39:23" pos:end="39:40">hap_compress_frame</name><argument_list pos:start="39:41" pos:end="39:74">(<argument pos:start="39:42" pos:end="39:46"><expr pos:start="39:42" pos:end="39:46"><name pos:start="39:42" pos:end="39:46">avctx</name></expr></argument>, <argument pos:start="39:49" pos:end="39:73"><expr pos:start="39:49" pos:end="39:73"><name pos:start="39:49" pos:end="39:57"><name pos:start="39:49" pos:end="39:51">pkt</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:57">data</name></name> <operator pos:start="39:59" pos:end="39:59">+</operator> <name pos:start="39:61" pos:end="39:73">header_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:31"><if pos:start="41:5" pos:end="43:31">if <condition pos:start="41:8" pos:end="41:28">(<expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:23">final_data_size</name> <operator pos:start="41:25" pos:end="41:25">&lt;</operator> <literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:31"><block_content pos:start="43:9" pos:end="43:31">

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:30">final_data_size</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:36">/* Write header at the start. */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:76"><expr pos:start="49:5" pos:end="49:75"><call pos:start="49:5" pos:end="49:75"><name pos:start="49:5" pos:end="49:26">hap_write_frame_header</name><argument_list pos:start="49:27" pos:end="49:75">(<argument pos:start="49:28" pos:end="49:30"><expr pos:start="49:28" pos:end="49:30"><name pos:start="49:28" pos:end="49:30">ctx</name></expr></argument>, <argument pos:start="49:33" pos:end="49:41"><expr pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:35">pkt</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:41">data</name></name></expr></argument>, <argument pos:start="49:44" pos:end="49:74"><expr pos:start="49:44" pos:end="49:74"><name pos:start="49:44" pos:end="49:58">final_data_size</name> <operator pos:start="49:60" pos:end="49:60">+</operator> <name pos:start="49:62" pos:end="49:74">header_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><call pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:20">av_shrink_packet</name><argument_list pos:start="53:21" pos:end="53:58">(<argument pos:start="53:22" pos:end="53:24"><expr pos:start="53:22" pos:end="53:24"><name pos:start="53:22" pos:end="53:24">pkt</name></expr></argument>, <argument pos:start="53:27" pos:end="53:57"><expr pos:start="53:27" pos:end="53:57"><name pos:start="53:27" pos:end="53:41">final_data_size</name> <operator pos:start="53:43" pos:end="53:43">+</operator> <name pos:start="53:45" pos:end="53:57">header_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:34"><expr pos:start="55:5" pos:end="55:33"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:7">pkt</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:14">flags</name></name> <operator pos:start="55:16" pos:end="55:17">|=</operator> <name pos:start="55:19" pos:end="55:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><operator pos:start="57:5" pos:end="57:5">*</operator><name pos:start="57:6" pos:end="57:15">got_packet</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">1</literal></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
