<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16854.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">rm_read_packet</name><parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:54">AVPacket</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">RMDemuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">rm</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">len</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">res</name></decl>, <decl pos:start="9:22" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:24">seq</name> <init pos:start="9:26" pos:end="9:28">= <expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:21">timestamp</name></decl>, <decl pos:start="11:24" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:24" pos:end="11:26">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">flags</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="99:5">for <control pos:start="17:9" pos:end="17:12">(<init pos:start="17:10" pos:end="17:10">;</init><condition pos:start="17:11" pos:end="17:11">;</condition><incr/>)</control> <block pos:start="17:14" pos:end="99:5">{<block_content pos:start="19:9" pos:end="97:18">

        <if_stmt pos:start="19:9" pos:end="85:9"><if pos:start="19:9" pos:end="33:9">if <condition pos:start="19:12" pos:end="19:30">(<expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:14">rm</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:29">audio_pkt_cnt</name></name></expr>)</condition> <block pos:start="19:32" pos:end="33:9">{<block_content pos:start="23:13" pos:end="31:22">

            <comment type="line" pos:start="21:13" pos:end="21:65">// If there are queued audio packet return them first</comment>

            <expr_stmt pos:start="23:13" pos:end="23:50"><expr pos:start="23:13" pos:end="23:49"><name pos:start="23:13" pos:end="23:14">st</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:49"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:27">streams</name><index pos:start="23:28" pos:end="23:49">[<expr pos:start="23:29" pos:end="23:48"><name pos:start="23:29" pos:end="23:48"><name pos:start="23:29" pos:end="23:30">rm</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:48">audio_stream_num</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:73"><expr pos:start="25:13" pos:end="25:72"><name pos:start="25:13" pos:end="25:15">res</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:72"><name pos:start="25:19" pos:end="25:38">ff_rm_retrieve_cache</name><argument_list pos:start="25:39" pos:end="25:72">(<argument pos:start="25:40" pos:end="25:40"><expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">s</name></expr></argument>, <argument pos:start="25:43" pos:end="25:47"><expr pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:43">s</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:47">pb</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:51"><expr pos:start="25:50" pos:end="25:51"><name pos:start="25:50" pos:end="25:51">st</name></expr></argument>, <argument pos:start="25:54" pos:end="25:66"><expr pos:start="25:54" pos:end="25:66"><name pos:start="25:54" pos:end="25:66"><name pos:start="25:54" pos:end="25:55">st</name><operator pos:start="25:56" pos:end="25:57">-&gt;</operator><name pos:start="25:58" pos:end="25:66">priv_data</name></name></expr></argument>, <argument pos:start="25:69" pos:end="25:71"><expr pos:start="25:69" pos:end="25:71"><name pos:start="25:69" pos:end="25:71">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="29:27"><if pos:start="27:13" pos:end="29:27">if<condition pos:start="27:15" pos:end="27:23">(<expr pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:18">res</name> <operator pos:start="27:20" pos:end="27:20">&lt;</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:27"><block_content pos:start="29:17" pos:end="29:27">

                <return pos:start="29:17" pos:end="29:27">return <expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">res</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:22"><expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:17">flags</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="85:9">else <block pos:start="33:16" pos:end="85:9">{<block_content pos:start="35:13" pos:end="83:25">

            <if_stmt pos:start="35:13" pos:end="63:13"><if pos:start="35:13" pos:end="55:13">if <condition pos:start="35:16" pos:end="35:31">(<expr pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:18">rm</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:30">old_format</name></name></expr>)</condition> <block pos:start="35:33" pos:end="55:13">{<block_content pos:start="37:17" pos:end="53:39">

                <decl_stmt pos:start="37:17" pos:end="37:30"><decl pos:start="37:17" pos:end="37:29"><type pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:24">RMStream</name> <modifier pos:start="37:26" pos:end="37:26">*</modifier></type><name pos:start="37:27" pos:end="37:29">ast</name></decl>;</decl_stmt>



                <expr_stmt pos:start="41:17" pos:end="41:35"><expr pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:18">st</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:34"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:31">streams</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:36"><expr pos:start="43:17" pos:end="43:35"><name pos:start="43:17" pos:end="43:19">ast</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:35"><name pos:start="43:23" pos:end="43:24">st</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:35">priv_data</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:43"><expr pos:start="45:17" pos:end="45:42"><name pos:start="45:17" pos:end="45:25">timestamp</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="49:65"><expr pos:start="47:17" pos:end="49:64"><name pos:start="47:17" pos:end="47:19">len</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <ternary pos:start="47:23" pos:end="49:64"><condition pos:start="47:23" pos:end="47:45"><expr pos:start="47:23" pos:end="47:43"><operator pos:start="47:23" pos:end="47:23">!</operator><name pos:start="47:24" pos:end="47:43"><name pos:start="47:24" pos:end="47:26">ast</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:43">audio_framesize</name></name></expr> ?</condition><then pos:start="47:47" pos:end="47:61"> <expr pos:start="47:47" pos:end="47:61"><name pos:start="47:47" pos:end="47:61">RAW_PACKET_SIZE</name></expr> </then><else pos:start="47:63" pos:end="49:64">:

                    <expr pos:start="49:21" pos:end="49:64"><name pos:start="49:21" pos:end="49:40"><name pos:start="49:21" pos:end="49:23">ast</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:40">coded_framesize</name></name> <operator pos:start="49:42" pos:end="49:42">*</operator> <name pos:start="49:44" pos:end="49:60"><name pos:start="49:44" pos:end="49:46">ast</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:60">sub_packet_h</name></name> <operator pos:start="49:62" pos:end="49:62">/</operator> <literal type="number" pos:start="49:64" pos:end="49:64">2</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:45"><expr pos:start="51:17" pos:end="51:44"><name pos:start="51:17" pos:end="51:21">flags</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <ternary pos:start="51:25" pos:end="51:44"><condition pos:start="51:25" pos:end="51:38"><expr pos:start="51:25" pos:end="51:36"><operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:28">seq</name><operator pos:start="51:29" pos:end="51:30">++</operator> <operator pos:start="51:32" pos:end="51:33">==</operator> <literal type="number" pos:start="51:35" pos:end="51:35">1</literal><operator pos:start="51:36" pos:end="51:36">)</operator></expr> ?</condition><then pos:start="51:40" pos:end="51:40"> <expr pos:start="51:40" pos:end="51:40"><literal type="number" pos:start="51:40" pos:end="51:40">2</literal></expr> </then><else pos:start="51:42" pos:end="51:44">: <expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">0</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:39"><expr pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:19">pos</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:38"><name pos:start="53:23" pos:end="53:31">avio_tell</name><argument_list pos:start="53:32" pos:end="53:38">(<argument pos:start="53:33" pos:end="53:37"><expr pos:start="53:33" pos:end="53:37"><name pos:start="53:33" pos:end="53:37"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="55:15" pos:end="63:13">else <block pos:start="55:20" pos:end="63:13">{<block_content pos:start="57:17" pos:end="61:39">

                <expr_stmt pos:start="57:17" pos:end="57:58"><expr pos:start="57:17" pos:end="57:57"><name pos:start="57:17" pos:end="57:19">len</name><operator pos:start="57:20" pos:end="57:20">=</operator><call pos:start="57:21" pos:end="57:57"><name pos:start="57:21" pos:end="57:24">sync</name><argument_list pos:start="57:25" pos:end="57:57">(<argument pos:start="57:26" pos:end="57:26"><expr pos:start="57:26" pos:end="57:26"><name pos:start="57:26" pos:end="57:26">s</name></expr></argument>, <argument pos:start="57:29" pos:end="57:38"><expr pos:start="57:29" pos:end="57:38"><operator pos:start="57:29" pos:end="57:29">&amp;</operator><name pos:start="57:30" pos:end="57:38">timestamp</name></expr></argument>, <argument pos:start="57:41" pos:end="57:46"><expr pos:start="57:41" pos:end="57:46"><operator pos:start="57:41" pos:end="57:41">&amp;</operator><name pos:start="57:42" pos:end="57:46">flags</name></expr></argument>, <argument pos:start="57:49" pos:end="57:50"><expr pos:start="57:49" pos:end="57:50"><operator pos:start="57:49" pos:end="57:49">&amp;</operator><name pos:start="57:50" pos:end="57:50">i</name></expr></argument>, <argument pos:start="57:53" pos:end="57:56"><expr pos:start="57:53" pos:end="57:56"><operator pos:start="57:53" pos:end="57:53">&amp;</operator><name pos:start="57:54" pos:end="57:56">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="59:17" pos:end="61:39"><if pos:start="59:17" pos:end="61:39">if <condition pos:start="59:20" pos:end="59:28">(<expr pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:23">len</name> <operator pos:start="59:25" pos:end="59:25">&gt;</operator> <literal type="number" pos:start="59:27" pos:end="59:27">0</literal></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:39"><block_content pos:start="61:21" pos:end="61:39">

                    <expr_stmt pos:start="61:21" pos:end="61:39"><expr pos:start="61:21" pos:end="61:38"><name pos:start="61:21" pos:end="61:22">st</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:38"><name pos:start="61:26" pos:end="61:26">s</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:35">streams</name><index pos:start="61:36" pos:end="61:38">[<expr pos:start="61:37" pos:end="61:37"><name pos:start="61:37" pos:end="61:37">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="67:13" pos:end="69:36"><if pos:start="67:13" pos:end="69:36">if<condition pos:start="67:15" pos:end="67:40">(<expr pos:start="67:16" pos:end="67:39"><name pos:start="67:16" pos:end="67:18">len</name><operator pos:start="67:19" pos:end="67:19">&lt;</operator><literal type="number" pos:start="67:20" pos:end="67:20">0</literal> <operator pos:start="67:22" pos:end="67:23">||</operator> <call pos:start="67:25" pos:end="67:39"><name pos:start="67:25" pos:end="67:32">url_feof</name><argument_list pos:start="67:33" pos:end="67:39">(<argument pos:start="67:34" pos:end="67:38"><expr pos:start="67:34" pos:end="67:38"><name pos:start="67:34" pos:end="67:38"><name pos:start="67:34" pos:end="67:34">s</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:38">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:36"><block_content pos:start="69:17" pos:end="69:36">

                <return pos:start="69:17" pos:end="69:36">return <expr pos:start="69:24" pos:end="69:35"><call pos:start="69:24" pos:end="69:35"><name pos:start="69:24" pos:end="69:30">AVERROR</name><argument_list pos:start="69:31" pos:end="69:35">(<argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="73:13" pos:end="75:62"><expr pos:start="73:13" pos:end="75:61"><name pos:start="73:13" pos:end="73:15">res</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="75:61"><name pos:start="73:19" pos:end="73:36">ff_rm_parse_packet</name> <argument_list pos:start="73:38" pos:end="75:61">(<argument pos:start="73:39" pos:end="73:39"><expr pos:start="73:39" pos:end="73:39"><name pos:start="73:39" pos:end="73:39">s</name></expr></argument>, <argument pos:start="73:42" pos:end="73:46"><expr pos:start="73:42" pos:end="73:46"><name pos:start="73:42" pos:end="73:46"><name pos:start="73:42" pos:end="73:42">s</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:46">pb</name></name></expr></argument>, <argument pos:start="73:49" pos:end="73:50"><expr pos:start="73:49" pos:end="73:50"><name pos:start="73:49" pos:end="73:50">st</name></expr></argument>, <argument pos:start="73:53" pos:end="73:65"><expr pos:start="73:53" pos:end="73:65"><name pos:start="73:53" pos:end="73:65"><name pos:start="73:53" pos:end="73:54">st</name><operator pos:start="73:55" pos:end="73:56">-&gt;</operator><name pos:start="73:57" pos:end="73:65">priv_data</name></name></expr></argument>, <argument pos:start="73:68" pos:end="73:70"><expr pos:start="73:68" pos:end="73:70"><name pos:start="73:68" pos:end="73:70">len</name></expr></argument>, <argument pos:start="73:73" pos:end="73:75"><expr pos:start="73:73" pos:end="73:75"><name pos:start="73:73" pos:end="73:75">pkt</name></expr></argument>,

                                      <argument pos:start="75:39" pos:end="75:42"><expr pos:start="75:39" pos:end="75:42"><operator pos:start="75:39" pos:end="75:39">&amp;</operator><name pos:start="75:40" pos:end="75:42">seq</name></expr></argument>, <argument pos:start="75:45" pos:end="75:49"><expr pos:start="75:45" pos:end="75:49"><name pos:start="75:45" pos:end="75:49">flags</name></expr></argument>, <argument pos:start="75:52" pos:end="75:60"><expr pos:start="75:52" pos:end="75:60"><name pos:start="75:52" pos:end="75:60">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="79:79"><if pos:start="77:13" pos:end="79:79">if<condition pos:start="77:15" pos:end="77:44">(<expr pos:start="77:16" pos:end="77:43"><operator pos:start="77:16" pos:end="77:16">(</operator><name pos:start="77:17" pos:end="77:21">flags</name><operator pos:start="77:22" pos:end="77:22">&amp;</operator><literal type="number" pos:start="77:23" pos:end="77:23">2</literal><operator pos:start="77:24" pos:end="77:24">)</operator> <operator pos:start="77:26" pos:end="77:27">&amp;&amp;</operator> <operator pos:start="77:29" pos:end="77:29">(</operator><name pos:start="77:30" pos:end="77:32">seq</name><operator pos:start="77:33" pos:end="77:33">&amp;</operator><literal type="number" pos:start="77:34" pos:end="77:37">0x7F</literal><operator pos:start="77:38" pos:end="77:38">)</operator> <operator pos:start="77:40" pos:end="77:41">==</operator> <literal type="number" pos:start="77:43" pos:end="77:43">1</literal></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:79"><block_content pos:start="79:17" pos:end="79:79">

                <expr_stmt pos:start="79:17" pos:end="79:79"><expr pos:start="79:17" pos:end="79:78"><call pos:start="79:17" pos:end="79:78"><name pos:start="79:17" pos:end="79:34">av_add_index_entry</name><argument_list pos:start="79:35" pos:end="79:78">(<argument pos:start="79:36" pos:end="79:37"><expr pos:start="79:36" pos:end="79:37"><name pos:start="79:36" pos:end="79:37">st</name></expr></argument>, <argument pos:start="79:40" pos:end="79:42"><expr pos:start="79:40" pos:end="79:42"><name pos:start="79:40" pos:end="79:42">pos</name></expr></argument>, <argument pos:start="79:45" pos:end="79:53"><expr pos:start="79:45" pos:end="79:53"><name pos:start="79:45" pos:end="79:53">timestamp</name></expr></argument>, <argument pos:start="79:56" pos:end="79:56"><expr pos:start="79:56" pos:end="79:56"><literal type="number" pos:start="79:56" pos:end="79:56">0</literal></expr></argument>, <argument pos:start="79:59" pos:end="79:59"><expr pos:start="79:59" pos:end="79:59"><literal type="number" pos:start="79:59" pos:end="79:59">0</literal></expr></argument>, <argument pos:start="79:62" pos:end="79:77"><expr pos:start="79:62" pos:end="79:77"><name pos:start="79:62" pos:end="79:77">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="83:25"><if pos:start="81:13" pos:end="83:25">if <condition pos:start="81:16" pos:end="81:20">(<expr pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">res</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25">

                <continue pos:start="83:17" pos:end="83:25">continue;</continue></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="89:9" pos:end="97:18"><if pos:start="89:9" pos:end="95:9">if<condition pos:start="89:11" pos:end="91:43">(  <expr pos:start="89:14" pos:end="91:42"><operator pos:start="89:14" pos:end="89:14">(</operator><name pos:start="89:15" pos:end="89:25"><name pos:start="89:15" pos:end="89:16">st</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:25">discard</name></name> <operator pos:start="89:27" pos:end="89:28">&gt;=</operator> <name pos:start="89:30" pos:end="89:45">AVDISCARD_NONKEY</name> <operator pos:start="89:47" pos:end="89:48">&amp;&amp;</operator> <operator pos:start="89:50" pos:end="89:50">!</operator><operator pos:start="89:51" pos:end="89:51">(</operator><name pos:start="89:52" pos:end="89:56">flags</name><operator pos:start="89:57" pos:end="89:57">&amp;</operator><literal type="number" pos:start="89:58" pos:end="89:58">2</literal><operator pos:start="89:59" pos:end="89:59">)</operator><operator pos:start="89:60" pos:end="89:60">)</operator>

           <operator pos:start="91:12" pos:end="91:13">||</operator> <name pos:start="91:15" pos:end="91:25"><name pos:start="91:15" pos:end="91:16">st</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:25">discard</name></name> <operator pos:start="91:27" pos:end="91:28">&gt;=</operator> <name pos:start="91:30" pos:end="91:42">AVDISCARD_ALL</name></expr>)</condition><block pos:start="91:44" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:32">

            <expr_stmt pos:start="93:13" pos:end="93:32"><expr pos:start="93:13" pos:end="93:31"><call pos:start="93:13" pos:end="93:31"><name pos:start="93:13" pos:end="93:26">av_free_packet</name><argument_list pos:start="93:27" pos:end="93:31">(<argument pos:start="93:28" pos:end="93:30"><expr pos:start="93:28" pos:end="93:30"><name pos:start="93:28" pos:end="93:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="97:18">else<block type="pseudo" pos:start="97:13" pos:end="97:18"><block_content pos:start="97:13" pos:end="97:18">

            <break pos:start="97:13" pos:end="97:18">break;</break></block_content></block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
