<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24362.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">a15_daughterboard_init</name><parameter_list pos:start="1:35" pos:end="7:49">(<parameter pos:start="1:36" pos:end="1:66"><decl pos:start="1:36" pos:end="1:66"><type pos:start="1:36" pos:end="1:66"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:61">VexpressMachineState</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">vms</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:54"><decl pos:start="3:36" pos:end="3:54"><type pos:start="3:36" pos:end="3:54"><name pos:start="3:36" pos:end="3:45">ram_addr_t</name></type> <name pos:start="3:47" pos:end="3:54">ram_size</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:56"><decl pos:start="5:36" pos:end="5:56"><type pos:start="5:36" pos:end="5:56"><specifier pos:start="5:36" pos:end="5:40">const</specifier> <name pos:start="5:42" pos:end="5:45">char</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:56">cpu_model</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:48"><decl pos:start="7:36" pos:end="7:48"><type pos:start="7:36" pos:end="7:48"><name pos:start="7:36" pos:end="7:43">qemu_irq</name> <modifier pos:start="7:45" pos:end="7:45">*</modifier></type><name pos:start="7:46" pos:end="7:48">pic</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="101:1">{<block_content pos:start="11:5" pos:end="93:58">

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">MemoryRegion</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:24">sysmem</name> <init pos:start="11:26" pos:end="11:46">= <expr pos:start="11:28" pos:end="11:46"><call pos:start="11:28" pos:end="11:46"><name pos:start="11:28" pos:end="11:44">get_system_memory</name><argument_list pos:start="11:45" pos:end="11:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">MemoryRegion</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">ram</name> <init pos:start="13:23" pos:end="13:46">= <expr pos:start="13:25" pos:end="13:46"><call pos:start="13:25" pos:end="13:46"><name pos:start="13:25" pos:end="13:29">g_new</name><argument_list pos:start="13:30" pos:end="13:46">(<argument pos:start="13:31" pos:end="13:42"><expr pos:start="13:31" pos:end="13:42"><name pos:start="13:31" pos:end="13:42">MemoryRegion</name></expr></argument>, <argument pos:start="13:45" pos:end="13:45"><expr pos:start="13:45" pos:end="13:45"><literal type="number" pos:start="13:45" pos:end="13:45">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:47"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">MemoryRegion</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:22">sram</name> <init pos:start="15:24" pos:end="15:47">= <expr pos:start="15:26" pos:end="15:47"><call pos:start="15:26" pos:end="15:47"><name pos:start="15:26" pos:end="15:30">g_new</name><argument_list pos:start="15:31" pos:end="15:47">(<argument pos:start="15:32" pos:end="15:43"><expr pos:start="15:32" pos:end="15:43"><name pos:start="15:32" pos:end="15:43">MemoryRegion</name></expr></argument>, <argument pos:start="15:46" pos:end="15:46"><expr pos:start="15:46" pos:end="15:46"><literal type="number" pos:start="15:46" pos:end="15:46">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:18">cpu_model</name></expr>)</condition> <block pos:start="19:21" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:33">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:17">cpu_model</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <literal type="string" pos:start="21:21" pos:end="21:32">"cortex-a15"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <block pos:start="27:5" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:9">

        <comment type="block" pos:start="29:9" pos:end="35:11">/* We have to use a separate 64 bit variable here to avoid the gcc

         * "comparison is always false due to limited range of data type"

         * warning if we are on a host where ram_addr_t is 32 bits.

         */</comment>

        <decl_stmt pos:start="37:9" pos:end="37:32"><decl pos:start="37:9" pos:end="37:31"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">uint64_t</name></type> <name pos:start="37:18" pos:end="37:20">rsz</name> <init pos:start="37:22" pos:end="37:31">= <expr pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:31">ram_size</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:47">(<expr pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:15">rsz</name> <operator pos:start="39:17" pos:end="39:17">&gt;</operator> <operator pos:start="39:19" pos:end="39:19">(</operator><literal type="number" pos:start="39:20" pos:end="39:24">30ULL</literal> <operator pos:start="39:26" pos:end="39:26">*</operator> <literal type="number" pos:start="39:28" pos:end="39:31">1024</literal> <operator pos:start="39:33" pos:end="39:33">*</operator> <literal type="number" pos:start="39:35" pos:end="39:38">1024</literal> <operator pos:start="39:40" pos:end="39:40">*</operator> <literal type="number" pos:start="39:42" pos:end="39:45">1024</literal><operator pos:start="39:46" pos:end="39:46">)</operator></expr>)</condition> <block pos:start="39:49" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:20">

            <expr_stmt pos:start="41:13" pos:end="41:79"><expr pos:start="41:13" pos:end="41:78"><call pos:start="41:13" pos:end="41:78"><name pos:start="41:13" pos:end="41:19">fprintf</name><argument_list pos:start="41:20" pos:end="41:78">(<argument pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:26"><name pos:start="41:21" pos:end="41:26">stderr</name></expr></argument>, <argument pos:start="41:29" pos:end="41:77"><expr pos:start="41:29" pos:end="41:77"><literal type="string" pos:start="41:29" pos:end="41:77">"vexpress-a15: cannot model more than 30GB RAM\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:20"><expr pos:start="43:13" pos:end="43:19"><call pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:16">exit</name><argument_list pos:start="43:17" pos:end="43:19">(<argument pos:start="43:18" pos:end="43:18"><expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="51:5" pos:end="53:51"><expr pos:start="51:5" pos:end="53:50"><call pos:start="51:5" pos:end="53:50"><name pos:start="51:5" pos:end="51:40">memory_region_allocate_system_memory</name><argument_list pos:start="51:41" pos:end="53:50">(<argument pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:44">ram</name></expr></argument>, <argument pos:start="51:47" pos:end="51:50"><expr pos:start="51:47" pos:end="51:50"><name pos:start="51:47" pos:end="51:50">NULL</name></expr></argument>, <argument pos:start="51:53" pos:end="51:70"><expr pos:start="51:53" pos:end="51:70"><literal type="string" pos:start="51:53" pos:end="51:70">"vexpress.highmem"</literal></expr></argument>,

                                         <argument pos:start="53:42" pos:end="53:49"><expr pos:start="53:42" pos:end="53:49"><name pos:start="53:42" pos:end="53:49">ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="55:5" pos:end="55:78">/* RAM is from 0x80000000 upwards; there is no low-memory alias for it. */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:57"><expr pos:start="57:5" pos:end="57:56"><call pos:start="57:5" pos:end="57:56"><name pos:start="57:5" pos:end="57:31">memory_region_add_subregion</name><argument_list pos:start="57:32" pos:end="57:56">(<argument pos:start="57:33" pos:end="57:38"><expr pos:start="57:33" pos:end="57:38"><name pos:start="57:33" pos:end="57:38">sysmem</name></expr></argument>, <argument pos:start="57:41" pos:end="57:50"><expr pos:start="57:41" pos:end="57:50"><literal type="number" pos:start="57:41" pos:end="57:50">0x80000000</literal></expr></argument>, <argument pos:start="57:53" pos:end="57:55"><expr pos:start="57:53" pos:end="57:55"><name pos:start="57:53" pos:end="57:55">ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:58">/* 0x2c000000 A15MPCore private memory region (GIC) */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:73"><expr pos:start="63:5" pos:end="63:72"><call pos:start="63:5" pos:end="63:72"><name pos:start="63:5" pos:end="63:13">init_cpus</name><argument_list pos:start="63:14" pos:end="63:72">(<argument pos:start="63:15" pos:end="63:23"><expr pos:start="63:15" pos:end="63:23"><name pos:start="63:15" pos:end="63:23">cpu_model</name></expr></argument>, <argument pos:start="63:26" pos:end="63:41"><expr pos:start="63:26" pos:end="63:41"><literal type="string" pos:start="63:26" pos:end="63:41">"a15mpcore_priv"</literal></expr></argument>, <argument pos:start="63:44" pos:end="63:53"><expr pos:start="63:44" pos:end="63:53"><literal type="number" pos:start="63:44" pos:end="63:53">0x2c000000</literal></expr></argument>, <argument pos:start="63:56" pos:end="63:58"><expr pos:start="63:56" pos:end="63:58"><name pos:start="63:56" pos:end="63:58">pic</name></expr></argument>, <argument pos:start="63:61" pos:end="63:71"><expr pos:start="63:61" pos:end="63:71"><name pos:start="63:61" pos:end="63:71"><name pos:start="63:61" pos:end="63:63">vms</name><operator pos:start="63:64" pos:end="63:65">-&gt;</operator><name pos:start="63:66" pos:end="63:71">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:40">/* A15 daughterboard peripherals: */</comment>



    <comment type="block" pos:start="71:5" pos:end="71:56">/* 0x20000000: CoreSight interfaces: not modelled */</comment>

    <comment type="block" pos:start="73:5" pos:end="73:58">/* 0x2a000000: PL301 AXI interconnect: not modelled */</comment>

    <comment type="block" pos:start="75:5" pos:end="75:39">/* 0x2a420000: SCC: not modelled */</comment>

    <comment type="block" pos:start="77:5" pos:end="77:50">/* 0x2a430000: system counter: not modelled */</comment>

    <comment type="block" pos:start="79:5" pos:end="79:52">/* 0x2b000000: HDLCD controller: not modelled */</comment>

    <comment type="block" pos:start="81:5" pos:end="81:50">/* 0x2b060000: SP805 watchdog: not modelled */</comment>

    <comment type="block" pos:start="83:5" pos:end="83:67">/* 0x2b0a0000: PL341 dynamic memory controller: not modelled */</comment>

    <comment type="block" pos:start="85:5" pos:end="85:33">/* 0x2e000000: system SRAM */</comment>

    <expr_stmt pos:start="87:5" pos:end="89:41"><expr pos:start="87:5" pos:end="89:40"><call pos:start="87:5" pos:end="89:40"><name pos:start="87:5" pos:end="87:26">memory_region_init_ram</name><argument_list pos:start="87:27" pos:end="89:40">(<argument pos:start="87:28" pos:end="87:31"><expr pos:start="87:28" pos:end="87:31"><name pos:start="87:28" pos:end="87:31">sram</name></expr></argument>, <argument pos:start="87:34" pos:end="87:37"><expr pos:start="87:34" pos:end="87:37"><name pos:start="87:34" pos:end="87:37">NULL</name></expr></argument>, <argument pos:start="87:40" pos:end="87:57"><expr pos:start="87:40" pos:end="87:57"><literal type="string" pos:start="87:40" pos:end="87:57">"vexpress.a15sram"</literal></expr></argument>, <argument pos:start="87:60" pos:end="87:66"><expr pos:start="87:60" pos:end="87:66"><literal type="number" pos:start="87:60" pos:end="87:66">0x10000</literal></expr></argument>,

                           <argument pos:start="89:28" pos:end="89:39"><expr pos:start="89:28" pos:end="89:39"><operator pos:start="89:28" pos:end="89:28">&amp;</operator><name pos:start="89:29" pos:end="89:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><call pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:31">vmstate_register_ram_global</name><argument_list pos:start="91:32" pos:end="91:37">(<argument pos:start="91:33" pos:end="91:36"><expr pos:start="91:33" pos:end="91:36"><name pos:start="91:33" pos:end="91:36">sram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:58"><expr pos:start="93:5" pos:end="93:57"><call pos:start="93:5" pos:end="93:57"><name pos:start="93:5" pos:end="93:31">memory_region_add_subregion</name><argument_list pos:start="93:32" pos:end="93:57">(<argument pos:start="93:33" pos:end="93:38"><expr pos:start="93:33" pos:end="93:38"><name pos:start="93:33" pos:end="93:38">sysmem</name></expr></argument>, <argument pos:start="93:41" pos:end="93:50"><expr pos:start="93:41" pos:end="93:50"><literal type="number" pos:start="93:41" pos:end="93:50">0x2e000000</literal></expr></argument>, <argument pos:start="93:53" pos:end="93:56"><expr pos:start="93:53" pos:end="93:56"><name pos:start="93:53" pos:end="93:56">sram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:57">/* 0x7ffb0000: DMA330 DMA controller: not modelled */</comment>

    <comment type="block" pos:start="99:5" pos:end="99:66">/* 0x7ffd0000: PL354 static memory controller: not modelled */</comment>

</block_content>}</block></function>
</unit>
