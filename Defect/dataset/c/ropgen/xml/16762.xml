<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16762.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">dmg_open</name><parameter_list pos:start="1:20" pos:end="1:52">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:51"><decl pos:start="1:43" pos:end="1:51"><type pos:start="1:43" pos:end="1:51"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:51">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:14">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVDMGState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">off_t</name></type> <name pos:start="7:11" pos:end="7:20">info_begin</name></decl>,<decl pos:start="7:22" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:22" pos:end="7:29">info_end</name></decl>,<decl pos:start="7:31" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:31" pos:end="7:44">last_in_offset</name></decl>,<decl pos:start="7:46" pos:end="7:60"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:46" pos:end="7:60">last_out_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:61"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:32">max_compressed_size</name><init pos:start="11:33" pos:end="11:34">=<expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">1</literal></expr></init></decl>,<decl pos:start="11:36" pos:end="11:58"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:36" pos:end="11:56">max_sectors_per_chunk</name><init pos:start="11:57" pos:end="11:58">=<expr pos:start="11:58" pos:end="11:58"><literal type="number" pos:start="11:58" pos:end="11:58">1</literal></expr></init></decl>,<decl pos:start="11:60" pos:end="11:60"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:60" pos:end="11:60">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:18">offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:6">bs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:17">read_only</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">n_chunks</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:14">offsets</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:27"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:27">lengths</name></name> <operator pos:start="21:29" pos:end="21:29">=</operator> <name pos:start="21:31" pos:end="21:40"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:40">sectors</name></name> <operator pos:start="21:42" pos:end="21:42">=</operator> <name pos:start="21:44" pos:end="21:58"><name pos:start="21:44" pos:end="21:44">s</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:58">sectorcounts</name></name> <operator pos:start="21:60" pos:end="21:60">=</operator> <name pos:start="21:62" pos:end="21:65">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:36">/* read offset of info blocks */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:10">offset</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:37"><name pos:start="27:14" pos:end="27:27">bdrv_getlength</name><argument_list pos:start="27:28" pos:end="27:37">(<argument pos:start="27:29" pos:end="27:36"><expr pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:36"><name pos:start="27:29" pos:end="27:30">bs</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:36">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:14">offset</name> <operator pos:start="29:16" pos:end="29:16">&lt;</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>)</condition> <block pos:start="29:21" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:10">offset</name> <operator pos:start="35:12" pos:end="35:13">-=</operator> <literal type="number" pos:start="35:15" pos:end="35:19">0x1d8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:14">info_begin</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <call pos:start="39:18" pos:end="39:37"><name pos:start="39:18" pos:end="39:25">read_off</name><argument_list pos:start="39:26" pos:end="39:37">(<argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">bs</name></expr></argument>, <argument pos:start="39:31" pos:end="39:36"><expr pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:36">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:24">(<expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:18">info_begin</name> <operator pos:start="41:20" pos:end="41:21">==</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>)</condition> <block pos:start="41:26" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:18">

	<goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:45">(<expr pos:start="49:9" pos:end="49:44"><call pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:19">read_uint32</name><argument_list pos:start="49:20" pos:end="49:35">(<argument pos:start="49:21" pos:end="49:22"><expr pos:start="49:21" pos:end="49:22"><name pos:start="49:21" pos:end="49:22">bs</name></expr></argument>, <argument pos:start="49:25" pos:end="49:34"><expr pos:start="49:25" pos:end="49:34"><name pos:start="49:25" pos:end="49:34">info_begin</name></expr></argument>)</argument_list></call> <operator pos:start="49:37" pos:end="49:38">!=</operator> <literal type="number" pos:start="49:40" pos:end="49:44">0x100</literal></expr>)</condition> <block pos:start="49:47" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:18">

        <goto pos:start="51:9" pos:end="51:18">goto <name pos:start="51:14" pos:end="51:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:44"><expr pos:start="57:5" pos:end="57:43"><name pos:start="57:5" pos:end="57:9">count</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:23">read_uint32</name><argument_list pos:start="57:24" pos:end="57:43">(<argument pos:start="57:25" pos:end="57:26"><expr pos:start="57:25" pos:end="57:26"><name pos:start="57:25" pos:end="57:26">bs</name></expr></argument>, <argument pos:start="57:29" pos:end="57:42"><expr pos:start="57:29" pos:end="57:42"><name pos:start="57:29" pos:end="57:38">info_begin</name> <operator pos:start="57:40" pos:end="57:40">+</operator> <literal type="number" pos:start="57:42" pos:end="57:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:19">(<expr pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:13">count</name> <operator pos:start="59:15" pos:end="59:16">==</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>)</condition> <block pos:start="59:21" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:18">

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:12">info_end</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:25">info_begin</name> <operator pos:start="65:27" pos:end="65:27">+</operator> <name pos:start="65:29" pos:end="65:33">count</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:10">offset</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:23">info_begin</name> <operator pos:start="69:25" pos:end="69:25">+</operator> <literal type="number" pos:start="69:27" pos:end="69:31">0x100</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:22">/* read offsets */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:41"><expr pos:start="75:5" pos:end="75:40"><name pos:start="75:5" pos:end="75:18">last_in_offset</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:36">last_out_offset</name> <operator pos:start="75:38" pos:end="75:38">=</operator> <literal type="number" pos:start="75:40" pos:end="75:40">0</literal></expr>;</expr_stmt>

    <while pos:start="77:5" pos:end="191:5">while <condition pos:start="77:11" pos:end="77:29">(<expr pos:start="77:12" pos:end="77:28"><name pos:start="77:12" pos:end="77:17">offset</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:28">info_end</name></expr>)</condition> <block pos:start="77:31" pos:end="191:5">{<block_content pos:start="79:9" pos:end="189:9">

        <decl_stmt pos:start="79:9" pos:end="79:22"><decl pos:start="79:9" pos:end="79:21"><type pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">uint32_t</name></type> <name pos:start="79:18" pos:end="79:21">type</name></decl>;</decl_stmt>



	<expr_stmt pos:start="83:9" pos:end="83:40"><expr pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:13">count</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <call pos:start="83:17" pos:end="83:39"><name pos:start="83:17" pos:end="83:27">read_uint32</name><argument_list pos:start="83:28" pos:end="83:39">(<argument pos:start="83:29" pos:end="83:30"><expr pos:start="83:29" pos:end="83:30"><name pos:start="83:29" pos:end="83:30">bs</name></expr></argument>, <argument pos:start="83:33" pos:end="83:38"><expr pos:start="83:33" pos:end="83:38"><name pos:start="83:33" pos:end="83:38">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="85:9" pos:end="87:22"><if pos:start="85:9" pos:end="87:22">if<condition pos:start="85:11" pos:end="85:20">(<expr pos:start="85:12" pos:end="85:19"><name pos:start="85:12" pos:end="85:16">count</name><operator pos:start="85:17" pos:end="85:18">==</operator><literal type="number" pos:start="85:19" pos:end="85:19">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:22"><block_content pos:start="87:13" pos:end="87:22">

	    <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:20"><expr pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:14">offset</name> <operator pos:start="89:16" pos:end="89:17">+=</operator> <literal type="number" pos:start="89:19" pos:end="89:19">4</literal></expr>;</expr_stmt>



	<expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:12">type</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <call pos:start="93:16" pos:end="93:38"><name pos:start="93:16" pos:end="93:26">read_uint32</name><argument_list pos:start="93:27" pos:end="93:38">(<argument pos:start="93:28" pos:end="93:29"><expr pos:start="93:28" pos:end="93:29"><name pos:start="93:28" pos:end="93:29">bs</name></expr></argument>, <argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="95:9" pos:end="189:9"><if pos:start="95:9" pos:end="189:9">if <condition pos:start="95:12" pos:end="95:47">(<expr pos:start="95:13" pos:end="95:46"><name pos:start="95:13" pos:end="95:16">type</name> <operator pos:start="95:18" pos:end="95:19">==</operator> <literal type="number" pos:start="95:21" pos:end="95:30">0x6d697368</literal> <operator pos:start="95:32" pos:end="95:33">&amp;&amp;</operator> <name pos:start="95:35" pos:end="95:39">count</name> <operator pos:start="95:41" pos:end="95:42">&gt;=</operator> <literal type="number" pos:start="95:44" pos:end="95:46">244</literal></expr>)</condition> <block pos:start="95:49" pos:end="189:9">{<block_content pos:start="97:13" pos:end="187:37">

	    <decl_stmt pos:start="97:13" pos:end="97:38"><decl pos:start="97:13" pos:end="97:24"><type pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">int</name></type> <name pos:start="97:17" pos:end="97:24">new_size</name></decl>, <decl pos:start="97:27" pos:end="97:37"><type ref="prev" pos:start="97:13" pos:end="97:15"/><name pos:start="97:27" pos:end="97:37">chunk_count</name></decl>;</decl_stmt>



            <expr_stmt pos:start="101:13" pos:end="101:24"><expr pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:18">offset</name> <operator pos:start="101:20" pos:end="101:21">+=</operator> <literal type="number" pos:start="101:23" pos:end="101:23">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:26"><expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:18">offset</name> <operator pos:start="103:20" pos:end="103:21">+=</operator> <literal type="number" pos:start="103:23" pos:end="103:25">200</literal></expr>;</expr_stmt>



	    <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:23">chunk_count</name> <operator pos:start="107:25" pos:end="107:25">=</operator> <operator pos:start="107:27" pos:end="107:27">(</operator><name pos:start="107:28" pos:end="107:32">count</name><operator pos:start="107:33" pos:end="107:33">-</operator><literal type="number" pos:start="107:34" pos:end="107:36">204</literal><operator pos:start="107:37" pos:end="107:37">)</operator><operator pos:start="107:38" pos:end="107:38">/</operator><literal type="number" pos:start="107:39" pos:end="107:40">40</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="109:13" pos:end="109:70"><expr pos:start="109:13" pos:end="109:69"><name pos:start="109:13" pos:end="109:20">new_size</name> <operator pos:start="109:22" pos:end="109:22">=</operator> <sizeof pos:start="109:24" pos:end="109:39">sizeof<argument_list pos:start="109:30" pos:end="109:39">(<argument pos:start="109:31" pos:end="109:38"><expr pos:start="109:31" pos:end="109:38"><name pos:start="109:31" pos:end="109:38">uint64_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="109:41" pos:end="109:41">*</operator> <operator pos:start="109:43" pos:end="109:43">(</operator><name pos:start="109:44" pos:end="109:54"><name pos:start="109:44" pos:end="109:44">s</name><operator pos:start="109:45" pos:end="109:46">-&gt;</operator><name pos:start="109:47" pos:end="109:54">n_chunks</name></name> <operator pos:start="109:56" pos:end="109:56">+</operator> <name pos:start="109:58" pos:end="109:68">chunk_count</name><operator pos:start="109:69" pos:end="109:69">)</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="111:13" pos:end="111:55"><expr pos:start="111:13" pos:end="111:54"><name pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:20">types</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <call pos:start="111:24" pos:end="111:54"><name pos:start="111:24" pos:end="111:32">g_realloc</name><argument_list pos:start="111:33" pos:end="111:54">(<argument pos:start="111:34" pos:end="111:41"><expr pos:start="111:34" pos:end="111:41"><name pos:start="111:34" pos:end="111:41"><name pos:start="111:34" pos:end="111:34">s</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:41">types</name></name></expr></argument>, <argument pos:start="111:44" pos:end="111:53"><expr pos:start="111:44" pos:end="111:53"><name pos:start="111:44" pos:end="111:51">new_size</name><operator pos:start="111:52" pos:end="111:52">/</operator><literal type="number" pos:start="111:53" pos:end="111:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="113:13" pos:end="113:57"><expr pos:start="113:13" pos:end="113:56"><name pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:22">offsets</name></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <call pos:start="113:26" pos:end="113:56"><name pos:start="113:26" pos:end="113:34">g_realloc</name><argument_list pos:start="113:35" pos:end="113:56">(<argument pos:start="113:36" pos:end="113:45"><expr pos:start="113:36" pos:end="113:45"><name pos:start="113:36" pos:end="113:45"><name pos:start="113:36" pos:end="113:36">s</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:45">offsets</name></name></expr></argument>, <argument pos:start="113:48" pos:end="113:55"><expr pos:start="113:48" pos:end="113:55"><name pos:start="113:48" pos:end="113:55">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="115:13" pos:end="115:57"><expr pos:start="115:13" pos:end="115:56"><name pos:start="115:13" pos:end="115:22"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:22">lengths</name></name> <operator pos:start="115:24" pos:end="115:24">=</operator> <call pos:start="115:26" pos:end="115:56"><name pos:start="115:26" pos:end="115:34">g_realloc</name><argument_list pos:start="115:35" pos:end="115:56">(<argument pos:start="115:36" pos:end="115:45"><expr pos:start="115:36" pos:end="115:45"><name pos:start="115:36" pos:end="115:45"><name pos:start="115:36" pos:end="115:36">s</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:45">lengths</name></name></expr></argument>, <argument pos:start="115:48" pos:end="115:55"><expr pos:start="115:48" pos:end="115:55"><name pos:start="115:48" pos:end="115:55">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="117:13" pos:end="117:57"><expr pos:start="117:13" pos:end="117:56"><name pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:22">sectors</name></name> <operator pos:start="117:24" pos:end="117:24">=</operator> <call pos:start="117:26" pos:end="117:56"><name pos:start="117:26" pos:end="117:34">g_realloc</name><argument_list pos:start="117:35" pos:end="117:56">(<argument pos:start="117:36" pos:end="117:45"><expr pos:start="117:36" pos:end="117:45"><name pos:start="117:36" pos:end="117:45"><name pos:start="117:36" pos:end="117:36">s</name><operator pos:start="117:37" pos:end="117:38">-&gt;</operator><name pos:start="117:39" pos:end="117:45">sectors</name></name></expr></argument>, <argument pos:start="117:48" pos:end="117:55"><expr pos:start="117:48" pos:end="117:55"><name pos:start="117:48" pos:end="117:55">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="119:13" pos:end="119:67"><expr pos:start="119:13" pos:end="119:66"><name pos:start="119:13" pos:end="119:27"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:27">sectorcounts</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <call pos:start="119:31" pos:end="119:66"><name pos:start="119:31" pos:end="119:39">g_realloc</name><argument_list pos:start="119:40" pos:end="119:66">(<argument pos:start="119:41" pos:end="119:55"><expr pos:start="119:41" pos:end="119:55"><name pos:start="119:41" pos:end="119:55"><name pos:start="119:41" pos:end="119:41">s</name><operator pos:start="119:42" pos:end="119:43">-&gt;</operator><name pos:start="119:44" pos:end="119:55">sectorcounts</name></name></expr></argument>, <argument pos:start="119:58" pos:end="119:65"><expr pos:start="119:58" pos:end="119:65"><name pos:start="119:58" pos:end="119:65">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	    <for pos:start="123:13" pos:end="185:13">for<control pos:start="123:16" pos:end="123:60">(<init pos:start="123:17" pos:end="123:30"><expr pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:17">i</name><operator pos:start="123:18" pos:end="123:18">=</operator><name pos:start="123:19" pos:end="123:29"><name pos:start="123:19" pos:end="123:19">s</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">n_chunks</name></name></expr>;</init><condition pos:start="123:31" pos:end="123:56"><expr pos:start="123:31" pos:end="123:55"><name pos:start="123:31" pos:end="123:31">i</name><operator pos:start="123:32" pos:end="123:32">&lt;</operator><name pos:start="123:33" pos:end="123:43"><name pos:start="123:33" pos:end="123:33">s</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:43">n_chunks</name></name><operator pos:start="123:44" pos:end="123:44">+</operator><name pos:start="123:45" pos:end="123:55">chunk_count</name></expr>;</condition><incr pos:start="123:57" pos:end="123:59"><expr pos:start="123:57" pos:end="123:59"><name pos:start="123:57" pos:end="123:57">i</name><operator pos:start="123:58" pos:end="123:59">++</operator></expr></incr>)</control> <block pos:start="123:62" pos:end="185:13">{<block_content pos:start="125:17" pos:end="183:63">

		<expr_stmt pos:start="125:17" pos:end="125:54"><expr pos:start="125:17" pos:end="125:53"><name pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:17">s</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:24">types</name><index pos:start="125:25" pos:end="125:27">[<expr pos:start="125:26" pos:end="125:26"><name pos:start="125:26" pos:end="125:26">i</name></expr>]</index></name> <operator pos:start="125:29" pos:end="125:29">=</operator> <call pos:start="125:31" pos:end="125:53"><name pos:start="125:31" pos:end="125:41">read_uint32</name><argument_list pos:start="125:42" pos:end="125:53">(<argument pos:start="125:43" pos:end="125:44"><expr pos:start="125:43" pos:end="125:44"><name pos:start="125:43" pos:end="125:44">bs</name></expr></argument>, <argument pos:start="125:47" pos:end="125:52"><expr pos:start="125:47" pos:end="125:52"><name pos:start="125:47" pos:end="125:52">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="127:17" pos:end="127:28"><expr pos:start="127:17" pos:end="127:27"><name pos:start="127:17" pos:end="127:22">offset</name> <operator pos:start="127:24" pos:end="127:25">+=</operator> <literal type="number" pos:start="127:27" pos:end="127:27">4</literal></expr>;</expr_stmt>

		<if_stmt pos:start="129:17" pos:end="147:17"><if pos:start="129:17" pos:end="147:17">if<condition pos:start="129:19" pos:end="129:79">(<expr pos:start="129:20" pos:end="129:78"><name pos:start="129:20" pos:end="129:30"><name pos:start="129:20" pos:end="129:20">s</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:27">types</name><index pos:start="129:28" pos:end="129:30">[<expr pos:start="129:29" pos:end="129:29"><name pos:start="129:29" pos:end="129:29">i</name></expr>]</index></name><operator pos:start="129:31" pos:end="129:32">!=</operator><literal type="number" pos:start="129:33" pos:end="129:42">0x80000005</literal> <operator pos:start="129:44" pos:end="129:45">&amp;&amp;</operator> <name pos:start="129:47" pos:end="129:57"><name pos:start="129:47" pos:end="129:47">s</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:54">types</name><index pos:start="129:55" pos:end="129:57">[<expr pos:start="129:56" pos:end="129:56"><name pos:start="129:56" pos:end="129:56">i</name></expr>]</index></name><operator pos:start="129:58" pos:end="129:59">!=</operator><literal type="number" pos:start="129:60" pos:end="129:60">1</literal> <operator pos:start="129:62" pos:end="129:63">&amp;&amp;</operator> <name pos:start="129:65" pos:end="129:75"><name pos:start="129:65" pos:end="129:65">s</name><operator pos:start="129:66" pos:end="129:67">-&gt;</operator><name pos:start="129:68" pos:end="129:72">types</name><index pos:start="129:73" pos:end="129:75">[<expr pos:start="129:74" pos:end="129:74"><name pos:start="129:74" pos:end="129:74">i</name></expr>]</index></name><operator pos:start="129:76" pos:end="129:77">!=</operator><literal type="number" pos:start="129:78" pos:end="129:78">2</literal></expr>)</condition> <block pos:start="129:81" pos:end="147:17">{<block_content pos:start="131:21" pos:end="145:29">

		    <if_stmt pos:start="131:21" pos:end="137:21"><if pos:start="131:21" pos:end="137:21">if<condition pos:start="131:23" pos:end="131:47">(<expr pos:start="131:24" pos:end="131:46"><name pos:start="131:24" pos:end="131:34"><name pos:start="131:24" pos:end="131:24">s</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:31">types</name><index pos:start="131:32" pos:end="131:34">[<expr pos:start="131:33" pos:end="131:33"><name pos:start="131:33" pos:end="131:33">i</name></expr>]</index></name><operator pos:start="131:35" pos:end="131:36">==</operator><literal type="number" pos:start="131:37" pos:end="131:46">0xffffffff</literal></expr>)</condition> <block pos:start="131:49" pos:end="137:21">{<block_content pos:start="133:25" pos:end="135:79">

			<expr_stmt pos:start="133:25" pos:end="133:73"><expr pos:start="133:25" pos:end="133:72"><name pos:start="133:25" pos:end="133:38">last_in_offset</name> <operator pos:start="133:40" pos:end="133:40">=</operator> <name pos:start="133:42" pos:end="133:56"><name pos:start="133:42" pos:end="133:42">s</name><operator pos:start="133:43" pos:end="133:44">-&gt;</operator><name pos:start="133:45" pos:end="133:51">offsets</name><index pos:start="133:52" pos:end="133:56">[<expr pos:start="133:53" pos:end="133:55"><name pos:start="133:53" pos:end="133:53">i</name><operator pos:start="133:54" pos:end="133:54">-</operator><literal type="number" pos:start="133:55" pos:end="133:55">1</literal></expr>]</index></name><operator pos:start="133:57" pos:end="133:57">+</operator><name pos:start="133:58" pos:end="133:72"><name pos:start="133:58" pos:end="133:58">s</name><operator pos:start="133:59" pos:end="133:60">-&gt;</operator><name pos:start="133:61" pos:end="133:67">lengths</name><index pos:start="133:68" pos:end="133:72">[<expr pos:start="133:69" pos:end="133:71"><name pos:start="133:69" pos:end="133:69">i</name><operator pos:start="133:70" pos:end="133:70">-</operator><literal type="number" pos:start="133:71" pos:end="133:71">1</literal></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt pos:start="135:25" pos:end="135:79"><expr pos:start="135:25" pos:end="135:78"><name pos:start="135:25" pos:end="135:39">last_out_offset</name> <operator pos:start="135:41" pos:end="135:41">=</operator> <name pos:start="135:43" pos:end="135:57"><name pos:start="135:43" pos:end="135:43">s</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:52">sectors</name><index pos:start="135:53" pos:end="135:57">[<expr pos:start="135:54" pos:end="135:56"><name pos:start="135:54" pos:end="135:54">i</name><operator pos:start="135:55" pos:end="135:55">-</operator><literal type="number" pos:start="135:56" pos:end="135:56">1</literal></expr>]</index></name><operator pos:start="135:58" pos:end="135:58">+</operator><name pos:start="135:59" pos:end="135:78"><name pos:start="135:59" pos:end="135:59">s</name><operator pos:start="135:60" pos:end="135:61">-&gt;</operator><name pos:start="135:62" pos:end="135:73">sectorcounts</name><index pos:start="135:74" pos:end="135:78">[<expr pos:start="135:75" pos:end="135:77"><name pos:start="135:75" pos:end="135:75">i</name><operator pos:start="135:76" pos:end="135:76">-</operator><literal type="number" pos:start="135:77" pos:end="135:77">1</literal></expr>]</index></name></expr>;</expr_stmt>

		    </block_content>}</block></if></if_stmt>

		    <expr_stmt pos:start="139:21" pos:end="139:34"><expr pos:start="139:21" pos:end="139:33"><name pos:start="139:21" pos:end="139:31">chunk_count</name><operator pos:start="139:32" pos:end="139:33">--</operator></expr>;</expr_stmt>

		    <expr_stmt pos:start="141:21" pos:end="141:24"><expr pos:start="141:21" pos:end="141:23"><name pos:start="141:21" pos:end="141:21">i</name><operator pos:start="141:22" pos:end="141:23">--</operator></expr>;</expr_stmt>

		    <expr_stmt pos:start="143:21" pos:end="143:33"><expr pos:start="143:21" pos:end="143:32"><name pos:start="143:21" pos:end="143:26">offset</name> <operator pos:start="143:28" pos:end="143:29">+=</operator> <literal type="number" pos:start="143:31" pos:end="143:32">36</literal></expr>;</expr_stmt>

		    <continue pos:start="145:21" pos:end="145:29">continue;</continue>

		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="149:17" pos:end="149:28"><expr pos:start="149:17" pos:end="149:27"><name pos:start="149:17" pos:end="149:22">offset</name> <operator pos:start="149:24" pos:end="149:25">+=</operator> <literal type="number" pos:start="149:27" pos:end="149:27">4</literal></expr>;</expr_stmt>



		<expr_stmt pos:start="153:17" pos:end="153:69"><expr pos:start="153:17" pos:end="153:68"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:17">s</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:26">sectors</name><index pos:start="153:27" pos:end="153:29">[<expr pos:start="153:28" pos:end="153:28"><name pos:start="153:28" pos:end="153:28">i</name></expr>]</index></name> <operator pos:start="153:31" pos:end="153:31">=</operator> <name pos:start="153:33" pos:end="153:47">last_out_offset</name><operator pos:start="153:48" pos:end="153:48">+</operator><call pos:start="153:49" pos:end="153:68"><name pos:start="153:49" pos:end="153:56">read_off</name><argument_list pos:start="153:57" pos:end="153:68">(<argument pos:start="153:58" pos:end="153:59"><expr pos:start="153:58" pos:end="153:59"><name pos:start="153:58" pos:end="153:59">bs</name></expr></argument>, <argument pos:start="153:62" pos:end="153:67"><expr pos:start="153:62" pos:end="153:67"><name pos:start="153:62" pos:end="153:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="155:17" pos:end="155:28"><expr pos:start="155:17" pos:end="155:27"><name pos:start="155:17" pos:end="155:22">offset</name> <operator pos:start="155:24" pos:end="155:25">+=</operator> <literal type="number" pos:start="155:27" pos:end="155:27">8</literal></expr>;</expr_stmt>



		<expr_stmt pos:start="159:17" pos:end="159:58"><expr pos:start="159:17" pos:end="159:57"><name pos:start="159:17" pos:end="159:34"><name pos:start="159:17" pos:end="159:17">s</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:31">sectorcounts</name><index pos:start="159:32" pos:end="159:34">[<expr pos:start="159:33" pos:end="159:33"><name pos:start="159:33" pos:end="159:33">i</name></expr>]</index></name> <operator pos:start="159:36" pos:end="159:36">=</operator> <call pos:start="159:38" pos:end="159:57"><name pos:start="159:38" pos:end="159:45">read_off</name><argument_list pos:start="159:46" pos:end="159:57">(<argument pos:start="159:47" pos:end="159:48"><expr pos:start="159:47" pos:end="159:48"><name pos:start="159:47" pos:end="159:48">bs</name></expr></argument>, <argument pos:start="159:51" pos:end="159:56"><expr pos:start="159:51" pos:end="159:56"><name pos:start="159:51" pos:end="159:56">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="161:17" pos:end="161:28"><expr pos:start="161:17" pos:end="161:27"><name pos:start="161:17" pos:end="161:22">offset</name> <operator pos:start="161:24" pos:end="161:25">+=</operator> <literal type="number" pos:start="161:27" pos:end="161:27">8</literal></expr>;</expr_stmt>



		<expr_stmt pos:start="165:17" pos:end="165:68"><expr pos:start="165:17" pos:end="165:67"><name pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:17">s</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:26">offsets</name><index pos:start="165:27" pos:end="165:29">[<expr pos:start="165:28" pos:end="165:28"><name pos:start="165:28" pos:end="165:28">i</name></expr>]</index></name> <operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:46">last_in_offset</name><operator pos:start="165:47" pos:end="165:47">+</operator><call pos:start="165:48" pos:end="165:67"><name pos:start="165:48" pos:end="165:55">read_off</name><argument_list pos:start="165:56" pos:end="165:67">(<argument pos:start="165:57" pos:end="165:58"><expr pos:start="165:57" pos:end="165:58"><name pos:start="165:57" pos:end="165:58">bs</name></expr></argument>, <argument pos:start="165:61" pos:end="165:66"><expr pos:start="165:61" pos:end="165:66"><name pos:start="165:61" pos:end="165:66">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="167:17" pos:end="167:28"><expr pos:start="167:17" pos:end="167:27"><name pos:start="167:17" pos:end="167:22">offset</name> <operator pos:start="167:24" pos:end="167:25">+=</operator> <literal type="number" pos:start="167:27" pos:end="167:27">8</literal></expr>;</expr_stmt>



		<expr_stmt pos:start="171:17" pos:end="171:53"><expr pos:start="171:17" pos:end="171:52"><name pos:start="171:17" pos:end="171:29"><name pos:start="171:17" pos:end="171:17">s</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:26">lengths</name><index pos:start="171:27" pos:end="171:29">[<expr pos:start="171:28" pos:end="171:28"><name pos:start="171:28" pos:end="171:28">i</name></expr>]</index></name> <operator pos:start="171:31" pos:end="171:31">=</operator> <call pos:start="171:33" pos:end="171:52"><name pos:start="171:33" pos:end="171:40">read_off</name><argument_list pos:start="171:41" pos:end="171:52">(<argument pos:start="171:42" pos:end="171:43"><expr pos:start="171:42" pos:end="171:43"><name pos:start="171:42" pos:end="171:43">bs</name></expr></argument>, <argument pos:start="171:46" pos:end="171:51"><expr pos:start="171:46" pos:end="171:51"><name pos:start="171:46" pos:end="171:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="173:17" pos:end="173:28"><expr pos:start="173:17" pos:end="173:27"><name pos:start="173:17" pos:end="173:22">offset</name> <operator pos:start="173:24" pos:end="173:25">+=</operator> <literal type="number" pos:start="173:27" pos:end="173:27">8</literal></expr>;</expr_stmt>



		<if_stmt pos:start="177:17" pos:end="179:56"><if pos:start="177:17" pos:end="179:56">if<condition pos:start="177:19" pos:end="177:53">(<expr pos:start="177:20" pos:end="177:52"><name pos:start="177:20" pos:end="177:32"><name pos:start="177:20" pos:end="177:20">s</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:29">lengths</name><index pos:start="177:30" pos:end="177:32">[<expr pos:start="177:31" pos:end="177:31"><name pos:start="177:31" pos:end="177:31">i</name></expr>]</index></name><operator pos:start="177:33" pos:end="177:33">&gt;</operator><name pos:start="177:34" pos:end="177:52">max_compressed_size</name></expr>)</condition><block type="pseudo" pos:start="179:21" pos:end="179:56"><block_content pos:start="179:21" pos:end="179:56">

		    <expr_stmt pos:start="179:21" pos:end="179:56"><expr pos:start="179:21" pos:end="179:55"><name pos:start="179:21" pos:end="179:39">max_compressed_size</name> <operator pos:start="179:41" pos:end="179:41">=</operator> <name pos:start="179:43" pos:end="179:55"><name pos:start="179:43" pos:end="179:43">s</name><operator pos:start="179:44" pos:end="179:45">-&gt;</operator><name pos:start="179:46" pos:end="179:52">lengths</name><index pos:start="179:53" pos:end="179:55">[<expr pos:start="179:54" pos:end="179:54"><name pos:start="179:54" pos:end="179:54">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<if_stmt pos:start="181:17" pos:end="183:63"><if pos:start="181:17" pos:end="183:63">if<condition pos:start="181:19" pos:end="181:60">(<expr pos:start="181:20" pos:end="181:59"><name pos:start="181:20" pos:end="181:37"><name pos:start="181:20" pos:end="181:20">s</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:34">sectorcounts</name><index pos:start="181:35" pos:end="181:37">[<expr pos:start="181:36" pos:end="181:36"><name pos:start="181:36" pos:end="181:36">i</name></expr>]</index></name><operator pos:start="181:38" pos:end="181:38">&gt;</operator><name pos:start="181:39" pos:end="181:59">max_sectors_per_chunk</name></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:63"><block_content pos:start="183:21" pos:end="183:63">

		    <expr_stmt pos:start="183:21" pos:end="183:63"><expr pos:start="183:21" pos:end="183:62"><name pos:start="183:21" pos:end="183:41">max_sectors_per_chunk</name> <operator pos:start="183:43" pos:end="183:43">=</operator> <name pos:start="183:45" pos:end="183:62"><name pos:start="183:45" pos:end="183:45">s</name><operator pos:start="183:46" pos:end="183:47">-&gt;</operator><name pos:start="183:48" pos:end="183:59">sectorcounts</name><index pos:start="183:60" pos:end="183:62">[<expr pos:start="183:61" pos:end="183:61"><name pos:start="183:61" pos:end="183:61">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    </block_content>}</block></for>

	    <expr_stmt pos:start="187:13" pos:end="187:37"><expr pos:start="187:13" pos:end="187:36"><name pos:start="187:13" pos:end="187:23"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:23">n_chunks</name></name><operator pos:start="187:24" pos:end="187:25">+=</operator><name pos:start="187:26" pos:end="187:36">chunk_count</name></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="195:5" pos:end="195:32">/* initialize zlib engine */</comment>

    <expr_stmt pos:start="197:5" pos:end="197:58"><expr pos:start="197:5" pos:end="197:57"><name pos:start="197:5" pos:end="197:23"><name pos:start="197:5" pos:end="197:5">s</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:23">compressed_chunk</name></name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:57"><name pos:start="197:27" pos:end="197:34">g_malloc</name><argument_list pos:start="197:35" pos:end="197:57">(<argument pos:start="197:36" pos:end="197:56"><expr pos:start="197:36" pos:end="197:56"><name pos:start="197:36" pos:end="197:54">max_compressed_size</name><operator pos:start="197:55" pos:end="197:55">+</operator><literal type="number" pos:start="197:56" pos:end="197:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:64"><expr pos:start="199:5" pos:end="199:63"><name pos:start="199:5" pos:end="199:25"><name pos:start="199:5" pos:end="199:5">s</name><operator pos:start="199:6" pos:end="199:7">-&gt;</operator><name pos:start="199:8" pos:end="199:25">uncompressed_chunk</name></name> <operator pos:start="199:27" pos:end="199:27">=</operator> <call pos:start="199:29" pos:end="199:63"><name pos:start="199:29" pos:end="199:36">g_malloc</name><argument_list pos:start="199:37" pos:end="199:63">(<argument pos:start="199:38" pos:end="199:62"><expr pos:start="199:38" pos:end="199:62"><literal type="number" pos:start="199:38" pos:end="199:40">512</literal><operator pos:start="199:41" pos:end="199:41">*</operator><name pos:start="199:42" pos:end="199:62">max_sectors_per_chunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="201:5" pos:end="203:18"><if pos:start="201:5" pos:end="203:18">if<condition pos:start="201:7" pos:end="201:40">(<expr pos:start="201:8" pos:end="201:39"><call pos:start="201:8" pos:end="201:31"><name pos:start="201:8" pos:end="201:18">inflateInit</name><argument_list pos:start="201:19" pos:end="201:31">(<argument pos:start="201:20" pos:end="201:30"><expr pos:start="201:20" pos:end="201:30"><operator pos:start="201:20" pos:end="201:20">&amp;</operator><name pos:start="201:21" pos:end="201:30"><name pos:start="201:21" pos:end="201:21">s</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:30">zstream</name></name></expr></argument>)</argument_list></call> <operator pos:start="201:33" pos:end="201:34">!=</operator> <name pos:start="201:36" pos:end="201:39">Z_OK</name></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="203:18"><block_content pos:start="203:9" pos:end="203:18">

	<goto pos:start="203:9" pos:end="203:18">goto <name pos:start="203:14" pos:end="203:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:35"><expr pos:start="207:5" pos:end="207:34"><name pos:start="207:5" pos:end="207:20"><name pos:start="207:5" pos:end="207:5">s</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:20">current_chunk</name></name> <operator pos:start="207:22" pos:end="207:22">=</operator> <name pos:start="207:24" pos:end="207:34"><name pos:start="207:24" pos:end="207:24">s</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:34">n_chunks</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:33"><expr pos:start="211:5" pos:end="211:32"><call pos:start="211:5" pos:end="211:32"><name pos:start="211:5" pos:end="211:22">qemu_co_mutex_init</name><argument_list pos:start="211:23" pos:end="211:32">(<argument pos:start="211:24" pos:end="211:31"><expr pos:start="211:24" pos:end="211:31"><operator pos:start="211:24" pos:end="211:24">&amp;</operator><name pos:start="211:25" pos:end="211:31"><name pos:start="211:25" pos:end="211:25">s</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><literal type="number" pos:start="213:12" pos:end="213:12">0</literal></expr>;</return>

<label pos:start="215:1" pos:end="215:5"><name pos:start="215:1" pos:end="215:4">fail</name>:</label>

    <return pos:start="217:5" pos:end="217:14">return <expr pos:start="217:12" pos:end="217:13"><operator pos:start="217:12" pos:end="217:12">-</operator><literal type="number" pos:start="217:13" pos:end="217:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
