<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27307.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">dec_load</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:25">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:10">t</name></decl>, <decl pos:start="5:13" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:8"><modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:8">size</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <literal type="number" pos:start="11:12" pos:end="11:12">1</literal> <operator pos:start="11:14" pos:end="11:15">&lt;&lt;</operator> <operator pos:start="11:17" pos:end="11:17">(</operator><name pos:start="11:18" pos:end="11:27"><name pos:start="11:18" pos:end="11:19">dc</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:27">opcode</name></name> <operator pos:start="11:29" pos:end="11:29">&amp;</operator> <literal type="number" pos:start="11:31" pos:end="11:31">3</literal><operator pos:start="11:32" pos:end="11:32">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><call pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:11">LOG_DIS</name><argument_list pos:start="15:12" pos:end="15:42">(<argument pos:start="15:13" pos:end="15:23"><expr pos:start="15:13" pos:end="15:23"><literal type="string" pos:start="15:13" pos:end="15:23">"l %x %d\n"</literal></expr></argument>, <argument pos:start="15:26" pos:end="15:35"><expr pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:27">dc</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:35">opcode</name></name></expr></argument>, <argument pos:start="15:38" pos:end="15:41"><expr pos:start="15:38" pos:end="15:41"><name pos:start="15:38" pos:end="15:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:16">t_sync_flags</name><argument_list pos:start="17:17" pos:end="17:20">(<argument pos:start="17:18" pos:end="17:19"><expr pos:start="17:18" pos:end="17:19"><name pos:start="17:18" pos:end="17:19">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:8">addr</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:36"><name pos:start="19:12" pos:end="19:28">compute_ldst_addr</name><argument_list pos:start="19:29" pos:end="19:36">(<argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><name pos:start="19:30" pos:end="19:31">dc</name></expr></argument>, <argument pos:start="19:34" pos:end="19:35"><expr pos:start="19:34" pos:end="19:35"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:35">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:72">/* If we get a fault on a dslot, the jmpstate better be in sync.  */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><call pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:17">sync_jmpstate</name><argument_list pos:start="25:18" pos:end="25:21">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:38">/* Verify alignment if needed.  */</comment>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:69">(<expr pos:start="31:9" pos:end="31:68"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:29"><name pos:start="31:10" pos:end="31:11">dc</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:16">env</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:21">pvr</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:26">regs</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">2</literal></expr>]</index></name> <operator pos:start="31:31" pos:end="31:31">&amp;</operator> <name pos:start="31:33" pos:end="31:55">PVR2_UNALIGNED_EXC_MASK</name><operator pos:start="31:56" pos:end="31:56">)</operator> <operator pos:start="31:58" pos:end="31:59">&amp;&amp;</operator> <name pos:start="31:61" pos:end="31:64">size</name> <operator pos:start="31:66" pos:end="31:66">&gt;</operator> <literal type="number" pos:start="31:68" pos:end="31:68">1</literal></expr>)</condition> <block pos:start="31:71" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:65">

        <expr_stmt pos:start="33:9" pos:end="35:65"><expr pos:start="33:9" pos:end="35:64"><call pos:start="33:9" pos:end="35:64"><name pos:start="33:9" pos:end="33:27">gen_helper_memalign</name><argument_list pos:start="33:28" pos:end="35:64">(<argument pos:start="33:29" pos:end="33:33"><expr pos:start="33:29" pos:end="33:33"><operator pos:start="33:29" pos:end="33:29">*</operator><name pos:start="33:30" pos:end="33:33">addr</name></expr></argument>, <argument pos:start="33:36" pos:end="33:55"><expr pos:start="33:36" pos:end="33:55"><call pos:start="33:36" pos:end="33:55"><name pos:start="33:36" pos:end="33:47">tcg_const_tl</name><argument_list pos:start="33:48" pos:end="33:55">(<argument pos:start="33:49" pos:end="33:54"><expr pos:start="33:49" pos:end="33:54"><name pos:start="33:49" pos:end="33:54"><name pos:start="33:49" pos:end="33:50">dc</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:54">rd</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="35:29" pos:end="35:43"><expr pos:start="35:29" pos:end="35:43"><call pos:start="35:29" pos:end="35:43"><name pos:start="35:29" pos:end="35:40">tcg_const_tl</name><argument_list pos:start="35:41" pos:end="35:43">(<argument pos:start="35:42" pos:end="35:42"><expr pos:start="35:42" pos:end="35:42"><literal type="number" pos:start="35:42" pos:end="35:42">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:46" pos:end="35:63"><expr pos:start="35:46" pos:end="35:63"><call pos:start="35:46" pos:end="35:63"><name pos:start="35:46" pos:end="35:57">tcg_const_tl</name><argument_list pos:start="35:58" pos:end="35:63">(<argument pos:start="35:59" pos:end="35:62"><expr pos:start="35:59" pos:end="35:62"><name pos:start="35:59" pos:end="35:62">size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:10">dc</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:14">rd</name></name></expr>)</condition> <block pos:start="41:17" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:49">

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><call pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:16">gen_load</name><argument_list pos:start="43:17" pos:end="43:48">(<argument pos:start="43:18" pos:end="43:19"><expr pos:start="43:18" pos:end="43:19"><name pos:start="43:18" pos:end="43:19">dc</name></expr></argument>, <argument pos:start="43:22" pos:end="43:34"><expr pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:26">cpu_R</name><index pos:start="43:27" pos:end="43:34">[<expr pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:29">dc</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:33">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="43:37" pos:end="43:41"><expr pos:start="43:37" pos:end="43:41"><operator pos:start="43:37" pos:end="43:37">*</operator><name pos:start="43:38" pos:end="43:41">addr</name></expr></argument>, <argument pos:start="43:44" pos:end="43:47"><expr pos:start="43:44" pos:end="43:47"><name pos:start="43:44" pos:end="43:47">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:43">

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><call pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:16">gen_load</name><argument_list pos:start="47:17" pos:end="47:42">(<argument pos:start="47:18" pos:end="47:19"><expr pos:start="47:18" pos:end="47:19"><name pos:start="47:18" pos:end="47:19">dc</name></expr></argument>, <argument pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:28"><name pos:start="47:22" pos:end="47:28">env_imm</name></expr></argument>, <argument pos:start="47:31" pos:end="47:35"><expr pos:start="47:31" pos:end="47:35"><operator pos:start="47:31" pos:end="47:31">*</operator><name pos:start="47:32" pos:end="47:35">addr</name></expr></argument>, <argument pos:start="47:38" pos:end="47:41"><expr pos:start="47:38" pos:end="47:41"><name pos:start="47:38" pos:end="47:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="53:5" pos:end="55:25"><if pos:start="53:5" pos:end="55:25">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:12">addr</name> <operator pos:start="53:14" pos:end="53:15">==</operator> <operator pos:start="53:17" pos:end="53:17">&amp;</operator><name pos:start="53:18" pos:end="53:18">t</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:25"><block_content pos:start="55:9" pos:end="55:25">

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><call pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:21">tcg_temp_free</name><argument_list pos:start="55:22" pos:end="55:24">(<argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
