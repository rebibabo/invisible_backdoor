<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27253.c" pos:tabs="8"><function pos:start="1:1" pos:end="377:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">bdrv_open</name><parameter_list pos:start="1:14" pos:end="3:56">(<parameter pos:start="1:15" pos:end="1:34"><decl pos:start="1:15" pos:end="1:34"><type pos:start="1:15" pos:end="1:34"><name pos:start="1:15" pos:end="1:30">BlockDriverState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">bs</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">filename</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:63">QDict</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:72">options</name></decl></parameter>,

              <parameter pos:start="3:15" pos:end="3:23"><decl pos:start="3:15" pos:end="3:23"><type pos:start="3:15" pos:end="3:23"><name pos:start="3:15" pos:end="3:17">int</name></type> <name pos:start="3:19" pos:end="3:23">flags</name></decl></parameter>, <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:36">BlockDriver</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">drv</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:55"><decl pos:start="3:44" pos:end="3:55"><type pos:start="3:44" pos:end="3:55"><name pos:start="3:44" pos:end="3:48">Error</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier><modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="377:1">{<block_content pos:start="7:5" pos:end="375:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:73">/* TODO: extra byte is a hack to ensure MAX_PATH space on Windows. */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:21">tmp_filename</name><index pos:start="11:22" pos:end="11:35">[<expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:30">PATH_MAX</name> <operator pos:start="11:32" pos:end="11:32">+</operator> <literal type="number" pos:start="11:34" pos:end="11:34">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">BlockDriverState</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:26">file</name> <init pos:start="13:28" pos:end="13:33">= <expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">QDict</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:23">file_options</name> <init pos:start="15:25" pos:end="15:30">= <expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:23">drvname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:20">local_err</name> <init pos:start="19:22" pos:end="19:27">= <expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:44">/* NULL means an empty set of options */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:15">options</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <name pos:start="25:20" pos:end="25:23">NULL</name></expr>)</condition> <block pos:start="25:26" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:15">options</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:29"><name pos:start="27:19" pos:end="27:27">qdict_new</name><argument_list pos:start="27:28" pos:end="27:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:6">bs</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:15">options</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:25">options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:11">options</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:42"><name pos:start="35:15" pos:end="35:33">qdict_clone_shallow</name><argument_list pos:start="35:34" pos:end="35:42">(<argument pos:start="35:35" pos:end="35:41"><expr pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:41">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:59">/* For snapshot=on, create a temporary qcow2 overlay */</comment>

    <if_stmt pos:start="41:5" pos:end="181:5"><if pos:start="41:5" pos:end="181:5">if <condition pos:start="41:8" pos:end="41:32">(<expr pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:13">flags</name> <operator pos:start="41:15" pos:end="41:15">&amp;</operator> <name pos:start="41:17" pos:end="41:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="41:34" pos:end="181:5">{<block_content pos:start="43:9" pos:end="179:29">

        <decl_stmt pos:start="43:9" pos:end="43:30"><decl pos:start="43:9" pos:end="43:29"><type pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:24">BlockDriverState</name> <modifier pos:start="43:26" pos:end="43:26">*</modifier></type><name pos:start="43:27" pos:end="43:29">bs1</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:27"><decl pos:start="45:9" pos:end="45:26"><type pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:15">int64_t</name></type> <name pos:start="45:17" pos:end="45:26">total_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:32"><decl pos:start="47:9" pos:end="47:31"><type pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:19">BlockDriver</name> <modifier pos:start="47:21" pos:end="47:21">*</modifier></type><name pos:start="47:22" pos:end="47:31">bdrv_qcow2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:44"><decl pos:start="49:9" pos:end="49:43"><type pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:27">QEMUOptionParameter</name> <modifier pos:start="49:29" pos:end="49:29">*</modifier></type><name pos:start="49:30" pos:end="49:43">create_options</name></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:40"><decl pos:start="51:9" pos:end="51:39"><type pos:start="51:9" pos:end="51:12"><name pos:start="51:9" pos:end="51:12">char</name></type> <name pos:start="51:14" pos:end="51:39"><name pos:start="51:14" pos:end="51:29">backing_filename</name><index pos:start="51:30" pos:end="51:39">[<expr pos:start="51:31" pos:end="51:38"><name pos:start="51:31" pos:end="51:38">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:37">(<expr pos:start="55:13" pos:end="55:36"><call pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:22">qdict_size</name><argument_list pos:start="55:23" pos:end="55:31">(<argument pos:start="55:24" pos:end="55:30"><expr pos:start="55:24" pos:end="55:30"><name pos:start="55:24" pos:end="55:30">options</name></expr></argument>)</argument_list></call> <operator pos:start="55:33" pos:end="55:34">!=</operator> <literal type="number" pos:start="55:36" pos:end="55:36">0</literal></expr>)</condition> <block pos:start="55:39" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:22">

            <expr_stmt pos:start="57:13" pos:end="57:83"><expr pos:start="57:13" pos:end="57:82"><call pos:start="57:13" pos:end="57:82"><name pos:start="57:13" pos:end="57:22">error_setg</name><argument_list pos:start="57:23" pos:end="57:82">(<argument pos:start="57:24" pos:end="57:27"><expr pos:start="57:24" pos:end="57:27"><name pos:start="57:24" pos:end="57:27">errp</name></expr></argument>, <argument pos:start="57:30" pos:end="57:81"><expr pos:start="57:30" pos:end="57:81"><literal type="string" pos:start="57:30" pos:end="57:81">"Can't use snapshot=on with driver-specific options"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:26"><expr pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <operator pos:start="59:19" pos:end="59:19">-</operator><name pos:start="59:20" pos:end="59:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="61:13" pos:end="61:22">goto <name pos:start="61:18" pos:end="61:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:33"><expr pos:start="65:9" pos:end="65:32"><call pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:14">assert</name><argument_list pos:start="65:15" pos:end="65:32">(<argument pos:start="65:16" pos:end="65:31"><expr pos:start="65:16" pos:end="65:31"><name pos:start="65:16" pos:end="65:23">filename</name> <operator pos:start="65:25" pos:end="65:26">!=</operator> <name pos:start="65:28" pos:end="65:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="69:9" pos:end="71:52">/* if snapshot, we create a temporary backing file and open it

           instead of opening 'filename' directly */</comment>



        <comment type="block" pos:start="75:9" pos:end="75:48">/* if there is a backing file, use it */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:27"><expr pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:11">bs1</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:26"><name pos:start="77:15" pos:end="77:22">bdrv_new</name><argument_list pos:start="77:23" pos:end="77:26">(<argument pos:start="77:24" pos:end="77:25"><expr pos:start="77:24" pos:end="77:25"><literal type="string" pos:start="77:24" pos:end="77:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:65"><expr pos:start="79:9" pos:end="79:64"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:64"><name pos:start="79:15" pos:end="79:23">bdrv_open</name><argument_list pos:start="79:24" pos:end="79:64">(<argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><name pos:start="79:25" pos:end="79:27">bs1</name></expr></argument>, <argument pos:start="79:30" pos:end="79:37"><expr pos:start="79:30" pos:end="79:37"><name pos:start="79:30" pos:end="79:37">filename</name></expr></argument>, <argument pos:start="79:40" pos:end="79:43"><expr pos:start="79:40" pos:end="79:43"><name pos:start="79:40" pos:end="79:43">NULL</name></expr></argument>, <argument pos:start="79:46" pos:end="79:46"><expr pos:start="79:46" pos:end="79:46"><literal type="number" pos:start="79:46" pos:end="79:46">0</literal></expr></argument>, <argument pos:start="79:49" pos:end="79:51"><expr pos:start="79:49" pos:end="79:51"><name pos:start="79:49" pos:end="79:51">drv</name></expr></argument>, <argument pos:start="79:54" pos:end="79:63"><expr pos:start="79:54" pos:end="79:63"><operator pos:start="79:54" pos:end="79:54">&amp;</operator><name pos:start="79:55" pos:end="79:63">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:20">(<expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:17">&lt;</operator> <literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr>)</condition> <block pos:start="81:22" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:22">

            <expr_stmt pos:start="83:13" pos:end="83:28"><expr pos:start="83:13" pos:end="83:27"><call pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:22">bdrv_unref</name><argument_list pos:start="83:23" pos:end="83:27">(<argument pos:start="83:24" pos:end="83:26"><expr pos:start="83:24" pos:end="83:26"><name pos:start="83:24" pos:end="83:26">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="85:13" pos:end="85:22">goto <name pos:start="85:18" pos:end="85:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:60"><expr pos:start="89:9" pos:end="89:59"><name pos:start="89:9" pos:end="89:18">total_size</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="89:40"><name pos:start="89:22" pos:end="89:35">bdrv_getlength</name><argument_list pos:start="89:36" pos:end="89:40">(<argument pos:start="89:37" pos:end="89:39"><expr pos:start="89:37" pos:end="89:39"><name pos:start="89:37" pos:end="89:39">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="89:42" pos:end="89:42">&amp;</operator> <name pos:start="89:44" pos:end="89:59">BDRV_SECTOR_MASK</name></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:24"><expr pos:start="93:9" pos:end="93:23"><call pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:18">bdrv_unref</name><argument_list pos:start="93:19" pos:end="93:23">(<argument pos:start="93:20" pos:end="93:22"><expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:67"><expr pos:start="97:9" pos:end="97:66"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="97:66"><name pos:start="97:15" pos:end="97:30">get_tmp_filename</name><argument_list pos:start="97:31" pos:end="97:66">(<argument pos:start="97:32" pos:end="97:43"><expr pos:start="97:32" pos:end="97:43"><name pos:start="97:32" pos:end="97:43">tmp_filename</name></expr></argument>, <argument pos:start="97:46" pos:end="97:65"><expr pos:start="97:46" pos:end="97:65"><sizeof pos:start="97:46" pos:end="97:65">sizeof<argument_list pos:start="97:52" pos:end="97:65">(<argument pos:start="97:53" pos:end="97:64"><expr pos:start="97:53" pos:end="97:64"><name pos:start="97:53" pos:end="97:64">tmp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">&lt;</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition> <block pos:start="99:22" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:22">

            <expr_stmt pos:start="101:13" pos:end="101:77"><expr pos:start="101:13" pos:end="101:76"><call pos:start="101:13" pos:end="101:76"><name pos:start="101:13" pos:end="101:28">error_setg_errno</name><argument_list pos:start="101:29" pos:end="101:76">(<argument pos:start="101:30" pos:end="101:33"><expr pos:start="101:30" pos:end="101:33"><name pos:start="101:30" pos:end="101:33">errp</name></expr></argument>, <argument pos:start="101:36" pos:end="101:39"><expr pos:start="101:36" pos:end="101:39"><operator pos:start="101:36" pos:end="101:36">-</operator><name pos:start="101:37" pos:end="101:39">ret</name></expr></argument>, <argument pos:start="101:42" pos:end="101:75"><expr pos:start="101:42" pos:end="101:75"><literal type="string" pos:start="101:42" pos:end="101:75">"Could not get temporary filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="103:13" pos:end="103:22">goto <name pos:start="103:18" pos:end="103:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="109:9" pos:end="109:52">/* Real path is meaningless for protocols */</comment>

        <if_stmt pos:start="111:9" pos:end="125:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:40">(<expr pos:start="111:13" pos:end="111:39"><call pos:start="111:13" pos:end="111:39"><name pos:start="111:13" pos:end="111:29">path_has_protocol</name><argument_list pos:start="111:30" pos:end="111:39">(<argument pos:start="111:31" pos:end="111:38"><expr pos:start="111:31" pos:end="111:38"><name pos:start="111:31" pos:end="111:38">filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:42" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:37">

            <expr_stmt pos:start="113:13" pos:end="115:37"><expr pos:start="113:13" pos:end="115:36"><call pos:start="113:13" pos:end="115:36"><name pos:start="113:13" pos:end="113:20">snprintf</name><argument_list pos:start="113:21" pos:end="115:36">(<argument pos:start="113:22" pos:end="113:37"><expr pos:start="113:22" pos:end="113:37"><name pos:start="113:22" pos:end="113:37">backing_filename</name></expr></argument>, <argument pos:start="113:40" pos:end="113:63"><expr pos:start="113:40" pos:end="113:63"><sizeof pos:start="113:40" pos:end="113:63">sizeof<argument_list pos:start="113:46" pos:end="113:63">(<argument pos:start="113:47" pos:end="113:62"><expr pos:start="113:47" pos:end="113:62"><name pos:start="113:47" pos:end="113:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="115:22" pos:end="115:25"><expr pos:start="115:22" pos:end="115:25"><literal type="string" pos:start="115:22" pos:end="115:25">"%s"</literal></expr></argument>, <argument pos:start="115:28" pos:end="115:35"><expr pos:start="115:28" pos:end="115:35"><name pos:start="115:28" pos:end="115:35">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="125:9">else if <condition pos:start="117:19" pos:end="117:57">(<expr pos:start="117:20" pos:end="117:56"><operator pos:start="117:20" pos:end="117:20">!</operator><call pos:start="117:21" pos:end="117:56"><name pos:start="117:21" pos:end="117:28">realpath</name><argument_list pos:start="117:29" pos:end="117:56">(<argument pos:start="117:30" pos:end="117:37"><expr pos:start="117:30" pos:end="117:37"><name pos:start="117:30" pos:end="117:37">filename</name></expr></argument>, <argument pos:start="117:40" pos:end="117:55"><expr pos:start="117:40" pos:end="117:55"><name pos:start="117:40" pos:end="117:55">backing_filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:59" pos:end="125:9">{<block_content pos:start="119:13" pos:end="123:22">

            <expr_stmt pos:start="119:13" pos:end="119:25"><expr pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:15">ret</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <operator pos:start="119:19" pos:end="119:19">-</operator><name pos:start="119:20" pos:end="119:24">errno</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:83"><expr pos:start="121:13" pos:end="121:82"><call pos:start="121:13" pos:end="121:82"><name pos:start="121:13" pos:end="121:28">error_setg_errno</name><argument_list pos:start="121:29" pos:end="121:82">(<argument pos:start="121:30" pos:end="121:33"><expr pos:start="121:30" pos:end="121:33"><name pos:start="121:30" pos:end="121:33">errp</name></expr></argument>, <argument pos:start="121:36" pos:end="121:40"><expr pos:start="121:36" pos:end="121:40"><name pos:start="121:36" pos:end="121:40">errno</name></expr></argument>, <argument pos:start="121:43" pos:end="121:71"><expr pos:start="121:43" pos:end="121:71"><literal type="string" pos:start="121:43" pos:end="121:71">"Could not resolve path '%s'"</literal></expr></argument>, <argument pos:start="121:74" pos:end="121:81"><expr pos:start="121:74" pos:end="121:81"><name pos:start="121:74" pos:end="121:81">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="123:13" pos:end="123:22">goto <name pos:start="123:18" pos:end="123:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:47"><expr pos:start="129:9" pos:end="129:46"><name pos:start="129:9" pos:end="129:18">bdrv_qcow2</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <call pos:start="129:22" pos:end="129:46"><name pos:start="129:22" pos:end="129:37">bdrv_find_format</name><argument_list pos:start="129:38" pos:end="129:46">(<argument pos:start="129:39" pos:end="129:45"><expr pos:start="129:39" pos:end="129:45"><literal type="string" pos:start="129:39" pos:end="129:45">"qcow2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="133:55"><expr pos:start="131:9" pos:end="133:54"><name pos:start="131:9" pos:end="131:22">create_options</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <call pos:start="131:26" pos:end="133:54"><name pos:start="131:26" pos:end="131:48">parse_option_parameters</name><argument_list pos:start="131:49" pos:end="133:54">(<argument pos:start="131:50" pos:end="131:51"><expr pos:start="131:50" pos:end="131:51"><literal type="string" pos:start="131:50" pos:end="131:51">""</literal></expr></argument>, <argument pos:start="131:54" pos:end="131:79"><expr pos:start="131:54" pos:end="131:79"><name pos:start="131:54" pos:end="131:79"><name pos:start="131:54" pos:end="131:63">bdrv_qcow2</name><operator pos:start="131:64" pos:end="131:65">-&gt;</operator><name pos:start="131:66" pos:end="131:79">create_options</name></name></expr></argument>,

                                                 <argument pos:start="133:50" pos:end="133:53"><expr pos:start="133:50" pos:end="133:53"><name pos:start="133:50" pos:end="133:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:77"><expr pos:start="137:9" pos:end="137:76"><call pos:start="137:9" pos:end="137:76"><name pos:start="137:9" pos:end="137:32">set_option_parameter_int</name><argument_list pos:start="137:33" pos:end="137:76">(<argument pos:start="137:34" pos:end="137:47"><expr pos:start="137:34" pos:end="137:47"><name pos:start="137:34" pos:end="137:47">create_options</name></expr></argument>, <argument pos:start="137:50" pos:end="137:63"><expr pos:start="137:50" pos:end="137:63"><name pos:start="137:50" pos:end="137:63">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="137:66" pos:end="137:75"><expr pos:start="137:66" pos:end="137:75"><name pos:start="137:66" pos:end="137:75">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="141:47"><expr pos:start="139:9" pos:end="141:46"><call pos:start="139:9" pos:end="141:46"><name pos:start="139:9" pos:end="139:28">set_option_parameter</name><argument_list pos:start="139:29" pos:end="141:46">(<argument pos:start="139:30" pos:end="139:43"><expr pos:start="139:30" pos:end="139:43"><name pos:start="139:30" pos:end="139:43">create_options</name></expr></argument>, <argument pos:start="139:46" pos:end="139:67"><expr pos:start="139:46" pos:end="139:67"><name pos:start="139:46" pos:end="139:67">BLOCK_OPT_BACKING_FILE</name></expr></argument>,

                             <argument pos:start="141:30" pos:end="141:45"><expr pos:start="141:30" pos:end="141:45"><name pos:start="141:30" pos:end="141:45">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="149:9"><if pos:start="143:9" pos:end="149:9">if <condition pos:start="143:12" pos:end="143:16">(<expr pos:start="143:13" pos:end="143:15"><name pos:start="143:13" pos:end="143:15">drv</name></expr>)</condition> <block pos:start="143:18" pos:end="149:9">{<block_content pos:start="145:13" pos:end="147:34">

            <expr_stmt pos:start="145:13" pos:end="147:34"><expr pos:start="145:13" pos:end="147:33"><call pos:start="145:13" pos:end="147:33"><name pos:start="145:13" pos:end="145:32">set_option_parameter</name><argument_list pos:start="145:33" pos:end="147:33">(<argument pos:start="145:34" pos:end="145:47"><expr pos:start="145:34" pos:end="145:47"><name pos:start="145:34" pos:end="145:47">create_options</name></expr></argument>, <argument pos:start="145:50" pos:end="145:70"><expr pos:start="145:50" pos:end="145:70"><name pos:start="145:50" pos:end="145:70">BLOCK_OPT_BACKING_FMT</name></expr></argument>,

                <argument pos:start="147:17" pos:end="147:32"><expr pos:start="147:17" pos:end="147:32"><name pos:start="147:17" pos:end="147:32"><name pos:start="147:17" pos:end="147:19">drv</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:32">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:80"><expr pos:start="153:9" pos:end="153:79"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">=</operator> <call pos:start="153:15" pos:end="153:79"><name pos:start="153:15" pos:end="153:25">bdrv_create</name><argument_list pos:start="153:26" pos:end="153:79">(<argument pos:start="153:27" pos:end="153:36"><expr pos:start="153:27" pos:end="153:36"><name pos:start="153:27" pos:end="153:36">bdrv_qcow2</name></expr></argument>, <argument pos:start="153:39" pos:end="153:50"><expr pos:start="153:39" pos:end="153:50"><name pos:start="153:39" pos:end="153:50">tmp_filename</name></expr></argument>, <argument pos:start="153:53" pos:end="153:66"><expr pos:start="153:53" pos:end="153:66"><name pos:start="153:53" pos:end="153:66">create_options</name></expr></argument>, <argument pos:start="153:69" pos:end="153:78"><expr pos:start="153:69" pos:end="153:78"><operator pos:start="153:69" pos:end="153:69">&amp;</operator><name pos:start="153:70" pos:end="153:78">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:47"><expr pos:start="155:9" pos:end="155:46"><call pos:start="155:9" pos:end="155:46"><name pos:start="155:9" pos:end="155:30">free_option_parameters</name><argument_list pos:start="155:31" pos:end="155:46">(<argument pos:start="155:32" pos:end="155:45"><expr pos:start="155:32" pos:end="155:45"><name pos:start="155:32" pos:end="155:45">create_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="171:9"><if pos:start="157:9" pos:end="171:9">if <condition pos:start="157:12" pos:end="157:20">(<expr pos:start="157:13" pos:end="157:19"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">&lt;</operator> <literal type="number" pos:start="157:19" pos:end="157:19">0</literal></expr>)</condition> <block pos:start="157:22" pos:end="171:9">{<block_content pos:start="159:13" pos:end="169:22">

            <expr_stmt pos:start="159:13" pos:end="163:58"><expr pos:start="159:13" pos:end="163:57"><call pos:start="159:13" pos:end="163:57"><name pos:start="159:13" pos:end="159:28">error_setg_errno</name><argument_list pos:start="159:29" pos:end="163:57">(<argument pos:start="159:30" pos:end="159:33"><expr pos:start="159:30" pos:end="159:33"><name pos:start="159:30" pos:end="159:33">errp</name></expr></argument>, <argument pos:start="159:36" pos:end="159:39"><expr pos:start="159:36" pos:end="159:39"><operator pos:start="159:36" pos:end="159:36">-</operator><name pos:start="159:37" pos:end="159:39">ret</name></expr></argument>, <argument pos:start="159:42" pos:end="161:39"><expr pos:start="159:42" pos:end="161:39"><literal type="string" pos:start="159:42" pos:end="159:78">"Could not create temporary overlay "</literal>

                             <literal type="string" pos:start="161:30" pos:end="161:39">"'%s': %s"</literal></expr></argument>, <argument pos:start="161:42" pos:end="161:53"><expr pos:start="161:42" pos:end="161:53"><name pos:start="161:42" pos:end="161:53">tmp_filename</name></expr></argument>,

                             <argument pos:start="163:30" pos:end="163:56"><expr pos:start="163:30" pos:end="163:56"><call pos:start="163:30" pos:end="163:56"><name pos:start="163:30" pos:end="163:45">error_get_pretty</name><argument_list pos:start="163:46" pos:end="163:56">(<argument pos:start="163:47" pos:end="163:55"><expr pos:start="163:47" pos:end="163:55"><name pos:start="163:47" pos:end="163:55">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:34"><expr pos:start="165:13" pos:end="165:33"><call pos:start="165:13" pos:end="165:33"><name pos:start="165:13" pos:end="165:22">error_free</name><argument_list pos:start="165:23" pos:end="165:33">(<argument pos:start="165:24" pos:end="165:32"><expr pos:start="165:24" pos:end="165:32"><name pos:start="165:24" pos:end="165:32">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:29"><expr pos:start="167:13" pos:end="167:28"><name pos:start="167:13" pos:end="167:21">local_err</name> <operator pos:start="167:23" pos:end="167:23">=</operator> <name pos:start="167:25" pos:end="167:28">NULL</name></expr>;</expr_stmt>

            <goto pos:start="169:13" pos:end="169:22">goto <name pos:start="169:18" pos:end="169:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:32"><expr pos:start="175:9" pos:end="175:31"><name pos:start="175:9" pos:end="175:16">filename</name> <operator pos:start="175:18" pos:end="175:18">=</operator> <name pos:start="175:20" pos:end="175:31">tmp_filename</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:25"><expr pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:11">drv</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <name pos:start="177:15" pos:end="177:24">bdrv_qcow2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:29"><expr pos:start="179:9" pos:end="179:28"><name pos:start="179:9" pos:end="179:24"><name pos:start="179:9" pos:end="179:10">bs</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:24">is_temporary</name></name> <operator pos:start="179:26" pos:end="179:26">=</operator> <literal type="number" pos:start="179:28" pos:end="179:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="185:5" pos:end="185:46">/* Open image file without format layer */</comment>

    <if_stmt pos:start="187:5" pos:end="191:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:28">(<expr pos:start="187:9" pos:end="187:27"><name pos:start="187:9" pos:end="187:13">flags</name> <operator pos:start="187:15" pos:end="187:15">&amp;</operator> <name pos:start="187:17" pos:end="187:27">BDRV_O_RDWR</name></expr>)</condition> <block pos:start="187:30" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:35">

        <expr_stmt pos:start="189:9" pos:end="189:35"><expr pos:start="189:9" pos:end="189:34"><name pos:start="189:9" pos:end="189:13">flags</name> <operator pos:start="189:15" pos:end="189:16">|=</operator> <name pos:start="189:18" pos:end="189:34">BDRV_O_ALLOW_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:60"><expr pos:start="195:5" pos:end="195:59"><call pos:start="195:5" pos:end="195:59"><name pos:start="195:5" pos:end="195:26">qdict_extract_subqdict</name><argument_list pos:start="195:27" pos:end="195:59">(<argument pos:start="195:28" pos:end="195:34"><expr pos:start="195:28" pos:end="195:34"><name pos:start="195:28" pos:end="195:34">options</name></expr></argument>, <argument pos:start="195:37" pos:end="195:49"><expr pos:start="195:37" pos:end="195:49"><operator pos:start="195:37" pos:end="195:37">&amp;</operator><name pos:start="195:38" pos:end="195:49">file_options</name></expr></argument>, <argument pos:start="195:52" pos:end="195:58"><expr pos:start="195:52" pos:end="195:58"><literal type="string" pos:start="195:52" pos:end="195:58">"file."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="201:80"><expr pos:start="199:5" pos:end="201:79"><name pos:start="199:5" pos:end="199:7">ret</name> <operator pos:start="199:9" pos:end="199:9">=</operator> <call pos:start="199:11" pos:end="201:79"><name pos:start="199:11" pos:end="199:24">bdrv_file_open</name><argument_list pos:start="199:25" pos:end="201:79">(<argument pos:start="199:26" pos:end="199:30"><expr pos:start="199:26" pos:end="199:30"><operator pos:start="199:26" pos:end="199:26">&amp;</operator><name pos:start="199:27" pos:end="199:30">file</name></expr></argument>, <argument pos:start="199:33" pos:end="199:40"><expr pos:start="199:33" pos:end="199:40"><name pos:start="199:33" pos:end="199:40">filename</name></expr></argument>, <argument pos:start="199:43" pos:end="199:54"><expr pos:start="199:43" pos:end="199:54"><name pos:start="199:43" pos:end="199:54">file_options</name></expr></argument>,

                         <argument pos:start="201:26" pos:end="201:66"><expr pos:start="201:26" pos:end="201:66"><call pos:start="201:26" pos:end="201:66"><name pos:start="201:26" pos:end="201:40">bdrv_open_flags</name><argument_list pos:start="201:41" pos:end="201:66">(<argument pos:start="201:42" pos:end="201:43"><expr pos:start="201:42" pos:end="201:43"><name pos:start="201:42" pos:end="201:43">bs</name></expr></argument>, <argument pos:start="201:46" pos:end="201:65"><expr pos:start="201:46" pos:end="201:65"><name pos:start="201:46" pos:end="201:50">flags</name> <operator pos:start="201:52" pos:end="201:52">|</operator> <name pos:start="201:54" pos:end="201:65">BDRV_O_UNMAP</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="201:69" pos:end="201:78"><expr pos:start="201:69" pos:end="201:78"><operator pos:start="201:69" pos:end="201:69">&amp;</operator><name pos:start="201:70" pos:end="201:78">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="203:5" pos:end="207:5"><if pos:start="203:5" pos:end="207:5">if <condition pos:start="203:8" pos:end="203:16">(<expr pos:start="203:9" pos:end="203:15"><name pos:start="203:9" pos:end="203:11">ret</name> <operator pos:start="203:13" pos:end="203:13">&lt;</operator> <literal type="number" pos:start="203:15" pos:end="203:15">0</literal></expr>)</condition> <block pos:start="203:18" pos:end="207:5">{<block_content pos:start="205:9" pos:end="205:18">

        <goto pos:start="205:9" pos:end="205:18">goto <name pos:start="205:14" pos:end="205:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:44">/* Find the right image format driver */</comment>

    <expr_stmt pos:start="213:5" pos:end="213:51"><expr pos:start="213:5" pos:end="213:50"><name pos:start="213:5" pos:end="213:11">drvname</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <call pos:start="213:15" pos:end="213:50"><name pos:start="213:15" pos:end="213:31">qdict_get_try_str</name><argument_list pos:start="213:32" pos:end="213:50">(<argument pos:start="213:33" pos:end="213:39"><expr pos:start="213:33" pos:end="213:39"><name pos:start="213:33" pos:end="213:39">options</name></expr></argument>, <argument pos:start="213:42" pos:end="213:49"><expr pos:start="213:42" pos:end="213:49"><literal type="string" pos:start="213:42" pos:end="213:49">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="215:5" pos:end="231:5"><if pos:start="215:5" pos:end="231:5">if <condition pos:start="215:8" pos:end="215:16">(<expr pos:start="215:9" pos:end="215:15"><name pos:start="215:9" pos:end="215:15">drvname</name></expr>)</condition> <block pos:start="215:18" pos:end="231:5">{<block_content pos:start="217:9" pos:end="229:9">

        <expr_stmt pos:start="217:9" pos:end="217:40"><expr pos:start="217:9" pos:end="217:39"><name pos:start="217:9" pos:end="217:11">drv</name> <operator pos:start="217:13" pos:end="217:13">=</operator> <call pos:start="217:15" pos:end="217:39"><name pos:start="217:15" pos:end="217:30">bdrv_find_format</name><argument_list pos:start="217:31" pos:end="217:39">(<argument pos:start="217:32" pos:end="217:38"><expr pos:start="217:32" pos:end="217:38"><name pos:start="217:32" pos:end="217:38">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:37"><expr pos:start="219:9" pos:end="219:36"><call pos:start="219:9" pos:end="219:36"><name pos:start="219:9" pos:end="219:17">qdict_del</name><argument_list pos:start="219:18" pos:end="219:36">(<argument pos:start="219:19" pos:end="219:25"><expr pos:start="219:19" pos:end="219:25"><name pos:start="219:19" pos:end="219:25">options</name></expr></argument>, <argument pos:start="219:28" pos:end="219:35"><expr pos:start="219:28" pos:end="219:35"><literal type="string" pos:start="219:28" pos:end="219:35">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="229:9"><if pos:start="221:9" pos:end="229:9">if <condition pos:start="221:12" pos:end="221:17">(<expr pos:start="221:13" pos:end="221:16"><operator pos:start="221:13" pos:end="221:13">!</operator><name pos:start="221:14" pos:end="221:16">drv</name></expr>)</condition> <block pos:start="221:19" pos:end="229:9">{<block_content pos:start="223:13" pos:end="227:33">

            <expr_stmt pos:start="223:13" pos:end="223:62"><expr pos:start="223:13" pos:end="223:61"><call pos:start="223:13" pos:end="223:61"><name pos:start="223:13" pos:end="223:22">error_setg</name><argument_list pos:start="223:23" pos:end="223:61">(<argument pos:start="223:24" pos:end="223:27"><expr pos:start="223:24" pos:end="223:27"><name pos:start="223:24" pos:end="223:27">errp</name></expr></argument>, <argument pos:start="223:30" pos:end="223:51"><expr pos:start="223:30" pos:end="223:51"><literal type="string" pos:start="223:30" pos:end="223:51">"Invalid driver: '%s'"</literal></expr></argument>, <argument pos:start="223:54" pos:end="223:60"><expr pos:start="223:54" pos:end="223:60"><name pos:start="223:54" pos:end="223:60">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:26"><expr pos:start="225:13" pos:end="225:25"><name pos:start="225:13" pos:end="225:15">ret</name> <operator pos:start="225:17" pos:end="225:17">=</operator> <operator pos:start="225:19" pos:end="225:19">-</operator><name pos:start="225:20" pos:end="225:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="227:13" pos:end="227:33">goto <name pos:start="227:18" pos:end="227:32">unlink_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="235:5" pos:end="239:5"><if pos:start="235:5" pos:end="239:5">if <condition pos:start="235:8" pos:end="235:13">(<expr pos:start="235:9" pos:end="235:12"><operator pos:start="235:9" pos:end="235:9">!</operator><name pos:start="235:10" pos:end="235:12">drv</name></expr>)</condition> <block pos:start="235:15" pos:end="239:5">{<block_content pos:start="237:9" pos:end="237:66">

        <expr_stmt pos:start="237:9" pos:end="237:66"><expr pos:start="237:9" pos:end="237:65"><name pos:start="237:9" pos:end="237:11">ret</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <call pos:start="237:15" pos:end="237:65"><name pos:start="237:15" pos:end="237:31">find_image_format</name><argument_list pos:start="237:32" pos:end="237:65">(<argument pos:start="237:33" pos:end="237:36"><expr pos:start="237:33" pos:end="237:36"><name pos:start="237:33" pos:end="237:36">file</name></expr></argument>, <argument pos:start="237:39" pos:end="237:46"><expr pos:start="237:39" pos:end="237:46"><name pos:start="237:39" pos:end="237:46">filename</name></expr></argument>, <argument pos:start="237:49" pos:end="237:52"><expr pos:start="237:49" pos:end="237:52"><operator pos:start="237:49" pos:end="237:49">&amp;</operator><name pos:start="237:50" pos:end="237:52">drv</name></expr></argument>, <argument pos:start="237:55" pos:end="237:64"><expr pos:start="237:55" pos:end="237:64"><operator pos:start="237:55" pos:end="237:55">&amp;</operator><name pos:start="237:56" pos:end="237:64">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="243:5" pos:end="247:5"><if pos:start="243:5" pos:end="247:5">if <condition pos:start="243:8" pos:end="243:13">(<expr pos:start="243:9" pos:end="243:12"><operator pos:start="243:9" pos:end="243:9">!</operator><name pos:start="243:10" pos:end="243:12">drv</name></expr>)</condition> <block pos:start="243:15" pos:end="247:5">{<block_content pos:start="245:9" pos:end="245:29">

        <goto pos:start="245:9" pos:end="245:29">goto <name pos:start="245:14" pos:end="245:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="251:5" pos:end="251:24">/* Open the image */</comment>

    <expr_stmt pos:start="253:5" pos:end="253:70"><expr pos:start="253:5" pos:end="253:69"><name pos:start="253:5" pos:end="253:7">ret</name> <operator pos:start="253:9" pos:end="253:9">=</operator> <call pos:start="253:11" pos:end="253:69"><name pos:start="253:11" pos:end="253:26">bdrv_open_common</name><argument_list pos:start="253:27" pos:end="253:69">(<argument pos:start="253:28" pos:end="253:29"><expr pos:start="253:28" pos:end="253:29"><name pos:start="253:28" pos:end="253:29">bs</name></expr></argument>, <argument pos:start="253:32" pos:end="253:35"><expr pos:start="253:32" pos:end="253:35"><name pos:start="253:32" pos:end="253:35">file</name></expr></argument>, <argument pos:start="253:38" pos:end="253:44"><expr pos:start="253:38" pos:end="253:44"><name pos:start="253:38" pos:end="253:44">options</name></expr></argument>, <argument pos:start="253:47" pos:end="253:51"><expr pos:start="253:47" pos:end="253:51"><name pos:start="253:47" pos:end="253:51">flags</name></expr></argument>, <argument pos:start="253:54" pos:end="253:56"><expr pos:start="253:54" pos:end="253:56"><name pos:start="253:54" pos:end="253:56">drv</name></expr></argument>, <argument pos:start="253:59" pos:end="253:68"><expr pos:start="253:59" pos:end="253:68"><operator pos:start="253:59" pos:end="253:59">&amp;</operator><name pos:start="253:60" pos:end="253:68">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="255:5" pos:end="259:5"><if pos:start="255:5" pos:end="259:5">if <condition pos:start="255:8" pos:end="255:16">(<expr pos:start="255:9" pos:end="255:15"><name pos:start="255:9" pos:end="255:11">ret</name> <operator pos:start="255:13" pos:end="255:13">&lt;</operator> <literal type="number" pos:start="255:15" pos:end="255:15">0</literal></expr>)</condition> <block pos:start="255:18" pos:end="259:5">{<block_content pos:start="257:9" pos:end="257:29">

        <goto pos:start="257:9" pos:end="257:29">goto <name pos:start="257:14" pos:end="257:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="263:5" pos:end="269:5"><if pos:start="263:5" pos:end="269:5">if <condition pos:start="263:8" pos:end="263:25">(<expr pos:start="263:9" pos:end="263:24"><name pos:start="263:9" pos:end="263:16"><name pos:start="263:9" pos:end="263:10">bs</name><operator pos:start="263:11" pos:end="263:12">-&gt;</operator><name pos:start="263:13" pos:end="263:16">file</name></name> <operator pos:start="263:18" pos:end="263:19">!=</operator> <name pos:start="263:21" pos:end="263:24">file</name></expr>)</condition> <block pos:start="263:27" pos:end="269:5">{<block_content pos:start="265:9" pos:end="267:20">

        <expr_stmt pos:start="265:9" pos:end="265:25"><expr pos:start="265:9" pos:end="265:24"><call pos:start="265:9" pos:end="265:24"><name pos:start="265:9" pos:end="265:18">bdrv_unref</name><argument_list pos:start="265:19" pos:end="265:24">(<argument pos:start="265:20" pos:end="265:23"><expr pos:start="265:20" pos:end="265:23"><name pos:start="265:20" pos:end="265:23">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:20"><expr pos:start="267:9" pos:end="267:19"><name pos:start="267:9" pos:end="267:12">file</name> <operator pos:start="267:14" pos:end="267:14">=</operator> <name pos:start="267:16" pos:end="267:19">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="273:5" pos:end="273:44">/* If there is a backing file, use it */</comment>

    <if_stmt pos:start="275:5" pos:end="291:5"><if pos:start="275:5" pos:end="291:5">if <condition pos:start="275:8" pos:end="275:41">(<expr pos:start="275:9" pos:end="275:40"><operator pos:start="275:9" pos:end="275:9">(</operator><name pos:start="275:10" pos:end="275:14">flags</name> <operator pos:start="275:16" pos:end="275:16">&amp;</operator> <name pos:start="275:18" pos:end="275:34">BDRV_O_NO_BACKING</name><operator pos:start="275:35" pos:end="275:35">)</operator> <operator pos:start="275:37" pos:end="275:38">==</operator> <literal type="number" pos:start="275:40" pos:end="275:40">0</literal></expr>)</condition> <block pos:start="275:43" pos:end="291:5">{<block_content pos:start="277:9" pos:end="289:9">

        <decl_stmt pos:start="277:9" pos:end="277:31"><decl pos:start="277:9" pos:end="277:30"><type pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:13">QDict</name> <modifier pos:start="277:15" pos:end="277:15">*</modifier></type><name pos:start="277:16" pos:end="277:30">backing_options</name></decl>;</decl_stmt>



        <expr_stmt pos:start="281:9" pos:end="281:70"><expr pos:start="281:9" pos:end="281:69"><call pos:start="281:9" pos:end="281:69"><name pos:start="281:9" pos:end="281:30">qdict_extract_subqdict</name><argument_list pos:start="281:31" pos:end="281:69">(<argument pos:start="281:32" pos:end="281:38"><expr pos:start="281:32" pos:end="281:38"><name pos:start="281:32" pos:end="281:38">options</name></expr></argument>, <argument pos:start="281:41" pos:end="281:56"><expr pos:start="281:41" pos:end="281:56"><operator pos:start="281:41" pos:end="281:41">&amp;</operator><name pos:start="281:42" pos:end="281:56">backing_options</name></expr></argument>, <argument pos:start="281:59" pos:end="281:68"><expr pos:start="281:59" pos:end="281:68"><literal type="string" pos:start="281:59" pos:end="281:68">"backing."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:70"><expr pos:start="283:9" pos:end="283:69"><name pos:start="283:9" pos:end="283:11">ret</name> <operator pos:start="283:13" pos:end="283:13">=</operator> <call pos:start="283:15" pos:end="283:69"><name pos:start="283:15" pos:end="283:36">bdrv_open_backing_file</name><argument_list pos:start="283:37" pos:end="283:69">(<argument pos:start="283:38" pos:end="283:39"><expr pos:start="283:38" pos:end="283:39"><name pos:start="283:38" pos:end="283:39">bs</name></expr></argument>, <argument pos:start="283:42" pos:end="283:56"><expr pos:start="283:42" pos:end="283:56"><name pos:start="283:42" pos:end="283:56">backing_options</name></expr></argument>, <argument pos:start="283:59" pos:end="283:68"><expr pos:start="283:59" pos:end="283:68"><operator pos:start="283:59" pos:end="283:59">&amp;</operator><name pos:start="283:60" pos:end="283:68">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="285:9" pos:end="289:9"><if pos:start="285:9" pos:end="289:9">if <condition pos:start="285:12" pos:end="285:20">(<expr pos:start="285:13" pos:end="285:19"><name pos:start="285:13" pos:end="285:15">ret</name> <operator pos:start="285:17" pos:end="285:17">&lt;</operator> <literal type="number" pos:start="285:19" pos:end="285:19">0</literal></expr>)</condition> <block pos:start="285:22" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:32">

            <goto pos:start="287:13" pos:end="287:32">goto <name pos:start="287:18" pos:end="287:31">close_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="295:5" pos:end="295:48">/* Check if any unknown options were used */</comment>

    <if_stmt pos:start="297:5" pos:end="313:5"><if pos:start="297:5" pos:end="313:5">if <condition pos:start="297:8" pos:end="297:33">(<expr pos:start="297:9" pos:end="297:32"><call pos:start="297:9" pos:end="297:27"><name pos:start="297:9" pos:end="297:18">qdict_size</name><argument_list pos:start="297:19" pos:end="297:27">(<argument pos:start="297:20" pos:end="297:26"><expr pos:start="297:20" pos:end="297:26"><name pos:start="297:20" pos:end="297:26">options</name></expr></argument>)</argument_list></call> <operator pos:start="297:29" pos:end="297:30">!=</operator> <literal type="number" pos:start="297:32" pos:end="297:32">0</literal></expr>)</condition> <block pos:start="297:35" pos:end="313:5">{<block_content pos:start="299:9" pos:end="311:28">

        <decl_stmt pos:start="299:9" pos:end="299:55"><decl pos:start="299:9" pos:end="299:54"><type pos:start="299:9" pos:end="299:26"><specifier pos:start="299:9" pos:end="299:13">const</specifier> <name pos:start="299:15" pos:end="299:24">QDictEntry</name> <modifier pos:start="299:26" pos:end="299:26">*</modifier></type><name pos:start="299:27" pos:end="299:31">entry</name> <init pos:start="299:33" pos:end="299:54">= <expr pos:start="299:35" pos:end="299:54"><call pos:start="299:35" pos:end="299:54"><name pos:start="299:35" pos:end="299:45">qdict_first</name><argument_list pos:start="299:46" pos:end="299:54">(<argument pos:start="299:47" pos:end="299:53"><expr pos:start="299:47" pos:end="299:53"><name pos:start="299:47" pos:end="299:53">options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="301:9" pos:end="305:31"><expr pos:start="301:9" pos:end="305:30"><call pos:start="301:9" pos:end="305:30"><name pos:start="301:9" pos:end="301:18">error_setg</name><argument_list pos:start="301:19" pos:end="305:30">(<argument pos:start="301:20" pos:end="301:23"><expr pos:start="301:20" pos:end="301:23"><name pos:start="301:20" pos:end="301:23">errp</name></expr></argument>, <argument pos:start="301:26" pos:end="303:44"><expr pos:start="301:26" pos:end="303:44"><literal type="string" pos:start="301:26" pos:end="301:73">"Block format '%s' used by device '%s' doesn't "</literal>

                   <literal type="string" pos:start="303:20" pos:end="303:44">"support the option '%s'"</literal></expr></argument>, <argument pos:start="303:47" pos:end="303:62"><expr pos:start="303:47" pos:end="303:62"><name pos:start="303:47" pos:end="303:62"><name pos:start="303:47" pos:end="303:49">drv</name><operator pos:start="303:50" pos:end="303:51">-&gt;</operator><name pos:start="303:52" pos:end="303:62">format_name</name></name></expr></argument>, <argument pos:start="303:65" pos:end="303:79"><expr pos:start="303:65" pos:end="303:79"><name pos:start="303:65" pos:end="303:79"><name pos:start="303:65" pos:end="303:66">bs</name><operator pos:start="303:67" pos:end="303:68">-&gt;</operator><name pos:start="303:69" pos:end="303:79">device_name</name></name></expr></argument>,

                   <argument pos:start="305:20" pos:end="305:29"><expr pos:start="305:20" pos:end="305:29"><name pos:start="305:20" pos:end="305:29"><name pos:start="305:20" pos:end="305:24">entry</name><operator pos:start="305:25" pos:end="305:26">-&gt;</operator><name pos:start="305:27" pos:end="305:29">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="309:9" pos:end="309:22"><expr pos:start="309:9" pos:end="309:21"><name pos:start="309:9" pos:end="309:11">ret</name> <operator pos:start="309:13" pos:end="309:13">=</operator> <operator pos:start="309:15" pos:end="309:15">-</operator><name pos:start="309:16" pos:end="309:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="311:9" pos:end="311:28">goto <name pos:start="311:14" pos:end="311:27">close_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:21"><expr pos:start="315:5" pos:end="315:20"><call pos:start="315:5" pos:end="315:20"><name pos:start="315:5" pos:end="315:11">QDECREF</name><argument_list pos:start="315:12" pos:end="315:20">(<argument pos:start="315:13" pos:end="315:19"><expr pos:start="315:13" pos:end="315:19"><name pos:start="315:13" pos:end="315:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="319:5" pos:end="323:5"><if pos:start="319:5" pos:end="323:5">if <condition pos:start="319:8" pos:end="319:31">(<expr pos:start="319:9" pos:end="319:30"><operator pos:start="319:9" pos:end="319:9">!</operator><call pos:start="319:10" pos:end="319:30"><name pos:start="319:10" pos:end="319:26">bdrv_key_required</name><argument_list pos:start="319:27" pos:end="319:30">(<argument pos:start="319:28" pos:end="319:29"><expr pos:start="319:28" pos:end="319:29"><name pos:start="319:28" pos:end="319:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="319:33" pos:end="323:5">{<block_content pos:start="321:9" pos:end="321:43">

        <expr_stmt pos:start="321:9" pos:end="321:43"><expr pos:start="321:9" pos:end="321:42"><call pos:start="321:9" pos:end="321:42"><name pos:start="321:9" pos:end="321:32">bdrv_dev_change_media_cb</name><argument_list pos:start="321:33" pos:end="321:42">(<argument pos:start="321:34" pos:end="321:35"><expr pos:start="321:34" pos:end="321:35"><name pos:start="321:34" pos:end="321:35">bs</name></expr></argument>, <argument pos:start="321:38" pos:end="321:41"><expr pos:start="321:38" pos:end="321:41"><name pos:start="321:38" pos:end="321:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="327:5" pos:end="327:13">return <expr pos:start="327:12" pos:end="327:12"><literal type="number" pos:start="327:12" pos:end="327:12">0</literal></expr>;</return>



<label pos:start="331:1" pos:end="331:16"><name pos:start="331:1" pos:end="331:15">unlink_and_fail</name>:</label>

    <if_stmt pos:start="333:5" pos:end="337:5"><if pos:start="333:5" pos:end="337:5">if <condition pos:start="333:8" pos:end="333:21">(<expr pos:start="333:9" pos:end="333:20"><name pos:start="333:9" pos:end="333:12">file</name> <operator pos:start="333:14" pos:end="333:15">!=</operator> <name pos:start="333:17" pos:end="333:20">NULL</name></expr>)</condition> <block pos:start="333:23" pos:end="337:5">{<block_content pos:start="335:9" pos:end="335:25">

        <expr_stmt pos:start="335:9" pos:end="335:25"><expr pos:start="335:9" pos:end="335:24"><call pos:start="335:9" pos:end="335:24"><name pos:start="335:9" pos:end="335:18">bdrv_unref</name><argument_list pos:start="335:19" pos:end="335:24">(<argument pos:start="335:20" pos:end="335:23"><expr pos:start="335:20" pos:end="335:23"><name pos:start="335:20" pos:end="335:23">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="339:5" pos:end="343:5"><if pos:start="339:5" pos:end="343:5">if <condition pos:start="339:8" pos:end="339:25">(<expr pos:start="339:9" pos:end="339:24"><name pos:start="339:9" pos:end="339:24"><name pos:start="339:9" pos:end="339:10">bs</name><operator pos:start="339:11" pos:end="339:12">-&gt;</operator><name pos:start="339:13" pos:end="339:24">is_temporary</name></name></expr>)</condition> <block pos:start="339:27" pos:end="343:5">{<block_content pos:start="341:9" pos:end="341:25">

        <expr_stmt pos:start="341:9" pos:end="341:25"><expr pos:start="341:9" pos:end="341:24"><call pos:start="341:9" pos:end="341:24"><name pos:start="341:9" pos:end="341:14">unlink</name><argument_list pos:start="341:15" pos:end="341:24">(<argument pos:start="341:16" pos:end="341:23"><expr pos:start="341:16" pos:end="341:23"><name pos:start="341:16" pos:end="341:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="345:1" pos:end="345:5"><name pos:start="345:1" pos:end="345:4">fail</name>:</label>

    <expr_stmt pos:start="347:5" pos:end="347:25"><expr pos:start="347:5" pos:end="347:24"><call pos:start="347:5" pos:end="347:24"><name pos:start="347:5" pos:end="347:11">QDECREF</name><argument_list pos:start="347:12" pos:end="347:24">(<argument pos:start="347:13" pos:end="347:23"><expr pos:start="347:13" pos:end="347:23"><name pos:start="347:13" pos:end="347:23"><name pos:start="347:13" pos:end="347:14">bs</name><operator pos:start="347:15" pos:end="347:16">-&gt;</operator><name pos:start="347:17" pos:end="347:23">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:21"><expr pos:start="349:5" pos:end="349:20"><call pos:start="349:5" pos:end="349:20"><name pos:start="349:5" pos:end="349:11">QDECREF</name><argument_list pos:start="349:12" pos:end="349:20">(<argument pos:start="349:13" pos:end="349:19"><expr pos:start="349:13" pos:end="349:19"><name pos:start="349:13" pos:end="349:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="351:5" pos:end="351:23"><expr pos:start="351:5" pos:end="351:22"><name pos:start="351:5" pos:end="351:15"><name pos:start="351:5" pos:end="351:6">bs</name><operator pos:start="351:7" pos:end="351:8">-&gt;</operator><name pos:start="351:9" pos:end="351:15">options</name></name> <operator pos:start="351:17" pos:end="351:17">=</operator> <name pos:start="351:19" pos:end="351:22">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="353:5" pos:end="357:5"><if pos:start="353:5" pos:end="357:5">if <condition pos:start="353:8" pos:end="353:33">(<expr pos:start="353:9" pos:end="353:32"><call pos:start="353:9" pos:end="353:32"><name pos:start="353:9" pos:end="353:20">error_is_set</name><argument_list pos:start="353:21" pos:end="353:32">(<argument pos:start="353:22" pos:end="353:31"><expr pos:start="353:22" pos:end="353:31"><operator pos:start="353:22" pos:end="353:22">&amp;</operator><name pos:start="353:23" pos:end="353:31">local_err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="353:35" pos:end="357:5">{<block_content pos:start="355:9" pos:end="355:41">

        <expr_stmt pos:start="355:9" pos:end="355:41"><expr pos:start="355:9" pos:end="355:40"><call pos:start="355:9" pos:end="355:40"><name pos:start="355:9" pos:end="355:23">error_propagate</name><argument_list pos:start="355:24" pos:end="355:40">(<argument pos:start="355:25" pos:end="355:28"><expr pos:start="355:25" pos:end="355:28"><name pos:start="355:25" pos:end="355:28">errp</name></expr></argument>, <argument pos:start="355:31" pos:end="355:39"><expr pos:start="355:31" pos:end="355:39"><name pos:start="355:31" pos:end="355:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="359:5" pos:end="359:15">return <expr pos:start="359:12" pos:end="359:14"><name pos:start="359:12" pos:end="359:14">ret</name></expr>;</return>



<label pos:start="363:1" pos:end="363:15"><name pos:start="363:1" pos:end="363:14">close_and_fail</name>:</label>

    <expr_stmt pos:start="365:5" pos:end="365:19"><expr pos:start="365:5" pos:end="365:18"><call pos:start="365:5" pos:end="365:18"><name pos:start="365:5" pos:end="365:14">bdrv_close</name><argument_list pos:start="365:15" pos:end="365:18">(<argument pos:start="365:16" pos:end="365:17"><expr pos:start="365:16" pos:end="365:17"><name pos:start="365:16" pos:end="365:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="367:5" pos:end="367:21"><expr pos:start="367:5" pos:end="367:20"><call pos:start="367:5" pos:end="367:20"><name pos:start="367:5" pos:end="367:11">QDECREF</name><argument_list pos:start="367:12" pos:end="367:20">(<argument pos:start="367:13" pos:end="367:19"><expr pos:start="367:13" pos:end="367:19"><name pos:start="367:13" pos:end="367:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="369:5" pos:end="373:5"><if pos:start="369:5" pos:end="373:5">if <condition pos:start="369:8" pos:end="369:33">(<expr pos:start="369:9" pos:end="369:32"><call pos:start="369:9" pos:end="369:32"><name pos:start="369:9" pos:end="369:20">error_is_set</name><argument_list pos:start="369:21" pos:end="369:32">(<argument pos:start="369:22" pos:end="369:31"><expr pos:start="369:22" pos:end="369:31"><operator pos:start="369:22" pos:end="369:22">&amp;</operator><name pos:start="369:23" pos:end="369:31">local_err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="369:35" pos:end="373:5">{<block_content pos:start="371:9" pos:end="371:41">

        <expr_stmt pos:start="371:9" pos:end="371:41"><expr pos:start="371:9" pos:end="371:40"><call pos:start="371:9" pos:end="371:40"><name pos:start="371:9" pos:end="371:23">error_propagate</name><argument_list pos:start="371:24" pos:end="371:40">(<argument pos:start="371:25" pos:end="371:28"><expr pos:start="371:25" pos:end="371:28"><name pos:start="371:25" pos:end="371:28">errp</name></expr></argument>, <argument pos:start="371:31" pos:end="371:39"><expr pos:start="371:31" pos:end="371:39"><name pos:start="371:31" pos:end="371:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="375:5" pos:end="375:15">return <expr pos:start="375:12" pos:end="375:14"><name pos:start="375:12" pos:end="375:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
