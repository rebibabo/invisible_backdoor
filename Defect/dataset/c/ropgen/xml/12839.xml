<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12839.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">decode_picture_header</name><parameter_list pos:start="1:33" pos:end="1:95">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:94"><decl pos:start="1:77" pos:end="1:94"><type pos:start="1:77" pos:end="1:94"><specifier pos:start="1:77" pos:end="1:81">const</specifier> <name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:94">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:25">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ProresContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">ctx</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:19">hdr_size</name></decl>, <decl pos:start="7:22" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:32">slice_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:26">pic_data_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:27">log2_slice_mb_width</name></decl>, <decl pos:start="11:30" pos:end="11:49"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:49">log2_slice_mb_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">slice_mb_count</name></decl>, <decl pos:start="13:25" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:28">mb_x</name></decl>, <decl pos:start="13:31" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:31" pos:end="13:34">mb_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:27">data_ptr</name></decl>, <decl pos:start="15:30" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:30" pos:end="15:30">*</modifier></type><name pos:start="15:31" pos:end="15:39">index_ptr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:12">hdr_size</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:18">buf</name><index pos:start="19:19" pos:end="19:21">[<expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>]</index></name> <operator pos:start="19:23" pos:end="19:24">&gt;&gt;</operator> <literal type="number" pos:start="19:26" pos:end="19:26">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:16">hdr_size</name> <argument_list type="generic" pos:start="21:18" pos:end="21:34">&lt; <argument pos:start="21:20" pos:end="21:32"><expr pos:start="21:20" pos:end="21:32"><literal type="number" pos:start="21:20" pos:end="21:20">8</literal> <operator pos:start="21:22" pos:end="21:23">||</operator> <name pos:start="21:25" pos:end="21:32">hdr_size</name></expr></argument> &gt;</argument_list></name> <name pos:start="21:36" pos:end="21:43">buf_size</name></expr>)</condition> <block pos:start="21:46" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:74"><expr pos:start="23:9" pos:end="23:73"><call pos:start="23:9" pos:end="23:73"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:73">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:72"><expr pos:start="23:37" pos:end="23:72"><literal type="string" pos:start="23:37" pos:end="23:72">"error, wrong picture header size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:17">pic_data_size</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:27">AV_RB32</name><argument_list pos:start="31:28" pos:end="31:36">(<argument pos:start="31:29" pos:end="31:35"><expr pos:start="31:29" pos:end="31:35"><name pos:start="31:29" pos:end="31:31">buf</name> <operator pos:start="31:33" pos:end="31:33">+</operator> <literal type="number" pos:start="31:35" pos:end="31:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:33">(<expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:21">pic_data_size</name> <operator pos:start="33:23" pos:end="33:23">&gt;</operator> <name pos:start="33:25" pos:end="33:32">buf_size</name></expr>)</condition> <block pos:start="33:35" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:72"><expr pos:start="35:9" pos:end="35:71"><call pos:start="35:9" pos:end="35:71"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:71">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:70"><expr pos:start="35:37" pos:end="35:70"><literal type="string" pos:start="35:37" pos:end="35:70">"error, wrong picture data size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:23">log2_slice_mb_width</name>  <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:30">buf</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><literal type="number" pos:start="43:32" pos:end="43:32">7</literal></expr>]</index></name> <operator pos:start="43:35" pos:end="43:36">&gt;&gt;</operator> <literal type="number" pos:start="43:38" pos:end="43:38">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:24">log2_slice_mb_height</name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:30">buf</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">7</literal></expr>]</index></name> <operator pos:start="45:35" pos:end="45:35">&amp;</operator> <literal type="number" pos:start="45:37" pos:end="45:39">0xF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:56">(<expr pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:27">log2_slice_mb_width</name> <operator pos:start="47:29" pos:end="47:29">&gt;</operator> <literal type="number" pos:start="47:31" pos:end="47:31">3</literal> <operator pos:start="47:33" pos:end="47:34">||</operator> <name pos:start="47:36" pos:end="47:55">log2_slice_mb_height</name></expr>)</condition> <block pos:start="47:58" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="51:68"><expr pos:start="49:9" pos:end="51:67"><call pos:start="49:9" pos:end="51:67"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="51:67">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:75"><expr pos:start="49:37" pos:end="49:75"><literal type="string" pos:start="49:37" pos:end="49:75">"unsupported slice resolution: %dx%d\n"</literal></expr></argument>,

               <argument pos:start="51:16" pos:end="51:39"><expr pos:start="51:16" pos:end="51:39"><literal type="number" pos:start="51:16" pos:end="51:16">1</literal> <operator pos:start="51:18" pos:end="51:19">&lt;&lt;</operator> <name pos:start="51:21" pos:end="51:39">log2_slice_mb_width</name></expr></argument>, <argument pos:start="51:42" pos:end="51:66"><expr pos:start="51:42" pos:end="51:66"><literal type="number" pos:start="51:42" pos:end="51:42">1</literal> <operator pos:start="51:44" pos:end="51:45">&lt;&lt;</operator> <name pos:start="51:47" pos:end="51:66">log2_slice_mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:47"><expr pos:start="59:5" pos:end="59:46"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:7">ctx</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:17">mb_width</name></name>  <operator pos:start="59:20" pos:end="59:20">=</operator> <operator pos:start="59:22" pos:end="59:22">(</operator><name pos:start="59:23" pos:end="59:34"><name pos:start="59:23" pos:end="59:27">avctx</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:34">width</name></name>  <operator pos:start="59:37" pos:end="59:37">+</operator> <literal type="number" pos:start="59:39" pos:end="59:40">15</literal><operator pos:start="59:41" pos:end="59:41">)</operator> <operator pos:start="59:43" pos:end="59:44">&gt;&gt;</operator> <literal type="number" pos:start="59:46" pos:end="59:46">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:47"><expr pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:7">ctx</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:18">mb_height</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <operator pos:start="61:22" pos:end="61:22">(</operator><name pos:start="61:23" pos:end="61:35"><name pos:start="61:23" pos:end="61:27">avctx</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:35">height</name></name> <operator pos:start="61:37" pos:end="61:37">+</operator> <literal type="number" pos:start="61:39" pos:end="61:40">15</literal><operator pos:start="61:41" pos:end="61:41">)</operator> <operator pos:start="61:43" pos:end="61:44">&gt;&gt;</operator> <literal type="number" pos:start="61:46" pos:end="61:46">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:15">slice_count</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:34"><name pos:start="65:19" pos:end="65:25">AV_RB16</name><argument_list pos:start="65:26" pos:end="65:34">(<argument pos:start="65:27" pos:end="65:33"><expr pos:start="65:27" pos:end="65:33"><name pos:start="65:27" pos:end="65:29">buf</name> <operator pos:start="65:31" pos:end="65:31">+</operator> <literal type="number" pos:start="65:33" pos:end="65:33">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="81:5"><if pos:start="69:5" pos:end="81:5">if <condition pos:start="69:8" pos:end="69:56">(<expr pos:start="69:9" pos:end="69:55"><name pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:11">ctx</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:24">slice_count</name></name> <operator pos:start="69:26" pos:end="69:27">!=</operator> <name pos:start="69:29" pos:end="69:39">slice_count</name> <operator pos:start="69:41" pos:end="69:42">||</operator> <operator pos:start="69:44" pos:end="69:44">!</operator><name pos:start="69:45" pos:end="69:55"><name pos:start="69:45" pos:end="69:47">ctx</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:55">slices</name></name></expr>)</condition> <block pos:start="69:58" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:39">

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><call pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:16">av_freep</name><argument_list pos:start="71:17" pos:end="71:30">(<argument pos:start="71:18" pos:end="71:29"><expr pos:start="71:18" pos:end="71:29"><operator pos:start="71:18" pos:end="71:18">&amp;</operator><name pos:start="71:19" pos:end="71:29"><name pos:start="71:19" pos:end="71:21">ctx</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:29">slices</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:69"><expr pos:start="73:9" pos:end="73:68"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:11">ctx</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:19">slices</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:68"><name pos:start="73:23" pos:end="73:32">av_mallocz</name><argument_list pos:start="73:33" pos:end="73:68">(<argument pos:start="73:34" pos:end="73:67"><expr pos:start="73:34" pos:end="73:67"><name pos:start="73:34" pos:end="73:44">slice_count</name> <operator pos:start="73:46" pos:end="73:46">*</operator> <sizeof pos:start="73:48" pos:end="73:67">sizeof<argument_list pos:start="73:54" pos:end="73:67">(<argument pos:start="73:55" pos:end="73:66"><expr pos:start="73:55" pos:end="73:66"><operator pos:start="73:55" pos:end="73:55">*</operator><name pos:start="73:56" pos:end="73:66"><name pos:start="73:56" pos:end="73:58">ctx</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:66">slices</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:35"><if pos:start="75:9" pos:end="77:35">if <condition pos:start="75:12" pos:end="75:25">(<expr pos:start="75:13" pos:end="75:24"><operator pos:start="75:13" pos:end="75:13">!</operator><name pos:start="75:14" pos:end="75:24"><name pos:start="75:14" pos:end="75:16">ctx</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:24">slices</name></name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:35"><block_content pos:start="77:13" pos:end="77:35">

            <return pos:start="77:13" pos:end="77:35">return <expr pos:start="77:20" pos:end="77:34"><call pos:start="77:20" pos:end="77:34"><name pos:start="77:20" pos:end="77:26">AVERROR</name><argument_list pos:start="77:27" pos:end="77:34">(<argument pos:start="77:28" pos:end="77:33"><expr pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:39"><expr pos:start="79:9" pos:end="79:38"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:11">ctx</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:24">slice_count</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:38">slice_count</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="87:31"><if pos:start="85:5" pos:end="87:31">if <condition pos:start="85:8" pos:end="85:21">(<expr pos:start="85:9" pos:end="85:20"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:20">slice_count</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:31"><block_content pos:start="87:9" pos:end="87:31">

        <return pos:start="87:9" pos:end="87:31">return <expr pos:start="87:16" pos:end="87:30"><call pos:start="87:16" pos:end="87:30"><name pos:start="87:16" pos:end="87:22">AVERROR</name><argument_list pos:start="87:23" pos:end="87:30">(<argument pos:start="87:24" pos:end="87:29"><expr pos:start="87:24" pos:end="87:29"><name pos:start="87:24" pos:end="87:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:44">(<expr pos:start="91:9" pos:end="91:43"><name pos:start="91:9" pos:end="91:16">hdr_size</name> <operator pos:start="91:18" pos:end="91:18">+</operator> <name pos:start="91:20" pos:end="91:30">slice_count</name><operator pos:start="91:31" pos:end="91:31">*</operator><literal type="number" pos:start="91:32" pos:end="91:32">2</literal> <operator pos:start="91:34" pos:end="91:34">&gt;</operator> <name pos:start="91:36" pos:end="91:43">buf_size</name></expr>)</condition> <block pos:start="91:46" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:66"><expr pos:start="93:9" pos:end="93:65"><call pos:start="93:9" pos:end="93:65"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:65">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:34"><expr pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:37" pos:end="93:64"><expr pos:start="93:37" pos:end="93:64"><literal type="string" pos:start="93:37" pos:end="93:64">"error, wrong slice count\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="101:5" pos:end="101:30">// parse slice information</comment>

    <expr_stmt pos:start="103:5" pos:end="103:31"><expr pos:start="103:5" pos:end="103:30"><name pos:start="103:5" pos:end="103:13">index_ptr</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <name pos:start="103:17" pos:end="103:19">buf</name> <operator pos:start="103:21" pos:end="103:21">+</operator> <name pos:start="103:23" pos:end="103:30">hdr_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:42"><expr pos:start="105:5" pos:end="105:41"><name pos:start="105:5" pos:end="105:12">data_ptr</name>  <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:25">index_ptr</name> <operator pos:start="105:27" pos:end="105:27">+</operator> <name pos:start="105:29" pos:end="105:39">slice_count</name><operator pos:start="105:40" pos:end="105:40">*</operator><literal type="number" pos:start="105:41" pos:end="105:41">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:46"><expr pos:start="109:5" pos:end="109:45"><name pos:start="109:5" pos:end="109:18">slice_mb_count</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <literal type="number" pos:start="109:22" pos:end="109:22">1</literal> <operator pos:start="109:24" pos:end="109:25">&lt;&lt;</operator> <name pos:start="109:27" pos:end="109:45">log2_slice_mb_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:13"><expr pos:start="111:5" pos:end="111:12"><name pos:start="111:5" pos:end="111:8">mb_x</name> <operator pos:start="111:10" pos:end="111:10">=</operator> <literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:13"><expr pos:start="113:5" pos:end="113:12"><name pos:start="113:5" pos:end="113:8">mb_y</name> <operator pos:start="113:10" pos:end="113:10">=</operator> <literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</expr_stmt>



    <for pos:start="117:5" pos:end="175:5">for <control pos:start="117:9" pos:end="117:37">(<init pos:start="117:10" pos:end="117:15"><expr pos:start="117:10" pos:end="117:14"><name pos:start="117:10" pos:end="117:10">i</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>;</init> <condition pos:start="117:17" pos:end="117:32"><expr pos:start="117:17" pos:end="117:31"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&lt;</operator> <name pos:start="117:21" pos:end="117:31">slice_count</name></expr>;</condition> <incr pos:start="117:34" pos:end="117:36"><expr pos:start="117:34" pos:end="117:36"><name pos:start="117:34" pos:end="117:34">i</name><operator pos:start="117:35" pos:end="117:36">++</operator></expr></incr>)</control> <block pos:start="117:39" pos:end="175:5">{<block_content pos:start="119:9" pos:end="173:9">

        <decl_stmt pos:start="119:9" pos:end="119:46"><decl pos:start="119:9" pos:end="119:45"><type pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:20">SliceContext</name> <modifier pos:start="119:22" pos:end="119:22">*</modifier></type><name pos:start="119:23" pos:end="119:27">slice</name> <init pos:start="119:29" pos:end="119:45">= <expr pos:start="119:31" pos:end="119:45"><operator pos:start="119:31" pos:end="119:31">&amp;</operator><name pos:start="119:32" pos:end="119:45"><name pos:start="119:32" pos:end="119:34">ctx</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:42">slices</name><index pos:start="119:43" pos:end="119:45">[<expr pos:start="119:44" pos:end="119:44"><name pos:start="119:44" pos:end="119:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:31"><expr pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:13">slice</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:19">data</name></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:30">data_ptr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:45"><expr pos:start="125:9" pos:end="125:44"><name pos:start="125:9" pos:end="125:16">data_ptr</name> <operator pos:start="125:18" pos:end="125:19">+=</operator> <call pos:start="125:21" pos:end="125:44"><name pos:start="125:21" pos:end="125:27">AV_RB16</name><argument_list pos:start="125:28" pos:end="125:44">(<argument pos:start="125:29" pos:end="125:43"><expr pos:start="125:29" pos:end="125:43"><name pos:start="125:29" pos:end="125:37">index_ptr</name> <operator pos:start="125:39" pos:end="125:39">+</operator> <name pos:start="125:41" pos:end="125:41">i</name><operator pos:start="125:42" pos:end="125:42">*</operator><literal type="number" pos:start="125:43" pos:end="125:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <while pos:start="129:9" pos:end="131:33">while <condition pos:start="129:15" pos:end="129:53">(<expr pos:start="129:16" pos:end="129:52"><name pos:start="129:16" pos:end="129:28"><name pos:start="129:16" pos:end="129:18">ctx</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:28">mb_width</name></name> <operator pos:start="129:30" pos:end="129:30">-</operator> <name pos:start="129:32" pos:end="129:35">mb_x</name> <operator pos:start="129:37" pos:end="129:37">&lt;</operator> <name pos:start="129:39" pos:end="129:52">slice_mb_count</name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:33"><block_content pos:start="131:13" pos:end="131:33">

            <expr_stmt pos:start="131:13" pos:end="131:33"><expr pos:start="131:13" pos:end="131:32"><name pos:start="131:13" pos:end="131:26">slice_mb_count</name> <operator pos:start="131:28" pos:end="131:30">&gt;&gt;=</operator> <literal type="number" pos:start="131:32" pos:end="131:32">1</literal></expr>;</expr_stmt></block_content></block></while>



        <expr_stmt pos:start="135:9" pos:end="135:27"><expr pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:19"><name pos:start="135:9" pos:end="135:13">slice</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:19">mb_x</name></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:26">mb_x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:27"><expr pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:13">slice</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:19">mb_y</name></name> <operator pos:start="137:21" pos:end="137:21">=</operator> <name pos:start="137:23" pos:end="137:26">mb_y</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:41"><expr pos:start="139:9" pos:end="139:40"><name pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:13">slice</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:23">mb_count</name></name> <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:40">slice_mb_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:50"><expr pos:start="141:9" pos:end="141:49"><name pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:13">slice</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:24">data_size</name></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:35">data_ptr</name> <operator pos:start="141:37" pos:end="141:37">-</operator> <name pos:start="141:39" pos:end="141:49"><name pos:start="141:39" pos:end="141:43">slice</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:49">data</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="145:9" pos:end="151:9"><if pos:start="145:9" pos:end="151:9">if <condition pos:start="145:12" pos:end="145:33">(<expr pos:start="145:13" pos:end="145:32"><name pos:start="145:13" pos:end="145:28"><name pos:start="145:13" pos:end="145:17">slice</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:28">data_size</name></name> <operator pos:start="145:30" pos:end="145:30">&lt;</operator> <literal type="number" pos:start="145:32" pos:end="145:32">6</literal></expr>)</condition> <block pos:start="145:35" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:22">

            <expr_stmt pos:start="147:13" pos:end="147:74"><expr pos:start="147:13" pos:end="147:73"><call pos:start="147:13" pos:end="147:73"><name pos:start="147:13" pos:end="147:18">av_log</name><argument_list pos:start="147:19" pos:end="147:73">(<argument pos:start="147:20" pos:end="147:24"><expr pos:start="147:20" pos:end="147:24"><name pos:start="147:20" pos:end="147:24">avctx</name></expr></argument>, <argument pos:start="147:27" pos:end="147:38"><expr pos:start="147:27" pos:end="147:38"><name pos:start="147:27" pos:end="147:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:41" pos:end="147:72"><expr pos:start="147:41" pos:end="147:72"><literal type="string" pos:start="147:41" pos:end="147:72">"error, wrong slice data size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="149:13" pos:end="149:22">return <expr pos:start="149:20" pos:end="149:21"><operator pos:start="149:20" pos:end="149:20">-</operator><literal type="number" pos:start="149:21" pos:end="149:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:31"><expr pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:12">mb_x</name> <operator pos:start="155:14" pos:end="155:15">+=</operator> <name pos:start="155:17" pos:end="155:30">slice_mb_count</name></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="165:9"><if pos:start="157:9" pos:end="165:9">if <condition pos:start="157:12" pos:end="157:34">(<expr pos:start="157:13" pos:end="157:33"><name pos:start="157:13" pos:end="157:16">mb_x</name> <operator pos:start="157:18" pos:end="157:19">==</operator> <name pos:start="157:21" pos:end="157:33"><name pos:start="157:21" pos:end="157:23">ctx</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:33">mb_width</name></name></expr>)</condition> <block pos:start="157:36" pos:end="165:9">{<block_content pos:start="159:13" pos:end="163:19">

            <expr_stmt pos:start="159:13" pos:end="159:54"><expr pos:start="159:13" pos:end="159:53"><name pos:start="159:13" pos:end="159:26">slice_mb_count</name> <operator pos:start="159:28" pos:end="159:28">=</operator> <literal type="number" pos:start="159:30" pos:end="159:30">1</literal> <operator pos:start="159:32" pos:end="159:33">&lt;&lt;</operator> <name pos:start="159:35" pos:end="159:53">log2_slice_mb_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:21"><expr pos:start="161:13" pos:end="161:20"><name pos:start="161:13" pos:end="161:16">mb_x</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <literal type="number" pos:start="161:20" pos:end="161:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:19"><expr pos:start="163:13" pos:end="163:18"><name pos:start="163:13" pos:end="163:16">mb_y</name><operator pos:start="163:17" pos:end="163:18">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="167:9" pos:end="173:9"><if pos:start="167:9" pos:end="173:9">if <condition pos:start="167:12" pos:end="167:38">(<expr pos:start="167:13" pos:end="167:37"><name pos:start="167:13" pos:end="167:20">data_ptr</name> <operator pos:start="167:22" pos:end="167:22">&gt;</operator> <name pos:start="167:24" pos:end="167:26">buf</name> <operator pos:start="167:28" pos:end="167:28">+</operator> <name pos:start="167:30" pos:end="167:37">buf_size</name></expr>)</condition> <block pos:start="167:40" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:22">

            <expr_stmt pos:start="169:13" pos:end="169:72"><expr pos:start="169:13" pos:end="169:71"><call pos:start="169:13" pos:end="169:71"><name pos:start="169:13" pos:end="169:18">av_log</name><argument_list pos:start="169:19" pos:end="169:71">(<argument pos:start="169:20" pos:end="169:24"><expr pos:start="169:20" pos:end="169:24"><name pos:start="169:20" pos:end="169:24">avctx</name></expr></argument>, <argument pos:start="169:27" pos:end="169:38"><expr pos:start="169:27" pos:end="169:38"><name pos:start="169:27" pos:end="169:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:41" pos:end="169:70"><expr pos:start="169:41" pos:end="169:70"><literal type="string" pos:start="169:41" pos:end="169:70">"error, slice out of bounds\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="171:13" pos:end="171:22">return <expr pos:start="171:20" pos:end="171:21"><operator pos:start="171:20" pos:end="171:20">-</operator><literal type="number" pos:start="171:21" pos:end="171:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="179:5" pos:end="179:25">return <expr pos:start="179:12" pos:end="179:24"><name pos:start="179:12" pos:end="179:24">pic_data_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
