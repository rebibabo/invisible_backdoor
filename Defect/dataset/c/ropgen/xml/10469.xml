<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10469.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:51">mpeg2_fast_decode_block_non_intra</name><parameter_list pos:start="1:52" pos:end="3:74">(<parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:66">MpegEncContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:69">s</name></decl></parameter>,

                                                    <parameter pos:start="3:53" pos:end="3:66"><decl pos:start="3:53" pos:end="3:66"><type pos:start="3:53" pos:end="3:66"><name pos:start="3:53" pos:end="3:59">int16_t</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:66">block</name></decl></parameter>, <parameter pos:start="3:69" pos:end="3:73"><decl pos:start="3:69" pos:end="3:73"><type pos:start="3:69" pos:end="3:73"><name pos:start="3:69" pos:end="3:71">int</name></type> <name pos:start="3:73" pos:end="3:73">n</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:13">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">i</name></decl>, <decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">j</name></decl>, <decl pos:start="7:22" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:24">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">RLTable</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">rl</name> <init pos:start="9:17" pos:end="9:30">= <expr pos:start="9:19" pos:end="9:30"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:30">ff_rl_mpeg1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:62"><decl pos:start="11:5" pos:end="11:61"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier> <specifier pos:start="11:15" pos:end="11:19">const</specifier></type> <name pos:start="11:21" pos:end="11:29">scantable</name> <init pos:start="11:31" pos:end="11:61">= <expr pos:start="11:33" pos:end="11:61"><name pos:start="11:33" pos:end="11:61"><name pos:start="11:33" pos:end="11:33">s</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:50">intra_scantable</name><operator pos:start="11:51" pos:end="11:51">.</operator><name pos:start="11:52" pos:end="11:61">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:20">qscale</name>          <init pos:start="13:31" pos:end="13:41">= <expr pos:start="13:33" pos:end="13:41"><name pos:start="13:33" pos:end="13:41"><name pos:start="13:33" pos:end="13:33">s</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:41">qscale</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><call pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:15">OPEN_READER</name><argument_list pos:start="15:16" pos:end="15:27">(<argument pos:start="15:17" pos:end="15:18"><expr pos:start="15:17" pos:end="15:18"><name pos:start="15:17" pos:end="15:18">re</name></expr></argument>, <argument pos:start="15:21" pos:end="15:26"><expr pos:start="15:21" pos:end="15:26"><operator pos:start="15:21" pos:end="15:21">&amp;</operator><name pos:start="15:22" pos:end="15:26"><name pos:start="15:22" pos:end="15:22">s</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:26">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:11"><expr pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">i</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <operator pos:start="17:9" pos:end="17:9">-</operator><literal type="number" pos:start="17:10" pos:end="17:10">1</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:74">// special case for first coefficient, no need to add second VLC table</comment>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><call pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:16">UPDATE_CACHE</name><argument_list pos:start="23:17" pos:end="23:28">(<argument pos:start="23:18" pos:end="23:19"><expr pos:start="23:18" pos:end="23:19"><name pos:start="23:18" pos:end="23:19">re</name></expr></argument>, <argument pos:start="23:22" pos:end="23:27"><expr pos:start="23:22" pos:end="23:27"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:27"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="43:5"><if pos:start="25:5" pos:end="43:5">if <condition pos:start="25:8" pos:end="25:45">(<expr pos:start="25:9" pos:end="25:44"><operator pos:start="25:9" pos:end="25:9">(</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:17">int32_t</name><operator pos:start="25:18" pos:end="25:18">)</operator><call pos:start="25:19" pos:end="25:39"><name pos:start="25:19" pos:end="25:27">GET_CACHE</name><argument_list pos:start="25:28" pos:end="25:39">(<argument pos:start="25:29" pos:end="25:30"><expr pos:start="25:29" pos:end="25:30"><name pos:start="25:29" pos:end="25:30">re</name></expr></argument>, <argument pos:start="25:33" pos:end="25:38"><expr pos:start="25:33" pos:end="25:38"><operator pos:start="25:33" pos:end="25:33">&amp;</operator><name pos:start="25:34" pos:end="25:38"><name pos:start="25:34" pos:end="25:34">s</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:38">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="25:40" pos:end="25:40">)</operator> <operator pos:start="25:42" pos:end="25:42">&lt;</operator> <literal type="number" pos:start="25:44" pos:end="25:44">0</literal></expr>)</condition> <block pos:start="25:47" pos:end="43:5">{<block_content pos:start="27:9" pos:end="41:21">

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:13">level</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <operator pos:start="27:17" pos:end="27:17">(</operator><literal type="number" pos:start="27:18" pos:end="27:18">3</literal> <operator pos:start="27:20" pos:end="27:20">*</operator> <name pos:start="27:22" pos:end="27:27">qscale</name><operator pos:start="27:28" pos:end="27:28">)</operator> <operator pos:start="27:30" pos:end="27:31">&gt;&gt;</operator> <literal type="number" pos:start="27:33" pos:end="27:33">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:27"><if pos:start="29:9" pos:end="31:27">if <condition pos:start="29:12" pos:end="29:47">(<expr pos:start="29:13" pos:end="29:46"><call pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:21">GET_CACHE</name><argument_list pos:start="29:22" pos:end="29:33">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">re</name></expr></argument>, <argument pos:start="29:27" pos:end="29:32"><expr pos:start="29:27" pos:end="29:32"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:35" pos:end="29:35">&amp;</operator> <literal type="number" pos:start="29:37" pos:end="29:46">0x40000000</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:27"><block_content pos:start="31:13" pos:end="31:27">

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:17">level</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <operator pos:start="31:21" pos:end="31:21">-</operator><name pos:start="31:22" pos:end="31:26">level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:13">block</name><index pos:start="33:14" pos:end="33:16">[<expr pos:start="33:15" pos:end="33:15"><literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>]</index></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:24">level</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:12"><expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:9">i</name><operator pos:start="35:10" pos:end="35:11">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><call pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:17">SKIP_BITS</name><argument_list pos:start="37:18" pos:end="37:32">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">re</name></expr></argument>, <argument pos:start="37:23" pos:end="37:28"><expr pos:start="37:23" pos:end="37:28"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:24">s</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:28">gb</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:31"><expr pos:start="37:31" pos:end="37:31"><literal type="number" pos:start="37:31" pos:end="37:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:21"><if pos:start="39:9" pos:end="41:21">if <condition pos:start="39:12" pos:end="39:68">(<expr pos:start="39:13" pos:end="39:67"><operator pos:start="39:13" pos:end="39:13">(</operator><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:21">int32_t</name><operator pos:start="39:22" pos:end="39:22">)</operator><call pos:start="39:23" pos:end="39:43"><name pos:start="39:23" pos:end="39:31">GET_CACHE</name><argument_list pos:start="39:32" pos:end="39:43">(<argument pos:start="39:33" pos:end="39:34"><expr pos:start="39:33" pos:end="39:34"><name pos:start="39:33" pos:end="39:34">re</name></expr></argument>, <argument pos:start="39:37" pos:end="39:42"><expr pos:start="39:37" pos:end="39:42"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:42"><name pos:start="39:38" pos:end="39:38">s</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:42">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="39:44" pos:end="39:44">)</operator> <operator pos:start="39:46" pos:end="39:47">&lt;=</operator> <operator pos:start="39:49" pos:end="39:49">(</operator><name pos:start="39:50" pos:end="39:56">int32_t</name><operator pos:start="39:57" pos:end="39:57">)</operator><literal type="number" pos:start="39:58" pos:end="39:67">0xBFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:21"><block_content pos:start="41:13" pos:end="41:21">

            <goto pos:start="41:13" pos:end="41:21">goto <name pos:start="41:18" pos:end="41:20">end</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:47">/* now quantify &amp; encode AC coefficients */</comment>

    <for pos:start="49:5" pos:end="113:5">for <control pos:start="49:9" pos:end="49:12">(<init pos:start="49:10" pos:end="49:10">;</init><condition pos:start="49:11" pos:end="49:11">;</condition><incr/>)</control> <block pos:start="49:14" pos:end="113:5">{<block_content pos:start="51:9" pos:end="111:33">

        <expr_stmt pos:start="51:9" pos:end="51:78"><expr pos:start="51:9" pos:end="51:77"><call pos:start="51:9" pos:end="51:77"><name pos:start="51:9" pos:end="51:18">GET_RL_VLC</name><argument_list pos:start="51:19" pos:end="51:77">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">level</name></expr></argument>, <argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">run</name></expr></argument>, <argument pos:start="51:32" pos:end="51:33"><expr pos:start="51:32" pos:end="51:33"><name pos:start="51:32" pos:end="51:33">re</name></expr></argument>, <argument pos:start="51:36" pos:end="51:41"><expr pos:start="51:36" pos:end="51:41"><operator pos:start="51:36" pos:end="51:36">&amp;</operator><name pos:start="51:37" pos:end="51:41"><name pos:start="51:37" pos:end="51:37">s</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:41">gb</name></name></expr></argument>, <argument pos:start="51:44" pos:end="51:56"><expr pos:start="51:44" pos:end="51:56"><name pos:start="51:44" pos:end="51:56"><name pos:start="51:44" pos:end="51:45">rl</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:53">rl_vlc</name><index pos:start="51:54" pos:end="51:56">[<expr pos:start="51:55" pos:end="51:55"><literal type="number" pos:start="51:55" pos:end="51:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:59" pos:end="51:70"><expr pos:start="51:59" pos:end="51:70"><name pos:start="51:59" pos:end="51:70">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="51:73" pos:end="51:73"><expr pos:start="51:73" pos:end="51:73"><literal type="number" pos:start="51:73" pos:end="51:73">2</literal></expr></argument>, <argument pos:start="51:76" pos:end="51:76"><expr pos:start="51:76" pos:end="51:76"><literal type="number" pos:start="51:76" pos:end="51:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="55:9" pos:end="99:9"><if pos:start="55:9" pos:end="69:9">if <condition pos:start="55:12" pos:end="55:23">(<expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:17">level</name> <operator pos:start="55:19" pos:end="55:20">!=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>)</condition> <block pos:start="55:25" pos:end="69:9">{<block_content pos:start="57:13" pos:end="67:37">

            <expr_stmt pos:start="57:13" pos:end="57:21"><expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:13">i</name> <operator pos:start="57:15" pos:end="57:16">+=</operator> <name pos:start="57:18" pos:end="57:20">run</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><call pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:33">check_scantable_index</name><argument_list pos:start="59:34" pos:end="59:39">(<argument pos:start="59:35" pos:end="59:35"><expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">s</name></expr></argument>, <argument pos:start="59:38" pos:end="59:38"><expr pos:start="59:38" pos:end="59:38"><name pos:start="59:38" pos:end="59:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:13">j</name>  <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:29"><name pos:start="61:18" pos:end="61:26">scantable</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:52"><expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:17">level</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><operator pos:start="63:22" pos:end="63:22">(</operator><name pos:start="63:23" pos:end="63:27">level</name> <operator pos:start="63:29" pos:end="63:29">*</operator> <literal type="number" pos:start="63:31" pos:end="63:33">2</literal> <operator pos:start="63:33" pos:end="63:33">+</operator> <literal type="number" pos:start="63:35" pos:end="63:35">1</literal><operator pos:start="63:36" pos:end="63:36">)</operator> <operator pos:start="63:38" pos:end="63:38">*</operator> <name pos:start="63:40" pos:end="63:45">qscale</name><operator pos:start="63:46" pos:end="63:46">)</operator> <operator pos:start="63:48" pos:end="63:49">&gt;&gt;</operator> <literal type="number" pos:start="63:51" pos:end="63:51">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:84"><expr pos:start="65:13" pos:end="65:83"><name pos:start="65:13" pos:end="65:17">level</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <operator pos:start="65:21" pos:end="65:21">(</operator><name pos:start="65:22" pos:end="65:26">level</name> <operator pos:start="65:28" pos:end="65:28">^</operator> <call pos:start="65:30" pos:end="65:54"><name pos:start="65:30" pos:end="65:39">SHOW_SBITS</name><argument_list pos:start="65:40" pos:end="65:54">(<argument pos:start="65:41" pos:end="65:42"><expr pos:start="65:41" pos:end="65:42"><name pos:start="65:41" pos:end="65:42">re</name></expr></argument>, <argument pos:start="65:45" pos:end="65:50"><expr pos:start="65:45" pos:end="65:50"><operator pos:start="65:45" pos:end="65:45">&amp;</operator><name pos:start="65:46" pos:end="65:50"><name pos:start="65:46" pos:end="65:46">s</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:50">gb</name></name></expr></argument>, <argument pos:start="65:53" pos:end="65:53"><expr pos:start="65:53" pos:end="65:53"><literal type="number" pos:start="65:53" pos:end="65:53">1</literal></expr></argument>)</argument_list></call><operator pos:start="65:55" pos:end="65:55">)</operator> <operator pos:start="65:57" pos:end="65:57">-</operator> <call pos:start="65:59" pos:end="65:83"><name pos:start="65:59" pos:end="65:68">SHOW_SBITS</name><argument_list pos:start="65:69" pos:end="65:83">(<argument pos:start="65:70" pos:end="65:71"><expr pos:start="65:70" pos:end="65:71"><name pos:start="65:70" pos:end="65:71">re</name></expr></argument>, <argument pos:start="65:74" pos:end="65:79"><expr pos:start="65:74" pos:end="65:79"><operator pos:start="65:74" pos:end="65:74">&amp;</operator><name pos:start="65:75" pos:end="65:79"><name pos:start="65:75" pos:end="65:75">s</name><operator pos:start="65:76" pos:end="65:77">-&gt;</operator><name pos:start="65:78" pos:end="65:79">gb</name></name></expr></argument>, <argument pos:start="65:82" pos:end="65:82"><expr pos:start="65:82" pos:end="65:82"><literal type="number" pos:start="65:82" pos:end="65:82">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:21">SKIP_BITS</name><argument_list pos:start="67:22" pos:end="67:36">(<argument pos:start="67:23" pos:end="67:24"><expr pos:start="67:23" pos:end="67:24"><name pos:start="67:23" pos:end="67:24">re</name></expr></argument>, <argument pos:start="67:27" pos:end="67:32"><expr pos:start="67:27" pos:end="67:32"><operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:32"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:32">gb</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:35"><expr pos:start="67:35" pos:end="67:35"><literal type="number" pos:start="67:35" pos:end="67:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="99:9">else <block pos:start="69:16" pos:end="99:9">{<block_content pos:start="73:13" pos:end="97:13">

            <comment type="block" pos:start="71:13" pos:end="71:24">/* escape */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:48"><expr pos:start="73:13" pos:end="73:47"><name pos:start="73:13" pos:end="73:15">run</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:43"><name pos:start="73:19" pos:end="73:28">SHOW_UBITS</name><argument_list pos:start="73:29" pos:end="73:43">(<argument pos:start="73:30" pos:end="73:31"><expr pos:start="73:30" pos:end="73:31"><name pos:start="73:30" pos:end="73:31">re</name></expr></argument>, <argument pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:39"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:39"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:39">gb</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:42"><expr pos:start="73:42" pos:end="73:42"><literal type="number" pos:start="73:42" pos:end="73:42">6</literal></expr></argument>)</argument_list></call> <operator pos:start="73:45" pos:end="73:45">+</operator> <literal type="number" pos:start="73:47" pos:end="73:47">1</literal></expr>;</expr_stmt> <expr_stmt pos:start="73:50" pos:end="73:79"><expr pos:start="73:50" pos:end="73:78"><call pos:start="73:50" pos:end="73:78"><name pos:start="73:50" pos:end="73:63">LAST_SKIP_BITS</name><argument_list pos:start="73:64" pos:end="73:78">(<argument pos:start="73:65" pos:end="73:66"><expr pos:start="73:65" pos:end="73:66"><name pos:start="73:65" pos:end="73:66">re</name></expr></argument>, <argument pos:start="73:69" pos:end="73:74"><expr pos:start="73:69" pos:end="73:74"><operator pos:start="73:69" pos:end="73:69">&amp;</operator><name pos:start="73:70" pos:end="73:74"><name pos:start="73:70" pos:end="73:70">s</name><operator pos:start="73:71" pos:end="73:72">-&gt;</operator><name pos:start="73:73" pos:end="73:74">gb</name></name></expr></argument>, <argument pos:start="73:77" pos:end="73:77"><expr pos:start="73:77" pos:end="73:77"><literal type="number" pos:start="73:77" pos:end="73:77">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:37"><expr pos:start="75:13" pos:end="75:36"><call pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:24">UPDATE_CACHE</name><argument_list pos:start="75:25" pos:end="75:36">(<argument pos:start="75:26" pos:end="75:27"><expr pos:start="75:26" pos:end="75:27"><name pos:start="75:26" pos:end="75:27">re</name></expr></argument>, <argument pos:start="75:30" pos:end="75:35"><expr pos:start="75:30" pos:end="75:35"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:35"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:47"><expr pos:start="77:13" pos:end="77:46"><name pos:start="77:13" pos:end="77:17">level</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <call pos:start="77:21" pos:end="77:46"><name pos:start="77:21" pos:end="77:30">SHOW_SBITS</name><argument_list pos:start="77:31" pos:end="77:46">(<argument pos:start="77:32" pos:end="77:33"><expr pos:start="77:32" pos:end="77:33"><name pos:start="77:32" pos:end="77:33">re</name></expr></argument>, <argument pos:start="77:36" pos:end="77:41"><expr pos:start="77:36" pos:end="77:41"><operator pos:start="77:36" pos:end="77:36">&amp;</operator><name pos:start="77:37" pos:end="77:41"><name pos:start="77:37" pos:end="77:37">s</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:41">gb</name></name></expr></argument>, <argument pos:start="77:44" pos:end="77:45"><expr pos:start="77:44" pos:end="77:45"><literal type="number" pos:start="77:44" pos:end="77:45">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="77:49" pos:end="77:74"><expr pos:start="77:49" pos:end="77:73"><call pos:start="77:49" pos:end="77:73"><name pos:start="77:49" pos:end="77:57">SKIP_BITS</name><argument_list pos:start="77:58" pos:end="77:73">(<argument pos:start="77:59" pos:end="77:60"><expr pos:start="77:59" pos:end="77:60"><name pos:start="77:59" pos:end="77:60">re</name></expr></argument>, <argument pos:start="77:63" pos:end="77:68"><expr pos:start="77:63" pos:end="77:68"><operator pos:start="77:63" pos:end="77:63">&amp;</operator><name pos:start="77:64" pos:end="77:68"><name pos:start="77:64" pos:end="77:64">s</name><operator pos:start="77:65" pos:end="77:66">-&gt;</operator><name pos:start="77:67" pos:end="77:68">gb</name></name></expr></argument>, <argument pos:start="77:71" pos:end="77:72"><expr pos:start="77:71" pos:end="77:72"><literal type="number" pos:start="77:71" pos:end="77:72">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:21"><expr pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:13">i</name> <operator pos:start="81:15" pos:end="81:16">+=</operator> <name pos:start="81:18" pos:end="81:20">run</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:40"><expr pos:start="83:13" pos:end="83:39"><call pos:start="83:13" pos:end="83:39"><name pos:start="83:13" pos:end="83:33">check_scantable_index</name><argument_list pos:start="83:34" pos:end="83:39">(<argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">s</name></expr></argument>, <argument pos:start="83:38" pos:end="83:38"><expr pos:start="83:38" pos:end="83:38"><name pos:start="83:38" pos:end="83:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:30"><expr pos:start="85:13" pos:end="85:29"><name pos:start="85:13" pos:end="85:13">j</name>  <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:29"><name pos:start="85:18" pos:end="85:26">scantable</name><index pos:start="85:27" pos:end="85:29">[<expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="97:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="87:26">(<expr pos:start="87:17" pos:end="87:25"><name pos:start="87:17" pos:end="87:21">level</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <literal type="number" pos:start="87:25" pos:end="87:25">0</literal></expr>)</condition> <block pos:start="87:28" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:31">

                <expr_stmt pos:start="89:17" pos:end="89:57"><expr pos:start="89:17" pos:end="89:56"><name pos:start="89:17" pos:end="89:21">level</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <operator pos:start="89:25" pos:end="89:25">(</operator><operator pos:start="89:26" pos:end="89:26">(</operator><operator pos:start="89:27" pos:end="89:27">-</operator><name pos:start="89:28" pos:end="89:32">level</name> <operator pos:start="89:34" pos:end="89:34">*</operator> <literal type="number" pos:start="89:36" pos:end="89:38">2</literal> <operator pos:start="89:38" pos:end="89:38">+</operator> <literal type="number" pos:start="89:40" pos:end="89:40">1</literal><operator pos:start="89:41" pos:end="89:41">)</operator> <operator pos:start="89:43" pos:end="89:43">*</operator> <name pos:start="89:45" pos:end="89:50">qscale</name><operator pos:start="89:51" pos:end="89:51">)</operator> <operator pos:start="89:53" pos:end="89:54">&gt;&gt;</operator> <literal type="number" pos:start="89:56" pos:end="89:56">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:31"><expr pos:start="91:17" pos:end="91:30"><name pos:start="91:17" pos:end="91:21">level</name> <operator pos:start="91:23" pos:end="91:23">=</operator> <operator pos:start="91:25" pos:end="91:25">-</operator><name pos:start="91:26" pos:end="91:30">level</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="93:15" pos:end="97:13">else <block pos:start="93:20" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:56">

                <expr_stmt pos:start="95:17" pos:end="95:56"><expr pos:start="95:17" pos:end="95:55"><name pos:start="95:17" pos:end="95:21">level</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <operator pos:start="95:25" pos:end="95:25">(</operator><operator pos:start="95:26" pos:end="95:26">(</operator><name pos:start="95:27" pos:end="95:31">level</name> <operator pos:start="95:33" pos:end="95:33">*</operator> <literal type="number" pos:start="95:35" pos:end="95:37">2</literal> <operator pos:start="95:37" pos:end="95:37">+</operator> <literal type="number" pos:start="95:39" pos:end="95:39">1</literal><operator pos:start="95:40" pos:end="95:40">)</operator> <operator pos:start="95:42" pos:end="95:42">*</operator> <name pos:start="95:44" pos:end="95:49">qscale</name><operator pos:start="95:50" pos:end="95:50">)</operator> <operator pos:start="95:52" pos:end="95:53">&gt;&gt;</operator> <literal type="number" pos:start="95:55" pos:end="95:55">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:25"><expr pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:13">block</name><index pos:start="103:14" pos:end="103:16">[<expr pos:start="103:15" pos:end="103:15"><name pos:start="103:15" pos:end="103:15">j</name></expr>]</index></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:24">level</name></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="107:18"><if pos:start="105:9" pos:end="107:18">if <condition pos:start="105:12" pos:end="105:68">(<expr pos:start="105:13" pos:end="105:67"><operator pos:start="105:13" pos:end="105:13">(</operator><operator pos:start="105:14" pos:end="105:14">(</operator><name pos:start="105:15" pos:end="105:21">int32_t</name><operator pos:start="105:22" pos:end="105:22">)</operator><call pos:start="105:23" pos:end="105:43"><name pos:start="105:23" pos:end="105:31">GET_CACHE</name><argument_list pos:start="105:32" pos:end="105:43">(<argument pos:start="105:33" pos:end="105:34"><expr pos:start="105:33" pos:end="105:34"><name pos:start="105:33" pos:end="105:34">re</name></expr></argument>, <argument pos:start="105:37" pos:end="105:42"><expr pos:start="105:37" pos:end="105:42"><operator pos:start="105:37" pos:end="105:37">&amp;</operator><name pos:start="105:38" pos:end="105:42"><name pos:start="105:38" pos:end="105:38">s</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:42">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="105:44" pos:end="105:44">)</operator> <operator pos:start="105:46" pos:end="105:47">&lt;=</operator> <operator pos:start="105:49" pos:end="105:49">(</operator><name pos:start="105:50" pos:end="105:56">int32_t</name><operator pos:start="105:57" pos:end="105:57">)</operator><literal type="number" pos:start="105:58" pos:end="105:67">0xBFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:18"><block_content pos:start="107:13" pos:end="107:18">

            <break pos:start="107:13" pos:end="107:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:33"><expr pos:start="111:9" pos:end="111:32"><call pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:20">UPDATE_CACHE</name><argument_list pos:start="111:21" pos:end="111:32">(<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><name pos:start="111:22" pos:end="111:23">re</name></expr></argument>, <argument pos:start="111:26" pos:end="111:31"><expr pos:start="111:26" pos:end="111:31"><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:31"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<label pos:start="115:1" pos:end="115:4"><name pos:start="115:1" pos:end="115:3">end</name>:</label>

    <expr_stmt pos:start="117:5" pos:end="117:34"><expr pos:start="117:5" pos:end="117:33"><call pos:start="117:5" pos:end="117:33"><name pos:start="117:5" pos:end="117:18">LAST_SKIP_BITS</name><argument_list pos:start="117:19" pos:end="117:33">(<argument pos:start="117:20" pos:end="117:21"><expr pos:start="117:20" pos:end="117:21"><name pos:start="117:20" pos:end="117:21">re</name></expr></argument>, <argument pos:start="117:24" pos:end="117:29"><expr pos:start="117:24" pos:end="117:29"><operator pos:start="117:24" pos:end="117:24">&amp;</operator><name pos:start="117:25" pos:end="117:29"><name pos:start="117:25" pos:end="117:25">s</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:29">gb</name></name></expr></argument>, <argument pos:start="117:32" pos:end="117:32"><expr pos:start="117:32" pos:end="117:32"><literal type="number" pos:start="117:32" pos:end="117:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:29"><expr pos:start="119:5" pos:end="119:28"><call pos:start="119:5" pos:end="119:28"><name pos:start="119:5" pos:end="119:16">CLOSE_READER</name><argument_list pos:start="119:17" pos:end="119:28">(<argument pos:start="119:18" pos:end="119:19"><expr pos:start="119:18" pos:end="119:19"><name pos:start="119:18" pos:end="119:19">re</name></expr></argument>, <argument pos:start="119:22" pos:end="119:27"><expr pos:start="119:22" pos:end="119:27"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:27"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:31"><expr pos:start="121:5" pos:end="121:30"><name pos:start="121:5" pos:end="121:26"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:23">block_last_index</name><index pos:start="121:24" pos:end="121:26">[<expr pos:start="121:25" pos:end="121:25"><name pos:start="121:25" pos:end="121:25">n</name></expr>]</index></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:30">i</name></expr>;</expr_stmt>

    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
