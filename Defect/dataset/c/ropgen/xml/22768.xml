<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22768.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:26">nabm_readw</name> <parameter_list pos:start="1:28" pos:end="1:56">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:50">uint32_t</name></type> <name pos:start="1:52" pos:end="1:55">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PCIAC97LinkState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">d</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AC97LinkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:31">= <expr pos:start="7:24" pos:end="7:31"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:25">d</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">ac97</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AC97BusMasterRegs</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">r</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">index</name> <init pos:start="11:20" pos:end="11:38">= <expr pos:start="11:22" pos:end="11:38"><name pos:start="11:22" pos:end="11:25">addr</name> <operator pos:start="11:27" pos:end="11:27">-</operator> <name pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">base</name><index pos:start="11:36" pos:end="11:38">[<expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">val</name> <init pos:start="13:18" pos:end="13:22">= <expr pos:start="13:20" pos:end="13:22"><operator pos:start="13:20" pos:end="13:20">~</operator><literal type="number" pos:start="13:21" pos:end="13:22">0U</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="53:5">switch <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">index</name></expr>)</condition> <block pos:start="17:20" pos:end="53:5">{<block_content pos:start="19:5" pos:end="51:14">

    <case pos:start="19:5" pos:end="19:15">case <expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:14">PI_SR</name></expr>:</case>

    <case pos:start="21:5" pos:end="21:15">case <expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:14">PO_SR</name></expr>:</case>

    <case pos:start="23:5" pos:end="23:15">case <expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:14">MC_SR</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:40"><expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:9">r</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <operator pos:start="25:13" pos:end="25:13">&amp;</operator><name pos:start="25:14" pos:end="25:39"><name pos:start="25:14" pos:end="25:14">s</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:23">bm_regs</name><index pos:start="25:24" pos:end="25:39">[<expr pos:start="25:25" pos:end="25:38"><call pos:start="25:25" pos:end="25:38"><name pos:start="25:25" pos:end="25:30">GET_BM</name> <argument_list pos:start="25:32" pos:end="25:38">(<argument pos:start="25:33" pos:end="25:37"><expr pos:start="25:33" pos:end="25:37"><name pos:start="25:33" pos:end="25:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:11">val</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:15">r</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:19">sr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:13">dolog</name> <argument_list pos:start="29:15" pos:end="29:54">(<argument pos:start="29:16" pos:end="29:32"><expr pos:start="29:16" pos:end="29:32"><literal type="string" pos:start="29:16" pos:end="29:32">"SR[%d] -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="29:35" pos:end="29:48"><expr pos:start="29:35" pos:end="29:48"><call pos:start="29:35" pos:end="29:48"><name pos:start="29:35" pos:end="29:40">GET_BM</name> <argument_list pos:start="29:42" pos:end="29:48">(<argument pos:start="29:43" pos:end="29:47"><expr pos:start="29:43" pos:end="29:47"><name pos:start="29:43" pos:end="29:47">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:51" pos:end="29:53"><expr pos:start="29:51" pos:end="29:53"><name pos:start="29:51" pos:end="29:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:17">case <expr pos:start="33:10" pos:end="33:16"><name pos:start="33:10" pos:end="33:16">PI_PICB</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:17">case <expr pos:start="35:10" pos:end="35:16"><name pos:start="35:10" pos:end="35:16">PO_PICB</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:17">case <expr pos:start="37:10" pos:end="37:16"><name pos:start="37:10" pos:end="37:16">MC_PICB</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:9">r</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">&amp;</operator><name pos:start="39:14" pos:end="39:39"><name pos:start="39:14" pos:end="39:14">s</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:23">bm_regs</name><index pos:start="39:24" pos:end="39:39">[<expr pos:start="39:25" pos:end="39:38"><call pos:start="39:25" pos:end="39:38"><name pos:start="39:25" pos:end="39:30">GET_BM</name> <argument_list pos:start="39:32" pos:end="39:38">(<argument pos:start="39:33" pos:end="39:37"><expr pos:start="39:33" pos:end="39:37"><name pos:start="39:33" pos:end="39:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">val</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:21"><name pos:start="41:15" pos:end="41:15">r</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:21">picb</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:57"><expr pos:start="43:9" pos:end="43:56"><call pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:13">dolog</name> <argument_list pos:start="43:15" pos:end="43:56">(<argument pos:start="43:16" pos:end="43:34"><expr pos:start="43:16" pos:end="43:34"><literal type="string" pos:start="43:16" pos:end="43:34">"PICB[%d] -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="43:37" pos:end="43:50"><expr pos:start="43:37" pos:end="43:50"><call pos:start="43:37" pos:end="43:50"><name pos:start="43:37" pos:end="43:42">GET_BM</name> <argument_list pos:start="43:44" pos:end="43:50">(<argument pos:start="43:45" pos:end="43:49"><expr pos:start="43:45" pos:end="43:49"><name pos:start="43:45" pos:end="43:49">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:53" pos:end="43:55"><expr pos:start="43:53" pos:end="43:55"><name pos:start="43:53" pos:end="43:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <default pos:start="47:5" pos:end="47:12">default:</default>

        <expr_stmt pos:start="49:9" pos:end="49:55"><expr pos:start="49:9" pos:end="49:54"><call pos:start="49:9" pos:end="49:54"><name pos:start="49:9" pos:end="49:13">dolog</name> <argument_list pos:start="49:15" pos:end="49:54">(<argument pos:start="49:16" pos:end="49:42"><expr pos:start="49:16" pos:end="49:42"><literal type="string" pos:start="49:16" pos:end="49:42">"U nabm readw %#x -&gt; %#x\n"</literal></expr></argument>, <argument pos:start="49:45" pos:end="49:48"><expr pos:start="49:45" pos:end="49:48"><name pos:start="49:45" pos:end="49:48">addr</name></expr></argument>, <argument pos:start="49:51" pos:end="49:53"><expr pos:start="49:51" pos:end="49:53"><name pos:start="49:51" pos:end="49:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
