<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/334.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">find_vdi_name</name><parameter_list pos:start="1:25" pos:end="3:68">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:42">BDRVSheepdogState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:61">filename</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:78"><decl pos:start="1:64" pos:end="1:78"><type pos:start="1:64" pos:end="1:78"><name pos:start="1:64" pos:end="1:71">uint32_t</name></type> <name pos:start="1:73" pos:end="1:78">snapid</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:34"><decl pos:start="3:26" pos:end="3:34"><type pos:start="3:26" pos:end="3:34"><name pos:start="3:26" pos:end="3:29">char</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:34">tag</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:49"><decl pos:start="3:37" pos:end="3:49"><type pos:start="3:37" pos:end="3:49"><name pos:start="3:37" pos:end="3:44">uint32_t</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:49">vid</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:67"><decl pos:start="3:52" pos:end="3:67"><type pos:start="3:52" pos:end="3:67"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:67">for_snapshot</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:15">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:15">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">SheepdogVdiReq</name></type> <name pos:start="9:20" pos:end="9:22">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">SheepdogVdiRsp</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">rsp</name> <init pos:start="11:25" pos:end="11:48">= <expr pos:start="11:27" pos:end="11:48"><operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:41">SheepdogVdiRsp</name> <operator pos:start="11:43" pos:end="11:43">*</operator><operator pos:start="11:44" pos:end="11:44">)</operator><operator pos:start="11:45" pos:end="11:45">&amp;</operator><name pos:start="11:46" pos:end="11:48">hdr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">wlen</name></decl>, <decl pos:start="13:24" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:24" pos:end="13:27">rlen</name> <init pos:start="13:29" pos:end="13:31">= <expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:49"><name pos:start="15:10" pos:end="15:12">buf</name><index pos:start="15:13" pos:end="15:49">[<expr pos:start="15:14" pos:end="15:48"><name pos:start="15:14" pos:end="15:27">SD_MAX_VDI_LEN</name> <operator pos:start="15:29" pos:end="15:29">+</operator> <name pos:start="15:31" pos:end="15:48">SD_MAX_VDI_TAG_LEN</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:6">fd</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:42"><name pos:start="19:10" pos:end="19:24">connect_to_sdog</name><argument_list pos:start="19:25" pos:end="19:42">(<argument pos:start="19:26" pos:end="19:32"><expr pos:start="19:26" pos:end="19:32"><name pos:start="19:26" pos:end="19:32"><name pos:start="19:26" pos:end="19:26">s</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">addr</name></name></expr></argument>, <argument pos:start="19:35" pos:end="19:41"><expr pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:41">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:10">fd</name> <operator pos:start="21:12" pos:end="21:12">&lt;</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>)</condition> <block pos:start="21:17" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">fd</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><call pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:31">(<argument pos:start="29:12" pos:end="29:14"><expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">buf</name></expr></argument>, <argument pos:start="29:17" pos:end="29:17"><expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr></argument>, <argument pos:start="29:20" pos:end="29:30"><expr pos:start="29:20" pos:end="29:30"><sizeof pos:start="29:20" pos:end="29:30">sizeof<argument_list pos:start="29:26" pos:end="29:30">(<argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><call pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:11">strncpy</name><argument_list pos:start="31:12" pos:end="31:42">(<argument pos:start="31:13" pos:end="31:15"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">buf</name></expr></argument>, <argument pos:start="31:18" pos:end="31:25"><expr pos:start="31:18" pos:end="31:25"><name pos:start="31:18" pos:end="31:25">filename</name></expr></argument>, <argument pos:start="31:28" pos:end="31:41"><expr pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:41">SD_MAX_VDI_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><call pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:11">strncpy</name><argument_list pos:start="33:12" pos:end="33:58">(<argument pos:start="33:13" pos:end="33:32"><expr pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:15">buf</name> <operator pos:start="33:17" pos:end="33:17">+</operator> <name pos:start="33:19" pos:end="33:32">SD_MAX_VDI_LEN</name></expr></argument>, <argument pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:37">tag</name></expr></argument>, <argument pos:start="33:40" pos:end="33:57"><expr pos:start="33:40" pos:end="33:57"><name pos:start="33:40" pos:end="33:57">SD_MAX_VDI_TAG_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:32">(<argument pos:start="37:12" pos:end="37:15"><expr pos:start="37:12" pos:end="37:15"><operator pos:start="37:12" pos:end="37:12">&amp;</operator><name pos:start="37:13" pos:end="37:15">hdr</name></expr></argument>, <argument pos:start="37:18" pos:end="37:18"><expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr></argument>, <argument pos:start="37:21" pos:end="37:31"><expr pos:start="37:21" pos:end="37:31"><sizeof pos:start="37:21" pos:end="37:31">sizeof<argument_list pos:start="37:27" pos:end="37:31">(<argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:21">(<expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:20">for_snapshot</name></expr>)</condition> <block pos:start="39:23" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:40">

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">hdr</name><operator pos:start="41:12" pos:end="41:12">.</operator><name pos:start="41:13" pos:end="41:18">opcode</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:39">SD_OP_GET_VDI_INFO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:36">

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:11">hdr</name><operator pos:start="45:12" pos:end="45:12">.</operator><name pos:start="45:13" pos:end="45:18">opcode</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:35">SD_OP_LOCK_VDI</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:8">wlen</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <name pos:start="49:12" pos:end="49:25">SD_MAX_VDI_LEN</name> <operator pos:start="49:27" pos:end="49:27">+</operator> <name pos:start="49:29" pos:end="49:46">SD_MAX_VDI_TAG_LEN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:7">hdr</name><operator pos:start="51:8" pos:end="51:8">.</operator><name pos:start="51:9" pos:end="51:17">proto_ver</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:32">SD_PROTO_VER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:7">hdr</name><operator pos:start="53:8" pos:end="53:8">.</operator><name pos:start="53:9" pos:end="53:19">data_length</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:26">wlen</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:7">hdr</name><operator pos:start="55:8" pos:end="55:8">.</operator><name pos:start="55:9" pos:end="55:14">snapid</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:23">snapid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:7">hdr</name><operator pos:start="57:8" pos:end="57:8">.</operator><name pos:start="57:9" pos:end="57:13">flags</name></name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:33">SD_FLAG_CMD_WRITE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:61"><expr pos:start="61:5" pos:end="61:60"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:60"><name pos:start="61:11" pos:end="61:16">do_req</name><argument_list pos:start="61:17" pos:end="61:60">(<argument pos:start="61:18" pos:end="61:19"><expr pos:start="61:18" pos:end="61:19"><name pos:start="61:18" pos:end="61:19">fd</name></expr></argument>, <argument pos:start="61:22" pos:end="61:40"><expr pos:start="61:22" pos:end="61:40"><operator pos:start="61:22" pos:end="61:22">(</operator><name pos:start="61:23" pos:end="61:33">SheepdogReq</name> <operator pos:start="61:35" pos:end="61:35">*</operator><operator pos:start="61:36" pos:end="61:36">)</operator><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:40">hdr</name></expr></argument>, <argument pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:45">buf</name></expr></argument>, <argument pos:start="61:48" pos:end="61:52"><expr pos:start="61:48" pos:end="61:52"><operator pos:start="61:48" pos:end="61:48">&amp;</operator><name pos:start="61:49" pos:end="61:52">wlen</name></expr></argument>, <argument pos:start="61:55" pos:end="61:59"><expr pos:start="61:55" pos:end="61:59"><operator pos:start="61:55" pos:end="61:55">&amp;</operator><name pos:start="61:56" pos:end="61:59">rlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:12">(<expr pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">ret</name></expr>)</condition> <block pos:start="63:14" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:17">

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="89:5"><if pos:start="71:5" pos:end="89:5">if <condition pos:start="71:8" pos:end="71:38">(<expr pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:11">rsp</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:19">result</name></name> <operator pos:start="71:21" pos:end="71:22">!=</operator> <name pos:start="71:24" pos:end="71:37">SD_RES_SUCCESS</name></expr>)</condition> <block pos:start="71:40" pos:end="89:5">{<block_content pos:start="73:9" pos:end="87:17">

        <expr_stmt pos:start="73:9" pos:end="75:70"><expr pos:start="73:9" pos:end="75:69"><call pos:start="73:9" pos:end="75:69"><name pos:start="73:9" pos:end="73:20">error_report</name><argument_list pos:start="73:21" pos:end="75:69">(<argument pos:start="73:22" pos:end="73:56"><expr pos:start="73:22" pos:end="73:56"><literal type="string" pos:start="73:22" pos:end="73:56">"cannot get vdi info, %s, %s %d %s"</literal></expr></argument>,

                     <argument pos:start="75:22" pos:end="75:45"><expr pos:start="75:22" pos:end="75:45"><call pos:start="75:22" pos:end="75:45"><name pos:start="75:22" pos:end="75:32">sd_strerror</name><argument_list pos:start="75:33" pos:end="75:45">(<argument pos:start="75:34" pos:end="75:44"><expr pos:start="75:34" pos:end="75:44"><name pos:start="75:34" pos:end="75:44"><name pos:start="75:34" pos:end="75:36">rsp</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:44">result</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:48" pos:end="75:55"><expr pos:start="75:48" pos:end="75:55"><name pos:start="75:48" pos:end="75:55">filename</name></expr></argument>, <argument pos:start="75:58" pos:end="75:63"><expr pos:start="75:58" pos:end="75:63"><name pos:start="75:58" pos:end="75:63">snapid</name></expr></argument>, <argument pos:start="75:66" pos:end="75:68"><expr pos:start="75:66" pos:end="75:68"><name pos:start="75:66" pos:end="75:68">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="85:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:41">(<expr pos:start="77:13" pos:end="77:40"><name pos:start="77:13" pos:end="77:23"><name pos:start="77:13" pos:end="77:15">rsp</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:23">result</name></name> <operator pos:start="77:25" pos:end="77:26">==</operator> <name pos:start="77:28" pos:end="77:40">SD_RES_NO_VDI</name></expr>)</condition> <block pos:start="77:43" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:26">

            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <operator pos:start="79:19" pos:end="79:19">-</operator><name pos:start="79:20" pos:end="79:25">ENOENT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="85:9">else <block pos:start="81:16" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:23">

            <expr_stmt pos:start="83:13" pos:end="83:23"><expr pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <operator pos:start="83:19" pos:end="83:19">-</operator><name pos:start="83:20" pos:end="83:22">EIO</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <goto pos:start="87:9" pos:end="87:17">goto <name pos:start="87:14" pos:end="87:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:23"><expr pos:start="91:5" pos:end="91:22"><operator pos:start="91:5" pos:end="91:5">*</operator><name pos:start="91:6" pos:end="91:8">vid</name> <operator pos:start="91:10" pos:end="91:10">=</operator> <name pos:start="91:12" pos:end="91:22"><name pos:start="91:12" pos:end="91:14">rsp</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:22">vdi_id</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:12"><expr pos:start="95:5" pos:end="95:11"><name pos:start="95:5" pos:end="95:7">ret</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <literal type="number" pos:start="95:11" pos:end="95:11">0</literal></expr>;</expr_stmt>

<label pos:start="97:1" pos:end="97:4"><name pos:start="97:1" pos:end="97:3">out</name>:</label>

    <expr_stmt pos:start="99:5" pos:end="99:20"><expr pos:start="99:5" pos:end="99:19"><call pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:15">closesocket</name><argument_list pos:start="99:16" pos:end="99:19">(<argument pos:start="99:17" pos:end="99:18"><expr pos:start="99:17" pos:end="99:18"><name pos:start="99:17" pos:end="99:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:15">return <expr pos:start="101:12" pos:end="101:14"><name pos:start="101:12" pos:end="101:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
