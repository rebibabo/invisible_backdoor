<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3882.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">mirror_complete</name><parameter_list pos:start="1:28" pos:end="1:56">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:36">BlockJob</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">job</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:48">Error</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier><modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:26">

    <decl_stmt pos:start="5:5" pos:end="5:66"><decl pos:start="5:5" pos:end="5:65"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MirrorBlockJob</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:65">= <expr pos:start="5:25" pos:end="5:65"><call pos:start="5:25" pos:end="5:65"><name pos:start="5:25" pos:end="5:36">container_of</name><argument_list pos:start="5:37" pos:end="5:65">(<argument pos:start="5:38" pos:end="5:40"><expr pos:start="5:38" pos:end="5:40"><name pos:start="5:38" pos:end="5:40">job</name></expr></argument>, <argument pos:start="5:43" pos:end="5:56"><expr pos:start="5:43" pos:end="5:56"><name pos:start="5:43" pos:end="5:56">MirrorBlockJob</name></expr></argument>, <argument pos:start="5:59" pos:end="5:64"><expr pos:start="5:59" pos:end="5:64"><name pos:start="5:59" pos:end="5:64">common</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:44"><expr pos:start="11:5" pos:end="11:43"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:43"><name pos:start="11:11" pos:end="11:32">bdrv_open_backing_file</name><argument_list pos:start="11:33" pos:end="11:43">(<argument pos:start="11:34" pos:end="11:42"><expr pos:start="11:34" pos:end="11:42"><name pos:start="11:34" pos:end="11:42"><name pos:start="11:34" pos:end="11:34">s</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:42">target</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">&lt;</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>)</condition> <block pos:start="13:18" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:15">

        <decl_stmt pos:start="15:9" pos:end="15:40"><decl pos:start="15:9" pos:end="15:39"><type pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">char</name></type> <name pos:start="15:14" pos:end="15:39"><name pos:start="15:14" pos:end="15:29">backing_filename</name><index pos:start="15:30" pos:end="15:39">[<expr pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:38">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="19:65"><expr pos:start="17:9" pos:end="19:64"><call pos:start="17:9" pos:end="19:64"><name pos:start="17:9" pos:end="17:38">bdrv_get_full_backing_filename</name><argument_list pos:start="17:39" pos:end="19:64">(<argument pos:start="17:40" pos:end="17:48"><expr pos:start="17:40" pos:end="17:48"><name pos:start="17:40" pos:end="17:48"><name pos:start="17:40" pos:end="17:40">s</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:48">target</name></name></expr></argument>, <argument pos:start="17:51" pos:end="17:66"><expr pos:start="17:51" pos:end="17:66"><name pos:start="17:51" pos:end="17:66">backing_filename</name></expr></argument>,

                                       <argument pos:start="19:40" pos:end="19:63"><expr pos:start="19:40" pos:end="19:63"><sizeof pos:start="19:40" pos:end="19:63">sizeof<argument_list pos:start="19:46" pos:end="19:63">(<argument pos:start="19:47" pos:end="19:62"><expr pos:start="19:47" pos:end="19:62"><name pos:start="19:47" pos:end="19:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:65"><expr pos:start="21:9" pos:end="21:64"><call pos:start="21:9" pos:end="21:64"><name pos:start="21:9" pos:end="21:17">error_set</name><argument_list pos:start="21:18" pos:end="21:64">(<argument pos:start="21:19" pos:end="21:22"><expr pos:start="21:19" pos:end="21:22"><name pos:start="21:19" pos:end="21:22">errp</name></expr></argument>, <argument pos:start="21:25" pos:end="21:45"><expr pos:start="21:25" pos:end="21:45"><name pos:start="21:25" pos:end="21:45">QERR_OPEN_FILE_FAILED</name></expr></argument>, <argument pos:start="21:48" pos:end="21:63"><expr pos:start="21:48" pos:end="21:63"><name pos:start="21:48" pos:end="21:63">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:10">s</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:18">synced</name></name></expr>)</condition> <block pos:start="27:21" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:72"><expr pos:start="29:9" pos:end="29:71"><call pos:start="29:9" pos:end="29:71"><name pos:start="29:9" pos:end="29:17">error_set</name><argument_list pos:start="29:18" pos:end="29:71">(<argument pos:start="29:19" pos:end="29:22"><expr pos:start="29:19" pos:end="29:22"><name pos:start="29:19" pos:end="29:22">errp</name></expr></argument>, <argument pos:start="29:25" pos:end="29:48"><expr pos:start="29:25" pos:end="29:48"><name pos:start="29:25" pos:end="29:48">QERR_BLOCK_JOB_NOT_READY</name></expr></argument>, <argument pos:start="29:51" pos:end="29:70"><expr pos:start="29:51" pos:end="29:70"><name pos:start="29:51" pos:end="29:70"><name pos:start="29:51" pos:end="29:53">job</name><operator pos:start="29:54" pos:end="29:55">-&gt;</operator><name pos:start="29:56" pos:end="29:57">bs</name><operator pos:start="29:58" pos:end="29:59">-&gt;</operator><name pos:start="29:60" pos:end="29:70">device_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:22">should_complete</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:29">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><call pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:20">block_job_resume</name><argument_list pos:start="39:21" pos:end="39:25">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
