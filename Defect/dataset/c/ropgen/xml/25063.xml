<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25063.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">megasas_complete_frame</name><parameter_list pos:start="1:35" pos:end="1:69">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:47">MegasasState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:60">uint64_t</name></type> <name pos:start="1:62" pos:end="1:68">context</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:22">pci_dev</name> <init pos:start="5:24" pos:end="5:38">= <expr pos:start="5:26" pos:end="5:38"><call pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:35">PCI_DEVICE</name><argument_list pos:start="5:36" pos:end="5:38">(<argument pos:start="5:37" pos:end="5:37"><expr pos:start="5:37" pos:end="5:37"><name pos:start="5:37" pos:end="5:37">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">tail</name></decl>, <decl pos:start="7:15" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:26">queue_offset</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:30">/* Decrement busy count */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:14"><expr pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">busy</name></name><operator pos:start="13:12" pos:end="13:13">--</operator></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="59:5"><if pos:start="17:5" pos:end="59:5">if <condition pos:start="17:8" pos:end="17:26">(<expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:25">reply_queue_pa</name></name></expr>)</condition> <block pos:start="17:28" pos:end="59:5">{<block_content pos:start="29:9" pos:end="57:77">

        <comment type="block" pos:start="19:9" pos:end="27:11">/*

         * Put command on the reply queue.

         * Context is opaque, but emulation is running in

         * little endian. So convert it.

         */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:12">tail</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:34">reply_queue_head</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="47:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:35">(<expr pos:start="31:13" pos:end="31:34"><call pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:31">megasas_use_queue64</name><argument_list pos:start="31:32" pos:end="31:34">(<argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:37" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:67">

            <expr_stmt pos:start="33:13" pos:end="33:51"><expr pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:24">queue_offset</name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:31">tail</name> <operator pos:start="33:33" pos:end="33:33">*</operator> <sizeof pos:start="33:35" pos:end="33:50">sizeof<argument_list pos:start="33:41" pos:end="33:50">(<argument pos:start="33:42" pos:end="33:49"><expr pos:start="33:42" pos:end="33:49"><name pos:start="33:42" pos:end="33:49">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="37:67"><expr pos:start="35:13" pos:end="37:66"><call pos:start="35:13" pos:end="37:66"><name pos:start="35:13" pos:end="35:23">stq_le_phys</name><argument_list pos:start="35:24" pos:end="37:66">(<argument pos:start="35:25" pos:end="35:45"><expr pos:start="35:25" pos:end="35:45"><operator pos:start="35:25" pos:end="35:25">&amp;</operator><name pos:start="35:26" pos:end="35:45">address_space_memory</name></expr></argument>,

                        <argument pos:start="37:25" pos:end="37:56"><expr pos:start="37:25" pos:end="37:56"><name pos:start="37:25" pos:end="37:41"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:41">reply_queue_pa</name></name> <operator pos:start="37:43" pos:end="37:43">+</operator> <name pos:start="37:45" pos:end="37:56">queue_offset</name></expr></argument>, <argument pos:start="37:59" pos:end="37:65"><expr pos:start="37:59" pos:end="37:65"><name pos:start="37:59" pos:end="37:65">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="47:9">else <block pos:start="39:16" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:67">

            <expr_stmt pos:start="41:13" pos:end="41:51"><expr pos:start="41:13" pos:end="41:50"><name pos:start="41:13" pos:end="41:24">queue_offset</name> <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:31">tail</name> <operator pos:start="41:33" pos:end="41:33">*</operator> <sizeof pos:start="41:35" pos:end="41:50">sizeof<argument_list pos:start="41:41" pos:end="41:50">(<argument pos:start="41:42" pos:end="41:49"><expr pos:start="41:42" pos:end="41:49"><name pos:start="41:42" pos:end="41:49">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="45:67"><expr pos:start="43:13" pos:end="45:66"><call pos:start="43:13" pos:end="45:66"><name pos:start="43:13" pos:end="43:23">stl_le_phys</name><argument_list pos:start="43:24" pos:end="45:66">(<argument pos:start="43:25" pos:end="43:45"><expr pos:start="43:25" pos:end="43:45"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:45">address_space_memory</name></expr></argument>,

                        <argument pos:start="45:25" pos:end="45:56"><expr pos:start="45:25" pos:end="45:56"><name pos:start="45:25" pos:end="45:41"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:41">reply_queue_pa</name></name> <operator pos:start="45:43" pos:end="45:43">+</operator> <name pos:start="45:45" pos:end="45:56">queue_offset</name></expr></argument>, <argument pos:start="45:59" pos:end="45:65"><expr pos:start="45:59" pos:end="45:65"><name pos:start="45:59" pos:end="45:65">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:70"><expr pos:start="49:9" pos:end="49:69"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:27">reply_queue_head</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <call pos:start="49:31" pos:end="49:69"><name pos:start="49:31" pos:end="49:48">megasas_next_index</name><argument_list pos:start="49:49" pos:end="49:69">(<argument pos:start="49:50" pos:end="49:50"><expr pos:start="49:50" pos:end="49:50"><name pos:start="49:50" pos:end="49:50">s</name></expr></argument>, <argument pos:start="49:53" pos:end="49:56"><expr pos:start="49:53" pos:end="49:56"><name pos:start="49:53" pos:end="49:56">tail</name></expr></argument>, <argument pos:start="49:59" pos:end="49:68"><expr pos:start="49:59" pos:end="49:68"><name pos:start="49:59" pos:end="49:68"><name pos:start="49:59" pos:end="49:59">s</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:68">fw_cmds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:58"><expr pos:start="51:9" pos:end="53:57"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:27">reply_queue_tail</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <call pos:start="51:31" pos:end="53:57"><name pos:start="51:31" pos:end="51:41">ldl_le_phys</name><argument_list pos:start="51:42" pos:end="53:57">(<argument pos:start="51:43" pos:end="51:63"><expr pos:start="51:43" pos:end="51:63"><operator pos:start="51:43" pos:end="51:43">&amp;</operator><name pos:start="51:44" pos:end="51:63">address_space_memory</name></expr></argument>,

                                          <argument pos:start="53:43" pos:end="53:56"><expr pos:start="53:43" pos:end="53:56"><name pos:start="53:43" pos:end="53:56"><name pos:start="53:43" pos:end="53:43">s</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:56">consumer_pa</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:77"><expr pos:start="55:9" pos:end="57:76"><call pos:start="55:9" pos:end="57:76"><name pos:start="55:9" pos:end="55:33">trace_megasas_qf_complete</name><argument_list pos:start="55:34" pos:end="57:76">(<argument pos:start="55:35" pos:end="55:41"><expr pos:start="55:35" pos:end="55:41"><name pos:start="55:35" pos:end="55:41">context</name></expr></argument>, <argument pos:start="55:44" pos:end="55:62"><expr pos:start="55:44" pos:end="55:62"><name pos:start="55:44" pos:end="55:62"><name pos:start="55:44" pos:end="55:44">s</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:62">reply_queue_head</name></name></expr></argument>,

                                  <argument pos:start="57:35" pos:end="57:53"><expr pos:start="57:35" pos:end="57:53"><name pos:start="57:35" pos:end="57:53"><name pos:start="57:35" pos:end="57:35">s</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:53">reply_queue_tail</name></name></expr></argument>, <argument pos:start="57:56" pos:end="57:62"><expr pos:start="57:56" pos:end="57:62"><name pos:start="57:56" pos:end="57:62"><name pos:start="57:56" pos:end="57:56">s</name><operator pos:start="57:57" pos:end="57:58">-&gt;</operator><name pos:start="57:59" pos:end="57:62">busy</name></name></expr></argument>, <argument pos:start="57:65" pos:end="57:75"><expr pos:start="57:65" pos:end="57:75"><name pos:start="57:65" pos:end="57:75"><name pos:start="57:65" pos:end="57:65">s</name><operator pos:start="57:66" pos:end="57:67">-&gt;</operator><name pos:start="57:68" pos:end="57:75">doorbell</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="97:5"><if pos:start="63:5" pos:end="93:5">if <condition pos:start="63:8" pos:end="63:32">(<expr pos:start="63:9" pos:end="63:31"><call pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:28">megasas_intr_enabled</name><argument_list pos:start="63:29" pos:end="63:31">(<argument pos:start="63:30" pos:end="63:30"><expr pos:start="63:30" pos:end="63:30"><name pos:start="63:30" pos:end="63:30">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:34" pos:end="93:5">{<block_content pos:start="67:9" pos:end="91:9">

        <comment type="block" pos:start="65:9" pos:end="65:24">/* Notify HBA */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:22"><expr pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">doorbell</name></name><operator pos:start="67:20" pos:end="67:21">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="91:9"><if pos:start="69:9" pos:end="91:9">if <condition pos:start="69:12" pos:end="69:29">(<expr pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:23">doorbell</name></name> <operator pos:start="69:25" pos:end="69:26">==</operator> <literal type="number" pos:start="69:28" pos:end="69:28">1</literal></expr>)</condition> <block pos:start="69:31" pos:end="91:9">{<block_content pos:start="71:13" pos:end="89:13">

            <if_stmt pos:start="71:13" pos:end="89:13"><if pos:start="71:13" pos:end="77:13">if <condition pos:start="71:16" pos:end="71:38">(<expr pos:start="71:17" pos:end="71:37"><call pos:start="71:17" pos:end="71:37"><name pos:start="71:17" pos:end="71:28">msix_enabled</name><argument_list pos:start="71:29" pos:end="71:37">(<argument pos:start="71:30" pos:end="71:36"><expr pos:start="71:30" pos:end="71:36"><name pos:start="71:30" pos:end="71:36">pci_dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:40" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:40">

                <expr_stmt pos:start="73:17" pos:end="73:44"><expr pos:start="73:17" pos:end="73:43"><call pos:start="73:17" pos:end="73:43"><name pos:start="73:17" pos:end="73:40">trace_megasas_msix_raise</name><argument_list pos:start="73:41" pos:end="73:43">(<argument pos:start="73:42" pos:end="73:42"><expr pos:start="73:42" pos:end="73:42"><literal type="number" pos:start="73:42" pos:end="73:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:40"><expr pos:start="75:17" pos:end="75:39"><call pos:start="75:17" pos:end="75:39"><name pos:start="75:17" pos:end="75:27">msix_notify</name><argument_list pos:start="75:28" pos:end="75:39">(<argument pos:start="75:29" pos:end="75:35"><expr pos:start="75:29" pos:end="75:35"><name pos:start="75:29" pos:end="75:35">pci_dev</name></expr></argument>, <argument pos:start="75:38" pos:end="75:38"><expr pos:start="75:38" pos:end="75:38"><literal type="number" pos:start="75:38" pos:end="75:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="77:15" pos:end="83:13">else if <condition pos:start="77:23" pos:end="77:44">(<expr pos:start="77:24" pos:end="77:43"><call pos:start="77:24" pos:end="77:43"><name pos:start="77:24" pos:end="77:34">msi_enabled</name><argument_list pos:start="77:35" pos:end="77:43">(<argument pos:start="77:36" pos:end="77:42"><expr pos:start="77:36" pos:end="77:42"><name pos:start="77:36" pos:end="77:42">pci_dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:46" pos:end="83:13">{<block_content pos:start="79:17" pos:end="81:39">

                <expr_stmt pos:start="79:17" pos:end="79:43"><expr pos:start="79:17" pos:end="79:42"><call pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:39">trace_megasas_msi_raise</name><argument_list pos:start="79:40" pos:end="79:42">(<argument pos:start="79:41" pos:end="79:41"><expr pos:start="79:41" pos:end="79:41"><literal type="number" pos:start="79:41" pos:end="79:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:39"><expr pos:start="81:17" pos:end="81:38"><call pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:26">msi_notify</name><argument_list pos:start="81:27" pos:end="81:38">(<argument pos:start="81:28" pos:end="81:34"><expr pos:start="81:28" pos:end="81:34"><name pos:start="81:28" pos:end="81:34">pci_dev</name></expr></argument>, <argument pos:start="81:37" pos:end="81:37"><expr pos:start="81:37" pos:end="81:37"><literal type="number" pos:start="81:37" pos:end="81:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="83:15" pos:end="89:13">else <block pos:start="83:20" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:40">

                <expr_stmt pos:start="85:17" pos:end="85:42"><expr pos:start="85:17" pos:end="85:41"><call pos:start="85:17" pos:end="85:41"><name pos:start="85:17" pos:end="85:39">trace_megasas_irq_raise</name><argument_list pos:start="85:40" pos:end="85:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:40"><expr pos:start="87:17" pos:end="87:39"><call pos:start="87:17" pos:end="87:39"><name pos:start="87:17" pos:end="87:30">pci_irq_assert</name><argument_list pos:start="87:31" pos:end="87:39">(<argument pos:start="87:32" pos:end="87:38"><expr pos:start="87:32" pos:end="87:38"><name pos:start="87:32" pos:end="87:38">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="97:5">else <block pos:start="93:12" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:49">

        <expr_stmt pos:start="95:9" pos:end="95:49"><expr pos:start="95:9" pos:end="95:48"><call pos:start="95:9" pos:end="95:48"><name pos:start="95:9" pos:end="95:39">trace_megasas_qf_complete_noirq</name><argument_list pos:start="95:40" pos:end="95:48">(<argument pos:start="95:41" pos:end="95:47"><expr pos:start="95:41" pos:end="95:47"><name pos:start="95:41" pos:end="95:47">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
