<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/302.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:34">cpu_physical_memory_write_rom</name><parameter_list pos:start="1:35" pos:end="3:63">(<parameter pos:start="1:36" pos:end="1:58"><decl pos:start="1:36" pos:end="1:58"><type pos:start="1:36" pos:end="1:58"><name pos:start="1:36" pos:end="1:53">target_phys_addr_t</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:48">uint8_t</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">buf</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:62"><decl pos:start="3:56" pos:end="3:62"><type pos:start="3:56" pos:end="3:62"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:62">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:5">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">AddressSpaceDispatch</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:27">d</name> <init pos:start="7:29" pos:end="7:59">= <expr pos:start="7:31" pos:end="7:59"><name pos:start="7:31" pos:end="7:59"><name pos:start="7:31" pos:end="7:50">address_space_memory</name><operator pos:start="7:51" pos:end="7:51">.</operator><name pos:start="7:52" pos:end="7:59">dispatch</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:22">target_phys_addr_t</name></type> <name pos:start="13:24" pos:end="13:27">page</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:23">MemoryRegionSection</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:32">section</name></decl>;</decl_stmt>



    <while pos:start="19:5" pos:end="65:5">while <condition pos:start="19:11" pos:end="19:19">(<expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:14">len</name> <operator pos:start="19:16" pos:end="19:16">&gt;</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>)</condition> <block pos:start="19:21" pos:end="65:5">{<block_content pos:start="21:9" pos:end="63:18">

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:12">page</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:19">addr</name> <operator pos:start="21:21" pos:end="21:21">&amp;</operator> <name pos:start="21:23" pos:end="21:38">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:9">l</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:17">page</name> <operator pos:start="23:19" pos:end="23:19">+</operator> <name pos:start="23:21" pos:end="23:36">TARGET_PAGE_SIZE</name><operator pos:start="23:37" pos:end="23:37">)</operator> <operator pos:start="23:39" pos:end="23:39">-</operator> <name pos:start="23:41" pos:end="23:44">addr</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:20"><if pos:start="25:9" pos:end="27:20">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:13">l</name> <operator pos:start="25:15" pos:end="25:15">&gt;</operator> <name pos:start="25:17" pos:end="25:19">len</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:20"><block_content pos:start="27:13" pos:end="27:20">

            <expr_stmt pos:start="27:13" pos:end="27:20"><expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:13">l</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:19">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:62"><expr pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:15">section</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:61"><name pos:start="29:19" pos:end="29:32">phys_page_find</name><argument_list pos:start="29:33" pos:end="29:61">(<argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">d</name></expr></argument>, <argument pos:start="29:37" pos:end="29:60"><expr pos:start="29:37" pos:end="29:60"><name pos:start="29:37" pos:end="29:40">page</name> <operator pos:start="29:42" pos:end="29:43">&gt;&gt;</operator> <name pos:start="29:45" pos:end="29:60">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="57:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="35:50">(<expr pos:start="33:13" pos:end="35:49"><operator pos:start="33:13" pos:end="33:13">!</operator><operator pos:start="33:14" pos:end="33:14">(</operator><call pos:start="33:15" pos:end="33:47"><name pos:start="33:15" pos:end="33:34">memory_region_is_ram</name><argument_list pos:start="33:35" pos:end="33:47">(<argument pos:start="33:36" pos:end="33:46"><expr pos:start="33:36" pos:end="33:46"><name pos:start="33:36" pos:end="33:46"><name pos:start="33:36" pos:end="33:42">section</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:46">mr</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:49" pos:end="33:50">||</operator>

              <call pos:start="35:15" pos:end="35:48"><name pos:start="35:15" pos:end="35:35">memory_region_is_romd</name><argument_list pos:start="35:36" pos:end="35:48">(<argument pos:start="35:37" pos:end="35:47"><expr pos:start="35:37" pos:end="35:47"><name pos:start="35:37" pos:end="35:47"><name pos:start="35:37" pos:end="35:43">section</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:47">mr</name></name></expr></argument>)</argument_list></call><operator pos:start="35:49" pos:end="35:49">)</operator></expr>)</condition> <block pos:start="35:52" pos:end="39:9">{<block_content>

            <comment type="block" pos:start="37:13" pos:end="37:28">/* do nothing */</comment>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="57:9">else <block pos:start="39:16" pos:end="57:9">{<block_content pos:start="41:13" pos:end="55:34">

            <decl_stmt pos:start="41:13" pos:end="41:32"><decl pos:start="41:13" pos:end="41:31"><type pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:20">unsigned</name> <name pos:start="41:22" pos:end="41:25">long</name></type> <name pos:start="41:27" pos:end="41:31">addr1</name></decl>;</decl_stmt>

            <expr_stmt pos:start="43:13" pos:end="45:60"><expr pos:start="43:13" pos:end="45:59"><name pos:start="43:13" pos:end="43:17">addr1</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:59"><name pos:start="43:21" pos:end="43:46">memory_region_get_ram_addr</name><argument_list pos:start="43:47" pos:end="43:59">(<argument pos:start="43:48" pos:end="43:58"><expr pos:start="43:48" pos:end="43:58"><name pos:start="43:48" pos:end="43:58"><name pos:start="43:48" pos:end="43:54">section</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:58">mr</name></name></expr></argument>)</argument_list></call>

                <operator pos:start="45:17" pos:end="45:17">+</operator> <call pos:start="45:19" pos:end="45:59"><name pos:start="45:19" pos:end="45:44">memory_region_section_addr</name><argument_list pos:start="45:45" pos:end="45:59">(<argument pos:start="45:46" pos:end="45:52"><expr pos:start="45:46" pos:end="45:52"><name pos:start="45:46" pos:end="45:52">section</name></expr></argument>, <argument pos:start="45:55" pos:end="45:58"><expr pos:start="45:55" pos:end="45:58"><name pos:start="45:55" pos:end="45:58">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="47:13" pos:end="47:30">/* ROM/RAM case */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:42"><expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:15">ptr</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:41"><name pos:start="49:19" pos:end="49:34">qemu_get_ram_ptr</name><argument_list pos:start="49:35" pos:end="49:41">(<argument pos:start="49:36" pos:end="49:40"><expr pos:start="49:36" pos:end="49:40"><name pos:start="49:36" pos:end="49:40">addr1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><call pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:18">memcpy</name><argument_list pos:start="51:19" pos:end="51:31">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">ptr</name></expr></argument>, <argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:27">buf</name></expr></argument>, <argument pos:start="51:30" pos:end="51:30"><expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:47"><expr pos:start="53:13" pos:end="53:46"><call pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:36">invalidate_and_set_dirty</name><argument_list pos:start="53:37" pos:end="53:46">(<argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">addr1</name></expr></argument>, <argument pos:start="53:45" pos:end="53:45"><expr pos:start="53:45" pos:end="53:45"><name pos:start="53:45" pos:end="53:45">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><call pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:28">qemu_put_ram_ptr</name><argument_list pos:start="55:29" pos:end="55:33">(<argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:32">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:17"><expr pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:11">len</name> <operator pos:start="59:13" pos:end="59:14">-=</operator> <name pos:start="59:16" pos:end="59:16">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">buf</name> <operator pos:start="61:13" pos:end="61:14">+=</operator> <name pos:start="61:16" pos:end="61:16">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:18"><expr pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:12">addr</name> <operator pos:start="63:14" pos:end="63:15">+=</operator> <name pos:start="63:17" pos:end="63:17">l</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
