<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12904.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ioreq_runio_qemu_aio</name><parameter_list pos:start="1:32" pos:end="1:52">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:44">ioreq</name></name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">ioreq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:14">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenBlkDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">blkdev</name> <init pos:start="5:30" pos:end="5:44">= <expr pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:36">ioreq</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:44">blkdev</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:17"><if pos:start="9:5" pos:end="11:17">if <condition pos:start="9:8" pos:end="9:57">(<expr pos:start="9:9" pos:end="9:56"><name pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:13">ioreq</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:18">req</name><operator pos:start="9:19" pos:end="9:19">.</operator><name pos:start="9:20" pos:end="9:30">nr_segments</name></name> <operator pos:start="9:32" pos:end="9:33">&amp;&amp;</operator> <call pos:start="9:35" pos:end="9:50"><name pos:start="9:35" pos:end="9:43">ioreq_map</name><argument_list pos:start="9:44" pos:end="9:50">(<argument pos:start="9:45" pos:end="9:49"><expr pos:start="9:45" pos:end="9:49"><name pos:start="9:45" pos:end="9:49">ioreq</name></expr></argument>)</argument_list></call> <operator pos:start="9:52" pos:end="9:53">==</operator> <operator pos:start="9:55" pos:end="9:55">-</operator><literal type="number" pos:start="9:56" pos:end="9:56">1</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

	<goto pos:start="11:9" pos:end="11:17">goto <name pos:start="11:14" pos:end="11:16">err</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:9">ioreq</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:23">aio_inflight</name></name><operator pos:start="15:24" pos:end="15:25">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:13">ioreq</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:22">presync</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

	<expr_stmt pos:start="19:9" pos:end="19:31"><expr pos:start="19:9" pos:end="19:30"><call pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:18">bdrv_flush</name><argument_list pos:start="19:19" pos:end="19:30">(<argument pos:start="19:20" pos:end="19:29"><expr pos:start="19:20" pos:end="19:29"><name pos:start="19:20" pos:end="19:29"><name pos:start="19:20" pos:end="19:25">blkdev</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="19:33" pos:end="19:60">/* FIXME: aio_flush() ??? */</comment>



    <switch pos:start="23:5" pos:end="61:5">switch <condition pos:start="23:12" pos:end="23:33">(<expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:17">ioreq</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:22">req</name><operator pos:start="23:23" pos:end="23:23">.</operator><name pos:start="23:24" pos:end="23:32">operation</name></name></expr>)</condition> <block pos:start="23:35" pos:end="61:5">{<block_content pos:start="25:5" pos:end="59:17">

    <case pos:start="25:5" pos:end="25:23">case <expr pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:22">BLKIF_OP_READ</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:13">ioreq</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:27">aio_inflight</name></name><operator pos:start="27:28" pos:end="27:29">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="33:49"><expr pos:start="29:9" pos:end="33:48"><call pos:start="29:9" pos:end="33:48"><name pos:start="29:9" pos:end="29:22">bdrv_aio_readv</name><argument_list pos:start="29:23" pos:end="33:48">(<argument pos:start="29:24" pos:end="29:33"><expr pos:start="29:24" pos:end="29:33"><name pos:start="29:24" pos:end="29:33"><name pos:start="29:24" pos:end="29:29">blkdev</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:33">bs</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:60"><expr pos:start="29:36" pos:end="29:60"><name pos:start="29:36" pos:end="29:47"><name pos:start="29:36" pos:end="29:40">ioreq</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:47">start</name></name> <operator pos:start="29:49" pos:end="29:49">/</operator> <name pos:start="29:51" pos:end="29:60">BLOCK_SIZE</name></expr></argument>,

                       <argument pos:start="31:24" pos:end="31:32"><expr pos:start="31:24" pos:end="31:32"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:32"><name pos:start="31:25" pos:end="31:29">ioreq</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:32">v</name></name></expr></argument>, <argument pos:start="31:35" pos:end="31:60"><expr pos:start="31:35" pos:end="31:60"><name pos:start="31:35" pos:end="31:47"><name pos:start="31:35" pos:end="31:39">ioreq</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:42">v</name><operator pos:start="31:43" pos:end="31:43">.</operator><name pos:start="31:44" pos:end="31:47">size</name></name> <operator pos:start="31:49" pos:end="31:49">/</operator> <name pos:start="31:51" pos:end="31:60">BLOCK_SIZE</name></expr></argument>,

                       <argument pos:start="33:24" pos:end="33:40"><expr pos:start="33:24" pos:end="33:40"><name pos:start="33:24" pos:end="33:40">qemu_aio_complete</name></expr></argument>, <argument pos:start="33:43" pos:end="33:47"><expr pos:start="33:43" pos:end="33:47"><name pos:start="33:43" pos:end="33:47">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:24">case <expr pos:start="37:10" pos:end="37:23"><name pos:start="37:10" pos:end="37:23">BLKIF_OP_WRITE</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:32">case <expr pos:start="39:10" pos:end="39:31"><name pos:start="39:10" pos:end="39:31">BLKIF_OP_WRITE_BARRIER</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:13">ioreq</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:27">aio_inflight</name></name><operator pos:start="41:28" pos:end="41:29">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:18"><if pos:start="43:9" pos:end="45:18">if <condition pos:start="43:12" pos:end="43:36">(<expr pos:start="43:13" pos:end="43:35"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:35"><name pos:start="43:14" pos:end="43:18">ioreq</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:23">req</name><operator pos:start="43:24" pos:end="43:24">.</operator><name pos:start="43:25" pos:end="43:35">nr_segments</name></name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:18"><block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="51:50"><expr pos:start="47:9" pos:end="51:49"><call pos:start="47:9" pos:end="51:49"><name pos:start="47:9" pos:end="47:23">bdrv_aio_writev</name><argument_list pos:start="47:24" pos:end="51:49">(<argument pos:start="47:25" pos:end="47:34"><expr pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:30">blkdev</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:34">bs</name></name></expr></argument>, <argument pos:start="47:37" pos:end="47:61"><expr pos:start="47:37" pos:end="47:61"><name pos:start="47:37" pos:end="47:48"><name pos:start="47:37" pos:end="47:41">ioreq</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:48">start</name></name> <operator pos:start="47:50" pos:end="47:50">/</operator> <name pos:start="47:52" pos:end="47:61">BLOCK_SIZE</name></expr></argument>,

                        <argument pos:start="49:25" pos:end="49:33"><expr pos:start="49:25" pos:end="49:33"><operator pos:start="49:25" pos:end="49:25">&amp;</operator><name pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:30">ioreq</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:33">v</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:61"><expr pos:start="49:36" pos:end="49:61"><name pos:start="49:36" pos:end="49:48"><name pos:start="49:36" pos:end="49:40">ioreq</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:43">v</name><operator pos:start="49:44" pos:end="49:44">.</operator><name pos:start="49:45" pos:end="49:48">size</name></name> <operator pos:start="49:50" pos:end="49:50">/</operator> <name pos:start="49:52" pos:end="49:61">BLOCK_SIZE</name></expr></argument>,

                        <argument pos:start="51:25" pos:end="51:41"><expr pos:start="51:25" pos:end="51:41"><name pos:start="51:25" pos:end="51:41">qemu_aio_complete</name></expr></argument>, <argument pos:start="51:44" pos:end="51:48"><expr pos:start="51:44" pos:end="51:48"><name pos:start="51:44" pos:end="51:48">ioreq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="53:9" pos:end="53:14">break;</break>

    <default pos:start="55:5" pos:end="55:12">default:</default>

	<comment type="block" pos:start="57:9" pos:end="57:72">/* unknown operation (shouldn't happen -- parse catches this) */</comment>

	<goto pos:start="59:9" pos:end="59:17">goto <name pos:start="59:14" pos:end="59:16">err</name>;</goto>

    </block_content>}</block></switch>



    <if_stmt pos:start="65:5" pos:end="67:31"><if pos:start="65:5" pos:end="67:31">if <condition pos:start="65:8" pos:end="65:24">(<expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:13">ioreq</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:23">postsync</name></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:31"><block_content pos:start="67:9" pos:end="67:31">

	<expr_stmt pos:start="67:9" pos:end="67:31"><expr pos:start="67:9" pos:end="67:30"><call pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:18">bdrv_flush</name><argument_list pos:start="67:19" pos:end="67:30">(<argument pos:start="67:20" pos:end="67:29"><expr pos:start="67:20" pos:end="67:29"><name pos:start="67:20" pos:end="67:29"><name pos:start="67:20" pos:end="67:25">blkdev</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:29">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="67:33" pos:end="67:60">/* FIXME: aio_flush() ??? */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><call pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:21">qemu_aio_complete</name><argument_list pos:start="69:22" pos:end="69:31">(<argument pos:start="69:23" pos:end="69:27"><expr pos:start="69:23" pos:end="69:27"><name pos:start="69:23" pos:end="69:27">ioreq</name></expr></argument>, <argument pos:start="69:30" pos:end="69:30"><expr pos:start="69:30" pos:end="69:30"><literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>



<label pos:start="77:1" pos:end="77:4"><name pos:start="77:1" pos:end="77:3">err</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:36"><expr pos:start="79:5" pos:end="79:35"><name pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:9">ioreq</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:17">status</name></name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:35">BLKIF_RSP_ERROR</name></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:14">return <expr pos:start="81:12" pos:end="81:13"><operator pos:start="81:12" pos:end="81:12">-</operator><literal type="number" pos:start="81:13" pos:end="81:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
