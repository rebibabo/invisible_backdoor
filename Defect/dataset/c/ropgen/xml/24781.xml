<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24781.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">bdrv_invalidate_cache</name><parameter_list pos:start="1:27" pos:end="1:62">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:54">Error</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">BdrvChild</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">child</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:11">bs</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:16">drv</name></name></expr>)</condition>  <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:24"><name pos:start="21:11" pos:end="21:12">bs</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:24">open_flags</name></name> <operator pos:start="21:26" pos:end="21:26">&amp;</operator> <name pos:start="21:28" pos:end="21:42">BDRV_O_INACTIVE</name><operator pos:start="21:43" pos:end="21:43">)</operator></expr>)</condition> <block pos:start="21:46" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:6">bs</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:18">open_flags</name></name> <operator pos:start="27:20" pos:end="27:21">&amp;=</operator> <operator pos:start="27:23" pos:end="27:23">~</operator><name pos:start="27:24" pos:end="27:38">BDRV_O_INACTIVE</name></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="31:39">(<expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:10">bs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:15">drv</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:38">bdrv_invalidate_cache</name></name></expr>)</condition> <block pos:start="31:41" pos:end="45:5">{<block_content pos:start="33:9" pos:end="43:9">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:10">bs</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:15">drv</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:38">bdrv_invalidate_cache</name></name><argument_list pos:start="33:39" pos:end="33:54">(<argument pos:start="33:40" pos:end="33:41"><expr pos:start="33:40" pos:end="33:41"><name pos:start="33:40" pos:end="33:41">bs</name></expr></argument>, <argument pos:start="33:44" pos:end="33:53"><expr pos:start="33:44" pos:end="33:53"><operator pos:start="33:44" pos:end="33:44">&amp;</operator><name pos:start="33:45" pos:end="33:53">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:21">local_err</name></expr>)</condition> <block pos:start="35:24" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:19">

            <expr_stmt pos:start="37:13" pos:end="37:46"><expr pos:start="37:13" pos:end="37:45"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:14">bs</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:26">open_flags</name></name> <operator pos:start="37:28" pos:end="37:29">|=</operator> <name pos:start="37:31" pos:end="37:45">BDRV_O_INACTIVE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:45"><expr pos:start="39:13" pos:end="39:44"><call pos:start="39:13" pos:end="39:44"><name pos:start="39:13" pos:end="39:27">error_propagate</name><argument_list pos:start="39:28" pos:end="39:44">(<argument pos:start="39:29" pos:end="39:32"><expr pos:start="39:29" pos:end="39:32"><name pos:start="39:29" pos:end="39:32">errp</name></expr></argument>, <argument pos:start="39:35" pos:end="39:43"><expr pos:start="39:35" pos:end="39:43"><name pos:start="39:35" pos:end="39:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:17">QLIST_FOREACH</name><argument_list pos:start="49:18" pos:end="49:45">(<argument pos:start="49:19" pos:end="49:23">child</argument>, <argument pos:start="49:26" pos:end="49:38">&amp;bs-&gt;children</argument>, <argument pos:start="49:41" pos:end="49:44">next</argument>)</argument_list></macro> <block pos:start="49:47" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:9">

        <expr_stmt pos:start="51:9" pos:end="51:53"><expr pos:start="51:9" pos:end="51:52"><call pos:start="51:9" pos:end="51:52"><name pos:start="51:9" pos:end="51:29">bdrv_invalidate_cache</name><argument_list pos:start="51:30" pos:end="51:52">(<argument pos:start="51:31" pos:end="51:39"><expr pos:start="51:31" pos:end="51:39"><name pos:start="51:31" pos:end="51:39"><name pos:start="51:31" pos:end="51:35">child</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:39">bs</name></name></expr></argument>, <argument pos:start="51:42" pos:end="51:51"><expr pos:start="51:42" pos:end="51:51"><operator pos:start="51:42" pos:end="51:42">&amp;</operator><name pos:start="51:43" pos:end="51:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:21">local_err</name></expr>)</condition> <block pos:start="53:24" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:19">

            <expr_stmt pos:start="55:13" pos:end="55:46"><expr pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:14">bs</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:26">open_flags</name></name> <operator pos:start="55:28" pos:end="55:29">|=</operator> <name pos:start="55:31" pos:end="55:45">BDRV_O_INACTIVE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:45"><expr pos:start="57:13" pos:end="57:44"><call pos:start="57:13" pos:end="57:44"><name pos:start="57:13" pos:end="57:27">error_propagate</name><argument_list pos:start="57:28" pos:end="57:44">(<argument pos:start="57:29" pos:end="57:32"><expr pos:start="57:29" pos:end="57:32"><name pos:start="57:29" pos:end="57:32">errp</name></expr></argument>, <argument pos:start="57:35" pos:end="57:43"><expr pos:start="57:35" pos:end="57:43"><name pos:start="57:35" pos:end="57:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="67:5" pos:end="67:55"><expr pos:start="67:5" pos:end="67:54"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:54"><name pos:start="67:11" pos:end="67:31">refresh_total_sectors</name><argument_list pos:start="67:32" pos:end="67:54">(<argument pos:start="67:33" pos:end="67:34"><expr pos:start="67:33" pos:end="67:34"><name pos:start="67:33" pos:end="67:34">bs</name></expr></argument>, <argument pos:start="67:37" pos:end="67:53"><expr pos:start="67:37" pos:end="67:53"><name pos:start="67:37" pos:end="67:53"><name pos:start="67:37" pos:end="67:38">bs</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:53">total_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">&lt;</operator> <literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>)</condition> <block pos:start="69:18" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:15">

        <expr_stmt pos:start="71:9" pos:end="71:42"><expr pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:10">bs</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:22">open_flags</name></name> <operator pos:start="71:24" pos:end="71:25">|=</operator> <name pos:start="71:27" pos:end="71:41">BDRV_O_INACTIVE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:77"><expr pos:start="73:9" pos:end="73:76"><call pos:start="73:9" pos:end="73:76"><name pos:start="73:9" pos:end="73:24">error_setg_errno</name><argument_list pos:start="73:25" pos:end="73:76">(<argument pos:start="73:26" pos:end="73:29"><expr pos:start="73:26" pos:end="73:29"><name pos:start="73:26" pos:end="73:29">errp</name></expr></argument>, <argument pos:start="73:32" pos:end="73:35"><expr pos:start="73:32" pos:end="73:35"><operator pos:start="73:32" pos:end="73:32">-</operator><name pos:start="73:33" pos:end="73:35">ret</name></expr></argument>, <argument pos:start="73:38" pos:end="73:75"><expr pos:start="73:38" pos:end="73:75"><literal type="string" pos:start="73:38" pos:end="73:75">"Could not refresh total sector count"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
