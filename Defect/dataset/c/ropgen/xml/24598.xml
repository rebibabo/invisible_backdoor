<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24598.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="67:1"><decl pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:34">ff_intrax8_common_init</name><argument_list pos:start="1:35" pos:end="9:63">(<argument pos:start="1:36" pos:end="1:56"><expr pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <operator pos:start="1:51" pos:end="1:51">*</operator><name pos:start="1:52" pos:end="1:56">avctx</name></expr></argument>,

                                   <argument pos:start="3:36" pos:end="3:52"><expr pos:start="3:36" pos:end="3:52"><name pos:start="3:36" pos:end="3:49">IntraX8Context</name> <operator pos:start="3:51" pos:end="3:51">*</operator><name pos:start="3:52" pos:end="3:52">w</name></expr></argument>, <argument pos:start="3:55" pos:end="3:74"><expr pos:start="3:55" pos:end="3:74"><name pos:start="3:55" pos:end="3:68">IDCTDSPContext</name> <operator pos:start="3:70" pos:end="3:70">*</operator><name pos:start="3:71" pos:end="3:74">idsp</name></expr></argument>,

                                   <argument pos:start="5:36" pos:end="5:55"><expr pos:start="5:36" pos:end="5:55"><call pos:start="5:36" pos:end="5:51"><name pos:start="5:36" pos:end="5:42">int16_t</name> <argument_list pos:start="5:44" pos:end="5:51">(<argument pos:start="5:45" pos:end="5:50"><expr pos:start="5:45" pos:end="5:50"><operator pos:start="5:45" pos:end="5:45">*</operator><name pos:start="5:46" pos:end="5:50">block</name></expr></argument>)</argument_list></call><index pos:start="5:52" pos:end="5:55">[<expr pos:start="5:53" pos:end="5:54"><literal type="number" pos:start="5:53" pos:end="5:54">64</literal></expr>]</index></expr></argument>,

                                   <argument pos:start="7:36" pos:end="7:59"><expr pos:start="7:36" pos:end="7:59"><name pos:start="7:36" pos:end="7:38">int</name> <name pos:start="7:40" pos:end="7:59"><name pos:start="7:40" pos:end="7:55">block_last_index</name><index pos:start="7:56" pos:end="7:59">[<expr pos:start="7:57" pos:end="7:58"><literal type="number" pos:start="7:57" pos:end="7:58">12</literal></expr>]</index></name></expr></argument>,

                                   <argument pos:start="9:36" pos:end="9:47"><expr pos:start="9:36" pos:end="9:47"><name pos:start="9:36" pos:end="9:38">int</name> <name pos:start="9:40" pos:end="9:47">mb_width</name></expr></argument>, <argument pos:start="9:50" pos:end="9:62"><expr pos:start="9:50" pos:end="9:62"><name pos:start="9:50" pos:end="9:52">int</name> <name pos:start="9:54" pos:end="9:62">mb_height</name></expr></argument>)</argument_list>

<block pos:start="11:1" pos:end="67:1">{<block_content pos:start="13:5" pos:end="65:13">

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:27">= <expr pos:start="13:15" pos:end="13:27"><call pos:start="13:15" pos:end="13:27"><name pos:start="13:15" pos:end="13:25">x8_vlc_init</name><argument_list pos:start="13:26" pos:end="13:27">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="17:19"><if pos:start="15:5" pos:end="17:19">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:19"><block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">w</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">avctx</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:5">w</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:11">idsp</name></name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">*</operator><name pos:start="23:16" pos:end="23:19">idsp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">w</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">mb_width</name></name>  <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:27">mb_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">w</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:16">mb_height</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:28">mb_height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:5">w</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">block</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:20">block</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:5">w</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:23">block_last_index</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:42">block_last_index</name></expr>;</expr_stmt>



    <comment type="line" pos:start="35:5" pos:end="35:39">// two rows, 2 blocks per cannon mb</comment>

    <expr_stmt pos:start="37:5" pos:end="37:58"><expr pos:start="37:5" pos:end="37:57"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:5">w</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:23">prediction_table</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:57"><name pos:start="37:27" pos:end="37:36">av_mallocz</name><argument_list pos:start="37:37" pos:end="37:57">(<argument pos:start="37:38" pos:end="37:56"><expr pos:start="37:38" pos:end="37:56"><name pos:start="37:38" pos:end="37:48"><name pos:start="37:38" pos:end="37:38">w</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:48">mb_width</name></name> <operator pos:start="37:50" pos:end="37:50">*</operator> <literal type="number" pos:start="37:52" pos:end="37:52">2</literal> <operator pos:start="37:54" pos:end="37:54">*</operator> <literal type="number" pos:start="37:56" pos:end="37:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:31"><if pos:start="39:5" pos:end="41:31">if <condition pos:start="39:8" pos:end="39:29">(<expr pos:start="39:9" pos:end="39:28"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:28"><name pos:start="39:10" pos:end="39:10">w</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:28">prediction_table</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:31"><block_content pos:start="41:9" pos:end="41:31">

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="47:44"><expr pos:start="45:5" pos:end="47:43"><call pos:start="45:5" pos:end="47:43"><name pos:start="45:5" pos:end="45:21">ff_init_scantable</name><argument_list pos:start="45:22" pos:end="47:43">(<argument pos:start="45:23" pos:end="45:46"><expr pos:start="45:23" pos:end="45:46"><name pos:start="45:23" pos:end="45:46"><name pos:start="45:23" pos:end="45:23">w</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:29">idsp</name><operator pos:start="45:30" pos:end="45:30">.</operator><name pos:start="45:31" pos:end="45:46">idct_permutation</name></name></expr></argument>, <argument pos:start="45:49" pos:end="45:64"><expr pos:start="45:49" pos:end="45:64"><operator pos:start="45:49" pos:end="45:49">&amp;</operator><name pos:start="45:50" pos:end="45:64"><name pos:start="45:50" pos:end="45:50">w</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:61">scantable</name><index pos:start="45:62" pos:end="45:64">[<expr pos:start="45:63" pos:end="45:63"><literal type="number" pos:start="45:63" pos:end="45:63">0</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:42"><expr pos:start="47:23" pos:end="47:42"><name pos:start="47:23" pos:end="47:42"><name pos:start="47:23" pos:end="47:39">ff_wmv1_scantable</name><index pos:start="47:40" pos:end="47:42">[<expr pos:start="47:41" pos:end="47:41"><literal type="number" pos:start="47:41" pos:end="47:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:44"><expr pos:start="49:5" pos:end="51:43"><call pos:start="49:5" pos:end="51:43"><name pos:start="49:5" pos:end="49:21">ff_init_scantable</name><argument_list pos:start="49:22" pos:end="51:43">(<argument pos:start="49:23" pos:end="49:46"><expr pos:start="49:23" pos:end="49:46"><name pos:start="49:23" pos:end="49:46"><name pos:start="49:23" pos:end="49:23">w</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:29">idsp</name><operator pos:start="49:30" pos:end="49:30">.</operator><name pos:start="49:31" pos:end="49:46">idct_permutation</name></name></expr></argument>, <argument pos:start="49:49" pos:end="49:64"><expr pos:start="49:49" pos:end="49:64"><operator pos:start="49:49" pos:end="49:49">&amp;</operator><name pos:start="49:50" pos:end="49:64"><name pos:start="49:50" pos:end="49:50">w</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:61">scantable</name><index pos:start="49:62" pos:end="49:64">[<expr pos:start="49:63" pos:end="49:63"><literal type="number" pos:start="49:63" pos:end="49:63">1</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="51:23" pos:end="51:42"><expr pos:start="51:23" pos:end="51:42"><name pos:start="51:23" pos:end="51:42"><name pos:start="51:23" pos:end="51:39">ff_wmv1_scantable</name><index pos:start="51:40" pos:end="51:42">[<expr pos:start="51:41" pos:end="51:41"><literal type="number" pos:start="51:41" pos:end="51:41">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:44"><expr pos:start="53:5" pos:end="55:43"><call pos:start="53:5" pos:end="55:43"><name pos:start="53:5" pos:end="53:21">ff_init_scantable</name><argument_list pos:start="53:22" pos:end="55:43">(<argument pos:start="53:23" pos:end="53:46"><expr pos:start="53:23" pos:end="53:46"><name pos:start="53:23" pos:end="53:46"><name pos:start="53:23" pos:end="53:23">w</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:29">idsp</name><operator pos:start="53:30" pos:end="53:30">.</operator><name pos:start="53:31" pos:end="53:46">idct_permutation</name></name></expr></argument>, <argument pos:start="53:49" pos:end="53:64"><expr pos:start="53:49" pos:end="53:64"><operator pos:start="53:49" pos:end="53:49">&amp;</operator><name pos:start="53:50" pos:end="53:64"><name pos:start="53:50" pos:end="53:50">w</name><operator pos:start="53:51" pos:end="53:52">-&gt;</operator><name pos:start="53:53" pos:end="53:61">scantable</name><index pos:start="53:62" pos:end="53:64">[<expr pos:start="53:63" pos:end="53:63"><literal type="number" pos:start="53:63" pos:end="53:63">2</literal></expr>]</index></name></expr></argument>,

                      <argument pos:start="55:23" pos:end="55:42"><expr pos:start="55:23" pos:end="55:42"><name pos:start="55:23" pos:end="55:42"><name pos:start="55:23" pos:end="55:39">ff_wmv1_scantable</name><index pos:start="55:40" pos:end="55:42">[<expr pos:start="55:41" pos:end="55:41"><literal type="number" pos:start="55:41" pos:end="55:41">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><call pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:22">ff_intrax8dsp_init</name><argument_list pos:start="59:23" pos:end="59:31">(<argument pos:start="59:24" pos:end="59:30"><expr pos:start="59:24" pos:end="59:30"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:30"><name pos:start="59:25" pos:end="59:25">w</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:30">dsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:38"><expr pos:start="61:5" pos:end="61:37"><call pos:start="61:5" pos:end="61:37"><name pos:start="61:5" pos:end="61:20">ff_blockdsp_init</name><argument_list pos:start="61:21" pos:end="61:37">(<argument pos:start="61:22" pos:end="61:29"><expr pos:start="61:22" pos:end="61:29"><operator pos:start="61:22" pos:end="61:22">&amp;</operator><name pos:start="61:23" pos:end="61:29"><name pos:start="61:23" pos:end="61:23">w</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:29">bdsp</name></name></expr></argument>, <argument pos:start="61:32" pos:end="61:36"><expr pos:start="61:32" pos:end="61:36"><name pos:start="61:32" pos:end="61:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></decl></decl_stmt>
</unit>
