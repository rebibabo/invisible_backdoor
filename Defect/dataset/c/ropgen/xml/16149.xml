<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16149.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">pcie_host_mmcfg_map</name><parameter_list pos:start="1:25" pos:end="3:39">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:39">PCIExpressHost</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">e</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:55">addr</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:38"><decl pos:start="3:26" pos:end="3:38"><type pos:start="3:26" pos:end="3:38"><name pos:start="3:26" pos:end="3:33">uint32_t</name></type> <name pos:start="3:35" pos:end="3:38">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="21:77">

    <expr_stmt pos:start="7:5" pos:end="7:33"><expr pos:start="7:5" pos:end="7:32"><call pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:10">assert</name><argument_list pos:start="7:11" pos:end="7:32">(<argument pos:start="7:12" pos:end="7:31"><expr pos:start="7:12" pos:end="7:31"><operator pos:start="7:12" pos:end="7:12">!</operator><operator pos:start="7:13" pos:end="7:13">(</operator><name pos:start="7:14" pos:end="7:17">size</name> <operator pos:start="7:19" pos:end="7:19">&amp;</operator> <operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:25">size</name> <operator pos:start="7:27" pos:end="7:27">-</operator> <literal type="number" pos:start="7:29" pos:end="7:29">1</literal><operator pos:start="7:30" pos:end="7:30">)</operator><operator pos:start="7:31" pos:end="7:31">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="7:41" pos:end="7:56">/* power of 2 */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:40"><expr pos:start="9:5" pos:end="9:39"><call pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:39">(<argument pos:start="9:12" pos:end="9:38"><expr pos:start="9:12" pos:end="9:38"><name pos:start="9:12" pos:end="9:15">size</name> <operator pos:start="9:17" pos:end="9:18">&gt;=</operator> <name pos:start="9:20" pos:end="9:38">PCIE_MMCFG_SIZE_MIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><call pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:39">(<argument pos:start="11:12" pos:end="11:38"><expr pos:start="11:12" pos:end="11:38"><name pos:start="11:12" pos:end="11:15">size</name> <operator pos:start="11:17" pos:end="11:18">&lt;=</operator> <name pos:start="11:20" pos:end="11:38">PCIE_MMCFG_SIZE_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:19"><expr pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">e</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">size</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:18">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:49"><expr pos:start="15:5" pos:end="17:48"><call pos:start="15:5" pos:end="17:48"><name pos:start="15:5" pos:end="15:25">memory_region_init_io</name><argument_list pos:start="15:26" pos:end="17:48">(<argument pos:start="15:27" pos:end="15:34"><expr pos:start="15:27" pos:end="15:34"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:28">e</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:34">mmio</name></name></expr></argument>, <argument pos:start="15:37" pos:end="15:45"><expr pos:start="15:37" pos:end="15:45"><call pos:start="15:37" pos:end="15:45"><name pos:start="15:37" pos:end="15:42">OBJECT</name><argument_list pos:start="15:43" pos:end="15:45">(<argument pos:start="15:44" pos:end="15:44"><expr pos:start="15:44" pos:end="15:44"><name pos:start="15:44" pos:end="15:44">e</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:48" pos:end="15:62"><expr pos:start="15:48" pos:end="15:62"><operator pos:start="15:48" pos:end="15:48">&amp;</operator><name pos:start="15:49" pos:end="15:62">pcie_mmcfg_ops</name></expr></argument>, <argument pos:start="15:65" pos:end="15:65"><expr pos:start="15:65" pos:end="15:65"><name pos:start="15:65" pos:end="15:65">e</name></expr></argument>,

                          <argument pos:start="17:27" pos:end="17:38"><expr pos:start="17:27" pos:end="17:38"><literal type="string" pos:start="17:27" pos:end="17:38">"pcie-mmcfg"</literal></expr></argument>, <argument pos:start="17:41" pos:end="17:47"><expr pos:start="17:41" pos:end="17:47"><name pos:start="17:41" pos:end="17:47"><name pos:start="17:41" pos:end="17:41">e</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:47">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:5">e</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:16">base_addr</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:23">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:77"><expr pos:start="21:5" pos:end="21:76"><call pos:start="21:5" pos:end="21:76"><name pos:start="21:5" pos:end="21:31">memory_region_add_subregion</name><argument_list pos:start="21:32" pos:end="21:76">(<argument pos:start="21:33" pos:end="21:51"><expr pos:start="21:33" pos:end="21:51"><call pos:start="21:33" pos:end="21:51"><name pos:start="21:33" pos:end="21:49">get_system_memory</name><argument_list pos:start="21:50" pos:end="21:51">()</argument_list></call></expr></argument>, <argument pos:start="21:54" pos:end="21:65"><expr pos:start="21:54" pos:end="21:65"><name pos:start="21:54" pos:end="21:65"><name pos:start="21:54" pos:end="21:54">e</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:65">base_addr</name></name></expr></argument>, <argument pos:start="21:68" pos:end="21:75"><expr pos:start="21:68" pos:end="21:75"><operator pos:start="21:68" pos:end="21:68">&amp;</operator><name pos:start="21:69" pos:end="21:75"><name pos:start="21:69" pos:end="21:69">e</name><operator pos:start="21:70" pos:end="21:71">-&gt;</operator><name pos:start="21:72" pos:end="21:75">mmio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
