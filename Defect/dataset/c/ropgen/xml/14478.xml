<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14478.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">net_rx_ok</name><parameter_list pos:start="1:21" pos:end="1:34">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:27"><name pos:start="1:22" pos:end="1:25">void</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenNetDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">netdev</name> <init pos:start="5:30" pos:end="5:37">= <expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">RING_IDX</name></type> <name pos:start="7:14" pos:end="7:15">rc</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:19">rp</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:56">(<expr pos:start="11:9" pos:end="11:55"><name pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:14">netdev</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:22">xendev</name><operator pos:start="11:23" pos:end="11:23">.</operator><name pos:start="11:24" pos:end="11:31">be_state</name></name> <operator pos:start="11:33" pos:end="11:34">!=</operator> <name pos:start="11:36" pos:end="11:55">XenbusStateConnected</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

	<return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:6">rc</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:33"><name pos:start="17:10" pos:end="17:15">netdev</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:24">rx_ring</name><operator pos:start="17:25" pos:end="17:25">.</operator><name pos:start="17:26" pos:end="17:33">req_cons</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:6">rp</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:40"><name pos:start="19:10" pos:end="19:15">netdev</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:24">rx_ring</name><operator pos:start="19:25" pos:end="19:25">.</operator><name pos:start="19:26" pos:end="19:30">sring</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:40">req_prod</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:14"><expr pos:start="21:5" pos:end="21:13"><call pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">xen_rmb</name><argument_list pos:start="21:12" pos:end="21:13">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:69">(<expr pos:start="25:9" pos:end="25:68"><name pos:start="25:9" pos:end="25:10">rc</name> <operator pos:start="25:12" pos:end="25:13">==</operator> <name pos:start="25:15" pos:end="25:16">rp</name> <operator pos:start="25:18" pos:end="25:19">||</operator> <call pos:start="25:21" pos:end="25:68"><name pos:start="25:21" pos:end="25:46">RING_REQUEST_CONS_OVERFLOW</name><argument_list pos:start="25:47" pos:end="25:68">(<argument pos:start="25:48" pos:end="25:63"><expr pos:start="25:48" pos:end="25:63"><operator pos:start="25:48" pos:end="25:48">&amp;</operator><name pos:start="25:49" pos:end="25:63"><name pos:start="25:49" pos:end="25:54">netdev</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:63">rx_ring</name></name></expr></argument>, <argument pos:start="25:66" pos:end="25:67"><expr pos:start="25:66" pos:end="25:67"><name pos:start="25:66" pos:end="25:67">rc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:71" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:17">

	<expr_stmt pos:start="27:9" pos:end="29:44"><expr pos:start="27:9" pos:end="29:43"><call pos:start="27:9" pos:end="29:43"><name pos:start="27:9" pos:end="27:21">xen_be_printf</name><argument_list pos:start="27:22" pos:end="29:43">(<argument pos:start="27:23" pos:end="27:37"><expr pos:start="27:23" pos:end="27:37"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:37"><name pos:start="27:24" pos:end="27:29">netdev</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:37">xendev</name></name></expr></argument>, <argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">2</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:71"><expr pos:start="27:43" pos:end="27:71"><literal type="string" pos:start="27:43" pos:end="27:71">"%s: no rx buffers (%d/%d)\n"</literal></expr></argument>,

		      <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">__FUNCTION__</name></expr></argument>, <argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">rc</name></expr></argument>, <argument pos:start="29:41" pos:end="29:42"><expr pos:start="29:41" pos:end="29:42"><name pos:start="29:41" pos:end="29:42">rp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
