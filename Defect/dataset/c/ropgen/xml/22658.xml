<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22658.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">ff_rtp_send_mpegvideo</name><parameter_list pos:start="1:27" pos:end="1:78">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">s1</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:67"><decl pos:start="1:49" pos:end="1:67"><type pos:start="1:49" pos:end="1:67"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:61">uint8_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">buf1</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:77"><decl pos:start="1:70" pos:end="1:77"><type pos:start="1:70" pos:end="1:77"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:77">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">RTPDemuxContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:38">= <expr pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:27">s1</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">h</name></decl>, <decl pos:start="7:17" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:31">max_packet_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:69"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22">begin_of_slice</name></decl>, <decl pos:start="11:25" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:36">end_of_slice</name></decl>, <decl pos:start="11:39" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:39" pos:end="11:48">frame_type</name></decl>, <decl pos:start="11:51" pos:end="11:68"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:51" pos:end="11:68">temporal_reference</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:19">max_packet_size</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:41"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:41">max_payload_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:18">begin_of_slice</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:16">end_of_slice</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:14">frame_type</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:22">temporal_reference</name> <operator pos:start="23:24" pos:end="23:24">=</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr>;</expr_stmt>



    <while pos:start="27:5" pos:end="173:5">while <condition pos:start="27:11" pos:end="27:20">(<expr pos:start="27:12" pos:end="27:19"><name pos:start="27:12" pos:end="27:15">size</name> <operator pos:start="27:17" pos:end="27:17">&gt;</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>)</condition> <block pos:start="27:22" pos:end="173:5">{<block_content pos:start="29:9" pos:end="171:25">

        <decl_stmt pos:start="29:9" pos:end="29:30"><decl pos:start="29:9" pos:end="29:29"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:29">begin_of_sequence</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:25">begin_of_sequence</name> <operator pos:start="33:27" pos:end="33:27">=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:29">max_packet_size</name> <operator pos:start="35:31" pos:end="35:31">-</operator> <literal type="number" pos:start="35:33" pos:end="35:33">4</literal></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="121:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:24">(<expr pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:15">len</name> <operator pos:start="39:17" pos:end="39:18">&gt;=</operator> <name pos:start="39:20" pos:end="39:23">size</name></expr>)</condition> <block pos:start="39:26" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:29">

            <expr_stmt pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:15">len</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:22">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:24">end_of_slice</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <literal type="number" pos:start="43:28" pos:end="43:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="121:9">else <block pos:start="45:16" pos:end="121:9">{<block_content pos:start="47:13" pos:end="119:13">

            <decl_stmt pos:start="47:13" pos:end="47:34"><decl pos:start="47:13" pos:end="47:28"><type pos:start="47:13" pos:end="47:27"><specifier pos:start="47:13" pos:end="47:17">const</specifier> <name pos:start="47:19" pos:end="47:25">uint8_t</name> <modifier pos:start="47:27" pos:end="47:27">*</modifier></type><name pos:start="47:28" pos:end="47:28">r</name></decl>, <decl pos:start="47:31" pos:end="47:33"><type ref="prev" pos:start="47:13" pos:end="47:27"><modifier pos:start="47:31" pos:end="47:31">*</modifier></type><name pos:start="47:32" pos:end="47:33">r1</name></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:27"><decl pos:start="49:13" pos:end="49:26"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:26">start_code</name></decl>;</decl_stmt>



            <expr_stmt pos:start="53:13" pos:end="53:22"><expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:14">r1</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <name pos:start="53:18" pos:end="53:21">buf1</name></expr>;</expr_stmt>

            <while pos:start="55:13" pos:end="119:13">while <condition pos:start="55:19" pos:end="55:21">(<expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">1</literal></expr>)</condition> <block pos:start="55:23" pos:end="119:13">{<block_content pos:start="57:17" pos:end="117:17">

                <expr_stmt pos:start="57:17" pos:end="57:32"><expr pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:26">start_code</name> <operator pos:start="57:28" pos:end="57:28">=</operator> <operator pos:start="57:30" pos:end="57:30">-</operator><literal type="number" pos:start="57:31" pos:end="57:31">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:69"><expr pos:start="59:17" pos:end="59:68"><name pos:start="59:17" pos:end="59:17">r</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <call pos:start="59:21" pos:end="59:68"><name pos:start="59:21" pos:end="59:38">ff_find_start_code</name><argument_list pos:start="59:39" pos:end="59:68">(<argument pos:start="59:40" pos:end="59:41"><expr pos:start="59:40" pos:end="59:41"><name pos:start="59:40" pos:end="59:41">r1</name></expr></argument>, <argument pos:start="59:44" pos:end="59:54"><expr pos:start="59:44" pos:end="59:54"><name pos:start="59:44" pos:end="59:47">buf1</name> <operator pos:start="59:49" pos:end="59:49">+</operator> <name pos:start="59:51" pos:end="59:54">size</name></expr></argument>, <argument pos:start="59:57" pos:end="59:67"><expr pos:start="59:57" pos:end="59:67"><operator pos:start="59:57" pos:end="59:57">&amp;</operator><name pos:start="59:58" pos:end="59:67">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="61:17" pos:end="117:17"><if pos:start="61:17" pos:end="113:17">if<condition pos:start="61:19" pos:end="61:54">(<expr pos:start="61:20" pos:end="61:53"><operator pos:start="61:20" pos:end="61:20">(</operator><name pos:start="61:21" pos:end="61:30">start_code</name> <operator pos:start="61:32" pos:end="61:32">&amp;</operator> <literal type="number" pos:start="61:34" pos:end="61:43">0xFFFFFF00</literal><operator pos:start="61:44" pos:end="61:44">)</operator> <operator pos:start="61:46" pos:end="61:47">==</operator> <literal type="number" pos:start="61:49" pos:end="61:53">0x100</literal></expr>)</condition> <block pos:start="61:56" pos:end="113:17">{<block_content pos:start="65:21" pos:end="111:21">

                    <comment type="block" pos:start="63:21" pos:end="63:46">/* New start code found */</comment>

                    <if_stmt pos:start="65:21" pos:end="71:21"><if pos:start="65:21" pos:end="71:21">if <condition pos:start="65:24" pos:end="65:44">(<expr pos:start="65:25" pos:end="65:43"><name pos:start="65:25" pos:end="65:34">start_code</name> <operator pos:start="65:36" pos:end="65:37">==</operator> <literal type="number" pos:start="65:39" pos:end="65:43">0x100</literal></expr>)</condition> <block pos:start="65:46" pos:end="71:21">{<block_content pos:start="67:25" pos:end="69:72">

                        <expr_stmt pos:start="67:25" pos:end="67:56"><expr pos:start="67:25" pos:end="67:55"><name pos:start="67:25" pos:end="67:34">frame_type</name> <operator pos:start="67:36" pos:end="67:36">=</operator> <operator pos:start="67:38" pos:end="67:38">(</operator><name pos:start="67:39" pos:end="67:42"><name pos:start="67:39" pos:end="67:39">r</name><index pos:start="67:40" pos:end="67:42">[<expr pos:start="67:41" pos:end="67:41"><literal type="number" pos:start="67:41" pos:end="67:41">1</literal></expr>]</index></name> <operator pos:start="67:44" pos:end="67:44">&amp;</operator> <literal type="number" pos:start="67:46" pos:end="67:49">0x38</literal><operator pos:start="67:50" pos:end="67:50">)</operator> <operator pos:start="67:52" pos:end="67:53">&gt;&gt;</operator> <literal type="number" pos:start="67:55" pos:end="67:55">3</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="69:25" pos:end="69:72"><expr pos:start="69:25" pos:end="69:71"><name pos:start="69:25" pos:end="69:42">temporal_reference</name> <operator pos:start="69:44" pos:end="69:44">=</operator> <operator pos:start="69:46" pos:end="69:46">(</operator><name pos:start="69:47" pos:end="69:49">int</name><operator pos:start="69:50" pos:end="69:50">)</operator><name pos:start="69:51" pos:end="69:54"><name pos:start="69:51" pos:end="69:51">r</name><index pos:start="69:52" pos:end="69:54">[<expr pos:start="69:53" pos:end="69:53"><literal type="number" pos:start="69:53" pos:end="69:53">0</literal></expr>]</index></name> <operator pos:start="69:56" pos:end="69:57">&lt;&lt;</operator> <literal type="number" pos:start="69:59" pos:end="69:59">2</literal> <operator pos:start="69:61" pos:end="69:61">|</operator> <name pos:start="69:63" pos:end="69:66"><name pos:start="69:63" pos:end="69:63">r</name><index pos:start="69:64" pos:end="69:66">[<expr pos:start="69:65" pos:end="69:65"><literal type="number" pos:start="69:65" pos:end="69:65">1</literal></expr>]</index></name> <operator pos:start="69:68" pos:end="69:69">&gt;&gt;</operator> <literal type="number" pos:start="69:71" pos:end="69:71">6</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="73:21" pos:end="77:21"><if pos:start="73:21" pos:end="77:21">if <condition pos:start="73:24" pos:end="73:44">(<expr pos:start="73:25" pos:end="73:43"><name pos:start="73:25" pos:end="73:34">start_code</name> <operator pos:start="73:36" pos:end="73:37">==</operator> <literal type="number" pos:start="73:39" pos:end="73:43">0x1B8</literal></expr>)</condition> <block pos:start="73:46" pos:end="77:21">{<block_content pos:start="75:25" pos:end="75:46">

                        <expr_stmt pos:start="75:25" pos:end="75:46"><expr pos:start="75:25" pos:end="75:45"><name pos:start="75:25" pos:end="75:41">begin_of_sequence</name> <operator pos:start="75:43" pos:end="75:43">=</operator> <literal type="number" pos:start="75:45" pos:end="75:45">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <if_stmt pos:start="81:21" pos:end="111:21"><if pos:start="81:21" pos:end="99:21">if <condition pos:start="81:24" pos:end="81:39">(<expr pos:start="81:25" pos:end="81:38"><name pos:start="81:25" pos:end="81:25">r</name> <operator pos:start="81:27" pos:end="81:27">-</operator> <name pos:start="81:29" pos:end="81:32">buf1</name> <operator pos:start="81:34" pos:end="81:34">&lt;</operator> <name pos:start="81:36" pos:end="81:38">len</name></expr>)</condition> <block pos:start="81:41" pos:end="99:21">{<block_content pos:start="85:25" pos:end="97:31">

                        <comment type="block" pos:start="83:25" pos:end="83:66">/* The current slice fits in the packet */</comment>

                        <if_stmt pos:start="85:25" pos:end="95:25"><if pos:start="85:25" pos:end="95:25">if <condition pos:start="85:28" pos:end="85:48">(<expr pos:start="85:29" pos:end="85:47"><name pos:start="85:29" pos:end="85:42">begin_of_slice</name> <operator pos:start="85:44" pos:end="85:45">==</operator> <literal type="number" pos:start="85:47" pos:end="85:47">0</literal></expr>)</condition> <block pos:start="85:50" pos:end="95:25">{<block_content pos:start="89:29" pos:end="93:34">

                            <comment type="block" pos:start="87:29" pos:end="87:76">/* no slice at the beginning of the packet... */</comment>

                            <expr_stmt pos:start="89:29" pos:end="89:45"><expr pos:start="89:29" pos:end="89:44"><name pos:start="89:29" pos:end="89:40">end_of_slice</name> <operator pos:start="89:42" pos:end="89:42">=</operator> <literal type="number" pos:start="89:44" pos:end="89:44">1</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="91:29" pos:end="91:47"><expr pos:start="91:29" pos:end="91:46"><name pos:start="91:29" pos:end="91:31">len</name> <operator pos:start="91:33" pos:end="91:33">=</operator> <name pos:start="91:35" pos:end="91:35">r</name> <operator pos:start="91:37" pos:end="91:37">-</operator> <name pos:start="91:39" pos:end="91:42">buf1</name> <operator pos:start="91:44" pos:end="91:44">-</operator> <literal type="number" pos:start="91:46" pos:end="91:46">4</literal></expr>;</expr_stmt>

                            <break pos:start="93:29" pos:end="93:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="97:25" pos:end="97:31"><expr pos:start="97:25" pos:end="97:30"><name pos:start="97:25" pos:end="97:26">r1</name> <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:30">r</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="99:23" pos:end="111:21">else <block pos:start="99:28" pos:end="111:21">{<block_content pos:start="101:25" pos:end="109:30">

                        <if_stmt pos:start="101:25" pos:end="107:25"><if pos:start="101:25" pos:end="107:25">if <condition pos:start="101:28" pos:end="101:53">(<expr pos:start="101:29" pos:end="101:52"><name pos:start="101:29" pos:end="101:29">r</name> <operator pos:start="101:31" pos:end="101:31">-</operator> <name pos:start="101:33" pos:end="101:34">r1</name> <operator pos:start="101:36" pos:end="101:36">&lt;</operator> <name pos:start="101:38" pos:end="101:52">max_packet_size</name></expr>)</condition> <block pos:start="101:55" pos:end="107:25">{<block_content pos:start="103:29" pos:end="105:45">

                            <expr_stmt pos:start="103:29" pos:end="103:48"><expr pos:start="103:29" pos:end="103:47"><name pos:start="103:29" pos:end="103:31">len</name> <operator pos:start="103:33" pos:end="103:33">=</operator> <name pos:start="103:35" pos:end="103:36">r1</name> <operator pos:start="103:38" pos:end="103:38">-</operator> <name pos:start="103:40" pos:end="103:43">buf1</name> <operator pos:start="103:45" pos:end="103:45">-</operator> <literal type="number" pos:start="103:47" pos:end="103:47">4</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="105:29" pos:end="105:45"><expr pos:start="105:29" pos:end="105:44"><name pos:start="105:29" pos:end="105:40">end_of_slice</name> <operator pos:start="105:42" pos:end="105:42">=</operator> <literal type="number" pos:start="105:44" pos:end="105:44">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <break pos:start="109:25" pos:end="109:30">break;</break>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="113:19" pos:end="117:17">else <block pos:start="113:24" pos:end="117:17">{<block_content pos:start="115:21" pos:end="115:26">

                    <break pos:start="115:21" pos:end="115:26">break;</break>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:14"><expr pos:start="125:9" pos:end="125:13"><name pos:start="125:9" pos:end="125:9">h</name> <operator pos:start="125:11" pos:end="125:11">=</operator> <literal type="number" pos:start="125:13" pos:end="125:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:38"><expr pos:start="127:9" pos:end="127:37"><name pos:start="127:9" pos:end="127:9">h</name> <operator pos:start="127:11" pos:end="127:12">|=</operator> <name pos:start="127:14" pos:end="127:31">temporal_reference</name> <operator pos:start="127:33" pos:end="127:34">&lt;&lt;</operator> <literal type="number" pos:start="127:36" pos:end="127:37">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:37"><expr pos:start="129:9" pos:end="129:36"><name pos:start="129:9" pos:end="129:9">h</name> <operator pos:start="129:11" pos:end="129:12">|=</operator> <name pos:start="129:14" pos:end="129:30">begin_of_sequence</name> <operator pos:start="129:32" pos:end="129:33">&lt;&lt;</operator> <literal type="number" pos:start="129:35" pos:end="129:36">13</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:34"><expr pos:start="131:9" pos:end="131:33"><name pos:start="131:9" pos:end="131:9">h</name> <operator pos:start="131:11" pos:end="131:12">|=</operator> <name pos:start="131:14" pos:end="131:27">begin_of_slice</name> <operator pos:start="131:29" pos:end="131:30">&lt;&lt;</operator> <literal type="number" pos:start="131:32" pos:end="131:33">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:32"><expr pos:start="133:9" pos:end="133:31"><name pos:start="133:9" pos:end="133:9">h</name> <operator pos:start="133:11" pos:end="133:12">|=</operator> <name pos:start="133:14" pos:end="133:25">end_of_slice</name> <operator pos:start="133:27" pos:end="133:28">&lt;&lt;</operator> <literal type="number" pos:start="133:30" pos:end="133:31">11</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:29"><expr pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:9">h</name> <operator pos:start="135:11" pos:end="135:12">|=</operator> <name pos:start="135:14" pos:end="135:23">frame_type</name> <operator pos:start="135:25" pos:end="135:26">&lt;&lt;</operator> <literal type="number" pos:start="135:28" pos:end="135:28">8</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:19"><expr pos:start="139:9" pos:end="139:18"><name pos:start="139:9" pos:end="139:9">q</name> <operator pos:start="139:11" pos:end="139:11">=</operator> <name pos:start="139:13" pos:end="139:18"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:18">buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:23"><expr pos:start="141:9" pos:end="141:22"><operator pos:start="141:9" pos:end="141:9">*</operator><name pos:start="141:10" pos:end="141:10">q</name><operator pos:start="141:11" pos:end="141:12">++</operator> <operator pos:start="141:14" pos:end="141:14">=</operator> <name pos:start="141:16" pos:end="141:16">h</name> <operator pos:start="141:18" pos:end="141:19">&gt;&gt;</operator> <literal type="number" pos:start="141:21" pos:end="141:22">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:23"><expr pos:start="143:9" pos:end="143:22"><operator pos:start="143:9" pos:end="143:9">*</operator><name pos:start="143:10" pos:end="143:10">q</name><operator pos:start="143:11" pos:end="143:12">++</operator> <operator pos:start="143:14" pos:end="143:14">=</operator> <name pos:start="143:16" pos:end="143:16">h</name> <operator pos:start="143:18" pos:end="143:19">&gt;&gt;</operator> <literal type="number" pos:start="143:21" pos:end="143:22">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:22"><expr pos:start="145:9" pos:end="145:21"><operator pos:start="145:9" pos:end="145:9">*</operator><name pos:start="145:10" pos:end="145:10">q</name><operator pos:start="145:11" pos:end="145:12">++</operator> <operator pos:start="145:14" pos:end="145:14">=</operator> <name pos:start="145:16" pos:end="145:16">h</name> <operator pos:start="145:18" pos:end="145:19">&gt;&gt;</operator> <literal type="number" pos:start="145:21" pos:end="145:21">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:17"><expr pos:start="147:9" pos:end="147:16"><operator pos:start="147:9" pos:end="147:9">*</operator><name pos:start="147:10" pos:end="147:10">q</name><operator pos:start="147:11" pos:end="147:12">++</operator> <operator pos:start="147:14" pos:end="147:14">=</operator> <name pos:start="147:16" pos:end="147:16">h</name></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:29"><expr pos:start="151:9" pos:end="151:28"><call pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:14">memcpy</name><argument_list pos:start="151:15" pos:end="151:28">(<argument pos:start="151:16" pos:end="151:16"><expr pos:start="151:16" pos:end="151:16"><name pos:start="151:16" pos:end="151:16">q</name></expr></argument>, <argument pos:start="151:19" pos:end="151:22"><expr pos:start="151:19" pos:end="151:22"><name pos:start="151:19" pos:end="151:22">buf1</name></expr></argument>, <argument pos:start="151:25" pos:end="151:27"><expr pos:start="151:25" pos:end="151:27"><name pos:start="151:25" pos:end="151:27">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:17"><expr pos:start="153:9" pos:end="153:16"><name pos:start="153:9" pos:end="153:9">q</name> <operator pos:start="153:11" pos:end="153:12">+=</operator> <name pos:start="153:14" pos:end="153:16">len</name></expr>;</expr_stmt>



        <comment type="block" pos:start="157:9" pos:end="157:31">/* 90 KHz time stamp */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:40"><expr pos:start="159:9" pos:end="159:39"><name pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:20">timestamp</name></name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:39"><name pos:start="159:24" pos:end="159:24">s</name><operator pos:start="159:25" pos:end="159:26">-&gt;</operator><name pos:start="159:27" pos:end="159:39">cur_timestamp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:64"><expr pos:start="161:9" pos:end="161:63"><call pos:start="161:9" pos:end="161:63"><name pos:start="161:9" pos:end="161:24">ff_rtp_send_data</name><argument_list pos:start="161:25" pos:end="161:63">(<argument pos:start="161:26" pos:end="161:27"><expr pos:start="161:26" pos:end="161:27"><name pos:start="161:26" pos:end="161:27">s1</name></expr></argument>, <argument pos:start="161:30" pos:end="161:35"><expr pos:start="161:30" pos:end="161:35"><name pos:start="161:30" pos:end="161:35"><name pos:start="161:30" pos:end="161:30">s</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:35">buf</name></name></expr></argument>, <argument pos:start="161:38" pos:end="161:47"><expr pos:start="161:38" pos:end="161:47"><name pos:start="161:38" pos:end="161:38">q</name> <operator pos:start="161:40" pos:end="161:40">-</operator> <name pos:start="161:42" pos:end="161:47"><name pos:start="161:42" pos:end="161:42">s</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:47">buf</name></name></expr></argument>, <argument pos:start="161:50" pos:end="161:62"><expr pos:start="161:50" pos:end="161:62"><operator pos:start="161:50" pos:end="161:50">(</operator><name pos:start="161:51" pos:end="161:53">len</name> <operator pos:start="161:55" pos:end="161:56">==</operator> <name pos:start="161:58" pos:end="161:61">size</name><operator pos:start="161:62" pos:end="161:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:20"><expr pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:12">buf1</name> <operator pos:start="165:14" pos:end="165:15">+=</operator> <name pos:start="165:17" pos:end="165:19">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:20"><expr pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:12">size</name> <operator pos:start="167:14" pos:end="167:15">-=</operator> <name pos:start="167:17" pos:end="167:19">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:38"><expr pos:start="169:9" pos:end="169:37"><name pos:start="169:9" pos:end="169:22">begin_of_slice</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <name pos:start="169:26" pos:end="169:37">end_of_slice</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:25"><expr pos:start="171:9" pos:end="171:24"><name pos:start="171:9" pos:end="171:20">end_of_slice</name> <operator pos:start="171:22" pos:end="171:22">=</operator> <literal type="number" pos:start="171:24" pos:end="171:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
