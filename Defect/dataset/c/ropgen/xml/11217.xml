<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11217.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">register_savevm_live</name><parameter_list pos:start="1:25" pos:end="11:38">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">DeviceState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">dev</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:42"><decl pos:start="3:26" pos:end="3:42"><type pos:start="3:26" pos:end="3:42"><specifier pos:start="3:26" pos:end="3:30">const</specifier> <name pos:start="3:32" pos:end="3:35">char</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:42">idstr</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:40"><decl pos:start="5:26" pos:end="5:40"><type pos:start="5:26" pos:end="5:40"><name pos:start="5:26" pos:end="5:28">int</name></type> <name pos:start="5:30" pos:end="5:40">instance_id</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:39"><decl pos:start="7:26" pos:end="7:39"><type pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:28">int</name></type> <name pos:start="7:30" pos:end="7:39">version_id</name></decl></parameter>,

                         <parameter pos:start="9:26" pos:end="9:44"><decl pos:start="9:26" pos:end="9:44"><type pos:start="9:26" pos:end="9:44"><name pos:start="9:26" pos:end="9:39">SaveVMHandlers</name> <modifier pos:start="9:41" pos:end="9:41">*</modifier></type><name pos:start="9:42" pos:end="9:44">ops</name></decl></parameter>,

                         <parameter pos:start="11:26" pos:end="11:37"><decl pos:start="11:26" pos:end="11:37"><type pos:start="11:26" pos:end="11:37"><name pos:start="11:26" pos:end="11:29">void</name> <modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:37">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="91:1">{<block_content pos:start="15:5" pos:end="89:13">

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">SaveStateEntry</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:22">se</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:6">se</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:42"><name pos:start="19:10" pos:end="19:18">g_malloc0</name><argument_list pos:start="19:19" pos:end="19:42">(<argument pos:start="19:20" pos:end="19:41"><expr pos:start="19:20" pos:end="19:41"><sizeof pos:start="19:20" pos:end="19:41">sizeof<argument_list pos:start="19:26" pos:end="19:41">(<argument pos:start="19:27" pos:end="19:40"><expr pos:start="19:27" pos:end="19:40"><name pos:start="19:27" pos:end="19:40">SaveStateEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:6">se</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:18">version_id</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:31">version_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:6">se</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:18">section_id</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:51"><name pos:start="23:22" pos:end="23:33">savevm_state</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:51">global_section_id</name></name><operator pos:start="23:52" pos:end="23:53">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:6">se</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:11">ops</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:17">ops</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:6">se</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:14">opaque</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:23">opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:6">se</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:12">vmsd</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:49">/* if this is a live_savem then set is_ram */</comment>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:11">ops</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:28">save_live_setup</name></name> <operator pos:start="33:30" pos:end="33:31">!=</operator> <name pos:start="33:33" pos:end="33:36">NULL</name></expr>)</condition> <block pos:start="33:39" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:10">se</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:18">is_ram</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="67:5"><if pos:start="41:5" pos:end="67:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">dev</name></expr>)</condition> <block pos:start="41:14" pos:end="67:5">{<block_content pos:start="43:9" pos:end="65:9">

        <decl_stmt pos:start="43:9" pos:end="43:42"><decl pos:start="43:9" pos:end="43:41"><type pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:12">char</name> <modifier pos:start="43:14" pos:end="43:14">*</modifier></type><name pos:start="43:15" pos:end="43:16">id</name> <init pos:start="43:18" pos:end="43:41">= <expr pos:start="43:20" pos:end="43:41"><call pos:start="43:20" pos:end="43:41"><name pos:start="43:20" pos:end="43:36">qdev_get_dev_path</name><argument_list pos:start="43:37" pos:end="43:41">(<argument pos:start="43:38" pos:end="43:40"><expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="65:9"><if pos:start="45:9" pos:end="65:9">if <condition pos:start="45:12" pos:end="45:15">(<expr pos:start="45:13" pos:end="45:14"><name pos:start="45:13" pos:end="45:14">id</name></expr>)</condition> <block pos:start="45:17" pos:end="65:9">{<block_content pos:start="47:13" pos:end="63:29">

            <expr_stmt pos:start="47:13" pos:end="47:54"><expr pos:start="47:13" pos:end="47:53"><call pos:start="47:13" pos:end="47:53"><name pos:start="47:13" pos:end="47:19">pstrcpy</name><argument_list pos:start="47:20" pos:end="47:53">(<argument pos:start="47:21" pos:end="47:29"><expr pos:start="47:21" pos:end="47:29"><name pos:start="47:21" pos:end="47:29"><name pos:start="47:21" pos:end="47:22">se</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:29">idstr</name></name></expr></argument>, <argument pos:start="47:32" pos:end="47:48"><expr pos:start="47:32" pos:end="47:48"><sizeof pos:start="47:32" pos:end="47:48">sizeof<argument_list pos:start="47:38" pos:end="47:48">(<argument pos:start="47:39" pos:end="47:47"><expr pos:start="47:39" pos:end="47:47"><name pos:start="47:39" pos:end="47:47"><name pos:start="47:39" pos:end="47:40">se</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:47">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="47:51" pos:end="47:52"><expr pos:start="47:51" pos:end="47:52"><name pos:start="47:51" pos:end="47:52">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:55"><expr pos:start="49:13" pos:end="49:54"><call pos:start="49:13" pos:end="49:54"><name pos:start="49:13" pos:end="49:19">pstrcat</name><argument_list pos:start="49:20" pos:end="49:54">(<argument pos:start="49:21" pos:end="49:29"><expr pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:22">se</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:29">idstr</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:48"><expr pos:start="49:32" pos:end="49:48"><sizeof pos:start="49:32" pos:end="49:48">sizeof<argument_list pos:start="49:38" pos:end="49:48">(<argument pos:start="49:39" pos:end="49:47"><expr pos:start="49:39" pos:end="49:47"><name pos:start="49:39" pos:end="49:47"><name pos:start="49:39" pos:end="49:40">se</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:47">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:51" pos:end="49:53"><expr pos:start="49:51" pos:end="49:53"><literal type="string" pos:start="49:51" pos:end="49:53">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:23"><expr pos:start="51:13" pos:end="51:22"><call pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:18">g_free</name><argument_list pos:start="51:19" pos:end="51:22">(<argument pos:start="51:20" pos:end="51:21"><expr pos:start="51:20" pos:end="51:21"><name pos:start="51:20" pos:end="51:21">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:56"><expr pos:start="55:13" pos:end="55:55"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:14">se</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:22">compat</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <call pos:start="55:26" pos:end="55:55"><name pos:start="55:26" pos:end="55:34">g_malloc0</name><argument_list pos:start="55:35" pos:end="55:55">(<argument pos:start="55:36" pos:end="55:54"><expr pos:start="55:36" pos:end="55:54"><sizeof pos:start="55:36" pos:end="55:54">sizeof<argument_list pos:start="55:42" pos:end="55:54">(<argument pos:start="55:43" pos:end="55:53"><expr pos:start="55:43" pos:end="55:53"><name pos:start="55:43" pos:end="55:53">CompatEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:73"><expr pos:start="57:13" pos:end="57:72"><call pos:start="57:13" pos:end="57:72"><name pos:start="57:13" pos:end="57:19">pstrcpy</name><argument_list pos:start="57:20" pos:end="57:72">(<argument pos:start="57:21" pos:end="57:37"><expr pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:22">se</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:30">compat</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:37">idstr</name></name></expr></argument>, <argument pos:start="57:40" pos:end="57:64"><expr pos:start="57:40" pos:end="57:64"><sizeof pos:start="57:40" pos:end="57:64">sizeof<argument_list pos:start="57:46" pos:end="57:64">(<argument pos:start="57:47" pos:end="57:63"><expr pos:start="57:47" pos:end="57:63"><name pos:start="57:47" pos:end="57:63"><name pos:start="57:47" pos:end="57:48">se</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:56">compat</name><operator pos:start="57:57" pos:end="57:58">-&gt;</operator><name pos:start="57:59" pos:end="57:63">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="57:67" pos:end="57:71"><expr pos:start="57:67" pos:end="57:71"><name pos:start="57:67" pos:end="57:71">idstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="61:75"><expr pos:start="59:13" pos:end="61:74"><name pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:14">se</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:22">compat</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:35">instance_id</name></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <ternary pos:start="59:39" pos:end="61:74"><condition pos:start="59:39" pos:end="59:57"><expr pos:start="59:39" pos:end="59:55"><name pos:start="59:39" pos:end="59:49">instance_id</name> <operator pos:start="59:51" pos:end="59:52">==</operator> <operator pos:start="59:54" pos:end="59:54">-</operator><literal type="number" pos:start="59:55" pos:end="59:55">1</literal></expr> ?</condition><then pos:start="61:26" pos:end="61:60">

                         <expr pos:start="61:26" pos:end="61:60"><call pos:start="61:26" pos:end="61:60"><name pos:start="61:26" pos:end="61:53">calculate_compat_instance_id</name><argument_list pos:start="61:54" pos:end="61:60">(<argument pos:start="61:55" pos:end="61:59"><expr pos:start="61:55" pos:end="61:59"><name pos:start="61:55" pos:end="61:59">idstr</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="61:62" pos:end="61:74">: <expr pos:start="61:64" pos:end="61:74"><name pos:start="61:64" pos:end="61:74">instance_id</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:29"><expr pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:23">instance_id</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <operator pos:start="63:27" pos:end="63:27">-</operator><literal type="number" pos:start="63:28" pos:end="63:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><call pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:11">pstrcat</name><argument_list pos:start="69:12" pos:end="69:48">(<argument pos:start="69:13" pos:end="69:21"><expr pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:14">se</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:21">idstr</name></name></expr></argument>, <argument pos:start="69:24" pos:end="69:40"><expr pos:start="69:24" pos:end="69:40"><sizeof pos:start="69:24" pos:end="69:40">sizeof<argument_list pos:start="69:30" pos:end="69:40">(<argument pos:start="69:31" pos:end="69:39"><expr pos:start="69:31" pos:end="69:39"><name pos:start="69:31" pos:end="69:39"><name pos:start="69:31" pos:end="69:32">se</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:39">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="69:43" pos:end="69:47"><expr pos:start="69:43" pos:end="69:47"><name pos:start="69:43" pos:end="69:47">idstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:26">(<expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:19">instance_id</name> <operator pos:start="73:21" pos:end="73:22">==</operator> <operator pos:start="73:24" pos:end="73:24">-</operator><literal type="number" pos:start="73:25" pos:end="73:25">1</literal></expr>)</condition> <block pos:start="73:28" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:63">

        <expr_stmt pos:start="75:9" pos:end="75:63"><expr pos:start="75:9" pos:end="75:62"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:10">se</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:23">instance_id</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <call pos:start="75:27" pos:end="75:62"><name pos:start="75:27" pos:end="75:51">calculate_new_instance_id</name><argument_list pos:start="75:52" pos:end="75:62">(<argument pos:start="75:53" pos:end="75:61"><expr pos:start="75:53" pos:end="75:61"><name pos:start="75:53" pos:end="75:61"><name pos:start="75:53" pos:end="75:54">se</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:61">idstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="81:5">else <block pos:start="77:12" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:38">

        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:10">se</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:23">instance_id</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:37">instance_id</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:48"><expr pos:start="83:5" pos:end="83:47"><call pos:start="83:5" pos:end="83:47"><name pos:start="83:5" pos:end="83:10">assert</name><argument_list pos:start="83:11" pos:end="83:47">(<argument pos:start="83:12" pos:end="83:46"><expr pos:start="83:12" pos:end="83:46"><operator pos:start="83:12" pos:end="83:12">!</operator><name pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:14">se</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:22">compat</name></name> <operator pos:start="83:24" pos:end="83:25">||</operator> <name pos:start="83:27" pos:end="83:41"><name pos:start="83:27" pos:end="83:28">se</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:41">instance_id</name></name> <operator pos:start="83:43" pos:end="83:44">==</operator> <literal type="number" pos:start="83:46" pos:end="83:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="85:5" pos:end="85:32">/* add at the end of list */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:58"><expr pos:start="87:5" pos:end="87:57"><call pos:start="87:5" pos:end="87:57"><name pos:start="87:5" pos:end="87:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="87:23" pos:end="87:57">(<argument pos:start="87:24" pos:end="87:45"><expr pos:start="87:24" pos:end="87:45"><operator pos:start="87:24" pos:end="87:24">&amp;</operator><name pos:start="87:25" pos:end="87:45"><name pos:start="87:25" pos:end="87:36">savevm_state</name><operator pos:start="87:37" pos:end="87:37">.</operator><name pos:start="87:38" pos:end="87:45">handlers</name></name></expr></argument>, <argument pos:start="87:48" pos:end="87:49"><expr pos:start="87:48" pos:end="87:49"><name pos:start="87:48" pos:end="87:49">se</name></expr></argument>, <argument pos:start="87:52" pos:end="87:56"><expr pos:start="87:52" pos:end="87:56"><name pos:start="87:52" pos:end="87:56">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
