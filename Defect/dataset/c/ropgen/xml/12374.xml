<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12374.c" pos:tabs="8"><function pos:start="1:1" pos:end="527:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_mjpeg_decode_frame</name><parameter_list pos:start="1:26" pos:end="3:42">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:53">void</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:75"><decl pos:start="1:62" pos:end="1:75"><type pos:start="1:62" pos:end="1:75"><name pos:start="1:62" pos:end="1:64">int</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:75">got_frame</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:41"><decl pos:start="3:27" pos:end="3:41"><type pos:start="3:27" pos:end="3:41"><name pos:start="3:27" pos:end="3:34">AVPacket</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:41">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="527:1">{<block_content pos:start="7:5" pos:end="525:25">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:11">AVFrame</name>     <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:22">frame</name> <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>       <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:44"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">MJpegDecodeContext</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:25">s</name> <init pos:start="13:27" pos:end="13:44">= <expr pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:33">avctx</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">buf_end</name></decl>, <decl pos:start="15:29" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:36">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:36">unescaped_buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">hshift</name></decl>, <decl pos:start="19:17" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:17" pos:end="19:22">vshift</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:26">unescaped_buf_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">start_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>, <decl pos:start="25:12" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:16">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:16"><decl pos:start="27:5" pos:end="27:15"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name> <init pos:start="27:13" pos:end="27:15">= <expr pos:start="27:15" pos:end="27:15"><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:16">av_dict_free</name><argument_list pos:start="31:17" pos:end="31:35">(<argument pos:start="31:18" pos:end="31:34"><expr pos:start="31:18" pos:end="31:34"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:34"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:34">exif_metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><call pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:12">av_freep</name><argument_list pos:start="33:13" pos:end="33:26">(<argument pos:start="33:14" pos:end="33:25"><expr pos:start="33:14" pos:end="33:25"><operator pos:start="33:14" pos:end="33:14">&amp;</operator><name pos:start="33:15" pos:end="33:25"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">stereo3d</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:11">buf_ptr</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:11">buf_end</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:17">buf</name> <operator pos:start="39:19" pos:end="39:19">+</operator> <name pos:start="39:21" pos:end="39:28">buf_size</name></expr>;</expr_stmt>

    <while pos:start="41:5" pos:end="361:5">while <condition pos:start="41:11" pos:end="41:29">(<expr pos:start="41:12" pos:end="41:28"><name pos:start="41:12" pos:end="41:18">buf_ptr</name> <operator pos:start="41:20" pos:end="41:20">&lt;</operator> <name pos:start="41:22" pos:end="41:28">buf_end</name></expr>)</condition> <block pos:start="41:31" pos:end="361:5">{<block_content pos:start="45:9" pos:end="359:73">

        <comment type="block" pos:start="43:9" pos:end="43:36">/* find start next marker */</comment>

        <expr_stmt pos:start="45:9" pos:end="49:63"><expr pos:start="45:9" pos:end="49:62"><name pos:start="45:9" pos:end="45:18">start_code</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <call pos:start="45:22" pos:end="49:62"><name pos:start="45:22" pos:end="45:41">ff_mjpeg_find_marker</name><argument_list pos:start="45:42" pos:end="49:62">(<argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><name pos:start="45:43" pos:end="45:43">s</name></expr></argument>, <argument pos:start="45:46" pos:end="45:53"><expr pos:start="45:46" pos:end="45:53"><operator pos:start="45:46" pos:end="45:46">&amp;</operator><name pos:start="45:47" pos:end="45:53">buf_ptr</name></expr></argument>, <argument pos:start="45:56" pos:end="45:62"><expr pos:start="45:56" pos:end="45:62"><name pos:start="45:56" pos:end="45:62">buf_end</name></expr></argument>,

                                          <argument pos:start="47:43" pos:end="47:60"><expr pos:start="47:43" pos:end="47:60"><operator pos:start="47:43" pos:end="47:43">&amp;</operator><name pos:start="47:44" pos:end="47:60">unescaped_buf_ptr</name></expr></argument>,

                                          <argument pos:start="49:43" pos:end="49:61"><expr pos:start="49:43" pos:end="49:61"><operator pos:start="49:43" pos:end="49:43">&amp;</operator><name pos:start="49:44" pos:end="49:61">unescaped_buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:17">/* EOF */</comment>

        <if_stmt pos:start="53:9" pos:end="67:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:27">(<expr pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:22">start_code</name> <operator pos:start="53:24" pos:end="53:24">&lt;</operator> <literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>)</condition> <block pos:start="53:29" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:18">

            <break pos:start="55:13" pos:end="55:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="67:9">else if <condition pos:start="57:19" pos:end="57:52">(<expr pos:start="57:20" pos:end="57:51"><name pos:start="57:20" pos:end="57:37">unescaped_buf_size</name> <operator pos:start="57:39" pos:end="57:39">&gt;</operator> <name pos:start="57:41" pos:end="57:47">INT_MAX</name> <operator pos:start="57:49" pos:end="57:49">/</operator> <literal type="number" pos:start="57:51" pos:end="57:51">8</literal></expr>)</condition> <block pos:start="57:54" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:39">

            <expr_stmt pos:start="59:13" pos:end="63:61"><expr pos:start="59:13" pos:end="63:60"><call pos:start="59:13" pos:end="63:60"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="63:60">(<argument pos:start="59:20" pos:end="59:24"><expr pos:start="59:20" pos:end="59:24"><name pos:start="59:20" pos:end="59:24">avctx</name></expr></argument>, <argument pos:start="59:27" pos:end="59:38"><expr pos:start="59:27" pos:end="59:38"><name pos:start="59:27" pos:end="59:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="61:20" pos:end="61:71"><expr pos:start="61:20" pos:end="61:71"><literal type="string" pos:start="61:20" pos:end="61:71">"MJPEG packet 0x%x too big (%d/%d), corrupt data?\n"</literal></expr></argument>,

                   <argument pos:start="63:20" pos:end="63:29"><expr pos:start="63:20" pos:end="63:29"><name pos:start="63:20" pos:end="63:29">start_code</name></expr></argument>, <argument pos:start="63:32" pos:end="63:49"><expr pos:start="63:32" pos:end="63:49"><name pos:start="63:32" pos:end="63:49">unescaped_buf_size</name></expr></argument>, <argument pos:start="63:52" pos:end="63:59"><expr pos:start="63:52" pos:end="63:59"><name pos:start="63:52" pos:end="63:59">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:39">return <expr pos:start="65:20" pos:end="65:38"><name pos:start="65:20" pos:end="65:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="71:46"><expr pos:start="69:9" pos:end="71:45"><call pos:start="69:9" pos:end="71:45"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="71:45">(<argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">avctx</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="69:37" pos:end="69:71"><expr pos:start="69:37" pos:end="69:71"><literal type="string" pos:start="69:37" pos:end="69:71">"marker=%x avail_size_in_buf=%td\n"</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:25"><expr pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:25">start_code</name></expr></argument>, <argument pos:start="71:28" pos:end="71:44"><expr pos:start="71:28" pos:end="71:44"><name pos:start="71:28" pos:end="71:34">buf_end</name> <operator pos:start="71:36" pos:end="71:36">-</operator> <name pos:start="71:38" pos:end="71:44">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:76"><expr pos:start="75:9" pos:end="75:75"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:75"><name pos:start="75:15" pos:end="75:28">init_get_bits8</name><argument_list pos:start="75:29" pos:end="75:75">(<argument pos:start="75:30" pos:end="75:35"><expr pos:start="75:30" pos:end="75:35"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:35"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:35">gb</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:54"><expr pos:start="75:38" pos:end="75:54"><name pos:start="75:38" pos:end="75:54">unescaped_buf_ptr</name></expr></argument>, <argument pos:start="75:57" pos:end="75:74"><expr pos:start="75:57" pos:end="75:74"><name pos:start="75:57" pos:end="75:74">unescaped_buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:20">(<expr pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:17">&lt;</operator> <literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr>)</condition> <block pos:start="79:22" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:22">

            <expr_stmt pos:start="81:13" pos:end="81:60"><expr pos:start="81:13" pos:end="81:59"><call pos:start="81:13" pos:end="81:59"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="81:59">(<argument pos:start="81:20" pos:end="81:24"><expr pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:24">avctx</name></expr></argument>, <argument pos:start="81:27" pos:end="81:38"><expr pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:41" pos:end="81:58"><expr pos:start="81:41" pos:end="81:58"><literal type="string" pos:start="81:41" pos:end="81:58">"invalid buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="83:13" pos:end="83:22">goto <name pos:start="83:18" pos:end="83:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:35"><expr pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:21">start_code</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:34">start_code</name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:71"><if pos:start="91:9" pos:end="93:71">if <condition pos:start="91:12" pos:end="91:49">(<expr pos:start="91:13" pos:end="91:48"><name pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:20">avctx</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:27">debug</name></name> <operator pos:start="91:29" pos:end="91:29">&amp;</operator> <name pos:start="91:31" pos:end="91:48">FF_DEBUG_STARTCODE</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:71"><block_content pos:start="93:13" pos:end="93:71">

            <expr_stmt pos:start="93:13" pos:end="93:71"><expr pos:start="93:13" pos:end="93:70"><call pos:start="93:13" pos:end="93:70"><name pos:start="93:13" pos:end="93:18">av_log</name><argument_list pos:start="93:19" pos:end="93:70">(<argument pos:start="93:20" pos:end="93:24"><expr pos:start="93:20" pos:end="93:24"><name pos:start="93:20" pos:end="93:24">avctx</name></expr></argument>, <argument pos:start="93:27" pos:end="93:38"><expr pos:start="93:27" pos:end="93:38"><name pos:start="93:27" pos:end="93:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="93:41" pos:end="93:57"><expr pos:start="93:41" pos:end="93:57"><literal type="string" pos:start="93:41" pos:end="93:57">"startcode: %X\n"</literal></expr></argument>, <argument pos:start="93:60" pos:end="93:69"><expr pos:start="93:60" pos:end="93:69"><name pos:start="93:60" pos:end="93:69">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="97:9" pos:end="97:29">/* process markers */</comment>

        <if_stmt pos:start="99:9" pos:end="115:32"><if pos:start="99:9" pos:end="103:62">if <condition pos:start="99:12" pos:end="99:53">(<expr pos:start="99:13" pos:end="99:52"><name pos:start="99:13" pos:end="99:22">start_code</name> <operator pos:start="99:24" pos:end="99:25">&gt;=</operator> <literal type="number" pos:start="99:27" pos:end="99:30">0xd0</literal> <operator pos:start="99:32" pos:end="99:33">&amp;&amp;</operator> <name pos:start="99:35" pos:end="99:44">start_code</name> <operator pos:start="99:46" pos:end="99:47">&lt;=</operator> <literal type="number" pos:start="99:49" pos:end="99:52">0xd7</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="103:62"><block_content pos:start="101:13" pos:end="103:62">

            <expr_stmt pos:start="101:13" pos:end="103:62"><expr pos:start="101:13" pos:end="103:61"><call pos:start="101:13" pos:end="103:61"><name pos:start="101:13" pos:end="101:18">av_log</name><argument_list pos:start="101:19" pos:end="103:61">(<argument pos:start="101:20" pos:end="101:24"><expr pos:start="101:20" pos:end="101:24"><name pos:start="101:20" pos:end="101:24">avctx</name></expr></argument>, <argument pos:start="101:27" pos:end="101:38"><expr pos:start="101:27" pos:end="101:38"><name pos:start="101:27" pos:end="101:38">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="103:20" pos:end="103:41"><expr pos:start="103:20" pos:end="103:41"><literal type="string" pos:start="103:20" pos:end="103:41">"restart marker: %d\n"</literal></expr></argument>, <argument pos:start="103:44" pos:end="103:60"><expr pos:start="103:44" pos:end="103:60"><name pos:start="103:44" pos:end="103:53">start_code</name> <operator pos:start="103:55" pos:end="103:55">&amp;</operator> <literal type="number" pos:start="103:57" pos:end="103:60">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <comment type="block" pos:start="105:13" pos:end="105:28">/* APP fields */</comment>

        <if type="elseif" pos:start="107:9" pos:end="109:32">else if <condition pos:start="107:17" pos:end="107:59">(<expr pos:start="107:18" pos:end="107:58"><name pos:start="107:18" pos:end="107:27">start_code</name> <operator pos:start="107:29" pos:end="107:30">&gt;=</operator> <name pos:start="107:32" pos:end="107:35">APP0</name> <operator pos:start="107:37" pos:end="107:38">&amp;&amp;</operator> <name pos:start="107:40" pos:end="107:49">start_code</name> <operator pos:start="107:51" pos:end="107:52">&lt;=</operator> <name pos:start="107:54" pos:end="107:58">APP15</name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:32"><block_content pos:start="109:13" pos:end="109:32">

            <expr_stmt pos:start="109:13" pos:end="109:32"><expr pos:start="109:13" pos:end="109:31"><call pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:28">mjpeg_decode_app</name><argument_list pos:start="109:29" pos:end="109:31">(<argument pos:start="109:30" pos:end="109:30"><expr pos:start="109:30" pos:end="109:30"><name pos:start="109:30" pos:end="109:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <comment type="block" pos:start="111:13" pos:end="111:25">/* Comment */</comment>

        <if type="elseif" pos:start="113:9" pos:end="115:32">else if <condition pos:start="113:17" pos:end="113:35">(<expr pos:start="113:18" pos:end="113:34"><name pos:start="113:18" pos:end="113:27">start_code</name> <operator pos:start="113:29" pos:end="113:30">==</operator> <name pos:start="113:32" pos:end="113:34">COM</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:32"><block_content pos:start="115:13" pos:end="115:32">

            <expr_stmt pos:start="115:13" pos:end="115:32"><expr pos:start="115:13" pos:end="115:31"><call pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:28">mjpeg_decode_com</name><argument_list pos:start="115:29" pos:end="115:31">(<argument pos:start="115:30" pos:end="115:30"><expr pos:start="115:30" pos:end="115:30"><name pos:start="115:30" pos:end="115:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:17"><expr pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <operator pos:start="119:15" pos:end="119:15">-</operator><literal type="number" pos:start="119:16" pos:end="119:16">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="125:55">(<expr pos:start="123:13" pos:end="125:54"><operator pos:start="123:13" pos:end="123:13">!</operator><name pos:start="123:14" pos:end="123:34">CONFIG_JPEGLS_DECODER</name> <operator pos:start="123:36" pos:end="123:37">&amp;&amp;</operator>

            <operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:23">start_code</name> <operator pos:start="125:25" pos:end="125:26">==</operator> <name pos:start="125:28" pos:end="125:32">SOF48</name> <operator pos:start="125:34" pos:end="125:35">||</operator> <name pos:start="125:37" pos:end="125:46">start_code</name> <operator pos:start="125:48" pos:end="125:49">==</operator> <name pos:start="125:51" pos:end="125:53">LSE</name><operator pos:start="125:54" pos:end="125:54">)</operator></expr>)</condition> <block pos:start="125:57" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:35">

            <expr_stmt pos:start="127:13" pos:end="127:74"><expr pos:start="127:13" pos:end="127:73"><call pos:start="127:13" pos:end="127:73"><name pos:start="127:13" pos:end="127:18">av_log</name><argument_list pos:start="127:19" pos:end="127:73">(<argument pos:start="127:20" pos:end="127:24"><expr pos:start="127:20" pos:end="127:24"><name pos:start="127:20" pos:end="127:24">avctx</name></expr></argument>, <argument pos:start="127:27" pos:end="127:38"><expr pos:start="127:27" pos:end="127:38"><name pos:start="127:27" pos:end="127:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:41" pos:end="127:72"><expr pos:start="127:41" pos:end="127:72"><literal type="string" pos:start="127:41" pos:end="127:72">"JPEG-LS support not enabled.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="129:13" pos:end="129:35">return <expr pos:start="129:20" pos:end="129:34"><call pos:start="129:20" pos:end="129:34"><name pos:start="129:20" pos:end="129:26">AVERROR</name><argument_list pos:start="129:27" pos:end="129:34">(<argument pos:start="129:28" pos:end="129:33"><expr pos:start="129:28" pos:end="129:33"><name pos:start="129:28" pos:end="129:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="135:9" pos:end="347:9">switch <condition pos:start="135:16" pos:end="135:27">(<expr pos:start="135:17" pos:end="135:26"><name pos:start="135:17" pos:end="135:26">start_code</name></expr>)</condition> <block pos:start="135:29" pos:end="347:9">{<block_content pos:start="137:9" pos:end="345:18">

        <case pos:start="137:9" pos:end="137:17">case <expr pos:start="137:14" pos:end="137:16"><name pos:start="137:14" pos:end="137:16">SOI</name></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:36"><expr pos:start="139:13" pos:end="139:35"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:31">restart_interval</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <literal type="number" pos:start="139:35" pos:end="139:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:28"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:28">restart_count</name></name>    <operator pos:start="141:33" pos:end="141:33">=</operator> <literal type="number" pos:start="141:35" pos:end="141:35">0</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="143:13" pos:end="143:38">/* nothing to do on SOI */</comment>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        <case pos:start="147:9" pos:end="147:17">case <expr pos:start="147:14" pos:end="147:16"><name pos:start="147:14" pos:end="147:16">DQT</name></expr>:</case>

            <expr_stmt pos:start="149:13" pos:end="149:35"><expr pos:start="149:13" pos:end="149:34"><call pos:start="149:13" pos:end="149:34"><name pos:start="149:13" pos:end="149:31">ff_mjpeg_decode_dqt</name><argument_list pos:start="149:32" pos:end="149:34">(<argument pos:start="149:33" pos:end="149:33"><expr pos:start="149:33" pos:end="149:33"><name pos:start="149:33" pos:end="149:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <case pos:start="153:9" pos:end="153:17">case <expr pos:start="153:14" pos:end="153:16"><name pos:start="153:14" pos:end="153:16">DHT</name></expr>:</case>

            <if_stmt pos:start="155:13" pos:end="161:13"><if pos:start="155:13" pos:end="161:13">if <condition pos:start="155:16" pos:end="155:51">(<expr pos:start="155:17" pos:end="155:50"><operator pos:start="155:17" pos:end="155:17">(</operator><name pos:start="155:18" pos:end="155:20">ret</name> <operator pos:start="155:22" pos:end="155:22">=</operator> <call pos:start="155:24" pos:end="155:45"><name pos:start="155:24" pos:end="155:42">ff_mjpeg_decode_dht</name><argument_list pos:start="155:43" pos:end="155:45">(<argument pos:start="155:44" pos:end="155:44"><expr pos:start="155:44" pos:end="155:44"><name pos:start="155:44" pos:end="155:44">s</name></expr></argument>)</argument_list></call><operator pos:start="155:46" pos:end="155:46">)</operator> <operator pos:start="155:48" pos:end="155:48">&lt;</operator> <literal type="number" pos:start="155:50" pos:end="155:50">0</literal></expr>)</condition> <block pos:start="155:53" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:26">

                <expr_stmt pos:start="157:17" pos:end="157:76"><expr pos:start="157:17" pos:end="157:75"><call pos:start="157:17" pos:end="157:75"><name pos:start="157:17" pos:end="157:22">av_log</name><argument_list pos:start="157:23" pos:end="157:75">(<argument pos:start="157:24" pos:end="157:28"><expr pos:start="157:24" pos:end="157:28"><name pos:start="157:24" pos:end="157:28">avctx</name></expr></argument>, <argument pos:start="157:31" pos:end="157:42"><expr pos:start="157:31" pos:end="157:42"><name pos:start="157:31" pos:end="157:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:45" pos:end="157:74"><expr pos:start="157:45" pos:end="157:74"><literal type="string" pos:start="157:45" pos:end="157:74">"huffman table decode error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="159:17" pos:end="159:26">goto <name pos:start="159:22" pos:end="159:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:18">case <expr pos:start="165:14" pos:end="165:17"><name pos:start="165:14" pos:end="165:17">SOF0</name></expr>:</case>

        <case pos:start="167:9" pos:end="167:18">case <expr pos:start="167:14" pos:end="167:17"><name pos:start="167:14" pos:end="167:17">SOF1</name></expr>:</case>

            <expr_stmt pos:start="169:13" pos:end="169:31"><expr pos:start="169:13" pos:end="169:30"><name pos:start="169:13" pos:end="169:23"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:23">lossless</name></name>    <operator pos:start="169:28" pos:end="169:28">=</operator> <literal type="number" pos:start="169:30" pos:end="169:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:31"><expr pos:start="171:13" pos:end="171:30"><name pos:start="171:13" pos:end="171:17"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:17">ls</name></name>          <operator pos:start="171:28" pos:end="171:28">=</operator> <literal type="number" pos:start="171:30" pos:end="171:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:31"><expr pos:start="173:13" pos:end="173:30"><name pos:start="173:13" pos:end="173:26"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:26">progressive</name></name> <operator pos:start="173:28" pos:end="173:28">=</operator> <literal type="number" pos:start="173:30" pos:end="173:30">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="177:26"><if pos:start="175:13" pos:end="177:26">if <condition pos:start="175:16" pos:end="175:51">(<expr pos:start="175:17" pos:end="175:50"><operator pos:start="175:17" pos:end="175:17">(</operator><name pos:start="175:18" pos:end="175:20">ret</name> <operator pos:start="175:22" pos:end="175:22">=</operator> <call pos:start="175:24" pos:end="175:45"><name pos:start="175:24" pos:end="175:42">ff_mjpeg_decode_sof</name><argument_list pos:start="175:43" pos:end="175:45">(<argument pos:start="175:44" pos:end="175:44"><expr pos:start="175:44" pos:end="175:44"><name pos:start="175:44" pos:end="175:44">s</name></expr></argument>)</argument_list></call><operator pos:start="175:46" pos:end="175:46">)</operator> <operator pos:start="175:48" pos:end="175:48">&lt;</operator> <literal type="number" pos:start="175:50" pos:end="175:50">0</literal></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:26"><block_content pos:start="177:17" pos:end="177:26">

                <goto pos:start="177:17" pos:end="177:26">goto <name pos:start="177:22" pos:end="177:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <case pos:start="181:9" pos:end="181:18">case <expr pos:start="181:14" pos:end="181:17"><name pos:start="181:14" pos:end="181:17">SOF2</name></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:31"><expr pos:start="183:13" pos:end="183:30"><name pos:start="183:13" pos:end="183:23"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:23">lossless</name></name>    <operator pos:start="183:28" pos:end="183:28">=</operator> <literal type="number" pos:start="183:30" pos:end="183:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:31"><expr pos:start="185:13" pos:end="185:30"><name pos:start="185:13" pos:end="185:17"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:17">ls</name></name>          <operator pos:start="185:28" pos:end="185:28">=</operator> <literal type="number" pos:start="185:30" pos:end="185:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:26"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:26">progressive</name></name> <operator pos:start="187:28" pos:end="187:28">=</operator> <literal type="number" pos:start="187:30" pos:end="187:30">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="189:13" pos:end="191:26"><if pos:start="189:13" pos:end="191:26">if <condition pos:start="189:16" pos:end="189:51">(<expr pos:start="189:17" pos:end="189:50"><operator pos:start="189:17" pos:end="189:17">(</operator><name pos:start="189:18" pos:end="189:20">ret</name> <operator pos:start="189:22" pos:end="189:22">=</operator> <call pos:start="189:24" pos:end="189:45"><name pos:start="189:24" pos:end="189:42">ff_mjpeg_decode_sof</name><argument_list pos:start="189:43" pos:end="189:45">(<argument pos:start="189:44" pos:end="189:44"><expr pos:start="189:44" pos:end="189:44"><name pos:start="189:44" pos:end="189:44">s</name></expr></argument>)</argument_list></call><operator pos:start="189:46" pos:end="189:46">)</operator> <operator pos:start="189:48" pos:end="189:48">&lt;</operator> <literal type="number" pos:start="189:50" pos:end="189:50">0</literal></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:26"><block_content pos:start="191:17" pos:end="191:26">

                <goto pos:start="191:17" pos:end="191:26">goto <name pos:start="191:22" pos:end="191:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:18">case <expr pos:start="195:14" pos:end="195:17"><name pos:start="195:14" pos:end="195:17">SOF3</name></expr>:</case>

            <expr_stmt pos:start="197:13" pos:end="197:31"><expr pos:start="197:13" pos:end="197:30"><name pos:start="197:13" pos:end="197:23"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:23">lossless</name></name>    <operator pos:start="197:28" pos:end="197:28">=</operator> <literal type="number" pos:start="197:30" pos:end="197:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:31"><expr pos:start="199:13" pos:end="199:30"><name pos:start="199:13" pos:end="199:17"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:17">ls</name></name>          <operator pos:start="199:28" pos:end="199:28">=</operator> <literal type="number" pos:start="199:30" pos:end="199:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:31"><expr pos:start="201:13" pos:end="201:30"><name pos:start="201:13" pos:end="201:26"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:26">progressive</name></name> <operator pos:start="201:28" pos:end="201:28">=</operator> <literal type="number" pos:start="201:30" pos:end="201:30">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="205:26"><if pos:start="203:13" pos:end="205:26">if <condition pos:start="203:16" pos:end="203:51">(<expr pos:start="203:17" pos:end="203:50"><operator pos:start="203:17" pos:end="203:17">(</operator><name pos:start="203:18" pos:end="203:20">ret</name> <operator pos:start="203:22" pos:end="203:22">=</operator> <call pos:start="203:24" pos:end="203:45"><name pos:start="203:24" pos:end="203:42">ff_mjpeg_decode_sof</name><argument_list pos:start="203:43" pos:end="203:45">(<argument pos:start="203:44" pos:end="203:44"><expr pos:start="203:44" pos:end="203:44"><name pos:start="203:44" pos:end="203:44">s</name></expr></argument>)</argument_list></call><operator pos:start="203:46" pos:end="203:46">)</operator> <operator pos:start="203:48" pos:end="203:48">&lt;</operator> <literal type="number" pos:start="203:50" pos:end="203:50">0</literal></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:26"><block_content pos:start="205:17" pos:end="205:26">

                <goto pos:start="205:17" pos:end="205:26">goto <name pos:start="205:22" pos:end="205:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <case pos:start="209:9" pos:end="209:19">case <expr pos:start="209:14" pos:end="209:18"><name pos:start="209:14" pos:end="209:18">SOF48</name></expr>:</case>

            <expr_stmt pos:start="211:13" pos:end="211:31"><expr pos:start="211:13" pos:end="211:30"><name pos:start="211:13" pos:end="211:23"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:23">lossless</name></name>    <operator pos:start="211:28" pos:end="211:28">=</operator> <literal type="number" pos:start="211:30" pos:end="211:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:31"><expr pos:start="213:13" pos:end="213:30"><name pos:start="213:13" pos:end="213:17"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:17">ls</name></name>          <operator pos:start="213:28" pos:end="213:28">=</operator> <literal type="number" pos:start="213:30" pos:end="213:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:31"><expr pos:start="215:13" pos:end="215:30"><name pos:start="215:13" pos:end="215:26"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:26">progressive</name></name> <operator pos:start="215:28" pos:end="215:28">=</operator> <literal type="number" pos:start="215:30" pos:end="215:30">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="217:13" pos:end="219:26"><if pos:start="217:13" pos:end="219:26">if <condition pos:start="217:16" pos:end="217:51">(<expr pos:start="217:17" pos:end="217:50"><operator pos:start="217:17" pos:end="217:17">(</operator><name pos:start="217:18" pos:end="217:20">ret</name> <operator pos:start="217:22" pos:end="217:22">=</operator> <call pos:start="217:24" pos:end="217:45"><name pos:start="217:24" pos:end="217:42">ff_mjpeg_decode_sof</name><argument_list pos:start="217:43" pos:end="217:45">(<argument pos:start="217:44" pos:end="217:44"><expr pos:start="217:44" pos:end="217:44"><name pos:start="217:44" pos:end="217:44">s</name></expr></argument>)</argument_list></call><operator pos:start="217:46" pos:end="217:46">)</operator> <operator pos:start="217:48" pos:end="217:48">&lt;</operator> <literal type="number" pos:start="217:50" pos:end="217:50">0</literal></expr>)</condition><block type="pseudo" pos:start="219:17" pos:end="219:26"><block_content pos:start="219:17" pos:end="219:26">

                <goto pos:start="219:17" pos:end="219:26">goto <name pos:start="219:22" pos:end="219:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="221:13" pos:end="221:18">break;</break>

        <case pos:start="223:9" pos:end="223:17">case <expr pos:start="223:14" pos:end="223:16"><name pos:start="223:14" pos:end="223:16">LSE</name></expr>:</case>

            <if_stmt pos:start="225:13" pos:end="229:26"><if pos:start="225:13" pos:end="229:26">if <condition pos:start="225:16" pos:end="227:52">(<expr pos:start="225:17" pos:end="227:51"><operator pos:start="225:17" pos:end="225:17">!</operator><name pos:start="225:18" pos:end="225:38">CONFIG_JPEGLS_DECODER</name> <operator pos:start="225:40" pos:end="225:41">||</operator>

                <operator pos:start="227:17" pos:end="227:17">(</operator><name pos:start="227:18" pos:end="227:20">ret</name> <operator pos:start="227:22" pos:end="227:22">=</operator> <call pos:start="227:24" pos:end="227:46"><name pos:start="227:24" pos:end="227:43">ff_jpegls_decode_lse</name><argument_list pos:start="227:44" pos:end="227:46">(<argument pos:start="227:45" pos:end="227:45"><expr pos:start="227:45" pos:end="227:45"><name pos:start="227:45" pos:end="227:45">s</name></expr></argument>)</argument_list></call><operator pos:start="227:47" pos:end="227:47">)</operator> <operator pos:start="227:49" pos:end="227:49">&lt;</operator> <literal type="number" pos:start="227:51" pos:end="227:51">0</literal></expr>)</condition><block type="pseudo" pos:start="229:17" pos:end="229:26"><block_content pos:start="229:17" pos:end="229:26">

                <goto pos:start="229:17" pos:end="229:26">goto <name pos:start="229:22" pos:end="229:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="231:13" pos:end="231:18">break;</break>

        <case pos:start="233:9" pos:end="233:17">case <expr pos:start="233:14" pos:end="233:16"><name pos:start="233:14" pos:end="233:16">EOI</name></expr>:</case>

<label pos:start="235:1" pos:end="235:11"><name pos:start="235:1" pos:end="235:10">eoi_parser</name>:</label>

            <expr_stmt pos:start="237:13" pos:end="237:28"><expr pos:start="237:13" pos:end="237:27"><name pos:start="237:13" pos:end="237:23"><name pos:start="237:13" pos:end="237:13">s</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:23">cur_scan</name></name> <operator pos:start="237:25" pos:end="237:25">=</operator> <literal type="number" pos:start="237:27" pos:end="237:27">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="239:13" pos:end="247:13"><if pos:start="239:13" pos:end="247:13">if <condition pos:start="239:16" pos:end="239:32">(<expr pos:start="239:17" pos:end="239:31"><operator pos:start="239:17" pos:end="239:17">!</operator><name pos:start="239:18" pos:end="239:31"><name pos:start="239:18" pos:end="239:18">s</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:31">got_picture</name></name></expr>)</condition> <block pos:start="239:34" pos:end="247:13">{<block_content pos:start="241:17" pos:end="245:22">

                <expr_stmt pos:start="241:17" pos:end="243:63"><expr pos:start="241:17" pos:end="243:62"><call pos:start="241:17" pos:end="243:62"><name pos:start="241:17" pos:end="241:22">av_log</name><argument_list pos:start="241:23" pos:end="243:62">(<argument pos:start="241:24" pos:end="241:28"><expr pos:start="241:24" pos:end="241:28"><name pos:start="241:24" pos:end="241:28">avctx</name></expr></argument>, <argument pos:start="241:31" pos:end="241:44"><expr pos:start="241:31" pos:end="241:44"><name pos:start="241:31" pos:end="241:44">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="243:24" pos:end="243:61"><expr pos:start="243:24" pos:end="243:61"><literal type="string" pos:start="243:24" pos:end="243:61">"Found EOI before any SOF, ignoring\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="245:17" pos:end="245:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="249:13" pos:end="259:13"><if pos:start="249:13" pos:end="259:13">if <condition pos:start="249:16" pos:end="249:30">(<expr pos:start="249:17" pos:end="249:29"><name pos:start="249:17" pos:end="249:29"><name pos:start="249:17" pos:end="249:17">s</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:29">interlaced</name></name></expr>)</condition> <block pos:start="249:32" pos:end="259:13">{<block_content pos:start="251:17" pos:end="257:26">

                <expr_stmt pos:start="251:17" pos:end="251:37"><expr pos:start="251:17" pos:end="251:36"><name pos:start="251:17" pos:end="251:31"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:31">bottom_field</name></name> <operator pos:start="251:33" pos:end="251:34">^=</operator> <literal type="number" pos:start="251:36" pos:end="251:36">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="253:17" pos:end="253:66">/* if not bottom field, do not output image yet */</comment>

                <if_stmt pos:start="255:17" pos:end="257:26"><if pos:start="255:17" pos:end="257:26">if <condition pos:start="255:20" pos:end="255:62">(<expr pos:start="255:21" pos:end="255:61"><name pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:21">s</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:35">bottom_field</name></name> <operator pos:start="255:37" pos:end="255:38">==</operator> <operator pos:start="255:40" pos:end="255:40">!</operator><name pos:start="255:41" pos:end="255:61"><name pos:start="255:41" pos:end="255:41">s</name><operator pos:start="255:42" pos:end="255:43">-&gt;</operator><name pos:start="255:44" pos:end="255:61">interlace_polarity</name></name></expr>)</condition><block type="pseudo" pos:start="257:21" pos:end="257:26"><block_content pos:start="257:21" pos:end="257:26">

                    <break pos:start="257:21" pos:end="257:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="261:13" pos:end="263:27"><if pos:start="261:13" pos:end="263:27">if <condition pos:start="261:16" pos:end="261:64">(<expr pos:start="261:17" pos:end="261:63"><operator pos:start="261:17" pos:end="261:17">(</operator><name pos:start="261:18" pos:end="261:20">ret</name> <operator pos:start="261:22" pos:end="261:22">=</operator> <call pos:start="261:24" pos:end="261:58"><name pos:start="261:24" pos:end="261:35">av_frame_ref</name><argument_list pos:start="261:36" pos:end="261:58">(<argument pos:start="261:37" pos:end="261:41"><expr pos:start="261:37" pos:end="261:41"><name pos:start="261:37" pos:end="261:41">frame</name></expr></argument>, <argument pos:start="261:44" pos:end="261:57"><expr pos:start="261:44" pos:end="261:57"><name pos:start="261:44" pos:end="261:57"><name pos:start="261:44" pos:end="261:44">s</name><operator pos:start="261:45" pos:end="261:46">-&gt;</operator><name pos:start="261:47" pos:end="261:57">picture_ptr</name></name></expr></argument>)</argument_list></call><operator pos:start="261:59" pos:end="261:59">)</operator> <operator pos:start="261:61" pos:end="261:61">&lt;</operator> <literal type="number" pos:start="261:63" pos:end="261:63">0</literal></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="263:27"><block_content pos:start="263:17" pos:end="263:27">

                <return pos:start="263:17" pos:end="263:27">return <expr pos:start="263:24" pos:end="263:26"><name pos:start="263:24" pos:end="263:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:27"><expr pos:start="265:13" pos:end="265:26"><operator pos:start="265:13" pos:end="265:13">*</operator><name pos:start="265:14" pos:end="265:22">got_frame</name> <operator pos:start="265:24" pos:end="265:24">=</operator> <literal type="number" pos:start="265:26" pos:end="265:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:31"><expr pos:start="267:13" pos:end="267:30"><name pos:start="267:13" pos:end="267:26"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:26">got_picture</name></name> <operator pos:start="267:28" pos:end="267:28">=</operator> <literal type="number" pos:start="267:30" pos:end="267:30">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="271:13" pos:end="297:13"><if pos:start="271:13" pos:end="297:13">if <condition pos:start="271:16" pos:end="271:29">(<expr pos:start="271:17" pos:end="271:28"><operator pos:start="271:17" pos:end="271:17">!</operator><name pos:start="271:18" pos:end="271:28"><name pos:start="271:18" pos:end="271:18">s</name><operator pos:start="271:19" pos:end="271:20">-&gt;</operator><name pos:start="271:21" pos:end="271:28">lossless</name></name></expr>)</condition> <block pos:start="271:31" pos:end="297:13">{<block_content pos:start="273:17" pos:end="295:64">

                <decl_stmt pos:start="273:17" pos:end="277:46"><decl pos:start="273:17" pos:end="277:45"><type pos:start="273:17" pos:end="273:19"><name pos:start="273:17" pos:end="273:19">int</name></type> <name pos:start="273:21" pos:end="273:22">qp</name> <init pos:start="273:24" pos:end="277:45">= <expr pos:start="273:26" pos:end="277:45"><call pos:start="273:26" pos:end="277:45"><name pos:start="273:26" pos:end="273:31">FFMAX3</name><argument_list pos:start="273:32" pos:end="277:45">(<argument pos:start="273:33" pos:end="273:44"><expr pos:start="273:33" pos:end="273:44"><name pos:start="273:33" pos:end="273:44"><name pos:start="273:33" pos:end="273:33">s</name><operator pos:start="273:34" pos:end="273:35">-&gt;</operator><name pos:start="273:36" pos:end="273:41">qscale</name><index pos:start="273:42" pos:end="273:44">[<expr pos:start="273:43" pos:end="273:43"><literal type="number" pos:start="273:43" pos:end="273:43">0</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="275:33" pos:end="275:44"><expr pos:start="275:33" pos:end="275:44"><name pos:start="275:33" pos:end="275:44"><name pos:start="275:33" pos:end="275:33">s</name><operator pos:start="275:34" pos:end="275:35">-&gt;</operator><name pos:start="275:36" pos:end="275:41">qscale</name><index pos:start="275:42" pos:end="275:44">[<expr pos:start="275:43" pos:end="275:43"><literal type="number" pos:start="275:43" pos:end="275:43">1</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="277:33" pos:end="277:44"><expr pos:start="277:33" pos:end="277:44"><name pos:start="277:33" pos:end="277:44"><name pos:start="277:33" pos:end="277:33">s</name><operator pos:start="277:34" pos:end="277:35">-&gt;</operator><name pos:start="277:36" pos:end="277:41">qscale</name><index pos:start="277:42" pos:end="277:44">[<expr pos:start="277:43" pos:end="277:43"><literal type="number" pos:start="277:43" pos:end="277:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="279:17" pos:end="279:47"><decl pos:start="279:17" pos:end="279:46"><type pos:start="279:17" pos:end="279:19"><name pos:start="279:17" pos:end="279:19">int</name></type> <name pos:start="279:21" pos:end="279:23">qpw</name> <init pos:start="279:25" pos:end="279:46">= <expr pos:start="279:27" pos:end="279:46"><operator pos:start="279:27" pos:end="279:27">(</operator><name pos:start="279:28" pos:end="279:35"><name pos:start="279:28" pos:end="279:28">s</name><operator pos:start="279:29" pos:end="279:30">-&gt;</operator><name pos:start="279:31" pos:end="279:35">width</name></name> <operator pos:start="279:37" pos:end="279:37">+</operator> <literal type="number" pos:start="279:39" pos:end="279:40">15</literal><operator pos:start="279:41" pos:end="279:41">)</operator> <operator pos:start="279:43" pos:end="279:43">/</operator> <literal type="number" pos:start="279:45" pos:end="279:46">16</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="281:17" pos:end="281:65"><decl pos:start="281:17" pos:end="281:64"><type pos:start="281:17" pos:end="281:29"><name pos:start="281:17" pos:end="281:27">AVBufferRef</name> <modifier pos:start="281:29" pos:end="281:29">*</modifier></type><name pos:start="281:30" pos:end="281:41">qp_table_buf</name> <init pos:start="281:43" pos:end="281:64">= <expr pos:start="281:45" pos:end="281:64"><call pos:start="281:45" pos:end="281:64"><name pos:start="281:45" pos:end="281:59">av_buffer_alloc</name><argument_list pos:start="281:60" pos:end="281:64">(<argument pos:start="281:61" pos:end="281:63"><expr pos:start="281:61" pos:end="281:63"><name pos:start="281:61" pos:end="281:63">qpw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="283:17" pos:end="289:17"><if pos:start="283:17" pos:end="289:17">if <condition pos:start="283:20" pos:end="283:33">(<expr pos:start="283:21" pos:end="283:32"><name pos:start="283:21" pos:end="283:32">qp_table_buf</name></expr>)</condition> <block pos:start="283:35" pos:end="289:17">{<block_content pos:start="285:21" pos:end="287:87">

                    <expr_stmt pos:start="285:21" pos:end="285:56"><expr pos:start="285:21" pos:end="285:55"><call pos:start="285:21" pos:end="285:55"><name pos:start="285:21" pos:end="285:26">memset</name><argument_list pos:start="285:27" pos:end="285:55">(<argument pos:start="285:28" pos:end="285:45"><expr pos:start="285:28" pos:end="285:45"><name pos:start="285:28" pos:end="285:45"><name pos:start="285:28" pos:end="285:39">qp_table_buf</name><operator pos:start="285:40" pos:end="285:41">-&gt;</operator><name pos:start="285:42" pos:end="285:45">data</name></name></expr></argument>, <argument pos:start="285:48" pos:end="285:49"><expr pos:start="285:48" pos:end="285:49"><name pos:start="285:48" pos:end="285:49">qp</name></expr></argument>, <argument pos:start="285:52" pos:end="285:54"><expr pos:start="285:52" pos:end="285:54"><name pos:start="285:52" pos:end="285:54">qpw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="287:21" pos:end="287:87"><expr pos:start="287:21" pos:end="287:86"><call pos:start="287:21" pos:end="287:86"><name pos:start="287:21" pos:end="287:41">av_frame_set_qp_table</name><argument_list pos:start="287:42" pos:end="287:86">(<argument pos:start="287:43" pos:end="287:46"><expr pos:start="287:43" pos:end="287:46"><name pos:start="287:43" pos:end="287:46">data</name></expr></argument>, <argument pos:start="287:49" pos:end="287:60"><expr pos:start="287:49" pos:end="287:60"><name pos:start="287:49" pos:end="287:60">qp_table_buf</name></expr></argument>, <argument pos:start="287:63" pos:end="287:63"><expr pos:start="287:63" pos:end="287:63"><literal type="number" pos:start="287:63" pos:end="287:63">0</literal></expr></argument>, <argument pos:start="287:66" pos:end="287:85"><expr pos:start="287:66" pos:end="287:85"><name pos:start="287:66" pos:end="287:85">FF_QSCALE_TYPE_MPEG1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="293:17" pos:end="295:64"><if pos:start="293:17" pos:end="295:64">if<condition pos:start="293:19" pos:end="293:46">(<expr pos:start="293:20" pos:end="293:45"><name pos:start="293:20" pos:end="293:31"><name pos:start="293:20" pos:end="293:24">avctx</name><operator pos:start="293:25" pos:end="293:26">-&gt;</operator><name pos:start="293:27" pos:end="293:31">debug</name></name> <operator pos:start="293:33" pos:end="293:33">&amp;</operator> <name pos:start="293:35" pos:end="293:45">FF_DEBUG_QP</name></expr>)</condition><block type="pseudo" pos:start="295:21" pos:end="295:64"><block_content pos:start="295:21" pos:end="295:64">

                    <expr_stmt pos:start="295:21" pos:end="295:64"><expr pos:start="295:21" pos:end="295:63"><call pos:start="295:21" pos:end="295:63"><name pos:start="295:21" pos:end="295:26">av_log</name><argument_list pos:start="295:27" pos:end="295:63">(<argument pos:start="295:28" pos:end="295:32"><expr pos:start="295:28" pos:end="295:32"><name pos:start="295:28" pos:end="295:32">avctx</name></expr></argument>, <argument pos:start="295:35" pos:end="295:46"><expr pos:start="295:35" pos:end="295:46"><name pos:start="295:35" pos:end="295:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="295:49" pos:end="295:58"><expr pos:start="295:49" pos:end="295:58"><literal type="string" pos:start="295:49" pos:end="295:58">"QP: %d\n"</literal></expr></argument>, <argument pos:start="295:61" pos:end="295:62"><expr pos:start="295:61" pos:end="295:62"><name pos:start="295:61" pos:end="295:62">qp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <goto pos:start="301:13" pos:end="301:25">goto <name pos:start="301:18" pos:end="301:24">the_end</name>;</goto>

        <case pos:start="303:9" pos:end="303:17">case <expr pos:start="303:14" pos:end="303:16"><name pos:start="303:14" pos:end="303:16">SOS</name></expr>:</case>

            <expr_stmt pos:start="305:13" pos:end="305:26"><expr pos:start="305:13" pos:end="305:25"><name pos:start="305:13" pos:end="305:23"><name pos:start="305:13" pos:end="305:13">s</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:23">cur_scan</name></name><operator pos:start="305:24" pos:end="305:25">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="307:13" pos:end="311:26"><if pos:start="307:13" pos:end="311:26">if <condition pos:start="307:16" pos:end="309:57">(<expr pos:start="307:17" pos:end="309:56"><operator pos:start="307:17" pos:end="307:17">(</operator><name pos:start="307:18" pos:end="307:20">ret</name> <operator pos:start="307:22" pos:end="307:22">=</operator> <call pos:start="307:24" pos:end="307:60"><name pos:start="307:24" pos:end="307:42">ff_mjpeg_decode_sos</name><argument_list pos:start="307:43" pos:end="307:60">(<argument pos:start="307:44" pos:end="307:44"><expr pos:start="307:44" pos:end="307:44"><name pos:start="307:44" pos:end="307:44">s</name></expr></argument>, <argument pos:start="307:47" pos:end="307:50"><expr pos:start="307:47" pos:end="307:50"><name pos:start="307:47" pos:end="307:50">NULL</name></expr></argument>, <argument pos:start="307:53" pos:end="307:53"><expr pos:start="307:53" pos:end="307:53"><literal type="number" pos:start="307:53" pos:end="307:53">0</literal></expr></argument>, <argument pos:start="307:56" pos:end="307:59"><expr pos:start="307:56" pos:end="307:59"><name pos:start="307:56" pos:end="307:59">NULL</name></expr></argument>)</argument_list></call><operator pos:start="307:61" pos:end="307:61">)</operator> <operator pos:start="307:63" pos:end="307:63">&lt;</operator> <literal type="number" pos:start="307:65" pos:end="307:65">0</literal> <operator pos:start="307:67" pos:end="307:68">&amp;&amp;</operator>

                <operator pos:start="309:17" pos:end="309:17">(</operator><name pos:start="309:18" pos:end="309:39"><name pos:start="309:18" pos:end="309:22">avctx</name><operator pos:start="309:23" pos:end="309:24">-&gt;</operator><name pos:start="309:25" pos:end="309:39">err_recognition</name></name> <operator pos:start="309:41" pos:end="309:41">&amp;</operator> <name pos:start="309:43" pos:end="309:55">AV_EF_EXPLODE</name><operator pos:start="309:56" pos:end="309:56">)</operator></expr>)</condition><block type="pseudo" pos:start="311:17" pos:end="311:26"><block_content pos:start="311:17" pos:end="311:26">

                <goto pos:start="311:17" pos:end="311:26">goto <name pos:start="311:22" pos:end="311:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="313:13" pos:end="313:18">break;</break>

        <case pos:start="315:9" pos:end="315:17">case <expr pos:start="315:14" pos:end="315:16"><name pos:start="315:14" pos:end="315:16">DRI</name></expr>:</case>

            <expr_stmt pos:start="317:13" pos:end="317:32"><expr pos:start="317:13" pos:end="317:31"><call pos:start="317:13" pos:end="317:31"><name pos:start="317:13" pos:end="317:28">mjpeg_decode_dri</name><argument_list pos:start="317:29" pos:end="317:31">(<argument pos:start="317:30" pos:end="317:30"><expr pos:start="317:30" pos:end="317:30"><name pos:start="317:30" pos:end="317:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="319:13" pos:end="319:18">break;</break>

        <case pos:start="321:9" pos:end="321:18">case <expr pos:start="321:14" pos:end="321:17"><name pos:start="321:14" pos:end="321:17">SOF5</name></expr>:</case>

        <case pos:start="323:9" pos:end="323:18">case <expr pos:start="323:14" pos:end="323:17"><name pos:start="323:14" pos:end="323:17">SOF6</name></expr>:</case>

        <case pos:start="325:9" pos:end="325:18">case <expr pos:start="325:14" pos:end="325:17"><name pos:start="325:14" pos:end="325:17">SOF7</name></expr>:</case>

        <case pos:start="327:9" pos:end="327:18">case <expr pos:start="327:14" pos:end="327:17"><name pos:start="327:14" pos:end="327:17">SOF9</name></expr>:</case>

        <case pos:start="329:9" pos:end="329:19">case <expr pos:start="329:14" pos:end="329:18"><name pos:start="329:14" pos:end="329:18">SOF10</name></expr>:</case>

        <case pos:start="331:9" pos:end="331:19">case <expr pos:start="331:14" pos:end="331:18"><name pos:start="331:14" pos:end="331:18">SOF11</name></expr>:</case>

        <case pos:start="333:9" pos:end="333:19">case <expr pos:start="333:14" pos:end="333:18"><name pos:start="333:14" pos:end="333:18">SOF13</name></expr>:</case>

        <case pos:start="335:9" pos:end="335:19">case <expr pos:start="335:14" pos:end="335:18"><name pos:start="335:14" pos:end="335:18">SOF14</name></expr>:</case>

        <case pos:start="337:9" pos:end="337:19">case <expr pos:start="337:14" pos:end="337:18"><name pos:start="337:14" pos:end="337:18">SOF15</name></expr>:</case>

        <case pos:start="339:9" pos:end="339:17">case <expr pos:start="339:14" pos:end="339:16"><name pos:start="339:14" pos:end="339:16">JPG</name></expr>:</case>

            <expr_stmt pos:start="341:13" pos:end="343:72"><expr pos:start="341:13" pos:end="343:71"><call pos:start="341:13" pos:end="343:71"><name pos:start="341:13" pos:end="341:18">av_log</name><argument_list pos:start="341:19" pos:end="343:71">(<argument pos:start="341:20" pos:end="341:24"><expr pos:start="341:20" pos:end="341:24"><name pos:start="341:20" pos:end="341:24">avctx</name></expr></argument>, <argument pos:start="341:27" pos:end="341:38"><expr pos:start="341:27" pos:end="341:38"><name pos:start="341:27" pos:end="341:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="343:20" pos:end="343:58"><expr pos:start="343:20" pos:end="343:58"><literal type="string" pos:start="343:20" pos:end="343:58">"mjpeg: unsupported coding type (%x)\n"</literal></expr></argument>, <argument pos:start="343:61" pos:end="343:70"><expr pos:start="343:61" pos:end="343:70"><name pos:start="343:61" pos:end="343:70">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="345:13" pos:end="345:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="351:9" pos:end="351:36">/* eof process start code */</comment>

        <expr_stmt pos:start="353:9" pos:end="353:52"><expr pos:start="353:9" pos:end="353:51"><name pos:start="353:9" pos:end="353:15">buf_ptr</name> <operator pos:start="353:17" pos:end="353:18">+=</operator> <operator pos:start="353:20" pos:end="353:20">(</operator><call pos:start="353:21" pos:end="353:42"><name pos:start="353:21" pos:end="353:34">get_bits_count</name><argument_list pos:start="353:35" pos:end="353:42">(<argument pos:start="353:36" pos:end="353:41"><expr pos:start="353:36" pos:end="353:41"><operator pos:start="353:36" pos:end="353:36">&amp;</operator><name pos:start="353:37" pos:end="353:41"><name pos:start="353:37" pos:end="353:37">s</name><operator pos:start="353:38" pos:end="353:39">-&gt;</operator><name pos:start="353:40" pos:end="353:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="353:44" pos:end="353:44">+</operator> <literal type="number" pos:start="353:46" pos:end="353:46">7</literal><operator pos:start="353:47" pos:end="353:47">)</operator> <operator pos:start="353:49" pos:end="353:49">/</operator> <literal type="number" pos:start="353:51" pos:end="353:51">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="359:73"><expr pos:start="355:9" pos:end="359:72"><call pos:start="355:9" pos:end="359:72"><name pos:start="355:9" pos:end="355:14">av_log</name><argument_list pos:start="355:15" pos:end="359:72">(<argument pos:start="355:16" pos:end="355:20"><expr pos:start="355:16" pos:end="355:20"><name pos:start="355:16" pos:end="355:20">avctx</name></expr></argument>, <argument pos:start="355:23" pos:end="355:34"><expr pos:start="355:23" pos:end="355:34"><name pos:start="355:23" pos:end="355:34">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="357:16" pos:end="357:56"><expr pos:start="357:16" pos:end="357:56"><literal type="string" pos:start="357:16" pos:end="357:56">"marker parser used %d bytes (%d bits)\n"</literal></expr></argument>,

               <argument pos:start="359:16" pos:end="359:47"><expr pos:start="359:16" pos:end="359:47"><operator pos:start="359:16" pos:end="359:16">(</operator><call pos:start="359:17" pos:end="359:38"><name pos:start="359:17" pos:end="359:30">get_bits_count</name><argument_list pos:start="359:31" pos:end="359:38">(<argument pos:start="359:32" pos:end="359:37"><expr pos:start="359:32" pos:end="359:37"><operator pos:start="359:32" pos:end="359:32">&amp;</operator><name pos:start="359:33" pos:end="359:37"><name pos:start="359:33" pos:end="359:33">s</name><operator pos:start="359:34" pos:end="359:35">-&gt;</operator><name pos:start="359:36" pos:end="359:37">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="359:40" pos:end="359:40">+</operator> <literal type="number" pos:start="359:42" pos:end="359:42">7</literal><operator pos:start="359:43" pos:end="359:43">)</operator> <operator pos:start="359:45" pos:end="359:45">/</operator> <literal type="number" pos:start="359:47" pos:end="359:47">8</literal></expr></argument>, <argument pos:start="359:50" pos:end="359:71"><expr pos:start="359:50" pos:end="359:71"><call pos:start="359:50" pos:end="359:71"><name pos:start="359:50" pos:end="359:63">get_bits_count</name><argument_list pos:start="359:64" pos:end="359:71">(<argument pos:start="359:65" pos:end="359:70"><expr pos:start="359:65" pos:end="359:70"><operator pos:start="359:65" pos:end="359:65">&amp;</operator><name pos:start="359:66" pos:end="359:70"><name pos:start="359:66" pos:end="359:66">s</name><operator pos:start="359:67" pos:end="359:68">-&gt;</operator><name pos:start="359:69" pos:end="359:70">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="363:5" pos:end="369:5"><if pos:start="363:5" pos:end="369:5">if <condition pos:start="363:8" pos:end="363:38">(<expr pos:start="363:9" pos:end="363:37"><name pos:start="363:9" pos:end="363:22"><name pos:start="363:9" pos:end="363:9">s</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:22">got_picture</name></name> <operator pos:start="363:24" pos:end="363:25">&amp;&amp;</operator> <name pos:start="363:27" pos:end="363:37"><name pos:start="363:27" pos:end="363:27">s</name><operator pos:start="363:28" pos:end="363:29">-&gt;</operator><name pos:start="363:30" pos:end="363:37">cur_scan</name></name></expr>)</condition> <block pos:start="363:40" pos:end="369:5">{<block_content pos:start="365:9" pos:end="367:24">

        <expr_stmt pos:start="365:9" pos:end="365:66"><expr pos:start="365:9" pos:end="365:65"><call pos:start="365:9" pos:end="365:65"><name pos:start="365:9" pos:end="365:14">av_log</name><argument_list pos:start="365:15" pos:end="365:65">(<argument pos:start="365:16" pos:end="365:20"><expr pos:start="365:16" pos:end="365:20"><name pos:start="365:16" pos:end="365:20">avctx</name></expr></argument>, <argument pos:start="365:23" pos:end="365:36"><expr pos:start="365:23" pos:end="365:36"><name pos:start="365:23" pos:end="365:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="365:39" pos:end="365:64"><expr pos:start="365:39" pos:end="365:64"><literal type="string" pos:start="365:39" pos:end="365:64">"EOI missing, emulating\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="367:9" pos:end="367:24">goto <name pos:start="367:14" pos:end="367:23">eoi_parser</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:65"><expr pos:start="371:5" pos:end="371:64"><call pos:start="371:5" pos:end="371:64"><name pos:start="371:5" pos:end="371:10">av_log</name><argument_list pos:start="371:11" pos:end="371:64">(<argument pos:start="371:12" pos:end="371:16"><expr pos:start="371:12" pos:end="371:16"><name pos:start="371:12" pos:end="371:16">avctx</name></expr></argument>, <argument pos:start="371:19" pos:end="371:30"><expr pos:start="371:19" pos:end="371:30"><name pos:start="371:19" pos:end="371:30">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="371:33" pos:end="371:63"><expr pos:start="371:33" pos:end="371:63"><literal type="string" pos:start="371:33" pos:end="371:63">"No JPEG data found in image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="373:5" pos:end="373:31">return <expr pos:start="373:12" pos:end="373:30"><name pos:start="373:12" pos:end="373:30">AVERROR_INVALIDDATA</name></expr>;</return>

<label pos:start="375:1" pos:end="375:5"><name pos:start="375:1" pos:end="375:4">fail</name>:</label>

    <expr_stmt pos:start="377:5" pos:end="377:23"><expr pos:start="377:5" pos:end="377:22"><name pos:start="377:5" pos:end="377:18"><name pos:start="377:5" pos:end="377:5">s</name><operator pos:start="377:6" pos:end="377:7">-&gt;</operator><name pos:start="377:8" pos:end="377:18">got_picture</name></name> <operator pos:start="377:20" pos:end="377:20">=</operator> <literal type="number" pos:start="377:22" pos:end="377:22">0</literal></expr>;</expr_stmt>

    <return pos:start="379:5" pos:end="379:15">return <expr pos:start="379:12" pos:end="379:14"><name pos:start="379:12" pos:end="379:14">ret</name></expr>;</return>

<label pos:start="381:1" pos:end="381:8"><name pos:start="381:1" pos:end="381:7">the_end</name>:</label>

    <if_stmt pos:start="383:5" pos:end="405:5"><if pos:start="383:5" pos:end="405:5">if <condition pos:start="383:8" pos:end="383:21">(<expr pos:start="383:9" pos:end="383:20"><name pos:start="383:9" pos:end="383:20"><name pos:start="383:9" pos:end="383:9">s</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:20">upscale_h</name></name></expr>)</condition> <block pos:start="383:23" pos:end="405:5">{<block_content pos:start="385:9" pos:end="403:9">

        <decl_stmt pos:start="385:9" pos:end="385:59"><decl pos:start="385:9" pos:end="385:58"><type pos:start="385:9" pos:end="385:17"><name pos:start="385:9" pos:end="385:15">uint8_t</name> <modifier pos:start="385:17" pos:end="385:17">*</modifier></type><name pos:start="385:18" pos:end="385:21">line</name> <init pos:start="385:23" pos:end="385:58">= <expr pos:start="385:25" pos:end="385:58"><name pos:start="385:25" pos:end="385:58"><name pos:start="385:25" pos:end="385:25">s</name><operator pos:start="385:26" pos:end="385:27">-&gt;</operator><name pos:start="385:28" pos:end="385:38">picture_ptr</name><operator pos:start="385:39" pos:end="385:40">-&gt;</operator><name pos:start="385:41" pos:end="385:44">data</name><index pos:start="385:45" pos:end="385:58">[<expr pos:start="385:46" pos:end="385:57"><name pos:start="385:46" pos:end="385:57"><name pos:start="385:46" pos:end="385:46">s</name><operator pos:start="385:47" pos:end="385:48">-&gt;</operator><name pos:start="385:49" pos:end="385:57">upscale_h</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="387:9" pos:end="393:57"><expr pos:start="387:9" pos:end="393:56"><call pos:start="387:9" pos:end="393:56"><name pos:start="387:9" pos:end="387:18">av_assert0</name><argument_list pos:start="387:19" pos:end="393:56">(<argument pos:start="387:20" pos:end="393:55"><expr pos:start="387:20" pos:end="393:55"><name pos:start="387:20" pos:end="387:33"><name pos:start="387:20" pos:end="387:24">avctx</name><operator pos:start="387:25" pos:end="387:26">-&gt;</operator><name pos:start="387:27" pos:end="387:33">pix_fmt</name></name> <operator pos:start="387:35" pos:end="387:36">==</operator> <name pos:start="387:38" pos:end="387:56">AV_PIX_FMT_YUVJ444P</name> <operator pos:start="387:58" pos:end="387:59">||</operator>

                   <name pos:start="389:20" pos:end="389:33"><name pos:start="389:20" pos:end="389:24">avctx</name><operator pos:start="389:25" pos:end="389:26">-&gt;</operator><name pos:start="389:27" pos:end="389:33">pix_fmt</name></name> <operator pos:start="389:35" pos:end="389:36">==</operator> <name pos:start="389:38" pos:end="389:55">AV_PIX_FMT_YUV444P</name>  <operator pos:start="389:58" pos:end="389:59">||</operator>

                   <name pos:start="391:20" pos:end="391:33"><name pos:start="391:20" pos:end="391:24">avctx</name><operator pos:start="391:25" pos:end="391:26">-&gt;</operator><name pos:start="391:27" pos:end="391:33">pix_fmt</name></name> <operator pos:start="391:35" pos:end="391:36">==</operator> <name pos:start="391:38" pos:end="391:56">AV_PIX_FMT_YUVJ440P</name> <operator pos:start="391:58" pos:end="391:59">||</operator>

                   <name pos:start="393:20" pos:end="393:33"><name pos:start="393:20" pos:end="393:24">avctx</name><operator pos:start="393:25" pos:end="393:26">-&gt;</operator><name pos:start="393:27" pos:end="393:33">pix_fmt</name></name> <operator pos:start="393:35" pos:end="393:36">==</operator> <name pos:start="393:38" pos:end="393:55">AV_PIX_FMT_YUV440P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="395:9" pos:end="403:9">for <control pos:start="395:13" pos:end="395:46">(<init pos:start="395:14" pos:end="395:19"><expr pos:start="395:14" pos:end="395:18"><name pos:start="395:14" pos:end="395:14">i</name> <operator pos:start="395:16" pos:end="395:16">=</operator> <literal type="number" pos:start="395:18" pos:end="395:18">0</literal></expr>;</init> <condition pos:start="395:21" pos:end="395:41"><expr pos:start="395:21" pos:end="395:40"><name pos:start="395:21" pos:end="395:21">i</name> <operator pos:start="395:23" pos:end="395:23">&lt;</operator> <name pos:start="395:25" pos:end="395:40"><name pos:start="395:25" pos:end="395:25">s</name><operator pos:start="395:26" pos:end="395:27">-&gt;</operator><name pos:start="395:28" pos:end="395:40">chroma_height</name></name></expr>;</condition> <incr pos:start="395:43" pos:end="395:45"><expr pos:start="395:43" pos:end="395:45"><name pos:start="395:43" pos:end="395:43">i</name><operator pos:start="395:44" pos:end="395:45">++</operator></expr></incr>)</control> <block pos:start="395:48" pos:end="403:9">{<block_content pos:start="397:13" pos:end="401:46">

            <for pos:start="397:13" pos:end="399:77">for <control pos:start="397:17" pos:end="397:54">(<init pos:start="397:18" pos:end="397:38"><expr pos:start="397:18" pos:end="397:37"><name pos:start="397:18" pos:end="397:22">index</name> <operator pos:start="397:24" pos:end="397:24">=</operator> <name pos:start="397:26" pos:end="397:33"><name pos:start="397:26" pos:end="397:26">s</name><operator pos:start="397:27" pos:end="397:28">-&gt;</operator><name pos:start="397:29" pos:end="397:33">width</name></name> <operator pos:start="397:35" pos:end="397:35">-</operator> <literal type="number" pos:start="397:37" pos:end="397:37">1</literal></expr>;</init> <condition pos:start="397:40" pos:end="397:45"><expr pos:start="397:40" pos:end="397:44"><name pos:start="397:40" pos:end="397:44">index</name></expr>;</condition> <incr pos:start="397:47" pos:end="397:53"><expr pos:start="397:47" pos:end="397:53"><name pos:start="397:47" pos:end="397:51">index</name><operator pos:start="397:52" pos:end="397:53">--</operator></expr></incr>)</control><block type="pseudo" pos:start="399:17" pos:end="399:77"><block_content pos:start="399:17" pos:end="399:77">

                <expr_stmt pos:start="399:17" pos:end="399:77"><expr pos:start="399:17" pos:end="399:76"><name pos:start="399:17" pos:end="399:27"><name pos:start="399:17" pos:end="399:20">line</name><index pos:start="399:21" pos:end="399:27">[<expr pos:start="399:22" pos:end="399:26"><name pos:start="399:22" pos:end="399:26">index</name></expr>]</index></name> <operator pos:start="399:29" pos:end="399:29">=</operator> <operator pos:start="399:31" pos:end="399:31">(</operator><name pos:start="399:32" pos:end="399:46"><name pos:start="399:32" pos:end="399:35">line</name><index pos:start="399:36" pos:end="399:46">[<expr pos:start="399:37" pos:end="399:45"><name pos:start="399:37" pos:end="399:41">index</name> <operator pos:start="399:43" pos:end="399:43">/</operator> <literal type="number" pos:start="399:45" pos:end="399:45">2</literal></expr>]</index></name> <operator pos:start="399:48" pos:end="399:48">+</operator> <name pos:start="399:50" pos:end="399:70"><name pos:start="399:50" pos:end="399:53">line</name><index pos:start="399:54" pos:end="399:70">[<expr pos:start="399:55" pos:end="399:69"><operator pos:start="399:55" pos:end="399:55">(</operator><name pos:start="399:56" pos:end="399:60">index</name> <operator pos:start="399:62" pos:end="399:62">+</operator> <literal type="number" pos:start="399:64" pos:end="399:64">1</literal><operator pos:start="399:65" pos:end="399:65">)</operator> <operator pos:start="399:67" pos:end="399:67">/</operator> <literal type="number" pos:start="399:69" pos:end="399:69">2</literal></expr>]</index></name><operator pos:start="399:71" pos:end="399:71">)</operator> <operator pos:start="399:73" pos:end="399:74">&gt;&gt;</operator> <literal type="number" pos:start="399:76" pos:end="399:76">1</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="401:13" pos:end="401:46"><expr pos:start="401:13" pos:end="401:45"><name pos:start="401:13" pos:end="401:16">line</name> <operator pos:start="401:18" pos:end="401:19">+=</operator> <name pos:start="401:21" pos:end="401:45"><name pos:start="401:21" pos:end="401:21">s</name><operator pos:start="401:22" pos:end="401:23">-&gt;</operator><name pos:start="401:24" pos:end="401:31">linesize</name><index pos:start="401:32" pos:end="401:45">[<expr pos:start="401:33" pos:end="401:44"><name pos:start="401:33" pos:end="401:44"><name pos:start="401:33" pos:end="401:33">s</name><operator pos:start="401:34" pos:end="401:35">-&gt;</operator><name pos:start="401:36" pos:end="401:44">upscale_h</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="407:5" pos:end="447:5"><if pos:start="407:5" pos:end="447:5">if <condition pos:start="407:8" pos:end="407:21">(<expr pos:start="407:9" pos:end="407:20"><name pos:start="407:9" pos:end="407:20"><name pos:start="407:9" pos:end="407:9">s</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:20">upscale_v</name></name></expr>)</condition> <block pos:start="407:23" pos:end="447:5">{<block_content pos:start="409:9" pos:end="445:9">

        <decl_stmt pos:start="409:9" pos:end="409:117"><decl pos:start="409:9" pos:end="409:116"><type pos:start="409:9" pos:end="409:17"><name pos:start="409:9" pos:end="409:15">uint8_t</name> <modifier pos:start="409:17" pos:end="409:17">*</modifier></type><name pos:start="409:18" pos:end="409:20">dst</name> <init pos:start="409:22" pos:end="409:116">= <expr pos:start="409:24" pos:end="409:116"><operator pos:start="409:24" pos:end="409:24">&amp;</operator><operator pos:start="409:25" pos:end="409:25">(</operator><operator pos:start="409:26" pos:end="409:26">(</operator><name pos:start="409:27" pos:end="409:33">uint8_t</name> <operator pos:start="409:35" pos:end="409:35">*</operator><operator pos:start="409:36" pos:end="409:36">)</operator><name pos:start="409:37" pos:end="409:70"><name pos:start="409:37" pos:end="409:37">s</name><operator pos:start="409:38" pos:end="409:39">-&gt;</operator><name pos:start="409:40" pos:end="409:50">picture_ptr</name><operator pos:start="409:51" pos:end="409:52">-&gt;</operator><name pos:start="409:53" pos:end="409:56">data</name><index pos:start="409:57" pos:end="409:70">[<expr pos:start="409:58" pos:end="409:69"><name pos:start="409:58" pos:end="409:69"><name pos:start="409:58" pos:end="409:58">s</name><operator pos:start="409:59" pos:end="409:60">-&gt;</operator><name pos:start="409:61" pos:end="409:69">upscale_v</name></name></expr>]</index></name><operator pos:start="409:71" pos:end="409:71">)</operator><index pos:start="409:72" pos:end="409:116">[<expr pos:start="409:73" pos:end="409:115"><operator pos:start="409:73" pos:end="409:73">(</operator><name pos:start="409:74" pos:end="409:82"><name pos:start="409:74" pos:end="409:74">s</name><operator pos:start="409:75" pos:end="409:76">-&gt;</operator><name pos:start="409:77" pos:end="409:82">height</name></name> <operator pos:start="409:84" pos:end="409:84">-</operator> <literal type="number" pos:start="409:86" pos:end="409:86">1</literal><operator pos:start="409:87" pos:end="409:87">)</operator> <operator pos:start="409:89" pos:end="409:89">*</operator> <name pos:start="409:91" pos:end="409:115"><name pos:start="409:91" pos:end="409:91">s</name><operator pos:start="409:92" pos:end="409:93">-&gt;</operator><name pos:start="409:94" pos:end="409:101">linesize</name><index pos:start="409:102" pos:end="409:115">[<expr pos:start="409:103" pos:end="409:114"><name pos:start="409:103" pos:end="409:114"><name pos:start="409:103" pos:end="409:103">s</name><operator pos:start="409:104" pos:end="409:105">-&gt;</operator><name pos:start="409:106" pos:end="409:114">upscale_v</name></name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="411:9" pos:end="411:14"><decl pos:start="411:9" pos:end="411:13"><type pos:start="411:9" pos:end="411:11"><name pos:start="411:9" pos:end="411:11">int</name></type> <name pos:start="411:13" pos:end="411:13">w</name></decl>;</decl_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:75"><expr pos:start="413:9" pos:end="413:74"><call pos:start="413:9" pos:end="413:74"><name pos:start="413:9" pos:end="413:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="413:38" pos:end="413:74">(<argument pos:start="413:39" pos:end="413:55"><expr pos:start="413:39" pos:end="413:55"><name pos:start="413:39" pos:end="413:55"><name pos:start="413:39" pos:end="413:39">s</name><operator pos:start="413:40" pos:end="413:41">-&gt;</operator><name pos:start="413:42" pos:end="413:46">avctx</name><operator pos:start="413:47" pos:end="413:48">-&gt;</operator><name pos:start="413:49" pos:end="413:55">pix_fmt</name></name></expr></argument>, <argument pos:start="413:58" pos:end="413:64"><expr pos:start="413:58" pos:end="413:64"><operator pos:start="413:58" pos:end="413:58">&amp;</operator><name pos:start="413:59" pos:end="413:64">hshift</name></expr></argument>, <argument pos:start="413:67" pos:end="413:73"><expr pos:start="413:67" pos:end="413:73"><operator pos:start="413:67" pos:end="413:67">&amp;</operator><name pos:start="413:68" pos:end="413:73">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:31"><expr pos:start="415:9" pos:end="415:30"><name pos:start="415:9" pos:end="415:9">w</name> <operator pos:start="415:11" pos:end="415:11">=</operator> <name pos:start="415:13" pos:end="415:20"><name pos:start="415:13" pos:end="415:13">s</name><operator pos:start="415:14" pos:end="415:15">-&gt;</operator><name pos:start="415:16" pos:end="415:20">width</name></name> <operator pos:start="415:22" pos:end="415:23">&gt;&gt;</operator> <name pos:start="415:25" pos:end="415:30">hshift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="423:57"><expr pos:start="417:9" pos:end="423:56"><call pos:start="417:9" pos:end="423:56"><name pos:start="417:9" pos:end="417:18">av_assert0</name><argument_list pos:start="417:19" pos:end="423:56">(<argument pos:start="417:20" pos:end="423:55"><expr pos:start="417:20" pos:end="423:55"><name pos:start="417:20" pos:end="417:33"><name pos:start="417:20" pos:end="417:24">avctx</name><operator pos:start="417:25" pos:end="417:26">-&gt;</operator><name pos:start="417:27" pos:end="417:33">pix_fmt</name></name> <operator pos:start="417:35" pos:end="417:36">==</operator> <name pos:start="417:38" pos:end="417:56">AV_PIX_FMT_YUVJ444P</name> <operator pos:start="417:58" pos:end="417:59">||</operator>

                   <name pos:start="419:20" pos:end="419:33"><name pos:start="419:20" pos:end="419:24">avctx</name><operator pos:start="419:25" pos:end="419:26">-&gt;</operator><name pos:start="419:27" pos:end="419:33">pix_fmt</name></name> <operator pos:start="419:35" pos:end="419:36">==</operator> <name pos:start="419:38" pos:end="419:55">AV_PIX_FMT_YUV444P</name>  <operator pos:start="419:58" pos:end="419:59">||</operator>

                   <name pos:start="421:20" pos:end="421:33"><name pos:start="421:20" pos:end="421:24">avctx</name><operator pos:start="421:25" pos:end="421:26">-&gt;</operator><name pos:start="421:27" pos:end="421:33">pix_fmt</name></name> <operator pos:start="421:35" pos:end="421:36">==</operator> <name pos:start="421:38" pos:end="421:56">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="421:58" pos:end="421:59">||</operator>

                   <name pos:start="423:20" pos:end="423:33"><name pos:start="423:20" pos:end="423:24">avctx</name><operator pos:start="423:25" pos:end="423:26">-&gt;</operator><name pos:start="423:27" pos:end="423:33">pix_fmt</name></name> <operator pos:start="423:35" pos:end="423:36">==</operator> <name pos:start="423:38" pos:end="423:55">AV_PIX_FMT_YUV422P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="425:9" pos:end="445:9">for <control pos:start="425:13" pos:end="425:39">(<init pos:start="425:14" pos:end="425:31"><expr pos:start="425:14" pos:end="425:30"><name pos:start="425:14" pos:end="425:14">i</name> <operator pos:start="425:16" pos:end="425:16">=</operator> <name pos:start="425:18" pos:end="425:26"><name pos:start="425:18" pos:end="425:18">s</name><operator pos:start="425:19" pos:end="425:20">-&gt;</operator><name pos:start="425:21" pos:end="425:26">height</name></name> <operator pos:start="425:28" pos:end="425:28">-</operator> <literal type="number" pos:start="425:30" pos:end="425:30">1</literal></expr>;</init> <condition pos:start="425:33" pos:end="425:34"><expr pos:start="425:33" pos:end="425:33"><name pos:start="425:33" pos:end="425:33">i</name></expr>;</condition> <incr pos:start="425:36" pos:end="425:38"><expr pos:start="425:36" pos:end="425:38"><name pos:start="425:36" pos:end="425:36">i</name><operator pos:start="425:37" pos:end="425:38">--</operator></expr></incr>)</control> <block pos:start="425:41" pos:end="445:9">{<block_content pos:start="427:13" pos:end="443:45">

            <decl_stmt pos:start="427:13" pos:end="427:112"><decl pos:start="427:13" pos:end="427:111"><type pos:start="427:13" pos:end="427:21"><name pos:start="427:13" pos:end="427:19">uint8_t</name> <modifier pos:start="427:21" pos:end="427:21">*</modifier></type><name pos:start="427:22" pos:end="427:25">src1</name> <init pos:start="427:27" pos:end="427:111">= <expr pos:start="427:29" pos:end="427:111"><operator pos:start="427:29" pos:end="427:29">&amp;</operator><operator pos:start="427:30" pos:end="427:30">(</operator><operator pos:start="427:31" pos:end="427:31">(</operator><name pos:start="427:32" pos:end="427:38">uint8_t</name> <operator pos:start="427:40" pos:end="427:40">*</operator><operator pos:start="427:41" pos:end="427:41">)</operator><name pos:start="427:42" pos:end="427:75"><name pos:start="427:42" pos:end="427:42">s</name><operator pos:start="427:43" pos:end="427:44">-&gt;</operator><name pos:start="427:45" pos:end="427:55">picture_ptr</name><operator pos:start="427:56" pos:end="427:57">-&gt;</operator><name pos:start="427:58" pos:end="427:61">data</name><index pos:start="427:62" pos:end="427:75">[<expr pos:start="427:63" pos:end="427:74"><name pos:start="427:63" pos:end="427:74"><name pos:start="427:63" pos:end="427:63">s</name><operator pos:start="427:64" pos:end="427:65">-&gt;</operator><name pos:start="427:66" pos:end="427:74">upscale_v</name></name></expr>]</index></name><operator pos:start="427:76" pos:end="427:76">)</operator><index pos:start="427:77" pos:end="427:111">[<expr pos:start="427:78" pos:end="427:110"><name pos:start="427:78" pos:end="427:78">i</name> <operator pos:start="427:80" pos:end="427:80">/</operator> <literal type="number" pos:start="427:82" pos:end="427:82">2</literal> <operator pos:start="427:84" pos:end="427:84">*</operator> <name pos:start="427:86" pos:end="427:110"><name pos:start="427:86" pos:end="427:86">s</name><operator pos:start="427:87" pos:end="427:88">-&gt;</operator><name pos:start="427:89" pos:end="427:96">linesize</name><index pos:start="427:97" pos:end="427:110">[<expr pos:start="427:98" pos:end="427:109"><name pos:start="427:98" pos:end="427:109"><name pos:start="427:98" pos:end="427:98">s</name><operator pos:start="427:99" pos:end="427:100">-&gt;</operator><name pos:start="427:101" pos:end="427:109">upscale_v</name></name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="429:13" pos:end="429:118"><decl pos:start="429:13" pos:end="429:117"><type pos:start="429:13" pos:end="429:21"><name pos:start="429:13" pos:end="429:19">uint8_t</name> <modifier pos:start="429:21" pos:end="429:21">*</modifier></type><name pos:start="429:22" pos:end="429:25">src2</name> <init pos:start="429:27" pos:end="429:117">= <expr pos:start="429:29" pos:end="429:117"><operator pos:start="429:29" pos:end="429:29">&amp;</operator><operator pos:start="429:30" pos:end="429:30">(</operator><operator pos:start="429:31" pos:end="429:31">(</operator><name pos:start="429:32" pos:end="429:38">uint8_t</name> <operator pos:start="429:40" pos:end="429:40">*</operator><operator pos:start="429:41" pos:end="429:41">)</operator><name pos:start="429:42" pos:end="429:75"><name pos:start="429:42" pos:end="429:42">s</name><operator pos:start="429:43" pos:end="429:44">-&gt;</operator><name pos:start="429:45" pos:end="429:55">picture_ptr</name><operator pos:start="429:56" pos:end="429:57">-&gt;</operator><name pos:start="429:58" pos:end="429:61">data</name><index pos:start="429:62" pos:end="429:75">[<expr pos:start="429:63" pos:end="429:74"><name pos:start="429:63" pos:end="429:74"><name pos:start="429:63" pos:end="429:63">s</name><operator pos:start="429:64" pos:end="429:65">-&gt;</operator><name pos:start="429:66" pos:end="429:74">upscale_v</name></name></expr>]</index></name><operator pos:start="429:76" pos:end="429:76">)</operator><index pos:start="429:77" pos:end="429:117">[<expr pos:start="429:78" pos:end="429:116"><operator pos:start="429:78" pos:end="429:78">(</operator><name pos:start="429:79" pos:end="429:79">i</name> <operator pos:start="429:81" pos:end="429:81">+</operator> <literal type="number" pos:start="429:83" pos:end="429:83">1</literal><operator pos:start="429:84" pos:end="429:84">)</operator> <operator pos:start="429:86" pos:end="429:86">/</operator> <literal type="number" pos:start="429:88" pos:end="429:88">2</literal> <operator pos:start="429:90" pos:end="429:90">*</operator> <name pos:start="429:92" pos:end="429:116"><name pos:start="429:92" pos:end="429:92">s</name><operator pos:start="429:93" pos:end="429:94">-&gt;</operator><name pos:start="429:95" pos:end="429:102">linesize</name><index pos:start="429:103" pos:end="429:116">[<expr pos:start="429:104" pos:end="429:115"><name pos:start="429:104" pos:end="429:115"><name pos:start="429:104" pos:end="429:104">s</name><operator pos:start="429:105" pos:end="429:106">-&gt;</operator><name pos:start="429:107" pos:end="429:115">upscale_v</name></name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="431:13" pos:end="441:13"><if pos:start="431:13" pos:end="435:13">if <condition pos:start="431:16" pos:end="431:29">(<expr pos:start="431:17" pos:end="431:28"><name pos:start="431:17" pos:end="431:20">src1</name> <operator pos:start="431:22" pos:end="431:23">==</operator> <name pos:start="431:25" pos:end="431:28">src2</name></expr>)</condition> <block pos:start="431:31" pos:end="435:13">{<block_content pos:start="433:17" pos:end="433:37">

                <expr_stmt pos:start="433:17" pos:end="433:37"><expr pos:start="433:17" pos:end="433:36"><call pos:start="433:17" pos:end="433:36"><name pos:start="433:17" pos:end="433:22">memcpy</name><argument_list pos:start="433:23" pos:end="433:36">(<argument pos:start="433:24" pos:end="433:26"><expr pos:start="433:24" pos:end="433:26"><name pos:start="433:24" pos:end="433:26">dst</name></expr></argument>, <argument pos:start="433:29" pos:end="433:32"><expr pos:start="433:29" pos:end="433:32"><name pos:start="433:29" pos:end="433:32">src1</name></expr></argument>, <argument pos:start="433:35" pos:end="433:35"><expr pos:start="433:35" pos:end="433:35"><name pos:start="433:35" pos:end="433:35">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="435:15" pos:end="441:13">else <block pos:start="435:20" pos:end="441:13">{<block_content pos:start="437:17" pos:end="439:66">

                <for pos:start="437:17" pos:end="439:66">for <control pos:start="437:21" pos:end="437:51">(<init pos:start="437:22" pos:end="437:31"><expr pos:start="437:22" pos:end="437:30"><name pos:start="437:22" pos:end="437:26">index</name> <operator pos:start="437:28" pos:end="437:28">=</operator> <literal type="number" pos:start="437:30" pos:end="437:30">0</literal></expr>;</init> <condition pos:start="437:33" pos:end="437:42"><expr pos:start="437:33" pos:end="437:41"><name pos:start="437:33" pos:end="437:37">index</name> <operator pos:start="437:39" pos:end="437:39">&lt;</operator> <name pos:start="437:41" pos:end="437:41">w</name></expr>;</condition> <incr pos:start="437:44" pos:end="437:50"><expr pos:start="437:44" pos:end="437:50"><name pos:start="437:44" pos:end="437:48">index</name><operator pos:start="437:49" pos:end="437:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="439:21" pos:end="439:66"><block_content pos:start="439:21" pos:end="439:66">

                    <expr_stmt pos:start="439:21" pos:end="439:66"><expr pos:start="439:21" pos:end="439:65"><name pos:start="439:21" pos:end="439:30"><name pos:start="439:21" pos:end="439:23">dst</name><index pos:start="439:24" pos:end="439:30">[<expr pos:start="439:25" pos:end="439:29"><name pos:start="439:25" pos:end="439:29">index</name></expr>]</index></name> <operator pos:start="439:32" pos:end="439:32">=</operator> <operator pos:start="439:34" pos:end="439:34">(</operator><name pos:start="439:35" pos:end="439:45"><name pos:start="439:35" pos:end="439:38">src1</name><index pos:start="439:39" pos:end="439:45">[<expr pos:start="439:40" pos:end="439:44"><name pos:start="439:40" pos:end="439:44">index</name></expr>]</index></name> <operator pos:start="439:47" pos:end="439:47">+</operator> <name pos:start="439:49" pos:end="439:59"><name pos:start="439:49" pos:end="439:52">src2</name><index pos:start="439:53" pos:end="439:59">[<expr pos:start="439:54" pos:end="439:58"><name pos:start="439:54" pos:end="439:58">index</name></expr>]</index></name><operator pos:start="439:60" pos:end="439:60">)</operator> <operator pos:start="439:62" pos:end="439:63">&gt;&gt;</operator> <literal type="number" pos:start="439:65" pos:end="439:65">1</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:45"><expr pos:start="443:13" pos:end="443:44"><name pos:start="443:13" pos:end="443:15">dst</name> <operator pos:start="443:17" pos:end="443:18">-=</operator> <name pos:start="443:20" pos:end="443:44"><name pos:start="443:20" pos:end="443:20">s</name><operator pos:start="443:21" pos:end="443:22">-&gt;</operator><name pos:start="443:23" pos:end="443:30">linesize</name><index pos:start="443:31" pos:end="443:44">[<expr pos:start="443:32" pos:end="443:43"><name pos:start="443:32" pos:end="443:43"><name pos:start="443:32" pos:end="443:32">s</name><operator pos:start="443:33" pos:end="443:34">-&gt;</operator><name pos:start="443:35" pos:end="443:43">upscale_v</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="449:5" pos:end="491:5"><if pos:start="449:5" pos:end="491:5">if <condition pos:start="449:8" pos:end="449:19">(<expr pos:start="449:9" pos:end="449:18"><name pos:start="449:9" pos:end="449:18"><name pos:start="449:9" pos:end="449:9">s</name><operator pos:start="449:10" pos:end="449:11">-&gt;</operator><name pos:start="449:12" pos:end="449:18">flipped</name></name></expr>)</condition> <block pos:start="449:21" pos:end="491:5">{<block_content pos:start="451:9" pos:end="489:9">

        <decl_stmt pos:start="451:9" pos:end="451:14"><decl pos:start="451:9" pos:end="451:13"><type pos:start="451:9" pos:end="451:11"><name pos:start="451:9" pos:end="451:11">int</name></type> <name pos:start="451:13" pos:end="451:13">j</name></decl>;</decl_stmt>

        <expr_stmt pos:start="453:9" pos:end="453:75"><expr pos:start="453:9" pos:end="453:74"><call pos:start="453:9" pos:end="453:74"><name pos:start="453:9" pos:end="453:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="453:38" pos:end="453:74">(<argument pos:start="453:39" pos:end="453:55"><expr pos:start="453:39" pos:end="453:55"><name pos:start="453:39" pos:end="453:55"><name pos:start="453:39" pos:end="453:39">s</name><operator pos:start="453:40" pos:end="453:41">-&gt;</operator><name pos:start="453:42" pos:end="453:46">avctx</name><operator pos:start="453:47" pos:end="453:48">-&gt;</operator><name pos:start="453:49" pos:end="453:55">pix_fmt</name></name></expr></argument>, <argument pos:start="453:58" pos:end="453:64"><expr pos:start="453:58" pos:end="453:64"><operator pos:start="453:58" pos:end="453:58">&amp;</operator><name pos:start="453:59" pos:end="453:64">hshift</name></expr></argument>, <argument pos:start="453:67" pos:end="453:73"><expr pos:start="453:67" pos:end="453:73"><operator pos:start="453:67" pos:end="453:67">&amp;</operator><name pos:start="453:68" pos:end="453:73">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="455:9" pos:end="489:9">for <control pos:start="455:13" pos:end="455:39">(<init pos:start="455:14" pos:end="455:21"><expr pos:start="455:14" pos:end="455:20"><name pos:start="455:14" pos:end="455:18">index</name><operator pos:start="455:19" pos:end="455:19">=</operator><literal type="number" pos:start="455:20" pos:end="455:20">0</literal></expr>;</init> <condition pos:start="455:23" pos:end="455:30"><expr pos:start="455:23" pos:end="455:29"><name pos:start="455:23" pos:end="455:27">index</name><operator pos:start="455:28" pos:end="455:28">&lt;</operator><literal type="number" pos:start="455:29" pos:end="455:29">4</literal></expr>;</condition> <incr pos:start="455:32" pos:end="455:38"><expr pos:start="455:32" pos:end="455:38"><name pos:start="455:32" pos:end="455:36">index</name><operator pos:start="455:37" pos:end="455:38">++</operator></expr></incr>)</control> <block pos:start="455:41" pos:end="489:9">{<block_content pos:start="457:13" pos:end="487:13">

            <decl_stmt pos:start="457:13" pos:end="457:55"><decl pos:start="457:13" pos:end="457:54"><type pos:start="457:13" pos:end="457:21"><name pos:start="457:13" pos:end="457:19">uint8_t</name> <modifier pos:start="457:21" pos:end="457:21">*</modifier></type><name pos:start="457:22" pos:end="457:24">dst</name> <init pos:start="457:26" pos:end="457:54">= <expr pos:start="457:28" pos:end="457:54"><name pos:start="457:28" pos:end="457:54"><name pos:start="457:28" pos:end="457:28">s</name><operator pos:start="457:29" pos:end="457:30">-&gt;</operator><name pos:start="457:31" pos:end="457:41">picture_ptr</name><operator pos:start="457:42" pos:end="457:43">-&gt;</operator><name pos:start="457:44" pos:end="457:47">data</name><index pos:start="457:48" pos:end="457:54">[<expr pos:start="457:49" pos:end="457:53"><name pos:start="457:49" pos:end="457:53">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="459:13" pos:end="459:42"><decl pos:start="459:13" pos:end="459:41"><type pos:start="459:13" pos:end="459:15"><name pos:start="459:13" pos:end="459:15">int</name></type> <name pos:start="459:17" pos:end="459:17">w</name> <init pos:start="459:19" pos:end="459:41">= <expr pos:start="459:21" pos:end="459:41"><name pos:start="459:21" pos:end="459:41"><name pos:start="459:21" pos:end="459:21">s</name><operator pos:start="459:22" pos:end="459:23">-&gt;</operator><name pos:start="459:24" pos:end="459:34">picture_ptr</name><operator pos:start="459:35" pos:end="459:36">-&gt;</operator><name pos:start="459:37" pos:end="459:41">width</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="461:13" pos:end="461:43"><decl pos:start="461:13" pos:end="461:42"><type pos:start="461:13" pos:end="461:15"><name pos:start="461:13" pos:end="461:15">int</name></type> <name pos:start="461:17" pos:end="461:17">h</name> <init pos:start="461:19" pos:end="461:42">= <expr pos:start="461:21" pos:end="461:42"><name pos:start="461:21" pos:end="461:42"><name pos:start="461:21" pos:end="461:21">s</name><operator pos:start="461:22" pos:end="461:23">-&gt;</operator><name pos:start="461:24" pos:end="461:34">picture_ptr</name><operator pos:start="461:35" pos:end="461:36">-&gt;</operator><name pos:start="461:37" pos:end="461:42">height</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="463:13" pos:end="469:13"><if pos:start="463:13" pos:end="469:13">if<condition pos:start="463:15" pos:end="463:32">(<expr pos:start="463:16" pos:end="463:31"><name pos:start="463:16" pos:end="463:20">index</name> <operator pos:start="463:22" pos:end="463:23">&amp;&amp;</operator> <name pos:start="463:25" pos:end="463:29">index</name><operator pos:start="463:30" pos:end="463:30">&lt;</operator><literal type="number" pos:start="463:31" pos:end="463:31">3</literal></expr>)</condition><block pos:start="463:33" pos:end="469:13">{<block_content pos:start="465:17" pos:end="467:46">

                <expr_stmt pos:start="465:17" pos:end="465:46"><expr pos:start="465:17" pos:end="465:45"><name pos:start="465:17" pos:end="465:17">w</name> <operator pos:start="465:19" pos:end="465:19">=</operator> <call pos:start="465:21" pos:end="465:45"><name pos:start="465:21" pos:end="465:34">FF_CEIL_RSHIFT</name><argument_list pos:start="465:35" pos:end="465:45">(<argument pos:start="465:36" pos:end="465:36"><expr pos:start="465:36" pos:end="465:36"><name pos:start="465:36" pos:end="465:36">w</name></expr></argument>, <argument pos:start="465:39" pos:end="465:44"><expr pos:start="465:39" pos:end="465:44"><name pos:start="465:39" pos:end="465:44">hshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="467:17" pos:end="467:46"><expr pos:start="467:17" pos:end="467:45"><name pos:start="467:17" pos:end="467:17">h</name> <operator pos:start="467:19" pos:end="467:19">=</operator> <call pos:start="467:21" pos:end="467:45"><name pos:start="467:21" pos:end="467:34">FF_CEIL_RSHIFT</name><argument_list pos:start="467:35" pos:end="467:45">(<argument pos:start="467:36" pos:end="467:36"><expr pos:start="467:36" pos:end="467:36"><name pos:start="467:36" pos:end="467:36">h</name></expr></argument>, <argument pos:start="467:39" pos:end="467:44"><expr pos:start="467:39" pos:end="467:44"><name pos:start="467:39" pos:end="467:44">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="471:13" pos:end="487:13"><if pos:start="471:13" pos:end="487:13">if<condition pos:start="471:15" pos:end="471:19">(<expr pos:start="471:16" pos:end="471:18"><name pos:start="471:16" pos:end="471:18">dst</name></expr>)</condition><block pos:start="471:20" pos:end="487:13">{<block_content pos:start="473:17" pos:end="485:17">

                <decl_stmt pos:start="473:17" pos:end="473:63"><decl pos:start="473:17" pos:end="473:62"><type pos:start="473:17" pos:end="473:25"><name pos:start="473:17" pos:end="473:23">uint8_t</name> <modifier pos:start="473:25" pos:end="473:25">*</modifier></type><name pos:start="473:26" pos:end="473:29">dst2</name> <init pos:start="473:31" pos:end="473:62">= <expr pos:start="473:33" pos:end="473:62"><name pos:start="473:33" pos:end="473:35">dst</name> <operator pos:start="473:37" pos:end="473:37">+</operator> <name pos:start="473:39" pos:end="473:56"><name pos:start="473:39" pos:end="473:39">s</name><operator pos:start="473:40" pos:end="473:41">-&gt;</operator><name pos:start="473:42" pos:end="473:49">linesize</name><index pos:start="473:50" pos:end="473:56">[<expr pos:start="473:51" pos:end="473:55"><name pos:start="473:51" pos:end="473:55">index</name></expr>]</index></name><operator pos:start="473:57" pos:end="473:57">*</operator><operator pos:start="473:58" pos:end="473:58">(</operator><name pos:start="473:59" pos:end="473:59">h</name><operator pos:start="473:60" pos:end="473:60">-</operator><literal type="number" pos:start="473:61" pos:end="473:61">1</literal><operator pos:start="473:62" pos:end="473:62">)</operator></expr></init></decl>;</decl_stmt>

                <for pos:start="475:17" pos:end="485:17">for <control pos:start="475:21" pos:end="475:37">(<init pos:start="475:22" pos:end="475:25"><expr pos:start="475:22" pos:end="475:24"><name pos:start="475:22" pos:end="475:22">i</name><operator pos:start="475:23" pos:end="475:23">=</operator><literal type="number" pos:start="475:24" pos:end="475:24">0</literal></expr>;</init> <condition pos:start="475:27" pos:end="475:32"><expr pos:start="475:27" pos:end="475:31"><name pos:start="475:27" pos:end="475:27">i</name><operator pos:start="475:28" pos:end="475:28">&lt;</operator><name pos:start="475:29" pos:end="475:29">h</name><operator pos:start="475:30" pos:end="475:30">/</operator><literal type="number" pos:start="475:31" pos:end="475:31">2</literal></expr>;</condition> <incr pos:start="475:34" pos:end="475:36"><expr pos:start="475:34" pos:end="475:36"><name pos:start="475:34" pos:end="475:34">i</name><operator pos:start="475:35" pos:end="475:36">++</operator></expr></incr>)</control> <block pos:start="475:39" pos:end="485:17">{<block_content pos:start="477:21" pos:end="483:47">

                    <for pos:start="477:21" pos:end="479:53">for <control pos:start="477:25" pos:end="477:39">(<init pos:start="477:26" pos:end="477:29"><expr pos:start="477:26" pos:end="477:28"><name pos:start="477:26" pos:end="477:26">j</name><operator pos:start="477:27" pos:end="477:27">=</operator><literal type="number" pos:start="477:28" pos:end="477:28">0</literal></expr>;</init> <condition pos:start="477:31" pos:end="477:34"><expr pos:start="477:31" pos:end="477:33"><name pos:start="477:31" pos:end="477:31">j</name><operator pos:start="477:32" pos:end="477:32">&lt;</operator><name pos:start="477:33" pos:end="477:33">w</name></expr>;</condition> <incr pos:start="477:36" pos:end="477:38"><expr pos:start="477:36" pos:end="477:38"><name pos:start="477:36" pos:end="477:36">j</name><operator pos:start="477:37" pos:end="477:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="479:25" pos:end="479:53"><block_content pos:start="479:25" pos:end="479:53">

                        <expr_stmt pos:start="479:25" pos:end="479:53"><expr pos:start="479:25" pos:end="479:52"><call pos:start="479:25" pos:end="479:52"><name pos:start="479:25" pos:end="479:30">FFSWAP</name><argument_list pos:start="479:31" pos:end="479:52">(<argument pos:start="479:32" pos:end="479:34"><expr pos:start="479:32" pos:end="479:34"><name pos:start="479:32" pos:end="479:34">int</name></expr></argument>, <argument pos:start="479:37" pos:end="479:42"><expr pos:start="479:37" pos:end="479:42"><name pos:start="479:37" pos:end="479:42"><name pos:start="479:37" pos:end="479:39">dst</name><index pos:start="479:40" pos:end="479:42">[<expr pos:start="479:41" pos:end="479:41"><name pos:start="479:41" pos:end="479:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="479:45" pos:end="479:51"><expr pos:start="479:45" pos:end="479:51"><name pos:start="479:45" pos:end="479:51"><name pos:start="479:45" pos:end="479:48">dst2</name><index pos:start="479:49" pos:end="479:51">[<expr pos:start="479:50" pos:end="479:50"><name pos:start="479:50" pos:end="479:50">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="481:21" pos:end="481:47"><expr pos:start="481:21" pos:end="481:46"><name pos:start="481:21" pos:end="481:23">dst</name>  <operator pos:start="481:26" pos:end="481:27">+=</operator> <name pos:start="481:29" pos:end="481:46"><name pos:start="481:29" pos:end="481:29">s</name><operator pos:start="481:30" pos:end="481:31">-&gt;</operator><name pos:start="481:32" pos:end="481:39">linesize</name><index pos:start="481:40" pos:end="481:46">[<expr pos:start="481:41" pos:end="481:45"><name pos:start="481:41" pos:end="481:45">index</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="483:21" pos:end="483:47"><expr pos:start="483:21" pos:end="483:46"><name pos:start="483:21" pos:end="483:24">dst2</name> <operator pos:start="483:26" pos:end="483:27">-=</operator> <name pos:start="483:29" pos:end="483:46"><name pos:start="483:29" pos:end="483:29">s</name><operator pos:start="483:30" pos:end="483:31">-&gt;</operator><name pos:start="483:32" pos:end="483:39">linesize</name><index pos:start="483:40" pos:end="483:46">[<expr pos:start="483:41" pos:end="483:45"><name pos:start="483:41" pos:end="483:45">index</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="495:5" pos:end="509:5"><if pos:start="495:5" pos:end="509:5">if <condition pos:start="495:8" pos:end="495:20">(<expr pos:start="495:9" pos:end="495:19"><name pos:start="495:9" pos:end="495:19"><name pos:start="495:9" pos:end="495:9">s</name><operator pos:start="495:10" pos:end="495:11">-&gt;</operator><name pos:start="495:12" pos:end="495:19">stereo3d</name></name></expr>)</condition> <block pos:start="495:22" pos:end="509:5">{<block_content pos:start="497:9" pos:end="507:31">

        <decl_stmt pos:start="497:9" pos:end="497:64"><decl pos:start="497:9" pos:end="497:63"><type pos:start="497:9" pos:end="497:20"><name pos:start="497:9" pos:end="497:18">AVStereo3D</name> <modifier pos:start="497:20" pos:end="497:20">*</modifier></type><name pos:start="497:21" pos:end="497:26">stereo</name> <init pos:start="497:28" pos:end="497:63">= <expr pos:start="497:30" pos:end="497:63"><call pos:start="497:30" pos:end="497:63"><name pos:start="497:30" pos:end="497:57">av_stereo3d_create_side_data</name><argument_list pos:start="497:58" pos:end="497:63">(<argument pos:start="497:59" pos:end="497:62"><expr pos:start="497:59" pos:end="497:62"><name pos:start="497:59" pos:end="497:62">data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="499:9" pos:end="505:9"><if pos:start="499:9" pos:end="505:9">if <condition pos:start="499:12" pos:end="499:19">(<expr pos:start="499:13" pos:end="499:18"><name pos:start="499:13" pos:end="499:18">stereo</name></expr>)</condition> <block pos:start="499:21" pos:end="505:9">{<block_content pos:start="501:13" pos:end="503:47">

            <expr_stmt pos:start="501:13" pos:end="501:46"><expr pos:start="501:13" pos:end="501:45"><name pos:start="501:13" pos:end="501:24"><name pos:start="501:13" pos:end="501:18">stereo</name><operator pos:start="501:19" pos:end="501:20">-&gt;</operator><name pos:start="501:21" pos:end="501:24">type</name></name>  <operator pos:start="501:27" pos:end="501:27">=</operator> <name pos:start="501:29" pos:end="501:45"><name pos:start="501:29" pos:end="501:29">s</name><operator pos:start="501:30" pos:end="501:31">-&gt;</operator><name pos:start="501:32" pos:end="501:39">stereo3d</name><operator pos:start="501:40" pos:end="501:41">-&gt;</operator><name pos:start="501:42" pos:end="501:45">type</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:47"><expr pos:start="503:13" pos:end="503:46"><name pos:start="503:13" pos:end="503:25"><name pos:start="503:13" pos:end="503:18">stereo</name><operator pos:start="503:19" pos:end="503:20">-&gt;</operator><name pos:start="503:21" pos:end="503:25">flags</name></name> <operator pos:start="503:27" pos:end="503:27">=</operator> <name pos:start="503:29" pos:end="503:46"><name pos:start="503:29" pos:end="503:29">s</name><operator pos:start="503:30" pos:end="503:31">-&gt;</operator><name pos:start="503:32" pos:end="503:39">stereo3d</name><operator pos:start="503:40" pos:end="503:41">-&gt;</operator><name pos:start="503:42" pos:end="503:46">flags</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="507:9" pos:end="507:31"><expr pos:start="507:9" pos:end="507:30"><call pos:start="507:9" pos:end="507:30"><name pos:start="507:9" pos:end="507:16">av_freep</name><argument_list pos:start="507:17" pos:end="507:30">(<argument pos:start="507:18" pos:end="507:29"><expr pos:start="507:18" pos:end="507:29"><operator pos:start="507:18" pos:end="507:18">&amp;</operator><name pos:start="507:19" pos:end="507:29"><name pos:start="507:19" pos:end="507:19">s</name><operator pos:start="507:20" pos:end="507:21">-&gt;</operator><name pos:start="507:22" pos:end="507:29">stereo3d</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="513:5" pos:end="513:72"><expr pos:start="513:5" pos:end="513:71"><call pos:start="513:5" pos:end="513:71"><name pos:start="513:5" pos:end="513:16">av_dict_copy</name><argument_list pos:start="513:17" pos:end="513:71">(<argument pos:start="513:18" pos:end="513:49"><expr pos:start="513:18" pos:end="513:49"><call pos:start="513:18" pos:end="513:49"><name pos:start="513:18" pos:end="513:43">avpriv_frame_get_metadatap</name><argument_list pos:start="513:44" pos:end="513:49">(<argument pos:start="513:45" pos:end="513:48"><expr pos:start="513:45" pos:end="513:48"><name pos:start="513:45" pos:end="513:48">data</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="513:52" pos:end="513:67"><expr pos:start="513:52" pos:end="513:67"><name pos:start="513:52" pos:end="513:67"><name pos:start="513:52" pos:end="513:52">s</name><operator pos:start="513:53" pos:end="513:54">-&gt;</operator><name pos:start="513:55" pos:end="513:67">exif_metadata</name></name></expr></argument>, <argument pos:start="513:70" pos:end="513:70"><expr pos:start="513:70" pos:end="513:70"><literal type="number" pos:start="513:70" pos:end="513:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="515:5" pos:end="515:36"><expr pos:start="515:5" pos:end="515:35"><call pos:start="515:5" pos:end="515:35"><name pos:start="515:5" pos:end="515:16">av_dict_free</name><argument_list pos:start="515:17" pos:end="515:35">(<argument pos:start="515:18" pos:end="515:34"><expr pos:start="515:18" pos:end="515:34"><operator pos:start="515:18" pos:end="515:18">&amp;</operator><name pos:start="515:19" pos:end="515:34"><name pos:start="515:19" pos:end="515:19">s</name><operator pos:start="515:20" pos:end="515:21">-&gt;</operator><name pos:start="515:22" pos:end="515:34">exif_metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="519:5" pos:end="521:30"><expr pos:start="519:5" pos:end="521:29"><call pos:start="519:5" pos:end="521:29"><name pos:start="519:5" pos:end="519:10">av_log</name><argument_list pos:start="519:11" pos:end="521:29">(<argument pos:start="519:12" pos:end="519:16"><expr pos:start="519:12" pos:end="519:16"><name pos:start="519:12" pos:end="519:16">avctx</name></expr></argument>, <argument pos:start="519:19" pos:end="519:30"><expr pos:start="519:19" pos:end="519:30"><name pos:start="519:19" pos:end="519:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="519:33" pos:end="519:65"><expr pos:start="519:33" pos:end="519:65"><literal type="string" pos:start="519:33" pos:end="519:65">"decode frame unused %td bytes\n"</literal></expr></argument>,

           <argument pos:start="521:12" pos:end="521:28"><expr pos:start="521:12" pos:end="521:28"><name pos:start="521:12" pos:end="521:18">buf_end</name> <operator pos:start="521:20" pos:end="521:20">-</operator> <name pos:start="521:22" pos:end="521:28">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="523:1" pos:end="523:29">//  return buf_end - buf_ptr;</comment>

    <return pos:start="525:5" pos:end="525:25">return <expr pos:start="525:12" pos:end="525:24"><name pos:start="525:12" pos:end="525:18">buf_ptr</name> <operator pos:start="525:20" pos:end="525:20">-</operator> <name pos:start="525:22" pos:end="525:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
