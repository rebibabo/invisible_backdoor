<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/256.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">lag_decode_zero_run_line</name><parameter_list pos:start="1:36" pos:end="3:61">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">LagarithContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">l</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">dst</name></decl></parameter>,
                                    <parameter pos:start="2:37" pos:end="2:54"><decl pos:start="2:37" pos:end="2:54"><type pos:start="2:37" pos:end="2:54"><specifier pos:start="2:37" pos:end="2:41">const</specifier> <name pos:start="2:43" pos:end="2:49">uint8_t</name> <modifier pos:start="2:51" pos:end="2:51">*</modifier></type><name pos:start="2:52" pos:end="2:54">src</name></decl></parameter>, <parameter pos:start="2:57" pos:end="2:78"><decl pos:start="2:57" pos:end="2:78"><type pos:start="2:57" pos:end="2:78"><specifier pos:start="2:57" pos:end="2:61">const</specifier> <name pos:start="2:63" pos:end="2:69">uint8_t</name> <modifier pos:start="2:71" pos:end="2:71">*</modifier></type><name pos:start="2:72" pos:end="2:78">src_end</name></decl></parameter>,
                                    <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:45">width</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:60">esc_count</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="46:28">
    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:14"><decl pos:start="6:5" pos:end="6:13"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:13">count</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:20">zero_run</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:35"><decl pos:start="8:5" pos:end="8:34"><type pos:start="8:5" pos:end="8:19"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:17">uint8_t</name> <modifier pos:start="8:19" pos:end="8:19">*</modifier></type><name pos:start="8:20" pos:end="8:28">src_start</name> <init pos:start="8:30" pos:end="8:34">= <expr pos:start="8:32" pos:end="8:34"><name pos:start="8:32" pos:end="8:34">src</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:17">mask1</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><operator pos:start="9:21" pos:end="9:21">-</operator><operator pos:start="9:22" pos:end="9:22">(</operator><name pos:start="9:23" pos:end="9:31">esc_count</name> <operator pos:start="9:33" pos:end="9:33">&lt;</operator> <literal type="number" pos:start="9:35" pos:end="9:35">2</literal><operator pos:start="9:36" pos:end="9:36">)</operator></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:37"><decl pos:start="10:5" pos:end="10:36"><type pos:start="10:5" pos:end="10:11"><name pos:start="10:5" pos:end="10:11">uint8_t</name></type> <name pos:start="10:13" pos:end="10:17">mask2</name> <init pos:start="10:19" pos:end="10:36">= <expr pos:start="10:21" pos:end="10:36"><operator pos:start="10:21" pos:end="10:21">-</operator><operator pos:start="10:22" pos:end="10:22">(</operator><name pos:start="10:23" pos:end="10:31">esc_count</name> <operator pos:start="10:33" pos:end="10:33">&lt;</operator> <literal type="number" pos:start="10:35" pos:end="10:35">3</literal><operator pos:start="10:36" pos:end="10:36">)</operator></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">end</name> <init pos:start="11:18" pos:end="11:36">= <expr pos:start="11:20" pos:end="11:36"><name pos:start="11:20" pos:end="11:22">dst</name> <operator pos:start="11:24" pos:end="11:24">+</operator> <operator pos:start="11:26" pos:end="11:26">(</operator><name pos:start="11:27" pos:end="11:31">width</name> <operator pos:start="11:33" pos:end="11:33">-</operator> <literal type="number" pos:start="11:35" pos:end="11:35">2</literal><operator pos:start="11:36" pos:end="11:36">)</operator></expr></init></decl>;</decl_stmt>
<label pos:start="12:1" pos:end="12:13"><name pos:start="12:1" pos:end="12:12">output_zeros</name>:</label>
    <if_stmt pos:start="13:5" pos:end="22:5"><if pos:start="13:5" pos:end="22:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:9">l</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:20">zeros_rem</name></name></expr>)</condition> <block pos:start="13:23" pos:end="22:5">{<block_content pos:start="14:9" pos:end="21:21">
        <expr_stmt pos:start="14:9" pos:end="14:47"><expr pos:start="14:9" pos:end="14:46"><name pos:start="14:9" pos:end="14:13">count</name> <operator pos:start="14:15" pos:end="14:15">=</operator> <call pos:start="14:17" pos:end="14:46"><name pos:start="14:17" pos:end="14:21">FFMIN</name><argument_list pos:start="14:22" pos:end="14:46">(<argument pos:start="14:23" pos:end="14:34"><expr pos:start="14:23" pos:end="14:34"><name pos:start="14:23" pos:end="14:34"><name pos:start="14:23" pos:end="14:23">l</name><operator pos:start="14:24" pos:end="14:25">-&gt;</operator><name pos:start="14:26" pos:end="14:34">zeros_rem</name></name></expr></argument>, <argument pos:start="14:37" pos:end="14:45"><expr pos:start="14:37" pos:end="14:45"><name pos:start="14:37" pos:end="14:41">width</name> <operator pos:start="14:43" pos:end="14:43">-</operator> <name pos:start="14:45" pos:end="14:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="15:9" pos:end="18:9"><if pos:start="15:9" pos:end="18:9">if <condition pos:start="15:12" pos:end="15:30">(<expr pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:15">end</name> <operator pos:start="15:17" pos:end="15:17">-</operator> <name pos:start="15:19" pos:end="15:21">dst</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:29">count</name></expr>)</condition> <block pos:start="15:32" pos:end="18:9">{<block_content pos:start="16:13" pos:end="17:39">
            <expr_stmt pos:start="16:13" pos:end="16:74"><expr pos:start="16:13" pos:end="16:73"><call pos:start="16:13" pos:end="16:73"><name pos:start="16:13" pos:end="16:18">av_log</name><argument_list pos:start="16:19" pos:end="16:73">(<argument pos:start="16:20" pos:end="16:27"><expr pos:start="16:20" pos:end="16:27"><name pos:start="16:20" pos:end="16:27"><name pos:start="16:20" pos:end="16:20">l</name><operator pos:start="16:21" pos:end="16:22">-&gt;</operator><name pos:start="16:23" pos:end="16:27">avctx</name></name></expr></argument>, <argument pos:start="16:30" pos:end="16:41"><expr pos:start="16:30" pos:end="16:41"><name pos:start="16:30" pos:end="16:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="16:44" pos:end="16:72"><expr pos:start="16:44" pos:end="16:72"><literal type="string" pos:start="16:44" pos:end="16:72">"Too many zeros remaining.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="17:13" pos:end="17:39">return <expr pos:start="17:20" pos:end="17:38"><name pos:start="17:20" pos:end="17:38">AVERROR_INVALIDDATA</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:14">memset</name><argument_list pos:start="19:15" pos:end="19:29">(<argument pos:start="19:16" pos:end="19:18"><expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">dst</name></expr></argument>, <argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr></argument>, <argument pos:start="19:24" pos:end="19:28"><expr pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:28">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:30"><expr pos:start="20:9" pos:end="20:29"><name pos:start="20:9" pos:end="20:20"><name pos:start="20:9" pos:end="20:9">l</name><operator pos:start="20:10" pos:end="20:11">-&gt;</operator><name pos:start="20:12" pos:end="20:20">zeros_rem</name></name> <operator pos:start="20:22" pos:end="20:23">-=</operator> <name pos:start="20:25" pos:end="20:29">count</name></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:11">dst</name> <operator pos:start="21:13" pos:end="21:14">+=</operator> <name pos:start="21:16" pos:end="21:20">count</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <while pos:start="23:5" pos:end="45:5">while <condition pos:start="23:11" pos:end="23:21">(<expr pos:start="23:12" pos:end="23:20"><name pos:start="23:12" pos:end="23:14">dst</name> <operator pos:start="23:16" pos:end="23:16">&lt;</operator> <name pos:start="23:18" pos:end="23:20">end</name></expr>)</condition> <block pos:start="23:23" pos:end="45:5">{<block_content pos:start="24:9" pos:end="44:9">
        <expr_stmt pos:start="24:9" pos:end="24:14"><expr pos:start="24:9" pos:end="24:13"><name pos:start="24:9" pos:end="24:9">i</name> <operator pos:start="24:11" pos:end="24:11">=</operator> <literal type="number" pos:start="24:13" pos:end="24:13">0</literal></expr>;</expr_stmt>
        <while pos:start="25:9" pos:end="31:9">while <condition pos:start="25:15" pos:end="25:42">(<expr pos:start="25:16" pos:end="25:41"><operator pos:start="25:16" pos:end="25:16">!</operator><name pos:start="25:17" pos:end="25:24">zero_run</name> <operator pos:start="25:26" pos:end="25:27">&amp;&amp;</operator> <name pos:start="25:29" pos:end="25:31">dst</name> <operator pos:start="25:33" pos:end="25:33">+</operator> <name pos:start="25:35" pos:end="25:35">i</name> <operator pos:start="25:37" pos:end="25:37">&lt;</operator> <name pos:start="25:39" pos:end="25:41">end</name></expr>)</condition> <block pos:start="25:44" pos:end="31:9">{<block_content pos:start="26:13" pos:end="30:72">
            <expr_stmt pos:start="26:13" pos:end="26:16"><expr pos:start="26:13" pos:end="26:15"><name pos:start="26:13" pos:end="26:13">i</name><operator pos:start="26:14" pos:end="26:15">++</operator></expr>;</expr_stmt>
            <if_stmt pos:start="27:13" pos:end="28:43"><if pos:start="27:13" pos:end="28:43">if <condition pos:start="27:16" pos:end="27:37">(<expr pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:17">i</name><operator pos:start="27:18" pos:end="27:18">+</operator><literal type="number" pos:start="27:19" pos:end="27:19">2</literal> <operator pos:start="27:21" pos:end="27:22">&gt;=</operator> <name pos:start="27:24" pos:end="27:30">src_end</name> <operator pos:start="27:32" pos:end="27:32">-</operator> <name pos:start="27:34" pos:end="27:36">src</name></expr>)</condition><block type="pseudo" pos:start="28:17" pos:end="28:43"><block_content pos:start="28:17" pos:end="28:43">
                <return pos:start="28:17" pos:end="28:43">return <expr pos:start="28:24" pos:end="28:42"><name pos:start="28:24" pos:end="28:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="29:13" pos:end="30:72"><expr pos:start="29:13" pos:end="30:71"><name pos:start="29:13" pos:end="29:20">zero_run</name> <operator pos:start="29:22" pos:end="29:22">=</operator>
                <operator pos:start="30:17" pos:end="30:17">!</operator><operator pos:start="30:18" pos:end="30:18">(</operator><name pos:start="30:19" pos:end="30:24"><name pos:start="30:19" pos:end="30:21">src</name><index pos:start="30:22" pos:end="30:24">[<expr pos:start="30:23" pos:end="30:23"><name pos:start="30:23" pos:end="30:23">i</name></expr>]</index></name> <operator pos:start="30:26" pos:end="30:26">|</operator> <operator pos:start="30:28" pos:end="30:28">(</operator><name pos:start="30:29" pos:end="30:38"><name pos:start="30:29" pos:end="30:31">src</name><index pos:start="30:32" pos:end="30:38">[<expr pos:start="30:33" pos:end="30:37"><name pos:start="30:33" pos:end="30:33">i</name> <operator pos:start="30:35" pos:end="30:35">+</operator> <literal type="number" pos:start="30:37" pos:end="30:37">1</literal></expr>]</index></name> <operator pos:start="30:40" pos:end="30:40">&amp;</operator> <name pos:start="30:42" pos:end="30:46">mask1</name><operator pos:start="30:47" pos:end="30:47">)</operator> <operator pos:start="30:49" pos:end="30:49">|</operator> <operator pos:start="30:51" pos:end="30:51">(</operator><name pos:start="30:52" pos:end="30:61"><name pos:start="30:52" pos:end="30:54">src</name><index pos:start="30:55" pos:end="30:61">[<expr pos:start="30:56" pos:end="30:60"><name pos:start="30:56" pos:end="30:56">i</name> <operator pos:start="30:58" pos:end="30:58">+</operator> <literal type="number" pos:start="30:60" pos:end="30:60">2</literal></expr>]</index></name> <operator pos:start="30:63" pos:end="30:63">&amp;</operator> <name pos:start="30:65" pos:end="30:69">mask2</name><operator pos:start="30:70" pos:end="30:70">)</operator><operator pos:start="30:71" pos:end="30:71">)</operator></expr>;</expr_stmt>
        </block_content>}</block></while>
        <if_stmt pos:start="32:9" pos:end="44:9"><if pos:start="32:9" pos:end="40:9">if <condition pos:start="32:12" pos:end="32:21">(<expr pos:start="32:13" pos:end="32:20"><name pos:start="32:13" pos:end="32:20">zero_run</name></expr>)</condition> <block pos:start="32:23" pos:end="40:9">{<block_content pos:start="33:13" pos:end="39:30">
            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:20">zero_run</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="34:13" pos:end="34:27"><expr pos:start="34:13" pos:end="34:26"><name pos:start="34:13" pos:end="34:13">i</name> <operator pos:start="34:15" pos:end="34:16">+=</operator> <name pos:start="34:18" pos:end="34:26">esc_count</name></expr>;</expr_stmt>
            <expr_stmt pos:start="35:13" pos:end="35:32"><expr pos:start="35:13" pos:end="35:31"><call pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:18">memcpy</name><argument_list pos:start="35:19" pos:end="35:31">(<argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">dst</name></expr></argument>, <argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">src</name></expr></argument>, <argument pos:start="35:30" pos:end="35:30"><expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="36:13" pos:end="36:21"><expr pos:start="36:13" pos:end="36:20"><name pos:start="36:13" pos:end="36:15">dst</name> <operator pos:start="36:17" pos:end="36:18">+=</operator> <name pos:start="36:20" pos:end="36:20">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="37:13" pos:end="37:53"><expr pos:start="37:13" pos:end="37:52"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:13">l</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:24">zeros_rem</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:52"><name pos:start="37:28" pos:end="37:44">lag_calc_zero_run</name><argument_list pos:start="37:45" pos:end="37:52">(<argument pos:start="37:46" pos:end="37:51"><expr pos:start="37:46" pos:end="37:51"><name pos:start="37:46" pos:end="37:51"><name pos:start="37:46" pos:end="37:48">src</name><index pos:start="37:49" pos:end="37:51">[<expr pos:start="37:50" pos:end="37:50"><name pos:start="37:50" pos:end="37:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="38:13" pos:end="38:25"><expr pos:start="38:13" pos:end="38:24"><name pos:start="38:13" pos:end="38:15">src</name> <operator pos:start="38:17" pos:end="38:18">+=</operator> <name pos:start="38:20" pos:end="38:20">i</name> <operator pos:start="38:22" pos:end="38:22">+</operator> <literal type="number" pos:start="38:24" pos:end="38:24">1</literal></expr>;</expr_stmt>
            <goto pos:start="39:13" pos:end="39:30">goto <name pos:start="39:18" pos:end="39:29">output_zeros</name>;</goto>
        </block_content>}</block></if> <else pos:start="40:11" pos:end="44:9">else <block pos:start="40:16" pos:end="44:9">{<block_content pos:start="41:13" pos:end="43:21">
            <expr_stmt pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:31"><call pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:18">memcpy</name><argument_list pos:start="41:19" pos:end="41:31">(<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">dst</name></expr></argument>, <argument pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:27">src</name></expr></argument>, <argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:21"><expr pos:start="42:13" pos:end="42:20"><name pos:start="42:13" pos:end="42:15">src</name> <operator pos:start="42:17" pos:end="42:18">+=</operator> <name pos:start="42:20" pos:end="42:20">i</name></expr>;</expr_stmt>
            <expr_stmt pos:start="43:13" pos:end="43:21"><expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:15">dst</name> <operator pos:start="43:17" pos:end="43:18">+=</operator> <name pos:start="43:20" pos:end="43:20">i</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></while>
    <return pos:start="46:5" pos:end="46:28">return  <expr pos:start="46:13" pos:end="46:27"><name pos:start="46:13" pos:end="46:15">src</name> <operator pos:start="46:17" pos:end="46:17">-</operator> <name pos:start="46:19" pos:end="46:27">src_start</name></expr>;</return>
</block_content>}</block></function></unit>
