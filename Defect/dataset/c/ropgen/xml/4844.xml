<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4844.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">xen_pt_pci_config_access_check</name><parameter_list pos:start="1:42" pos:end="1:79">(<parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:51">PCIDevice</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">d</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">uint32_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:78"><decl pos:start="1:72" pos:end="1:78"><type pos:start="1:72" pos:end="1:78"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:78">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <comment type="block" pos:start="5:5" pos:end="5:28">/* check offset range */</comment>

    <if_stmt pos:start="7:5" pos:end="15:5"><if pos:start="7:5" pos:end="15:5">if <condition pos:start="7:8" pos:end="7:21">(<expr pos:start="7:9" pos:end="7:20"><name pos:start="7:9" pos:end="7:12">addr</name> <operator pos:start="7:14" pos:end="7:15">&gt;=</operator> <literal type="number" pos:start="7:17" pos:end="7:20">0xFF</literal></expr>)</condition> <block pos:start="7:23" pos:end="15:5">{<block_content pos:start="9:9" pos:end="13:18">

        <expr_stmt pos:start="9:9" pos:end="11:59"><expr pos:start="9:9" pos:end="11:58"><call pos:start="9:9" pos:end="11:58"><name pos:start="9:9" pos:end="9:18">XEN_PT_ERR</name><argument_list pos:start="9:19" pos:end="11:58">(<argument pos:start="9:20" pos:end="9:20"><expr pos:start="9:20" pos:end="9:20"><name pos:start="9:20" pos:end="9:20">d</name></expr></argument>, <argument pos:start="9:23" pos:end="11:46"><expr pos:start="9:23" pos:end="11:46"><literal type="string" pos:start="9:23" pos:end="9:78">"Failed to access register with offset exceeding 0xFF. "</literal>

                   <literal type="string" pos:start="11:20" pos:end="11:46">"(addr: 0x%02x, len: %d)\n"</literal></expr></argument>, <argument pos:start="11:49" pos:end="11:52"><expr pos:start="11:49" pos:end="11:52"><name pos:start="11:49" pos:end="11:52">addr</name></expr></argument>, <argument pos:start="11:55" pos:end="11:57"><expr pos:start="11:55" pos:end="11:57"><name pos:start="11:55" pos:end="11:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:25">/* check read size */</comment>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:47">(<expr pos:start="21:9" pos:end="21:46"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">len</name> <operator pos:start="21:14" pos:end="21:15">!=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">1</literal><operator pos:start="21:18" pos:end="21:18">)</operator> <operator pos:start="21:20" pos:end="21:21">&amp;&amp;</operator> <operator pos:start="21:23" pos:end="21:23">(</operator><name pos:start="21:24" pos:end="21:26">len</name> <operator pos:start="21:28" pos:end="21:29">!=</operator> <literal type="number" pos:start="21:31" pos:end="21:31">2</literal><operator pos:start="21:32" pos:end="21:32">)</operator> <operator pos:start="21:34" pos:end="21:35">&amp;&amp;</operator> <operator pos:start="21:37" pos:end="21:37">(</operator><name pos:start="21:38" pos:end="21:40">len</name> <operator pos:start="21:42" pos:end="21:43">!=</operator> <literal type="number" pos:start="21:45" pos:end="21:45">4</literal><operator pos:start="21:46" pos:end="21:46">)</operator></expr>)</condition> <block pos:start="21:49" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:18">

        <expr_stmt pos:start="23:9" pos:end="25:59"><expr pos:start="23:9" pos:end="25:58"><call pos:start="23:9" pos:end="25:58"><name pos:start="23:9" pos:end="23:18">XEN_PT_ERR</name><argument_list pos:start="23:19" pos:end="25:58">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">d</name></expr></argument>, <argument pos:start="23:23" pos:end="25:46"><expr pos:start="23:23" pos:end="25:46"><literal type="string" pos:start="23:23" pos:end="23:78">"Failed to access register with invalid access length. "</literal>

                   <literal type="string" pos:start="25:20" pos:end="25:46">"(addr: 0x%02x, len: %d)\n"</literal></expr></argument>, <argument pos:start="25:49" pos:end="25:52"><expr pos:start="25:49" pos:end="25:52"><name pos:start="25:49" pos:end="25:52">addr</name></expr></argument>, <argument pos:start="25:55" pos:end="25:57"><expr pos:start="25:55" pos:end="25:57"><name pos:start="25:55" pos:end="25:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:32">/* check offset alignment */</comment>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:25">(<expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:12">addr</name> <operator pos:start="35:14" pos:end="35:14">&amp;</operator> <operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:19">len</name> <operator pos:start="35:21" pos:end="35:21">-</operator> <literal type="number" pos:start="35:23" pos:end="35:23">1</literal><operator pos:start="35:24" pos:end="35:24">)</operator></expr>)</condition> <block pos:start="35:27" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:18">

        <expr_stmt pos:start="37:9" pos:end="39:70"><expr pos:start="37:9" pos:end="39:69"><call pos:start="37:9" pos:end="39:69"><name pos:start="37:9" pos:end="37:18">XEN_PT_ERR</name><argument_list pos:start="37:19" pos:end="39:69">(<argument pos:start="37:20" pos:end="37:20"><expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">d</name></expr></argument>, <argument pos:start="37:23" pos:end="39:57"><expr pos:start="37:23" pos:end="39:57"><literal type="string" pos:start="37:23" pos:end="37:75">"Failed to access register with invalid access size "</literal>

                   <literal type="string" pos:start="39:20" pos:end="39:57">"alignment. (addr: 0x%02x, len: %d)\n"</literal></expr></argument>, <argument pos:start="39:60" pos:end="39:63"><expr pos:start="39:60" pos:end="39:63"><name pos:start="39:60" pos:end="39:63">addr</name></expr></argument>, <argument pos:start="39:66" pos:end="39:68"><expr pos:start="39:66" pos:end="39:68"><name pos:start="39:66" pos:end="39:68">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
