<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25691.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">qcow2_pre_write_overlap_check</name><parameter_list pos:start="1:34" pos:end="3:47">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:50">BlockDriverState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">bs</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">ign</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:79"><decl pos:start="1:66" pos:end="1:79"><type pos:start="1:66" pos:end="1:79"><name pos:start="1:66" pos:end="1:72">int64_t</name></type> <name pos:start="1:74" pos:end="1:79">offset</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:46"><decl pos:start="3:35" pos:end="3:46"><type pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:41">int64_t</name></type> <name pos:start="3:43" pos:end="3:46">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:65">= <expr pos:start="7:15" pos:end="7:65"><call pos:start="7:15" pos:end="7:65"><name pos:start="7:15" pos:end="7:42">qcow2_check_metadata_overlap</name><argument_list pos:start="7:43" pos:end="7:65">(<argument pos:start="7:44" pos:end="7:45"><expr pos:start="7:44" pos:end="7:45"><name pos:start="7:44" pos:end="7:45">bs</name></expr></argument>, <argument pos:start="7:48" pos:end="7:50"><expr pos:start="7:48" pos:end="7:50"><name pos:start="7:48" pos:end="7:50">ign</name></expr></argument>, <argument pos:start="7:53" pos:end="7:58"><expr pos:start="7:53" pos:end="7:58"><name pos:start="7:53" pos:end="7:58">offset</name></expr></argument>, <argument pos:start="7:61" pos:end="7:64"><expr pos:start="7:61" pos:end="7:64"><name pos:start="7:61" pos:end="7:64">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="63:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition> <block pos:start="11:18" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="63:5">else if <condition pos:start="15:15" pos:end="15:23">(<expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:18">ret</name> <operator pos:start="15:20" pos:end="15:20">&gt;</operator> <literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>)</condition> <block pos:start="15:25" pos:end="63:5">{<block_content pos:start="17:9" pos:end="61:20">

        <decl_stmt pos:start="17:9" pos:end="17:45"><decl pos:start="17:9" pos:end="17:44"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:29">metadata_ol_bitnr</name> <init pos:start="17:31" pos:end="17:44">= <expr pos:start="17:33" pos:end="17:44"><call pos:start="17:33" pos:end="17:40"><name pos:start="17:33" pos:end="17:35">ffs</name><argument_list pos:start="17:36" pos:end="17:40">(<argument pos:start="17:37" pos:end="17:39"><expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:39">ret</name></expr></argument>)</argument_list></call> <operator pos:start="17:42" pos:end="17:42">-</operator> <literal type="number" pos:start="17:44" pos:end="17:44">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:22"><decl pos:start="19:9" pos:end="19:21"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">char</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:21">message</name></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:55"><expr pos:start="23:9" pos:end="23:54"><call pos:start="23:9" pos:end="23:54"><name pos:start="23:9" pos:end="23:14">assert</name><argument_list pos:start="23:15" pos:end="23:54">(<argument pos:start="23:16" pos:end="23:53"><expr pos:start="23:16" pos:end="23:53"><name pos:start="23:16" pos:end="23:32">metadata_ol_bitnr</name> <operator pos:start="23:34" pos:end="23:34">&lt;</operator> <name pos:start="23:36" pos:end="23:53">QCOW2_OL_MAX_BITNR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="31:54"><expr pos:start="27:9" pos:end="31:53"><call pos:start="27:9" pos:end="31:53"><name pos:start="27:9" pos:end="27:15">fprintf</name><argument_list pos:start="27:16" pos:end="31:53">(<argument pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">stderr</name></expr></argument>, <argument pos:start="27:25" pos:end="29:54"><expr pos:start="27:25" pos:end="29:54"><literal type="string" pos:start="27:25" pos:end="27:80">"qcow2: Preventing invalid write on metadata (overlaps "</literal>

                <literal type="string" pos:start="29:17" pos:end="29:54">"with %s); image marked as corrupt.\n"</literal></expr></argument>,

                <argument pos:start="31:17" pos:end="31:52"><expr pos:start="31:17" pos:end="31:52"><name pos:start="31:17" pos:end="31:52"><name pos:start="31:17" pos:end="31:33">metadata_ol_names</name><index pos:start="31:34" pos:end="31:52">[<expr pos:start="31:35" pos:end="31:51"><name pos:start="31:35" pos:end="31:51">metadata_ol_bitnr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="35:54"><expr pos:start="33:9" pos:end="35:53"><name pos:start="33:9" pos:end="33:15">message</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="35:53"><name pos:start="33:19" pos:end="33:33">g_strdup_printf</name><argument_list pos:start="33:34" pos:end="35:53">(<argument pos:start="33:35" pos:end="33:58"><expr pos:start="33:35" pos:end="33:58"><literal type="string" pos:start="33:35" pos:end="33:58">"Prevented %s overwrite"</literal></expr></argument>,

                <argument pos:start="35:17" pos:end="35:52"><expr pos:start="35:17" pos:end="35:52"><name pos:start="35:17" pos:end="35:52"><name pos:start="35:17" pos:end="35:33">metadata_ol_names</name><index pos:start="35:34" pos:end="35:52">[<expr pos:start="35:35" pos:end="35:51"><name pos:start="35:35" pos:end="35:51">metadata_ol_bitnr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="51:60"><expr pos:start="37:9" pos:end="51:59"><call pos:start="37:9" pos:end="51:59"><name pos:start="37:9" pos:end="37:45">qapi_event_send_block_image_corrupted</name><argument_list pos:start="37:46" pos:end="51:59">(<argument pos:start="37:47" pos:end="37:70"><expr pos:start="37:47" pos:end="37:70"><call pos:start="37:47" pos:end="37:70"><name pos:start="37:47" pos:end="37:66">bdrv_get_device_name</name><argument_list pos:start="37:67" pos:end="37:70">(<argument pos:start="37:68" pos:end="37:69"><expr pos:start="37:68" pos:end="37:69"><name pos:start="37:68" pos:end="37:69">bs</name></expr></argument>)</argument_list></call></expr></argument>,

                                              <argument pos:start="39:47" pos:end="39:53"><expr pos:start="39:47" pos:end="39:53"><name pos:start="39:47" pos:end="39:53">message</name></expr></argument>,

                                              <argument pos:start="41:47" pos:end="41:50"><expr pos:start="41:47" pos:end="41:50"><name pos:start="41:47" pos:end="41:50">true</name></expr></argument>,

                                              <argument pos:start="43:47" pos:end="43:52"><expr pos:start="43:47" pos:end="43:52"><name pos:start="43:47" pos:end="43:52">offset</name></expr></argument>,

                                              <argument pos:start="45:47" pos:end="45:50"><expr pos:start="45:47" pos:end="45:50"><name pos:start="45:47" pos:end="45:50">true</name></expr></argument>,

                                              <argument pos:start="47:47" pos:end="47:50"><expr pos:start="47:47" pos:end="47:50"><name pos:start="47:47" pos:end="47:50">size</name></expr></argument>,

                                              <argument pos:start="49:47" pos:end="49:50"><expr pos:start="49:47" pos:end="49:50"><name pos:start="49:47" pos:end="49:50">true</name></expr></argument>,

                                              <argument pos:start="51:47" pos:end="51:58"><expr pos:start="51:47" pos:end="51:58"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:58">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><call pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:14">g_free</name><argument_list pos:start="53:15" pos:end="53:23">(<argument pos:start="53:16" pos:end="53:22"><expr pos:start="53:16" pos:end="53:22"><name pos:start="53:16" pos:end="53:22">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:26">qcow2_mark_corrupt</name><argument_list pos:start="57:27" pos:end="57:30">(<argument pos:start="57:28" pos:end="57:29"><expr pos:start="57:28" pos:end="57:29"><name pos:start="57:28" pos:end="57:29">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:10">bs</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:15">drv</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:22">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="59:25" pos:end="59:47">/* make BDS unusable */</comment>

        <return pos:start="61:9" pos:end="61:20">return <expr pos:start="61:16" pos:end="61:19"><operator pos:start="61:16" pos:end="61:16">-</operator><name pos:start="61:17" pos:end="61:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
