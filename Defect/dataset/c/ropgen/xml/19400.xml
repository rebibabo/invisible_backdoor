<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19400.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">mov_write_single_packet</name><parameter_list pos:start="1:35" pos:end="1:69">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:63">AVPacket</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">pkt</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="63:1">{<block_content pos:start="3:9" pos:end="62:43">
        <decl_stmt pos:start="3:9" pos:end="3:42"><decl pos:start="3:9" pos:end="3:41"><type pos:start="3:9" pos:end="3:23"><name pos:start="3:9" pos:end="3:21">MOVMuxContext</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:26">mov</name> <init pos:start="3:28" pos:end="3:41">= <expr pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:30">s</name><operator pos:start="3:31" pos:end="3:32">-&gt;</operator><name pos:start="3:33" pos:end="3:41">priv_data</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="4:9" pos:end="4:56"><decl pos:start="4:9" pos:end="4:55"><type pos:start="4:9" pos:end="4:18"><name pos:start="4:9" pos:end="4:16">MOVTrack</name> <modifier pos:start="4:18" pos:end="4:18">*</modifier></type><name pos:start="4:19" pos:end="4:21">trk</name> <init pos:start="4:23" pos:end="4:55">= <expr pos:start="4:25" pos:end="4:55"><operator pos:start="4:25" pos:end="4:25">&amp;</operator><name pos:start="4:26" pos:end="4:55"><name pos:start="4:26" pos:end="4:28">mov</name><operator pos:start="4:29" pos:end="4:30">-&gt;</operator><name pos:start="4:31" pos:end="4:36">tracks</name><index pos:start="4:37" pos:end="4:55">[<expr pos:start="4:38" pos:end="4:54"><name pos:start="4:38" pos:end="4:54"><name pos:start="4:38" pos:end="4:40">pkt</name><operator pos:start="4:41" pos:end="4:42">-&gt;</operator><name pos:start="4:43" pos:end="4:54">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="5:9" pos:end="5:42"><decl pos:start="5:9" pos:end="5:41"><type pos:start="5:9" pos:end="5:27"><name pos:start="5:9" pos:end="5:25">AVCodecParameters</name> <modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:30">par</name> <init pos:start="5:32" pos:end="5:41">= <expr pos:start="5:34" pos:end="5:41"><name pos:start="5:34" pos:end="5:41"><name pos:start="5:34" pos:end="5:36">trk</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:41">par</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="6:9" pos:end="6:34"><decl pos:start="6:9" pos:end="6:33"><type pos:start="6:9" pos:end="6:15"><name pos:start="6:9" pos:end="6:15">int64_t</name></type> <name pos:start="6:17" pos:end="6:29">frag_duration</name> <init pos:start="6:31" pos:end="6:33">= <expr pos:start="6:33" pos:end="6:33"><literal type="number" pos:start="6:33" pos:end="6:33">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="7:9" pos:end="7:29"><decl pos:start="7:9" pos:end="7:28"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:16">size</name> <init pos:start="7:18" pos:end="7:28">= <expr pos:start="7:20" pos:end="7:28"><name pos:start="7:20" pos:end="7:28"><name pos:start="7:20" pos:end="7:22">pkt</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:28">size</name></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="8:9" pos:end="13:9"><if pos:start="8:9" pos:end="13:9">if <condition pos:start="8:12" pos:end="8:50">(<expr pos:start="8:13" pos:end="8:49"><name pos:start="8:13" pos:end="8:22"><name pos:start="8:13" pos:end="8:15">mov</name><operator pos:start="8:16" pos:end="8:17">-&gt;</operator><name pos:start="8:18" pos:end="8:22">flags</name></name> <operator pos:start="8:24" pos:end="8:24">&amp;</operator> <name pos:start="8:26" pos:end="8:49">FF_MOV_FLAG_FRAG_DISCONT</name></expr>)</condition> <block pos:start="8:52" pos:end="13:9">{<block_content pos:start="9:13" pos:end="12:52">
            <decl_stmt pos:start="9:13" pos:end="9:18"><decl pos:start="9:13" pos:end="9:17"><type pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">int</name></type> <name pos:start="9:17" pos:end="9:17">i</name></decl>;</decl_stmt>
            <for pos:start="10:13" pos:end="11:48">for <control pos:start="10:17" pos:end="10:47">(<init pos:start="10:18" pos:end="10:23"><expr pos:start="10:18" pos:end="10:22"><name pos:start="10:18" pos:end="10:18">i</name> <operator pos:start="10:20" pos:end="10:20">=</operator> <literal type="number" pos:start="10:22" pos:end="10:22">0</literal></expr>;</init> <condition pos:start="10:25" pos:end="10:42"><expr pos:start="10:25" pos:end="10:41"><name pos:start="10:25" pos:end="10:25">i</name> <operator pos:start="10:27" pos:end="10:27">&lt;</operator> <name pos:start="10:29" pos:end="10:41"><name pos:start="10:29" pos:end="10:29">s</name><operator pos:start="10:30" pos:end="10:31">-&gt;</operator><name pos:start="10:32" pos:end="10:41">nb_streams</name></name></expr>;</condition> <incr pos:start="10:44" pos:end="10:46"><expr pos:start="10:44" pos:end="10:46"><name pos:start="10:44" pos:end="10:44">i</name><operator pos:start="10:45" pos:end="10:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="11:17" pos:end="11:48"><block_content pos:start="11:17" pos:end="11:48">
                <expr_stmt pos:start="11:17" pos:end="11:48"><expr pos:start="11:17" pos:end="11:47"><name pos:start="11:17" pos:end="11:30"><name pos:start="11:17" pos:end="11:19">mov</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:27">tracks</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><name pos:start="11:29" pos:end="11:29">i</name></expr>]</index></name><operator pos:start="11:31" pos:end="11:31">.</operator><name pos:start="11:32" pos:end="11:43">frag_discont</name> <operator pos:start="11:45" pos:end="11:45">=</operator> <literal type="number" pos:start="11:47" pos:end="11:47">1</literal></expr>;</expr_stmt></block_content></block></for>
            <expr_stmt pos:start="12:13" pos:end="12:52"><expr pos:start="12:13" pos:end="12:51"><name pos:start="12:13" pos:end="12:22"><name pos:start="12:13" pos:end="12:15">mov</name><operator pos:start="12:16" pos:end="12:17">-&gt;</operator><name pos:start="12:18" pos:end="12:22">flags</name></name> <operator pos:start="12:24" pos:end="12:25">&amp;=</operator> <operator pos:start="12:27" pos:end="12:27">~</operator><name pos:start="12:28" pos:end="12:51">FF_MOV_FLAG_FRAG_DISCONT</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="14:9" pos:end="37:9"><if pos:start="14:9" pos:end="37:9">if <condition pos:start="14:12" pos:end="14:23">(<expr pos:start="14:13" pos:end="14:22"><operator pos:start="14:13" pos:end="14:13">!</operator><name pos:start="14:14" pos:end="14:22"><name pos:start="14:14" pos:end="14:16">pkt</name><operator pos:start="14:17" pos:end="14:18">-&gt;</operator><name pos:start="14:19" pos:end="14:22">size</name></name></expr>)</condition> <block pos:start="14:25" pos:end="37:9">{<block_content pos:start="15:13" pos:end="36:21">
            <if_stmt pos:start="15:13" pos:end="21:13"><if pos:start="15:13" pos:end="21:13">if <condition pos:start="15:16" pos:end="15:70">(<expr pos:start="15:17" pos:end="15:69"><name pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:19">trk</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:30">start_dts</name></name> <operator pos:start="15:32" pos:end="15:33">==</operator> <name pos:start="15:35" pos:end="15:48">AV_NOPTS_VALUE</name> <operator pos:start="15:50" pos:end="15:51">&amp;&amp;</operator> <name pos:start="15:53" pos:end="15:69"><name pos:start="15:53" pos:end="15:55">trk</name><operator pos:start="15:56" pos:end="15:57">-&gt;</operator><name pos:start="15:58" pos:end="15:69">frag_discont</name></name></expr>)</condition> <block pos:start="15:72" pos:end="21:13">{<block_content pos:start="16:17" pos:end="20:39">
                <expr_stmt pos:start="16:17" pos:end="16:42"><expr pos:start="16:17" pos:end="16:41"><name pos:start="16:17" pos:end="16:30"><name pos:start="16:17" pos:end="16:19">trk</name><operator pos:start="16:20" pos:end="16:21">-&gt;</operator><name pos:start="16:22" pos:end="16:30">start_dts</name></name> <operator pos:start="16:32" pos:end="16:32">=</operator> <name pos:start="16:34" pos:end="16:41"><name pos:start="16:34" pos:end="16:36">pkt</name><operator pos:start="16:37" pos:end="16:38">-&gt;</operator><name pos:start="16:39" pos:end="16:41">dts</name></name></expr>;</expr_stmt>
                <if_stmt pos:start="17:17" pos:end="20:39"><if pos:start="17:17" pos:end="18:57">if <condition pos:start="17:20" pos:end="17:47">(<expr pos:start="17:21" pos:end="17:46"><name pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:23">pkt</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:28">pts</name></name> <operator pos:start="17:30" pos:end="17:31">!=</operator> <name pos:start="17:33" pos:end="17:46">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="18:21" pos:end="18:57"><block_content pos:start="18:21" pos:end="18:57">
                    <expr_stmt pos:start="18:21" pos:end="18:57"><expr pos:start="18:21" pos:end="18:56"><name pos:start="18:21" pos:end="18:34"><name pos:start="18:21" pos:end="18:23">trk</name><operator pos:start="18:24" pos:end="18:25">-&gt;</operator><name pos:start="18:26" pos:end="18:34">start_cts</name></name> <operator pos:start="18:36" pos:end="18:36">=</operator> <name pos:start="18:38" pos:end="18:45"><name pos:start="18:38" pos:end="18:40">pkt</name><operator pos:start="18:41" pos:end="18:42">-&gt;</operator><name pos:start="18:43" pos:end="18:45">pts</name></name> <operator pos:start="18:47" pos:end="18:47">-</operator> <name pos:start="18:49" pos:end="18:56"><name pos:start="18:49" pos:end="18:51">pkt</name><operator pos:start="18:52" pos:end="18:53">-&gt;</operator><name pos:start="18:54" pos:end="18:56">dts</name></name></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="19:17" pos:end="20:39">else<block type="pseudo" pos:start="20:21" pos:end="20:39"><block_content pos:start="20:21" pos:end="20:39">
                    <expr_stmt pos:start="20:21" pos:end="20:39"><expr pos:start="20:21" pos:end="20:38"><name pos:start="20:21" pos:end="20:34"><name pos:start="20:21" pos:end="20:23">trk</name><operator pos:start="20:24" pos:end="20:25">-&gt;</operator><name pos:start="20:26" pos:end="20:34">start_cts</name></name> <operator pos:start="20:36" pos:end="20:36">=</operator> <literal type="number" pos:start="20:38" pos:end="20:38">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="22:13" pos:end="35:13"><if pos:start="22:13" pos:end="35:13">if <condition pos:start="22:16" pos:end="22:57">(<expr pos:start="22:17" pos:end="22:56"><name pos:start="22:17" pos:end="22:34"><name pos:start="22:17" pos:end="22:19">trk</name><operator pos:start="22:20" pos:end="22:21">-&gt;</operator><name pos:start="22:22" pos:end="22:24">par</name><operator pos:start="22:25" pos:end="22:26">-&gt;</operator><name pos:start="22:27" pos:end="22:34">codec_id</name></name> <operator pos:start="22:36" pos:end="22:37">==</operator> <name pos:start="22:39" pos:end="22:56">AV_CODEC_ID_MP4ALS</name></expr>)</condition> <block pos:start="22:59" pos:end="35:13">{<block_content pos:start="23:17" pos:end="34:17">
                <decl_stmt pos:start="23:17" pos:end="23:34"><decl pos:start="23:17" pos:end="23:33"><type pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">int</name></type> <name pos:start="23:21" pos:end="23:29">side_size</name> <init pos:start="23:31" pos:end="23:33">= <expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">0</literal></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="24:17" pos:end="24:100"><decl pos:start="24:17" pos:end="24:99"><type pos:start="24:17" pos:end="24:25"><name pos:start="24:17" pos:end="24:23">uint8_t</name> <modifier pos:start="24:25" pos:end="24:25">*</modifier></type><name pos:start="24:26" pos:end="24:29">side</name> <init pos:start="24:31" pos:end="24:99">= <expr pos:start="24:33" pos:end="24:99"><call pos:start="24:33" pos:end="24:99"><name pos:start="24:33" pos:end="24:55">av_packet_get_side_data</name><argument_list pos:start="24:56" pos:end="24:99">(<argument pos:start="24:57" pos:end="24:59"><expr pos:start="24:57" pos:end="24:59"><name pos:start="24:57" pos:end="24:59">pkt</name></expr></argument>, <argument pos:start="24:62" pos:end="24:86"><expr pos:start="24:62" pos:end="24:86"><name pos:start="24:62" pos:end="24:86">AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>, <argument pos:start="24:89" pos:end="24:98"><expr pos:start="24:89" pos:end="24:98"><operator pos:start="24:89" pos:end="24:89">&amp;</operator><name pos:start="24:90" pos:end="24:98">side_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="25:17" pos:end="34:17"><if pos:start="25:17" pos:end="34:17">if <condition pos:start="25:20" pos:end="25:123">(<expr pos:start="25:21" pos:end="25:122"><name pos:start="25:21" pos:end="25:24">side</name> <operator pos:start="25:26" pos:end="25:27">&amp;&amp;</operator> <name pos:start="25:29" pos:end="25:37">side_size</name> <operator pos:start="25:39" pos:end="25:39">&gt;</operator> <literal type="number" pos:start="25:41" pos:end="25:41">0</literal> <operator pos:start="25:43" pos:end="25:44">&amp;&amp;</operator> <operator pos:start="25:46" pos:end="25:46">(</operator><name pos:start="25:47" pos:end="25:55">side_size</name> <operator pos:start="25:57" pos:end="25:58">!=</operator> <name pos:start="25:60" pos:end="25:78"><name pos:start="25:60" pos:end="25:62">par</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:78">extradata_size</name></name> <operator pos:start="25:80" pos:end="25:81">||</operator> <call pos:start="25:83" pos:end="25:121"><name pos:start="25:83" pos:end="25:88">memcmp</name><argument_list pos:start="25:89" pos:end="25:121">(<argument pos:start="25:90" pos:end="25:93"><expr pos:start="25:90" pos:end="25:93"><name pos:start="25:90" pos:end="25:93">side</name></expr></argument>, <argument pos:start="25:96" pos:end="25:109"><expr pos:start="25:96" pos:end="25:109"><name pos:start="25:96" pos:end="25:109"><name pos:start="25:96" pos:end="25:98">par</name><operator pos:start="25:99" pos:end="25:100">-&gt;</operator><name pos:start="25:101" pos:end="25:109">extradata</name></name></expr></argument>, <argument pos:start="25:112" pos:end="25:120"><expr pos:start="25:112" pos:end="25:120"><name pos:start="25:112" pos:end="25:120">side_size</name></expr></argument>)</argument_list></call><operator pos:start="25:122" pos:end="25:122">)</operator></expr>)</condition> <block pos:start="25:125" pos:end="34:17">{<block_content pos:start="26:21" pos:end="33:52">
                    <decl_stmt pos:start="26:21" pos:end="26:90"><decl pos:start="26:21" pos:end="26:89"><type pos:start="26:21" pos:end="26:26"><name pos:start="26:21" pos:end="26:24">void</name> <modifier pos:start="26:26" pos:end="26:26">*</modifier></type><name pos:start="26:27" pos:end="26:34">newextra</name> <init pos:start="26:36" pos:end="26:89">= <expr pos:start="26:38" pos:end="26:89"><call pos:start="26:38" pos:end="26:89"><name pos:start="26:38" pos:end="26:47">av_mallocz</name><argument_list pos:start="26:48" pos:end="26:89">(<argument pos:start="26:49" pos:end="26:88"><expr pos:start="26:49" pos:end="26:88"><name pos:start="26:49" pos:end="26:57">side_size</name> <operator pos:start="26:59" pos:end="26:59">+</operator> <name pos:start="26:61" pos:end="26:88">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if_stmt pos:start="27:21" pos:end="28:47"><if pos:start="27:21" pos:end="28:47">if <condition pos:start="27:24" pos:end="27:34">(<expr pos:start="27:25" pos:end="27:33"><operator pos:start="27:25" pos:end="27:25">!</operator><name pos:start="27:26" pos:end="27:33">newextra</name></expr>)</condition><block type="pseudo" pos:start="28:25" pos:end="28:47"><block_content pos:start="28:25" pos:end="28:47">
                        <return pos:start="28:25" pos:end="28:47">return <expr pos:start="28:32" pos:end="28:46"><call pos:start="28:32" pos:end="28:46"><name pos:start="28:32" pos:end="28:38">AVERROR</name><argument_list pos:start="28:39" pos:end="28:46">(<argument pos:start="28:40" pos:end="28:45"><expr pos:start="28:40" pos:end="28:45"><name pos:start="28:40" pos:end="28:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="29:21" pos:end="29:44"><expr pos:start="29:21" pos:end="29:43"><call pos:start="29:21" pos:end="29:43"><name pos:start="29:21" pos:end="29:27">av_free</name><argument_list pos:start="29:28" pos:end="29:43">(<argument pos:start="29:29" pos:end="29:42"><expr pos:start="29:29" pos:end="29:42"><name pos:start="29:29" pos:end="29:42"><name pos:start="29:29" pos:end="29:31">par</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:42">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="30:21" pos:end="30:46"><expr pos:start="30:21" pos:end="30:45"><name pos:start="30:21" pos:end="30:34"><name pos:start="30:21" pos:end="30:23">par</name><operator pos:start="30:24" pos:end="30:25">-&gt;</operator><name pos:start="30:26" pos:end="30:34">extradata</name></name> <operator pos:start="30:36" pos:end="30:36">=</operator> <name pos:start="30:38" pos:end="30:45">newextra</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="31:21" pos:end="31:60"><expr pos:start="31:21" pos:end="31:59"><call pos:start="31:21" pos:end="31:59"><name pos:start="31:21" pos:end="31:26">memcpy</name><argument_list pos:start="31:27" pos:end="31:59">(<argument pos:start="31:28" pos:end="31:41"><expr pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:30">par</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:41">extradata</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:47"><expr pos:start="31:44" pos:end="31:47"><name pos:start="31:44" pos:end="31:47">side</name></expr></argument>, <argument pos:start="31:50" pos:end="31:58"><expr pos:start="31:50" pos:end="31:58"><name pos:start="31:50" pos:end="31:58">side_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="32:21" pos:end="32:52"><expr pos:start="32:21" pos:end="32:51"><name pos:start="32:21" pos:end="32:39"><name pos:start="32:21" pos:end="32:23">par</name><operator pos:start="32:24" pos:end="32:25">-&gt;</operator><name pos:start="32:26" pos:end="32:39">extradata_size</name></name> <operator pos:start="32:41" pos:end="32:41">=</operator> <name pos:start="32:43" pos:end="32:51">side_size</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="33:21" pos:end="33:52"><expr pos:start="33:21" pos:end="33:51"><name pos:start="33:21" pos:end="33:47"><name pos:start="33:21" pos:end="33:23">mov</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:47">need_rewrite_extradata</name></name> <operator pos:start="33:49" pos:end="33:49">=</operator> <literal type="number" pos:start="33:51" pos:end="33:51">1</literal></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <return pos:start="36:13" pos:end="36:21">return <expr pos:start="36:20" pos:end="36:20"><literal type="number" pos:start="36:20" pos:end="36:20">0</literal></expr>;</return>             <comment type="block" pos:start="36:35" pos:end="36:63">/* Discard 0 sized packets */</comment>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="38:9" pos:end="41:57"><if pos:start="38:9" pos:end="41:57">if <condition pos:start="38:12" pos:end="38:60">(<expr pos:start="38:13" pos:end="38:59"><name pos:start="38:13" pos:end="38:22"><name pos:start="38:13" pos:end="38:15">trk</name><operator pos:start="38:16" pos:end="38:17">-&gt;</operator><name pos:start="38:18" pos:end="38:22">entry</name></name> <operator pos:start="38:24" pos:end="38:25">&amp;&amp;</operator> <name pos:start="38:27" pos:end="38:43"><name pos:start="38:27" pos:end="38:29">pkt</name><operator pos:start="38:30" pos:end="38:31">-&gt;</operator><name pos:start="38:32" pos:end="38:43">stream_index</name></name> <operator pos:start="38:45" pos:end="38:45">&lt;</operator> <name pos:start="38:47" pos:end="38:59"><name pos:start="38:47" pos:end="38:47">s</name><operator pos:start="38:48" pos:end="38:49">-&gt;</operator><name pos:start="38:50" pos:end="38:59">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="41:57"><block_content pos:start="39:13" pos:end="41:57">
            <expr_stmt pos:start="39:13" pos:end="41:57"><expr pos:start="39:13" pos:end="41:56"><name pos:start="39:13" pos:end="39:25">frag_duration</name> <operator pos:start="39:27" pos:end="39:27">=</operator> <call pos:start="39:29" pos:end="41:56"><name pos:start="39:29" pos:end="39:40">av_rescale_q</name><argument_list pos:start="39:41" pos:end="41:56">(<argument pos:start="39:42" pos:end="39:71"><expr pos:start="39:42" pos:end="39:71"><name pos:start="39:42" pos:end="39:49"><name pos:start="39:42" pos:end="39:44">pkt</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:49">dts</name></name> <operator pos:start="39:51" pos:end="39:51">-</operator> <name pos:start="39:53" pos:end="39:67"><name pos:start="39:53" pos:end="39:55">trk</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:64">cluster</name><index pos:start="39:65" pos:end="39:67">[<expr pos:start="39:66" pos:end="39:66"><literal type="number" pos:start="39:66" pos:end="39:66">0</literal></expr>]</index></name><operator pos:start="39:68" pos:end="39:68">.</operator><name pos:start="39:69" pos:end="39:71">dts</name></expr></argument>,
                                         <argument pos:start="40:42" pos:end="40:81"><expr pos:start="40:42" pos:end="40:81"><name pos:start="40:42" pos:end="40:70"><name pos:start="40:42" pos:end="40:42">s</name><operator pos:start="40:43" pos:end="40:44">-&gt;</operator><name pos:start="40:45" pos:end="40:51">streams</name><index pos:start="40:52" pos:end="40:70">[<expr pos:start="40:53" pos:end="40:69"><name pos:start="40:53" pos:end="40:69"><name pos:start="40:53" pos:end="40:55">pkt</name><operator pos:start="40:56" pos:end="40:57">-&gt;</operator><name pos:start="40:58" pos:end="40:69">stream_index</name></name></expr>]</index></name><operator pos:start="40:71" pos:end="40:72">-&gt;</operator><name pos:start="40:73" pos:end="40:81">time_base</name></expr></argument>,
                                         <argument pos:start="41:42" pos:end="41:55"><expr pos:start="41:42" pos:end="41:55"><name pos:start="41:42" pos:end="41:55">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="42:9" pos:end="61:9"><if pos:start="42:9" pos:end="61:9">if <condition pos:start="42:12" pos:end="47:58">(<expr pos:start="42:13" pos:end="47:57"><operator pos:start="42:13" pos:end="42:13">(</operator><name pos:start="42:14" pos:end="42:39"><name pos:start="42:14" pos:end="42:16">mov</name><operator pos:start="42:17" pos:end="42:18">-&gt;</operator><name pos:start="42:19" pos:end="42:39">max_fragment_duration</name></name> <operator pos:start="42:41" pos:end="42:42">&amp;&amp;</operator>
             <name pos:start="43:14" pos:end="43:26">frag_duration</name> <operator pos:start="43:28" pos:end="43:29">&gt;=</operator> <name pos:start="43:31" pos:end="43:56"><name pos:start="43:31" pos:end="43:33">mov</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:56">max_fragment_duration</name></name><operator pos:start="43:57" pos:end="43:57">)</operator> <operator pos:start="43:59" pos:end="43:60">||</operator>
             <operator pos:start="44:14" pos:end="44:14">(</operator><name pos:start="44:15" pos:end="44:36"><name pos:start="44:15" pos:end="44:17">mov</name><operator pos:start="44:18" pos:end="44:19">-&gt;</operator><name pos:start="44:20" pos:end="44:36">max_fragment_size</name></name> <operator pos:start="44:38" pos:end="44:39">&amp;&amp;</operator> <name pos:start="44:41" pos:end="44:54"><name pos:start="44:41" pos:end="44:43">mov</name><operator pos:start="44:44" pos:end="44:45">-&gt;</operator><name pos:start="44:46" pos:end="44:54">mdat_size</name></name> <operator pos:start="44:56" pos:end="44:56">+</operator> <name pos:start="44:58" pos:end="44:61">size</name> <operator pos:start="44:63" pos:end="44:64">&gt;=</operator> <name pos:start="44:66" pos:end="44:87"><name pos:start="44:66" pos:end="44:68">mov</name><operator pos:start="44:69" pos:end="44:70">-&gt;</operator><name pos:start="44:71" pos:end="44:87">max_fragment_size</name></name><operator pos:start="44:88" pos:end="44:88">)</operator> <operator pos:start="44:90" pos:end="44:91">||</operator>
             <operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:24"><name pos:start="45:15" pos:end="45:17">mov</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:24">flags</name></name> <operator pos:start="45:26" pos:end="45:26">&amp;</operator> <name pos:start="45:28" pos:end="45:52">FF_MOV_FLAG_FRAG_KEYFRAME</name> <operator pos:start="45:54" pos:end="45:55">&amp;&amp;</operator>
              <name pos:start="46:15" pos:end="46:29"><name pos:start="46:15" pos:end="46:17">par</name><operator pos:start="46:18" pos:end="46:19">-&gt;</operator><name pos:start="46:20" pos:end="46:29">codec_type</name></name> <operator pos:start="46:31" pos:end="46:32">==</operator> <name pos:start="46:34" pos:end="46:51">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="46:53" pos:end="46:54">&amp;&amp;</operator>
              <name pos:start="47:15" pos:end="47:24"><name pos:start="47:15" pos:end="47:17">trk</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:24">entry</name></name> <operator pos:start="47:26" pos:end="47:27">&amp;&amp;</operator> <name pos:start="47:29" pos:end="47:38"><name pos:start="47:29" pos:end="47:31">pkt</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:38">flags</name></name> <operator pos:start="47:40" pos:end="47:40">&amp;</operator> <name pos:start="47:42" pos:end="47:56">AV_PKT_FLAG_KEY</name><operator pos:start="47:57" pos:end="47:57">)</operator></expr>)</condition> <block pos:start="47:60" pos:end="61:9">{<block_content pos:start="48:13" pos:end="60:13">
            <if_stmt pos:start="48:13" pos:end="60:13"><if pos:start="48:13" pos:end="60:13">if <condition pos:start="48:16" pos:end="48:60">(<expr pos:start="48:17" pos:end="48:59"><name pos:start="48:17" pos:end="48:29">frag_duration</name> <operator pos:start="48:31" pos:end="48:32">&gt;=</operator> <name pos:start="48:34" pos:end="48:59"><name pos:start="48:34" pos:end="48:36">mov</name><operator pos:start="48:37" pos:end="48:38">-&gt;</operator><name pos:start="48:39" pos:end="48:59">min_fragment_duration</name></name></expr>)</condition> <block pos:start="48:62" pos:end="60:13">{<block_content pos:start="53:17" pos:end="59:46">
                <comment type="line" pos:start="49:17" pos:end="49:74">// Set the duration of this track to line up with the next</comment>
                <comment type="line" pos:start="50:17" pos:end="50:72">// sample in this track. This avoids relying on AVPacket</comment>
                <comment type="line" pos:start="51:17" pos:end="51:74">// duration, but only helps for this particular track, not</comment>
                <comment type="line" pos:start="52:17" pos:end="52:72">// for the other ones that are flushed at the same time.</comment>
                <expr_stmt pos:start="53:17" pos:end="53:64"><expr pos:start="53:17" pos:end="53:63"><name pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:19">trk</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:35">track_duration</name></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <name pos:start="53:39" pos:end="53:46"><name pos:start="53:39" pos:end="53:41">pkt</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:46">dts</name></name> <operator pos:start="53:48" pos:end="53:48">-</operator> <name pos:start="53:50" pos:end="53:63"><name pos:start="53:50" pos:end="53:52">trk</name><operator pos:start="53:53" pos:end="53:54">-&gt;</operator><name pos:start="53:55" pos:end="53:63">start_dts</name></name></expr>;</expr_stmt>
                <if_stmt pos:start="54:17" pos:end="57:44"><if pos:start="54:17" pos:end="55:44">if <condition pos:start="54:20" pos:end="54:47">(<expr pos:start="54:21" pos:end="54:46"><name pos:start="54:21" pos:end="54:28"><name pos:start="54:21" pos:end="54:23">pkt</name><operator pos:start="54:24" pos:end="54:25">-&gt;</operator><name pos:start="54:26" pos:end="54:28">pts</name></name> <operator pos:start="54:30" pos:end="54:31">!=</operator> <name pos:start="54:33" pos:end="54:46">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="55:21" pos:end="55:44"><block_content pos:start="55:21" pos:end="55:44">
                    <expr_stmt pos:start="55:21" pos:end="55:44"><expr pos:start="55:21" pos:end="55:43"><name pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:23">trk</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:32">end_pts</name></name> <operator pos:start="55:34" pos:end="55:34">=</operator> <name pos:start="55:36" pos:end="55:43"><name pos:start="55:36" pos:end="55:38">pkt</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:43">pts</name></name></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="56:17" pos:end="57:44">else<block type="pseudo" pos:start="57:21" pos:end="57:44"><block_content pos:start="57:21" pos:end="57:44">
                    <expr_stmt pos:start="57:21" pos:end="57:44"><expr pos:start="57:21" pos:end="57:43"><name pos:start="57:21" pos:end="57:32"><name pos:start="57:21" pos:end="57:23">trk</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:32">end_pts</name></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:43"><name pos:start="57:36" pos:end="57:38">pkt</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:43">dts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <expr_stmt pos:start="58:17" pos:end="58:38"><expr pos:start="58:17" pos:end="58:37"><name pos:start="58:17" pos:end="58:33"><name pos:start="58:17" pos:end="58:19">trk</name><operator pos:start="58:20" pos:end="58:21">-&gt;</operator><name pos:start="58:22" pos:end="58:33">end_reliable</name></name> <operator pos:start="58:35" pos:end="58:35">=</operator> <literal type="number" pos:start="58:37" pos:end="58:37">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="59:17" pos:end="59:46"><expr pos:start="59:17" pos:end="59:45"><call pos:start="59:17" pos:end="59:45"><name pos:start="59:17" pos:end="59:39">mov_auto_flush_fragment</name><argument_list pos:start="59:40" pos:end="59:45">(<argument pos:start="59:41" pos:end="59:41"><expr pos:start="59:41" pos:end="59:41"><name pos:start="59:41" pos:end="59:41">s</name></expr></argument>, <argument pos:start="59:44" pos:end="59:44"><expr pos:start="59:44" pos:end="59:44"><literal type="number" pos:start="59:44" pos:end="59:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="62:9" pos:end="62:43">return <expr pos:start="62:16" pos:end="62:42"><call pos:start="62:16" pos:end="62:42"><name pos:start="62:16" pos:end="62:34">ff_mov_write_packet</name><argument_list pos:start="62:35" pos:end="62:42">(<argument pos:start="62:36" pos:end="62:36"><expr pos:start="62:36" pos:end="62:36"><name pos:start="62:36" pos:end="62:36">s</name></expr></argument>, <argument pos:start="62:39" pos:end="62:41"><expr pos:start="62:39" pos:end="62:41"><name pos:start="62:39" pos:end="62:41">pkt</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function></unit>
