<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/751.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:44">cirrus_mem_writeb_mode4and5_8bpp</name><parameter_list pos:start="1:45" pos:end="7:64">(<parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><name pos:start="1:46" pos:end="1:59">CirrusVGAState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type> <name pos:start="1:63" pos:end="1:63">s</name></decl></parameter>,

					     <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">unsigned</name></type> <name pos:start="3:55" pos:end="3:58">mode</name></decl></parameter>,

					     <parameter pos:start="5:46" pos:end="5:60"><decl pos:start="5:46" pos:end="5:60"><type pos:start="5:46" pos:end="5:60"><name pos:start="5:46" pos:end="5:53">unsigned</name></type> <name pos:start="5:55" pos:end="5:60">offset</name></decl></parameter>,

					     <parameter pos:start="7:46" pos:end="7:63"><decl pos:start="7:46" pos:end="7:63"><type pos:start="7:46" pos:end="7:63"><name pos:start="7:46" pos:end="7:53">uint32_t</name></type> <name pos:start="7:55" pos:end="7:63">mem_value</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="43:1">{<block_content pos:start="11:5" pos:end="41:63">

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">x</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:16">val</name> <init pos:start="13:18" pos:end="13:28">= <expr pos:start="13:20" pos:end="13:28"><name pos:start="13:20" pos:end="13:28">mem_value</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">dst</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:7">dst</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:21"><name pos:start="19:11" pos:end="19:11">s</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:21">vram_ptr</name></name> <operator pos:start="19:23" pos:end="19:23">+</operator> <name pos:start="19:25" pos:end="19:30">offset</name></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="37:5">for <control pos:start="21:9" pos:end="21:27">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">x</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:17">x</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:21">8</literal></expr>;</condition> <incr pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:24">x</name><operator pos:start="21:25" pos:end="21:26">++</operator></expr></incr>)</control> <block pos:start="21:29" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:14">

	<if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:23">(<expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:15">val</name> <operator pos:start="23:17" pos:end="23:17">&amp;</operator> <literal type="number" pos:start="23:19" pos:end="23:22">0x80</literal></expr>)</condition> <block pos:start="23:25" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:40">

	    <expr_stmt pos:start="25:13" pos:end="25:40"><expr pos:start="25:13" pos:end="25:39"><operator pos:start="25:13" pos:end="25:13">*</operator><name pos:start="25:14" pos:end="25:16">dst</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:39"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:39">cirrus_shadow_gr1</name></name></expr>;</expr_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="27:11" pos:end="31:9">else if <condition pos:start="27:19" pos:end="27:29">(<expr pos:start="27:20" pos:end="27:28"><name pos:start="27:20" pos:end="27:23">mode</name> <operator pos:start="27:25" pos:end="27:26">==</operator> <literal type="number" pos:start="27:28" pos:end="27:28">5</literal></expr>)</condition> <block pos:start="27:31" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:40">

	    <expr_stmt pos:start="29:13" pos:end="29:40"><expr pos:start="29:13" pos:end="29:39"><operator pos:start="29:13" pos:end="29:13">*</operator><name pos:start="29:14" pos:end="29:16">dst</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:39"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:39">cirrus_shadow_gr0</name></name></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:11">val</name> <operator pos:start="33:13" pos:end="33:15">&lt;&lt;=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:11">dst</name><operator pos:start="35:12" pos:end="35:13">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><call pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:33">cpu_physical_memory_set_dirty</name><argument_list pos:start="39:34" pos:end="39:58">(<argument pos:start="39:35" pos:end="39:57"><expr pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:48"><name pos:start="39:35" pos:end="39:35">s</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:48">vram_offset</name></name> <operator pos:start="39:50" pos:end="39:50">+</operator> <name pos:start="39:52" pos:end="39:57">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:63"><expr pos:start="41:5" pos:end="41:62"><call pos:start="41:5" pos:end="41:62"><name pos:start="41:5" pos:end="41:33">cpu_physical_memory_set_dirty</name><argument_list pos:start="41:34" pos:end="41:62">(<argument pos:start="41:35" pos:end="41:61"><expr pos:start="41:35" pos:end="41:61"><name pos:start="41:35" pos:end="41:48"><name pos:start="41:35" pos:end="41:35">s</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:48">vram_offset</name></name> <operator pos:start="41:50" pos:end="41:50">+</operator> <name pos:start="41:52" pos:end="41:57">offset</name> <operator pos:start="41:59" pos:end="41:59">+</operator> <literal type="number" pos:start="41:61" pos:end="41:61">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
