<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23784.c" pos:tabs="8"><function pos:start="1:1" pos:end="32:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">vp8_lossy_decode_frame</name><parameter_list pos:start="1:34" pos:end="3:57">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:64">AVFrame</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:67">p</name></decl></parameter>,
                                  <parameter pos:start="2:35" pos:end="2:48"><decl pos:start="2:35" pos:end="2:48"><type pos:start="2:35" pos:end="2:48"><name pos:start="2:35" pos:end="2:37">int</name> <modifier pos:start="2:39" pos:end="2:39">*</modifier></type><name pos:start="2:40" pos:end="2:48">got_frame</name></decl></parameter>, <parameter pos:start="2:51" pos:end="2:69"><decl pos:start="2:51" pos:end="2:69"><type pos:start="2:51" pos:end="2:69"><name pos:start="2:51" pos:end="2:57">uint8_t</name> <modifier pos:start="2:59" pos:end="2:59">*</modifier></type><name pos:start="2:60" pos:end="2:69">data_start</name></decl></parameter>,
                                  <parameter pos:start="3:35" pos:end="3:56"><decl pos:start="3:35" pos:end="3:56"><type pos:start="3:35" pos:end="3:56"><name pos:start="3:35" pos:end="3:42">unsigned</name> <name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:56">data_size</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="32:1">{<block_content pos:start="5:5" pos:end="31:15">
    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">WebPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:17"><decl pos:start="6:5" pos:end="6:16"><type pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:12">AVPacket</name></type> <name pos:start="6:14" pos:end="6:16">pkt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="8:5" pos:end="11:5"><if pos:start="8:5" pos:end="11:5">if <condition pos:start="8:8" pos:end="8:24">(<expr pos:start="8:9" pos:end="8:23"><operator pos:start="8:9" pos:end="8:9">!</operator><name pos:start="8:10" pos:end="8:23"><name pos:start="8:10" pos:end="8:10">s</name><operator pos:start="8:11" pos:end="8:12">-&gt;</operator><name pos:start="8:13" pos:end="8:23">initialized</name></name></expr>)</condition> <block pos:start="8:26" pos:end="11:5">{<block_content pos:start="9:9" pos:end="10:27">
        <expr_stmt pos:start="9:9" pos:end="9:34"><expr pos:start="9:9" pos:end="9:33"><call pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:26">ff_vp8_decode_init</name><argument_list pos:start="9:27" pos:end="9:33">(<argument pos:start="9:28" pos:end="9:32"><expr pos:start="9:28" pos:end="9:32"><name pos:start="9:28" pos:end="9:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="10:9" pos:end="10:27"><expr pos:start="10:9" pos:end="10:26"><name pos:start="10:9" pos:end="10:22"><name pos:start="10:9" pos:end="10:9">s</name><operator pos:start="10:10" pos:end="10:11">-&gt;</operator><name pos:start="10:12" pos:end="10:22">initialized</name></name> <operator pos:start="10:24" pos:end="10:24">=</operator> <literal type="number" pos:start="10:26" pos:end="10:26">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:77"><expr pos:start="12:5" pos:end="12:76"><name pos:start="12:5" pos:end="12:18"><name pos:start="12:5" pos:end="12:9">avctx</name><operator pos:start="12:10" pos:end="12:11">-&gt;</operator><name pos:start="12:12" pos:end="12:18">pix_fmt</name></name> <operator pos:start="12:20" pos:end="12:20">=</operator> <ternary pos:start="12:22" pos:end="12:76"><condition pos:start="12:22" pos:end="12:35"><expr pos:start="12:22" pos:end="12:33"><name pos:start="12:22" pos:end="12:33"><name pos:start="12:22" pos:end="12:22">s</name><operator pos:start="12:23" pos:end="12:24">-&gt;</operator><name pos:start="12:25" pos:end="12:33">has_alpha</name></name></expr> ?</condition><then pos:start="12:37" pos:end="12:55"> <expr pos:start="12:37" pos:end="12:55"><name pos:start="12:37" pos:end="12:55">AV_PIX_FMT_YUVA420P</name></expr> </then><else pos:start="12:57" pos:end="12:76">: <expr pos:start="12:59" pos:end="12:76"><name pos:start="12:59" pos:end="12:76">AV_PIX_FMT_YUV420P</name></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:15">lossless</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="17:5"><if pos:start="14:5" pos:end="17:5">if <condition pos:start="14:8" pos:end="14:28">(<expr pos:start="14:9" pos:end="14:27"><name pos:start="14:9" pos:end="14:17">data_size</name> <operator pos:start="14:19" pos:end="14:19">&gt;</operator> <name pos:start="14:21" pos:end="14:27">INT_MAX</name></expr>)</condition> <block pos:start="14:30" pos:end="17:5">{<block_content pos:start="15:9" pos:end="16:36">
        <expr_stmt pos:start="15:9" pos:end="15:64"><expr pos:start="15:9" pos:end="15:63"><call pos:start="15:9" pos:end="15:63"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:63">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:62"><expr pos:start="15:37" pos:end="15:62"><literal type="string" pos:start="15:37" pos:end="15:62">"unsupported chunk size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="16:9" pos:end="16:36">return <expr pos:start="16:16" pos:end="16:35"><name pos:start="16:16" pos:end="16:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:25"><expr pos:start="18:5" pos:end="18:24"><call pos:start="18:5" pos:end="18:24"><name pos:start="18:5" pos:end="18:18">av_init_packet</name><argument_list pos:start="18:19" pos:end="18:24">(<argument pos:start="18:20" pos:end="18:23"><expr pos:start="18:20" pos:end="18:23"><operator pos:start="18:20" pos:end="18:20">&amp;</operator><name pos:start="18:21" pos:end="18:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">pkt</name><operator pos:start="19:8" pos:end="19:8">.</operator><name pos:start="19:9" pos:end="19:12">data</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:25">data_start</name></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:25"><expr pos:start="20:5" pos:end="20:24"><name pos:start="20:5" pos:end="20:12"><name pos:start="20:5" pos:end="20:7">pkt</name><operator pos:start="20:8" pos:end="20:8">.</operator><name pos:start="20:9" pos:end="20:12">size</name></name> <operator pos:start="20:14" pos:end="20:14">=</operator> <name pos:start="20:16" pos:end="20:24">data_size</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:56"><name pos:start="21:11" pos:end="21:29">ff_vp8_decode_frame</name><argument_list pos:start="21:30" pos:end="21:56">(<argument pos:start="21:31" pos:end="21:35"><expr pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:35">avctx</name></expr></argument>, <argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><name pos:start="21:38" pos:end="21:38">p</name></expr></argument>, <argument pos:start="21:41" pos:end="21:49"><expr pos:start="21:41" pos:end="21:49"><name pos:start="21:41" pos:end="21:49">got_frame</name></expr></argument>, <argument pos:start="21:52" pos:end="21:55"><expr pos:start="21:52" pos:end="21:55"><operator pos:start="21:52" pos:end="21:52">&amp;</operator><name pos:start="21:53" pos:end="21:55">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="23:19"><if pos:start="22:5" pos:end="23:19">if <condition pos:start="22:8" pos:end="22:16">(<expr pos:start="22:9" pos:end="22:15"><name pos:start="22:9" pos:end="22:11">ret</name> <operator pos:start="22:13" pos:end="22:13">&lt;</operator> <literal type="number" pos:start="22:15" pos:end="22:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">
        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:59"><expr pos:start="24:5" pos:end="24:58"><call pos:start="24:5" pos:end="24:58"><name pos:start="24:5" pos:end="24:22">update_canvas_size</name><argument_list pos:start="24:23" pos:end="24:58">(<argument pos:start="24:24" pos:end="24:28"><expr pos:start="24:24" pos:end="24:28"><name pos:start="24:24" pos:end="24:28">avctx</name></expr></argument>, <argument pos:start="24:31" pos:end="24:42"><expr pos:start="24:31" pos:end="24:42"><name pos:start="24:31" pos:end="24:42"><name pos:start="24:31" pos:end="24:35">avctx</name><operator pos:start="24:36" pos:end="24:37">-&gt;</operator><name pos:start="24:38" pos:end="24:42">width</name></name></expr></argument>, <argument pos:start="24:45" pos:end="24:57"><expr pos:start="24:45" pos:end="24:57"><name pos:start="24:45" pos:end="24:57"><name pos:start="24:45" pos:end="24:49">avctx</name><operator pos:start="24:50" pos:end="24:51">-&gt;</operator><name pos:start="24:52" pos:end="24:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="30:5"><if pos:start="25:5" pos:end="30:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:20">has_alpha</name></name></expr>)</condition> <block pos:start="25:23" pos:end="30:5">{<block_content pos:start="26:9" pos:end="29:23">
        <expr_stmt pos:start="26:9" pos:end="27:57"><expr pos:start="26:9" pos:end="27:56"><name pos:start="26:9" pos:end="26:11">ret</name> <operator pos:start="26:13" pos:end="26:13">=</operator> <call pos:start="26:15" pos:end="27:56"><name pos:start="26:15" pos:end="26:36">vp8_lossy_decode_alpha</name><argument_list pos:start="26:37" pos:end="27:56">(<argument pos:start="26:38" pos:end="26:42"><expr pos:start="26:38" pos:end="26:42"><name pos:start="26:38" pos:end="26:42">avctx</name></expr></argument>, <argument pos:start="26:45" pos:end="26:45"><expr pos:start="26:45" pos:end="26:45"><name pos:start="26:45" pos:end="26:45">p</name></expr></argument>, <argument pos:start="26:48" pos:end="26:60"><expr pos:start="26:48" pos:end="26:60"><name pos:start="26:48" pos:end="26:60"><name pos:start="26:48" pos:end="26:48">s</name><operator pos:start="26:49" pos:end="26:50">-&gt;</operator><name pos:start="26:51" pos:end="26:60">alpha_data</name></name></expr></argument>,
                                     <argument pos:start="27:38" pos:end="27:55"><expr pos:start="27:38" pos:end="27:55"><name pos:start="27:38" pos:end="27:55"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:55">alpha_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="28:9" pos:end="29:23"><if pos:start="28:9" pos:end="29:23">if <condition pos:start="28:12" pos:end="28:20">(<expr pos:start="28:13" pos:end="28:19"><name pos:start="28:13" pos:end="28:15">ret</name> <operator pos:start="28:17" pos:end="28:17">&lt;</operator> <literal type="number" pos:start="28:19" pos:end="28:19">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:23"><block_content pos:start="29:13" pos:end="29:23">
            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>
</block_content>}</block></function></unit>
