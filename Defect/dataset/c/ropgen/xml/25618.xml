<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25618.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_video_frame</name><parameter_list pos:start="1:27" pos:end="1:87">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:37">VideoState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">is</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:50">AVFrame</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">frame</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">int64_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">pts</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:81">AVPacket</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">got_picture</name></decl>, <decl pos:start="5:22" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:22">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if <condition pos:start="9:8" pos:end="9:50">(<expr pos:start="9:9" pos:end="9:49"><call pos:start="9:9" pos:end="9:45"><name pos:start="9:9" pos:end="9:24">packet_queue_get</name><argument_list pos:start="9:25" pos:end="9:45">(<argument pos:start="9:26" pos:end="9:36"><expr pos:start="9:26" pos:end="9:36"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:36"><name pos:start="9:27" pos:end="9:28">is</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:36">videoq</name></name></expr></argument>, <argument pos:start="9:39" pos:end="9:41"><expr pos:start="9:39" pos:end="9:41"><name pos:start="9:39" pos:end="9:41">pkt</name></expr></argument>, <argument pos:start="9:44" pos:end="9:44"><expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">1</literal></expr></argument>)</argument_list></call> <operator pos:start="9:47" pos:end="9:47">&lt;</operator> <literal type="number" pos:start="9:49" pos:end="9:49">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="53:5"><if pos:start="15:5" pos:end="53:5">if <condition pos:start="15:8" pos:end="15:36">(<expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:11">pkt</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:17">data</name></name> <operator pos:start="15:19" pos:end="15:20">==</operator> <name pos:start="15:22" pos:end="15:35"><name pos:start="15:22" pos:end="15:30">flush_pkt</name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:35">data</name></name></expr>)</condition> <block pos:start="15:38" pos:end="53:5">{<block_content pos:start="17:9" pos:end="51:17">

        <expr_stmt pos:start="17:9" pos:end="17:51"><expr pos:start="17:9" pos:end="17:50"><call pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:29">avcodec_flush_buffers</name><argument_list pos:start="17:30" pos:end="17:50">(<argument pos:start="17:31" pos:end="17:49"><expr pos:start="17:31" pos:end="17:49"><name pos:start="17:31" pos:end="17:49"><name pos:start="17:31" pos:end="17:32">is</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:42">video_st</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:49">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><call pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:21">SDL_LockMutex</name><argument_list pos:start="21:22" pos:end="21:38">(<argument pos:start="21:23" pos:end="21:37"><expr pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:24">is</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="23:9" pos:end="23:107">// Make sure there are no long delay timers (ideally we should just flush the que but thats harder)</comment>

        <for pos:start="25:9" pos:end="29:9">for <control pos:start="25:13" pos:end="25:54">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:49"><expr pos:start="25:21" pos:end="25:48"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:48">VIDEO_PICTURE_QUEUE_SIZE</name></expr>;</condition> <incr pos:start="25:51" pos:end="25:53"><expr pos:start="25:51" pos:end="25:53"><name pos:start="25:51" pos:end="25:51">i</name><operator pos:start="25:52" pos:end="25:53">++</operator></expr></incr>)</control> <block pos:start="25:56" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:34">

            <expr_stmt pos:start="27:13" pos:end="27:34"><expr pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:14">is</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">pictq</name><index pos:start="27:22" pos:end="27:24">[<expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">i</name></expr>]</index></name><operator pos:start="27:25" pos:end="27:25">.</operator><name pos:start="27:26" pos:end="27:29">skip</name> <operator pos:start="27:31" pos:end="27:31">=</operator> <literal type="number" pos:start="27:33" pos:end="27:33">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <while pos:start="31:9" pos:end="35:9">while <condition pos:start="31:15" pos:end="31:59">(<expr pos:start="31:16" pos:end="31:58"><name pos:start="31:16" pos:end="31:29"><name pos:start="31:16" pos:end="31:17">is</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:29">pictq_size</name></name> <operator pos:start="31:31" pos:end="31:32">&amp;&amp;</operator> <operator pos:start="31:34" pos:end="31:34">!</operator><name pos:start="31:35" pos:end="31:58"><name pos:start="31:35" pos:end="31:36">is</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:44">videoq</name><operator pos:start="31:45" pos:end="31:45">.</operator><name pos:start="31:46" pos:end="31:58">abort_request</name></name></expr>)</condition> <block pos:start="31:61" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:58">

            <expr_stmt pos:start="33:13" pos:end="33:58"><expr pos:start="33:13" pos:end="33:57"><call pos:start="33:13" pos:end="33:57"><name pos:start="33:13" pos:end="33:24">SDL_CondWait</name><argument_list pos:start="33:25" pos:end="33:57">(<argument pos:start="33:26" pos:end="33:39"><expr pos:start="33:26" pos:end="33:39"><name pos:start="33:26" pos:end="33:39"><name pos:start="33:26" pos:end="33:27">is</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:39">pictq_cond</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:56"><expr pos:start="33:42" pos:end="33:56"><name pos:start="33:42" pos:end="33:56"><name pos:start="33:42" pos:end="33:43">is</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:56">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:10">is</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:29">video_current_pos</name></name> <operator pos:start="37:31" pos:end="37:31">=</operator> <operator pos:start="37:33" pos:end="37:33">-</operator><literal type="number" pos:start="37:34" pos:end="37:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:10">is</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:26">frame_last_pts</name></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:43">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:36"><expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:10">is</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:31">frame_last_duration</name></name> <operator pos:start="41:33" pos:end="41:33">=</operator> <literal type="number" pos:start="41:35" pos:end="41:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:59"><expr pos:start="43:9" pos:end="43:58"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:10">is</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:23">frame_timer</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <operator pos:start="43:27" pos:end="43:27">(</operator><name pos:start="43:28" pos:end="43:33">double</name><operator pos:start="43:34" pos:end="43:34">)</operator><call pos:start="43:35" pos:end="43:46"><name pos:start="43:35" pos:end="43:44">av_gettime</name><argument_list pos:start="43:45" pos:end="43:46">()</argument_list></call> <operator pos:start="43:48" pos:end="43:48">/</operator> <literal type="number" pos:start="43:50" pos:end="43:58">1000000.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:52"><expr pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:10">is</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:34">frame_last_dropped_pts</name></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <name pos:start="45:38" pos:end="45:51">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:23">SDL_UnlockMutex</name><argument_list pos:start="47:24" pos:end="47:40">(<argument pos:start="47:25" pos:end="47:39"><expr pos:start="47:25" pos:end="47:39"><name pos:start="47:25" pos:end="47:39"><name pos:start="47:25" pos:end="47:26">is</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:73"><expr pos:start="57:5" pos:end="57:72"><call pos:start="57:5" pos:end="57:72"><name pos:start="57:5" pos:end="57:25">avcodec_decode_video2</name><argument_list pos:start="57:26" pos:end="57:72">(<argument pos:start="57:27" pos:end="57:45"><expr pos:start="57:27" pos:end="57:45"><name pos:start="57:27" pos:end="57:45"><name pos:start="57:27" pos:end="57:28">is</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:38">video_st</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:45">codec</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:52"><expr pos:start="57:48" pos:end="57:52"><name pos:start="57:48" pos:end="57:52">frame</name></expr></argument>, <argument pos:start="57:55" pos:end="57:66"><expr pos:start="57:55" pos:end="57:66"><operator pos:start="57:55" pos:end="57:55">&amp;</operator><name pos:start="57:56" pos:end="57:66">got_picture</name></expr></argument>, <argument pos:start="57:69" pos:end="57:71"><expr pos:start="57:69" pos:end="57:71"><name pos:start="57:69" pos:end="57:71">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="131:5"><if pos:start="61:5" pos:end="131:5">if <condition pos:start="61:8" pos:end="61:20">(<expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:19">got_picture</name></expr>)</condition> <block pos:start="61:22" pos:end="131:5">{<block_content pos:start="63:9" pos:end="129:19">

        <decl_stmt pos:start="63:9" pos:end="63:20"><decl pos:start="63:9" pos:end="63:19"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:15">ret</name> <init pos:start="63:17" pos:end="63:19">= <expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">1</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="67:9" pos:end="79:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:38">(<expr pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:31">decoder_reorder_pts</name> <operator pos:start="67:33" pos:end="67:34">==</operator> <operator pos:start="67:36" pos:end="67:36">-</operator><literal type="number" pos:start="67:37" pos:end="67:37">1</literal></expr>)</condition> <block pos:start="67:40" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:61">

            <expr_stmt pos:start="69:13" pos:end="69:61"><expr pos:start="69:13" pos:end="69:60"><operator pos:start="69:13" pos:end="69:13">*</operator><name pos:start="69:14" pos:end="69:16">pts</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <call pos:start="69:20" pos:end="69:60"><name pos:start="69:20" pos:end="69:53">av_frame_get_best_effort_timestamp</name><argument_list pos:start="69:54" pos:end="69:60">(<argument pos:start="69:55" pos:end="69:59"><expr pos:start="69:55" pos:end="69:59"><name pos:start="69:55" pos:end="69:59">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="71:11" pos:end="75:9">else if <condition pos:start="71:19" pos:end="71:39">(<expr pos:start="71:20" pos:end="71:38"><name pos:start="71:20" pos:end="71:38">decoder_reorder_pts</name></expr>)</condition> <block pos:start="71:41" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:34">

            <expr_stmt pos:start="73:13" pos:end="73:34"><expr pos:start="73:13" pos:end="73:33"><operator pos:start="73:13" pos:end="73:13">*</operator><name pos:start="73:14" pos:end="73:16">pts</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:33"><name pos:start="73:20" pos:end="73:24">frame</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:33">pkt_pts</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="79:9">else <block pos:start="75:16" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:34">

            <expr_stmt pos:start="77:13" pos:end="77:34"><expr pos:start="77:13" pos:end="77:33"><operator pos:start="77:13" pos:end="77:13">*</operator><name pos:start="77:14" pos:end="77:16">pts</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:24">frame</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:33">pkt_dts</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:35">(<expr pos:start="83:13" pos:end="83:34"><operator pos:start="83:13" pos:end="83:13">*</operator><name pos:start="83:14" pos:end="83:16">pts</name> <operator pos:start="83:18" pos:end="83:19">==</operator> <name pos:start="83:21" pos:end="83:34">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="83:37" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:21">

            <expr_stmt pos:start="85:13" pos:end="85:21"><expr pos:start="85:13" pos:end="85:20"><operator pos:start="85:13" pos:end="85:13">*</operator><name pos:start="85:14" pos:end="85:16">pts</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="91:9" pos:end="125:9"><if pos:start="91:9" pos:end="125:9">if <condition pos:start="91:12" pos:end="93:58">(<expr pos:start="91:13" pos:end="93:57"><operator pos:start="91:13" pos:end="91:13">(</operator><operator pos:start="91:14" pos:end="91:14">(</operator><name pos:start="91:15" pos:end="91:30"><name pos:start="91:15" pos:end="91:16">is</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:30">av_sync_type</name></name> <operator pos:start="91:32" pos:end="91:33">==</operator> <name pos:start="91:35" pos:end="91:54">AV_SYNC_AUDIO_MASTER</name> <operator pos:start="91:56" pos:end="91:57">&amp;&amp;</operator> <name pos:start="91:59" pos:end="91:70"><name pos:start="91:59" pos:end="91:60">is</name><operator pos:start="91:61" pos:end="91:62">-&gt;</operator><name pos:start="91:63" pos:end="91:70">audio_st</name></name><operator pos:start="91:71" pos:end="91:71">)</operator> <operator pos:start="91:73" pos:end="91:74">||</operator> <name pos:start="91:76" pos:end="91:91"><name pos:start="91:76" pos:end="91:77">is</name><operator pos:start="91:78" pos:end="91:79">-&gt;</operator><name pos:start="91:80" pos:end="91:91">av_sync_type</name></name> <operator pos:start="91:93" pos:end="91:94">==</operator> <name pos:start="91:96" pos:end="91:117">AV_SYNC_EXTERNAL_CLOCK</name><operator pos:start="91:118" pos:end="91:118">)</operator> <operator pos:start="91:120" pos:end="91:121">&amp;&amp;</operator>

             <operator pos:start="93:14" pos:end="93:14">(</operator><name pos:start="93:15" pos:end="93:23">framedrop</name><operator pos:start="93:24" pos:end="93:24">&gt;</operator><literal type="number" pos:start="93:25" pos:end="93:25">0</literal> <operator pos:start="93:27" pos:end="93:28">||</operator> <operator pos:start="93:30" pos:end="93:30">(</operator><name pos:start="93:31" pos:end="93:39">framedrop</name> <operator pos:start="93:41" pos:end="93:42">&amp;&amp;</operator> <name pos:start="93:44" pos:end="93:55"><name pos:start="93:44" pos:end="93:45">is</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:55">audio_st</name></name><operator pos:start="93:56" pos:end="93:56">)</operator><operator pos:start="93:57" pos:end="93:57">)</operator></expr>)</condition> <block pos:start="93:60" pos:end="125:9">{<block_content pos:start="95:13" pos:end="123:45">

            <expr_stmt pos:start="95:13" pos:end="95:43"><expr pos:start="95:13" pos:end="95:42"><call pos:start="95:13" pos:end="95:42"><name pos:start="95:13" pos:end="95:25">SDL_LockMutex</name><argument_list pos:start="95:26" pos:end="95:42">(<argument pos:start="95:27" pos:end="95:41"><expr pos:start="95:27" pos:end="95:41"><name pos:start="95:27" pos:end="95:41"><name pos:start="95:27" pos:end="95:28">is</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:41">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="121:13"><if pos:start="97:13" pos:end="121:13">if <condition pos:start="97:16" pos:end="97:61">(<expr pos:start="97:17" pos:end="97:60"><name pos:start="97:17" pos:end="97:34"><name pos:start="97:17" pos:end="97:18">is</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:34">frame_last_pts</name></name> <operator pos:start="97:36" pos:end="97:37">!=</operator> <name pos:start="97:39" pos:end="97:52">AV_NOPTS_VALUE</name> <operator pos:start="97:54" pos:end="97:55">&amp;&amp;</operator> <operator pos:start="97:57" pos:end="97:57">*</operator><name pos:start="97:58" pos:end="97:60">pts</name></expr>)</condition> <block pos:start="97:63" pos:end="121:13">{<block_content pos:start="99:17" pos:end="119:17">

                <decl_stmt pos:start="99:17" pos:end="99:78"><decl pos:start="99:17" pos:end="99:77"><type pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:22">double</name></type> <name pos:start="99:24" pos:end="99:32">clockdiff</name> <init pos:start="99:34" pos:end="99:77">= <expr pos:start="99:36" pos:end="99:77"><call pos:start="99:36" pos:end="99:54"><name pos:start="99:36" pos:end="99:50">get_video_clock</name><argument_list pos:start="99:51" pos:end="99:54">(<argument pos:start="99:52" pos:end="99:53"><expr pos:start="99:52" pos:end="99:53"><name pos:start="99:52" pos:end="99:53">is</name></expr></argument>)</argument_list></call> <operator pos:start="99:56" pos:end="99:56">-</operator> <call pos:start="99:58" pos:end="99:77"><name pos:start="99:58" pos:end="99:73">get_master_clock</name><argument_list pos:start="99:74" pos:end="99:77">(<argument pos:start="99:75" pos:end="99:76"><expr pos:start="99:75" pos:end="99:76"><name pos:start="99:75" pos:end="99:76">is</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="101:17" pos:end="101:69"><decl pos:start="101:17" pos:end="101:68"><type pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:22">double</name></type> <name pos:start="101:24" pos:end="101:27">dpts</name> <init pos:start="101:29" pos:end="101:68">= <expr pos:start="101:31" pos:end="101:68"><call pos:start="101:31" pos:end="101:61"><name pos:start="101:31" pos:end="101:36">av_q2d</name><argument_list pos:start="101:37" pos:end="101:61">(<argument pos:start="101:38" pos:end="101:60"><expr pos:start="101:38" pos:end="101:60"><name pos:start="101:38" pos:end="101:60"><name pos:start="101:38" pos:end="101:39">is</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:49">video_st</name><operator pos:start="101:50" pos:end="101:51">-&gt;</operator><name pos:start="101:52" pos:end="101:60">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="101:63" pos:end="101:63">*</operator> <operator pos:start="101:65" pos:end="101:65">*</operator><name pos:start="101:66" pos:end="101:68">pts</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="103:17" pos:end="103:59"><decl pos:start="103:17" pos:end="103:58"><type pos:start="103:17" pos:end="103:22"><name pos:start="103:17" pos:end="103:22">double</name></type> <name pos:start="103:24" pos:end="103:30">ptsdiff</name> <init pos:start="103:32" pos:end="103:58">= <expr pos:start="103:34" pos:end="103:58"><name pos:start="103:34" pos:end="103:37">dpts</name> <operator pos:start="103:39" pos:end="103:39">-</operator> <name pos:start="103:41" pos:end="103:58"><name pos:start="103:41" pos:end="103:42">is</name><operator pos:start="103:43" pos:end="103:44">-&gt;</operator><name pos:start="103:45" pos:end="103:58">frame_last_pts</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="105:17" pos:end="119:17"><if pos:start="105:17" pos:end="119:17">if <condition pos:start="105:20" pos:end="109:75">(<expr pos:start="105:21" pos:end="109:74"><call pos:start="105:21" pos:end="105:35"><name pos:start="105:21" pos:end="105:24">fabs</name><argument_list pos:start="105:25" pos:end="105:35">(<argument pos:start="105:26" pos:end="105:34"><expr pos:start="105:26" pos:end="105:34"><name pos:start="105:26" pos:end="105:34">clockdiff</name></expr></argument>)</argument_list></call> <operator pos:start="105:37" pos:end="105:37">&lt;</operator> <name pos:start="105:39" pos:end="105:57">AV_NOSYNC_THRESHOLD</name> <operator pos:start="105:59" pos:end="105:60">&amp;&amp;</operator>

                     <name pos:start="107:22" pos:end="107:28">ptsdiff</name> <operator pos:start="107:30" pos:end="107:30">&gt;</operator> <literal type="number" pos:start="107:32" pos:end="107:32">0</literal> <operator pos:start="107:34" pos:end="107:35">&amp;&amp;</operator> <name pos:start="107:37" pos:end="107:43">ptsdiff</name> <operator pos:start="107:45" pos:end="107:45">&lt;</operator> <name pos:start="107:47" pos:end="107:65">AV_NOSYNC_THRESHOLD</name> <operator pos:start="107:67" pos:end="107:68">&amp;&amp;</operator>

                     <name pos:start="109:22" pos:end="109:30">clockdiff</name> <operator pos:start="109:32" pos:end="109:32">+</operator> <name pos:start="109:34" pos:end="109:40">ptsdiff</name> <operator pos:start="109:42" pos:end="109:42">-</operator> <name pos:start="109:44" pos:end="109:70"><name pos:start="109:44" pos:end="109:45">is</name><operator pos:start="109:46" pos:end="109:47">-&gt;</operator><name pos:start="109:48" pos:end="109:70">frame_last_filter_delay</name></name> <operator pos:start="109:72" pos:end="109:72">&lt;</operator> <literal type="number" pos:start="109:74" pos:end="109:74">0</literal></expr>)</condition> <block pos:start="109:77" pos:end="119:17">{<block_content pos:start="111:21" pos:end="117:28">

                    <expr_stmt pos:start="111:21" pos:end="111:58"><expr pos:start="111:21" pos:end="111:57"><name pos:start="111:21" pos:end="111:46"><name pos:start="111:21" pos:end="111:22">is</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:46">frame_last_dropped_pos</name></name> <operator pos:start="111:48" pos:end="111:48">=</operator> <name pos:start="111:50" pos:end="111:57"><name pos:start="111:50" pos:end="111:52">pkt</name><operator pos:start="111:53" pos:end="111:54">-&gt;</operator><name pos:start="111:55" pos:end="111:57">pos</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:54"><expr pos:start="113:21" pos:end="113:53"><name pos:start="113:21" pos:end="113:46"><name pos:start="113:21" pos:end="113:22">is</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:46">frame_last_dropped_pts</name></name> <operator pos:start="113:48" pos:end="113:48">=</operator> <name pos:start="113:50" pos:end="113:53">dpts</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:44"><expr pos:start="115:21" pos:end="115:43"><name pos:start="115:21" pos:end="115:41"><name pos:start="115:21" pos:end="115:22">is</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:41">frame_drops_early</name></name><operator pos:start="115:42" pos:end="115:43">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:28"><expr pos:start="117:21" pos:end="117:27"><name pos:start="117:21" pos:end="117:23">ret</name> <operator pos:start="117:25" pos:end="117:25">=</operator> <literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:45"><expr pos:start="123:13" pos:end="123:44"><call pos:start="123:13" pos:end="123:44"><name pos:start="123:13" pos:end="123:27">SDL_UnlockMutex</name><argument_list pos:start="123:28" pos:end="123:44">(<argument pos:start="123:29" pos:end="123:43"><expr pos:start="123:29" pos:end="123:43"><name pos:start="123:29" pos:end="123:43"><name pos:start="123:29" pos:end="123:30">is</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:43">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="129:9" pos:end="129:19">return <expr pos:start="129:16" pos:end="129:18"><name pos:start="129:16" pos:end="129:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
