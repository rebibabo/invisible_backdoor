<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21950.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">nbd_co_send_request</name><parameter_list pos:start="1:31" pos:end="5:50">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:50"><decl pos:start="3:32" pos:end="3:50"><type pos:start="3:32" pos:end="3:50"><name pos:start="3:32" pos:end="3:41">NBDRequest</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:50">request</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:49"><decl pos:start="5:32" pos:end="5:49"><type pos:start="5:32" pos:end="5:49"><name pos:start="5:32" pos:end="5:43">QEMUIOVector</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:49">qiov</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="91:1">{<block_content pos:start="9:5" pos:end="89:14">

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">NBDClientSession</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">s</name> <init pos:start="9:25" pos:end="9:52">= <expr pos:start="9:27" pos:end="9:52"><call pos:start="9:27" pos:end="9:52"><name pos:start="9:27" pos:end="9:48">nbd_get_client_session</name><argument_list pos:start="9:49" pos:end="9:52">(<argument pos:start="9:50" pos:end="9:51"><expr pos:start="9:50" pos:end="9:51"><name pos:start="9:50" pos:end="9:51">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name></decl>, <decl pos:start="11:13" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:15">ret</name></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><call pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:22">qemu_co_mutex_lock</name><argument_list pos:start="15:23" pos:end="15:38">(<argument pos:start="15:24" pos:end="15:37"><expr pos:start="15:24" pos:end="15:37"><operator pos:start="15:24" pos:end="15:24">&amp;</operator><name pos:start="15:25" pos:end="15:37"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:37">send_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="21:5">while <condition pos:start="17:11" pos:end="17:44">(<expr pos:start="17:12" pos:end="17:43"><name pos:start="17:12" pos:end="17:23"><name pos:start="17:12" pos:end="17:12">s</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:23">in_flight</name></name> <operator pos:start="17:25" pos:end="17:26">==</operator> <name pos:start="17:28" pos:end="17:43">MAX_NBD_REQUESTS</name></expr>)</condition> <block pos:start="17:46" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:58">

        <expr_stmt pos:start="19:9" pos:end="19:58"><expr pos:start="19:9" pos:end="19:57"><call pos:start="19:9" pos:end="19:57"><name pos:start="19:9" pos:end="19:26">qemu_co_queue_wait</name><argument_list pos:start="19:27" pos:end="19:57">(<argument pos:start="19:28" pos:end="19:40"><expr pos:start="19:28" pos:end="19:40"><operator pos:start="19:28" pos:end="19:28">&amp;</operator><name pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:40">free_sema</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:56"><expr pos:start="19:43" pos:end="19:56"><operator pos:start="19:43" pos:end="19:43">&amp;</operator><name pos:start="19:44" pos:end="19:56"><name pos:start="19:44" pos:end="19:44">s</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:56">send_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:16">in_flight</name></name><operator pos:start="23:17" pos:end="23:18">++</operator></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="37:5">for <control pos:start="27:9" pos:end="27:42">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:37"><expr pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:36">MAX_NBD_REQUESTS</name></expr>;</condition> <incr pos:start="27:39" pos:end="27:41"><expr pos:start="27:39" pos:end="27:41"><name pos:start="27:39" pos:end="27:39">i</name><operator pos:start="27:40" pos:end="27:41">++</operator></expr></incr>)</control> <block pos:start="27:44" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:9">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:41">(<expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:29">recv_coroutine</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">i</name></expr>]</index></name> <operator pos:start="29:34" pos:end="29:35">==</operator> <name pos:start="29:37" pos:end="29:40">NULL</name></expr>)</condition> <block pos:start="29:43" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:18">

            <expr_stmt pos:start="31:13" pos:end="31:57"><expr pos:start="31:13" pos:end="31:56"><name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:29">recv_coroutine</name><index pos:start="31:30" pos:end="31:32">[<expr pos:start="31:31" pos:end="31:31"><name pos:start="31:31" pos:end="31:31">i</name></expr>]</index></name> <operator pos:start="31:34" pos:end="31:34">=</operator> <call pos:start="31:36" pos:end="31:56"><name pos:start="31:36" pos:end="31:54">qemu_coroutine_self</name><argument_list pos:start="31:55" pos:end="31:56">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:12">g_assert</name><argument_list pos:start="41:13" pos:end="41:33">(<argument pos:start="41:14" pos:end="41:32"><expr pos:start="41:14" pos:end="41:32"><call pos:start="41:14" pos:end="41:32"><name pos:start="41:14" pos:end="41:30">qemu_in_coroutine</name><argument_list pos:start="41:31" pos:end="41:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><call pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:10">assert</name><argument_list pos:start="43:11" pos:end="43:32">(<argument pos:start="43:12" pos:end="43:31"><expr pos:start="43:12" pos:end="43:31"><name pos:start="43:12" pos:end="43:12">i</name> <operator pos:start="43:14" pos:end="43:14">&lt;</operator> <name pos:start="43:16" pos:end="43:31">MAX_NBD_REQUESTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:11">request</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:19">handle</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:43"><name pos:start="45:23" pos:end="45:37">INDEX_TO_HANDLE</name><argument_list pos:start="45:38" pos:end="45:43">(<argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><name pos:start="45:39" pos:end="45:39">s</name></expr></argument>, <argument pos:start="45:42" pos:end="45:42"><expr pos:start="45:42" pos:end="45:42"><name pos:start="45:42" pos:end="45:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:15"><name pos:start="49:10" pos:end="49:10">s</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:15">ioc</name></name></expr>)</condition> <block pos:start="49:18" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:22">

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><call pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:28">qemu_co_mutex_unlock</name><argument_list pos:start="51:29" pos:end="51:44">(<argument pos:start="51:30" pos:end="51:43"><expr pos:start="51:30" pos:end="51:43"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:43"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:43">send_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:22">return <expr pos:start="53:16" pos:end="53:21"><operator pos:start="53:16" pos:end="53:16">-</operator><name pos:start="53:17" pos:end="53:21">EPIPE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="85:5"><if pos:start="59:5" pos:end="81:5">if <condition pos:start="59:8" pos:end="59:13">(<expr pos:start="59:9" pos:end="59:12"><name pos:start="59:9" pos:end="59:12">qiov</name></expr>)</condition> <block pos:start="59:15" pos:end="81:5">{<block_content pos:start="61:9" pos:end="79:44">

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><call pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:28">qio_channel_set_cork</name><argument_list pos:start="61:29" pos:end="61:42">(<argument pos:start="61:30" pos:end="61:35"><expr pos:start="61:30" pos:end="61:35"><name pos:start="61:30" pos:end="61:35"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:35">ioc</name></name></expr></argument>, <argument pos:start="61:38" pos:end="61:41"><expr pos:start="61:38" pos:end="61:41"><name pos:start="61:38" pos:end="61:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:47"><expr pos:start="63:9" pos:end="63:46"><name pos:start="63:9" pos:end="63:10">rc</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:46"><name pos:start="63:14" pos:end="63:29">nbd_send_request</name><argument_list pos:start="63:30" pos:end="63:46">(<argument pos:start="63:31" pos:end="63:36"><expr pos:start="63:31" pos:end="63:36"><name pos:start="63:31" pos:end="63:36"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:36">ioc</name></name></expr></argument>, <argument pos:start="63:39" pos:end="63:45"><expr pos:start="63:39" pos:end="63:45"><name pos:start="63:39" pos:end="63:45">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="77:9"><if pos:start="65:9" pos:end="77:9">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:14">rc</name> <operator pos:start="65:16" pos:end="65:17">&gt;=</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>)</condition> <block pos:start="65:22" pos:end="77:9">{<block_content pos:start="67:13" pos:end="75:13">

            <expr_stmt pos:start="67:13" pos:end="69:32"><expr pos:start="67:13" pos:end="69:31"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="69:31"><name pos:start="67:19" pos:end="67:25">nbd_rwv</name><argument_list pos:start="67:26" pos:end="69:31">(<argument pos:start="67:27" pos:end="67:32"><expr pos:start="67:27" pos:end="67:32"><name pos:start="67:27" pos:end="67:32"><name pos:start="67:27" pos:end="67:27">s</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:32">ioc</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:43"><expr pos:start="67:35" pos:end="67:43"><name pos:start="67:35" pos:end="67:43"><name pos:start="67:35" pos:end="67:38">qiov</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:43">iov</name></name></expr></argument>, <argument pos:start="67:46" pos:end="67:55"><expr pos:start="67:46" pos:end="67:55"><name pos:start="67:46" pos:end="67:55"><name pos:start="67:46" pos:end="67:49">qiov</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:55">niov</name></name></expr></argument>, <argument pos:start="67:58" pos:end="67:69"><expr pos:start="67:58" pos:end="67:69"><name pos:start="67:58" pos:end="67:69"><name pos:start="67:58" pos:end="67:64">request</name><operator pos:start="67:65" pos:end="67:66">-&gt;</operator><name pos:start="67:67" pos:end="67:69">len</name></name></expr></argument>, <argument pos:start="67:72" pos:end="67:76"><expr pos:start="67:72" pos:end="67:76"><name pos:start="67:72" pos:end="67:76">false</name></expr></argument>,

                          <argument pos:start="69:27" pos:end="69:30"><expr pos:start="69:27" pos:end="69:30"><name pos:start="69:27" pos:end="69:30">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="75:13"><if pos:start="71:13" pos:end="75:13">if <condition pos:start="71:16" pos:end="71:36">(<expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:19">ret</name> <operator pos:start="71:21" pos:end="71:22">!=</operator> <name pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:30">request</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:35">len</name></name></expr>)</condition> <block pos:start="71:38" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:26">

                <expr_stmt pos:start="73:17" pos:end="73:26"><expr pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:18">rc</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <operator pos:start="73:22" pos:end="73:22">-</operator><name pos:start="73:23" pos:end="73:25">EIO</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:44"><expr pos:start="79:9" pos:end="79:43"><call pos:start="79:9" pos:end="79:43"><name pos:start="79:9" pos:end="79:28">qio_channel_set_cork</name><argument_list pos:start="79:29" pos:end="79:43">(<argument pos:start="79:30" pos:end="79:35"><expr pos:start="79:30" pos:end="79:35"><name pos:start="79:30" pos:end="79:35"><name pos:start="79:30" pos:end="79:30">s</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:35">ioc</name></name></expr></argument>, <argument pos:start="79:38" pos:end="79:42"><expr pos:start="79:38" pos:end="79:42"><name pos:start="79:38" pos:end="79:42">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="85:5">else <block pos:start="81:12" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:47">

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:10">rc</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:46"><name pos:start="83:14" pos:end="83:29">nbd_send_request</name><argument_list pos:start="83:30" pos:end="83:46">(<argument pos:start="83:31" pos:end="83:36"><expr pos:start="83:31" pos:end="83:36"><name pos:start="83:31" pos:end="83:36"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:36">ioc</name></name></expr></argument>, <argument pos:start="83:39" pos:end="83:45"><expr pos:start="83:39" pos:end="83:45"><name pos:start="83:39" pos:end="83:45">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:41"><expr pos:start="87:5" pos:end="87:40"><call pos:start="87:5" pos:end="87:40"><name pos:start="87:5" pos:end="87:24">qemu_co_mutex_unlock</name><argument_list pos:start="87:25" pos:end="87:40">(<argument pos:start="87:26" pos:end="87:39"><expr pos:start="87:26" pos:end="87:39"><operator pos:start="87:26" pos:end="87:26">&amp;</operator><name pos:start="87:27" pos:end="87:39"><name pos:start="87:27" pos:end="87:27">s</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:39">send_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:14">return <expr pos:start="89:12" pos:end="89:13"><name pos:start="89:12" pos:end="89:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
