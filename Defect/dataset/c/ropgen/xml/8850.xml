<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8850.c" pos:tabs="8"><function pos:start="1:1" pos:end="501:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">avi_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="501:1">{<block_content pos:start="5:5" pos:end="499:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVIContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">avi</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">bitrate</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">n</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">i</name></decl>, <decl pos:start="9:24" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:32">nb_frames</name></decl>, <decl pos:start="9:35" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:35" pos:end="9:45">au_byterate</name></decl>, <decl pos:start="9:48" pos:end="9:55"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:48" pos:end="9:55">au_ssize</name></decl>, <decl pos:start="9:58" pos:end="9:65"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:58" pos:end="9:65">au_scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:26">stream</name></decl>, <decl pos:start="11:29" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:20"><modifier pos:start="11:29" pos:end="11:29">*</modifier></type><name pos:start="11:30" pos:end="11:38">video_enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:17">list1</name></decl>, <decl pos:start="13:20" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:20" pos:end="13:24">list2</name></decl>, <decl pos:start="13:27" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:27" pos:end="13:30">strh</name></decl>, <decl pos:start="13:33" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:33" pos:end="13:36">strf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:21">AVDictionaryEntry</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:24">t</name> <init pos:start="15:26" pos:end="15:31">= <expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:45">(<expr pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:21">nb_streams</name></name> <operator pos:start="19:23" pos:end="19:23">&gt;</operator> <name pos:start="19:25" pos:end="19:44">AVI_MAX_STREAM_COUNT</name></expr>)</condition> <block pos:start="19:47" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:18">

        <expr_stmt pos:start="21:9" pos:end="23:37"><expr pos:start="21:9" pos:end="23:36"><call pos:start="21:9" pos:end="23:36"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="23:36">(<argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">s</name></expr></argument>, <argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:33" pos:end="21:68"><expr pos:start="21:33" pos:end="21:68"><literal type="string" pos:start="21:33" pos:end="21:68">"AVI does not support &gt;%d streams\n"</literal></expr></argument>,

               <argument pos:start="23:16" pos:end="23:35"><expr pos:start="23:16" pos:end="23:35"><name pos:start="23:16" pos:end="23:35">AVI_MAX_STREAM_COUNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="31:5" pos:end="39:5">for <control pos:start="31:9" pos:end="31:39">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">n</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:34"><expr pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:17">n</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:33">nb_streams</name></name></expr>;</condition> <incr pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:36">n</name><operator pos:start="31:37" pos:end="31:38">++</operator></expr></incr>)</control> <block pos:start="31:41" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:35">

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:18">streams</name><index pos:start="33:19" pos:end="33:21">[<expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">n</name></expr>]</index></name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:32">priv_data</name> <operator pos:start="33:34" pos:end="33:34">=</operator> <call pos:start="33:36" pos:end="33:64"><name pos:start="33:36" pos:end="33:45">av_mallocz</name><argument_list pos:start="33:46" pos:end="33:64">(<argument pos:start="33:47" pos:end="33:63"><expr pos:start="33:47" pos:end="33:63"><sizeof pos:start="33:47" pos:end="33:63">sizeof<argument_list pos:start="33:53" pos:end="33:63">(<argument pos:start="33:54" pos:end="33:62"><expr pos:start="33:54" pos:end="33:62"><name pos:start="33:54" pos:end="33:62">AVIStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:35"><if pos:start="35:9" pos:end="37:35">if <condition pos:start="35:12" pos:end="35:38">(<expr pos:start="35:13" pos:end="35:37"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:26"><name pos:start="35:14" pos:end="35:14">s</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:23">streams</name><index pos:start="35:24" pos:end="35:26">[<expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">n</name></expr>]</index></name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:37">priv_data</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:35"><block_content pos:start="37:13" pos:end="37:35">

            <return pos:start="37:13" pos:end="37:35">return <expr pos:start="37:20" pos:end="37:34"><call pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:26">AVERROR</name><argument_list pos:start="37:27" pos:end="37:34">(<argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="43:5" pos:end="43:21">/* header list */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:7">avi</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:16">riff_id</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:9">list1</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:53"><name pos:start="47:13" pos:end="47:30">avi_start_new_riff</name><argument_list pos:start="47:31" pos:end="47:53">(<argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><name pos:start="47:32" pos:end="47:32">s</name></expr></argument>, <argument pos:start="47:35" pos:end="47:36"><expr pos:start="47:35" pos:end="47:36"><name pos:start="47:35" pos:end="47:36">pb</name></expr></argument>, <argument pos:start="47:39" pos:end="47:44"><expr pos:start="47:39" pos:end="47:44"><literal type="string" pos:start="47:39" pos:end="47:44">"AVI "</literal></expr></argument>, <argument pos:start="47:47" pos:end="47:52"><expr pos:start="47:47" pos:end="47:52"><literal type="string" pos:start="47:47" pos:end="47:52">"hdrl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:20">/* avi header */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:16">ffio_wfourcc</name><argument_list pos:start="53:17" pos:end="53:28">(<argument pos:start="53:18" pos:end="53:19"><expr pos:start="53:18" pos:end="53:19"><name pos:start="53:18" pos:end="53:19">pb</name></expr></argument>, <argument pos:start="53:22" pos:end="53:27"><expr pos:start="53:22" pos:end="53:27"><literal type="string" pos:start="53:22" pos:end="53:27">"avih"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><call pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:13">avio_wl32</name><argument_list pos:start="55:14" pos:end="55:25">(<argument pos:start="55:15" pos:end="55:16"><expr pos:start="55:15" pos:end="55:16"><name pos:start="55:15" pos:end="55:16">pb</name></expr></argument>, <argument pos:start="55:19" pos:end="55:24"><expr pos:start="55:19" pos:end="55:24"><literal type="number" pos:start="55:19" pos:end="55:20">14</literal> <operator pos:start="55:22" pos:end="55:22">*</operator> <literal type="number" pos:start="55:24" pos:end="55:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:16"><expr pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:11">bitrate</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:21"><expr pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:13">video_enc</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:20">NULL</name></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="73:5">for <control pos:start="63:9" pos:end="63:39">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">n</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:34"><expr pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:17">n</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <name pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:33">nb_streams</name></name></expr>;</condition> <incr pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:36">n</name><operator pos:start="63:37" pos:end="63:38">++</operator></expr></incr>)</control> <block pos:start="63:41" pos:end="73:5">{<block_content pos:start="65:9" pos:end="71:31">

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:14">stream</name>   <operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:32"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:29">streams</name><index pos:start="65:30" pos:end="65:32">[<expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">n</name></expr>]</index></name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:39">codec</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:15">bitrate</name> <operator pos:start="67:17" pos:end="67:18">+=</operator> <name pos:start="67:20" pos:end="67:35"><name pos:start="67:20" pos:end="67:25">stream</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:35">bit_rate</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:31"><if pos:start="69:9" pos:end="71:31">if <condition pos:start="69:12" pos:end="69:53">(<expr pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:18">stream</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:30">codec_type</name></name> <operator pos:start="69:32" pos:end="69:33">==</operator> <name pos:start="69:35" pos:end="69:52">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:31"><block_content pos:start="71:13" pos:end="71:31">

            <expr_stmt pos:start="71:13" pos:end="71:31"><expr pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:21">video_enc</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:30">stream</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="77:5" pos:end="77:18"><expr pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:13">nb_frames</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="89:25"><if pos:start="81:5" pos:end="85:61">if <condition pos:start="81:8" pos:end="81:18">(<expr pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:17">video_enc</name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="85:61"><block_content pos:start="83:9" pos:end="85:61">

        <expr_stmt pos:start="83:9" pos:end="85:61"><expr pos:start="83:9" pos:end="85:60"><call pos:start="83:9" pos:end="85:60"><name pos:start="83:9" pos:end="83:17">avio_wl32</name><argument_list pos:start="83:18" pos:end="85:60">(<argument pos:start="83:19" pos:end="83:20"><expr pos:start="83:19" pos:end="83:20"><name pos:start="83:19" pos:end="83:20">pb</name></expr></argument>, <argument pos:start="83:23" pos:end="85:59"><expr pos:start="83:23" pos:end="85:59"><operator pos:start="83:23" pos:end="83:23">(</operator><name pos:start="83:24" pos:end="83:31">uint32_t</name><operator pos:start="83:32" pos:end="83:32">)</operator> <operator pos:start="83:34" pos:end="83:34">(</operator><call pos:start="83:35" pos:end="83:50"><name pos:start="83:35" pos:end="83:41">INT64_C</name><argument_list pos:start="83:42" pos:end="83:50">(<argument pos:start="83:43" pos:end="83:49"><expr pos:start="83:43" pos:end="83:49"><literal type="number" pos:start="83:43" pos:end="83:49">1000000</literal></expr></argument>)</argument_list></call> <operator pos:start="83:52" pos:end="83:52">*</operator> <name pos:start="83:54" pos:end="83:77"><name pos:start="83:54" pos:end="83:62">video_enc</name><operator pos:start="83:63" pos:end="83:64">-&gt;</operator><name pos:start="83:65" pos:end="83:73">time_base</name><operator pos:start="83:74" pos:end="83:74">.</operator><name pos:start="83:75" pos:end="83:77">num</name></name> <operator pos:start="83:79" pos:end="83:79">/</operator>

                                  <name pos:start="85:35" pos:end="85:58"><name pos:start="85:35" pos:end="85:43">video_enc</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:54">time_base</name><operator pos:start="85:55" pos:end="85:55">.</operator><name pos:start="85:56" pos:end="85:58">den</name></name><operator pos:start="85:59" pos:end="85:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="87:5" pos:end="89:25">else<block type="pseudo" pos:start="89:9" pos:end="89:25"><block_content pos:start="89:9" pos:end="89:25">

        <expr_stmt pos:start="89:9" pos:end="89:25"><expr pos:start="89:9" pos:end="89:24"><call pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:17">avio_wl32</name><argument_list pos:start="89:18" pos:end="89:24">(<argument pos:start="89:19" pos:end="89:20"><expr pos:start="89:19" pos:end="89:20"><name pos:start="89:19" pos:end="89:20">pb</name></expr></argument>, <argument pos:start="89:23" pos:end="89:23"><expr pos:start="89:23" pos:end="89:23"><literal type="number" pos:start="89:23" pos:end="89:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:31"><expr pos:start="91:5" pos:end="91:30"><call pos:start="91:5" pos:end="91:30"><name pos:start="91:5" pos:end="91:13">avio_wl32</name><argument_list pos:start="91:14" pos:end="91:30">(<argument pos:start="91:15" pos:end="91:16"><expr pos:start="91:15" pos:end="91:16"><name pos:start="91:15" pos:end="91:16">pb</name></expr></argument>, <argument pos:start="91:19" pos:end="91:29"><expr pos:start="91:19" pos:end="91:29"><name pos:start="91:19" pos:end="91:25">bitrate</name> <operator pos:start="91:27" pos:end="91:27">/</operator> <literal type="number" pos:start="91:29" pos:end="91:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:33" pos:end="91:58">/* XXX: not quite exact */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:21"><expr pos:start="93:5" pos:end="93:20"><call pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:13">avio_wl32</name><argument_list pos:start="93:14" pos:end="93:20">(<argument pos:start="93:15" pos:end="93:16"><expr pos:start="93:15" pos:end="93:16"><name pos:start="93:15" pos:end="93:16">pb</name></expr></argument>, <argument pos:start="93:19" pos:end="93:19"><expr pos:start="93:19" pos:end="93:19"><literal type="number" pos:start="93:19" pos:end="93:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:23" pos:end="93:35">/* padding */</comment>

    <if_stmt pos:start="95:5" pos:end="101:77"><if pos:start="95:5" pos:end="97:61">if <condition pos:start="95:8" pos:end="95:22">(<expr pos:start="95:9" pos:end="95:21"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:21"><name pos:start="95:10" pos:end="95:11">pb</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:21">seekable</name></name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:61"><block_content pos:start="97:9" pos:end="97:61">

        <expr_stmt pos:start="97:9" pos:end="97:61"><expr pos:start="97:9" pos:end="97:60"><call pos:start="97:9" pos:end="97:60"><name pos:start="97:9" pos:end="97:17">avio_wl32</name><argument_list pos:start="97:18" pos:end="97:60">(<argument pos:start="97:19" pos:end="97:20"><expr pos:start="97:19" pos:end="97:20"><name pos:start="97:19" pos:end="97:20">pb</name></expr></argument>, <argument pos:start="97:23" pos:end="97:59"><expr pos:start="97:23" pos:end="97:59"><name pos:start="97:23" pos:end="97:38">AVIF_TRUSTCKTYPE</name> <operator pos:start="97:40" pos:end="97:40">|</operator> <name pos:start="97:42" pos:end="97:59">AVIF_ISINTERLEAVED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>  <comment type="block" pos:start="97:64" pos:end="97:74">/* flags */</comment>

    <else pos:start="99:5" pos:end="101:77">else<block type="pseudo" pos:start="101:9" pos:end="101:77"><block_content pos:start="101:9" pos:end="101:77">

        <expr_stmt pos:start="101:9" pos:end="101:77"><expr pos:start="101:9" pos:end="101:76"><call pos:start="101:9" pos:end="101:76"><name pos:start="101:9" pos:end="101:17">avio_wl32</name><argument_list pos:start="101:18" pos:end="101:76">(<argument pos:start="101:19" pos:end="101:20"><expr pos:start="101:19" pos:end="101:20"><name pos:start="101:19" pos:end="101:20">pb</name></expr></argument>, <argument pos:start="101:23" pos:end="101:75"><expr pos:start="101:23" pos:end="101:75"><name pos:start="101:23" pos:end="101:38">AVIF_TRUSTCKTYPE</name> <operator pos:start="101:40" pos:end="101:40">|</operator> <name pos:start="101:42" pos:end="101:54">AVIF_HASINDEX</name> <operator pos:start="101:56" pos:end="101:56">|</operator> <name pos:start="101:58" pos:end="101:75">AVIF_ISINTERLEAVED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>  <comment type="block" pos:start="101:80" pos:end="101:90">/* flags */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:40"><expr pos:start="103:5" pos:end="103:39"><name pos:start="103:5" pos:end="103:23"><name pos:start="103:5" pos:end="103:7">avi</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:23">frames_hdr_all</name></name> <operator pos:start="103:25" pos:end="103:25">=</operator> <call pos:start="103:27" pos:end="103:39"><name pos:start="103:27" pos:end="103:35">avio_tell</name><argument_list pos:start="103:36" pos:end="103:39">(<argument pos:start="103:37" pos:end="103:38"><expr pos:start="103:37" pos:end="103:38"><name pos:start="103:37" pos:end="103:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="103:42" pos:end="103:81">/* remember this offset to fill later */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:29"><expr pos:start="105:5" pos:end="105:28"><call pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:13">avio_wl32</name><argument_list pos:start="105:14" pos:end="105:28">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">pb</name></expr></argument>, <argument pos:start="105:19" pos:end="105:27"><expr pos:start="105:19" pos:end="105:27"><name pos:start="105:19" pos:end="105:27">nb_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="105:31" pos:end="105:59">/* nb frames, filled later */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><call pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:13">avio_wl32</name><argument_list pos:start="107:14" pos:end="107:20">(<argument pos:start="107:15" pos:end="107:16"><expr pos:start="107:15" pos:end="107:16"><name pos:start="107:15" pos:end="107:16">pb</name></expr></argument>, <argument pos:start="107:19" pos:end="107:19"><expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:23" pos:end="107:41">/* initial frame */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:33"><expr pos:start="109:5" pos:end="109:32"><call pos:start="109:5" pos:end="109:32"><name pos:start="109:5" pos:end="109:13">avio_wl32</name><argument_list pos:start="109:14" pos:end="109:32">(<argument pos:start="109:15" pos:end="109:16"><expr pos:start="109:15" pos:end="109:16"><name pos:start="109:15" pos:end="109:16">pb</name></expr></argument>, <argument pos:start="109:19" pos:end="109:31"><expr pos:start="109:19" pos:end="109:31"><name pos:start="109:19" pos:end="109:31"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:31">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="109:35" pos:end="109:50">/* nb streams */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:31"><expr pos:start="111:5" pos:end="111:30"><call pos:start="111:5" pos:end="111:30"><name pos:start="111:5" pos:end="111:13">avio_wl32</name><argument_list pos:start="111:14" pos:end="111:30">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:29"><expr pos:start="111:19" pos:end="111:29"><literal type="number" pos:start="111:19" pos:end="111:22">1024</literal> <operator pos:start="111:24" pos:end="111:24">*</operator> <literal type="number" pos:start="111:26" pos:end="111:29">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:33" pos:end="111:59">/* suggested buffer size */</comment>

    <if_stmt pos:start="113:5" pos:end="125:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:18">(<expr pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:17">video_enc</name></expr>)</condition> <block pos:start="113:20" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:41">

        <expr_stmt pos:start="115:9" pos:end="115:40"><expr pos:start="115:9" pos:end="115:39"><call pos:start="115:9" pos:end="115:39"><name pos:start="115:9" pos:end="115:17">avio_wl32</name><argument_list pos:start="115:18" pos:end="115:39">(<argument pos:start="115:19" pos:end="115:20"><expr pos:start="115:19" pos:end="115:20"><name pos:start="115:19" pos:end="115:20">pb</name></expr></argument>, <argument pos:start="115:23" pos:end="115:38"><expr pos:start="115:23" pos:end="115:38"><name pos:start="115:23" pos:end="115:38"><name pos:start="115:23" pos:end="115:31">video_enc</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:38">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:41"><expr pos:start="117:9" pos:end="117:40"><call pos:start="117:9" pos:end="117:40"><name pos:start="117:9" pos:end="117:17">avio_wl32</name><argument_list pos:start="117:18" pos:end="117:40">(<argument pos:start="117:19" pos:end="117:20"><expr pos:start="117:19" pos:end="117:20"><name pos:start="117:19" pos:end="117:20">pb</name></expr></argument>, <argument pos:start="117:23" pos:end="117:39"><expr pos:start="117:23" pos:end="117:39"><name pos:start="117:23" pos:end="117:39"><name pos:start="117:23" pos:end="117:31">video_enc</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:39">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="125:5">else <block pos:start="119:12" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:25">

        <expr_stmt pos:start="121:9" pos:end="121:25"><expr pos:start="121:9" pos:end="121:24"><call pos:start="121:9" pos:end="121:24"><name pos:start="121:9" pos:end="121:17">avio_wl32</name><argument_list pos:start="121:18" pos:end="121:24">(<argument pos:start="121:19" pos:end="121:20"><expr pos:start="121:19" pos:end="121:20"><name pos:start="121:19" pos:end="121:20">pb</name></expr></argument>, <argument pos:start="121:23" pos:end="121:23"><expr pos:start="121:23" pos:end="121:23"><literal type="number" pos:start="121:23" pos:end="121:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:25"><expr pos:start="123:9" pos:end="123:24"><call pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:17">avio_wl32</name><argument_list pos:start="123:18" pos:end="123:24">(<argument pos:start="123:19" pos:end="123:20"><expr pos:start="123:19" pos:end="123:20"><name pos:start="123:19" pos:end="123:20">pb</name></expr></argument>, <argument pos:start="123:23" pos:end="123:23"><expr pos:start="123:23" pos:end="123:23"><literal type="number" pos:start="123:23" pos:end="123:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:21"><expr pos:start="127:5" pos:end="127:20"><call pos:start="127:5" pos:end="127:20"><name pos:start="127:5" pos:end="127:13">avio_wl32</name><argument_list pos:start="127:14" pos:end="127:20">(<argument pos:start="127:15" pos:end="127:16"><expr pos:start="127:15" pos:end="127:16"><name pos:start="127:15" pos:end="127:16">pb</name></expr></argument>, <argument pos:start="127:19" pos:end="127:19"><expr pos:start="127:19" pos:end="127:19"><literal type="number" pos:start="127:19" pos:end="127:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="127:23" pos:end="127:36">/* reserved */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:21"><expr pos:start="129:5" pos:end="129:20"><call pos:start="129:5" pos:end="129:20"><name pos:start="129:5" pos:end="129:13">avio_wl32</name><argument_list pos:start="129:14" pos:end="129:20">(<argument pos:start="129:15" pos:end="129:16"><expr pos:start="129:15" pos:end="129:16"><name pos:start="129:15" pos:end="129:16">pb</name></expr></argument>, <argument pos:start="129:19" pos:end="129:19"><expr pos:start="129:19" pos:end="129:19"><literal type="number" pos:start="129:19" pos:end="129:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="129:23" pos:end="129:36">/* reserved */</comment>

    <expr_stmt pos:start="131:5" pos:end="131:21"><expr pos:start="131:5" pos:end="131:20"><call pos:start="131:5" pos:end="131:20"><name pos:start="131:5" pos:end="131:13">avio_wl32</name><argument_list pos:start="131:14" pos:end="131:20">(<argument pos:start="131:15" pos:end="131:16"><expr pos:start="131:15" pos:end="131:16"><name pos:start="131:15" pos:end="131:16">pb</name></expr></argument>, <argument pos:start="131:19" pos:end="131:19"><expr pos:start="131:19" pos:end="131:19"><literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="131:23" pos:end="131:36">/* reserved */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:21"><expr pos:start="133:5" pos:end="133:20"><call pos:start="133:5" pos:end="133:20"><name pos:start="133:5" pos:end="133:13">avio_wl32</name><argument_list pos:start="133:14" pos:end="133:20">(<argument pos:start="133:15" pos:end="133:16"><expr pos:start="133:15" pos:end="133:16"><name pos:start="133:15" pos:end="133:16">pb</name></expr></argument>, <argument pos:start="133:19" pos:end="133:19"><expr pos:start="133:19" pos:end="133:19"><literal type="number" pos:start="133:19" pos:end="133:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="133:23" pos:end="133:36">/* reserved */</comment>



    <comment type="block" pos:start="137:5" pos:end="137:21">/* stream list */</comment>

    <for pos:start="139:5" pos:end="443:5">for <control pos:start="139:9" pos:end="139:27">(<init pos:start="139:10" pos:end="139:15"><expr pos:start="139:10" pos:end="139:14"><name pos:start="139:10" pos:end="139:10">i</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</init> <condition pos:start="139:17" pos:end="139:22"><expr pos:start="139:17" pos:end="139:21"><name pos:start="139:17" pos:end="139:17">i</name> <operator pos:start="139:19" pos:end="139:19">&lt;</operator> <name pos:start="139:21" pos:end="139:21">n</name></expr>;</condition> <incr pos:start="139:24" pos:end="139:26"><expr pos:start="139:24" pos:end="139:26"><name pos:start="139:24" pos:end="139:24">i</name><operator pos:start="139:25" pos:end="139:26">++</operator></expr></incr>)</control> <block pos:start="139:29" pos:end="443:5">{<block_content pos:start="141:9" pos:end="441:30">

        <decl_stmt pos:start="141:9" pos:end="141:52"><decl pos:start="141:9" pos:end="141:51"><type pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:17">AVIStream</name> <modifier pos:start="141:19" pos:end="141:19">*</modifier></type><name pos:start="141:20" pos:end="141:24">avist</name> <init pos:start="141:26" pos:end="141:51">= <expr pos:start="141:28" pos:end="141:51"><name pos:start="141:28" pos:end="141:40"><name pos:start="141:28" pos:end="141:28">s</name><operator pos:start="141:29" pos:end="141:30">-&gt;</operator><name pos:start="141:31" pos:end="141:37">streams</name><index pos:start="141:38" pos:end="141:40">[<expr pos:start="141:39" pos:end="141:39"><name pos:start="141:39" pos:end="141:39">i</name></expr>]</index></name><operator pos:start="141:41" pos:end="141:42">-&gt;</operator><name pos:start="141:43" pos:end="141:51">priv_data</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:41"><expr pos:start="143:9" pos:end="143:40"><name pos:start="143:9" pos:end="143:13">list2</name> <operator pos:start="143:15" pos:end="143:15">=</operator> <call pos:start="143:17" pos:end="143:40"><name pos:start="143:17" pos:end="143:28">ff_start_tag</name><argument_list pos:start="143:29" pos:end="143:40">(<argument pos:start="143:30" pos:end="143:31"><expr pos:start="143:30" pos:end="143:31"><name pos:start="143:30" pos:end="143:31">pb</name></expr></argument>, <argument pos:start="143:34" pos:end="143:39"><expr pos:start="143:34" pos:end="143:39"><literal type="string" pos:start="143:34" pos:end="143:39">"LIST"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:33"><expr pos:start="145:9" pos:end="145:32"><call pos:start="145:9" pos:end="145:32"><name pos:start="145:9" pos:end="145:20">ffio_wfourcc</name><argument_list pos:start="145:21" pos:end="145:32">(<argument pos:start="145:22" pos:end="145:23"><expr pos:start="145:22" pos:end="145:23"><name pos:start="145:22" pos:end="145:23">pb</name></expr></argument>, <argument pos:start="145:26" pos:end="145:31"><expr pos:start="145:26" pos:end="145:31"><literal type="string" pos:start="145:26" pos:end="145:31">"strl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:38"><expr pos:start="149:9" pos:end="149:37"><name pos:start="149:9" pos:end="149:14">stream</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <name pos:start="149:18" pos:end="149:30"><name pos:start="149:18" pos:end="149:18">s</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:27">streams</name><index pos:start="149:28" pos:end="149:30">[<expr pos:start="149:29" pos:end="149:29"><name pos:start="149:29" pos:end="149:29">i</name></expr>]</index></name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:37">codec</name></expr>;</expr_stmt>



        <comment type="block" pos:start="153:9" pos:end="153:35">/* stream generic header */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:40"><expr pos:start="155:9" pos:end="155:39"><name pos:start="155:9" pos:end="155:12">strh</name> <operator pos:start="155:14" pos:end="155:14">=</operator> <call pos:start="155:16" pos:end="155:39"><name pos:start="155:16" pos:end="155:27">ff_start_tag</name><argument_list pos:start="155:28" pos:end="155:39">(<argument pos:start="155:29" pos:end="155:30"><expr pos:start="155:29" pos:end="155:30"><name pos:start="155:29" pos:end="155:30">pb</name></expr></argument>, <argument pos:start="155:33" pos:end="155:38"><expr pos:start="155:33" pos:end="155:38"><literal type="string" pos:start="155:33" pos:end="155:38">"strh"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="157:9" pos:end="199:9">switch <condition pos:start="157:16" pos:end="157:35">(<expr pos:start="157:17" pos:end="157:34"><name pos:start="157:17" pos:end="157:34"><name pos:start="157:17" pos:end="157:22">stream</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:34">codec_type</name></name></expr>)</condition> <block pos:start="157:37" pos:end="199:9">{<block_content pos:start="159:9" pos:end="197:18">

        <case pos:start="159:9" pos:end="159:35">case <expr pos:start="159:14" pos:end="159:34"><name pos:start="159:14" pos:end="159:34">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

            <comment type="line" pos:start="161:13" pos:end="161:71">// XSUB subtitles behave like video tracks, other subtitles</comment>

            <comment type="line" pos:start="163:13" pos:end="163:39">// are not (yet) supported.</comment>

            <if_stmt pos:start="165:13" pos:end="173:13"><if pos:start="165:13" pos:end="173:13">if <condition pos:start="165:16" pos:end="165:53">(<expr pos:start="165:17" pos:end="165:52"><name pos:start="165:17" pos:end="165:32"><name pos:start="165:17" pos:end="165:22">stream</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:32">codec_id</name></name> <operator pos:start="165:34" pos:end="165:35">!=</operator> <name pos:start="165:37" pos:end="165:52">AV_CODEC_ID_XSUB</name></expr>)</condition> <block pos:start="165:55" pos:end="173:13">{<block_content pos:start="167:17" pos:end="171:44">

                <expr_stmt pos:start="167:17" pos:end="169:102"><expr pos:start="167:17" pos:end="169:101"><call pos:start="167:17" pos:end="169:101"><name pos:start="167:17" pos:end="167:22">av_log</name><argument_list pos:start="167:23" pos:end="169:101">(<argument pos:start="167:24" pos:end="167:24"><expr pos:start="167:24" pos:end="167:24"><name pos:start="167:24" pos:end="167:24">s</name></expr></argument>, <argument pos:start="167:27" pos:end="167:38"><expr pos:start="167:27" pos:end="167:38"><name pos:start="167:27" pos:end="167:38">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="169:24" pos:end="169:100"><expr pos:start="169:24" pos:end="169:100"><literal type="string" pos:start="169:24" pos:end="169:100">"Subtitle streams other than DivX XSUB are not supported by the AVI muxer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="171:17" pos:end="171:44">return <expr pos:start="171:24" pos:end="171:43"><name pos:start="171:24" pos:end="171:43">AVERROR_PATCHWELCOME</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        <case pos:start="175:9" pos:end="175:32">case <expr pos:start="175:14" pos:end="175:31"><name pos:start="175:14" pos:end="175:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:37"><expr pos:start="177:13" pos:end="177:36"><call pos:start="177:13" pos:end="177:36"><name pos:start="177:13" pos:end="177:24">ffio_wfourcc</name><argument_list pos:start="177:25" pos:end="177:36">(<argument pos:start="177:26" pos:end="177:27"><expr pos:start="177:26" pos:end="177:27"><name pos:start="177:26" pos:end="177:27">pb</name></expr></argument>, <argument pos:start="177:30" pos:end="177:35"><expr pos:start="177:30" pos:end="177:35"><literal type="string" pos:start="177:30" pos:end="177:35">"vids"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <case pos:start="181:9" pos:end="181:32">case <expr pos:start="181:14" pos:end="181:31"><name pos:start="181:14" pos:end="181:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:37"><expr pos:start="183:13" pos:end="183:36"><call pos:start="183:13" pos:end="183:36"><name pos:start="183:13" pos:end="183:24">ffio_wfourcc</name><argument_list pos:start="183:25" pos:end="183:36">(<argument pos:start="183:26" pos:end="183:27"><expr pos:start="183:26" pos:end="183:27"><name pos:start="183:26" pos:end="183:27">pb</name></expr></argument>, <argument pos:start="183:30" pos:end="183:35"><expr pos:start="183:30" pos:end="183:35"><literal type="string" pos:start="183:30" pos:end="183:35">"auds"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="185:13" pos:end="185:18">break;</break>

<comment type="line" pos:start="187:1" pos:end="187:31">//      case AVMEDIA_TYPE_TEXT:</comment>

<comment type="line" pos:start="189:1" pos:end="189:37">//          ffio_wfourcc(pb, "txts");</comment>

<comment type="line" pos:start="191:1" pos:end="191:18">//          break;</comment>

        <case pos:start="193:9" pos:end="193:31">case <expr pos:start="193:14" pos:end="193:30"><name pos:start="193:14" pos:end="193:30">AVMEDIA_TYPE_DATA</name></expr>:</case>

            <expr_stmt pos:start="195:13" pos:end="195:37"><expr pos:start="195:13" pos:end="195:36"><call pos:start="195:13" pos:end="195:36"><name pos:start="195:13" pos:end="195:24">ffio_wfourcc</name><argument_list pos:start="195:25" pos:end="195:36">(<argument pos:start="195:26" pos:end="195:27"><expr pos:start="195:26" pos:end="195:27"><name pos:start="195:26" pos:end="195:27">pb</name></expr></argument>, <argument pos:start="195:30" pos:end="195:35"><expr pos:start="195:30" pos:end="195:35"><literal type="string" pos:start="195:30" pos:end="195:35">"dats"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="197:13" pos:end="197:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="201:9" pos:end="209:29"><if pos:start="201:9" pos:end="205:45">if <condition pos:start="201:12" pos:end="203:49">(<expr pos:start="201:13" pos:end="203:48"><name pos:start="201:13" pos:end="201:30"><name pos:start="201:13" pos:end="201:18">stream</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:30">codec_type</name></name> <operator pos:start="201:32" pos:end="201:33">==</operator> <name pos:start="201:35" pos:end="201:52">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="201:54" pos:end="201:55">||</operator>

            <name pos:start="203:13" pos:end="203:28"><name pos:start="203:13" pos:end="203:18">stream</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:28">codec_id</name></name> <operator pos:start="203:30" pos:end="203:31">==</operator> <name pos:start="203:33" pos:end="203:48">AV_CODEC_ID_XSUB</name></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:45"><block_content pos:start="205:13" pos:end="205:45">

            <expr_stmt pos:start="205:13" pos:end="205:45"><expr pos:start="205:13" pos:end="205:44"><call pos:start="205:13" pos:end="205:44"><name pos:start="205:13" pos:end="205:21">avio_wl32</name><argument_list pos:start="205:22" pos:end="205:44">(<argument pos:start="205:23" pos:end="205:24"><expr pos:start="205:23" pos:end="205:24"><name pos:start="205:23" pos:end="205:24">pb</name></expr></argument>, <argument pos:start="205:27" pos:end="205:43"><expr pos:start="205:27" pos:end="205:43"><name pos:start="205:27" pos:end="205:43"><name pos:start="205:27" pos:end="205:32">stream</name><operator pos:start="205:33" pos:end="205:34">-&gt;</operator><name pos:start="205:35" pos:end="205:43">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="207:9" pos:end="209:29">else<block type="pseudo" pos:start="209:13" pos:end="209:29"><block_content pos:start="209:13" pos:end="209:29">

            <expr_stmt pos:start="209:13" pos:end="209:29"><expr pos:start="209:13" pos:end="209:28"><call pos:start="209:13" pos:end="209:28"><name pos:start="209:13" pos:end="209:21">avio_wl32</name><argument_list pos:start="209:22" pos:end="209:28">(<argument pos:start="209:23" pos:end="209:24"><expr pos:start="209:23" pos:end="209:24"><name pos:start="209:23" pos:end="209:24">pb</name></expr></argument>, <argument pos:start="209:27" pos:end="209:27"><expr pos:start="209:27" pos:end="209:27"><literal type="number" pos:start="209:27" pos:end="209:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:25"><expr pos:start="211:9" pos:end="211:24"><call pos:start="211:9" pos:end="211:24"><name pos:start="211:9" pos:end="211:17">avio_wl32</name><argument_list pos:start="211:18" pos:end="211:24">(<argument pos:start="211:19" pos:end="211:20"><expr pos:start="211:19" pos:end="211:20"><name pos:start="211:19" pos:end="211:20">pb</name></expr></argument>, <argument pos:start="211:23" pos:end="211:23"><expr pos:start="211:23" pos:end="211:23"><literal type="number" pos:start="211:23" pos:end="211:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="211:27" pos:end="211:37">/* flags */</comment>

        <expr_stmt pos:start="213:9" pos:end="213:25"><expr pos:start="213:9" pos:end="213:24"><call pos:start="213:9" pos:end="213:24"><name pos:start="213:9" pos:end="213:17">avio_wl16</name><argument_list pos:start="213:18" pos:end="213:24">(<argument pos:start="213:19" pos:end="213:20"><expr pos:start="213:19" pos:end="213:20"><name pos:start="213:19" pos:end="213:20">pb</name></expr></argument>, <argument pos:start="213:23" pos:end="213:23"><expr pos:start="213:23" pos:end="213:23"><literal type="number" pos:start="213:23" pos:end="213:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="213:27" pos:end="213:40">/* priority */</comment>

        <expr_stmt pos:start="215:9" pos:end="215:25"><expr pos:start="215:9" pos:end="215:24"><call pos:start="215:9" pos:end="215:24"><name pos:start="215:9" pos:end="215:17">avio_wl16</name><argument_list pos:start="215:18" pos:end="215:24">(<argument pos:start="215:19" pos:end="215:20"><expr pos:start="215:19" pos:end="215:20"><name pos:start="215:19" pos:end="215:20">pb</name></expr></argument>, <argument pos:start="215:23" pos:end="215:23"><expr pos:start="215:23" pos:end="215:23"><literal type="number" pos:start="215:23" pos:end="215:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="215:27" pos:end="215:40">/* language */</comment>

        <expr_stmt pos:start="217:9" pos:end="217:25"><expr pos:start="217:9" pos:end="217:24"><call pos:start="217:9" pos:end="217:24"><name pos:start="217:9" pos:end="217:17">avio_wl32</name><argument_list pos:start="217:18" pos:end="217:24">(<argument pos:start="217:19" pos:end="217:20"><expr pos:start="217:19" pos:end="217:20"><name pos:start="217:19" pos:end="217:20">pb</name></expr></argument>, <argument pos:start="217:23" pos:end="217:23"><expr pos:start="217:23" pos:end="217:23"><literal type="number" pos:start="217:23" pos:end="217:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="217:27" pos:end="217:45">/* initial frame */</comment>



        <expr_stmt pos:start="221:9" pos:end="221:77"><expr pos:start="221:9" pos:end="221:76"><call pos:start="221:9" pos:end="221:76"><name pos:start="221:9" pos:end="221:32">ff_parse_specific_params</name><argument_list pos:start="221:33" pos:end="221:76">(<argument pos:start="221:34" pos:end="221:39"><expr pos:start="221:34" pos:end="221:39"><name pos:start="221:34" pos:end="221:39">stream</name></expr></argument>, <argument pos:start="221:42" pos:end="221:53"><expr pos:start="221:42" pos:end="221:53"><operator pos:start="221:42" pos:end="221:42">&amp;</operator><name pos:start="221:43" pos:end="221:53">au_byterate</name></expr></argument>, <argument pos:start="221:56" pos:end="221:64"><expr pos:start="221:56" pos:end="221:64"><operator pos:start="221:56" pos:end="221:56">&amp;</operator><name pos:start="221:57" pos:end="221:64">au_ssize</name></expr></argument>, <argument pos:start="221:67" pos:end="221:75"><expr pos:start="221:67" pos:end="221:75"><operator pos:start="221:67" pos:end="221:67">&amp;</operator><name pos:start="221:68" pos:end="221:75">au_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:32"><expr pos:start="225:9" pos:end="225:31"><call pos:start="225:9" pos:end="225:31"><name pos:start="225:9" pos:end="225:17">avio_wl32</name><argument_list pos:start="225:18" pos:end="225:31">(<argument pos:start="225:19" pos:end="225:20"><expr pos:start="225:19" pos:end="225:20"><name pos:start="225:19" pos:end="225:20">pb</name></expr></argument>, <argument pos:start="225:23" pos:end="225:30"><expr pos:start="225:23" pos:end="225:30"><name pos:start="225:23" pos:end="225:30">au_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="225:34" pos:end="225:44">/* scale */</comment>

        <expr_stmt pos:start="227:9" pos:end="227:35"><expr pos:start="227:9" pos:end="227:34"><call pos:start="227:9" pos:end="227:34"><name pos:start="227:9" pos:end="227:17">avio_wl32</name><argument_list pos:start="227:18" pos:end="227:34">(<argument pos:start="227:19" pos:end="227:20"><expr pos:start="227:19" pos:end="227:20"><name pos:start="227:19" pos:end="227:20">pb</name></expr></argument>, <argument pos:start="227:23" pos:end="227:33"><expr pos:start="227:23" pos:end="227:33"><name pos:start="227:23" pos:end="227:33">au_byterate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="227:37" pos:end="227:46">/* rate */</comment>

        <expr_stmt pos:start="229:9" pos:end="229:70"><expr pos:start="229:9" pos:end="229:69"><call pos:start="229:9" pos:end="229:69"><name pos:start="229:9" pos:end="229:27">avpriv_set_pts_info</name><argument_list pos:start="229:28" pos:end="229:69">(<argument pos:start="229:29" pos:end="229:41"><expr pos:start="229:29" pos:end="229:41"><name pos:start="229:29" pos:end="229:41"><name pos:start="229:29" pos:end="229:29">s</name><operator pos:start="229:30" pos:end="229:31">-&gt;</operator><name pos:start="229:32" pos:end="229:38">streams</name><index pos:start="229:39" pos:end="229:41">[<expr pos:start="229:40" pos:end="229:40"><name pos:start="229:40" pos:end="229:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="229:44" pos:end="229:45"><expr pos:start="229:44" pos:end="229:45"><literal type="number" pos:start="229:44" pos:end="229:45">64</literal></expr></argument>, <argument pos:start="229:48" pos:end="229:55"><expr pos:start="229:48" pos:end="229:55"><name pos:start="229:48" pos:end="229:55">au_scale</name></expr></argument>, <argument pos:start="229:58" pos:end="229:68"><expr pos:start="229:58" pos:end="229:68"><name pos:start="229:58" pos:end="229:68">au_byterate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:25"><expr pos:start="233:9" pos:end="233:24"><call pos:start="233:9" pos:end="233:24"><name pos:start="233:9" pos:end="233:17">avio_wl32</name><argument_list pos:start="233:18" pos:end="233:24">(<argument pos:start="233:19" pos:end="233:20"><expr pos:start="233:19" pos:end="233:20"><name pos:start="233:19" pos:end="233:20">pb</name></expr></argument>, <argument pos:start="233:23" pos:end="233:23"><expr pos:start="233:23" pos:end="233:23"><literal type="number" pos:start="233:23" pos:end="233:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="233:27" pos:end="233:37">/* start */</comment>

        <comment type="block" pos:start="235:9" pos:end="235:48">/* remember this offset to fill later */</comment>

        <expr_stmt pos:start="237:9" pos:end="237:47"><expr pos:start="237:9" pos:end="237:46"><name pos:start="237:9" pos:end="237:30"><name pos:start="237:9" pos:end="237:13">avist</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:30">frames_hdr_strm</name></name> <operator pos:start="237:32" pos:end="237:32">=</operator> <call pos:start="237:34" pos:end="237:46"><name pos:start="237:34" pos:end="237:42">avio_tell</name><argument_list pos:start="237:43" pos:end="237:46">(<argument pos:start="237:44" pos:end="237:45"><expr pos:start="237:44" pos:end="237:45"><name pos:start="237:44" pos:end="237:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="247:29"><if pos:start="239:9" pos:end="243:45">if <condition pos:start="239:12" pos:end="239:26">(<expr pos:start="239:13" pos:end="239:25"><operator pos:start="239:13" pos:end="239:13">!</operator><name pos:start="239:14" pos:end="239:25"><name pos:start="239:14" pos:end="239:15">pb</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:25">seekable</name></name></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="243:45"><block_content pos:start="243:13" pos:end="243:45">

            <comment type="block" pos:start="241:13" pos:end="241:58">/* FIXME: this may be broken, but who cares */</comment>

            <expr_stmt pos:start="243:13" pos:end="243:45"><expr pos:start="243:13" pos:end="243:44"><call pos:start="243:13" pos:end="243:44"><name pos:start="243:13" pos:end="243:21">avio_wl32</name><argument_list pos:start="243:22" pos:end="243:44">(<argument pos:start="243:23" pos:end="243:24"><expr pos:start="243:23" pos:end="243:24"><name pos:start="243:23" pos:end="243:24">pb</name></expr></argument>, <argument pos:start="243:27" pos:end="243:43"><expr pos:start="243:27" pos:end="243:43"><name pos:start="243:27" pos:end="243:43">AVI_MAX_RIFF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="245:9" pos:end="247:29">else<block type="pseudo" pos:start="247:13" pos:end="247:29"><block_content pos:start="247:13" pos:end="247:29">

            <expr_stmt pos:start="247:13" pos:end="247:29"><expr pos:start="247:13" pos:end="247:28"><call pos:start="247:13" pos:end="247:28"><name pos:start="247:13" pos:end="247:21">avio_wl32</name><argument_list pos:start="247:22" pos:end="247:28">(<argument pos:start="247:23" pos:end="247:24"><expr pos:start="247:23" pos:end="247:24"><name pos:start="247:23" pos:end="247:24">pb</name></expr></argument>, <argument pos:start="247:27" pos:end="247:27"><expr pos:start="247:27" pos:end="247:27"><literal type="number" pos:start="247:27" pos:end="247:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>  <comment type="block" pos:start="247:32" pos:end="247:62">/* length, XXX: filled later */</comment>



        <comment type="block" pos:start="251:9" pos:end="251:35">/* suggested buffer size */</comment> <comment type="line" pos:start="251:37" pos:end="251:75">//FIXME set at the end to largest chunk</comment>

        <if_stmt pos:start="253:9" pos:end="263:29"><if pos:start="253:9" pos:end="255:39">if <condition pos:start="253:12" pos:end="253:53">(<expr pos:start="253:13" pos:end="253:52"><name pos:start="253:13" pos:end="253:30"><name pos:start="253:13" pos:end="253:18">stream</name><operator pos:start="253:19" pos:end="253:20">-&gt;</operator><name pos:start="253:21" pos:end="253:30">codec_type</name></name> <operator pos:start="253:32" pos:end="253:33">==</operator> <name pos:start="253:35" pos:end="253:52">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:39"><block_content pos:start="255:13" pos:end="255:39">

            <expr_stmt pos:start="255:13" pos:end="255:39"><expr pos:start="255:13" pos:end="255:38"><call pos:start="255:13" pos:end="255:38"><name pos:start="255:13" pos:end="255:21">avio_wl32</name><argument_list pos:start="255:22" pos:end="255:38">(<argument pos:start="255:23" pos:end="255:24"><expr pos:start="255:23" pos:end="255:24"><name pos:start="255:23" pos:end="255:24">pb</name></expr></argument>, <argument pos:start="255:27" pos:end="255:37"><expr pos:start="255:27" pos:end="255:37"><literal type="number" pos:start="255:27" pos:end="255:30">1024</literal> <operator pos:start="255:32" pos:end="255:32">*</operator> <literal type="number" pos:start="255:34" pos:end="255:37">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="257:9" pos:end="259:37">else if <condition pos:start="257:17" pos:end="257:58">(<expr pos:start="257:18" pos:end="257:57"><name pos:start="257:18" pos:end="257:35"><name pos:start="257:18" pos:end="257:23">stream</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:35">codec_type</name></name> <operator pos:start="257:37" pos:end="257:38">==</operator> <name pos:start="257:40" pos:end="257:57">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="259:13" pos:end="259:37"><block_content pos:start="259:13" pos:end="259:37">

            <expr_stmt pos:start="259:13" pos:end="259:37"><expr pos:start="259:13" pos:end="259:36"><call pos:start="259:13" pos:end="259:36"><name pos:start="259:13" pos:end="259:21">avio_wl32</name><argument_list pos:start="259:22" pos:end="259:36">(<argument pos:start="259:23" pos:end="259:24"><expr pos:start="259:23" pos:end="259:24"><name pos:start="259:23" pos:end="259:24">pb</name></expr></argument>, <argument pos:start="259:27" pos:end="259:35"><expr pos:start="259:27" pos:end="259:35"><literal type="number" pos:start="259:27" pos:end="259:28">12</literal> <operator pos:start="259:30" pos:end="259:30">*</operator> <literal type="number" pos:start="259:32" pos:end="259:35">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="261:9" pos:end="263:29">else<block type="pseudo" pos:start="263:13" pos:end="263:29"><block_content pos:start="263:13" pos:end="263:29">

            <expr_stmt pos:start="263:13" pos:end="263:29"><expr pos:start="263:13" pos:end="263:28"><call pos:start="263:13" pos:end="263:28"><name pos:start="263:13" pos:end="263:21">avio_wl32</name><argument_list pos:start="263:22" pos:end="263:28">(<argument pos:start="263:23" pos:end="263:24"><expr pos:start="263:23" pos:end="263:24"><name pos:start="263:23" pos:end="263:24">pb</name></expr></argument>, <argument pos:start="263:27" pos:end="263:27"><expr pos:start="263:27" pos:end="263:27"><literal type="number" pos:start="263:27" pos:end="263:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:26"><expr pos:start="265:9" pos:end="265:25"><call pos:start="265:9" pos:end="265:25"><name pos:start="265:9" pos:end="265:17">avio_wl32</name><argument_list pos:start="265:18" pos:end="265:25">(<argument pos:start="265:19" pos:end="265:20"><expr pos:start="265:19" pos:end="265:20"><name pos:start="265:19" pos:end="265:20">pb</name></expr></argument>, <argument pos:start="265:23" pos:end="265:24"><expr pos:start="265:23" pos:end="265:24"><operator pos:start="265:23" pos:end="265:23">-</operator><literal type="number" pos:start="265:24" pos:end="265:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="265:28" pos:end="265:40">/* quality */</comment>

        <expr_stmt pos:start="267:9" pos:end="267:32"><expr pos:start="267:9" pos:end="267:31"><call pos:start="267:9" pos:end="267:31"><name pos:start="267:9" pos:end="267:17">avio_wl32</name><argument_list pos:start="267:18" pos:end="267:31">(<argument pos:start="267:19" pos:end="267:20"><expr pos:start="267:19" pos:end="267:20"><name pos:start="267:19" pos:end="267:20">pb</name></expr></argument>, <argument pos:start="267:23" pos:end="267:30"><expr pos:start="267:23" pos:end="267:30"><name pos:start="267:23" pos:end="267:30">au_ssize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="267:34" pos:end="267:50">/* sample size */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:25"><expr pos:start="269:9" pos:end="269:24"><call pos:start="269:9" pos:end="269:24"><name pos:start="269:9" pos:end="269:17">avio_wl32</name><argument_list pos:start="269:18" pos:end="269:24">(<argument pos:start="269:19" pos:end="269:20"><expr pos:start="269:19" pos:end="269:20"><name pos:start="269:19" pos:end="269:20">pb</name></expr></argument>, <argument pos:start="269:23" pos:end="269:23"><expr pos:start="269:23" pos:end="269:23"><literal type="number" pos:start="269:23" pos:end="269:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:37"><expr pos:start="271:9" pos:end="271:36"><call pos:start="271:9" pos:end="271:36"><name pos:start="271:9" pos:end="271:17">avio_wl16</name><argument_list pos:start="271:18" pos:end="271:36">(<argument pos:start="271:19" pos:end="271:20"><expr pos:start="271:19" pos:end="271:20"><name pos:start="271:19" pos:end="271:20">pb</name></expr></argument>, <argument pos:start="271:23" pos:end="271:35"><expr pos:start="271:23" pos:end="271:35"><name pos:start="271:23" pos:end="271:35"><name pos:start="271:23" pos:end="271:28">stream</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:35">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:38"><expr pos:start="273:9" pos:end="273:37"><call pos:start="273:9" pos:end="273:37"><name pos:start="273:9" pos:end="273:17">avio_wl16</name><argument_list pos:start="273:18" pos:end="273:37">(<argument pos:start="273:19" pos:end="273:20"><expr pos:start="273:19" pos:end="273:20"><name pos:start="273:19" pos:end="273:20">pb</name></expr></argument>, <argument pos:start="273:23" pos:end="273:36"><expr pos:start="273:23" pos:end="273:36"><name pos:start="273:23" pos:end="273:36"><name pos:start="273:23" pos:end="273:28">stream</name><operator pos:start="273:29" pos:end="273:30">-&gt;</operator><name pos:start="273:31" pos:end="273:36">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:29"><expr pos:start="275:9" pos:end="275:28"><call pos:start="275:9" pos:end="275:28"><name pos:start="275:9" pos:end="275:18">ff_end_tag</name><argument_list pos:start="275:19" pos:end="275:28">(<argument pos:start="275:20" pos:end="275:21"><expr pos:start="275:20" pos:end="275:21"><name pos:start="275:20" pos:end="275:21">pb</name></expr></argument>, <argument pos:start="275:24" pos:end="275:27"><expr pos:start="275:24" pos:end="275:27"><name pos:start="275:24" pos:end="275:27">strh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="279:9" pos:end="325:9"><if pos:start="279:9" pos:end="325:9">if <condition pos:start="279:12" pos:end="279:52">(<expr pos:start="279:13" pos:end="279:51"><name pos:start="279:13" pos:end="279:30"><name pos:start="279:13" pos:end="279:18">stream</name><operator pos:start="279:19" pos:end="279:20">-&gt;</operator><name pos:start="279:21" pos:end="279:30">codec_type</name></name> <operator pos:start="279:32" pos:end="279:33">!=</operator> <name pos:start="279:35" pos:end="279:51">AVMEDIA_TYPE_DATA</name></expr>)</condition> <block pos:start="279:54" pos:end="325:9">{<block_content pos:start="281:13" pos:end="323:13">

            <expr_stmt pos:start="281:13" pos:end="281:44"><expr pos:start="281:13" pos:end="281:43"><name pos:start="281:13" pos:end="281:16">strf</name> <operator pos:start="281:18" pos:end="281:18">=</operator> <call pos:start="281:20" pos:end="281:43"><name pos:start="281:20" pos:end="281:31">ff_start_tag</name><argument_list pos:start="281:32" pos:end="281:43">(<argument pos:start="281:33" pos:end="281:34"><expr pos:start="281:33" pos:end="281:34"><name pos:start="281:33" pos:end="281:34">pb</name></expr></argument>, <argument pos:start="281:37" pos:end="281:42"><expr pos:start="281:37" pos:end="281:42"><literal type="string" pos:start="281:37" pos:end="281:42">"strf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="283:13" pos:end="313:13">switch <condition pos:start="283:20" pos:end="283:39">(<expr pos:start="283:21" pos:end="283:38"><name pos:start="283:21" pos:end="283:38"><name pos:start="283:21" pos:end="283:26">stream</name><operator pos:start="283:27" pos:end="283:28">-&gt;</operator><name pos:start="283:29" pos:end="283:38">codec_type</name></name></expr>)</condition> <block pos:start="283:41" pos:end="313:13">{<block_content pos:start="285:13" pos:end="311:26">

            <case pos:start="285:13" pos:end="285:39">case <expr pos:start="285:18" pos:end="285:38"><name pos:start="285:18" pos:end="285:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <comment type="block" pos:start="287:17" pos:end="289:46">/* XSUB subtitles behave like video tracks, other subtitles

                 * are not (yet) supported. */</comment>

                <if_stmt pos:start="291:17" pos:end="293:26"><if pos:start="291:17" pos:end="293:26">if <condition pos:start="291:20" pos:end="291:57">(<expr pos:start="291:21" pos:end="291:56"><name pos:start="291:21" pos:end="291:36"><name pos:start="291:21" pos:end="291:26">stream</name><operator pos:start="291:27" pos:end="291:28">-&gt;</operator><name pos:start="291:29" pos:end="291:36">codec_id</name></name> <operator pos:start="291:38" pos:end="291:39">!=</operator> <name pos:start="291:41" pos:end="291:56">AV_CODEC_ID_XSUB</name></expr>)</condition><block type="pseudo" pos:start="293:21" pos:end="293:26"><block_content pos:start="293:21" pos:end="293:26">

                    <break pos:start="293:21" pos:end="293:26">break;</break></block_content></block></if></if_stmt>

            <case pos:start="295:13" pos:end="295:36">case <expr pos:start="295:18" pos:end="295:35"><name pos:start="295:18" pos:end="295:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="297:17" pos:end="297:68"><expr pos:start="297:17" pos:end="297:67"><call pos:start="297:17" pos:end="297:67"><name pos:start="297:17" pos:end="297:33">ff_put_bmp_header</name><argument_list pos:start="297:34" pos:end="297:67">(<argument pos:start="297:35" pos:end="297:36"><expr pos:start="297:35" pos:end="297:36"><name pos:start="297:35" pos:end="297:36">pb</name></expr></argument>, <argument pos:start="297:39" pos:end="297:44"><expr pos:start="297:39" pos:end="297:44"><name pos:start="297:39" pos:end="297:44">stream</name></expr></argument>, <argument pos:start="297:47" pos:end="297:63"><expr pos:start="297:47" pos:end="297:63"><name pos:start="297:47" pos:end="297:63">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="297:66" pos:end="297:66"><expr pos:start="297:66" pos:end="297:66"><literal type="number" pos:start="297:66" pos:end="297:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="299:17" pos:end="299:22">break;</break>

            <case pos:start="301:13" pos:end="301:36">case <expr pos:start="301:18" pos:end="301:35"><name pos:start="301:18" pos:end="301:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="303:17" pos:end="305:30"><if pos:start="303:17" pos:end="305:30">if <condition pos:start="303:20" pos:end="303:54">(<expr pos:start="303:21" pos:end="303:53"><call pos:start="303:21" pos:end="303:49"><name pos:start="303:21" pos:end="303:37">ff_put_wav_header</name><argument_list pos:start="303:38" pos:end="303:49">(<argument pos:start="303:39" pos:end="303:40"><expr pos:start="303:39" pos:end="303:40"><name pos:start="303:39" pos:end="303:40">pb</name></expr></argument>, <argument pos:start="303:43" pos:end="303:48"><expr pos:start="303:43" pos:end="303:48"><name pos:start="303:43" pos:end="303:48">stream</name></expr></argument>)</argument_list></call> <operator pos:start="303:51" pos:end="303:51">&lt;</operator> <literal type="number" pos:start="303:53" pos:end="303:53">0</literal></expr>)</condition><block type="pseudo" pos:start="305:21" pos:end="305:30"><block_content pos:start="305:21" pos:end="305:30">

                    <return pos:start="305:21" pos:end="305:30">return <expr pos:start="305:28" pos:end="305:29"><operator pos:start="305:28" pos:end="305:28">-</operator><literal type="number" pos:start="305:29" pos:end="305:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="307:17" pos:end="307:22">break;</break>

            <default pos:start="309:13" pos:end="309:20">default:</default>

                <return pos:start="311:17" pos:end="311:26">return <expr pos:start="311:24" pos:end="311:25"><operator pos:start="311:24" pos:end="311:24">-</operator><literal type="number" pos:start="311:25" pos:end="311:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

            <expr_stmt pos:start="315:13" pos:end="315:33"><expr pos:start="315:13" pos:end="315:32"><call pos:start="315:13" pos:end="315:32"><name pos:start="315:13" pos:end="315:22">ff_end_tag</name><argument_list pos:start="315:23" pos:end="315:32">(<argument pos:start="315:24" pos:end="315:25"><expr pos:start="315:24" pos:end="315:25"><name pos:start="315:24" pos:end="315:25">pb</name></expr></argument>, <argument pos:start="315:28" pos:end="315:31"><expr pos:start="315:28" pos:end="315:31"><name pos:start="315:28" pos:end="315:31">strf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="317:13" pos:end="323:13"><if pos:start="317:13" pos:end="323:13">if <condition pos:start="317:16" pos:end="317:77">(<expr pos:start="317:17" pos:end="317:76"><operator pos:start="317:17" pos:end="317:17">(</operator><name pos:start="317:18" pos:end="317:18">t</name> <operator pos:start="317:20" pos:end="317:20">=</operator> <call pos:start="317:22" pos:end="317:75"><name pos:start="317:22" pos:end="317:32">av_dict_get</name><argument_list pos:start="317:33" pos:end="317:75">(<argument pos:start="317:34" pos:end="317:56"><expr pos:start="317:34" pos:end="317:56"><name pos:start="317:34" pos:end="317:46"><name pos:start="317:34" pos:end="317:34">s</name><operator pos:start="317:35" pos:end="317:36">-&gt;</operator><name pos:start="317:37" pos:end="317:43">streams</name><index pos:start="317:44" pos:end="317:46">[<expr pos:start="317:45" pos:end="317:45"><name pos:start="317:45" pos:end="317:45">i</name></expr>]</index></name><operator pos:start="317:47" pos:end="317:48">-&gt;</operator><name pos:start="317:49" pos:end="317:56">metadata</name></expr></argument>, <argument pos:start="317:59" pos:end="317:65"><expr pos:start="317:59" pos:end="317:65"><literal type="string" pos:start="317:59" pos:end="317:65">"title"</literal></expr></argument>, <argument pos:start="317:68" pos:end="317:71"><expr pos:start="317:68" pos:end="317:71"><name pos:start="317:68" pos:end="317:71">NULL</name></expr></argument>, <argument pos:start="317:74" pos:end="317:74"><expr pos:start="317:74" pos:end="317:74"><literal type="number" pos:start="317:74" pos:end="317:74">0</literal></expr></argument>)</argument_list></call><operator pos:start="317:76" pos:end="317:76">)</operator></expr>)</condition> <block pos:start="317:79" pos:end="323:13">{<block_content pos:start="319:17" pos:end="321:25">

                <expr_stmt pos:start="319:17" pos:end="319:64"><expr pos:start="319:17" pos:end="319:63"><call pos:start="319:17" pos:end="319:63"><name pos:start="319:17" pos:end="319:38">ff_riff_write_info_tag</name><argument_list pos:start="319:39" pos:end="319:63">(<argument pos:start="319:40" pos:end="319:44"><expr pos:start="319:40" pos:end="319:44"><name pos:start="319:40" pos:end="319:44"><name pos:start="319:40" pos:end="319:40">s</name><operator pos:start="319:41" pos:end="319:42">-&gt;</operator><name pos:start="319:43" pos:end="319:44">pb</name></name></expr></argument>, <argument pos:start="319:47" pos:end="319:52"><expr pos:start="319:47" pos:end="319:52"><literal type="string" pos:start="319:47" pos:end="319:52">"strn"</literal></expr></argument>, <argument pos:start="319:55" pos:end="319:62"><expr pos:start="319:55" pos:end="319:62"><name pos:start="319:55" pos:end="319:62"><name pos:start="319:55" pos:end="319:55">t</name><operator pos:start="319:56" pos:end="319:57">-&gt;</operator><name pos:start="319:58" pos:end="319:62">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="321:17" pos:end="321:25"><expr pos:start="321:17" pos:end="321:24"><name pos:start="321:17" pos:end="321:17">t</name> <operator pos:start="321:19" pos:end="321:19">=</operator> <name pos:start="321:21" pos:end="321:24">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="329:9" pos:end="371:9"><if pos:start="329:9" pos:end="371:9">if <condition pos:start="329:12" pos:end="329:25">(<expr pos:start="329:13" pos:end="329:24"><name pos:start="329:13" pos:end="329:24"><name pos:start="329:13" pos:end="329:14">pb</name><operator pos:start="329:15" pos:end="329:16">-&gt;</operator><name pos:start="329:17" pos:end="329:24">seekable</name></name></expr>)</condition> <block pos:start="329:27" pos:end="371:9">{<block_content pos:start="331:13" pos:end="369:54">

            <decl_stmt pos:start="331:13" pos:end="331:33"><decl pos:start="331:13" pos:end="331:32"><type pos:start="331:13" pos:end="331:25"><name pos:start="331:13" pos:end="331:20">unsigned</name> <name pos:start="331:22" pos:end="331:25">char</name></type> <name pos:start="331:27" pos:end="331:32"><name pos:start="331:27" pos:end="331:29">tag</name><index pos:start="331:30" pos:end="331:32">[<expr pos:start="331:31" pos:end="331:31"><literal type="number" pos:start="331:31" pos:end="331:31">5</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="333:13" pos:end="333:18"><decl pos:start="333:13" pos:end="333:17"><type pos:start="333:13" pos:end="333:15"><name pos:start="333:13" pos:end="333:15">int</name></type> <name pos:start="333:17" pos:end="333:17">j</name></decl>;</decl_stmt>



            <comment type="block" pos:start="337:13" pos:end="343:44">/* Starting to lay out AVI OpenDML master index.

             * We want to make it JUNK entry for now, since we'd

             * like to get away without making AVI an OpenDML one

             * for compatibility reasons. */</comment>

            <expr_stmt pos:start="345:13" pos:end="345:74"><expr pos:start="345:13" pos:end="345:73"><name pos:start="345:13" pos:end="345:32"><name pos:start="345:13" pos:end="345:17">avist</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:26">indexes</name><operator pos:start="345:27" pos:end="345:27">.</operator><name pos:start="345:28" pos:end="345:32">entry</name></name>      <operator pos:start="345:39" pos:end="345:39">=</operator> <name pos:start="345:41" pos:end="345:69"><name pos:start="345:41" pos:end="345:45">avist</name><operator pos:start="345:46" pos:end="345:47">-&gt;</operator><name pos:start="345:48" pos:end="345:54">indexes</name><operator pos:start="345:55" pos:end="345:55">.</operator><name pos:start="345:56" pos:end="345:69">ents_allocated</name></name> <operator pos:start="345:71" pos:end="345:71">=</operator> <literal type="number" pos:start="345:73" pos:end="345:73">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:65"><expr pos:start="347:13" pos:end="347:64"><name pos:start="347:13" pos:end="347:37"><name pos:start="347:13" pos:end="347:17">avist</name><operator pos:start="347:18" pos:end="347:19">-&gt;</operator><name pos:start="347:20" pos:end="347:26">indexes</name><operator pos:start="347:27" pos:end="347:27">.</operator><name pos:start="347:28" pos:end="347:37">indx_start</name></name> <operator pos:start="347:39" pos:end="347:39">=</operator> <call pos:start="347:41" pos:end="347:64"><name pos:start="347:41" pos:end="347:52">ff_start_tag</name><argument_list pos:start="347:53" pos:end="347:64">(<argument pos:start="347:54" pos:end="347:55"><expr pos:start="347:54" pos:end="347:55"><name pos:start="347:54" pos:end="347:55">pb</name></expr></argument>, <argument pos:start="347:58" pos:end="347:63"><expr pos:start="347:58" pos:end="347:63"><literal type="string" pos:start="347:58" pos:end="347:63">"JUNK"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:29"><expr pos:start="349:13" pos:end="349:28"><call pos:start="349:13" pos:end="349:28"><name pos:start="349:13" pos:end="349:21">avio_wl16</name><argument_list pos:start="349:22" pos:end="349:28">(<argument pos:start="349:23" pos:end="349:24"><expr pos:start="349:23" pos:end="349:24"><name pos:start="349:23" pos:end="349:24">pb</name></expr></argument>, <argument pos:start="349:27" pos:end="349:27"><expr pos:start="349:27" pos:end="349:27"><literal type="number" pos:start="349:27" pos:end="349:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="349:33" pos:end="349:52">/* wLongsPerEntry */</comment>

            <expr_stmt pos:start="351:13" pos:end="351:27"><expr pos:start="351:13" pos:end="351:26"><call pos:start="351:13" pos:end="351:26"><name pos:start="351:13" pos:end="351:19">avio_w8</name><argument_list pos:start="351:20" pos:end="351:26">(<argument pos:start="351:21" pos:end="351:22"><expr pos:start="351:21" pos:end="351:22"><name pos:start="351:21" pos:end="351:22">pb</name></expr></argument>, <argument pos:start="351:25" pos:end="351:25"><expr pos:start="351:25" pos:end="351:25"><literal type="number" pos:start="351:25" pos:end="351:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="351:33" pos:end="351:70">/* bIndexSubType (0 == frame index) */</comment>

            <expr_stmt pos:start="353:13" pos:end="353:27"><expr pos:start="353:13" pos:end="353:26"><call pos:start="353:13" pos:end="353:26"><name pos:start="353:13" pos:end="353:19">avio_w8</name><argument_list pos:start="353:20" pos:end="353:26">(<argument pos:start="353:21" pos:end="353:22"><expr pos:start="353:21" pos:end="353:22"><name pos:start="353:21" pos:end="353:22">pb</name></expr></argument>, <argument pos:start="353:25" pos:end="353:25"><expr pos:start="353:25" pos:end="353:25"><literal type="number" pos:start="353:25" pos:end="353:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="353:33" pos:end="353:76">/* bIndexType (0 == AVI_INDEX_OF_INDEXES) */</comment>

            <expr_stmt pos:start="355:13" pos:end="355:29"><expr pos:start="355:13" pos:end="355:28"><call pos:start="355:13" pos:end="355:28"><name pos:start="355:13" pos:end="355:21">avio_wl32</name><argument_list pos:start="355:22" pos:end="355:28">(<argument pos:start="355:23" pos:end="355:24"><expr pos:start="355:23" pos:end="355:24"><name pos:start="355:23" pos:end="355:24">pb</name></expr></argument>, <argument pos:start="355:27" pos:end="355:27"><expr pos:start="355:27" pos:end="355:27"><literal type="number" pos:start="355:27" pos:end="355:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="355:33" pos:end="355:76">/* nEntriesInUse (will fill out later on) */</comment>

            <expr_stmt pos:start="357:13" pos:end="357:76"><expr pos:start="357:13" pos:end="357:75"><call pos:start="357:13" pos:end="357:75"><name pos:start="357:13" pos:end="357:24">ffio_wfourcc</name><argument_list pos:start="357:25" pos:end="357:75">(<argument pos:start="357:26" pos:end="357:27"><expr pos:start="357:26" pos:end="357:27"><name pos:start="357:26" pos:end="357:27">pb</name></expr></argument>, <argument pos:start="357:30" pos:end="357:74"><expr pos:start="357:30" pos:end="357:74"><call pos:start="357:30" pos:end="357:74"><name pos:start="357:30" pos:end="357:46">avi_stream2fourcc</name><argument_list pos:start="357:47" pos:end="357:74">(<argument pos:start="357:48" pos:end="357:50"><expr pos:start="357:48" pos:end="357:50"><name pos:start="357:48" pos:end="357:50">tag</name></expr></argument>, <argument pos:start="357:53" pos:end="357:53"><expr pos:start="357:53" pos:end="357:53"><name pos:start="357:53" pos:end="357:53">i</name></expr></argument>, <argument pos:start="357:56" pos:end="357:73"><expr pos:start="357:56" pos:end="357:73"><name pos:start="357:56" pos:end="357:73"><name pos:start="357:56" pos:end="357:61">stream</name><operator pos:start="357:62" pos:end="357:63">-&gt;</operator><name pos:start="357:64" pos:end="357:73">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <comment type="block" pos:start="359:33" pos:end="359:47">/* dwChunkId */</comment>

            <expr_stmt pos:start="361:13" pos:end="361:29"><expr pos:start="361:13" pos:end="361:28"><call pos:start="361:13" pos:end="361:28"><name pos:start="361:13" pos:end="361:21">avio_wl64</name><argument_list pos:start="361:22" pos:end="361:28">(<argument pos:start="361:23" pos:end="361:24"><expr pos:start="361:23" pos:end="361:24"><name pos:start="361:23" pos:end="361:24">pb</name></expr></argument>, <argument pos:start="361:27" pos:end="361:27"><expr pos:start="361:27" pos:end="361:27"><literal type="number" pos:start="361:27" pos:end="361:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="361:33" pos:end="361:51">/* dwReserved[3] */</comment>

            <comment type="line" pos:start="363:13" pos:end="363:54">// avio_wl32(pb, 0);   /* Must be 0.    */</comment>

            <for pos:start="365:13" pos:end="367:33">for <control pos:start="365:17" pos:end="365:59">(<init pos:start="365:18" pos:end="365:23"><expr pos:start="365:18" pos:end="365:22"><name pos:start="365:18" pos:end="365:18">j</name> <operator pos:start="365:20" pos:end="365:20">=</operator> <literal type="number" pos:start="365:22" pos:end="365:22">0</literal></expr>;</init> <condition pos:start="365:25" pos:end="365:54"><expr pos:start="365:25" pos:end="365:53"><name pos:start="365:25" pos:end="365:25">j</name> <operator pos:start="365:27" pos:end="365:27">&lt;</operator> <name pos:start="365:29" pos:end="365:49">AVI_MASTER_INDEX_SIZE</name> <operator pos:start="365:51" pos:end="365:51">*</operator> <literal type="number" pos:start="365:53" pos:end="365:53">2</literal></expr>;</condition> <incr pos:start="365:56" pos:end="365:58"><expr pos:start="365:56" pos:end="365:58"><name pos:start="365:56" pos:end="365:56">j</name><operator pos:start="365:57" pos:end="365:58">++</operator></expr></incr>)</control><block type="pseudo" pos:start="367:17" pos:end="367:33"><block_content pos:start="367:17" pos:end="367:33">

                <expr_stmt pos:start="367:17" pos:end="367:33"><expr pos:start="367:17" pos:end="367:32"><call pos:start="367:17" pos:end="367:32"><name pos:start="367:17" pos:end="367:25">avio_wl64</name><argument_list pos:start="367:26" pos:end="367:32">(<argument pos:start="367:27" pos:end="367:28"><expr pos:start="367:27" pos:end="367:28"><name pos:start="367:27" pos:end="367:28">pb</name></expr></argument>, <argument pos:start="367:31" pos:end="367:31"><expr pos:start="367:31" pos:end="367:31"><literal type="number" pos:start="367:31" pos:end="367:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="369:13" pos:end="369:54"><expr pos:start="369:13" pos:end="369:53"><call pos:start="369:13" pos:end="369:53"><name pos:start="369:13" pos:end="369:22">ff_end_tag</name><argument_list pos:start="369:23" pos:end="369:53">(<argument pos:start="369:24" pos:end="369:25"><expr pos:start="369:24" pos:end="369:25"><name pos:start="369:24" pos:end="369:25">pb</name></expr></argument>, <argument pos:start="369:28" pos:end="369:52"><expr pos:start="369:28" pos:end="369:52"><name pos:start="369:28" pos:end="369:52"><name pos:start="369:28" pos:end="369:32">avist</name><operator pos:start="369:33" pos:end="369:34">-&gt;</operator><name pos:start="369:35" pos:end="369:41">indexes</name><operator pos:start="369:42" pos:end="369:42">.</operator><name pos:start="369:43" pos:end="369:52">indx_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="375:9" pos:end="437:9"><if pos:start="375:9" pos:end="437:9">if <condition pos:start="375:12" pos:end="379:55">(<expr pos:start="375:13" pos:end="379:54"><name pos:start="375:13" pos:end="375:30"><name pos:start="375:13" pos:end="375:18">stream</name><operator pos:start="375:19" pos:end="375:20">-&gt;</operator><name pos:start="375:21" pos:end="375:30">codec_type</name></name> <operator pos:start="375:32" pos:end="375:33">==</operator> <name pos:start="375:35" pos:end="375:52">AVMEDIA_TYPE_VIDEO</name>   <operator pos:start="375:56" pos:end="375:57">&amp;&amp;</operator>

            <name pos:start="377:13" pos:end="377:25"><name pos:start="377:13" pos:end="377:13">s</name><operator pos:start="377:14" pos:end="377:15">-&gt;</operator><name pos:start="377:16" pos:end="377:22">streams</name><index pos:start="377:23" pos:end="377:25">[<expr pos:start="377:24" pos:end="377:24"><name pos:start="377:24" pos:end="377:24">i</name></expr>]</index></name><operator pos:start="377:26" pos:end="377:27">-&gt;</operator><name pos:start="377:28" pos:end="377:50"><name pos:start="377:28" pos:end="377:46">sample_aspect_ratio</name><operator pos:start="377:47" pos:end="377:47">.</operator><name pos:start="377:48" pos:end="377:50">num</name></name> <operator pos:start="377:52" pos:end="377:52">&gt;</operator> <literal type="number" pos:start="377:54" pos:end="377:54">0</literal> <operator pos:start="377:56" pos:end="377:57">&amp;&amp;</operator>

            <name pos:start="379:13" pos:end="379:25"><name pos:start="379:13" pos:end="379:13">s</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:22">streams</name><index pos:start="379:23" pos:end="379:25">[<expr pos:start="379:24" pos:end="379:24"><name pos:start="379:24" pos:end="379:24">i</name></expr>]</index></name><operator pos:start="379:26" pos:end="379:27">-&gt;</operator><name pos:start="379:28" pos:end="379:50"><name pos:start="379:28" pos:end="379:46">sample_aspect_ratio</name><operator pos:start="379:47" pos:end="379:47">.</operator><name pos:start="379:48" pos:end="379:50">den</name></name> <operator pos:start="379:52" pos:end="379:52">&gt;</operator> <literal type="number" pos:start="379:54" pos:end="379:54">0</literal></expr>)</condition> <block pos:start="379:57" pos:end="437:9">{<block_content pos:start="381:13" pos:end="435:33">

            <decl_stmt pos:start="381:13" pos:end="381:54"><decl pos:start="381:13" pos:end="381:53"><type pos:start="381:13" pos:end="381:15"><name pos:start="381:13" pos:end="381:15">int</name></type> <name pos:start="381:17" pos:end="381:20">vprp</name>       <init pos:start="381:28" pos:end="381:53">= <expr pos:start="381:30" pos:end="381:53"><call pos:start="381:30" pos:end="381:53"><name pos:start="381:30" pos:end="381:41">ff_start_tag</name><argument_list pos:start="381:42" pos:end="381:53">(<argument pos:start="381:43" pos:end="381:44"><expr pos:start="381:43" pos:end="381:44"><name pos:start="381:43" pos:end="381:44">pb</name></expr></argument>, <argument pos:start="381:47" pos:end="381:52"><expr pos:start="381:47" pos:end="381:52"><literal type="string" pos:start="381:47" pos:end="381:52">"vprp"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="383:13" pos:end="387:71"><decl pos:start="383:13" pos:end="387:70"><type pos:start="383:13" pos:end="383:22"><name pos:start="383:13" pos:end="383:22">AVRational</name></type> <name pos:start="383:24" pos:end="383:26">dar</name> <init pos:start="383:28" pos:end="387:70">= <macro pos:start="383:30" pos:end="387:70"><name pos:start="383:30" pos:end="383:37">av_mul_q</name><argument_list pos:start="383:38" pos:end="387:70">(<argument pos:start="383:39" pos:end="383:72">s-&gt;streams[i]-&gt;sample_aspect_ratio</argument>,

                                      <argument pos:start="385:39" pos:end="385:66">(AVRational) { stream-&gt;width</argument>,

                                                     <argument pos:start="387:54" pos:end="387:69">stream-&gt;height }</argument>)</argument_list></macro></init></decl>;</decl_stmt>

            <decl_stmt pos:start="389:13" pos:end="389:25"><decl pos:start="389:13" pos:end="389:19"><type pos:start="389:13" pos:end="389:15"><name pos:start="389:13" pos:end="389:15">int</name></type> <name pos:start="389:17" pos:end="389:19">num</name></decl>, <decl pos:start="389:22" pos:end="389:24"><type ref="prev" pos:start="389:13" pos:end="389:15"/><name pos:start="389:22" pos:end="389:24">den</name></decl>;</decl_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:60"><expr pos:start="391:13" pos:end="391:59"><call pos:start="391:13" pos:end="391:59"><name pos:start="391:13" pos:end="391:21">av_reduce</name><argument_list pos:start="391:22" pos:end="391:59">(<argument pos:start="391:23" pos:end="391:26"><expr pos:start="391:23" pos:end="391:26"><operator pos:start="391:23" pos:end="391:23">&amp;</operator><name pos:start="391:24" pos:end="391:26">num</name></expr></argument>, <argument pos:start="391:29" pos:end="391:32"><expr pos:start="391:29" pos:end="391:32"><operator pos:start="391:29" pos:end="391:29">&amp;</operator><name pos:start="391:30" pos:end="391:32">den</name></expr></argument>, <argument pos:start="391:35" pos:end="391:41"><expr pos:start="391:35" pos:end="391:41"><name pos:start="391:35" pos:end="391:41"><name pos:start="391:35" pos:end="391:37">dar</name><operator pos:start="391:38" pos:end="391:38">.</operator><name pos:start="391:39" pos:end="391:41">num</name></name></expr></argument>, <argument pos:start="391:44" pos:end="391:50"><expr pos:start="391:44" pos:end="391:50"><name pos:start="391:44" pos:end="391:50"><name pos:start="391:44" pos:end="391:46">dar</name><operator pos:start="391:47" pos:end="391:47">.</operator><name pos:start="391:48" pos:end="391:50">den</name></name></expr></argument>, <argument pos:start="391:53" pos:end="391:58"><expr pos:start="391:53" pos:end="391:58"><literal type="number" pos:start="391:53" pos:end="391:58">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="395:13" pos:end="395:29"><expr pos:start="395:13" pos:end="395:28"><call pos:start="395:13" pos:end="395:28"><name pos:start="395:13" pos:end="395:21">avio_wl32</name><argument_list pos:start="395:22" pos:end="395:28">(<argument pos:start="395:23" pos:end="395:24"><expr pos:start="395:23" pos:end="395:24"><name pos:start="395:23" pos:end="395:24">pb</name></expr></argument>, <argument pos:start="395:27" pos:end="395:27"><expr pos:start="395:27" pos:end="395:27"><literal type="number" pos:start="395:27" pos:end="395:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="395:31" pos:end="395:57">// video format   = unknown</comment>

            <expr_stmt pos:start="397:13" pos:end="397:29"><expr pos:start="397:13" pos:end="397:28"><call pos:start="397:13" pos:end="397:28"><name pos:start="397:13" pos:end="397:21">avio_wl32</name><argument_list pos:start="397:22" pos:end="397:28">(<argument pos:start="397:23" pos:end="397:24"><expr pos:start="397:23" pos:end="397:24"><name pos:start="397:23" pos:end="397:24">pb</name></expr></argument>, <argument pos:start="397:27" pos:end="397:27"><expr pos:start="397:27" pos:end="397:27"><literal type="number" pos:start="397:27" pos:end="397:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="397:31" pos:end="397:57">// video standard = unknown</comment>

            <expr_stmt pos:start="399:13" pos:end="399:67"><expr pos:start="399:13" pos:end="399:66"><call pos:start="399:13" pos:end="399:66"><name pos:start="399:13" pos:end="399:21">avio_wl32</name><argument_list pos:start="399:22" pos:end="399:66">(<argument pos:start="399:23" pos:end="399:24"><expr pos:start="399:23" pos:end="399:24"><name pos:start="399:23" pos:end="399:24">pb</name></expr></argument>, <argument pos:start="399:27" pos:end="399:65"><expr pos:start="399:27" pos:end="399:65"><call pos:start="399:27" pos:end="399:65"><name pos:start="399:27" pos:end="399:32">lrintf</name><argument_list pos:start="399:33" pos:end="399:65">(<argument pos:start="399:34" pos:end="399:64"><expr pos:start="399:34" pos:end="399:64"><literal type="number" pos:start="399:34" pos:end="399:36">1.0</literal> <operator pos:start="399:38" pos:end="399:38">/</operator> <call pos:start="399:40" pos:end="399:64"><name pos:start="399:40" pos:end="399:45">av_q2d</name><argument_list pos:start="399:46" pos:end="399:64">(<argument pos:start="399:47" pos:end="399:63"><expr pos:start="399:47" pos:end="399:63"><name pos:start="399:47" pos:end="399:63"><name pos:start="399:47" pos:end="399:52">stream</name><operator pos:start="399:53" pos:end="399:54">-&gt;</operator><name pos:start="399:55" pos:end="399:63">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:41"><expr pos:start="401:13" pos:end="401:40"><call pos:start="401:13" pos:end="401:40"><name pos:start="401:13" pos:end="401:21">avio_wl32</name><argument_list pos:start="401:22" pos:end="401:40">(<argument pos:start="401:23" pos:end="401:24"><expr pos:start="401:23" pos:end="401:24"><name pos:start="401:23" pos:end="401:24">pb</name></expr></argument>, <argument pos:start="401:27" pos:end="401:39"><expr pos:start="401:27" pos:end="401:39"><name pos:start="401:27" pos:end="401:39"><name pos:start="401:27" pos:end="401:32">stream</name><operator pos:start="401:33" pos:end="401:34">-&gt;</operator><name pos:start="401:35" pos:end="401:39">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:42"><expr pos:start="403:13" pos:end="403:41"><call pos:start="403:13" pos:end="403:41"><name pos:start="403:13" pos:end="403:21">avio_wl32</name><argument_list pos:start="403:22" pos:end="403:41">(<argument pos:start="403:23" pos:end="403:24"><expr pos:start="403:23" pos:end="403:24"><name pos:start="403:23" pos:end="403:24">pb</name></expr></argument>, <argument pos:start="403:27" pos:end="403:40"><expr pos:start="403:27" pos:end="403:40"><name pos:start="403:27" pos:end="403:40"><name pos:start="403:27" pos:end="403:32">stream</name><operator pos:start="403:33" pos:end="403:34">-&gt;</operator><name pos:start="403:35" pos:end="403:40">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:31"><expr pos:start="405:13" pos:end="405:30"><call pos:start="405:13" pos:end="405:30"><name pos:start="405:13" pos:end="405:21">avio_wl16</name><argument_list pos:start="405:22" pos:end="405:30">(<argument pos:start="405:23" pos:end="405:24"><expr pos:start="405:23" pos:end="405:24"><name pos:start="405:23" pos:end="405:24">pb</name></expr></argument>, <argument pos:start="405:27" pos:end="405:29"><expr pos:start="405:27" pos:end="405:29"><name pos:start="405:27" pos:end="405:29">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:31"><expr pos:start="407:13" pos:end="407:30"><call pos:start="407:13" pos:end="407:30"><name pos:start="407:13" pos:end="407:21">avio_wl16</name><argument_list pos:start="407:22" pos:end="407:30">(<argument pos:start="407:23" pos:end="407:24"><expr pos:start="407:23" pos:end="407:24"><name pos:start="407:23" pos:end="407:24">pb</name></expr></argument>, <argument pos:start="407:27" pos:end="407:29"><expr pos:start="407:27" pos:end="407:29"><name pos:start="407:27" pos:end="407:29">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="409:41"><expr pos:start="409:13" pos:end="409:40"><call pos:start="409:13" pos:end="409:40"><name pos:start="409:13" pos:end="409:21">avio_wl32</name><argument_list pos:start="409:22" pos:end="409:40">(<argument pos:start="409:23" pos:end="409:24"><expr pos:start="409:23" pos:end="409:24"><name pos:start="409:23" pos:end="409:24">pb</name></expr></argument>, <argument pos:start="409:27" pos:end="409:39"><expr pos:start="409:27" pos:end="409:39"><name pos:start="409:27" pos:end="409:39"><name pos:start="409:27" pos:end="409:32">stream</name><operator pos:start="409:33" pos:end="409:34">-&gt;</operator><name pos:start="409:35" pos:end="409:39">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:42"><expr pos:start="411:13" pos:end="411:41"><call pos:start="411:13" pos:end="411:41"><name pos:start="411:13" pos:end="411:21">avio_wl32</name><argument_list pos:start="411:22" pos:end="411:41">(<argument pos:start="411:23" pos:end="411:24"><expr pos:start="411:23" pos:end="411:24"><name pos:start="411:23" pos:end="411:24">pb</name></expr></argument>, <argument pos:start="411:27" pos:end="411:40"><expr pos:start="411:27" pos:end="411:40"><name pos:start="411:27" pos:end="411:40"><name pos:start="411:27" pos:end="411:32">stream</name><operator pos:start="411:33" pos:end="411:34">-&gt;</operator><name pos:start="411:35" pos:end="411:40">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:29"><expr pos:start="413:13" pos:end="413:28"><call pos:start="413:13" pos:end="413:28"><name pos:start="413:13" pos:end="413:21">avio_wl32</name><argument_list pos:start="413:22" pos:end="413:28">(<argument pos:start="413:23" pos:end="413:24"><expr pos:start="413:23" pos:end="413:24"><name pos:start="413:23" pos:end="413:24">pb</name></expr></argument>, <argument pos:start="413:27" pos:end="413:27"><expr pos:start="413:27" pos:end="413:27"><literal type="number" pos:start="413:27" pos:end="413:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="413:31" pos:end="413:50">// progressive FIXME</comment>



            <expr_stmt pos:start="417:13" pos:end="417:42"><expr pos:start="417:13" pos:end="417:41"><call pos:start="417:13" pos:end="417:41"><name pos:start="417:13" pos:end="417:21">avio_wl32</name><argument_list pos:start="417:22" pos:end="417:41">(<argument pos:start="417:23" pos:end="417:24"><expr pos:start="417:23" pos:end="417:24"><name pos:start="417:23" pos:end="417:24">pb</name></expr></argument>, <argument pos:start="417:27" pos:end="417:40"><expr pos:start="417:27" pos:end="417:40"><name pos:start="417:27" pos:end="417:40"><name pos:start="417:27" pos:end="417:32">stream</name><operator pos:start="417:33" pos:end="417:34">-&gt;</operator><name pos:start="417:35" pos:end="417:40">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:41"><expr pos:start="419:13" pos:end="419:40"><call pos:start="419:13" pos:end="419:40"><name pos:start="419:13" pos:end="419:21">avio_wl32</name><argument_list pos:start="419:22" pos:end="419:40">(<argument pos:start="419:23" pos:end="419:24"><expr pos:start="419:23" pos:end="419:24"><name pos:start="419:23" pos:end="419:24">pb</name></expr></argument>, <argument pos:start="419:27" pos:end="419:39"><expr pos:start="419:27" pos:end="419:39"><name pos:start="419:27" pos:end="419:39"><name pos:start="419:27" pos:end="419:32">stream</name><operator pos:start="419:33" pos:end="419:34">-&gt;</operator><name pos:start="419:35" pos:end="419:39">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:42"><expr pos:start="421:13" pos:end="421:41"><call pos:start="421:13" pos:end="421:41"><name pos:start="421:13" pos:end="421:21">avio_wl32</name><argument_list pos:start="421:22" pos:end="421:41">(<argument pos:start="421:23" pos:end="421:24"><expr pos:start="421:23" pos:end="421:24"><name pos:start="421:23" pos:end="421:24">pb</name></expr></argument>, <argument pos:start="421:27" pos:end="421:40"><expr pos:start="421:27" pos:end="421:40"><name pos:start="421:27" pos:end="421:40"><name pos:start="421:27" pos:end="421:32">stream</name><operator pos:start="421:33" pos:end="421:34">-&gt;</operator><name pos:start="421:35" pos:end="421:40">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:41"><expr pos:start="423:13" pos:end="423:40"><call pos:start="423:13" pos:end="423:40"><name pos:start="423:13" pos:end="423:21">avio_wl32</name><argument_list pos:start="423:22" pos:end="423:40">(<argument pos:start="423:23" pos:end="423:24"><expr pos:start="423:23" pos:end="423:24"><name pos:start="423:23" pos:end="423:24">pb</name></expr></argument>, <argument pos:start="423:27" pos:end="423:39"><expr pos:start="423:27" pos:end="423:39"><name pos:start="423:27" pos:end="423:39"><name pos:start="423:27" pos:end="423:32">stream</name><operator pos:start="423:33" pos:end="423:34">-&gt;</operator><name pos:start="423:35" pos:end="423:39">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:29"><expr pos:start="425:13" pos:end="425:28"><call pos:start="425:13" pos:end="425:28"><name pos:start="425:13" pos:end="425:21">avio_wl32</name><argument_list pos:start="425:22" pos:end="425:28">(<argument pos:start="425:23" pos:end="425:24"><expr pos:start="425:23" pos:end="425:24"><name pos:start="425:23" pos:end="425:24">pb</name></expr></argument>, <argument pos:start="425:27" pos:end="425:27"><expr pos:start="425:27" pos:end="425:27"><literal type="number" pos:start="425:27" pos:end="425:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:29"><expr pos:start="427:13" pos:end="427:28"><call pos:start="427:13" pos:end="427:28"><name pos:start="427:13" pos:end="427:21">avio_wl32</name><argument_list pos:start="427:22" pos:end="427:28">(<argument pos:start="427:23" pos:end="427:24"><expr pos:start="427:23" pos:end="427:24"><name pos:start="427:23" pos:end="427:24">pb</name></expr></argument>, <argument pos:start="427:27" pos:end="427:27"><expr pos:start="427:27" pos:end="427:27"><literal type="number" pos:start="427:27" pos:end="427:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="431:13" pos:end="431:29"><expr pos:start="431:13" pos:end="431:28"><call pos:start="431:13" pos:end="431:28"><name pos:start="431:13" pos:end="431:21">avio_wl32</name><argument_list pos:start="431:22" pos:end="431:28">(<argument pos:start="431:23" pos:end="431:24"><expr pos:start="431:23" pos:end="431:24"><name pos:start="431:23" pos:end="431:24">pb</name></expr></argument>, <argument pos:start="431:27" pos:end="431:27"><expr pos:start="431:27" pos:end="431:27"><literal type="number" pos:start="431:27" pos:end="431:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:29"><expr pos:start="433:13" pos:end="433:28"><call pos:start="433:13" pos:end="433:28"><name pos:start="433:13" pos:end="433:21">avio_wl32</name><argument_list pos:start="433:22" pos:end="433:28">(<argument pos:start="433:23" pos:end="433:24"><expr pos:start="433:23" pos:end="433:24"><name pos:start="433:23" pos:end="433:24">pb</name></expr></argument>, <argument pos:start="433:27" pos:end="433:27"><expr pos:start="433:27" pos:end="433:27"><literal type="number" pos:start="433:27" pos:end="433:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:33"><expr pos:start="435:13" pos:end="435:32"><call pos:start="435:13" pos:end="435:32"><name pos:start="435:13" pos:end="435:22">ff_end_tag</name><argument_list pos:start="435:23" pos:end="435:32">(<argument pos:start="435:24" pos:end="435:25"><expr pos:start="435:24" pos:end="435:25"><name pos:start="435:24" pos:end="435:25">pb</name></expr></argument>, <argument pos:start="435:28" pos:end="435:31"><expr pos:start="435:28" pos:end="435:31"><name pos:start="435:28" pos:end="435:31">vprp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="441:9" pos:end="441:30"><expr pos:start="441:9" pos:end="441:29"><call pos:start="441:9" pos:end="441:29"><name pos:start="441:9" pos:end="441:18">ff_end_tag</name><argument_list pos:start="441:19" pos:end="441:29">(<argument pos:start="441:20" pos:end="441:21"><expr pos:start="441:20" pos:end="441:21"><name pos:start="441:20" pos:end="441:21">pb</name></expr></argument>, <argument pos:start="441:24" pos:end="441:28"><expr pos:start="441:24" pos:end="441:28"><name pos:start="441:24" pos:end="441:28">list2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="447:5" pos:end="465:5"><if pos:start="447:5" pos:end="465:5">if <condition pos:start="447:8" pos:end="447:21">(<expr pos:start="447:9" pos:end="447:20"><name pos:start="447:9" pos:end="447:20"><name pos:start="447:9" pos:end="447:10">pb</name><operator pos:start="447:11" pos:end="447:12">-&gt;</operator><name pos:start="447:13" pos:end="447:20">seekable</name></name></expr>)</condition> <block pos:start="447:23" pos:end="465:5">{<block_content pos:start="451:9" pos:end="463:39">

        <comment type="block" pos:start="449:9" pos:end="449:75">/* AVI could become an OpenDML one, if it grows beyond 2Gb range */</comment>

        <expr_stmt pos:start="451:9" pos:end="451:50"><expr pos:start="451:9" pos:end="451:49"><name pos:start="451:9" pos:end="451:22"><name pos:start="451:9" pos:end="451:11">avi</name><operator pos:start="451:12" pos:end="451:13">-&gt;</operator><name pos:start="451:14" pos:end="451:22">odml_list</name></name> <operator pos:start="451:24" pos:end="451:24">=</operator> <call pos:start="451:26" pos:end="451:49"><name pos:start="451:26" pos:end="451:37">ff_start_tag</name><argument_list pos:start="451:38" pos:end="451:49">(<argument pos:start="451:39" pos:end="451:40"><expr pos:start="451:39" pos:end="451:40"><name pos:start="451:39" pos:end="451:40">pb</name></expr></argument>, <argument pos:start="451:43" pos:end="451:48"><expr pos:start="451:43" pos:end="451:48"><literal type="string" pos:start="451:43" pos:end="451:48">"JUNK"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="453:9" pos:end="453:33"><expr pos:start="453:9" pos:end="453:32"><call pos:start="453:9" pos:end="453:32"><name pos:start="453:9" pos:end="453:20">ffio_wfourcc</name><argument_list pos:start="453:21" pos:end="453:32">(<argument pos:start="453:22" pos:end="453:23"><expr pos:start="453:22" pos:end="453:23"><name pos:start="453:22" pos:end="453:23">pb</name></expr></argument>, <argument pos:start="453:26" pos:end="453:31"><expr pos:start="453:26" pos:end="453:31"><literal type="string" pos:start="453:26" pos:end="453:31">"odml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:33"><expr pos:start="455:9" pos:end="455:32"><call pos:start="455:9" pos:end="455:32"><name pos:start="455:9" pos:end="455:20">ffio_wfourcc</name><argument_list pos:start="455:21" pos:end="455:32">(<argument pos:start="455:22" pos:end="455:23"><expr pos:start="455:22" pos:end="455:23"><name pos:start="455:22" pos:end="455:23">pb</name></expr></argument>, <argument pos:start="455:26" pos:end="455:31"><expr pos:start="455:26" pos:end="455:31"><literal type="string" pos:start="455:26" pos:end="455:31">"dmlh"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="457:9" pos:end="457:27"><expr pos:start="457:9" pos:end="457:26"><call pos:start="457:9" pos:end="457:26"><name pos:start="457:9" pos:end="457:17">avio_wl32</name><argument_list pos:start="457:18" pos:end="457:26">(<argument pos:start="457:19" pos:end="457:20"><expr pos:start="457:19" pos:end="457:20"><name pos:start="457:19" pos:end="457:20">pb</name></expr></argument>, <argument pos:start="457:23" pos:end="457:25"><expr pos:start="457:23" pos:end="457:25"><literal type="number" pos:start="457:23" pos:end="457:25">248</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="459:9" pos:end="461:29">for <control pos:start="459:13" pos:end="459:36">(<init pos:start="459:14" pos:end="459:19"><expr pos:start="459:14" pos:end="459:18"><name pos:start="459:14" pos:end="459:14">i</name> <operator pos:start="459:16" pos:end="459:16">=</operator> <literal type="number" pos:start="459:18" pos:end="459:18">0</literal></expr>;</init> <condition pos:start="459:21" pos:end="459:28"><expr pos:start="459:21" pos:end="459:27"><name pos:start="459:21" pos:end="459:21">i</name> <operator pos:start="459:23" pos:end="459:23">&lt;</operator> <literal type="number" pos:start="459:25" pos:end="459:27">248</literal></expr>;</condition> <incr pos:start="459:30" pos:end="459:35"><expr pos:start="459:30" pos:end="459:35"><name pos:start="459:30" pos:end="459:30">i</name> <operator pos:start="459:32" pos:end="459:33">+=</operator> <literal type="number" pos:start="459:35" pos:end="459:35">4</literal></expr></incr>)</control><block type="pseudo" pos:start="461:13" pos:end="461:29"><block_content pos:start="461:13" pos:end="461:29">

            <expr_stmt pos:start="461:13" pos:end="461:29"><expr pos:start="461:13" pos:end="461:28"><call pos:start="461:13" pos:end="461:28"><name pos:start="461:13" pos:end="461:21">avio_wl32</name><argument_list pos:start="461:22" pos:end="461:28">(<argument pos:start="461:23" pos:end="461:24"><expr pos:start="461:23" pos:end="461:24"><name pos:start="461:23" pos:end="461:24">pb</name></expr></argument>, <argument pos:start="461:27" pos:end="461:27"><expr pos:start="461:27" pos:end="461:27"><literal type="number" pos:start="461:27" pos:end="461:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="463:9" pos:end="463:39"><expr pos:start="463:9" pos:end="463:38"><call pos:start="463:9" pos:end="463:38"><name pos:start="463:9" pos:end="463:18">ff_end_tag</name><argument_list pos:start="463:19" pos:end="463:38">(<argument pos:start="463:20" pos:end="463:21"><expr pos:start="463:20" pos:end="463:21"><name pos:start="463:20" pos:end="463:21">pb</name></expr></argument>, <argument pos:start="463:24" pos:end="463:37"><expr pos:start="463:24" pos:end="463:37"><name pos:start="463:24" pos:end="463:37"><name pos:start="463:24" pos:end="463:26">avi</name><operator pos:start="463:27" pos:end="463:28">-&gt;</operator><name pos:start="463:29" pos:end="463:37">odml_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="469:5" pos:end="469:26"><expr pos:start="469:5" pos:end="469:25"><call pos:start="469:5" pos:end="469:25"><name pos:start="469:5" pos:end="469:14">ff_end_tag</name><argument_list pos:start="469:15" pos:end="469:25">(<argument pos:start="469:16" pos:end="469:17"><expr pos:start="469:16" pos:end="469:17"><name pos:start="469:16" pos:end="469:17">pb</name></expr></argument>, <argument pos:start="469:20" pos:end="469:24"><expr pos:start="469:20" pos:end="469:24"><name pos:start="469:20" pos:end="469:24">list1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="473:5" pos:end="473:26"><expr pos:start="473:5" pos:end="473:25"><call pos:start="473:5" pos:end="473:25"><name pos:start="473:5" pos:end="473:22">ff_riff_write_info</name><argument_list pos:start="473:23" pos:end="473:25">(<argument pos:start="473:24" pos:end="473:24"><expr pos:start="473:24" pos:end="473:24"><name pos:start="473:24" pos:end="473:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="477:5" pos:end="477:45">/* some padding for easier tag editing */</comment>

    <expr_stmt pos:start="479:5" pos:end="479:37"><expr pos:start="479:5" pos:end="479:36"><name pos:start="479:5" pos:end="479:9">list2</name> <operator pos:start="479:11" pos:end="479:11">=</operator> <call pos:start="479:13" pos:end="479:36"><name pos:start="479:13" pos:end="479:24">ff_start_tag</name><argument_list pos:start="479:25" pos:end="479:36">(<argument pos:start="479:26" pos:end="479:27"><expr pos:start="479:26" pos:end="479:27"><name pos:start="479:26" pos:end="479:27">pb</name></expr></argument>, <argument pos:start="479:30" pos:end="479:35"><expr pos:start="479:30" pos:end="479:35"><literal type="string" pos:start="479:30" pos:end="479:35">"JUNK"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="481:5" pos:end="483:25">for <control pos:start="481:9" pos:end="481:33">(<init pos:start="481:10" pos:end="481:15"><expr pos:start="481:10" pos:end="481:14"><name pos:start="481:10" pos:end="481:10">i</name> <operator pos:start="481:12" pos:end="481:12">=</operator> <literal type="number" pos:start="481:14" pos:end="481:14">0</literal></expr>;</init> <condition pos:start="481:17" pos:end="481:25"><expr pos:start="481:17" pos:end="481:24"><name pos:start="481:17" pos:end="481:17">i</name> <operator pos:start="481:19" pos:end="481:19">&lt;</operator> <literal type="number" pos:start="481:21" pos:end="481:24">1016</literal></expr>;</condition> <incr pos:start="481:27" pos:end="481:32"><expr pos:start="481:27" pos:end="481:32"><name pos:start="481:27" pos:end="481:27">i</name> <operator pos:start="481:29" pos:end="481:30">+=</operator> <literal type="number" pos:start="481:32" pos:end="481:32">4</literal></expr></incr>)</control><block type="pseudo" pos:start="483:9" pos:end="483:25"><block_content pos:start="483:9" pos:end="483:25">

        <expr_stmt pos:start="483:9" pos:end="483:25"><expr pos:start="483:9" pos:end="483:24"><call pos:start="483:9" pos:end="483:24"><name pos:start="483:9" pos:end="483:17">avio_wl32</name><argument_list pos:start="483:18" pos:end="483:24">(<argument pos:start="483:19" pos:end="483:20"><expr pos:start="483:19" pos:end="483:20"><name pos:start="483:19" pos:end="483:20">pb</name></expr></argument>, <argument pos:start="483:23" pos:end="483:23"><expr pos:start="483:23" pos:end="483:23"><literal type="number" pos:start="483:23" pos:end="483:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="485:5" pos:end="485:26"><expr pos:start="485:5" pos:end="485:25"><call pos:start="485:5" pos:end="485:25"><name pos:start="485:5" pos:end="485:14">ff_end_tag</name><argument_list pos:start="485:15" pos:end="485:25">(<argument pos:start="485:16" pos:end="485:17"><expr pos:start="485:16" pos:end="485:17"><name pos:start="485:16" pos:end="485:17">pb</name></expr></argument>, <argument pos:start="485:20" pos:end="485:24"><expr pos:start="485:20" pos:end="485:24"><name pos:start="485:20" pos:end="485:24">list2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="489:5" pos:end="489:46"><expr pos:start="489:5" pos:end="489:45"><name pos:start="489:5" pos:end="489:18"><name pos:start="489:5" pos:end="489:7">avi</name><operator pos:start="489:8" pos:end="489:9">-&gt;</operator><name pos:start="489:10" pos:end="489:18">movi_list</name></name> <operator pos:start="489:20" pos:end="489:20">=</operator> <call pos:start="489:22" pos:end="489:45"><name pos:start="489:22" pos:end="489:33">ff_start_tag</name><argument_list pos:start="489:34" pos:end="489:45">(<argument pos:start="489:35" pos:end="489:36"><expr pos:start="489:35" pos:end="489:36"><name pos:start="489:35" pos:end="489:36">pb</name></expr></argument>, <argument pos:start="489:39" pos:end="489:44"><expr pos:start="489:39" pos:end="489:44"><literal type="string" pos:start="489:39" pos:end="489:44">"LIST"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="491:5" pos:end="491:29"><expr pos:start="491:5" pos:end="491:28"><call pos:start="491:5" pos:end="491:28"><name pos:start="491:5" pos:end="491:16">ffio_wfourcc</name><argument_list pos:start="491:17" pos:end="491:28">(<argument pos:start="491:18" pos:end="491:19"><expr pos:start="491:18" pos:end="491:19"><name pos:start="491:18" pos:end="491:19">pb</name></expr></argument>, <argument pos:start="491:22" pos:end="491:27"><expr pos:start="491:22" pos:end="491:27"><literal type="string" pos:start="491:22" pos:end="491:27">"movi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="495:5" pos:end="495:19"><expr pos:start="495:5" pos:end="495:18"><call pos:start="495:5" pos:end="495:18"><name pos:start="495:5" pos:end="495:14">avio_flush</name><argument_list pos:start="495:15" pos:end="495:18">(<argument pos:start="495:16" pos:end="495:17"><expr pos:start="495:16" pos:end="495:17"><name pos:start="495:16" pos:end="495:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="499:5" pos:end="499:13">return <expr pos:start="499:12" pos:end="499:12"><literal type="number" pos:start="499:12" pos:end="499:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
