<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15695.c" pos:tabs="8"><function pos:start="1:1" pos:end="575:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">svq3_decode_mb</name><parameter_list pos:start="1:26" pos:end="1:63">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">SVQ3Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:50">unsigned</name> <name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:62">mb_type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="575:1">{<block_content pos:start="5:5" pos:end="573:13">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">H264Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">h</name> <init pos:start="5:20" pos:end="5:26">= <expr pos:start="5:22" pos:end="5:26"><operator pos:start="5:22" pos:end="5:22">&amp;</operator><name pos:start="5:23" pos:end="5:26"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:26">h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">m</name></decl>, <decl pos:start="7:21" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">dir</name></decl>, <decl pos:start="7:26" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:29">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">cbp</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">vlc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">int8_t</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:15">top</name></decl>, <decl pos:start="13:18" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:12"><modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:22">left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:19">mb_xy</name>         <init pos:start="15:29" pos:end="15:38">= <expr pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:31">h</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:38">mb_xy</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:70"><decl pos:start="17:5" pos:end="17:69"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:18">b_xy</name>          <init pos:start="17:29" pos:end="17:69">= <expr pos:start="17:31" pos:end="17:69"><literal type="number" pos:start="17:31" pos:end="17:31">4</literal> <operator pos:start="17:33" pos:end="17:33">*</operator> <name pos:start="17:35" pos:end="17:41"><name pos:start="17:35" pos:end="17:35">h</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:41">mb_x</name></name> <operator pos:start="17:43" pos:end="17:43">+</operator> <literal type="number" pos:start="17:45" pos:end="17:45">4</literal> <operator pos:start="17:47" pos:end="17:47">*</operator> <name pos:start="17:49" pos:end="17:55"><name pos:start="17:49" pos:end="17:49">h</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:55">mb_y</name></name> <operator pos:start="17:57" pos:end="17:57">*</operator> <name pos:start="17:59" pos:end="17:69"><name pos:start="17:59" pos:end="17:59">h</name><operator pos:start="17:60" pos:end="17:61">-&gt;</operator><name pos:start="17:62" pos:end="17:69">b_stride</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:69"><expr pos:start="21:5" pos:end="21:68"><name pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:5">h</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:28">top_samples_available</name></name>      <operator pos:start="21:35" pos:end="21:35">=</operator> <ternary pos:start="21:37" pos:end="21:68"><condition pos:start="21:37" pos:end="21:52"><expr pos:start="21:37" pos:end="21:50"><operator pos:start="21:37" pos:end="21:37">(</operator><name pos:start="21:38" pos:end="21:44"><name pos:start="21:38" pos:end="21:38">h</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:44">mb_y</name></name> <operator pos:start="21:46" pos:end="21:47">==</operator> <literal type="number" pos:start="21:49" pos:end="21:49">0</literal><operator pos:start="21:50" pos:end="21:50">)</operator></expr> ?</condition><then pos:start="21:54" pos:end="21:59"> <expr pos:start="21:54" pos:end="21:59"><literal type="number" pos:start="21:54" pos:end="21:59">0x33FF</literal></expr> </then><else pos:start="21:61" pos:end="21:68">: <expr pos:start="21:63" pos:end="21:68"><literal type="number" pos:start="21:63" pos:end="21:68">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:69"><expr pos:start="23:5" pos:end="23:68"><name pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:29">left_samples_available</name></name>     <operator pos:start="23:35" pos:end="23:35">=</operator> <ternary pos:start="23:37" pos:end="23:68"><condition pos:start="23:37" pos:end="23:52"><expr pos:start="23:37" pos:end="23:50"><operator pos:start="23:37" pos:end="23:37">(</operator><name pos:start="23:38" pos:end="23:44"><name pos:start="23:38" pos:end="23:38">h</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:44">mb_x</name></name> <operator pos:start="23:46" pos:end="23:47">==</operator> <literal type="number" pos:start="23:49" pos:end="23:49">0</literal><operator pos:start="23:50" pos:end="23:50">)</operator></expr> ?</condition><then pos:start="23:54" pos:end="23:59"> <expr pos:start="23:54" pos:end="23:59"><literal type="number" pos:start="23:54" pos:end="23:59">0x5F5F</literal></expr> </then><else pos:start="23:61" pos:end="23:68">: <expr pos:start="23:63" pos:end="23:68"><literal type="number" pos:start="23:63" pos:end="23:68">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:33">topright_samples_available</name></name> <operator pos:start="25:35" pos:end="25:35">=</operator> <literal type="number" pos:start="25:37" pos:end="25:42">0xFFFF</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="375:5"><if pos:start="29:5" pos:end="69:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:15">mb_type</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>)</condition> <block pos:start="29:23" pos:end="69:5">{<block_content pos:start="31:9" pos:end="67:9">           <comment type="block" pos:start="29:35" pos:end="29:44">/* SKIP */</comment>

        <if_stmt pos:start="31:9" pos:end="67:9"><if pos:start="31:9" pos:end="51:9">if <condition pos:start="31:12" pos:end="33:46">(<expr pos:start="31:13" pos:end="33:45"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:13">h</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">pict_type</name></name> <operator pos:start="31:26" pos:end="31:27">==</operator> <name pos:start="31:29" pos:end="31:45">AV_PICTURE_TYPE_P</name> <operator pos:start="31:47" pos:end="31:48">||</operator>

            <name pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:23">next_pic</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:32">mb_type</name><index pos:start="33:33" pos:end="33:39">[<expr pos:start="33:34" pos:end="33:38"><name pos:start="33:34" pos:end="33:38">mb_xy</name></expr>]</index></name> <operator pos:start="33:41" pos:end="33:42">==</operator> <operator pos:start="33:44" pos:end="33:44">-</operator><literal type="number" pos:start="33:45" pos:end="33:45">1</literal></expr>)</condition> <block pos:start="33:48" pos:end="51:9">{<block_content pos:start="35:13" pos:end="49:35">

            <expr_stmt pos:start="35:13" pos:end="37:47"><expr pos:start="35:13" pos:end="37:46"><call pos:start="35:13" pos:end="37:46"><name pos:start="35:13" pos:end="35:28">svq3_mc_dir_part</name><argument_list pos:start="35:29" pos:end="37:46">(<argument pos:start="35:30" pos:end="35:30"><expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">s</name></expr></argument>, <argument pos:start="35:33" pos:end="35:44"><expr pos:start="35:33" pos:end="35:44"><literal type="number" pos:start="35:33" pos:end="35:34">16</literal> <operator pos:start="35:36" pos:end="35:36">*</operator> <name pos:start="35:38" pos:end="35:44"><name pos:start="35:38" pos:end="35:38">h</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:44">mb_x</name></name></expr></argument>, <argument pos:start="35:47" pos:end="35:58"><expr pos:start="35:47" pos:end="35:58"><literal type="number" pos:start="35:47" pos:end="35:48">16</literal> <operator pos:start="35:50" pos:end="35:50">*</operator> <name pos:start="35:52" pos:end="35:58"><name pos:start="35:52" pos:end="35:52">h</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:58">mb_y</name></name></expr></argument>, <argument pos:start="35:61" pos:end="35:62"><expr pos:start="35:61" pos:end="35:62"><literal type="number" pos:start="35:61" pos:end="35:62">16</literal></expr></argument>, <argument pos:start="35:65" pos:end="35:66"><expr pos:start="35:65" pos:end="35:66"><literal type="number" pos:start="35:65" pos:end="35:66">16</literal></expr></argument>,

                             <argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr></argument>, <argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:39"><expr pos:start="37:39" pos:end="37:39"><literal type="number" pos:start="37:39" pos:end="37:39">0</literal></expr></argument>, <argument pos:start="37:42" pos:end="37:42"><expr pos:start="37:42" pos:end="37:42"><literal type="number" pos:start="37:42" pos:end="37:42">0</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:45"><expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="41:13" pos:end="45:51"><if pos:start="41:13" pos:end="45:51">if <condition pos:start="41:16" pos:end="41:50">(<expr pos:start="41:17" pos:end="41:49"><name pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:17">h</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:28">pict_type</name></name> <operator pos:start="41:30" pos:end="41:31">==</operator> <name pos:start="41:33" pos:end="41:49">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="45:51"><block_content pos:start="43:17" pos:end="45:51">

                <expr_stmt pos:start="43:17" pos:end="45:51"><expr pos:start="43:17" pos:end="45:50"><call pos:start="43:17" pos:end="45:50"><name pos:start="43:17" pos:end="43:32">svq3_mc_dir_part</name><argument_list pos:start="43:33" pos:end="45:50">(<argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><name pos:start="43:34" pos:end="43:34">s</name></expr></argument>, <argument pos:start="43:37" pos:end="43:48"><expr pos:start="43:37" pos:end="43:48"><literal type="number" pos:start="43:37" pos:end="43:38">16</literal> <operator pos:start="43:40" pos:end="43:40">*</operator> <name pos:start="43:42" pos:end="43:48"><name pos:start="43:42" pos:end="43:42">h</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:48">mb_x</name></name></expr></argument>, <argument pos:start="43:51" pos:end="43:62"><expr pos:start="43:51" pos:end="43:62"><literal type="number" pos:start="43:51" pos:end="43:52">16</literal> <operator pos:start="43:54" pos:end="43:54">*</operator> <name pos:start="43:56" pos:end="43:62"><name pos:start="43:56" pos:end="43:56">h</name><operator pos:start="43:57" pos:end="43:58">-&gt;</operator><name pos:start="43:59" pos:end="43:62">mb_y</name></name></expr></argument>, <argument pos:start="43:65" pos:end="43:66"><expr pos:start="43:65" pos:end="43:66"><literal type="number" pos:start="43:65" pos:end="43:66">16</literal></expr></argument>, <argument pos:start="43:69" pos:end="43:70"><expr pos:start="43:69" pos:end="43:70"><literal type="number" pos:start="43:69" pos:end="43:70">16</literal></expr></argument>,

                                 <argument pos:start="45:34" pos:end="45:34"><expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">0</literal></expr></argument>, <argument pos:start="45:37" pos:end="45:37"><expr pos:start="45:37" pos:end="45:37"><literal type="number" pos:start="45:37" pos:end="45:37">0</literal></expr></argument>, <argument pos:start="45:40" pos:end="45:40"><expr pos:start="45:40" pos:end="45:40"><literal type="number" pos:start="45:40" pos:end="45:40">0</literal></expr></argument>, <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr></argument>, <argument pos:start="45:46" pos:end="45:46"><expr pos:start="45:46" pos:end="45:46"><literal type="number" pos:start="45:46" pos:end="45:46">1</literal></expr></argument>, <argument pos:start="45:49" pos:end="45:49"><expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:19">mb_type</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:34">MB_TYPE_SKIP</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="67:9">else <block pos:start="51:16" pos:end="67:9">{<block_content pos:start="53:13" pos:end="65:36">

            <expr_stmt pos:start="53:13" pos:end="53:60"><expr pos:start="53:13" pos:end="53:59"><name pos:start="53:13" pos:end="53:19">mb_type</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:59"><name pos:start="53:23" pos:end="53:27">FFMIN</name><argument_list pos:start="53:28" pos:end="53:59">(<argument pos:start="53:29" pos:end="53:55"><expr pos:start="53:29" pos:end="53:55"><name pos:start="53:29" pos:end="53:55"><name pos:start="53:29" pos:end="53:29">s</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:39">next_pic</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:48">mb_type</name><index pos:start="53:49" pos:end="53:55">[<expr pos:start="53:50" pos:end="53:54"><name pos:start="53:50" pos:end="53:54">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="53:58" pos:end="53:58"><expr pos:start="53:58" pos:end="53:58"><literal type="number" pos:start="53:58" pos:end="53:58">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="57:26"><if pos:start="55:13" pos:end="57:26">if <condition pos:start="55:16" pos:end="55:64">(<expr pos:start="55:17" pos:end="55:63"><call pos:start="55:17" pos:end="55:59"><name pos:start="55:17" pos:end="55:27">svq3_mc_dir</name><argument_list pos:start="55:28" pos:end="55:59">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">s</name></expr></argument>, <argument pos:start="55:32" pos:end="55:38"><expr pos:start="55:32" pos:end="55:38"><name pos:start="55:32" pos:end="55:38">mb_type</name></expr></argument>, <argument pos:start="55:41" pos:end="55:52"><expr pos:start="55:41" pos:end="55:52"><name pos:start="55:41" pos:end="55:52">PREDICT_MODE</name></expr></argument>, <argument pos:start="55:55" pos:end="55:55"><expr pos:start="55:55" pos:end="55:55"><literal type="number" pos:start="55:55" pos:end="55:55">0</literal></expr></argument>, <argument pos:start="55:58" pos:end="55:58"><expr pos:start="55:58" pos:end="55:58"><literal type="number" pos:start="55:58" pos:end="55:58">0</literal></expr></argument>)</argument_list></call> <operator pos:start="55:61" pos:end="55:61">&lt;</operator> <literal type="number" pos:start="55:63" pos:end="55:63">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:26"><block_content pos:start="57:17" pos:end="57:26">

                <return pos:start="57:17" pos:end="57:26">return <expr pos:start="57:24" pos:end="57:25"><operator pos:start="57:24" pos:end="57:24">-</operator><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="61:26"><if pos:start="59:13" pos:end="61:26">if <condition pos:start="59:16" pos:end="59:64">(<expr pos:start="59:17" pos:end="59:63"><call pos:start="59:17" pos:end="59:59"><name pos:start="59:17" pos:end="59:27">svq3_mc_dir</name><argument_list pos:start="59:28" pos:end="59:59">(<argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><name pos:start="59:29" pos:end="59:29">s</name></expr></argument>, <argument pos:start="59:32" pos:end="59:38"><expr pos:start="59:32" pos:end="59:38"><name pos:start="59:32" pos:end="59:38">mb_type</name></expr></argument>, <argument pos:start="59:41" pos:end="59:52"><expr pos:start="59:41" pos:end="59:52"><name pos:start="59:41" pos:end="59:52">PREDICT_MODE</name></expr></argument>, <argument pos:start="59:55" pos:end="59:55"><expr pos:start="59:55" pos:end="59:55"><literal type="number" pos:start="59:55" pos:end="59:55">1</literal></expr></argument>, <argument pos:start="59:58" pos:end="59:58"><expr pos:start="59:58" pos:end="59:58"><literal type="number" pos:start="59:58" pos:end="59:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="59:61" pos:end="59:61">&lt;</operator> <literal type="number" pos:start="59:63" pos:end="59:63">0</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:26"><block_content pos:start="61:17" pos:end="61:26">

                <return pos:start="61:17" pos:end="61:26">return <expr pos:start="61:24" pos:end="61:25"><operator pos:start="61:24" pos:end="61:24">-</operator><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:36"><expr pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:19">mb_type</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:35">MB_TYPE_16x16</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="69:7" pos:end="231:5">else if <condition pos:start="69:15" pos:end="69:27">(<expr pos:start="69:16" pos:end="69:26"><name pos:start="69:16" pos:end="69:22">mb_type</name> <operator pos:start="69:24" pos:end="69:24">&lt;</operator> <literal type="number" pos:start="69:26" pos:end="69:26">8</literal></expr>)</condition> <block pos:start="69:29" pos:end="231:5">{<block_content pos:start="71:9" pos:end="229:32">     <comment type="block" pos:start="69:35" pos:end="69:45">/* INTER */</comment>

        <if_stmt pos:start="71:9" pos:end="83:32"><if pos:start="71:9" pos:end="73:33">if <condition pos:start="71:12" pos:end="71:70">(<expr pos:start="71:13" pos:end="71:69"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:28">thirdpel_flag</name></name> <operator pos:start="71:30" pos:end="71:31">&amp;&amp;</operator> <name pos:start="71:33" pos:end="71:47"><name pos:start="71:33" pos:end="71:33">s</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:47">halfpel_flag</name></name> <operator pos:start="71:49" pos:end="71:50">==</operator> <operator pos:start="71:52" pos:end="71:52">!</operator><call pos:start="71:53" pos:end="71:69"><name pos:start="71:53" pos:end="71:61">get_bits1</name><argument_list pos:start="71:62" pos:end="71:69">(<argument pos:start="71:63" pos:end="71:68"><expr pos:start="71:63" pos:end="71:68"><operator pos:start="71:63" pos:end="71:63">&amp;</operator><name pos:start="71:64" pos:end="71:68"><name pos:start="71:64" pos:end="71:64">h</name><operator pos:start="71:65" pos:end="71:66">-&gt;</operator><name pos:start="71:67" pos:end="71:68">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:33"><block_content pos:start="73:13" pos:end="73:33">

            <expr_stmt pos:start="73:13" pos:end="73:33"><expr pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:16">mode</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:32">THIRDPEL_MODE</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="75:9" pos:end="79:32">else if <condition pos:start="75:17" pos:end="77:56">(<expr pos:start="75:18" pos:end="77:55"><name pos:start="75:18" pos:end="75:32"><name pos:start="75:18" pos:end="75:18">s</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:32">halfpel_flag</name></name> <operator pos:start="75:34" pos:end="75:35">&amp;&amp;</operator>

                 <name pos:start="77:18" pos:end="77:33"><name pos:start="77:18" pos:end="77:18">s</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:33">thirdpel_flag</name></name> <operator pos:start="77:35" pos:end="77:36">==</operator> <operator pos:start="77:38" pos:end="77:38">!</operator><call pos:start="77:39" pos:end="77:55"><name pos:start="77:39" pos:end="77:47">get_bits1</name><argument_list pos:start="77:48" pos:end="77:55">(<argument pos:start="77:49" pos:end="77:54"><expr pos:start="77:49" pos:end="77:54"><operator pos:start="77:49" pos:end="77:49">&amp;</operator><name pos:start="77:50" pos:end="77:54"><name pos:start="77:50" pos:end="77:50">h</name><operator pos:start="77:51" pos:end="77:52">-&gt;</operator><name pos:start="77:53" pos:end="77:54">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:32"><block_content pos:start="79:13" pos:end="79:32">

            <expr_stmt pos:start="79:13" pos:end="79:32"><expr pos:start="79:13" pos:end="79:31"><name pos:start="79:13" pos:end="79:16">mode</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:31">HALFPEL_MODE</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="81:9" pos:end="83:32">else<block type="pseudo" pos:start="83:13" pos:end="83:32"><block_content pos:start="83:13" pos:end="83:32">

            <expr_stmt pos:start="83:13" pos:end="83:32"><expr pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:16">mode</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:31">FULLPEL_MODE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="87:9" pos:end="87:25">/* fill caches */</comment>

        <comment type="block" pos:start="89:9" pos:end="101:11">/* note ref_cache should contain here:

         *  ????????

         *  ???11111

         *  N??11111

         *  N??11111

         *  N??11111

         */</comment>



        <for pos:start="105:9" pos:end="179:9">for <control pos:start="105:13" pos:end="105:31">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">m</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:26"><expr pos:start="105:21" pos:end="105:25"><name pos:start="105:21" pos:end="105:21">m</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <literal type="number" pos:start="105:25" pos:end="105:25">2</literal></expr>;</condition> <incr pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:28">m</name><operator pos:start="105:29" pos:end="105:30">++</operator></expr></incr>)</control> <block pos:start="105:33" pos:end="179:9">{<block_content pos:start="107:13" pos:end="177:22">

            <if_stmt pos:start="107:13" pos:end="121:13"><if pos:start="107:13" pos:end="115:13">if <condition pos:start="107:16" pos:end="107:87">(<expr pos:start="107:17" pos:end="107:86"><name pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:17">h</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:23">mb_x</name></name> <operator pos:start="107:25" pos:end="107:25">&gt;</operator> <literal type="number" pos:start="107:27" pos:end="107:27">0</literal> <operator pos:start="107:29" pos:end="107:30">&amp;&amp;</operator> <name pos:start="107:32" pos:end="107:80"><name pos:start="107:32" pos:end="107:32">h</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:52">intra4x4_pred_mode</name><index pos:start="107:53" pos:end="107:80">[<expr pos:start="107:54" pos:end="107:79"><name pos:start="107:54" pos:end="107:75"><name pos:start="107:54" pos:end="107:54">h</name><operator pos:start="107:55" pos:end="107:56">-&gt;</operator><name pos:start="107:57" pos:end="107:64">mb2br_xy</name><index pos:start="107:65" pos:end="107:75">[<expr pos:start="107:66" pos:end="107:74"><name pos:start="107:66" pos:end="107:70">mb_xy</name> <operator pos:start="107:72" pos:end="107:72">-</operator> <literal type="number" pos:start="107:74" pos:end="107:74">1</literal></expr>]</index></name> <operator pos:start="107:77" pos:end="107:77">+</operator> <literal type="number" pos:start="107:79" pos:end="107:79">6</literal></expr>]</index></name> <operator pos:start="107:82" pos:end="107:83">!=</operator> <operator pos:start="107:85" pos:end="107:85">-</operator><literal type="number" pos:start="107:86" pos:end="107:86">1</literal></expr>)</condition> <block pos:start="107:89" pos:end="115:13">{<block_content pos:start="109:17" pos:end="113:84">

                <for pos:start="109:17" pos:end="113:84">for <control pos:start="109:21" pos:end="109:39">(<init pos:start="109:22" pos:end="109:27"><expr pos:start="109:22" pos:end="109:26"><name pos:start="109:22" pos:end="109:22">i</name> <operator pos:start="109:24" pos:end="109:24">=</operator> <literal type="number" pos:start="109:26" pos:end="109:26">0</literal></expr>;</init> <condition pos:start="109:29" pos:end="109:34"><expr pos:start="109:29" pos:end="109:33"><name pos:start="109:29" pos:end="109:29">i</name> <operator pos:start="109:31" pos:end="109:31">&lt;</operator> <literal type="number" pos:start="109:33" pos:end="109:33">4</literal></expr>;</condition> <incr pos:start="109:36" pos:end="109:38"><expr pos:start="109:36" pos:end="109:38"><name pos:start="109:36" pos:end="109:36">i</name><operator pos:start="109:37" pos:end="109:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="111:21" pos:end="113:84"><block_content pos:start="111:21" pos:end="113:84">

                    <expr_stmt pos:start="111:21" pos:end="113:84"><expr pos:start="111:21" pos:end="113:83"><call pos:start="111:21" pos:end="113:83"><name pos:start="111:21" pos:end="111:29">AV_COPY32</name><argument_list pos:start="111:30" pos:end="113:83">(<argument pos:start="111:31" pos:end="111:66"><expr pos:start="111:31" pos:end="111:66"><name pos:start="111:31" pos:end="111:66"><name pos:start="111:31" pos:end="111:31">h</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:41">mv_cache</name><index pos:start="111:42" pos:end="111:44">[<expr pos:start="111:43" pos:end="111:43"><name pos:start="111:43" pos:end="111:43">m</name></expr>]</index><index pos:start="111:45" pos:end="111:66">[<expr pos:start="111:46" pos:end="111:65"><name pos:start="111:46" pos:end="111:53"><name pos:start="111:46" pos:end="111:50">scan8</name><index pos:start="111:51" pos:end="111:53">[<expr pos:start="111:52" pos:end="111:52"><literal type="number" pos:start="111:52" pos:end="111:52">0</literal></expr>]</index></name> <operator pos:start="111:55" pos:end="111:55">-</operator> <literal type="number" pos:start="111:57" pos:end="111:59">1</literal> <operator pos:start="111:59" pos:end="111:59">+</operator> <name pos:start="111:61" pos:end="111:61">i</name> <operator pos:start="111:63" pos:end="111:63">*</operator> <literal type="number" pos:start="111:65" pos:end="111:65">8</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="113:31" pos:end="113:82"><expr pos:start="113:31" pos:end="113:82"><name pos:start="113:31" pos:end="113:82"><name pos:start="113:31" pos:end="113:31">h</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:40">cur_pic</name><operator pos:start="113:41" pos:end="113:41">.</operator><name pos:start="113:42" pos:end="113:51">motion_val</name><index pos:start="113:52" pos:end="113:54">[<expr pos:start="113:53" pos:end="113:53"><name pos:start="113:53" pos:end="113:53">m</name></expr>]</index><index pos:start="113:55" pos:end="113:82">[<expr pos:start="113:56" pos:end="113:81"><name pos:start="113:56" pos:end="113:59">b_xy</name> <operator pos:start="113:61" pos:end="113:61">-</operator> <literal type="number" pos:start="113:63" pos:end="113:65">1</literal> <operator pos:start="113:65" pos:end="113:65">+</operator> <name pos:start="113:67" pos:end="113:67">i</name> <operator pos:start="113:69" pos:end="113:69">*</operator> <name pos:start="113:71" pos:end="113:81"><name pos:start="113:71" pos:end="113:71">h</name><operator pos:start="113:72" pos:end="113:73">-&gt;</operator><name pos:start="113:74" pos:end="113:81">b_stride</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="115:15" pos:end="121:13">else <block pos:start="115:20" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:68">

                <for pos:start="117:17" pos:end="119:68">for <control pos:start="117:21" pos:end="117:39">(<init pos:start="117:22" pos:end="117:27"><expr pos:start="117:22" pos:end="117:26"><name pos:start="117:22" pos:end="117:22">i</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <literal type="number" pos:start="117:26" pos:end="117:26">0</literal></expr>;</init> <condition pos:start="117:29" pos:end="117:34"><expr pos:start="117:29" pos:end="117:33"><name pos:start="117:29" pos:end="117:29">i</name> <operator pos:start="117:31" pos:end="117:31">&lt;</operator> <literal type="number" pos:start="117:33" pos:end="117:33">4</literal></expr>;</condition> <incr pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:36">i</name><operator pos:start="117:37" pos:end="117:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="119:21" pos:end="119:68"><block_content pos:start="119:21" pos:end="119:68">

                    <expr_stmt pos:start="119:21" pos:end="119:68"><expr pos:start="119:21" pos:end="119:67"><call pos:start="119:21" pos:end="119:67"><name pos:start="119:21" pos:end="119:29">AV_ZERO32</name><argument_list pos:start="119:30" pos:end="119:67">(<argument pos:start="119:31" pos:end="119:66"><expr pos:start="119:31" pos:end="119:66"><name pos:start="119:31" pos:end="119:66"><name pos:start="119:31" pos:end="119:31">h</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:41">mv_cache</name><index pos:start="119:42" pos:end="119:44">[<expr pos:start="119:43" pos:end="119:43"><name pos:start="119:43" pos:end="119:43">m</name></expr>]</index><index pos:start="119:45" pos:end="119:66">[<expr pos:start="119:46" pos:end="119:65"><name pos:start="119:46" pos:end="119:53"><name pos:start="119:46" pos:end="119:50">scan8</name><index pos:start="119:51" pos:end="119:53">[<expr pos:start="119:52" pos:end="119:52"><literal type="number" pos:start="119:52" pos:end="119:52">0</literal></expr>]</index></name> <operator pos:start="119:55" pos:end="119:55">-</operator> <literal type="number" pos:start="119:57" pos:end="119:59">1</literal> <operator pos:start="119:59" pos:end="119:59">+</operator> <name pos:start="119:61" pos:end="119:61">i</name> <operator pos:start="119:63" pos:end="119:63">*</operator> <literal type="number" pos:start="119:65" pos:end="119:65">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="123:13" pos:end="171:46"><if pos:start="123:13" pos:end="167:13">if <condition pos:start="123:16" pos:end="123:28">(<expr pos:start="123:17" pos:end="123:27"><name pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:17">h</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:23">mb_y</name></name> <operator pos:start="123:25" pos:end="123:25">&gt;</operator> <literal type="number" pos:start="123:27" pos:end="123:27">0</literal></expr>)</condition> <block pos:start="123:30" pos:end="167:13">{<block_content pos:start="125:17" pos:end="165:79">

                <expr_stmt pos:start="125:17" pos:end="129:48"><expr pos:start="125:17" pos:end="129:47"><call pos:start="125:17" pos:end="129:47"><name pos:start="125:17" pos:end="125:22">memcpy</name><argument_list pos:start="125:23" pos:end="129:47">(<argument pos:start="125:24" pos:end="125:55"><expr pos:start="125:24" pos:end="125:55"><name pos:start="125:24" pos:end="125:55"><name pos:start="125:24" pos:end="125:24">h</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:34">mv_cache</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><name pos:start="125:36" pos:end="125:36">m</name></expr>]</index><index pos:start="125:38" pos:end="125:55">[<expr pos:start="125:39" pos:end="125:54"><name pos:start="125:39" pos:end="125:46"><name pos:start="125:39" pos:end="125:43">scan8</name><index pos:start="125:44" pos:end="125:46">[<expr pos:start="125:45" pos:end="125:45"><literal type="number" pos:start="125:45" pos:end="125:45">0</literal></expr>]</index></name> <operator pos:start="125:48" pos:end="125:48">-</operator> <literal type="number" pos:start="125:50" pos:end="125:50">1</literal> <operator pos:start="125:52" pos:end="125:52">*</operator> <literal type="number" pos:start="125:54" pos:end="125:54">8</literal></expr>]</index></name></expr></argument>,

                       <argument pos:start="127:24" pos:end="127:67"><expr pos:start="127:24" pos:end="127:67"><name pos:start="127:24" pos:end="127:67"><name pos:start="127:24" pos:end="127:24">h</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:33">cur_pic</name><operator pos:start="127:34" pos:end="127:34">.</operator><name pos:start="127:35" pos:end="127:44">motion_val</name><index pos:start="127:45" pos:end="127:47">[<expr pos:start="127:46" pos:end="127:46"><name pos:start="127:46" pos:end="127:46">m</name></expr>]</index><index pos:start="127:48" pos:end="127:67">[<expr pos:start="127:49" pos:end="127:66"><name pos:start="127:49" pos:end="127:52">b_xy</name> <operator pos:start="127:54" pos:end="127:54">-</operator> <name pos:start="127:56" pos:end="127:66"><name pos:start="127:56" pos:end="127:56">h</name><operator pos:start="127:57" pos:end="127:58">-&gt;</operator><name pos:start="127:59" pos:end="127:66">b_stride</name></name></expr>]</index></name></expr></argument>,

                       <argument pos:start="129:24" pos:end="129:46"><expr pos:start="129:24" pos:end="129:46"><literal type="number" pos:start="129:24" pos:end="129:24">4</literal> <operator pos:start="129:26" pos:end="129:26">*</operator> <literal type="number" pos:start="129:28" pos:end="129:28">2</literal> <operator pos:start="129:30" pos:end="129:30">*</operator> <sizeof pos:start="129:32" pos:end="129:46">sizeof<argument_list pos:start="129:38" pos:end="129:46">(<argument pos:start="129:39" pos:end="129:45"><expr pos:start="129:39" pos:end="129:45"><name pos:start="129:39" pos:end="129:45">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="133:117"><expr pos:start="131:17" pos:end="133:116"><call pos:start="131:17" pos:end="133:116"><name pos:start="131:17" pos:end="131:22">memset</name><argument_list pos:start="131:23" pos:end="133:116">(<argument pos:start="131:24" pos:end="131:57"><expr pos:start="131:24" pos:end="131:57"><operator pos:start="131:24" pos:end="131:24">&amp;</operator><name pos:start="131:25" pos:end="131:57"><name pos:start="131:25" pos:end="131:25">h</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:36">ref_cache</name><index pos:start="131:37" pos:end="131:39">[<expr pos:start="131:38" pos:end="131:38"><name pos:start="131:38" pos:end="131:38">m</name></expr>]</index><index pos:start="131:40" pos:end="131:57">[<expr pos:start="131:41" pos:end="131:56"><name pos:start="131:41" pos:end="131:48"><name pos:start="131:41" pos:end="131:45">scan8</name><index pos:start="131:46" pos:end="131:48">[<expr pos:start="131:47" pos:end="131:47"><literal type="number" pos:start="131:47" pos:end="131:47">0</literal></expr>]</index></name> <operator pos:start="131:50" pos:end="131:50">-</operator> <literal type="number" pos:start="131:52" pos:end="131:52">1</literal> <operator pos:start="131:54" pos:end="131:54">*</operator> <literal type="number" pos:start="131:56" pos:end="131:56">8</literal></expr>]</index></name></expr></argument>,

                       <argument pos:start="133:24" pos:end="133:112"><expr pos:start="133:24" pos:end="133:112"><ternary pos:start="133:24" pos:end="133:112"><condition pos:start="133:24" pos:end="133:89"><expr pos:start="133:24" pos:end="133:87"><operator pos:start="133:24" pos:end="133:24">(</operator><name pos:start="133:25" pos:end="133:80"><name pos:start="133:25" pos:end="133:25">h</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:45">intra4x4_pred_mode</name><index pos:start="133:46" pos:end="133:80">[<expr pos:start="133:47" pos:end="133:79"><name pos:start="133:47" pos:end="133:79"><name pos:start="133:47" pos:end="133:47">h</name><operator pos:start="133:48" pos:end="133:49">-&gt;</operator><name pos:start="133:50" pos:end="133:57">mb2br_xy</name><index pos:start="133:58" pos:end="133:79">[<expr pos:start="133:59" pos:end="133:78"><name pos:start="133:59" pos:end="133:63">mb_xy</name> <operator pos:start="133:65" pos:end="133:65">-</operator> <name pos:start="133:67" pos:end="133:78"><name pos:start="133:67" pos:end="133:67">h</name><operator pos:start="133:68" pos:end="133:69">-&gt;</operator><name pos:start="133:70" pos:end="133:78">mb_stride</name></name></expr>]</index></name></expr>]</index></name> <operator pos:start="133:82" pos:end="133:83">==</operator> <operator pos:start="133:85" pos:end="133:85">-</operator><literal type="number" pos:start="133:86" pos:end="133:86">1</literal><operator pos:start="133:87" pos:end="133:87">)</operator></expr> ?</condition><then pos:start="133:91" pos:end="133:108"> <expr pos:start="133:91" pos:end="133:108"><name pos:start="133:91" pos:end="133:108">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="133:110" pos:end="133:112">: <expr pos:start="133:112" pos:end="133:112"><literal type="number" pos:start="133:112" pos:end="133:112">1</literal></expr></else></ternary></expr></argument>, <argument pos:start="133:115" pos:end="133:115"><expr pos:start="133:115" pos:end="133:115"><literal type="number" pos:start="133:115" pos:end="133:115">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="137:17" pos:end="151:79"><if pos:start="137:17" pos:end="149:17">if <condition pos:start="137:20" pos:end="137:46">(<expr pos:start="137:21" pos:end="137:45"><name pos:start="137:21" pos:end="137:27"><name pos:start="137:21" pos:end="137:21">h</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:27">mb_x</name></name> <operator pos:start="137:29" pos:end="137:29">&lt;</operator> <name pos:start="137:31" pos:end="137:41"><name pos:start="137:31" pos:end="137:31">h</name><operator pos:start="137:32" pos:end="137:33">-&gt;</operator><name pos:start="137:34" pos:end="137:41">mb_width</name></name> <operator pos:start="137:43" pos:end="137:43">-</operator> <literal type="number" pos:start="137:45" pos:end="137:45">1</literal></expr>)</condition> <block pos:start="137:48" pos:end="149:17">{<block_content pos:start="139:21" pos:end="147:114">

                    <expr_stmt pos:start="139:21" pos:end="141:80"><expr pos:start="139:21" pos:end="141:79"><call pos:start="139:21" pos:end="141:79"><name pos:start="139:21" pos:end="139:29">AV_COPY32</name><argument_list pos:start="139:30" pos:end="141:79">(<argument pos:start="139:31" pos:end="139:66"><expr pos:start="139:31" pos:end="139:66"><name pos:start="139:31" pos:end="139:66"><name pos:start="139:31" pos:end="139:31">h</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:41">mv_cache</name><index pos:start="139:42" pos:end="139:44">[<expr pos:start="139:43" pos:end="139:43"><name pos:start="139:43" pos:end="139:43">m</name></expr>]</index><index pos:start="139:45" pos:end="139:66">[<expr pos:start="139:46" pos:end="139:65"><name pos:start="139:46" pos:end="139:53"><name pos:start="139:46" pos:end="139:50">scan8</name><index pos:start="139:51" pos:end="139:53">[<expr pos:start="139:52" pos:end="139:52"><literal type="number" pos:start="139:52" pos:end="139:52">0</literal></expr>]</index></name> <operator pos:start="139:55" pos:end="139:55">+</operator> <literal type="number" pos:start="139:57" pos:end="139:59">4</literal> <operator pos:start="139:59" pos:end="139:59">-</operator> <literal type="number" pos:start="139:61" pos:end="139:61">1</literal> <operator pos:start="139:63" pos:end="139:63">*</operator> <literal type="number" pos:start="139:65" pos:end="139:65">8</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="141:31" pos:end="141:78"><expr pos:start="141:31" pos:end="141:78"><name pos:start="141:31" pos:end="141:78"><name pos:start="141:31" pos:end="141:31">h</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:40">cur_pic</name><operator pos:start="141:41" pos:end="141:41">.</operator><name pos:start="141:42" pos:end="141:51">motion_val</name><index pos:start="141:52" pos:end="141:54">[<expr pos:start="141:53" pos:end="141:53"><name pos:start="141:53" pos:end="141:53">m</name></expr>]</index><index pos:start="141:55" pos:end="141:78">[<expr pos:start="141:56" pos:end="141:77"><name pos:start="141:56" pos:end="141:59">b_xy</name> <operator pos:start="141:61" pos:end="141:61">-</operator> <name pos:start="141:63" pos:end="141:73"><name pos:start="141:63" pos:end="141:63">h</name><operator pos:start="141:64" pos:end="141:65">-&gt;</operator><name pos:start="141:66" pos:end="141:73">b_stride</name></name> <operator pos:start="141:75" pos:end="141:75">+</operator> <literal type="number" pos:start="141:77" pos:end="141:77">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="147:114"><expr pos:start="143:21" pos:end="147:113"><name pos:start="143:21" pos:end="143:57"><name pos:start="143:21" pos:end="143:21">h</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:32">ref_cache</name><index pos:start="143:33" pos:end="143:35">[<expr pos:start="143:34" pos:end="143:34"><name pos:start="143:34" pos:end="143:34">m</name></expr>]</index><index pos:start="143:36" pos:end="143:57">[<expr pos:start="143:37" pos:end="143:56"><name pos:start="143:37" pos:end="143:44"><name pos:start="143:37" pos:end="143:41">scan8</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><literal type="number" pos:start="143:43" pos:end="143:43">0</literal></expr>]</index></name> <operator pos:start="143:46" pos:end="143:46">+</operator> <literal type="number" pos:start="143:48" pos:end="143:48">4</literal> <operator pos:start="143:50" pos:end="143:50">-</operator> <literal type="number" pos:start="143:52" pos:end="143:52">1</literal> <operator pos:start="143:54" pos:end="143:54">*</operator> <literal type="number" pos:start="143:56" pos:end="143:56">8</literal></expr>]</index></name> <operator pos:start="143:59" pos:end="143:59">=</operator>

                        <ternary pos:start="145:25" pos:end="147:113"><condition pos:start="145:25" pos:end="147:90"><expr pos:start="145:25" pos:end="147:88"><operator pos:start="145:25" pos:end="145:25">(</operator><name pos:start="145:26" pos:end="145:89"><name pos:start="145:26" pos:end="145:26">h</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:46">intra4x4_pred_mode</name><index pos:start="145:47" pos:end="145:89">[<expr pos:start="145:48" pos:end="145:88"><name pos:start="145:48" pos:end="145:84"><name pos:start="145:48" pos:end="145:48">h</name><operator pos:start="145:49" pos:end="145:50">-&gt;</operator><name pos:start="145:51" pos:end="145:58">mb2br_xy</name><index pos:start="145:59" pos:end="145:84">[<expr pos:start="145:60" pos:end="145:83"><name pos:start="145:60" pos:end="145:64">mb_xy</name> <operator pos:start="145:66" pos:end="145:66">-</operator> <name pos:start="145:68" pos:end="145:79"><name pos:start="145:68" pos:end="145:68">h</name><operator pos:start="145:69" pos:end="145:70">-&gt;</operator><name pos:start="145:71" pos:end="145:79">mb_stride</name></name> <operator pos:start="145:81" pos:end="145:81">+</operator> <literal type="number" pos:start="145:83" pos:end="145:83">1</literal></expr>]</index></name> <operator pos:start="145:86" pos:end="145:86">+</operator> <literal type="number" pos:start="145:88" pos:end="145:88">6</literal></expr>]</index></name> <operator pos:start="145:91" pos:end="145:92">==</operator> <operator pos:start="145:94" pos:end="145:94">-</operator><literal type="number" pos:start="145:95" pos:end="145:95">1</literal> <operator pos:start="145:97" pos:end="145:98">||</operator>

                         <name pos:start="147:26" pos:end="147:81"><name pos:start="147:26" pos:end="147:26">h</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:46">intra4x4_pred_mode</name><index pos:start="147:47" pos:end="147:81">[<expr pos:start="147:48" pos:end="147:80"><name pos:start="147:48" pos:end="147:80"><name pos:start="147:48" pos:end="147:48">h</name><operator pos:start="147:49" pos:end="147:50">-&gt;</operator><name pos:start="147:51" pos:end="147:58">mb2br_xy</name><index pos:start="147:59" pos:end="147:80">[<expr pos:start="147:60" pos:end="147:79"><name pos:start="147:60" pos:end="147:64">mb_xy</name> <operator pos:start="147:66" pos:end="147:66">-</operator> <name pos:start="147:68" pos:end="147:79"><name pos:start="147:68" pos:end="147:68">h</name><operator pos:start="147:69" pos:end="147:70">-&gt;</operator><name pos:start="147:71" pos:end="147:79">mb_stride</name></name></expr>]</index></name></expr>]</index></name> <operator pos:start="147:83" pos:end="147:84">==</operator> <operator pos:start="147:86" pos:end="147:86">-</operator><literal type="number" pos:start="147:87" pos:end="147:87">1</literal><operator pos:start="147:88" pos:end="147:88">)</operator></expr> ?</condition><then pos:start="147:92" pos:end="147:109"> <expr pos:start="147:92" pos:end="147:109"><name pos:start="147:92" pos:end="147:109">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="147:111" pos:end="147:113">: <expr pos:start="147:113" pos:end="147:113"><literal type="number" pos:start="147:113" pos:end="147:113">1</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="149:19" pos:end="151:79">else<block type="pseudo" pos:start="151:21" pos:end="151:79"><block_content pos:start="151:21" pos:end="151:79">

                    <expr_stmt pos:start="151:21" pos:end="151:79"><expr pos:start="151:21" pos:end="151:78"><name pos:start="151:21" pos:end="151:57"><name pos:start="151:21" pos:end="151:21">h</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:32">ref_cache</name><index pos:start="151:33" pos:end="151:35">[<expr pos:start="151:34" pos:end="151:34"><name pos:start="151:34" pos:end="151:34">m</name></expr>]</index><index pos:start="151:36" pos:end="151:57">[<expr pos:start="151:37" pos:end="151:56"><name pos:start="151:37" pos:end="151:44"><name pos:start="151:37" pos:end="151:41">scan8</name><index pos:start="151:42" pos:end="151:44">[<expr pos:start="151:43" pos:end="151:43"><literal type="number" pos:start="151:43" pos:end="151:43">0</literal></expr>]</index></name> <operator pos:start="151:46" pos:end="151:46">+</operator> <literal type="number" pos:start="151:48" pos:end="151:48">4</literal> <operator pos:start="151:50" pos:end="151:50">-</operator> <literal type="number" pos:start="151:52" pos:end="151:52">1</literal> <operator pos:start="151:54" pos:end="151:54">*</operator> <literal type="number" pos:start="151:56" pos:end="151:56">8</literal></expr>]</index></name> <operator pos:start="151:59" pos:end="151:59">=</operator> <name pos:start="151:61" pos:end="151:78">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="153:17" pos:end="165:79"><if pos:start="153:17" pos:end="163:17">if <condition pos:start="153:20" pos:end="153:32">(<expr pos:start="153:21" pos:end="153:31"><name pos:start="153:21" pos:end="153:27"><name pos:start="153:21" pos:end="153:21">h</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:27">mb_x</name></name> <operator pos:start="153:29" pos:end="153:29">&gt;</operator> <literal type="number" pos:start="153:31" pos:end="153:31">0</literal></expr>)</condition> <block pos:start="153:34" pos:end="163:17">{<block_content pos:start="155:21" pos:end="161:122">

                    <expr_stmt pos:start="155:21" pos:end="157:80"><expr pos:start="155:21" pos:end="157:79"><call pos:start="155:21" pos:end="157:79"><name pos:start="155:21" pos:end="155:29">AV_COPY32</name><argument_list pos:start="155:30" pos:end="157:79">(<argument pos:start="155:31" pos:end="155:66"><expr pos:start="155:31" pos:end="155:66"><name pos:start="155:31" pos:end="155:66"><name pos:start="155:31" pos:end="155:31">h</name><operator pos:start="155:32" pos:end="155:33">-&gt;</operator><name pos:start="155:34" pos:end="155:41">mv_cache</name><index pos:start="155:42" pos:end="155:44">[<expr pos:start="155:43" pos:end="155:43"><name pos:start="155:43" pos:end="155:43">m</name></expr>]</index><index pos:start="155:45" pos:end="155:66">[<expr pos:start="155:46" pos:end="155:65"><name pos:start="155:46" pos:end="155:53"><name pos:start="155:46" pos:end="155:50">scan8</name><index pos:start="155:51" pos:end="155:53">[<expr pos:start="155:52" pos:end="155:52"><literal type="number" pos:start="155:52" pos:end="155:52">0</literal></expr>]</index></name> <operator pos:start="155:55" pos:end="155:55">-</operator> <literal type="number" pos:start="155:57" pos:end="155:59">1</literal> <operator pos:start="155:59" pos:end="155:59">-</operator> <literal type="number" pos:start="155:61" pos:end="155:61">1</literal> <operator pos:start="155:63" pos:end="155:63">*</operator> <literal type="number" pos:start="155:65" pos:end="155:65">8</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="157:31" pos:end="157:78"><expr pos:start="157:31" pos:end="157:78"><name pos:start="157:31" pos:end="157:78"><name pos:start="157:31" pos:end="157:31">h</name><operator pos:start="157:32" pos:end="157:33">-&gt;</operator><name pos:start="157:34" pos:end="157:40">cur_pic</name><operator pos:start="157:41" pos:end="157:41">.</operator><name pos:start="157:42" pos:end="157:51">motion_val</name><index pos:start="157:52" pos:end="157:54">[<expr pos:start="157:53" pos:end="157:53"><name pos:start="157:53" pos:end="157:53">m</name></expr>]</index><index pos:start="157:55" pos:end="157:78">[<expr pos:start="157:56" pos:end="157:77"><name pos:start="157:56" pos:end="157:59">b_xy</name> <operator pos:start="157:61" pos:end="157:61">-</operator> <name pos:start="157:63" pos:end="157:73"><name pos:start="157:63" pos:end="157:63">h</name><operator pos:start="157:64" pos:end="157:65">-&gt;</operator><name pos:start="157:66" pos:end="157:73">b_stride</name></name> <operator pos:start="157:75" pos:end="157:75">-</operator> <literal type="number" pos:start="157:77" pos:end="157:77">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="159:21" pos:end="161:122"><expr pos:start="159:21" pos:end="161:121"><name pos:start="159:21" pos:end="159:57"><name pos:start="159:21" pos:end="159:21">h</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:32">ref_cache</name><index pos:start="159:33" pos:end="159:35">[<expr pos:start="159:34" pos:end="159:34"><name pos:start="159:34" pos:end="159:34">m</name></expr>]</index><index pos:start="159:36" pos:end="159:57">[<expr pos:start="159:37" pos:end="159:56"><name pos:start="159:37" pos:end="159:44"><name pos:start="159:37" pos:end="159:41">scan8</name><index pos:start="159:42" pos:end="159:44">[<expr pos:start="159:43" pos:end="159:43"><literal type="number" pos:start="159:43" pos:end="159:43">0</literal></expr>]</index></name> <operator pos:start="159:46" pos:end="159:46">-</operator> <literal type="number" pos:start="159:48" pos:end="159:48">1</literal> <operator pos:start="159:50" pos:end="159:50">-</operator> <literal type="number" pos:start="159:52" pos:end="159:52">1</literal> <operator pos:start="159:54" pos:end="159:54">*</operator> <literal type="number" pos:start="159:56" pos:end="159:56">8</literal></expr>]</index></name> <operator pos:start="159:59" pos:end="159:59">=</operator>

                        <ternary pos:start="161:25" pos:end="161:121"><condition pos:start="161:25" pos:end="161:98"><expr pos:start="161:25" pos:end="161:96"><operator pos:start="161:25" pos:end="161:25">(</operator><name pos:start="161:26" pos:end="161:89"><name pos:start="161:26" pos:end="161:26">h</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:46">intra4x4_pred_mode</name><index pos:start="161:47" pos:end="161:89">[<expr pos:start="161:48" pos:end="161:88"><name pos:start="161:48" pos:end="161:84"><name pos:start="161:48" pos:end="161:48">h</name><operator pos:start="161:49" pos:end="161:50">-&gt;</operator><name pos:start="161:51" pos:end="161:58">mb2br_xy</name><index pos:start="161:59" pos:end="161:84">[<expr pos:start="161:60" pos:end="161:83"><name pos:start="161:60" pos:end="161:64">mb_xy</name> <operator pos:start="161:66" pos:end="161:66">-</operator> <name pos:start="161:68" pos:end="161:79"><name pos:start="161:68" pos:end="161:68">h</name><operator pos:start="161:69" pos:end="161:70">-&gt;</operator><name pos:start="161:71" pos:end="161:79">mb_stride</name></name> <operator pos:start="161:81" pos:end="161:81">-</operator> <literal type="number" pos:start="161:83" pos:end="161:83">1</literal></expr>]</index></name> <operator pos:start="161:86" pos:end="161:86">+</operator> <literal type="number" pos:start="161:88" pos:end="161:88">3</literal></expr>]</index></name> <operator pos:start="161:91" pos:end="161:92">==</operator> <operator pos:start="161:94" pos:end="161:94">-</operator><literal type="number" pos:start="161:95" pos:end="161:95">1</literal><operator pos:start="161:96" pos:end="161:96">)</operator></expr> ?</condition><then pos:start="161:100" pos:end="161:117"> <expr pos:start="161:100" pos:end="161:117"><name pos:start="161:100" pos:end="161:117">PART_NOT_AVAILABLE</name></expr> </then><else pos:start="161:119" pos:end="161:121">: <expr pos:start="161:121" pos:end="161:121"><literal type="number" pos:start="161:121" pos:end="161:121">1</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="163:19" pos:end="165:79">else<block type="pseudo" pos:start="165:21" pos:end="165:79"><block_content pos:start="165:21" pos:end="165:79">

                    <expr_stmt pos:start="165:21" pos:end="165:79"><expr pos:start="165:21" pos:end="165:78"><name pos:start="165:21" pos:end="165:57"><name pos:start="165:21" pos:end="165:21">h</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:32">ref_cache</name><index pos:start="165:33" pos:end="165:35">[<expr pos:start="165:34" pos:end="165:34"><name pos:start="165:34" pos:end="165:34">m</name></expr>]</index><index pos:start="165:36" pos:end="165:57">[<expr pos:start="165:37" pos:end="165:56"><name pos:start="165:37" pos:end="165:44"><name pos:start="165:37" pos:end="165:41">scan8</name><index pos:start="165:42" pos:end="165:44">[<expr pos:start="165:43" pos:end="165:43"><literal type="number" pos:start="165:43" pos:end="165:43">0</literal></expr>]</index></name> <operator pos:start="165:46" pos:end="165:46">-</operator> <literal type="number" pos:start="165:48" pos:end="165:48">1</literal> <operator pos:start="165:50" pos:end="165:50">-</operator> <literal type="number" pos:start="165:52" pos:end="165:52">1</literal> <operator pos:start="165:54" pos:end="165:54">*</operator> <literal type="number" pos:start="165:56" pos:end="165:56">8</literal></expr>]</index></name> <operator pos:start="165:59" pos:end="165:59">=</operator> <name pos:start="165:61" pos:end="165:78">PART_NOT_AVAILABLE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="167:15" pos:end="171:46">else<block type="pseudo" pos:start="169:17" pos:end="171:46"><block_content pos:start="169:17" pos:end="171:46">

                <expr_stmt pos:start="169:17" pos:end="171:46"><expr pos:start="169:17" pos:end="171:45"><call pos:start="169:17" pos:end="171:45"><name pos:start="169:17" pos:end="169:22">memset</name><argument_list pos:start="169:23" pos:end="171:45">(<argument pos:start="169:24" pos:end="169:61"><expr pos:start="169:24" pos:end="169:61"><operator pos:start="169:24" pos:end="169:24">&amp;</operator><name pos:start="169:25" pos:end="169:61"><name pos:start="169:25" pos:end="169:25">h</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:36">ref_cache</name><index pos:start="169:37" pos:end="169:39">[<expr pos:start="169:38" pos:end="169:38"><name pos:start="169:38" pos:end="169:38">m</name></expr>]</index><index pos:start="169:40" pos:end="169:61">[<expr pos:start="169:41" pos:end="169:60"><name pos:start="169:41" pos:end="169:48"><name pos:start="169:41" pos:end="169:45">scan8</name><index pos:start="169:46" pos:end="169:48">[<expr pos:start="169:47" pos:end="169:47"><literal type="number" pos:start="169:47" pos:end="169:47">0</literal></expr>]</index></name> <operator pos:start="169:50" pos:end="169:50">-</operator> <literal type="number" pos:start="169:52" pos:end="169:52">1</literal> <operator pos:start="169:54" pos:end="169:54">*</operator> <literal type="number" pos:start="169:56" pos:end="169:58">8</literal> <operator pos:start="169:58" pos:end="169:58">-</operator> <literal type="number" pos:start="169:60" pos:end="169:60">1</literal></expr>]</index></name></expr></argument>,

                       <argument pos:start="171:24" pos:end="171:41"><expr pos:start="171:24" pos:end="171:41"><name pos:start="171:24" pos:end="171:41">PART_NOT_AVAILABLE</name></expr></argument>, <argument pos:start="171:44" pos:end="171:44"><expr pos:start="171:44" pos:end="171:44"><literal type="number" pos:start="171:44" pos:end="171:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="175:13" pos:end="177:22"><if pos:start="175:13" pos:end="177:22">if <condition pos:start="175:16" pos:end="175:50">(<expr pos:start="175:17" pos:end="175:49"><name pos:start="175:17" pos:end="175:28"><name pos:start="175:17" pos:end="175:17">h</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:28">pict_type</name></name> <operator pos:start="175:30" pos:end="175:31">!=</operator> <name pos:start="175:33" pos:end="175:49">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:22"><block_content pos:start="177:17" pos:end="177:22">

                <break pos:start="177:17" pos:end="177:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="183:9" pos:end="183:60">/* decode motion vector(s) and form prediction(s) */</comment>

        <if_stmt pos:start="185:9" pos:end="225:9"><if pos:start="185:9" pos:end="191:9">if <condition pos:start="185:12" pos:end="185:46">(<expr pos:start="185:13" pos:end="185:45"><name pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:13">h</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:24">pict_type</name></name> <operator pos:start="185:26" pos:end="185:27">==</operator> <name pos:start="185:29" pos:end="185:45">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="185:48" pos:end="191:9">{<block_content pos:start="187:13" pos:end="189:26">

            <if_stmt pos:start="187:13" pos:end="189:26"><if pos:start="187:13" pos:end="189:26">if <condition pos:start="187:16" pos:end="187:60">(<expr pos:start="187:17" pos:end="187:59"><call pos:start="187:17" pos:end="187:55"><name pos:start="187:17" pos:end="187:27">svq3_mc_dir</name><argument_list pos:start="187:28" pos:end="187:55">(<argument pos:start="187:29" pos:end="187:29"><expr pos:start="187:29" pos:end="187:29"><name pos:start="187:29" pos:end="187:29">s</name></expr></argument>, <argument pos:start="187:32" pos:end="187:42"><expr pos:start="187:32" pos:end="187:42"><name pos:start="187:32" pos:end="187:38">mb_type</name> <operator pos:start="187:40" pos:end="187:40">-</operator> <literal type="number" pos:start="187:42" pos:end="187:42">1</literal></expr></argument>, <argument pos:start="187:45" pos:end="187:48"><expr pos:start="187:45" pos:end="187:48"><name pos:start="187:45" pos:end="187:48">mode</name></expr></argument>, <argument pos:start="187:51" pos:end="187:51"><expr pos:start="187:51" pos:end="187:51"><literal type="number" pos:start="187:51" pos:end="187:51">0</literal></expr></argument>, <argument pos:start="187:54" pos:end="187:54"><expr pos:start="187:54" pos:end="187:54"><literal type="number" pos:start="187:54" pos:end="187:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="187:57" pos:end="187:57">&lt;</operator> <literal type="number" pos:start="187:59" pos:end="187:59">0</literal></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:26"><block_content pos:start="189:17" pos:end="189:26">

                <return pos:start="189:17" pos:end="189:26">return <expr pos:start="189:24" pos:end="189:25"><operator pos:start="189:24" pos:end="189:24">-</operator><literal type="number" pos:start="189:25" pos:end="189:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="191:11" pos:end="225:9">else <block pos:start="191:16" pos:end="225:9">{<block_content pos:start="193:13" pos:end="223:13">        <comment type="block" pos:start="191:25" pos:end="191:47">/* AV_PICTURE_TYPE_B */</comment>

            <if_stmt pos:start="193:13" pos:end="207:13"><if pos:start="193:13" pos:end="199:13">if <condition pos:start="193:16" pos:end="193:29">(<expr pos:start="193:17" pos:end="193:28"><name pos:start="193:17" pos:end="193:23">mb_type</name> <operator pos:start="193:25" pos:end="193:26">!=</operator> <literal type="number" pos:start="193:28" pos:end="193:28">2</literal></expr>)</condition> <block pos:start="193:31" pos:end="199:13">{<block_content pos:start="195:17" pos:end="197:30">

                <if_stmt pos:start="195:17" pos:end="197:30"><if pos:start="195:17" pos:end="197:30">if <condition pos:start="195:20" pos:end="195:54">(<expr pos:start="195:21" pos:end="195:53"><call pos:start="195:21" pos:end="195:49"><name pos:start="195:21" pos:end="195:31">svq3_mc_dir</name><argument_list pos:start="195:32" pos:end="195:49">(<argument pos:start="195:33" pos:end="195:33"><expr pos:start="195:33" pos:end="195:33"><name pos:start="195:33" pos:end="195:33">s</name></expr></argument>, <argument pos:start="195:36" pos:end="195:36"><expr pos:start="195:36" pos:end="195:36"><literal type="number" pos:start="195:36" pos:end="195:36">0</literal></expr></argument>, <argument pos:start="195:39" pos:end="195:42"><expr pos:start="195:39" pos:end="195:42"><name pos:start="195:39" pos:end="195:42">mode</name></expr></argument>, <argument pos:start="195:45" pos:end="195:45"><expr pos:start="195:45" pos:end="195:45"><literal type="number" pos:start="195:45" pos:end="195:45">0</literal></expr></argument>, <argument pos:start="195:48" pos:end="195:48"><expr pos:start="195:48" pos:end="195:48"><literal type="number" pos:start="195:48" pos:end="195:48">0</literal></expr></argument>)</argument_list></call> <operator pos:start="195:51" pos:end="195:51">&lt;</operator> <literal type="number" pos:start="195:53" pos:end="195:53">0</literal></expr>)</condition><block type="pseudo" pos:start="197:21" pos:end="197:30"><block_content pos:start="197:21" pos:end="197:30">

                    <return pos:start="197:21" pos:end="197:30">return <expr pos:start="197:28" pos:end="197:29"><operator pos:start="197:28" pos:end="197:28">-</operator><literal type="number" pos:start="197:29" pos:end="197:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="199:15" pos:end="207:13">else <block pos:start="199:20" pos:end="207:13">{<block_content pos:start="201:17" pos:end="205:55">

                <for pos:start="201:17" pos:end="205:55">for <control pos:start="201:21" pos:end="201:39">(<init pos:start="201:22" pos:end="201:27"><expr pos:start="201:22" pos:end="201:26"><name pos:start="201:22" pos:end="201:22">i</name> <operator pos:start="201:24" pos:end="201:24">=</operator> <literal type="number" pos:start="201:26" pos:end="201:26">0</literal></expr>;</init> <condition pos:start="201:29" pos:end="201:34"><expr pos:start="201:29" pos:end="201:33"><name pos:start="201:29" pos:end="201:29">i</name> <operator pos:start="201:31" pos:end="201:31">&lt;</operator> <literal type="number" pos:start="201:33" pos:end="201:33">4</literal></expr>;</condition> <incr pos:start="201:36" pos:end="201:38"><expr pos:start="201:36" pos:end="201:38"><name pos:start="201:36" pos:end="201:36">i</name><operator pos:start="201:37" pos:end="201:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="203:21" pos:end="205:55"><block_content pos:start="203:21" pos:end="205:55">

                    <expr_stmt pos:start="203:21" pos:end="205:55"><expr pos:start="203:21" pos:end="205:54"><call pos:start="203:21" pos:end="205:54"><name pos:start="203:21" pos:end="203:26">memset</name><argument_list pos:start="203:27" pos:end="205:54">(<argument pos:start="203:28" pos:end="203:75"><expr pos:start="203:28" pos:end="203:75"><name pos:start="203:28" pos:end="203:75"><name pos:start="203:28" pos:end="203:28">h</name><operator pos:start="203:29" pos:end="203:30">-&gt;</operator><name pos:start="203:31" pos:end="203:37">cur_pic</name><operator pos:start="203:38" pos:end="203:38">.</operator><name pos:start="203:39" pos:end="203:48">motion_val</name><index pos:start="203:49" pos:end="203:51">[<expr pos:start="203:50" pos:end="203:50"><literal type="number" pos:start="203:50" pos:end="203:50">0</literal></expr>]</index><index pos:start="203:52" pos:end="203:75">[<expr pos:start="203:53" pos:end="203:74"><name pos:start="203:53" pos:end="203:56">b_xy</name> <operator pos:start="203:58" pos:end="203:58">+</operator> <name pos:start="203:60" pos:end="203:60">i</name> <operator pos:start="203:62" pos:end="203:62">*</operator> <name pos:start="203:64" pos:end="203:74"><name pos:start="203:64" pos:end="203:64">h</name><operator pos:start="203:65" pos:end="203:66">-&gt;</operator><name pos:start="203:67" pos:end="203:74">b_stride</name></name></expr>]</index></name></expr></argument>,

                           <argument pos:start="205:28" pos:end="205:28"><expr pos:start="205:28" pos:end="205:28"><literal type="number" pos:start="205:28" pos:end="205:28">0</literal></expr></argument>, <argument pos:start="205:31" pos:end="205:53"><expr pos:start="205:31" pos:end="205:53"><literal type="number" pos:start="205:31" pos:end="205:31">4</literal> <operator pos:start="205:33" pos:end="205:33">*</operator> <literal type="number" pos:start="205:35" pos:end="205:35">2</literal> <operator pos:start="205:37" pos:end="205:37">*</operator> <sizeof pos:start="205:39" pos:end="205:53">sizeof<argument_list pos:start="205:45" pos:end="205:53">(<argument pos:start="205:46" pos:end="205:52"><expr pos:start="205:46" pos:end="205:52"><name pos:start="205:46" pos:end="205:52">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="209:13" pos:end="223:13"><if pos:start="209:13" pos:end="215:13">if <condition pos:start="209:16" pos:end="209:29">(<expr pos:start="209:17" pos:end="209:28"><name pos:start="209:17" pos:end="209:23">mb_type</name> <operator pos:start="209:25" pos:end="209:26">!=</operator> <literal type="number" pos:start="209:28" pos:end="209:28">1</literal></expr>)</condition> <block pos:start="209:31" pos:end="215:13">{<block_content pos:start="211:17" pos:end="213:30">

                <if_stmt pos:start="211:17" pos:end="213:30"><if pos:start="211:17" pos:end="213:30">if <condition pos:start="211:20" pos:end="211:65">(<expr pos:start="211:21" pos:end="211:64"><call pos:start="211:21" pos:end="211:60"><name pos:start="211:21" pos:end="211:31">svq3_mc_dir</name><argument_list pos:start="211:32" pos:end="211:60">(<argument pos:start="211:33" pos:end="211:33"><expr pos:start="211:33" pos:end="211:33"><name pos:start="211:33" pos:end="211:33">s</name></expr></argument>, <argument pos:start="211:36" pos:end="211:36"><expr pos:start="211:36" pos:end="211:36"><literal type="number" pos:start="211:36" pos:end="211:36">0</literal></expr></argument>, <argument pos:start="211:39" pos:end="211:42"><expr pos:start="211:39" pos:end="211:42"><name pos:start="211:39" pos:end="211:42">mode</name></expr></argument>, <argument pos:start="211:45" pos:end="211:45"><expr pos:start="211:45" pos:end="211:45"><literal type="number" pos:start="211:45" pos:end="211:45">1</literal></expr></argument>, <argument pos:start="211:48" pos:end="211:59"><expr pos:start="211:48" pos:end="211:59"><name pos:start="211:48" pos:end="211:54">mb_type</name> <operator pos:start="211:56" pos:end="211:57">==</operator> <literal type="number" pos:start="211:59" pos:end="211:59">3</literal></expr></argument>)</argument_list></call> <operator pos:start="211:62" pos:end="211:62">&lt;</operator> <literal type="number" pos:start="211:64" pos:end="211:64">0</literal></expr>)</condition><block type="pseudo" pos:start="213:21" pos:end="213:30"><block_content pos:start="213:21" pos:end="213:30">

                    <return pos:start="213:21" pos:end="213:30">return <expr pos:start="213:28" pos:end="213:29"><operator pos:start="213:28" pos:end="213:28">-</operator><literal type="number" pos:start="213:29" pos:end="213:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="215:15" pos:end="223:13">else <block pos:start="215:20" pos:end="223:13">{<block_content pos:start="217:17" pos:end="221:55">

                <for pos:start="217:17" pos:end="221:55">for <control pos:start="217:21" pos:end="217:39">(<init pos:start="217:22" pos:end="217:27"><expr pos:start="217:22" pos:end="217:26"><name pos:start="217:22" pos:end="217:22">i</name> <operator pos:start="217:24" pos:end="217:24">=</operator> <literal type="number" pos:start="217:26" pos:end="217:26">0</literal></expr>;</init> <condition pos:start="217:29" pos:end="217:34"><expr pos:start="217:29" pos:end="217:33"><name pos:start="217:29" pos:end="217:29">i</name> <operator pos:start="217:31" pos:end="217:31">&lt;</operator> <literal type="number" pos:start="217:33" pos:end="217:33">4</literal></expr>;</condition> <incr pos:start="217:36" pos:end="217:38"><expr pos:start="217:36" pos:end="217:38"><name pos:start="217:36" pos:end="217:36">i</name><operator pos:start="217:37" pos:end="217:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="219:21" pos:end="221:55"><block_content pos:start="219:21" pos:end="221:55">

                    <expr_stmt pos:start="219:21" pos:end="221:55"><expr pos:start="219:21" pos:end="221:54"><call pos:start="219:21" pos:end="221:54"><name pos:start="219:21" pos:end="219:26">memset</name><argument_list pos:start="219:27" pos:end="221:54">(<argument pos:start="219:28" pos:end="219:75"><expr pos:start="219:28" pos:end="219:75"><name pos:start="219:28" pos:end="219:75"><name pos:start="219:28" pos:end="219:28">h</name><operator pos:start="219:29" pos:end="219:30">-&gt;</operator><name pos:start="219:31" pos:end="219:37">cur_pic</name><operator pos:start="219:38" pos:end="219:38">.</operator><name pos:start="219:39" pos:end="219:48">motion_val</name><index pos:start="219:49" pos:end="219:51">[<expr pos:start="219:50" pos:end="219:50"><literal type="number" pos:start="219:50" pos:end="219:50">1</literal></expr>]</index><index pos:start="219:52" pos:end="219:75">[<expr pos:start="219:53" pos:end="219:74"><name pos:start="219:53" pos:end="219:56">b_xy</name> <operator pos:start="219:58" pos:end="219:58">+</operator> <name pos:start="219:60" pos:end="219:60">i</name> <operator pos:start="219:62" pos:end="219:62">*</operator> <name pos:start="219:64" pos:end="219:74"><name pos:start="219:64" pos:end="219:64">h</name><operator pos:start="219:65" pos:end="219:66">-&gt;</operator><name pos:start="219:67" pos:end="219:74">b_stride</name></name></expr>]</index></name></expr></argument>,

                           <argument pos:start="221:28" pos:end="221:28"><expr pos:start="221:28" pos:end="221:28"><literal type="number" pos:start="221:28" pos:end="221:28">0</literal></expr></argument>, <argument pos:start="221:31" pos:end="221:53"><expr pos:start="221:31" pos:end="221:53"><literal type="number" pos:start="221:31" pos:end="221:31">4</literal> <operator pos:start="221:33" pos:end="221:33">*</operator> <literal type="number" pos:start="221:35" pos:end="221:35">2</literal> <operator pos:start="221:37" pos:end="221:37">*</operator> <sizeof pos:start="221:39" pos:end="221:53">sizeof<argument_list pos:start="221:45" pos:end="221:53">(<argument pos:start="221:46" pos:end="221:52"><expr pos:start="221:46" pos:end="221:52"><name pos:start="221:46" pos:end="221:52">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="229:9" pos:end="229:32"><expr pos:start="229:9" pos:end="229:31"><name pos:start="229:9" pos:end="229:15">mb_type</name> <operator pos:start="229:17" pos:end="229:17">=</operator> <name pos:start="229:19" pos:end="229:31">MB_TYPE_16x16</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="231:7" pos:end="353:5">else if <condition pos:start="231:15" pos:end="231:45">(<expr pos:start="231:16" pos:end="231:44"><name pos:start="231:16" pos:end="231:22">mb_type</name> <operator pos:start="231:24" pos:end="231:25">==</operator> <literal type="number" pos:start="231:27" pos:end="231:27">8</literal> <operator pos:start="231:29" pos:end="231:30">||</operator> <name pos:start="231:32" pos:end="231:38">mb_type</name> <operator pos:start="231:40" pos:end="231:41">==</operator> <literal type="number" pos:start="231:43" pos:end="231:44">33</literal></expr>)</condition> <block pos:start="231:47" pos:end="353:5">{<block_content pos:start="233:9" pos:end="351:35">   <comment type="block" pos:start="231:51" pos:end="231:64">/* INTRA4x4 */</comment>

        <expr_stmt pos:start="233:9" pos:end="233:72"><expr pos:start="233:9" pos:end="233:71"><call pos:start="233:9" pos:end="233:71"><name pos:start="233:9" pos:end="233:14">memset</name><argument_list pos:start="233:15" pos:end="233:71">(<argument pos:start="233:16" pos:end="233:42"><expr pos:start="233:16" pos:end="233:42"><name pos:start="233:16" pos:end="233:42"><name pos:start="233:16" pos:end="233:16">h</name><operator pos:start="233:17" pos:end="233:18">-&gt;</operator><name pos:start="233:19" pos:end="233:42">intra4x4_pred_mode_cache</name></name></expr></argument>, <argument pos:start="233:45" pos:end="233:46"><expr pos:start="233:45" pos:end="233:46"><operator pos:start="233:45" pos:end="233:45">-</operator><literal type="number" pos:start="233:46" pos:end="233:46">1</literal></expr></argument>, <argument pos:start="233:49" pos:end="233:70"><expr pos:start="233:49" pos:end="233:70"><literal type="number" pos:start="233:49" pos:end="233:49">8</literal> <operator pos:start="233:51" pos:end="233:51">*</operator> <literal type="number" pos:start="233:53" pos:end="233:53">5</literal> <operator pos:start="233:55" pos:end="233:55">*</operator> <sizeof pos:start="233:57" pos:end="233:70">sizeof<argument_list pos:start="233:63" pos:end="233:70">(<argument pos:start="233:64" pos:end="233:69"><expr pos:start="233:64" pos:end="233:69"><name pos:start="233:64" pos:end="233:69">int8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="237:9" pos:end="317:9"><if pos:start="237:9" pos:end="311:9">if <condition pos:start="237:12" pos:end="237:25">(<expr pos:start="237:13" pos:end="237:24"><name pos:start="237:13" pos:end="237:19">mb_type</name> <operator pos:start="237:21" pos:end="237:22">==</operator> <literal type="number" pos:start="237:24" pos:end="237:24">8</literal></expr>)</condition> <block pos:start="237:27" pos:end="311:9">{<block_content pos:start="239:13" pos:end="309:13">

            <if_stmt pos:start="239:13" pos:end="249:13"><if pos:start="239:13" pos:end="249:13">if <condition pos:start="239:16" pos:end="239:28">(<expr pos:start="239:17" pos:end="239:27"><name pos:start="239:17" pos:end="239:23"><name pos:start="239:17" pos:end="239:17">h</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:23">mb_x</name></name> <operator pos:start="239:25" pos:end="239:25">&gt;</operator> <literal type="number" pos:start="239:27" pos:end="239:27">0</literal></expr>)</condition> <block pos:start="239:30" pos:end="249:13">{<block_content pos:start="241:17" pos:end="247:55">

                <for pos:start="241:17" pos:end="243:126">for <control pos:start="241:21" pos:end="241:39">(<init pos:start="241:22" pos:end="241:27"><expr pos:start="241:22" pos:end="241:26"><name pos:start="241:22" pos:end="241:22">i</name> <operator pos:start="241:24" pos:end="241:24">=</operator> <literal type="number" pos:start="241:26" pos:end="241:26">0</literal></expr>;</init> <condition pos:start="241:29" pos:end="241:34"><expr pos:start="241:29" pos:end="241:33"><name pos:start="241:29" pos:end="241:29">i</name> <operator pos:start="241:31" pos:end="241:31">&lt;</operator> <literal type="number" pos:start="241:33" pos:end="241:33">4</literal></expr>;</condition> <incr pos:start="241:36" pos:end="241:38"><expr pos:start="241:36" pos:end="241:38"><name pos:start="241:36" pos:end="241:36">i</name><operator pos:start="241:37" pos:end="241:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="243:21" pos:end="243:126"><block_content pos:start="243:21" pos:end="243:126">

                    <expr_stmt pos:start="243:21" pos:end="243:126"><expr pos:start="243:21" pos:end="243:125"><name pos:start="243:21" pos:end="243:69"><name pos:start="243:21" pos:end="243:21">h</name><operator pos:start="243:22" pos:end="243:23">-&gt;</operator><name pos:start="243:24" pos:end="243:47">intra4x4_pred_mode_cache</name><index pos:start="243:48" pos:end="243:69">[<expr pos:start="243:49" pos:end="243:68"><name pos:start="243:49" pos:end="243:56"><name pos:start="243:49" pos:end="243:53">scan8</name><index pos:start="243:54" pos:end="243:56">[<expr pos:start="243:55" pos:end="243:55"><literal type="number" pos:start="243:55" pos:end="243:55">0</literal></expr>]</index></name> <operator pos:start="243:58" pos:end="243:58">-</operator> <literal type="number" pos:start="243:60" pos:end="243:60">1</literal> <operator pos:start="243:62" pos:end="243:62">+</operator> <name pos:start="243:64" pos:end="243:64">i</name> <operator pos:start="243:66" pos:end="243:66">*</operator> <literal type="number" pos:start="243:68" pos:end="243:68">8</literal></expr>]</index></name> <operator pos:start="243:71" pos:end="243:71">=</operator> <name pos:start="243:73" pos:end="243:125"><name pos:start="243:73" pos:end="243:73">h</name><operator pos:start="243:74" pos:end="243:75">-&gt;</operator><name pos:start="243:76" pos:end="243:93">intra4x4_pred_mode</name><index pos:start="243:94" pos:end="243:125">[<expr pos:start="243:95" pos:end="243:124"><name pos:start="243:95" pos:end="243:116"><name pos:start="243:95" pos:end="243:95">h</name><operator pos:start="243:96" pos:end="243:97">-&gt;</operator><name pos:start="243:98" pos:end="243:105">mb2br_xy</name><index pos:start="243:106" pos:end="243:116">[<expr pos:start="243:107" pos:end="243:115"><name pos:start="243:107" pos:end="243:111">mb_xy</name> <operator pos:start="243:113" pos:end="243:113">-</operator> <literal type="number" pos:start="243:115" pos:end="243:115">1</literal></expr>]</index></name> <operator pos:start="243:118" pos:end="243:118">+</operator> <literal type="number" pos:start="243:120" pos:end="243:122">6</literal> <operator pos:start="243:122" pos:end="243:122">-</operator> <name pos:start="243:124" pos:end="243:124">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <if_stmt pos:start="245:17" pos:end="247:55"><if pos:start="245:17" pos:end="247:55">if <condition pos:start="245:20" pos:end="245:68">(<expr pos:start="245:21" pos:end="245:67"><name pos:start="245:21" pos:end="245:61"><name pos:start="245:21" pos:end="245:21">h</name><operator pos:start="245:22" pos:end="245:23">-&gt;</operator><name pos:start="245:24" pos:end="245:47">intra4x4_pred_mode_cache</name><index pos:start="245:48" pos:end="245:61">[<expr pos:start="245:49" pos:end="245:60"><name pos:start="245:49" pos:end="245:56"><name pos:start="245:49" pos:end="245:53">scan8</name><index pos:start="245:54" pos:end="245:56">[<expr pos:start="245:55" pos:end="245:55"><literal type="number" pos:start="245:55" pos:end="245:55">0</literal></expr>]</index></name> <operator pos:start="245:58" pos:end="245:58">-</operator> <literal type="number" pos:start="245:60" pos:end="245:60">1</literal></expr>]</index></name> <operator pos:start="245:63" pos:end="245:64">==</operator> <operator pos:start="245:66" pos:end="245:66">-</operator><literal type="number" pos:start="245:67" pos:end="245:67">1</literal></expr>)</condition><block type="pseudo" pos:start="247:21" pos:end="247:55"><block_content pos:start="247:21" pos:end="247:55">

                    <expr_stmt pos:start="247:21" pos:end="247:55"><expr pos:start="247:21" pos:end="247:54"><name pos:start="247:21" pos:end="247:45"><name pos:start="247:21" pos:end="247:21">h</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:45">left_samples_available</name></name> <operator pos:start="247:47" pos:end="247:47">=</operator> <literal type="number" pos:start="247:49" pos:end="247:54">0x5F5F</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="251:13" pos:end="267:13"><if pos:start="251:13" pos:end="267:13">if <condition pos:start="251:16" pos:end="251:28">(<expr pos:start="251:17" pos:end="251:27"><name pos:start="251:17" pos:end="251:23"><name pos:start="251:17" pos:end="251:17">h</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:23">mb_y</name></name> <operator pos:start="251:25" pos:end="251:25">&gt;</operator> <literal type="number" pos:start="251:27" pos:end="251:27">0</literal></expr>)</condition> <block pos:start="251:30" pos:end="267:13">{<block_content pos:start="253:17" pos:end="265:54">

                <expr_stmt pos:start="253:17" pos:end="253:118"><expr pos:start="253:17" pos:end="253:117"><name pos:start="253:17" pos:end="253:54"><name pos:start="253:17" pos:end="253:17">h</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:43">intra4x4_pred_mode_cache</name><index pos:start="253:44" pos:end="253:54">[<expr pos:start="253:45" pos:end="253:53"><literal type="number" pos:start="253:45" pos:end="253:45">4</literal> <operator pos:start="253:47" pos:end="253:47">+</operator> <literal type="number" pos:start="253:49" pos:end="253:49">8</literal> <operator pos:start="253:51" pos:end="253:51">*</operator> <literal type="number" pos:start="253:53" pos:end="253:53">0</literal></expr>]</index></name> <operator pos:start="253:56" pos:end="253:56">=</operator> <name pos:start="253:58" pos:end="253:117"><name pos:start="253:58" pos:end="253:58">h</name><operator pos:start="253:59" pos:end="253:60">-&gt;</operator><name pos:start="253:61" pos:end="253:78">intra4x4_pred_mode</name><index pos:start="253:79" pos:end="253:117">[<expr pos:start="253:80" pos:end="253:116"><name pos:start="253:80" pos:end="253:112"><name pos:start="253:80" pos:end="253:80">h</name><operator pos:start="253:81" pos:end="253:82">-&gt;</operator><name pos:start="253:83" pos:end="253:90">mb2br_xy</name><index pos:start="253:91" pos:end="253:112">[<expr pos:start="253:92" pos:end="253:111"><name pos:start="253:92" pos:end="253:96">mb_xy</name> <operator pos:start="253:98" pos:end="253:98">-</operator> <name pos:start="253:100" pos:end="253:111"><name pos:start="253:100" pos:end="253:100">h</name><operator pos:start="253:101" pos:end="253:102">-&gt;</operator><name pos:start="253:103" pos:end="253:111">mb_stride</name></name></expr>]</index></name> <operator pos:start="253:114" pos:end="253:114">+</operator> <literal type="number" pos:start="253:116" pos:end="253:116">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:118"><expr pos:start="255:17" pos:end="255:117"><name pos:start="255:17" pos:end="255:54"><name pos:start="255:17" pos:end="255:17">h</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:43">intra4x4_pred_mode_cache</name><index pos:start="255:44" pos:end="255:54">[<expr pos:start="255:45" pos:end="255:53"><literal type="number" pos:start="255:45" pos:end="255:45">5</literal> <operator pos:start="255:47" pos:end="255:47">+</operator> <literal type="number" pos:start="255:49" pos:end="255:49">8</literal> <operator pos:start="255:51" pos:end="255:51">*</operator> <literal type="number" pos:start="255:53" pos:end="255:53">0</literal></expr>]</index></name> <operator pos:start="255:56" pos:end="255:56">=</operator> <name pos:start="255:58" pos:end="255:117"><name pos:start="255:58" pos:end="255:58">h</name><operator pos:start="255:59" pos:end="255:60">-&gt;</operator><name pos:start="255:61" pos:end="255:78">intra4x4_pred_mode</name><index pos:start="255:79" pos:end="255:117">[<expr pos:start="255:80" pos:end="255:116"><name pos:start="255:80" pos:end="255:112"><name pos:start="255:80" pos:end="255:80">h</name><operator pos:start="255:81" pos:end="255:82">-&gt;</operator><name pos:start="255:83" pos:end="255:90">mb2br_xy</name><index pos:start="255:91" pos:end="255:112">[<expr pos:start="255:92" pos:end="255:111"><name pos:start="255:92" pos:end="255:96">mb_xy</name> <operator pos:start="255:98" pos:end="255:98">-</operator> <name pos:start="255:100" pos:end="255:111"><name pos:start="255:100" pos:end="255:100">h</name><operator pos:start="255:101" pos:end="255:102">-&gt;</operator><name pos:start="255:103" pos:end="255:111">mb_stride</name></name></expr>]</index></name> <operator pos:start="255:114" pos:end="255:114">+</operator> <literal type="number" pos:start="255:116" pos:end="255:116">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:118"><expr pos:start="257:17" pos:end="257:117"><name pos:start="257:17" pos:end="257:54"><name pos:start="257:17" pos:end="257:17">h</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:43">intra4x4_pred_mode_cache</name><index pos:start="257:44" pos:end="257:54">[<expr pos:start="257:45" pos:end="257:53"><literal type="number" pos:start="257:45" pos:end="257:45">6</literal> <operator pos:start="257:47" pos:end="257:47">+</operator> <literal type="number" pos:start="257:49" pos:end="257:49">8</literal> <operator pos:start="257:51" pos:end="257:51">*</operator> <literal type="number" pos:start="257:53" pos:end="257:53">0</literal></expr>]</index></name> <operator pos:start="257:56" pos:end="257:56">=</operator> <name pos:start="257:58" pos:end="257:117"><name pos:start="257:58" pos:end="257:58">h</name><operator pos:start="257:59" pos:end="257:60">-&gt;</operator><name pos:start="257:61" pos:end="257:78">intra4x4_pred_mode</name><index pos:start="257:79" pos:end="257:117">[<expr pos:start="257:80" pos:end="257:116"><name pos:start="257:80" pos:end="257:112"><name pos:start="257:80" pos:end="257:80">h</name><operator pos:start="257:81" pos:end="257:82">-&gt;</operator><name pos:start="257:83" pos:end="257:90">mb2br_xy</name><index pos:start="257:91" pos:end="257:112">[<expr pos:start="257:92" pos:end="257:111"><name pos:start="257:92" pos:end="257:96">mb_xy</name> <operator pos:start="257:98" pos:end="257:98">-</operator> <name pos:start="257:100" pos:end="257:111"><name pos:start="257:100" pos:end="257:100">h</name><operator pos:start="257:101" pos:end="257:102">-&gt;</operator><name pos:start="257:103" pos:end="257:111">mb_stride</name></name></expr>]</index></name> <operator pos:start="257:114" pos:end="257:114">+</operator> <literal type="number" pos:start="257:116" pos:end="257:116">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:118"><expr pos:start="259:17" pos:end="259:117"><name pos:start="259:17" pos:end="259:54"><name pos:start="259:17" pos:end="259:17">h</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:43">intra4x4_pred_mode_cache</name><index pos:start="259:44" pos:end="259:54">[<expr pos:start="259:45" pos:end="259:53"><literal type="number" pos:start="259:45" pos:end="259:45">7</literal> <operator pos:start="259:47" pos:end="259:47">+</operator> <literal type="number" pos:start="259:49" pos:end="259:49">8</literal> <operator pos:start="259:51" pos:end="259:51">*</operator> <literal type="number" pos:start="259:53" pos:end="259:53">0</literal></expr>]</index></name> <operator pos:start="259:56" pos:end="259:56">=</operator> <name pos:start="259:58" pos:end="259:117"><name pos:start="259:58" pos:end="259:58">h</name><operator pos:start="259:59" pos:end="259:60">-&gt;</operator><name pos:start="259:61" pos:end="259:78">intra4x4_pred_mode</name><index pos:start="259:79" pos:end="259:117">[<expr pos:start="259:80" pos:end="259:116"><name pos:start="259:80" pos:end="259:112"><name pos:start="259:80" pos:end="259:80">h</name><operator pos:start="259:81" pos:end="259:82">-&gt;</operator><name pos:start="259:83" pos:end="259:90">mb2br_xy</name><index pos:start="259:91" pos:end="259:112">[<expr pos:start="259:92" pos:end="259:111"><name pos:start="259:92" pos:end="259:96">mb_xy</name> <operator pos:start="259:98" pos:end="259:98">-</operator> <name pos:start="259:100" pos:end="259:111"><name pos:start="259:100" pos:end="259:100">h</name><operator pos:start="259:101" pos:end="259:102">-&gt;</operator><name pos:start="259:103" pos:end="259:111">mb_stride</name></name></expr>]</index></name> <operator pos:start="259:114" pos:end="259:114">+</operator> <literal type="number" pos:start="259:116" pos:end="259:116">3</literal></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="263:17" pos:end="265:54"><if pos:start="263:17" pos:end="265:54">if <condition pos:start="263:20" pos:end="263:65">(<expr pos:start="263:21" pos:end="263:64"><name pos:start="263:21" pos:end="263:58"><name pos:start="263:21" pos:end="263:21">h</name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:47">intra4x4_pred_mode_cache</name><index pos:start="263:48" pos:end="263:58">[<expr pos:start="263:49" pos:end="263:57"><literal type="number" pos:start="263:49" pos:end="263:49">4</literal> <operator pos:start="263:51" pos:end="263:51">+</operator> <literal type="number" pos:start="263:53" pos:end="263:53">8</literal> <operator pos:start="263:55" pos:end="263:55">*</operator> <literal type="number" pos:start="263:57" pos:end="263:57">0</literal></expr>]</index></name> <operator pos:start="263:60" pos:end="263:61">==</operator> <operator pos:start="263:63" pos:end="263:63">-</operator><literal type="number" pos:start="263:64" pos:end="263:64">1</literal></expr>)</condition><block type="pseudo" pos:start="265:21" pos:end="265:54"><block_content pos:start="265:21" pos:end="265:54">

                    <expr_stmt pos:start="265:21" pos:end="265:54"><expr pos:start="265:21" pos:end="265:53"><name pos:start="265:21" pos:end="265:44"><name pos:start="265:21" pos:end="265:21">h</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:44">top_samples_available</name></name> <operator pos:start="265:46" pos:end="265:46">=</operator> <literal type="number" pos:start="265:48" pos:end="265:53">0x33FF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="271:13" pos:end="271:57">/* decode prediction codes for luma blocks */</comment>

            <for pos:start="273:13" pos:end="309:13">for <control pos:start="273:17" pos:end="273:39">(<init pos:start="273:18" pos:end="273:23"><expr pos:start="273:18" pos:end="273:22"><name pos:start="273:18" pos:end="273:18">i</name> <operator pos:start="273:20" pos:end="273:20">=</operator> <literal type="number" pos:start="273:22" pos:end="273:22">0</literal></expr>;</init> <condition pos:start="273:25" pos:end="273:31"><expr pos:start="273:25" pos:end="273:30"><name pos:start="273:25" pos:end="273:25">i</name> <operator pos:start="273:27" pos:end="273:27">&lt;</operator> <literal type="number" pos:start="273:29" pos:end="273:30">16</literal></expr>;</condition> <incr pos:start="273:33" pos:end="273:38"><expr pos:start="273:33" pos:end="273:38"><name pos:start="273:33" pos:end="273:33">i</name> <operator pos:start="273:35" pos:end="273:36">+=</operator> <literal type="number" pos:start="273:38" pos:end="273:38">2</literal></expr></incr>)</control> <block pos:start="273:41" pos:end="309:13">{<block_content pos:start="275:17" pos:end="307:17">

                <expr_stmt pos:start="275:17" pos:end="275:49"><expr pos:start="275:17" pos:end="275:48"><name pos:start="275:17" pos:end="275:19">vlc</name> <operator pos:start="275:21" pos:end="275:21">=</operator> <call pos:start="275:23" pos:end="275:48"><name pos:start="275:23" pos:end="275:40">svq3_get_ue_golomb</name><argument_list pos:start="275:41" pos:end="275:48">(<argument pos:start="275:42" pos:end="275:47"><expr pos:start="275:42" pos:end="275:47"><operator pos:start="275:42" pos:end="275:42">&amp;</operator><name pos:start="275:43" pos:end="275:47"><name pos:start="275:43" pos:end="275:43">h</name><operator pos:start="275:44" pos:end="275:45">-&gt;</operator><name pos:start="275:46" pos:end="275:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="279:17" pos:end="285:17"><if pos:start="279:17" pos:end="285:17">if <condition pos:start="279:20" pos:end="279:31">(<expr pos:start="279:21" pos:end="279:30"><name pos:start="279:21" pos:end="279:23">vlc</name> <operator pos:start="279:25" pos:end="279:26">&gt;=</operator> <literal type="number" pos:start="279:28" pos:end="279:30">25U</literal></expr>)</condition> <block pos:start="279:33" pos:end="285:17">{<block_content pos:start="281:21" pos:end="283:30">

                    <expr_stmt pos:start="281:21" pos:end="281:80"><expr pos:start="281:21" pos:end="281:79"><call pos:start="281:21" pos:end="281:79"><name pos:start="281:21" pos:end="281:26">av_log</name><argument_list pos:start="281:27" pos:end="281:79">(<argument pos:start="281:28" pos:end="281:35"><expr pos:start="281:28" pos:end="281:35"><name pos:start="281:28" pos:end="281:35"><name pos:start="281:28" pos:end="281:28">h</name><operator pos:start="281:29" pos:end="281:30">-&gt;</operator><name pos:start="281:31" pos:end="281:35">avctx</name></name></expr></argument>, <argument pos:start="281:38" pos:end="281:49"><expr pos:start="281:38" pos:end="281:49"><name pos:start="281:38" pos:end="281:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="281:52" pos:end="281:73"><expr pos:start="281:52" pos:end="281:73"><literal type="string" pos:start="281:52" pos:end="281:73">"luma prediction:%d\n"</literal></expr></argument>, <argument pos:start="281:76" pos:end="281:78"><expr pos:start="281:76" pos:end="281:78"><name pos:start="281:76" pos:end="281:78">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="283:21" pos:end="283:30">return <expr pos:start="283:28" pos:end="283:29"><operator pos:start="283:28" pos:end="283:28">-</operator><literal type="number" pos:start="283:29" pos:end="283:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="289:17" pos:end="289:66"><expr pos:start="289:17" pos:end="289:65"><name pos:start="289:17" pos:end="289:20">left</name> <operator pos:start="289:22" pos:end="289:22">=</operator> <operator pos:start="289:24" pos:end="289:24">&amp;</operator><name pos:start="289:25" pos:end="289:65"><name pos:start="289:25" pos:end="289:25">h</name><operator pos:start="289:26" pos:end="289:27">-&gt;</operator><name pos:start="289:28" pos:end="289:51">intra4x4_pred_mode_cache</name><index pos:start="289:52" pos:end="289:65">[<expr pos:start="289:53" pos:end="289:64"><name pos:start="289:53" pos:end="289:60"><name pos:start="289:53" pos:end="289:57">scan8</name><index pos:start="289:58" pos:end="289:60">[<expr pos:start="289:59" pos:end="289:59"><name pos:start="289:59" pos:end="289:59">i</name></expr>]</index></name> <operator pos:start="289:62" pos:end="289:62">-</operator> <literal type="number" pos:start="289:64" pos:end="289:64">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:66"><expr pos:start="291:17" pos:end="291:65"><name pos:start="291:17" pos:end="291:19">top</name>  <operator pos:start="291:22" pos:end="291:22">=</operator> <operator pos:start="291:24" pos:end="291:24">&amp;</operator><name pos:start="291:25" pos:end="291:65"><name pos:start="291:25" pos:end="291:25">h</name><operator pos:start="291:26" pos:end="291:27">-&gt;</operator><name pos:start="291:28" pos:end="291:51">intra4x4_pred_mode_cache</name><index pos:start="291:52" pos:end="291:65">[<expr pos:start="291:53" pos:end="291:64"><name pos:start="291:53" pos:end="291:60"><name pos:start="291:53" pos:end="291:57">scan8</name><index pos:start="291:58" pos:end="291:60">[<expr pos:start="291:59" pos:end="291:59"><name pos:start="291:59" pos:end="291:59">i</name></expr>]</index></name> <operator pos:start="291:62" pos:end="291:62">-</operator> <literal type="number" pos:start="291:64" pos:end="291:64">8</literal></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="295:17" pos:end="295:84"><expr pos:start="295:17" pos:end="295:83"><name pos:start="295:17" pos:end="295:23"><name pos:start="295:17" pos:end="295:20">left</name><index pos:start="295:21" pos:end="295:23">[<expr pos:start="295:22" pos:end="295:22"><literal type="number" pos:start="295:22" pos:end="295:22">1</literal></expr>]</index></name> <operator pos:start="295:25" pos:end="295:25">=</operator> <name pos:start="295:27" pos:end="295:83"><name pos:start="295:27" pos:end="295:37">svq3_pred_1</name><index pos:start="295:38" pos:end="295:49">[<expr pos:start="295:39" pos:end="295:48"><name pos:start="295:39" pos:end="295:44"><name pos:start="295:39" pos:end="295:41">top</name><index pos:start="295:42" pos:end="295:44">[<expr pos:start="295:43" pos:end="295:43"><literal type="number" pos:start="295:43" pos:end="295:43">0</literal></expr>]</index></name> <operator pos:start="295:46" pos:end="295:46">+</operator> <literal type="number" pos:start="295:48" pos:end="295:48">1</literal></expr>]</index><index pos:start="295:50" pos:end="295:62">[<expr pos:start="295:51" pos:end="295:61"><name pos:start="295:51" pos:end="295:57"><name pos:start="295:51" pos:end="295:54">left</name><index pos:start="295:55" pos:end="295:57">[<expr pos:start="295:56" pos:end="295:56"><literal type="number" pos:start="295:56" pos:end="295:56">0</literal></expr>]</index></name> <operator pos:start="295:59" pos:end="295:59">+</operator> <literal type="number" pos:start="295:61" pos:end="295:61">1</literal></expr>]</index><index pos:start="295:63" pos:end="295:83">[<expr pos:start="295:64" pos:end="295:82"><name pos:start="295:64" pos:end="295:82"><name pos:start="295:64" pos:end="295:74">svq3_pred_0</name><index pos:start="295:75" pos:end="295:79">[<expr pos:start="295:76" pos:end="295:78"><name pos:start="295:76" pos:end="295:78">vlc</name></expr>]</index><index pos:start="295:80" pos:end="295:82">[<expr pos:start="295:81" pos:end="295:81"><literal type="number" pos:start="295:81" pos:end="295:81">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:84"><expr pos:start="297:17" pos:end="297:83"><name pos:start="297:17" pos:end="297:23"><name pos:start="297:17" pos:end="297:20">left</name><index pos:start="297:21" pos:end="297:23">[<expr pos:start="297:22" pos:end="297:22"><literal type="number" pos:start="297:22" pos:end="297:22">2</literal></expr>]</index></name> <operator pos:start="297:25" pos:end="297:25">=</operator> <name pos:start="297:27" pos:end="297:83"><name pos:start="297:27" pos:end="297:37">svq3_pred_1</name><index pos:start="297:38" pos:end="297:49">[<expr pos:start="297:39" pos:end="297:48"><name pos:start="297:39" pos:end="297:44"><name pos:start="297:39" pos:end="297:41">top</name><index pos:start="297:42" pos:end="297:44">[<expr pos:start="297:43" pos:end="297:43"><literal type="number" pos:start="297:43" pos:end="297:43">1</literal></expr>]</index></name> <operator pos:start="297:46" pos:end="297:46">+</operator> <literal type="number" pos:start="297:48" pos:end="297:48">1</literal></expr>]</index><index pos:start="297:50" pos:end="297:62">[<expr pos:start="297:51" pos:end="297:61"><name pos:start="297:51" pos:end="297:57"><name pos:start="297:51" pos:end="297:54">left</name><index pos:start="297:55" pos:end="297:57">[<expr pos:start="297:56" pos:end="297:56"><literal type="number" pos:start="297:56" pos:end="297:56">1</literal></expr>]</index></name> <operator pos:start="297:59" pos:end="297:59">+</operator> <literal type="number" pos:start="297:61" pos:end="297:61">1</literal></expr>]</index><index pos:start="297:63" pos:end="297:83">[<expr pos:start="297:64" pos:end="297:82"><name pos:start="297:64" pos:end="297:82"><name pos:start="297:64" pos:end="297:74">svq3_pred_0</name><index pos:start="297:75" pos:end="297:79">[<expr pos:start="297:76" pos:end="297:78"><name pos:start="297:76" pos:end="297:78">vlc</name></expr>]</index><index pos:start="297:80" pos:end="297:82">[<expr pos:start="297:81" pos:end="297:81"><literal type="number" pos:start="297:81" pos:end="297:81">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="301:17" pos:end="307:17"><if pos:start="301:17" pos:end="307:17">if <condition pos:start="301:20" pos:end="301:51">(<expr pos:start="301:21" pos:end="301:50"><name pos:start="301:21" pos:end="301:27"><name pos:start="301:21" pos:end="301:24">left</name><index pos:start="301:25" pos:end="301:27">[<expr pos:start="301:26" pos:end="301:26"><literal type="number" pos:start="301:26" pos:end="301:26">1</literal></expr>]</index></name> <operator pos:start="301:29" pos:end="301:30">==</operator> <operator pos:start="301:32" pos:end="301:32">-</operator><literal type="number" pos:start="301:33" pos:end="301:33">1</literal> <operator pos:start="301:35" pos:end="301:36">||</operator> <name pos:start="301:38" pos:end="301:44"><name pos:start="301:38" pos:end="301:41">left</name><index pos:start="301:42" pos:end="301:44">[<expr pos:start="301:43" pos:end="301:43"><literal type="number" pos:start="301:43" pos:end="301:43">2</literal></expr>]</index></name> <operator pos:start="301:46" pos:end="301:47">==</operator> <operator pos:start="301:49" pos:end="301:49">-</operator><literal type="number" pos:start="301:50" pos:end="301:50">1</literal></expr>)</condition> <block pos:start="301:53" pos:end="307:17">{<block_content pos:start="303:21" pos:end="305:30">

                    <expr_stmt pos:start="303:21" pos:end="303:73"><expr pos:start="303:21" pos:end="303:72"><call pos:start="303:21" pos:end="303:72"><name pos:start="303:21" pos:end="303:26">av_log</name><argument_list pos:start="303:27" pos:end="303:72">(<argument pos:start="303:28" pos:end="303:35"><expr pos:start="303:28" pos:end="303:35"><name pos:start="303:28" pos:end="303:35"><name pos:start="303:28" pos:end="303:28">h</name><operator pos:start="303:29" pos:end="303:30">-&gt;</operator><name pos:start="303:31" pos:end="303:35">avctx</name></name></expr></argument>, <argument pos:start="303:38" pos:end="303:49"><expr pos:start="303:38" pos:end="303:49"><name pos:start="303:38" pos:end="303:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="303:52" pos:end="303:71"><expr pos:start="303:52" pos:end="303:71"><literal type="string" pos:start="303:52" pos:end="303:71">"weird prediction\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="305:21" pos:end="305:30">return <expr pos:start="305:28" pos:end="305:29"><operator pos:start="305:28" pos:end="305:28">-</operator><literal type="number" pos:start="305:29" pos:end="305:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="311:11" pos:end="317:9">else <block pos:start="311:16" pos:end="317:9">{<block_content pos:start="313:13" pos:end="315:83">    <comment type="block" pos:start="311:21" pos:end="311:63">/* mb_type == 33, DC_128_PRED block type */</comment>

            <for pos:start="313:13" pos:end="315:83">for <control pos:start="313:17" pos:end="313:35">(<init pos:start="313:18" pos:end="313:23"><expr pos:start="313:18" pos:end="313:22"><name pos:start="313:18" pos:end="313:18">i</name> <operator pos:start="313:20" pos:end="313:20">=</operator> <literal type="number" pos:start="313:22" pos:end="313:22">0</literal></expr>;</init> <condition pos:start="313:25" pos:end="313:30"><expr pos:start="313:25" pos:end="313:29"><name pos:start="313:25" pos:end="313:25">i</name> <operator pos:start="313:27" pos:end="313:27">&lt;</operator> <literal type="number" pos:start="313:29" pos:end="313:29">4</literal></expr>;</condition> <incr pos:start="313:32" pos:end="313:34"><expr pos:start="313:32" pos:end="313:34"><name pos:start="313:32" pos:end="313:32">i</name><operator pos:start="313:33" pos:end="313:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="315:17" pos:end="315:83"><block_content pos:start="315:17" pos:end="315:83">

                <expr_stmt pos:start="315:17" pos:end="315:83"><expr pos:start="315:17" pos:end="315:82"><call pos:start="315:17" pos:end="315:82"><name pos:start="315:17" pos:end="315:22">memset</name><argument_list pos:start="315:23" pos:end="315:82">(<argument pos:start="315:24" pos:end="315:69"><expr pos:start="315:24" pos:end="315:69"><operator pos:start="315:24" pos:end="315:24">&amp;</operator><name pos:start="315:25" pos:end="315:69"><name pos:start="315:25" pos:end="315:25">h</name><operator pos:start="315:26" pos:end="315:27">-&gt;</operator><name pos:start="315:28" pos:end="315:51">intra4x4_pred_mode_cache</name><index pos:start="315:52" pos:end="315:69">[<expr pos:start="315:53" pos:end="315:68"><name pos:start="315:53" pos:end="315:60"><name pos:start="315:53" pos:end="315:57">scan8</name><index pos:start="315:58" pos:end="315:60">[<expr pos:start="315:59" pos:end="315:59"><literal type="number" pos:start="315:59" pos:end="315:59">0</literal></expr>]</index></name> <operator pos:start="315:62" pos:end="315:62">+</operator> <literal type="number" pos:start="315:64" pos:end="315:64">8</literal> <operator pos:start="315:66" pos:end="315:66">*</operator> <name pos:start="315:68" pos:end="315:68">i</name></expr>]</index></name></expr></argument>, <argument pos:start="315:72" pos:end="315:78"><expr pos:start="315:72" pos:end="315:78"><name pos:start="315:72" pos:end="315:78">DC_PRED</name></expr></argument>, <argument pos:start="315:81" pos:end="315:81"><expr pos:start="315:81" pos:end="315:81"><literal type="number" pos:start="315:81" pos:end="315:81">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="321:9" pos:end="321:38"><expr pos:start="321:9" pos:end="321:37"><call pos:start="321:9" pos:end="321:37"><name pos:start="321:9" pos:end="321:34">write_back_intra_pred_mode</name><argument_list pos:start="321:35" pos:end="321:37">(<argument pos:start="321:36" pos:end="321:36"><expr pos:start="321:36" pos:end="321:36"><name pos:start="321:36" pos:end="321:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="325:9" pos:end="347:9"><if pos:start="325:9" pos:end="335:9">if <condition pos:start="325:12" pos:end="325:25">(<expr pos:start="325:13" pos:end="325:24"><name pos:start="325:13" pos:end="325:19">mb_type</name> <operator pos:start="325:21" pos:end="325:22">==</operator> <literal type="number" pos:start="325:24" pos:end="325:24">8</literal></expr>)</condition> <block pos:start="325:27" pos:end="335:9">{<block_content pos:start="327:13" pos:end="333:73">

            <expr_stmt pos:start="327:13" pos:end="327:48"><expr pos:start="327:13" pos:end="327:47"><call pos:start="327:13" pos:end="327:47"><name pos:start="327:13" pos:end="327:44">ff_h264_check_intra4x4_pred_mode</name><argument_list pos:start="327:45" pos:end="327:47">(<argument pos:start="327:46" pos:end="327:46"><expr pos:start="327:46" pos:end="327:46"><name pos:start="327:46" pos:end="327:46">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="331:13" pos:end="331:73"><expr pos:start="331:13" pos:end="331:72"><name pos:start="331:13" pos:end="331:36"><name pos:start="331:13" pos:end="331:13">h</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:36">top_samples_available</name></name>  <operator pos:start="331:39" pos:end="331:39">=</operator> <ternary pos:start="331:41" pos:end="331:72"><condition pos:start="331:41" pos:end="331:56"><expr pos:start="331:41" pos:end="331:54"><operator pos:start="331:41" pos:end="331:41">(</operator><name pos:start="331:42" pos:end="331:48"><name pos:start="331:42" pos:end="331:42">h</name><operator pos:start="331:43" pos:end="331:44">-&gt;</operator><name pos:start="331:45" pos:end="331:48">mb_y</name></name> <operator pos:start="331:50" pos:end="331:51">==</operator> <literal type="number" pos:start="331:53" pos:end="331:53">0</literal><operator pos:start="331:54" pos:end="331:54">)</operator></expr> ?</condition><then pos:start="331:58" pos:end="331:63"> <expr pos:start="331:58" pos:end="331:63"><literal type="number" pos:start="331:58" pos:end="331:63">0x33FF</literal></expr> </then><else pos:start="331:65" pos:end="331:72">: <expr pos:start="331:67" pos:end="331:72"><literal type="number" pos:start="331:67" pos:end="331:72">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:73"><expr pos:start="333:13" pos:end="333:72"><name pos:start="333:13" pos:end="333:37"><name pos:start="333:13" pos:end="333:13">h</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:37">left_samples_available</name></name> <operator pos:start="333:39" pos:end="333:39">=</operator> <ternary pos:start="333:41" pos:end="333:72"><condition pos:start="333:41" pos:end="333:56"><expr pos:start="333:41" pos:end="333:54"><operator pos:start="333:41" pos:end="333:41">(</operator><name pos:start="333:42" pos:end="333:48"><name pos:start="333:42" pos:end="333:42">h</name><operator pos:start="333:43" pos:end="333:44">-&gt;</operator><name pos:start="333:45" pos:end="333:48">mb_x</name></name> <operator pos:start="333:50" pos:end="333:51">==</operator> <literal type="number" pos:start="333:53" pos:end="333:53">0</literal><operator pos:start="333:54" pos:end="333:54">)</operator></expr> ?</condition><then pos:start="333:58" pos:end="333:63"> <expr pos:start="333:58" pos:end="333:63"><literal type="number" pos:start="333:58" pos:end="333:63">0x5F5F</literal></expr> </then><else pos:start="333:65" pos:end="333:72">: <expr pos:start="333:67" pos:end="333:72"><literal type="number" pos:start="333:67" pos:end="333:72">0xFFFF</literal></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="335:11" pos:end="347:9">else <block pos:start="335:16" pos:end="347:9">{<block_content pos:start="337:13" pos:end="345:47">

            <for pos:start="337:13" pos:end="339:87">for <control pos:start="337:17" pos:end="337:35">(<init pos:start="337:18" pos:end="337:23"><expr pos:start="337:18" pos:end="337:22"><name pos:start="337:18" pos:end="337:18">i</name> <operator pos:start="337:20" pos:end="337:20">=</operator> <literal type="number" pos:start="337:22" pos:end="337:22">0</literal></expr>;</init> <condition pos:start="337:25" pos:end="337:30"><expr pos:start="337:25" pos:end="337:29"><name pos:start="337:25" pos:end="337:25">i</name> <operator pos:start="337:27" pos:end="337:27">&lt;</operator> <literal type="number" pos:start="337:29" pos:end="337:29">4</literal></expr>;</condition> <incr pos:start="337:32" pos:end="337:34"><expr pos:start="337:32" pos:end="337:34"><name pos:start="337:32" pos:end="337:32">i</name><operator pos:start="337:33" pos:end="337:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="339:17" pos:end="339:87"><block_content pos:start="339:17" pos:end="339:87">

                <expr_stmt pos:start="339:17" pos:end="339:87"><expr pos:start="339:17" pos:end="339:86"><call pos:start="339:17" pos:end="339:86"><name pos:start="339:17" pos:end="339:22">memset</name><argument_list pos:start="339:23" pos:end="339:86">(<argument pos:start="339:24" pos:end="339:69"><expr pos:start="339:24" pos:end="339:69"><operator pos:start="339:24" pos:end="339:24">&amp;</operator><name pos:start="339:25" pos:end="339:69"><name pos:start="339:25" pos:end="339:25">h</name><operator pos:start="339:26" pos:end="339:27">-&gt;</operator><name pos:start="339:28" pos:end="339:51">intra4x4_pred_mode_cache</name><index pos:start="339:52" pos:end="339:69">[<expr pos:start="339:53" pos:end="339:68"><name pos:start="339:53" pos:end="339:60"><name pos:start="339:53" pos:end="339:57">scan8</name><index pos:start="339:58" pos:end="339:60">[<expr pos:start="339:59" pos:end="339:59"><literal type="number" pos:start="339:59" pos:end="339:59">0</literal></expr>]</index></name> <operator pos:start="339:62" pos:end="339:62">+</operator> <literal type="number" pos:start="339:64" pos:end="339:64">8</literal> <operator pos:start="339:66" pos:end="339:66">*</operator> <name pos:start="339:68" pos:end="339:68">i</name></expr>]</index></name></expr></argument>, <argument pos:start="339:72" pos:end="339:82"><expr pos:start="339:72" pos:end="339:82"><name pos:start="339:72" pos:end="339:82">DC_128_PRED</name></expr></argument>, <argument pos:start="339:85" pos:end="339:85"><expr pos:start="339:85" pos:end="339:85"><literal type="number" pos:start="339:85" pos:end="339:85">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="343:13" pos:end="343:47"><expr pos:start="343:13" pos:end="343:46"><name pos:start="343:13" pos:end="343:36"><name pos:start="343:13" pos:end="343:13">h</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:36">top_samples_available</name></name>  <operator pos:start="343:39" pos:end="343:39">=</operator> <literal type="number" pos:start="343:41" pos:end="343:46">0x33FF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:47"><expr pos:start="345:13" pos:end="345:46"><name pos:start="345:13" pos:end="345:37"><name pos:start="345:13" pos:end="345:13">h</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:37">left_samples_available</name></name> <operator pos:start="345:39" pos:end="345:39">=</operator> <literal type="number" pos:start="345:41" pos:end="345:46">0x5F5F</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="351:9" pos:end="351:35"><expr pos:start="351:9" pos:end="351:34"><name pos:start="351:9" pos:end="351:15">mb_type</name> <operator pos:start="351:17" pos:end="351:17">=</operator> <name pos:start="351:19" pos:end="351:34">MB_TYPE_INTRA4x4</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="353:7" pos:end="375:5">else <block pos:start="353:12" pos:end="375:5">{<block_content pos:start="355:9" pos:end="373:37">                      <comment type="block" pos:start="353:35" pos:end="353:50">/* INTRA16x16 */</comment>

        <expr_stmt pos:start="355:9" pos:end="355:52"><expr pos:start="355:9" pos:end="355:51"><name pos:start="355:9" pos:end="355:11">dir</name> <operator pos:start="355:13" pos:end="355:13">=</operator> <name pos:start="355:15" pos:end="355:41"><name pos:start="355:15" pos:end="355:28">i_mb_type_info</name><index pos:start="355:29" pos:end="355:41">[<expr pos:start="355:30" pos:end="355:40"><name pos:start="355:30" pos:end="355:36">mb_type</name> <operator pos:start="355:38" pos:end="355:38">-</operator> <literal type="number" pos:start="355:40" pos:end="355:40">8</literal></expr>]</index></name><operator pos:start="355:42" pos:end="355:42">.</operator><name pos:start="355:43" pos:end="355:51">pred_mode</name></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:45"><expr pos:start="357:9" pos:end="357:44"><name pos:start="357:9" pos:end="357:11">dir</name> <operator pos:start="357:13" pos:end="357:13">=</operator> <operator pos:start="357:15" pos:end="357:15">(</operator><name pos:start="357:16" pos:end="357:18">dir</name> <operator pos:start="357:20" pos:end="357:21">&gt;&gt;</operator> <literal type="number" pos:start="357:23" pos:end="357:23">1</literal><operator pos:start="357:24" pos:end="357:24">)</operator> <operator pos:start="357:26" pos:end="357:26">^</operator> <literal type="number" pos:start="357:28" pos:end="357:28">3</literal> <operator pos:start="357:30" pos:end="357:30">*</operator> <operator pos:start="357:32" pos:end="357:32">(</operator><name pos:start="357:33" pos:end="357:35">dir</name> <operator pos:start="357:37" pos:end="357:37">&amp;</operator> <literal type="number" pos:start="357:39" pos:end="357:39">1</literal><operator pos:start="357:40" pos:end="357:40">)</operator> <operator pos:start="357:42" pos:end="357:42">^</operator> <literal type="number" pos:start="357:44" pos:end="357:44">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="361:9" pos:end="367:9"><if pos:start="361:9" pos:end="367:9">if <condition pos:start="361:12" pos:end="361:87">(<expr pos:start="361:13" pos:end="361:86"><operator pos:start="361:13" pos:end="361:13">(</operator><name pos:start="361:14" pos:end="361:36"><name pos:start="361:14" pos:end="361:14">h</name><operator pos:start="361:15" pos:end="361:16">-&gt;</operator><name pos:start="361:17" pos:end="361:36">intra16x16_pred_mode</name></name> <operator pos:start="361:38" pos:end="361:38">=</operator> <call pos:start="361:40" pos:end="361:79"><name pos:start="361:40" pos:end="361:68">ff_h264_check_intra_pred_mode</name><argument_list pos:start="361:69" pos:end="361:79">(<argument pos:start="361:70" pos:end="361:70"><expr pos:start="361:70" pos:end="361:70"><name pos:start="361:70" pos:end="361:70">h</name></expr></argument>, <argument pos:start="361:73" pos:end="361:75"><expr pos:start="361:73" pos:end="361:75"><name pos:start="361:73" pos:end="361:75">dir</name></expr></argument>, <argument pos:start="361:78" pos:end="361:78"><expr pos:start="361:78" pos:end="361:78"><literal type="number" pos:start="361:78" pos:end="361:78">0</literal></expr></argument>)</argument_list></call><operator pos:start="361:80" pos:end="361:80">)</operator> <operator pos:start="361:82" pos:end="361:83">==</operator> <operator pos:start="361:85" pos:end="361:85">-</operator><literal type="number" pos:start="361:86" pos:end="361:86">1</literal></expr>)</condition> <block pos:start="361:89" pos:end="367:9">{<block_content pos:start="363:13" pos:end="365:22">

            <expr_stmt pos:start="363:13" pos:end="363:75"><expr pos:start="363:13" pos:end="363:74"><call pos:start="363:13" pos:end="363:74"><name pos:start="363:13" pos:end="363:18">av_log</name><argument_list pos:start="363:19" pos:end="363:74">(<argument pos:start="363:20" pos:end="363:27"><expr pos:start="363:20" pos:end="363:27"><name pos:start="363:20" pos:end="363:27"><name pos:start="363:20" pos:end="363:20">h</name><operator pos:start="363:21" pos:end="363:22">-&gt;</operator><name pos:start="363:23" pos:end="363:27">avctx</name></name></expr></argument>, <argument pos:start="363:30" pos:end="363:41"><expr pos:start="363:30" pos:end="363:41"><name pos:start="363:30" pos:end="363:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="363:44" pos:end="363:73"><expr pos:start="363:44" pos:end="363:73"><literal type="string" pos:start="363:44" pos:end="363:73">"check_intra_pred_mode = -1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="365:13" pos:end="365:22">return <expr pos:start="365:20" pos:end="365:21"><operator pos:start="365:20" pos:end="365:20">-</operator><literal type="number" pos:start="365:21" pos:end="365:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="371:9" pos:end="371:50"><expr pos:start="371:9" pos:end="371:49"><name pos:start="371:9" pos:end="371:11">cbp</name>     <operator pos:start="371:17" pos:end="371:17">=</operator> <name pos:start="371:19" pos:end="371:45"><name pos:start="371:19" pos:end="371:32">i_mb_type_info</name><index pos:start="371:33" pos:end="371:45">[<expr pos:start="371:34" pos:end="371:44"><name pos:start="371:34" pos:end="371:40">mb_type</name> <operator pos:start="371:42" pos:end="371:42">-</operator> <literal type="number" pos:start="371:44" pos:end="371:44">8</literal></expr>]</index></name><operator pos:start="371:46" pos:end="371:46">.</operator><name pos:start="371:47" pos:end="371:49">cbp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:37"><expr pos:start="373:9" pos:end="373:36"><name pos:start="373:9" pos:end="373:15">mb_type</name> <operator pos:start="373:17" pos:end="373:17">=</operator> <name pos:start="373:19" pos:end="373:36">MB_TYPE_INTRA16x16</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="379:5" pos:end="397:5"><if pos:start="379:5" pos:end="397:5">if <condition pos:start="379:8" pos:end="379:64">(<expr pos:start="379:9" pos:end="379:63"><operator pos:start="379:9" pos:end="379:9">!</operator><call pos:start="379:10" pos:end="379:26"><name pos:start="379:10" pos:end="379:17">IS_INTER</name><argument_list pos:start="379:18" pos:end="379:26">(<argument pos:start="379:19" pos:end="379:25"><expr pos:start="379:19" pos:end="379:25"><name pos:start="379:19" pos:end="379:25">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="379:28" pos:end="379:29">&amp;&amp;</operator> <name pos:start="379:31" pos:end="379:42"><name pos:start="379:31" pos:end="379:31">h</name><operator pos:start="379:32" pos:end="379:33">-&gt;</operator><name pos:start="379:34" pos:end="379:42">pict_type</name></name> <operator pos:start="379:44" pos:end="379:45">!=</operator> <name pos:start="379:47" pos:end="379:63">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="379:66" pos:end="397:5">{<block_content pos:start="381:9" pos:end="395:9">

        <for pos:start="381:9" pos:end="385:47">for <control pos:start="381:13" pos:end="381:31">(<init pos:start="381:14" pos:end="381:19"><expr pos:start="381:14" pos:end="381:18"><name pos:start="381:14" pos:end="381:14">i</name> <operator pos:start="381:16" pos:end="381:16">=</operator> <literal type="number" pos:start="381:18" pos:end="381:18">0</literal></expr>;</init> <condition pos:start="381:21" pos:end="381:26"><expr pos:start="381:21" pos:end="381:25"><name pos:start="381:21" pos:end="381:21">i</name> <operator pos:start="381:23" pos:end="381:23">&lt;</operator> <literal type="number" pos:start="381:25" pos:end="381:25">4</literal></expr>;</condition> <incr pos:start="381:28" pos:end="381:30"><expr pos:start="381:28" pos:end="381:30"><name pos:start="381:28" pos:end="381:28">i</name><operator pos:start="381:29" pos:end="381:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="383:13" pos:end="385:47"><block_content pos:start="383:13" pos:end="385:47">

            <expr_stmt pos:start="383:13" pos:end="385:47"><expr pos:start="383:13" pos:end="385:46"><call pos:start="383:13" pos:end="385:46"><name pos:start="383:13" pos:end="383:18">memset</name><argument_list pos:start="383:19" pos:end="385:46">(<argument pos:start="383:20" pos:end="383:67"><expr pos:start="383:20" pos:end="383:67"><name pos:start="383:20" pos:end="383:67"><name pos:start="383:20" pos:end="383:20">h</name><operator pos:start="383:21" pos:end="383:22">-&gt;</operator><name pos:start="383:23" pos:end="383:29">cur_pic</name><operator pos:start="383:30" pos:end="383:30">.</operator><name pos:start="383:31" pos:end="383:40">motion_val</name><index pos:start="383:41" pos:end="383:43">[<expr pos:start="383:42" pos:end="383:42"><literal type="number" pos:start="383:42" pos:end="383:42">0</literal></expr>]</index><index pos:start="383:44" pos:end="383:67">[<expr pos:start="383:45" pos:end="383:66"><name pos:start="383:45" pos:end="383:48">b_xy</name> <operator pos:start="383:50" pos:end="383:50">+</operator> <name pos:start="383:52" pos:end="383:52">i</name> <operator pos:start="383:54" pos:end="383:54">*</operator> <name pos:start="383:56" pos:end="383:66"><name pos:start="383:56" pos:end="383:56">h</name><operator pos:start="383:57" pos:end="383:58">-&gt;</operator><name pos:start="383:59" pos:end="383:66">b_stride</name></name></expr>]</index></name></expr></argument>,

                   <argument pos:start="385:20" pos:end="385:20"><expr pos:start="385:20" pos:end="385:20"><literal type="number" pos:start="385:20" pos:end="385:20">0</literal></expr></argument>, <argument pos:start="385:23" pos:end="385:45"><expr pos:start="385:23" pos:end="385:45"><literal type="number" pos:start="385:23" pos:end="385:23">4</literal> <operator pos:start="385:25" pos:end="385:25">*</operator> <literal type="number" pos:start="385:27" pos:end="385:27">2</literal> <operator pos:start="385:29" pos:end="385:29">*</operator> <sizeof pos:start="385:31" pos:end="385:45">sizeof<argument_list pos:start="385:37" pos:end="385:45">(<argument pos:start="385:38" pos:end="385:44"><expr pos:start="385:38" pos:end="385:44"><name pos:start="385:38" pos:end="385:44">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="387:9" pos:end="395:9"><if pos:start="387:9" pos:end="395:9">if <condition pos:start="387:12" pos:end="387:46">(<expr pos:start="387:13" pos:end="387:45"><name pos:start="387:13" pos:end="387:24"><name pos:start="387:13" pos:end="387:13">h</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:24">pict_type</name></name> <operator pos:start="387:26" pos:end="387:27">==</operator> <name pos:start="387:29" pos:end="387:45">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="387:48" pos:end="395:9">{<block_content pos:start="389:13" pos:end="393:51">

            <for pos:start="389:13" pos:end="393:51">for <control pos:start="389:17" pos:end="389:35">(<init pos:start="389:18" pos:end="389:23"><expr pos:start="389:18" pos:end="389:22"><name pos:start="389:18" pos:end="389:18">i</name> <operator pos:start="389:20" pos:end="389:20">=</operator> <literal type="number" pos:start="389:22" pos:end="389:22">0</literal></expr>;</init> <condition pos:start="389:25" pos:end="389:30"><expr pos:start="389:25" pos:end="389:29"><name pos:start="389:25" pos:end="389:25">i</name> <operator pos:start="389:27" pos:end="389:27">&lt;</operator> <literal type="number" pos:start="389:29" pos:end="389:29">4</literal></expr>;</condition> <incr pos:start="389:32" pos:end="389:34"><expr pos:start="389:32" pos:end="389:34"><name pos:start="389:32" pos:end="389:32">i</name><operator pos:start="389:33" pos:end="389:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="391:17" pos:end="393:51"><block_content pos:start="391:17" pos:end="393:51">

                <expr_stmt pos:start="391:17" pos:end="393:51"><expr pos:start="391:17" pos:end="393:50"><call pos:start="391:17" pos:end="393:50"><name pos:start="391:17" pos:end="391:22">memset</name><argument_list pos:start="391:23" pos:end="393:50">(<argument pos:start="391:24" pos:end="391:71"><expr pos:start="391:24" pos:end="391:71"><name pos:start="391:24" pos:end="391:71"><name pos:start="391:24" pos:end="391:24">h</name><operator pos:start="391:25" pos:end="391:26">-&gt;</operator><name pos:start="391:27" pos:end="391:33">cur_pic</name><operator pos:start="391:34" pos:end="391:34">.</operator><name pos:start="391:35" pos:end="391:44">motion_val</name><index pos:start="391:45" pos:end="391:47">[<expr pos:start="391:46" pos:end="391:46"><literal type="number" pos:start="391:46" pos:end="391:46">1</literal></expr>]</index><index pos:start="391:48" pos:end="391:71">[<expr pos:start="391:49" pos:end="391:70"><name pos:start="391:49" pos:end="391:52">b_xy</name> <operator pos:start="391:54" pos:end="391:54">+</operator> <name pos:start="391:56" pos:end="391:56">i</name> <operator pos:start="391:58" pos:end="391:58">*</operator> <name pos:start="391:60" pos:end="391:70"><name pos:start="391:60" pos:end="391:60">h</name><operator pos:start="391:61" pos:end="391:62">-&gt;</operator><name pos:start="391:63" pos:end="391:70">b_stride</name></name></expr>]</index></name></expr></argument>,

                       <argument pos:start="393:24" pos:end="393:24"><expr pos:start="393:24" pos:end="393:24"><literal type="number" pos:start="393:24" pos:end="393:24">0</literal></expr></argument>, <argument pos:start="393:27" pos:end="393:49"><expr pos:start="393:27" pos:end="393:49"><literal type="number" pos:start="393:27" pos:end="393:27">4</literal> <operator pos:start="393:29" pos:end="393:29">*</operator> <literal type="number" pos:start="393:31" pos:end="393:31">2</literal> <operator pos:start="393:33" pos:end="393:33">*</operator> <sizeof pos:start="393:35" pos:end="393:49">sizeof<argument_list pos:start="393:41" pos:end="393:49">(<argument pos:start="393:42" pos:end="393:48"><expr pos:start="393:42" pos:end="393:48"><name pos:start="393:42" pos:end="393:48">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="399:5" pos:end="403:5"><if pos:start="399:5" pos:end="403:5">if <condition pos:start="399:8" pos:end="399:30">(<expr pos:start="399:9" pos:end="399:29"><operator pos:start="399:9" pos:end="399:9">!</operator><call pos:start="399:10" pos:end="399:29"><name pos:start="399:10" pos:end="399:20">IS_INTRA4x4</name><argument_list pos:start="399:21" pos:end="399:29">(<argument pos:start="399:22" pos:end="399:28"><expr pos:start="399:22" pos:end="399:28"><name pos:start="399:22" pos:end="399:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="399:32" pos:end="403:5">{<block_content pos:start="401:9" pos:end="401:71">

        <expr_stmt pos:start="401:9" pos:end="401:71"><expr pos:start="401:9" pos:end="401:70"><call pos:start="401:9" pos:end="401:70"><name pos:start="401:9" pos:end="401:14">memset</name><argument_list pos:start="401:15" pos:end="401:70">(<argument pos:start="401:16" pos:end="401:57"><expr pos:start="401:16" pos:end="401:57"><name pos:start="401:16" pos:end="401:36"><name pos:start="401:16" pos:end="401:16">h</name><operator pos:start="401:17" pos:end="401:18">-&gt;</operator><name pos:start="401:19" pos:end="401:36">intra4x4_pred_mode</name></name> <operator pos:start="401:38" pos:end="401:38">+</operator> <name pos:start="401:40" pos:end="401:57"><name pos:start="401:40" pos:end="401:40">h</name><operator pos:start="401:41" pos:end="401:42">-&gt;</operator><name pos:start="401:43" pos:end="401:50">mb2br_xy</name><index pos:start="401:51" pos:end="401:57">[<expr pos:start="401:52" pos:end="401:56"><name pos:start="401:52" pos:end="401:56">mb_xy</name></expr>]</index></name></expr></argument>, <argument pos:start="401:60" pos:end="401:66"><expr pos:start="401:60" pos:end="401:66"><name pos:start="401:60" pos:end="401:66">DC_PRED</name></expr></argument>, <argument pos:start="401:69" pos:end="401:69"><expr pos:start="401:69" pos:end="401:69"><literal type="number" pos:start="401:69" pos:end="401:69">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="405:5" pos:end="409:5"><if pos:start="405:5" pos:end="409:5">if <condition pos:start="405:8" pos:end="405:63">(<expr pos:start="405:9" pos:end="405:62"><operator pos:start="405:9" pos:end="405:9">!</operator><call pos:start="405:10" pos:end="405:25"><name pos:start="405:10" pos:end="405:16">IS_SKIP</name><argument_list pos:start="405:17" pos:end="405:25">(<argument pos:start="405:18" pos:end="405:24"><expr pos:start="405:18" pos:end="405:24"><name pos:start="405:18" pos:end="405:24">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="405:27" pos:end="405:28">||</operator> <name pos:start="405:30" pos:end="405:41"><name pos:start="405:30" pos:end="405:30">h</name><operator pos:start="405:31" pos:end="405:32">-&gt;</operator><name pos:start="405:33" pos:end="405:41">pict_type</name></name> <operator pos:start="405:43" pos:end="405:44">==</operator> <name pos:start="405:46" pos:end="405:62">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="405:65" pos:end="409:5">{<block_content pos:start="407:9" pos:end="407:73">

        <expr_stmt pos:start="407:9" pos:end="407:73"><expr pos:start="407:9" pos:end="407:72"><call pos:start="407:9" pos:end="407:72"><name pos:start="407:9" pos:end="407:14">memset</name><argument_list pos:start="407:15" pos:end="407:72">(<argument pos:start="407:16" pos:end="407:42"><expr pos:start="407:16" pos:end="407:42"><name pos:start="407:16" pos:end="407:38"><name pos:start="407:16" pos:end="407:16">h</name><operator pos:start="407:17" pos:end="407:18">-&gt;</operator><name pos:start="407:19" pos:end="407:38">non_zero_count_cache</name></name> <operator pos:start="407:40" pos:end="407:40">+</operator> <literal type="number" pos:start="407:42" pos:end="407:42">8</literal></expr></argument>, <argument pos:start="407:45" pos:end="407:45"><expr pos:start="407:45" pos:end="407:45"><literal type="number" pos:start="407:45" pos:end="407:45">0</literal></expr></argument>, <argument pos:start="407:48" pos:end="407:71"><expr pos:start="407:48" pos:end="407:71"><literal type="number" pos:start="407:48" pos:end="407:49">14</literal> <operator pos:start="407:51" pos:end="407:51">*</operator> <literal type="number" pos:start="407:53" pos:end="407:53">8</literal> <operator pos:start="407:55" pos:end="407:55">*</operator> <sizeof pos:start="407:57" pos:end="407:71">sizeof<argument_list pos:start="407:63" pos:end="407:71">(<argument pos:start="407:64" pos:end="407:70"><expr pos:start="407:64" pos:end="407:70"><name pos:start="407:64" pos:end="407:70">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="413:5" pos:end="431:5"><if pos:start="413:5" pos:end="431:5">if <condition pos:start="413:8" pos:end="415:65">(<expr pos:start="413:9" pos:end="415:64"><operator pos:start="413:9" pos:end="413:9">!</operator><call pos:start="413:10" pos:end="413:31"><name pos:start="413:10" pos:end="413:22">IS_INTRA16x16</name><argument_list pos:start="413:23" pos:end="413:31">(<argument pos:start="413:24" pos:end="413:30"><expr pos:start="413:24" pos:end="413:30"><name pos:start="413:24" pos:end="413:30">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="413:33" pos:end="413:34">&amp;&amp;</operator>

        <operator pos:start="415:9" pos:end="415:9">(</operator><operator pos:start="415:10" pos:end="415:10">!</operator><call pos:start="415:11" pos:end="415:26"><name pos:start="415:11" pos:end="415:17">IS_SKIP</name><argument_list pos:start="415:18" pos:end="415:26">(<argument pos:start="415:19" pos:end="415:25"><expr pos:start="415:19" pos:end="415:25"><name pos:start="415:19" pos:end="415:25">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="415:28" pos:end="415:29">||</operator> <name pos:start="415:31" pos:end="415:42"><name pos:start="415:31" pos:end="415:31">h</name><operator pos:start="415:32" pos:end="415:33">-&gt;</operator><name pos:start="415:34" pos:end="415:42">pict_type</name></name> <operator pos:start="415:44" pos:end="415:45">==</operator> <name pos:start="415:47" pos:end="415:63">AV_PICTURE_TYPE_B</name><operator pos:start="415:64" pos:end="415:64">)</operator></expr>)</condition> <block pos:start="415:67" pos:end="431:5">{<block_content pos:start="417:9" pos:end="429:59">

        <if_stmt pos:start="417:9" pos:end="423:9"><if pos:start="417:9" pos:end="423:9">if <condition pos:start="417:12" pos:end="417:54">(<expr pos:start="417:13" pos:end="417:53"><operator pos:start="417:13" pos:end="417:13">(</operator><name pos:start="417:14" pos:end="417:16">vlc</name> <operator pos:start="417:18" pos:end="417:18">=</operator> <call pos:start="417:20" pos:end="417:45"><name pos:start="417:20" pos:end="417:37">svq3_get_ue_golomb</name><argument_list pos:start="417:38" pos:end="417:45">(<argument pos:start="417:39" pos:end="417:44"><expr pos:start="417:39" pos:end="417:44"><operator pos:start="417:39" pos:end="417:39">&amp;</operator><name pos:start="417:40" pos:end="417:44"><name pos:start="417:40" pos:end="417:40">h</name><operator pos:start="417:41" pos:end="417:42">-&gt;</operator><name pos:start="417:43" pos:end="417:44">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="417:46" pos:end="417:46">)</operator> <operator pos:start="417:48" pos:end="417:49">&gt;=</operator> <literal type="number" pos:start="417:51" pos:end="417:53">48U</literal></expr>)</condition><block pos:start="417:55" pos:end="423:9">{<block_content pos:start="419:13" pos:end="421:22">

            <expr_stmt pos:start="419:13" pos:end="419:64"><expr pos:start="419:13" pos:end="419:63"><call pos:start="419:13" pos:end="419:63"><name pos:start="419:13" pos:end="419:18">av_log</name><argument_list pos:start="419:19" pos:end="419:63">(<argument pos:start="419:20" pos:end="419:27"><expr pos:start="419:20" pos:end="419:27"><name pos:start="419:20" pos:end="419:27"><name pos:start="419:20" pos:end="419:20">h</name><operator pos:start="419:21" pos:end="419:22">-&gt;</operator><name pos:start="419:23" pos:end="419:27">avctx</name></name></expr></argument>, <argument pos:start="419:30" pos:end="419:41"><expr pos:start="419:30" pos:end="419:41"><name pos:start="419:30" pos:end="419:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="419:44" pos:end="419:57"><expr pos:start="419:44" pos:end="419:57"><literal type="string" pos:start="419:44" pos:end="419:57">"cbp_vlc=%d\n"</literal></expr></argument>, <argument pos:start="419:60" pos:end="419:62"><expr pos:start="419:60" pos:end="419:62"><name pos:start="419:60" pos:end="419:62">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="421:13" pos:end="421:22">return <expr pos:start="421:20" pos:end="421:21"><operator pos:start="421:20" pos:end="421:20">-</operator><literal type="number" pos:start="421:21" pos:end="421:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="427:9" pos:end="429:59"><expr pos:start="427:9" pos:end="429:58"><name pos:start="427:9" pos:end="427:11">cbp</name> <operator pos:start="427:13" pos:end="427:13">=</operator> <ternary pos:start="427:15" pos:end="429:58"><condition pos:start="427:15" pos:end="427:33"><expr pos:start="427:15" pos:end="427:31"><call pos:start="427:15" pos:end="427:31"><name pos:start="427:15" pos:end="427:22">IS_INTRA</name><argument_list pos:start="427:23" pos:end="427:31">(<argument pos:start="427:24" pos:end="427:30"><expr pos:start="427:24" pos:end="427:30"><name pos:start="427:24" pos:end="427:30">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="427:35" pos:end="427:61"> <expr pos:start="427:35" pos:end="427:61"><name pos:start="427:35" pos:end="427:61"><name pos:start="427:35" pos:end="427:56">golomb_to_intra4x4_cbp</name><index pos:start="427:57" pos:end="427:61">[<expr pos:start="427:58" pos:end="427:60"><name pos:start="427:58" pos:end="427:60">vlc</name></expr>]</index></name></expr>

                                </then><else pos:start="429:33" pos:end="429:58">: <expr pos:start="429:35" pos:end="429:58"><name pos:start="429:35" pos:end="429:58"><name pos:start="429:35" pos:end="429:53">golomb_to_inter_cbp</name><index pos:start="429:54" pos:end="429:58">[<expr pos:start="429:55" pos:end="429:57"><name pos:start="429:55" pos:end="429:57">vlc</name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="433:5" pos:end="449:5"><if pos:start="433:5" pos:end="449:5">if <condition pos:start="433:8" pos:end="435:72">(<expr pos:start="433:9" pos:end="435:71"><call pos:start="433:9" pos:end="433:30"><name pos:start="433:9" pos:end="433:21">IS_INTRA16x16</name><argument_list pos:start="433:22" pos:end="433:30">(<argument pos:start="433:23" pos:end="433:29"><expr pos:start="433:23" pos:end="433:29"><name pos:start="433:23" pos:end="433:29">mb_type</name></expr></argument>)</argument_list></call> <operator pos:start="433:32" pos:end="433:33">||</operator>

        <operator pos:start="435:9" pos:end="435:9">(</operator><name pos:start="435:10" pos:end="435:21"><name pos:start="435:10" pos:end="435:10">h</name><operator pos:start="435:11" pos:end="435:12">-&gt;</operator><name pos:start="435:13" pos:end="435:21">pict_type</name></name> <operator pos:start="435:23" pos:end="435:24">!=</operator> <name pos:start="435:26" pos:end="435:42">AV_PICTURE_TYPE_I</name> <operator pos:start="435:44" pos:end="435:45">&amp;&amp;</operator> <name pos:start="435:47" pos:end="435:63"><name pos:start="435:47" pos:end="435:47">s</name><operator pos:start="435:48" pos:end="435:49">-&gt;</operator><name pos:start="435:50" pos:end="435:63">adaptive_quant</name></name> <operator pos:start="435:65" pos:end="435:66">&amp;&amp;</operator> <name pos:start="435:68" pos:end="435:70">cbp</name><operator pos:start="435:71" pos:end="435:71">)</operator></expr>)</condition> <block pos:start="435:74" pos:end="449:5">{<block_content pos:start="437:9" pos:end="447:9">

        <expr_stmt pos:start="437:9" pos:end="437:48"><expr pos:start="437:9" pos:end="437:47"><name pos:start="437:9" pos:end="437:17"><name pos:start="437:9" pos:end="437:9">h</name><operator pos:start="437:10" pos:end="437:11">-&gt;</operator><name pos:start="437:12" pos:end="437:17">qscale</name></name> <operator pos:start="437:19" pos:end="437:20">+=</operator> <call pos:start="437:22" pos:end="437:47"><name pos:start="437:22" pos:end="437:39">svq3_get_se_golomb</name><argument_list pos:start="437:40" pos:end="437:47">(<argument pos:start="437:41" pos:end="437:46"><expr pos:start="437:41" pos:end="437:46"><operator pos:start="437:41" pos:end="437:41">&amp;</operator><name pos:start="437:42" pos:end="437:46"><name pos:start="437:42" pos:end="437:42">h</name><operator pos:start="437:43" pos:end="437:44">-&gt;</operator><name pos:start="437:45" pos:end="437:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="441:9" pos:end="447:9"><if pos:start="441:9" pos:end="447:9">if <condition pos:start="441:12" pos:end="441:28">(<expr pos:start="441:13" pos:end="441:27"><name pos:start="441:13" pos:end="441:21"><name pos:start="441:13" pos:end="441:13">h</name><operator pos:start="441:14" pos:end="441:15">-&gt;</operator><name pos:start="441:16" pos:end="441:21">qscale</name></name> <operator pos:start="441:23" pos:end="441:23">&gt;</operator> <literal type="number" pos:start="441:25" pos:end="441:27">31u</literal></expr>)</condition> <block pos:start="441:30" pos:end="447:9">{<block_content pos:start="443:13" pos:end="445:22">

            <expr_stmt pos:start="443:13" pos:end="443:69"><expr pos:start="443:13" pos:end="443:68"><call pos:start="443:13" pos:end="443:68"><name pos:start="443:13" pos:end="443:18">av_log</name><argument_list pos:start="443:19" pos:end="443:68">(<argument pos:start="443:20" pos:end="443:27"><expr pos:start="443:20" pos:end="443:27"><name pos:start="443:20" pos:end="443:27"><name pos:start="443:20" pos:end="443:20">h</name><operator pos:start="443:21" pos:end="443:22">-&gt;</operator><name pos:start="443:23" pos:end="443:27">avctx</name></name></expr></argument>, <argument pos:start="443:30" pos:end="443:41"><expr pos:start="443:30" pos:end="443:41"><name pos:start="443:30" pos:end="443:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="443:44" pos:end="443:56"><expr pos:start="443:44" pos:end="443:56"><literal type="string" pos:start="443:44" pos:end="443:56">"qscale:%d\n"</literal></expr></argument>, <argument pos:start="443:59" pos:end="443:67"><expr pos:start="443:59" pos:end="443:67"><name pos:start="443:59" pos:end="443:67"><name pos:start="443:59" pos:end="443:59">h</name><operator pos:start="443:60" pos:end="443:61">-&gt;</operator><name pos:start="443:62" pos:end="443:67">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="445:13" pos:end="445:22">return <expr pos:start="445:20" pos:end="445:21"><operator pos:start="445:20" pos:end="445:20">-</operator><literal type="number" pos:start="445:21" pos:end="445:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="451:5" pos:end="467:5"><if pos:start="451:5" pos:end="467:5">if <condition pos:start="451:8" pos:end="451:31">(<expr pos:start="451:9" pos:end="451:30"><call pos:start="451:9" pos:end="451:30"><name pos:start="451:9" pos:end="451:21">IS_INTRA16x16</name><argument_list pos:start="451:22" pos:end="451:30">(<argument pos:start="451:23" pos:end="451:29"><expr pos:start="451:23" pos:end="451:29"><name pos:start="451:23" pos:end="451:29">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="451:33" pos:end="467:5">{<block_content pos:start="453:9" pos:end="465:9">

        <expr_stmt pos:start="453:9" pos:end="453:41"><expr pos:start="453:9" pos:end="453:40"><call pos:start="453:9" pos:end="453:40"><name pos:start="453:9" pos:end="453:18">AV_ZERO128</name><argument_list pos:start="453:19" pos:end="453:40">(<argument pos:start="453:20" pos:end="453:39"><expr pos:start="453:20" pos:end="453:39"><name pos:start="453:20" pos:end="453:35"><name pos:start="453:20" pos:end="453:20">h</name><operator pos:start="453:21" pos:end="453:22">-&gt;</operator><name pos:start="453:23" pos:end="453:32">mb_luma_dc</name><index pos:start="453:33" pos:end="453:35">[<expr pos:start="453:34" pos:end="453:34"><literal type="number" pos:start="453:34" pos:end="453:34">0</literal></expr>]</index></name> <operator pos:start="453:37" pos:end="453:37">+</operator> <literal type="number" pos:start="453:39" pos:end="453:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:41"><expr pos:start="455:9" pos:end="455:40"><call pos:start="455:9" pos:end="455:40"><name pos:start="455:9" pos:end="455:18">AV_ZERO128</name><argument_list pos:start="455:19" pos:end="455:40">(<argument pos:start="455:20" pos:end="455:39"><expr pos:start="455:20" pos:end="455:39"><name pos:start="455:20" pos:end="455:35"><name pos:start="455:20" pos:end="455:20">h</name><operator pos:start="455:21" pos:end="455:22">-&gt;</operator><name pos:start="455:23" pos:end="455:32">mb_luma_dc</name><index pos:start="455:33" pos:end="455:35">[<expr pos:start="455:34" pos:end="455:34"><literal type="number" pos:start="455:34" pos:end="455:34">0</literal></expr>]</index></name> <operator pos:start="455:37" pos:end="455:37">+</operator> <literal type="number" pos:start="455:39" pos:end="455:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="457:9" pos:end="465:9"><if pos:start="457:9" pos:end="465:9">if <condition pos:start="457:12" pos:end="457:62">(<expr pos:start="457:13" pos:end="457:61"><call pos:start="457:13" pos:end="457:61"><name pos:start="457:13" pos:end="457:29">svq3_decode_block</name><argument_list pos:start="457:30" pos:end="457:61">(<argument pos:start="457:31" pos:end="457:36"><expr pos:start="457:31" pos:end="457:36"><operator pos:start="457:31" pos:end="457:31">&amp;</operator><name pos:start="457:32" pos:end="457:36"><name pos:start="457:32" pos:end="457:32">h</name><operator pos:start="457:33" pos:end="457:34">-&gt;</operator><name pos:start="457:35" pos:end="457:36">gb</name></name></expr></argument>, <argument pos:start="457:39" pos:end="457:54"><expr pos:start="457:39" pos:end="457:54"><name pos:start="457:39" pos:end="457:54"><name pos:start="457:39" pos:end="457:39">h</name><operator pos:start="457:40" pos:end="457:41">-&gt;</operator><name pos:start="457:42" pos:end="457:51">mb_luma_dc</name><index pos:start="457:52" pos:end="457:54">[<expr pos:start="457:53" pos:end="457:53"><literal type="number" pos:start="457:53" pos:end="457:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="457:57" pos:end="457:57"><expr pos:start="457:57" pos:end="457:57"><literal type="number" pos:start="457:57" pos:end="457:57">0</literal></expr></argument>, <argument pos:start="457:60" pos:end="457:60"><expr pos:start="457:60" pos:end="457:60"><literal type="number" pos:start="457:60" pos:end="457:60">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="457:64" pos:end="465:9">{<block_content pos:start="459:13" pos:end="463:22">

            <expr_stmt pos:start="459:13" pos:end="461:59"><expr pos:start="459:13" pos:end="461:58"><call pos:start="459:13" pos:end="461:58"><name pos:start="459:13" pos:end="459:18">av_log</name><argument_list pos:start="459:19" pos:end="461:58">(<argument pos:start="459:20" pos:end="459:27"><expr pos:start="459:20" pos:end="459:27"><name pos:start="459:20" pos:end="459:27"><name pos:start="459:20" pos:end="459:20">h</name><operator pos:start="459:21" pos:end="459:22">-&gt;</operator><name pos:start="459:23" pos:end="459:27">avctx</name></name></expr></argument>, <argument pos:start="459:30" pos:end="459:41"><expr pos:start="459:30" pos:end="459:41"><name pos:start="459:30" pos:end="459:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="461:20" pos:end="461:57"><expr pos:start="461:20" pos:end="461:57"><literal type="string" pos:start="461:20" pos:end="461:57">"error while decoding intra luma dc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="463:13" pos:end="463:22">return <expr pos:start="463:20" pos:end="463:21"><operator pos:start="463:20" pos:end="463:20">-</operator><literal type="number" pos:start="463:21" pos:end="463:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="471:5" pos:end="557:5"><if pos:start="471:5" pos:end="557:5">if <condition pos:start="471:8" pos:end="471:12">(<expr pos:start="471:9" pos:end="471:11"><name pos:start="471:9" pos:end="471:11">cbp</name></expr>)</condition> <block pos:start="471:14" pos:end="557:5">{<block_content pos:start="473:9" pos:end="555:9">

        <decl_stmt pos:start="473:9" pos:end="473:57"><decl pos:start="473:9" pos:end="473:56"><type pos:start="473:9" pos:end="473:17"><specifier pos:start="473:9" pos:end="473:13">const</specifier> <name pos:start="473:15" pos:end="473:17">int</name></type> <name pos:start="473:19" pos:end="473:23">index</name> <init pos:start="473:25" pos:end="473:56">= <expr pos:start="473:27" pos:end="473:56"><ternary pos:start="473:27" pos:end="473:56"><condition pos:start="473:27" pos:end="473:50"><expr pos:start="473:27" pos:end="473:48"><call pos:start="473:27" pos:end="473:48"><name pos:start="473:27" pos:end="473:39">IS_INTRA16x16</name><argument_list pos:start="473:40" pos:end="473:48">(<argument pos:start="473:41" pos:end="473:47"><expr pos:start="473:41" pos:end="473:47"><name pos:start="473:41" pos:end="473:47">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="473:52" pos:end="473:52"> <expr pos:start="473:52" pos:end="473:52"><literal type="number" pos:start="473:52" pos:end="473:52">1</literal></expr> </then><else pos:start="473:54" pos:end="473:56">: <expr pos:start="473:56" pos:end="473:56"><literal type="number" pos:start="473:56" pos:end="473:56">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="475:9" pos:end="475:77"><decl pos:start="475:9" pos:end="475:76"><type pos:start="475:9" pos:end="475:17"><specifier pos:start="475:9" pos:end="475:13">const</specifier> <name pos:start="475:15" pos:end="475:17">int</name></type> <name pos:start="475:19" pos:end="475:22">type</name>  <init pos:start="475:25" pos:end="475:76">= <expr pos:start="475:27" pos:end="475:76"><operator pos:start="475:27" pos:end="475:27">(</operator><ternary pos:start="475:28" pos:end="475:75"><condition pos:start="475:28" pos:end="475:69"><expr pos:start="475:28" pos:end="475:67"><operator pos:start="475:28" pos:end="475:28">(</operator><name pos:start="475:29" pos:end="475:37"><name pos:start="475:29" pos:end="475:29">h</name><operator pos:start="475:30" pos:end="475:31">-&gt;</operator><name pos:start="475:32" pos:end="475:37">qscale</name></name> <operator pos:start="475:39" pos:end="475:39">&lt;</operator> <literal type="number" pos:start="475:41" pos:end="475:42">24</literal> <operator pos:start="475:44" pos:end="475:45">&amp;&amp;</operator> <call pos:start="475:47" pos:end="475:66"><name pos:start="475:47" pos:end="475:57">IS_INTRA4x4</name><argument_list pos:start="475:58" pos:end="475:66">(<argument pos:start="475:59" pos:end="475:65"><expr pos:start="475:59" pos:end="475:65"><name pos:start="475:59" pos:end="475:65">mb_type</name></expr></argument>)</argument_list></call><operator pos:start="475:67" pos:end="475:67">)</operator></expr> ?</condition><then pos:start="475:71" pos:end="475:71"> <expr pos:start="475:71" pos:end="475:71"><literal type="number" pos:start="475:71" pos:end="475:71">2</literal></expr> </then><else pos:start="475:73" pos:end="475:75">: <expr pos:start="475:75" pos:end="475:75"><literal type="number" pos:start="475:75" pos:end="475:75">1</literal></expr></else></ternary><operator pos:start="475:76" pos:end="475:76">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="479:9" pos:end="507:13">for <control pos:start="479:13" pos:end="479:31">(<init pos:start="479:14" pos:end="479:19"><expr pos:start="479:14" pos:end="479:18"><name pos:start="479:14" pos:end="479:14">i</name> <operator pos:start="479:16" pos:end="479:16">=</operator> <literal type="number" pos:start="479:18" pos:end="479:18">0</literal></expr>;</init> <condition pos:start="479:21" pos:end="479:26"><expr pos:start="479:21" pos:end="479:25"><name pos:start="479:21" pos:end="479:21">i</name> <operator pos:start="479:23" pos:end="479:23">&lt;</operator> <literal type="number" pos:start="479:25" pos:end="479:25">4</literal></expr>;</condition> <incr pos:start="479:28" pos:end="479:30"><expr pos:start="479:28" pos:end="479:30"><name pos:start="479:28" pos:end="479:28">i</name><operator pos:start="479:29" pos:end="479:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="481:13" pos:end="507:13"><block_content pos:start="481:13" pos:end="507:13">

            <if_stmt pos:start="481:13" pos:end="507:13"><if pos:start="481:13" pos:end="507:13">if <condition pos:start="481:16" pos:end="481:33">(<expr pos:start="481:17" pos:end="481:32"><operator pos:start="481:17" pos:end="481:17">(</operator><name pos:start="481:18" pos:end="481:20">cbp</name> <operator pos:start="481:22" pos:end="481:22">&amp;</operator> <operator pos:start="481:24" pos:end="481:24">(</operator><literal type="number" pos:start="481:25" pos:end="481:25">1</literal> <operator pos:start="481:27" pos:end="481:28">&lt;&lt;</operator> <name pos:start="481:30" pos:end="481:30">i</name><operator pos:start="481:31" pos:end="481:31">)</operator><operator pos:start="481:32" pos:end="481:32">)</operator></expr>)</condition> <block pos:start="481:35" pos:end="507:13">{<block_content pos:start="483:17" pos:end="505:17">

                <for pos:start="483:17" pos:end="505:17">for <control pos:start="483:21" pos:end="483:39">(<init pos:start="483:22" pos:end="483:27"><expr pos:start="483:22" pos:end="483:26"><name pos:start="483:22" pos:end="483:22">j</name> <operator pos:start="483:24" pos:end="483:24">=</operator> <literal type="number" pos:start="483:26" pos:end="483:26">0</literal></expr>;</init> <condition pos:start="483:29" pos:end="483:34"><expr pos:start="483:29" pos:end="483:33"><name pos:start="483:29" pos:end="483:29">j</name> <operator pos:start="483:31" pos:end="483:31">&lt;</operator> <literal type="number" pos:start="483:33" pos:end="483:33">4</literal></expr>;</condition> <incr pos:start="483:36" pos:end="483:38"><expr pos:start="483:36" pos:end="483:38"><name pos:start="483:36" pos:end="483:36">j</name><operator pos:start="483:37" pos:end="483:38">++</operator></expr></incr>)</control> <block pos:start="483:41" pos:end="505:17">{<block_content pos:start="485:21" pos:end="503:21">

                    <expr_stmt pos:start="485:21" pos:end="489:44"><expr pos:start="485:21" pos:end="489:43"><name pos:start="485:21" pos:end="485:21">k</name> <operator pos:start="485:23" pos:end="485:23">=</operator> <ternary pos:start="485:25" pos:end="489:43"><condition pos:start="485:25" pos:end="485:31"><expr pos:start="485:25" pos:end="485:29"><name pos:start="485:25" pos:end="485:29">index</name></expr> ?</condition><then pos:start="485:33" pos:end="487:59"> <expr pos:start="485:33" pos:end="487:59"><operator pos:start="485:33" pos:end="485:33">(</operator><literal type="number" pos:start="485:34" pos:end="485:34">1</literal> <operator pos:start="485:36" pos:end="485:36">*</operator> <operator pos:start="485:38" pos:end="485:38">(</operator><name pos:start="485:39" pos:end="485:39">j</name> <operator pos:start="485:41" pos:end="485:41">&amp;</operator> <literal type="number" pos:start="485:43" pos:end="485:43">1</literal><operator pos:start="485:44" pos:end="485:44">)</operator> <operator pos:start="485:46" pos:end="485:46">+</operator> <literal type="number" pos:start="485:48" pos:end="485:48">2</literal> <operator pos:start="485:50" pos:end="485:50">*</operator> <operator pos:start="485:52" pos:end="485:52">(</operator><name pos:start="485:53" pos:end="485:53">i</name> <operator pos:start="485:55" pos:end="485:55">&amp;</operator> <literal type="number" pos:start="485:57" pos:end="485:57">1</literal><operator pos:start="485:58" pos:end="485:58">)</operator> <operator pos:start="485:60" pos:end="485:60">+</operator>

                                 <literal type="number" pos:start="487:34" pos:end="487:34">2</literal> <operator pos:start="487:36" pos:end="487:36">*</operator> <operator pos:start="487:38" pos:end="487:38">(</operator><name pos:start="487:39" pos:end="487:39">j</name> <operator pos:start="487:41" pos:end="487:41">&amp;</operator> <literal type="number" pos:start="487:43" pos:end="487:43">2</literal><operator pos:start="487:44" pos:end="487:44">)</operator> <operator pos:start="487:46" pos:end="487:46">+</operator> <literal type="number" pos:start="487:48" pos:end="487:48">4</literal> <operator pos:start="487:50" pos:end="487:50">*</operator> <operator pos:start="487:52" pos:end="487:52">(</operator><name pos:start="487:53" pos:end="487:53">i</name> <operator pos:start="487:55" pos:end="487:55">&amp;</operator> <literal type="number" pos:start="487:57" pos:end="487:57">2</literal><operator pos:start="487:58" pos:end="487:58">)</operator><operator pos:start="487:59" pos:end="487:59">)</operator></expr>

                              </then><else pos:start="489:31" pos:end="489:43">: <expr pos:start="489:33" pos:end="489:43"><operator pos:start="489:33" pos:end="489:33">(</operator><literal type="number" pos:start="489:34" pos:end="489:34">4</literal> <operator pos:start="489:36" pos:end="489:36">*</operator> <name pos:start="489:38" pos:end="489:38">i</name> <operator pos:start="489:40" pos:end="489:40">+</operator> <name pos:start="489:42" pos:end="489:42">j</name><operator pos:start="489:43" pos:end="489:43">)</operator></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="491:21" pos:end="491:58"><expr pos:start="491:21" pos:end="491:57"><name pos:start="491:21" pos:end="491:53"><name pos:start="491:21" pos:end="491:21">h</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:43">non_zero_count_cache</name><index pos:start="491:44" pos:end="491:53">[<expr pos:start="491:45" pos:end="491:52"><name pos:start="491:45" pos:end="491:52"><name pos:start="491:45" pos:end="491:49">scan8</name><index pos:start="491:50" pos:end="491:52">[<expr pos:start="491:51" pos:end="491:51"><name pos:start="491:51" pos:end="491:51">k</name></expr>]</index></name></expr>]</index></name> <operator pos:start="491:55" pos:end="491:55">=</operator> <literal type="number" pos:start="491:57" pos:end="491:57">1</literal></expr>;</expr_stmt>



                    <if_stmt pos:start="495:21" pos:end="503:21"><if pos:start="495:21" pos:end="503:21">if <condition pos:start="495:24" pos:end="495:79">(<expr pos:start="495:25" pos:end="495:78"><call pos:start="495:25" pos:end="495:78"><name pos:start="495:25" pos:end="495:41">svq3_decode_block</name><argument_list pos:start="495:42" pos:end="495:78">(<argument pos:start="495:43" pos:end="495:48"><expr pos:start="495:43" pos:end="495:48"><operator pos:start="495:43" pos:end="495:43">&amp;</operator><name pos:start="495:44" pos:end="495:48"><name pos:start="495:44" pos:end="495:44">h</name><operator pos:start="495:45" pos:end="495:46">-&gt;</operator><name pos:start="495:47" pos:end="495:48">gb</name></name></expr></argument>, <argument pos:start="495:51" pos:end="495:64"><expr pos:start="495:51" pos:end="495:64"><operator pos:start="495:51" pos:end="495:51">&amp;</operator><name pos:start="495:52" pos:end="495:64"><name pos:start="495:52" pos:end="495:52">h</name><operator pos:start="495:53" pos:end="495:54">-&gt;</operator><name pos:start="495:55" pos:end="495:56">mb</name><index pos:start="495:57" pos:end="495:64">[<expr pos:start="495:58" pos:end="495:63"><literal type="number" pos:start="495:58" pos:end="495:59">16</literal> <operator pos:start="495:61" pos:end="495:61">*</operator> <name pos:start="495:63" pos:end="495:63">k</name></expr>]</index></name></expr></argument>, <argument pos:start="495:67" pos:end="495:71"><expr pos:start="495:67" pos:end="495:71"><name pos:start="495:67" pos:end="495:71">index</name></expr></argument>, <argument pos:start="495:74" pos:end="495:77"><expr pos:start="495:74" pos:end="495:77"><name pos:start="495:74" pos:end="495:77">type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="495:81" pos:end="503:21">{<block_content pos:start="497:25" pos:end="501:34">

                        <expr_stmt pos:start="497:25" pos:end="499:63"><expr pos:start="497:25" pos:end="499:62"><call pos:start="497:25" pos:end="499:62"><name pos:start="497:25" pos:end="497:30">av_log</name><argument_list pos:start="497:31" pos:end="499:62">(<argument pos:start="497:32" pos:end="497:39"><expr pos:start="497:32" pos:end="497:39"><name pos:start="497:32" pos:end="497:39"><name pos:start="497:32" pos:end="497:32">h</name><operator pos:start="497:33" pos:end="497:34">-&gt;</operator><name pos:start="497:35" pos:end="497:39">avctx</name></name></expr></argument>, <argument pos:start="497:42" pos:end="497:53"><expr pos:start="497:42" pos:end="497:53"><name pos:start="497:42" pos:end="497:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="499:32" pos:end="499:61"><expr pos:start="499:32" pos:end="499:61"><literal type="string" pos:start="499:32" pos:end="499:61">"error while decoding block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="501:25" pos:end="501:34">return <expr pos:start="501:32" pos:end="501:33"><operator pos:start="501:32" pos:end="501:32">-</operator><literal type="number" pos:start="501:33" pos:end="501:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <if_stmt pos:start="511:9" pos:end="555:9"><if pos:start="511:9" pos:end="555:9">if <condition pos:start="511:12" pos:end="511:25">(<expr pos:start="511:13" pos:end="511:24"><operator pos:start="511:13" pos:end="511:13">(</operator><name pos:start="511:14" pos:end="511:16">cbp</name> <operator pos:start="511:18" pos:end="511:18">&amp;</operator> <literal type="number" pos:start="511:20" pos:end="511:23">0x30</literal><operator pos:start="511:24" pos:end="511:24">)</operator></expr>)</condition> <block pos:start="511:27" pos:end="555:9">{<block_content pos:start="513:13" pos:end="553:13">

            <for pos:start="513:13" pos:end="523:17">for <control pos:start="513:17" pos:end="513:35">(<init pos:start="513:18" pos:end="513:23"><expr pos:start="513:18" pos:end="513:22"><name pos:start="513:18" pos:end="513:18">i</name> <operator pos:start="513:20" pos:end="513:20">=</operator> <literal type="number" pos:start="513:22" pos:end="513:22">1</literal></expr>;</init> <condition pos:start="513:25" pos:end="513:30"><expr pos:start="513:25" pos:end="513:29"><name pos:start="513:25" pos:end="513:25">i</name> <operator pos:start="513:27" pos:end="513:27">&lt;</operator> <literal type="number" pos:start="513:29" pos:end="513:29">3</literal></expr>;</condition> <incr pos:start="513:32" pos:end="513:34"><expr pos:start="513:32" pos:end="513:34"><operator pos:start="513:32" pos:end="513:33">++</operator><name pos:start="513:34" pos:end="513:34">i</name></expr></incr>)</control><block type="pseudo" pos:start="515:17" pos:end="523:17"><block_content pos:start="515:17" pos:end="523:17">

                <if_stmt pos:start="515:17" pos:end="523:17"><if pos:start="515:17" pos:end="523:17">if <condition pos:start="515:20" pos:end="515:73">(<expr pos:start="515:21" pos:end="515:72"><call pos:start="515:21" pos:end="515:72"><name pos:start="515:21" pos:end="515:37">svq3_decode_block</name><argument_list pos:start="515:38" pos:end="515:72">(<argument pos:start="515:39" pos:end="515:44"><expr pos:start="515:39" pos:end="515:44"><operator pos:start="515:39" pos:end="515:39">&amp;</operator><name pos:start="515:40" pos:end="515:44"><name pos:start="515:40" pos:end="515:40">h</name><operator pos:start="515:41" pos:end="515:42">-&gt;</operator><name pos:start="515:43" pos:end="515:44">gb</name></name></expr></argument>, <argument pos:start="515:47" pos:end="515:65"><expr pos:start="515:47" pos:end="515:65"><operator pos:start="515:47" pos:end="515:47">&amp;</operator><name pos:start="515:48" pos:end="515:65"><name pos:start="515:48" pos:end="515:48">h</name><operator pos:start="515:49" pos:end="515:50">-&gt;</operator><name pos:start="515:51" pos:end="515:52">mb</name><index pos:start="515:53" pos:end="515:65">[<expr pos:start="515:54" pos:end="515:64"><literal type="number" pos:start="515:54" pos:end="515:55">16</literal> <operator pos:start="515:57" pos:end="515:57">*</operator> <literal type="number" pos:start="515:59" pos:end="515:60">16</literal> <operator pos:start="515:62" pos:end="515:62">*</operator> <name pos:start="515:64" pos:end="515:64">i</name></expr>]</index></name></expr></argument>, <argument pos:start="515:68" pos:end="515:68"><expr pos:start="515:68" pos:end="515:68"><literal type="number" pos:start="515:68" pos:end="515:68">0</literal></expr></argument>, <argument pos:start="515:71" pos:end="515:71"><expr pos:start="515:71" pos:end="515:71"><literal type="number" pos:start="515:71" pos:end="515:71">3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="515:75" pos:end="523:17">{<block_content pos:start="517:21" pos:end="521:30">

                    <expr_stmt pos:start="517:21" pos:end="519:69"><expr pos:start="517:21" pos:end="519:68"><call pos:start="517:21" pos:end="519:68"><name pos:start="517:21" pos:end="517:26">av_log</name><argument_list pos:start="517:27" pos:end="519:68">(<argument pos:start="517:28" pos:end="517:35"><expr pos:start="517:28" pos:end="517:35"><name pos:start="517:28" pos:end="517:35"><name pos:start="517:28" pos:end="517:28">h</name><operator pos:start="517:29" pos:end="517:30">-&gt;</operator><name pos:start="517:31" pos:end="517:35">avctx</name></name></expr></argument>, <argument pos:start="517:38" pos:end="517:49"><expr pos:start="517:38" pos:end="517:49"><name pos:start="517:38" pos:end="517:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="519:28" pos:end="519:67"><expr pos:start="519:28" pos:end="519:67"><literal type="string" pos:start="519:28" pos:end="519:67">"error while decoding chroma dc block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="521:21" pos:end="521:30">return <expr pos:start="521:28" pos:end="521:29"><operator pos:start="521:28" pos:end="521:28">-</operator><literal type="number" pos:start="521:29" pos:end="521:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt></block_content></block></for>



            <if_stmt pos:start="527:13" pos:end="553:13"><if pos:start="527:13" pos:end="553:13">if <condition pos:start="527:16" pos:end="527:29">(<expr pos:start="527:17" pos:end="527:28"><operator pos:start="527:17" pos:end="527:17">(</operator><name pos:start="527:18" pos:end="527:20">cbp</name> <operator pos:start="527:22" pos:end="527:22">&amp;</operator> <literal type="number" pos:start="527:24" pos:end="527:27">0x20</literal><operator pos:start="527:28" pos:end="527:28">)</operator></expr>)</condition> <block pos:start="527:31" pos:end="553:13">{<block_content pos:start="529:17" pos:end="551:17">

                <for pos:start="529:17" pos:end="551:17">for <control pos:start="529:21" pos:end="529:39">(<init pos:start="529:22" pos:end="529:27"><expr pos:start="529:22" pos:end="529:26"><name pos:start="529:22" pos:end="529:22">i</name> <operator pos:start="529:24" pos:end="529:24">=</operator> <literal type="number" pos:start="529:26" pos:end="529:26">1</literal></expr>;</init> <condition pos:start="529:29" pos:end="529:34"><expr pos:start="529:29" pos:end="529:33"><name pos:start="529:29" pos:end="529:29">i</name> <operator pos:start="529:31" pos:end="529:31">&lt;</operator> <literal type="number" pos:start="529:33" pos:end="529:33">3</literal></expr>;</condition> <incr pos:start="529:36" pos:end="529:38"><expr pos:start="529:36" pos:end="529:38"><name pos:start="529:36" pos:end="529:36">i</name><operator pos:start="529:37" pos:end="529:38">++</operator></expr></incr>)</control> <block pos:start="529:41" pos:end="551:17">{<block_content pos:start="531:21" pos:end="549:21">

                    <for pos:start="531:21" pos:end="549:21">for <control pos:start="531:25" pos:end="531:43">(<init pos:start="531:26" pos:end="531:31"><expr pos:start="531:26" pos:end="531:30"><name pos:start="531:26" pos:end="531:26">j</name> <operator pos:start="531:28" pos:end="531:28">=</operator> <literal type="number" pos:start="531:30" pos:end="531:30">0</literal></expr>;</init> <condition pos:start="531:33" pos:end="531:38"><expr pos:start="531:33" pos:end="531:37"><name pos:start="531:33" pos:end="531:33">j</name> <operator pos:start="531:35" pos:end="531:35">&lt;</operator> <literal type="number" pos:start="531:37" pos:end="531:37">4</literal></expr>;</condition> <incr pos:start="531:40" pos:end="531:42"><expr pos:start="531:40" pos:end="531:42"><name pos:start="531:40" pos:end="531:40">j</name><operator pos:start="531:41" pos:end="531:42">++</operator></expr></incr>)</control> <block pos:start="531:45" pos:end="549:21">{<block_content pos:start="533:25" pos:end="547:25">

                        <expr_stmt pos:start="533:25" pos:end="533:71"><expr pos:start="533:25" pos:end="533:70"><name pos:start="533:25" pos:end="533:25">k</name>                                 <operator pos:start="533:59" pos:end="533:59">=</operator> <literal type="number" pos:start="533:61" pos:end="533:62">16</literal> <operator pos:start="533:64" pos:end="533:64">*</operator> <name pos:start="533:66" pos:end="533:66">i</name> <operator pos:start="533:68" pos:end="533:68">+</operator> <name pos:start="533:70" pos:end="533:70">j</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="535:25" pos:end="535:62"><expr pos:start="535:25" pos:end="535:61"><name pos:start="535:25" pos:end="535:57"><name pos:start="535:25" pos:end="535:25">h</name><operator pos:start="535:26" pos:end="535:27">-&gt;</operator><name pos:start="535:28" pos:end="535:47">non_zero_count_cache</name><index pos:start="535:48" pos:end="535:57">[<expr pos:start="535:49" pos:end="535:56"><name pos:start="535:49" pos:end="535:56"><name pos:start="535:49" pos:end="535:53">scan8</name><index pos:start="535:54" pos:end="535:56">[<expr pos:start="535:55" pos:end="535:55"><name pos:start="535:55" pos:end="535:55">k</name></expr>]</index></name></expr>]</index></name> <operator pos:start="535:59" pos:end="535:59">=</operator> <literal type="number" pos:start="535:61" pos:end="535:61">1</literal></expr>;</expr_stmt>



                        <if_stmt pos:start="539:25" pos:end="547:25"><if pos:start="539:25" pos:end="547:25">if <condition pos:start="539:28" pos:end="539:76">(<expr pos:start="539:29" pos:end="539:75"><call pos:start="539:29" pos:end="539:75"><name pos:start="539:29" pos:end="539:45">svq3_decode_block</name><argument_list pos:start="539:46" pos:end="539:75">(<argument pos:start="539:47" pos:end="539:52"><expr pos:start="539:47" pos:end="539:52"><operator pos:start="539:47" pos:end="539:47">&amp;</operator><name pos:start="539:48" pos:end="539:52"><name pos:start="539:48" pos:end="539:48">h</name><operator pos:start="539:49" pos:end="539:50">-&gt;</operator><name pos:start="539:51" pos:end="539:52">gb</name></name></expr></argument>, <argument pos:start="539:55" pos:end="539:68"><expr pos:start="539:55" pos:end="539:68"><operator pos:start="539:55" pos:end="539:55">&amp;</operator><name pos:start="539:56" pos:end="539:68"><name pos:start="539:56" pos:end="539:56">h</name><operator pos:start="539:57" pos:end="539:58">-&gt;</operator><name pos:start="539:59" pos:end="539:60">mb</name><index pos:start="539:61" pos:end="539:68">[<expr pos:start="539:62" pos:end="539:67"><literal type="number" pos:start="539:62" pos:end="539:63">16</literal> <operator pos:start="539:65" pos:end="539:65">*</operator> <name pos:start="539:67" pos:end="539:67">k</name></expr>]</index></name></expr></argument>, <argument pos:start="539:71" pos:end="539:71"><expr pos:start="539:71" pos:end="539:71"><literal type="number" pos:start="539:71" pos:end="539:71">1</literal></expr></argument>, <argument pos:start="539:74" pos:end="539:74"><expr pos:start="539:74" pos:end="539:74"><literal type="number" pos:start="539:74" pos:end="539:74">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="539:78" pos:end="547:25">{<block_content pos:start="541:29" pos:end="545:38">

                            <expr_stmt pos:start="541:29" pos:end="543:77"><expr pos:start="541:29" pos:end="543:76"><call pos:start="541:29" pos:end="543:76"><name pos:start="541:29" pos:end="541:34">av_log</name><argument_list pos:start="541:35" pos:end="543:76">(<argument pos:start="541:36" pos:end="541:43"><expr pos:start="541:36" pos:end="541:43"><name pos:start="541:36" pos:end="541:43"><name pos:start="541:36" pos:end="541:36">h</name><operator pos:start="541:37" pos:end="541:38">-&gt;</operator><name pos:start="541:39" pos:end="541:43">avctx</name></name></expr></argument>, <argument pos:start="541:46" pos:end="541:57"><expr pos:start="541:46" pos:end="541:57"><name pos:start="541:46" pos:end="541:57">AV_LOG_ERROR</name></expr></argument>,

                                   <argument pos:start="543:36" pos:end="543:75"><expr pos:start="543:36" pos:end="543:75"><literal type="string" pos:start="543:36" pos:end="543:75">"error while decoding chroma ac block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="545:29" pos:end="545:38">return <expr pos:start="545:36" pos:end="545:37"><operator pos:start="545:36" pos:end="545:36">-</operator><literal type="number" pos:start="545:37" pos:end="545:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="561:5" pos:end="561:46"><expr pos:start="561:5" pos:end="561:45"><name pos:start="561:5" pos:end="561:10"><name pos:start="561:5" pos:end="561:5">h</name><operator pos:start="561:6" pos:end="561:7">-&gt;</operator><name pos:start="561:8" pos:end="561:10">cbp</name></name>                              <operator pos:start="561:41" pos:end="561:41">=</operator> <name pos:start="561:43" pos:end="561:45">cbp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="563:5" pos:end="563:40"><expr pos:start="563:5" pos:end="563:39"><name pos:start="563:5" pos:end="563:29"><name pos:start="563:5" pos:end="563:5">h</name><operator pos:start="563:6" pos:end="563:7">-&gt;</operator><name pos:start="563:8" pos:end="563:14">cur_pic</name><operator pos:start="563:15" pos:end="563:15">.</operator><name pos:start="563:16" pos:end="563:22">mb_type</name><index pos:start="563:23" pos:end="563:29">[<expr pos:start="563:24" pos:end="563:28"><name pos:start="563:24" pos:end="563:28">mb_xy</name></expr>]</index></name> <operator pos:start="563:31" pos:end="563:31">=</operator> <name pos:start="563:33" pos:end="563:39">mb_type</name></expr>;</expr_stmt>



    <if_stmt pos:start="567:5" pos:end="569:78"><if pos:start="567:5" pos:end="569:78">if <condition pos:start="567:8" pos:end="567:26">(<expr pos:start="567:9" pos:end="567:25"><call pos:start="567:9" pos:end="567:25"><name pos:start="567:9" pos:end="567:16">IS_INTRA</name><argument_list pos:start="567:17" pos:end="567:25">(<argument pos:start="567:18" pos:end="567:24"><expr pos:start="567:18" pos:end="567:24"><name pos:start="567:18" pos:end="567:24">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="569:9" pos:end="569:78"><block_content pos:start="569:9" pos:end="569:78">

        <expr_stmt pos:start="569:9" pos:end="569:78"><expr pos:start="569:9" pos:end="569:77"><name pos:start="569:9" pos:end="569:27"><name pos:start="569:9" pos:end="569:9">h</name><operator pos:start="569:10" pos:end="569:11">-&gt;</operator><name pos:start="569:12" pos:end="569:27">chroma_pred_mode</name></name> <operator pos:start="569:29" pos:end="569:29">=</operator> <call pos:start="569:31" pos:end="569:77"><name pos:start="569:31" pos:end="569:59">ff_h264_check_intra_pred_mode</name><argument_list pos:start="569:60" pos:end="569:77">(<argument pos:start="569:61" pos:end="569:61"><expr pos:start="569:61" pos:end="569:61"><name pos:start="569:61" pos:end="569:61">h</name></expr></argument>, <argument pos:start="569:64" pos:end="569:73"><expr pos:start="569:64" pos:end="569:73"><name pos:start="569:64" pos:end="569:73">DC_PRED8x8</name></expr></argument>, <argument pos:start="569:76" pos:end="569:76"><expr pos:start="569:76" pos:end="569:76"><literal type="number" pos:start="569:76" pos:end="569:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="573:5" pos:end="573:13">return <expr pos:start="573:12" pos:end="573:12"><literal type="number" pos:start="573:12" pos:end="573:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
