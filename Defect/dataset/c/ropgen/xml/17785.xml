<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17785.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">merge_context_after_encode</name><parameter_list pos:start="1:39" pos:end="1:80">(<parameter pos:start="1:40" pos:end="1:58"><decl pos:start="1:40" pos:end="1:58"><type pos:start="1:40" pos:end="1:58"><name pos:start="1:40" pos:end="1:53">MpegEncContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">dst</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:79"><decl pos:start="1:61" pos:end="1:79"><type pos:start="1:61" pos:end="1:79"><name pos:start="1:61" pos:end="1:74">MpegEncContext</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:79">src</name></decl></parameter>)</parameter_list><block pos:start="1:81" pos:end="61:1">{<block_content pos:start="3:5" pos:end="59:29">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="7:5" pos:end="7:24"><expr pos:start="7:5" pos:end="7:23"><call pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:9">MERGE</name><argument_list pos:start="7:10" pos:end="7:23">(<argument pos:start="7:11" pos:end="7:22"><expr pos:start="7:11" pos:end="7:22"><name pos:start="7:11" pos:end="7:22"><name pos:start="7:11" pos:end="7:19">dct_count</name><index pos:start="7:20" pos:end="7:22">[<expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="7:26" pos:end="7:79">//note, the other dct vars are not part of the context</comment>

    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:9">MERGE</name><argument_list pos:start="9:10" pos:end="9:23">(<argument pos:start="9:11" pos:end="9:22"><expr pos:start="9:11" pos:end="9:22"><name pos:start="9:11" pos:end="9:22"><name pos:start="9:11" pos:end="9:19">dct_count</name><index pos:start="9:20" pos:end="9:22">[<expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><call pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:9">MERGE</name><argument_list pos:start="11:10" pos:end="11:18">(<argument pos:start="11:11" pos:end="11:17"><expr pos:start="11:11" pos:end="11:17"><name pos:start="11:11" pos:end="11:17">mv_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><call pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:9">MERGE</name><argument_list pos:start="13:10" pos:end="13:21">(<argument pos:start="13:11" pos:end="13:20"><expr pos:start="13:11" pos:end="13:20"><name pos:start="13:11" pos:end="13:20">i_tex_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><call pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:9">MERGE</name><argument_list pos:start="15:10" pos:end="15:21">(<argument pos:start="15:11" pos:end="15:20"><expr pos:start="15:11" pos:end="15:20"><name pos:start="15:11" pos:end="15:20">p_tex_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><call pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:9">MERGE</name><argument_list pos:start="17:10" pos:end="17:18">(<argument pos:start="17:11" pos:end="17:17"><expr pos:start="17:11" pos:end="17:17"><name pos:start="17:11" pos:end="17:17">i_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:9">MERGE</name><argument_list pos:start="19:10" pos:end="19:18">(<argument pos:start="19:11" pos:end="19:17"><expr pos:start="19:11" pos:end="19:17"><name pos:start="19:11" pos:end="19:17">f_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><call pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:9">MERGE</name><argument_list pos:start="21:10" pos:end="21:18">(<argument pos:start="21:11" pos:end="21:17"><expr pos:start="21:11" pos:end="21:17"><name pos:start="21:11" pos:end="21:17">b_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><call pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:9">MERGE</name><argument_list pos:start="23:10" pos:end="23:21">(<argument pos:start="23:11" pos:end="23:20"><expr pos:start="23:11" pos:end="23:20"><name pos:start="23:11" pos:end="23:20">skip_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><call pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:9">MERGE</name><argument_list pos:start="25:10" pos:end="25:20">(<argument pos:start="25:11" pos:end="25:19"><expr pos:start="25:11" pos:end="25:19"><name pos:start="25:11" pos:end="25:19">misc_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><call pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:9">MERGE</name><argument_list pos:start="27:10" pos:end="27:25">(<argument pos:start="27:11" pos:end="27:24"><expr pos:start="27:11" pos:end="27:24"><name pos:start="27:11" pos:end="27:24"><name pos:start="27:11" pos:end="27:12">er</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:24">error_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><call pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:9">MERGE</name><argument_list pos:start="29:10" pos:end="29:28">(<argument pos:start="29:11" pos:end="29:27"><expr pos:start="29:11" pos:end="29:27"><name pos:start="29:11" pos:end="29:27">padding_bug_score</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><call pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:9">MERGE</name><argument_list pos:start="31:10" pos:end="31:38">(<argument pos:start="31:11" pos:end="31:37"><expr pos:start="31:11" pos:end="31:37"><name pos:start="31:11" pos:end="31:37"><name pos:start="31:11" pos:end="31:25">current_picture</name><operator pos:start="31:26" pos:end="31:26">.</operator><name pos:start="31:27" pos:end="31:27">f</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:34">error</name><index pos:start="31:35" pos:end="31:37">[<expr pos:start="31:36" pos:end="31:36"><literal type="number" pos:start="31:36" pos:end="31:36">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:9">MERGE</name><argument_list pos:start="33:10" pos:end="33:38">(<argument pos:start="33:11" pos:end="33:37"><expr pos:start="33:11" pos:end="33:37"><name pos:start="33:11" pos:end="33:37"><name pos:start="33:11" pos:end="33:25">current_picture</name><operator pos:start="33:26" pos:end="33:26">.</operator><name pos:start="33:27" pos:end="33:27">f</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:34">error</name><index pos:start="33:35" pos:end="33:37">[<expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><call pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:9">MERGE</name><argument_list pos:start="35:10" pos:end="35:38">(<argument pos:start="35:11" pos:end="35:37"><expr pos:start="35:11" pos:end="35:37"><name pos:start="35:11" pos:end="35:37"><name pos:start="35:11" pos:end="35:25">current_picture</name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:27">f</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:34">error</name><index pos:start="35:35" pos:end="35:37">[<expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if<condition pos:start="39:7" pos:end="39:35">(<expr pos:start="39:8" pos:end="39:34"><name pos:start="39:8" pos:end="39:34"><name pos:start="39:8" pos:end="39:10">dst</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:17">avctx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:34">noise_reduction</name></name></expr>)</condition><block pos:start="39:36" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:9">

        <for pos:start="41:9" pos:end="47:9">for<control pos:start="41:12" pos:end="41:27">(<init pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">=</operator><literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</init> <condition pos:start="41:18" pos:end="41:22"><expr pos:start="41:18" pos:end="41:21"><name pos:start="41:18" pos:end="41:18">i</name><operator pos:start="41:19" pos:end="41:19">&lt;</operator><literal type="number" pos:start="41:20" pos:end="41:21">64</literal></expr>;</condition> <incr pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:24">i</name><operator pos:start="41:25" pos:end="41:26">++</operator></expr></incr>)</control><block pos:start="41:28" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:39">

            <expr_stmt pos:start="43:13" pos:end="43:39"><expr pos:start="43:13" pos:end="43:38"><call pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:17">MERGE</name><argument_list pos:start="43:18" pos:end="43:38">(<argument pos:start="43:19" pos:end="43:37"><expr pos:start="43:19" pos:end="43:37"><name pos:start="43:19" pos:end="43:37"><name pos:start="43:19" pos:end="43:31">dct_error_sum</name><index pos:start="43:32" pos:end="43:34">[<expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr>]</index><index pos:start="43:35" pos:end="43:37">[<expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:39"><expr pos:start="45:13" pos:end="45:38"><call pos:start="45:13" pos:end="45:38"><name pos:start="45:13" pos:end="45:17">MERGE</name><argument_list pos:start="45:18" pos:end="45:38">(<argument pos:start="45:19" pos:end="45:37"><expr pos:start="45:19" pos:end="45:37"><name pos:start="45:19" pos:end="45:37"><name pos:start="45:19" pos:end="45:31">dct_error_sum</name><index pos:start="45:32" pos:end="45:34">[<expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">1</literal></expr>]</index><index pos:start="45:35" pos:end="45:37">[<expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:10">assert</name><argument_list pos:start="53:11" pos:end="53:44">(<argument pos:start="53:12" pos:end="53:43"><expr pos:start="53:12" pos:end="53:43"><call pos:start="53:12" pos:end="53:35"><name pos:start="53:12" pos:end="53:25">put_bits_count</name><argument_list pos:start="53:26" pos:end="53:35">(<argument pos:start="53:27" pos:end="53:34"><expr pos:start="53:27" pos:end="53:34"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:34"><name pos:start="53:28" pos:end="53:30">src</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:34">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="53:37" pos:end="53:37">%</operator> <literal type="number" pos:start="53:39" pos:end="53:39">8</literal> <operator pos:start="53:41" pos:end="53:42">==</operator><literal type="number" pos:start="53:43" pos:end="53:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:10">assert</name><argument_list pos:start="55:11" pos:end="55:44">(<argument pos:start="55:12" pos:end="55:43"><expr pos:start="55:12" pos:end="55:43"><call pos:start="55:12" pos:end="55:35"><name pos:start="55:12" pos:end="55:25">put_bits_count</name><argument_list pos:start="55:26" pos:end="55:35">(<argument pos:start="55:27" pos:end="55:34"><expr pos:start="55:27" pos:end="55:34"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:34"><name pos:start="55:28" pos:end="55:30">dst</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:34">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="55:37" pos:end="55:37">%</operator> <literal type="number" pos:start="55:39" pos:end="55:39">8</literal> <operator pos:start="55:41" pos:end="55:42">==</operator><literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:70"><expr pos:start="57:5" pos:end="57:69"><call pos:start="57:5" pos:end="57:69"><name pos:start="57:5" pos:end="57:20">avpriv_copy_bits</name><argument_list pos:start="57:21" pos:end="57:69">(<argument pos:start="57:22" pos:end="57:29"><expr pos:start="57:22" pos:end="57:29"><operator pos:start="57:22" pos:end="57:22">&amp;</operator><name pos:start="57:23" pos:end="57:29"><name pos:start="57:23" pos:end="57:25">dst</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:29">pb</name></name></expr></argument>, <argument pos:start="57:32" pos:end="57:42"><expr pos:start="57:32" pos:end="57:42"><name pos:start="57:32" pos:end="57:42"><name pos:start="57:32" pos:end="57:34">src</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:38">pb</name><operator pos:start="57:39" pos:end="57:39">.</operator><name pos:start="57:40" pos:end="57:42">buf</name></name></expr></argument>, <argument pos:start="57:45" pos:end="57:68"><expr pos:start="57:45" pos:end="57:68"><call pos:start="57:45" pos:end="57:68"><name pos:start="57:45" pos:end="57:58">put_bits_count</name><argument_list pos:start="57:59" pos:end="57:68">(<argument pos:start="57:60" pos:end="57:67"><expr pos:start="57:60" pos:end="57:67"><operator pos:start="57:60" pos:end="57:60">&amp;</operator><name pos:start="57:61" pos:end="57:67"><name pos:start="57:61" pos:end="57:63">src</name><operator pos:start="57:64" pos:end="57:65">-&gt;</operator><name pos:start="57:66" pos:end="57:67">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><call pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:18">flush_put_bits</name><argument_list pos:start="59:19" pos:end="59:28">(<argument pos:start="59:20" pos:end="59:27"><expr pos:start="59:20" pos:end="59:27"><operator pos:start="59:20" pos:end="59:20">&amp;</operator><name pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:23">dst</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
