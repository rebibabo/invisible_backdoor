<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12742.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">gxf_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">GXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">gxf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:48">= <expr pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:48">[<expr pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:33">pkt</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:47">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name> <init pos:start="11:17" pos:end="11:31">= <expr pos:start="11:19" pos:end="11:31"><call pos:start="11:19" pos:end="11:31"><name pos:start="11:19" pos:end="11:27">avio_tell</name><argument_list pos:start="11:28" pos:end="11:31">(<argument pos:start="11:29" pos:end="11:30"><expr pos:start="11:29" pos:end="11:30"><name pos:start="11:29" pos:end="11:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">padding</name> <init pos:start="13:17" pos:end="13:19">= <expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:27">packet_start_offset</name> <init pos:start="15:29" pos:end="15:50">= <expr pos:start="15:31" pos:end="15:50"><call pos:start="15:31" pos:end="15:43"><name pos:start="15:31" pos:end="15:39">avio_tell</name><argument_list pos:start="15:40" pos:end="15:43">(<argument pos:start="15:41" pos:end="15:42"><expr pos:start="15:41" pos:end="15:42"><name pos:start="15:41" pos:end="15:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="15:45" pos:end="15:45">/</operator> <literal type="number" pos:start="15:47" pos:end="15:50">1024</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><call pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:27">gxf_write_packet_header</name><argument_list pos:start="19:28" pos:end="19:42">(<argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><name pos:start="19:29" pos:end="19:30">pb</name></expr></argument>, <argument pos:start="19:33" pos:end="19:41"><expr pos:start="19:33" pos:end="19:41"><name pos:start="19:33" pos:end="19:41">PKT_MEDIA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:52"><if pos:start="21:5" pos:end="23:36">if <condition pos:start="21:8" pos:end="21:71">(<expr pos:start="21:9" pos:end="21:70"><name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:10">st</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:17">codec</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:27">codec_id</name></name> <operator pos:start="21:29" pos:end="21:30">==</operator> <name pos:start="21:32" pos:end="21:53">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="21:55" pos:end="21:56">&amp;&amp;</operator> <name pos:start="21:58" pos:end="21:66"><name pos:start="21:58" pos:end="21:60">pkt</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:66">size</name></name> <operator pos:start="21:68" pos:end="21:68">%</operator> <literal type="number" pos:start="21:70" pos:end="21:70">4</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:36"><block_content pos:start="23:9" pos:end="23:36"> <comment type="block" pos:start="21:73" pos:end="21:106">/* MPEG-2 frames must be padded */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:15">padding</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="number" pos:start="23:19" pos:end="23:21">4</literal> <operator pos:start="23:21" pos:end="23:21">-</operator> <name pos:start="23:23" pos:end="23:31"><name pos:start="23:23" pos:end="23:25">pkt</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:31">size</name></name> <operator pos:start="23:33" pos:end="23:33">%</operator> <literal type="number" pos:start="23:35" pos:end="23:35">4</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="25:5" pos:end="27:52">else if <condition pos:start="25:13" pos:end="25:57">(<expr pos:start="25:14" pos:end="25:56"><name pos:start="25:14" pos:end="25:34"><name pos:start="25:14" pos:end="25:15">st</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:22">codec</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:34">codec_type</name></name> <operator pos:start="25:36" pos:end="25:37">==</operator> <name pos:start="25:39" pos:end="25:56">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:52"><block_content pos:start="27:9" pos:end="27:52">

        <expr_stmt pos:start="27:9" pos:end="27:52"><expr pos:start="27:9" pos:end="27:51"><name pos:start="27:9" pos:end="27:15">padding</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:39">GXF_AUDIO_PACKET_SIZE</name> <operator pos:start="27:41" pos:end="27:41">-</operator> <name pos:start="27:43" pos:end="27:51"><name pos:start="27:43" pos:end="27:45">pkt</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:51">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><call pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:28">gxf_write_media_preamble</name><argument_list pos:start="29:29" pos:end="29:57">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">s</name></expr></argument>, <argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">pkt</name></expr></argument>, <argument pos:start="29:38" pos:end="29:56"><expr pos:start="29:38" pos:end="29:56"><name pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:40">pkt</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:46">size</name></name> <operator pos:start="29:48" pos:end="29:48">+</operator> <name pos:start="29:50" pos:end="29:56">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><call pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:14">avio_write</name><argument_list pos:start="31:15" pos:end="31:40">(<argument pos:start="31:16" pos:end="31:17"><expr pos:start="31:16" pos:end="31:17"><name pos:start="31:16" pos:end="31:17">pb</name></expr></argument>, <argument pos:start="31:20" pos:end="31:28"><expr pos:start="31:20" pos:end="31:28"><name pos:start="31:20" pos:end="31:28"><name pos:start="31:20" pos:end="31:22">pkt</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:28">data</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:39"><expr pos:start="31:31" pos:end="31:39"><name pos:start="31:31" pos:end="31:39"><name pos:start="31:31" pos:end="31:33">pkt</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:39">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><call pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:21">gxf_write_padding</name><argument_list pos:start="33:22" pos:end="33:34">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">pb</name></expr></argument>, <argument pos:start="33:27" pos:end="33:33"><expr pos:start="33:27" pos:end="33:33"><name pos:start="33:27" pos:end="33:33">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="63:5"><if pos:start="37:5" pos:end="63:5">if <condition pos:start="37:8" pos:end="37:52">(<expr pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:10">st</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:17">codec</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:29">codec_type</name></name> <operator pos:start="37:31" pos:end="37:32">==</operator> <name pos:start="37:34" pos:end="37:51">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="37:54" pos:end="63:5">{<block_content pos:start="39:9" pos:end="61:28">

        <if_stmt pos:start="39:9" pos:end="57:9"><if pos:start="39:9" pos:end="57:9">if <condition pos:start="39:12" pos:end="39:41">(<expr pos:start="39:13" pos:end="39:40"><operator pos:start="39:13" pos:end="39:13">!</operator><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:33"><name pos:start="39:15" pos:end="39:17">gxf</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:33">flt_entries_nb</name></name> <operator pos:start="39:35" pos:end="39:35">%</operator> <literal type="number" pos:start="39:37" pos:end="39:39">500</literal><operator pos:start="39:40" pos:end="39:40">)</operator></expr>)</condition> <block pos:start="39:43" pos:end="57:9">{<block_content pos:start="41:13" pos:end="55:13">

            <decl_stmt pos:start="41:13" pos:end="41:20"><decl pos:start="41:13" pos:end="41:19"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:19">err</name></decl>;</decl_stmt>

            <if_stmt pos:start="43:13" pos:end="55:13"><if pos:start="43:13" pos:end="55:13">if <condition pos:start="43:16" pos:end="47:73">(<expr pos:start="43:17" pos:end="47:72"><operator pos:start="43:17" pos:end="43:17">(</operator><name pos:start="43:18" pos:end="43:20">err</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="47:67"><name pos:start="43:24" pos:end="43:40">av_reallocp_array</name><argument_list pos:start="43:41" pos:end="47:67">(<argument pos:start="43:42" pos:end="43:58"><expr pos:start="43:42" pos:end="43:58"><operator pos:start="43:42" pos:end="43:42">&amp;</operator><name pos:start="43:43" pos:end="43:58"><name pos:start="43:43" pos:end="43:45">gxf</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:58">flt_entries</name></name></expr></argument>,

                                         <argument pos:start="45:42" pos:end="45:66"><expr pos:start="45:42" pos:end="45:66"><name pos:start="45:42" pos:end="45:60"><name pos:start="45:42" pos:end="45:44">gxf</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:60">flt_entries_nb</name></name> <operator pos:start="45:62" pos:end="45:62">+</operator> <literal type="number" pos:start="45:64" pos:end="45:66">500</literal></expr></argument>,

                                         <argument pos:start="47:42" pos:end="47:66"><expr pos:start="47:42" pos:end="47:66"><sizeof pos:start="47:42" pos:end="47:66">sizeof<argument_list pos:start="47:48" pos:end="47:66">(<argument pos:start="47:49" pos:end="47:65"><expr pos:start="47:49" pos:end="47:65"><operator pos:start="47:49" pos:end="47:49">*</operator><name pos:start="47:50" pos:end="47:65"><name pos:start="47:50" pos:end="47:52">gxf</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:65">flt_entries</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="47:68" pos:end="47:68">)</operator> <operator pos:start="47:70" pos:end="47:70">&lt;</operator> <literal type="number" pos:start="47:72" pos:end="47:72">0</literal></expr>)</condition> <block pos:start="47:75" pos:end="55:13">{<block_content pos:start="49:17" pos:end="53:27">

                <expr_stmt pos:start="49:17" pos:end="49:40"><expr pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:19">gxf</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:35">flt_entries_nb</name></name> <operator pos:start="49:37" pos:end="49:37">=</operator> <literal type="number" pos:start="49:39" pos:end="49:39">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:78"><expr pos:start="51:17" pos:end="51:77"><call pos:start="51:17" pos:end="51:77"><name pos:start="51:17" pos:end="51:22">av_log</name><argument_list pos:start="51:23" pos:end="51:77">(<argument pos:start="51:24" pos:end="51:24"><expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">s</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:41" pos:end="51:76"><expr pos:start="51:41" pos:end="51:76"><literal type="string" pos:start="51:41" pos:end="51:76">"could not reallocate flt entries\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="53:17" pos:end="53:27">return <expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:70"><expr pos:start="59:9" pos:end="59:69"><name pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:11">gxf</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:24">flt_entries</name><index pos:start="59:25" pos:end="59:47">[<expr pos:start="59:26" pos:end="59:46"><name pos:start="59:26" pos:end="59:44"><name pos:start="59:26" pos:end="59:28">gxf</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:44">flt_entries_nb</name></name><operator pos:start="59:45" pos:end="59:46">++</operator></expr>]</index></name> <operator pos:start="59:49" pos:end="59:49">=</operator> <name pos:start="59:51" pos:end="59:69">packet_start_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:11">gxf</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:22">nb_fields</name></name> <operator pos:start="61:24" pos:end="61:25">+=</operator> <literal type="number" pos:start="61:27" pos:end="61:27">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="61:30" pos:end="61:44">// count fields</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><call pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:20">updatePacketSize</name><argument_list pos:start="67:21" pos:end="67:29">(<argument pos:start="67:22" pos:end="67:23"><expr pos:start="67:22" pos:end="67:23"><name pos:start="67:22" pos:end="67:23">pb</name></expr></argument>, <argument pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:28"><name pos:start="67:26" pos:end="67:28">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:7">gxf</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:21">packet_count</name></name><operator pos:start="71:22" pos:end="71:23">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:33">(<expr pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:11">gxf</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:25">packet_count</name></name> <operator pos:start="73:27" pos:end="73:28">==</operator> <literal type="number" pos:start="73:30" pos:end="73:32">100</literal></expr>)</condition> <block pos:start="73:35" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:30">

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><call pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:28">gxf_write_map_packet</name><argument_list pos:start="75:29" pos:end="75:34">(<argument pos:start="75:30" pos:end="75:30"><expr pos:start="75:30" pos:end="75:30"><name pos:start="75:30" pos:end="75:30">s</name></expr></argument>, <argument pos:start="75:33" pos:end="75:33"><expr pos:start="75:33" pos:end="75:33"><literal type="number" pos:start="75:33" pos:end="75:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:11">gxf</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:25">packet_count</name></name> <operator pos:start="77:27" pos:end="77:27">=</operator> <literal type="number" pos:start="77:29" pos:end="77:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
