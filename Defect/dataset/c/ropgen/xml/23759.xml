<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23759.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:18">RENAME</name></type>(<name pos:start="1:20" pos:end="1:31">extract_even</name>)<parameter_list pos:start="1:33" pos:end="1:81">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><specifier pos:start="1:34" pos:end="1:38">const</specifier> <name pos:start="1:40" pos:end="1:46">uint8_t</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">src</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:60">uint8_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">dst</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:80"><decl pos:start="1:68" pos:end="1:80"><type pos:start="1:68" pos:end="1:80"><name pos:start="1:68" pos:end="1:74">x86_reg</name></type> <name pos:start="1:76" pos:end="1:80">count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <expr_stmt pos:start="5:5" pos:end="5:19"><expr pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:7">dst</name> <operator pos:start="5:9" pos:end="5:10">+=</operator>   <name pos:start="5:14" pos:end="5:18">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:19"><expr pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:7">src</name> <operator pos:start="7:9" pos:end="7:10">+=</operator> <literal type="number" pos:start="7:12" pos:end="7:12">2</literal><operator pos:start="7:13" pos:end="7:13">*</operator><name pos:start="7:14" pos:end="7:18">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="14:0"><expr pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:9">count</name><operator pos:start="9:10" pos:end="9:10">=</operator> <operator pos:start="9:12" pos:end="9:12">-</operator> <name pos:start="9:14" pos:end="9:18">count</name></expr>;</expr_stmt>



<cpp:if pos:start="13:1" pos:end="13:24">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <if_stmt pos:start="15:5" pos:end="66:0"><if pos:start="15:5" pos:end="66:0">if<condition pos:start="15:7" pos:end="15:20">(<expr pos:start="15:8" pos:end="15:19"><name pos:start="15:8" pos:end="15:12">count</name> <operator pos:start="15:14" pos:end="15:15">&lt;=</operator> <operator pos:start="15:17" pos:end="15:17">-</operator><literal type="number" pos:start="15:18" pos:end="15:19">16</literal></expr>)</condition> <block pos:start="15:22" pos:end="66:0">{<block_content pos:start="17:9" pos:end="61:20">

        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:13">count</name> <operator pos:start="17:15" pos:end="17:16">+=</operator> <literal type="number" pos:start="17:18" pos:end="17:19">15</literal></expr>;</expr_stmt>

        <asm pos:start="19:9" pos:end="59:10">__asm__ <specifier pos:start="19:17" pos:end="19:24">volatile</specifier>(

            "pcmpeqw       %%mm7, %%mm7        \n\t"

            "psrlw            $8, %%mm7        \n\t"

            "1:                                \n\t"

            "movq -30(%1, %0, 2), %%mm0        \n\t"

            "movq -22(%1, %0, 2), %%mm1        \n\t"

            "movq -14(%1, %0, 2), %%mm2        \n\t"

            "movq  -6(%1, %0, 2), %%mm3        \n\t"

            "pand          %%mm7, %%mm0        \n\t"

            "pand          %%mm7, %%mm1        \n\t"

            "pand          %%mm7, %%mm2        \n\t"

            "pand          %%mm7, %%mm3        \n\t"

            "packuswb      %%mm1, %%mm0        \n\t"

            "packuswb      %%mm3, %%mm2        \n\t"

            MOVNTQ"        %%mm0,-15(%2, %0)   \n\t"

            MOVNTQ"        %%mm2,- 7(%2, %0)   \n\t"

            "add             $16, %0           \n\t"

            " js 1b                            \n\t"

            : "+r"(count)

            : "r"(src), "r"(dst)

        );</asm>

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:13">count</name> <operator pos:start="61:15" pos:end="61:16">-=</operator> <literal type="number" pos:start="61:18" pos:end="61:19">15</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

    <while pos:start="67:5" pos:end="73:5">while<condition pos:start="67:10" pos:end="67:18">(<expr pos:start="67:11" pos:end="67:17"><name pos:start="67:11" pos:end="67:15">count</name><operator pos:start="67:16" pos:end="67:16">&lt;</operator><literal type="number" pos:start="67:17" pos:end="67:17">0</literal></expr>)</condition> <block pos:start="67:20" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:16">

        <expr_stmt pos:start="69:9" pos:end="69:33"><expr pos:start="69:9" pos:end="69:32"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:11">dst</name><index pos:start="69:12" pos:end="69:18">[<expr pos:start="69:13" pos:end="69:17"><name pos:start="69:13" pos:end="69:17">count</name></expr>]</index></name><operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:23">src</name><index pos:start="69:24" pos:end="69:32">[<expr pos:start="69:25" pos:end="69:31"><literal type="number" pos:start="69:25" pos:end="69:25">2</literal><operator pos:start="69:26" pos:end="69:26">*</operator><name pos:start="69:27" pos:end="69:31">count</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:16"><expr pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:13">count</name><operator pos:start="71:14" pos:end="71:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
