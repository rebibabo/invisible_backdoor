<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26219.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:23">adler32</name><parameter_list pos:start="1:24" pos:end="1:77">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:32">uint32_t</name></type> <name pos:start="1:34" pos:end="1:38">adler</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">buf</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:76"><decl pos:start="1:61" pos:end="1:76"><type pos:start="1:61" pos:end="1:76"><name pos:start="1:61" pos:end="1:68">unsigned</name> <name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:76">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:27">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">long</name></type> <name pos:start="5:19" pos:end="5:20">s1</name> <init pos:start="5:22" pos:end="5:37">= <expr pos:start="5:24" pos:end="5:37"><name pos:start="5:24" pos:end="5:28">adler</name> <operator pos:start="5:30" pos:end="5:30">&amp;</operator> <literal type="number" pos:start="5:32" pos:end="5:37">0xffff</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name></type> <name pos:start="7:19" pos:end="7:20">s2</name> <init pos:start="7:22" pos:end="7:45">= <expr pos:start="7:24" pos:end="7:45"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:29">adler</name> <operator pos:start="7:31" pos:end="7:32">&gt;&gt;</operator> <literal type="number" pos:start="7:34" pos:end="7:35">16</literal><operator pos:start="7:36" pos:end="7:36">)</operator> <operator pos:start="7:38" pos:end="7:38">&amp;</operator> <literal type="number" pos:start="7:40" pos:end="7:45">0xffff</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">k</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="13:31"><if pos:start="13:5" pos:end="13:31">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">buf</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:19">NULL</name></expr>)</condition><block type="pseudo" pos:start="13:22" pos:end="13:31"><block_content pos:start="13:22" pos:end="13:31"> <return pos:start="13:22" pos:end="13:31">return <expr pos:start="13:29" pos:end="13:30"><literal type="number" pos:start="13:29" pos:end="13:30">1L</literal></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="17:5" pos:end="41:5">while <condition pos:start="17:11" pos:end="17:19">(<expr pos:start="17:12" pos:end="17:18"><name pos:start="17:12" pos:end="17:14">len</name> <operator pos:start="17:16" pos:end="17:16">&gt;</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>)</condition> <block pos:start="17:21" pos:end="41:5">{<block_content pos:start="19:9" pos:end="39:19">

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:9">k</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <ternary pos:start="19:13" pos:end="19:35"><condition pos:start="19:13" pos:end="19:24"><expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:15">len</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <name pos:start="19:19" pos:end="19:22">NMAX</name></expr> ?</condition><then pos:start="19:26" pos:end="19:28"> <expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">len</name></expr> </then><else pos:start="19:30" pos:end="19:35">: <expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">NMAX</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:17"><expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:14">-=</operator> <name pos:start="21:16" pos:end="21:16">k</name></expr>;</expr_stmt>

        <while pos:start="23:9" pos:end="29:9">while <condition pos:start="23:15" pos:end="23:23">(<expr pos:start="23:16" pos:end="23:22"><name pos:start="23:16" pos:end="23:16">k</name> <operator pos:start="23:18" pos:end="23:19">&gt;=</operator> <literal type="number" pos:start="23:21" pos:end="23:22">16</literal></expr>)</condition> <block pos:start="23:25" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:20">

            <expr_stmt pos:start="25:13" pos:end="25:22"><expr pos:start="25:13" pos:end="25:21"><call pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:16">DO16</name><argument_list pos:start="25:17" pos:end="25:21">(<argument pos:start="25:18" pos:end="25:20"><expr pos:start="25:18" pos:end="25:20"><name pos:start="25:18" pos:end="25:20">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:20"><expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:13">k</name> <operator pos:start="27:15" pos:end="27:16">-=</operator> <literal type="number" pos:start="27:18" pos:end="27:19">16</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="31:9" pos:end="35:22"><if pos:start="31:9" pos:end="35:22">if <condition pos:start="31:12" pos:end="31:19">(<expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:13">k</name> <operator pos:start="31:15" pos:end="31:16">!=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>)</condition><block type="pseudo" pos:start="31:21" pos:end="35:22"><block_content pos:start="31:21" pos:end="35:22"> <do pos:start="31:21" pos:end="35:22">do <block pos:start="31:24" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <expr_stmt pos:start="33:13" pos:end="33:21"><expr pos:start="33:13" pos:end="33:20"><call pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:15">DO1</name><argument_list pos:start="33:16" pos:end="33:20">(<argument pos:start="33:17" pos:end="33:19"><expr pos:start="33:17" pos:end="33:19"><name pos:start="33:17" pos:end="33:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="35:17" pos:end="35:21">(<expr pos:start="35:18" pos:end="35:20"><operator pos:start="35:18" pos:end="35:19">--</operator><name pos:start="35:20" pos:end="35:20">k</name></expr>)</condition>;</do></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:10">s1</name> <operator pos:start="37:12" pos:end="37:13">%=</operator> <name pos:start="37:15" pos:end="37:18">BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:10">s2</name> <operator pos:start="39:12" pos:end="39:13">%=</operator> <name pos:start="39:15" pos:end="39:18">BASE</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="43:5" pos:end="43:27">return <expr pos:start="43:12" pos:end="43:26"><operator pos:start="43:12" pos:end="43:12">(</operator><name pos:start="43:13" pos:end="43:14">s2</name> <operator pos:start="43:16" pos:end="43:17">&lt;&lt;</operator> <literal type="number" pos:start="43:19" pos:end="43:20">16</literal><operator pos:start="43:21" pos:end="43:21">)</operator> <operator pos:start="43:23" pos:end="43:23">|</operator> <name pos:start="43:25" pos:end="43:26">s1</name></expr>;</return>

</block_content>}</block></function>
</unit>
