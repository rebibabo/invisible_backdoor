<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26787.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">aio_set_event_notifier</name><parameter_list pos:start="1:28" pos:end="5:60">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">AioContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:44"><decl pos:start="3:29" pos:end="3:44"><type pos:start="3:29" pos:end="3:44"><name pos:start="3:29" pos:end="3:41">EventNotifier</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:44">e</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:59"><decl pos:start="5:29" pos:end="5:59"><type pos:start="5:29" pos:end="5:59"><name pos:start="5:29" pos:end="5:48">EventNotifierHandler</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:59">io_notify</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="93:1">{<block_content pos:start="9:5" pos:end="91:20">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">AioHandler</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">node</name></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:17">QLIST_FOREACH</name><argument_list pos:start="13:18" pos:end="13:49">(<argument pos:start="13:19" pos:end="13:22">node</argument>, <argument pos:start="13:25" pos:end="13:42">&amp;ctx-&gt;aio_handlers</argument>, <argument pos:start="13:45" pos:end="13:48">node</argument>)</argument_list></macro> <block pos:start="13:51" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:9">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:43">(<expr pos:start="15:13" pos:end="15:42"><name pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:16">node</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:19">e</name></name> <operator pos:start="15:21" pos:end="15:22">==</operator> <name pos:start="15:24" pos:end="15:24">e</name> <operator pos:start="15:26" pos:end="15:27">&amp;&amp;</operator> <operator pos:start="15:29" pos:end="15:29">!</operator><name pos:start="15:30" pos:end="15:42"><name pos:start="15:30" pos:end="15:33">node</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:42">deleted</name></name></expr>)</condition> <block pos:start="15:45" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:18">

            <break pos:start="17:13" pos:end="17:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="25:5" pos:end="25:41">/* Are we deleting the fd handler? */</comment>

    <if_stmt pos:start="27:5" pos:end="87:5"><if pos:start="27:5" pos:end="61:5">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:18">io_notify</name></expr>)</condition> <block pos:start="27:21" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:9">

        <if_stmt pos:start="29:9" pos:end="59:9"><if pos:start="29:9" pos:end="59:9">if <condition pos:start="29:12" pos:end="29:17">(<expr pos:start="29:13" pos:end="29:16"><name pos:start="29:13" pos:end="29:16">node</name></expr>)</condition> <block pos:start="29:19" pos:end="59:9">{<block_content pos:start="31:13" pos:end="57:13">

            <expr_stmt pos:start="31:13" pos:end="31:59"><expr pos:start="31:13" pos:end="31:58"><call pos:start="31:13" pos:end="31:58"><name pos:start="31:13" pos:end="31:32">g_source_remove_poll</name><argument_list pos:start="31:33" pos:end="31:58">(<argument pos:start="31:34" pos:end="31:45"><expr pos:start="31:34" pos:end="31:45"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:45"><name pos:start="31:35" pos:end="31:37">ctx</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:45">source</name></name></expr></argument>, <argument pos:start="31:48" pos:end="31:57"><expr pos:start="31:48" pos:end="31:57"><operator pos:start="31:48" pos:end="31:48">&amp;</operator><name pos:start="31:49" pos:end="31:57"><name pos:start="31:49" pos:end="31:52">node</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:57">pfd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="35:13" pos:end="35:68">/* If the lock is held, just mark the node as deleted */</comment>

            <if_stmt pos:start="37:13" pos:end="57:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:38">(<expr pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:19">ctx</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:37">walking_handlers</name></name></expr>)</condition> <block pos:start="37:40" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:38">

                <expr_stmt pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:20">node</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:29">deleted</name></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <literal type="number" pos:start="39:33" pos:end="39:33">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:38"><expr pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:20">node</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:25">pfd</name><operator pos:start="41:26" pos:end="41:26">.</operator><name pos:start="41:27" pos:end="41:33">revents</name></name> <operator pos:start="41:35" pos:end="41:35">=</operator> <literal type="number" pos:start="41:37" pos:end="41:37">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="57:13">else <block pos:start="43:20" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:29">

                <comment type="block" pos:start="45:17" pos:end="51:19">/* Otherwise, delete it for real.  We can't just mark it as

                 * deleted because deleted nodes are only cleaned up after

                 * releasing the walking_handlers lock.

                 */</comment>

                <expr_stmt pos:start="53:17" pos:end="53:41"><expr pos:start="53:17" pos:end="53:40"><call pos:start="53:17" pos:end="53:40"><name pos:start="53:17" pos:end="53:28">QLIST_REMOVE</name><argument_list pos:start="53:29" pos:end="53:40">(<argument pos:start="53:30" pos:end="53:33"><expr pos:start="53:30" pos:end="53:33"><name pos:start="53:30" pos:end="53:33">node</name></expr></argument>, <argument pos:start="53:36" pos:end="53:39"><expr pos:start="53:36" pos:end="53:39"><name pos:start="53:36" pos:end="53:39">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:29"><expr pos:start="55:17" pos:end="55:28"><call pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:22">g_free</name><argument_list pos:start="55:23" pos:end="55:28">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="87:5">else <block pos:start="61:12" pos:end="87:5">{<block_content pos:start="63:9" pos:end="85:36">

        <if_stmt pos:start="63:9" pos:end="81:9"><if pos:start="63:9" pos:end="81:9">if <condition pos:start="63:12" pos:end="63:25">(<expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:16">node</name> <operator pos:start="63:18" pos:end="63:19">==</operator> <name pos:start="63:21" pos:end="63:24">NULL</name></expr>)</condition> <block pos:start="63:27" pos:end="81:9">{<block_content pos:start="67:13" pos:end="79:56">

            <comment type="block" pos:start="65:13" pos:end="65:60">/* Alloc and insert if it's not already there */</comment>

            <expr_stmt pos:start="67:13" pos:end="67:49"><expr pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:16">node</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:48"><name pos:start="67:20" pos:end="67:28">g_malloc0</name><argument_list pos:start="67:29" pos:end="67:48">(<argument pos:start="67:30" pos:end="67:47"><expr pos:start="67:30" pos:end="67:47"><sizeof pos:start="67:30" pos:end="67:47">sizeof<argument_list pos:start="67:36" pos:end="67:47">(<argument pos:start="67:37" pos:end="67:46"><expr pos:start="67:37" pos:end="67:46"><name pos:start="67:37" pos:end="67:46">AioHandler</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:24"><expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:16">node</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:19">e</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <name pos:start="69:23" pos:end="69:23">e</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:67"><expr pos:start="71:13" pos:end="71:66"><name pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:16">node</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:21">pfd</name><operator pos:start="71:22" pos:end="71:22">.</operator><name pos:start="71:23" pos:end="71:24">fd</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <operator pos:start="71:28" pos:end="71:28">(</operator><name pos:start="71:29" pos:end="71:37">uintptr_t</name><operator pos:start="71:38" pos:end="71:38">)</operator><call pos:start="71:39" pos:end="71:66"><name pos:start="71:39" pos:end="71:63">event_notifier_get_handle</name><argument_list pos:start="71:64" pos:end="71:66">(<argument pos:start="71:65" pos:end="71:65"><expr pos:start="71:65" pos:end="71:65"><name pos:start="71:65" pos:end="71:65">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:39"><expr pos:start="73:13" pos:end="73:38"><name pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:16">node</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:21">pfd</name><operator pos:start="73:22" pos:end="73:22">.</operator><name pos:start="73:23" pos:end="73:28">events</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:38">G_IO_IN</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:62"><expr pos:start="75:13" pos:end="75:61"><call pos:start="75:13" pos:end="75:61"><name pos:start="75:13" pos:end="75:29">QLIST_INSERT_HEAD</name><argument_list pos:start="75:30" pos:end="75:61">(<argument pos:start="75:31" pos:end="75:48"><expr pos:start="75:31" pos:end="75:48"><operator pos:start="75:31" pos:end="75:31">&amp;</operator><name pos:start="75:32" pos:end="75:48"><name pos:start="75:32" pos:end="75:34">ctx</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:48">aio_handlers</name></name></expr></argument>, <argument pos:start="75:51" pos:end="75:54"><expr pos:start="75:51" pos:end="75:54"><name pos:start="75:51" pos:end="75:54">node</name></expr></argument>, <argument pos:start="75:57" pos:end="75:60"><expr pos:start="75:57" pos:end="75:60"><name pos:start="75:57" pos:end="75:60">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:56"><expr pos:start="79:13" pos:end="79:55"><call pos:start="79:13" pos:end="79:55"><name pos:start="79:13" pos:end="79:29">g_source_add_poll</name><argument_list pos:start="79:30" pos:end="79:55">(<argument pos:start="79:31" pos:end="79:42"><expr pos:start="79:31" pos:end="79:42"><operator pos:start="79:31" pos:end="79:31">&amp;</operator><name pos:start="79:32" pos:end="79:42"><name pos:start="79:32" pos:end="79:34">ctx</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:42">source</name></name></expr></argument>, <argument pos:start="79:45" pos:end="79:54"><expr pos:start="79:45" pos:end="79:54"><operator pos:start="79:45" pos:end="79:45">&amp;</operator><name pos:start="79:46" pos:end="79:54"><name pos:start="79:46" pos:end="79:49">node</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:54">pfd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:52">/* Update handler with latest information */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:36"><expr pos:start="85:9" pos:end="85:35"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:12">node</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:23">io_notify</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:35">io_notify</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:20"><expr pos:start="91:5" pos:end="91:19"><call pos:start="91:5" pos:end="91:19"><name pos:start="91:5" pos:end="91:14">aio_notify</name><argument_list pos:start="91:15" pos:end="91:19">(<argument pos:start="91:16" pos:end="91:18"><expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
