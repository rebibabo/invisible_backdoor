<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21107.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">qpa_init_out</name> <parameter_list pos:start="1:25" pos:end="1:59">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:35">HWVoiceOut</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">hw</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:54">audsettings_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">as</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:14">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">error</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:25"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:25">pa_sample_spec</name></type> <name pos:start="7:27" pos:end="7:28">ss</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">audsettings_t</name></type> <name pos:start="9:19" pos:end="9:24">obt_as</name> <init pos:start="9:26" pos:end="9:30">= <expr pos:start="9:28" pos:end="9:30"><operator pos:start="9:28" pos:end="9:28">*</operator><name pos:start="9:29" pos:end="9:30">as</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">PAVoiceOut</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:18">pa</name> <init pos:start="11:20" pos:end="11:38">= <expr pos:start="11:22" pos:end="11:38"><operator pos:start="11:22" pos:end="11:22">(</operator><name pos:start="11:23" pos:end="11:32">PAVoiceOut</name> <operator pos:start="11:34" pos:end="11:34">*</operator><operator pos:start="11:35" pos:end="11:35">)</operator> <name pos:start="11:37" pos:end="11:38">hw</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:6">ss</name><operator pos:start="15:7" pos:end="15:7">.</operator><name pos:start="15:8" pos:end="15:13">format</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:54"><name pos:start="15:17" pos:end="15:28">audfmt_to_pa</name> <argument_list pos:start="15:30" pos:end="15:54">(<argument pos:start="15:31" pos:end="15:37"><expr pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:32">as</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:37">fmt</name></name></expr></argument>, <argument pos:start="15:40" pos:end="15:53"><expr pos:start="15:40" pos:end="15:53"><name pos:start="15:40" pos:end="15:53"><name pos:start="15:40" pos:end="15:41">as</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:53">endianness</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:6">ss</name><operator pos:start="17:7" pos:end="17:7">.</operator><name pos:start="17:8" pos:end="17:15">channels</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:31"><name pos:start="17:19" pos:end="17:20">as</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:31">nchannels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:6">ss</name><operator pos:start="19:7" pos:end="19:7">.</operator><name pos:start="19:8" pos:end="19:11">rate</name></name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:22"><name pos:start="19:15" pos:end="19:16">as</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:22">freq</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:10">obt_as</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:14">fmt</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:61"><name pos:start="23:18" pos:end="23:29">pa_to_audfmt</name> <argument_list pos:start="23:31" pos:end="23:61">(<argument pos:start="23:32" pos:end="23:40"><expr pos:start="23:32" pos:end="23:40"><name pos:start="23:32" pos:end="23:40"><name pos:start="23:32" pos:end="23:33">ss</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:40">format</name></name></expr></argument>, <argument pos:start="23:43" pos:end="23:60"><expr pos:start="23:43" pos:end="23:60"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:49">obt_as</name><operator pos:start="23:50" pos:end="23:50">.</operator><name pos:start="23:51" pos:end="23:60">endianness</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="47:10"><expr pos:start="27:5" pos:end="47:9"><name pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:6">pa</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:9">s</name></name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="47:9"><name pos:start="27:13" pos:end="27:25">pa_simple_new</name> <argument_list pos:start="27:27" pos:end="47:9">(

        <argument pos:start="29:9" pos:end="29:19"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:12">conf</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:19">server</name></name></expr></argument>,

        <argument pos:start="31:9" pos:end="31:14"><expr pos:start="31:9" pos:end="31:14"><literal type="string" pos:start="31:9" pos:end="31:14">"qemu"</literal></expr></argument>,

        <argument pos:start="33:9" pos:end="33:26"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:26">PA_STREAM_PLAYBACK</name></expr></argument>,

        <argument pos:start="35:9" pos:end="35:17"><expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:12">conf</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:17">sink</name></name></expr></argument>,

        <argument pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:22"><literal type="string" pos:start="37:9" pos:end="37:22">"pcm.playback"</literal></expr></argument>,

        <argument pos:start="39:9" pos:end="39:11"><expr pos:start="39:9" pos:end="39:11"><operator pos:start="39:9" pos:end="39:9">&amp;</operator><name pos:start="39:10" pos:end="39:11">ss</name></expr></argument>,

        <argument pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:12"><name pos:start="41:9" pos:end="41:12">NULL</name></expr></argument>,                   <comment type="block" pos:start="41:33" pos:end="41:49">/* channel map */</comment>

        <argument pos:start="43:9" pos:end="43:12"><expr pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:12">NULL</name></expr></argument>,                   <comment type="block" pos:start="43:33" pos:end="43:58">/* buffering attributes */</comment>

        <argument pos:start="45:9" pos:end="45:14"><expr pos:start="45:9" pos:end="45:14"><operator pos:start="45:9" pos:end="45:9">&amp;</operator><name pos:start="45:10" pos:end="45:14">error</name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:11">pa</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:14">s</name></name></expr>)</condition> <block pos:start="49:17" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:19">

        <expr_stmt pos:start="51:9" pos:end="51:66"><expr pos:start="51:9" pos:end="51:65"><call pos:start="51:9" pos:end="51:65"><name pos:start="51:9" pos:end="51:18">qpa_logerr</name> <argument_list pos:start="51:20" pos:end="51:65">(<argument pos:start="51:21" pos:end="51:25"><expr pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:25">error</name></expr></argument>, <argument pos:start="51:28" pos:end="51:64"><expr pos:start="51:28" pos:end="51:64"><literal type="string" pos:start="51:28" pos:end="51:64">"pa_simple_new for playback failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:19">goto <name pos:start="53:14" pos:end="53:18">fail1</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:45"><expr pos:start="59:5" pos:end="59:44"><call pos:start="59:5" pos:end="59:44"><name pos:start="59:5" pos:end="59:23">audio_pcm_init_info</name> <argument_list pos:start="59:25" pos:end="59:44">(<argument pos:start="59:26" pos:end="59:34"><expr pos:start="59:26" pos:end="59:34"><operator pos:start="59:26" pos:end="59:26">&amp;</operator><name pos:start="59:27" pos:end="59:34"><name pos:start="59:27" pos:end="59:28">hw</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:34">info</name></name></expr></argument>, <argument pos:start="59:37" pos:end="59:43"><expr pos:start="59:37" pos:end="59:43"><operator pos:start="59:37" pos:end="59:37">&amp;</operator><name pos:start="59:38" pos:end="59:43">obt_as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:31"><expr pos:start="61:5" pos:end="61:30"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:6">hw</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:15">samples</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:22">conf</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:30">samples</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:78"><expr pos:start="63:5" pos:end="63:77"><name pos:start="63:5" pos:end="63:15"><name pos:start="63:5" pos:end="63:6">pa</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:15">pcm_buf</name></name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:77"><name pos:start="63:19" pos:end="63:30">audio_calloc</name> <argument_list pos:start="63:32" pos:end="63:77">(<argument pos:start="63:33" pos:end="63:42"><expr pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:42">AUDIO_FUNC</name></expr></argument>, <argument pos:start="63:45" pos:end="63:55"><expr pos:start="63:45" pos:end="63:55"><name pos:start="63:45" pos:end="63:55"><name pos:start="63:45" pos:end="63:46">hw</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:55">samples</name></name></expr></argument>, <argument pos:start="63:58" pos:end="63:76"><expr pos:start="63:58" pos:end="63:76"><literal type="number" pos:start="63:58" pos:end="63:58">1</literal> <operator pos:start="63:60" pos:end="63:61">&lt;&lt;</operator> <name pos:start="63:63" pos:end="63:76"><name pos:start="63:63" pos:end="63:64">hw</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:70">info</name><operator pos:start="63:71" pos:end="63:71">.</operator><name pos:start="63:72" pos:end="63:76">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:21">(<expr pos:start="65:9" pos:end="65:20"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:20"><name pos:start="65:10" pos:end="65:11">pa</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:20">pcm_buf</name></name></expr>)</condition> <block pos:start="65:23" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:19">

        <expr_stmt pos:start="67:9" pos:end="69:46"><expr pos:start="67:9" pos:end="69:45"><call pos:start="67:9" pos:end="69:45"><name pos:start="67:9" pos:end="67:13">dolog</name> <argument_list pos:start="67:15" pos:end="69:45">(<argument pos:start="67:16" pos:end="67:55"><expr pos:start="67:16" pos:end="67:55"><literal type="string" pos:start="67:16" pos:end="67:55">"Could not allocate buffer (%d bytes)\n"</literal></expr></argument>,

               <argument pos:start="69:16" pos:end="69:44"><expr pos:start="69:16" pos:end="69:44"><name pos:start="69:16" pos:end="69:26"><name pos:start="69:16" pos:end="69:17">hw</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:26">samples</name></name> <operator pos:start="69:28" pos:end="69:29">&lt;&lt;</operator> <name pos:start="69:31" pos:end="69:44"><name pos:start="69:31" pos:end="69:32">hw</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:38">info</name><operator pos:start="69:39" pos:end="69:39">.</operator><name pos:start="69:40" pos:end="69:44">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:19">goto <name pos:start="71:14" pos:end="71:18">fail2</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:75">(<expr pos:start="77:9" pos:end="77:74"><call pos:start="77:9" pos:end="77:74"><name pos:start="77:9" pos:end="77:21">audio_pt_init</name> <argument_list pos:start="77:23" pos:end="77:74">(<argument pos:start="77:24" pos:end="77:30"><expr pos:start="77:24" pos:end="77:30"><operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:30"><name pos:start="77:25" pos:end="77:26">pa</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:30">pt</name></name></expr></argument>, <argument pos:start="77:33" pos:end="77:46"><expr pos:start="77:33" pos:end="77:46"><name pos:start="77:33" pos:end="77:46">qpa_thread_out</name></expr></argument>, <argument pos:start="77:49" pos:end="77:50"><expr pos:start="77:49" pos:end="77:50"><name pos:start="77:49" pos:end="77:50">hw</name></expr></argument>, <argument pos:start="77:53" pos:end="77:61"><expr pos:start="77:53" pos:end="77:61"><name pos:start="77:53" pos:end="77:61">AUDIO_CAP</name></expr></argument>, <argument pos:start="77:64" pos:end="77:73"><expr pos:start="77:64" pos:end="77:73"><name pos:start="77:64" pos:end="77:73">AUDIO_FUNC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:77" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:19">

        <goto pos:start="79:9" pos:end="79:19">goto <name pos:start="79:14" pos:end="79:18">fail3</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>



 <label pos:start="89:2" pos:end="89:7"><name pos:start="89:2" pos:end="89:6">fail3</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="91:23"><expr pos:start="91:5" pos:end="91:22"><call pos:start="91:5" pos:end="91:22"><name pos:start="91:5" pos:end="91:8">free</name> <argument_list pos:start="91:10" pos:end="91:22">(<argument pos:start="91:11" pos:end="91:21"><expr pos:start="91:11" pos:end="91:21"><name pos:start="91:11" pos:end="91:21"><name pos:start="91:11" pos:end="91:12">pa</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:21">pcm_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:23"><expr pos:start="93:5" pos:end="93:22"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:6">pa</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:15">pcm_buf</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:22">NULL</name></expr>;</expr_stmt>

 <label pos:start="95:2" pos:end="95:7"><name pos:start="95:2" pos:end="95:6">fail2</name>:</label>

    <expr_stmt pos:start="97:5" pos:end="97:27"><expr pos:start="97:5" pos:end="97:26"><call pos:start="97:5" pos:end="97:26"><name pos:start="97:5" pos:end="97:18">pa_simple_free</name> <argument_list pos:start="97:20" pos:end="97:26">(<argument pos:start="97:21" pos:end="97:25"><expr pos:start="97:21" pos:end="97:25"><name pos:start="97:21" pos:end="97:25"><name pos:start="97:21" pos:end="97:22">pa</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:25">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:17"><expr pos:start="99:5" pos:end="99:16"><name pos:start="99:5" pos:end="99:9"><name pos:start="99:5" pos:end="99:6">pa</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:9">s</name></name> <operator pos:start="99:11" pos:end="99:11">=</operator> <name pos:start="99:13" pos:end="99:16">NULL</name></expr>;</expr_stmt>

 <label pos:start="101:2" pos:end="101:7"><name pos:start="101:2" pos:end="101:6">fail1</name>:</label>

    <return pos:start="103:5" pos:end="103:14">return <expr pos:start="103:12" pos:end="103:13"><operator pos:start="103:12" pos:end="103:12">-</operator><literal type="number" pos:start="103:13" pos:end="103:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
