<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22410.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">local_open2</name><parameter_list pos:start="1:23" pos:end="3:70">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:32">FsContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">fs_ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:50">V9fsPath</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:60">dir_path</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:78"><decl pos:start="1:63" pos:end="1:78"><type pos:start="1:63" pos:end="1:78"><specifier pos:start="1:63" pos:end="1:67">const</specifier> <name pos:start="1:69" pos:end="1:72">char</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">name</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:32"><decl pos:start="3:24" pos:end="3:32"><type pos:start="3:24" pos:end="3:32"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:32">flags</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:40">FsCred</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:47">credp</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:69"><decl pos:start="3:50" pos:end="3:69"><type pos:start="3:50" pos:end="3:69"><name pos:start="3:50" pos:end="3:65">V9fsFidOpenState</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:69">fs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:15">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name> <init pos:start="9:12" pos:end="9:15">= <expr pos:start="9:14" pos:end="9:15"><operator pos:start="9:14" pos:end="9:14">-</operator><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">err</name> <init pos:start="11:13" pos:end="11:16">= <expr pos:start="11:15" pos:end="11:16"><operator pos:start="11:15" pos:end="11:15">-</operator><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">serrno</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">V9fsString</name></type> <name pos:start="15:16" pos:end="15:23">fullname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:15">buffer</name><index pos:start="17:16" pos:end="17:25">[<expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:24">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="25:7">/*

     * Mark all the open to not follow symlinks

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:9">flags</name> <operator pos:start="27:11" pos:end="27:12">|=</operator> <name pos:start="27:14" pos:end="27:23">O_NOFOLLOW</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><call pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:20">v9fs_string_init</name><argument_list pos:start="31:21" pos:end="31:31">(<argument pos:start="31:22" pos:end="31:30"><expr pos:start="31:22" pos:end="31:30"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:30">fullname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:66"><expr pos:start="33:5" pos:end="33:65"><call pos:start="33:5" pos:end="33:65"><name pos:start="33:5" pos:end="33:23">v9fs_string_sprintf</name><argument_list pos:start="33:24" pos:end="33:65">(<argument pos:start="33:25" pos:end="33:33"><expr pos:start="33:25" pos:end="33:33"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:33">fullname</name></expr></argument>, <argument pos:start="33:36" pos:end="33:42"><expr pos:start="33:36" pos:end="33:42"><literal type="string" pos:start="33:36" pos:end="33:42">"%s/%s"</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:58"><expr pos:start="33:45" pos:end="33:58"><name pos:start="33:45" pos:end="33:58"><name pos:start="33:45" pos:end="33:52">dir_path</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:58">data</name></name></expr></argument>, <argument pos:start="33:61" pos:end="33:64"><expr pos:start="33:61" pos:end="33:64"><name pos:start="33:61" pos:end="33:64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:8">path</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:24"><name pos:start="35:12" pos:end="35:19">fullname</name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:24">data</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:38">/* Determine the security model */</comment>

    <if_stmt pos:start="41:5" pos:end="117:5"><if pos:start="41:5" pos:end="67:5">if <condition pos:start="41:8" pos:end="41:46">(<expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:14">fs_ctx</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:28">export_flags</name></name> <operator pos:start="41:30" pos:end="41:30">&amp;</operator> <name pos:start="41:32" pos:end="41:45">V9FS_SM_MAPPED</name></expr>)</condition> <block pos:start="41:48" pos:end="67:5">{<block_content pos:start="43:9" pos:end="65:9">

        <expr_stmt pos:start="43:9" pos:end="43:74"><expr pos:start="43:9" pos:end="43:73"><name pos:start="43:9" pos:end="43:10">fd</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:73"><name pos:start="43:14" pos:end="43:17">open</name><argument_list pos:start="43:18" pos:end="43:73">(<argument pos:start="43:19" pos:end="43:45"><expr pos:start="43:19" pos:end="43:45"><call pos:start="43:19" pos:end="43:45"><name pos:start="43:19" pos:end="43:23">rpath</name><argument_list pos:start="43:24" pos:end="43:45">(<argument pos:start="43:25" pos:end="43:30"><expr pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:30">fs_ctx</name></expr></argument>, <argument pos:start="43:33" pos:end="43:36"><expr pos:start="43:33" pos:end="43:36"><name pos:start="43:33" pos:end="43:36">path</name></expr></argument>, <argument pos:start="43:39" pos:end="43:44"><expr pos:start="43:39" pos:end="43:44"><name pos:start="43:39" pos:end="43:44">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:48" pos:end="43:52"><expr pos:start="43:48" pos:end="43:52"><name pos:start="43:48" pos:end="43:52">flags</name></expr></argument>, <argument pos:start="43:55" pos:end="43:72"><expr pos:start="43:55" pos:end="43:72"><name pos:start="43:55" pos:end="43:72">SM_LOCAL_MODE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:21">(<expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:14">fd</name> <operator pos:start="45:16" pos:end="45:17">==</operator> <operator pos:start="45:19" pos:end="45:19">-</operator><literal type="number" pos:start="45:20" pos:end="45:20">1</literal></expr>)</condition> <block pos:start="45:23" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:21">

            <expr_stmt pos:start="47:13" pos:end="47:21"><expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:15">err</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:20">fd</name></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:21">goto <name pos:start="49:18" pos:end="49:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:48"><expr pos:start="53:9" pos:end="53:47"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:13">credp</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:22">fc_mode</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:39"><name pos:start="53:26" pos:end="53:30">credp</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:39">fc_mode</name></name><operator pos:start="53:40" pos:end="53:40">|</operator><name pos:start="53:41" pos:end="53:47">S_IFREG</name></expr>;</expr_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:45">/* Set cleint credentials in xattr */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:66"><expr pos:start="57:9" pos:end="57:65"><name pos:start="57:9" pos:end="57:11">err</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:65"><name pos:start="57:15" pos:end="57:29">local_set_xattr</name><argument_list pos:start="57:30" pos:end="57:65">(<argument pos:start="57:31" pos:end="57:57"><expr pos:start="57:31" pos:end="57:57"><call pos:start="57:31" pos:end="57:57"><name pos:start="57:31" pos:end="57:35">rpath</name><argument_list pos:start="57:36" pos:end="57:57">(<argument pos:start="57:37" pos:end="57:42"><expr pos:start="57:37" pos:end="57:42"><name pos:start="57:37" pos:end="57:42">fs_ctx</name></expr></argument>, <argument pos:start="57:45" pos:end="57:48"><expr pos:start="57:45" pos:end="57:48"><name pos:start="57:45" pos:end="57:48">path</name></expr></argument>, <argument pos:start="57:51" pos:end="57:56"><expr pos:start="57:51" pos:end="57:56"><name pos:start="57:51" pos:end="57:56">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:60" pos:end="57:64"><expr pos:start="57:60" pos:end="57:64"><name pos:start="57:60" pos:end="57:64">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:15">err</name> <operator pos:start="59:17" pos:end="59:18">==</operator> <operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>)</condition> <block pos:start="59:24" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:25">

            <expr_stmt pos:start="61:13" pos:end="61:27"><expr pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:18">serrno</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:25">goto <name pos:start="63:18" pos:end="63:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="93:5">else if <condition pos:start="67:15" pos:end="67:58">(<expr pos:start="67:16" pos:end="67:57"><name pos:start="67:16" pos:end="67:35"><name pos:start="67:16" pos:end="67:21">fs_ctx</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:35">export_flags</name></name> <operator pos:start="67:37" pos:end="67:37">&amp;</operator> <name pos:start="67:39" pos:end="67:57">V9FS_SM_MAPPED_FILE</name></expr>)</condition> <block pos:start="67:60" pos:end="93:5">{<block_content pos:start="69:9" pos:end="91:9">

        <expr_stmt pos:start="69:9" pos:end="69:74"><expr pos:start="69:9" pos:end="69:73"><name pos:start="69:9" pos:end="69:10">fd</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <call pos:start="69:14" pos:end="69:73"><name pos:start="69:14" pos:end="69:17">open</name><argument_list pos:start="69:18" pos:end="69:73">(<argument pos:start="69:19" pos:end="69:45"><expr pos:start="69:19" pos:end="69:45"><call pos:start="69:19" pos:end="69:45"><name pos:start="69:19" pos:end="69:23">rpath</name><argument_list pos:start="69:24" pos:end="69:45">(<argument pos:start="69:25" pos:end="69:30"><expr pos:start="69:25" pos:end="69:30"><name pos:start="69:25" pos:end="69:30">fs_ctx</name></expr></argument>, <argument pos:start="69:33" pos:end="69:36"><expr pos:start="69:33" pos:end="69:36"><name pos:start="69:33" pos:end="69:36">path</name></expr></argument>, <argument pos:start="69:39" pos:end="69:44"><expr pos:start="69:39" pos:end="69:44"><name pos:start="69:39" pos:end="69:44">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:48" pos:end="69:52"><expr pos:start="69:48" pos:end="69:52"><name pos:start="69:48" pos:end="69:52">flags</name></expr></argument>, <argument pos:start="69:55" pos:end="69:72"><expr pos:start="69:55" pos:end="69:72"><name pos:start="69:55" pos:end="69:72">SM_LOCAL_MODE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:21">(<expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:14">fd</name> <operator pos:start="71:16" pos:end="71:17">==</operator> <operator pos:start="71:19" pos:end="71:19">-</operator><literal type="number" pos:start="71:20" pos:end="71:20">1</literal></expr>)</condition> <block pos:start="71:23" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:21">

            <expr_stmt pos:start="73:13" pos:end="73:21"><expr pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:15">err</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:20">fd</name></expr>;</expr_stmt>

            <goto pos:start="75:13" pos:end="75:21">goto <name pos:start="75:18" pos:end="75:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:13">credp</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:22">fc_mode</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:39"><name pos:start="79:26" pos:end="79:30">credp</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:39">fc_mode</name></name><operator pos:start="79:40" pos:end="79:40">|</operator><name pos:start="79:41" pos:end="79:47">S_IFREG</name></expr>;</expr_stmt>

        <comment type="block" pos:start="81:9" pos:end="81:72">/* Set client credentials in .virtfs_metadata directory files */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:62"><expr pos:start="83:9" pos:end="83:61"><name pos:start="83:9" pos:end="83:11">err</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:61"><name pos:start="83:15" pos:end="83:40">local_set_mapped_file_attr</name><argument_list pos:start="83:41" pos:end="83:61">(<argument pos:start="83:42" pos:end="83:47"><expr pos:start="83:42" pos:end="83:47"><name pos:start="83:42" pos:end="83:47">fs_ctx</name></expr></argument>, <argument pos:start="83:50" pos:end="83:53"><expr pos:start="83:50" pos:end="83:53"><name pos:start="83:50" pos:end="83:53">path</name></expr></argument>, <argument pos:start="83:56" pos:end="83:60"><expr pos:start="83:56" pos:end="83:60"><name pos:start="83:56" pos:end="83:60">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:15">err</name> <operator pos:start="85:17" pos:end="85:18">==</operator> <operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>)</condition> <block pos:start="85:24" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:25">

            <expr_stmt pos:start="87:13" pos:end="87:27"><expr pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:18">serrno</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="89:13" pos:end="89:25">goto <name pos:start="89:18" pos:end="89:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="117:5">else if <condition pos:start="93:15" pos:end="95:53">(<expr pos:start="93:16" pos:end="95:52"><operator pos:start="93:16" pos:end="93:16">(</operator><name pos:start="93:17" pos:end="93:36"><name pos:start="93:17" pos:end="93:22">fs_ctx</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:36">export_flags</name></name> <operator pos:start="93:38" pos:end="93:38">&amp;</operator> <name pos:start="93:40" pos:end="93:58">V9FS_SM_PASSTHROUGH</name><operator pos:start="93:59" pos:end="93:59">)</operator> <operator pos:start="93:61" pos:end="93:62">||</operator>

               <operator pos:start="95:16" pos:end="95:16">(</operator><name pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:22">fs_ctx</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:36">export_flags</name></name> <operator pos:start="95:38" pos:end="95:38">&amp;</operator> <name pos:start="95:40" pos:end="95:51">V9FS_SM_NONE</name><operator pos:start="95:52" pos:end="95:52">)</operator></expr>)</condition> <block pos:start="95:55" pos:end="117:5">{<block_content pos:start="97:9" pos:end="115:9">

        <expr_stmt pos:start="97:9" pos:end="97:70"><expr pos:start="97:9" pos:end="97:69"><name pos:start="97:9" pos:end="97:10">fd</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <call pos:start="97:14" pos:end="97:69"><name pos:start="97:14" pos:end="97:17">open</name><argument_list pos:start="97:18" pos:end="97:69">(<argument pos:start="97:19" pos:end="97:45"><expr pos:start="97:19" pos:end="97:45"><call pos:start="97:19" pos:end="97:45"><name pos:start="97:19" pos:end="97:23">rpath</name><argument_list pos:start="97:24" pos:end="97:45">(<argument pos:start="97:25" pos:end="97:30"><expr pos:start="97:25" pos:end="97:30"><name pos:start="97:25" pos:end="97:30">fs_ctx</name></expr></argument>, <argument pos:start="97:33" pos:end="97:36"><expr pos:start="97:33" pos:end="97:36"><name pos:start="97:33" pos:end="97:36">path</name></expr></argument>, <argument pos:start="97:39" pos:end="97:44"><expr pos:start="97:39" pos:end="97:44"><name pos:start="97:39" pos:end="97:44">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:48" pos:end="97:52"><expr pos:start="97:48" pos:end="97:52"><name pos:start="97:48" pos:end="97:52">flags</name></expr></argument>, <argument pos:start="97:55" pos:end="97:68"><expr pos:start="97:55" pos:end="97:68"><name pos:start="97:55" pos:end="97:68"><name pos:start="97:55" pos:end="97:59">credp</name><operator pos:start="97:60" pos:end="97:61">-&gt;</operator><name pos:start="97:62" pos:end="97:68">fc_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:21">(<expr pos:start="99:13" pos:end="99:20"><name pos:start="99:13" pos:end="99:14">fd</name> <operator pos:start="99:16" pos:end="99:17">==</operator> <operator pos:start="99:19" pos:end="99:19">-</operator><literal type="number" pos:start="99:20" pos:end="99:20">1</literal></expr>)</condition> <block pos:start="99:23" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:21">

            <expr_stmt pos:start="101:13" pos:end="101:21"><expr pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:15">err</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:20">fd</name></expr>;</expr_stmt>

            <goto pos:start="103:13" pos:end="103:21">goto <name pos:start="103:18" pos:end="103:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:65"><expr pos:start="107:9" pos:end="107:64"><name pos:start="107:9" pos:end="107:11">err</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:64"><name pos:start="107:15" pos:end="107:43">local_post_create_passthrough</name><argument_list pos:start="107:44" pos:end="107:64">(<argument pos:start="107:45" pos:end="107:50"><expr pos:start="107:45" pos:end="107:50"><name pos:start="107:45" pos:end="107:50">fs_ctx</name></expr></argument>, <argument pos:start="107:53" pos:end="107:56"><expr pos:start="107:53" pos:end="107:56"><name pos:start="107:53" pos:end="107:56">path</name></expr></argument>, <argument pos:start="107:59" pos:end="107:63"><expr pos:start="107:59" pos:end="107:63"><name pos:start="107:59" pos:end="107:63">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:22">(<expr pos:start="109:13" pos:end="109:21"><name pos:start="109:13" pos:end="109:15">err</name> <operator pos:start="109:17" pos:end="109:18">==</operator> <operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>)</condition> <block pos:start="109:24" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:25">

            <expr_stmt pos:start="111:13" pos:end="111:27"><expr pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:18">serrno</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="113:13" pos:end="113:25">goto <name pos:start="113:18" pos:end="113:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:13"><expr pos:start="119:5" pos:end="119:12"><name pos:start="119:5" pos:end="119:7">err</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <name pos:start="119:11" pos:end="119:12">fd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:16"><expr pos:start="121:5" pos:end="121:15"><name pos:start="121:5" pos:end="121:10"><name pos:start="121:5" pos:end="121:6">fs</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:10">fd</name></name> <operator pos:start="121:12" pos:end="121:12">=</operator> <name pos:start="121:14" pos:end="121:15">fd</name></expr>;</expr_stmt>

    <goto pos:start="123:5" pos:end="123:13">goto <name pos:start="123:10" pos:end="123:12">out</name>;</goto>



<label pos:start="127:1" pos:end="127:8"><name pos:start="127:1" pos:end="127:7">err_end</name>:</label>

    <expr_stmt pos:start="129:5" pos:end="129:14"><expr pos:start="129:5" pos:end="129:13"><call pos:start="129:5" pos:end="129:13"><name pos:start="129:5" pos:end="129:9">close</name><argument_list pos:start="129:10" pos:end="129:13">(<argument pos:start="129:11" pos:end="129:12"><expr pos:start="129:11" pos:end="129:12"><name pos:start="129:11" pos:end="129:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:40"><expr pos:start="131:5" pos:end="131:39"><call pos:start="131:5" pos:end="131:39"><name pos:start="131:5" pos:end="131:10">remove</name><argument_list pos:start="131:11" pos:end="131:39">(<argument pos:start="131:12" pos:end="131:38"><expr pos:start="131:12" pos:end="131:38"><call pos:start="131:12" pos:end="131:38"><name pos:start="131:12" pos:end="131:16">rpath</name><argument_list pos:start="131:17" pos:end="131:38">(<argument pos:start="131:18" pos:end="131:23"><expr pos:start="131:18" pos:end="131:23"><name pos:start="131:18" pos:end="131:23">fs_ctx</name></expr></argument>, <argument pos:start="131:26" pos:end="131:29"><expr pos:start="131:26" pos:end="131:29"><name pos:start="131:26" pos:end="131:29">path</name></expr></argument>, <argument pos:start="131:32" pos:end="131:37"><expr pos:start="131:32" pos:end="131:37"><name pos:start="131:32" pos:end="131:37">buffer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:19"><expr pos:start="133:5" pos:end="133:18"><name pos:start="133:5" pos:end="133:9">errno</name> <operator pos:start="133:11" pos:end="133:11">=</operator> <name pos:start="133:13" pos:end="133:18">serrno</name></expr>;</expr_stmt>

<label pos:start="135:1" pos:end="135:4"><name pos:start="135:1" pos:end="135:3">out</name>:</label>

    <expr_stmt pos:start="137:5" pos:end="137:32"><expr pos:start="137:5" pos:end="137:31"><call pos:start="137:5" pos:end="137:31"><name pos:start="137:5" pos:end="137:20">v9fs_string_free</name><argument_list pos:start="137:21" pos:end="137:31">(<argument pos:start="137:22" pos:end="137:30"><expr pos:start="137:22" pos:end="137:30"><operator pos:start="137:22" pos:end="137:22">&amp;</operator><name pos:start="137:23" pos:end="137:30">fullname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:15">return <expr pos:start="139:12" pos:end="139:14"><name pos:start="139:12" pos:end="139:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
