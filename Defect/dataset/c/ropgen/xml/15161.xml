<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15161.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:24">fw_cfg_modify_file</name><parameter_list pos:start="1:25" pos:end="3:47">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">FWCfgState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:60"><decl pos:start="1:41" pos:end="1:60"><type pos:start="1:41" pos:end="1:60"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:60">filename</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:46"><decl pos:start="3:37" pos:end="3:46"><type pos:start="3:37" pos:end="3:46"><name pos:start="3:37" pos:end="3:42">size_t</name></type> <name pos:start="3:44" pos:end="3:46">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:16">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:16">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">ptr</name> <init pos:start="9:15" pos:end="9:20">= <expr pos:start="9:17" pos:end="9:20"><name pos:start="9:17" pos:end="9:20">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><call pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:20">(<argument pos:start="13:12" pos:end="13:19"><expr pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:19">files</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:9">index</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:40"><name pos:start="17:13" pos:end="17:23">be32_to_cpu</name><argument_list pos:start="17:24" pos:end="17:40">(<argument pos:start="17:25" pos:end="17:39"><expr pos:start="17:25" pos:end="17:39"><name pos:start="17:25" pos:end="17:39"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:32">files</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:39">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><call pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:40">(<argument pos:start="19:12" pos:end="19:39"><expr pos:start="19:12" pos:end="19:39"><name pos:start="19:12" pos:end="19:16">index</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <call pos:start="19:20" pos:end="19:39"><name pos:start="19:20" pos:end="19:36">fw_cfg_file_slots</name><argument_list pos:start="19:37" pos:end="19:39">(<argument pos:start="19:38" pos:end="19:38"><expr pos:start="19:38" pos:end="19:38"><name pos:start="19:38" pos:end="19:38">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="37:5">for <control pos:start="23:9" pos:end="23:31">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:26"><expr pos:start="23:17" pos:end="23:25"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:25">index</name></expr>;</condition> <incr pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:28">i</name><operator pos:start="23:29" pos:end="23:30">++</operator></expr></incr>)</control> <block pos:start="23:33" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:9">

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:55">(<expr pos:start="25:13" pos:end="25:54"><call pos:start="25:13" pos:end="25:49"><name pos:start="25:13" pos:end="25:18">strcmp</name><argument_list pos:start="25:19" pos:end="25:49">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27">filename</name></expr></argument>, <argument pos:start="25:30" pos:end="25:48"><expr pos:start="25:30" pos:end="25:48"><name pos:start="25:30" pos:end="25:43"><name pos:start="25:30" pos:end="25:30">s</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:37">files</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:40">f</name><index pos:start="25:41" pos:end="25:43">[<expr pos:start="25:42" pos:end="25:42"><name pos:start="25:42" pos:end="25:42">i</name></expr>]</index></name><operator pos:start="25:44" pos:end="25:44">.</operator><name pos:start="25:45" pos:end="25:48">name</name></expr></argument>)</argument_list></call> <operator pos:start="25:51" pos:end="25:52">==</operator> <literal type="number" pos:start="25:54" pos:end="25:54">0</literal></expr>)</condition> <block pos:start="25:57" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:23">

            <expr_stmt pos:start="27:13" pos:end="29:54"><expr pos:start="27:13" pos:end="29:53"><name pos:start="27:13" pos:end="27:15">ptr</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="29:53"><name pos:start="27:19" pos:end="27:42">fw_cfg_modify_bytes_read</name><argument_list pos:start="27:43" pos:end="29:53">(<argument pos:start="27:44" pos:end="27:44"><expr pos:start="27:44" pos:end="27:44"><name pos:start="27:44" pos:end="27:44">s</name></expr></argument>, <argument pos:start="27:47" pos:end="27:67"><expr pos:start="27:47" pos:end="27:67"><name pos:start="27:47" pos:end="27:63">FW_CFG_FILE_FIRST</name> <operator pos:start="27:65" pos:end="27:65">+</operator> <name pos:start="27:67" pos:end="27:67">i</name></expr></argument>,

                                           <argument pos:start="29:44" pos:end="29:47"><expr pos:start="29:44" pos:end="29:47"><name pos:start="29:44" pos:end="29:47">data</name></expr></argument>, <argument pos:start="29:50" pos:end="29:52"><expr pos:start="29:50" pos:end="29:52"><name pos:start="29:50" pos:end="29:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:53"><expr pos:start="31:13" pos:end="31:52"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">files</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:23">f</name><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">i</name></expr>]</index></name><operator pos:start="31:27" pos:end="31:27">.</operator><name pos:start="31:28" pos:end="31:31">size</name>   <operator pos:start="31:35" pos:end="31:35">=</operator> <call pos:start="31:37" pos:end="31:52"><name pos:start="31:37" pos:end="31:47">cpu_to_be32</name><argument_list pos:start="31:48" pos:end="31:52">(<argument pos:start="31:49" pos:end="31:51"><expr pos:start="31:49" pos:end="31:51"><name pos:start="31:49" pos:end="31:51">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ptr</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="39:5" pos:end="39:21">/* add new one */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:77"><expr pos:start="41:5" pos:end="41:76"><call pos:start="41:5" pos:end="41:76"><name pos:start="41:5" pos:end="41:28">fw_cfg_add_file_callback</name><argument_list pos:start="41:29" pos:end="41:76">(<argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">s</name></expr></argument>, <argument pos:start="41:33" pos:end="41:40"><expr pos:start="41:33" pos:end="41:40"><name pos:start="41:33" pos:end="41:40">filename</name></expr></argument>, <argument pos:start="41:43" pos:end="41:46"><expr pos:start="41:43" pos:end="41:46"><name pos:start="41:43" pos:end="41:46">NULL</name></expr></argument>, <argument pos:start="41:49" pos:end="41:52"><expr pos:start="41:49" pos:end="41:52"><name pos:start="41:49" pos:end="41:52">NULL</name></expr></argument>, <argument pos:start="41:55" pos:end="41:58"><expr pos:start="41:55" pos:end="41:58"><name pos:start="41:55" pos:end="41:58">NULL</name></expr></argument>, <argument pos:start="41:61" pos:end="41:64"><expr pos:start="41:61" pos:end="41:64"><name pos:start="41:61" pos:end="41:64">data</name></expr></argument>, <argument pos:start="41:67" pos:end="41:69"><expr pos:start="41:67" pos:end="41:69"><name pos:start="41:67" pos:end="41:69">len</name></expr></argument>, <argument pos:start="41:72" pos:end="41:75"><expr pos:start="41:72" pos:end="41:75"><name pos:start="41:72" pos:end="41:75">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:16">return <expr pos:start="43:12" pos:end="43:15"><name pos:start="43:12" pos:end="43:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
