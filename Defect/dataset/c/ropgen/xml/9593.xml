<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9593.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:29">make_digest_auth</name><parameter_list pos:start="1:30" pos:end="5:49">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:43">HTTPAuthState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">state</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:72">username</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:50"><decl pos:start="3:31" pos:end="3:50"><type pos:start="3:31" pos:end="3:50"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:40">char</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:50">password</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:67"><decl pos:start="3:53" pos:end="3:67"><type pos:start="3:53" pos:end="3:67"><specifier pos:start="3:53" pos:end="3:57">const</specifier> <name pos:start="3:59" pos:end="3:62">char</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:67">uri</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:48"><decl pos:start="5:31" pos:end="5:48"><type pos:start="5:31" pos:end="5:48"><specifier pos:start="5:31" pos:end="5:35">const</specifier> <name pos:start="5:37" pos:end="5:40">char</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:48">method</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="207:1">{<block_content pos:start="9:5" pos:end="205:19">

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">DigestParams</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:24">digest</name> <init pos:start="9:26" pos:end="9:48">= <expr pos:start="9:28" pos:end="9:48"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:48"><name pos:start="9:29" pos:end="9:33">state</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:48">digest_params</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:26"><name pos:start="13:14" pos:end="13:23">cnonce_buf</name><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:15">cnonce</name><index pos:start="15:16" pos:end="15:19">[<expr pos:start="15:17" pos:end="15:18"><literal type="number" pos:start="15:17" pos:end="15:18">17</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:11">nc</name><index pos:start="17:12" pos:end="17:14">[<expr pos:start="17:13" pos:end="17:13"><literal type="number" pos:start="17:13" pos:end="17:13">9</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:46"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">char</name></type> <name pos:start="21:10" pos:end="21:19"><name pos:start="21:10" pos:end="21:15">A1hash</name><index pos:start="21:16" pos:end="21:19">[<expr pos:start="21:17" pos:end="21:18"><literal type="number" pos:start="21:17" pos:end="21:18">33</literal></expr>]</index></name></decl>, <decl pos:start="21:22" pos:end="21:31"><type ref="prev" pos:start="21:5" pos:end="21:8"/><name pos:start="21:22" pos:end="21:31"><name pos:start="21:22" pos:end="21:27">A2hash</name><index pos:start="21:28" pos:end="21:31">[<expr pos:start="21:29" pos:end="21:30"><literal type="number" pos:start="21:29" pos:end="21:30">33</literal></expr>]</index></name></decl>, <decl pos:start="21:34" pos:end="21:45"><type ref="prev" pos:start="21:5" pos:end="21:8"/><name pos:start="21:34" pos:end="21:45"><name pos:start="21:34" pos:end="21:41">response</name><index pos:start="21:42" pos:end="21:45">[<expr pos:start="21:43" pos:end="21:44"><literal type="number" pos:start="21:43" pos:end="21:44">33</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:16">AVMD5</name></name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:24">md5ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">uint8_t</name></type> <name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:16">hash</name><index pos:start="25:17" pos:end="25:20">[<expr pos:start="25:18" pos:end="25:19"><literal type="number" pos:start="25:18" pos:end="25:19">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:8">char</name> <modifier pos:start="27:10" pos:end="27:10">*</modifier></type><name pos:start="27:11" pos:end="27:17">authstr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:10">digest</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:14">nc</name></name><operator pos:start="31:15" pos:end="31:16">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:49"><expr pos:start="33:5" pos:end="33:48"><call pos:start="33:5" pos:end="33:48"><name pos:start="33:5" pos:end="33:12">snprintf</name><argument_list pos:start="33:13" pos:end="33:48">(<argument pos:start="33:14" pos:end="33:15"><expr pos:start="33:14" pos:end="33:15"><name pos:start="33:14" pos:end="33:15">nc</name></expr></argument>, <argument pos:start="33:18" pos:end="33:27"><expr pos:start="33:18" pos:end="33:27"><sizeof pos:start="33:18" pos:end="33:27">sizeof<argument_list pos:start="33:24" pos:end="33:27">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">nc</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:30" pos:end="33:35"><expr pos:start="33:30" pos:end="33:35"><literal type="string" pos:start="33:30" pos:end="33:35">"%08x"</literal></expr></argument>, <argument pos:start="33:38" pos:end="33:47"><expr pos:start="33:38" pos:end="33:47"><name pos:start="33:38" pos:end="33:47"><name pos:start="33:38" pos:end="33:43">digest</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:47">nc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:34">/* Generate a client nonce. */</comment>

    <for pos:start="39:5" pos:end="41:45">for <control pos:start="39:9" pos:end="39:27">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:22"><expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <literal type="number" pos:start="39:21" pos:end="39:21">2</literal></expr>;</condition> <incr pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:24">i</name><operator pos:start="39:25" pos:end="39:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:9" pos:end="41:45"><block_content pos:start="41:9" pos:end="41:45">

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:18">cnonce_buf</name><index pos:start="41:19" pos:end="41:21">[<expr pos:start="41:20" pos:end="41:20"><name pos:start="41:20" pos:end="41:20">i</name></expr>]</index></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:44"><name pos:start="41:25" pos:end="41:42">av_get_random_seed</name><argument_list pos:start="41:43" pos:end="41:44">()</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="43:5" pos:end="43:79"><expr pos:start="43:5" pos:end="43:78"><call pos:start="43:5" pos:end="43:78"><name pos:start="43:5" pos:end="43:18">ff_data_to_hex</name><argument_list pos:start="43:19" pos:end="43:78">(<argument pos:start="43:20" pos:end="43:25"><expr pos:start="43:20" pos:end="43:25"><name pos:start="43:20" pos:end="43:25">cnonce</name></expr></argument>, <argument pos:start="43:28" pos:end="43:54"><expr pos:start="43:28" pos:end="43:54"><operator pos:start="43:28" pos:end="43:28">(</operator><specifier pos:start="43:29" pos:end="43:33">const</specifier> <name pos:start="43:35" pos:end="43:41">uint8_t</name><operator pos:start="43:42" pos:end="43:42">*</operator><operator pos:start="43:43" pos:end="43:43">)</operator> <name pos:start="43:45" pos:end="43:54">cnonce_buf</name></expr></argument>, <argument pos:start="43:57" pos:end="43:74"><expr pos:start="43:57" pos:end="43:74"><sizeof pos:start="43:57" pos:end="43:74">sizeof<argument_list pos:start="43:63" pos:end="43:74">(<argument pos:start="43:64" pos:end="43:73"><expr pos:start="43:64" pos:end="43:73"><name pos:start="43:64" pos:end="43:73">cnonce_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:77" pos:end="43:77"><expr pos:start="43:77" pos:end="43:77"><literal type="number" pos:start="43:77" pos:end="43:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:10">cnonce</name><index pos:start="45:11" pos:end="45:32">[<expr pos:start="45:12" pos:end="45:31"><literal type="number" pos:start="45:12" pos:end="45:12">2</literal><operator pos:start="45:13" pos:end="45:13">*</operator><sizeof pos:start="45:14" pos:end="45:31">sizeof<argument_list pos:start="45:20" pos:end="45:31">(<argument pos:start="45:21" pos:end="45:30"><expr pos:start="45:21" pos:end="45:30"><name pos:start="45:21" pos:end="45:30">cnonce_buf</name></expr></argument>)</argument_list></sizeof></expr>]</index></name> <operator pos:start="45:34" pos:end="45:34">=</operator> <literal type="number" pos:start="45:36" pos:end="45:36">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:28"><expr pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:10">md5ctx</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:25">av_md5_alloc</name><argument_list pos:start="49:26" pos:end="49:27">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:20"><if pos:start="51:5" pos:end="53:20">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:15">md5ctx</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:20"><block_content pos:start="53:9" pos:end="53:20">

        <return pos:start="53:9" pos:end="53:20">return <expr pos:start="53:16" pos:end="53:19"><name pos:start="53:16" pos:end="53:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><call pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:15">av_md5_init</name><argument_list pos:start="57:16" pos:end="57:23">(<argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:22">md5ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:81"><expr pos:start="59:5" pos:end="59:80"><call pos:start="59:5" pos:end="59:80"><name pos:start="59:5" pos:end="59:22">update_md5_strings</name><argument_list pos:start="59:23" pos:end="59:80">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29">md5ctx</name></expr></argument>, <argument pos:start="59:32" pos:end="59:39"><expr pos:start="59:32" pos:end="59:39"><name pos:start="59:32" pos:end="59:39">username</name></expr></argument>, <argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><literal type="string" pos:start="59:42" pos:end="59:44">":"</literal></expr></argument>, <argument pos:start="59:47" pos:end="59:58"><expr pos:start="59:47" pos:end="59:58"><name pos:start="59:47" pos:end="59:58"><name pos:start="59:47" pos:end="59:51">state</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:58">realm</name></name></expr></argument>, <argument pos:start="59:61" pos:end="59:63"><expr pos:start="59:61" pos:end="59:63"><literal type="string" pos:start="59:61" pos:end="59:63">":"</literal></expr></argument>, <argument pos:start="59:66" pos:end="59:73"><expr pos:start="59:66" pos:end="59:73"><name pos:start="59:66" pos:end="59:73">password</name></expr></argument>, <argument pos:start="59:76" pos:end="59:79"><expr pos:start="59:76" pos:end="59:79"><name pos:start="59:76" pos:end="59:79">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:31"><expr pos:start="61:5" pos:end="61:30"><call pos:start="61:5" pos:end="61:30"><name pos:start="61:5" pos:end="61:16">av_md5_final</name><argument_list pos:start="61:17" pos:end="61:30">(<argument pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:23"><name pos:start="61:18" pos:end="61:23">md5ctx</name></expr></argument>, <argument pos:start="61:26" pos:end="61:29"><expr pos:start="61:26" pos:end="61:29"><name pos:start="61:26" pos:end="61:29">hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><call pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:18">ff_data_to_hex</name><argument_list pos:start="63:19" pos:end="63:39">(<argument pos:start="63:20" pos:end="63:25"><expr pos:start="63:20" pos:end="63:25"><name pos:start="63:20" pos:end="63:25">A1hash</name></expr></argument>, <argument pos:start="63:28" pos:end="63:31"><expr pos:start="63:28" pos:end="63:31"><name pos:start="63:28" pos:end="63:31">hash</name></expr></argument>, <argument pos:start="63:34" pos:end="63:35"><expr pos:start="63:34" pos:end="63:35"><literal type="number" pos:start="63:34" pos:end="63:35">16</literal></expr></argument>, <argument pos:start="63:38" pos:end="63:38"><expr pos:start="63:38" pos:end="63:38"><literal type="number" pos:start="63:38" pos:end="63:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:19"><expr pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:10">A1hash</name><index pos:start="65:11" pos:end="65:14">[<expr pos:start="65:12" pos:end="65:13"><literal type="number" pos:start="65:12" pos:end="65:13">32</literal></expr>]</index></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="91:5"><if pos:start="69:5" pos:end="71:5">if <condition pos:start="69:8" pos:end="69:76">(<expr pos:start="69:9" pos:end="69:75"><operator pos:start="69:9" pos:end="69:9">!</operator><call pos:start="69:10" pos:end="69:38"><name pos:start="69:10" pos:end="69:15">strcmp</name><argument_list pos:start="69:16" pos:end="69:38">(<argument pos:start="69:17" pos:end="69:33"><expr pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:22">digest</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:33">algorithm</name></name></expr></argument>, <argument pos:start="69:36" pos:end="69:37"><expr pos:start="69:36" pos:end="69:37"><literal type="string" pos:start="69:36" pos:end="69:37">""</literal></expr></argument>)</argument_list></call> <operator pos:start="69:40" pos:end="69:41">||</operator> <operator pos:start="69:43" pos:end="69:43">!</operator><call pos:start="69:44" pos:end="69:75"><name pos:start="69:44" pos:end="69:49">strcmp</name><argument_list pos:start="69:50" pos:end="69:75">(<argument pos:start="69:51" pos:end="69:67"><expr pos:start="69:51" pos:end="69:67"><name pos:start="69:51" pos:end="69:67"><name pos:start="69:51" pos:end="69:56">digest</name><operator pos:start="69:57" pos:end="69:58">-&gt;</operator><name pos:start="69:59" pos:end="69:67">algorithm</name></name></expr></argument>, <argument pos:start="69:70" pos:end="69:74"><expr pos:start="69:70" pos:end="69:74"><literal type="string" pos:start="69:70" pos:end="69:74">"MD5"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:78" pos:end="71:5">{<block_content>

    </block_content>}</block></if> <if type="elseif" pos:start="71:7" pos:end="83:5">else if <condition pos:start="71:15" pos:end="71:54">(<expr pos:start="71:16" pos:end="71:53"><operator pos:start="71:16" pos:end="71:16">!</operator><call pos:start="71:17" pos:end="71:53"><name pos:start="71:17" pos:end="71:22">strcmp</name><argument_list pos:start="71:23" pos:end="71:53">(<argument pos:start="71:24" pos:end="71:40"><expr pos:start="71:24" pos:end="71:40"><name pos:start="71:24" pos:end="71:40"><name pos:start="71:24" pos:end="71:29">digest</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:40">algorithm</name></name></expr></argument>, <argument pos:start="71:43" pos:end="71:52"><expr pos:start="71:43" pos:end="71:52"><literal type="string" pos:start="71:43" pos:end="71:52">"MD5-sess"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:56" pos:end="83:5">{<block_content pos:start="73:9" pos:end="81:23">

        <expr_stmt pos:start="73:9" pos:end="73:28"><expr pos:start="73:9" pos:end="73:27"><call pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:19">av_md5_init</name><argument_list pos:start="73:20" pos:end="73:27">(<argument pos:start="73:21" pos:end="73:26"><expr pos:start="73:21" pos:end="73:26"><name pos:start="73:21" pos:end="73:26">md5ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:82"><expr pos:start="75:9" pos:end="75:81"><call pos:start="75:9" pos:end="75:81"><name pos:start="75:9" pos:end="75:26">update_md5_strings</name><argument_list pos:start="75:27" pos:end="75:81">(<argument pos:start="75:28" pos:end="75:33"><expr pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:33">md5ctx</name></expr></argument>, <argument pos:start="75:36" pos:end="75:41"><expr pos:start="75:36" pos:end="75:41"><name pos:start="75:36" pos:end="75:41">A1hash</name></expr></argument>, <argument pos:start="75:44" pos:end="75:46"><expr pos:start="75:44" pos:end="75:46"><literal type="string" pos:start="75:44" pos:end="75:46">":"</literal></expr></argument>, <argument pos:start="75:49" pos:end="75:61"><expr pos:start="75:49" pos:end="75:61"><name pos:start="75:49" pos:end="75:61"><name pos:start="75:49" pos:end="75:54">digest</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:61">nonce</name></name></expr></argument>, <argument pos:start="75:64" pos:end="75:66"><expr pos:start="75:64" pos:end="75:66"><literal type="string" pos:start="75:64" pos:end="75:66">":"</literal></expr></argument>, <argument pos:start="75:69" pos:end="75:74"><expr pos:start="75:69" pos:end="75:74"><name pos:start="75:69" pos:end="75:74">cnonce</name></expr></argument>, <argument pos:start="75:77" pos:end="75:80"><expr pos:start="75:77" pos:end="75:80"><name pos:start="75:77" pos:end="75:80">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><call pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:20">av_md5_final</name><argument_list pos:start="77:21" pos:end="77:34">(<argument pos:start="77:22" pos:end="77:27"><expr pos:start="77:22" pos:end="77:27"><name pos:start="77:22" pos:end="77:27">md5ctx</name></expr></argument>, <argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:44"><expr pos:start="79:9" pos:end="79:43"><call pos:start="79:9" pos:end="79:43"><name pos:start="79:9" pos:end="79:22">ff_data_to_hex</name><argument_list pos:start="79:23" pos:end="79:43">(<argument pos:start="79:24" pos:end="79:29"><expr pos:start="79:24" pos:end="79:29"><name pos:start="79:24" pos:end="79:29">A1hash</name></expr></argument>, <argument pos:start="79:32" pos:end="79:35"><expr pos:start="79:32" pos:end="79:35"><name pos:start="79:32" pos:end="79:35">hash</name></expr></argument>, <argument pos:start="79:38" pos:end="79:39"><expr pos:start="79:38" pos:end="79:39"><literal type="number" pos:start="79:38" pos:end="79:39">16</literal></expr></argument>, <argument pos:start="79:42" pos:end="79:42"><expr pos:start="79:42" pos:end="79:42"><literal type="number" pos:start="79:42" pos:end="79:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:14">A1hash</name><index pos:start="81:15" pos:end="81:18">[<expr pos:start="81:16" pos:end="81:17"><literal type="number" pos:start="81:16" pos:end="81:17">32</literal></expr>]</index></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="91:5">else <block pos:start="83:12" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:20">

        <comment type="block" pos:start="85:9" pos:end="85:35">/* Unsupported algorithm */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:24"><expr pos:start="87:9" pos:end="87:23"><call pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:15">av_free</name><argument_list pos:start="87:16" pos:end="87:23">(<argument pos:start="87:17" pos:end="87:22"><expr pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:22">md5ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:20">return <expr pos:start="89:16" pos:end="89:19"><name pos:start="89:16" pos:end="89:19">NULL</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:24"><expr pos:start="95:5" pos:end="95:23"><call pos:start="95:5" pos:end="95:23"><name pos:start="95:5" pos:end="95:15">av_md5_init</name><argument_list pos:start="95:16" pos:end="95:23">(<argument pos:start="95:17" pos:end="95:22"><expr pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:22">md5ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:55"><expr pos:start="97:5" pos:end="97:54"><call pos:start="97:5" pos:end="97:54"><name pos:start="97:5" pos:end="97:22">update_md5_strings</name><argument_list pos:start="97:23" pos:end="97:54">(<argument pos:start="97:24" pos:end="97:29"><expr pos:start="97:24" pos:end="97:29"><name pos:start="97:24" pos:end="97:29">md5ctx</name></expr></argument>, <argument pos:start="97:32" pos:end="97:37"><expr pos:start="97:32" pos:end="97:37"><name pos:start="97:32" pos:end="97:37">method</name></expr></argument>, <argument pos:start="97:40" pos:end="97:42"><expr pos:start="97:40" pos:end="97:42"><literal type="string" pos:start="97:40" pos:end="97:42">":"</literal></expr></argument>, <argument pos:start="97:45" pos:end="97:47"><expr pos:start="97:45" pos:end="97:47"><name pos:start="97:45" pos:end="97:47">uri</name></expr></argument>, <argument pos:start="97:50" pos:end="97:53"><expr pos:start="97:50" pos:end="97:53"><name pos:start="97:50" pos:end="97:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:31"><expr pos:start="99:5" pos:end="99:30"><call pos:start="99:5" pos:end="99:30"><name pos:start="99:5" pos:end="99:16">av_md5_final</name><argument_list pos:start="99:17" pos:end="99:30">(<argument pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:23"><name pos:start="99:18" pos:end="99:23">md5ctx</name></expr></argument>, <argument pos:start="99:26" pos:end="99:29"><expr pos:start="99:26" pos:end="99:29"><name pos:start="99:26" pos:end="99:29">hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:40"><expr pos:start="101:5" pos:end="101:39"><call pos:start="101:5" pos:end="101:39"><name pos:start="101:5" pos:end="101:18">ff_data_to_hex</name><argument_list pos:start="101:19" pos:end="101:39">(<argument pos:start="101:20" pos:end="101:25"><expr pos:start="101:20" pos:end="101:25"><name pos:start="101:20" pos:end="101:25">A2hash</name></expr></argument>, <argument pos:start="101:28" pos:end="101:31"><expr pos:start="101:28" pos:end="101:31"><name pos:start="101:28" pos:end="101:31">hash</name></expr></argument>, <argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><literal type="number" pos:start="101:34" pos:end="101:35">16</literal></expr></argument>, <argument pos:start="101:38" pos:end="101:38"><expr pos:start="101:38" pos:end="101:38"><literal type="number" pos:start="101:38" pos:end="101:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:19"><expr pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:14"><name pos:start="103:5" pos:end="103:10">A2hash</name><index pos:start="103:11" pos:end="103:14">[<expr pos:start="103:12" pos:end="103:13"><literal type="number" pos:start="103:12" pos:end="103:13">32</literal></expr>]</index></name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:24"><expr pos:start="107:5" pos:end="107:23"><call pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:15">av_md5_init</name><argument_list pos:start="107:16" pos:end="107:23">(<argument pos:start="107:17" pos:end="107:22"><expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:22">md5ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:65"><expr pos:start="109:5" pos:end="109:64"><call pos:start="109:5" pos:end="109:64"><name pos:start="109:5" pos:end="109:22">update_md5_strings</name><argument_list pos:start="109:23" pos:end="109:64">(<argument pos:start="109:24" pos:end="109:29"><expr pos:start="109:24" pos:end="109:29"><name pos:start="109:24" pos:end="109:29">md5ctx</name></expr></argument>, <argument pos:start="109:32" pos:end="109:37"><expr pos:start="109:32" pos:end="109:37"><name pos:start="109:32" pos:end="109:37">A1hash</name></expr></argument>, <argument pos:start="109:40" pos:end="109:42"><expr pos:start="109:40" pos:end="109:42"><literal type="string" pos:start="109:40" pos:end="109:42">":"</literal></expr></argument>, <argument pos:start="109:45" pos:end="109:57"><expr pos:start="109:45" pos:end="109:57"><name pos:start="109:45" pos:end="109:57"><name pos:start="109:45" pos:end="109:50">digest</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:57">nonce</name></name></expr></argument>, <argument pos:start="109:60" pos:end="109:63"><expr pos:start="109:60" pos:end="109:63"><name pos:start="109:60" pos:end="109:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:73">(<expr pos:start="111:9" pos:end="111:72"><operator pos:start="111:9" pos:end="111:9">!</operator><call pos:start="111:10" pos:end="111:36"><name pos:start="111:10" pos:end="111:15">strcmp</name><argument_list pos:start="111:16" pos:end="111:36">(<argument pos:start="111:17" pos:end="111:27"><expr pos:start="111:17" pos:end="111:27"><name pos:start="111:17" pos:end="111:27"><name pos:start="111:17" pos:end="111:22">digest</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:27">qop</name></name></expr></argument>, <argument pos:start="111:30" pos:end="111:35"><expr pos:start="111:30" pos:end="111:35"><literal type="string" pos:start="111:30" pos:end="111:35">"auth"</literal></expr></argument>)</argument_list></call> <operator pos:start="111:38" pos:end="111:39">||</operator> <operator pos:start="111:41" pos:end="111:41">!</operator><call pos:start="111:42" pos:end="111:72"><name pos:start="111:42" pos:end="111:47">strcmp</name><argument_list pos:start="111:48" pos:end="111:72">(<argument pos:start="111:49" pos:end="111:59"><expr pos:start="111:49" pos:end="111:59"><name pos:start="111:49" pos:end="111:59"><name pos:start="111:49" pos:end="111:54">digest</name><operator pos:start="111:55" pos:end="111:56">-&gt;</operator><name pos:start="111:57" pos:end="111:59">qop</name></name></expr></argument>, <argument pos:start="111:62" pos:end="111:71"><expr pos:start="111:62" pos:end="111:71"><literal type="string" pos:start="111:62" pos:end="111:71">"auth-int"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:75" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:81">

        <expr_stmt pos:start="113:9" pos:end="113:81"><expr pos:start="113:9" pos:end="113:80"><call pos:start="113:9" pos:end="113:80"><name pos:start="113:9" pos:end="113:26">update_md5_strings</name><argument_list pos:start="113:27" pos:end="113:80">(<argument pos:start="113:28" pos:end="113:33"><expr pos:start="113:28" pos:end="113:33"><name pos:start="113:28" pos:end="113:33">md5ctx</name></expr></argument>, <argument pos:start="113:36" pos:end="113:38"><expr pos:start="113:36" pos:end="113:38"><literal type="string" pos:start="113:36" pos:end="113:38">":"</literal></expr></argument>, <argument pos:start="113:41" pos:end="113:42"><expr pos:start="113:41" pos:end="113:42"><name pos:start="113:41" pos:end="113:42">nc</name></expr></argument>, <argument pos:start="113:45" pos:end="113:47"><expr pos:start="113:45" pos:end="113:47"><literal type="string" pos:start="113:45" pos:end="113:47">":"</literal></expr></argument>, <argument pos:start="113:50" pos:end="113:55"><expr pos:start="113:50" pos:end="113:55"><name pos:start="113:50" pos:end="113:55">cnonce</name></expr></argument>, <argument pos:start="113:58" pos:end="113:60"><expr pos:start="113:58" pos:end="113:60"><literal type="string" pos:start="113:58" pos:end="113:60">":"</literal></expr></argument>, <argument pos:start="113:63" pos:end="113:73"><expr pos:start="113:63" pos:end="113:73"><name pos:start="113:63" pos:end="113:73"><name pos:start="113:63" pos:end="113:68">digest</name><operator pos:start="113:69" pos:end="113:70">-&gt;</operator><name pos:start="113:71" pos:end="113:73">qop</name></name></expr></argument>, <argument pos:start="113:76" pos:end="113:79"><expr pos:start="113:76" pos:end="113:79"><name pos:start="113:76" pos:end="113:79">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:50"><expr pos:start="117:5" pos:end="117:49"><call pos:start="117:5" pos:end="117:49"><name pos:start="117:5" pos:end="117:22">update_md5_strings</name><argument_list pos:start="117:23" pos:end="117:49">(<argument pos:start="117:24" pos:end="117:29"><expr pos:start="117:24" pos:end="117:29"><name pos:start="117:24" pos:end="117:29">md5ctx</name></expr></argument>, <argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><literal type="string" pos:start="117:32" pos:end="117:34">":"</literal></expr></argument>, <argument pos:start="117:37" pos:end="117:42"><expr pos:start="117:37" pos:end="117:42"><name pos:start="117:37" pos:end="117:42">A2hash</name></expr></argument>, <argument pos:start="117:45" pos:end="117:48"><expr pos:start="117:45" pos:end="117:48"><name pos:start="117:45" pos:end="117:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:31"><expr pos:start="119:5" pos:end="119:30"><call pos:start="119:5" pos:end="119:30"><name pos:start="119:5" pos:end="119:16">av_md5_final</name><argument_list pos:start="119:17" pos:end="119:30">(<argument pos:start="119:18" pos:end="119:23"><expr pos:start="119:18" pos:end="119:23"><name pos:start="119:18" pos:end="119:23">md5ctx</name></expr></argument>, <argument pos:start="119:26" pos:end="119:29"><expr pos:start="119:26" pos:end="119:29"><name pos:start="119:26" pos:end="119:29">hash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:42"><expr pos:start="121:5" pos:end="121:41"><call pos:start="121:5" pos:end="121:41"><name pos:start="121:5" pos:end="121:18">ff_data_to_hex</name><argument_list pos:start="121:19" pos:end="121:41">(<argument pos:start="121:20" pos:end="121:27"><expr pos:start="121:20" pos:end="121:27"><name pos:start="121:20" pos:end="121:27">response</name></expr></argument>, <argument pos:start="121:30" pos:end="121:33"><expr pos:start="121:30" pos:end="121:33"><name pos:start="121:30" pos:end="121:33">hash</name></expr></argument>, <argument pos:start="121:36" pos:end="121:37"><expr pos:start="121:36" pos:end="121:37"><literal type="number" pos:start="121:36" pos:end="121:37">16</literal></expr></argument>, <argument pos:start="121:40" pos:end="121:40"><expr pos:start="121:40" pos:end="121:40"><literal type="number" pos:start="121:40" pos:end="121:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:21"><expr pos:start="123:5" pos:end="123:20"><name pos:start="123:5" pos:end="123:16"><name pos:start="123:5" pos:end="123:12">response</name><index pos:start="123:13" pos:end="123:16">[<expr pos:start="123:14" pos:end="123:15"><literal type="number" pos:start="123:14" pos:end="123:15">32</literal></expr>]</index></name> <operator pos:start="123:18" pos:end="123:18">=</operator> <literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:20"><expr pos:start="127:5" pos:end="127:19"><call pos:start="127:5" pos:end="127:19"><name pos:start="127:5" pos:end="127:11">av_free</name><argument_list pos:start="127:12" pos:end="127:19">(<argument pos:start="127:13" pos:end="127:18"><expr pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:18">md5ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="145:5"><if pos:start="131:5" pos:end="133:5">if <condition pos:start="131:8" pos:end="131:65">(<expr pos:start="131:9" pos:end="131:64"><operator pos:start="131:9" pos:end="131:9">!</operator><call pos:start="131:10" pos:end="131:32"><name pos:start="131:10" pos:end="131:15">strcmp</name><argument_list pos:start="131:16" pos:end="131:32">(<argument pos:start="131:17" pos:end="131:27"><expr pos:start="131:17" pos:end="131:27"><name pos:start="131:17" pos:end="131:27"><name pos:start="131:17" pos:end="131:22">digest</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:27">qop</name></name></expr></argument>, <argument pos:start="131:30" pos:end="131:31"><expr pos:start="131:30" pos:end="131:31"><literal type="string" pos:start="131:30" pos:end="131:31">""</literal></expr></argument>)</argument_list></call> <operator pos:start="131:34" pos:end="131:35">||</operator> <operator pos:start="131:37" pos:end="131:37">!</operator><call pos:start="131:38" pos:end="131:64"><name pos:start="131:38" pos:end="131:43">strcmp</name><argument_list pos:start="131:44" pos:end="131:64">(<argument pos:start="131:45" pos:end="131:55"><expr pos:start="131:45" pos:end="131:55"><name pos:start="131:45" pos:end="131:55"><name pos:start="131:45" pos:end="131:50">digest</name><operator pos:start="131:51" pos:end="131:52">-&gt;</operator><name pos:start="131:53" pos:end="131:55">qop</name></name></expr></argument>, <argument pos:start="131:58" pos:end="131:63"><expr pos:start="131:58" pos:end="131:63"><literal type="string" pos:start="131:58" pos:end="131:63">"auth"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:67" pos:end="133:5">{<block_content>

    </block_content>}</block></if> <if type="elseif" pos:start="133:7" pos:end="139:5">else if <condition pos:start="133:15" pos:end="133:48">(<expr pos:start="133:16" pos:end="133:47"><operator pos:start="133:16" pos:end="133:16">!</operator><call pos:start="133:17" pos:end="133:47"><name pos:start="133:17" pos:end="133:22">strcmp</name><argument_list pos:start="133:23" pos:end="133:47">(<argument pos:start="133:24" pos:end="133:34"><expr pos:start="133:24" pos:end="133:34"><name pos:start="133:24" pos:end="133:34"><name pos:start="133:24" pos:end="133:29">digest</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:34">qop</name></name></expr></argument>, <argument pos:start="133:37" pos:end="133:46"><expr pos:start="133:37" pos:end="133:46"><literal type="string" pos:start="133:37" pos:end="133:46">"auth-int"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:50" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:20">

        <comment type="block" pos:start="135:9" pos:end="135:40">/* qop=auth-int not supported */</comment>

        <return pos:start="137:9" pos:end="137:20">return <expr pos:start="137:16" pos:end="137:19"><name pos:start="137:16" pos:end="137:19">NULL</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="139:7" pos:end="145:5">else <block pos:start="139:12" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:20">

        <comment type="block" pos:start="141:9" pos:end="141:36">/* Unsupported qop value. */</comment>

        <return pos:start="143:9" pos:end="143:20">return <expr pos:start="143:16" pos:end="143:19"><name pos:start="143:16" pos:end="143:19">NULL</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="155:31"><expr pos:start="149:5" pos:end="155:30"><name pos:start="149:5" pos:end="149:7">len</name> <operator pos:start="149:9" pos:end="149:9">=</operator> <call pos:start="149:11" pos:end="149:26"><name pos:start="149:11" pos:end="149:16">strlen</name><argument_list pos:start="149:17" pos:end="149:26">(<argument pos:start="149:18" pos:end="149:25"><expr pos:start="149:18" pos:end="149:25"><name pos:start="149:18" pos:end="149:25">username</name></expr></argument>)</argument_list></call> <operator pos:start="149:28" pos:end="149:28">+</operator> <call pos:start="149:30" pos:end="149:49"><name pos:start="149:30" pos:end="149:35">strlen</name><argument_list pos:start="149:36" pos:end="149:49">(<argument pos:start="149:37" pos:end="149:48"><expr pos:start="149:37" pos:end="149:48"><name pos:start="149:37" pos:end="149:48"><name pos:start="149:37" pos:end="149:41">state</name><operator pos:start="149:42" pos:end="149:43">-&gt;</operator><name pos:start="149:44" pos:end="149:48">realm</name></name></expr></argument>)</argument_list></call> <operator pos:start="149:51" pos:end="149:51">+</operator> <call pos:start="149:53" pos:end="149:73"><name pos:start="149:53" pos:end="149:58">strlen</name><argument_list pos:start="149:59" pos:end="149:73">(<argument pos:start="149:60" pos:end="149:72"><expr pos:start="149:60" pos:end="149:72"><name pos:start="149:60" pos:end="149:72"><name pos:start="149:60" pos:end="149:65">digest</name><operator pos:start="149:66" pos:end="149:67">-&gt;</operator><name pos:start="149:68" pos:end="149:72">nonce</name></name></expr></argument>)</argument_list></call> <operator pos:start="149:75" pos:end="149:75">+</operator>

              <call pos:start="151:15" pos:end="151:25"><name pos:start="151:15" pos:end="151:20">strlen</name><argument_list pos:start="151:21" pos:end="151:25">(<argument pos:start="151:22" pos:end="151:24"><expr pos:start="151:22" pos:end="151:24"><name pos:start="151:22" pos:end="151:24">uri</name></expr></argument>)</argument_list></call> <operator pos:start="151:27" pos:end="151:27">+</operator> <call pos:start="151:29" pos:end="151:44"><name pos:start="151:29" pos:end="151:34">strlen</name><argument_list pos:start="151:35" pos:end="151:44">(<argument pos:start="151:36" pos:end="151:43"><expr pos:start="151:36" pos:end="151:43"><name pos:start="151:36" pos:end="151:43">response</name></expr></argument>)</argument_list></call> <operator pos:start="151:46" pos:end="151:46">+</operator> <call pos:start="151:48" pos:end="151:72"><name pos:start="151:48" pos:end="151:53">strlen</name><argument_list pos:start="151:54" pos:end="151:72">(<argument pos:start="151:55" pos:end="151:71"><expr pos:start="151:55" pos:end="151:71"><name pos:start="151:55" pos:end="151:71"><name pos:start="151:55" pos:end="151:60">digest</name><operator pos:start="151:61" pos:end="151:62">-&gt;</operator><name pos:start="151:63" pos:end="151:71">algorithm</name></name></expr></argument>)</argument_list></call> <operator pos:start="151:74" pos:end="151:74">+</operator>

              <call pos:start="153:15" pos:end="153:36"><name pos:start="153:15" pos:end="153:20">strlen</name><argument_list pos:start="153:21" pos:end="153:36">(<argument pos:start="153:22" pos:end="153:35"><expr pos:start="153:22" pos:end="153:35"><name pos:start="153:22" pos:end="153:35"><name pos:start="153:22" pos:end="153:27">digest</name><operator pos:start="153:28" pos:end="153:29">-&gt;</operator><name pos:start="153:30" pos:end="153:35">opaque</name></name></expr></argument>)</argument_list></call> <operator pos:start="153:38" pos:end="153:38">+</operator> <call pos:start="153:40" pos:end="153:58"><name pos:start="153:40" pos:end="153:45">strlen</name><argument_list pos:start="153:46" pos:end="153:58">(<argument pos:start="153:47" pos:end="153:57"><expr pos:start="153:47" pos:end="153:57"><name pos:start="153:47" pos:end="153:57"><name pos:start="153:47" pos:end="153:52">digest</name><operator pos:start="153:53" pos:end="153:54">-&gt;</operator><name pos:start="153:55" pos:end="153:57">qop</name></name></expr></argument>)</argument_list></call> <operator pos:start="153:60" pos:end="153:60">+</operator> <call pos:start="153:62" pos:end="153:75"><name pos:start="153:62" pos:end="153:67">strlen</name><argument_list pos:start="153:68" pos:end="153:75">(<argument pos:start="153:69" pos:end="153:74"><expr pos:start="153:69" pos:end="153:74"><name pos:start="153:69" pos:end="153:74">cnonce</name></expr></argument>)</argument_list></call> <operator pos:start="153:77" pos:end="153:77">+</operator>

              <call pos:start="155:15" pos:end="155:24"><name pos:start="155:15" pos:end="155:20">strlen</name><argument_list pos:start="155:21" pos:end="155:24">(<argument pos:start="155:22" pos:end="155:23"><expr pos:start="155:22" pos:end="155:23"><name pos:start="155:22" pos:end="155:23">nc</name></expr></argument>)</argument_list></call> <operator pos:start="155:26" pos:end="155:26">+</operator> <literal type="number" pos:start="155:28" pos:end="155:30">150</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:29"><expr pos:start="159:5" pos:end="159:28"><name pos:start="159:5" pos:end="159:11">authstr</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <call pos:start="159:15" pos:end="159:28"><name pos:start="159:15" pos:end="159:23">av_malloc</name><argument_list pos:start="159:24" pos:end="159:28">(<argument pos:start="159:25" pos:end="159:27"><expr pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:27">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="161:5" pos:end="163:20"><if pos:start="161:5" pos:end="163:20">if <condition pos:start="161:8" pos:end="161:17">(<expr pos:start="161:9" pos:end="161:16"><operator pos:start="161:9" pos:end="161:9">!</operator><name pos:start="161:10" pos:end="161:16">authstr</name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:20"><block_content pos:start="163:9" pos:end="163:20">

        <return pos:start="163:9" pos:end="163:20">return <expr pos:start="163:16" pos:end="163:19"><name pos:start="163:16" pos:end="163:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:53"><expr pos:start="165:5" pos:end="165:52"><call pos:start="165:5" pos:end="165:52"><name pos:start="165:5" pos:end="165:12">snprintf</name><argument_list pos:start="165:13" pos:end="165:52">(<argument pos:start="165:14" pos:end="165:20"><expr pos:start="165:14" pos:end="165:20"><name pos:start="165:14" pos:end="165:20">authstr</name></expr></argument>, <argument pos:start="165:23" pos:end="165:25"><expr pos:start="165:23" pos:end="165:25"><name pos:start="165:23" pos:end="165:25">len</name></expr></argument>, <argument pos:start="165:28" pos:end="165:51"><expr pos:start="165:28" pos:end="165:51"><literal type="string" pos:start="165:28" pos:end="165:51">"Authorization: Digest "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="169:5" pos:end="169:51">/* TODO: Escape the quoted strings properly. */</comment>

    <expr_stmt pos:start="171:5" pos:end="171:61"><expr pos:start="171:5" pos:end="171:60"><call pos:start="171:5" pos:end="171:60"><name pos:start="171:5" pos:end="171:15">av_strlcatf</name><argument_list pos:start="171:16" pos:end="171:60">(<argument pos:start="171:17" pos:end="171:23"><expr pos:start="171:17" pos:end="171:23"><name pos:start="171:17" pos:end="171:23">authstr</name></expr></argument>, <argument pos:start="171:26" pos:end="171:28"><expr pos:start="171:26" pos:end="171:28"><name pos:start="171:26" pos:end="171:28">len</name></expr></argument>, <argument pos:start="171:31" pos:end="171:47"><expr pos:start="171:31" pos:end="171:47"><literal type="string" pos:start="171:31" pos:end="171:47">"username=\"%s\""</literal></expr></argument>,   <argument pos:start="171:52" pos:end="171:59"><expr pos:start="171:52" pos:end="171:59"><name pos:start="171:52" pos:end="171:59">username</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:65"><expr pos:start="173:5" pos:end="173:64"><call pos:start="173:5" pos:end="173:64"><name pos:start="173:5" pos:end="173:15">av_strlcatf</name><argument_list pos:start="173:16" pos:end="173:64">(<argument pos:start="173:17" pos:end="173:23"><expr pos:start="173:17" pos:end="173:23"><name pos:start="173:17" pos:end="173:23">authstr</name></expr></argument>, <argument pos:start="173:26" pos:end="173:28"><expr pos:start="173:26" pos:end="173:28"><name pos:start="173:26" pos:end="173:28">len</name></expr></argument>, <argument pos:start="173:31" pos:end="173:45"><expr pos:start="173:31" pos:end="173:45"><literal type="string" pos:start="173:31" pos:end="173:45">",realm=\"%s\""</literal></expr></argument>,     <argument pos:start="173:52" pos:end="173:63"><expr pos:start="173:52" pos:end="173:63"><name pos:start="173:52" pos:end="173:63"><name pos:start="173:52" pos:end="173:56">state</name><operator pos:start="173:57" pos:end="173:58">-&gt;</operator><name pos:start="173:59" pos:end="173:63">realm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:66"><expr pos:start="175:5" pos:end="175:65"><call pos:start="175:5" pos:end="175:65"><name pos:start="175:5" pos:end="175:15">av_strlcatf</name><argument_list pos:start="175:16" pos:end="175:65">(<argument pos:start="175:17" pos:end="175:23"><expr pos:start="175:17" pos:end="175:23"><name pos:start="175:17" pos:end="175:23">authstr</name></expr></argument>, <argument pos:start="175:26" pos:end="175:28"><expr pos:start="175:26" pos:end="175:28"><name pos:start="175:26" pos:end="175:28">len</name></expr></argument>, <argument pos:start="175:31" pos:end="175:45"><expr pos:start="175:31" pos:end="175:45"><literal type="string" pos:start="175:31" pos:end="175:45">",nonce=\"%s\""</literal></expr></argument>,     <argument pos:start="175:52" pos:end="175:64"><expr pos:start="175:52" pos:end="175:64"><name pos:start="175:52" pos:end="175:64"><name pos:start="175:52" pos:end="175:57">digest</name><operator pos:start="175:58" pos:end="175:59">-&gt;</operator><name pos:start="175:60" pos:end="175:64">nonce</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:56"><expr pos:start="177:5" pos:end="177:55"><call pos:start="177:5" pos:end="177:55"><name pos:start="177:5" pos:end="177:15">av_strlcatf</name><argument_list pos:start="177:16" pos:end="177:55">(<argument pos:start="177:17" pos:end="177:23"><expr pos:start="177:17" pos:end="177:23"><name pos:start="177:17" pos:end="177:23">authstr</name></expr></argument>, <argument pos:start="177:26" pos:end="177:28"><expr pos:start="177:26" pos:end="177:28"><name pos:start="177:26" pos:end="177:28">len</name></expr></argument>, <argument pos:start="177:31" pos:end="177:43"><expr pos:start="177:31" pos:end="177:43"><literal type="string" pos:start="177:31" pos:end="177:43">",uri=\"%s\""</literal></expr></argument>,       <argument pos:start="177:52" pos:end="177:54"><expr pos:start="177:52" pos:end="177:54"><name pos:start="177:52" pos:end="177:54">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:61"><expr pos:start="179:5" pos:end="179:60"><call pos:start="179:5" pos:end="179:60"><name pos:start="179:5" pos:end="179:15">av_strlcatf</name><argument_list pos:start="179:16" pos:end="179:60">(<argument pos:start="179:17" pos:end="179:23"><expr pos:start="179:17" pos:end="179:23"><name pos:start="179:17" pos:end="179:23">authstr</name></expr></argument>, <argument pos:start="179:26" pos:end="179:28"><expr pos:start="179:26" pos:end="179:28"><name pos:start="179:26" pos:end="179:28">len</name></expr></argument>, <argument pos:start="179:31" pos:end="179:48"><expr pos:start="179:31" pos:end="179:48"><literal type="string" pos:start="179:31" pos:end="179:48">",response=\"%s\""</literal></expr></argument>,  <argument pos:start="179:52" pos:end="179:59"><expr pos:start="179:52" pos:end="179:59"><name pos:start="179:52" pos:end="179:59">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="183:71"><if pos:start="181:5" pos:end="183:71">if <condition pos:start="181:8" pos:end="181:29">(<expr pos:start="181:9" pos:end="181:28"><name pos:start="181:9" pos:end="181:28"><name pos:start="181:9" pos:end="181:14">digest</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:25">algorithm</name><index pos:start="181:26" pos:end="181:28">[<expr pos:start="181:27" pos:end="181:27"><literal type="number" pos:start="181:27" pos:end="181:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="183:9" pos:end="183:71"><block_content pos:start="183:9" pos:end="183:71">

        <expr_stmt pos:start="183:9" pos:end="183:71"><expr pos:start="183:9" pos:end="183:70"><call pos:start="183:9" pos:end="183:70"><name pos:start="183:9" pos:end="183:19">av_strlcatf</name><argument_list pos:start="183:20" pos:end="183:70">(<argument pos:start="183:21" pos:end="183:27"><expr pos:start="183:21" pos:end="183:27"><name pos:start="183:21" pos:end="183:27">authstr</name></expr></argument>, <argument pos:start="183:30" pos:end="183:32"><expr pos:start="183:30" pos:end="183:32"><name pos:start="183:30" pos:end="183:32">len</name></expr></argument>, <argument pos:start="183:35" pos:end="183:49"><expr pos:start="183:35" pos:end="183:49"><literal type="string" pos:start="183:35" pos:end="183:49">",algorithm=%s"</literal></expr></argument>,  <argument pos:start="183:53" pos:end="183:69"><expr pos:start="183:53" pos:end="183:69"><name pos:start="183:53" pos:end="183:69"><name pos:start="183:53" pos:end="183:58">digest</name><operator pos:start="183:59" pos:end="183:60">-&gt;</operator><name pos:start="183:61" pos:end="183:69">algorithm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="185:5" pos:end="187:68"><if pos:start="185:5" pos:end="187:68">if <condition pos:start="185:8" pos:end="185:26">(<expr pos:start="185:9" pos:end="185:25"><name pos:start="185:9" pos:end="185:25"><name pos:start="185:9" pos:end="185:14">digest</name><operator pos:start="185:15" pos:end="185:16">-&gt;</operator><name pos:start="185:17" pos:end="185:22">opaque</name><index pos:start="185:23" pos:end="185:25">[<expr pos:start="185:24" pos:end="185:24"><literal type="number" pos:start="185:24" pos:end="185:24">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:68"><block_content pos:start="187:9" pos:end="187:68">

        <expr_stmt pos:start="187:9" pos:end="187:68"><expr pos:start="187:9" pos:end="187:67"><call pos:start="187:9" pos:end="187:67"><name pos:start="187:9" pos:end="187:19">av_strlcatf</name><argument_list pos:start="187:20" pos:end="187:67">(<argument pos:start="187:21" pos:end="187:27"><expr pos:start="187:21" pos:end="187:27"><name pos:start="187:21" pos:end="187:27">authstr</name></expr></argument>, <argument pos:start="187:30" pos:end="187:32"><expr pos:start="187:30" pos:end="187:32"><name pos:start="187:30" pos:end="187:32">len</name></expr></argument>, <argument pos:start="187:35" pos:end="187:50"><expr pos:start="187:35" pos:end="187:50"><literal type="string" pos:start="187:35" pos:end="187:50">",opaque=\"%s\""</literal></expr></argument>, <argument pos:start="187:53" pos:end="187:66"><expr pos:start="187:53" pos:end="187:66"><name pos:start="187:53" pos:end="187:66"><name pos:start="187:53" pos:end="187:58">digest</name><operator pos:start="187:59" pos:end="187:60">-&gt;</operator><name pos:start="187:61" pos:end="187:66">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="189:5" pos:end="197:5"><if pos:start="189:5" pos:end="197:5">if <condition pos:start="189:8" pos:end="189:23">(<expr pos:start="189:9" pos:end="189:22"><name pos:start="189:9" pos:end="189:22"><name pos:start="189:9" pos:end="189:14">digest</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:19">qop</name><index pos:start="189:20" pos:end="189:22">[<expr pos:start="189:21" pos:end="189:21"><literal type="number" pos:start="189:21" pos:end="189:21">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="189:25" pos:end="197:5">{<block_content pos:start="191:9" pos:end="195:56">

        <expr_stmt pos:start="191:9" pos:end="191:65"><expr pos:start="191:9" pos:end="191:64"><call pos:start="191:9" pos:end="191:64"><name pos:start="191:9" pos:end="191:19">av_strlcatf</name><argument_list pos:start="191:20" pos:end="191:64">(<argument pos:start="191:21" pos:end="191:27"><expr pos:start="191:21" pos:end="191:27"><name pos:start="191:21" pos:end="191:27">authstr</name></expr></argument>, <argument pos:start="191:30" pos:end="191:32"><expr pos:start="191:30" pos:end="191:32"><name pos:start="191:30" pos:end="191:32">len</name></expr></argument>, <argument pos:start="191:35" pos:end="191:47"><expr pos:start="191:35" pos:end="191:47"><literal type="string" pos:start="191:35" pos:end="191:47">",qop=\"%s\""</literal></expr></argument>,    <argument pos:start="191:53" pos:end="191:63"><expr pos:start="191:53" pos:end="191:63"><name pos:start="191:53" pos:end="191:63"><name pos:start="191:53" pos:end="191:58">digest</name><operator pos:start="191:59" pos:end="191:60">-&gt;</operator><name pos:start="191:61" pos:end="191:63">qop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:60"><expr pos:start="193:9" pos:end="193:59"><call pos:start="193:9" pos:end="193:59"><name pos:start="193:9" pos:end="193:19">av_strlcatf</name><argument_list pos:start="193:20" pos:end="193:59">(<argument pos:start="193:21" pos:end="193:27"><expr pos:start="193:21" pos:end="193:27"><name pos:start="193:21" pos:end="193:27">authstr</name></expr></argument>, <argument pos:start="193:30" pos:end="193:32"><expr pos:start="193:30" pos:end="193:32"><name pos:start="193:30" pos:end="193:32">len</name></expr></argument>, <argument pos:start="193:35" pos:end="193:50"><expr pos:start="193:35" pos:end="193:50"><literal type="string" pos:start="193:35" pos:end="193:50">",cnonce=\"%s\""</literal></expr></argument>, <argument pos:start="193:53" pos:end="193:58"><expr pos:start="193:53" pos:end="193:58"><name pos:start="193:53" pos:end="193:58">cnonce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:56"><expr pos:start="195:9" pos:end="195:55"><call pos:start="195:9" pos:end="195:55"><name pos:start="195:9" pos:end="195:19">av_strlcatf</name><argument_list pos:start="195:20" pos:end="195:55">(<argument pos:start="195:21" pos:end="195:27"><expr pos:start="195:21" pos:end="195:27"><name pos:start="195:21" pos:end="195:27">authstr</name></expr></argument>, <argument pos:start="195:30" pos:end="195:32"><expr pos:start="195:30" pos:end="195:32"><name pos:start="195:30" pos:end="195:32">len</name></expr></argument>, <argument pos:start="195:35" pos:end="195:42"><expr pos:start="195:35" pos:end="195:42"><literal type="string" pos:start="195:35" pos:end="195:42">",nc=%s"</literal></expr></argument>,         <argument pos:start="195:53" pos:end="195:54"><expr pos:start="195:53" pos:end="195:54"><name pos:start="195:53" pos:end="195:54">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:38"><expr pos:start="201:5" pos:end="201:37"><call pos:start="201:5" pos:end="201:37"><name pos:start="201:5" pos:end="201:15">av_strlcatf</name><argument_list pos:start="201:16" pos:end="201:37">(<argument pos:start="201:17" pos:end="201:23"><expr pos:start="201:17" pos:end="201:23"><name pos:start="201:17" pos:end="201:23">authstr</name></expr></argument>, <argument pos:start="201:26" pos:end="201:28"><expr pos:start="201:26" pos:end="201:28"><name pos:start="201:26" pos:end="201:28">len</name></expr></argument>, <argument pos:start="201:31" pos:end="201:36"><expr pos:start="201:31" pos:end="201:36"><literal type="string" pos:start="201:31" pos:end="201:36">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="205:5" pos:end="205:19">return <expr pos:start="205:12" pos:end="205:18"><name pos:start="205:12" pos:end="205:18">authstr</name></expr>;</return>

</block_content>}</block></function>
</unit>
