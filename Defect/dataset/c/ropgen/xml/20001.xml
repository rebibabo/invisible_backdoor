<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20001.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">msix_handle_mask_update</name><parameter_list pos:start="1:36" pos:end="1:63">(<parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:45">PCIDevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">dev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:62">vector</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:5">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:69">(<expr pos:start="5:9" pos:end="5:68"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:36"><name pos:start="5:10" pos:end="5:23">msix_is_masked</name><argument_list pos:start="5:24" pos:end="5:36">(<argument pos:start="5:25" pos:end="5:27"><expr pos:start="5:25" pos:end="5:27"><name pos:start="5:25" pos:end="5:27">dev</name></expr></argument>, <argument pos:start="5:30" pos:end="5:35"><expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">vector</name></expr></argument>)</argument_list></call> <operator pos:start="5:38" pos:end="5:39">&amp;&amp;</operator> <call pos:start="5:41" pos:end="5:68"><name pos:start="5:41" pos:end="5:55">msix_is_pending</name><argument_list pos:start="5:56" pos:end="5:68">(<argument pos:start="5:57" pos:end="5:59"><expr pos:start="5:57" pos:end="5:59"><name pos:start="5:57" pos:end="5:59">dev</name></expr></argument>, <argument pos:start="5:62" pos:end="5:67"><expr pos:start="5:62" pos:end="5:67"><name pos:start="5:62" pos:end="5:67">vector</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:71" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:33">

        <expr_stmt pos:start="7:9" pos:end="7:38"><expr pos:start="7:9" pos:end="7:37"><call pos:start="7:9" pos:end="7:37"><name pos:start="7:9" pos:end="7:24">msix_clr_pending</name><argument_list pos:start="7:25" pos:end="7:37">(<argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><name pos:start="7:26" pos:end="7:28">dev</name></expr></argument>, <argument pos:start="7:31" pos:end="7:36"><expr pos:start="7:31" pos:end="7:36"><name pos:start="7:31" pos:end="7:36">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:33"><expr pos:start="9:9" pos:end="9:32"><call pos:start="9:9" pos:end="9:32"><name pos:start="9:9" pos:end="9:19">msix_notify</name><argument_list pos:start="9:20" pos:end="9:32">(<argument pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><name pos:start="9:21" pos:end="9:23">dev</name></expr></argument>, <argument pos:start="9:26" pos:end="9:31"><expr pos:start="9:26" pos:end="9:31"><name pos:start="9:26" pos:end="9:31">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
