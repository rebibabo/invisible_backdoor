<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6330.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">AVStream</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:31">add_av_stream1</name><parameter_list pos:start="1:32" pos:end="1:82">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:40">FFStream</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">stream</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:71"><decl pos:start="1:51" pos:end="1:71"><type pos:start="1:51" pos:end="1:71"><name pos:start="1:51" pos:end="1:64">AVCodecContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">codec</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:81"><decl pos:start="1:74" pos:end="1:81"><type pos:start="1:74" pos:end="1:81"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:81">copy</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">fst</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:7">fst</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:38"><name pos:start="9:11" pos:end="9:20">av_mallocz</name><argument_list pos:start="9:21" pos:end="9:38">(<argument pos:start="9:22" pos:end="9:37"><expr pos:start="9:22" pos:end="9:37"><sizeof pos:start="9:22" pos:end="9:37">sizeof<argument_list pos:start="9:28" pos:end="9:37">(<argument pos:start="9:29" pos:end="9:36"><expr pos:start="9:29" pos:end="9:36"><name pos:start="9:29" pos:end="9:36">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:20"><if pos:start="11:5" pos:end="13:20">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">fst</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:20"><block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="41:5"><if pos:start="15:5" pos:end="31:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">copy</name></expr>)</condition> <block pos:start="15:15" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:9">

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">fst</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">codec</name></name><operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:43"><name pos:start="17:21" pos:end="17:41">avcodec_alloc_context</name><argument_list pos:start="17:42" pos:end="17:43">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:58"><expr pos:start="19:9" pos:end="19:57"><call pos:start="19:9" pos:end="19:57"><name pos:start="19:9" pos:end="19:14">memcpy</name><argument_list pos:start="19:15" pos:end="19:57">(<argument pos:start="19:16" pos:end="19:25"><expr pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:18">fst</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:25">codec</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:32"><expr pos:start="19:28" pos:end="19:32"><name pos:start="19:28" pos:end="19:32">codec</name></expr></argument>, <argument pos:start="19:35" pos:end="19:56"><expr pos:start="19:35" pos:end="19:56"><sizeof pos:start="19:35" pos:end="19:56">sizeof<argument_list pos:start="19:41" pos:end="19:56">(<argument pos:start="19:42" pos:end="19:55"><expr pos:start="19:42" pos:end="19:55"><name pos:start="19:42" pos:end="19:55">AVCodecContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:34">(<expr pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:17">codec</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:33">extradata_size</name></name></expr>)</condition> <block pos:start="21:36" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:39">

            <expr_stmt pos:start="23:13" pos:end="23:69"><expr pos:start="23:13" pos:end="23:68"><name pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:15">fst</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">codec</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:33">extradata</name></name> <operator pos:start="23:35" pos:end="23:35">=</operator> <call pos:start="23:37" pos:end="23:68"><name pos:start="23:37" pos:end="23:45">av_malloc</name><argument_list pos:start="23:46" pos:end="23:68">(<argument pos:start="23:47" pos:end="23:67"><expr pos:start="23:47" pos:end="23:67"><name pos:start="23:47" pos:end="23:67"><name pos:start="23:47" pos:end="23:51">codec</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:67">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="27:39"><expr pos:start="25:13" pos:end="27:38"><call pos:start="25:13" pos:end="27:38"><name pos:start="25:13" pos:end="25:18">memcpy</name><argument_list pos:start="25:19" pos:end="27:38">(<argument pos:start="25:20" pos:end="25:40"><expr pos:start="25:20" pos:end="25:40"><name pos:start="25:20" pos:end="25:40"><name pos:start="25:20" pos:end="25:22">fst</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:29">codec</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:40">extradata</name></name></expr></argument>, <argument pos:start="25:43" pos:end="25:58"><expr pos:start="25:43" pos:end="25:58"><name pos:start="25:43" pos:end="25:58"><name pos:start="25:43" pos:end="25:47">codec</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:58">extradata</name></name></expr></argument>,

                <argument pos:start="27:17" pos:end="27:37"><expr pos:start="27:17" pos:end="27:37"><name pos:start="27:17" pos:end="27:37"><name pos:start="27:17" pos:end="27:21">codec</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:37">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="41:5">else <block pos:start="31:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:27">

        <comment type="block" pos:start="33:9" pos:end="37:11">/* live streams must use the actual feed's codec since it may be

         * updated later to carry extradata needed by the streams.

         */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:11">fst</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">codec</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:26">codec</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:7">fst</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:18">priv_data</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:49"><name pos:start="43:22" pos:end="43:31">av_mallocz</name><argument_list pos:start="43:32" pos:end="43:49">(<argument pos:start="43:33" pos:end="43:48"><expr pos:start="43:33" pos:end="43:48"><sizeof pos:start="43:33" pos:end="43:48">sizeof<argument_list pos:start="43:39" pos:end="43:48">(<argument pos:start="43:40" pos:end="43:47"><expr pos:start="43:40" pos:end="43:47"><name pos:start="43:40" pos:end="43:47">FeedData</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:7">fst</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:14">index</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:35"><name pos:start="45:18" pos:end="45:23">stream</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:35">nb_streams</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><call pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:19">av_set_pts_info</name><argument_list pos:start="47:20" pos:end="47:38">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">fst</name></expr></argument>, <argument pos:start="47:26" pos:end="47:27"><expr pos:start="47:26" pos:end="47:27"><literal type="number" pos:start="47:26" pos:end="47:27">33</literal></expr></argument>, <argument pos:start="47:30" pos:end="47:30"><expr pos:start="47:30" pos:end="47:30"><literal type="number" pos:start="47:30" pos:end="47:30">1</literal></expr></argument>, <argument pos:start="47:33" pos:end="47:37"><expr pos:start="47:33" pos:end="47:37"><literal type="number" pos:start="47:33" pos:end="47:37">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:49"><expr pos:start="49:5" pos:end="49:48"><name pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:7">fst</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:28">sample_aspect_ratio</name></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <operator pos:start="49:32" pos:end="49:32">(</operator><name pos:start="49:33" pos:end="49:42">AVRational</name><operator pos:start="49:43" pos:end="49:43">)</operator><block pos:start="49:44" pos:end="49:48">{<expr pos:start="49:45" pos:end="49:45"><literal type="number" pos:start="49:45" pos:end="49:45">0</literal></expr>,<expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">1</literal></expr>}</block></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:48"><expr pos:start="51:5" pos:end="51:47"><name pos:start="51:5" pos:end="51:41"><name pos:start="51:5" pos:end="51:10">stream</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:19">streams</name><index pos:start="51:20" pos:end="51:41">[<expr pos:start="51:21" pos:end="51:40"><name pos:start="51:21" pos:end="51:38"><name pos:start="51:21" pos:end="51:26">stream</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:38">nb_streams</name></name><operator pos:start="51:39" pos:end="51:40">++</operator></expr>]</index></name> <operator pos:start="51:43" pos:end="51:43">=</operator> <name pos:start="51:45" pos:end="51:47">fst</name></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">fst</name></expr>;</return>

</block_content>}</block></function>
</unit>
