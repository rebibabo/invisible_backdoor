<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12507.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">qcow2_check</name><parameter_list pos:start="1:23" pos:end="3:41">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:39">BlockDriverState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">bs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:68"><decl pos:start="1:46" pos:end="1:68"><type pos:start="1:46" pos:end="1:68"><name pos:start="1:46" pos:end="1:60">BdrvCheckResult</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">result</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:40"><decl pos:start="3:24" pos:end="3:40"><type pos:start="3:24" pos:end="3:40"><name pos:start="3:24" pos:end="3:36">BdrvCheckMode</name></type> <name pos:start="3:38" pos:end="3:40">fix</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:15">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:52">= <expr pos:start="7:15" pos:end="7:52"><call pos:start="7:15" pos:end="7:52"><name pos:start="7:15" pos:end="7:35">qcow2_check_refcounts</name><argument_list pos:start="7:36" pos:end="7:52">(<argument pos:start="7:37" pos:end="7:38"><expr pos:start="7:37" pos:end="7:38"><name pos:start="7:37" pos:end="7:38">bs</name></expr></argument>, <argument pos:start="7:41" pos:end="7:46"><expr pos:start="7:41" pos:end="7:46"><name pos:start="7:41" pos:end="7:46">result</name></expr></argument>, <argument pos:start="7:49" pos:end="7:51"><expr pos:start="7:49" pos:end="7:51"><name pos:start="7:49" pos:end="7:51">fix</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:11">ret</name> <operator pos:start="9:13" pos:end="9:13">&lt;</operator> <literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr>)</condition> <block pos:start="9:18" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:19">

        <return pos:start="11:9" pos:end="11:19">return <expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:69">(<expr pos:start="17:9" pos:end="17:68"><name pos:start="17:9" pos:end="17:11">fix</name> <operator pos:start="17:13" pos:end="17:14">&amp;&amp;</operator> <name pos:start="17:16" pos:end="17:35"><name pos:start="17:16" pos:end="17:21">result</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:35">check_errors</name></name> <operator pos:start="17:37" pos:end="17:38">==</operator> <literal type="number" pos:start="17:40" pos:end="17:40">0</literal> <operator pos:start="17:42" pos:end="17:43">&amp;&amp;</operator> <name pos:start="17:45" pos:end="17:63"><name pos:start="17:45" pos:end="17:50">result</name><operator pos:start="17:51" pos:end="17:52">-&gt;</operator><name pos:start="17:53" pos:end="17:63">corruptions</name></name> <operator pos:start="17:65" pos:end="17:66">==</operator> <literal type="number" pos:start="17:68" pos:end="17:68">0</literal></expr>)</condition> <block pos:start="17:71" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:36">

        <return pos:start="19:9" pos:end="19:36">return <expr pos:start="19:16" pos:end="19:35"><call pos:start="19:16" pos:end="19:35"><name pos:start="19:16" pos:end="19:31">qcow2_mark_clean</name><argument_list pos:start="19:32" pos:end="19:35">(<argument pos:start="19:33" pos:end="19:34"><expr pos:start="19:33" pos:end="19:34"><name pos:start="19:33" pos:end="19:34">bs</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="23:5" pos:end="23:15">return <expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
