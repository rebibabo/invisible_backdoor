<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18178.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">decode_nal_unit</name><parameter_list pos:start="1:27" pos:end="1:74">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">HEVCContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">nal</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:73">length</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="107:13">{<block_content pos:start="3:5" pos:end="107:13">
    <decl_stmt pos:start="3:5" pos:end="3:38"><decl pos:start="3:5" pos:end="3:37"><type pos:start="3:5" pos:end="3:22"><name pos:start="3:5" pos:end="3:20">HEVCLocalContext</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:24">lc</name> <init pos:start="3:26" pos:end="3:37">= <expr pos:start="3:28" pos:end="3:37"><operator pos:start="3:28" pos:end="3:28">&amp;</operator><name pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:29">s</name><operator pos:start="3:30" pos:end="3:31">-&gt;</operator><name pos:start="3:32" pos:end="3:37">HEVClc</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:35"><decl pos:start="4:5" pos:end="4:34"><type pos:start="4:5" pos:end="4:19"><name pos:start="4:5" pos:end="4:17">GetBitContext</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:21">gb</name>    <init pos:start="4:26" pos:end="4:34">= <expr pos:start="4:28" pos:end="4:34"><operator pos:start="4:28" pos:end="4:28">&amp;</operator><name pos:start="4:29" pos:end="4:34"><name pos:start="4:29" pos:end="4:30">lc</name><operator pos:start="4:31" pos:end="4:32">-&gt;</operator><name pos:start="4:33" pos:end="4:34">gb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">ctb_addr_ts</name></decl>, <decl pos:start="5:22" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:24">ret</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:42"><expr pos:start="6:5" pos:end="6:41"><name pos:start="6:5" pos:end="6:7">ret</name> <operator pos:start="6:9" pos:end="6:9">=</operator> <call pos:start="6:11" pos:end="6:41"><name pos:start="6:11" pos:end="6:24">init_get_bits8</name><argument_list pos:start="6:25" pos:end="6:41">(<argument pos:start="6:26" pos:end="6:27"><expr pos:start="6:26" pos:end="6:27"><name pos:start="6:26" pos:end="6:27">gb</name></expr></argument>, <argument pos:start="6:30" pos:end="6:32"><expr pos:start="6:30" pos:end="6:32"><name pos:start="6:30" pos:end="6:32">nal</name></expr></argument>, <argument pos:start="6:35" pos:end="6:40"><expr pos:start="6:35" pos:end="6:40"><name pos:start="6:35" pos:end="6:40">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="8:19"><if pos:start="7:5" pos:end="8:19">if <condition pos:start="7:8" pos:end="7:16">(<expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:11">ret</name> <operator pos:start="7:13" pos:end="7:13">&lt;</operator> <literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:19"><block_content pos:start="8:9" pos:end="8:19">
        <return pos:start="8:9" pos:end="8:19">return <expr pos:start="8:16" pos:end="8:18"><name pos:start="8:16" pos:end="8:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:26"><expr pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:25"><name pos:start="9:11" pos:end="9:22">hls_nal_unit</name><argument_list pos:start="9:23" pos:end="9:25">(<argument pos:start="9:24" pos:end="9:24"><expr pos:start="9:24" pos:end="9:24"><name pos:start="9:24" pos:end="9:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="17:17"><if pos:start="10:5" pos:end="16:5">if <condition pos:start="10:8" pos:end="10:16">(<expr pos:start="10:9" pos:end="10:15"><name pos:start="10:9" pos:end="10:11">ret</name> <operator pos:start="10:13" pos:end="10:13">&lt;</operator> <literal type="number" pos:start="10:15" pos:end="10:15">0</literal></expr>)</condition> <block pos:start="10:18" pos:end="16:5">{<block_content pos:start="11:9" pos:end="15:17">
        <expr_stmt pos:start="11:9" pos:end="12:33"><expr pos:start="11:9" pos:end="12:32"><call pos:start="11:9" pos:end="12:32"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="12:32">(<argument pos:start="11:16" pos:end="11:23"><expr pos:start="11:16" pos:end="11:23"><name pos:start="11:16" pos:end="11:23"><name pos:start="11:16" pos:end="11:16">s</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:23">avctx</name></name></expr></argument>, <argument pos:start="11:26" pos:end="11:37"><expr pos:start="11:26" pos:end="11:37"><name pos:start="11:26" pos:end="11:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:40" pos:end="11:73"><expr pos:start="11:40" pos:end="11:73"><literal type="string" pos:start="11:40" pos:end="11:73">"Invalid NAL unit %d, skipping.\n"</literal></expr></argument>,
               <argument pos:start="12:16" pos:end="12:31"><expr pos:start="12:16" pos:end="12:31"><name pos:start="12:16" pos:end="12:31"><name pos:start="12:16" pos:end="12:16">s</name><operator pos:start="12:17" pos:end="12:18">-&gt;</operator><name pos:start="12:19" pos:end="12:31">nal_unit_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="13:9" pos:end="14:23"><if pos:start="13:9" pos:end="14:23">if <condition pos:start="13:12" pos:end="13:54">(<expr pos:start="13:13" pos:end="13:53"><name pos:start="13:13" pos:end="13:37"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">avctx</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:37">err_recognition</name></name> <operator pos:start="13:39" pos:end="13:39">&amp;</operator> <name pos:start="13:41" pos:end="13:53">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="14:13" pos:end="14:23"><block_content pos:start="14:13" pos:end="14:23">
            <return pos:start="14:13" pos:end="14:23">return <expr pos:start="14:20" pos:end="14:22"><name pos:start="14:20" pos:end="14:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>
    </block_content>}</block></if> <if type="elseif" pos:start="16:7" pos:end="17:17">else if <condition pos:start="16:15" pos:end="16:20">(<expr pos:start="16:16" pos:end="16:19"><operator pos:start="16:16" pos:end="16:16">!</operator><name pos:start="16:17" pos:end="16:19">ret</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">
        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <switch pos:start="18:5" pos:end="107:13">switch <condition pos:start="18:12" pos:end="18:29">(<expr pos:start="18:13" pos:end="18:28"><name pos:start="18:13" pos:end="18:28"><name pos:start="18:13" pos:end="18:13">s</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:28">nal_unit_type</name></name></expr>)</condition> <block pos:start="18:31" pos:end="107:13">{<block_content pos:start="19:5" pos:end="107:13">
    <case pos:start="19:5" pos:end="19:17">case <expr pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:16">NAL_VPS</name></expr>:</case>
        <expr_stmt pos:start="20:9" pos:end="20:40"><expr pos:start="20:9" pos:end="20:39"><name pos:start="20:9" pos:end="20:11">ret</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <call pos:start="20:15" pos:end="20:39"><name pos:start="20:15" pos:end="20:36">ff_hevc_decode_nal_vps</name><argument_list pos:start="20:37" pos:end="20:39">(<argument pos:start="20:38" pos:end="20:38"><expr pos:start="20:38" pos:end="20:38"><name pos:start="20:38" pos:end="20:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="21:9" pos:end="22:23"><if pos:start="21:9" pos:end="22:23">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition><block type="pseudo" pos:start="22:13" pos:end="22:23"><block_content pos:start="22:13" pos:end="22:23">
            <return pos:start="22:13" pos:end="22:23">return <expr pos:start="22:20" pos:end="22:22"><name pos:start="22:20" pos:end="22:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <break pos:start="23:9" pos:end="23:14">break;</break>
    <case pos:start="24:5" pos:end="24:17">case <expr pos:start="24:10" pos:end="24:16"><name pos:start="24:10" pos:end="24:16">NAL_SPS</name></expr>:</case>
        <expr_stmt pos:start="25:9" pos:end="25:40"><expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:39"><name pos:start="25:15" pos:end="25:36">ff_hevc_decode_nal_sps</name><argument_list pos:start="25:37" pos:end="25:39">(<argument pos:start="25:38" pos:end="25:38"><expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="26:9" pos:end="27:23"><if pos:start="26:9" pos:end="27:23">if <condition pos:start="26:12" pos:end="26:20">(<expr pos:start="26:13" pos:end="26:19"><name pos:start="26:13" pos:end="26:15">ret</name> <operator pos:start="26:17" pos:end="26:17">&lt;</operator> <literal type="number" pos:start="26:19" pos:end="26:19">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:23"><block_content pos:start="27:13" pos:end="27:23">
            <return pos:start="27:13" pos:end="27:23">return <expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <break pos:start="28:9" pos:end="28:14">break;</break>
    <case pos:start="29:5" pos:end="29:17">case <expr pos:start="29:10" pos:end="29:16"><name pos:start="29:10" pos:end="29:16">NAL_PPS</name></expr>:</case>
        <expr_stmt pos:start="30:9" pos:end="30:40"><expr pos:start="30:9" pos:end="30:39"><name pos:start="30:9" pos:end="30:11">ret</name> <operator pos:start="30:13" pos:end="30:13">=</operator> <call pos:start="30:15" pos:end="30:39"><name pos:start="30:15" pos:end="30:36">ff_hevc_decode_nal_pps</name><argument_list pos:start="30:37" pos:end="30:39">(<argument pos:start="30:38" pos:end="30:38"><expr pos:start="30:38" pos:end="30:38"><name pos:start="30:38" pos:end="30:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="31:9" pos:end="32:23"><if pos:start="31:9" pos:end="32:23">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="32:13" pos:end="32:23"><block_content pos:start="32:13" pos:end="32:23">
            <return pos:start="32:13" pos:end="32:23">return <expr pos:start="32:20" pos:end="32:22"><name pos:start="32:20" pos:end="32:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <break pos:start="33:9" pos:end="33:14">break;</break>
    <case pos:start="34:5" pos:end="34:24">case <expr pos:start="34:10" pos:end="34:23"><name pos:start="34:10" pos:end="34:23">NAL_SEI_PREFIX</name></expr>:</case>
    <case pos:start="35:5" pos:end="35:24">case <expr pos:start="35:10" pos:end="35:23"><name pos:start="35:10" pos:end="35:23">NAL_SEI_SUFFIX</name></expr>:</case>
        <expr_stmt pos:start="36:9" pos:end="36:40"><expr pos:start="36:9" pos:end="36:39"><name pos:start="36:9" pos:end="36:11">ret</name> <operator pos:start="36:13" pos:end="36:13">=</operator> <call pos:start="36:15" pos:end="36:39"><name pos:start="36:15" pos:end="36:36">ff_hevc_decode_nal_sei</name><argument_list pos:start="36:37" pos:end="36:39">(<argument pos:start="36:38" pos:end="36:38"><expr pos:start="36:38" pos:end="36:38"><name pos:start="36:38" pos:end="36:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="37:9" pos:end="38:23"><if pos:start="37:9" pos:end="38:23">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition><block type="pseudo" pos:start="38:13" pos:end="38:23"><block_content pos:start="38:13" pos:end="38:23">
            <return pos:start="38:13" pos:end="38:23">return <expr pos:start="38:20" pos:end="38:22"><name pos:start="38:20" pos:end="38:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <break pos:start="39:9" pos:end="39:14">break;</break>
    <case pos:start="40:5" pos:end="40:21">case <expr pos:start="40:10" pos:end="40:20"><name pos:start="40:10" pos:end="40:20">NAL_TRAIL_R</name></expr>:</case>
    <case pos:start="41:5" pos:end="41:21">case <expr pos:start="41:10" pos:end="41:20"><name pos:start="41:10" pos:end="41:20">NAL_TRAIL_N</name></expr>:</case>
    <case pos:start="42:5" pos:end="42:19">case <expr pos:start="42:10" pos:end="42:18"><name pos:start="42:10" pos:end="42:18">NAL_TSA_N</name></expr>:</case>
    <case pos:start="43:5" pos:end="43:19">case <expr pos:start="43:10" pos:end="43:18"><name pos:start="43:10" pos:end="43:18">NAL_TSA_R</name></expr>:</case>
    <case pos:start="44:5" pos:end="44:20">case <expr pos:start="44:10" pos:end="44:19"><name pos:start="44:10" pos:end="44:19">NAL_STSA_N</name></expr>:</case>
    <case pos:start="45:5" pos:end="45:20">case <expr pos:start="45:10" pos:end="45:19"><name pos:start="45:10" pos:end="45:19">NAL_STSA_R</name></expr>:</case>
    <case pos:start="46:5" pos:end="46:22">case <expr pos:start="46:10" pos:end="46:21"><name pos:start="46:10" pos:end="46:21">NAL_BLA_W_LP</name></expr>:</case>
    <case pos:start="47:5" pos:end="47:24">case <expr pos:start="47:10" pos:end="47:23"><name pos:start="47:10" pos:end="47:23">NAL_BLA_W_RADL</name></expr>:</case>
    <case pos:start="48:5" pos:end="48:22">case <expr pos:start="48:10" pos:end="48:21"><name pos:start="48:10" pos:end="48:21">NAL_BLA_N_LP</name></expr>:</case>
    <case pos:start="49:5" pos:end="49:24">case <expr pos:start="49:10" pos:end="49:23"><name pos:start="49:10" pos:end="49:23">NAL_IDR_W_RADL</name></expr>:</case>
    <case pos:start="50:5" pos:end="50:22">case <expr pos:start="50:10" pos:end="50:21"><name pos:start="50:10" pos:end="50:21">NAL_IDR_N_LP</name></expr>:</case>
    <case pos:start="51:5" pos:end="51:21">case <expr pos:start="51:10" pos:end="51:20"><name pos:start="51:10" pos:end="51:20">NAL_CRA_NUT</name></expr>:</case>
    <case pos:start="52:5" pos:end="52:20">case <expr pos:start="52:10" pos:end="52:19"><name pos:start="52:10" pos:end="52:19">NAL_RADL_N</name></expr>:</case>
    <case pos:start="53:5" pos:end="53:20">case <expr pos:start="53:10" pos:end="53:19"><name pos:start="53:10" pos:end="53:19">NAL_RADL_R</name></expr>:</case>
    <case pos:start="54:5" pos:end="54:20">case <expr pos:start="54:10" pos:end="54:19"><name pos:start="54:10" pos:end="54:19">NAL_RASL_N</name></expr>:</case>
    <case pos:start="55:5" pos:end="55:20">case <expr pos:start="55:10" pos:end="55:19"><name pos:start="55:10" pos:end="55:19">NAL_RASL_R</name></expr>:</case>
        <expr_stmt pos:start="56:9" pos:end="56:34"><expr pos:start="56:9" pos:end="56:33"><name pos:start="56:9" pos:end="56:11">ret</name> <operator pos:start="56:13" pos:end="56:13">=</operator> <call pos:start="56:15" pos:end="56:33"><name pos:start="56:15" pos:end="56:30">hls_slice_header</name><argument_list pos:start="56:31" pos:end="56:33">(<argument pos:start="56:32" pos:end="56:32"><expr pos:start="56:32" pos:end="56:32"><name pos:start="56:32" pos:end="56:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="57:9" pos:end="58:23"><if pos:start="57:9" pos:end="58:23">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">&lt;</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>)</condition><block type="pseudo" pos:start="58:13" pos:end="58:23"><block_content pos:start="58:13" pos:end="58:23">
            <return pos:start="58:13" pos:end="58:23">return <expr pos:start="58:20" pos:end="58:22"><name pos:start="58:20" pos:end="58:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="59:9" pos:end="107:13"><if pos:start="59:9" pos:end="107:13">if <condition pos:start="59:12" pos:end="59:33">(<expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:21">max_ra</name></name> <operator pos:start="59:23" pos:end="59:24">==</operator> <name pos:start="59:26" pos:end="59:32">INT_MAX</name></expr>)</condition> <block pos:start="59:35" pos:end="107:13">{<block_content pos:start="60:13" pos:end="107:13">
            <if_stmt pos:start="60:13" pos:end="107:13"><if pos:start="60:13" pos:end="62:13">if <condition pos:start="60:16" pos:end="60:61">(<expr pos:start="60:17" pos:end="60:60"><name pos:start="60:17" pos:end="60:32"><name pos:start="60:17" pos:end="60:17">s</name><operator pos:start="60:18" pos:end="60:19">-&gt;</operator><name pos:start="60:20" pos:end="60:32">nal_unit_type</name></name> <operator pos:start="60:34" pos:end="60:35">==</operator> <name pos:start="60:37" pos:end="60:47">NAL_CRA_NUT</name> <operator pos:start="60:49" pos:end="60:50">||</operator> <call pos:start="60:52" pos:end="60:60"><name pos:start="60:52" pos:end="60:57">IS_BLA</name><argument_list pos:start="60:58" pos:end="60:60">(<argument pos:start="60:59" pos:end="60:59"><expr pos:start="60:59" pos:end="60:59"><name pos:start="60:59" pos:end="60:59">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="60:63" pos:end="62:13">{<block_content pos:start="61:17" pos:end="61:35">
                <expr_stmt pos:start="61:17" pos:end="61:35"><expr pos:start="61:17" pos:end="61:34"><name pos:start="61:17" pos:end="61:25"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:25">max_ra</name></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <name pos:start="61:29" pos:end="61:34"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:34">poc</name></name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="62:15" pos:end="107:13">else <block pos:start="62:20" pos:end="107:13">{<block_content pos:start="63:17" pos:end="107:13">
                <if_stmt pos:start="63:17" pos:end="64:40"><if pos:start="63:17" pos:end="64:40">if <condition pos:start="63:20" pos:end="63:30">(<expr pos:start="63:21" pos:end="63:29"><call pos:start="63:21" pos:end="63:29"><name pos:start="63:21" pos:end="63:26">IS_IDR</name><argument_list pos:start="63:27" pos:end="63:29">(<argument pos:start="63:28" pos:end="63:28"><expr pos:start="63:28" pos:end="63:28"><name pos:start="63:28" pos:end="63:28">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="64:21" pos:end="64:40"><block_content pos:start="64:21" pos:end="64:40">
                    <expr_stmt pos:start="64:21" pos:end="64:40"><expr pos:start="64:21" pos:end="64:39"><name pos:start="64:21" pos:end="64:29"><name pos:start="64:21" pos:end="64:21">s</name><operator pos:start="64:22" pos:end="64:23">-&gt;</operator><name pos:start="64:24" pos:end="64:29">max_ra</name></name> <operator pos:start="64:31" pos:end="64:31">=</operator> <name pos:start="64:33" pos:end="64:39">INT_MIN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="65:9" pos:end="107:13"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="66:32">(<expr pos:start="65:13" pos:end="66:31"><operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:29"><name pos:start="65:14" pos:end="65:14">s</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:29">nal_unit_type</name></name> <operator pos:start="65:31" pos:end="65:32">==</operator> <name pos:start="65:34" pos:end="65:43">NAL_RASL_R</name> <operator pos:start="65:45" pos:end="65:46">||</operator> <name pos:start="65:48" pos:end="65:63"><name pos:start="65:48" pos:end="65:48">s</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:63">nal_unit_type</name></name> <operator pos:start="65:65" pos:end="65:66">==</operator> <name pos:start="65:68" pos:end="65:77">NAL_RASL_N</name><operator pos:start="65:78" pos:end="65:78">)</operator> <operator pos:start="65:80" pos:end="65:81">&amp;&amp;</operator>
            <name pos:start="66:13" pos:end="66:18"><name pos:start="66:13" pos:end="66:13">s</name><operator pos:start="66:14" pos:end="66:15">-&gt;</operator><name pos:start="66:16" pos:end="66:18">poc</name></name> <operator pos:start="66:20" pos:end="66:21">&lt;=</operator> <name pos:start="66:23" pos:end="66:31"><name pos:start="66:23" pos:end="66:23">s</name><operator pos:start="66:24" pos:end="66:25">-&gt;</operator><name pos:start="66:26" pos:end="66:31">max_ra</name></name></expr>)</condition> <block pos:start="66:34" pos:end="69:9">{<block_content pos:start="67:13" pos:end="68:18">
            <expr_stmt pos:start="67:13" pos:end="67:30"><expr pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:25">is_decoded</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <literal type="number" pos:start="67:29" pos:end="67:29">0</literal></expr>;</expr_stmt>
            <break pos:start="68:13" pos:end="68:18">break;</break>
        </block_content>}</block></if> <else pos:start="69:11" pos:end="107:13">else <block pos:start="69:16" pos:end="107:13">{<block_content pos:start="70:13" pos:end="107:13">
            <if_stmt pos:start="70:13" pos:end="71:36"><if pos:start="70:13" pos:end="71:36">if <condition pos:start="70:16" pos:end="70:69">(<expr pos:start="70:17" pos:end="70:68"><name pos:start="70:17" pos:end="70:32"><name pos:start="70:17" pos:end="70:17">s</name><operator pos:start="70:18" pos:end="70:19">-&gt;</operator><name pos:start="70:20" pos:end="70:32">nal_unit_type</name></name> <operator pos:start="70:34" pos:end="70:35">==</operator> <name pos:start="70:37" pos:end="70:46">NAL_RASL_R</name> <operator pos:start="70:48" pos:end="70:49">&amp;&amp;</operator> <name pos:start="70:51" pos:end="70:56"><name pos:start="70:51" pos:end="70:51">s</name><operator pos:start="70:52" pos:end="70:53">-&gt;</operator><name pos:start="70:54" pos:end="70:56">poc</name></name> <operator pos:start="70:58" pos:end="70:58">&gt;</operator> <name pos:start="70:60" pos:end="70:68"><name pos:start="70:60" pos:end="70:60">s</name><operator pos:start="70:61" pos:end="70:62">-&gt;</operator><name pos:start="70:63" pos:end="70:68">max_ra</name></name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:36"><block_content pos:start="71:17" pos:end="71:36">
                <expr_stmt pos:start="71:17" pos:end="71:36"><expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:25">max_ra</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:35">INT_MIN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="72:9" pos:end="107:13"><if pos:start="72:9" pos:end="76:9">if <condition pos:start="72:12" pos:end="72:42">(<expr pos:start="72:13" pos:end="72:41"><name pos:start="72:13" pos:end="72:41"><name pos:start="72:13" pos:end="72:13">s</name><operator pos:start="72:14" pos:end="72:15">-&gt;</operator><name pos:start="72:16" pos:end="72:17">sh</name><operator pos:start="72:18" pos:end="72:18">.</operator><name pos:start="72:19" pos:end="72:41">first_slice_in_pic_flag</name></name></expr>)</condition> <block pos:start="72:44" pos:end="76:9">{<block_content pos:start="73:13" pos:end="75:27">
            <expr_stmt pos:start="73:13" pos:end="73:38"><expr pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:37"><name pos:start="73:19" pos:end="73:34">hevc_frame_start</name><argument_list pos:start="73:35" pos:end="73:37">(<argument pos:start="73:36" pos:end="73:36"><expr pos:start="73:36" pos:end="73:36"><name pos:start="73:36" pos:end="73:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="74:13" pos:end="75:27"><if pos:start="74:13" pos:end="75:27">if <condition pos:start="74:16" pos:end="74:24">(<expr pos:start="74:17" pos:end="74:23"><name pos:start="74:17" pos:end="74:19">ret</name> <operator pos:start="74:21" pos:end="74:21">&lt;</operator> <literal type="number" pos:start="74:23" pos:end="74:23">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:27"><block_content pos:start="75:17" pos:end="75:27">
                <return pos:start="75:17" pos:end="75:27">return <expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="76:11" pos:end="107:13">else if <condition pos:start="76:19" pos:end="76:27">(<expr pos:start="76:20" pos:end="76:26"><operator pos:start="76:20" pos:end="76:20">!</operator><name pos:start="76:21" pos:end="76:26"><name pos:start="76:21" pos:end="76:21">s</name><operator pos:start="76:22" pos:end="76:23">-&gt;</operator><name pos:start="76:24" pos:end="76:26">ref</name></name></expr>)</condition> <block pos:start="76:29" pos:end="107:13">{<block_content pos:start="77:13" pos:end="107:13">
            <expr_stmt pos:start="77:13" pos:end="77:80"><expr pos:start="77:13" pos:end="77:79"><call pos:start="77:13" pos:end="77:79"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:79">(<argument pos:start="77:20" pos:end="77:27"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">avctx</name></name></expr></argument>, <argument pos:start="77:30" pos:end="77:41"><expr pos:start="77:30" pos:end="77:41"><name pos:start="77:30" pos:end="77:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:44" pos:end="77:78"><expr pos:start="77:44" pos:end="77:78"><literal type="string" pos:start="77:44" pos:end="77:78">"First slice in a frame missing.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="78:9" pos:end="107:13"><if pos:start="78:9" pos:end="107:13">if <condition pos:start="78:12" pos:end="79:40">(<expr pos:start="78:13" pos:end="79:39"><operator pos:start="78:13" pos:end="78:13">!</operator><name pos:start="78:14" pos:end="78:47"><name pos:start="78:14" pos:end="78:14">s</name><operator pos:start="78:15" pos:end="78:16">-&gt;</operator><name pos:start="78:17" pos:end="78:18">sh</name><operator pos:start="78:19" pos:end="78:19">.</operator><name pos:start="78:20" pos:end="78:47">dependent_slice_segment_flag</name></name> <operator pos:start="78:49" pos:end="78:50">&amp;&amp;</operator>
            <name pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:17">sh</name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:28">slice_type</name></name> <operator pos:start="79:30" pos:end="79:31">!=</operator> <name pos:start="79:33" pos:end="79:39">I_SLICE</name></expr>)</condition> <block pos:start="79:42" pos:end="107:13">{<block_content pos:start="80:13" pos:end="107:13">
            <expr_stmt pos:start="80:13" pos:end="80:39"><expr pos:start="80:13" pos:end="80:38"><name pos:start="80:13" pos:end="80:15">ret</name> <operator pos:start="80:17" pos:end="80:17">=</operator> <call pos:start="80:19" pos:end="80:38"><name pos:start="80:19" pos:end="80:35">ff_hevc_slice_rpl</name><argument_list pos:start="80:36" pos:end="80:38">(<argument pos:start="80:37" pos:end="80:37"><expr pos:start="80:37" pos:end="80:37"><name pos:start="80:37" pos:end="80:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="81:13" pos:end="107:13"><if pos:start="81:13" pos:end="107:13">if <condition pos:start="81:16" pos:end="81:24">(<expr pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:19">ret</name> <operator pos:start="81:21" pos:end="81:21">&lt;</operator> <literal type="number" pos:start="81:23" pos:end="81:23">0</literal></expr>)</condition> <block pos:start="81:26" pos:end="107:13">{<block_content pos:start="82:17" pos:end="107:13">
                <expr_stmt pos:start="82:17" pos:end="83:90"><expr pos:start="82:17" pos:end="83:89"><call pos:start="82:17" pos:end="83:89"><name pos:start="82:17" pos:end="82:22">av_log</name><argument_list pos:start="82:23" pos:end="83:89">(<argument pos:start="82:24" pos:end="82:31"><expr pos:start="82:24" pos:end="82:31"><name pos:start="82:24" pos:end="82:31"><name pos:start="82:24" pos:end="82:24">s</name><operator pos:start="82:25" pos:end="82:26">-&gt;</operator><name pos:start="82:27" pos:end="82:31">avctx</name></name></expr></argument>, <argument pos:start="82:34" pos:end="82:47"><expr pos:start="82:34" pos:end="82:47"><name pos:start="82:34" pos:end="82:47">AV_LOG_WARNING</name></expr></argument>,
                       <argument pos:start="83:24" pos:end="83:88"><expr pos:start="83:24" pos:end="83:88"><literal type="string" pos:start="83:24" pos:end="83:88">"Error constructing the reference lists for the current slice.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="84:17" pos:end="85:31"><if pos:start="84:17" pos:end="85:31">if <condition pos:start="84:20" pos:end="84:62">(<expr pos:start="84:21" pos:end="84:61"><name pos:start="84:21" pos:end="84:45"><name pos:start="84:21" pos:end="84:21">s</name><operator pos:start="84:22" pos:end="84:23">-&gt;</operator><name pos:start="84:24" pos:end="84:28">avctx</name><operator pos:start="84:29" pos:end="84:30">-&gt;</operator><name pos:start="84:31" pos:end="84:45">err_recognition</name></name> <operator pos:start="84:47" pos:end="84:47">&amp;</operator> <name pos:start="84:49" pos:end="84:61">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:31"><block_content pos:start="85:21" pos:end="85:31">
                    <return pos:start="85:21" pos:end="85:31">return <expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="86:9" pos:end="86:40"><expr pos:start="86:9" pos:end="86:39"><name pos:start="86:9" pos:end="86:19">ctb_addr_ts</name> <operator pos:start="86:21" pos:end="86:21">=</operator> <call pos:start="86:23" pos:end="86:39"><name pos:start="86:23" pos:end="86:36">hls_slice_data</name><argument_list pos:start="86:37" pos:end="86:39">(<argument pos:start="86:38" pos:end="86:38"><expr pos:start="86:38" pos:end="86:38"><name pos:start="86:38" pos:end="86:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="87:9" pos:end="107:13"><if pos:start="87:9" pos:end="107:13">if <condition pos:start="87:12" pos:end="87:68">(<expr pos:start="87:13" pos:end="87:67"><name pos:start="87:13" pos:end="87:23">ctb_addr_ts</name> <operator pos:start="87:25" pos:end="87:26">&gt;=</operator> <operator pos:start="87:28" pos:end="87:28">(</operator><name pos:start="87:29" pos:end="87:45"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:34">sps</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:45">ctb_width</name></name> <operator pos:start="87:47" pos:end="87:47">*</operator> <name pos:start="87:49" pos:end="87:66"><name pos:start="87:49" pos:end="87:49">s</name><operator pos:start="87:50" pos:end="87:51">-&gt;</operator><name pos:start="87:52" pos:end="87:54">sps</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:66">ctb_height</name></name><operator pos:start="87:67" pos:end="87:67">)</operator></expr>)</condition> <block pos:start="87:70" pos:end="107:13">{<block_content pos:start="88:13" pos:end="107:13">
            <expr_stmt pos:start="88:13" pos:end="88:30"><expr pos:start="88:13" pos:end="88:29"><name pos:start="88:13" pos:end="88:25"><name pos:start="88:13" pos:end="88:13">s</name><operator pos:start="88:14" pos:end="88:15">-&gt;</operator><name pos:start="88:16" pos:end="88:25">is_decoded</name></name> <operator pos:start="88:27" pos:end="88:27">=</operator> <literal type="number" pos:start="88:29" pos:end="88:29">1</literal></expr>;</expr_stmt>
            <if_stmt pos:start="89:13" pos:end="92:38"><if pos:start="89:13" pos:end="92:38">if <condition pos:start="89:16" pos:end="91:36">(<expr pos:start="89:17" pos:end="91:35"><operator pos:start="89:17" pos:end="89:17">(</operator><name pos:start="89:18" pos:end="89:54"><name pos:start="89:18" pos:end="89:18">s</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:23">pps</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:54">transquant_bypass_enable_flag</name></name> <operator pos:start="89:56" pos:end="89:57">||</operator>
                 <operator pos:start="90:18" pos:end="90:18">(</operator><name pos:start="90:19" pos:end="90:54"><name pos:start="90:19" pos:end="90:19">s</name><operator pos:start="90:20" pos:end="90:21">-&gt;</operator><name pos:start="90:22" pos:end="90:24">sps</name><operator pos:start="90:25" pos:end="90:26">-&gt;</operator><name pos:start="90:27" pos:end="90:29">pcm</name><operator pos:start="90:30" pos:end="90:30">.</operator><name pos:start="90:31" pos:end="90:54">loop_filter_disable_flag</name></name> <operator pos:start="90:56" pos:end="90:57">&amp;&amp;</operator> <name pos:start="90:59" pos:end="90:82"><name pos:start="90:59" pos:end="90:59">s</name><operator pos:start="90:60" pos:end="90:61">-&gt;</operator><name pos:start="90:62" pos:end="90:64">sps</name><operator pos:start="90:65" pos:end="90:66">-&gt;</operator><name pos:start="90:67" pos:end="90:82">pcm_enabled_flag</name></name><operator pos:start="90:83" pos:end="90:83">)</operator><operator pos:start="90:84" pos:end="90:84">)</operator> <operator pos:start="90:86" pos:end="90:87">&amp;&amp;</operator>
                <name pos:start="91:17" pos:end="91:35"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:22">sps</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:35">sao_enabled</name></name></expr>)</condition><block type="pseudo" pos:start="92:17" pos:end="92:38"><block_content pos:start="92:17" pos:end="92:38">
                <expr_stmt pos:start="92:17" pos:end="92:38"><expr pos:start="92:17" pos:end="92:37"><call pos:start="92:17" pos:end="92:37"><name pos:start="92:17" pos:end="92:34">restore_tqb_pixels</name><argument_list pos:start="92:35" pos:end="92:37">(<argument pos:start="92:36" pos:end="92:36"><expr pos:start="92:36" pos:end="92:36"><name pos:start="92:36" pos:end="92:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="93:9" pos:end="94:31"><if pos:start="93:9" pos:end="94:31">if <condition pos:start="93:12" pos:end="93:28">(<expr pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:23">ctb_addr_ts</name> <operator pos:start="93:25" pos:end="93:25">&lt;</operator> <literal type="number" pos:start="93:27" pos:end="93:27">0</literal></expr>)</condition><block type="pseudo" pos:start="94:13" pos:end="94:31"><block_content pos:start="94:13" pos:end="94:31">
            <return pos:start="94:13" pos:end="94:31">return <expr pos:start="94:20" pos:end="94:30"><name pos:start="94:20" pos:end="94:30">ctb_addr_ts</name></expr>;</return></block_content></block></if></if_stmt>
        <break pos:start="95:9" pos:end="95:14">break;</break>
    <case pos:start="96:5" pos:end="96:21">case <expr pos:start="96:10" pos:end="96:20"><name pos:start="96:10" pos:end="96:20">NAL_EOS_NUT</name></expr>:</case>
    <case pos:start="97:5" pos:end="97:21">case <expr pos:start="97:10" pos:end="97:20"><name pos:start="97:10" pos:end="97:20">NAL_EOB_NUT</name></expr>:</case>
        <expr_stmt pos:start="98:9" pos:end="98:51"><expr pos:start="98:9" pos:end="98:50"><name pos:start="98:9" pos:end="98:21"><name pos:start="98:9" pos:end="98:9">s</name><operator pos:start="98:10" pos:end="98:11">-&gt;</operator><name pos:start="98:12" pos:end="98:21">seq_decode</name></name> <operator pos:start="98:23" pos:end="98:23">=</operator> <operator pos:start="98:25" pos:end="98:25">(</operator><name pos:start="98:26" pos:end="98:38"><name pos:start="98:26" pos:end="98:26">s</name><operator pos:start="98:27" pos:end="98:28">-&gt;</operator><name pos:start="98:29" pos:end="98:38">seq_decode</name></name> <operator pos:start="98:40" pos:end="98:40">+</operator> <literal type="number" pos:start="98:42" pos:end="98:42">1</literal><operator pos:start="98:43" pos:end="98:43">)</operator> <operator pos:start="98:45" pos:end="98:45">&amp;</operator> <literal type="number" pos:start="98:47" pos:end="98:50">0xff</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="99:9" pos:end="99:32"><expr pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:17">max_ra</name></name>     <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:31">INT_MAX</name></expr>;</expr_stmt>
        <break pos:start="100:9" pos:end="100:14">break;</break>
    <case pos:start="101:5" pos:end="101:17">case <expr pos:start="101:10" pos:end="101:16"><name pos:start="101:10" pos:end="101:16">NAL_AUD</name></expr>:</case>
    <case pos:start="102:5" pos:end="102:20">case <expr pos:start="102:10" pos:end="102:19"><name pos:start="102:10" pos:end="102:19">NAL_FD_NUT</name></expr>:</case>
        <break pos:start="103:9" pos:end="103:14">break;</break>
    <default pos:start="104:5" pos:end="104:12">default:</default>
        <expr_stmt pos:start="105:9" pos:end="106:59"><expr pos:start="105:9" pos:end="106:58"><call pos:start="105:9" pos:end="106:58"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="106:58">(<argument pos:start="105:16" pos:end="105:23"><expr pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:16">s</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:23">avctx</name></name></expr></argument>, <argument pos:start="105:26" pos:end="105:36"><expr pos:start="105:26" pos:end="105:36"><name pos:start="105:26" pos:end="105:36">AV_LOG_INFO</name></expr></argument>,
               <argument pos:start="106:16" pos:end="106:39"><expr pos:start="106:16" pos:end="106:39"><literal type="string" pos:start="106:16" pos:end="106:39">"Skipping NAL unit %d\n"</literal></expr></argument>, <argument pos:start="106:42" pos:end="106:57"><expr pos:start="106:42" pos:end="106:57"><name pos:start="106:42" pos:end="106:57"><name pos:start="106:42" pos:end="106:42">s</name><operator pos:start="106:43" pos:end="106:44">-&gt;</operator><name pos:start="106:45" pos:end="106:57">nal_unit_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></function></unit>
