<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10484.c" pos:tabs="8"><function pos:start="1:1" pos:end="307:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:31">(<parameter pos:start="1:15" pos:end="1:30"><decl pos:start="1:15" pos:end="1:30"><type pos:start="1:15" pos:end="1:27"><name pos:start="1:15" pos:end="1:25">CPUX86State</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="307:1">{<block_content pos:start="5:5" pos:end="305:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:44">= <expr pos:start="5:20" pos:end="5:44"><call pos:start="5:20" pos:end="5:44"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:44">(<argument pos:start="5:24" pos:end="5:43"><expr pos:start="5:24" pos:end="5:43"><call pos:start="5:24" pos:end="5:43"><name pos:start="5:24" pos:end="5:38">x86_env_get_cpu</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:16">pc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20">target_siginfo_t</name></type> <name pos:start="11:22" pos:end="11:25">info</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="305:5">for<control pos:start="15:8" pos:end="15:11">(<init pos:start="15:9" pos:end="15:9">;</init><condition pos:start="15:10" pos:end="15:10">;</condition><incr/>)</control> <block pos:start="15:13" pos:end="305:5">{<block_content pos:start="17:9" pos:end="303:37">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:22">cpu_exec_start</name><argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:14">trapnr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:33"><name pos:start="19:18" pos:end="19:29">cpu_x86_exec</name><argument_list pos:start="19:30" pos:end="19:33">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:20">cpu_exec_end</name><argument_list pos:start="21:21" pos:end="21:24">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="23:9" pos:end="301:9">switch<condition pos:start="23:15" pos:end="23:22">(<expr pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:21">trapnr</name></expr>)</condition> <block pos:start="23:24" pos:end="301:9">{<block_content pos:start="25:9" pos:end="299:20">

        <case pos:start="25:9" pos:end="25:18">case <expr pos:start="25:14" pos:end="25:17"><literal type="number" pos:start="25:14" pos:end="25:17">0x80</literal></expr>:</case>

            <comment type="block" pos:start="27:13" pos:end="27:46">/* linux syscall from int $0x80 */</comment>

            <expr_stmt pos:start="29:13" pos:end="45:48"><expr pos:start="29:13" pos:end="45:47"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:15">env</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:21">regs</name><index pos:start="29:22" pos:end="29:28">[<expr pos:start="29:23" pos:end="29:27"><name pos:start="29:23" pos:end="29:27">R_EAX</name></expr>]</index></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <call pos:start="29:32" pos:end="45:47"><name pos:start="29:32" pos:end="29:41">do_syscall</name><argument_list pos:start="29:42" pos:end="45:47">(<argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:45">env</name></expr></argument>,

                                          <argument pos:start="31:43" pos:end="31:58"><expr pos:start="31:43" pos:end="31:58"><name pos:start="31:43" pos:end="31:58"><name pos:start="31:43" pos:end="31:45">env</name><operator pos:start="31:46" pos:end="31:47">-&gt;</operator><name pos:start="31:48" pos:end="31:51">regs</name><index pos:start="31:52" pos:end="31:58">[<expr pos:start="31:53" pos:end="31:57"><name pos:start="31:53" pos:end="31:57">R_EAX</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="33:43" pos:end="33:58"><expr pos:start="33:43" pos:end="33:58"><name pos:start="33:43" pos:end="33:58"><name pos:start="33:43" pos:end="33:45">env</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:51">regs</name><index pos:start="33:52" pos:end="33:58">[<expr pos:start="33:53" pos:end="33:57"><name pos:start="33:53" pos:end="33:57">R_EBX</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="35:43" pos:end="35:58"><expr pos:start="35:43" pos:end="35:58"><name pos:start="35:43" pos:end="35:58"><name pos:start="35:43" pos:end="35:45">env</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:51">regs</name><index pos:start="35:52" pos:end="35:58">[<expr pos:start="35:53" pos:end="35:57"><name pos:start="35:53" pos:end="35:57">R_ECX</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="37:43" pos:end="37:58"><expr pos:start="37:43" pos:end="37:58"><name pos:start="37:43" pos:end="37:58"><name pos:start="37:43" pos:end="37:45">env</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:51">regs</name><index pos:start="37:52" pos:end="37:58">[<expr pos:start="37:53" pos:end="37:57"><name pos:start="37:53" pos:end="37:57">R_EDX</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="39:43" pos:end="39:58"><expr pos:start="39:43" pos:end="39:58"><name pos:start="39:43" pos:end="39:58"><name pos:start="39:43" pos:end="39:45">env</name><operator pos:start="39:46" pos:end="39:47">-&gt;</operator><name pos:start="39:48" pos:end="39:51">regs</name><index pos:start="39:52" pos:end="39:58">[<expr pos:start="39:53" pos:end="39:57"><name pos:start="39:53" pos:end="39:57">R_ESI</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="41:43" pos:end="41:58"><expr pos:start="41:43" pos:end="41:58"><name pos:start="41:43" pos:end="41:58"><name pos:start="41:43" pos:end="41:45">env</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:51">regs</name><index pos:start="41:52" pos:end="41:58">[<expr pos:start="41:53" pos:end="41:57"><name pos:start="41:53" pos:end="41:57">R_EDI</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="43:43" pos:end="43:58"><expr pos:start="43:43" pos:end="43:58"><name pos:start="43:43" pos:end="43:58"><name pos:start="43:43" pos:end="43:45">env</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:51">regs</name><index pos:start="43:52" pos:end="43:58">[<expr pos:start="43:53" pos:end="43:57"><name pos:start="43:53" pos:end="43:57">R_EBP</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr></argument>, <argument pos:start="45:46" pos:end="45:46"><expr pos:start="45:46" pos:end="45:46"><literal type="number" pos:start="45:46" pos:end="45:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="50:0">break;</break>

<cpp:ifndef pos:start="49:1" pos:end="49:20">#<cpp:directive pos:start="49:2" pos:end="49:7">ifndef</cpp:directive> <name pos:start="49:9" pos:end="49:20">TARGET_ABI32</name></cpp:ifndef>

        <case pos:start="51:9" pos:end="51:26">case <expr pos:start="51:14" pos:end="51:25"><name pos:start="51:14" pos:end="51:25">EXCP_SYSCALL</name></expr>:</case>

            <comment type="block" pos:start="53:13" pos:end="53:56">/* linux syscall from syscall instruction */</comment>

            <expr_stmt pos:start="55:13" pos:end="71:48"><expr pos:start="55:13" pos:end="71:47"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:15">env</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">regs</name><index pos:start="55:22" pos:end="55:28">[<expr pos:start="55:23" pos:end="55:27"><name pos:start="55:23" pos:end="55:27">R_EAX</name></expr>]</index></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <call pos:start="55:32" pos:end="71:47"><name pos:start="55:32" pos:end="55:41">do_syscall</name><argument_list pos:start="55:42" pos:end="71:47">(<argument pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><name pos:start="55:43" pos:end="55:45">env</name></expr></argument>,

                                          <argument pos:start="57:43" pos:end="57:58"><expr pos:start="57:43" pos:end="57:58"><name pos:start="57:43" pos:end="57:58"><name pos:start="57:43" pos:end="57:45">env</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:51">regs</name><index pos:start="57:52" pos:end="57:58">[<expr pos:start="57:53" pos:end="57:57"><name pos:start="57:53" pos:end="57:57">R_EAX</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="59:43" pos:end="59:58"><expr pos:start="59:43" pos:end="59:58"><name pos:start="59:43" pos:end="59:58"><name pos:start="59:43" pos:end="59:45">env</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:51">regs</name><index pos:start="59:52" pos:end="59:58">[<expr pos:start="59:53" pos:end="59:57"><name pos:start="59:53" pos:end="59:57">R_EDI</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="61:43" pos:end="61:58"><expr pos:start="61:43" pos:end="61:58"><name pos:start="61:43" pos:end="61:58"><name pos:start="61:43" pos:end="61:45">env</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:51">regs</name><index pos:start="61:52" pos:end="61:58">[<expr pos:start="61:53" pos:end="61:57"><name pos:start="61:53" pos:end="61:57">R_ESI</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="63:43" pos:end="63:58"><expr pos:start="63:43" pos:end="63:58"><name pos:start="63:43" pos:end="63:58"><name pos:start="63:43" pos:end="63:45">env</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:51">regs</name><index pos:start="63:52" pos:end="63:58">[<expr pos:start="63:53" pos:end="63:57"><name pos:start="63:53" pos:end="63:57">R_EDX</name></expr>]</index></name></expr></argument>,

                                          <argument pos:start="65:43" pos:end="65:55"><expr pos:start="65:43" pos:end="65:55"><name pos:start="65:43" pos:end="65:55"><name pos:start="65:43" pos:end="65:45">env</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:51">regs</name><index pos:start="65:52" pos:end="65:55">[<expr pos:start="65:53" pos:end="65:54"><literal type="number" pos:start="65:53" pos:end="65:54">10</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="67:43" pos:end="67:54"><expr pos:start="67:43" pos:end="67:54"><name pos:start="67:43" pos:end="67:54"><name pos:start="67:43" pos:end="67:45">env</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:51">regs</name><index pos:start="67:52" pos:end="67:54">[<expr pos:start="67:53" pos:end="67:53"><literal type="number" pos:start="67:53" pos:end="67:53">8</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="69:43" pos:end="69:54"><expr pos:start="69:43" pos:end="69:54"><name pos:start="69:43" pos:end="69:54"><name pos:start="69:43" pos:end="69:45">env</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:51">regs</name><index pos:start="69:52" pos:end="69:54">[<expr pos:start="69:53" pos:end="69:53"><literal type="number" pos:start="69:53" pos:end="69:53">9</literal></expr>]</index></name></expr></argument>,

                                          <argument pos:start="71:43" pos:end="71:43"><expr pos:start="71:43" pos:end="71:43"><literal type="number" pos:start="71:43" pos:end="71:43">0</literal></expr></argument>, <argument pos:start="71:46" pos:end="71:46"><expr pos:start="71:46" pos:end="71:46"><literal type="number" pos:start="71:46" pos:end="71:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="76:0">break;</break>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

        <case pos:start="77:9" pos:end="77:26">case <expr pos:start="77:14" pos:end="77:25"><name pos:start="77:14" pos:end="77:25">EXCP0B_NOSEG</name></expr>:</case>

        <case pos:start="79:9" pos:end="79:26">case <expr pos:start="79:14" pos:end="79:25"><name pos:start="79:14" pos:end="79:25">EXCP0C_STACK</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:42"><expr pos:start="81:13" pos:end="81:41"><name pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:16">info</name><operator pos:start="81:17" pos:end="81:17">.</operator><name pos:start="81:18" pos:end="81:25">si_signo</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:41">TARGET_SIGBUS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:16">info</name><operator pos:start="83:17" pos:end="83:17">.</operator><name pos:start="83:18" pos:end="83:25">si_errno</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:44"><expr pos:start="85:13" pos:end="85:43"><name pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:16">info</name><operator pos:start="85:17" pos:end="85:17">.</operator><name pos:start="85:18" pos:end="85:24">si_code</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:43">TARGET_SI_KERNEL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:16">info</name><operator pos:start="87:17" pos:end="87:17">.</operator><name pos:start="87:18" pos:end="87:26">_sifields</name><operator pos:start="87:27" pos:end="87:27">.</operator><name pos:start="87:28" pos:end="87:36">_sigfault</name><operator pos:start="87:37" pos:end="87:37">.</operator><name pos:start="87:38" pos:end="87:42">_addr</name></name> <operator pos:start="87:44" pos:end="87:44">=</operator> <literal type="number" pos:start="87:46" pos:end="87:46">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:52"><expr pos:start="89:13" pos:end="89:51"><call pos:start="89:13" pos:end="89:51"><name pos:start="89:13" pos:end="89:24">queue_signal</name><argument_list pos:start="89:25" pos:end="89:51">(<argument pos:start="89:26" pos:end="89:28"><expr pos:start="89:26" pos:end="89:28"><name pos:start="89:26" pos:end="89:28">env</name></expr></argument>, <argument pos:start="89:31" pos:end="89:43"><expr pos:start="89:31" pos:end="89:43"><name pos:start="89:31" pos:end="89:43"><name pos:start="89:31" pos:end="89:34">info</name><operator pos:start="89:35" pos:end="89:35">.</operator><name pos:start="89:36" pos:end="89:43">si_signo</name></name></expr></argument>, <argument pos:start="89:46" pos:end="89:50"><expr pos:start="89:46" pos:end="89:50"><operator pos:start="89:46" pos:end="89:46">&amp;</operator><name pos:start="89:47" pos:end="89:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="98:0">case <expr pos:start="93:14" pos:end="93:23"><name pos:start="93:14" pos:end="93:23">EXCP0D_GPF</name></expr>:</case>

            <comment type="block" pos:start="95:13" pos:end="95:49">/* XXX: potential problem if ABI32 */</comment>

<cpp:ifndef pos:start="97:1" pos:end="97:21">#<cpp:directive pos:start="97:2" pos:end="97:7">ifndef</cpp:directive> <name pos:start="97:9" pos:end="97:21">TARGET_X86_64</name></cpp:ifndef>

            <if_stmt pos:start="99:13" pos:end="119:13"><if pos:start="99:13" pos:end="103:13">if <condition pos:start="99:16" pos:end="99:38">(<expr pos:start="99:17" pos:end="99:37"><name pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:19">env</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:27">eflags</name></name> <operator pos:start="99:29" pos:end="99:29">&amp;</operator> <name pos:start="99:31" pos:end="99:37">VM_MASK</name></expr>)</condition> <block pos:start="99:40" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:39">

                <expr_stmt pos:start="101:17" pos:end="101:39"><expr pos:start="101:17" pos:end="101:38"><call pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:33">handle_vm86_fault</name><argument_list pos:start="101:34" pos:end="101:38">(<argument pos:start="101:35" pos:end="101:37"><expr pos:start="101:35" pos:end="101:37"><name pos:start="101:35" pos:end="101:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="103:15" pos:end="119:13">else

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

            <block pos:start="107:13" pos:end="119:13">{<block_content pos:start="109:17" pos:end="117:56">

                <expr_stmt pos:start="109:17" pos:end="109:47"><expr pos:start="109:17" pos:end="109:46"><name pos:start="109:17" pos:end="109:29"><name pos:start="109:17" pos:end="109:20">info</name><operator pos:start="109:21" pos:end="109:21">.</operator><name pos:start="109:22" pos:end="109:29">si_signo</name></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <name pos:start="109:33" pos:end="109:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:34"><expr pos:start="111:17" pos:end="111:33"><name pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:20">info</name><operator pos:start="111:21" pos:end="111:21">.</operator><name pos:start="111:22" pos:end="111:29">si_errno</name></name> <operator pos:start="111:31" pos:end="111:31">=</operator> <literal type="number" pos:start="111:33" pos:end="111:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:48"><expr pos:start="113:17" pos:end="113:47"><name pos:start="113:17" pos:end="113:28"><name pos:start="113:17" pos:end="113:20">info</name><operator pos:start="113:21" pos:end="113:21">.</operator><name pos:start="113:22" pos:end="113:28">si_code</name></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <name pos:start="113:32" pos:end="113:47">TARGET_SI_KERNEL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:51"><expr pos:start="115:17" pos:end="115:50"><name pos:start="115:17" pos:end="115:46"><name pos:start="115:17" pos:end="115:20">info</name><operator pos:start="115:21" pos:end="115:21">.</operator><name pos:start="115:22" pos:end="115:30">_sifields</name><operator pos:start="115:31" pos:end="115:31">.</operator><name pos:start="115:32" pos:end="115:40">_sigfault</name><operator pos:start="115:41" pos:end="115:41">.</operator><name pos:start="115:42" pos:end="115:46">_addr</name></name> <operator pos:start="115:48" pos:end="115:48">=</operator> <literal type="number" pos:start="115:50" pos:end="115:50">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:56"><expr pos:start="117:17" pos:end="117:55"><call pos:start="117:17" pos:end="117:55"><name pos:start="117:17" pos:end="117:28">queue_signal</name><argument_list pos:start="117:29" pos:end="117:55">(<argument pos:start="117:30" pos:end="117:32"><expr pos:start="117:30" pos:end="117:32"><name pos:start="117:30" pos:end="117:32">env</name></expr></argument>, <argument pos:start="117:35" pos:end="117:47"><expr pos:start="117:35" pos:end="117:47"><name pos:start="117:35" pos:end="117:47"><name pos:start="117:35" pos:end="117:38">info</name><operator pos:start="117:39" pos:end="117:39">.</operator><name pos:start="117:40" pos:end="117:47">si_signo</name></name></expr></argument>, <argument pos:start="117:50" pos:end="117:54"><expr pos:start="117:50" pos:end="117:54"><operator pos:start="117:50" pos:end="117:50">&amp;</operator><name pos:start="117:51" pos:end="117:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:25">case <expr pos:start="123:14" pos:end="123:24"><name pos:start="123:14" pos:end="123:24">EXCP0E_PAGE</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:43"><expr pos:start="125:13" pos:end="125:42"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:16">info</name><operator pos:start="125:17" pos:end="125:17">.</operator><name pos:start="125:18" pos:end="125:25">si_signo</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <name pos:start="125:29" pos:end="125:42">TARGET_SIGSEGV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:30"><expr pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:16">info</name><operator pos:start="127:17" pos:end="127:17">.</operator><name pos:start="127:18" pos:end="127:25">si_errno</name></name> <operator pos:start="127:27" pos:end="127:27">=</operator> <literal type="number" pos:start="127:29" pos:end="127:29">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="135:50"><if pos:start="129:13" pos:end="131:50">if <condition pos:start="129:16" pos:end="129:39">(<expr pos:start="129:17" pos:end="129:38"><operator pos:start="129:17" pos:end="129:17">!</operator><operator pos:start="129:18" pos:end="129:18">(</operator><name pos:start="129:19" pos:end="129:33"><name pos:start="129:19" pos:end="129:21">env</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:33">error_code</name></name> <operator pos:start="129:35" pos:end="129:35">&amp;</operator> <literal type="number" pos:start="129:37" pos:end="129:37">1</literal><operator pos:start="129:38" pos:end="129:38">)</operator></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:50"><block_content pos:start="131:17" pos:end="131:50">

                <expr_stmt pos:start="131:17" pos:end="131:50"><expr pos:start="131:17" pos:end="131:49"><name pos:start="131:17" pos:end="131:28"><name pos:start="131:17" pos:end="131:20">info</name><operator pos:start="131:21" pos:end="131:21">.</operator><name pos:start="131:22" pos:end="131:28">si_code</name></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <name pos:start="131:32" pos:end="131:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="133:13" pos:end="135:50">else<block type="pseudo" pos:start="135:17" pos:end="135:50"><block_content pos:start="135:17" pos:end="135:50">

                <expr_stmt pos:start="135:17" pos:end="135:50"><expr pos:start="135:17" pos:end="135:49"><name pos:start="135:17" pos:end="135:28"><name pos:start="135:17" pos:end="135:20">info</name><operator pos:start="135:21" pos:end="135:21">.</operator><name pos:start="135:22" pos:end="135:28">si_code</name></name> <operator pos:start="135:30" pos:end="135:30">=</operator> <name pos:start="135:32" pos:end="135:49">TARGET_SEGV_ACCERR</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:56"><expr pos:start="137:13" pos:end="137:55"><name pos:start="137:13" pos:end="137:42"><name pos:start="137:13" pos:end="137:16">info</name><operator pos:start="137:17" pos:end="137:17">.</operator><name pos:start="137:18" pos:end="137:26">_sifields</name><operator pos:start="137:27" pos:end="137:27">.</operator><name pos:start="137:28" pos:end="137:36">_sigfault</name><operator pos:start="137:37" pos:end="137:37">.</operator><name pos:start="137:38" pos:end="137:42">_addr</name></name> <operator pos:start="137:44" pos:end="137:44">=</operator> <name pos:start="137:46" pos:end="137:55"><name pos:start="137:46" pos:end="137:48">env</name><operator pos:start="137:49" pos:end="137:50">-&gt;</operator><name pos:start="137:51" pos:end="137:52">cr</name><index pos:start="137:53" pos:end="137:55">[<expr pos:start="137:54" pos:end="137:54"><literal type="number" pos:start="137:54" pos:end="137:54">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:52"><expr pos:start="139:13" pos:end="139:51"><call pos:start="139:13" pos:end="139:51"><name pos:start="139:13" pos:end="139:24">queue_signal</name><argument_list pos:start="139:25" pos:end="139:51">(<argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:28">env</name></expr></argument>, <argument pos:start="139:31" pos:end="139:43"><expr pos:start="139:31" pos:end="139:43"><name pos:start="139:31" pos:end="139:43"><name pos:start="139:31" pos:end="139:34">info</name><operator pos:start="139:35" pos:end="139:35">.</operator><name pos:start="139:36" pos:end="139:43">si_signo</name></name></expr></argument>, <argument pos:start="139:46" pos:end="139:50"><expr pos:start="139:46" pos:end="139:50"><operator pos:start="139:46" pos:end="139:46">&amp;</operator><name pos:start="139:47" pos:end="139:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="146:0">case <expr pos:start="143:14" pos:end="143:24"><name pos:start="143:14" pos:end="143:24">EXCP00_DIVZ</name></expr>:</case>

<cpp:ifndef pos:start="145:1" pos:end="145:21">#<cpp:directive pos:start="145:2" pos:end="145:7">ifndef</cpp:directive> <name pos:start="145:9" pos:end="145:21">TARGET_X86_64</name></cpp:ifndef>

            <if_stmt pos:start="147:13" pos:end="169:13"><if pos:start="147:13" pos:end="151:13">if <condition pos:start="147:16" pos:end="147:38">(<expr pos:start="147:17" pos:end="147:37"><name pos:start="147:17" pos:end="147:27"><name pos:start="147:17" pos:end="147:19">env</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:27">eflags</name></name> <operator pos:start="147:29" pos:end="147:29">&amp;</operator> <name pos:start="147:31" pos:end="147:37">VM_MASK</name></expr>)</condition> <block pos:start="147:40" pos:end="151:13">{<block_content pos:start="149:17" pos:end="149:46">

                <expr_stmt pos:start="149:17" pos:end="149:46"><expr pos:start="149:17" pos:end="149:45"><call pos:start="149:17" pos:end="149:45"><name pos:start="149:17" pos:end="149:32">handle_vm86_trap</name><argument_list pos:start="149:33" pos:end="149:45">(<argument pos:start="149:34" pos:end="149:36"><expr pos:start="149:34" pos:end="149:36"><name pos:start="149:34" pos:end="149:36">env</name></expr></argument>, <argument pos:start="149:39" pos:end="149:44"><expr pos:start="149:39" pos:end="149:44"><name pos:start="149:39" pos:end="149:44">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="151:15" pos:end="169:13">else

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

            <block pos:start="155:13" pos:end="169:13">{<block_content pos:start="159:17" pos:end="167:56">

                <comment type="block" pos:start="157:17" pos:end="157:38">/* division by zero */</comment>

                <expr_stmt pos:start="159:17" pos:end="159:46"><expr pos:start="159:17" pos:end="159:45"><name pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:20">info</name><operator pos:start="159:21" pos:end="159:21">.</operator><name pos:start="159:22" pos:end="159:29">si_signo</name></name> <operator pos:start="159:31" pos:end="159:31">=</operator> <name pos:start="159:33" pos:end="159:45">TARGET_SIGFPE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:34"><expr pos:start="161:17" pos:end="161:33"><name pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:20">info</name><operator pos:start="161:21" pos:end="161:21">.</operator><name pos:start="161:22" pos:end="161:29">si_errno</name></name> <operator pos:start="161:31" pos:end="161:31">=</operator> <literal type="number" pos:start="161:33" pos:end="161:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:49"><expr pos:start="163:17" pos:end="163:48"><name pos:start="163:17" pos:end="163:28"><name pos:start="163:17" pos:end="163:20">info</name><operator pos:start="163:21" pos:end="163:21">.</operator><name pos:start="163:22" pos:end="163:28">si_code</name></name> <operator pos:start="163:30" pos:end="163:30">=</operator> <name pos:start="163:32" pos:end="163:48">TARGET_FPE_INTDIV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:58"><expr pos:start="165:17" pos:end="165:57"><name pos:start="165:17" pos:end="165:46"><name pos:start="165:17" pos:end="165:20">info</name><operator pos:start="165:21" pos:end="165:21">.</operator><name pos:start="165:22" pos:end="165:30">_sifields</name><operator pos:start="165:31" pos:end="165:31">.</operator><name pos:start="165:32" pos:end="165:40">_sigfault</name><operator pos:start="165:41" pos:end="165:41">.</operator><name pos:start="165:42" pos:end="165:46">_addr</name></name> <operator pos:start="165:48" pos:end="165:48">=</operator> <name pos:start="165:50" pos:end="165:57"><name pos:start="165:50" pos:end="165:52">env</name><operator pos:start="165:53" pos:end="165:54">-&gt;</operator><name pos:start="165:55" pos:end="165:57">eip</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:56"><expr pos:start="167:17" pos:end="167:55"><call pos:start="167:17" pos:end="167:55"><name pos:start="167:17" pos:end="167:28">queue_signal</name><argument_list pos:start="167:29" pos:end="167:55">(<argument pos:start="167:30" pos:end="167:32"><expr pos:start="167:30" pos:end="167:32"><name pos:start="167:30" pos:end="167:32">env</name></expr></argument>, <argument pos:start="167:35" pos:end="167:47"><expr pos:start="167:35" pos:end="167:47"><name pos:start="167:35" pos:end="167:47"><name pos:start="167:35" pos:end="167:38">info</name><operator pos:start="167:39" pos:end="167:39">.</operator><name pos:start="167:40" pos:end="167:47">si_signo</name></name></expr></argument>, <argument pos:start="167:50" pos:end="167:54"><expr pos:start="167:50" pos:end="167:54"><operator pos:start="167:50" pos:end="167:50">&amp;</operator><name pos:start="167:51" pos:end="167:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:23">case <expr pos:start="173:14" pos:end="173:22"><name pos:start="173:14" pos:end="173:22">EXCP01_DB</name></expr>:</case>

        <case pos:start="175:9" pos:end="178:0">case <expr pos:start="175:14" pos:end="175:24"><name pos:start="175:14" pos:end="175:24">EXCP03_INT3</name></expr>:</case>

<cpp:ifndef pos:start="177:1" pos:end="177:21">#<cpp:directive pos:start="177:2" pos:end="177:7">ifndef</cpp:directive> <name pos:start="177:9" pos:end="177:21">TARGET_X86_64</name></cpp:ifndef>

            <if_stmt pos:start="179:13" pos:end="209:13"><if pos:start="179:13" pos:end="183:13">if <condition pos:start="179:16" pos:end="179:38">(<expr pos:start="179:17" pos:end="179:37"><name pos:start="179:17" pos:end="179:27"><name pos:start="179:17" pos:end="179:19">env</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:27">eflags</name></name> <operator pos:start="179:29" pos:end="179:29">&amp;</operator> <name pos:start="179:31" pos:end="179:37">VM_MASK</name></expr>)</condition> <block pos:start="179:40" pos:end="183:13">{<block_content pos:start="181:17" pos:end="181:46">

                <expr_stmt pos:start="181:17" pos:end="181:46"><expr pos:start="181:17" pos:end="181:45"><call pos:start="181:17" pos:end="181:45"><name pos:start="181:17" pos:end="181:32">handle_vm86_trap</name><argument_list pos:start="181:33" pos:end="181:45">(<argument pos:start="181:34" pos:end="181:36"><expr pos:start="181:34" pos:end="181:36"><name pos:start="181:34" pos:end="181:36">env</name></expr></argument>, <argument pos:start="181:39" pos:end="181:44"><expr pos:start="181:39" pos:end="181:44"><name pos:start="181:39" pos:end="181:44">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="183:15" pos:end="209:13">else

<cpp:endif pos:start="185:1" pos:end="185:6">#<cpp:directive pos:start="185:2" pos:end="185:6">endif</cpp:directive></cpp:endif>

            <block pos:start="187:13" pos:end="209:13">{<block_content pos:start="189:17" pos:end="207:56">

                <expr_stmt pos:start="189:17" pos:end="189:47"><expr pos:start="189:17" pos:end="189:46"><name pos:start="189:17" pos:end="189:29"><name pos:start="189:17" pos:end="189:20">info</name><operator pos:start="189:21" pos:end="189:21">.</operator><name pos:start="189:22" pos:end="189:29">si_signo</name></name> <operator pos:start="189:31" pos:end="189:31">=</operator> <name pos:start="189:33" pos:end="189:46">TARGET_SIGTRAP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:34"><expr pos:start="191:17" pos:end="191:33"><name pos:start="191:17" pos:end="191:29"><name pos:start="191:17" pos:end="191:20">info</name><operator pos:start="191:21" pos:end="191:21">.</operator><name pos:start="191:22" pos:end="191:29">si_errno</name></name> <operator pos:start="191:31" pos:end="191:31">=</operator> <literal type="number" pos:start="191:33" pos:end="191:33">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="193:17" pos:end="205:17"><if pos:start="193:17" pos:end="199:17">if <condition pos:start="193:20" pos:end="193:40">(<expr pos:start="193:21" pos:end="193:39"><name pos:start="193:21" pos:end="193:26">trapnr</name> <operator pos:start="193:28" pos:end="193:29">==</operator> <name pos:start="193:31" pos:end="193:39">EXCP01_DB</name></expr>)</condition> <block pos:start="193:42" pos:end="199:17">{<block_content pos:start="195:21" pos:end="197:62">

                    <expr_stmt pos:start="195:21" pos:end="195:53"><expr pos:start="195:21" pos:end="195:52"><name pos:start="195:21" pos:end="195:32"><name pos:start="195:21" pos:end="195:24">info</name><operator pos:start="195:25" pos:end="195:25">.</operator><name pos:start="195:26" pos:end="195:32">si_code</name></name> <operator pos:start="195:34" pos:end="195:34">=</operator> <name pos:start="195:36" pos:end="195:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:62"><expr pos:start="197:21" pos:end="197:61"><name pos:start="197:21" pos:end="197:50"><name pos:start="197:21" pos:end="197:24">info</name><operator pos:start="197:25" pos:end="197:25">.</operator><name pos:start="197:26" pos:end="197:34">_sifields</name><operator pos:start="197:35" pos:end="197:35">.</operator><name pos:start="197:36" pos:end="197:44">_sigfault</name><operator pos:start="197:45" pos:end="197:45">.</operator><name pos:start="197:46" pos:end="197:50">_addr</name></name> <operator pos:start="197:52" pos:end="197:52">=</operator> <name pos:start="197:54" pos:end="197:61"><name pos:start="197:54" pos:end="197:56">env</name><operator pos:start="197:57" pos:end="197:58">-&gt;</operator><name pos:start="197:59" pos:end="197:61">eip</name></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="199:19" pos:end="205:17">else <block pos:start="199:24" pos:end="205:17">{<block_content pos:start="201:21" pos:end="203:55">

                    <expr_stmt pos:start="201:21" pos:end="201:52"><expr pos:start="201:21" pos:end="201:51"><name pos:start="201:21" pos:end="201:32"><name pos:start="201:21" pos:end="201:24">info</name><operator pos:start="201:25" pos:end="201:25">.</operator><name pos:start="201:26" pos:end="201:32">si_code</name></name> <operator pos:start="201:34" pos:end="201:34">=</operator> <name pos:start="201:36" pos:end="201:51">TARGET_SI_KERNEL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:55"><expr pos:start="203:21" pos:end="203:54"><name pos:start="203:21" pos:end="203:50"><name pos:start="203:21" pos:end="203:24">info</name><operator pos:start="203:25" pos:end="203:25">.</operator><name pos:start="203:26" pos:end="203:34">_sifields</name><operator pos:start="203:35" pos:end="203:35">.</operator><name pos:start="203:36" pos:end="203:44">_sigfault</name><operator pos:start="203:45" pos:end="203:45">.</operator><name pos:start="203:46" pos:end="203:50">_addr</name></name> <operator pos:start="203:52" pos:end="203:52">=</operator> <literal type="number" pos:start="203:54" pos:end="203:54">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:56"><expr pos:start="207:17" pos:end="207:55"><call pos:start="207:17" pos:end="207:55"><name pos:start="207:17" pos:end="207:28">queue_signal</name><argument_list pos:start="207:29" pos:end="207:55">(<argument pos:start="207:30" pos:end="207:32"><expr pos:start="207:30" pos:end="207:32"><name pos:start="207:30" pos:end="207:32">env</name></expr></argument>, <argument pos:start="207:35" pos:end="207:47"><expr pos:start="207:35" pos:end="207:47"><name pos:start="207:35" pos:end="207:47"><name pos:start="207:35" pos:end="207:38">info</name><operator pos:start="207:39" pos:end="207:39">.</operator><name pos:start="207:40" pos:end="207:47">si_signo</name></name></expr></argument>, <argument pos:start="207:50" pos:end="207:54"><expr pos:start="207:50" pos:end="207:54"><operator pos:start="207:50" pos:end="207:50">&amp;</operator><name pos:start="207:51" pos:end="207:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        <case pos:start="213:9" pos:end="213:25">case <expr pos:start="213:14" pos:end="213:24"><name pos:start="213:14" pos:end="213:24">EXCP04_INTO</name></expr>:</case>

        <case pos:start="215:9" pos:end="218:0">case <expr pos:start="215:14" pos:end="215:25"><name pos:start="215:14" pos:end="215:25">EXCP05_BOUND</name></expr>:</case>

<cpp:ifndef pos:start="217:1" pos:end="217:21">#<cpp:directive pos:start="217:2" pos:end="217:7">ifndef</cpp:directive> <name pos:start="217:9" pos:end="217:21">TARGET_X86_64</name></cpp:ifndef>

            <if_stmt pos:start="219:13" pos:end="239:13"><if pos:start="219:13" pos:end="223:13">if <condition pos:start="219:16" pos:end="219:38">(<expr pos:start="219:17" pos:end="219:37"><name pos:start="219:17" pos:end="219:27"><name pos:start="219:17" pos:end="219:19">env</name><operator pos:start="219:20" pos:end="219:21">-&gt;</operator><name pos:start="219:22" pos:end="219:27">eflags</name></name> <operator pos:start="219:29" pos:end="219:29">&amp;</operator> <name pos:start="219:31" pos:end="219:37">VM_MASK</name></expr>)</condition> <block pos:start="219:40" pos:end="223:13">{<block_content pos:start="221:17" pos:end="221:46">

                <expr_stmt pos:start="221:17" pos:end="221:46"><expr pos:start="221:17" pos:end="221:45"><call pos:start="221:17" pos:end="221:45"><name pos:start="221:17" pos:end="221:32">handle_vm86_trap</name><argument_list pos:start="221:33" pos:end="221:45">(<argument pos:start="221:34" pos:end="221:36"><expr pos:start="221:34" pos:end="221:36"><name pos:start="221:34" pos:end="221:36">env</name></expr></argument>, <argument pos:start="221:39" pos:end="221:44"><expr pos:start="221:39" pos:end="221:44"><name pos:start="221:39" pos:end="221:44">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="223:15" pos:end="239:13">else

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif>

            <block pos:start="227:13" pos:end="239:13">{<block_content pos:start="229:17" pos:end="237:56">

                <expr_stmt pos:start="229:17" pos:end="229:47"><expr pos:start="229:17" pos:end="229:46"><name pos:start="229:17" pos:end="229:29"><name pos:start="229:17" pos:end="229:20">info</name><operator pos:start="229:21" pos:end="229:21">.</operator><name pos:start="229:22" pos:end="229:29">si_signo</name></name> <operator pos:start="229:31" pos:end="229:31">=</operator> <name pos:start="229:33" pos:end="229:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:34"><expr pos:start="231:17" pos:end="231:33"><name pos:start="231:17" pos:end="231:29"><name pos:start="231:17" pos:end="231:20">info</name><operator pos:start="231:21" pos:end="231:21">.</operator><name pos:start="231:22" pos:end="231:29">si_errno</name></name> <operator pos:start="231:31" pos:end="231:31">=</operator> <literal type="number" pos:start="231:33" pos:end="231:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:48"><expr pos:start="233:17" pos:end="233:47"><name pos:start="233:17" pos:end="233:28"><name pos:start="233:17" pos:end="233:20">info</name><operator pos:start="233:21" pos:end="233:21">.</operator><name pos:start="233:22" pos:end="233:28">si_code</name></name> <operator pos:start="233:30" pos:end="233:30">=</operator> <name pos:start="233:32" pos:end="233:47">TARGET_SI_KERNEL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:51"><expr pos:start="235:17" pos:end="235:50"><name pos:start="235:17" pos:end="235:46"><name pos:start="235:17" pos:end="235:20">info</name><operator pos:start="235:21" pos:end="235:21">.</operator><name pos:start="235:22" pos:end="235:30">_sifields</name><operator pos:start="235:31" pos:end="235:31">.</operator><name pos:start="235:32" pos:end="235:40">_sigfault</name><operator pos:start="235:41" pos:end="235:41">.</operator><name pos:start="235:42" pos:end="235:46">_addr</name></name> <operator pos:start="235:48" pos:end="235:48">=</operator> <literal type="number" pos:start="235:50" pos:end="235:50">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="237:17" pos:end="237:56"><expr pos:start="237:17" pos:end="237:55"><call pos:start="237:17" pos:end="237:55"><name pos:start="237:17" pos:end="237:28">queue_signal</name><argument_list pos:start="237:29" pos:end="237:55">(<argument pos:start="237:30" pos:end="237:32"><expr pos:start="237:30" pos:end="237:32"><name pos:start="237:30" pos:end="237:32">env</name></expr></argument>, <argument pos:start="237:35" pos:end="237:47"><expr pos:start="237:35" pos:end="237:47"><name pos:start="237:35" pos:end="237:47"><name pos:start="237:35" pos:end="237:38">info</name><operator pos:start="237:39" pos:end="237:39">.</operator><name pos:start="237:40" pos:end="237:47">si_signo</name></name></expr></argument>, <argument pos:start="237:50" pos:end="237:54"><expr pos:start="237:50" pos:end="237:54"><operator pos:start="237:50" pos:end="237:50">&amp;</operator><name pos:start="237:51" pos:end="237:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <case pos:start="243:9" pos:end="243:26">case <expr pos:start="243:14" pos:end="243:25"><name pos:start="243:14" pos:end="243:25">EXCP06_ILLOP</name></expr>:</case>

            <expr_stmt pos:start="245:13" pos:end="245:42"><expr pos:start="245:13" pos:end="245:41"><name pos:start="245:13" pos:end="245:25"><name pos:start="245:13" pos:end="245:16">info</name><operator pos:start="245:17" pos:end="245:17">.</operator><name pos:start="245:18" pos:end="245:25">si_signo</name></name> <operator pos:start="245:27" pos:end="245:27">=</operator> <name pos:start="245:29" pos:end="245:41">TARGET_SIGILL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:30"><expr pos:start="247:13" pos:end="247:29"><name pos:start="247:13" pos:end="247:25"><name pos:start="247:13" pos:end="247:16">info</name><operator pos:start="247:17" pos:end="247:17">.</operator><name pos:start="247:18" pos:end="247:25">si_errno</name></name> <operator pos:start="247:27" pos:end="247:27">=</operator> <literal type="number" pos:start="247:29" pos:end="247:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:45"><expr pos:start="249:13" pos:end="249:44"><name pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:16">info</name><operator pos:start="249:17" pos:end="249:17">.</operator><name pos:start="249:18" pos:end="249:24">si_code</name></name> <operator pos:start="249:26" pos:end="249:26">=</operator> <name pos:start="249:28" pos:end="249:44">TARGET_ILL_ILLOPN</name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:54"><expr pos:start="251:13" pos:end="251:53"><name pos:start="251:13" pos:end="251:42"><name pos:start="251:13" pos:end="251:16">info</name><operator pos:start="251:17" pos:end="251:17">.</operator><name pos:start="251:18" pos:end="251:26">_sifields</name><operator pos:start="251:27" pos:end="251:27">.</operator><name pos:start="251:28" pos:end="251:36">_sigfault</name><operator pos:start="251:37" pos:end="251:37">.</operator><name pos:start="251:38" pos:end="251:42">_addr</name></name> <operator pos:start="251:44" pos:end="251:44">=</operator> <name pos:start="251:46" pos:end="251:53"><name pos:start="251:46" pos:end="251:48">env</name><operator pos:start="251:49" pos:end="251:50">-&gt;</operator><name pos:start="251:51" pos:end="251:53">eip</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:52"><expr pos:start="253:13" pos:end="253:51"><call pos:start="253:13" pos:end="253:51"><name pos:start="253:13" pos:end="253:24">queue_signal</name><argument_list pos:start="253:25" pos:end="253:51">(<argument pos:start="253:26" pos:end="253:28"><expr pos:start="253:26" pos:end="253:28"><name pos:start="253:26" pos:end="253:28">env</name></expr></argument>, <argument pos:start="253:31" pos:end="253:43"><expr pos:start="253:31" pos:end="253:43"><name pos:start="253:31" pos:end="253:43"><name pos:start="253:31" pos:end="253:34">info</name><operator pos:start="253:35" pos:end="253:35">.</operator><name pos:start="253:36" pos:end="253:43">si_signo</name></name></expr></argument>, <argument pos:start="253:46" pos:end="253:50"><expr pos:start="253:46" pos:end="253:50"><operator pos:start="253:46" pos:end="253:46">&amp;</operator><name pos:start="253:47" pos:end="253:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        <case pos:start="257:9" pos:end="257:28">case <expr pos:start="257:14" pos:end="257:27"><name pos:start="257:14" pos:end="257:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="259:13" pos:end="259:67">/* just indicate that signals should be handled asap */</comment>

            <break pos:start="261:13" pos:end="261:18">break;</break>

        <case pos:start="263:9" pos:end="263:24">case <expr pos:start="263:14" pos:end="263:23"><name pos:start="263:14" pos:end="263:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="265:13" pos:end="287:13">{<block_content pos:start="267:17" pos:end="285:19">

                <decl_stmt pos:start="267:17" pos:end="267:24"><decl pos:start="267:17" pos:end="267:23"><type pos:start="267:17" pos:end="267:19"><name pos:start="267:17" pos:end="267:19">int</name></type> <name pos:start="267:21" pos:end="267:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="271:17" pos:end="271:56"><expr pos:start="271:17" pos:end="271:55"><name pos:start="271:17" pos:end="271:19">sig</name> <operator pos:start="271:21" pos:end="271:21">=</operator> <call pos:start="271:23" pos:end="271:55"><name pos:start="271:23" pos:end="271:35">gdb_handlesig</name><argument_list pos:start="271:36" pos:end="271:55">(<argument pos:start="271:37" pos:end="271:38"><expr pos:start="271:37" pos:end="271:38"><name pos:start="271:37" pos:end="271:38">cs</name></expr></argument>, <argument pos:start="271:41" pos:end="271:54"><expr pos:start="271:41" pos:end="271:54"><name pos:start="271:41" pos:end="271:54">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="273:17" pos:end="285:19"><if pos:start="273:17" pos:end="285:19">if <condition pos:start="273:20" pos:end="273:24">(<expr pos:start="273:21" pos:end="273:23"><name pos:start="273:21" pos:end="273:23">sig</name></expr>)</condition>

                  <block pos:start="275:19" pos:end="285:19">{<block_content pos:start="277:21" pos:end="283:60">

                    <expr_stmt pos:start="277:21" pos:end="277:40"><expr pos:start="277:21" pos:end="277:39"><name pos:start="277:21" pos:end="277:33"><name pos:start="277:21" pos:end="277:24">info</name><operator pos:start="277:25" pos:end="277:25">.</operator><name pos:start="277:26" pos:end="277:33">si_signo</name></name> <operator pos:start="277:35" pos:end="277:35">=</operator> <name pos:start="277:37" pos:end="277:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="279:21" pos:end="279:38"><expr pos:start="279:21" pos:end="279:37"><name pos:start="279:21" pos:end="279:33"><name pos:start="279:21" pos:end="279:24">info</name><operator pos:start="279:25" pos:end="279:25">.</operator><name pos:start="279:26" pos:end="279:33">si_errno</name></name> <operator pos:start="279:35" pos:end="279:35">=</operator> <literal type="number" pos:start="279:37" pos:end="279:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="281:21" pos:end="281:53"><expr pos:start="281:21" pos:end="281:52"><name pos:start="281:21" pos:end="281:32"><name pos:start="281:21" pos:end="281:24">info</name><operator pos:start="281:25" pos:end="281:25">.</operator><name pos:start="281:26" pos:end="281:32">si_code</name></name> <operator pos:start="281:34" pos:end="281:34">=</operator> <name pos:start="281:36" pos:end="281:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="283:21" pos:end="283:60"><expr pos:start="283:21" pos:end="283:59"><call pos:start="283:21" pos:end="283:59"><name pos:start="283:21" pos:end="283:32">queue_signal</name><argument_list pos:start="283:33" pos:end="283:59">(<argument pos:start="283:34" pos:end="283:36"><expr pos:start="283:34" pos:end="283:36"><name pos:start="283:34" pos:end="283:36">env</name></expr></argument>, <argument pos:start="283:39" pos:end="283:51"><expr pos:start="283:39" pos:end="283:51"><name pos:start="283:39" pos:end="283:51"><name pos:start="283:39" pos:end="283:42">info</name><operator pos:start="283:43" pos:end="283:43">.</operator><name pos:start="283:44" pos:end="283:51">si_signo</name></name></expr></argument>, <argument pos:start="283:54" pos:end="283:58"><expr pos:start="283:54" pos:end="283:58"><operator pos:start="283:54" pos:end="283:54">&amp;</operator><name pos:start="283:55" pos:end="283:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="289:13" pos:end="289:18">break;</break>

        <default pos:start="291:9" pos:end="291:16">default:</default>

            <expr_stmt pos:start="293:13" pos:end="293:49"><expr pos:start="293:13" pos:end="293:48"><name pos:start="293:13" pos:end="293:14">pc</name> <operator pos:start="293:16" pos:end="293:16">=</operator> <name pos:start="293:18" pos:end="293:32"><name pos:start="293:18" pos:end="293:20">env</name><operator pos:start="293:21" pos:end="293:22">-&gt;</operator><name pos:start="293:23" pos:end="293:26">segs</name><index pos:start="293:27" pos:end="293:32">[<expr pos:start="293:28" pos:end="293:31"><name pos:start="293:28" pos:end="293:31">R_CS</name></expr>]</index></name><operator pos:start="293:33" pos:end="293:33">.</operator><name pos:start="293:34" pos:end="293:37">base</name> <operator pos:start="293:39" pos:end="293:39">+</operator> <name pos:start="293:41" pos:end="293:48"><name pos:start="293:41" pos:end="293:43">env</name><operator pos:start="293:44" pos:end="293:45">-&gt;</operator><name pos:start="293:46" pos:end="293:48">eip</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="297:40"><expr pos:start="295:13" pos:end="297:39"><call pos:start="295:13" pos:end="297:39"><name pos:start="295:13" pos:end="295:21">EXCP_DUMP</name><argument_list pos:start="295:22" pos:end="297:39">(<argument pos:start="295:23" pos:end="295:25"><expr pos:start="295:23" pos:end="295:25"><name pos:start="295:23" pos:end="295:25">env</name></expr></argument>, <argument pos:start="295:28" pos:end="295:85"><expr pos:start="295:28" pos:end="295:85"><literal type="string" pos:start="295:28" pos:end="295:85">"qemu: 0x%08lx: unhandled CPU exception 0x%x - aborting\n"</literal></expr></argument>,

                      <argument pos:start="297:23" pos:end="297:30"><expr pos:start="297:23" pos:end="297:30"><operator pos:start="297:23" pos:end="297:23">(</operator><name pos:start="297:24" pos:end="297:27">long</name><operator pos:start="297:28" pos:end="297:28">)</operator><name pos:start="297:29" pos:end="297:30">pc</name></expr></argument>, <argument pos:start="297:33" pos:end="297:38"><expr pos:start="297:33" pos:end="297:38"><name pos:start="297:33" pos:end="297:38">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:20"><expr pos:start="299:13" pos:end="299:19"><call pos:start="299:13" pos:end="299:19"><name pos:start="299:13" pos:end="299:17">abort</name><argument_list pos:start="299:18" pos:end="299:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="303:9" pos:end="303:37"><expr pos:start="303:9" pos:end="303:36"><call pos:start="303:9" pos:end="303:36"><name pos:start="303:9" pos:end="303:31">process_pending_signals</name><argument_list pos:start="303:32" pos:end="303:36">(<argument pos:start="303:33" pos:end="303:35"><expr pos:start="303:33" pos:end="303:35"><name pos:start="303:33" pos:end="303:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
