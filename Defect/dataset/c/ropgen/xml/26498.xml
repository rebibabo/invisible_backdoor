<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26498.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:43"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">cpu_reset</name> <parameter_list pos:start="1:16" pos:end="1:34">(<parameter pos:start="1:17" pos:end="1:33"><decl pos:start="1:17" pos:end="1:33"><type pos:start="1:17" pos:end="1:30"><name pos:start="1:17" pos:end="1:28">CPUMIPSState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="35:43">{<block_content pos:start="3:5" pos:end="35:43">
    <expr_stmt pos:start="3:5" pos:end="3:56"><expr pos:start="3:5" pos:end="3:55"><call pos:start="3:5" pos:end="3:55"><name pos:start="3:5" pos:end="3:10">memset</name><argument_list pos:start="3:11" pos:end="3:55">(<argument pos:start="3:12" pos:end="3:14"><expr pos:start="3:12" pos:end="3:14"><name pos:start="3:12" pos:end="3:14">env</name></expr></argument>, <argument pos:start="3:17" pos:end="3:17"><expr pos:start="3:17" pos:end="3:17"><literal type="number" pos:start="3:17" pos:end="3:17">0</literal></expr></argument>, <argument pos:start="3:20" pos:end="3:54"><expr pos:start="3:20" pos:end="3:54"><call pos:start="3:20" pos:end="3:54"><name pos:start="3:20" pos:end="3:27">offsetof</name><argument_list pos:start="3:28" pos:end="3:54">(<argument pos:start="3:29" pos:end="3:40"><expr pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:40">CPUMIPSState</name></expr></argument>, <argument pos:start="3:43" pos:end="3:53"><expr pos:start="3:43" pos:end="3:53"><name pos:start="3:43" pos:end="3:53">breakpoints</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="4:5" pos:end="7:0"><expr pos:start="4:5" pos:end="4:21"><call pos:start="4:5" pos:end="4:21"><name pos:start="4:5" pos:end="4:13">tlb_flush</name><argument_list pos:start="4:14" pos:end="4:21">(<argument pos:start="4:15" pos:end="4:17"><expr pos:start="4:15" pos:end="4:17"><name pos:start="4:15" pos:end="4:17">env</name></expr></argument>, <argument pos:start="4:20" pos:end="4:20"><expr pos:start="4:20" pos:end="4:20"><literal type="number" pos:start="4:20" pos:end="4:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="5:5" pos:end="5:22">/* Minimal init */</comment>
<cpp:if pos:start="6:1" pos:end="6:29">#<cpp:directive pos:start="6:2" pos:end="6:3">if</cpp:directive> <expr pos:start="6:5" pos:end="6:29"><call pos:start="6:5" pos:end="6:29"><name pos:start="6:5" pos:end="6:11">defined</name><argument_list pos:start="6:12" pos:end="6:29">(<argument pos:start="6:13" pos:end="6:28"><expr pos:start="6:13" pos:end="6:28"><name pos:start="6:13" pos:end="6:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>
    <expr_stmt pos:start="7:5" pos:end="9:0"><expr pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:7">env</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:15">hflags</name></name> <operator pos:start="7:17" pos:end="7:17">=</operator> <name pos:start="7:19" pos:end="7:31">MIPS_HFLAG_UM</name></expr>;</expr_stmt>
<cpp:else pos:start="8:1" pos:end="8:5">#<cpp:directive pos:start="8:2" pos:end="8:5">else</cpp:directive></cpp:else>
    <if_stmt pos:start="9:5" pos:end="35:43"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:39">(<expr pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:11">env</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:19">hflags</name></name> <operator pos:start="9:21" pos:end="9:21">&amp;</operator> <name pos:start="9:23" pos:end="9:38">MIPS_HFLAG_BMASK</name></expr>)</condition> <block pos:start="9:41" pos:end="13:5">{<block_content pos:start="12:9" pos:end="12:50">
        <comment type="block" pos:start="10:9" pos:end="11:37">/* If the exception was raised from a delay slot,
           come back to the jump.  */</comment>
        <expr_stmt pos:start="12:9" pos:end="12:50"><expr pos:start="12:9" pos:end="12:49"><name pos:start="12:9" pos:end="12:25"><name pos:start="12:9" pos:end="12:11">env</name><operator pos:start="12:12" pos:end="12:13">-&gt;</operator><name pos:start="12:14" pos:end="12:25">CP0_ErrorEPC</name></name> <operator pos:start="12:27" pos:end="12:27">=</operator> <name pos:start="12:29" pos:end="12:45"><name pos:start="12:29" pos:end="12:31">env</name><operator pos:start="12:32" pos:end="12:33">-&gt;</operator><name pos:start="12:34" pos:end="12:42">active_tc</name><operator pos:start="12:43" pos:end="12:43">.</operator><name pos:start="12:44" pos:end="12:45">PC</name></name> <operator pos:start="12:47" pos:end="12:47">-</operator> <literal type="number" pos:start="12:49" pos:end="12:49">4</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="13:7" pos:end="35:43">else <block pos:start="13:12" pos:end="35:43">{<block_content pos:start="14:9" pos:end="35:43">
        <expr_stmt pos:start="14:9" pos:end="14:46"><expr pos:start="14:9" pos:end="14:45"><name pos:start="14:9" pos:end="14:25"><name pos:start="14:9" pos:end="14:11">env</name><operator pos:start="14:12" pos:end="14:13">-&gt;</operator><name pos:start="14:14" pos:end="14:25">CP0_ErrorEPC</name></name> <operator pos:start="14:27" pos:end="14:27">=</operator> <name pos:start="14:29" pos:end="14:45"><name pos:start="14:29" pos:end="14:31">env</name><operator pos:start="14:32" pos:end="14:33">-&gt;</operator><name pos:start="14:34" pos:end="14:42">active_tc</name><operator pos:start="14:43" pos:end="14:43">.</operator><name pos:start="14:44" pos:end="14:45">PC</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:7">env</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:18">active_tc</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:21">PC</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <operator pos:start="15:25" pos:end="15:25">(</operator><name pos:start="15:26" pos:end="15:32">int32_t</name><operator pos:start="15:33" pos:end="15:33">)</operator><literal type="number" pos:start="15:34" pos:end="15:43">0xBFC00000</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:23"><expr pos:start="16:5" pos:end="16:22"><name pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:7">env</name><operator pos:start="16:8" pos:end="16:9">-&gt;</operator><name pos:start="16:10" pos:end="16:18">CP0_Wired</name></name> <operator pos:start="16:20" pos:end="16:20">=</operator> <literal type="number" pos:start="16:22" pos:end="16:22">0</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="17:5" pos:end="17:29">/* SMP not implemented */</comment>
    <expr_stmt pos:start="18:5" pos:end="18:32"><expr pos:start="18:5" pos:end="18:31"><name pos:start="18:5" pos:end="18:18"><name pos:start="18:5" pos:end="18:7">env</name><operator pos:start="18:8" pos:end="18:9">-&gt;</operator><name pos:start="18:10" pos:end="18:18">CP0_EBase</name></name> <operator pos:start="18:20" pos:end="18:20">=</operator> <literal type="number" pos:start="18:22" pos:end="18:31">0x80000000</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:58"><expr pos:start="19:5" pos:end="19:57"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:7">env</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:19">CP0_Status</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <operator pos:start="19:23" pos:end="19:23">(</operator><literal type="number" pos:start="19:24" pos:end="19:24">1</literal> <operator pos:start="19:26" pos:end="19:27">&lt;&lt;</operator> <name pos:start="19:29" pos:end="19:37">CP0St_BEV</name><operator pos:start="19:38" pos:end="19:38">)</operator> <operator pos:start="19:40" pos:end="19:40">|</operator> <operator pos:start="19:42" pos:end="19:42">(</operator><literal type="number" pos:start="19:43" pos:end="19:43">1</literal> <operator pos:start="19:45" pos:end="19:46">&lt;&lt;</operator> <name pos:start="19:48" pos:end="19:56">CP0St_ERL</name><operator pos:start="19:57" pos:end="19:57">)</operator></expr>;</expr_stmt>
    <comment type="block" pos:start="20:5" pos:end="21:34">/* vectored interrupts not implemented, timer on int 7,
       no performance counters. */</comment>
    <expr_stmt pos:start="22:5" pos:end="22:33"><expr pos:start="22:5" pos:end="22:32"><name pos:start="22:5" pos:end="22:19"><name pos:start="22:5" pos:end="22:7">env</name><operator pos:start="22:8" pos:end="22:9">-&gt;</operator><name pos:start="22:10" pos:end="22:19">CP0_IntCtl</name></name> <operator pos:start="22:21" pos:end="22:21">=</operator> <literal type="number" pos:start="22:23" pos:end="22:32">0xe0000000</literal></expr>;</expr_stmt>
    <block pos:start="23:5" pos:end="35:43">{<block_content pos:start="24:9" pos:end="35:43">
        <decl_stmt pos:start="24:9" pos:end="24:14"><decl pos:start="24:9" pos:end="24:13"><type pos:start="24:9" pos:end="24:11"><name pos:start="24:9" pos:end="24:11">int</name></type> <name pos:start="24:13" pos:end="24:13">i</name></decl>;</decl_stmt>
        <for pos:start="25:9" pos:end="35:43">for <control pos:start="25:13" pos:end="25:31">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:26"><expr pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <literal type="number" pos:start="25:25" pos:end="25:25">7</literal></expr>;</condition> <incr pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:28">i</name><operator pos:start="25:29" pos:end="25:30">++</operator></expr></incr>)</control> <block pos:start="25:33" pos:end="35:43">{<block_content pos:start="26:13" pos:end="35:43">
            <expr_stmt pos:start="26:13" pos:end="26:36"><expr pos:start="26:13" pos:end="26:35"><name pos:start="26:13" pos:end="26:31"><name pos:start="26:13" pos:end="26:15">env</name><operator pos:start="26:16" pos:end="26:17">-&gt;</operator><name pos:start="26:18" pos:end="26:28">CP0_WatchLo</name><index pos:start="26:29" pos:end="26:31">[<expr pos:start="26:30" pos:end="26:30"><name pos:start="26:30" pos:end="26:30">i</name></expr>]</index></name> <operator pos:start="26:33" pos:end="26:33">=</operator> <literal type="number" pos:start="26:35" pos:end="26:35">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:45"><expr pos:start="27:13" pos:end="27:44"><name pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:15">env</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:28">CP0_WatchHi</name><index pos:start="27:29" pos:end="27:31">[<expr pos:start="27:30" pos:end="27:30"><name pos:start="27:30" pos:end="27:30">i</name></expr>]</index></name> <operator pos:start="27:33" pos:end="27:33">=</operator> <literal type="number" pos:start="27:35" pos:end="27:44">0x80000000</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:32"><expr pos:start="28:9" pos:end="28:31"><name pos:start="28:9" pos:end="28:27"><name pos:start="28:9" pos:end="28:11">env</name><operator pos:start="28:12" pos:end="28:13">-&gt;</operator><name pos:start="28:14" pos:end="28:24">CP0_WatchLo</name><index pos:start="28:25" pos:end="28:27">[<expr pos:start="28:26" pos:end="28:26"><literal type="number" pos:start="28:26" pos:end="28:26">7</literal></expr>]</index></name> <operator pos:start="28:29" pos:end="28:29">=</operator> <literal type="number" pos:start="28:31" pos:end="28:31">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:11">env</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:24">CP0_WatchHi</name><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">7</literal></expr>]</index></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="30:5" pos:end="30:66">/* Count register increments in debug mode, EJTAG version 1 */</comment>
    <expr_stmt pos:start="31:5" pos:end="31:59"><expr pos:start="31:5" pos:end="31:58"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:18">CP0_Debug</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">(</operator><literal type="number" pos:start="31:23" pos:end="31:23">1</literal> <operator pos:start="31:25" pos:end="31:26">&lt;&lt;</operator> <name pos:start="31:28" pos:end="31:36">CP0DB_CNT</name><operator pos:start="31:37" pos:end="31:37">)</operator> <operator pos:start="31:39" pos:end="31:39">|</operator> <operator pos:start="31:41" pos:end="31:41">(</operator><literal type="number" pos:start="31:42" pos:end="31:44">0x1</literal> <operator pos:start="31:46" pos:end="31:47">&lt;&lt;</operator> <name pos:start="31:49" pos:end="31:57">CP0DB_VER</name><operator pos:start="31:58" pos:end="31:58">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="34:0"><expr pos:start="32:5" pos:end="32:32"><name pos:start="32:5" pos:end="32:15"><name pos:start="32:5" pos:end="32:7">env</name><operator pos:start="32:8" pos:end="32:9">-&gt;</operator><name pos:start="32:10" pos:end="32:15">hflags</name></name> <operator pos:start="32:17" pos:end="32:17">=</operator> <name pos:start="32:19" pos:end="32:32">MIPS_HFLAG_CP0</name></expr>;</expr_stmt>
<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>
    <expr_stmt pos:start="34:5" pos:end="34:37"><expr pos:start="34:5" pos:end="34:36"><name pos:start="34:5" pos:end="34:24"><name pos:start="34:5" pos:end="34:7">env</name><operator pos:start="34:8" pos:end="34:9">-&gt;</operator><name pos:start="34:10" pos:end="34:24">exception_index</name></name> <operator pos:start="34:26" pos:end="34:26">=</operator> <name pos:start="34:28" pos:end="34:36">EXCP_NONE</name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><call pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:21">cpu_mips_register</name><argument_list pos:start="35:22" pos:end="35:42">(<argument pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:25">env</name></expr></argument>, <argument pos:start="35:28" pos:end="35:41"><expr pos:start="35:28" pos:end="35:41"><name pos:start="35:28" pos:end="35:41"><name pos:start="35:28" pos:end="35:30">env</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:41">cpu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></block_content></block></else></if_stmt></block_content></block></function></unit>
