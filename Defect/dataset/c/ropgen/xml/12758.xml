<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12758.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">pl181_init</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">SysBusDevice</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">sbd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">sbd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">PL181State</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:30">= <expr pos:start="7:21" pos:end="7:30"><call pos:start="7:21" pos:end="7:30"><name pos:start="7:21" pos:end="7:25">PL181</name><argument_list pos:start="7:26" pos:end="7:30">(<argument pos:start="7:27" pos:end="7:29"><expr pos:start="7:27" pos:end="7:29"><name pos:start="7:27" pos:end="7:29">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">DriveInfo</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">dinfo</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:80"><expr pos:start="13:5" pos:end="13:79"><call pos:start="13:5" pos:end="13:79"><name pos:start="13:5" pos:end="13:25">memory_region_init_io</name><argument_list pos:start="13:26" pos:end="13:79">(<argument pos:start="13:27" pos:end="13:35"><expr pos:start="13:27" pos:end="13:35"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:35"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:35">iomem</name></name></expr></argument>, <argument pos:start="13:38" pos:end="13:46"><expr pos:start="13:38" pos:end="13:46"><call pos:start="13:38" pos:end="13:46"><name pos:start="13:38" pos:end="13:43">OBJECT</name><argument_list pos:start="13:44" pos:end="13:46">(<argument pos:start="13:45" pos:end="13:45"><expr pos:start="13:45" pos:end="13:45"><name pos:start="13:45" pos:end="13:45">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:49" pos:end="13:58"><expr pos:start="13:49" pos:end="13:58"><operator pos:start="13:49" pos:end="13:49">&amp;</operator><name pos:start="13:50" pos:end="13:58">pl181_ops</name></expr></argument>, <argument pos:start="13:61" pos:end="13:61"><expr pos:start="13:61" pos:end="13:61"><name pos:start="13:61" pos:end="13:61">s</name></expr></argument>, <argument pos:start="13:64" pos:end="13:70"><expr pos:start="13:64" pos:end="13:70"><literal type="string" pos:start="13:64" pos:end="13:70">"pl181"</literal></expr></argument>, <argument pos:start="13:73" pos:end="13:78"><expr pos:start="13:73" pos:end="13:78"><literal type="number" pos:start="13:73" pos:end="13:78">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><call pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:20">sysbus_init_mmio</name><argument_list pos:start="15:21" pos:end="15:36">(<argument pos:start="15:22" pos:end="15:24"><expr pos:start="15:22" pos:end="15:24"><name pos:start="15:22" pos:end="15:24">sbd</name></expr></argument>, <argument pos:start="15:27" pos:end="15:35"><expr pos:start="15:27" pos:end="15:35"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:35"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:35">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:19">sysbus_init_irq</name><argument_list pos:start="17:20" pos:end="17:36">(<argument pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:23">sbd</name></expr></argument>, <argument pos:start="17:26" pos:end="17:35"><expr pos:start="17:26" pos:end="17:35"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:35"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:32">irq</name><index pos:start="17:33" pos:end="17:35">[<expr pos:start="17:34" pos:end="17:34"><literal type="number" pos:start="17:34" pos:end="17:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><call pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:19">sysbus_init_irq</name><argument_list pos:start="19:20" pos:end="19:36">(<argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:23">sbd</name></expr></argument>, <argument pos:start="19:26" pos:end="19:35"><expr pos:start="19:26" pos:end="19:35"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:27">s</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:32">irq</name><index pos:start="19:33" pos:end="19:35">[<expr pos:start="19:34" pos:end="19:34"><literal type="number" pos:start="19:34" pos:end="19:34">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><call pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:22">qdev_init_gpio_out</name><argument_list pos:start="21:23" pos:end="21:45">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">dev</name></expr></argument>, <argument pos:start="21:29" pos:end="21:41"><expr pos:start="21:29" pos:end="21:41"><name pos:start="21:29" pos:end="21:41"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:41">cardstatus</name></name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:9">dinfo</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:26">drive_get_next</name><argument_list pos:start="23:27" pos:end="23:33">(<argument pos:start="23:28" pos:end="23:32"><expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:32">IF_SD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:80"><expr pos:start="25:5" pos:end="25:79"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">card</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:79"><name pos:start="25:15" pos:end="25:21">sd_init</name><argument_list pos:start="25:22" pos:end="25:79">(<argument pos:start="25:23" pos:end="25:71"><expr pos:start="25:23" pos:end="25:71"><ternary pos:start="25:23" pos:end="25:71"><condition pos:start="25:23" pos:end="25:29"><expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27">dinfo</name></expr> ?</condition><then pos:start="25:31" pos:end="25:64"> <expr pos:start="25:31" pos:end="25:64"><call pos:start="25:31" pos:end="25:64"><name pos:start="25:31" pos:end="25:36">blk_bs</name><argument_list pos:start="25:37" pos:end="25:64">(<argument pos:start="25:38" pos:end="25:63"><expr pos:start="25:38" pos:end="25:63"><call pos:start="25:38" pos:end="25:63"><name pos:start="25:38" pos:end="25:56">blk_by_legacy_dinfo</name><argument_list pos:start="25:57" pos:end="25:63">(<argument pos:start="25:58" pos:end="25:62"><expr pos:start="25:58" pos:end="25:62"><name pos:start="25:58" pos:end="25:62">dinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else pos:start="25:66" pos:end="25:71">: <expr pos:start="25:68" pos:end="25:71"><name pos:start="25:68" pos:end="25:71">NULL</name></expr></else></ternary></expr></argument>, <argument pos:start="25:74" pos:end="25:78"><expr pos:start="25:74" pos:end="25:78"><name pos:start="25:74" pos:end="25:78">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">card</name></name> <operator pos:start="27:17" pos:end="27:18">==</operator> <name pos:start="27:20" pos:end="27:23">NULL</name></expr>)</condition> <block pos:start="27:26" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
