<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2851.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vorbis_encode_frame</name><parameter_list pos:start="1:31" pos:end="3:73">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:62">AVPacket</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avpkt</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:51"><decl pos:start="3:32" pos:end="3:51"><type pos:start="3:32" pos:end="3:51"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:44">AVFrame</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:51">frame</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:72"><decl pos:start="3:54" pos:end="3:72"><type pos:start="3:54" pos:end="3:72"><name pos:start="3:54" pos:end="3:56">int</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:72">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:13">

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">vorbis_enc_context</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:28">venc</name> <init pos:start="7:30" pos:end="7:47">= <expr pos:start="7:32" pos:end="7:47"><name pos:start="7:32" pos:end="7:47"><name pos:start="7:32" pos:end="7:36">avctx</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>, <decl pos:start="9:17" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:25">need_more</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">frame_size</name> <init pos:start="11:20" pos:end="11:55">= <expr pos:start="11:22" pos:end="11:55"><literal type="number" pos:start="11:22" pos:end="11:22">1</literal> <operator pos:start="11:24" pos:end="11:25">&lt;&lt;</operator> <operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:50"><name pos:start="11:28" pos:end="11:31">venc</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:47">log2_blocksize</name><index pos:start="11:48" pos:end="11:50">[<expr pos:start="11:49" pos:end="11:49"><literal type="number" pos:start="11:49" pos:end="11:49">1</literal></expr>]</index></name> <operator pos:start="11:52" pos:end="11:52">-</operator> <literal type="number" pos:start="11:54" pos:end="11:54">1</literal><operator pos:start="11:55" pos:end="11:55">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">vorbis_enc_mode</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:25">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:22">vorbis_enc_mapping</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:31">mapping</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:17">PutBitContext</name></type> <name pos:start="17:19" pos:end="17:20">pb</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="33:21"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:13">frame</name></expr>)</condition> <block pos:start="21:16" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:71">

        <if_stmt pos:start="23:9" pos:end="25:23"><if pos:start="23:9" pos:end="25:23">if <condition pos:start="23:12" pos:end="23:59">(<expr pos:start="23:13" pos:end="23:58"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:16">ret</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:53"><name pos:start="23:20" pos:end="23:34">ff_af_queue_add</name><argument_list pos:start="23:35" pos:end="23:53">(<argument pos:start="23:36" pos:end="23:45"><expr pos:start="23:36" pos:end="23:45"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:45"><name pos:start="23:37" pos:end="23:40">venc</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:45">afq</name></name></expr></argument>, <argument pos:start="23:48" pos:end="23:52"><expr pos:start="23:48" pos:end="23:52"><name pos:start="23:48" pos:end="23:52">frame</name></expr></argument>)</argument_list></call><operator pos:start="23:54" pos:end="23:54">)</operator> <operator pos:start="23:56" pos:end="23:56">&lt;</operator> <literal type="number" pos:start="23:58" pos:end="23:58">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:23"><block_content pos:start="25:13" pos:end="25:23">

            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:71"><expr pos:start="27:9" pos:end="27:70"><call pos:start="27:9" pos:end="27:70"><name pos:start="27:9" pos:end="27:23">ff_bufqueue_add</name><argument_list pos:start="27:24" pos:end="27:70">(<argument pos:start="27:25" pos:end="27:29"><expr pos:start="27:25" pos:end="27:29"><name pos:start="27:25" pos:end="27:29">avctx</name></expr></argument>, <argument pos:start="27:32" pos:end="27:46"><expr pos:start="27:32" pos:end="27:46"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:46"><name pos:start="27:33" pos:end="27:36">venc</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:46">bufqueue</name></name></expr></argument>, <argument pos:start="27:49" pos:end="27:69"><expr pos:start="27:49" pos:end="27:69"><call pos:start="27:49" pos:end="27:69"><name pos:start="27:49" pos:end="27:62">av_frame_clone</name><argument_list pos:start="27:63" pos:end="27:69">(<argument pos:start="27:64" pos:end="27:68"><expr pos:start="27:64" pos:end="27:68"><name pos:start="27:64" pos:end="27:68">frame</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="33:21">else

        if <condition pos:start="31:12" pos:end="31:41">(<expr pos:start="31:13" pos:end="31:40"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:40"><name pos:start="31:14" pos:end="31:17">venc</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:22">afq</name><operator pos:start="31:23" pos:end="31:23">.</operator><name pos:start="31:24" pos:end="31:40">remaining_samples</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:21"><block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:74"><expr pos:start="37:5" pos:end="37:73"><name pos:start="37:5" pos:end="37:13">need_more</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:40"><name pos:start="37:17" pos:end="37:20">venc</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:30">bufqueue</name><operator pos:start="37:31" pos:end="37:31">.</operator><name pos:start="37:32" pos:end="37:40">available</name></name> <operator pos:start="37:42" pos:end="37:42">*</operator> <name pos:start="37:44" pos:end="37:60"><name pos:start="37:44" pos:end="37:48">avctx</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:60">frame_size</name></name> <operator pos:start="37:62" pos:end="37:62">&lt;</operator> <name pos:start="37:64" pos:end="37:73">frame_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:13">need_more</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:21">frame</name> <operator pos:start="39:23" pos:end="39:24">&amp;&amp;</operator> <name pos:start="39:26" pos:end="39:34">need_more</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:17"><if pos:start="41:5" pos:end="43:17">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:17">need_more</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:17"><block_content pos:start="43:9" pos:end="43:17">

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:74">/* Pad the bufqueue with empty frames for encoding the last packet. */</comment>

    <if_stmt pos:start="49:5" pos:end="75:5"><if pos:start="49:5" pos:end="75:5">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:14">frame</name></expr>)</condition> <block pos:start="49:17" pos:end="75:5">{<block_content pos:start="51:9" pos:end="73:9">

        <if_stmt pos:start="51:9" pos:end="73:9"><if pos:start="51:9" pos:end="73:9">if <condition pos:start="51:12" pos:end="51:70">(<expr pos:start="51:13" pos:end="51:69"><name pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:16">venc</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:26">bufqueue</name><operator pos:start="51:27" pos:end="51:27">.</operator><name pos:start="51:28" pos:end="51:36">available</name></name> <operator pos:start="51:38" pos:end="51:38">*</operator> <name pos:start="51:40" pos:end="51:56"><name pos:start="51:40" pos:end="51:44">avctx</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:56">frame_size</name></name> <operator pos:start="51:58" pos:end="51:58">&lt;</operator> <name pos:start="51:60" pos:end="51:69">frame_size</name></expr>)</condition> <block pos:start="51:72" pos:end="73:9">{<block_content pos:start="53:13" pos:end="71:13">

            <decl_stmt pos:start="53:13" pos:end="53:90"><decl pos:start="53:13" pos:end="53:89"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:29">frames_needed</name> <init pos:start="53:31" pos:end="53:89">= <expr pos:start="53:33" pos:end="53:89"><operator pos:start="53:33" pos:end="53:33">(</operator><name pos:start="53:34" pos:end="53:43">frame_size</name><operator pos:start="53:44" pos:end="53:44">/</operator><name pos:start="53:45" pos:end="53:61"><name pos:start="53:45" pos:end="53:49">avctx</name><operator pos:start="53:50" pos:end="53:51">-&gt;</operator><name pos:start="53:52" pos:end="53:61">frame_size</name></name><operator pos:start="53:62" pos:end="53:62">)</operator> <operator pos:start="53:64" pos:end="53:64">-</operator> <name pos:start="53:66" pos:end="53:89"><name pos:start="53:66" pos:end="53:69">venc</name><operator pos:start="53:70" pos:end="53:71">-&gt;</operator><name pos:start="53:72" pos:end="53:79">bufqueue</name><operator pos:start="53:80" pos:end="53:80">.</operator><name pos:start="53:81" pos:end="53:89">available</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:18"><decl pos:start="55:13" pos:end="55:17"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:17">i</name></decl>;</decl_stmt>



            <for pos:start="59:13" pos:end="71:13">for <control pos:start="59:17" pos:end="59:47">(<init pos:start="59:18" pos:end="59:23"><expr pos:start="59:18" pos:end="59:22"><name pos:start="59:18" pos:end="59:18">i</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</init> <condition pos:start="59:25" pos:end="59:42"><expr pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:25">i</name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <name pos:start="59:29" pos:end="59:41">frames_needed</name></expr>;</condition> <incr pos:start="59:44" pos:end="59:46"><expr pos:start="59:44" pos:end="59:46"><name pos:start="59:44" pos:end="59:44">i</name><operator pos:start="59:45" pos:end="59:46">++</operator></expr></incr>)</control> <block pos:start="59:49" pos:end="71:13">{<block_content pos:start="61:16" pos:end="69:62">

               <decl_stmt pos:start="61:16" pos:end="61:73"><decl pos:start="61:16" pos:end="61:72"><type pos:start="61:16" pos:end="61:24"><name pos:start="61:16" pos:end="61:22">AVFrame</name> <modifier pos:start="61:24" pos:end="61:24">*</modifier></type><name pos:start="61:25" pos:end="61:29">empty</name> <init pos:start="61:31" pos:end="61:72">= <expr pos:start="61:33" pos:end="61:72"><call pos:start="61:33" pos:end="61:72"><name pos:start="61:33" pos:end="61:49">spawn_empty_frame</name><argument_list pos:start="61:50" pos:end="61:72">(<argument pos:start="61:51" pos:end="61:55"><expr pos:start="61:51" pos:end="61:55"><name pos:start="61:51" pos:end="61:55">avctx</name></expr></argument>, <argument pos:start="61:58" pos:end="61:71"><expr pos:start="61:58" pos:end="61:71"><name pos:start="61:58" pos:end="61:71"><name pos:start="61:58" pos:end="61:61">venc</name><operator pos:start="61:62" pos:end="61:63">-&gt;</operator><name pos:start="61:64" pos:end="61:71">channels</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

               <if_stmt pos:start="63:16" pos:end="65:42"><if pos:start="63:16" pos:end="65:42">if <condition pos:start="63:19" pos:end="63:26">(<expr pos:start="63:20" pos:end="63:25"><operator pos:start="63:20" pos:end="63:20">!</operator><name pos:start="63:21" pos:end="63:25">empty</name></expr>)</condition><block type="pseudo" pos:start="65:20" pos:end="65:42"><block_content pos:start="65:20" pos:end="65:42">

                   <return pos:start="65:20" pos:end="65:42">return <expr pos:start="65:27" pos:end="65:41"><call pos:start="65:27" pos:end="65:41"><name pos:start="65:27" pos:end="65:33">AVERROR</name><argument_list pos:start="65:34" pos:end="65:41">(<argument pos:start="65:35" pos:end="65:40"><expr pos:start="65:35" pos:end="65:40"><name pos:start="65:35" pos:end="65:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



               <expr_stmt pos:start="69:16" pos:end="69:62"><expr pos:start="69:16" pos:end="69:61"><call pos:start="69:16" pos:end="69:61"><name pos:start="69:16" pos:end="69:30">ff_bufqueue_add</name><argument_list pos:start="69:31" pos:end="69:61">(<argument pos:start="69:32" pos:end="69:36"><expr pos:start="69:32" pos:end="69:36"><name pos:start="69:32" pos:end="69:36">avctx</name></expr></argument>, <argument pos:start="69:39" pos:end="69:53"><expr pos:start="69:39" pos:end="69:53"><operator pos:start="69:39" pos:end="69:39">&amp;</operator><name pos:start="69:40" pos:end="69:53"><name pos:start="69:40" pos:end="69:43">venc</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:53">bufqueue</name></name></expr></argument>, <argument pos:start="69:56" pos:end="69:60"><expr pos:start="69:56" pos:end="69:60"><name pos:start="69:56" pos:end="69:60">empty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:40"><expr pos:start="79:5" pos:end="79:39"><call pos:start="79:5" pos:end="79:39"><name pos:start="79:5" pos:end="79:14">move_audio</name><argument_list pos:start="79:15" pos:end="79:39">(<argument pos:start="79:16" pos:end="79:19"><expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:19">venc</name></expr></argument>, <argument pos:start="79:22" pos:end="79:38"><expr pos:start="79:22" pos:end="79:38"><name pos:start="79:22" pos:end="79:38"><name pos:start="79:22" pos:end="79:26">avctx</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:38">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="85:17"><if pos:start="83:5" pos:end="85:17">if <condition pos:start="83:8" pos:end="83:37">(<expr pos:start="83:9" pos:end="83:36"><operator pos:start="83:9" pos:end="83:9">!</operator><call pos:start="83:10" pos:end="83:36"><name pos:start="83:10" pos:end="83:30">apply_window_and_mdct</name><argument_list pos:start="83:31" pos:end="83:36">(<argument pos:start="83:32" pos:end="83:35"><expr pos:start="83:32" pos:end="83:35"><name pos:start="83:32" pos:end="83:35">venc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:17"><block_content pos:start="85:9" pos:end="85:17">

        <return pos:start="85:9" pos:end="85:17">return <expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:19"><if pos:start="89:5" pos:end="91:19">if <condition pos:start="89:8" pos:end="89:60">(<expr pos:start="89:9" pos:end="89:59"><operator pos:start="89:9" pos:end="89:9">(</operator><name pos:start="89:10" pos:end="89:12">ret</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:54"><name pos:start="89:16" pos:end="89:31">ff_alloc_packet2</name><argument_list pos:start="89:32" pos:end="89:54">(<argument pos:start="89:33" pos:end="89:37"><expr pos:start="89:33" pos:end="89:37"><name pos:start="89:33" pos:end="89:37">avctx</name></expr></argument>, <argument pos:start="89:40" pos:end="89:44"><expr pos:start="89:40" pos:end="89:44"><name pos:start="89:40" pos:end="89:44">avpkt</name></expr></argument>, <argument pos:start="89:47" pos:end="89:50"><expr pos:start="89:47" pos:end="89:50"><literal type="number" pos:start="89:47" pos:end="89:50">8192</literal></expr></argument>, <argument pos:start="89:53" pos:end="89:53"><expr pos:start="89:53" pos:end="89:53"><literal type="number" pos:start="89:53" pos:end="89:53">0</literal></expr></argument>)</argument_list></call><operator pos:start="89:55" pos:end="89:55">)</operator> <operator pos:start="89:57" pos:end="89:57">&lt;</operator> <literal type="number" pos:start="89:59" pos:end="89:59">0</literal></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:19"><block_content pos:start="91:9" pos:end="91:19">

        <return pos:start="91:9" pos:end="91:19">return <expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:49"><expr pos:start="95:5" pos:end="95:48"><call pos:start="95:5" pos:end="95:48"><name pos:start="95:5" pos:end="95:17">init_put_bits</name><argument_list pos:start="95:18" pos:end="95:48">(<argument pos:start="95:19" pos:end="95:21"><expr pos:start="95:19" pos:end="95:21"><operator pos:start="95:19" pos:end="95:19">&amp;</operator><name pos:start="95:20" pos:end="95:21">pb</name></expr></argument>, <argument pos:start="95:24" pos:end="95:34"><expr pos:start="95:24" pos:end="95:34"><name pos:start="95:24" pos:end="95:34"><name pos:start="95:24" pos:end="95:28">avpkt</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:34">data</name></name></expr></argument>, <argument pos:start="95:37" pos:end="95:47"><expr pos:start="95:37" pos:end="95:47"><name pos:start="95:37" pos:end="95:47"><name pos:start="95:37" pos:end="95:41">avpkt</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:47">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:75">(<expr pos:start="99:9" pos:end="99:74"><name pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:10">pb</name><operator pos:start="99:11" pos:end="99:11">.</operator><name pos:start="99:12" pos:end="99:23">size_in_bits</name></name> <operator pos:start="99:25" pos:end="99:25">-</operator> <call pos:start="99:27" pos:end="99:45"><name pos:start="99:27" pos:end="99:40">put_bits_count</name><argument_list pos:start="99:41" pos:end="99:45">(<argument pos:start="99:42" pos:end="99:44"><expr pos:start="99:42" pos:end="99:44"><operator pos:start="99:42" pos:end="99:42">&amp;</operator><name pos:start="99:43" pos:end="99:44">pb</name></expr></argument>)</argument_list></call> <operator pos:start="99:47" pos:end="99:47">&lt;</operator> <literal type="number" pos:start="99:49" pos:end="99:51">1</literal> <operator pos:start="99:51" pos:end="99:51">+</operator> <call pos:start="99:53" pos:end="99:74"><name pos:start="99:53" pos:end="99:56">ilog</name><argument_list pos:start="99:57" pos:end="99:74">(<argument pos:start="99:58" pos:end="99:73"><expr pos:start="99:58" pos:end="99:73"><name pos:start="99:58" pos:end="99:69"><name pos:start="99:58" pos:end="99:61">venc</name><operator pos:start="99:62" pos:end="99:63">-&gt;</operator><name pos:start="99:64" pos:end="99:69">nmodes</name></name> <operator pos:start="99:71" pos:end="99:71">-</operator> <literal type="number" pos:start="99:73" pos:end="99:73">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:77" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:31">

        <expr_stmt pos:start="101:9" pos:end="101:68"><expr pos:start="101:9" pos:end="101:67"><call pos:start="101:9" pos:end="101:67"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:67">(<argument pos:start="101:16" pos:end="101:20"><expr pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:20">avctx</name></expr></argument>, <argument pos:start="101:23" pos:end="101:34"><expr pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:37" pos:end="101:66"><expr pos:start="101:37" pos:end="101:66"><literal type="string" pos:start="101:37" pos:end="101:66">"output buffer is too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:31">return <expr pos:start="103:16" pos:end="103:30"><call pos:start="103:16" pos:end="103:30"><name pos:start="103:16" pos:end="103:22">AVERROR</name><argument_list pos:start="103:23" pos:end="103:30">(<argument pos:start="103:24" pos:end="103:29"><expr pos:start="103:24" pos:end="103:29"><name pos:start="103:24" pos:end="103:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:24"><expr pos:start="109:5" pos:end="109:23"><call pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:12">put_bits</name><argument_list pos:start="109:13" pos:end="109:23">(<argument pos:start="109:14" pos:end="109:16"><expr pos:start="109:14" pos:end="109:16"><operator pos:start="109:14" pos:end="109:14">&amp;</operator><name pos:start="109:15" pos:end="109:16">pb</name></expr></argument>, <argument pos:start="109:19" pos:end="109:19"><expr pos:start="109:19" pos:end="109:19"><literal type="number" pos:start="109:19" pos:end="109:19">1</literal></expr></argument>, <argument pos:start="109:22" pos:end="109:22"><expr pos:start="109:22" pos:end="109:22"><literal type="number" pos:start="109:22" pos:end="109:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="109:26" pos:end="109:37">// magic bit</comment>



    <expr_stmt pos:start="113:5" pos:end="113:45"><expr pos:start="113:5" pos:end="113:44"><call pos:start="113:5" pos:end="113:44"><name pos:start="113:5" pos:end="113:12">put_bits</name><argument_list pos:start="113:13" pos:end="113:44">(<argument pos:start="113:14" pos:end="113:16"><expr pos:start="113:14" pos:end="113:16"><operator pos:start="113:14" pos:end="113:14">&amp;</operator><name pos:start="113:15" pos:end="113:16">pb</name></expr></argument>, <argument pos:start="113:19" pos:end="113:40"><expr pos:start="113:19" pos:end="113:40"><call pos:start="113:19" pos:end="113:40"><name pos:start="113:19" pos:end="113:22">ilog</name><argument_list pos:start="113:23" pos:end="113:40">(<argument pos:start="113:24" pos:end="113:39"><expr pos:start="113:24" pos:end="113:39"><name pos:start="113:24" pos:end="113:35"><name pos:start="113:24" pos:end="113:27">venc</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:35">nmodes</name></name> <operator pos:start="113:37" pos:end="113:37">-</operator> <literal type="number" pos:start="113:39" pos:end="113:39">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:43" pos:end="113:43"><expr pos:start="113:43" pos:end="113:43"><literal type="number" pos:start="113:43" pos:end="113:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="113:47" pos:end="113:71">// Mode for current frame</comment>



    <expr_stmt pos:start="117:5" pos:end="117:30"><expr pos:start="117:5" pos:end="117:29"><name pos:start="117:5" pos:end="117:8">mode</name>    <operator pos:start="117:13" pos:end="117:13">=</operator> <operator pos:start="117:15" pos:end="117:15">&amp;</operator><name pos:start="117:16" pos:end="117:29"><name pos:start="117:16" pos:end="117:19">venc</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:26">modes</name><index pos:start="117:27" pos:end="117:29">[<expr pos:start="117:28" pos:end="117:28"><literal type="number" pos:start="117:28" pos:end="117:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:45"><expr pos:start="119:5" pos:end="119:44"><name pos:start="119:5" pos:end="119:11">mapping</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <operator pos:start="119:15" pos:end="119:15">&amp;</operator><name pos:start="119:16" pos:end="119:44"><name pos:start="119:16" pos:end="119:19">venc</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:29">mappings</name><index pos:start="119:30" pos:end="119:44">[<expr pos:start="119:31" pos:end="119:43"><name pos:start="119:31" pos:end="119:43"><name pos:start="119:31" pos:end="119:34">mode</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:43">mapping</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="127:5"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:24">(<expr pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:12">mode</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:23">blockflag</name></name></expr>)</condition> <block pos:start="121:26" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:28">

        <expr_stmt pos:start="123:9" pos:end="123:28"><expr pos:start="123:9" pos:end="123:27"><call pos:start="123:9" pos:end="123:27"><name pos:start="123:9" pos:end="123:16">put_bits</name><argument_list pos:start="123:17" pos:end="123:27">(<argument pos:start="123:18" pos:end="123:20"><expr pos:start="123:18" pos:end="123:20"><operator pos:start="123:18" pos:end="123:18">&amp;</operator><name pos:start="123:19" pos:end="123:20">pb</name></expr></argument>, <argument pos:start="123:23" pos:end="123:23"><expr pos:start="123:23" pos:end="123:23"><literal type="number" pos:start="123:23" pos:end="123:23">1</literal></expr></argument>, <argument pos:start="123:26" pos:end="123:26"><expr pos:start="123:26" pos:end="123:26"><literal type="number" pos:start="123:26" pos:end="123:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="123:30" pos:end="123:51">// Previous windowflag</comment>

        <expr_stmt pos:start="125:9" pos:end="125:28"><expr pos:start="125:9" pos:end="125:27"><call pos:start="125:9" pos:end="125:27"><name pos:start="125:9" pos:end="125:16">put_bits</name><argument_list pos:start="125:17" pos:end="125:27">(<argument pos:start="125:18" pos:end="125:20"><expr pos:start="125:18" pos:end="125:20"><operator pos:start="125:18" pos:end="125:18">&amp;</operator><name pos:start="125:19" pos:end="125:20">pb</name></expr></argument>, <argument pos:start="125:23" pos:end="125:23"><expr pos:start="125:23" pos:end="125:23"><literal type="number" pos:start="125:23" pos:end="125:23">1</literal></expr></argument>, <argument pos:start="125:26" pos:end="125:26"><expr pos:start="125:26" pos:end="125:26"><literal type="number" pos:start="125:26" pos:end="125:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="125:30" pos:end="125:47">// Next windowflag</comment>

    </block_content>}</block></if></if_stmt>



    <for pos:start="131:5" pos:end="147:5">for <control pos:start="131:9" pos:end="131:40">(<init pos:start="131:10" pos:end="131:15"><expr pos:start="131:10" pos:end="131:14"><name pos:start="131:10" pos:end="131:10">i</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">0</literal></expr>;</init> <condition pos:start="131:17" pos:end="131:35"><expr pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:17">i</name> <operator pos:start="131:19" pos:end="131:19">&lt;</operator> <name pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:24">venc</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:34">channels</name></name></expr>;</condition> <incr pos:start="131:37" pos:end="131:39"><expr pos:start="131:37" pos:end="131:39"><name pos:start="131:37" pos:end="131:37">i</name><operator pos:start="131:38" pos:end="131:39">++</operator></expr></incr>)</control> <block pos:start="131:42" pos:end="147:5">{<block_content pos:start="133:9" pos:end="145:9">

        <decl_stmt pos:start="133:9" pos:end="133:78"><decl pos:start="133:9" pos:end="133:77"><type pos:start="133:9" pos:end="133:26"><name pos:start="133:9" pos:end="133:24">vorbis_enc_floor</name> <modifier pos:start="133:26" pos:end="133:26">*</modifier></type><name pos:start="133:27" pos:end="133:28">fc</name> <init pos:start="133:30" pos:end="133:77">= <expr pos:start="133:32" pos:end="133:77"><operator pos:start="133:32" pos:end="133:32">&amp;</operator><name pos:start="133:33" pos:end="133:77"><name pos:start="133:33" pos:end="133:36">venc</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:44">floors</name><index pos:start="133:45" pos:end="133:77">[<expr pos:start="133:46" pos:end="133:76"><name pos:start="133:46" pos:end="133:76"><name pos:start="133:46" pos:end="133:52">mapping</name><operator pos:start="133:53" pos:end="133:54">-&gt;</operator><name pos:start="133:55" pos:end="133:59">floor</name><index pos:start="133:60" pos:end="133:76">[<expr pos:start="133:61" pos:end="133:75"><name pos:start="133:61" pos:end="133:75"><name pos:start="133:61" pos:end="133:67">mapping</name><operator pos:start="133:68" pos:end="133:69">-&gt;</operator><name pos:start="133:70" pos:end="133:72">mux</name><index pos:start="133:73" pos:end="133:75">[<expr pos:start="133:74" pos:end="133:74"><name pos:start="133:74" pos:end="133:74">i</name></expr>]</index></name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="135:9" pos:end="135:41"><decl pos:start="135:9" pos:end="135:40"><type pos:start="135:9" pos:end="135:16"><name pos:start="135:9" pos:end="135:16">uint16_t</name></type> <name pos:start="135:18" pos:end="135:40"><name pos:start="135:18" pos:end="135:22">posts</name><index pos:start="135:23" pos:end="135:40">[<expr pos:start="135:24" pos:end="135:39"><name pos:start="135:24" pos:end="135:39">MAX_FLOOR_VALUES</name></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:78"><expr pos:start="137:9" pos:end="137:77"><call pos:start="137:9" pos:end="137:77"><name pos:start="137:9" pos:end="137:17">floor_fit</name><argument_list pos:start="137:18" pos:end="137:77">(<argument pos:start="137:19" pos:end="137:22"><expr pos:start="137:19" pos:end="137:22"><name pos:start="137:19" pos:end="137:22">venc</name></expr></argument>, <argument pos:start="137:25" pos:end="137:26"><expr pos:start="137:25" pos:end="137:26"><name pos:start="137:25" pos:end="137:26">fc</name></expr></argument>, <argument pos:start="137:29" pos:end="137:57"><expr pos:start="137:29" pos:end="137:57"><operator pos:start="137:29" pos:end="137:29">&amp;</operator><name pos:start="137:30" pos:end="137:57"><name pos:start="137:30" pos:end="137:33">venc</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:41">coeffs</name><index pos:start="137:42" pos:end="137:57">[<expr pos:start="137:43" pos:end="137:56"><name pos:start="137:43" pos:end="137:43">i</name> <operator pos:start="137:45" pos:end="137:45">*</operator> <name pos:start="137:47" pos:end="137:56">frame_size</name></expr>]</index></name></expr></argument>, <argument pos:start="137:60" pos:end="137:64"><expr pos:start="137:60" pos:end="137:64"><name pos:start="137:60" pos:end="137:64">posts</name></expr></argument>, <argument pos:start="137:67" pos:end="137:76"><expr pos:start="137:67" pos:end="137:76"><name pos:start="137:67" pos:end="137:76">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="145:9"><if pos:start="139:9" pos:end="145:9">if <condition pos:start="139:12" pos:end="139:89">(<expr pos:start="139:13" pos:end="139:88"><call pos:start="139:13" pos:end="139:88"><name pos:start="139:13" pos:end="139:24">floor_encode</name><argument_list pos:start="139:25" pos:end="139:88">(<argument pos:start="139:26" pos:end="139:29"><expr pos:start="139:26" pos:end="139:29"><name pos:start="139:26" pos:end="139:29">venc</name></expr></argument>, <argument pos:start="139:32" pos:end="139:33"><expr pos:start="139:32" pos:end="139:33"><name pos:start="139:32" pos:end="139:33">fc</name></expr></argument>, <argument pos:start="139:36" pos:end="139:38"><expr pos:start="139:36" pos:end="139:38"><operator pos:start="139:36" pos:end="139:36">&amp;</operator><name pos:start="139:37" pos:end="139:38">pb</name></expr></argument>, <argument pos:start="139:41" pos:end="139:45"><expr pos:start="139:41" pos:end="139:45"><name pos:start="139:41" pos:end="139:45">posts</name></expr></argument>, <argument pos:start="139:48" pos:end="139:75"><expr pos:start="139:48" pos:end="139:75"><operator pos:start="139:48" pos:end="139:48">&amp;</operator><name pos:start="139:49" pos:end="139:75"><name pos:start="139:49" pos:end="139:52">venc</name><operator pos:start="139:53" pos:end="139:54">-&gt;</operator><name pos:start="139:55" pos:end="139:59">floor</name><index pos:start="139:60" pos:end="139:75">[<expr pos:start="139:61" pos:end="139:74"><name pos:start="139:61" pos:end="139:61">i</name> <operator pos:start="139:63" pos:end="139:63">*</operator> <name pos:start="139:65" pos:end="139:74">frame_size</name></expr>]</index></name></expr></argument>, <argument pos:start="139:78" pos:end="139:87"><expr pos:start="139:78" pos:end="139:87"><name pos:start="139:78" pos:end="139:87">frame_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:91" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:35">

            <expr_stmt pos:start="141:13" pos:end="141:72"><expr pos:start="141:13" pos:end="141:71"><call pos:start="141:13" pos:end="141:71"><name pos:start="141:13" pos:end="141:18">av_log</name><argument_list pos:start="141:19" pos:end="141:71">(<argument pos:start="141:20" pos:end="141:24"><expr pos:start="141:20" pos:end="141:24"><name pos:start="141:20" pos:end="141:24">avctx</name></expr></argument>, <argument pos:start="141:27" pos:end="141:38"><expr pos:start="141:27" pos:end="141:38"><name pos:start="141:27" pos:end="141:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="141:41" pos:end="141:70"><expr pos:start="141:41" pos:end="141:70"><literal type="string" pos:start="141:41" pos:end="141:70">"output buffer is too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="143:13" pos:end="143:35">return <expr pos:start="143:20" pos:end="143:34"><call pos:start="143:20" pos:end="143:34"><name pos:start="143:20" pos:end="143:26">AVERROR</name><argument_list pos:start="143:27" pos:end="143:34">(<argument pos:start="143:28" pos:end="143:33"><expr pos:start="143:28" pos:end="143:33"><name pos:start="143:28" pos:end="143:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="151:5" pos:end="153:42">for <control pos:start="151:9" pos:end="151:53">(<init pos:start="151:10" pos:end="151:15"><expr pos:start="151:10" pos:end="151:14"><name pos:start="151:10" pos:end="151:10">i</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <literal type="number" pos:start="151:14" pos:end="151:14">0</literal></expr>;</init> <condition pos:start="151:17" pos:end="151:48"><expr pos:start="151:17" pos:end="151:47"><name pos:start="151:17" pos:end="151:17">i</name> <operator pos:start="151:19" pos:end="151:19">&lt;</operator> <name pos:start="151:21" pos:end="151:34"><name pos:start="151:21" pos:end="151:24">venc</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:34">channels</name></name> <operator pos:start="151:36" pos:end="151:36">*</operator> <name pos:start="151:38" pos:end="151:47">frame_size</name></expr>;</condition> <incr pos:start="151:50" pos:end="151:52"><expr pos:start="151:50" pos:end="151:52"><name pos:start="151:50" pos:end="151:50">i</name><operator pos:start="151:51" pos:end="151:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="153:9" pos:end="153:42"><block_content pos:start="153:9" pos:end="153:42">

        <expr_stmt pos:start="153:9" pos:end="153:42"><expr pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:12">venc</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:20">coeffs</name><index pos:start="153:21" pos:end="153:23">[<expr pos:start="153:22" pos:end="153:22"><name pos:start="153:22" pos:end="153:22">i</name></expr>]</index></name> <operator pos:start="153:25" pos:end="153:26">/=</operator> <name pos:start="153:28" pos:end="153:41"><name pos:start="153:28" pos:end="153:31">venc</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:38">floor</name><index pos:start="153:39" pos:end="153:41">[<expr pos:start="153:40" pos:end="153:40"><name pos:start="153:40" pos:end="153:40">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="157:5" pos:end="181:5">for <control pos:start="157:9" pos:end="157:49">(<init pos:start="157:10" pos:end="157:15"><expr pos:start="157:10" pos:end="157:14"><name pos:start="157:10" pos:end="157:10">i</name> <operator pos:start="157:12" pos:end="157:12">=</operator> <literal type="number" pos:start="157:14" pos:end="157:14">0</literal></expr>;</init> <condition pos:start="157:17" pos:end="157:44"><expr pos:start="157:17" pos:end="157:43"><name pos:start="157:17" pos:end="157:17">i</name> <operator pos:start="157:19" pos:end="157:19">&lt;</operator> <name pos:start="157:21" pos:end="157:43"><name pos:start="157:21" pos:end="157:27">mapping</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:43">coupling_steps</name></name></expr>;</condition> <incr pos:start="157:46" pos:end="157:48"><expr pos:start="157:46" pos:end="157:48"><name pos:start="157:46" pos:end="157:46">i</name><operator pos:start="157:47" pos:end="157:48">++</operator></expr></incr>)</control> <block pos:start="157:51" pos:end="181:5">{<block_content pos:start="159:9" pos:end="179:9">

        <decl_stmt pos:start="159:9" pos:end="159:71"><decl pos:start="159:9" pos:end="159:70"><type pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:13">float</name> <modifier pos:start="159:15" pos:end="159:15">*</modifier></type><name pos:start="159:16" pos:end="159:18">mag</name> <init pos:start="159:20" pos:end="159:70">= <expr pos:start="159:22" pos:end="159:70"><name pos:start="159:22" pos:end="159:33"><name pos:start="159:22" pos:end="159:25">venc</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:33">coeffs</name></name> <operator pos:start="159:35" pos:end="159:35">+</operator> <name pos:start="159:37" pos:end="159:57"><name pos:start="159:37" pos:end="159:43">mapping</name><operator pos:start="159:44" pos:end="159:45">-&gt;</operator><name pos:start="159:46" pos:end="159:54">magnitude</name><index pos:start="159:55" pos:end="159:57">[<expr pos:start="159:56" pos:end="159:56"><name pos:start="159:56" pos:end="159:56">i</name></expr>]</index></name> <operator pos:start="159:59" pos:end="159:59">*</operator> <name pos:start="159:61" pos:end="159:70">frame_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:71"><decl pos:start="161:9" pos:end="161:70"><type pos:start="161:9" pos:end="161:15"><name pos:start="161:9" pos:end="161:13">float</name> <modifier pos:start="161:15" pos:end="161:15">*</modifier></type><name pos:start="161:16" pos:end="161:18">ang</name> <init pos:start="161:20" pos:end="161:70">= <expr pos:start="161:22" pos:end="161:70"><name pos:start="161:22" pos:end="161:33"><name pos:start="161:22" pos:end="161:25">venc</name><operator pos:start="161:26" pos:end="161:27">-&gt;</operator><name pos:start="161:28" pos:end="161:33">coeffs</name></name> <operator pos:start="161:35" pos:end="161:35">+</operator> <name pos:start="161:37" pos:end="161:53"><name pos:start="161:37" pos:end="161:43">mapping</name><operator pos:start="161:44" pos:end="161:45">-&gt;</operator><name pos:start="161:46" pos:end="161:50">angle</name><index pos:start="161:51" pos:end="161:53">[<expr pos:start="161:52" pos:end="161:52"><name pos:start="161:52" pos:end="161:52">i</name></expr>]</index></name>     <operator pos:start="161:59" pos:end="161:59">*</operator> <name pos:start="161:61" pos:end="161:70">frame_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="163:9" pos:end="163:14"><decl pos:start="163:9" pos:end="163:13"><type pos:start="163:9" pos:end="163:11"><name pos:start="163:9" pos:end="163:11">int</name></type> <name pos:start="163:13" pos:end="163:13">j</name></decl>;</decl_stmt>

        <for pos:start="165:9" pos:end="179:9">for <control pos:start="165:13" pos:end="165:40">(<init pos:start="165:14" pos:end="165:19"><expr pos:start="165:14" pos:end="165:18"><name pos:start="165:14" pos:end="165:14">j</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <literal type="number" pos:start="165:18" pos:end="165:18">0</literal></expr>;</init> <condition pos:start="165:21" pos:end="165:35"><expr pos:start="165:21" pos:end="165:34"><name pos:start="165:21" pos:end="165:21">j</name> <operator pos:start="165:23" pos:end="165:23">&lt;</operator> <name pos:start="165:25" pos:end="165:34">frame_size</name></expr>;</condition> <incr pos:start="165:37" pos:end="165:39"><expr pos:start="165:37" pos:end="165:39"><name pos:start="165:37" pos:end="165:37">j</name><operator pos:start="165:38" pos:end="165:39">++</operator></expr></incr>)</control> <block pos:start="165:42" pos:end="179:9">{<block_content pos:start="167:13" pos:end="177:27">

            <decl_stmt pos:start="167:13" pos:end="167:29"><decl pos:start="167:13" pos:end="167:28"><type pos:start="167:13" pos:end="167:17"><name pos:start="167:13" pos:end="167:17">float</name></type> <name pos:start="167:19" pos:end="167:19">a</name> <init pos:start="167:21" pos:end="167:28">= <expr pos:start="167:23" pos:end="167:28"><name pos:start="167:23" pos:end="167:28"><name pos:start="167:23" pos:end="167:25">ang</name><index pos:start="167:26" pos:end="167:28">[<expr pos:start="167:27" pos:end="167:27"><name pos:start="167:27" pos:end="167:27">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:29"><expr pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:18"><name pos:start="169:13" pos:end="169:15">ang</name><index pos:start="169:16" pos:end="169:18">[<expr pos:start="169:17" pos:end="169:17"><name pos:start="169:17" pos:end="169:17">j</name></expr>]</index></name> <operator pos:start="169:20" pos:end="169:21">-=</operator> <name pos:start="169:23" pos:end="169:28"><name pos:start="169:23" pos:end="169:25">mag</name><index pos:start="169:26" pos:end="169:28">[<expr pos:start="169:27" pos:end="169:27"><name pos:start="169:27" pos:end="169:27">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="173:33"><if pos:start="171:13" pos:end="173:33">if <condition pos:start="171:16" pos:end="171:27">(<expr pos:start="171:17" pos:end="171:26"><name pos:start="171:17" pos:end="171:22"><name pos:start="171:17" pos:end="171:19">mag</name><index pos:start="171:20" pos:end="171:22">[<expr pos:start="171:21" pos:end="171:21"><name pos:start="171:21" pos:end="171:21">j</name></expr>]</index></name> <operator pos:start="171:24" pos:end="171:24">&gt;</operator> <literal type="number" pos:start="171:26" pos:end="171:26">0</literal></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:33"><block_content pos:start="173:17" pos:end="173:33">

                <expr_stmt pos:start="173:17" pos:end="173:33"><expr pos:start="173:17" pos:end="173:32"><name pos:start="173:17" pos:end="173:22"><name pos:start="173:17" pos:end="173:19">ang</name><index pos:start="173:20" pos:end="173:22">[<expr pos:start="173:21" pos:end="173:21"><name pos:start="173:21" pos:end="173:21">j</name></expr>]</index></name> <operator pos:start="173:24" pos:end="173:24">=</operator> <operator pos:start="173:26" pos:end="173:26">-</operator><name pos:start="173:27" pos:end="173:32"><name pos:start="173:27" pos:end="173:29">ang</name><index pos:start="173:30" pos:end="173:32">[<expr pos:start="173:31" pos:end="173:31"><name pos:start="173:31" pos:end="173:31">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="175:13" pos:end="177:27"><if pos:start="175:13" pos:end="177:27">if <condition pos:start="175:16" pos:end="175:27">(<expr pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:22"><name pos:start="175:17" pos:end="175:19">ang</name><index pos:start="175:20" pos:end="175:22">[<expr pos:start="175:21" pos:end="175:21"><name pos:start="175:21" pos:end="175:21">j</name></expr>]</index></name> <operator pos:start="175:24" pos:end="175:24">&lt;</operator> <literal type="number" pos:start="175:26" pos:end="175:26">0</literal></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:27"><block_content pos:start="177:17" pos:end="177:27">

                <expr_stmt pos:start="177:17" pos:end="177:27"><expr pos:start="177:17" pos:end="177:26"><name pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:19">mag</name><index pos:start="177:20" pos:end="177:22">[<expr pos:start="177:21" pos:end="177:21"><name pos:start="177:21" pos:end="177:21">j</name></expr>]</index></name> <operator pos:start="177:24" pos:end="177:24">=</operator> <name pos:start="177:26" pos:end="177:26">a</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="185:5" pos:end="193:5"><if pos:start="185:5" pos:end="193:5">if <condition pos:start="185:8" pos:end="187:70">(<expr pos:start="185:9" pos:end="187:69"><call pos:start="185:9" pos:end="187:69"><name pos:start="185:9" pos:end="185:22">residue_encode</name><argument_list pos:start="185:23" pos:end="187:69">(<argument pos:start="185:24" pos:end="185:27"><expr pos:start="185:24" pos:end="185:27"><name pos:start="185:24" pos:end="185:27">venc</name></expr></argument>, <argument pos:start="185:30" pos:end="185:79"><expr pos:start="185:30" pos:end="185:79"><operator pos:start="185:30" pos:end="185:30">&amp;</operator><name pos:start="185:31" pos:end="185:79"><name pos:start="185:31" pos:end="185:34">venc</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:44">residues</name><index pos:start="185:45" pos:end="185:79">[<expr pos:start="185:46" pos:end="185:78"><name pos:start="185:46" pos:end="185:78"><name pos:start="185:46" pos:end="185:52">mapping</name><operator pos:start="185:53" pos:end="185:54">-&gt;</operator><name pos:start="185:55" pos:end="185:61">residue</name><index pos:start="185:62" pos:end="185:78">[<expr pos:start="185:63" pos:end="185:77"><name pos:start="185:63" pos:end="185:77"><name pos:start="185:63" pos:end="185:69">mapping</name><operator pos:start="185:70" pos:end="185:71">-&gt;</operator><name pos:start="185:72" pos:end="185:74">mux</name><index pos:start="185:75" pos:end="185:77">[<expr pos:start="185:76" pos:end="185:76"><literal type="number" pos:start="185:76" pos:end="185:76">0</literal></expr>]</index></name></expr>]</index></name></expr>]</index></name></expr></argument>,

                       <argument pos:start="187:24" pos:end="187:26"><expr pos:start="187:24" pos:end="187:26"><operator pos:start="187:24" pos:end="187:24">&amp;</operator><name pos:start="187:25" pos:end="187:26">pb</name></expr></argument>, <argument pos:start="187:29" pos:end="187:40"><expr pos:start="187:29" pos:end="187:40"><name pos:start="187:29" pos:end="187:40"><name pos:start="187:29" pos:end="187:32">venc</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:40">coeffs</name></name></expr></argument>, <argument pos:start="187:43" pos:end="187:52"><expr pos:start="187:43" pos:end="187:52"><name pos:start="187:43" pos:end="187:52">frame_size</name></expr></argument>, <argument pos:start="187:55" pos:end="187:68"><expr pos:start="187:55" pos:end="187:68"><name pos:start="187:55" pos:end="187:68"><name pos:start="187:55" pos:end="187:58">venc</name><operator pos:start="187:59" pos:end="187:60">-&gt;</operator><name pos:start="187:61" pos:end="187:68">channels</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="187:72" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:31">

        <expr_stmt pos:start="189:9" pos:end="189:68"><expr pos:start="189:9" pos:end="189:67"><call pos:start="189:9" pos:end="189:67"><name pos:start="189:9" pos:end="189:14">av_log</name><argument_list pos:start="189:15" pos:end="189:67">(<argument pos:start="189:16" pos:end="189:20"><expr pos:start="189:16" pos:end="189:20"><name pos:start="189:16" pos:end="189:20">avctx</name></expr></argument>, <argument pos:start="189:23" pos:end="189:34"><expr pos:start="189:23" pos:end="189:34"><name pos:start="189:23" pos:end="189:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:37" pos:end="189:66"><expr pos:start="189:37" pos:end="189:66"><literal type="string" pos:start="189:37" pos:end="189:66">"output buffer is too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:31">return <expr pos:start="191:16" pos:end="191:30"><call pos:start="191:16" pos:end="191:30"><name pos:start="191:16" pos:end="191:22">AVERROR</name><argument_list pos:start="191:23" pos:end="191:30">(<argument pos:start="191:24" pos:end="191:29"><expr pos:start="191:24" pos:end="191:29"><name pos:start="191:24" pos:end="191:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:24"><expr pos:start="197:5" pos:end="197:23"><call pos:start="197:5" pos:end="197:23"><name pos:start="197:5" pos:end="197:18">flush_put_bits</name><argument_list pos:start="197:19" pos:end="197:23">(<argument pos:start="197:20" pos:end="197:22"><expr pos:start="197:20" pos:end="197:22"><operator pos:start="197:20" pos:end="197:20">&amp;</operator><name pos:start="197:21" pos:end="197:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:43"><expr pos:start="199:5" pos:end="199:42"><name pos:start="199:5" pos:end="199:15"><name pos:start="199:5" pos:end="199:9">avpkt</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:15">size</name></name> <operator pos:start="199:17" pos:end="199:17">=</operator> <call pos:start="199:19" pos:end="199:37"><name pos:start="199:19" pos:end="199:32">put_bits_count</name><argument_list pos:start="199:33" pos:end="199:37">(<argument pos:start="199:34" pos:end="199:36"><expr pos:start="199:34" pos:end="199:36"><operator pos:start="199:34" pos:end="199:34">&amp;</operator><name pos:start="199:35" pos:end="199:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="199:39" pos:end="199:40">&gt;&gt;</operator> <literal type="number" pos:start="199:42" pos:end="199:42">3</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:78"><expr pos:start="203:5" pos:end="203:77"><call pos:start="203:5" pos:end="203:77"><name pos:start="203:5" pos:end="203:22">ff_af_queue_remove</name><argument_list pos:start="203:23" pos:end="203:77">(<argument pos:start="203:24" pos:end="203:33"><expr pos:start="203:24" pos:end="203:33"><operator pos:start="203:24" pos:end="203:24">&amp;</operator><name pos:start="203:25" pos:end="203:33"><name pos:start="203:25" pos:end="203:28">venc</name><operator pos:start="203:29" pos:end="203:30">-&gt;</operator><name pos:start="203:31" pos:end="203:33">afq</name></name></expr></argument>, <argument pos:start="203:36" pos:end="203:45"><expr pos:start="203:36" pos:end="203:45"><name pos:start="203:36" pos:end="203:45">frame_size</name></expr></argument>, <argument pos:start="203:48" pos:end="203:58"><expr pos:start="203:48" pos:end="203:58"><operator pos:start="203:48" pos:end="203:48">&amp;</operator><name pos:start="203:49" pos:end="203:58"><name pos:start="203:49" pos:end="203:53">avpkt</name><operator pos:start="203:54" pos:end="203:55">-&gt;</operator><name pos:start="203:56" pos:end="203:58">pts</name></name></expr></argument>, <argument pos:start="203:61" pos:end="203:76"><expr pos:start="203:61" pos:end="203:76"><operator pos:start="203:61" pos:end="203:61">&amp;</operator><name pos:start="203:62" pos:end="203:76"><name pos:start="203:62" pos:end="203:66">avpkt</name><operator pos:start="203:67" pos:end="203:68">-&gt;</operator><name pos:start="203:69" pos:end="203:76">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="207:5" pos:end="217:5"><if pos:start="207:5" pos:end="217:5">if <condition pos:start="207:8" pos:end="207:37">(<expr pos:start="207:9" pos:end="207:36"><name pos:start="207:9" pos:end="207:18">frame_size</name> <operator pos:start="207:20" pos:end="207:20">&gt;</operator> <name pos:start="207:22" pos:end="207:36"><name pos:start="207:22" pos:end="207:26">avpkt</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:36">duration</name></name></expr>)</condition> <block pos:start="207:39" pos:end="217:5">{<block_content pos:start="209:9" pos:end="215:56">

        <decl_stmt pos:start="209:9" pos:end="209:85"><decl pos:start="209:9" pos:end="209:84"><type pos:start="209:9" pos:end="209:17"><name pos:start="209:9" pos:end="209:15">uint8_t</name> <modifier pos:start="209:17" pos:end="209:17">*</modifier></type><name pos:start="209:18" pos:end="209:21">side</name> <init pos:start="209:23" pos:end="209:84">= <expr pos:start="209:25" pos:end="209:84"><call pos:start="209:25" pos:end="209:84"><name pos:start="209:25" pos:end="209:47">av_packet_new_side_data</name><argument_list pos:start="209:48" pos:end="209:84">(<argument pos:start="209:49" pos:end="209:53"><expr pos:start="209:49" pos:end="209:53"><name pos:start="209:49" pos:end="209:53">avpkt</name></expr></argument>, <argument pos:start="209:56" pos:end="209:79"><expr pos:start="209:56" pos:end="209:79"><name pos:start="209:56" pos:end="209:79">AV_PKT_DATA_SKIP_SAMPLES</name></expr></argument>, <argument pos:start="209:82" pos:end="209:83"><expr pos:start="209:82" pos:end="209:83"><literal type="number" pos:start="209:82" pos:end="209:83">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="211:9" pos:end="213:35"><if pos:start="211:9" pos:end="213:35">if <condition pos:start="211:12" pos:end="211:18">(<expr pos:start="211:13" pos:end="211:17"><operator pos:start="211:13" pos:end="211:13">!</operator><name pos:start="211:14" pos:end="211:17">side</name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:35"><block_content pos:start="213:13" pos:end="213:35">

            <return pos:start="213:13" pos:end="213:35">return <expr pos:start="213:20" pos:end="213:34"><call pos:start="213:20" pos:end="213:34"><name pos:start="213:20" pos:end="213:26">AVERROR</name><argument_list pos:start="213:27" pos:end="213:34">(<argument pos:start="213:28" pos:end="213:33"><expr pos:start="213:28" pos:end="213:33"><name pos:start="213:28" pos:end="213:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:56"><expr pos:start="215:9" pos:end="215:55"><call pos:start="215:9" pos:end="215:55"><name pos:start="215:9" pos:end="215:15">AV_WL32</name><argument_list pos:start="215:16" pos:end="215:55">(<argument pos:start="215:17" pos:end="215:24"><expr pos:start="215:17" pos:end="215:24"><operator pos:start="215:17" pos:end="215:17">&amp;</operator><name pos:start="215:18" pos:end="215:24"><name pos:start="215:18" pos:end="215:21">side</name><index pos:start="215:22" pos:end="215:24">[<expr pos:start="215:23" pos:end="215:23"><literal type="number" pos:start="215:23" pos:end="215:23">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:27" pos:end="215:54"><expr pos:start="215:27" pos:end="215:54"><name pos:start="215:27" pos:end="215:36">frame_size</name> <operator pos:start="215:38" pos:end="215:38">-</operator> <name pos:start="215:40" pos:end="215:54"><name pos:start="215:40" pos:end="215:44">avpkt</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:54">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="221:5" pos:end="221:24"><expr pos:start="221:5" pos:end="221:23"><operator pos:start="221:5" pos:end="221:5">*</operator><name pos:start="221:6" pos:end="221:19">got_packet_ptr</name> <operator pos:start="221:21" pos:end="221:21">=</operator> <literal type="number" pos:start="221:23" pos:end="221:23">1</literal></expr>;</expr_stmt>

    <return pos:start="223:5" pos:end="223:13">return <expr pos:start="223:12" pos:end="223:12"><literal type="number" pos:start="223:12" pos:end="223:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
