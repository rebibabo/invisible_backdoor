<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7178.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">exynos4210_init_board_irqs</name><parameter_list pos:start="1:32" pos:end="1:49">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:45">Exynos4210Irq</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">grp</name></decl>, <decl pos:start="5:19" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:19" pos:end="5:21">bit</name></decl>, <decl pos:start="5:24" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:24" pos:end="5:29">irq_id</name></decl>, <decl pos:start="5:32" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:32" pos:end="5:32">n</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="49:5">for <control pos:start="9:9" pos:end="9:60">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">n</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:55"><expr pos:start="9:17" pos:end="9:54"><name pos:start="9:17" pos:end="9:17">n</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:54">EXYNOS4210_MAX_EXT_COMBINER_IN_IRQ</name></expr>;</condition> <incr pos:start="9:57" pos:end="9:59"><expr pos:start="9:57" pos:end="9:59"><name pos:start="9:57" pos:end="9:57">n</name><operator pos:start="9:58" pos:end="9:59">++</operator></expr></incr>)</control> <block pos:start="9:62" pos:end="49:5">{<block_content pos:start="11:9" pos:end="45:9">

        <expr_stmt pos:start="11:9" pos:end="13:40"><expr pos:start="11:9" pos:end="13:39"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:21">board_irqs</name><index pos:start="11:22" pos:end="11:24">[<expr pos:start="11:23" pos:end="11:23"><name pos:start="11:23" pos:end="11:23">n</name></expr>]</index></name> <operator pos:start="11:26" pos:end="11:26">=</operator> <call pos:start="11:28" pos:end="13:39"><name pos:start="11:28" pos:end="11:41">qemu_irq_split</name><argument_list pos:start="11:42" pos:end="13:39">(<argument pos:start="11:43" pos:end="11:64"><expr pos:start="11:43" pos:end="11:64"><name pos:start="11:43" pos:end="11:64"><name pos:start="11:43" pos:end="11:43">s</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:61">int_combiner_irq</name><index pos:start="11:62" pos:end="11:64">[<expr pos:start="11:63" pos:end="11:63"><name pos:start="11:63" pos:end="11:63">n</name></expr>]</index></name></expr></argument>,

                <argument pos:start="13:17" pos:end="13:38"><expr pos:start="13:17" pos:end="13:38"><name pos:start="13:17" pos:end="13:38"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:35">ext_combiner_irq</name><index pos:start="13:36" pos:end="13:38">[<expr pos:start="13:37" pos:end="13:37"><name pos:start="13:37" pos:end="13:37">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:14">irq_id</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="27:9">if <condition pos:start="19:12" pos:end="21:60">(<expr pos:start="19:13" pos:end="21:59"><name pos:start="19:13" pos:end="19:13">n</name> <operator pos:start="19:15" pos:end="19:16">==</operator> <call pos:start="19:18" pos:end="19:54"><name pos:start="19:18" pos:end="19:48">EXYNOS4210_COMBINER_GET_IRQ_NUM</name><argument_list pos:start="19:49" pos:end="19:54">(<argument pos:start="19:50" pos:end="19:50"><expr pos:start="19:50" pos:end="19:50"><literal type="number" pos:start="19:50" pos:end="19:50">1</literal></expr></argument>, <argument pos:start="19:53" pos:end="19:53"><expr pos:start="19:53" pos:end="19:53"><literal type="number" pos:start="19:53" pos:end="19:53">4</literal></expr></argument>)</argument_list></call> <operator pos:start="19:56" pos:end="19:57">||</operator>

                <name pos:start="21:17" pos:end="21:17">n</name> <operator pos:start="21:19" pos:end="21:20">==</operator> <call pos:start="21:22" pos:end="21:59"><name pos:start="21:22" pos:end="21:52">EXYNOS4210_COMBINER_GET_IRQ_NUM</name><argument_list pos:start="21:53" pos:end="21:59">(<argument pos:start="21:54" pos:end="21:55"><expr pos:start="21:54" pos:end="21:55"><literal type="number" pos:start="21:54" pos:end="21:55">12</literal></expr></argument>, <argument pos:start="21:58" pos:end="21:58"><expr pos:start="21:58" pos:end="21:58"><literal type="number" pos:start="21:58" pos:end="21:58">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:62" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:39">

            <comment type="block" pos:start="23:13" pos:end="23:50">/* MCT_G0 is passed to External GIC */</comment>

            <expr_stmt pos:start="25:13" pos:end="25:39"><expr pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:18">irq_id</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:38">EXT_GIC_ID_MCT_G0</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="31:60">(<expr pos:start="29:13" pos:end="31:59"><name pos:start="29:13" pos:end="29:13">n</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <call pos:start="29:18" pos:end="29:54"><name pos:start="29:18" pos:end="29:48">EXYNOS4210_COMBINER_GET_IRQ_NUM</name><argument_list pos:start="29:49" pos:end="29:54">(<argument pos:start="29:50" pos:end="29:50"><expr pos:start="29:50" pos:end="29:50"><literal type="number" pos:start="29:50" pos:end="29:50">1</literal></expr></argument>, <argument pos:start="29:53" pos:end="29:53"><expr pos:start="29:53" pos:end="29:53"><literal type="number" pos:start="29:53" pos:end="29:53">5</literal></expr></argument>)</argument_list></call> <operator pos:start="29:56" pos:end="29:57">||</operator>

                <name pos:start="31:17" pos:end="31:17">n</name> <operator pos:start="31:19" pos:end="31:20">==</operator> <call pos:start="31:22" pos:end="31:59"><name pos:start="31:22" pos:end="31:52">EXYNOS4210_COMBINER_GET_IRQ_NUM</name><argument_list pos:start="31:53" pos:end="31:59">(<argument pos:start="31:54" pos:end="31:55"><expr pos:start="31:54" pos:end="31:55"><literal type="number" pos:start="31:54" pos:end="31:55">12</literal></expr></argument>, <argument pos:start="31:58" pos:end="31:58"><expr pos:start="31:58" pos:end="31:58"><literal type="number" pos:start="31:58" pos:end="31:58">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:62" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:39">

            <comment type="block" pos:start="33:13" pos:end="33:54">/* MCT_G1 is passed to External and GIC */</comment>

            <expr_stmt pos:start="35:13" pos:end="35:39"><expr pos:start="35:13" pos:end="35:38"><name pos:start="35:13" pos:end="35:18">irq_id</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:38">EXT_GIC_ID_MCT_G1</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:19">(<expr pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:18">irq_id</name></expr>)</condition> <block pos:start="39:21" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:47">

            <expr_stmt pos:start="41:13" pos:end="43:47"><expr pos:start="41:13" pos:end="43:46"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:25">board_irqs</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">n</name></expr>]</index></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <call pos:start="41:32" pos:end="43:46"><name pos:start="41:32" pos:end="41:45">qemu_irq_split</name><argument_list pos:start="41:46" pos:end="43:46">(<argument pos:start="41:47" pos:end="41:68"><expr pos:start="41:47" pos:end="41:68"><name pos:start="41:47" pos:end="41:68"><name pos:start="41:47" pos:end="41:47">s</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:65">int_combiner_irq</name><index pos:start="41:66" pos:end="41:68">[<expr pos:start="41:67" pos:end="41:67"><name pos:start="41:67" pos:end="41:67">n</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:45"><expr pos:start="43:21" pos:end="43:45"><name pos:start="43:21" pos:end="43:45"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:34">ext_gic_irq</name><index pos:start="43:35" pos:end="43:45">[<expr pos:start="43:36" pos:end="43:44"><name pos:start="43:36" pos:end="43:41">irq_id</name><operator pos:start="43:42" pos:end="43:42">-</operator><literal type="number" pos:start="43:43" pos:end="43:44">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></for>

    <for pos:start="51:5" pos:end="73:5">for <control pos:start="51:9" pos:end="51:55">(<init pos:start="51:10" pos:end="51:10">;</init> <condition pos:start="51:12" pos:end="51:50"><expr pos:start="51:12" pos:end="51:49"><name pos:start="51:12" pos:end="51:12">n</name> <operator pos:start="51:14" pos:end="51:14">&lt;</operator> <name pos:start="51:16" pos:end="51:49">EXYNOS4210_MAX_INT_COMBINER_IN_IRQ</name></expr>;</condition> <incr pos:start="51:52" pos:end="51:54"><expr pos:start="51:52" pos:end="51:54"><name pos:start="51:52" pos:end="51:52">n</name><operator pos:start="51:53" pos:end="51:54">++</operator></expr></incr>)</control> <block pos:start="51:57" pos:end="73:5">{<block_content pos:start="55:9" pos:end="71:9">

        <comment type="block" pos:start="53:9" pos:end="53:72">/* these IDs are passed to Internal Combiner and External GIC */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:11">grp</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:48"><name pos:start="55:15" pos:end="55:45">EXYNOS4210_COMBINER_GET_GRP_NUM</name><argument_list pos:start="55:46" pos:end="55:48">(<argument pos:start="55:47" pos:end="55:47"><expr pos:start="55:47" pos:end="55:47"><name pos:start="55:47" pos:end="55:47">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:11">bit</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:48"><name pos:start="57:15" pos:end="57:45">EXYNOS4210_COMBINER_GET_BIT_NUM</name><argument_list pos:start="57:46" pos:end="57:48">(<argument pos:start="57:47" pos:end="57:47"><expr pos:start="57:47" pos:end="57:47"><name pos:start="57:47" pos:end="57:47">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="61:63"><expr pos:start="59:9" pos:end="61:62"><name pos:start="59:9" pos:end="59:14">irq_id</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="61:62"><name pos:start="59:18" pos:end="59:39">combiner_grp_to_gic_id</name><index pos:start="59:40" pos:end="61:57">[<expr pos:start="59:41" pos:end="61:56"><name pos:start="59:41" pos:end="59:43">grp</name> <operator pos:start="59:45" pos:end="59:45">-</operator>

                     <name pos:start="61:22" pos:end="61:56">EXYNOS4210_MAX_EXT_COMBINER_OUT_IRQ</name></expr>]</index><index pos:start="61:58" pos:end="61:62">[<expr pos:start="61:59" pos:end="61:61"><name pos:start="61:59" pos:end="61:61">bit</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:19">(<expr pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:18">irq_id</name></expr>)</condition> <block pos:start="65:21" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:47">

            <expr_stmt pos:start="67:13" pos:end="69:47"><expr pos:start="67:13" pos:end="69:46"><name pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:25">board_irqs</name><index pos:start="67:26" pos:end="67:28">[<expr pos:start="67:27" pos:end="67:27"><name pos:start="67:27" pos:end="67:27">n</name></expr>]</index></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <call pos:start="67:32" pos:end="69:46"><name pos:start="67:32" pos:end="67:45">qemu_irq_split</name><argument_list pos:start="67:46" pos:end="69:46">(<argument pos:start="67:47" pos:end="67:68"><expr pos:start="67:47" pos:end="67:68"><name pos:start="67:47" pos:end="67:68"><name pos:start="67:47" pos:end="67:47">s</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:65">int_combiner_irq</name><index pos:start="67:66" pos:end="67:68">[<expr pos:start="67:67" pos:end="67:67"><name pos:start="67:67" pos:end="67:67">n</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="69:21" pos:end="69:45"><expr pos:start="69:21" pos:end="69:45"><name pos:start="69:21" pos:end="69:45"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:34">ext_gic_irq</name><index pos:start="69:35" pos:end="69:45">[<expr pos:start="69:36" pos:end="69:44"><name pos:start="69:36" pos:end="69:41">irq_id</name><operator pos:start="69:42" pos:end="69:42">-</operator><literal type="number" pos:start="69:43" pos:end="69:44">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
