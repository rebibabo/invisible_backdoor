<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1467.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">handle_metadata</name><parameter_list pos:start="1:27" pos:end="1:60">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:38">RTMPContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">rt</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><name pos:start="1:45" pos:end="1:54">RTMPPacket</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:25">old_flv_size</name></decl>, <decl pos:start="5:28" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:31">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:15">ts</name></decl>, <decl pos:start="13:18" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:18" pos:end="13:20">cts</name></decl>, <decl pos:start="13:23" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:23" pos:end="13:25">pts</name> <init pos:start="13:27" pos:end="13:29">= <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:16">old_flv_size</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:47"><name pos:start="17:20" pos:end="17:32">update_offset</name><argument_list pos:start="17:33" pos:end="17:47">(<argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">rt</name></expr></argument>, <argument pos:start="17:38" pos:end="17:46"><expr pos:start="17:38" pos:end="17:46"><name pos:start="17:38" pos:end="17:46"><name pos:start="17:38" pos:end="17:40">pkt</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:46">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:61">(<expr pos:start="21:9" pos:end="21:60"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:55"><name pos:start="21:16" pos:end="21:26">av_reallocp</name><argument_list pos:start="21:27" pos:end="21:55">(<argument pos:start="21:28" pos:end="21:40"><expr pos:start="21:28" pos:end="21:40"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:40"><name pos:start="21:29" pos:end="21:30">rt</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:40">flv_data</name></name></expr></argument>, <argument pos:start="21:43" pos:end="21:54"><expr pos:start="21:43" pos:end="21:54"><name pos:start="21:43" pos:end="21:54"><name pos:start="21:43" pos:end="21:44">rt</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:54">flv_size</name></name></expr></argument>)</argument_list></call><operator pos:start="21:56" pos:end="21:56">)</operator> <operator pos:start="21:58" pos:end="21:58">&lt;</operator> <literal type="number" pos:start="21:60" pos:end="21:60">0</literal></expr>)</condition> <block pos:start="21:63" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:19">

        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:10">rt</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:20">flv_size</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:25">rt</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:34">flv_off</name></name> <operator pos:start="23:36" pos:end="23:36">=</operator> <literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:8">next</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:20"><name pos:start="31:12" pos:end="31:14">pkt</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:5">p</name>    <operator pos:start="33:10" pos:end="33:10">=</operator> <name pos:start="33:12" pos:end="33:23"><name pos:start="33:12" pos:end="33:13">rt</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:23">flv_data</name></name> <operator pos:start="33:25" pos:end="33:25">+</operator> <name pos:start="33:27" pos:end="33:38">old_flv_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:46">/* copy data while rewriting timestamps */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:6">ts</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <name pos:start="39:10" pos:end="39:23"><name pos:start="39:10" pos:end="39:12">pkt</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:23">timestamp</name></name></expr>;</expr_stmt>



    <while pos:start="43:5" pos:end="75:5">while <condition pos:start="43:11" pos:end="43:54">(<expr pos:start="43:12" pos:end="43:53"><name pos:start="43:12" pos:end="43:15">next</name> <operator pos:start="43:17" pos:end="43:17">-</operator> <name pos:start="43:19" pos:end="43:27"><name pos:start="43:19" pos:end="43:21">pkt</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:27">data</name></name> <operator pos:start="43:29" pos:end="43:29">&lt;</operator> <name pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:33">pkt</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:39">size</name></name> <operator pos:start="43:41" pos:end="43:41">-</operator> <name pos:start="43:43" pos:end="43:53">RTMP_HEADER</name></expr>)</condition> <block pos:start="43:56" pos:end="75:5">{<block_content pos:start="45:9" pos:end="73:29">

        <expr_stmt pos:start="45:9" pos:end="45:42"><expr pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:12">type</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:41"><name pos:start="45:16" pos:end="45:34">bytestream_get_byte</name><argument_list pos:start="45:35" pos:end="45:41">(<argument pos:start="45:36" pos:end="45:40"><expr pos:start="45:36" pos:end="45:40"><operator pos:start="45:36" pos:end="45:36">&amp;</operator><name pos:start="45:37" pos:end="45:40">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:12">size</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:41"><name pos:start="47:16" pos:end="47:34">bytestream_get_be24</name><argument_list pos:start="47:35" pos:end="47:41">(<argument pos:start="47:36" pos:end="47:40"><expr pos:start="47:36" pos:end="47:40"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:40">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:42"><expr pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:11">cts</name>  <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:41"><name pos:start="49:16" pos:end="49:34">bytestream_get_be24</name><argument_list pos:start="49:35" pos:end="49:41">(<argument pos:start="49:36" pos:end="49:40"><expr pos:start="49:36" pos:end="49:40"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:40">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:48"><expr pos:start="51:9" pos:end="51:47"><name pos:start="51:9" pos:end="51:11">cts</name> <operator pos:start="51:13" pos:end="51:14">|=</operator> <call pos:start="51:16" pos:end="51:41"><name pos:start="51:16" pos:end="51:34">bytestream_get_byte</name><argument_list pos:start="51:35" pos:end="51:41">(<argument pos:start="51:36" pos:end="51:40"><expr pos:start="51:36" pos:end="51:40"><operator pos:start="51:36" pos:end="51:36">&amp;</operator><name pos:start="51:37" pos:end="51:40">next</name></expr></argument>)</argument_list></call> <operator pos:start="51:43" pos:end="51:44">&lt;&lt;</operator> <literal type="number" pos:start="51:46" pos:end="51:47">24</literal></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:22"><if pos:start="53:9" pos:end="55:22">if <condition pos:start="53:12" pos:end="53:17">(<expr pos:start="53:13" pos:end="53:16"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:16">pts</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:22"><block_content pos:start="55:13" pos:end="55:22">

            <expr_stmt pos:start="55:13" pos:end="55:22"><expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:15">pts</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:21">cts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:10">ts</name> <operator pos:start="57:12" pos:end="57:13">+=</operator> <name pos:start="57:15" pos:end="57:17">cts</name> <operator pos:start="57:19" pos:end="57:19">-</operator> <name pos:start="57:21" pos:end="57:23">pts</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:18"><expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:11">pts</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:17">cts</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><call pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:27">bytestream_put_byte</name><argument_list pos:start="61:28" pos:end="61:37">(<argument pos:start="61:29" pos:end="61:30"><expr pos:start="61:29" pos:end="61:30"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:30">p</name></expr></argument>, <argument pos:start="61:33" pos:end="61:36"><expr pos:start="61:33" pos:end="61:36"><name pos:start="61:33" pos:end="61:36">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><call pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:27">bytestream_put_be24</name><argument_list pos:start="63:28" pos:end="63:37">(<argument pos:start="63:29" pos:end="63:30"><expr pos:start="63:29" pos:end="63:30"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:30">p</name></expr></argument>, <argument pos:start="63:33" pos:end="63:36"><expr pos:start="63:33" pos:end="63:36"><name pos:start="63:33" pos:end="63:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:36"><expr pos:start="65:9" pos:end="65:35"><call pos:start="65:9" pos:end="65:35"><name pos:start="65:9" pos:end="65:27">bytestream_put_be24</name><argument_list pos:start="65:28" pos:end="65:35">(<argument pos:start="65:29" pos:end="65:30"><expr pos:start="65:29" pos:end="65:30"><operator pos:start="65:29" pos:end="65:29">&amp;</operator><name pos:start="65:30" pos:end="65:30">p</name></expr></argument>, <argument pos:start="65:33" pos:end="65:34"><expr pos:start="65:33" pos:end="65:34"><name pos:start="65:33" pos:end="65:34">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:42"><expr pos:start="67:9" pos:end="67:41"><call pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:27">bytestream_put_byte</name><argument_list pos:start="67:28" pos:end="67:41">(<argument pos:start="67:29" pos:end="67:30"><expr pos:start="67:29" pos:end="67:30"><operator pos:start="67:29" pos:end="67:29">&amp;</operator><name pos:start="67:30" pos:end="67:30">p</name></expr></argument>, <argument pos:start="67:33" pos:end="67:40"><expr pos:start="67:33" pos:end="67:40"><name pos:start="67:33" pos:end="67:34">ts</name> <operator pos:start="67:36" pos:end="67:37">&gt;&gt;</operator> <literal type="number" pos:start="67:39" pos:end="67:40">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><call pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:14">memcpy</name><argument_list pos:start="69:15" pos:end="69:37">(<argument pos:start="69:16" pos:end="69:16"><expr pos:start="69:16" pos:end="69:16"><name pos:start="69:16" pos:end="69:16">p</name></expr></argument>, <argument pos:start="69:19" pos:end="69:22"><expr pos:start="69:19" pos:end="69:22"><name pos:start="69:19" pos:end="69:22">next</name></expr></argument>, <argument pos:start="69:25" pos:end="69:36"><expr pos:start="69:25" pos:end="69:36"><name pos:start="69:25" pos:end="69:28">size</name> <operator pos:start="69:30" pos:end="69:30">+</operator> <literal type="number" pos:start="69:32" pos:end="69:34">3</literal> <operator pos:start="69:34" pos:end="69:34">+</operator> <literal type="number" pos:start="69:36" pos:end="69:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:12">next</name> <operator pos:start="71:14" pos:end="71:15">+=</operator> <name pos:start="71:17" pos:end="71:20">size</name> <operator pos:start="71:22" pos:end="71:22">+</operator> <literal type="number" pos:start="71:24" pos:end="71:26">3</literal> <operator pos:start="71:26" pos:end="71:26">+</operator> <literal type="number" pos:start="71:28" pos:end="71:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:9">p</name>    <operator pos:start="73:14" pos:end="73:15">+=</operator> <name pos:start="73:17" pos:end="73:20">size</name> <operator pos:start="73:22" pos:end="73:22">+</operator> <literal type="number" pos:start="73:24" pos:end="73:26">3</literal> <operator pos:start="73:26" pos:end="73:26">+</operator> <literal type="number" pos:start="73:28" pos:end="73:28">4</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="77:5" pos:end="77:33"><expr pos:start="77:5" pos:end="77:32"><call pos:start="77:5" pos:end="77:32"><name pos:start="77:5" pos:end="77:10">memcpy</name><argument_list pos:start="77:11" pos:end="77:32">(<argument pos:start="77:12" pos:end="77:12"><expr pos:start="77:12" pos:end="77:12"><name pos:start="77:12" pos:end="77:12">p</name></expr></argument>, <argument pos:start="77:15" pos:end="77:18"><expr pos:start="77:15" pos:end="77:18"><name pos:start="77:15" pos:end="77:18">next</name></expr></argument>, <argument pos:start="77:21" pos:end="77:31"><expr pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:31">RTMP_HEADER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
