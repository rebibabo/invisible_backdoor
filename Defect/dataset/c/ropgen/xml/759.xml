<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/759.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">spdif_get_offset_and_codec</name><parameter_list pos:start="1:38" pos:end="7:60">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:69"><decl pos:start="3:39" pos:end="3:69"><type pos:start="3:39" pos:end="3:69"><name pos:start="3:39" pos:end="3:59"><name pos:start="3:39" pos:end="3:42">enum</name> <name pos:start="3:44" pos:end="3:59">IEC61937DataType</name></name></type> <name pos:start="3:61" pos:end="3:69">data_type</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:53"><decl pos:start="5:39" pos:end="5:53"><type pos:start="5:39" pos:end="5:53"><specifier pos:start="5:39" pos:end="5:43">const</specifier> <name pos:start="5:45" pos:end="5:48">char</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:53">buf</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:66"><decl pos:start="5:56" pos:end="5:66"><type pos:start="5:56" pos:end="5:66"><name pos:start="5:56" pos:end="5:58">int</name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:66">offset</name></decl></parameter>,

                                      <parameter pos:start="7:39" pos:end="7:59"><decl pos:start="7:39" pos:end="7:59"><type pos:start="7:39" pos:end="7:59"><name pos:start="7:39" pos:end="7:52"><name pos:start="7:39" pos:end="7:42">enum</name> <name pos:start="7:44" pos:end="7:52">AVCodecID</name></name> <modifier pos:start="7:54" pos:end="7:54">*</modifier></type><name pos:start="7:55" pos:end="7:59">codec</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="135:1">{<block_content pos:start="11:5" pos:end="133:13">

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:21">AACADTSHeaderInfo</name></type> <name pos:start="11:23" pos:end="11:29">aac_hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:21">gbc</name></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="131:5">switch <condition pos:start="17:12" pos:end="17:29">(<expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:21">data_type</name> <operator pos:start="17:23" pos:end="17:23">&amp;</operator> <literal type="number" pos:start="17:25" pos:end="17:28">0xff</literal></expr>)</condition> <block pos:start="17:31" pos:end="131:5">{<block_content pos:start="19:5" pos:end="129:36">

    <case pos:start="19:5" pos:end="19:22">case <expr pos:start="19:10" pos:end="19:21"><name pos:start="19:10" pos:end="19:21">IEC61937_AC3</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:15">offset</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:32">AC3_FRAME_SIZE</name> <operator pos:start="21:34" pos:end="21:35">&lt;&lt;</operator> <literal type="number" pos:start="21:37" pos:end="21:37">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:14">codec</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:32">AV_CODEC_ID_AC3</name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:31">case <expr pos:start="27:10" pos:end="27:30"><name pos:start="27:10" pos:end="27:30">IEC61937_MPEG1_LAYER1</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:15">offset</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:45"><name pos:start="29:19" pos:end="29:39">spdif_mpeg_pkt_offset</name><index pos:start="29:40" pos:end="29:42">[<expr pos:start="29:41" pos:end="29:41"><literal type="number" pos:start="29:41" pos:end="29:41">1</literal></expr>]</index><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:14">codec</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:32">AV_CODEC_ID_MP1</name></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:32">case <expr pos:start="35:10" pos:end="35:31"><name pos:start="35:10" pos:end="35:31">IEC61937_MPEG1_LAYER23</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:15">offset</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:45"><name pos:start="37:19" pos:end="37:39">spdif_mpeg_pkt_offset</name><index pos:start="37:40" pos:end="37:42">[<expr pos:start="37:41" pos:end="37:41"><literal type="number" pos:start="37:41" pos:end="37:41">1</literal></expr>]</index><index pos:start="37:43" pos:end="37:45">[<expr pos:start="37:44" pos:end="37:44"><literal type="number" pos:start="37:44" pos:end="37:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:14">codec</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:32">AV_CODEC_ID_MP3</name></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:28">case <expr pos:start="43:10" pos:end="43:27"><name pos:start="43:10" pos:end="43:27">IEC61937_MPEG2_EXT</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:15">offset</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <literal type="number" pos:start="45:19" pos:end="45:22">4608</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><operator pos:start="47:9" pos:end="47:9">*</operator><name pos:start="47:10" pos:end="47:14">codec</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:32">AV_CODEC_ID_MP3</name></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:28">case <expr pos:start="51:10" pos:end="51:27"><name pos:start="51:10" pos:end="51:27">IEC61937_MPEG2_AAC</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:59"><expr pos:start="53:9" pos:end="53:58"><call pos:start="53:9" pos:end="53:58"><name pos:start="53:9" pos:end="53:21">init_get_bits</name><argument_list pos:start="53:22" pos:end="53:58">(<argument pos:start="53:23" pos:end="53:26"><expr pos:start="53:23" pos:end="53:26"><operator pos:start="53:23" pos:end="53:23">&amp;</operator><name pos:start="53:24" pos:end="53:26">gbc</name></expr></argument>, <argument pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:31">buf</name></expr></argument>, <argument pos:start="53:34" pos:end="53:57"><expr pos:start="53:34" pos:end="53:57"><name pos:start="53:34" pos:end="53:53">AAC_ADTS_HEADER_SIZE</name> <operator pos:start="53:55" pos:end="53:55">*</operator> <literal type="number" pos:start="53:57" pos:end="53:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:52">(<expr pos:start="55:13" pos:end="55:51"><call pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:35">avpriv_aac_parse_header</name><argument_list pos:start="55:36" pos:end="55:51">(<argument pos:start="55:37" pos:end="55:40"><expr pos:start="55:37" pos:end="55:40"><operator pos:start="55:37" pos:end="55:37">&amp;</operator><name pos:start="55:38" pos:end="55:40">gbc</name></expr></argument>, <argument pos:start="55:43" pos:end="55:50"><expr pos:start="55:43" pos:end="55:50"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:50">aac_hdr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:54" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:39">

            <if_stmt pos:start="57:13" pos:end="59:77"><if pos:start="57:13" pos:end="59:77">if <condition pos:start="57:16" pos:end="57:18">(<expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">s</name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:77"><block_content pos:start="59:17" pos:end="59:77"> <comment type="block" pos:start="57:20" pos:end="57:49">/* be silent during a probe */</comment>

                <expr_stmt pos:start="59:17" pos:end="59:77"><expr pos:start="59:17" pos:end="59:76"><call pos:start="59:17" pos:end="59:76"><name pos:start="59:17" pos:end="59:22">av_log</name><argument_list pos:start="59:23" pos:end="59:76">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">s</name></expr></argument>, <argument pos:start="59:27" pos:end="59:38"><expr pos:start="59:27" pos:end="59:38"><name pos:start="59:27" pos:end="59:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:41" pos:end="59:75"><expr pos:start="59:41" pos:end="59:75"><literal type="string" pos:start="59:41" pos:end="59:75">"Invalid AAC packet in IEC 61937\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="61:13" pos:end="61:39">return <expr pos:start="61:20" pos:end="61:38"><name pos:start="61:20" pos:end="61:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><operator pos:start="65:9" pos:end="65:9">*</operator><name pos:start="65:10" pos:end="65:15">offset</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:33"><name pos:start="65:19" pos:end="65:25">aac_hdr</name><operator pos:start="65:26" pos:end="65:26">.</operator><name pos:start="65:27" pos:end="65:33">samples</name></name> <operator pos:start="65:35" pos:end="65:36">&lt;&lt;</operator> <literal type="number" pos:start="65:38" pos:end="65:38">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><operator pos:start="67:9" pos:end="67:9">*</operator><name pos:start="67:10" pos:end="67:14">codec</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:32">AV_CODEC_ID_AAC</name></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:35">case <expr pos:start="71:10" pos:end="71:34"><name pos:start="71:10" pos:end="71:34">IEC61937_MPEG2_LAYER1_LSF</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:46"><expr pos:start="73:9" pos:end="73:45"><operator pos:start="73:9" pos:end="73:9">*</operator><name pos:start="73:10" pos:end="73:15">offset</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:45"><name pos:start="73:19" pos:end="73:39">spdif_mpeg_pkt_offset</name><index pos:start="73:40" pos:end="73:42">[<expr pos:start="73:41" pos:end="73:41"><literal type="number" pos:start="73:41" pos:end="73:41">0</literal></expr>]</index><index pos:start="73:43" pos:end="73:45">[<expr pos:start="73:44" pos:end="73:44"><literal type="number" pos:start="73:44" pos:end="73:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:14">codec</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:32">AV_CODEC_ID_MP1</name></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:35">case <expr pos:start="79:10" pos:end="79:34"><name pos:start="79:10" pos:end="79:34">IEC61937_MPEG2_LAYER2_LSF</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:46"><expr pos:start="81:9" pos:end="81:45"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:15">offset</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:45"><name pos:start="81:19" pos:end="81:39">spdif_mpeg_pkt_offset</name><index pos:start="81:40" pos:end="81:42">[<expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr>]</index><index pos:start="81:43" pos:end="81:45">[<expr pos:start="81:44" pos:end="81:44"><literal type="number" pos:start="81:44" pos:end="81:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><operator pos:start="83:9" pos:end="83:9">*</operator><name pos:start="83:10" pos:end="83:14">codec</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:32">AV_CODEC_ID_MP2</name></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:35">case <expr pos:start="87:10" pos:end="87:34"><name pos:start="87:10" pos:end="87:34">IEC61937_MPEG2_LAYER3_LSF</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:46"><expr pos:start="89:9" pos:end="89:45"><operator pos:start="89:9" pos:end="89:9">*</operator><name pos:start="89:10" pos:end="89:15">offset</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:45"><name pos:start="89:19" pos:end="89:39">spdif_mpeg_pkt_offset</name><index pos:start="89:40" pos:end="89:42">[<expr pos:start="89:41" pos:end="89:41"><literal type="number" pos:start="89:41" pos:end="89:41">0</literal></expr>]</index><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><literal type="number" pos:start="89:44" pos:end="89:44">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:33"><expr pos:start="91:9" pos:end="91:32"><operator pos:start="91:9" pos:end="91:9">*</operator><name pos:start="91:10" pos:end="91:14">codec</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:32">AV_CODEC_ID_MP3</name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:23">case <expr pos:start="95:10" pos:end="95:22"><name pos:start="95:10" pos:end="95:22">IEC61937_DTS1</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:23"><expr pos:start="97:9" pos:end="97:22"><operator pos:start="97:9" pos:end="97:9">*</operator><name pos:start="97:10" pos:end="97:15">offset</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <literal type="number" pos:start="97:19" pos:end="97:22">2048</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:33"><expr pos:start="99:9" pos:end="99:32"><operator pos:start="99:9" pos:end="99:9">*</operator><name pos:start="99:10" pos:end="99:14">codec</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <name pos:start="99:18" pos:end="99:32">AV_CODEC_ID_DTS</name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:23">case <expr pos:start="103:10" pos:end="103:22"><name pos:start="103:10" pos:end="103:22">IEC61937_DTS2</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:23"><expr pos:start="105:9" pos:end="105:22"><operator pos:start="105:9" pos:end="105:9">*</operator><name pos:start="105:10" pos:end="105:15">offset</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <literal type="number" pos:start="105:19" pos:end="105:22">4096</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:33"><expr pos:start="107:9" pos:end="107:32"><operator pos:start="107:9" pos:end="107:9">*</operator><name pos:start="107:10" pos:end="107:14">codec</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <name pos:start="107:18" pos:end="107:32">AV_CODEC_ID_DTS</name></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:23">case <expr pos:start="111:10" pos:end="111:22"><name pos:start="111:10" pos:end="111:22">IEC61937_DTS3</name></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:23"><expr pos:start="113:9" pos:end="113:22"><operator pos:start="113:9" pos:end="113:9">*</operator><name pos:start="113:10" pos:end="113:15">offset</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <literal type="number" pos:start="113:19" pos:end="113:22">8192</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:33"><expr pos:start="115:9" pos:end="115:32"><operator pos:start="115:9" pos:end="115:9">*</operator><name pos:start="115:10" pos:end="115:14">codec</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:32">AV_CODEC_ID_DTS</name></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <default pos:start="119:5" pos:end="119:12">default:</default>

        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if <condition pos:start="121:12" pos:end="121:14">(<expr pos:start="121:13" pos:end="121:13"><name pos:start="121:13" pos:end="121:13">s</name></expr>)</condition> <block pos:start="121:16" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:45"> <comment type="block" pos:start="121:18" pos:end="121:47">/* be silent during a probe */</comment>

            <expr_stmt pos:start="123:13" pos:end="125:45"><expr pos:start="123:13" pos:end="125:44"><call pos:start="123:13" pos:end="125:44"><name pos:start="123:13" pos:end="123:33">avpriv_request_sample</name><argument_list pos:start="123:34" pos:end="125:44">(<argument pos:start="123:35" pos:end="123:35"><expr pos:start="123:35" pos:end="123:35"><name pos:start="123:35" pos:end="123:35">s</name></expr></argument>, <argument pos:start="123:38" pos:end="123:68"><expr pos:start="123:38" pos:end="123:68"><literal type="string" pos:start="123:38" pos:end="123:68">"Data type 0x%04x in IEC 61937"</literal></expr></argument>,

                                  <argument pos:start="125:35" pos:end="125:43"><expr pos:start="125:35" pos:end="125:43"><name pos:start="125:35" pos:end="125:43">data_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="129:9" pos:end="129:36">return <expr pos:start="129:16" pos:end="129:35"><name pos:start="129:16" pos:end="129:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
