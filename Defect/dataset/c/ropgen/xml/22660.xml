<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22660.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">vhost_dev_enable_notifiers</name><parameter_list pos:start="1:31" pos:end="1:74">(<parameter pos:start="1:32" pos:end="1:53"><decl pos:start="1:32" pos:end="1:53"><type pos:start="1:32" pos:end="1:53"><name pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:37">struct</name> <name pos:start="1:39" pos:end="1:47">vhost_dev</name></name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">hdev</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:67">VirtIODevice</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">BusState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">qbus</name> <init pos:start="5:20" pos:end="5:59">= <expr pos:start="5:22" pos:end="5:59"><call pos:start="5:22" pos:end="5:59"><name pos:start="5:22" pos:end="5:24">BUS</name><argument_list pos:start="5:25" pos:end="5:59">(<argument pos:start="5:26" pos:end="5:58"><expr pos:start="5:26" pos:end="5:58"><call pos:start="5:26" pos:end="5:58"><name pos:start="5:26" pos:end="5:44">qdev_get_parent_bus</name><argument_list pos:start="5:45" pos:end="5:58">(<argument pos:start="5:46" pos:end="5:57"><expr pos:start="5:46" pos:end="5:57"><call pos:start="5:46" pos:end="5:57"><name pos:start="5:46" pos:end="5:51">DEVICE</name><argument_list pos:start="5:52" pos:end="5:57">(<argument pos:start="5:53" pos:end="5:56"><expr pos:start="5:53" pos:end="5:56"><name pos:start="5:53" pos:end="5:56">vdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtioBusState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">vbus</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><call pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:37">VIRTIO_BUS</name><argument_list pos:start="7:38" pos:end="7:43">(<argument pos:start="7:39" pos:end="7:42"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">VirtioBusClass</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">k</name> <init pos:start="9:23" pos:end="9:50">= <expr pos:start="9:25" pos:end="9:50"><call pos:start="9:25" pos:end="9:50"><name pos:start="9:25" pos:end="9:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="9:45" pos:end="9:50">(<argument pos:start="9:46" pos:end="9:49"><expr pos:start="9:46" pos:end="9:49"><name pos:start="9:46" pos:end="9:49">vbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">r</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:29"><name pos:start="13:10" pos:end="13:10">k</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:29">set_host_notifier</name></name></expr>)</condition> <block pos:start="13:32" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:18">

        <expr_stmt pos:start="15:9" pos:end="15:69"><expr pos:start="15:9" pos:end="15:68"><call pos:start="15:9" pos:end="15:68"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="15:68">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="15:67"><expr pos:start="15:25" pos:end="15:67"><literal type="string" pos:start="15:25" pos:end="15:67">"binding does not support host notifiers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:9">r</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">-</operator><name pos:start="17:14" pos:end="17:19">ENOSYS</name></expr>;</expr_stmt>

        <goto pos:start="19:9" pos:end="19:18">goto <name pos:start="19:14" pos:end="19:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="25:5" pos:end="37:5">for <control pos:start="25:9" pos:end="25:36">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:31"><expr pos:start="25:17" pos:end="25:30"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:30"><name pos:start="25:21" pos:end="25:24">hdev</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:30">nvqs</name></name></expr>;</condition> <incr pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><operator pos:start="25:33" pos:end="25:34">++</operator><name pos:start="25:35" pos:end="25:35">i</name></expr></incr>)</control> <block pos:start="25:38" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:9">

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:72"><name pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:13">k</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:32">set_host_notifier</name></name><argument_list pos:start="27:33" pos:end="27:72">(<argument pos:start="27:34" pos:end="27:45"><expr pos:start="27:34" pos:end="27:45"><name pos:start="27:34" pos:end="27:45"><name pos:start="27:34" pos:end="27:37">qbus</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:45">parent</name></name></expr></argument>, <argument pos:start="27:48" pos:end="27:65"><expr pos:start="27:48" pos:end="27:65"><name pos:start="27:48" pos:end="27:61"><name pos:start="27:48" pos:end="27:51">hdev</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:61">vq_index</name></name> <operator pos:start="27:63" pos:end="27:63">+</operator> <name pos:start="27:65" pos:end="27:65">i</name></expr></argument>, <argument pos:start="27:68" pos:end="27:71"><expr pos:start="27:68" pos:end="27:71"><name pos:start="27:68" pos:end="27:71">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:18">(<expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">r</name> <operator pos:start="29:15" pos:end="29:15">&lt;</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition> <block pos:start="29:20" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:25">

            <expr_stmt pos:start="31:13" pos:end="31:80"><expr pos:start="31:13" pos:end="31:79"><call pos:start="31:13" pos:end="31:79"><name pos:start="31:13" pos:end="31:19">fprintf</name><argument_list pos:start="31:20" pos:end="31:79">(<argument pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:26"><name pos:start="31:21" pos:end="31:26">stderr</name></expr></argument>, <argument pos:start="31:29" pos:end="31:71"><expr pos:start="31:29" pos:end="31:71"><literal type="string" pos:start="31:29" pos:end="31:71">"vhost VQ %d notifier binding failed: %d\n"</literal></expr></argument>, <argument pos:start="31:74" pos:end="31:74"><expr pos:start="31:74" pos:end="31:74"><name pos:start="31:74" pos:end="31:74">i</name></expr></argument>, <argument pos:start="31:77" pos:end="31:78"><expr pos:start="31:77" pos:end="31:78"><operator pos:start="31:77" pos:end="31:77">-</operator><name pos:start="31:78" pos:end="31:78">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="33:13" pos:end="33:25">goto <name pos:start="33:18" pos:end="33:24">fail_vq</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

<label pos:start="43:1" pos:end="43:8"><name pos:start="43:1" pos:end="43:7">fail_vq</name>:</label>

    <while pos:start="45:5" pos:end="59:5">while <condition pos:start="45:11" pos:end="45:20">(<expr pos:start="45:12" pos:end="45:19"><operator pos:start="45:12" pos:end="45:13">--</operator><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:17">&gt;=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition> <block pos:start="45:22" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:24">

        <expr_stmt pos:start="47:9" pos:end="47:74"><expr pos:start="47:9" pos:end="47:73"><name pos:start="47:9" pos:end="47:9">r</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:73"><name pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:13">k</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:32">set_host_notifier</name></name><argument_list pos:start="47:33" pos:end="47:73">(<argument pos:start="47:34" pos:end="47:45"><expr pos:start="47:34" pos:end="47:45"><name pos:start="47:34" pos:end="47:45"><name pos:start="47:34" pos:end="47:37">qbus</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:45">parent</name></name></expr></argument>, <argument pos:start="47:48" pos:end="47:65"><expr pos:start="47:48" pos:end="47:65"><name pos:start="47:48" pos:end="47:61"><name pos:start="47:48" pos:end="47:51">hdev</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:61">vq_index</name></name> <operator pos:start="47:63" pos:end="47:63">+</operator> <name pos:start="47:65" pos:end="47:65">i</name></expr></argument>, <argument pos:start="47:68" pos:end="47:72"><expr pos:start="47:68" pos:end="47:72"><name pos:start="47:68" pos:end="47:72">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:18">(<expr pos:start="49:13" pos:end="49:17"><name pos:start="49:13" pos:end="49:13">r</name> <operator pos:start="49:15" pos:end="49:15">&lt;</operator> <literal type="number" pos:start="49:17" pos:end="49:17">0</literal></expr>)</condition> <block pos:start="49:20" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:27">

            <expr_stmt pos:start="51:13" pos:end="51:79"><expr pos:start="51:13" pos:end="51:78"><call pos:start="51:13" pos:end="51:78"><name pos:start="51:13" pos:end="51:19">fprintf</name><argument_list pos:start="51:20" pos:end="51:78">(<argument pos:start="51:21" pos:end="51:26"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:26">stderr</name></expr></argument>, <argument pos:start="51:29" pos:end="51:70"><expr pos:start="51:29" pos:end="51:70"><literal type="string" pos:start="51:29" pos:end="51:70">"vhost VQ %d notifier cleanup error: %d\n"</literal></expr></argument>, <argument pos:start="51:73" pos:end="51:73"><expr pos:start="51:73" pos:end="51:73"><name pos:start="51:73" pos:end="51:73">i</name></expr></argument>, <argument pos:start="51:76" pos:end="51:77"><expr pos:start="51:76" pos:end="51:77"><operator pos:start="51:76" pos:end="51:76">-</operator><name pos:start="51:77" pos:end="51:77">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:27"><expr pos:start="53:13" pos:end="53:26"><call pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:18">fflush</name><argument_list pos:start="53:19" pos:end="53:26">(<argument pos:start="53:20" pos:end="53:25"><expr pos:start="53:20" pos:end="53:25"><name pos:start="53:20" pos:end="53:25">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><call pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:14">assert</name> <argument_list pos:start="57:16" pos:end="57:23">(<argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:17">r</name> <operator pos:start="57:19" pos:end="57:20">&gt;=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

<label pos:start="61:1" pos:end="61:5"><name pos:start="61:1" pos:end="61:4">fail</name>:</label>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><name pos:start="63:12" pos:end="63:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
