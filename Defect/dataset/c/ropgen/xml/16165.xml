<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16165.c" pos:tabs="8"><function pos:start="1:1" pos:end="391:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">tcg_out_qemu_ld</name> <parameter_list pos:start="1:29" pos:end="1:72">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">TCGContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:56">TCGArg</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">args</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:71"><decl pos:start="1:65" pos:end="1:71"><type pos:start="1:65" pos:end="1:71"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:71">opc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="391:1">{<block_content pos:start="5:5" pos:end="390:0">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">addr_reg</name></decl>, <decl pos:start="5:19" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:26">data_reg</name></decl>, <decl pos:start="5:29" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:37">data_reg2</name></decl>, <decl pos:start="5:40" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:40" pos:end="5:41">r0</name></decl>, <decl pos:start="5:44" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:44" pos:end="5:45">r1</name></decl>, <decl pos:start="5:48" pos:end="5:52"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:48" pos:end="5:52">rbase</name></decl>, <decl pos:start="5:55" pos:end="5:63"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:55" pos:end="5:63">mem_index</name></decl>, <decl pos:start="5:66" pos:end="5:71"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:66" pos:end="5:71">s_bits</name></decl>, <decl pos:start="5:74" pos:end="5:78"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:74" pos:end="5:78">bswap</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:21">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:21">CONFIG_SOFTMMU</name></cpp:ifdef>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">r2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="16:0"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:20">label1_ptr</name></decl>, <decl pos:start="11:23" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:33">label2_ptr</name></decl>;</decl_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="15:1" pos:end="15:26">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:20">TARGET_LONG_BITS</name> <operator pos:start="15:22" pos:end="15:23">==</operator> <literal type="number" pos:start="15:25" pos:end="15:26">64</literal></expr></cpp:if>

    <decl_stmt pos:start="17:5" pos:end="20:0"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">addr_reg2</name></decl>;</decl_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:12">data_reg</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <operator pos:start="23:16" pos:end="23:16">*</operator><name pos:start="23:17" pos:end="23:20">args</name><operator pos:start="23:21" pos:end="23:22">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:22"><if pos:start="25:5" pos:end="27:28">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">opc</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <literal type="number" pos:start="25:16" pos:end="25:16">3</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:28"><block_content pos:start="27:9" pos:end="27:28">

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:17">data_reg2</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <operator pos:start="27:21" pos:end="27:21">*</operator><name pos:start="27:22" pos:end="27:25">args</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:22">else<block type="pseudo" pos:start="31:9" pos:end="31:22"><block_content pos:start="31:9" pos:end="31:22">

        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:17">data_reg2</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="36:0"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:12">addr_reg</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <operator pos:start="33:16" pos:end="33:16">*</operator><name pos:start="33:17" pos:end="33:20">args</name><operator pos:start="33:21" pos:end="33:22">++</operator></expr>;</expr_stmt>

<cpp:if pos:start="35:1" pos:end="35:26">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:20">TARGET_LONG_BITS</name> <operator pos:start="35:22" pos:end="35:23">==</operator> <literal type="number" pos:start="35:25" pos:end="35:26">64</literal></expr></cpp:if>

    <expr_stmt pos:start="37:5" pos:end="40:0"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:13">addr_reg2</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <operator pos:start="37:17" pos:end="37:17">*</operator><name pos:start="37:18" pos:end="37:21">args</name><operator pos:start="37:22" pos:end="37:23">++</operator></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:13">mem_index</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <operator pos:start="41:17" pos:end="41:17">*</operator><name pos:start="41:18" pos:end="41:21">args</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="48:0"><expr pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:10">s_bits</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <name pos:start="43:14" pos:end="43:16">opc</name> <operator pos:start="43:18" pos:end="43:18">&amp;</operator> <literal type="number" pos:start="43:20" pos:end="43:20">3</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="47:1" pos:end="47:21">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:21">CONFIG_SOFTMMU</name></cpp:ifdef>

    <expr_stmt pos:start="49:5" pos:end="49:11"><expr pos:start="49:5" pos:end="49:10"><name pos:start="49:5" pos:end="49:6">r0</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <literal type="number" pos:start="49:10" pos:end="49:10">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:11"><expr pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:6">r1</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <literal type="number" pos:start="51:10" pos:end="51:10">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:11"><expr pos:start="53:5" pos:end="53:10"><name pos:start="53:5" pos:end="53:6">r2</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <literal type="number" pos:start="53:10" pos:end="53:10">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:14"><expr pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:9">rbase</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <literal type="number" pos:start="55:13" pos:end="55:13">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="73:10"><expr pos:start="59:5" pos:end="73:9"><call pos:start="59:5" pos:end="73:9"><name pos:start="59:5" pos:end="59:13">tcg_out32</name> <argument_list pos:start="59:15" pos:end="73:9">(<argument pos:start="59:16" pos:end="59:16"><expr pos:start="59:16" pos:end="59:16"><name pos:start="59:16" pos:end="59:16">s</name></expr></argument>, <argument pos:start="59:19" pos:end="71:20"><expr pos:start="59:19" pos:end="71:20"><operator pos:start="59:19" pos:end="59:19">(</operator><name pos:start="59:20" pos:end="59:25">RLWINM</name>

                   <operator pos:start="61:20" pos:end="61:20">|</operator> <call pos:start="61:22" pos:end="61:28"><name pos:start="61:22" pos:end="61:23">RA</name> <argument_list pos:start="61:25" pos:end="61:28">(<argument pos:start="61:26" pos:end="61:27"><expr pos:start="61:26" pos:end="61:27"><name pos:start="61:26" pos:end="61:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="63:20" pos:end="63:20">|</operator> <call pos:start="63:22" pos:end="63:34"><name pos:start="63:22" pos:end="63:23">RS</name> <argument_list pos:start="63:25" pos:end="63:34">(<argument pos:start="63:26" pos:end="63:33"><expr pos:start="63:26" pos:end="63:33"><name pos:start="63:26" pos:end="63:33">addr_reg</name></expr></argument>)</argument_list></call>

                   <operator pos:start="65:20" pos:end="65:20">|</operator> <call pos:start="65:22" pos:end="65:70"><name pos:start="65:22" pos:end="65:23">SH</name> <argument_list pos:start="65:25" pos:end="65:70">(<argument pos:start="65:26" pos:end="65:69"><expr pos:start="65:26" pos:end="65:69"><literal type="number" pos:start="65:26" pos:end="65:29">32</literal> <operator pos:start="65:29" pos:end="65:29">-</operator> <operator pos:start="65:31" pos:end="65:31">(</operator><name pos:start="65:32" pos:end="65:47">TARGET_PAGE_BITS</name> <operator pos:start="65:49" pos:end="65:49">-</operator> <name pos:start="65:51" pos:end="65:68">CPU_TLB_ENTRY_BITS</name><operator pos:start="65:69" pos:end="65:69">)</operator></expr></argument>)</argument_list></call>

                   <operator pos:start="67:20" pos:end="67:20">|</operator> <call pos:start="67:22" pos:end="67:66"><name pos:start="67:22" pos:end="67:23">MB</name> <argument_list pos:start="67:25" pos:end="67:66">(<argument pos:start="67:26" pos:end="67:65"><expr pos:start="67:26" pos:end="67:65"><literal type="number" pos:start="67:26" pos:end="67:29">32</literal> <operator pos:start="67:29" pos:end="67:29">-</operator> <operator pos:start="67:31" pos:end="67:31">(</operator><name pos:start="67:32" pos:end="67:43">CPU_TLB_BITS</name> <operator pos:start="67:45" pos:end="67:45">+</operator> <name pos:start="67:47" pos:end="67:64">CPU_TLB_ENTRY_BITS</name><operator pos:start="67:65" pos:end="67:65">)</operator></expr></argument>)</argument_list></call>

                   <operator pos:start="69:20" pos:end="69:20">|</operator> <call pos:start="69:22" pos:end="69:49"><name pos:start="69:22" pos:end="69:23">ME</name> <argument_list pos:start="69:25" pos:end="69:49">(<argument pos:start="69:26" pos:end="69:48"><expr pos:start="69:26" pos:end="69:48"><literal type="number" pos:start="69:26" pos:end="69:29">31</literal> <operator pos:start="69:29" pos:end="69:29">-</operator> <name pos:start="69:31" pos:end="69:48">CPU_TLB_ENTRY_BITS</name></expr></argument>)</argument_list></call>

                   <operator pos:start="71:20" pos:end="71:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:60"><expr pos:start="75:5" pos:end="75:59"><call pos:start="75:5" pos:end="75:59"><name pos:start="75:5" pos:end="75:13">tcg_out32</name> <argument_list pos:start="75:15" pos:end="75:59">(<argument pos:start="75:16" pos:end="75:16"><expr pos:start="75:16" pos:end="75:16"><name pos:start="75:16" pos:end="75:16">s</name></expr></argument>, <argument pos:start="75:19" pos:end="75:58"><expr pos:start="75:19" pos:end="75:58"><name pos:start="75:19" pos:end="75:21">ADD</name> <operator pos:start="75:23" pos:end="75:23">|</operator> <call pos:start="75:25" pos:end="75:31"><name pos:start="75:25" pos:end="75:26">RT</name> <argument_list pos:start="75:28" pos:end="75:31">(<argument pos:start="75:29" pos:end="75:30"><expr pos:start="75:29" pos:end="75:30"><name pos:start="75:29" pos:end="75:30">r0</name></expr></argument>)</argument_list></call> <operator pos:start="75:33" pos:end="75:33">|</operator> <call pos:start="75:35" pos:end="75:41"><name pos:start="75:35" pos:end="75:36">RA</name> <argument_list pos:start="75:38" pos:end="75:41">(<argument pos:start="75:39" pos:end="75:40"><expr pos:start="75:39" pos:end="75:40"><name pos:start="75:39" pos:end="75:40">r0</name></expr></argument>)</argument_list></call> <operator pos:start="75:43" pos:end="75:43">|</operator> <call pos:start="75:45" pos:end="75:58"><name pos:start="75:45" pos:end="75:46">RB</name> <argument_list pos:start="75:48" pos:end="75:58">(<argument pos:start="75:49" pos:end="75:57"><expr pos:start="75:49" pos:end="75:57"><name pos:start="75:49" pos:end="75:57">TCG_AREG0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="87:10"><expr pos:start="77:5" pos:end="87:9"><call pos:start="77:5" pos:end="87:9"><name pos:start="77:5" pos:end="77:13">tcg_out32</name> <argument_list pos:start="77:15" pos:end="87:9">(<argument pos:start="77:16" pos:end="77:16"><expr pos:start="77:16" pos:end="77:16"><name pos:start="77:16" pos:end="77:16">s</name></expr></argument>, <argument pos:start="77:19" pos:end="85:20"><expr pos:start="77:19" pos:end="85:20"><operator pos:start="77:19" pos:end="77:19">(</operator><name pos:start="77:20" pos:end="77:23">LWZU</name>

                   <operator pos:start="79:20" pos:end="79:20">|</operator> <call pos:start="79:22" pos:end="79:28"><name pos:start="79:22" pos:end="79:23">RT</name> <argument_list pos:start="79:25" pos:end="79:28">(<argument pos:start="79:26" pos:end="79:27"><expr pos:start="79:26" pos:end="79:27"><name pos:start="79:26" pos:end="79:27">r1</name></expr></argument>)</argument_list></call>

                   <operator pos:start="81:20" pos:end="81:20">|</operator> <call pos:start="81:22" pos:end="81:28"><name pos:start="81:22" pos:end="81:23">RA</name> <argument_list pos:start="81:25" pos:end="81:28">(<argument pos:start="81:26" pos:end="81:27"><expr pos:start="81:26" pos:end="81:27"><name pos:start="81:26" pos:end="81:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="83:20" pos:end="83:20">|</operator> <call pos:start="83:22" pos:end="83:75"><name pos:start="83:22" pos:end="83:29">offsetof</name> <argument_list pos:start="83:31" pos:end="83:75">(<argument pos:start="83:32" pos:end="83:39"><expr pos:start="83:32" pos:end="83:39"><name pos:start="83:32" pos:end="83:39">CPUState</name></expr></argument>, <argument pos:start="83:42" pos:end="83:74"><expr pos:start="83:42" pos:end="83:74"><name pos:start="83:42" pos:end="83:64"><name pos:start="83:42" pos:end="83:50">tlb_table</name><index pos:start="83:51" pos:end="83:61">[<expr pos:start="83:52" pos:end="83:60"><name pos:start="83:52" pos:end="83:60">mem_index</name></expr>]</index><index pos:start="83:62" pos:end="83:64">[<expr pos:start="83:63" pos:end="83:63"><literal type="number" pos:start="83:63" pos:end="83:63">0</literal></expr>]</index></name><operator pos:start="83:65" pos:end="83:65">.</operator><name pos:start="83:66" pos:end="83:74">addr_read</name></expr></argument>)</argument_list></call>

                   <operator pos:start="85:20" pos:end="85:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="103:10"><expr pos:start="89:5" pos:end="103:9"><call pos:start="89:5" pos:end="103:9"><name pos:start="89:5" pos:end="89:13">tcg_out32</name> <argument_list pos:start="89:15" pos:end="103:9">(<argument pos:start="89:16" pos:end="89:16"><expr pos:start="89:16" pos:end="89:16"><name pos:start="89:16" pos:end="89:16">s</name></expr></argument>, <argument pos:start="89:19" pos:end="101:20"><expr pos:start="89:19" pos:end="101:20"><operator pos:start="89:19" pos:end="89:19">(</operator><name pos:start="89:20" pos:end="89:25">RLWINM</name>

                   <operator pos:start="91:20" pos:end="91:20">|</operator> <call pos:start="91:22" pos:end="91:28"><name pos:start="91:22" pos:end="91:23">RA</name> <argument_list pos:start="91:25" pos:end="91:28">(<argument pos:start="91:26" pos:end="91:27"><expr pos:start="91:26" pos:end="91:27"><name pos:start="91:26" pos:end="91:27">r2</name></expr></argument>)</argument_list></call>

                   <operator pos:start="93:20" pos:end="93:20">|</operator> <call pos:start="93:22" pos:end="93:34"><name pos:start="93:22" pos:end="93:23">RS</name> <argument_list pos:start="93:25" pos:end="93:34">(<argument pos:start="93:26" pos:end="93:33"><expr pos:start="93:26" pos:end="93:33"><name pos:start="93:26" pos:end="93:33">addr_reg</name></expr></argument>)</argument_list></call>

                   <operator pos:start="95:20" pos:end="95:20">|</operator> <call pos:start="95:22" pos:end="95:27"><name pos:start="95:22" pos:end="95:23">SH</name> <argument_list pos:start="95:25" pos:end="95:27">(<argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><literal type="number" pos:start="95:26" pos:end="95:26">0</literal></expr></argument>)</argument_list></call>

                   <operator pos:start="97:20" pos:end="97:20">|</operator> <call pos:start="97:22" pos:end="97:44"><name pos:start="97:22" pos:end="97:23">MB</name> <argument_list pos:start="97:25" pos:end="97:44">(<argument pos:start="97:26" pos:end="97:43"><expr pos:start="97:26" pos:end="97:43"><operator pos:start="97:26" pos:end="97:26">(</operator><literal type="number" pos:start="97:27" pos:end="97:30">32</literal> <operator pos:start="97:30" pos:end="97:30">-</operator> <name pos:start="97:32" pos:end="97:37">s_bits</name><operator pos:start="97:38" pos:end="97:38">)</operator> <operator pos:start="97:40" pos:end="97:40">&amp;</operator> <literal type="number" pos:start="97:42" pos:end="97:43">31</literal></expr></argument>)</argument_list></call>

                   <operator pos:start="99:20" pos:end="99:20">|</operator> <call pos:start="99:22" pos:end="99:47"><name pos:start="99:22" pos:end="99:23">ME</name> <argument_list pos:start="99:25" pos:end="99:47">(<argument pos:start="99:26" pos:end="99:46"><expr pos:start="99:26" pos:end="99:46"><literal type="number" pos:start="99:26" pos:end="99:29">31</literal> <operator pos:start="99:29" pos:end="99:29">-</operator> <name pos:start="99:31" pos:end="99:46">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call>

                   <operator pos:start="101:20" pos:end="101:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="110:0"><expr pos:start="107:5" pos:end="107:51"><call pos:start="107:5" pos:end="107:51"><name pos:start="107:5" pos:end="107:13">tcg_out32</name> <argument_list pos:start="107:15" pos:end="107:51">(<argument pos:start="107:16" pos:end="107:16"><expr pos:start="107:16" pos:end="107:16"><name pos:start="107:16" pos:end="107:16">s</name></expr></argument>, <argument pos:start="107:19" pos:end="107:50"><expr pos:start="107:19" pos:end="107:50"><name pos:start="107:19" pos:end="107:21">CMP</name> <operator pos:start="107:23" pos:end="107:23">|</operator> <call pos:start="107:25" pos:end="107:30"><name pos:start="107:25" pos:end="107:26">BF</name> <argument_list pos:start="107:28" pos:end="107:30">(<argument pos:start="107:29" pos:end="107:29"><expr pos:start="107:29" pos:end="107:29"><literal type="number" pos:start="107:29" pos:end="107:29">7</literal></expr></argument>)</argument_list></call> <operator pos:start="107:32" pos:end="107:32">|</operator> <call pos:start="107:34" pos:end="107:40"><name pos:start="107:34" pos:end="107:35">RA</name> <argument_list pos:start="107:37" pos:end="107:40">(<argument pos:start="107:38" pos:end="107:39"><expr pos:start="107:38" pos:end="107:39"><name pos:start="107:38" pos:end="107:39">r2</name></expr></argument>)</argument_list></call> <operator pos:start="107:42" pos:end="107:42">|</operator> <call pos:start="107:44" pos:end="107:50"><name pos:start="107:44" pos:end="107:45">RB</name> <argument_list pos:start="107:47" pos:end="107:50">(<argument pos:start="107:48" pos:end="107:49"><expr pos:start="107:48" pos:end="107:49"><name pos:start="107:48" pos:end="107:49">r1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="109:1" pos:end="109:26">#<cpp:directive pos:start="109:2" pos:end="109:3">if</cpp:directive> <expr pos:start="109:5" pos:end="109:26"><name pos:start="109:5" pos:end="109:20">TARGET_LONG_BITS</name> <operator pos:start="109:22" pos:end="109:23">==</operator> <literal type="number" pos:start="109:25" pos:end="109:26">64</literal></expr></cpp:if>

    <expr_stmt pos:start="111:5" pos:end="111:47"><expr pos:start="111:5" pos:end="111:46"><call pos:start="111:5" pos:end="111:46"><name pos:start="111:5" pos:end="111:13">tcg_out32</name> <argument_list pos:start="111:15" pos:end="111:46">(<argument pos:start="111:16" pos:end="111:16"><expr pos:start="111:16" pos:end="111:16"><name pos:start="111:16" pos:end="111:16">s</name></expr></argument>, <argument pos:start="111:19" pos:end="111:45"><expr pos:start="111:19" pos:end="111:45"><name pos:start="111:19" pos:end="111:21">LWZ</name> <operator pos:start="111:23" pos:end="111:23">|</operator> <call pos:start="111:25" pos:end="111:31"><name pos:start="111:25" pos:end="111:26">RT</name> <argument_list pos:start="111:28" pos:end="111:31">(<argument pos:start="111:29" pos:end="111:30"><expr pos:start="111:29" pos:end="111:30"><name pos:start="111:29" pos:end="111:30">r1</name></expr></argument>)</argument_list></call> <operator pos:start="111:33" pos:end="111:33">|</operator> <call pos:start="111:35" pos:end="111:41"><name pos:start="111:35" pos:end="111:36">RA</name> <argument_list pos:start="111:38" pos:end="111:41">(<argument pos:start="111:39" pos:end="111:40"><expr pos:start="111:39" pos:end="111:40"><name pos:start="111:39" pos:end="111:40">r0</name></expr></argument>)</argument_list></call> <operator pos:start="111:43" pos:end="111:43">|</operator> <literal type="number" pos:start="111:45" pos:end="111:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:59"><expr pos:start="113:5" pos:end="113:58"><call pos:start="113:5" pos:end="113:58"><name pos:start="113:5" pos:end="113:13">tcg_out32</name> <argument_list pos:start="113:15" pos:end="113:58">(<argument pos:start="113:16" pos:end="113:16"><expr pos:start="113:16" pos:end="113:16"><name pos:start="113:16" pos:end="113:16">s</name></expr></argument>, <argument pos:start="113:19" pos:end="113:57"><expr pos:start="113:19" pos:end="113:57"><name pos:start="113:19" pos:end="113:21">CMP</name> <operator pos:start="113:23" pos:end="113:23">|</operator> <call pos:start="113:25" pos:end="113:30"><name pos:start="113:25" pos:end="113:26">BF</name> <argument_list pos:start="113:28" pos:end="113:30">(<argument pos:start="113:29" pos:end="113:29"><expr pos:start="113:29" pos:end="113:29"><literal type="number" pos:start="113:29" pos:end="113:29">6</literal></expr></argument>)</argument_list></call> <operator pos:start="113:32" pos:end="113:32">|</operator> <call pos:start="113:34" pos:end="113:47"><name pos:start="113:34" pos:end="113:35">RA</name> <argument_list pos:start="113:37" pos:end="113:47">(<argument pos:start="113:38" pos:end="113:46"><expr pos:start="113:38" pos:end="113:46"><name pos:start="113:38" pos:end="113:46">addr_reg2</name></expr></argument>)</argument_list></call> <operator pos:start="113:49" pos:end="113:49">|</operator> <call pos:start="113:51" pos:end="113:57"><name pos:start="113:51" pos:end="113:52">RB</name> <argument_list pos:start="113:54" pos:end="113:57">(<argument pos:start="113:55" pos:end="113:56"><expr pos:start="113:55" pos:end="113:56"><name pos:start="113:55" pos:end="113:56">r1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="118:0"><expr pos:start="115:5" pos:end="115:72"><call pos:start="115:5" pos:end="115:72"><name pos:start="115:5" pos:end="115:13">tcg_out32</name> <argument_list pos:start="115:15" pos:end="115:72">(<argument pos:start="115:16" pos:end="115:16"><expr pos:start="115:16" pos:end="115:16"><name pos:start="115:16" pos:end="115:16">s</name></expr></argument>, <argument pos:start="115:19" pos:end="115:71"><expr pos:start="115:19" pos:end="115:71"><name pos:start="115:19" pos:end="115:23">CRAND</name> <operator pos:start="115:25" pos:end="115:25">|</operator> <call pos:start="115:27" pos:end="115:39"><name pos:start="115:27" pos:end="115:28">BT</name> <argument_list pos:start="115:30" pos:end="115:39">(<argument pos:start="115:31" pos:end="115:31"><expr pos:start="115:31" pos:end="115:31"><literal type="number" pos:start="115:31" pos:end="115:31">7</literal></expr></argument>, <argument pos:start="115:34" pos:end="115:38"><expr pos:start="115:34" pos:end="115:38"><name pos:start="115:34" pos:end="115:38">CR_EQ</name></expr></argument>)</argument_list></call> <operator pos:start="115:41" pos:end="115:41">|</operator> <call pos:start="115:43" pos:end="115:55"><name pos:start="115:43" pos:end="115:44">BA</name> <argument_list pos:start="115:46" pos:end="115:55">(<argument pos:start="115:47" pos:end="115:47"><expr pos:start="115:47" pos:end="115:47"><literal type="number" pos:start="115:47" pos:end="115:47">6</literal></expr></argument>, <argument pos:start="115:50" pos:end="115:54"><expr pos:start="115:50" pos:end="115:54"><name pos:start="115:50" pos:end="115:54">CR_EQ</name></expr></argument>)</argument_list></call> <operator pos:start="115:57" pos:end="115:57">|</operator> <call pos:start="115:59" pos:end="115:71"><name pos:start="115:59" pos:end="115:60">BB</name> <argument_list pos:start="115:62" pos:end="115:71">(<argument pos:start="115:63" pos:end="115:63"><expr pos:start="115:63" pos:end="115:63"><literal type="number" pos:start="115:63" pos:end="115:63">7</literal></expr></argument>, <argument pos:start="115:66" pos:end="115:70"><expr pos:start="115:66" pos:end="115:70"><name pos:start="115:66" pos:end="115:70">CR_EQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="121:5" pos:end="124:0"><expr pos:start="121:5" pos:end="121:28"><name pos:start="121:5" pos:end="121:14">label1_ptr</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <name pos:start="121:18" pos:end="121:28"><name pos:start="121:18" pos:end="121:18">s</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:28">code_ptr</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="123:1" pos:end="123:16">#<cpp:directive pos:start="123:2" pos:end="123:6">ifdef</cpp:directive> <name pos:start="123:8" pos:end="123:16">FAST_PATH</name></cpp:ifdef>

    <expr_stmt pos:start="125:5" pos:end="134:0"><expr pos:start="125:5" pos:end="125:52"><call pos:start="125:5" pos:end="125:52"><name pos:start="125:5" pos:end="125:13">tcg_out32</name> <argument_list pos:start="125:15" pos:end="125:52">(<argument pos:start="125:16" pos:end="125:16"><expr pos:start="125:16" pos:end="125:16"><name pos:start="125:16" pos:end="125:16">s</name></expr></argument>, <argument pos:start="125:19" pos:end="125:51"><expr pos:start="125:19" pos:end="125:51"><name pos:start="125:19" pos:end="125:20">BC</name> <operator pos:start="125:22" pos:end="125:22">|</operator> <call pos:start="125:24" pos:end="125:36"><name pos:start="125:24" pos:end="125:25">BI</name> <argument_list pos:start="125:27" pos:end="125:36">(<argument pos:start="125:28" pos:end="125:28"><expr pos:start="125:28" pos:end="125:28"><literal type="number" pos:start="125:28" pos:end="125:28">7</literal></expr></argument>, <argument pos:start="125:31" pos:end="125:35"><expr pos:start="125:31" pos:end="125:35"><name pos:start="125:31" pos:end="125:35">CR_EQ</name></expr></argument>)</argument_list></call> <operator pos:start="125:38" pos:end="125:38">|</operator> <name pos:start="125:40" pos:end="125:51">BO_COND_TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="127:1" pos:end="127:6">#<cpp:directive pos:start="127:2" pos:end="127:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="131:5" pos:end="131:19">/* slow path */</comment>

<cpp:if pos:start="133:1" pos:end="133:26">#<cpp:directive pos:start="133:2" pos:end="133:3">if</cpp:directive> <expr pos:start="133:5" pos:end="133:26"><name pos:start="133:5" pos:end="133:20">TARGET_LONG_BITS</name> <operator pos:start="133:22" pos:end="133:23">==</operator> <literal type="number" pos:start="133:25" pos:end="133:26">32</literal></expr></cpp:if>

    <expr_stmt pos:start="135:5" pos:end="135:33"><expr pos:start="135:5" pos:end="135:32"><call pos:start="135:5" pos:end="135:32"><name pos:start="135:5" pos:end="135:15">tcg_out_mov</name> <argument_list pos:start="135:17" pos:end="135:32">(<argument pos:start="135:18" pos:end="135:18"><expr pos:start="135:18" pos:end="135:18"><name pos:start="135:18" pos:end="135:18">s</name></expr></argument>, <argument pos:start="135:21" pos:end="135:21"><expr pos:start="135:21" pos:end="135:21"><literal type="number" pos:start="135:21" pos:end="135:21">3</literal></expr></argument>, <argument pos:start="135:24" pos:end="135:31"><expr pos:start="135:24" pos:end="135:31"><name pos:start="135:24" pos:end="135:31">addr_reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="140:0"><expr pos:start="137:5" pos:end="137:48"><call pos:start="137:5" pos:end="137:48"><name pos:start="137:5" pos:end="137:16">tcg_out_movi</name> <argument_list pos:start="137:18" pos:end="137:48">(<argument pos:start="137:19" pos:end="137:19"><expr pos:start="137:19" pos:end="137:19"><name pos:start="137:19" pos:end="137:19">s</name></expr></argument>, <argument pos:start="137:22" pos:end="137:33"><expr pos:start="137:22" pos:end="137:33"><name pos:start="137:22" pos:end="137:33">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="137:36" pos:end="137:36"><expr pos:start="137:36" pos:end="137:36"><literal type="number" pos:start="137:36" pos:end="137:36">4</literal></expr></argument>, <argument pos:start="137:39" pos:end="137:47"><expr pos:start="137:39" pos:end="137:47"><name pos:start="137:39" pos:end="137:47">mem_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="139:1" pos:end="139:5">#<cpp:directive pos:start="139:2" pos:end="139:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="141:5" pos:end="141:34"><expr pos:start="141:5" pos:end="141:33"><call pos:start="141:5" pos:end="141:33"><name pos:start="141:5" pos:end="141:15">tcg_out_mov</name> <argument_list pos:start="141:17" pos:end="141:33">(<argument pos:start="141:18" pos:end="141:18"><expr pos:start="141:18" pos:end="141:18"><name pos:start="141:18" pos:end="141:18">s</name></expr></argument>, <argument pos:start="141:21" pos:end="141:21"><expr pos:start="141:21" pos:end="141:21"><literal type="number" pos:start="141:21" pos:end="141:21">3</literal></expr></argument>, <argument pos:start="141:24" pos:end="141:32"><expr pos:start="141:24" pos:end="141:32"><name pos:start="141:24" pos:end="141:32">addr_reg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:33"><expr pos:start="143:5" pos:end="143:32"><call pos:start="143:5" pos:end="143:32"><name pos:start="143:5" pos:end="143:15">tcg_out_mov</name> <argument_list pos:start="143:17" pos:end="143:32">(<argument pos:start="143:18" pos:end="143:18"><expr pos:start="143:18" pos:end="143:18"><name pos:start="143:18" pos:end="143:18">s</name></expr></argument>, <argument pos:start="143:21" pos:end="143:21"><expr pos:start="143:21" pos:end="143:21"><literal type="number" pos:start="143:21" pos:end="143:21">4</literal></expr></argument>, <argument pos:start="143:24" pos:end="143:31"><expr pos:start="143:24" pos:end="143:31"><name pos:start="143:24" pos:end="143:31">addr_reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="148:0"><expr pos:start="145:5" pos:end="145:48"><call pos:start="145:5" pos:end="145:48"><name pos:start="145:5" pos:end="145:16">tcg_out_movi</name> <argument_list pos:start="145:18" pos:end="145:48">(<argument pos:start="145:19" pos:end="145:19"><expr pos:start="145:19" pos:end="145:19"><name pos:start="145:19" pos:end="145:19">s</name></expr></argument>, <argument pos:start="145:22" pos:end="145:33"><expr pos:start="145:22" pos:end="145:33"><name pos:start="145:22" pos:end="145:33">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="145:36" pos:end="145:36"><expr pos:start="145:36" pos:end="145:36"><literal type="number" pos:start="145:36" pos:end="145:36">5</literal></expr></argument>, <argument pos:start="145:39" pos:end="145:47"><expr pos:start="145:39" pos:end="145:47"><name pos:start="145:39" pos:end="145:47">mem_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="151:5" pos:end="151:67"><expr pos:start="151:5" pos:end="151:66"><call pos:start="151:5" pos:end="151:66"><name pos:start="151:5" pos:end="151:16">tcg_out_call</name> <argument_list pos:start="151:18" pos:end="151:66">(<argument pos:start="151:19" pos:end="151:19"><expr pos:start="151:19" pos:end="151:19"><name pos:start="151:19" pos:end="151:19">s</name></expr></argument>, <argument pos:start="151:22" pos:end="151:62"><expr pos:start="151:22" pos:end="151:62"><operator pos:start="151:22" pos:end="151:22">(</operator><name pos:start="151:23" pos:end="151:37">tcg_target_long</name><operator pos:start="151:38" pos:end="151:38">)</operator> <name pos:start="151:40" pos:end="151:62"><name pos:start="151:40" pos:end="151:54">qemu_ld_helpers</name><index pos:start="151:55" pos:end="151:62">[<expr pos:start="151:56" pos:end="151:61"><name pos:start="151:56" pos:end="151:61">s_bits</name></expr>]</index></name></expr></argument>, <argument pos:start="151:65" pos:end="151:65"><expr pos:start="151:65" pos:end="151:65"><literal type="number" pos:start="151:65" pos:end="151:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="153:5" pos:end="213:5">switch <condition pos:start="153:12" pos:end="153:16">(<expr pos:start="153:13" pos:end="153:15"><name pos:start="153:13" pos:end="153:15">opc</name></expr>)</condition> <block pos:start="153:18" pos:end="213:5">{<block_content pos:start="155:5" pos:end="211:14">

    <case pos:start="155:5" pos:end="155:13">case <expr pos:start="155:10" pos:end="155:12"><literal type="number" pos:start="155:10" pos:end="155:10">0</literal><operator pos:start="155:11" pos:end="155:11">|</operator><literal type="number" pos:start="155:12" pos:end="155:12">4</literal></expr>:</case>

        <expr_stmt pos:start="157:9" pos:end="157:54"><expr pos:start="157:9" pos:end="157:53"><call pos:start="157:9" pos:end="157:53"><name pos:start="157:9" pos:end="157:17">tcg_out32</name> <argument_list pos:start="157:19" pos:end="157:53">(<argument pos:start="157:20" pos:end="157:20"><expr pos:start="157:20" pos:end="157:20"><name pos:start="157:20" pos:end="157:20">s</name></expr></argument>, <argument pos:start="157:23" pos:end="157:52"><expr pos:start="157:23" pos:end="157:52"><name pos:start="157:23" pos:end="157:27">EXTSB</name> <operator pos:start="157:29" pos:end="157:29">|</operator> <call pos:start="157:31" pos:end="157:43"><name pos:start="157:31" pos:end="157:32">RA</name> <argument_list pos:start="157:34" pos:end="157:43">(<argument pos:start="157:35" pos:end="157:42"><expr pos:start="157:35" pos:end="157:42"><name pos:start="157:35" pos:end="157:42">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="157:45" pos:end="157:45">|</operator> <call pos:start="157:47" pos:end="157:52"><name pos:start="157:47" pos:end="157:48">RS</name> <argument_list pos:start="157:50" pos:end="157:52">(<argument pos:start="157:51" pos:end="157:51"><expr pos:start="157:51" pos:end="157:51"><literal type="number" pos:start="157:51" pos:end="157:51">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:13">case <expr pos:start="161:10" pos:end="161:12"><literal type="number" pos:start="161:10" pos:end="161:10">1</literal><operator pos:start="161:11" pos:end="161:11">|</operator><literal type="number" pos:start="161:12" pos:end="161:12">4</literal></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="163:54"><expr pos:start="163:9" pos:end="163:53"><call pos:start="163:9" pos:end="163:53"><name pos:start="163:9" pos:end="163:17">tcg_out32</name> <argument_list pos:start="163:19" pos:end="163:53">(<argument pos:start="163:20" pos:end="163:20"><expr pos:start="163:20" pos:end="163:20"><name pos:start="163:20" pos:end="163:20">s</name></expr></argument>, <argument pos:start="163:23" pos:end="163:52"><expr pos:start="163:23" pos:end="163:52"><name pos:start="163:23" pos:end="163:27">EXTSH</name> <operator pos:start="163:29" pos:end="163:29">|</operator> <call pos:start="163:31" pos:end="163:43"><name pos:start="163:31" pos:end="163:32">RA</name> <argument_list pos:start="163:34" pos:end="163:43">(<argument pos:start="163:35" pos:end="163:42"><expr pos:start="163:35" pos:end="163:42"><name pos:start="163:35" pos:end="163:42">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="163:45" pos:end="163:45">|</operator> <call pos:start="163:47" pos:end="163:52"><name pos:start="163:47" pos:end="163:48">RS</name> <argument_list pos:start="163:50" pos:end="163:52">(<argument pos:start="163:51" pos:end="163:51"><expr pos:start="163:51" pos:end="163:51"><literal type="number" pos:start="163:51" pos:end="163:51">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:11">case <expr pos:start="167:10" pos:end="167:10"><literal type="number" pos:start="167:10" pos:end="167:10">0</literal></expr>:</case>

    <case pos:start="169:5" pos:end="169:11">case <expr pos:start="169:10" pos:end="169:10"><literal type="number" pos:start="169:10" pos:end="169:10">1</literal></expr>:</case>

    <case pos:start="171:5" pos:end="171:11">case <expr pos:start="171:10" pos:end="171:10"><literal type="number" pos:start="171:10" pos:end="171:10">2</literal></expr>:</case>

        <if_stmt pos:start="173:9" pos:end="175:41"><if pos:start="173:9" pos:end="175:41">if <condition pos:start="173:12" pos:end="173:26">(<expr pos:start="173:13" pos:end="173:25"><name pos:start="173:13" pos:end="173:20">data_reg</name> <operator pos:start="173:22" pos:end="173:23">!=</operator> <literal type="number" pos:start="173:25" pos:end="173:25">3</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:41"><block_content pos:start="175:13" pos:end="175:41">

            <expr_stmt pos:start="175:13" pos:end="175:41"><expr pos:start="175:13" pos:end="175:40"><call pos:start="175:13" pos:end="175:40"><name pos:start="175:13" pos:end="175:23">tcg_out_mov</name> <argument_list pos:start="175:25" pos:end="175:40">(<argument pos:start="175:26" pos:end="175:26"><expr pos:start="175:26" pos:end="175:26"><name pos:start="175:26" pos:end="175:26">s</name></expr></argument>, <argument pos:start="175:29" pos:end="175:36"><expr pos:start="175:29" pos:end="175:36"><name pos:start="175:29" pos:end="175:36">data_reg</name></expr></argument>, <argument pos:start="175:39" pos:end="175:39"><expr pos:start="175:39" pos:end="175:39"><literal type="number" pos:start="175:39" pos:end="175:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:11">case <expr pos:start="179:10" pos:end="179:10"><literal type="number" pos:start="179:10" pos:end="179:10">3</literal></expr>:</case>

        <if_stmt pos:start="181:9" pos:end="209:9"><if pos:start="181:9" pos:end="201:9">if <condition pos:start="181:12" pos:end="181:26">(<expr pos:start="181:13" pos:end="181:25"><name pos:start="181:13" pos:end="181:20">data_reg</name> <operator pos:start="181:22" pos:end="181:23">==</operator> <literal type="number" pos:start="181:25" pos:end="181:25">3</literal></expr>)</condition> <block pos:start="181:28" pos:end="201:9">{<block_content pos:start="183:13" pos:end="199:13">

            <if_stmt pos:start="183:13" pos:end="199:13"><if pos:start="183:13" pos:end="191:13">if <condition pos:start="183:16" pos:end="183:31">(<expr pos:start="183:17" pos:end="183:30"><name pos:start="183:17" pos:end="183:25">data_reg2</name> <operator pos:start="183:27" pos:end="183:28">==</operator> <literal type="number" pos:start="183:30" pos:end="183:30">4</literal></expr>)</condition> <block pos:start="183:33" pos:end="191:13">{<block_content pos:start="185:17" pos:end="189:38">

                <expr_stmt pos:start="185:17" pos:end="185:38"><expr pos:start="185:17" pos:end="185:37"><call pos:start="185:17" pos:end="185:37"><name pos:start="185:17" pos:end="185:27">tcg_out_mov</name> <argument_list pos:start="185:29" pos:end="185:37">(<argument pos:start="185:30" pos:end="185:30"><expr pos:start="185:30" pos:end="185:30"><name pos:start="185:30" pos:end="185:30">s</name></expr></argument>, <argument pos:start="185:33" pos:end="185:33"><expr pos:start="185:33" pos:end="185:33"><literal type="number" pos:start="185:33" pos:end="185:33">0</literal></expr></argument>, <argument pos:start="185:36" pos:end="185:36"><expr pos:start="185:36" pos:end="185:36"><literal type="number" pos:start="185:36" pos:end="185:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:38"><expr pos:start="187:17" pos:end="187:37"><call pos:start="187:17" pos:end="187:37"><name pos:start="187:17" pos:end="187:27">tcg_out_mov</name> <argument_list pos:start="187:29" pos:end="187:37">(<argument pos:start="187:30" pos:end="187:30"><expr pos:start="187:30" pos:end="187:30"><name pos:start="187:30" pos:end="187:30">s</name></expr></argument>, <argument pos:start="187:33" pos:end="187:33"><expr pos:start="187:33" pos:end="187:33"><literal type="number" pos:start="187:33" pos:end="187:33">4</literal></expr></argument>, <argument pos:start="187:36" pos:end="187:36"><expr pos:start="187:36" pos:end="187:36"><literal type="number" pos:start="187:36" pos:end="187:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:38"><expr pos:start="189:17" pos:end="189:37"><call pos:start="189:17" pos:end="189:37"><name pos:start="189:17" pos:end="189:27">tcg_out_mov</name> <argument_list pos:start="189:29" pos:end="189:37">(<argument pos:start="189:30" pos:end="189:30"><expr pos:start="189:30" pos:end="189:30"><name pos:start="189:30" pos:end="189:30">s</name></expr></argument>, <argument pos:start="189:33" pos:end="189:33"><expr pos:start="189:33" pos:end="189:33"><literal type="number" pos:start="189:33" pos:end="189:33">3</literal></expr></argument>, <argument pos:start="189:36" pos:end="189:36"><expr pos:start="189:36" pos:end="189:36"><literal type="number" pos:start="189:36" pos:end="189:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="193:13" pos:end="199:13">else <block pos:start="193:18" pos:end="199:13">{<block_content pos:start="195:17" pos:end="197:38">

                <expr_stmt pos:start="195:17" pos:end="195:46"><expr pos:start="195:17" pos:end="195:45"><call pos:start="195:17" pos:end="195:45"><name pos:start="195:17" pos:end="195:27">tcg_out_mov</name> <argument_list pos:start="195:29" pos:end="195:45">(<argument pos:start="195:30" pos:end="195:30"><expr pos:start="195:30" pos:end="195:30"><name pos:start="195:30" pos:end="195:30">s</name></expr></argument>, <argument pos:start="195:33" pos:end="195:41"><expr pos:start="195:33" pos:end="195:41"><name pos:start="195:33" pos:end="195:41">data_reg2</name></expr></argument>, <argument pos:start="195:44" pos:end="195:44"><expr pos:start="195:44" pos:end="195:44"><literal type="number" pos:start="195:44" pos:end="195:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:38"><expr pos:start="197:17" pos:end="197:37"><call pos:start="197:17" pos:end="197:37"><name pos:start="197:17" pos:end="197:27">tcg_out_mov</name> <argument_list pos:start="197:29" pos:end="197:37">(<argument pos:start="197:30" pos:end="197:30"><expr pos:start="197:30" pos:end="197:30"><name pos:start="197:30" pos:end="197:30">s</name></expr></argument>, <argument pos:start="197:33" pos:end="197:33"><expr pos:start="197:33" pos:end="197:33"><literal type="number" pos:start="197:33" pos:end="197:33">3</literal></expr></argument>, <argument pos:start="197:36" pos:end="197:36"><expr pos:start="197:36" pos:end="197:36"><literal type="number" pos:start="197:36" pos:end="197:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if>

        <else pos:start="203:9" pos:end="209:9">else <block pos:start="203:14" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:62">

            <if_stmt pos:start="205:13" pos:end="205:60"><if pos:start="205:13" pos:end="205:60">if <condition pos:start="205:16" pos:end="205:30">(<expr pos:start="205:17" pos:end="205:29"><name pos:start="205:17" pos:end="205:24">data_reg</name> <operator pos:start="205:26" pos:end="205:27">!=</operator> <literal type="number" pos:start="205:29" pos:end="205:29">4</literal></expr>)</condition><block type="pseudo" pos:start="205:32" pos:end="205:60"><block_content pos:start="205:32" pos:end="205:60"> <expr_stmt pos:start="205:32" pos:end="205:60"><expr pos:start="205:32" pos:end="205:59"><call pos:start="205:32" pos:end="205:59"><name pos:start="205:32" pos:end="205:42">tcg_out_mov</name> <argument_list pos:start="205:44" pos:end="205:59">(<argument pos:start="205:45" pos:end="205:45"><expr pos:start="205:45" pos:end="205:45"><name pos:start="205:45" pos:end="205:45">s</name></expr></argument>, <argument pos:start="205:48" pos:end="205:55"><expr pos:start="205:48" pos:end="205:55"><name pos:start="205:48" pos:end="205:55">data_reg</name></expr></argument>, <argument pos:start="205:58" pos:end="205:58"><expr pos:start="205:58" pos:end="205:58"><literal type="number" pos:start="205:58" pos:end="205:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="207:13" pos:end="207:62"><if pos:start="207:13" pos:end="207:62">if <condition pos:start="207:16" pos:end="207:31">(<expr pos:start="207:17" pos:end="207:30"><name pos:start="207:17" pos:end="207:25">data_reg2</name> <operator pos:start="207:27" pos:end="207:28">!=</operator> <literal type="number" pos:start="207:30" pos:end="207:30">3</literal></expr>)</condition><block type="pseudo" pos:start="207:33" pos:end="207:62"><block_content pos:start="207:33" pos:end="207:62"> <expr_stmt pos:start="207:33" pos:end="207:62"><expr pos:start="207:33" pos:end="207:61"><call pos:start="207:33" pos:end="207:61"><name pos:start="207:33" pos:end="207:43">tcg_out_mov</name> <argument_list pos:start="207:45" pos:end="207:61">(<argument pos:start="207:46" pos:end="207:46"><expr pos:start="207:46" pos:end="207:46"><name pos:start="207:46" pos:end="207:46">s</name></expr></argument>, <argument pos:start="207:49" pos:end="207:57"><expr pos:start="207:49" pos:end="207:57"><name pos:start="207:49" pos:end="207:57">data_reg2</name></expr></argument>, <argument pos:start="207:60" pos:end="207:60"><expr pos:start="207:60" pos:end="207:60"><literal type="number" pos:start="207:60" pos:end="207:60">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="211:9" pos:end="211:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="215:5" pos:end="215:29"><expr pos:start="215:5" pos:end="215:28"><name pos:start="215:5" pos:end="215:14">label2_ptr</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <name pos:start="215:18" pos:end="215:28"><name pos:start="215:18" pos:end="215:18">s</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:28">code_ptr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="224:0"><expr pos:start="217:5" pos:end="217:20"><call pos:start="217:5" pos:end="217:20"><name pos:start="217:5" pos:end="217:13">tcg_out32</name> <argument_list pos:start="217:15" pos:end="217:20">(<argument pos:start="217:16" pos:end="217:16"><expr pos:start="217:16" pos:end="217:16"><name pos:start="217:16" pos:end="217:16">s</name></expr></argument>, <argument pos:start="217:19" pos:end="217:19"><expr pos:start="217:19" pos:end="217:19"><name pos:start="217:19" pos:end="217:19">B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="221:5" pos:end="221:27">/* label1: fast path */</comment>

<cpp:ifdef pos:start="223:1" pos:end="223:16">#<cpp:directive pos:start="223:2" pos:end="223:6">ifdef</cpp:directive> <name pos:start="223:8" pos:end="223:16">FAST_PATH</name></cpp:ifdef>

    <expr_stmt pos:start="225:5" pos:end="228:0"><expr pos:start="225:5" pos:end="225:58"><call pos:start="225:5" pos:end="225:58"><name pos:start="225:5" pos:end="225:14">reloc_pc14</name> <argument_list pos:start="225:16" pos:end="225:58">(<argument pos:start="225:17" pos:end="225:26"><expr pos:start="225:17" pos:end="225:26"><name pos:start="225:17" pos:end="225:26">label1_ptr</name></expr></argument>, <argument pos:start="225:29" pos:end="225:57"><expr pos:start="225:29" pos:end="225:57"><operator pos:start="225:29" pos:end="225:29">(</operator><name pos:start="225:30" pos:end="225:44">tcg_target_long</name><operator pos:start="225:45" pos:end="225:45">)</operator> <name pos:start="225:47" pos:end="225:57"><name pos:start="225:47" pos:end="225:47">s</name><operator pos:start="225:48" pos:end="225:49">-&gt;</operator><name pos:start="225:50" pos:end="225:57">code_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="227:1" pos:end="227:6">#<cpp:directive pos:start="227:2" pos:end="227:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="231:5" pos:end="231:69">/* r0 now contains &amp;env-&gt;tlb_table[mem_index][index].addr_read */</comment>

    <expr_stmt pos:start="233:5" pos:end="243:22"><expr pos:start="233:5" pos:end="243:21"><call pos:start="233:5" pos:end="243:21"><name pos:start="233:5" pos:end="233:13">tcg_out32</name> <argument_list pos:start="233:15" pos:end="243:21">(<argument pos:start="233:16" pos:end="233:16"><expr pos:start="233:16" pos:end="233:16"><name pos:start="233:16" pos:end="233:16">s</name></expr></argument>, <argument pos:start="233:19" pos:end="243:20"><expr pos:start="233:19" pos:end="243:20"><operator pos:start="233:19" pos:end="233:19">(</operator><name pos:start="233:20" pos:end="233:22">LWZ</name>

                   <operator pos:start="235:20" pos:end="235:20">|</operator> <call pos:start="235:22" pos:end="235:28"><name pos:start="235:22" pos:end="235:23">RT</name> <argument_list pos:start="235:25" pos:end="235:28">(<argument pos:start="235:26" pos:end="235:27"><expr pos:start="235:26" pos:end="235:27"><name pos:start="235:26" pos:end="235:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="237:20" pos:end="237:20">|</operator> <call pos:start="237:22" pos:end="237:28"><name pos:start="237:22" pos:end="237:23">RA</name> <argument_list pos:start="237:25" pos:end="237:28">(<argument pos:start="237:26" pos:end="237:27"><expr pos:start="237:26" pos:end="237:27"><name pos:start="237:26" pos:end="237:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="239:20" pos:end="239:20">|</operator> <operator pos:start="239:22" pos:end="239:22">(</operator><name pos:start="239:23" pos:end="239:35">ADDEND_OFFSET</name> <operator pos:start="239:37" pos:end="239:37">+</operator> <call pos:start="239:39" pos:end="239:68"><name pos:start="239:39" pos:end="239:46">offsetof</name> <argument_list pos:start="239:48" pos:end="239:68">(<argument pos:start="239:49" pos:end="239:59"><expr pos:start="239:49" pos:end="239:59"><name pos:start="239:49" pos:end="239:59">CPUTLBEntry</name></expr></argument>, <argument pos:start="239:62" pos:end="239:67"><expr pos:start="239:62" pos:end="239:67"><name pos:start="239:62" pos:end="239:67">addend</name></expr></argument>)</argument_list></call>

                      <operator pos:start="241:23" pos:end="241:23">-</operator> <call pos:start="241:25" pos:end="241:57"><name pos:start="241:25" pos:end="241:32">offsetof</name> <argument_list pos:start="241:34" pos:end="241:57">(<argument pos:start="241:35" pos:end="241:45"><expr pos:start="241:35" pos:end="241:45"><name pos:start="241:35" pos:end="241:45">CPUTLBEntry</name></expr></argument>, <argument pos:start="241:48" pos:end="241:56"><expr pos:start="241:48" pos:end="241:56"><name pos:start="241:48" pos:end="241:56">addr_read</name></expr></argument>)</argument_list></call><operator pos:start="241:58" pos:end="241:58">)</operator>

                   <operator pos:start="243:20" pos:end="243:20">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="245:5" pos:end="245:54">/* r0 = env-&gt;tlb_table[mem_index][index].addend */</comment>

    <expr_stmt pos:start="247:5" pos:end="254:0"><expr pos:start="247:5" pos:end="247:58"><call pos:start="247:5" pos:end="247:58"><name pos:start="247:5" pos:end="247:13">tcg_out32</name> <argument_list pos:start="247:15" pos:end="247:58">(<argument pos:start="247:16" pos:end="247:16"><expr pos:start="247:16" pos:end="247:16"><name pos:start="247:16" pos:end="247:16">s</name></expr></argument>, <argument pos:start="247:19" pos:end="247:57"><expr pos:start="247:19" pos:end="247:57"><name pos:start="247:19" pos:end="247:21">ADD</name> <operator pos:start="247:23" pos:end="247:23">|</operator> <call pos:start="247:25" pos:end="247:31"><name pos:start="247:25" pos:end="247:26">RT</name> <argument_list pos:start="247:28" pos:end="247:31">(<argument pos:start="247:29" pos:end="247:30"><expr pos:start="247:29" pos:end="247:30"><name pos:start="247:29" pos:end="247:30">r0</name></expr></argument>)</argument_list></call> <operator pos:start="247:33" pos:end="247:33">|</operator> <call pos:start="247:35" pos:end="247:41"><name pos:start="247:35" pos:end="247:36">RA</name> <argument_list pos:start="247:38" pos:end="247:41">(<argument pos:start="247:39" pos:end="247:40"><expr pos:start="247:39" pos:end="247:40"><name pos:start="247:39" pos:end="247:40">r0</name></expr></argument>)</argument_list></call> <operator pos:start="247:43" pos:end="247:43">|</operator> <call pos:start="247:45" pos:end="247:57"><name pos:start="247:45" pos:end="247:46">RB</name> <argument_list pos:start="247:48" pos:end="247:57">(<argument pos:start="247:49" pos:end="247:56"><expr pos:start="247:49" pos:end="247:56"><name pos:start="247:49" pos:end="247:56">addr_reg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="249:5" pos:end="249:61">/* r0 = env-&gt;tlb_table[mem_index][index].addend + addr */</comment>



<cpp:else pos:start="253:1" pos:end="253:5">#<cpp:directive pos:start="253:2" pos:end="253:5">else</cpp:directive></cpp:else>  <comment type="block" pos:start="253:8" pos:end="253:28">/* !CONFIG_SOFTMMU */</comment>

    <expr_stmt pos:start="255:5" pos:end="255:18"><expr pos:start="255:5" pos:end="255:17"><name pos:start="255:5" pos:end="255:6">r0</name> <operator pos:start="255:8" pos:end="255:8">=</operator> <name pos:start="255:10" pos:end="255:17">addr_reg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:11"><expr pos:start="257:5" pos:end="257:10"><name pos:start="257:5" pos:end="257:6">r1</name> <operator pos:start="257:8" pos:end="257:8">=</operator> <literal type="number" pos:start="257:10" pos:end="257:10">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="266:0"><expr pos:start="259:5" pos:end="259:47"><name pos:start="259:5" pos:end="259:9">rbase</name> <operator pos:start="259:11" pos:end="259:11">=</operator> <ternary pos:start="259:13" pos:end="259:47"><condition pos:start="259:13" pos:end="259:24"><expr pos:start="259:13" pos:end="259:22"><name pos:start="259:13" pos:end="259:22">GUEST_BASE</name></expr> ?</condition><then pos:start="259:26" pos:end="259:43"> <expr pos:start="259:26" pos:end="259:43"><name pos:start="259:26" pos:end="259:43">TCG_GUEST_BASE_REG</name></expr> </then><else pos:start="259:45" pos:end="259:47">: <expr pos:start="259:47" pos:end="259:47"><literal type="number" pos:start="259:47" pos:end="259:47">0</literal></expr></else></ternary></expr>;</expr_stmt>

<cpp:endif pos:start="261:1" pos:end="261:6">#<cpp:directive pos:start="261:2" pos:end="261:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="265:1" pos:end="265:29">#<cpp:directive pos:start="265:2" pos:end="265:6">ifdef</cpp:directive> <name pos:start="265:8" pos:end="265:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="267:5" pos:end="270:0"><expr pos:start="267:5" pos:end="267:13"><name pos:start="267:5" pos:end="267:9">bswap</name> <operator pos:start="267:11" pos:end="267:11">=</operator> <literal type="number" pos:start="267:13" pos:end="267:13">0</literal></expr>;</expr_stmt>

<cpp:else pos:start="269:1" pos:end="269:5">#<cpp:directive pos:start="269:2" pos:end="269:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="271:5" pos:end="274:0"><expr pos:start="271:5" pos:end="271:13"><name pos:start="271:5" pos:end="271:9">bswap</name> <operator pos:start="271:11" pos:end="271:11">=</operator> <literal type="number" pos:start="271:13" pos:end="271:13">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="273:1" pos:end="273:6">#<cpp:directive pos:start="273:2" pos:end="273:6">endif</cpp:directive></cpp:endif>



    <switch pos:start="277:5" pos:end="386:0">switch <condition pos:start="277:12" pos:end="277:16">(<expr pos:start="277:13" pos:end="277:15"><name pos:start="277:13" pos:end="277:15">opc</name></expr>)</condition> <block pos:start="277:18" pos:end="386:0">{<block_content pos:start="279:5" pos:end="379:14">

    <default pos:start="279:5" pos:end="279:12">default:</default>

    <case pos:start="281:5" pos:end="281:11">case <expr pos:start="281:10" pos:end="281:10"><literal type="number" pos:start="281:10" pos:end="281:10">0</literal></expr>:</case>

        <expr_stmt pos:start="283:9" pos:end="283:56"><expr pos:start="283:9" pos:end="283:55"><call pos:start="283:9" pos:end="283:55"><name pos:start="283:9" pos:end="283:17">tcg_out32</name> <argument_list pos:start="283:19" pos:end="283:55">(<argument pos:start="283:20" pos:end="283:20"><expr pos:start="283:20" pos:end="283:20"><name pos:start="283:20" pos:end="283:20">s</name></expr></argument>, <argument pos:start="283:23" pos:end="283:54"><expr pos:start="283:23" pos:end="283:54"><name pos:start="283:23" pos:end="283:26">LBZX</name> <operator pos:start="283:28" pos:end="283:28">|</operator> <call pos:start="283:30" pos:end="283:54"><name pos:start="283:30" pos:end="283:32">TAB</name> <argument_list pos:start="283:34" pos:end="283:54">(<argument pos:start="283:35" pos:end="283:42"><expr pos:start="283:35" pos:end="283:42"><name pos:start="283:35" pos:end="283:42">data_reg</name></expr></argument>, <argument pos:start="283:45" pos:end="283:49"><expr pos:start="283:45" pos:end="283:49"><name pos:start="283:45" pos:end="283:49">rbase</name></expr></argument>, <argument pos:start="283:52" pos:end="283:53"><expr pos:start="283:52" pos:end="283:53"><name pos:start="283:52" pos:end="283:53">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="285:9" pos:end="285:14">break;</break>

    <case pos:start="287:5" pos:end="287:13">case <expr pos:start="287:10" pos:end="287:12"><literal type="number" pos:start="287:10" pos:end="287:10">0</literal><operator pos:start="287:11" pos:end="287:11">|</operator><literal type="number" pos:start="287:12" pos:end="287:12">4</literal></expr>:</case>

        <expr_stmt pos:start="289:9" pos:end="289:56"><expr pos:start="289:9" pos:end="289:55"><call pos:start="289:9" pos:end="289:55"><name pos:start="289:9" pos:end="289:17">tcg_out32</name> <argument_list pos:start="289:19" pos:end="289:55">(<argument pos:start="289:20" pos:end="289:20"><expr pos:start="289:20" pos:end="289:20"><name pos:start="289:20" pos:end="289:20">s</name></expr></argument>, <argument pos:start="289:23" pos:end="289:54"><expr pos:start="289:23" pos:end="289:54"><name pos:start="289:23" pos:end="289:26">LBZX</name> <operator pos:start="289:28" pos:end="289:28">|</operator> <call pos:start="289:30" pos:end="289:54"><name pos:start="289:30" pos:end="289:32">TAB</name> <argument_list pos:start="289:34" pos:end="289:54">(<argument pos:start="289:35" pos:end="289:42"><expr pos:start="289:35" pos:end="289:42"><name pos:start="289:35" pos:end="289:42">data_reg</name></expr></argument>, <argument pos:start="289:45" pos:end="289:49"><expr pos:start="289:45" pos:end="289:49"><name pos:start="289:45" pos:end="289:49">rbase</name></expr></argument>, <argument pos:start="289:52" pos:end="289:53"><expr pos:start="289:52" pos:end="289:53"><name pos:start="289:52" pos:end="289:53">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:61"><expr pos:start="291:9" pos:end="291:60"><call pos:start="291:9" pos:end="291:60"><name pos:start="291:9" pos:end="291:17">tcg_out32</name> <argument_list pos:start="291:19" pos:end="291:60">(<argument pos:start="291:20" pos:end="291:20"><expr pos:start="291:20" pos:end="291:20"><name pos:start="291:20" pos:end="291:20">s</name></expr></argument>, <argument pos:start="291:23" pos:end="291:59"><expr pos:start="291:23" pos:end="291:59"><name pos:start="291:23" pos:end="291:27">EXTSB</name> <operator pos:start="291:29" pos:end="291:29">|</operator> <call pos:start="291:31" pos:end="291:43"><name pos:start="291:31" pos:end="291:32">RA</name> <argument_list pos:start="291:34" pos:end="291:43">(<argument pos:start="291:35" pos:end="291:42"><expr pos:start="291:35" pos:end="291:42"><name pos:start="291:35" pos:end="291:42">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="291:45" pos:end="291:45">|</operator> <call pos:start="291:47" pos:end="291:59"><name pos:start="291:47" pos:end="291:48">RS</name> <argument_list pos:start="291:50" pos:end="291:59">(<argument pos:start="291:51" pos:end="291:58"><expr pos:start="291:51" pos:end="291:58"><name pos:start="291:51" pos:end="291:58">data_reg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <case pos:start="295:5" pos:end="295:11">case <expr pos:start="295:10" pos:end="295:10"><literal type="number" pos:start="295:10" pos:end="295:10">1</literal></expr>:</case>

        <if_stmt pos:start="297:9" pos:end="303:60"><if pos:start="297:9" pos:end="299:61">if <condition pos:start="297:12" pos:end="297:18">(<expr pos:start="297:13" pos:end="297:17"><name pos:start="297:13" pos:end="297:17">bswap</name></expr>)</condition><block type="pseudo" pos:start="299:13" pos:end="299:61"><block_content pos:start="299:13" pos:end="299:61">

            <expr_stmt pos:start="299:13" pos:end="299:61"><expr pos:start="299:13" pos:end="299:60"><call pos:start="299:13" pos:end="299:60"><name pos:start="299:13" pos:end="299:21">tcg_out32</name> <argument_list pos:start="299:23" pos:end="299:60">(<argument pos:start="299:24" pos:end="299:24"><expr pos:start="299:24" pos:end="299:24"><name pos:start="299:24" pos:end="299:24">s</name></expr></argument>, <argument pos:start="299:27" pos:end="299:59"><expr pos:start="299:27" pos:end="299:59"><name pos:start="299:27" pos:end="299:31">LHBRX</name> <operator pos:start="299:33" pos:end="299:33">|</operator> <call pos:start="299:35" pos:end="299:59"><name pos:start="299:35" pos:end="299:37">TAB</name> <argument_list pos:start="299:39" pos:end="299:59">(<argument pos:start="299:40" pos:end="299:47"><expr pos:start="299:40" pos:end="299:47"><name pos:start="299:40" pos:end="299:47">data_reg</name></expr></argument>, <argument pos:start="299:50" pos:end="299:54"><expr pos:start="299:50" pos:end="299:54"><name pos:start="299:50" pos:end="299:54">rbase</name></expr></argument>, <argument pos:start="299:57" pos:end="299:58"><expr pos:start="299:57" pos:end="299:58"><name pos:start="299:57" pos:end="299:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="301:9" pos:end="303:60">else<block type="pseudo" pos:start="303:13" pos:end="303:60"><block_content pos:start="303:13" pos:end="303:60">

            <expr_stmt pos:start="303:13" pos:end="303:60"><expr pos:start="303:13" pos:end="303:59"><call pos:start="303:13" pos:end="303:59"><name pos:start="303:13" pos:end="303:21">tcg_out32</name> <argument_list pos:start="303:23" pos:end="303:59">(<argument pos:start="303:24" pos:end="303:24"><expr pos:start="303:24" pos:end="303:24"><name pos:start="303:24" pos:end="303:24">s</name></expr></argument>, <argument pos:start="303:27" pos:end="303:58"><expr pos:start="303:27" pos:end="303:58"><name pos:start="303:27" pos:end="303:30">LHZX</name> <operator pos:start="303:32" pos:end="303:32">|</operator> <call pos:start="303:34" pos:end="303:58"><name pos:start="303:34" pos:end="303:36">TAB</name> <argument_list pos:start="303:38" pos:end="303:58">(<argument pos:start="303:39" pos:end="303:46"><expr pos:start="303:39" pos:end="303:46"><name pos:start="303:39" pos:end="303:46">data_reg</name></expr></argument>, <argument pos:start="303:49" pos:end="303:53"><expr pos:start="303:49" pos:end="303:53"><name pos:start="303:49" pos:end="303:53">rbase</name></expr></argument>, <argument pos:start="303:56" pos:end="303:57"><expr pos:start="303:56" pos:end="303:57"><name pos:start="303:56" pos:end="303:57">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="305:9" pos:end="305:14">break;</break>

    <case pos:start="307:5" pos:end="307:13">case <expr pos:start="307:10" pos:end="307:12"><literal type="number" pos:start="307:10" pos:end="307:10">1</literal><operator pos:start="307:11" pos:end="307:11">|</operator><literal type="number" pos:start="307:12" pos:end="307:12">4</literal></expr>:</case>

        <if_stmt pos:start="309:9" pos:end="317:61"><if pos:start="309:9" pos:end="315:9">if <condition pos:start="309:12" pos:end="309:18">(<expr pos:start="309:13" pos:end="309:17"><name pos:start="309:13" pos:end="309:17">bswap</name></expr>)</condition> <block pos:start="309:20" pos:end="315:9">{<block_content pos:start="311:13" pos:end="313:65">

            <expr_stmt pos:start="311:13" pos:end="311:61"><expr pos:start="311:13" pos:end="311:60"><call pos:start="311:13" pos:end="311:60"><name pos:start="311:13" pos:end="311:21">tcg_out32</name> <argument_list pos:start="311:23" pos:end="311:60">(<argument pos:start="311:24" pos:end="311:24"><expr pos:start="311:24" pos:end="311:24"><name pos:start="311:24" pos:end="311:24">s</name></expr></argument>, <argument pos:start="311:27" pos:end="311:59"><expr pos:start="311:27" pos:end="311:59"><name pos:start="311:27" pos:end="311:31">LHBRX</name> <operator pos:start="311:33" pos:end="311:33">|</operator> <call pos:start="311:35" pos:end="311:59"><name pos:start="311:35" pos:end="311:37">TAB</name> <argument_list pos:start="311:39" pos:end="311:59">(<argument pos:start="311:40" pos:end="311:47"><expr pos:start="311:40" pos:end="311:47"><name pos:start="311:40" pos:end="311:47">data_reg</name></expr></argument>, <argument pos:start="311:50" pos:end="311:54"><expr pos:start="311:50" pos:end="311:54"><name pos:start="311:50" pos:end="311:54">rbase</name></expr></argument>, <argument pos:start="311:57" pos:end="311:58"><expr pos:start="311:57" pos:end="311:58"><name pos:start="311:57" pos:end="311:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:65"><expr pos:start="313:13" pos:end="313:64"><call pos:start="313:13" pos:end="313:64"><name pos:start="313:13" pos:end="313:21">tcg_out32</name> <argument_list pos:start="313:23" pos:end="313:64">(<argument pos:start="313:24" pos:end="313:24"><expr pos:start="313:24" pos:end="313:24"><name pos:start="313:24" pos:end="313:24">s</name></expr></argument>, <argument pos:start="313:27" pos:end="313:63"><expr pos:start="313:27" pos:end="313:63"><name pos:start="313:27" pos:end="313:31">EXTSH</name> <operator pos:start="313:33" pos:end="313:33">|</operator> <call pos:start="313:35" pos:end="313:47"><name pos:start="313:35" pos:end="313:36">RA</name> <argument_list pos:start="313:38" pos:end="313:47">(<argument pos:start="313:39" pos:end="313:46"><expr pos:start="313:39" pos:end="313:46"><name pos:start="313:39" pos:end="313:46">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="313:49" pos:end="313:49">|</operator> <call pos:start="313:51" pos:end="313:63"><name pos:start="313:51" pos:end="313:52">RS</name> <argument_list pos:start="313:54" pos:end="313:63">(<argument pos:start="313:55" pos:end="313:62"><expr pos:start="313:55" pos:end="313:62"><name pos:start="313:55" pos:end="313:62">data_reg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="317:9" pos:end="317:61">else<block type="pseudo" pos:start="317:14" pos:end="317:61"><block_content pos:start="317:14" pos:end="317:61"> <expr_stmt pos:start="317:14" pos:end="317:61"><expr pos:start="317:14" pos:end="317:60"><call pos:start="317:14" pos:end="317:60"><name pos:start="317:14" pos:end="317:22">tcg_out32</name> <argument_list pos:start="317:24" pos:end="317:60">(<argument pos:start="317:25" pos:end="317:25"><expr pos:start="317:25" pos:end="317:25"><name pos:start="317:25" pos:end="317:25">s</name></expr></argument>, <argument pos:start="317:28" pos:end="317:59"><expr pos:start="317:28" pos:end="317:59"><name pos:start="317:28" pos:end="317:31">LHAX</name> <operator pos:start="317:33" pos:end="317:33">|</operator> <call pos:start="317:35" pos:end="317:59"><name pos:start="317:35" pos:end="317:37">TAB</name> <argument_list pos:start="317:39" pos:end="317:59">(<argument pos:start="317:40" pos:end="317:47"><expr pos:start="317:40" pos:end="317:47"><name pos:start="317:40" pos:end="317:47">data_reg</name></expr></argument>, <argument pos:start="317:50" pos:end="317:54"><expr pos:start="317:50" pos:end="317:54"><name pos:start="317:50" pos:end="317:54">rbase</name></expr></argument>, <argument pos:start="317:57" pos:end="317:58"><expr pos:start="317:57" pos:end="317:58"><name pos:start="317:57" pos:end="317:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="319:9" pos:end="319:14">break;</break>

    <case pos:start="321:5" pos:end="321:11">case <expr pos:start="321:10" pos:end="321:10"><literal type="number" pos:start="321:10" pos:end="321:10">2</literal></expr>:</case>

        <if_stmt pos:start="323:9" pos:end="329:60"><if pos:start="323:9" pos:end="325:61">if <condition pos:start="323:12" pos:end="323:18">(<expr pos:start="323:13" pos:end="323:17"><name pos:start="323:13" pos:end="323:17">bswap</name></expr>)</condition><block type="pseudo" pos:start="325:13" pos:end="325:61"><block_content pos:start="325:13" pos:end="325:61">

            <expr_stmt pos:start="325:13" pos:end="325:61"><expr pos:start="325:13" pos:end="325:60"><call pos:start="325:13" pos:end="325:60"><name pos:start="325:13" pos:end="325:21">tcg_out32</name> <argument_list pos:start="325:23" pos:end="325:60">(<argument pos:start="325:24" pos:end="325:24"><expr pos:start="325:24" pos:end="325:24"><name pos:start="325:24" pos:end="325:24">s</name></expr></argument>, <argument pos:start="325:27" pos:end="325:59"><expr pos:start="325:27" pos:end="325:59"><name pos:start="325:27" pos:end="325:31">LWBRX</name> <operator pos:start="325:33" pos:end="325:33">|</operator> <call pos:start="325:35" pos:end="325:59"><name pos:start="325:35" pos:end="325:37">TAB</name> <argument_list pos:start="325:39" pos:end="325:59">(<argument pos:start="325:40" pos:end="325:47"><expr pos:start="325:40" pos:end="325:47"><name pos:start="325:40" pos:end="325:47">data_reg</name></expr></argument>, <argument pos:start="325:50" pos:end="325:54"><expr pos:start="325:50" pos:end="325:54"><name pos:start="325:50" pos:end="325:54">rbase</name></expr></argument>, <argument pos:start="325:57" pos:end="325:58"><expr pos:start="325:57" pos:end="325:58"><name pos:start="325:57" pos:end="325:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="327:9" pos:end="329:60">else<block type="pseudo" pos:start="329:13" pos:end="329:60"><block_content pos:start="329:13" pos:end="329:60">

            <expr_stmt pos:start="329:13" pos:end="329:60"><expr pos:start="329:13" pos:end="329:59"><call pos:start="329:13" pos:end="329:59"><name pos:start="329:13" pos:end="329:21">tcg_out32</name> <argument_list pos:start="329:23" pos:end="329:59">(<argument pos:start="329:24" pos:end="329:24"><expr pos:start="329:24" pos:end="329:24"><name pos:start="329:24" pos:end="329:24">s</name></expr></argument>, <argument pos:start="329:27" pos:end="329:58"><expr pos:start="329:27" pos:end="329:58"><name pos:start="329:27" pos:end="329:30">LWZX</name> <operator pos:start="329:32" pos:end="329:32">|</operator> <call pos:start="329:34" pos:end="329:58"><name pos:start="329:34" pos:end="329:36">TAB</name> <argument_list pos:start="329:38" pos:end="329:58">(<argument pos:start="329:39" pos:end="329:46"><expr pos:start="329:39" pos:end="329:46"><name pos:start="329:39" pos:end="329:46">data_reg</name></expr></argument>, <argument pos:start="329:49" pos:end="329:53"><expr pos:start="329:49" pos:end="329:53"><name pos:start="329:49" pos:end="329:53">rbase</name></expr></argument>, <argument pos:start="329:56" pos:end="329:57"><expr pos:start="329:56" pos:end="329:57"><name pos:start="329:56" pos:end="329:57">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="331:9" pos:end="331:14">break;</break>

    <case pos:start="333:5" pos:end="333:11">case <expr pos:start="333:10" pos:end="333:10"><literal type="number" pos:start="333:10" pos:end="333:10">3</literal></expr>:</case>

        <if_stmt pos:start="335:9" pos:end="377:9"><if pos:start="335:9" pos:end="343:9">if <condition pos:start="335:12" pos:end="335:18">(<expr pos:start="335:13" pos:end="335:17"><name pos:start="335:13" pos:end="335:17">bswap</name></expr>)</condition> <block pos:start="335:20" pos:end="343:9">{<block_content pos:start="337:13" pos:end="341:62">

            <expr_stmt pos:start="337:13" pos:end="337:56"><expr pos:start="337:13" pos:end="337:55"><call pos:start="337:13" pos:end="337:55"><name pos:start="337:13" pos:end="337:21">tcg_out32</name> <argument_list pos:start="337:23" pos:end="337:55">(<argument pos:start="337:24" pos:end="337:24"><expr pos:start="337:24" pos:end="337:24"><name pos:start="337:24" pos:end="337:24">s</name></expr></argument>, <argument pos:start="337:27" pos:end="337:54"><expr pos:start="337:27" pos:end="337:54"><name pos:start="337:27" pos:end="337:30">ADDI</name> <operator pos:start="337:32" pos:end="337:32">|</operator> <call pos:start="337:34" pos:end="337:40"><name pos:start="337:34" pos:end="337:35">RT</name> <argument_list pos:start="337:37" pos:end="337:40">(<argument pos:start="337:38" pos:end="337:39"><expr pos:start="337:38" pos:end="337:39"><name pos:start="337:38" pos:end="337:39">r1</name></expr></argument>)</argument_list></call> <operator pos:start="337:42" pos:end="337:42">|</operator> <call pos:start="337:44" pos:end="337:50"><name pos:start="337:44" pos:end="337:45">RA</name> <argument_list pos:start="337:47" pos:end="337:50">(<argument pos:start="337:48" pos:end="337:49"><expr pos:start="337:48" pos:end="337:49"><name pos:start="337:48" pos:end="337:49">r0</name></expr></argument>)</argument_list></call> <operator pos:start="337:52" pos:end="337:52">|</operator> <literal type="number" pos:start="337:54" pos:end="337:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:61"><expr pos:start="339:13" pos:end="339:60"><call pos:start="339:13" pos:end="339:60"><name pos:start="339:13" pos:end="339:21">tcg_out32</name> <argument_list pos:start="339:23" pos:end="339:60">(<argument pos:start="339:24" pos:end="339:24"><expr pos:start="339:24" pos:end="339:24"><name pos:start="339:24" pos:end="339:24">s</name></expr></argument>, <argument pos:start="339:27" pos:end="339:59"><expr pos:start="339:27" pos:end="339:59"><name pos:start="339:27" pos:end="339:31">LWBRX</name> <operator pos:start="339:33" pos:end="339:33">|</operator> <call pos:start="339:35" pos:end="339:59"><name pos:start="339:35" pos:end="339:37">TAB</name> <argument_list pos:start="339:39" pos:end="339:59">(<argument pos:start="339:40" pos:end="339:47"><expr pos:start="339:40" pos:end="339:47"><name pos:start="339:40" pos:end="339:47">data_reg</name></expr></argument>, <argument pos:start="339:50" pos:end="339:54"><expr pos:start="339:50" pos:end="339:54"><name pos:start="339:50" pos:end="339:54">rbase</name></expr></argument>, <argument pos:start="339:57" pos:end="339:58"><expr pos:start="339:57" pos:end="339:58"><name pos:start="339:57" pos:end="339:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:62"><expr pos:start="341:13" pos:end="341:61"><call pos:start="341:13" pos:end="341:61"><name pos:start="341:13" pos:end="341:21">tcg_out32</name> <argument_list pos:start="341:23" pos:end="341:61">(<argument pos:start="341:24" pos:end="341:24"><expr pos:start="341:24" pos:end="341:24"><name pos:start="341:24" pos:end="341:24">s</name></expr></argument>, <argument pos:start="341:27" pos:end="341:60"><expr pos:start="341:27" pos:end="341:60"><name pos:start="341:27" pos:end="341:31">LWBRX</name> <operator pos:start="341:33" pos:end="341:33">|</operator> <call pos:start="341:35" pos:end="341:60"><name pos:start="341:35" pos:end="341:37">TAB</name> <argument_list pos:start="341:39" pos:end="341:60">(<argument pos:start="341:40" pos:end="341:48"><expr pos:start="341:40" pos:end="341:48"><name pos:start="341:40" pos:end="341:48">data_reg2</name></expr></argument>, <argument pos:start="341:51" pos:end="341:55"><expr pos:start="341:51" pos:end="341:55"><name pos:start="341:51" pos:end="341:55">rbase</name></expr></argument>, <argument pos:start="341:58" pos:end="341:59"><expr pos:start="341:58" pos:end="341:59"><name pos:start="341:58" pos:end="341:59">r1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="345:9" pos:end="377:9">else <block pos:start="345:14" pos:end="377:9">{<block_content pos:start="349:13" pos:end="376:0">

<cpp:ifdef pos:start="347:1" pos:end="347:28">#<cpp:directive pos:start="347:2" pos:end="347:6">ifdef</cpp:directive> <name pos:start="347:8" pos:end="347:28">CONFIG_USE_GUEST_BASE</name></cpp:ifdef>

            <expr_stmt pos:start="349:13" pos:end="349:56"><expr pos:start="349:13" pos:end="349:55"><call pos:start="349:13" pos:end="349:55"><name pos:start="349:13" pos:end="349:21">tcg_out32</name> <argument_list pos:start="349:23" pos:end="349:55">(<argument pos:start="349:24" pos:end="349:24"><expr pos:start="349:24" pos:end="349:24"><name pos:start="349:24" pos:end="349:24">s</name></expr></argument>, <argument pos:start="349:27" pos:end="349:54"><expr pos:start="349:27" pos:end="349:54"><name pos:start="349:27" pos:end="349:30">ADDI</name> <operator pos:start="349:32" pos:end="349:32">|</operator> <call pos:start="349:34" pos:end="349:40"><name pos:start="349:34" pos:end="349:35">RT</name> <argument_list pos:start="349:37" pos:end="349:40">(<argument pos:start="349:38" pos:end="349:39"><expr pos:start="349:38" pos:end="349:39"><name pos:start="349:38" pos:end="349:39">r1</name></expr></argument>)</argument_list></call> <operator pos:start="349:42" pos:end="349:42">|</operator> <call pos:start="349:44" pos:end="349:50"><name pos:start="349:44" pos:end="349:45">RA</name> <argument_list pos:start="349:47" pos:end="349:50">(<argument pos:start="349:48" pos:end="349:49"><expr pos:start="349:48" pos:end="349:49"><name pos:start="349:48" pos:end="349:49">r0</name></expr></argument>)</argument_list></call> <operator pos:start="349:52" pos:end="349:52">|</operator> <literal type="number" pos:start="349:54" pos:end="349:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:61"><expr pos:start="351:13" pos:end="351:60"><call pos:start="351:13" pos:end="351:60"><name pos:start="351:13" pos:end="351:21">tcg_out32</name> <argument_list pos:start="351:23" pos:end="351:60">(<argument pos:start="351:24" pos:end="351:24"><expr pos:start="351:24" pos:end="351:24"><name pos:start="351:24" pos:end="351:24">s</name></expr></argument>, <argument pos:start="351:27" pos:end="351:59"><expr pos:start="351:27" pos:end="351:59"><name pos:start="351:27" pos:end="351:30">LWZX</name> <operator pos:start="351:32" pos:end="351:32">|</operator> <call pos:start="351:34" pos:end="351:59"><name pos:start="351:34" pos:end="351:36">TAB</name> <argument_list pos:start="351:38" pos:end="351:59">(<argument pos:start="351:39" pos:end="351:47"><expr pos:start="351:39" pos:end="351:47"><name pos:start="351:39" pos:end="351:47">data_reg2</name></expr></argument>, <argument pos:start="351:50" pos:end="351:54"><expr pos:start="351:50" pos:end="351:54"><name pos:start="351:50" pos:end="351:54">rbase</name></expr></argument>, <argument pos:start="351:57" pos:end="351:58"><expr pos:start="351:57" pos:end="351:58"><name pos:start="351:57" pos:end="351:58">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="356:0"><expr pos:start="353:13" pos:end="353:59"><call pos:start="353:13" pos:end="353:59"><name pos:start="353:13" pos:end="353:21">tcg_out32</name> <argument_list pos:start="353:23" pos:end="353:59">(<argument pos:start="353:24" pos:end="353:24"><expr pos:start="353:24" pos:end="353:24"><name pos:start="353:24" pos:end="353:24">s</name></expr></argument>, <argument pos:start="353:27" pos:end="353:58"><expr pos:start="353:27" pos:end="353:58"><name pos:start="353:27" pos:end="353:30">LWZX</name> <operator pos:start="353:32" pos:end="353:32">|</operator> <call pos:start="353:34" pos:end="353:58"><name pos:start="353:34" pos:end="353:36">TAB</name> <argument_list pos:start="353:38" pos:end="353:58">(<argument pos:start="353:39" pos:end="353:46"><expr pos:start="353:39" pos:end="353:46"><name pos:start="353:39" pos:end="353:46">data_reg</name></expr></argument>, <argument pos:start="353:49" pos:end="353:53"><expr pos:start="353:49" pos:end="353:53"><name pos:start="353:49" pos:end="353:53">rbase</name></expr></argument>, <argument pos:start="353:56" pos:end="353:57"><expr pos:start="353:56" pos:end="353:57"><name pos:start="353:56" pos:end="353:57">r1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="355:1" pos:end="355:5">#<cpp:directive pos:start="355:2" pos:end="355:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="357:13" pos:end="376:0"><if pos:start="357:13" pos:end="365:13">if <condition pos:start="357:16" pos:end="357:32">(<expr pos:start="357:17" pos:end="357:31"><name pos:start="357:17" pos:end="357:18">r0</name> <operator pos:start="357:20" pos:end="357:21">==</operator> <name pos:start="357:23" pos:end="357:31">data_reg2</name></expr>)</condition> <block pos:start="357:34" pos:end="365:13">{<block_content pos:start="359:17" pos:end="363:46">

                <expr_stmt pos:start="359:17" pos:end="359:54"><expr pos:start="359:17" pos:end="359:53"><call pos:start="359:17" pos:end="359:53"><name pos:start="359:17" pos:end="359:25">tcg_out32</name> <argument_list pos:start="359:27" pos:end="359:53">(<argument pos:start="359:28" pos:end="359:28"><expr pos:start="359:28" pos:end="359:28"><name pos:start="359:28" pos:end="359:28">s</name></expr></argument>, <argument pos:start="359:31" pos:end="359:52"><expr pos:start="359:31" pos:end="359:52"><name pos:start="359:31" pos:end="359:33">LWZ</name> <operator pos:start="359:35" pos:end="359:35">|</operator> <call pos:start="359:37" pos:end="359:42"><name pos:start="359:37" pos:end="359:38">RT</name> <argument_list pos:start="359:40" pos:end="359:42">(<argument pos:start="359:41" pos:end="359:41"><expr pos:start="359:41" pos:end="359:41"><literal type="number" pos:start="359:41" pos:end="359:41">0</literal></expr></argument>)</argument_list></call> <operator pos:start="359:44" pos:end="359:44">|</operator> <call pos:start="359:46" pos:end="359:52"><name pos:start="359:46" pos:end="359:47">RA</name> <argument_list pos:start="359:49" pos:end="359:52">(<argument pos:start="359:50" pos:end="359:51"><expr pos:start="359:50" pos:end="359:51"><name pos:start="359:50" pos:end="359:51">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="361:65"><expr pos:start="361:17" pos:end="361:64"><call pos:start="361:17" pos:end="361:64"><name pos:start="361:17" pos:end="361:25">tcg_out32</name> <argument_list pos:start="361:27" pos:end="361:64">(<argument pos:start="361:28" pos:end="361:28"><expr pos:start="361:28" pos:end="361:28"><name pos:start="361:28" pos:end="361:28">s</name></expr></argument>, <argument pos:start="361:31" pos:end="361:63"><expr pos:start="361:31" pos:end="361:63"><name pos:start="361:31" pos:end="361:33">LWZ</name> <operator pos:start="361:35" pos:end="361:35">|</operator> <call pos:start="361:37" pos:end="361:49"><name pos:start="361:37" pos:end="361:38">RT</name> <argument_list pos:start="361:40" pos:end="361:49">(<argument pos:start="361:41" pos:end="361:48"><expr pos:start="361:41" pos:end="361:48"><name pos:start="361:41" pos:end="361:48">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="361:51" pos:end="361:51">|</operator> <call pos:start="361:53" pos:end="361:59"><name pos:start="361:53" pos:end="361:54">RA</name> <argument_list pos:start="361:56" pos:end="361:59">(<argument pos:start="361:57" pos:end="361:58"><expr pos:start="361:57" pos:end="361:58"><name pos:start="361:57" pos:end="361:58">r0</name></expr></argument>)</argument_list></call> <operator pos:start="361:61" pos:end="361:61">|</operator> <literal type="number" pos:start="361:63" pos:end="361:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:46"><expr pos:start="363:17" pos:end="363:45"><call pos:start="363:17" pos:end="363:45"><name pos:start="363:17" pos:end="363:27">tcg_out_mov</name> <argument_list pos:start="363:29" pos:end="363:45">(<argument pos:start="363:30" pos:end="363:30"><expr pos:start="363:30" pos:end="363:30"><name pos:start="363:30" pos:end="363:30">s</name></expr></argument>, <argument pos:start="363:33" pos:end="363:41"><expr pos:start="363:33" pos:end="363:41"><name pos:start="363:33" pos:end="363:41">data_reg2</name></expr></argument>, <argument pos:start="363:44" pos:end="363:44"><expr pos:start="363:44" pos:end="363:44"><literal type="number" pos:start="363:44" pos:end="363:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="367:13" pos:end="376:0">else <block pos:start="367:18" pos:end="376:0">{<block_content pos:start="369:17" pos:end="371:65">

                <expr_stmt pos:start="369:17" pos:end="369:62"><expr pos:start="369:17" pos:end="369:61"><call pos:start="369:17" pos:end="369:61"><name pos:start="369:17" pos:end="369:25">tcg_out32</name> <argument_list pos:start="369:27" pos:end="369:61">(<argument pos:start="369:28" pos:end="369:28"><expr pos:start="369:28" pos:end="369:28"><name pos:start="369:28" pos:end="369:28">s</name></expr></argument>, <argument pos:start="369:31" pos:end="369:60"><expr pos:start="369:31" pos:end="369:60"><name pos:start="369:31" pos:end="369:33">LWZ</name> <operator pos:start="369:35" pos:end="369:35">|</operator> <call pos:start="369:37" pos:end="369:50"><name pos:start="369:37" pos:end="369:38">RT</name> <argument_list pos:start="369:40" pos:end="369:50">(<argument pos:start="369:41" pos:end="369:49"><expr pos:start="369:41" pos:end="369:49"><name pos:start="369:41" pos:end="369:49">data_reg2</name></expr></argument>)</argument_list></call> <operator pos:start="369:52" pos:end="369:52">|</operator> <call pos:start="369:54" pos:end="369:60"><name pos:start="369:54" pos:end="369:55">RA</name> <argument_list pos:start="369:57" pos:end="369:60">(<argument pos:start="369:58" pos:end="369:59"><expr pos:start="369:58" pos:end="369:59"><name pos:start="369:58" pos:end="369:59">r0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:65"><expr pos:start="371:17" pos:end="371:64"><call pos:start="371:17" pos:end="371:64"><name pos:start="371:17" pos:end="371:25">tcg_out32</name> <argument_list pos:start="371:27" pos:end="371:64">(<argument pos:start="371:28" pos:end="371:28"><expr pos:start="371:28" pos:end="371:28"><name pos:start="371:28" pos:end="371:28">s</name></expr></argument>, <argument pos:start="371:31" pos:end="371:63"><expr pos:start="371:31" pos:end="371:63"><name pos:start="371:31" pos:end="371:33">LWZ</name> <operator pos:start="371:35" pos:end="371:35">|</operator> <call pos:start="371:37" pos:end="371:49"><name pos:start="371:37" pos:end="371:38">RT</name> <argument_list pos:start="371:40" pos:end="371:49">(<argument pos:start="371:41" pos:end="371:48"><expr pos:start="371:41" pos:end="371:48"><name pos:start="371:41" pos:end="371:48">data_reg</name></expr></argument>)</argument_list></call> <operator pos:start="371:51" pos:end="371:51">|</operator> <call pos:start="371:53" pos:end="371:59"><name pos:start="371:53" pos:end="371:54">RA</name> <argument_list pos:start="371:56" pos:end="371:59">(<argument pos:start="371:57" pos:end="371:58"><expr pos:start="371:57" pos:end="371:58"><name pos:start="371:57" pos:end="371:58">r0</name></expr></argument>)</argument_list></call> <operator pos:start="371:61" pos:end="371:61">|</operator> <literal type="number" pos:start="371:63" pos:end="371:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="375:1" pos:end="375:6">#<cpp:directive pos:start="375:2" pos:end="375:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></else></if_stmt>

        <break pos:start="379:9" pos:end="379:14">break;</break>

    </block_content>}</block></switch>



<cpp:ifdef pos:start="385:1" pos:end="385:21">#<cpp:directive pos:start="385:2" pos:end="385:6">ifdef</cpp:directive> <name pos:start="385:8" pos:end="385:21">CONFIG_SOFTMMU</name></cpp:ifdef>

    <expr_stmt pos:start="387:5" pos:end="390:0"><expr pos:start="387:5" pos:end="387:58"><call pos:start="387:5" pos:end="387:58"><name pos:start="387:5" pos:end="387:14">reloc_pc24</name> <argument_list pos:start="387:16" pos:end="387:58">(<argument pos:start="387:17" pos:end="387:26"><expr pos:start="387:17" pos:end="387:26"><name pos:start="387:17" pos:end="387:26">label2_ptr</name></expr></argument>, <argument pos:start="387:29" pos:end="387:57"><expr pos:start="387:29" pos:end="387:57"><operator pos:start="387:29" pos:end="387:29">(</operator><name pos:start="387:30" pos:end="387:44">tcg_target_long</name><operator pos:start="387:45" pos:end="387:45">)</operator> <name pos:start="387:47" pos:end="387:57"><name pos:start="387:47" pos:end="387:47">s</name><operator pos:start="387:48" pos:end="387:49">-&gt;</operator><name pos:start="387:50" pos:end="387:57">code_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="389:1" pos:end="389:6">#<cpp:directive pos:start="389:2" pos:end="389:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
