<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20512.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">spapr_drc_detach</name><parameter_list pos:start="1:22" pos:end="1:44">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:38">sPAPRDRConnector</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">drc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:27">

    <expr_stmt pos:start="5:5" pos:end="5:49"><expr pos:start="5:5" pos:end="5:48"><call pos:start="5:5" pos:end="5:48"><name pos:start="5:5" pos:end="5:26">trace_spapr_drc_detach</name><argument_list pos:start="5:27" pos:end="5:48">(<argument pos:start="5:28" pos:end="5:47"><expr pos:start="5:28" pos:end="5:47"><call pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:42">spapr_drc_index</name><argument_list pos:start="5:43" pos:end="5:47">(<argument pos:start="5:44" pos:end="5:46"><expr pos:start="5:44" pos:end="5:46"><name pos:start="5:44" pos:end="5:46">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:7">drc</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:25">unplug_requested</name></name> <operator pos:start="9:27" pos:end="9:27">=</operator> <name pos:start="9:29" pos:end="9:32">true</name></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:66">(<expr pos:start="13:9" pos:end="13:65"><name pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:11">drc</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:28">isolation_state</name></name> <operator pos:start="13:30" pos:end="13:31">!=</operator> <name pos:start="13:33" pos:end="13:65">SPAPR_DR_ISOLATION_STATE_ISOLATED</name></expr>)</condition> <block pos:start="13:68" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:64"><expr pos:start="15:9" pos:end="15:63"><call pos:start="15:9" pos:end="15:63"><name pos:start="15:9" pos:end="15:41">trace_spapr_drc_awaiting_isolated</name><argument_list pos:start="15:42" pos:end="15:63">(<argument pos:start="15:43" pos:end="15:62"><expr pos:start="15:43" pos:end="15:62"><call pos:start="15:43" pos:end="15:62"><name pos:start="15:43" pos:end="15:57">spapr_drc_index</name><argument_list pos:start="15:58" pos:end="15:62">(<argument pos:start="15:59" pos:end="15:61"><expr pos:start="15:59" pos:end="15:61"><name pos:start="15:59" pos:end="15:61">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="25:68">(<expr pos:start="23:9" pos:end="25:67"><call pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:22">spapr_drc_type</name><argument_list pos:start="23:23" pos:end="23:27">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">drc</name></expr></argument>)</argument_list></call> <operator pos:start="23:29" pos:end="23:30">!=</operator> <name pos:start="23:32" pos:end="23:58">SPAPR_DR_CONNECTOR_TYPE_PCI</name> <operator pos:start="23:60" pos:end="23:61">&amp;&amp;</operator>

        <name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:11">drc</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:29">allocation_state</name></name> <operator pos:start="25:31" pos:end="25:32">!=</operator> <name pos:start="25:34" pos:end="25:67">SPAPR_DR_ALLOCATION_STATE_UNUSABLE</name></expr>)</condition> <block pos:start="25:70" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:64"><expr pos:start="27:9" pos:end="27:63"><call pos:start="27:9" pos:end="27:63"><name pos:start="27:9" pos:end="27:41">trace_spapr_drc_awaiting_unusable</name><argument_list pos:start="27:42" pos:end="27:63">(<argument pos:start="27:43" pos:end="27:62"><expr pos:start="27:43" pos:end="27:62"><call pos:start="27:43" pos:end="27:62"><name pos:start="27:43" pos:end="27:57">spapr_drc_index</name><argument_list pos:start="27:58" pos:end="27:62">(<argument pos:start="27:59" pos:end="27:61"><expr pos:start="27:59" pos:end="27:61"><name pos:start="27:59" pos:end="27:61">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><call pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:21">spapr_drc_release</name><argument_list pos:start="35:22" pos:end="35:26">(<argument pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:25">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
