<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24627.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">cdg_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:72">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">got_frame</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:71"><decl pos:start="3:57" pos:end="3:71"><type pos:start="3:57" pos:end="3:71"><name pos:start="3:57" pos:end="3:64">AVPacket</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:71">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="191:1">{<block_content pos:start="7:5" pos:end="189:20">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">GetByteContext</name></type> <name pos:start="7:20" pos:end="7:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:19">command</name></decl>, <decl pos:start="13:22" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:22" pos:end="13:25">inst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:20">cdg_data</name><index pos:start="15:21" pos:end="15:35">[<expr pos:start="15:22" pos:end="15:34"><name pos:start="15:22" pos:end="15:34">CDG_DATA_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:18">frame</name> <init pos:start="17:20" pos:end="17:25">= <expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:45"><decl pos:start="19:5" pos:end="19:44"><type pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:21">CDGraphicsContext</name> <modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:25">cc</name> <init pos:start="19:27" pos:end="19:44">= <expr pos:start="19:29" pos:end="19:44"><name pos:start="19:29" pos:end="19:44"><name pos:start="19:29" pos:end="19:33">avctx</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:44">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><call pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:20">bytestream2_init</name><argument_list pos:start="23:21" pos:end="23:51">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:24">gb</name></expr></argument>, <argument pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:31">avpkt</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:37">data</name></name></expr></argument>, <argument pos:start="23:40" pos:end="23:50"><expr pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:44">avpkt</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="29:5" pos:end="29:44"><expr pos:start="29:5" pos:end="29:43"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:43"><name pos:start="29:11" pos:end="29:25">ff_reget_buffer</name><argument_list pos:start="29:26" pos:end="29:43">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:31">avctx</name></expr></argument>, <argument pos:start="29:34" pos:end="29:42"><expr pos:start="29:34" pos:end="29:42"><name pos:start="29:34" pos:end="29:42"><name pos:start="29:34" pos:end="29:35">cc</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:42">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">ret</name></expr>)</condition> <block pos:start="31:14" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:19">

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:62">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:61"><expr pos:start="33:37" pos:end="33:61"><literal type="string" pos:start="33:37" pos:end="33:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:78"><if pos:start="39:5" pos:end="41:78">if <condition pos:start="39:8" pos:end="39:29">(<expr pos:start="39:9" pos:end="39:28"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:28"><name pos:start="39:10" pos:end="39:14">avctx</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:28">frame_number</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:78"><block_content pos:start="41:9" pos:end="41:78">

        <expr_stmt pos:start="41:9" pos:end="41:78"><expr pos:start="41:9" pos:end="41:77"><call pos:start="41:9" pos:end="41:77"><name pos:start="41:9" pos:end="41:14">memset</name><argument_list pos:start="41:15" pos:end="41:77">(<argument pos:start="41:16" pos:end="41:33"><expr pos:start="41:16" pos:end="41:33"><name pos:start="41:16" pos:end="41:33"><name pos:start="41:16" pos:end="41:17">cc</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">frame</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:30">data</name><index pos:start="41:31" pos:end="41:33">[<expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:36" pos:end="41:36"><expr pos:start="41:36" pos:end="41:36"><literal type="number" pos:start="41:36" pos:end="41:36">0</literal></expr></argument>, <argument pos:start="41:39" pos:end="41:76"><expr pos:start="41:39" pos:end="41:76"><name pos:start="41:39" pos:end="41:60"><name pos:start="41:39" pos:end="41:40">cc</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:47">frame</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:57">linesize</name><index pos:start="41:58" pos:end="41:60">[<expr pos:start="41:59" pos:end="41:59"><literal type="number" pos:start="41:59" pos:end="41:59">0</literal></expr>]</index></name> <operator pos:start="41:62" pos:end="41:62">*</operator> <name pos:start="41:64" pos:end="41:76"><name pos:start="41:64" pos:end="41:68">avctx</name><operator pos:start="41:69" pos:end="41:70">-&gt;</operator><name pos:start="41:71" pos:end="41:76">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:11">command</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:39"><name pos:start="45:15" pos:end="45:34">bytestream2_get_byte</name><argument_list pos:start="45:35" pos:end="45:39">(<argument pos:start="45:36" pos:end="45:38"><expr pos:start="45:36" pos:end="45:38"><operator pos:start="45:36" pos:end="45:36">&amp;</operator><name pos:start="45:37" pos:end="45:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:8">inst</name>    <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:39"><name pos:start="47:15" pos:end="47:34">bytestream2_get_byte</name><argument_list pos:start="47:35" pos:end="47:39">(<argument pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:8">inst</name>    <operator pos:start="49:13" pos:end="49:14">&amp;=</operator> <name pos:start="49:16" pos:end="49:23">CDG_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><call pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:20">bytestream2_skip</name><argument_list pos:start="51:21" pos:end="51:28">(<argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:24">gb</name></expr></argument>, <argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><literal type="number" pos:start="51:27" pos:end="51:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:60"><expr pos:start="53:5" pos:end="53:59"><call pos:start="53:5" pos:end="53:59"><name pos:start="53:5" pos:end="53:26">bytestream2_get_buffer</name><argument_list pos:start="53:27" pos:end="53:59">(<argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:30">gb</name></expr></argument>, <argument pos:start="53:33" pos:end="53:40"><expr pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:40">cdg_data</name></expr></argument>, <argument pos:start="53:43" pos:end="53:58"><expr pos:start="53:43" pos:end="53:58"><sizeof pos:start="53:43" pos:end="53:58">sizeof<argument_list pos:start="53:49" pos:end="53:58">(<argument pos:start="53:50" pos:end="53:57"><expr pos:start="53:50" pos:end="53:57"><name pos:start="53:50" pos:end="53:57">cdg_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="185:5"><if pos:start="57:5" pos:end="179:5">if <condition pos:start="57:8" pos:end="57:44">(<expr pos:start="57:9" pos:end="57:43"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:16">command</name> <operator pos:start="57:18" pos:end="57:18">&amp;</operator> <name pos:start="57:20" pos:end="57:27">CDG_MASK</name><operator pos:start="57:28" pos:end="57:28">)</operator> <operator pos:start="57:30" pos:end="57:31">==</operator> <name pos:start="57:33" pos:end="57:43">CDG_COMMAND</name></expr>)</condition> <block pos:start="57:46" pos:end="179:5">{<block_content pos:start="59:9" pos:end="177:23">

        <switch pos:start="59:9" pos:end="163:9">switch <condition pos:start="59:16" pos:end="59:21">(<expr pos:start="59:17" pos:end="59:20"><name pos:start="59:17" pos:end="59:20">inst</name></expr>)</condition> <block pos:start="59:23" pos:end="163:9">{<block_content pos:start="61:9" pos:end="161:18">

        <case pos:start="61:9" pos:end="61:36">case <expr pos:start="61:14" pos:end="61:35"><name pos:start="61:14" pos:end="61:35">CDG_INST_MEMORY_PRESET</name></expr>:</case>

            <if_stmt pos:start="63:13" pos:end="67:65"><if pos:start="63:13" pos:end="67:65">if <condition pos:start="63:16" pos:end="63:38">(<expr pos:start="63:17" pos:end="63:37"><operator pos:start="63:17" pos:end="63:17">!</operator><operator pos:start="63:18" pos:end="63:18">(</operator><name pos:start="63:19" pos:end="63:29"><name pos:start="63:19" pos:end="63:26">cdg_data</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">1</literal></expr>]</index></name> <operator pos:start="63:31" pos:end="63:31">&amp;</operator> <literal type="number" pos:start="63:33" pos:end="63:36">0x0F</literal><operator pos:start="63:37" pos:end="63:37">)</operator></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="67:65"><block_content pos:start="65:17" pos:end="67:65">

                <expr_stmt pos:start="65:17" pos:end="67:65"><expr pos:start="65:17" pos:end="67:64"><call pos:start="65:17" pos:end="67:64"><name pos:start="65:17" pos:end="65:22">memset</name><argument_list pos:start="65:23" pos:end="67:64">(<argument pos:start="65:24" pos:end="65:41"><expr pos:start="65:24" pos:end="65:41"><name pos:start="65:24" pos:end="65:41"><name pos:start="65:24" pos:end="65:25">cc</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:32">frame</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:38">data</name><index pos:start="65:39" pos:end="65:41">[<expr pos:start="65:40" pos:end="65:40"><literal type="number" pos:start="65:40" pos:end="65:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:44" pos:end="65:61"><expr pos:start="65:44" pos:end="65:61"><name pos:start="65:44" pos:end="65:54"><name pos:start="65:44" pos:end="65:51">cdg_data</name><index pos:start="65:52" pos:end="65:54">[<expr pos:start="65:53" pos:end="65:53"><literal type="number" pos:start="65:53" pos:end="65:53">0</literal></expr>]</index></name> <operator pos:start="65:56" pos:end="65:56">&amp;</operator> <literal type="number" pos:start="65:58" pos:end="65:61">0x0F</literal></expr></argument>,

                       <argument pos:start="67:24" pos:end="67:63"><expr pos:start="67:24" pos:end="67:63"><name pos:start="67:24" pos:end="67:45"><name pos:start="67:24" pos:end="67:25">cc</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:32">frame</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:42">linesize</name><index pos:start="67:43" pos:end="67:45">[<expr pos:start="67:44" pos:end="67:44"><literal type="number" pos:start="67:44" pos:end="67:44">0</literal></expr>]</index></name> <operator pos:start="67:47" pos:end="67:47">*</operator> <name pos:start="67:49" pos:end="67:63">CDG_FULL_HEIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:34">case <expr pos:start="71:14" pos:end="71:33"><name pos:start="71:14" pos:end="71:33">CDG_INST_LOAD_PAL_LO</name></expr>:</case>

        <case pos:start="73:9" pos:end="73:36">case <expr pos:start="73:14" pos:end="73:35"><name pos:start="73:14" pos:end="73:35">CDG_INST_LOAD_PAL_HIGH</name></expr>:</case>

            <if_stmt pos:start="75:13" pos:end="81:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:59">(<expr pos:start="75:17" pos:end="75:58"><name pos:start="75:17" pos:end="75:24">buf_size</name> <operator pos:start="75:26" pos:end="75:26">-</operator> <name pos:start="75:28" pos:end="75:42">CDG_HEADER_SIZE</name> <operator pos:start="75:44" pos:end="75:44">&lt;</operator> <name pos:start="75:46" pos:end="75:58">CDG_DATA_SIZE</name></expr>)</condition> <block pos:start="75:61" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:39">

                <expr_stmt pos:start="77:17" pos:end="77:86"><expr pos:start="77:17" pos:end="77:85"><call pos:start="77:17" pos:end="77:85"><name pos:start="77:17" pos:end="77:22">av_log</name><argument_list pos:start="77:23" pos:end="77:85">(<argument pos:start="77:24" pos:end="77:28"><expr pos:start="77:24" pos:end="77:28"><name pos:start="77:24" pos:end="77:28">avctx</name></expr></argument>, <argument pos:start="77:31" pos:end="77:42"><expr pos:start="77:31" pos:end="77:42"><name pos:start="77:31" pos:end="77:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:45" pos:end="77:84"><expr pos:start="77:45" pos:end="77:84"><literal type="string" pos:start="77:45" pos:end="77:84">"buffer too small for loading palette\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="79:17" pos:end="79:39">return <expr pos:start="79:24" pos:end="79:38"><call pos:start="79:24" pos:end="79:38"><name pos:start="79:24" pos:end="79:30">AVERROR</name><argument_list pos:start="79:31" pos:end="79:38">(<argument pos:start="79:32" pos:end="79:37"><expr pos:start="79:32" pos:end="79:37"><name pos:start="79:32" pos:end="79:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="85:13" pos:end="85:73"><expr pos:start="85:13" pos:end="85:72"><call pos:start="85:13" pos:end="85:72"><name pos:start="85:13" pos:end="85:28">cdg_load_palette</name><argument_list pos:start="85:29" pos:end="85:72">(<argument pos:start="85:30" pos:end="85:31"><expr pos:start="85:30" pos:end="85:31"><name pos:start="85:30" pos:end="85:31">cc</name></expr></argument>, <argument pos:start="85:34" pos:end="85:41"><expr pos:start="85:34" pos:end="85:41"><name pos:start="85:34" pos:end="85:41">cdg_data</name></expr></argument>, <argument pos:start="85:44" pos:end="85:71"><expr pos:start="85:44" pos:end="85:71"><name pos:start="85:44" pos:end="85:47">inst</name> <operator pos:start="85:49" pos:end="85:50">==</operator> <name pos:start="85:52" pos:end="85:71">CDG_INST_LOAD_PAL_LO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:36">case <expr pos:start="89:14" pos:end="89:35"><name pos:start="89:14" pos:end="89:35">CDG_INST_BORDER_PRESET</name></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:44"><expr pos:start="91:13" pos:end="91:43"><call pos:start="91:13" pos:end="91:43"><name pos:start="91:13" pos:end="91:29">cdg_border_preset</name><argument_list pos:start="91:30" pos:end="91:43">(<argument pos:start="91:31" pos:end="91:32"><expr pos:start="91:31" pos:end="91:32"><name pos:start="91:31" pos:end="91:32">cc</name></expr></argument>, <argument pos:start="91:35" pos:end="91:42"><expr pos:start="91:35" pos:end="91:42"><name pos:start="91:35" pos:end="91:42">cdg_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:37">case <expr pos:start="95:14" pos:end="95:36"><name pos:start="95:14" pos:end="95:36">CDG_INST_TILE_BLOCK_XOR</name></expr>:</case>

        <case pos:start="97:9" pos:end="97:33">case <expr pos:start="97:14" pos:end="97:32"><name pos:start="97:14" pos:end="97:32">CDG_INST_TILE_BLOCK</name></expr>:</case>

            <if_stmt pos:start="99:13" pos:end="105:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:59">(<expr pos:start="99:17" pos:end="99:58"><name pos:start="99:17" pos:end="99:24">buf_size</name> <operator pos:start="99:26" pos:end="99:26">-</operator> <name pos:start="99:28" pos:end="99:42">CDG_HEADER_SIZE</name> <operator pos:start="99:44" pos:end="99:44">&lt;</operator> <name pos:start="99:46" pos:end="99:58">CDG_DATA_SIZE</name></expr>)</condition> <block pos:start="99:61" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:39">

                <expr_stmt pos:start="101:17" pos:end="101:83"><expr pos:start="101:17" pos:end="101:82"><call pos:start="101:17" pos:end="101:82"><name pos:start="101:17" pos:end="101:22">av_log</name><argument_list pos:start="101:23" pos:end="101:82">(<argument pos:start="101:24" pos:end="101:28"><expr pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:28">avctx</name></expr></argument>, <argument pos:start="101:31" pos:end="101:42"><expr pos:start="101:31" pos:end="101:42"><name pos:start="101:31" pos:end="101:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:45" pos:end="101:81"><expr pos:start="101:45" pos:end="101:81"><literal type="string" pos:start="101:45" pos:end="101:81">"buffer too small for drawing tile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="103:17" pos:end="103:39">return <expr pos:start="103:24" pos:end="103:38"><call pos:start="103:24" pos:end="103:38"><name pos:start="103:24" pos:end="103:30">AVERROR</name><argument_list pos:start="103:31" pos:end="103:38">(<argument pos:start="103:32" pos:end="103:37"><expr pos:start="103:32" pos:end="103:37"><name pos:start="103:32" pos:end="103:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:80"><expr pos:start="109:13" pos:end="109:79"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:79"><name pos:start="109:19" pos:end="109:32">cdg_tile_block</name><argument_list pos:start="109:33" pos:end="109:79">(<argument pos:start="109:34" pos:end="109:35"><expr pos:start="109:34" pos:end="109:35"><name pos:start="109:34" pos:end="109:35">cc</name></expr></argument>, <argument pos:start="109:38" pos:end="109:45"><expr pos:start="109:38" pos:end="109:45"><name pos:start="109:38" pos:end="109:45">cdg_data</name></expr></argument>, <argument pos:start="109:48" pos:end="109:78"><expr pos:start="109:48" pos:end="109:78"><name pos:start="109:48" pos:end="109:51">inst</name> <operator pos:start="109:53" pos:end="109:54">==</operator> <name pos:start="109:56" pos:end="109:78">CDG_INST_TILE_BLOCK_XOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="117:13"><if pos:start="111:13" pos:end="117:13">if <condition pos:start="111:16" pos:end="111:20">(<expr pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:19">ret</name></expr>)</condition> <block pos:start="111:22" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:27">

                <expr_stmt pos:start="113:17" pos:end="113:70"><expr pos:start="113:17" pos:end="113:69"><call pos:start="113:17" pos:end="113:69"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:69">(<argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">avctx</name></expr></argument>, <argument pos:start="113:31" pos:end="113:42"><expr pos:start="113:31" pos:end="113:42"><name pos:start="113:31" pos:end="113:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:45" pos:end="113:68"><expr pos:start="113:45" pos:end="113:68"><literal type="string" pos:start="113:45" pos:end="113:68">"tile is out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="115:17" pos:end="115:27">return <expr pos:start="115:24" pos:end="115:26"><name pos:start="115:24" pos:end="115:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:36">case <expr pos:start="121:14" pos:end="121:35"><name pos:start="121:14" pos:end="121:35">CDG_INST_SCROLL_PRESET</name></expr>:</case>

        <case pos:start="123:9" pos:end="123:34">case <expr pos:start="123:14" pos:end="123:33"><name pos:start="123:14" pos:end="123:33">CDG_INST_SCROLL_COPY</name></expr>:</case>

            <if_stmt pos:start="125:13" pos:end="131:13"><if pos:start="125:13" pos:end="131:13">if <condition pos:start="125:16" pos:end="125:69">(<expr pos:start="125:17" pos:end="125:68"><name pos:start="125:17" pos:end="125:24">buf_size</name> <operator pos:start="125:26" pos:end="125:26">-</operator> <name pos:start="125:28" pos:end="125:42">CDG_HEADER_SIZE</name> <operator pos:start="125:44" pos:end="125:44">&lt;</operator> <name pos:start="125:46" pos:end="125:68">CDG_MINIMUM_SCROLL_SIZE</name></expr>)</condition> <block pos:start="125:71" pos:end="131:13">{<block_content pos:start="127:17" pos:end="129:39">

                <expr_stmt pos:start="127:17" pos:end="127:80"><expr pos:start="127:17" pos:end="127:79"><call pos:start="127:17" pos:end="127:79"><name pos:start="127:17" pos:end="127:22">av_log</name><argument_list pos:start="127:23" pos:end="127:79">(<argument pos:start="127:24" pos:end="127:28"><expr pos:start="127:24" pos:end="127:28"><name pos:start="127:24" pos:end="127:28">avctx</name></expr></argument>, <argument pos:start="127:31" pos:end="127:42"><expr pos:start="127:31" pos:end="127:42"><name pos:start="127:31" pos:end="127:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:45" pos:end="127:78"><expr pos:start="127:45" pos:end="127:78"><literal type="string" pos:start="127:45" pos:end="127:78">"buffer too small for scrolling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="129:17" pos:end="129:39">return <expr pos:start="129:24" pos:end="129:38"><call pos:start="129:24" pos:end="129:38"><name pos:start="129:24" pos:end="129:30">AVERROR</name><argument_list pos:start="129:31" pos:end="129:38">(<argument pos:start="129:32" pos:end="129:37"><expr pos:start="129:32" pos:end="129:37"><name pos:start="129:32" pos:end="129:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:70"><expr pos:start="135:13" pos:end="135:69"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <call pos:start="135:19" pos:end="135:69"><name pos:start="135:19" pos:end="135:31">ff_get_buffer</name><argument_list pos:start="135:32" pos:end="135:69">(<argument pos:start="135:33" pos:end="135:37"><expr pos:start="135:33" pos:end="135:37"><name pos:start="135:33" pos:end="135:37">avctx</name></expr></argument>, <argument pos:start="135:40" pos:end="135:44"><expr pos:start="135:40" pos:end="135:44"><name pos:start="135:40" pos:end="135:44">frame</name></expr></argument>, <argument pos:start="135:47" pos:end="135:68"><expr pos:start="135:47" pos:end="135:68"><name pos:start="135:47" pos:end="135:68">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="143:13"><if pos:start="137:13" pos:end="143:13">if <condition pos:start="137:16" pos:end="137:20">(<expr pos:start="137:17" pos:end="137:19"><name pos:start="137:17" pos:end="137:19">ret</name></expr>)</condition> <block pos:start="137:22" pos:end="143:13">{<block_content pos:start="139:17" pos:end="141:27">

                <expr_stmt pos:start="139:17" pos:end="139:69"><expr pos:start="139:17" pos:end="139:68"><call pos:start="139:17" pos:end="139:68"><name pos:start="139:17" pos:end="139:22">av_log</name><argument_list pos:start="139:23" pos:end="139:68">(<argument pos:start="139:24" pos:end="139:28"><expr pos:start="139:24" pos:end="139:28"><name pos:start="139:24" pos:end="139:28">avctx</name></expr></argument>, <argument pos:start="139:31" pos:end="139:42"><expr pos:start="139:31" pos:end="139:42"><name pos:start="139:31" pos:end="139:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:45" pos:end="139:67"><expr pos:start="139:45" pos:end="139:67"><literal type="string" pos:start="139:45" pos:end="139:67">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="141:17" pos:end="141:27">return <expr pos:start="141:24" pos:end="141:26"><name pos:start="141:24" pos:end="141:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="147:13" pos:end="147:74"><expr pos:start="147:13" pos:end="147:73"><call pos:start="147:13" pos:end="147:73"><name pos:start="147:13" pos:end="147:22">cdg_scroll</name><argument_list pos:start="147:23" pos:end="147:73">(<argument pos:start="147:24" pos:end="147:25"><expr pos:start="147:24" pos:end="147:25"><name pos:start="147:24" pos:end="147:25">cc</name></expr></argument>, <argument pos:start="147:28" pos:end="147:35"><expr pos:start="147:28" pos:end="147:35"><name pos:start="147:28" pos:end="147:35">cdg_data</name></expr></argument>, <argument pos:start="147:38" pos:end="147:42"><expr pos:start="147:38" pos:end="147:42"><name pos:start="147:38" pos:end="147:42">frame</name></expr></argument>, <argument pos:start="147:45" pos:end="147:72"><expr pos:start="147:45" pos:end="147:72"><name pos:start="147:45" pos:end="147:48">inst</name> <operator pos:start="147:50" pos:end="147:51">==</operator> <name pos:start="147:53" pos:end="147:72">CDG_INST_SCROLL_COPY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:38"><expr pos:start="149:13" pos:end="149:37"><call pos:start="149:13" pos:end="149:37"><name pos:start="149:13" pos:end="149:26">av_frame_unref</name><argument_list pos:start="149:27" pos:end="149:37">(<argument pos:start="149:28" pos:end="149:36"><expr pos:start="149:28" pos:end="149:36"><name pos:start="149:28" pos:end="149:36"><name pos:start="149:28" pos:end="149:29">cc</name><operator pos:start="149:30" pos:end="149:31">-&gt;</operator><name pos:start="149:32" pos:end="149:36">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:49"><expr pos:start="151:13" pos:end="151:48"><name pos:start="151:13" pos:end="151:15">ret</name> <operator pos:start="151:17" pos:end="151:17">=</operator> <call pos:start="151:19" pos:end="151:48"><name pos:start="151:19" pos:end="151:30">av_frame_ref</name><argument_list pos:start="151:31" pos:end="151:48">(<argument pos:start="151:32" pos:end="151:40"><expr pos:start="151:32" pos:end="151:40"><name pos:start="151:32" pos:end="151:40"><name pos:start="151:32" pos:end="151:33">cc</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:40">frame</name></name></expr></argument>, <argument pos:start="151:43" pos:end="151:47"><expr pos:start="151:43" pos:end="151:47"><name pos:start="151:43" pos:end="151:47">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="155:27"><if pos:start="153:13" pos:end="155:27">if <condition pos:start="153:16" pos:end="153:24">(<expr pos:start="153:17" pos:end="153:23"><name pos:start="153:17" pos:end="153:19">ret</name> <operator pos:start="153:21" pos:end="153:21">&lt;</operator> <literal type="number" pos:start="153:23" pos:end="153:23">0</literal></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:27"><block_content pos:start="155:17" pos:end="155:27">

                <return pos:start="155:17" pos:end="155:27">return <expr pos:start="155:24" pos:end="155:26"><name pos:start="155:24" pos:end="155:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        <default pos:start="159:9" pos:end="159:16">default:</default>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="167:9" pos:end="175:9"><if pos:start="167:9" pos:end="175:9">if <condition pos:start="167:12" pos:end="167:28">(<expr pos:start="167:13" pos:end="167:27"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:27"><name pos:start="167:14" pos:end="167:18">frame</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:24">data</name><index pos:start="167:25" pos:end="167:27">[<expr pos:start="167:26" pos:end="167:26"><literal type="number" pos:start="167:26" pos:end="167:26">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="167:30" pos:end="175:9">{<block_content pos:start="169:13" pos:end="173:27">

            <expr_stmt pos:start="169:13" pos:end="169:49"><expr pos:start="169:13" pos:end="169:48"><name pos:start="169:13" pos:end="169:15">ret</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:48"><name pos:start="169:19" pos:end="169:30">av_frame_ref</name><argument_list pos:start="169:31" pos:end="169:48">(<argument pos:start="169:32" pos:end="169:36"><expr pos:start="169:32" pos:end="169:36"><name pos:start="169:32" pos:end="169:36">frame</name></expr></argument>, <argument pos:start="169:39" pos:end="169:47"><expr pos:start="169:39" pos:end="169:47"><name pos:start="169:39" pos:end="169:47"><name pos:start="169:39" pos:end="169:40">cc</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:47">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="173:27"><if pos:start="171:13" pos:end="173:27">if <condition pos:start="171:16" pos:end="171:24">(<expr pos:start="171:17" pos:end="171:23"><name pos:start="171:17" pos:end="171:19">ret</name> <operator pos:start="171:21" pos:end="171:21">&lt;</operator> <literal type="number" pos:start="171:23" pos:end="171:23">0</literal></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:27"><block_content pos:start="173:17" pos:end="173:27">

                <return pos:start="173:17" pos:end="173:27">return <expr pos:start="173:24" pos:end="173:26"><name pos:start="173:24" pos:end="173:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:23"><expr pos:start="177:9" pos:end="177:22"><operator pos:start="177:9" pos:end="177:9">*</operator><name pos:start="177:10" pos:end="177:18">got_frame</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <literal type="number" pos:start="177:22" pos:end="177:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="179:7" pos:end="185:5">else <block pos:start="179:12" pos:end="185:5">{<block_content pos:start="181:9" pos:end="183:23">

        <expr_stmt pos:start="181:9" pos:end="181:23"><expr pos:start="181:9" pos:end="181:22"><operator pos:start="181:9" pos:end="181:9">*</operator><name pos:start="181:10" pos:end="181:18">got_frame</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:23"><expr pos:start="183:9" pos:end="183:22"><name pos:start="183:9" pos:end="183:16">buf_size</name>   <operator pos:start="183:20" pos:end="183:20">=</operator> <literal type="number" pos:start="183:22" pos:end="183:22">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="189:5" pos:end="189:20">return <expr pos:start="189:12" pos:end="189:19"><name pos:start="189:12" pos:end="189:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
