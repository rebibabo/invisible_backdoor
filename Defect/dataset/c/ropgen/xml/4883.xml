<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4883.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">jp2_find_codestream</name><parameter_list pos:start="1:31" pos:end="1:57">(<parameter pos:start="1:32" pos:end="1:56"><decl pos:start="1:32" pos:end="1:56"><type pos:start="1:32" pos:end="1:55"><name pos:start="1:32" pos:end="1:53">Jpeg2000DecoderContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:13">{<block_content pos:start="5:5" pos:end="241:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:22">atom_size</name></decl>, <decl pos:start="5:25" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:25" pos:end="5:28">atom</name></decl>, <decl pos:start="5:31" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:31" pos:end="5:38">atom_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">search_range</name> <init pos:start="7:22" pos:end="7:25">= <expr pos:start="7:24" pos:end="7:25"><literal type="number" pos:start="7:24" pos:end="7:25">10</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="241:13">while <condition pos:start="11:11" pos:end="15:50">(<expr pos:start="11:12" pos:end="15:49"><name pos:start="11:12" pos:end="11:23">search_range</name>

           <operator pos:start="13:12" pos:end="13:13">&amp;&amp;</operator>

           <call pos:start="15:12" pos:end="15:44"><name pos:start="15:12" pos:end="15:37">bytestream2_get_bytes_left</name><argument_list pos:start="15:38" pos:end="15:44">(<argument pos:start="15:39" pos:end="15:43"><expr pos:start="15:39" pos:end="15:43"><operator pos:start="15:39" pos:end="15:39">&amp;</operator><name pos:start="15:40" pos:end="15:43"><name pos:start="15:40" pos:end="15:40">s</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:43">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:46" pos:end="15:47">&gt;=</operator> <literal type="number" pos:start="15:49" pos:end="15:49">8</literal></expr>)</condition> <block pos:start="15:52" pos:end="241:13">{<block_content pos:start="17:9" pos:end="241:13">

        <expr_stmt pos:start="17:9" pos:end="17:49"><expr pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:17">atom_size</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:48"><name pos:start="17:21" pos:end="17:41">bytestream2_get_be32u</name><argument_list pos:start="17:42" pos:end="17:48">(<argument pos:start="17:43" pos:end="17:47"><expr pos:start="17:43" pos:end="17:47"><operator pos:start="17:43" pos:end="17:43">&amp;</operator><name pos:start="17:44" pos:end="17:47"><name pos:start="17:44" pos:end="17:44">s</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:47">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:49"><expr pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:12">atom</name>      <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:48"><name pos:start="19:21" pos:end="19:41">bytestream2_get_be32u</name><argument_list pos:start="19:42" pos:end="19:48">(<argument pos:start="19:43" pos:end="19:47"><expr pos:start="19:43" pos:end="19:47"><operator pos:start="19:43" pos:end="19:43">&amp;</operator><name pos:start="19:44" pos:end="19:47"><name pos:start="19:44" pos:end="19:44">s</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:47">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:60"><expr pos:start="21:9" pos:end="21:59"><name pos:start="21:9" pos:end="21:16">atom_end</name>  <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:43"><name pos:start="21:21" pos:end="21:36">bytestream2_tell</name><argument_list pos:start="21:37" pos:end="21:43">(<argument pos:start="21:38" pos:end="21:42"><expr pos:start="21:38" pos:end="21:42"><operator pos:start="21:38" pos:end="21:38">&amp;</operator><name pos:start="21:39" pos:end="21:42"><name pos:start="21:39" pos:end="21:39">s</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:42">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:45" pos:end="21:45">+</operator> <name pos:start="21:47" pos:end="21:55">atom_size</name> <operator pos:start="21:57" pos:end="21:57">-</operator> <literal type="number" pos:start="21:59" pos:end="21:59">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="25:9" pos:end="27:21"><if pos:start="25:9" pos:end="27:21">if <condition pos:start="25:12" pos:end="25:35">(<expr pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:16">atom</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <name pos:start="25:21" pos:end="25:34">JP2_CODESTREAM</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="31:9" pos:end="33:21"><if pos:start="31:9" pos:end="33:21">if <condition pos:start="31:12" pos:end="31:82">(<expr pos:start="31:13" pos:end="31:81"><call pos:start="31:13" pos:end="31:45"><name pos:start="31:13" pos:end="31:38">bytestream2_get_bytes_left</name><argument_list pos:start="31:39" pos:end="31:45">(<argument pos:start="31:40" pos:end="31:44"><expr pos:start="31:40" pos:end="31:44"><operator pos:start="31:40" pos:end="31:40">&amp;</operator><name pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:41">s</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:44">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:47" pos:end="31:47">&lt;</operator> <name pos:start="31:49" pos:end="31:57">atom_size</name> <operator pos:start="31:59" pos:end="31:60">||</operator> <name pos:start="31:62" pos:end="31:69">atom_end</name> <operator pos:start="31:71" pos:end="31:71">&lt;</operator> <name pos:start="31:73" pos:end="31:81">atom_size</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:21"><block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="37:9" pos:end="241:13"><if pos:start="37:9" pos:end="241:13">if <condition pos:start="37:12" pos:end="39:35">(<expr pos:start="37:13" pos:end="39:34"><name pos:start="37:13" pos:end="37:16">atom</name> <operator pos:start="37:18" pos:end="37:19">==</operator> <name pos:start="37:21" pos:end="37:30">JP2_HEADER</name> <operator pos:start="37:32" pos:end="37:33">&amp;&amp;</operator>

                   <name pos:start="39:20" pos:end="39:28">atom_size</name> <operator pos:start="39:30" pos:end="39:31">&gt;=</operator> <literal type="number" pos:start="39:33" pos:end="39:34">16</literal></expr>)</condition> <block pos:start="39:37" pos:end="241:13">{<block_content pos:start="41:13" pos:end="241:13">

            <decl_stmt pos:start="41:13" pos:end="41:50"><decl pos:start="41:13" pos:end="41:31"><type pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:20">uint32_t</name></type> <name pos:start="41:22" pos:end="41:31">atom2_size</name></decl>, <decl pos:start="41:34" pos:end="41:38"><type ref="prev" pos:start="41:13" pos:end="41:20"/><name pos:start="41:34" pos:end="41:38">atom2</name></decl>, <decl pos:start="41:41" pos:end="41:49"><type ref="prev" pos:start="41:13" pos:end="41:20"/><name pos:start="41:41" pos:end="41:49">atom2_end</name></decl>;</decl_stmt>

            <do pos:start="43:13" pos:end="241:13">do <block pos:start="43:16" pos:end="241:13">{<block_content pos:start="45:17" pos:end="241:13">

                <expr_stmt pos:start="45:17" pos:end="45:58"><expr pos:start="45:17" pos:end="45:57"><name pos:start="45:17" pos:end="45:26">atom2_size</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <call pos:start="45:30" pos:end="45:57"><name pos:start="45:30" pos:end="45:50">bytestream2_get_be32u</name><argument_list pos:start="45:51" pos:end="45:57">(<argument pos:start="45:52" pos:end="45:56"><expr pos:start="45:52" pos:end="45:56"><operator pos:start="45:52" pos:end="45:52">&amp;</operator><name pos:start="45:53" pos:end="45:56"><name pos:start="45:53" pos:end="45:53">s</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:56">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:58"><expr pos:start="47:17" pos:end="47:57"><name pos:start="47:17" pos:end="47:21">atom2</name>      <operator pos:start="47:28" pos:end="47:28">=</operator> <call pos:start="47:30" pos:end="47:57"><name pos:start="47:30" pos:end="47:50">bytestream2_get_be32u</name><argument_list pos:start="47:51" pos:end="47:57">(<argument pos:start="47:52" pos:end="47:56"><expr pos:start="47:52" pos:end="47:56"><operator pos:start="47:52" pos:end="47:52">&amp;</operator><name pos:start="47:53" pos:end="47:56"><name pos:start="47:53" pos:end="47:53">s</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:56">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:70"><expr pos:start="49:17" pos:end="49:69"><name pos:start="49:17" pos:end="49:25">atom2_end</name>  <operator pos:start="49:28" pos:end="49:28">=</operator> <call pos:start="49:30" pos:end="49:52"><name pos:start="49:30" pos:end="49:45">bytestream2_tell</name><argument_list pos:start="49:46" pos:end="49:52">(<argument pos:start="49:47" pos:end="49:51"><expr pos:start="49:47" pos:end="49:51"><operator pos:start="49:47" pos:end="49:47">&amp;</operator><name pos:start="49:48" pos:end="49:51"><name pos:start="49:48" pos:end="49:48">s</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:51">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:54" pos:end="49:54">+</operator> <name pos:start="49:56" pos:end="49:65">atom2_size</name> <operator pos:start="49:67" pos:end="49:67">-</operator> <literal type="number" pos:start="49:69" pos:end="49:69">8</literal></expr>;</expr_stmt>

                <if_stmt pos:start="51:17" pos:end="53:26"><if pos:start="51:17" pos:end="53:26">if <condition pos:start="51:20" pos:end="51:85">(<expr pos:start="51:21" pos:end="51:84"><name pos:start="51:21" pos:end="51:49"><name pos:start="51:21" pos:end="51:30">atom2_size</name> <argument_list type="generic" pos:start="51:32" pos:end="51:49">&lt; <argument pos:start="51:34" pos:end="51:47"><expr pos:start="51:34" pos:end="51:47"><literal type="number" pos:start="51:34" pos:end="51:34">8</literal> <operator pos:start="51:36" pos:end="51:37">||</operator> <name pos:start="51:39" pos:end="51:47">atom2_end</name></expr></argument> &gt;</argument_list></name> <name pos:start="51:51" pos:end="51:58">atom_end</name> <operator pos:start="51:60" pos:end="51:61">||</operator> <name pos:start="51:63" pos:end="51:71">atom2_end</name> <operator pos:start="51:73" pos:end="51:73">&lt;</operator> <name pos:start="51:75" pos:end="51:84">atom2_size</name></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:26"><block_content pos:start="53:21" pos:end="53:26">

                    <break pos:start="53:21" pos:end="53:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:32"><expr pos:start="55:17" pos:end="55:31"><name pos:start="55:17" pos:end="55:26">atom2_size</name> <operator pos:start="55:28" pos:end="55:29">-=</operator> <literal type="number" pos:start="55:31" pos:end="55:31">8</literal></expr>;</expr_stmt>

                <if_stmt pos:start="57:17" pos:end="241:13"><if pos:start="57:17" pos:end="61:17">if <condition pos:start="57:20" pos:end="57:44">(<expr pos:start="57:21" pos:end="57:43"><name pos:start="57:21" pos:end="57:25">atom2</name> <operator pos:start="57:27" pos:end="57:28">==</operator> <name pos:start="57:30" pos:end="57:43">JP2_CODESTREAM</name></expr>)</condition> <block pos:start="57:46" pos:end="61:17">{<block_content pos:start="59:21" pos:end="59:29">

                    <return pos:start="59:21" pos:end="59:29">return <expr pos:start="59:28" pos:end="59:28"><literal type="number" pos:start="59:28" pos:end="59:28">1</literal></expr>;</return>

                </block_content>}</block></if> <if type="elseif" pos:start="61:19" pos:end="241:13">else if <condition pos:start="61:27" pos:end="61:80">(<expr pos:start="61:28" pos:end="61:79"><name pos:start="61:28" pos:end="61:32">atom2</name> <operator pos:start="61:34" pos:end="61:35">==</operator> <call pos:start="61:37" pos:end="61:60"><name pos:start="61:37" pos:end="61:43">MKBETAG</name><argument_list pos:start="61:44" pos:end="61:60">(<argument pos:start="61:45" pos:end="61:47"><expr pos:start="61:45" pos:end="61:47"><literal type="char" pos:start="61:45" pos:end="61:47">'c'</literal></expr></argument>,<argument pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><literal type="char" pos:start="61:49" pos:end="61:51">'o'</literal></expr></argument>,<argument pos:start="61:53" pos:end="61:55"><expr pos:start="61:53" pos:end="61:55"><literal type="char" pos:start="61:53" pos:end="61:55">'l'</literal></expr></argument>,<argument pos:start="61:57" pos:end="61:59"><expr pos:start="61:57" pos:end="61:59"><literal type="char" pos:start="61:57" pos:end="61:59">'r'</literal></expr></argument>)</argument_list></call> <operator pos:start="61:62" pos:end="61:63">&amp;&amp;</operator> <name pos:start="61:65" pos:end="61:74">atom2_size</name> <operator pos:start="61:76" pos:end="61:77">&gt;=</operator> <literal type="number" pos:start="61:79" pos:end="61:79">7</literal></expr>)</condition> <block pos:start="61:82" pos:end="241:13">{<block_content pos:start="63:21" pos:end="241:13">

                    <decl_stmt pos:start="63:21" pos:end="63:62"><decl pos:start="63:21" pos:end="63:61"><type pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">int</name></type> <name pos:start="63:25" pos:end="63:30">method</name> <init pos:start="63:32" pos:end="63:61">= <expr pos:start="63:34" pos:end="63:61"><call pos:start="63:34" pos:end="63:61"><name pos:start="63:34" pos:end="63:54">bytestream2_get_byteu</name><argument_list pos:start="63:55" pos:end="63:61">(<argument pos:start="63:56" pos:end="63:60"><expr pos:start="63:56" pos:end="63:60"><operator pos:start="63:56" pos:end="63:56">&amp;</operator><name pos:start="63:57" pos:end="63:60"><name pos:start="63:57" pos:end="63:57">s</name><operator pos:start="63:58" pos:end="63:59">-&gt;</operator><name pos:start="63:60" pos:end="63:60">g</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:48"><expr pos:start="65:21" pos:end="65:47"><call pos:start="65:21" pos:end="65:47"><name pos:start="65:21" pos:end="65:37">bytestream2_skipu</name><argument_list pos:start="65:38" pos:end="65:47">(<argument pos:start="65:39" pos:end="65:43"><expr pos:start="65:39" pos:end="65:43"><operator pos:start="65:39" pos:end="65:39">&amp;</operator><name pos:start="65:40" pos:end="65:43"><name pos:start="65:40" pos:end="65:40">s</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:43">g</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:46"><expr pos:start="65:46" pos:end="65:46"><literal type="number" pos:start="65:46" pos:end="65:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="67:21" pos:end="241:13"><if pos:start="67:21" pos:end="72:17">if <condition pos:start="67:24" pos:end="67:36">(<expr pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:30">method</name> <operator pos:start="67:32" pos:end="67:33">==</operator> <literal type="number" pos:start="67:35" pos:end="67:35">1</literal></expr>)</condition> <block pos:start="67:38" pos:end="72:17">{<block_content pos:start="69:25" pos:end="69:71">

                        <expr_stmt pos:start="69:25" pos:end="69:71"><expr pos:start="69:25" pos:end="69:70"><name pos:start="69:25" pos:end="69:39"><name pos:start="69:25" pos:end="69:25">s</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:39">colour_space</name></name> <operator pos:start="69:41" pos:end="69:41">=</operator> <call pos:start="69:43" pos:end="69:70"><name pos:start="69:43" pos:end="69:63">bytestream2_get_be32u</name><argument_list pos:start="69:64" pos:end="69:70">(<argument pos:start="69:65" pos:end="69:69"><expr pos:start="69:65" pos:end="69:69"><operator pos:start="69:65" pos:end="69:65">&amp;</operator><name pos:start="69:66" pos:end="69:69"><name pos:start="69:66" pos:end="69:66">s</name><operator pos:start="69:67" pos:end="69:68">-&gt;</operator><name pos:start="69:69" pos:end="69:69">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                </block_content>}</block></if> <if type="elseif" pos:start="72:19" pos:end="241:13">else if <condition pos:start="72:27" pos:end="72:80">(<expr pos:start="72:28" pos:end="72:79"><name pos:start="72:28" pos:end="72:32">atom2</name> <operator pos:start="72:34" pos:end="72:35">==</operator> <call pos:start="72:37" pos:end="72:60"><name pos:start="72:37" pos:end="72:43">MKBETAG</name><argument_list pos:start="72:44" pos:end="72:60">(<argument pos:start="72:45" pos:end="72:47"><expr pos:start="72:45" pos:end="72:47"><literal type="char" pos:start="72:45" pos:end="72:47">'p'</literal></expr></argument>,<argument pos:start="72:49" pos:end="72:51"><expr pos:start="72:49" pos:end="72:51"><literal type="char" pos:start="72:49" pos:end="72:51">'c'</literal></expr></argument>,<argument pos:start="72:53" pos:end="72:55"><expr pos:start="72:53" pos:end="72:55"><literal type="char" pos:start="72:53" pos:end="72:55">'l'</literal></expr></argument>,<argument pos:start="72:57" pos:end="72:59"><expr pos:start="72:57" pos:end="72:59"><literal type="char" pos:start="72:57" pos:end="72:59">'r'</literal></expr></argument>)</argument_list></call> <operator pos:start="72:62" pos:end="72:63">&amp;&amp;</operator> <name pos:start="72:65" pos:end="72:74">atom2_size</name> <operator pos:start="72:76" pos:end="72:77">&gt;=</operator> <literal type="number" pos:start="72:79" pos:end="72:79">6</literal></expr>)</condition> <block pos:start="72:82" pos:end="241:13">{<block_content pos:start="74:21" pos:end="241:13">

                    <decl_stmt pos:start="74:21" pos:end="74:80"><decl pos:start="74:21" pos:end="74:25"><type pos:start="74:21" pos:end="74:23"><name pos:start="74:21" pos:end="74:23">int</name></type> <name pos:start="74:25" pos:end="74:25">i</name></decl>, <decl pos:start="74:28" pos:end="74:31"><type ref="prev" pos:start="74:21" pos:end="74:23"/><name pos:start="74:28" pos:end="74:31">size</name></decl>, <decl pos:start="74:34" pos:end="74:45"><type ref="prev" pos:start="74:21" pos:end="74:23"/><name pos:start="74:34" pos:end="74:45">colour_count</name></decl>, <decl pos:start="74:48" pos:end="74:62"><type ref="prev" pos:start="74:21" pos:end="74:23"/><name pos:start="74:48" pos:end="74:62">colour_channels</name></decl>, <decl pos:start="74:65" pos:end="74:79"><type ref="prev" pos:start="74:21" pos:end="74:23"/><name pos:start="74:65" pos:end="74:79"><name pos:start="74:65" pos:end="74:76">colour_depth</name><index pos:start="74:77" pos:end="74:79">[<expr pos:start="74:78" pos:end="74:78"><literal type="number" pos:start="74:78" pos:end="74:78">3</literal></expr>]</index></name></decl>;</decl_stmt>

                    <decl_stmt pos:start="76:21" pos:end="76:37"><decl pos:start="76:21" pos:end="76:30"><type pos:start="76:21" pos:end="76:28"><name pos:start="76:21" pos:end="76:28">uint32_t</name></type> <name pos:start="76:30" pos:end="76:30">r</name></decl>, <decl pos:start="76:33" pos:end="76:33"><type ref="prev" pos:start="76:21" pos:end="76:28"/><name pos:start="76:33" pos:end="76:33">g</name></decl>, <decl pos:start="76:36" pos:end="76:36"><type ref="prev" pos:start="76:21" pos:end="76:28"/><name pos:start="76:36" pos:end="76:36">b</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="78:21" pos:end="78:64"><expr pos:start="78:21" pos:end="78:63"><name pos:start="78:21" pos:end="78:32">colour_count</name> <operator pos:start="78:34" pos:end="78:34">=</operator> <call pos:start="78:36" pos:end="78:63"><name pos:start="78:36" pos:end="78:56">bytestream2_get_be16u</name><argument_list pos:start="78:57" pos:end="78:63">(<argument pos:start="78:58" pos:end="78:62"><expr pos:start="78:58" pos:end="78:62"><operator pos:start="78:58" pos:end="78:58">&amp;</operator><name pos:start="78:59" pos:end="78:62"><name pos:start="78:59" pos:end="78:59">s</name><operator pos:start="78:60" pos:end="78:61">-&gt;</operator><name pos:start="78:62" pos:end="78:62">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="80:21" pos:end="80:67"><expr pos:start="80:21" pos:end="80:66"><name pos:start="80:21" pos:end="80:35">colour_channels</name> <operator pos:start="80:37" pos:end="80:37">=</operator> <call pos:start="80:39" pos:end="80:66"><name pos:start="80:39" pos:end="80:59">bytestream2_get_byteu</name><argument_list pos:start="80:60" pos:end="80:66">(<argument pos:start="80:61" pos:end="80:65"><expr pos:start="80:61" pos:end="80:65"><operator pos:start="80:61" pos:end="80:61">&amp;</operator><name pos:start="80:62" pos:end="80:65"><name pos:start="80:62" pos:end="80:62">s</name><operator pos:start="80:63" pos:end="80:64">-&gt;</operator><name pos:start="80:65" pos:end="80:65">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="line" pos:start="82:21" pos:end="82:56">// FIXME: Do not ignore channel_sign</comment>

                    <expr_stmt pos:start="84:21" pos:end="84:80"><expr pos:start="84:21" pos:end="84:79"><name pos:start="84:21" pos:end="84:35"><name pos:start="84:21" pos:end="84:32">colour_depth</name><index pos:start="84:33" pos:end="84:35">[<expr pos:start="84:34" pos:end="84:34"><literal type="number" pos:start="84:34" pos:end="84:34">0</literal></expr>]</index></name> <operator pos:start="84:37" pos:end="84:37">=</operator> <operator pos:start="84:39" pos:end="84:39">(</operator><call pos:start="84:40" pos:end="84:67"><name pos:start="84:40" pos:end="84:60">bytestream2_get_byteu</name><argument_list pos:start="84:61" pos:end="84:67">(<argument pos:start="84:62" pos:end="84:66"><expr pos:start="84:62" pos:end="84:66"><operator pos:start="84:62" pos:end="84:62">&amp;</operator><name pos:start="84:63" pos:end="84:66"><name pos:start="84:63" pos:end="84:63">s</name><operator pos:start="84:64" pos:end="84:65">-&gt;</operator><name pos:start="84:66" pos:end="84:66">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="84:69" pos:end="84:69">&amp;</operator> <literal type="number" pos:start="84:71" pos:end="84:74">0x7f</literal><operator pos:start="84:75" pos:end="84:75">)</operator> <operator pos:start="84:77" pos:end="84:77">+</operator> <literal type="number" pos:start="84:79" pos:end="84:79">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="86:21" pos:end="86:80"><expr pos:start="86:21" pos:end="86:79"><name pos:start="86:21" pos:end="86:35"><name pos:start="86:21" pos:end="86:32">colour_depth</name><index pos:start="86:33" pos:end="86:35">[<expr pos:start="86:34" pos:end="86:34"><literal type="number" pos:start="86:34" pos:end="86:34">1</literal></expr>]</index></name> <operator pos:start="86:37" pos:end="86:37">=</operator> <operator pos:start="86:39" pos:end="86:39">(</operator><call pos:start="86:40" pos:end="86:67"><name pos:start="86:40" pos:end="86:60">bytestream2_get_byteu</name><argument_list pos:start="86:61" pos:end="86:67">(<argument pos:start="86:62" pos:end="86:66"><expr pos:start="86:62" pos:end="86:66"><operator pos:start="86:62" pos:end="86:62">&amp;</operator><name pos:start="86:63" pos:end="86:66"><name pos:start="86:63" pos:end="86:63">s</name><operator pos:start="86:64" pos:end="86:65">-&gt;</operator><name pos:start="86:66" pos:end="86:66">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="86:69" pos:end="86:69">&amp;</operator> <literal type="number" pos:start="86:71" pos:end="86:74">0x7f</literal><operator pos:start="86:75" pos:end="86:75">)</operator> <operator pos:start="86:77" pos:end="86:77">+</operator> <literal type="number" pos:start="86:79" pos:end="86:79">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="88:21" pos:end="88:80"><expr pos:start="88:21" pos:end="88:79"><name pos:start="88:21" pos:end="88:35"><name pos:start="88:21" pos:end="88:32">colour_depth</name><index pos:start="88:33" pos:end="88:35">[<expr pos:start="88:34" pos:end="88:34"><literal type="number" pos:start="88:34" pos:end="88:34">2</literal></expr>]</index></name> <operator pos:start="88:37" pos:end="88:37">=</operator> <operator pos:start="88:39" pos:end="88:39">(</operator><call pos:start="88:40" pos:end="88:67"><name pos:start="88:40" pos:end="88:60">bytestream2_get_byteu</name><argument_list pos:start="88:61" pos:end="88:67">(<argument pos:start="88:62" pos:end="88:66"><expr pos:start="88:62" pos:end="88:66"><operator pos:start="88:62" pos:end="88:62">&amp;</operator><name pos:start="88:63" pos:end="88:66"><name pos:start="88:63" pos:end="88:63">s</name><operator pos:start="88:64" pos:end="88:65">-&gt;</operator><name pos:start="88:66" pos:end="88:66">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="88:69" pos:end="88:69">&amp;</operator> <literal type="number" pos:start="88:71" pos:end="88:74">0x7f</literal><operator pos:start="88:75" pos:end="88:75">)</operator> <operator pos:start="88:77" pos:end="88:77">+</operator> <literal type="number" pos:start="88:79" pos:end="88:79">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="90:21" pos:end="94:69"><expr pos:start="90:21" pos:end="94:68"><name pos:start="90:21" pos:end="90:24">size</name> <operator pos:start="90:26" pos:end="90:26">=</operator> <operator pos:start="90:28" pos:end="90:28">(</operator><name pos:start="90:29" pos:end="90:43"><name pos:start="90:29" pos:end="90:40">colour_depth</name><index pos:start="90:41" pos:end="90:43">[<expr pos:start="90:42" pos:end="90:42"><literal type="number" pos:start="90:42" pos:end="90:42">0</literal></expr>]</index></name> <operator pos:start="90:45" pos:end="90:45">+</operator> <literal type="number" pos:start="90:47" pos:end="90:47">7</literal> <operator pos:start="90:49" pos:end="90:50">&gt;&gt;</operator> <literal type="number" pos:start="90:52" pos:end="90:52">3</literal><operator pos:start="90:53" pos:end="90:53">)</operator> <operator pos:start="90:55" pos:end="90:55">*</operator> <name pos:start="90:57" pos:end="90:68">colour_count</name> <operator pos:start="90:70" pos:end="90:70">+</operator>

                           <operator pos:start="92:28" pos:end="92:28">(</operator><name pos:start="92:29" pos:end="92:43"><name pos:start="92:29" pos:end="92:40">colour_depth</name><index pos:start="92:41" pos:end="92:43">[<expr pos:start="92:42" pos:end="92:42"><literal type="number" pos:start="92:42" pos:end="92:42">1</literal></expr>]</index></name> <operator pos:start="92:45" pos:end="92:45">+</operator> <literal type="number" pos:start="92:47" pos:end="92:47">7</literal> <operator pos:start="92:49" pos:end="92:50">&gt;&gt;</operator> <literal type="number" pos:start="92:52" pos:end="92:52">3</literal><operator pos:start="92:53" pos:end="92:53">)</operator> <operator pos:start="92:55" pos:end="92:55">*</operator> <name pos:start="92:57" pos:end="92:68">colour_count</name> <operator pos:start="92:70" pos:end="92:70">+</operator>

                           <operator pos:start="94:28" pos:end="94:28">(</operator><name pos:start="94:29" pos:end="94:43"><name pos:start="94:29" pos:end="94:40">colour_depth</name><index pos:start="94:41" pos:end="94:43">[<expr pos:start="94:42" pos:end="94:42"><literal type="number" pos:start="94:42" pos:end="94:42">2</literal></expr>]</index></name> <operator pos:start="94:45" pos:end="94:45">+</operator> <literal type="number" pos:start="94:47" pos:end="94:47">7</literal> <operator pos:start="94:49" pos:end="94:50">&gt;&gt;</operator> <literal type="number" pos:start="94:52" pos:end="94:52">3</literal><operator pos:start="94:53" pos:end="94:53">)</operator> <operator pos:start="94:55" pos:end="94:55">*</operator> <name pos:start="94:57" pos:end="94:68">colour_count</name></expr>;</expr_stmt>

                    <if_stmt pos:start="96:21" pos:end="241:13"><if pos:start="96:21" pos:end="241:13">if <condition pos:start="96:24" pos:end="106:42">(<expr pos:start="96:25" pos:end="106:41"><name pos:start="96:25" pos:end="96:36">colour_count</name> <operator pos:start="96:38" pos:end="96:38">&gt;</operator> <literal type="number" pos:start="96:40" pos:end="96:42">256</literal>   <operator pos:start="96:46" pos:end="96:47">||</operator>

                        <name pos:start="98:25" pos:end="98:39">colour_channels</name> <operator pos:start="98:41" pos:end="98:42">!=</operator> <literal type="number" pos:start="98:44" pos:end="98:44">3</literal> <operator pos:start="98:46" pos:end="98:47">||</operator>

                        <name pos:start="100:25" pos:end="100:39"><name pos:start="100:25" pos:end="100:36">colour_depth</name><index pos:start="100:37" pos:end="100:39">[<expr pos:start="100:38" pos:end="100:38"><literal type="number" pos:start="100:38" pos:end="100:38">0</literal></expr>]</index></name> <operator pos:start="100:41" pos:end="100:41">&gt;</operator> <literal type="number" pos:start="100:43" pos:end="100:44">16</literal> <operator pos:start="100:46" pos:end="100:47">||</operator>

                        <name pos:start="102:25" pos:end="102:39"><name pos:start="102:25" pos:end="102:36">colour_depth</name><index pos:start="102:37" pos:end="102:39">[<expr pos:start="102:38" pos:end="102:38"><literal type="number" pos:start="102:38" pos:end="102:38">1</literal></expr>]</index></name> <operator pos:start="102:41" pos:end="102:41">&gt;</operator> <literal type="number" pos:start="102:43" pos:end="102:44">16</literal> <operator pos:start="102:46" pos:end="102:47">||</operator>

                        <name pos:start="104:25" pos:end="104:39"><name pos:start="104:25" pos:end="104:36">colour_depth</name><index pos:start="104:37" pos:end="104:39">[<expr pos:start="104:38" pos:end="104:38"><literal type="number" pos:start="104:38" pos:end="104:38">2</literal></expr>]</index></name> <operator pos:start="104:41" pos:end="104:41">&gt;</operator> <literal type="number" pos:start="104:43" pos:end="104:44">16</literal> <operator pos:start="104:46" pos:end="104:47">||</operator>

                        <name pos:start="106:25" pos:end="106:34">atom2_size</name> <operator pos:start="106:36" pos:end="106:36">&lt;</operator> <name pos:start="106:38" pos:end="106:41">size</name></expr>)</condition> <block pos:start="106:44" pos:end="241:13">{<block_content pos:start="108:25" pos:end="241:13">

                        <expr_stmt pos:start="108:25" pos:end="108:75"><expr pos:start="108:25" pos:end="108:74"><call pos:start="108:25" pos:end="108:74"><name pos:start="108:25" pos:end="108:45">avpriv_request_sample</name><argument_list pos:start="108:46" pos:end="108:74">(<argument pos:start="108:47" pos:end="108:54"><expr pos:start="108:47" pos:end="108:54"><name pos:start="108:47" pos:end="108:54"><name pos:start="108:47" pos:end="108:47">s</name><operator pos:start="108:48" pos:end="108:49">-&gt;</operator><name pos:start="108:50" pos:end="108:54">avctx</name></name></expr></argument>, <argument pos:start="108:57" pos:end="108:73"><expr pos:start="108:57" pos:end="108:73"><literal type="string" pos:start="108:57" pos:end="108:73">"Unknown palette"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




                    <expr_stmt pos:start="113:21" pos:end="113:32"><expr pos:start="113:21" pos:end="113:31"><name pos:start="113:21" pos:end="113:27"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:27">pal8</name></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <literal type="number" pos:start="113:31" pos:end="113:31">1</literal></expr>;</expr_stmt>

                    <for pos:start="115:21" pos:end="241:13">for <control pos:start="115:25" pos:end="115:54">(<init pos:start="115:26" pos:end="115:31"><expr pos:start="115:26" pos:end="115:30"><name pos:start="115:26" pos:end="115:26">i</name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">0</literal></expr>;</init> <condition pos:start="115:33" pos:end="115:49"><expr pos:start="115:33" pos:end="115:48"><name pos:start="115:33" pos:end="115:33">i</name> <operator pos:start="115:35" pos:end="115:35">&lt;</operator> <name pos:start="115:37" pos:end="115:48">colour_count</name></expr>;</condition> <incr pos:start="115:51" pos:end="115:53"><expr pos:start="115:51" pos:end="115:53"><name pos:start="115:51" pos:end="115:51">i</name><operator pos:start="115:52" pos:end="115:53">++</operator></expr></incr>)</control> <block pos:start="115:56" pos:end="241:13">{<block_content pos:start="117:25" pos:end="241:13">

                        <if_stmt pos:start="117:25" pos:end="241:13"><if pos:start="117:25" pos:end="123:25">if <condition pos:start="117:28" pos:end="117:49">(<expr pos:start="117:29" pos:end="117:48"><name pos:start="117:29" pos:end="117:43"><name pos:start="117:29" pos:end="117:40">colour_depth</name><index pos:start="117:41" pos:end="117:43">[<expr pos:start="117:42" pos:end="117:42"><literal type="number" pos:start="117:42" pos:end="117:42">0</literal></expr>]</index></name> <operator pos:start="117:45" pos:end="117:46">&lt;=</operator> <literal type="number" pos:start="117:48" pos:end="117:48">8</literal></expr>)</condition> <block pos:start="117:51" pos:end="123:25">{<block_content pos:start="119:29" pos:end="121:54">

                            <expr_stmt pos:start="119:29" pos:end="119:84"><expr pos:start="119:29" pos:end="119:83"><name pos:start="119:29" pos:end="119:29">r</name> <operator pos:start="119:31" pos:end="119:31">=</operator> <call pos:start="119:33" pos:end="119:60"><name pos:start="119:33" pos:end="119:53">bytestream2_get_byteu</name><argument_list pos:start="119:54" pos:end="119:60">(<argument pos:start="119:55" pos:end="119:59"><expr pos:start="119:55" pos:end="119:59"><operator pos:start="119:55" pos:end="119:55">&amp;</operator><name pos:start="119:56" pos:end="119:59"><name pos:start="119:56" pos:end="119:56">s</name><operator pos:start="119:57" pos:end="119:58">-&gt;</operator><name pos:start="119:59" pos:end="119:59">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="119:62" pos:end="119:63">&lt;&lt;</operator> <literal type="number" pos:start="119:65" pos:end="119:67">8</literal> <operator pos:start="119:67" pos:end="119:67">-</operator> <name pos:start="119:69" pos:end="119:83"><name pos:start="119:69" pos:end="119:80">colour_depth</name><index pos:start="119:81" pos:end="119:83">[<expr pos:start="119:82" pos:end="119:82"><literal type="number" pos:start="119:82" pos:end="119:82">0</literal></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="121:29" pos:end="121:54"><expr pos:start="121:29" pos:end="121:53"><name pos:start="121:29" pos:end="121:29">r</name> <operator pos:start="121:31" pos:end="121:32">|=</operator> <name pos:start="121:34" pos:end="121:34">r</name> <operator pos:start="121:36" pos:end="121:37">&gt;&gt;</operator> <name pos:start="121:39" pos:end="121:53"><name pos:start="121:39" pos:end="121:50">colour_depth</name><index pos:start="121:51" pos:end="121:53">[<expr pos:start="121:52" pos:end="121:52"><literal type="number" pos:start="121:52" pos:end="121:52">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="123:27" pos:end="241:13">else <block pos:start="123:32" pos:end="241:13">{<block_content pos:start="125:29" pos:end="241:13">

                            <expr_stmt pos:start="125:29" pos:end="125:84"><expr pos:start="125:29" pos:end="125:83"><name pos:start="125:29" pos:end="125:29">r</name> <operator pos:start="125:31" pos:end="125:31">=</operator> <call pos:start="125:33" pos:end="125:60"><name pos:start="125:33" pos:end="125:53">bytestream2_get_be16u</name><argument_list pos:start="125:54" pos:end="125:60">(<argument pos:start="125:55" pos:end="125:59"><expr pos:start="125:55" pos:end="125:59"><operator pos:start="125:55" pos:end="125:55">&amp;</operator><name pos:start="125:56" pos:end="125:59"><name pos:start="125:56" pos:end="125:56">s</name><operator pos:start="125:57" pos:end="125:58">-&gt;</operator><name pos:start="125:59" pos:end="125:59">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="125:62" pos:end="125:63">&gt;&gt;</operator> <name pos:start="125:65" pos:end="125:79"><name pos:start="125:65" pos:end="125:76">colour_depth</name><index pos:start="125:77" pos:end="125:79">[<expr pos:start="125:78" pos:end="125:78"><literal type="number" pos:start="125:78" pos:end="125:78">0</literal></expr>]</index></name> <operator pos:start="125:81" pos:end="125:81">-</operator> <literal type="number" pos:start="125:83" pos:end="125:83">8</literal></expr>;</expr_stmt>


                        <if_stmt pos:start="128:25" pos:end="241:13"><if pos:start="128:25" pos:end="134:25">if <condition pos:start="128:28" pos:end="128:49">(<expr pos:start="128:29" pos:end="128:48"><name pos:start="128:29" pos:end="128:43"><name pos:start="128:29" pos:end="128:40">colour_depth</name><index pos:start="128:41" pos:end="128:43">[<expr pos:start="128:42" pos:end="128:42"><literal type="number" pos:start="128:42" pos:end="128:42">1</literal></expr>]</index></name> <operator pos:start="128:45" pos:end="128:46">&lt;=</operator> <literal type="number" pos:start="128:48" pos:end="128:48">8</literal></expr>)</condition> <block pos:start="128:51" pos:end="134:25">{<block_content pos:start="130:29" pos:end="132:54">

                            <expr_stmt pos:start="130:29" pos:end="130:84"><expr pos:start="130:29" pos:end="130:83"><name pos:start="130:29" pos:end="130:29">g</name> <operator pos:start="130:31" pos:end="130:31">=</operator> <call pos:start="130:33" pos:end="130:60"><name pos:start="130:33" pos:end="130:53">bytestream2_get_byteu</name><argument_list pos:start="130:54" pos:end="130:60">(<argument pos:start="130:55" pos:end="130:59"><expr pos:start="130:55" pos:end="130:59"><operator pos:start="130:55" pos:end="130:55">&amp;</operator><name pos:start="130:56" pos:end="130:59"><name pos:start="130:56" pos:end="130:56">s</name><operator pos:start="130:57" pos:end="130:58">-&gt;</operator><name pos:start="130:59" pos:end="130:59">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="130:62" pos:end="130:63">&lt;&lt;</operator> <literal type="number" pos:start="130:65" pos:end="130:67">8</literal> <operator pos:start="130:67" pos:end="130:67">-</operator> <name pos:start="130:69" pos:end="130:83"><name pos:start="130:69" pos:end="130:80">colour_depth</name><index pos:start="130:81" pos:end="130:83">[<expr pos:start="130:82" pos:end="130:82"><literal type="number" pos:start="130:82" pos:end="130:82">1</literal></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="132:29" pos:end="132:54"><expr pos:start="132:29" pos:end="132:53"><name pos:start="132:29" pos:end="132:29">r</name> <operator pos:start="132:31" pos:end="132:32">|=</operator> <name pos:start="132:34" pos:end="132:34">r</name> <operator pos:start="132:36" pos:end="132:37">&gt;&gt;</operator> <name pos:start="132:39" pos:end="132:53"><name pos:start="132:39" pos:end="132:50">colour_depth</name><index pos:start="132:51" pos:end="132:53">[<expr pos:start="132:52" pos:end="132:52"><literal type="number" pos:start="132:52" pos:end="132:52">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="134:27" pos:end="241:13">else <block pos:start="134:32" pos:end="241:13">{<block_content pos:start="136:29" pos:end="241:13">

                            <expr_stmt pos:start="136:29" pos:end="136:84"><expr pos:start="136:29" pos:end="136:83"><name pos:start="136:29" pos:end="136:29">g</name> <operator pos:start="136:31" pos:end="136:31">=</operator> <call pos:start="136:33" pos:end="136:60"><name pos:start="136:33" pos:end="136:53">bytestream2_get_be16u</name><argument_list pos:start="136:54" pos:end="136:60">(<argument pos:start="136:55" pos:end="136:59"><expr pos:start="136:55" pos:end="136:59"><operator pos:start="136:55" pos:end="136:55">&amp;</operator><name pos:start="136:56" pos:end="136:59"><name pos:start="136:56" pos:end="136:56">s</name><operator pos:start="136:57" pos:end="136:58">-&gt;</operator><name pos:start="136:59" pos:end="136:59">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="136:62" pos:end="136:63">&gt;&gt;</operator> <name pos:start="136:65" pos:end="136:79"><name pos:start="136:65" pos:end="136:76">colour_depth</name><index pos:start="136:77" pos:end="136:79">[<expr pos:start="136:78" pos:end="136:78"><literal type="number" pos:start="136:78" pos:end="136:78">1</literal></expr>]</index></name> <operator pos:start="136:81" pos:end="136:81">-</operator> <literal type="number" pos:start="136:83" pos:end="136:83">8</literal></expr>;</expr_stmt>


                        <if_stmt pos:start="139:25" pos:end="153:17"><if pos:start="139:25" pos:end="145:25">if <condition pos:start="139:28" pos:end="139:49">(<expr pos:start="139:29" pos:end="139:48"><name pos:start="139:29" pos:end="139:43"><name pos:start="139:29" pos:end="139:40">colour_depth</name><index pos:start="139:41" pos:end="139:43">[<expr pos:start="139:42" pos:end="139:42"><literal type="number" pos:start="139:42" pos:end="139:42">2</literal></expr>]</index></name> <operator pos:start="139:45" pos:end="139:46">&lt;=</operator> <literal type="number" pos:start="139:48" pos:end="139:48">8</literal></expr>)</condition> <block pos:start="139:51" pos:end="145:25">{<block_content pos:start="141:29" pos:end="143:54">

                            <expr_stmt pos:start="141:29" pos:end="141:84"><expr pos:start="141:29" pos:end="141:83"><name pos:start="141:29" pos:end="141:29">b</name> <operator pos:start="141:31" pos:end="141:31">=</operator> <call pos:start="141:33" pos:end="141:60"><name pos:start="141:33" pos:end="141:53">bytestream2_get_byteu</name><argument_list pos:start="141:54" pos:end="141:60">(<argument pos:start="141:55" pos:end="141:59"><expr pos:start="141:55" pos:end="141:59"><operator pos:start="141:55" pos:end="141:55">&amp;</operator><name pos:start="141:56" pos:end="141:59"><name pos:start="141:56" pos:end="141:56">s</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:59">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:62" pos:end="141:63">&lt;&lt;</operator> <literal type="number" pos:start="141:65" pos:end="141:67">8</literal> <operator pos:start="141:67" pos:end="141:67">-</operator> <name pos:start="141:69" pos:end="141:83"><name pos:start="141:69" pos:end="141:80">colour_depth</name><index pos:start="141:81" pos:end="141:83">[<expr pos:start="141:82" pos:end="141:82"><literal type="number" pos:start="141:82" pos:end="141:82">2</literal></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="143:29" pos:end="143:54"><expr pos:start="143:29" pos:end="143:53"><name pos:start="143:29" pos:end="143:29">r</name> <operator pos:start="143:31" pos:end="143:32">|=</operator> <name pos:start="143:34" pos:end="143:34">r</name> <operator pos:start="143:36" pos:end="143:37">&gt;&gt;</operator> <name pos:start="143:39" pos:end="143:53"><name pos:start="143:39" pos:end="143:50">colour_depth</name><index pos:start="143:51" pos:end="143:53">[<expr pos:start="143:52" pos:end="143:52"><literal type="number" pos:start="143:52" pos:end="143:52">2</literal></expr>]</index></name></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="145:27" pos:end="153:17">else <block pos:start="145:32" pos:end="153:17">{<block_content pos:start="147:29" pos:end="150:75">

                            <expr_stmt pos:start="147:29" pos:end="147:84"><expr pos:start="147:29" pos:end="147:83"><name pos:start="147:29" pos:end="147:29">b</name> <operator pos:start="147:31" pos:end="147:31">=</operator> <call pos:start="147:33" pos:end="147:60"><name pos:start="147:33" pos:end="147:53">bytestream2_get_be16u</name><argument_list pos:start="147:54" pos:end="147:60">(<argument pos:start="147:55" pos:end="147:59"><expr pos:start="147:55" pos:end="147:59"><operator pos:start="147:55" pos:end="147:55">&amp;</operator><name pos:start="147:56" pos:end="147:59"><name pos:start="147:56" pos:end="147:56">s</name><operator pos:start="147:57" pos:end="147:58">-&gt;</operator><name pos:start="147:59" pos:end="147:59">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="147:62" pos:end="147:63">&gt;&gt;</operator> <name pos:start="147:65" pos:end="147:79"><name pos:start="147:65" pos:end="147:76">colour_depth</name><index pos:start="147:77" pos:end="147:79">[<expr pos:start="147:78" pos:end="147:78"><literal type="number" pos:start="147:78" pos:end="147:78">2</literal></expr>]</index></name> <operator pos:start="147:81" pos:end="147:81">-</operator> <literal type="number" pos:start="147:83" pos:end="147:83">8</literal></expr>;</expr_stmt>


                        <expr_stmt pos:start="150:25" pos:end="150:75"><expr pos:start="150:25" pos:end="150:74"><name pos:start="150:25" pos:end="150:37"><name pos:start="150:25" pos:end="150:25">s</name><operator pos:start="150:26" pos:end="150:27">-&gt;</operator><name pos:start="150:28" pos:end="150:34">palette</name><index pos:start="150:35" pos:end="150:37">[<expr pos:start="150:36" pos:end="150:36"><name pos:start="150:36" pos:end="150:36">i</name></expr>]</index></name> <operator pos:start="150:39" pos:end="150:39">=</operator> <literal type="number" pos:start="150:41" pos:end="150:45">0xffu</literal> <operator pos:start="150:47" pos:end="150:48">&lt;&lt;</operator> <literal type="number" pos:start="150:50" pos:end="150:51">24</literal> <operator pos:start="150:53" pos:end="150:53">|</operator> <name pos:start="150:55" pos:end="150:55">r</name> <operator pos:start="150:57" pos:end="150:58">&lt;&lt;</operator> <literal type="number" pos:start="150:60" pos:end="150:61">16</literal> <operator pos:start="150:63" pos:end="150:63">|</operator> <name pos:start="150:65" pos:end="150:65">g</name> <operator pos:start="150:67" pos:end="150:68">&lt;&lt;</operator> <literal type="number" pos:start="150:70" pos:end="150:70">8</literal> <operator pos:start="150:72" pos:end="150:72">|</operator> <name pos:start="150:74" pos:end="150:74">b</name></expr>;</expr_stmt>


                </block_content>}</block></else></if_stmt> <if_stmt pos:start="153:19" pos:end="241:13"><if type="elseif" pos:start="153:19" pos:end="241:13">else if <condition pos:start="153:27" pos:end="153:80">(<expr pos:start="153:28" pos:end="153:79"><name pos:start="153:28" pos:end="153:32">atom2</name> <operator pos:start="153:34" pos:end="153:35">==</operator> <call pos:start="153:37" pos:end="153:60"><name pos:start="153:37" pos:end="153:43">MKBETAG</name><argument_list pos:start="153:44" pos:end="153:60">(<argument pos:start="153:45" pos:end="153:47"><expr pos:start="153:45" pos:end="153:47"><literal type="char" pos:start="153:45" pos:end="153:47">'c'</literal></expr></argument>,<argument pos:start="153:49" pos:end="153:51"><expr pos:start="153:49" pos:end="153:51"><literal type="char" pos:start="153:49" pos:end="153:51">'d'</literal></expr></argument>,<argument pos:start="153:53" pos:end="153:55"><expr pos:start="153:53" pos:end="153:55"><literal type="char" pos:start="153:53" pos:end="153:55">'e'</literal></expr></argument>,<argument pos:start="153:57" pos:end="153:59"><expr pos:start="153:57" pos:end="153:59"><literal type="char" pos:start="153:57" pos:end="153:59">'f'</literal></expr></argument>)</argument_list></call> <operator pos:start="153:62" pos:end="153:63">&amp;&amp;</operator> <name pos:start="153:65" pos:end="153:74">atom2_size</name> <operator pos:start="153:76" pos:end="153:77">&gt;=</operator> <literal type="number" pos:start="153:79" pos:end="153:79">2</literal></expr>)</condition> <block pos:start="153:82" pos:end="241:13">{<block_content pos:start="155:21" pos:end="241:13">

                    <decl_stmt pos:start="155:21" pos:end="155:57"><decl pos:start="155:21" pos:end="155:56"><type pos:start="155:21" pos:end="155:23"><name pos:start="155:21" pos:end="155:23">int</name></type> <name pos:start="155:25" pos:end="155:25">n</name> <init pos:start="155:27" pos:end="155:56">= <expr pos:start="155:29" pos:end="155:56"><call pos:start="155:29" pos:end="155:56"><name pos:start="155:29" pos:end="155:49">bytestream2_get_be16u</name><argument_list pos:start="155:50" pos:end="155:56">(<argument pos:start="155:51" pos:end="155:55"><expr pos:start="155:51" pos:end="155:55"><operator pos:start="155:51" pos:end="155:51">&amp;</operator><name pos:start="155:52" pos:end="155:55"><name pos:start="155:52" pos:end="155:52">s</name><operator pos:start="155:53" pos:end="155:54">-&gt;</operator><name pos:start="155:55" pos:end="155:55">g</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <for pos:start="157:21" pos:end="170:17">for <control pos:start="157:25" pos:end="157:36">(<init pos:start="157:26" pos:end="157:26">;</init> <condition pos:start="157:28" pos:end="157:31"><expr pos:start="157:28" pos:end="157:30"><name pos:start="157:28" pos:end="157:28">n</name><operator pos:start="157:29" pos:end="157:29">&gt;</operator><literal type="number" pos:start="157:30" pos:end="157:30">0</literal></expr>;</condition> <incr pos:start="157:33" pos:end="157:35"><expr pos:start="157:33" pos:end="157:35"><name pos:start="157:33" pos:end="157:33">n</name><operator pos:start="157:34" pos:end="157:35">--</operator></expr></incr>)</control> <block pos:start="157:38" pos:end="170:17">{<block_content pos:start="159:25" pos:end="167:47">

                        <decl_stmt pos:start="159:25" pos:end="159:63"><decl pos:start="159:25" pos:end="159:62"><type pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:27">int</name></type> <name pos:start="159:29" pos:end="159:30">cn</name>   <init pos:start="159:34" pos:end="159:62">= <expr pos:start="159:36" pos:end="159:62"><call pos:start="159:36" pos:end="159:62"><name pos:start="159:36" pos:end="159:55">bytestream2_get_be16</name><argument_list pos:start="159:56" pos:end="159:62">(<argument pos:start="159:57" pos:end="159:61"><expr pos:start="159:57" pos:end="159:61"><operator pos:start="159:57" pos:end="159:57">&amp;</operator><name pos:start="159:58" pos:end="159:61"><name pos:start="159:58" pos:end="159:58">s</name><operator pos:start="159:59" pos:end="159:60">-&gt;</operator><name pos:start="159:61" pos:end="159:61">g</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="161:25" pos:end="161:73"><decl pos:start="161:25" pos:end="161:72"><type pos:start="161:25" pos:end="161:37"><name pos:start="161:25" pos:end="161:27">int</name> <name pos:start="161:29" pos:end="161:37">av_unused</name></type> <name pos:start="161:39" pos:end="161:41">typ</name>  <init pos:start="161:44" pos:end="161:72">= <expr pos:start="161:46" pos:end="161:72"><call pos:start="161:46" pos:end="161:72"><name pos:start="161:46" pos:end="161:65">bytestream2_get_be16</name><argument_list pos:start="161:66" pos:end="161:72">(<argument pos:start="161:67" pos:end="161:71"><expr pos:start="161:67" pos:end="161:71"><operator pos:start="161:67" pos:end="161:67">&amp;</operator><name pos:start="161:68" pos:end="161:71"><name pos:start="161:68" pos:end="161:68">s</name><operator pos:start="161:69" pos:end="161:70">-&gt;</operator><name pos:start="161:71" pos:end="161:71">g</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="163:25" pos:end="163:63"><decl pos:start="163:25" pos:end="163:62"><type pos:start="163:25" pos:end="163:27"><name pos:start="163:25" pos:end="163:27">int</name></type> <name pos:start="163:29" pos:end="163:32">asoc</name> <init pos:start="163:34" pos:end="163:62">= <expr pos:start="163:36" pos:end="163:62"><call pos:start="163:36" pos:end="163:62"><name pos:start="163:36" pos:end="163:55">bytestream2_get_be16</name><argument_list pos:start="163:56" pos:end="163:62">(<argument pos:start="163:57" pos:end="163:61"><expr pos:start="163:57" pos:end="163:61"><operator pos:start="163:57" pos:end="163:57">&amp;</operator><name pos:start="163:58" pos:end="163:61"><name pos:start="163:58" pos:end="163:58">s</name><operator pos:start="163:59" pos:end="163:60">-&gt;</operator><name pos:start="163:61" pos:end="163:61">g</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="165:25" pos:end="167:47"><if pos:start="165:25" pos:end="167:47">if <condition pos:start="165:28" pos:end="165:47">(<expr pos:start="165:29" pos:end="165:46"><name pos:start="165:29" pos:end="165:30">cn</name> <operator pos:start="165:32" pos:end="165:32">&lt;</operator> <literal type="number" pos:start="165:34" pos:end="165:34">4</literal> <operator pos:start="165:36" pos:end="165:37">&amp;&amp;</operator> <name pos:start="165:39" pos:end="165:42">asoc</name> <operator pos:start="165:44" pos:end="165:44">&lt;</operator> <literal type="number" pos:start="165:46" pos:end="165:46">4</literal></expr>)</condition><block type="pseudo" pos:start="167:29" pos:end="167:47"><block_content pos:start="167:29" pos:end="167:47">

                            <expr_stmt pos:start="167:29" pos:end="167:47"><expr pos:start="167:29" pos:end="167:46"><name pos:start="167:29" pos:end="167:39"><name pos:start="167:29" pos:end="167:29">s</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:35">cdef</name><index pos:start="167:36" pos:end="167:39">[<expr pos:start="167:37" pos:end="167:38"><name pos:start="167:37" pos:end="167:38">cn</name></expr>]</index></name> <operator pos:start="167:41" pos:end="167:41">=</operator> <name pos:start="167:43" pos:end="167:46">asoc</name></expr>;</expr_stmt></block_content></block></if></if_stmt>


                </block_content>}</block></for> <if_stmt pos:start="170:19" pos:end="241:13"><if type="elseif" pos:start="170:19" pos:end="241:13">else if <condition pos:start="170:27" pos:end="170:81">(<expr pos:start="170:28" pos:end="170:80"><name pos:start="170:28" pos:end="170:32">atom2</name> <operator pos:start="170:34" pos:end="170:35">==</operator> <call pos:start="170:37" pos:end="170:60"><name pos:start="170:37" pos:end="170:43">MKBETAG</name><argument_list pos:start="170:44" pos:end="170:60">(<argument pos:start="170:45" pos:end="170:47"><expr pos:start="170:45" pos:end="170:47"><literal type="char" pos:start="170:45" pos:end="170:47">'r'</literal></expr></argument>,<argument pos:start="170:49" pos:end="170:51"><expr pos:start="170:49" pos:end="170:51"><literal type="char" pos:start="170:49" pos:end="170:51">'e'</literal></expr></argument>,<argument pos:start="170:53" pos:end="170:55"><expr pos:start="170:53" pos:end="170:55"><literal type="char" pos:start="170:53" pos:end="170:55">'s'</literal></expr></argument>,<argument pos:start="170:57" pos:end="170:59"><expr pos:start="170:57" pos:end="170:59"><literal type="char" pos:start="170:57" pos:end="170:59">' '</literal></expr></argument>)</argument_list></call> <operator pos:start="170:62" pos:end="170:63">&amp;&amp;</operator> <name pos:start="170:65" pos:end="170:74">atom2_size</name> <operator pos:start="170:76" pos:end="170:77">&gt;=</operator> <literal type="number" pos:start="170:79" pos:end="170:80">18</literal></expr>)</condition> <block pos:start="170:83" pos:end="241:13">{<block_content pos:start="172:21" pos:end="241:13">

                    <decl_stmt pos:start="172:21" pos:end="172:63"><decl pos:start="172:21" pos:end="172:32"><type pos:start="172:21" pos:end="172:27"><name pos:start="172:21" pos:end="172:27">int64_t</name></type> <name pos:start="172:29" pos:end="172:32">vnum</name></decl>, <decl pos:start="172:35" pos:end="172:38"><type ref="prev" pos:start="172:21" pos:end="172:27"/><name pos:start="172:35" pos:end="172:38">vden</name></decl>, <decl pos:start="172:41" pos:end="172:44"><type ref="prev" pos:start="172:21" pos:end="172:27"/><name pos:start="172:41" pos:end="172:44">hnum</name></decl>, <decl pos:start="172:47" pos:end="172:50"><type ref="prev" pos:start="172:21" pos:end="172:27"/><name pos:start="172:47" pos:end="172:50">hden</name></decl>, <decl pos:start="172:53" pos:end="172:56"><type ref="prev" pos:start="172:21" pos:end="172:27"/><name pos:start="172:53" pos:end="172:56">vexp</name></decl>, <decl pos:start="172:59" pos:end="172:62"><type ref="prev" pos:start="172:21" pos:end="172:27"/><name pos:start="172:59" pos:end="172:62">hexp</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="174:21" pos:end="174:34"><decl pos:start="174:21" pos:end="174:33"><type pos:start="174:21" pos:end="174:28"><name pos:start="174:21" pos:end="174:28">uint32_t</name></type> <name pos:start="174:30" pos:end="174:33">resx</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="176:21" pos:end="176:47"><expr pos:start="176:21" pos:end="176:46"><call pos:start="176:21" pos:end="176:46"><name pos:start="176:21" pos:end="176:36">bytestream2_skip</name><argument_list pos:start="176:37" pos:end="176:46">(<argument pos:start="176:38" pos:end="176:42"><expr pos:start="176:38" pos:end="176:42"><operator pos:start="176:38" pos:end="176:38">&amp;</operator><name pos:start="176:39" pos:end="176:42"><name pos:start="176:39" pos:end="176:39">s</name><operator pos:start="176:40" pos:end="176:41">-&gt;</operator><name pos:start="176:42" pos:end="176:42">g</name></name></expr></argument>, <argument pos:start="176:45" pos:end="176:45"><expr pos:start="176:45" pos:end="176:45"><literal type="number" pos:start="176:45" pos:end="176:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="178:21" pos:end="178:56"><expr pos:start="178:21" pos:end="178:55"><name pos:start="178:21" pos:end="178:24">resx</name> <operator pos:start="178:26" pos:end="178:26">=</operator> <call pos:start="178:28" pos:end="178:55"><name pos:start="178:28" pos:end="178:48">bytestream2_get_be32u</name><argument_list pos:start="178:49" pos:end="178:55">(<argument pos:start="178:50" pos:end="178:54"><expr pos:start="178:50" pos:end="178:54"><operator pos:start="178:50" pos:end="178:50">&amp;</operator><name pos:start="178:51" pos:end="178:54"><name pos:start="178:51" pos:end="178:51">s</name><operator pos:start="178:52" pos:end="178:53">-&gt;</operator><name pos:start="178:54" pos:end="178:54">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="180:21" pos:end="241:13"><if pos:start="180:21" pos:end="231:9">if <condition pos:start="180:24" pos:end="180:93">(<expr pos:start="180:25" pos:end="180:92"><name pos:start="180:25" pos:end="180:28">resx</name> <operator pos:start="180:30" pos:end="180:31">!=</operator> <call pos:start="180:33" pos:end="180:56"><name pos:start="180:33" pos:end="180:39">MKBETAG</name><argument_list pos:start="180:40" pos:end="180:56">(<argument pos:start="180:41" pos:end="180:43"><expr pos:start="180:41" pos:end="180:43"><literal type="char" pos:start="180:41" pos:end="180:43">'r'</literal></expr></argument>,<argument pos:start="180:45" pos:end="180:47"><expr pos:start="180:45" pos:end="180:47"><literal type="char" pos:start="180:45" pos:end="180:47">'e'</literal></expr></argument>,<argument pos:start="180:49" pos:end="180:51"><expr pos:start="180:49" pos:end="180:51"><literal type="char" pos:start="180:49" pos:end="180:51">'s'</literal></expr></argument>,<argument pos:start="180:53" pos:end="180:55"><expr pos:start="180:53" pos:end="180:55"><literal type="char" pos:start="180:53" pos:end="180:55">'c'</literal></expr></argument>)</argument_list></call> <operator pos:start="180:58" pos:end="180:59">&amp;&amp;</operator> <name pos:start="180:61" pos:end="180:64">resx</name> <operator pos:start="180:66" pos:end="180:67">!=</operator> <call pos:start="180:69" pos:end="180:92"><name pos:start="180:69" pos:end="180:75">MKBETAG</name><argument_list pos:start="180:76" pos:end="180:92">(<argument pos:start="180:77" pos:end="180:79"><expr pos:start="180:77" pos:end="180:79"><literal type="char" pos:start="180:77" pos:end="180:79">'r'</literal></expr></argument>,<argument pos:start="180:81" pos:end="180:83"><expr pos:start="180:81" pos:end="180:83"><literal type="char" pos:start="180:81" pos:end="180:83">'e'</literal></expr></argument>,<argument pos:start="180:85" pos:end="180:87"><expr pos:start="180:85" pos:end="180:87"><literal type="char" pos:start="180:85" pos:end="180:87">'s'</literal></expr></argument>,<argument pos:start="180:89" pos:end="180:91"><expr pos:start="180:89" pos:end="180:91"><literal type="char" pos:start="180:89" pos:end="180:91">'d'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="180:95" pos:end="231:9">{<block_content pos:start="185:21" pos:end="229:48">




                    <expr_stmt pos:start="185:21" pos:end="185:56"><expr pos:start="185:21" pos:end="185:55"><name pos:start="185:21" pos:end="185:24">vnum</name> <operator pos:start="185:26" pos:end="185:26">=</operator> <call pos:start="185:28" pos:end="185:55"><name pos:start="185:28" pos:end="185:48">bytestream2_get_be16u</name><argument_list pos:start="185:49" pos:end="185:55">(<argument pos:start="185:50" pos:end="185:54"><expr pos:start="185:50" pos:end="185:54"><operator pos:start="185:50" pos:end="185:50">&amp;</operator><name pos:start="185:51" pos:end="185:54"><name pos:start="185:51" pos:end="185:51">s</name><operator pos:start="185:52" pos:end="185:53">-&gt;</operator><name pos:start="185:54" pos:end="185:54">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:56"><expr pos:start="187:21" pos:end="187:55"><name pos:start="187:21" pos:end="187:24">vden</name> <operator pos:start="187:26" pos:end="187:26">=</operator> <call pos:start="187:28" pos:end="187:55"><name pos:start="187:28" pos:end="187:48">bytestream2_get_be16u</name><argument_list pos:start="187:49" pos:end="187:55">(<argument pos:start="187:50" pos:end="187:54"><expr pos:start="187:50" pos:end="187:54"><operator pos:start="187:50" pos:end="187:50">&amp;</operator><name pos:start="187:51" pos:end="187:54"><name pos:start="187:51" pos:end="187:51">s</name><operator pos:start="187:52" pos:end="187:53">-&gt;</operator><name pos:start="187:54" pos:end="187:54">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:56"><expr pos:start="189:21" pos:end="189:55"><name pos:start="189:21" pos:end="189:24">hnum</name> <operator pos:start="189:26" pos:end="189:26">=</operator> <call pos:start="189:28" pos:end="189:55"><name pos:start="189:28" pos:end="189:48">bytestream2_get_be16u</name><argument_list pos:start="189:49" pos:end="189:55">(<argument pos:start="189:50" pos:end="189:54"><expr pos:start="189:50" pos:end="189:54"><operator pos:start="189:50" pos:end="189:50">&amp;</operator><name pos:start="189:51" pos:end="189:54"><name pos:start="189:51" pos:end="189:51">s</name><operator pos:start="189:52" pos:end="189:53">-&gt;</operator><name pos:start="189:54" pos:end="189:54">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:56"><expr pos:start="191:21" pos:end="191:55"><name pos:start="191:21" pos:end="191:24">hden</name> <operator pos:start="191:26" pos:end="191:26">=</operator> <call pos:start="191:28" pos:end="191:55"><name pos:start="191:28" pos:end="191:48">bytestream2_get_be16u</name><argument_list pos:start="191:49" pos:end="191:55">(<argument pos:start="191:50" pos:end="191:54"><expr pos:start="191:50" pos:end="191:54"><operator pos:start="191:50" pos:end="191:50">&amp;</operator><name pos:start="191:51" pos:end="191:54"><name pos:start="191:51" pos:end="191:51">s</name><operator pos:start="191:52" pos:end="191:53">-&gt;</operator><name pos:start="191:54" pos:end="191:54">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:56"><expr pos:start="193:21" pos:end="193:55"><name pos:start="193:21" pos:end="193:24">vexp</name> <operator pos:start="193:26" pos:end="193:26">=</operator> <call pos:start="193:28" pos:end="193:55"><name pos:start="193:28" pos:end="193:48">bytestream2_get_byteu</name><argument_list pos:start="193:49" pos:end="193:55">(<argument pos:start="193:50" pos:end="193:54"><expr pos:start="193:50" pos:end="193:54"><operator pos:start="193:50" pos:end="193:50">&amp;</operator><name pos:start="193:51" pos:end="193:54"><name pos:start="193:51" pos:end="193:51">s</name><operator pos:start="193:52" pos:end="193:53">-&gt;</operator><name pos:start="193:54" pos:end="193:54">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:56"><expr pos:start="195:21" pos:end="195:55"><name pos:start="195:21" pos:end="195:24">hexp</name> <operator pos:start="195:26" pos:end="195:26">=</operator> <call pos:start="195:28" pos:end="195:55"><name pos:start="195:28" pos:end="195:48">bytestream2_get_byteu</name><argument_list pos:start="195:49" pos:end="195:55">(<argument pos:start="195:50" pos:end="195:54"><expr pos:start="195:50" pos:end="195:54"><operator pos:start="195:50" pos:end="195:50">&amp;</operator><name pos:start="195:51" pos:end="195:54"><name pos:start="195:51" pos:end="195:51">s</name><operator pos:start="195:52" pos:end="195:53">-&gt;</operator><name pos:start="195:54" pos:end="195:54">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






                    <if_stmt pos:start="202:21" pos:end="229:13"><if pos:start="202:21" pos:end="208:21">if <condition pos:start="202:24" pos:end="202:36">(<expr pos:start="202:25" pos:end="202:35"><name pos:start="202:25" pos:end="202:28">vexp</name> <operator pos:start="202:30" pos:end="202:30">&gt;</operator> <name pos:start="202:32" pos:end="202:35">hexp</name></expr>)</condition> <block pos:start="202:38" pos:end="208:21">{<block_content pos:start="204:25" pos:end="206:33">

                        <expr_stmt pos:start="204:25" pos:end="204:37"><expr pos:start="204:25" pos:end="204:36"><name pos:start="204:25" pos:end="204:28">vexp</name> <operator pos:start="204:30" pos:end="204:31">-=</operator> <name pos:start="204:33" pos:end="204:36">hexp</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="206:25" pos:end="206:33"><expr pos:start="206:25" pos:end="206:32"><name pos:start="206:25" pos:end="206:28">hexp</name> <operator pos:start="206:30" pos:end="206:30">=</operator> <literal type="number" pos:start="206:32" pos:end="206:32">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="208:23" pos:end="229:13">else <block pos:start="208:28" pos:end="229:13">{<block_content pos:start="210:25" pos:end="225:45">

                        <expr_stmt pos:start="210:25" pos:end="210:37"><expr pos:start="210:25" pos:end="210:36"><name pos:start="210:25" pos:end="210:28">hexp</name> <operator pos:start="210:30" pos:end="210:31">-=</operator> <name pos:start="210:33" pos:end="210:36">vexp</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="212:25" pos:end="212:33"><expr pos:start="212:25" pos:end="212:32"><name pos:start="212:25" pos:end="212:28">vexp</name> <operator pos:start="212:30" pos:end="212:30">=</operator> <literal type="number" pos:start="212:32" pos:end="212:32">0</literal></expr>;</expr_stmt>


                    <if_stmt pos:start="215:21" pos:end="225:45"><if pos:start="215:21" pos:end="225:45">if <condition pos:start="215:24" pos:end="217:69">(   <expr pos:start="215:28" pos:end="217:68"><name pos:start="215:28" pos:end="215:36">INT64_MAX</name> <operator pos:start="215:38" pos:end="215:38">/</operator> <operator pos:start="215:40" pos:end="215:40">(</operator><name pos:start="215:41" pos:end="215:44">hnum</name> <operator pos:start="215:46" pos:end="215:46">*</operator> <name pos:start="215:48" pos:end="215:51">vden</name><operator pos:start="215:52" pos:end="215:52">)</operator> <operator pos:start="215:54" pos:end="215:54">&gt;</operator> <call pos:start="215:56" pos:end="215:68"><name pos:start="215:56" pos:end="215:58">pow</name><argument_list pos:start="215:59" pos:end="215:68">(<argument pos:start="215:60" pos:end="215:61"><expr pos:start="215:60" pos:end="215:61"><literal type="number" pos:start="215:60" pos:end="215:61">10</literal></expr></argument>, <argument pos:start="215:64" pos:end="215:67"><expr pos:start="215:64" pos:end="215:67"><name pos:start="215:64" pos:end="215:67">hexp</name></expr></argument>)</argument_list></call>

                        <operator pos:start="217:25" pos:end="217:26">&amp;&amp;</operator> <name pos:start="217:28" pos:end="217:36">INT64_MAX</name> <operator pos:start="217:38" pos:end="217:38">/</operator> <operator pos:start="217:40" pos:end="217:40">(</operator><name pos:start="217:41" pos:end="217:44">vnum</name> <operator pos:start="217:46" pos:end="217:46">*</operator> <name pos:start="217:48" pos:end="217:51">hden</name><operator pos:start="217:52" pos:end="217:52">)</operator> <operator pos:start="217:54" pos:end="217:54">&gt;</operator> <call pos:start="217:56" pos:end="217:68"><name pos:start="217:56" pos:end="217:58">pow</name><argument_list pos:start="217:59" pos:end="217:68">(<argument pos:start="217:60" pos:end="217:61"><expr pos:start="217:60" pos:end="217:61"><literal type="number" pos:start="217:60" pos:end="217:61">10</literal></expr></argument>, <argument pos:start="217:64" pos:end="217:67"><expr pos:start="217:64" pos:end="217:67"><name pos:start="217:64" pos:end="217:67">vexp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="219:25" pos:end="225:45"><block_content pos:start="219:25" pos:end="225:45">

                        <expr_stmt pos:start="219:25" pos:end="225:45"><expr pos:start="219:25" pos:end="225:44"><call pos:start="219:25" pos:end="225:44"><name pos:start="219:25" pos:end="219:33">av_reduce</name><argument_list pos:start="219:34" pos:end="225:44">(<argument pos:start="219:35" pos:end="219:45"><expr pos:start="219:35" pos:end="219:45"><operator pos:start="219:35" pos:end="219:35">&amp;</operator><name pos:start="219:36" pos:end="219:45"><name pos:start="219:36" pos:end="219:36">s</name><operator pos:start="219:37" pos:end="219:38">-&gt;</operator><name pos:start="219:39" pos:end="219:41">sar</name><operator pos:start="219:42" pos:end="219:42">.</operator><name pos:start="219:43" pos:end="219:45">den</name></name></expr></argument>, <argument pos:start="219:48" pos:end="219:58"><expr pos:start="219:48" pos:end="219:58"><operator pos:start="219:48" pos:end="219:48">&amp;</operator><name pos:start="219:49" pos:end="219:58"><name pos:start="219:49" pos:end="219:49">s</name><operator pos:start="219:50" pos:end="219:51">-&gt;</operator><name pos:start="219:52" pos:end="219:54">sar</name><operator pos:start="219:55" pos:end="219:55">.</operator><name pos:start="219:56" pos:end="219:58">num</name></name></expr></argument>,

                                  <argument pos:start="221:35" pos:end="221:61"><expr pos:start="221:35" pos:end="221:61"><name pos:start="221:35" pos:end="221:38">hnum</name> <operator pos:start="221:40" pos:end="221:40">*</operator> <name pos:start="221:42" pos:end="221:45">vden</name> <operator pos:start="221:47" pos:end="221:47">*</operator> <call pos:start="221:49" pos:end="221:61"><name pos:start="221:49" pos:end="221:51">pow</name><argument_list pos:start="221:52" pos:end="221:61">(<argument pos:start="221:53" pos:end="221:54"><expr pos:start="221:53" pos:end="221:54"><literal type="number" pos:start="221:53" pos:end="221:54">10</literal></expr></argument>, <argument pos:start="221:57" pos:end="221:60"><expr pos:start="221:57" pos:end="221:60"><name pos:start="221:57" pos:end="221:60">hexp</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="223:35" pos:end="223:61"><expr pos:start="223:35" pos:end="223:61"><name pos:start="223:35" pos:end="223:38">vnum</name> <operator pos:start="223:40" pos:end="223:40">*</operator> <name pos:start="223:42" pos:end="223:45">hden</name> <operator pos:start="223:47" pos:end="223:47">*</operator> <call pos:start="223:49" pos:end="223:61"><name pos:start="223:49" pos:end="223:51">pow</name><argument_list pos:start="223:52" pos:end="223:61">(<argument pos:start="223:53" pos:end="223:54"><expr pos:start="223:53" pos:end="223:54"><literal type="number" pos:start="223:53" pos:end="223:54">10</literal></expr></argument>, <argument pos:start="223:57" pos:end="223:60"><expr pos:start="223:57" pos:end="223:60"><name pos:start="223:57" pos:end="223:60">vexp</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="225:35" pos:end="225:43"><expr pos:start="225:35" pos:end="225:43"><name pos:start="225:35" pos:end="225:43">INT32_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            </block_content>}</block></else></if_stmt> <while pos:start="229:15" pos:end="229:48">while <condition pos:start="229:21" pos:end="229:47">(<expr pos:start="229:22" pos:end="229:46"><name pos:start="229:22" pos:end="229:29">atom_end</name> <operator pos:start="229:31" pos:end="229:31">-</operator> <name pos:start="229:33" pos:end="229:41">atom2_end</name> <operator pos:start="229:43" pos:end="229:44">&gt;=</operator> <literal type="number" pos:start="229:46" pos:end="229:46">8</literal></expr>)</condition><block type="pseudo" pos:start="229:48" pos:end="229:48"><block_content pos:start="229:48" pos:end="229:48"><empty_stmt pos:start="229:48" pos:end="229:48">;</empty_stmt></block_content></block></while>

        </block_content>}</block></if> <else pos:start="231:11" pos:end="241:13">else <block pos:start="231:16" pos:end="241:13">{<block_content pos:start="233:13" pos:end="241:13">

            <expr_stmt pos:start="233:13" pos:end="233:27"><expr pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:24">search_range</name><operator pos:start="233:25" pos:end="233:26">--</operator></expr>;</expr_stmt>


        <expr_stmt pos:start="236:9" pos:end="236:52"><expr pos:start="236:9" pos:end="236:51"><call pos:start="236:9" pos:end="236:51"><name pos:start="236:9" pos:end="236:24">bytestream2_seek</name><argument_list pos:start="236:25" pos:end="236:51">(<argument pos:start="236:26" pos:end="236:30"><expr pos:start="236:26" pos:end="236:30"><operator pos:start="236:26" pos:end="236:26">&amp;</operator><name pos:start="236:27" pos:end="236:30"><name pos:start="236:27" pos:end="236:27">s</name><operator pos:start="236:28" pos:end="236:29">-&gt;</operator><name pos:start="236:30" pos:end="236:30">g</name></name></expr></argument>, <argument pos:start="236:33" pos:end="236:40"><expr pos:start="236:33" pos:end="236:40"><name pos:start="236:33" pos:end="236:40">atom_end</name></expr></argument>, <argument pos:start="236:43" pos:end="236:50"><expr pos:start="236:43" pos:end="236:50"><name pos:start="236:43" pos:end="236:50">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="241:5" pos:end="241:13">return <expr pos:start="241:12" pos:end="241:12"><literal type="number" pos:start="241:12" pos:end="241:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></do></block_content></block></if></if_stmt></block_content></block></while></block_content></block></function>
</unit>
