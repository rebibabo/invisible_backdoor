<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6138.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">qed_is_allocated_cb</name><parameter_list pos:start="1:32" pos:end="1:83">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:53"><decl pos:start="1:47" pos:end="1:53"><type pos:start="1:47" pos:end="1:53"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:53">ret</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><name pos:start="1:56" pos:end="1:63">uint64_t</name></type> <name pos:start="1:65" pos:end="1:70">offset</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:82"><decl pos:start="1:73" pos:end="1:82"><type pos:start="1:73" pos:end="1:82"><name pos:start="1:73" pos:end="1:78">size_t</name></type> <name pos:start="1:80" pos:end="1:82">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">QEDIsAllocatedCB</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">cb</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVQEDState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:36">= <expr pos:start="7:23" pos:end="7:36"><name pos:start="7:23" pos:end="7:36"><name pos:start="7:23" pos:end="7:24">cb</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:28">bs</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:36">opaque</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:39"><expr pos:start="9:5" pos:end="9:38"><operator pos:start="9:5" pos:end="9:5">*</operator><name pos:start="9:6" pos:end="9:13"><name pos:start="9:6" pos:end="9:7">cb</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:13">pnum</name></name> <operator pos:start="9:15" pos:end="9:15">=</operator> <name pos:start="9:17" pos:end="9:19">len</name> <operator pos:start="9:21" pos:end="9:21">/</operator> <name pos:start="9:23" pos:end="9:38">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <switch pos:start="11:5" pos:end="45:5">switch <condition pos:start="11:12" pos:end="11:16">(<expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">ret</name></expr>)</condition> <block pos:start="11:18" pos:end="45:5">{<block_content pos:start="13:5" pos:end="43:14">

    <case pos:start="13:5" pos:end="13:27">case <expr pos:start="13:10" pos:end="13:26"><name pos:start="13:10" pos:end="13:26">QED_CLUSTER_FOUND</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:54"><expr pos:start="15:9" pos:end="15:53"><name pos:start="15:9" pos:end="15:14">offset</name> <operator pos:start="15:16" pos:end="15:17">|=</operator> <call pos:start="15:19" pos:end="15:53"><name pos:start="15:19" pos:end="15:41">qed_offset_into_cluster</name><argument_list pos:start="15:42" pos:end="15:53">(<argument pos:start="15:43" pos:end="15:43"><expr pos:start="15:43" pos:end="15:43"><name pos:start="15:43" pos:end="15:43">s</name></expr></argument>, <argument pos:start="15:46" pos:end="15:52"><expr pos:start="15:46" pos:end="15:52"><name pos:start="15:46" pos:end="15:52"><name pos:start="15:46" pos:end="15:47">cb</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:52">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:72"><expr pos:start="17:9" pos:end="17:71"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:10">cb</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:18">status</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:36">BDRV_BLOCK_DATA</name> <operator pos:start="17:38" pos:end="17:38">|</operator> <name pos:start="17:40" pos:end="17:62">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="17:64" pos:end="17:64">|</operator> <name pos:start="17:66" pos:end="17:71">offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:37"><expr pos:start="19:9" pos:end="19:36"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:11">cb</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:17">file</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:36"><name pos:start="19:21" pos:end="19:22">cb</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:26">bs</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">file</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:36">bs</name></name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:26">case <expr pos:start="23:10" pos:end="23:25"><name pos:start="23:10" pos:end="23:25">QED_CLUSTER_ZERO</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:10">cb</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:18">status</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:36">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:24">case <expr pos:start="29:10" pos:end="29:23"><name pos:start="29:10" pos:end="29:23">QED_CLUSTER_L2</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:24">case <expr pos:start="31:10" pos:end="31:23"><name pos:start="31:10" pos:end="31:23">QED_CLUSTER_L1</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:10">cb</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:18">status</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <default pos:start="37:5" pos:end="37:12">default:</default>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><call pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:14">assert</name><argument_list pos:start="39:15" pos:end="39:23">(<argument pos:start="39:16" pos:end="39:22"><expr pos:start="39:16" pos:end="39:22"><name pos:start="39:16" pos:end="39:18">ret</name> <operator pos:start="39:20" pos:end="39:20">&lt;</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:10">cb</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:18">status</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:24">ret</name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:10">cb</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:14">co</name></name></expr>)</condition> <block pos:start="49:17" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:43">

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><call pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:28">qemu_coroutine_enter</name><argument_list pos:start="51:29" pos:end="51:42">(<argument pos:start="51:30" pos:end="51:35"><expr pos:start="51:30" pos:end="51:35"><name pos:start="51:30" pos:end="51:35"><name pos:start="51:30" pos:end="51:31">cb</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:35">co</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:41"><expr pos:start="51:38" pos:end="51:41"><name pos:start="51:38" pos:end="51:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
