<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24672.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">mpeg_mux_write_packet</name><parameter_list pos:start="1:33" pos:end="1:69">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">ctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:63">AVPacket</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="235:1">{<block_content pos:start="5:5" pos:end="233:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegMuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:27">ctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">stream_index</name><init pos:start="7:21" pos:end="7:39">= <expr pos:start="7:23" pos:end="7:39"><name pos:start="7:23" pos:end="7:39"><name pos:start="7:23" pos:end="7:25">pkt</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:39">stream_index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name><init pos:start="9:13" pos:end="9:23">= <expr pos:start="9:15" pos:end="9:23"><name pos:start="9:15" pos:end="9:23"><name pos:start="9:15" pos:end="9:17">pkt</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:23">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name><init pos:start="11:17" pos:end="11:27">= <expr pos:start="11:19" pos:end="11:27"><name pos:start="11:19" pos:end="11:27"><name pos:start="11:19" pos:end="11:21">pkt</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:27">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name> <init pos:start="13:18" pos:end="13:45">= <expr pos:start="13:20" pos:end="13:45"><name pos:start="13:20" pos:end="13:45"><name pos:start="13:20" pos:end="13:22">ctx</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:31">streams</name><index pos:start="13:32" pos:end="13:45">[<expr pos:start="13:33" pos:end="13:44"><name pos:start="13:33" pos:end="13:44">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">StreamInfo</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:22">stream</name> <init pos:start="15:24" pos:end="15:38">= <expr pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:27">st</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:51"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">pts</name></decl>, <decl pos:start="17:18" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:18" pos:end="17:20">dts</name></decl>, <decl pos:start="17:23" pos:end="17:35"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:23" pos:end="17:35">new_start_pts</name></decl>, <decl pos:start="17:38" pos:end="17:50"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:38" pos:end="17:50">new_start_dts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">len</name></decl>, <decl pos:start="19:14" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:23">avail_size</name></decl>;</decl_stmt>

    

    <comment type="line" pos:start="23:5" pos:end="23:45">//XXX/FIXME this is and always was broken</comment>

<comment type="line" pos:start="25:1" pos:end="25:48">//    compute_pts_dts(st, &amp;pts, &amp;dts, pkt-&gt;pts);</comment>



    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">pts</name><operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:17"><name pos:start="29:10" pos:end="29:12">pkt</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:17">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:7">dts</name><operator pos:start="31:8" pos:end="31:8">=</operator> <name pos:start="31:10" pos:end="31:17"><name pos:start="31:10" pos:end="31:12">pkt</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:17">dts</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="59:5"><if pos:start="35:5" pos:end="59:5">if<condition pos:start="35:7" pos:end="35:18">(<expr pos:start="35:8" pos:end="35:17"><name pos:start="35:8" pos:end="35:17"><name pos:start="35:8" pos:end="35:8">s</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:17">is_svcd</name></name></expr>)</condition> <block pos:start="35:20" pos:end="59:5">{<block_content pos:start="41:9" pos:end="57:48">

        <comment type="block" pos:start="37:9" pos:end="39:47">/* offset pts and dts slightly into the future to be able

           to do the compatibility fix below.*/</comment>

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:11">pts</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">(</operator><name pos:start="41:16" pos:end="41:18">pts</name> <operator pos:start="41:20" pos:end="41:20">+</operator> <literal type="number" pos:start="41:22" pos:end="41:22">2</literal><operator pos:start="41:23" pos:end="41:23">)</operator> <operator pos:start="41:25" pos:end="41:25">&amp;</operator> <operator pos:start="41:27" pos:end="41:27">(</operator><operator pos:start="41:28" pos:end="41:28">(</operator><literal type="number" pos:start="41:29" pos:end="41:31">1LL</literal> <operator pos:start="41:33" pos:end="41:34">&lt;&lt;</operator> <literal type="number" pos:start="41:36" pos:end="41:37">33</literal><operator pos:start="41:38" pos:end="41:38">)</operator> <operator pos:start="41:40" pos:end="41:40">-</operator> <literal type="number" pos:start="41:42" pos:end="41:42">1</literal><operator pos:start="41:43" pos:end="41:43">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:44"><expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:11">dts</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">(</operator><name pos:start="43:16" pos:end="43:18">dts</name> <operator pos:start="43:20" pos:end="43:20">+</operator> <literal type="number" pos:start="43:22" pos:end="43:22">2</literal><operator pos:start="43:23" pos:end="43:23">)</operator> <operator pos:start="43:25" pos:end="43:25">&amp;</operator> <operator pos:start="43:27" pos:end="43:27">(</operator><operator pos:start="43:28" pos:end="43:28">(</operator><literal type="number" pos:start="43:29" pos:end="43:31">1LL</literal> <operator pos:start="43:33" pos:end="43:34">&lt;&lt;</operator> <literal type="number" pos:start="43:36" pos:end="43:37">33</literal><operator pos:start="43:38" pos:end="43:38">)</operator> <operator pos:start="43:40" pos:end="43:40">-</operator> <literal type="number" pos:start="43:42" pos:end="43:42">1</literal><operator pos:start="43:43" pos:end="43:43">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="57:48"><if pos:start="47:9" pos:end="57:48">if <condition pos:start="47:12" pos:end="47:53">(<expr pos:start="47:13" pos:end="47:52"><name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:18">stream</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:33">packet_number</name></name> <operator pos:start="47:35" pos:end="47:36">==</operator> <literal type="number" pos:start="47:38" pos:end="47:38">0</literal> <operator pos:start="47:40" pos:end="47:41">&amp;&amp;</operator> <name pos:start="47:43" pos:end="47:45">dts</name> <operator pos:start="47:47" pos:end="47:48">==</operator> <name pos:start="47:50" pos:end="47:52">pts</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:48"><block_content pos:start="57:13" pos:end="57:48">

            <comment type="block" pos:start="49:13" pos:end="55:84">/* For the very first packet we want to force the DTS to be included.

               This increases compatibility with lots of DVD players.

               Since the MPEG-2 standard mandates that DTS is only written when

               it is different from PTS we have to move it slightly into the past.*/</comment>

            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:15">dts</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <operator pos:start="57:19" pos:end="57:19">(</operator><name pos:start="57:20" pos:end="57:22">dts</name> <operator pos:start="57:24" pos:end="57:24">-</operator> <literal type="number" pos:start="57:26" pos:end="57:26">2</literal><operator pos:start="57:27" pos:end="57:27">)</operator> <operator pos:start="57:29" pos:end="57:29">&amp;</operator> <operator pos:start="57:31" pos:end="57:31">(</operator><operator pos:start="57:32" pos:end="57:32">(</operator><literal type="number" pos:start="57:33" pos:end="57:35">1LL</literal> <operator pos:start="57:37" pos:end="57:38">&lt;&lt;</operator> <literal type="number" pos:start="57:40" pos:end="57:41">33</literal><operator pos:start="57:42" pos:end="57:42">)</operator> <operator pos:start="57:44" pos:end="57:44">-</operator> <literal type="number" pos:start="57:46" pos:end="57:46">1</literal><operator pos:start="57:47" pos:end="57:47">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="98:0"><if pos:start="61:5" pos:end="98:0">if<condition pos:start="61:7" pos:end="61:17">(<expr pos:start="61:8" pos:end="61:16"><name pos:start="61:8" pos:end="61:16"><name pos:start="61:8" pos:end="61:8">s</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:16">is_vcd</name></name></expr>)</condition> <block pos:start="61:19" pos:end="98:0">{<block_content pos:start="73:9" pos:end="75:55">

        <comment type="block" pos:start="63:9" pos:end="71:58">/* We have to offset the PTS, so that it is consistent with the SCR.

           SCR starts at 36000, but the first two packs contain only padding

           and the first pack from the other stream, respectively, may also have

           been written before.

           So the real data starts at SCR 36000+3*1200. */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:55"><expr pos:start="73:9" pos:end="73:54"><name pos:start="73:9" pos:end="73:11">pts</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">(</operator><name pos:start="73:16" pos:end="73:18">pts</name> <operator pos:start="73:20" pos:end="73:20">+</operator> <literal type="number" pos:start="73:22" pos:end="73:28">36000</literal> <operator pos:start="73:28" pos:end="73:28">+</operator> <literal type="number" pos:start="73:30" pos:end="73:33">3600</literal><operator pos:start="73:34" pos:end="73:34">)</operator> <operator pos:start="73:36" pos:end="73:36">&amp;</operator> <operator pos:start="73:38" pos:end="73:38">(</operator><operator pos:start="73:39" pos:end="73:39">(</operator><literal type="number" pos:start="73:40" pos:end="73:42">1LL</literal> <operator pos:start="73:44" pos:end="73:45">&lt;&lt;</operator> <literal type="number" pos:start="73:47" pos:end="73:48">33</literal><operator pos:start="73:49" pos:end="73:49">)</operator> <operator pos:start="73:51" pos:end="73:51">-</operator> <literal type="number" pos:start="73:53" pos:end="73:53">1</literal><operator pos:start="73:54" pos:end="73:54">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:55"><expr pos:start="75:9" pos:end="75:54"><name pos:start="75:9" pos:end="75:11">dts</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">(</operator><name pos:start="75:16" pos:end="75:18">dts</name> <operator pos:start="75:20" pos:end="75:20">+</operator> <literal type="number" pos:start="75:22" pos:end="75:28">36000</literal> <operator pos:start="75:28" pos:end="75:28">+</operator> <literal type="number" pos:start="75:30" pos:end="75:33">3600</literal><operator pos:start="75:34" pos:end="75:34">)</operator> <operator pos:start="75:36" pos:end="75:36">&amp;</operator> <operator pos:start="75:38" pos:end="75:38">(</operator><operator pos:start="75:39" pos:end="75:39">(</operator><literal type="number" pos:start="75:40" pos:end="75:42">1LL</literal> <operator pos:start="75:44" pos:end="75:45">&lt;&lt;</operator> <literal type="number" pos:start="75:47" pos:end="75:48">33</literal><operator pos:start="75:49" pos:end="75:49">)</operator> <operator pos:start="75:51" pos:end="75:51">-</operator> <literal type="number" pos:start="75:53" pos:end="75:53">1</literal><operator pos:start="75:54" pos:end="75:54">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

<cpp:if pos:start="81:1" pos:end="81:5">#<cpp:directive pos:start="81:2" pos:end="81:3">if</cpp:directive> <expr pos:start="81:5" pos:end="81:5"><literal type="number" pos:start="81:5" pos:end="81:5">0</literal></expr></cpp:if>

    update_scr(ctx,stream_index,pts);



    printf("%d: pts=%0.3f dts=%0.3f scr=%0.3f\n", 

           stream_index, 

           pts / 90000.0, 

           dts / 90000.0, 

           s-&gt;last_scr / 90000.0);

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>

    

    <comment type="block" pos:start="101:5" pos:end="101:51">/* we assume here that pts != AV_NOPTS_VALUE */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:38"><expr pos:start="103:5" pos:end="103:37"><name pos:start="103:5" pos:end="103:17">new_start_pts</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:37"><name pos:start="103:21" pos:end="103:26">stream</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:37">start_pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:38"><expr pos:start="105:5" pos:end="105:37"><name pos:start="105:5" pos:end="105:17">new_start_dts</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:37"><name pos:start="105:21" pos:end="105:26">stream</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:37">start_dts</name></name></expr>;</expr_stmt>

    

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:44">(<expr pos:start="109:9" pos:end="109:43"><name pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:14">stream</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:25">start_pts</name></name> <operator pos:start="109:27" pos:end="109:28">==</operator> <name pos:start="109:30" pos:end="109:43">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="109:46" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:28">

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:21">new_start_pts</name> <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:27">pts</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:21">new_start_dts</name> <operator pos:start="113:23" pos:end="113:23">=</operator> <name pos:start="113:25" pos:end="113:27">dts</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="121:56"><expr pos:start="117:5" pos:end="121:55"><name pos:start="117:5" pos:end="117:14">avail_size</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <call pos:start="117:18" pos:end="121:55"><name pos:start="117:18" pos:end="117:40">get_packet_payload_size</name><argument_list pos:start="117:41" pos:end="121:55">(<argument pos:start="117:42" pos:end="117:44"><expr pos:start="117:42" pos:end="117:44"><name pos:start="117:42" pos:end="117:44">ctx</name></expr></argument>, <argument pos:start="117:47" pos:end="117:58"><expr pos:start="117:47" pos:end="117:58"><name pos:start="117:47" pos:end="117:58">stream_index</name></expr></argument>,

                                         <argument pos:start="119:42" pos:end="119:54"><expr pos:start="119:42" pos:end="119:54"><name pos:start="119:42" pos:end="119:54">new_start_pts</name></expr></argument>, 

                                         <argument pos:start="121:42" pos:end="121:54"><expr pos:start="121:42" pos:end="121:54"><name pos:start="121:42" pos:end="121:54">new_start_dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="149:5"><if pos:start="123:5" pos:end="149:5">if <condition pos:start="123:8" pos:end="123:41">(<expr pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:14">stream</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:26">buffer_ptr</name></name> <operator pos:start="123:28" pos:end="123:29">&gt;=</operator> <name pos:start="123:31" pos:end="123:40">avail_size</name></expr>)</condition> <block pos:start="123:43" pos:end="149:5">{<block_content pos:start="127:9" pos:end="147:31">



        <expr_stmt pos:start="127:9" pos:end="127:55"><expr pos:start="127:9" pos:end="127:54"><call pos:start="127:9" pos:end="127:54"><name pos:start="127:9" pos:end="127:18">update_scr</name><argument_list pos:start="127:19" pos:end="127:54">(<argument pos:start="127:20" pos:end="127:22"><expr pos:start="127:20" pos:end="127:22"><name pos:start="127:20" pos:end="127:22">ctx</name></expr></argument>,<argument pos:start="127:24" pos:end="127:35"><expr pos:start="127:24" pos:end="127:35"><name pos:start="127:24" pos:end="127:35">stream_index</name></expr></argument>,<argument pos:start="127:37" pos:end="127:53"><expr pos:start="127:37" pos:end="127:53"><name pos:start="127:37" pos:end="127:53"><name pos:start="127:37" pos:end="127:42">stream</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:53">start_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="131:9" pos:end="141:61">/* unlikely case: outputing the pts or dts increase the packet

           size so that we cannot write the start of the next

           packet. In this case, we must flush the current packet with

           padding.

           Note: this always happens for the first audio and video packet

           in a VCD file, since they do not carry any data.*/</comment>

        <expr_stmt pos:start="143:9" pos:end="145:72"><expr pos:start="143:9" pos:end="145:71"><call pos:start="143:9" pos:end="145:71"><name pos:start="143:9" pos:end="143:20">flush_packet</name><argument_list pos:start="143:21" pos:end="145:71">(<argument pos:start="143:22" pos:end="143:24"><expr pos:start="143:22" pos:end="143:24"><name pos:start="143:22" pos:end="143:24">ctx</name></expr></argument>, <argument pos:start="143:27" pos:end="143:38"><expr pos:start="143:27" pos:end="143:38"><name pos:start="143:27" pos:end="143:38">stream_index</name></expr></argument>,

                     <argument pos:start="145:22" pos:end="145:38"><expr pos:start="145:22" pos:end="145:38"><name pos:start="145:22" pos:end="145:38"><name pos:start="145:22" pos:end="145:27">stream</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:38">start_pts</name></name></expr></argument>, <argument pos:start="145:41" pos:end="145:57"><expr pos:start="145:41" pos:end="145:57"><name pos:start="145:41" pos:end="145:57"><name pos:start="145:41" pos:end="145:46">stream</name><operator pos:start="145:47" pos:end="145:48">-&gt;</operator><name pos:start="145:49" pos:end="145:57">start_dts</name></name></expr></argument>, <argument pos:start="145:60" pos:end="145:70"><expr pos:start="145:60" pos:end="145:70"><name pos:start="145:60" pos:end="145:70"><name pos:start="145:60" pos:end="145:60">s</name><operator pos:start="145:61" pos:end="145:62">-&gt;</operator><name pos:start="145:63" pos:end="145:70">last_scr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:14">stream</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:26">buffer_ptr</name></name> <operator pos:start="147:28" pos:end="147:28">=</operator> <literal type="number" pos:start="147:30" pos:end="147:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:38"><expr pos:start="151:5" pos:end="151:37"><name pos:start="151:5" pos:end="151:21"><name pos:start="151:5" pos:end="151:10">stream</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:21">start_pts</name></name> <operator pos:start="151:23" pos:end="151:23">=</operator> <name pos:start="151:25" pos:end="151:37">new_start_pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:38"><expr pos:start="153:5" pos:end="153:37"><name pos:start="153:5" pos:end="153:21"><name pos:start="153:5" pos:end="153:10">stream</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:21">start_dts</name></name> <operator pos:start="153:23" pos:end="153:23">=</operator> <name pos:start="153:25" pos:end="153:37">new_start_dts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:24"><expr pos:start="155:5" pos:end="155:23"><name pos:start="155:5" pos:end="155:21"><name pos:start="155:5" pos:end="155:10">stream</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:21">nb_frames</name></name><operator pos:start="155:22" pos:end="155:23">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="159:56"><if pos:start="157:5" pos:end="159:56">if <condition pos:start="157:8" pos:end="157:40">(<expr pos:start="157:9" pos:end="157:39"><name pos:start="157:9" pos:end="157:34"><name pos:start="157:9" pos:end="157:14">stream</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:34">frame_start_offset</name></name> <operator pos:start="157:36" pos:end="157:37">==</operator> <literal type="number" pos:start="157:39" pos:end="157:39">0</literal></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:56"><block_content pos:start="159:9" pos:end="159:56">

        <expr_stmt pos:start="159:9" pos:end="159:56"><expr pos:start="159:9" pos:end="159:55"><name pos:start="159:9" pos:end="159:34"><name pos:start="159:9" pos:end="159:14">stream</name><operator pos:start="159:15" pos:end="159:16">-&gt;</operator><name pos:start="159:17" pos:end="159:34">frame_start_offset</name></name> <operator pos:start="159:36" pos:end="159:36">=</operator> <name pos:start="159:38" pos:end="159:55"><name pos:start="159:38" pos:end="159:43">stream</name><operator pos:start="159:44" pos:end="159:45">-&gt;</operator><name pos:start="159:46" pos:end="159:55">buffer_ptr</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <while pos:start="161:5" pos:end="229:5">while <condition pos:start="161:11" pos:end="161:20">(<expr pos:start="161:12" pos:end="161:19"><name pos:start="161:12" pos:end="161:15">size</name> <operator pos:start="161:17" pos:end="161:17">&gt;</operator> <literal type="number" pos:start="161:19" pos:end="161:19">0</literal></expr>)</condition> <block pos:start="161:22" pos:end="229:5">{<block_content pos:start="163:9" pos:end="227:9">

        <expr_stmt pos:start="163:9" pos:end="167:64"><expr pos:start="163:9" pos:end="167:63"><name pos:start="163:9" pos:end="163:18">avail_size</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <call pos:start="163:22" pos:end="167:63"><name pos:start="163:22" pos:end="163:44">get_packet_payload_size</name><argument_list pos:start="163:45" pos:end="167:63">(<argument pos:start="163:46" pos:end="163:48"><expr pos:start="163:46" pos:end="163:48"><name pos:start="163:46" pos:end="163:48">ctx</name></expr></argument>, <argument pos:start="163:51" pos:end="163:62"><expr pos:start="163:51" pos:end="163:62"><name pos:start="163:51" pos:end="163:62">stream_index</name></expr></argument>,

                                             <argument pos:start="165:46" pos:end="165:62"><expr pos:start="165:46" pos:end="165:62"><name pos:start="165:46" pos:end="165:62"><name pos:start="165:46" pos:end="165:51">stream</name><operator pos:start="165:52" pos:end="165:53">-&gt;</operator><name pos:start="165:54" pos:end="165:62">start_pts</name></name></expr></argument>, 

                                             <argument pos:start="167:46" pos:end="167:62"><expr pos:start="167:46" pos:end="167:62"><name pos:start="167:46" pos:end="167:62"><name pos:start="167:46" pos:end="167:51">stream</name><operator pos:start="167:52" pos:end="167:53">-&gt;</operator><name pos:start="167:54" pos:end="167:62">start_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:46"><expr pos:start="169:9" pos:end="169:45"><name pos:start="169:9" pos:end="169:11">len</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <name pos:start="169:15" pos:end="169:24">avail_size</name> <operator pos:start="169:26" pos:end="169:26">-</operator> <name pos:start="169:28" pos:end="169:45"><name pos:start="169:28" pos:end="169:33">stream</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:45">buffer_ptr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="173:23"><if pos:start="171:9" pos:end="173:23">if <condition pos:start="171:12" pos:end="171:23">(<expr pos:start="171:13" pos:end="171:22"><name pos:start="171:13" pos:end="171:15">len</name> <operator pos:start="171:17" pos:end="171:17">&gt;</operator> <name pos:start="171:19" pos:end="171:22">size</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:23"><block_content pos:start="173:13" pos:end="173:23">

            <expr_stmt pos:start="173:13" pos:end="173:23"><expr pos:start="173:13" pos:end="173:22"><name pos:start="173:13" pos:end="173:15">len</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <name pos:start="173:19" pos:end="173:22">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:62"><expr pos:start="175:9" pos:end="175:61"><call pos:start="175:9" pos:end="175:61"><name pos:start="175:9" pos:end="175:14">memcpy</name><argument_list pos:start="175:15" pos:end="175:61">(<argument pos:start="175:16" pos:end="175:50"><expr pos:start="175:16" pos:end="175:50"><name pos:start="175:16" pos:end="175:29"><name pos:start="175:16" pos:end="175:21">stream</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:29">buffer</name></name> <operator pos:start="175:31" pos:end="175:31">+</operator> <name pos:start="175:33" pos:end="175:50"><name pos:start="175:33" pos:end="175:38">stream</name><operator pos:start="175:39" pos:end="175:40">-&gt;</operator><name pos:start="175:41" pos:end="175:50">buffer_ptr</name></name></expr></argument>, <argument pos:start="175:53" pos:end="175:55"><expr pos:start="175:53" pos:end="175:55"><name pos:start="175:53" pos:end="175:55">buf</name></expr></argument>, <argument pos:start="175:58" pos:end="175:60"><expr pos:start="175:58" pos:end="175:60"><name pos:start="175:58" pos:end="175:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:34"><expr pos:start="177:9" pos:end="177:33"><name pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:14">stream</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:26">buffer_ptr</name></name> <operator pos:start="177:28" pos:end="177:29">+=</operator> <name pos:start="177:31" pos:end="177:33">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:19"><expr pos:start="179:9" pos:end="179:18"><name pos:start="179:9" pos:end="179:11">buf</name> <operator pos:start="179:13" pos:end="179:14">+=</operator> <name pos:start="179:16" pos:end="179:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:20"><expr pos:start="181:9" pos:end="181:19"><name pos:start="181:9" pos:end="181:12">size</name> <operator pos:start="181:14" pos:end="181:15">-=</operator> <name pos:start="181:17" pos:end="181:19">len</name></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="227:9"><if pos:start="183:9" pos:end="227:9">if <condition pos:start="183:12" pos:end="183:45">(<expr pos:start="183:13" pos:end="183:44"><name pos:start="183:13" pos:end="183:30"><name pos:start="183:13" pos:end="183:18">stream</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:30">buffer_ptr</name></name> <operator pos:start="183:32" pos:end="183:33">&gt;=</operator> <name pos:start="183:35" pos:end="183:44">avail_size</name></expr>)</condition> <block pos:start="183:47" pos:end="227:9">{<block_content pos:start="187:13" pos:end="225:47">



            <expr_stmt pos:start="187:13" pos:end="187:59"><expr pos:start="187:13" pos:end="187:58"><call pos:start="187:13" pos:end="187:58"><name pos:start="187:13" pos:end="187:22">update_scr</name><argument_list pos:start="187:23" pos:end="187:58">(<argument pos:start="187:24" pos:end="187:26"><expr pos:start="187:24" pos:end="187:26"><name pos:start="187:24" pos:end="187:26">ctx</name></expr></argument>,<argument pos:start="187:28" pos:end="187:39"><expr pos:start="187:28" pos:end="187:39"><name pos:start="187:28" pos:end="187:39">stream_index</name></expr></argument>,<argument pos:start="187:41" pos:end="187:57"><expr pos:start="187:41" pos:end="187:57"><name pos:start="187:41" pos:end="187:57"><name pos:start="187:41" pos:end="187:46">stream</name><operator pos:start="187:47" pos:end="187:48">-&gt;</operator><name pos:start="187:49" pos:end="187:57">start_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="191:13" pos:end="191:48">/* if packet full, we send it now */</comment>

            <expr_stmt pos:start="193:13" pos:end="195:76"><expr pos:start="193:13" pos:end="195:75"><call pos:start="193:13" pos:end="195:75"><name pos:start="193:13" pos:end="193:24">flush_packet</name><argument_list pos:start="193:25" pos:end="195:75">(<argument pos:start="193:26" pos:end="193:28"><expr pos:start="193:26" pos:end="193:28"><name pos:start="193:26" pos:end="193:28">ctx</name></expr></argument>, <argument pos:start="193:31" pos:end="193:42"><expr pos:start="193:31" pos:end="193:42"><name pos:start="193:31" pos:end="193:42">stream_index</name></expr></argument>,

                         <argument pos:start="195:26" pos:end="195:42"><expr pos:start="195:26" pos:end="195:42"><name pos:start="195:26" pos:end="195:42"><name pos:start="195:26" pos:end="195:31">stream</name><operator pos:start="195:32" pos:end="195:33">-&gt;</operator><name pos:start="195:34" pos:end="195:42">start_pts</name></name></expr></argument>, <argument pos:start="195:45" pos:end="195:61"><expr pos:start="195:45" pos:end="195:61"><name pos:start="195:45" pos:end="195:61"><name pos:start="195:45" pos:end="195:50">stream</name><operator pos:start="195:51" pos:end="195:52">-&gt;</operator><name pos:start="195:53" pos:end="195:61">start_dts</name></name></expr></argument>, <argument pos:start="195:64" pos:end="195:74"><expr pos:start="195:64" pos:end="195:74"><name pos:start="195:64" pos:end="195:74"><name pos:start="195:64" pos:end="195:64">s</name><operator pos:start="195:65" pos:end="195:66">-&gt;</operator><name pos:start="195:67" pos:end="195:74">last_scr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:35"><expr pos:start="197:13" pos:end="197:34"><name pos:start="197:13" pos:end="197:30"><name pos:start="197:13" pos:end="197:18">stream</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:30">buffer_ptr</name></name> <operator pos:start="197:32" pos:end="197:32">=</operator> <literal type="number" pos:start="197:34" pos:end="197:34">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="201:13" pos:end="215:13"><if pos:start="201:13" pos:end="215:13">if <condition pos:start="201:16" pos:end="201:26">(<expr pos:start="201:17" pos:end="201:25"><name pos:start="201:17" pos:end="201:25"><name pos:start="201:17" pos:end="201:17">s</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:25">is_vcd</name></name></expr>)</condition> <block pos:start="201:28" pos:end="215:13">{<block_content pos:start="207:17" pos:end="213:48">

                <comment type="block" pos:start="203:17" pos:end="205:50">/* Write one or more padding sectors, if necessary, to reach

                   the constant overall bitrate.*/</comment>

                <decl_stmt pos:start="207:17" pos:end="207:34"><decl pos:start="207:17" pos:end="207:33"><type pos:start="207:17" pos:end="207:19"><name pos:start="207:17" pos:end="207:19">int</name></type> <name pos:start="207:21" pos:end="207:33">vcd_pad_bytes</name></decl>;</decl_stmt>

            

                <while pos:start="211:17" pos:end="213:48">while<condition pos:start="211:22" pos:end="211:103">(<expr pos:start="211:23" pos:end="211:102"><operator pos:start="211:23" pos:end="211:23">(</operator><name pos:start="211:24" pos:end="211:36">vcd_pad_bytes</name> <operator pos:start="211:38" pos:end="211:38">=</operator> <call pos:start="211:40" pos:end="211:82"><name pos:start="211:40" pos:end="211:59">get_vcd_padding_size</name><argument_list pos:start="211:60" pos:end="211:82">(<argument pos:start="211:61" pos:end="211:63"><expr pos:start="211:61" pos:end="211:63"><name pos:start="211:61" pos:end="211:63">ctx</name></expr></argument>,<argument pos:start="211:65" pos:end="211:81"><expr pos:start="211:65" pos:end="211:81"><name pos:start="211:65" pos:end="211:81"><name pos:start="211:65" pos:end="211:70">stream</name><operator pos:start="211:71" pos:end="211:72">-&gt;</operator><name pos:start="211:73" pos:end="211:81">start_pts</name></name></expr></argument>)</argument_list></call> <operator pos:start="211:84" pos:end="211:84">)</operator> <operator pos:start="211:86" pos:end="211:87">&gt;=</operator> <name pos:start="211:89" pos:end="211:102"><name pos:start="211:89" pos:end="211:89">s</name><operator pos:start="211:90" pos:end="211:91">-&gt;</operator><name pos:start="211:92" pos:end="211:102">packet_size</name></name></expr>)</condition><block type="pseudo" pos:start="213:21" pos:end="213:48"><block_content pos:start="213:21" pos:end="213:48">

                    <expr_stmt pos:start="213:21" pos:end="213:48"><expr pos:start="213:21" pos:end="213:47"><call pos:start="213:21" pos:end="213:47"><name pos:start="213:21" pos:end="213:42">put_vcd_padding_sector</name><argument_list pos:start="213:43" pos:end="213:47">(<argument pos:start="213:44" pos:end="213:46"><expr pos:start="213:44" pos:end="213:46"><name pos:start="213:44" pos:end="213:46">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="219:13" pos:end="221:29">/* Make sure only the FIRST pes packet for this frame has

               a timestamp */</comment>

            <expr_stmt pos:start="223:13" pos:end="223:47"><expr pos:start="223:13" pos:end="223:46"><name pos:start="223:13" pos:end="223:29"><name pos:start="223:13" pos:end="223:18">stream</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:29">start_pts</name></name> <operator pos:start="223:31" pos:end="223:31">=</operator> <name pos:start="223:33" pos:end="223:46">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:47"><expr pos:start="225:13" pos:end="225:46"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:18">stream</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:29">start_dts</name></name> <operator pos:start="225:31" pos:end="225:31">=</operator> <name pos:start="225:33" pos:end="225:46">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="233:5" pos:end="233:13">return <expr pos:start="233:12" pos:end="233:12"><literal type="number" pos:start="233:12" pos:end="233:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
