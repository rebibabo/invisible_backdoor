<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11526.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">checkasm_check_h264pred</name><parameter_list pos:start="1:29" pos:end="1:34">(<parameter pos:start="1:30" pos:end="1:33"><decl pos:start="1:30" pos:end="1:33"><type pos:start="1:30" pos:end="1:33"><name pos:start="1:30" pos:end="1:33">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <struct pos:start="5:5" pos:end="21:6"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> struct <block pos:start="5:25" pos:end="11:5">{

        <function_decl pos:start="7:9" pos:end="7:74"><type pos:start="7:9" pos:end="7:12"><name pos:start="7:9" pos:end="7:12">void</name></type> (<modifier pos:start="7:15" pos:end="7:15">*</modifier><name pos:start="7:16" pos:end="7:19">func</name>)<parameter_list pos:start="7:21" pos:end="7:73">(<parameter pos:start="7:22" pos:end="7:37"><decl pos:start="7:22" pos:end="7:37"><type pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:36">H264PredContext</name><modifier pos:start="7:37" pos:end="7:37">*</modifier></type></decl></parameter>, <parameter pos:start="7:40" pos:end="7:47"><decl pos:start="7:40" pos:end="7:47"><type pos:start="7:40" pos:end="7:47"><name pos:start="7:40" pos:end="7:46">uint8_t</name><modifier pos:start="7:47" pos:end="7:47">*</modifier></type></decl></parameter>, <parameter pos:start="7:50" pos:end="7:57"><decl pos:start="7:50" pos:end="7:57"><type pos:start="7:50" pos:end="7:57"><name pos:start="7:50" pos:end="7:56">uint8_t</name><modifier pos:start="7:57" pos:end="7:57">*</modifier></type></decl></parameter>, <parameter pos:start="7:60" pos:end="7:62"><decl pos:start="7:60" pos:end="7:62"><type pos:start="7:60" pos:end="7:62"><name pos:start="7:60" pos:end="7:62">int</name></type></decl></parameter>, <parameter pos:start="7:65" pos:end="7:67"><decl pos:start="7:65" pos:end="7:67"><type pos:start="7:65" pos:end="7:67"><name pos:start="7:65" pos:end="7:67">int</name></type></decl></parameter>, <parameter pos:start="7:70" pos:end="7:72"><decl pos:start="7:70" pos:end="7:72"><type pos:start="7:70" pos:end="7:72"><name pos:start="7:70" pos:end="7:72">int</name></type></decl></parameter>)</parameter_list>;</function_decl>

        <decl_stmt pos:start="9:9" pos:end="9:25"><decl pos:start="9:9" pos:end="9:24"><type pos:start="9:9" pos:end="9:20"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:18">char</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">name</name></decl>;</decl_stmt>

    }</block> <decl pos:start="11:7" pos:end="21:5"><name pos:start="11:7" pos:end="11:13"><name pos:start="11:7" pos:end="11:11">tests</name><index pos:start="11:12" pos:end="11:13">[]</index></name> <init pos:start="11:15" pos:end="21:5">= <expr pos:start="11:17" pos:end="21:5"><block pos:start="11:17" pos:end="21:5">{

        <expr pos:start="13:9" pos:end="13:40"><block pos:start="13:9" pos:end="13:40">{ <expr pos:start="13:11" pos:end="13:23"><name pos:start="13:11" pos:end="13:23">check_pred4x4</name></expr>,   <expr pos:start="13:28" pos:end="13:36"><literal type="string" pos:start="13:28" pos:end="13:36">"pred4x4"</literal></expr>   }</block></expr>,

        <expr pos:start="15:9" pos:end="15:40"><block pos:start="15:9" pos:end="15:40">{ <expr pos:start="15:11" pos:end="15:23"><name pos:start="15:11" pos:end="15:23">check_pred8x8</name></expr>,   <expr pos:start="15:28" pos:end="15:36"><literal type="string" pos:start="15:28" pos:end="15:36">"pred8x8"</literal></expr>   }</block></expr>,

        <expr pos:start="17:9" pos:end="17:40"><block pos:start="17:9" pos:end="17:40">{ <expr pos:start="17:11" pos:end="17:25"><name pos:start="17:11" pos:end="17:25">check_pred16x16</name></expr>, <expr pos:start="17:28" pos:end="17:38"><literal type="string" pos:start="17:28" pos:end="17:38">"pred16x16"</literal></expr> }</block></expr>,

        <expr pos:start="19:9" pos:end="19:40"><block pos:start="19:9" pos:end="19:40">{ <expr pos:start="19:11" pos:end="19:24"><name pos:start="19:11" pos:end="19:24">check_pred8x8l</name></expr>,  <expr pos:start="19:28" pos:end="19:37"><literal type="string" pos:start="19:28" pos:end="19:37">"pred8x8l"</literal></expr>  }</block></expr>,

    }</block></expr></init></decl>;</struct>



    <expr_stmt pos:start="25:5" pos:end="25:49"><expr pos:start="25:5" pos:end="25:48"><call pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:19">DECLARE_ALIGNED</name><argument_list pos:start="25:20" pos:end="25:38">(<argument pos:start="25:21" pos:end="25:22"><expr pos:start="25:21" pos:end="25:22"><literal type="number" pos:start="25:21" pos:end="25:22">16</literal></expr></argument>, <argument pos:start="25:25" pos:end="25:31"><expr pos:start="25:25" pos:end="25:31"><name pos:start="25:25" pos:end="25:31">uint8_t</name></expr></argument>, <argument pos:start="25:34" pos:end="25:37"><expr pos:start="25:34" pos:end="25:37"><name pos:start="25:34" pos:end="25:37">buf0</name></expr></argument>)</argument_list></call><index pos:start="25:39" pos:end="25:48">[<expr pos:start="25:40" pos:end="25:47"><name pos:start="25:40" pos:end="25:47">BUF_SIZE</name></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><call pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:19">DECLARE_ALIGNED</name><argument_list pos:start="27:20" pos:end="27:38">(<argument pos:start="27:21" pos:end="27:22"><expr pos:start="27:21" pos:end="27:22"><literal type="number" pos:start="27:21" pos:end="27:22">16</literal></expr></argument>, <argument pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:31">uint8_t</name></expr></argument>, <argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">buf1</name></expr></argument>)</argument_list></call><index pos:start="27:39" pos:end="27:48">[<expr pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:47">BUF_SIZE</name></expr>]</index></expr>;</expr_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:22"><decl pos:start="29:5" pos:end="29:21"><type pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:19">H264PredContext</name></type> <name pos:start="29:21" pos:end="29:21">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:46"><decl pos:start="31:5" pos:end="31:12"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:12">test</name></decl>, <decl pos:start="31:15" pos:end="31:19"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:15" pos:end="31:19">codec</name></decl>, <decl pos:start="31:22" pos:end="31:34"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:22" pos:end="31:34">chroma_format</name></decl>, <decl pos:start="31:37" pos:end="31:45"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:37" pos:end="31:45">bit_depth</name></decl>;</decl_stmt>



    <for pos:start="35:5" pos:end="55:5">for <control pos:start="35:9" pos:end="35:56">(<init pos:start="35:10" pos:end="35:18"><expr pos:start="35:10" pos:end="35:17"><name pos:start="35:10" pos:end="35:13">test</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr>;</init> <condition pos:start="35:20" pos:end="35:48"><expr pos:start="35:20" pos:end="35:47"><name pos:start="35:20" pos:end="35:23">test</name> <operator pos:start="35:25" pos:end="35:25">&lt;</operator> <call pos:start="35:27" pos:end="35:47"><name pos:start="35:27" pos:end="35:40">FF_ARRAY_ELEMS</name><argument_list pos:start="35:41" pos:end="35:47">(<argument pos:start="35:42" pos:end="35:46"><expr pos:start="35:42" pos:end="35:46"><name pos:start="35:42" pos:end="35:46">tests</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="35:50" pos:end="35:55"><expr pos:start="35:50" pos:end="35:55"><name pos:start="35:50" pos:end="35:53">test</name><operator pos:start="35:54" pos:end="35:55">++</operator></expr></incr>)</control> <block pos:start="35:58" pos:end="55:5">{<block_content pos:start="37:9" pos:end="53:39">

        <for pos:start="37:9" pos:end="51:9">for <control pos:start="37:13" pos:end="37:43">(<init pos:start="37:14" pos:end="37:23"><expr pos:start="37:14" pos:end="37:22"><name pos:start="37:14" pos:end="37:18">codec</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:34"><expr pos:start="37:25" pos:end="37:33"><name pos:start="37:25" pos:end="37:29">codec</name> <operator pos:start="37:31" pos:end="37:31">&lt;</operator> <literal type="number" pos:start="37:33" pos:end="37:33">4</literal></expr>;</condition> <incr pos:start="37:36" pos:end="37:42"><expr pos:start="37:36" pos:end="37:42"><name pos:start="37:36" pos:end="37:40">codec</name><operator pos:start="37:41" pos:end="37:42">++</operator></expr></incr>)</control> <block pos:start="37:45" pos:end="51:9">{<block_content pos:start="39:13" pos:end="49:17">

            <decl_stmt pos:start="39:13" pos:end="39:44"><decl pos:start="39:13" pos:end="39:43"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:24">codec_id</name> <init pos:start="39:26" pos:end="39:43">= <expr pos:start="39:28" pos:end="39:43"><name pos:start="39:28" pos:end="39:43"><name pos:start="39:28" pos:end="39:36">codec_ids</name><index pos:start="39:37" pos:end="39:43">[<expr pos:start="39:38" pos:end="39:42"><name pos:start="39:38" pos:end="39:42">codec</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="41:13" pos:end="49:17">for <control pos:start="41:17" pos:end="41:98">(<init pos:start="41:18" pos:end="41:31"><expr pos:start="41:18" pos:end="41:30"><name pos:start="41:18" pos:end="41:26">bit_depth</name> <operator pos:start="41:28" pos:end="41:28">=</operator> <literal type="number" pos:start="41:30" pos:end="41:30">8</literal></expr>;</init> <condition pos:start="41:33" pos:end="41:85"><expr pos:start="41:33" pos:end="41:84"><name pos:start="41:33" pos:end="41:41">bit_depth</name> <operator pos:start="41:43" pos:end="41:44">&lt;=</operator> <operator pos:start="41:46" pos:end="41:46">(</operator><ternary pos:start="41:47" pos:end="41:83"><condition pos:start="41:47" pos:end="41:76"><expr pos:start="41:47" pos:end="41:74"><name pos:start="41:47" pos:end="41:54">codec_id</name> <operator pos:start="41:56" pos:end="41:57">==</operator> <name pos:start="41:59" pos:end="41:74">AV_CODEC_ID_H264</name></expr> ?</condition><then pos:start="41:78" pos:end="41:79"> <expr pos:start="41:78" pos:end="41:79"><literal type="number" pos:start="41:78" pos:end="41:79">10</literal></expr> </then><else pos:start="41:81" pos:end="41:83">: <expr pos:start="41:83" pos:end="41:83"><literal type="number" pos:start="41:83" pos:end="41:83">8</literal></expr></else></ternary><operator pos:start="41:84" pos:end="41:84">)</operator></expr>;</condition> <incr pos:start="41:87" pos:end="41:97"><expr pos:start="41:87" pos:end="41:97"><name pos:start="41:87" pos:end="41:95">bit_depth</name><operator pos:start="41:96" pos:end="41:97">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:17" pos:end="49:17"><block_content pos:start="43:17" pos:end="49:17">

                <for pos:start="43:17" pos:end="49:17">for <control pos:start="43:21" pos:end="43:113">(<init pos:start="43:22" pos:end="43:39"><expr pos:start="43:22" pos:end="43:38"><name pos:start="43:22" pos:end="43:34">chroma_format</name> <operator pos:start="43:36" pos:end="43:36">=</operator> <literal type="number" pos:start="43:38" pos:end="43:38">1</literal></expr>;</init> <condition pos:start="43:41" pos:end="43:96"><expr pos:start="43:41" pos:end="43:95"><name pos:start="43:41" pos:end="43:53">chroma_format</name> <operator pos:start="43:55" pos:end="43:56">&lt;=</operator> <operator pos:start="43:58" pos:end="43:58">(</operator><ternary pos:start="43:59" pos:end="43:94"><condition pos:start="43:59" pos:end="43:88"><expr pos:start="43:59" pos:end="43:86"><name pos:start="43:59" pos:end="43:66">codec_id</name> <operator pos:start="43:68" pos:end="43:69">==</operator> <name pos:start="43:71" pos:end="43:86">AV_CODEC_ID_H264</name></expr> ?</condition><then pos:start="43:90" pos:end="43:90"> <expr pos:start="43:90" pos:end="43:90"><literal type="number" pos:start="43:90" pos:end="43:90">2</literal></expr> </then><else pos:start="43:92" pos:end="43:94">: <expr pos:start="43:94" pos:end="43:94"><literal type="number" pos:start="43:94" pos:end="43:94">1</literal></expr></else></ternary><operator pos:start="43:95" pos:end="43:95">)</operator></expr>;</condition> <incr pos:start="43:98" pos:end="43:112"><expr pos:start="43:98" pos:end="43:112"><name pos:start="43:98" pos:end="43:110">chroma_format</name><operator pos:start="43:111" pos:end="43:112">++</operator></expr></incr>)</control> <block pos:start="43:115" pos:end="49:17">{<block_content pos:start="45:21" pos:end="47:86">

                    <expr_stmt pos:start="45:21" pos:end="45:78"><expr pos:start="45:21" pos:end="45:77"><call pos:start="45:21" pos:end="45:77"><name pos:start="45:21" pos:end="45:37">ff_h264_pred_init</name><argument_list pos:start="45:38" pos:end="45:77">(<argument pos:start="45:39" pos:end="45:40"><expr pos:start="45:39" pos:end="45:40"><operator pos:start="45:39" pos:end="45:39">&amp;</operator><name pos:start="45:40" pos:end="45:40">h</name></expr></argument>, <argument pos:start="45:43" pos:end="45:50"><expr pos:start="45:43" pos:end="45:50"><name pos:start="45:43" pos:end="45:50">codec_id</name></expr></argument>, <argument pos:start="45:53" pos:end="45:61"><expr pos:start="45:53" pos:end="45:61"><name pos:start="45:53" pos:end="45:61">bit_depth</name></expr></argument>, <argument pos:start="45:64" pos:end="45:76"><expr pos:start="45:64" pos:end="45:76"><name pos:start="45:64" pos:end="45:76">chroma_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="47:21" pos:end="47:86"><expr pos:start="47:21" pos:end="47:85"><name pos:start="47:21" pos:end="47:31"><name pos:start="47:21" pos:end="47:25">tests</name><index pos:start="47:26" pos:end="47:31">[<expr pos:start="47:27" pos:end="47:30"><name pos:start="47:27" pos:end="47:30">test</name></expr>]</index></name><operator pos:start="47:32" pos:end="47:32">.</operator><call pos:start="47:33" pos:end="47:85"><name pos:start="47:33" pos:end="47:36">func</name><argument_list pos:start="47:37" pos:end="47:85">(<argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><operator pos:start="47:38" pos:end="47:38">&amp;</operator><name pos:start="47:39" pos:end="47:39">h</name></expr></argument>, <argument pos:start="47:42" pos:end="47:45"><expr pos:start="47:42" pos:end="47:45"><name pos:start="47:42" pos:end="47:45">buf0</name></expr></argument>, <argument pos:start="47:48" pos:end="47:51"><expr pos:start="47:48" pos:end="47:51"><name pos:start="47:48" pos:end="47:51">buf1</name></expr></argument>, <argument pos:start="47:54" pos:end="47:58"><expr pos:start="47:54" pos:end="47:58"><name pos:start="47:54" pos:end="47:58">codec</name></expr></argument>, <argument pos:start="47:61" pos:end="47:73"><expr pos:start="47:61" pos:end="47:73"><name pos:start="47:61" pos:end="47:73">chroma_format</name></expr></argument>, <argument pos:start="47:76" pos:end="47:84"><expr pos:start="47:76" pos:end="47:84"><name pos:start="47:76" pos:end="47:84">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for></block_content></block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><call pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:14">report</name><argument_list pos:start="53:15" pos:end="53:38">(<argument pos:start="53:16" pos:end="53:19"><expr pos:start="53:16" pos:end="53:19"><literal type="string" pos:start="53:16" pos:end="53:19">"%s"</literal></expr></argument>, <argument pos:start="53:22" pos:end="53:37"><expr pos:start="53:22" pos:end="53:37"><name pos:start="53:22" pos:end="53:32"><name pos:start="53:22" pos:end="53:26">tests</name><index pos:start="53:27" pos:end="53:32">[<expr pos:start="53:28" pos:end="53:31"><name pos:start="53:28" pos:end="53:31">test</name></expr>]</index></name><operator pos:start="53:33" pos:end="53:33">.</operator><name pos:start="53:34" pos:end="53:37">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
