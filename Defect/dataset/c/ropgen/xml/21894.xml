<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21894.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">pcnet_transmit</name><parameter_list pos:start="1:27" pos:end="1:41">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:37">PCNetState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="227:1">{<block_content pos:start="5:5" pos:end="225:19">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">hwaddr</name></type> <name pos:start="5:12" pos:end="5:20">xmit_cxda</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">count</name> <init pos:start="7:15" pos:end="7:30">= <expr pos:start="7:17" pos:end="7:30"><call pos:start="7:17" pos:end="7:28"><name pos:start="7:17" pos:end="7:25">CSR_XMTRL</name><argument_list pos:start="7:26" pos:end="7:28">(<argument pos:start="7:27" pos:end="7:27"><expr pos:start="7:27" pos:end="7:27"><name pos:start="7:27" pos:end="7:27">s</name></expr></argument>)</argument_list></call><operator pos:start="7:29" pos:end="7:29">-</operator><literal type="number" pos:start="7:30" pos:end="7:30">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">add_crc</name> <init pos:start="9:17" pos:end="9:19">= <expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">bcnt</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:15">xmit_pos</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <operator pos:start="13:19" pos:end="13:19">-</operator><literal type="number" pos:start="13:20" pos:end="13:20">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:20"><name pos:start="17:10" pos:end="17:17">CSR_TXON</name><argument_list pos:start="17:18" pos:end="17:20">(<argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:23" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:14">csr</name><index pos:start="19:15" pos:end="19:17">[<expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>]</index></name> <operator pos:start="19:19" pos:end="19:20">&amp;=</operator> <operator pos:start="19:22" pos:end="19:22">~</operator><literal type="number" pos:start="19:23" pos:end="19:28">0x0008</literal></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:14">tx_busy</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">1</literal></expr>;</expr_stmt>



    <label pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:11">txagain</name>:</label>

    <if_stmt pos:start="33:5" pos:end="221:5"><if pos:start="33:5" pos:end="191:5">if <condition pos:start="33:8" pos:end="33:27">(<expr pos:start="33:9" pos:end="33:26"><call pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:23">pcnet_tdte_poll</name><argument_list pos:start="33:24" pos:end="33:26">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:29" pos:end="191:5">{<block_content pos:start="35:9" pos:end="187:25">

        <decl_stmt pos:start="35:9" pos:end="35:29"><decl pos:start="35:9" pos:end="35:28"><type pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:14">struct</name> <name pos:start="35:16" pos:end="35:24">pcnet_TMD</name></name></type> <name pos:start="35:26" pos:end="35:28">tmd</name></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="44:0"><expr pos:start="39:9" pos:end="39:46"><call pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:15">TMDLOAD</name><argument_list pos:start="39:16" pos:end="39:46">(<argument pos:start="39:17" pos:end="39:20"><expr pos:start="39:17" pos:end="39:20"><operator pos:start="39:17" pos:end="39:17">&amp;</operator><name pos:start="39:18" pos:end="39:20">tmd</name></expr></argument>, <argument pos:start="39:23" pos:end="39:45"><expr pos:start="39:23" pos:end="39:45"><call pos:start="39:23" pos:end="39:45"><name pos:start="39:23" pos:end="39:30">PHYSADDR</name><argument_list pos:start="39:31" pos:end="39:45">(<argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">s</name></expr></argument>,<argument pos:start="39:34" pos:end="39:44"><expr pos:start="39:34" pos:end="39:44"><call pos:start="39:34" pos:end="39:44"><name pos:start="39:34" pos:end="39:41">CSR_CXDA</name><argument_list pos:start="39:42" pos:end="39:44">(<argument pos:start="39:43" pos:end="39:43"><expr pos:start="39:43" pos:end="39:43"><name pos:start="39:43" pos:end="39:43">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="43:1" pos:end="43:22">#<cpp:directive pos:start="43:2" pos:end="43:6">ifdef</cpp:directive> <name pos:start="43:8" pos:end="43:22">PCNET_DEBUG_TMD</name></cpp:ifdef>

        <expr_stmt pos:start="45:9" pos:end="45:62"><expr pos:start="45:9" pos:end="45:61"><call pos:start="45:9" pos:end="45:61"><name pos:start="45:9" pos:end="45:14">printf</name><argument_list pos:start="45:15" pos:end="45:61">(<argument pos:start="45:16" pos:end="45:35"><expr pos:start="45:16" pos:end="45:35"><literal type="string" pos:start="45:16" pos:end="45:35">"  TMDLOAD 0x%08x\n"</literal></expr></argument>, <argument pos:start="45:38" pos:end="45:60"><expr pos:start="45:38" pos:end="45:60"><call pos:start="45:38" pos:end="45:60"><name pos:start="45:38" pos:end="45:45">PHYSADDR</name><argument_list pos:start="45:46" pos:end="45:60">(<argument pos:start="45:47" pos:end="45:47"><expr pos:start="45:47" pos:end="45:47"><name pos:start="45:47" pos:end="45:47">s</name></expr></argument>,<argument pos:start="45:49" pos:end="45:59"><expr pos:start="45:49" pos:end="45:59"><call pos:start="45:49" pos:end="45:59"><name pos:start="45:49" pos:end="45:56">CSR_CXDA</name><argument_list pos:start="45:57" pos:end="45:59">(<argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><name pos:start="45:58" pos:end="45:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="50:0"><expr pos:start="47:9" pos:end="47:23"><call pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:17">PRINT_TMD</name><argument_list pos:start="47:18" pos:end="47:23">(<argument pos:start="47:19" pos:end="47:22"><expr pos:start="47:19" pos:end="47:22"><operator pos:start="47:19" pos:end="47:19">&amp;</operator><name pos:start="47:20" pos:end="47:22">tmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="51:9" pos:end="61:9"><if pos:start="51:9" pos:end="61:9">if <condition pos:start="51:12" pos:end="51:45">(<expr pos:start="51:13" pos:end="51:44"><call pos:start="51:13" pos:end="51:44"><name pos:start="51:13" pos:end="51:21">GET_FIELD</name><argument_list pos:start="51:22" pos:end="51:44">(<argument pos:start="51:23" pos:end="51:32"><expr pos:start="51:23" pos:end="51:32"><name pos:start="51:23" pos:end="51:32"><name pos:start="51:23" pos:end="51:25">tmd</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:32">status</name></name></expr></argument>, <argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">TMDS</name></expr></argument>, <argument pos:start="51:41" pos:end="51:43"><expr pos:start="51:41" pos:end="51:43"><name pos:start="51:41" pos:end="51:43">STP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:47" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:62">

            <expr_stmt pos:start="53:13" pos:end="53:28"><expr pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:23">xmit_pos</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:48"><expr pos:start="55:13" pos:end="55:47"><name pos:start="55:13" pos:end="55:21">xmit_cxda</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <call pos:start="55:25" pos:end="55:47"><name pos:start="55:25" pos:end="55:32">PHYSADDR</name><argument_list pos:start="55:33" pos:end="55:47">(<argument pos:start="55:34" pos:end="55:34"><expr pos:start="55:34" pos:end="55:34"><name pos:start="55:34" pos:end="55:34">s</name></expr></argument>,<argument pos:start="55:36" pos:end="55:46"><expr pos:start="55:36" pos:end="55:46"><call pos:start="55:36" pos:end="55:46"><name pos:start="55:36" pos:end="55:43">CSR_CXDA</name><argument_list pos:start="55:44" pos:end="55:46">(<argument pos:start="55:45" pos:end="55:45"><expr pos:start="55:45" pos:end="55:45"><name pos:start="55:45" pos:end="55:45">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:62"><if pos:start="57:13" pos:end="59:62">if <condition pos:start="57:16" pos:end="57:36">(<expr pos:start="57:17" pos:end="57:35"><call pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:27">BCR_SWSTYLE</name><argument_list pos:start="57:28" pos:end="57:30">(<argument pos:start="57:29" pos:end="57:29"><expr pos:start="57:29" pos:end="57:29"><name pos:start="57:29" pos:end="57:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="57:32" pos:end="57:33">!=</operator> <literal type="number" pos:start="57:35" pos:end="57:35">1</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:62"><block_content pos:start="59:17" pos:end="59:62">

                <expr_stmt pos:start="59:17" pos:end="59:62"><expr pos:start="59:17" pos:end="59:61"><name pos:start="59:17" pos:end="59:23">add_crc</name> <operator pos:start="59:25" pos:end="59:25">=</operator> <call pos:start="59:27" pos:end="59:61"><name pos:start="59:27" pos:end="59:35">GET_FIELD</name><argument_list pos:start="59:36" pos:end="59:61">(<argument pos:start="59:37" pos:end="59:46"><expr pos:start="59:37" pos:end="59:46"><name pos:start="59:37" pos:end="59:46"><name pos:start="59:37" pos:end="59:39">tmd</name><operator pos:start="59:40" pos:end="59:40">.</operator><name pos:start="59:41" pos:end="59:46">status</name></name></expr></argument>, <argument pos:start="59:49" pos:end="59:52"><expr pos:start="59:49" pos:end="59:52"><name pos:start="59:49" pos:end="59:52">TMDS</name></expr></argument>, <argument pos:start="59:55" pos:end="59:60"><expr pos:start="59:55" pos:end="59:60"><name pos:start="59:55" pos:end="59:60">ADDFCS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="79:9"><if pos:start="63:9" pos:end="79:9">if <condition pos:start="63:12" pos:end="65:65">(<expr pos:start="63:13" pos:end="65:64"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">lnkst</name></name> <operator pos:start="63:22" pos:end="63:23">==</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal> <operator pos:start="63:27" pos:end="63:28">&amp;&amp;</operator>

            <operator pos:start="65:13" pos:end="65:13">(</operator><operator pos:start="65:14" pos:end="65:14">!</operator><call pos:start="65:15" pos:end="65:25"><name pos:start="65:15" pos:end="65:22">CSR_LOOP</name><argument_list pos:start="65:23" pos:end="65:25">(<argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">s</name></expr></argument>)</argument_list></call> <operator pos:start="65:27" pos:end="65:28">||</operator> <operator pos:start="65:30" pos:end="65:30">(</operator><operator pos:start="65:31" pos:end="65:31">!</operator><call pos:start="65:32" pos:end="65:42"><name pos:start="65:32" pos:end="65:39">CSR_INTL</name><argument_list pos:start="65:40" pos:end="65:42">(<argument pos:start="65:41" pos:end="65:41"><expr pos:start="65:41" pos:end="65:41"><name pos:start="65:41" pos:end="65:41">s</name></expr></argument>)</argument_list></call> <operator pos:start="65:44" pos:end="65:45">&amp;&amp;</operator> <operator pos:start="65:47" pos:end="65:47">!</operator><call pos:start="65:48" pos:end="65:62"><name pos:start="65:48" pos:end="65:59">BCR_TMAULOOP</name><argument_list pos:start="65:60" pos:end="65:62">(<argument pos:start="65:61" pos:end="65:61"><expr pos:start="65:61" pos:end="65:61"><name pos:start="65:61" pos:end="65:61">s</name></expr></argument>)</argument_list></call><operator pos:start="65:63" pos:end="65:63">)</operator><operator pos:start="65:64" pos:end="65:64">)</operator></expr>)</condition> <block pos:start="65:67" pos:end="79:9">{<block_content pos:start="67:13" pos:end="77:24">

            <expr_stmt pos:start="67:13" pos:end="67:48"><expr pos:start="67:13" pos:end="67:47"><call pos:start="67:13" pos:end="67:47"><name pos:start="67:13" pos:end="67:21">SET_FIELD</name><argument_list pos:start="67:22" pos:end="67:47">(<argument pos:start="67:23" pos:end="67:31"><expr pos:start="67:23" pos:end="67:31"><operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:26">tmd</name><operator pos:start="67:27" pos:end="67:27">.</operator><name pos:start="67:28" pos:end="67:31">misc</name></name></expr></argument>, <argument pos:start="67:34" pos:end="67:37"><expr pos:start="67:34" pos:end="67:37"><name pos:start="67:34" pos:end="67:37">TMDM</name></expr></argument>, <argument pos:start="67:40" pos:end="67:43"><expr pos:start="67:40" pos:end="67:43"><name pos:start="67:40" pos:end="67:43">LCAR</name></expr></argument>, <argument pos:start="67:46" pos:end="67:46"><expr pos:start="67:46" pos:end="67:46"><literal type="number" pos:start="67:46" pos:end="67:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:49"><expr pos:start="69:13" pos:end="69:48"><call pos:start="69:13" pos:end="69:48"><name pos:start="69:13" pos:end="69:21">SET_FIELD</name><argument_list pos:start="69:22" pos:end="69:48">(<argument pos:start="69:23" pos:end="69:33"><expr pos:start="69:23" pos:end="69:33"><operator pos:start="69:23" pos:end="69:23">&amp;</operator><name pos:start="69:24" pos:end="69:33"><name pos:start="69:24" pos:end="69:26">tmd</name><operator pos:start="69:27" pos:end="69:27">.</operator><name pos:start="69:28" pos:end="69:33">status</name></name></expr></argument>, <argument pos:start="69:36" pos:end="69:39"><expr pos:start="69:36" pos:end="69:39"><name pos:start="69:36" pos:end="69:39">TMDS</name></expr></argument>, <argument pos:start="69:42" pos:end="69:44"><expr pos:start="69:42" pos:end="69:44"><name pos:start="69:42" pos:end="69:44">ERR</name></expr></argument>, <argument pos:start="69:47" pos:end="69:47"><expr pos:start="69:47" pos:end="69:47"><literal type="number" pos:start="69:47" pos:end="69:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:49"><expr pos:start="71:13" pos:end="71:48"><call pos:start="71:13" pos:end="71:48"><name pos:start="71:13" pos:end="71:21">SET_FIELD</name><argument_list pos:start="71:22" pos:end="71:48">(<argument pos:start="71:23" pos:end="71:33"><expr pos:start="71:23" pos:end="71:33"><operator pos:start="71:23" pos:end="71:23">&amp;</operator><name pos:start="71:24" pos:end="71:33"><name pos:start="71:24" pos:end="71:26">tmd</name><operator pos:start="71:27" pos:end="71:27">.</operator><name pos:start="71:28" pos:end="71:33">status</name></name></expr></argument>, <argument pos:start="71:36" pos:end="71:39"><expr pos:start="71:36" pos:end="71:39"><name pos:start="71:36" pos:end="71:39">TMDS</name></expr></argument>, <argument pos:start="71:42" pos:end="71:44"><expr pos:start="71:42" pos:end="71:44"><name pos:start="71:42" pos:end="71:44">OWN</name></expr></argument>, <argument pos:start="71:47" pos:end="71:47"><expr pos:start="71:47" pos:end="71:47"><literal type="number" pos:start="71:47" pos:end="71:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:32"><expr pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:18">csr</name><index pos:start="73:19" pos:end="73:21">[<expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr>]</index></name> <operator pos:start="73:23" pos:end="73:24">|=</operator> <literal type="number" pos:start="73:26" pos:end="73:31">0xa000</literal></expr>;</expr_stmt> <comment type="block" pos:start="73:34" pos:end="73:49">/* ERR | CERR */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:29"><expr pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:23">xmit_pos</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <operator pos:start="75:27" pos:end="75:27">-</operator><literal type="number" pos:start="75:28" pos:end="75:28">1</literal></expr>;</expr_stmt>

            <goto pos:start="77:13" pos:end="77:24">goto <name pos:start="77:18" pos:end="77:23">txdone</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:28">(<expr pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:23">xmit_pos</name></name> <operator pos:start="83:25" pos:end="83:25">&lt;</operator> <literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>)</condition> <block pos:start="83:30" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:24">

            <goto pos:start="85:13" pos:end="85:24">goto <name pos:start="85:18" pos:end="85:23">txdone</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:56"><expr pos:start="91:9" pos:end="91:55"><name pos:start="91:9" pos:end="91:12">bcnt</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <literal type="number" pos:start="91:16" pos:end="91:21">4096</literal> <operator pos:start="91:21" pos:end="91:21">-</operator> <call pos:start="91:23" pos:end="91:55"><name pos:start="91:23" pos:end="91:31">GET_FIELD</name><argument_list pos:start="91:32" pos:end="91:55">(<argument pos:start="91:33" pos:end="91:42"><expr pos:start="91:33" pos:end="91:42"><name pos:start="91:33" pos:end="91:42"><name pos:start="91:33" pos:end="91:35">tmd</name><operator pos:start="91:36" pos:end="91:36">.</operator><name pos:start="91:37" pos:end="91:42">length</name></name></expr></argument>, <argument pos:start="91:45" pos:end="91:48"><expr pos:start="91:45" pos:end="91:48"><name pos:start="91:45" pos:end="91:48">TMDL</name></expr></argument>, <argument pos:start="91:51" pos:end="91:54"><expr pos:start="91:51" pos:end="91:54"><name pos:start="91:51" pos:end="91:54">BCNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="95:9" pos:end="97:49">/* if multi-tmd packet outsizes s-&gt;buffer then skip it silently.

           Note: this is not what real hw does */</comment>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:51">(<expr pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:23"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:23">xmit_pos</name></name> <operator pos:start="99:25" pos:end="99:25">+</operator> <name pos:start="99:27" pos:end="99:30">bcnt</name> <operator pos:start="99:32" pos:end="99:32">&gt;</operator> <sizeof pos:start="99:34" pos:end="99:50">sizeof<argument_list pos:start="99:40" pos:end="99:50">(<argument pos:start="99:41" pos:end="99:49"><expr pos:start="99:41" pos:end="99:49"><name pos:start="99:41" pos:end="99:49"><name pos:start="99:41" pos:end="99:41">s</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:49">buffer</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="99:53" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:24">

            <expr_stmt pos:start="101:13" pos:end="101:29"><expr pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:23">xmit_pos</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <operator pos:start="101:27" pos:end="101:27">-</operator><literal type="number" pos:start="101:28" pos:end="101:28">1</literal></expr>;</expr_stmt>

            <goto pos:start="103:13" pos:end="103:24">goto <name pos:start="103:18" pos:end="103:23">txdone</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="109:9" pos:end="111:69"><expr pos:start="109:9" pos:end="111:68"><call pos:start="109:9" pos:end="111:68"><name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:24">phys_mem_read</name></name><argument_list pos:start="109:25" pos:end="111:68">(<argument pos:start="109:26" pos:end="109:38"><expr pos:start="109:26" pos:end="109:38"><name pos:start="109:26" pos:end="109:38"><name pos:start="109:26" pos:end="109:26">s</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:38">dma_opaque</name></name></expr></argument>, <argument pos:start="109:41" pos:end="109:62"><expr pos:start="109:41" pos:end="109:62"><call pos:start="109:41" pos:end="109:62"><name pos:start="109:41" pos:end="109:48">PHYSADDR</name><argument_list pos:start="109:49" pos:end="109:62">(<argument pos:start="109:50" pos:end="109:50"><expr pos:start="109:50" pos:end="109:50"><name pos:start="109:50" pos:end="109:50">s</name></expr></argument>, <argument pos:start="109:53" pos:end="109:61"><expr pos:start="109:53" pos:end="109:61"><name pos:start="109:53" pos:end="109:61"><name pos:start="109:53" pos:end="109:55">tmd</name><operator pos:start="109:56" pos:end="109:56">.</operator><name pos:start="109:57" pos:end="109:61">tbadr</name></name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="111:26" pos:end="111:48"><expr pos:start="111:26" pos:end="111:48"><name pos:start="111:26" pos:end="111:34"><name pos:start="111:26" pos:end="111:26">s</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:34">buffer</name></name> <operator pos:start="111:36" pos:end="111:36">+</operator> <name pos:start="111:38" pos:end="111:48"><name pos:start="111:38" pos:end="111:38">s</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:48">xmit_pos</name></name></expr></argument>, <argument pos:start="111:51" pos:end="111:54"><expr pos:start="111:51" pos:end="111:54"><name pos:start="111:51" pos:end="111:54">bcnt</name></expr></argument>, <argument pos:start="111:57" pos:end="111:67"><expr pos:start="111:57" pos:end="111:67"><call pos:start="111:57" pos:end="111:67"><name pos:start="111:57" pos:end="111:64">CSR_BSWP</name><argument_list pos:start="111:65" pos:end="111:67">(<argument pos:start="111:66" pos:end="111:66"><expr pos:start="111:66" pos:end="111:66"><name pos:start="111:66" pos:end="111:66">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:19"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:19">xmit_pos</name></name> <operator pos:start="113:21" pos:end="113:22">+=</operator> <name pos:start="113:24" pos:end="113:27">bcnt</name></expr>;</expr_stmt>

        

        <if_stmt pos:start="117:9" pos:end="126:0"><if pos:start="117:9" pos:end="126:0">if <condition pos:start="117:12" pos:end="117:46">(<expr pos:start="117:13" pos:end="117:45"><operator pos:start="117:13" pos:end="117:13">!</operator><call pos:start="117:14" pos:end="117:45"><name pos:start="117:14" pos:end="117:22">GET_FIELD</name><argument_list pos:start="117:23" pos:end="117:45">(<argument pos:start="117:24" pos:end="117:33"><expr pos:start="117:24" pos:end="117:33"><name pos:start="117:24" pos:end="117:33"><name pos:start="117:24" pos:end="117:26">tmd</name><operator pos:start="117:27" pos:end="117:27">.</operator><name pos:start="117:28" pos:end="117:33">status</name></name></expr></argument>, <argument pos:start="117:36" pos:end="117:39"><expr pos:start="117:36" pos:end="117:39"><name pos:start="117:36" pos:end="117:39">TMDS</name></expr></argument>, <argument pos:start="117:42" pos:end="117:44"><expr pos:start="117:42" pos:end="117:44"><name pos:start="117:42" pos:end="117:44">ENP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:48" pos:end="126:0">{<block_content pos:start="119:13" pos:end="119:24">

            <goto pos:start="119:13" pos:end="119:24">goto <name pos:start="119:18" pos:end="119:23">txdone</name>;</goto>

        </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="125:1" pos:end="125:18">#<cpp:directive pos:start="125:2" pos:end="125:6">ifdef</cpp:directive> <name pos:start="125:8" pos:end="125:18">PCNET_DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="127:9" pos:end="130:0"><expr pos:start="127:9" pos:end="127:55"><call pos:start="127:9" pos:end="127:55"><name pos:start="127:9" pos:end="127:14">printf</name><argument_list pos:start="127:15" pos:end="127:55">(<argument pos:start="127:16" pos:end="127:41"><expr pos:start="127:16" pos:end="127:41"><literal type="string" pos:start="127:16" pos:end="127:41">"pcnet_transmit size=%d\n"</literal></expr></argument>, <argument pos:start="127:44" pos:end="127:54"><expr pos:start="127:44" pos:end="127:54"><name pos:start="127:44" pos:end="127:54"><name pos:start="127:44" pos:end="127:44">s</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:54">xmit_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="131:9" pos:end="153:9"><if pos:start="131:9" pos:end="143:9">if <condition pos:start="131:12" pos:end="131:24">(<expr pos:start="131:13" pos:end="131:23"><call pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:20">CSR_LOOP</name><argument_list pos:start="131:21" pos:end="131:23">(<argument pos:start="131:22" pos:end="131:22"><expr pos:start="131:22" pos:end="131:22"><name pos:start="131:22" pos:end="131:22">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:26" pos:end="143:9">{<block_content pos:start="133:13" pos:end="141:28">

            <if_stmt pos:start="133:13" pos:end="135:62"><if pos:start="133:13" pos:end="135:62">if <condition pos:start="133:16" pos:end="133:36">(<expr pos:start="133:17" pos:end="133:35"><call pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:27">BCR_SWSTYLE</name><argument_list pos:start="133:28" pos:end="133:30">(<argument pos:start="133:29" pos:end="133:29"><expr pos:start="133:29" pos:end="133:29"><name pos:start="133:29" pos:end="133:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="133:32" pos:end="133:33">==</operator> <literal type="number" pos:start="133:35" pos:end="133:35">1</literal></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:62"><block_content pos:start="135:17" pos:end="135:62">

                <expr_stmt pos:start="135:17" pos:end="135:62"><expr pos:start="135:17" pos:end="135:61"><name pos:start="135:17" pos:end="135:23">add_crc</name> <operator pos:start="135:25" pos:end="135:25">=</operator> <operator pos:start="135:27" pos:end="135:27">!</operator><call pos:start="135:28" pos:end="135:61"><name pos:start="135:28" pos:end="135:36">GET_FIELD</name><argument_list pos:start="135:37" pos:end="135:61">(<argument pos:start="135:38" pos:end="135:47"><expr pos:start="135:38" pos:end="135:47"><name pos:start="135:38" pos:end="135:47"><name pos:start="135:38" pos:end="135:40">tmd</name><operator pos:start="135:41" pos:end="135:41">.</operator><name pos:start="135:42" pos:end="135:47">status</name></name></expr></argument>, <argument pos:start="135:50" pos:end="135:53"><expr pos:start="135:50" pos:end="135:53"><name pos:start="135:50" pos:end="135:53">TMDS</name></expr></argument>, <argument pos:start="135:56" pos:end="135:60"><expr pos:start="135:56" pos:end="135:60"><name pos:start="135:56" pos:end="135:60">NOFCS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:78"><expr pos:start="137:13" pos:end="137:77"><name pos:start="137:13" pos:end="137:23"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:23">looptest</name></name> <operator pos:start="137:25" pos:end="137:25">=</operator> <ternary pos:start="137:27" pos:end="137:77"><condition pos:start="137:27" pos:end="137:35"><expr pos:start="137:27" pos:end="137:33"><name pos:start="137:27" pos:end="137:33">add_crc</name></expr> ?</condition><then pos:start="137:37" pos:end="137:54"> <expr pos:start="137:37" pos:end="137:54"><name pos:start="137:37" pos:end="137:54">PCNET_LOOPTEST_CRC</name></expr> </then><else pos:start="137:56" pos:end="137:77">: <expr pos:start="137:58" pos:end="137:77"><name pos:start="137:58" pos:end="137:77">PCNET_LOOPTEST_NOCRC</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:74"><expr pos:start="139:13" pos:end="139:73"><call pos:start="139:13" pos:end="139:73"><name pos:start="139:13" pos:end="139:25">pcnet_receive</name><argument_list pos:start="139:26" pos:end="139:73">(<argument pos:start="139:27" pos:end="139:48"><expr pos:start="139:27" pos:end="139:48"><call pos:start="139:27" pos:end="139:48"><name pos:start="139:27" pos:end="139:40">qemu_get_queue</name><argument_list pos:start="139:41" pos:end="139:48">(<argument pos:start="139:42" pos:end="139:47"><expr pos:start="139:42" pos:end="139:47"><name pos:start="139:42" pos:end="139:47"><name pos:start="139:42" pos:end="139:42">s</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:47">nic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:51" pos:end="139:59"><expr pos:start="139:51" pos:end="139:59"><name pos:start="139:51" pos:end="139:59"><name pos:start="139:51" pos:end="139:51">s</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:59">buffer</name></name></expr></argument>, <argument pos:start="139:62" pos:end="139:72"><expr pos:start="139:62" pos:end="139:72"><name pos:start="139:62" pos:end="139:72"><name pos:start="139:62" pos:end="139:62">s</name><operator pos:start="139:63" pos:end="139:64">-&gt;</operator><name pos:start="139:65" pos:end="139:72">xmit_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:23"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:23">looptest</name></name> <operator pos:start="141:25" pos:end="141:25">=</operator> <literal type="number" pos:start="141:27" pos:end="141:27">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="143:11" pos:end="153:9">else <block pos:start="143:16" pos:end="153:9">{<block_content pos:start="145:13" pos:end="151:13">

            <if_stmt pos:start="145:13" pos:end="151:13"><if pos:start="145:13" pos:end="151:13">if <condition pos:start="145:16" pos:end="145:23">(<expr pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:22">nic</name></name></expr>)</condition> <block pos:start="145:25" pos:end="151:13">{<block_content pos:start="147:17" pos:end="149:46">

                <expr_stmt pos:start="147:17" pos:end="149:46"><expr pos:start="147:17" pos:end="149:45"><call pos:start="147:17" pos:end="149:45"><name pos:start="147:17" pos:end="147:32">qemu_send_packet</name><argument_list pos:start="147:33" pos:end="149:45">(<argument pos:start="147:34" pos:end="147:55"><expr pos:start="147:34" pos:end="147:55"><call pos:start="147:34" pos:end="147:55"><name pos:start="147:34" pos:end="147:47">qemu_get_queue</name><argument_list pos:start="147:48" pos:end="147:55">(<argument pos:start="147:49" pos:end="147:54"><expr pos:start="147:49" pos:end="147:54"><name pos:start="147:49" pos:end="147:54"><name pos:start="147:49" pos:end="147:49">s</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:54">nic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:58" pos:end="147:66"><expr pos:start="147:58" pos:end="147:66"><name pos:start="147:58" pos:end="147:66"><name pos:start="147:58" pos:end="147:58">s</name><operator pos:start="147:59" pos:end="147:60">-&gt;</operator><name pos:start="147:61" pos:end="147:66">buffer</name></name></expr></argument>,

                                 <argument pos:start="149:34" pos:end="149:44"><expr pos:start="149:34" pos:end="149:44"><name pos:start="149:34" pos:end="149:44"><name pos:start="149:34" pos:end="149:34">s</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:44">xmit_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:29"><expr pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:17"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:14">csr</name><index pos:start="157:15" pos:end="157:17">[<expr pos:start="157:16" pos:end="157:16"><literal type="number" pos:start="157:16" pos:end="157:16">0</literal></expr>]</index></name> <operator pos:start="157:19" pos:end="157:20">&amp;=</operator> <operator pos:start="157:22" pos:end="157:22">~</operator><literal type="number" pos:start="157:23" pos:end="157:28">0x0008</literal></expr>;</expr_stmt>   <comment type="block" pos:start="157:33" pos:end="157:48">/* clear TDMD */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:28"><expr pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:14">csr</name><index pos:start="159:15" pos:end="159:17">[<expr pos:start="159:16" pos:end="159:16"><literal type="number" pos:start="159:16" pos:end="159:16">4</literal></expr>]</index></name> <operator pos:start="159:19" pos:end="159:20">|=</operator> <literal type="number" pos:start="159:22" pos:end="159:27">0x0004</literal></expr>;</expr_stmt>    <comment type="block" pos:start="159:33" pos:end="159:48">/* set TXSTRT */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:25"><expr pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:19">xmit_pos</name></name> <operator pos:start="161:21" pos:end="161:21">=</operator> <operator pos:start="161:23" pos:end="161:23">-</operator><literal type="number" pos:start="161:24" pos:end="161:24">1</literal></expr>;</expr_stmt>



    <label pos:start="165:5" pos:end="165:11"><name pos:start="165:5" pos:end="165:10">txdone</name>:</label>

        <expr_stmt pos:start="167:9" pos:end="167:45"><expr pos:start="167:9" pos:end="167:44"><call pos:start="167:9" pos:end="167:44"><name pos:start="167:9" pos:end="167:17">SET_FIELD</name><argument_list pos:start="167:18" pos:end="167:44">(<argument pos:start="167:19" pos:end="167:29"><expr pos:start="167:19" pos:end="167:29"><operator pos:start="167:19" pos:end="167:19">&amp;</operator><name pos:start="167:20" pos:end="167:29"><name pos:start="167:20" pos:end="167:22">tmd</name><operator pos:start="167:23" pos:end="167:23">.</operator><name pos:start="167:24" pos:end="167:29">status</name></name></expr></argument>, <argument pos:start="167:32" pos:end="167:35"><expr pos:start="167:32" pos:end="167:35"><name pos:start="167:32" pos:end="167:35">TMDS</name></expr></argument>, <argument pos:start="167:38" pos:end="167:40"><expr pos:start="167:38" pos:end="167:40"><name pos:start="167:38" pos:end="167:40">OWN</name></expr></argument>, <argument pos:start="167:43" pos:end="167:43"><expr pos:start="167:43" pos:end="167:43"><literal type="number" pos:start="167:43" pos:end="167:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:48"><expr pos:start="169:9" pos:end="169:47"><call pos:start="169:9" pos:end="169:47"><name pos:start="169:9" pos:end="169:16">TMDSTORE</name><argument_list pos:start="169:17" pos:end="169:47">(<argument pos:start="169:18" pos:end="169:21"><expr pos:start="169:18" pos:end="169:21"><operator pos:start="169:18" pos:end="169:18">&amp;</operator><name pos:start="169:19" pos:end="169:21">tmd</name></expr></argument>, <argument pos:start="169:24" pos:end="169:46"><expr pos:start="169:24" pos:end="169:46"><call pos:start="169:24" pos:end="169:46"><name pos:start="169:24" pos:end="169:31">PHYSADDR</name><argument_list pos:start="169:32" pos:end="169:46">(<argument pos:start="169:33" pos:end="169:33"><expr pos:start="169:33" pos:end="169:33"><name pos:start="169:33" pos:end="169:33">s</name></expr></argument>,<argument pos:start="169:35" pos:end="169:45"><expr pos:start="169:35" pos:end="169:45"><call pos:start="169:35" pos:end="169:45"><name pos:start="169:35" pos:end="169:42">CSR_CXDA</name><argument_list pos:start="169:43" pos:end="169:45">(<argument pos:start="169:44" pos:end="169:44"><expr pos:start="169:44" pos:end="169:44"><name pos:start="169:44" pos:end="169:44">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="173:32"><if pos:start="171:9" pos:end="173:32">if <condition pos:start="171:12" pos:end="171:86">(<expr pos:start="171:13" pos:end="171:85"><operator pos:start="171:13" pos:end="171:13">!</operator><call pos:start="171:14" pos:end="171:27"><name pos:start="171:14" pos:end="171:24">CSR_TOKINTD</name><argument_list pos:start="171:25" pos:end="171:27">(<argument pos:start="171:26" pos:end="171:26"><expr pos:start="171:26" pos:end="171:26"><name pos:start="171:26" pos:end="171:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="171:29" pos:end="171:30">||</operator> <operator pos:start="171:32" pos:end="171:32">(</operator><call pos:start="171:33" pos:end="171:46"><name pos:start="171:33" pos:end="171:43">CSR_LTINTEN</name><argument_list pos:start="171:44" pos:end="171:46">(<argument pos:start="171:45" pos:end="171:45"><expr pos:start="171:45" pos:end="171:45"><name pos:start="171:45" pos:end="171:45">s</name></expr></argument>)</argument_list></call> <operator pos:start="171:48" pos:end="171:49">&amp;&amp;</operator> <call pos:start="171:51" pos:end="171:84"><name pos:start="171:51" pos:end="171:59">GET_FIELD</name><argument_list pos:start="171:60" pos:end="171:84">(<argument pos:start="171:61" pos:end="171:70"><expr pos:start="171:61" pos:end="171:70"><name pos:start="171:61" pos:end="171:70"><name pos:start="171:61" pos:end="171:63">tmd</name><operator pos:start="171:64" pos:end="171:64">.</operator><name pos:start="171:65" pos:end="171:70">status</name></name></expr></argument>, <argument pos:start="171:73" pos:end="171:76"><expr pos:start="171:73" pos:end="171:76"><name pos:start="171:73" pos:end="171:76">TMDS</name></expr></argument>, <argument pos:start="171:79" pos:end="171:83"><expr pos:start="171:79" pos:end="171:83"><name pos:start="171:79" pos:end="171:83">LTINT</name></expr></argument>)</argument_list></call><operator pos:start="171:85" pos:end="171:85">)</operator></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:32"><block_content pos:start="173:13" pos:end="173:32">

            <expr_stmt pos:start="173:13" pos:end="173:32"><expr pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:18">csr</name><index pos:start="173:19" pos:end="173:21">[<expr pos:start="173:20" pos:end="173:20"><literal type="number" pos:start="173:20" pos:end="173:20">0</literal></expr>]</index></name> <operator pos:start="173:23" pos:end="173:24">|=</operator> <literal type="number" pos:start="173:26" pos:end="173:31">0x0200</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>    <comment type="block" pos:start="173:37" pos:end="173:50">/* set TINT */</comment>



        <if_stmt pos:start="177:9" pos:end="183:27"><if pos:start="177:9" pos:end="179:40">if <condition pos:start="177:12" pos:end="177:28">(<expr pos:start="177:13" pos:end="177:27"><call pos:start="177:13" pos:end="177:24"><name pos:start="177:13" pos:end="177:21">CSR_XMTRC</name><argument_list pos:start="177:22" pos:end="177:24">(<argument pos:start="177:23" pos:end="177:23"><expr pos:start="177:23" pos:end="177:23"><name pos:start="177:23" pos:end="177:23">s</name></expr></argument>)</argument_list></call><operator pos:start="177:25" pos:end="177:26">&lt;=</operator><literal type="number" pos:start="177:27" pos:end="177:27">1</literal></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:40"><block_content pos:start="179:13" pos:end="179:40">

            <expr_stmt pos:start="179:13" pos:end="179:40"><expr pos:start="179:13" pos:end="179:39"><call pos:start="179:13" pos:end="179:24"><name pos:start="179:13" pos:end="179:21">CSR_XMTRC</name><argument_list pos:start="179:22" pos:end="179:24">(<argument pos:start="179:23" pos:end="179:23"><expr pos:start="179:23" pos:end="179:23"><name pos:start="179:23" pos:end="179:23">s</name></expr></argument>)</argument_list></call> <operator pos:start="179:26" pos:end="179:26">=</operator> <call pos:start="179:28" pos:end="179:39"><name pos:start="179:28" pos:end="179:36">CSR_XMTRL</name><argument_list pos:start="179:37" pos:end="179:39">(<argument pos:start="179:38" pos:end="179:38"><expr pos:start="179:38" pos:end="179:38"><name pos:start="179:38" pos:end="179:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="181:9" pos:end="183:27">else<block type="pseudo" pos:start="183:13" pos:end="183:27"><block_content pos:start="183:13" pos:end="183:27">

            <expr_stmt pos:start="183:13" pos:end="183:27"><expr pos:start="183:13" pos:end="183:26"><call pos:start="183:13" pos:end="183:24"><name pos:start="183:13" pos:end="183:21">CSR_XMTRC</name><argument_list pos:start="183:22" pos:end="183:24">(<argument pos:start="183:23" pos:end="183:23"><expr pos:start="183:23" pos:end="183:23"><name pos:start="183:23" pos:end="183:23">s</name></expr></argument>)</argument_list></call><operator pos:start="183:25" pos:end="183:26">--</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="185:9" pos:end="187:25"><if pos:start="185:9" pos:end="187:25">if <condition pos:start="185:12" pos:end="185:20">(<expr pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:17">count</name><operator pos:start="185:18" pos:end="185:19">--</operator></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:25"><block_content pos:start="187:13" pos:end="187:25">

            <goto pos:start="187:13" pos:end="187:25">goto <name pos:start="187:18" pos:end="187:24">txagain</name>;</goto></block_content></block></if></if_stmt>



    </block_content>}</block></if> <if type="elseif" pos:start="191:7" pos:end="221:5">else

    if <condition pos:start="193:8" pos:end="193:25">(<expr pos:start="193:9" pos:end="193:24"><name pos:start="193:9" pos:end="193:19"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:19">xmit_pos</name></name> <operator pos:start="193:21" pos:end="193:22">&gt;=</operator> <literal type="number" pos:start="193:24" pos:end="193:24">0</literal></expr>)</condition> <block pos:start="193:27" pos:end="221:5">{<block_content pos:start="195:9" pos:end="219:23">

        <decl_stmt pos:start="195:9" pos:end="195:29"><decl pos:start="195:9" pos:end="195:28"><type pos:start="195:9" pos:end="195:24"><name pos:start="195:9" pos:end="195:24"><name pos:start="195:9" pos:end="195:14">struct</name> <name pos:start="195:16" pos:end="195:24">pcnet_TMD</name></name></type> <name pos:start="195:26" pos:end="195:28">tmd</name></decl>;</decl_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:33"><expr pos:start="197:9" pos:end="197:32"><call pos:start="197:9" pos:end="197:32"><name pos:start="197:9" pos:end="197:15">TMDLOAD</name><argument_list pos:start="197:16" pos:end="197:32">(<argument pos:start="197:17" pos:end="197:20"><expr pos:start="197:17" pos:end="197:20"><operator pos:start="197:17" pos:end="197:17">&amp;</operator><name pos:start="197:18" pos:end="197:20">tmd</name></expr></argument>, <argument pos:start="197:23" pos:end="197:31"><expr pos:start="197:23" pos:end="197:31"><name pos:start="197:23" pos:end="197:31">xmit_cxda</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:44"><expr pos:start="199:9" pos:end="199:43"><call pos:start="199:9" pos:end="199:43"><name pos:start="199:9" pos:end="199:17">SET_FIELD</name><argument_list pos:start="199:18" pos:end="199:43">(<argument pos:start="199:19" pos:end="199:27"><expr pos:start="199:19" pos:end="199:27"><operator pos:start="199:19" pos:end="199:19">&amp;</operator><name pos:start="199:20" pos:end="199:27"><name pos:start="199:20" pos:end="199:22">tmd</name><operator pos:start="199:23" pos:end="199:23">.</operator><name pos:start="199:24" pos:end="199:27">misc</name></name></expr></argument>, <argument pos:start="199:30" pos:end="199:33"><expr pos:start="199:30" pos:end="199:33"><name pos:start="199:30" pos:end="199:33">TMDM</name></expr></argument>, <argument pos:start="199:36" pos:end="199:39"><expr pos:start="199:36" pos:end="199:39"><name pos:start="199:36" pos:end="199:39">BUFF</name></expr></argument>, <argument pos:start="199:42" pos:end="199:42"><expr pos:start="199:42" pos:end="199:42"><literal type="number" pos:start="199:42" pos:end="199:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:44"><expr pos:start="201:9" pos:end="201:43"><call pos:start="201:9" pos:end="201:43"><name pos:start="201:9" pos:end="201:17">SET_FIELD</name><argument_list pos:start="201:18" pos:end="201:43">(<argument pos:start="201:19" pos:end="201:27"><expr pos:start="201:19" pos:end="201:27"><operator pos:start="201:19" pos:end="201:19">&amp;</operator><name pos:start="201:20" pos:end="201:27"><name pos:start="201:20" pos:end="201:22">tmd</name><operator pos:start="201:23" pos:end="201:23">.</operator><name pos:start="201:24" pos:end="201:27">misc</name></name></expr></argument>, <argument pos:start="201:30" pos:end="201:33"><expr pos:start="201:30" pos:end="201:33"><name pos:start="201:30" pos:end="201:33">TMDM</name></expr></argument>, <argument pos:start="201:36" pos:end="201:39"><expr pos:start="201:36" pos:end="201:39"><name pos:start="201:36" pos:end="201:39">UFLO</name></expr></argument>, <argument pos:start="201:42" pos:end="201:42"><expr pos:start="201:42" pos:end="201:42"><literal type="number" pos:start="201:42" pos:end="201:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:45"><expr pos:start="203:9" pos:end="203:44"><call pos:start="203:9" pos:end="203:44"><name pos:start="203:9" pos:end="203:17">SET_FIELD</name><argument_list pos:start="203:18" pos:end="203:44">(<argument pos:start="203:19" pos:end="203:29"><expr pos:start="203:19" pos:end="203:29"><operator pos:start="203:19" pos:end="203:19">&amp;</operator><name pos:start="203:20" pos:end="203:29"><name pos:start="203:20" pos:end="203:22">tmd</name><operator pos:start="203:23" pos:end="203:23">.</operator><name pos:start="203:24" pos:end="203:29">status</name></name></expr></argument>, <argument pos:start="203:32" pos:end="203:35"><expr pos:start="203:32" pos:end="203:35"><name pos:start="203:32" pos:end="203:35">TMDS</name></expr></argument>, <argument pos:start="203:38" pos:end="203:40"><expr pos:start="203:38" pos:end="203:40"><name pos:start="203:38" pos:end="203:40">ERR</name></expr></argument>, <argument pos:start="203:43" pos:end="203:43"><expr pos:start="203:43" pos:end="203:43"><literal type="number" pos:start="203:43" pos:end="203:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:45"><expr pos:start="205:9" pos:end="205:44"><call pos:start="205:9" pos:end="205:44"><name pos:start="205:9" pos:end="205:17">SET_FIELD</name><argument_list pos:start="205:18" pos:end="205:44">(<argument pos:start="205:19" pos:end="205:29"><expr pos:start="205:19" pos:end="205:29"><operator pos:start="205:19" pos:end="205:19">&amp;</operator><name pos:start="205:20" pos:end="205:29"><name pos:start="205:20" pos:end="205:22">tmd</name><operator pos:start="205:23" pos:end="205:23">.</operator><name pos:start="205:24" pos:end="205:29">status</name></name></expr></argument>, <argument pos:start="205:32" pos:end="205:35"><expr pos:start="205:32" pos:end="205:35"><name pos:start="205:32" pos:end="205:35">TMDS</name></expr></argument>, <argument pos:start="205:38" pos:end="205:40"><expr pos:start="205:38" pos:end="205:40"><name pos:start="205:38" pos:end="205:40">OWN</name></expr></argument>, <argument pos:start="205:43" pos:end="205:43"><expr pos:start="205:43" pos:end="205:43"><literal type="number" pos:start="205:43" pos:end="205:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:34"><expr pos:start="207:9" pos:end="207:33"><call pos:start="207:9" pos:end="207:33"><name pos:start="207:9" pos:end="207:16">TMDSTORE</name><argument_list pos:start="207:17" pos:end="207:33">(<argument pos:start="207:18" pos:end="207:21"><expr pos:start="207:18" pos:end="207:21"><operator pos:start="207:18" pos:end="207:18">&amp;</operator><name pos:start="207:19" pos:end="207:21">tmd</name></expr></argument>, <argument pos:start="207:24" pos:end="207:32"><expr pos:start="207:24" pos:end="207:32"><name pos:start="207:24" pos:end="207:32">xmit_cxda</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:28"><expr pos:start="209:9" pos:end="209:27"><name pos:start="209:9" pos:end="209:17"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:14">csr</name><index pos:start="209:15" pos:end="209:17">[<expr pos:start="209:16" pos:end="209:16"><literal type="number" pos:start="209:16" pos:end="209:16">0</literal></expr>]</index></name> <operator pos:start="209:19" pos:end="209:20">|=</operator> <literal type="number" pos:start="209:22" pos:end="209:27">0x0200</literal></expr>;</expr_stmt>    <comment type="block" pos:start="209:33" pos:end="209:46">/* set TINT */</comment>

        <if_stmt pos:start="211:9" pos:end="219:23"><if pos:start="211:9" pos:end="215:9">if <condition pos:start="211:12" pos:end="211:28">(<expr pos:start="211:13" pos:end="211:27"><operator pos:start="211:13" pos:end="211:13">!</operator><call pos:start="211:14" pos:end="211:27"><name pos:start="211:14" pos:end="211:24">CSR_DXSUFLO</name><argument_list pos:start="211:25" pos:end="211:27">(<argument pos:start="211:26" pos:end="211:26"><expr pos:start="211:26" pos:end="211:26"><name pos:start="211:26" pos:end="211:26">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="211:30" pos:end="215:9">{<block_content pos:start="213:13" pos:end="213:33">

            <expr_stmt pos:start="213:13" pos:end="213:33"><expr pos:start="213:13" pos:end="213:32"><name pos:start="213:13" pos:end="213:21"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:18">csr</name><index pos:start="213:19" pos:end="213:21">[<expr pos:start="213:20" pos:end="213:20"><literal type="number" pos:start="213:20" pos:end="213:20">0</literal></expr>]</index></name> <operator pos:start="213:23" pos:end="213:24">&amp;=</operator> <operator pos:start="213:26" pos:end="213:26">~</operator><literal type="number" pos:start="213:27" pos:end="213:32">0x0010</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="215:11" pos:end="219:23">else

        if <condition pos:start="217:12" pos:end="217:20">(<expr pos:start="217:13" pos:end="217:19"><name pos:start="217:13" pos:end="217:17">count</name><operator pos:start="217:18" pos:end="217:19">--</operator></expr>)</condition><block type="pseudo" pos:start="219:11" pos:end="219:23"><block_content pos:start="219:11" pos:end="219:23">

          <goto pos:start="219:11" pos:end="219:23">goto <name pos:start="219:16" pos:end="219:22">txagain</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:19"><expr pos:start="225:5" pos:end="225:18"><name pos:start="225:5" pos:end="225:14"><name pos:start="225:5" pos:end="225:5">s</name><operator pos:start="225:6" pos:end="225:7">-&gt;</operator><name pos:start="225:8" pos:end="225:14">tx_busy</name></name> <operator pos:start="225:16" pos:end="225:16">=</operator> <literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
