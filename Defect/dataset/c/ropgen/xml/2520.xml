<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2520.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">test_submit</name><parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:35">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18">WorkerTestData</name></type> <name pos:start="5:20" pos:end="5:23">data</name> <init pos:start="5:25" pos:end="5:36">= <expr pos:start="5:27" pos:end="5:36"><block pos:start="5:27" pos:end="5:36">{ <expr pos:start="5:29" pos:end="5:34"><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:30">n</name> <operator pos:start="5:32" pos:end="5:32">=</operator> <literal type="number" pos:start="5:34" pos:end="5:34">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:41"><expr pos:start="7:5" pos:end="7:40"><call pos:start="7:5" pos:end="7:40"><name pos:start="7:5" pos:end="7:22">thread_pool_submit</name><argument_list pos:start="7:23" pos:end="7:40">(<argument pos:start="7:24" pos:end="7:32"><expr pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:32">worker_cb</name></expr></argument>, <argument pos:start="7:35" pos:end="7:39"><expr pos:start="7:35" pos:end="7:39"><operator pos:start="7:35" pos:end="7:35">&amp;</operator><name pos:start="7:36" pos:end="7:39">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:21"><expr pos:start="9:5" pos:end="9:20"><call pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">qemu_aio_flush</name><argument_list pos:start="9:19" pos:end="9:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><call pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:19">g_assert_cmpint</name><argument_list pos:start="11:20" pos:end="11:34">(<argument pos:start="11:21" pos:end="11:26"><expr pos:start="11:21" pos:end="11:26"><name pos:start="11:21" pos:end="11:26"><name pos:start="11:21" pos:end="11:24">data</name><operator pos:start="11:25" pos:end="11:25">.</operator><name pos:start="11:26" pos:end="11:26">n</name></name></expr></argument>, <argument pos:start="11:29" pos:end="11:30"><expr pos:start="11:29" pos:end="11:30"><operator pos:start="11:29" pos:end="11:30">==</operator></expr></argument>, <argument pos:start="11:33" pos:end="11:33"><expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
