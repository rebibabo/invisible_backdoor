<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7013.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">test_io_channel_unix</name><parameter_list pos:start="1:33" pos:end="1:44">(<parameter pos:start="1:34" pos:end="1:43"><decl pos:start="1:34" pos:end="1:43"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">bool</name></type> <name pos:start="1:39" pos:end="1:43">async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:24">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SocketAddress</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:30">listen_addr</name> <init pos:start="5:32" pos:end="5:57">= <expr pos:start="5:34" pos:end="5:57"><call pos:start="5:34" pos:end="5:57"><name pos:start="5:34" pos:end="5:39">g_new0</name><argument_list pos:start="5:40" pos:end="5:57">(<argument pos:start="5:41" pos:end="5:53"><expr pos:start="5:41" pos:end="5:53"><name pos:start="5:41" pos:end="5:53">SocketAddress</name></expr></argument>, <argument pos:start="5:56" pos:end="5:56"><expr pos:start="5:56" pos:end="5:56"><literal type="number" pos:start="5:56" pos:end="5:56">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SocketAddress</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:31">connect_addr</name> <init pos:start="7:33" pos:end="7:58">= <expr pos:start="7:35" pos:end="7:58"><call pos:start="7:35" pos:end="7:58"><name pos:start="7:35" pos:end="7:40">g_new0</name><argument_list pos:start="7:41" pos:end="7:58">(<argument pos:start="7:42" pos:end="7:54"><expr pos:start="7:42" pos:end="7:54"><name pos:start="7:42" pos:end="7:54">SocketAddress</name></expr></argument>, <argument pos:start="7:57" pos:end="7:57"><expr pos:start="7:57" pos:end="7:57"><literal type="number" pos:start="7:57" pos:end="7:57">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="11:1" pos:end="11:49">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:19">TEST_SOCKET</name></cpp:macro> <cpp:value pos:start="11:21" pos:end="11:49">"test-io-channel-socket.sock"</cpp:value></cpp:define>

    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:15">listen_addr</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:21">type</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:48">SOCKET_ADDRESS_KIND_UNIX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:57"><expr pos:start="15:5" pos:end="15:56"><name pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:15">listen_addr</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:18">u</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:25">q_unix</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <call pos:start="15:29" pos:end="15:56"><name pos:start="15:29" pos:end="15:34">g_new0</name><argument_list pos:start="15:35" pos:end="15:56">(<argument pos:start="15:36" pos:end="15:52"><expr pos:start="15:36" pos:end="15:52"><name pos:start="15:36" pos:end="15:52">UnixSocketAddress</name></expr></argument>, <argument pos:start="15:55" pos:end="15:55"><expr pos:start="15:55" pos:end="15:55"><literal type="number" pos:start="15:55" pos:end="15:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:56"><expr pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:15">listen_addr</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:18">u</name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:25">q_unix</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">path</name></name> <operator pos:start="17:33" pos:end="17:33">=</operator> <call pos:start="17:35" pos:end="17:55"><name pos:start="17:35" pos:end="17:42">g_strdup</name><argument_list pos:start="17:43" pos:end="17:55">(<argument pos:start="17:44" pos:end="17:54"><expr pos:start="17:44" pos:end="17:54"><name pos:start="17:44" pos:end="17:54">TEST_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:16">connect_addr</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:22">type</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <name pos:start="21:26" pos:end="21:49">SOCKET_ADDRESS_KIND_UNIX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:16">connect_addr</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:19">u</name><operator pos:start="23:20" pos:end="23:20">.</operator><name pos:start="23:21" pos:end="23:26">q_unix</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <call pos:start="23:30" pos:end="23:57"><name pos:start="23:30" pos:end="23:35">g_new0</name><argument_list pos:start="23:36" pos:end="23:57">(<argument pos:start="23:37" pos:end="23:53"><expr pos:start="23:37" pos:end="23:53"><name pos:start="23:37" pos:end="23:53">UnixSocketAddress</name></expr></argument>, <argument pos:start="23:56" pos:end="23:56"><expr pos:start="23:56" pos:end="23:56"><literal type="number" pos:start="23:56" pos:end="23:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:57"><expr pos:start="25:5" pos:end="25:56"><name pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:16">connect_addr</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:19">u</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:26">q_unix</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:32">path</name></name> <operator pos:start="25:34" pos:end="25:34">=</operator> <call pos:start="25:36" pos:end="25:56"><name pos:start="25:36" pos:end="25:43">g_strdup</name><argument_list pos:start="25:44" pos:end="25:56">(<argument pos:start="25:45" pos:end="25:55"><expr pos:start="25:45" pos:end="25:55"><name pos:start="25:45" pos:end="25:55">TEST_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:60"><expr pos:start="29:5" pos:end="29:59"><call pos:start="29:5" pos:end="29:59"><name pos:start="29:5" pos:end="29:19">test_io_channel</name><argument_list pos:start="29:20" pos:end="29:59">(<argument pos:start="29:21" pos:end="29:25"><expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:25">async</name></expr></argument>, <argument pos:start="29:28" pos:end="29:38"><expr pos:start="29:28" pos:end="29:38"><name pos:start="29:28" pos:end="29:38">listen_addr</name></expr></argument>, <argument pos:start="29:41" pos:end="29:52"><expr pos:start="29:41" pos:end="29:52"><name pos:start="29:41" pos:end="29:52">connect_addr</name></expr></argument>, <argument pos:start="29:55" pos:end="29:58"><expr pos:start="29:55" pos:end="29:58"><name pos:start="29:55" pos:end="29:58">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><call pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:27">qapi_free_SocketAddress</name><argument_list pos:start="33:28" pos:end="33:40">(<argument pos:start="33:29" pos:end="33:39"><expr pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:39">listen_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><call pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:27">qapi_free_SocketAddress</name><argument_list pos:start="35:28" pos:end="35:41">(<argument pos:start="35:29" pos:end="35:40"><expr pos:start="35:29" pos:end="35:40"><name pos:start="35:29" pos:end="35:40">connect_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><call pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:10">unlink</name><argument_list pos:start="37:11" pos:end="37:23">(<argument pos:start="37:12" pos:end="37:22"><expr pos:start="37:12" pos:end="37:22"><name pos:start="37:12" pos:end="37:22">TEST_SOCKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
