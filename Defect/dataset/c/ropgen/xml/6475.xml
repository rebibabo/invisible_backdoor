<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6475.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vp3_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, 

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="225:1">{<block_content pos:start="9:5" pos:end="223:20">

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">Vp3DecodeContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">s</name> <init pos:start="9:25" pos:end="9:42">= <expr pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:31">avctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">GetBitContext</name></type> <name pos:start="11:19" pos:end="11:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:22">counter</name> <init pos:start="13:24" pos:end="13:26">= <expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:14">data_size</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:17">init_get_bits</name><argument_list pos:start="21:18" pos:end="21:41">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:21">gb</name></expr></argument>, <argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">buf</name></expr></argument>, <argument pos:start="21:29" pos:end="21:40"><expr pos:start="21:29" pos:end="21:40"><name pos:start="21:29" pos:end="21:36">buf_size</name> <operator pos:start="21:38" pos:end="21:38">*</operator> <literal type="number" pos:start="21:40" pos:end="21:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">keyframe</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:34"><name pos:start="25:19" pos:end="25:26">get_bits</name><argument_list pos:start="25:27" pos:end="25:34">(<argument pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><operator pos:start="25:28" pos:end="25:28">&amp;</operator><name pos:start="25:29" pos:end="25:30">gb</name></expr></argument>, <argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:15">keyframe</name></name> <operator pos:start="27:17" pos:end="27:18">^=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><call pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:13">skip_bits</name><argument_list pos:start="29:14" pos:end="29:21">(<argument pos:start="29:15" pos:end="29:17"><expr pos:start="29:15" pos:end="29:17"><operator pos:start="29:15" pos:end="29:15">&amp;</operator><name pos:start="29:16" pos:end="29:17">gb</name></expr></argument>, <argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:25">last_quality_index</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:44"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:44">quality_index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:20">quality_index</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="33:39"><name pos:start="33:24" pos:end="33:31">get_bits</name><argument_list pos:start="33:32" pos:end="33:39">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:35">gb</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:28"><if pos:start="35:5" pos:end="37:28">if <condition pos:start="35:8" pos:end="35:50">(<expr pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:24">quality_index</name></name> <operator pos:start="35:26" pos:end="35:27">!=</operator> <name pos:start="35:29" pos:end="35:49"><name pos:start="35:29" pos:end="35:29">s</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:49">last_quality_index</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:28"><block_content pos:start="37:9" pos:end="37:28">

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><call pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:24">init_dequantizer</name><argument_list pos:start="37:25" pos:end="37:27">(<argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><name pos:start="37:26" pos:end="37:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:73"><expr pos:start="41:5" pos:end="41:72"><call pos:start="41:5" pos:end="41:72"><name pos:start="41:5" pos:end="41:13">debug_vp3</name><argument_list pos:start="41:14" pos:end="41:72">(<argument pos:start="41:15" pos:end="41:44"><expr pos:start="41:15" pos:end="41:44"><literal type="string" pos:start="41:15" pos:end="41:44">" VP3 frame #%d: Q index = %d"</literal></expr></argument>, <argument pos:start="41:47" pos:end="41:53"><expr pos:start="41:47" pos:end="41:53"><name pos:start="41:47" pos:end="41:53">counter</name></expr></argument>, <argument pos:start="41:56" pos:end="41:71"><expr pos:start="41:56" pos:end="41:71"><name pos:start="41:56" pos:end="41:71"><name pos:start="41:56" pos:end="41:56">s</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:71">quality_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:14"><expr pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:11">counter</name><operator pos:start="43:12" pos:end="43:13">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="105:5"><if pos:start="47:5" pos:end="87:5">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:19">keyframe</name></name></expr>)</condition> <block pos:start="47:22" pos:end="87:5">{<block_content pos:start="49:9" pos:end="83:45">

        <if_stmt pos:start="49:9" pos:end="57:57"><if pos:start="49:9" pos:end="53:59">if <condition pos:start="49:12" pos:end="51:63">(<expr pos:start="49:13" pos:end="51:62"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:36"><name pos:start="49:14" pos:end="49:14">s</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:28">golden_frame</name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:33">data</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr>]</index></name><operator pos:start="49:37" pos:end="49:37">)</operator> <operator pos:start="49:39" pos:end="49:40">&amp;&amp;</operator>

            <operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:34"><name pos:start="51:14" pos:end="51:14">s</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:26">last_frame</name><operator pos:start="51:27" pos:end="51:27">.</operator><name pos:start="51:28" pos:end="51:31">data</name><index pos:start="51:32" pos:end="51:34">[<expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr>]</index></name> <operator pos:start="51:36" pos:end="51:37">==</operator> <name pos:start="51:39" pos:end="51:61"><name pos:start="51:39" pos:end="51:39">s</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:53">golden_frame</name><operator pos:start="51:54" pos:end="51:54">.</operator><name pos:start="51:55" pos:end="51:58">data</name><index pos:start="51:59" pos:end="51:61">[<expr pos:start="51:60" pos:end="51:60"><literal type="number" pos:start="51:60" pos:end="51:60">0</literal></expr>]</index></name><operator pos:start="51:62" pos:end="51:62">)</operator></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:59"><block_content pos:start="53:13" pos:end="53:59">

            <expr_stmt pos:start="53:13" pos:end="53:59"><expr pos:start="53:13" pos:end="53:58"><call pos:start="53:13" pos:end="53:58"><name pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:17">avctx</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:33">release_buffer</name></name><argument_list pos:start="53:34" pos:end="53:58">(<argument pos:start="53:35" pos:end="53:39"><expr pos:start="53:35" pos:end="53:39"><name pos:start="53:35" pos:end="53:39">avctx</name></expr></argument>, <argument pos:start="53:42" pos:end="53:57"><expr pos:start="53:42" pos:end="53:57"><operator pos:start="53:42" pos:end="53:42">&amp;</operator><name pos:start="53:43" pos:end="53:57"><name pos:start="53:43" pos:end="53:43">s</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:57">golden_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="55:9" pos:end="57:57">else if <condition pos:start="55:17" pos:end="55:39">(<expr pos:start="55:18" pos:end="55:38"><name pos:start="55:18" pos:end="55:38"><name pos:start="55:18" pos:end="55:18">s</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:30">last_frame</name><operator pos:start="55:31" pos:end="55:31">.</operator><name pos:start="55:32" pos:end="55:35">data</name><index pos:start="55:36" pos:end="55:38">[<expr pos:start="55:37" pos:end="55:37"><literal type="number" pos:start="55:37" pos:end="55:37">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:57"><block_content pos:start="57:13" pos:end="57:57">

            <expr_stmt pos:start="57:13" pos:end="57:57"><expr pos:start="57:13" pos:end="57:56"><call pos:start="57:13" pos:end="57:56"><name pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:17">avctx</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:33">release_buffer</name></name><argument_list pos:start="57:34" pos:end="57:56">(<argument pos:start="57:35" pos:end="57:39"><expr pos:start="57:35" pos:end="57:39"><name pos:start="57:35" pos:end="57:39">avctx</name></expr></argument>, <argument pos:start="57:42" pos:end="57:55"><expr pos:start="57:42" pos:end="57:55"><operator pos:start="57:42" pos:end="57:42">&amp;</operator><name pos:start="57:43" pos:end="57:55"><name pos:start="57:43" pos:end="57:43">s</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:55">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:23">golden_frame</name><operator pos:start="61:24" pos:end="61:24">.</operator><name pos:start="61:25" pos:end="61:33">reference</name></name> <operator pos:start="61:35" pos:end="61:35">=</operator> <literal type="number" pos:start="61:37" pos:end="61:37">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if<condition pos:start="63:11" pos:end="63:58">(<expr pos:start="63:12" pos:end="63:57"><call pos:start="63:12" pos:end="63:53"><name pos:start="63:12" pos:end="63:28"><name pos:start="63:12" pos:end="63:16">avctx</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:28">get_buffer</name></name><argument_list pos:start="63:29" pos:end="63:53">(<argument pos:start="63:30" pos:end="63:34"><expr pos:start="63:30" pos:end="63:34"><name pos:start="63:30" pos:end="63:34">avctx</name></expr></argument>, <argument pos:start="63:37" pos:end="63:52"><expr pos:start="63:37" pos:end="63:52"><operator pos:start="63:37" pos:end="63:37">&amp;</operator><name pos:start="63:38" pos:end="63:52"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:52">golden_frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:55" pos:end="63:55">&lt;</operator> <literal type="number" pos:start="63:57" pos:end="63:57">0</literal></expr>)</condition> <block pos:start="63:60" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:22">

            <expr_stmt pos:start="65:13" pos:end="65:49"><expr pos:start="65:13" pos:end="65:48"><call pos:start="65:13" pos:end="65:48"><name pos:start="65:13" pos:end="65:18">printf</name><argument_list pos:start="65:19" pos:end="65:48">(<argument pos:start="65:20" pos:end="65:47"><expr pos:start="65:20" pos:end="65:47"><literal type="string" pos:start="65:20" pos:end="65:47">"vp3: get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="73:9" pos:end="73:52">/* golden frame is also the current frame */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:69"><expr pos:start="75:9" pos:end="75:68"><call pos:start="75:9" pos:end="75:68"><name pos:start="75:9" pos:end="75:14">memcpy</name><argument_list pos:start="75:15" pos:end="75:68">(<argument pos:start="75:16" pos:end="75:32"><expr pos:start="75:16" pos:end="75:32"><operator pos:start="75:16" pos:end="75:16">&amp;</operator><name pos:start="75:17" pos:end="75:32"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:32">current_frame</name></name></expr></argument>, <argument pos:start="75:35" pos:end="75:50"><expr pos:start="75:35" pos:end="75:50"><operator pos:start="75:35" pos:end="75:35">&amp;</operator><name pos:start="75:36" pos:end="75:50"><name pos:start="75:36" pos:end="75:36">s</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:50">golden_frame</name></name></expr></argument>, <argument pos:start="75:53" pos:end="75:67"><expr pos:start="75:53" pos:end="75:67"><sizeof pos:start="75:53" pos:end="75:67">sizeof<argument_list pos:start="75:59" pos:end="75:67">(<argument pos:start="75:60" pos:end="75:66"><expr pos:start="75:60" pos:end="75:66"><name pos:start="75:60" pos:end="75:66">AVFrame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="79:9" pos:end="79:49">/* time to figure out pixel addresses? */</comment>

        <if_stmt pos:start="81:9" pos:end="83:45"><if pos:start="81:9" pos:end="83:45">if <condition pos:start="81:12" pos:end="81:39">(<expr pos:start="81:13" pos:end="81:38"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:38"><name pos:start="81:14" pos:end="81:14">s</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:38">pixel_addresses_inited</name></name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:45"><block_content pos:start="83:13" pos:end="83:45">

            <expr_stmt pos:start="83:13" pos:end="83:45"><expr pos:start="83:13" pos:end="83:44"><call pos:start="83:13" pos:end="83:44"><name pos:start="83:13" pos:end="83:41">vp3_calculate_pixel_addresses</name><argument_list pos:start="83:42" pos:end="83:44">(<argument pos:start="83:43" pos:end="83:43"><expr pos:start="83:43" pos:end="83:43"><name pos:start="83:43" pos:end="83:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    </block_content>}</block></if> <else pos:start="87:7" pos:end="105:5">else <block pos:start="87:12" pos:end="105:5">{<block_content pos:start="93:9" pos:end="101:9">



        <comment type="block" pos:start="91:9" pos:end="91:42">/* allocate a new current frame */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:24">current_frame</name><operator pos:start="93:25" pos:end="93:25">.</operator><name pos:start="93:26" pos:end="93:34">reference</name></name> <operator pos:start="93:36" pos:end="93:36">=</operator> <literal type="number" pos:start="93:38" pos:end="93:38">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if<condition pos:start="95:11" pos:end="95:59">(<expr pos:start="95:12" pos:end="95:58"><call pos:start="95:12" pos:end="95:54"><name pos:start="95:12" pos:end="95:28"><name pos:start="95:12" pos:end="95:16">avctx</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:28">get_buffer</name></name><argument_list pos:start="95:29" pos:end="95:54">(<argument pos:start="95:30" pos:end="95:34"><expr pos:start="95:30" pos:end="95:34"><name pos:start="95:30" pos:end="95:34">avctx</name></expr></argument>, <argument pos:start="95:37" pos:end="95:53"><expr pos:start="95:37" pos:end="95:53"><operator pos:start="95:37" pos:end="95:37">&amp;</operator><name pos:start="95:38" pos:end="95:53"><name pos:start="95:38" pos:end="95:38">s</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:53">current_frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="95:56" pos:end="95:56">&lt;</operator> <literal type="number" pos:start="95:58" pos:end="95:58">0</literal></expr>)</condition> <block pos:start="95:61" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:22">

            <expr_stmt pos:start="97:13" pos:end="97:49"><expr pos:start="97:13" pos:end="97:48"><call pos:start="97:13" pos:end="97:48"><name pos:start="97:13" pos:end="97:18">printf</name><argument_list pos:start="97:19" pos:end="97:48">(<argument pos:start="97:20" pos:end="97:47"><expr pos:start="97:20" pos:end="97:47"><literal type="string" pos:start="97:20" pos:end="97:47">"vp3: get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:22">return <expr pos:start="99:20" pos:end="99:21"><operator pos:start="99:20" pos:end="99:20">-</operator><literal type="number" pos:start="99:21" pos:end="99:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="109:5" pos:end="119:22"><if pos:start="109:5" pos:end="117:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:19">keyframe</name></name></expr>)</condition> <block pos:start="109:22" pos:end="117:5">{<block_content pos:start="111:7" pos:end="115:25">

      <expr_stmt pos:start="111:7" pos:end="111:32"><expr pos:start="111:7" pos:end="111:31"><call pos:start="111:7" pos:end="111:31"><name pos:start="111:7" pos:end="111:15">debug_vp3</name><argument_list pos:start="111:16" pos:end="111:31">(<argument pos:start="111:17" pos:end="111:30"><expr pos:start="111:17" pos:end="111:30"><literal type="string" pos:start="111:17" pos:end="111:30">", keyframe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <comment type="block" pos:start="113:7" pos:end="113:49">/* skip the other 2 header bytes for now */</comment>

      <expr_stmt pos:start="115:7" pos:end="115:25"><expr pos:start="115:7" pos:end="115:24"><call pos:start="115:7" pos:end="115:24"><name pos:start="115:7" pos:end="115:15">skip_bits</name><argument_list pos:start="115:16" pos:end="115:24">(<argument pos:start="115:17" pos:end="115:19"><expr pos:start="115:17" pos:end="115:19"><operator pos:start="115:17" pos:end="115:17">&amp;</operator><name pos:start="115:18" pos:end="115:19">gb</name></expr></argument>, <argument pos:start="115:22" pos:end="115:23"><expr pos:start="115:22" pos:end="115:23"><literal type="number" pos:start="115:22" pos:end="115:23">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="117:7" pos:end="119:22">else<block type="pseudo" pos:start="119:7" pos:end="119:22"><block_content pos:start="119:7" pos:end="119:22">

      <expr_stmt pos:start="119:7" pos:end="119:22"><expr pos:start="119:7" pos:end="119:21"><call pos:start="119:7" pos:end="119:21"><name pos:start="119:7" pos:end="119:15">debug_vp3</name><argument_list pos:start="119:16" pos:end="119:21">(<argument pos:start="119:17" pos:end="119:20"><expr pos:start="119:17" pos:end="119:20"><literal type="string" pos:start="119:17" pos:end="119:20">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="128:0"><expr pos:start="123:5" pos:end="123:22"><call pos:start="123:5" pos:end="123:22"><name pos:start="123:5" pos:end="123:14">init_frame</name><argument_list pos:start="123:15" pos:end="123:22">(<argument pos:start="123:16" pos:end="123:16"><expr pos:start="123:16" pos:end="123:16"><name pos:start="123:16" pos:end="123:16">s</name></expr></argument>, <argument pos:start="123:19" pos:end="123:21"><expr pos:start="123:19" pos:end="123:21"><operator pos:start="123:19" pos:end="123:19">&amp;</operator><name pos:start="123:20" pos:end="123:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="127:1" pos:end="127:18">#<cpp:directive pos:start="127:2" pos:end="127:3">if</cpp:directive> <expr pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:18">KEYFRAMES_ONLY</name></expr></cpp:if>

<if_stmt pos:start="129:1" pos:end="196:0"><if pos:start="129:1" pos:end="147:1">if <condition pos:start="129:4" pos:end="129:17">(<expr pos:start="129:5" pos:end="129:16"><operator pos:start="129:5" pos:end="129:5">!</operator><name pos:start="129:6" pos:end="129:16"><name pos:start="129:6" pos:end="129:6">s</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:16">keyframe</name></name></expr>)</condition> <block pos:start="129:19" pos:end="147:1">{<block_content pos:start="133:5" pos:end="143:54">



    <expr_stmt pos:start="133:5" pos:end="135:50"><expr pos:start="133:5" pos:end="135:49"><call pos:start="133:5" pos:end="135:49"><name pos:start="133:5" pos:end="133:10">memcpy</name><argument_list pos:start="133:11" pos:end="135:49">(<argument pos:start="133:12" pos:end="133:35"><expr pos:start="133:12" pos:end="133:35"><name pos:start="133:12" pos:end="133:35"><name pos:start="133:12" pos:end="133:12">s</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:27">current_frame</name><operator pos:start="133:28" pos:end="133:28">.</operator><name pos:start="133:29" pos:end="133:32">data</name><index pos:start="133:33" pos:end="133:35">[<expr pos:start="133:34" pos:end="133:34"><literal type="number" pos:start="133:34" pos:end="133:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:38" pos:end="133:60"><expr pos:start="133:38" pos:end="133:60"><name pos:start="133:38" pos:end="133:60"><name pos:start="133:38" pos:end="133:38">s</name><operator pos:start="133:39" pos:end="133:40">-&gt;</operator><name pos:start="133:41" pos:end="133:52">golden_frame</name><operator pos:start="133:53" pos:end="133:53">.</operator><name pos:start="133:54" pos:end="133:57">data</name><index pos:start="133:58" pos:end="133:60">[<expr pos:start="133:59" pos:end="133:59"><literal type="number" pos:start="133:59" pos:end="133:59">0</literal></expr>]</index></name></expr></argument>,

        <argument pos:start="135:9" pos:end="135:48"><expr pos:start="135:9" pos:end="135:48"><name pos:start="135:9" pos:end="135:36"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:24">current_frame</name><operator pos:start="135:25" pos:end="135:25">.</operator><name pos:start="135:26" pos:end="135:33">linesize</name><index pos:start="135:34" pos:end="135:36">[<expr pos:start="135:35" pos:end="135:35"><literal type="number" pos:start="135:35" pos:end="135:35">0</literal></expr>]</index></name> <operator pos:start="135:38" pos:end="135:38">*</operator> <name pos:start="135:40" pos:end="135:48"><name pos:start="135:40" pos:end="135:40">s</name><operator pos:start="135:41" pos:end="135:42">-&gt;</operator><name pos:start="135:43" pos:end="135:48">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="139:54"><expr pos:start="137:5" pos:end="139:53"><call pos:start="137:5" pos:end="139:53"><name pos:start="137:5" pos:end="137:10">memcpy</name><argument_list pos:start="137:11" pos:end="139:53">(<argument pos:start="137:12" pos:end="137:35"><expr pos:start="137:12" pos:end="137:35"><name pos:start="137:12" pos:end="137:35"><name pos:start="137:12" pos:end="137:12">s</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:27">current_frame</name><operator pos:start="137:28" pos:end="137:28">.</operator><name pos:start="137:29" pos:end="137:32">data</name><index pos:start="137:33" pos:end="137:35">[<expr pos:start="137:34" pos:end="137:34"><literal type="number" pos:start="137:34" pos:end="137:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="137:38" pos:end="137:60"><expr pos:start="137:38" pos:end="137:60"><name pos:start="137:38" pos:end="137:60"><name pos:start="137:38" pos:end="137:38">s</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:52">golden_frame</name><operator pos:start="137:53" pos:end="137:53">.</operator><name pos:start="137:54" pos:end="137:57">data</name><index pos:start="137:58" pos:end="137:60">[<expr pos:start="137:59" pos:end="137:59"><literal type="number" pos:start="137:59" pos:end="137:59">1</literal></expr>]</index></name></expr></argument>,

        <argument pos:start="139:9" pos:end="139:52"><expr pos:start="139:9" pos:end="139:52"><name pos:start="139:9" pos:end="139:36"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:24">current_frame</name><operator pos:start="139:25" pos:end="139:25">.</operator><name pos:start="139:26" pos:end="139:33">linesize</name><index pos:start="139:34" pos:end="139:36">[<expr pos:start="139:35" pos:end="139:35"><literal type="number" pos:start="139:35" pos:end="139:35">1</literal></expr>]</index></name> <operator pos:start="139:38" pos:end="139:38">*</operator> <name pos:start="139:40" pos:end="139:48"><name pos:start="139:40" pos:end="139:40">s</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:48">height</name></name> <operator pos:start="139:50" pos:end="139:50">/</operator> <literal type="number" pos:start="139:52" pos:end="139:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="143:54"><expr pos:start="141:5" pos:end="143:53"><call pos:start="141:5" pos:end="143:53"><name pos:start="141:5" pos:end="141:10">memcpy</name><argument_list pos:start="141:11" pos:end="143:53">(<argument pos:start="141:12" pos:end="141:35"><expr pos:start="141:12" pos:end="141:35"><name pos:start="141:12" pos:end="141:35"><name pos:start="141:12" pos:end="141:12">s</name><operator pos:start="141:13" pos:end="141:14">-&gt;</operator><name pos:start="141:15" pos:end="141:27">current_frame</name><operator pos:start="141:28" pos:end="141:28">.</operator><name pos:start="141:29" pos:end="141:32">data</name><index pos:start="141:33" pos:end="141:35">[<expr pos:start="141:34" pos:end="141:34"><literal type="number" pos:start="141:34" pos:end="141:34">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:38" pos:end="141:60"><expr pos:start="141:38" pos:end="141:60"><name pos:start="141:38" pos:end="141:60"><name pos:start="141:38" pos:end="141:38">s</name><operator pos:start="141:39" pos:end="141:40">-&gt;</operator><name pos:start="141:41" pos:end="141:52">golden_frame</name><operator pos:start="141:53" pos:end="141:53">.</operator><name pos:start="141:54" pos:end="141:57">data</name><index pos:start="141:58" pos:end="141:60">[<expr pos:start="141:59" pos:end="141:59"><literal type="number" pos:start="141:59" pos:end="141:59">2</literal></expr>]</index></name></expr></argument>,

        <argument pos:start="143:9" pos:end="143:52"><expr pos:start="143:9" pos:end="143:52"><name pos:start="143:9" pos:end="143:36"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:24">current_frame</name><operator pos:start="143:25" pos:end="143:25">.</operator><name pos:start="143:26" pos:end="143:33">linesize</name><index pos:start="143:34" pos:end="143:36">[<expr pos:start="143:35" pos:end="143:35"><literal type="number" pos:start="143:35" pos:end="143:35">2</literal></expr>]</index></name> <operator pos:start="143:38" pos:end="143:38">*</operator> <name pos:start="143:40" pos:end="143:48"><name pos:start="143:40" pos:end="143:40">s</name><operator pos:start="143:41" pos:end="143:42">-&gt;</operator><name pos:start="143:43" pos:end="143:48">height</name></name> <operator pos:start="143:50" pos:end="143:50">/</operator> <literal type="number" pos:start="143:52" pos:end="143:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></if> <else pos:start="147:3" pos:end="196:0">else <block pos:start="147:8" pos:end="196:0">{<block_content pos:start="153:5" pos:end="192:0">

<cpp:endif pos:start="149:1" pos:end="149:6">#<cpp:directive pos:start="149:2" pos:end="149:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="153:5" pos:end="167:5"><if pos:start="153:5" pos:end="167:5">if <condition pos:start="153:8" pos:end="159:34">(<expr pos:start="153:9" pos:end="159:33"><call pos:start="153:9" pos:end="153:34"><name pos:start="153:9" pos:end="153:26">unpack_superblocks</name><argument_list pos:start="153:27" pos:end="153:34">(<argument pos:start="153:28" pos:end="153:28"><expr pos:start="153:28" pos:end="153:28"><name pos:start="153:28" pos:end="153:28">s</name></expr></argument>, <argument pos:start="153:31" pos:end="153:33"><expr pos:start="153:31" pos:end="153:33"><operator pos:start="153:31" pos:end="153:31">&amp;</operator><name pos:start="153:32" pos:end="153:33">gb</name></expr></argument>)</argument_list></call> <operator pos:start="153:36" pos:end="153:37">||</operator>

        <call pos:start="155:9" pos:end="155:28"><name pos:start="155:9" pos:end="155:20">unpack_modes</name><argument_list pos:start="155:21" pos:end="155:28">(<argument pos:start="155:22" pos:end="155:22"><expr pos:start="155:22" pos:end="155:22"><name pos:start="155:22" pos:end="155:22">s</name></expr></argument>, <argument pos:start="155:25" pos:end="155:27"><expr pos:start="155:25" pos:end="155:27"><operator pos:start="155:25" pos:end="155:25">&amp;</operator><name pos:start="155:26" pos:end="155:27">gb</name></expr></argument>)</argument_list></call> <operator pos:start="155:30" pos:end="155:31">||</operator>

        <call pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:22">unpack_vectors</name><argument_list pos:start="157:23" pos:end="157:30">(<argument pos:start="157:24" pos:end="157:24"><expr pos:start="157:24" pos:end="157:24"><name pos:start="157:24" pos:end="157:24">s</name></expr></argument>, <argument pos:start="157:27" pos:end="157:29"><expr pos:start="157:27" pos:end="157:29"><operator pos:start="157:27" pos:end="157:27">&amp;</operator><name pos:start="157:28" pos:end="157:29">gb</name></expr></argument>)</argument_list></call> <operator pos:start="157:32" pos:end="157:33">||</operator>

        <call pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:25">unpack_dct_coeffs</name><argument_list pos:start="159:26" pos:end="159:33">(<argument pos:start="159:27" pos:end="159:27"><expr pos:start="159:27" pos:end="159:27"><name pos:start="159:27" pos:end="159:27">s</name></expr></argument>, <argument pos:start="159:30" pos:end="159:32"><expr pos:start="159:30" pos:end="159:32"><operator pos:start="159:30" pos:end="159:30">&amp;</operator><name pos:start="159:31" pos:end="159:32">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:36" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:18">



        <expr_stmt pos:start="163:9" pos:end="163:50"><expr pos:start="163:9" pos:end="163:49"><call pos:start="163:9" pos:end="163:49"><name pos:start="163:9" pos:end="163:14">printf</name><argument_list pos:start="163:15" pos:end="163:49">(<argument pos:start="163:16" pos:end="163:48"><expr pos:start="163:16" pos:end="163:48"><literal type="string" pos:start="163:16" pos:end="163:48">"  vp3: could not decode frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="165:9" pos:end="165:18">return <expr pos:start="165:16" pos:end="165:17"><operator pos:start="165:16" pos:end="165:16">-</operator><literal type="number" pos:start="165:17" pos:end="165:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:71"><expr pos:start="171:5" pos:end="171:70"><call pos:start="171:5" pos:end="171:70"><name pos:start="171:5" pos:end="171:25">reverse_dc_prediction</name><argument_list pos:start="171:26" pos:end="171:70">(<argument pos:start="171:27" pos:end="171:27"><expr pos:start="171:27" pos:end="171:27"><name pos:start="171:27" pos:end="171:27">s</name></expr></argument>, <argument pos:start="171:30" pos:end="171:30"><expr pos:start="171:30" pos:end="171:30"><literal type="number" pos:start="171:30" pos:end="171:30">0</literal></expr></argument>, <argument pos:start="171:33" pos:end="171:49"><expr pos:start="171:33" pos:end="171:49"><name pos:start="171:33" pos:end="171:49"><name pos:start="171:33" pos:end="171:33">s</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:49">fragment_width</name></name></expr></argument>, <argument pos:start="171:52" pos:end="171:69"><expr pos:start="171:52" pos:end="171:69"><name pos:start="171:52" pos:end="171:69"><name pos:start="171:52" pos:end="171:52">s</name><operator pos:start="171:53" pos:end="171:54">-&gt;</operator><name pos:start="171:55" pos:end="171:69">fragment_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="175:55"><expr pos:start="173:5" pos:end="175:54"><call pos:start="173:5" pos:end="175:54"><name pos:start="173:5" pos:end="173:25">reverse_dc_prediction</name><argument_list pos:start="173:26" pos:end="175:54">(<argument pos:start="173:27" pos:end="173:27"><expr pos:start="173:27" pos:end="173:27"><name pos:start="173:27" pos:end="173:27">s</name></expr></argument>, <argument pos:start="173:30" pos:end="173:48"><expr pos:start="173:30" pos:end="173:48"><name pos:start="173:30" pos:end="173:48"><name pos:start="173:30" pos:end="173:30">s</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:48">u_fragment_start</name></name></expr></argument>,

        <argument pos:start="175:9" pos:end="175:29"><expr pos:start="175:9" pos:end="175:29"><name pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:25">fragment_width</name></name> <operator pos:start="175:27" pos:end="175:27">/</operator> <literal type="number" pos:start="175:29" pos:end="175:29">2</literal></expr></argument>, <argument pos:start="175:32" pos:end="175:53"><expr pos:start="175:32" pos:end="175:53"><name pos:start="175:32" pos:end="175:49"><name pos:start="175:32" pos:end="175:32">s</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:49">fragment_height</name></name> <operator pos:start="175:51" pos:end="175:51">/</operator> <literal type="number" pos:start="175:53" pos:end="175:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="179:55"><expr pos:start="177:5" pos:end="179:54"><call pos:start="177:5" pos:end="179:54"><name pos:start="177:5" pos:end="177:25">reverse_dc_prediction</name><argument_list pos:start="177:26" pos:end="179:54">(<argument pos:start="177:27" pos:end="177:27"><expr pos:start="177:27" pos:end="177:27"><name pos:start="177:27" pos:end="177:27">s</name></expr></argument>, <argument pos:start="177:30" pos:end="177:48"><expr pos:start="177:30" pos:end="177:48"><name pos:start="177:30" pos:end="177:48"><name pos:start="177:30" pos:end="177:30">s</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:48">v_fragment_start</name></name></expr></argument>,

        <argument pos:start="179:9" pos:end="179:29"><expr pos:start="179:9" pos:end="179:29"><name pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:25">fragment_width</name></name> <operator pos:start="179:27" pos:end="179:27">/</operator> <literal type="number" pos:start="179:29" pos:end="179:29">2</literal></expr></argument>, <argument pos:start="179:32" pos:end="179:53"><expr pos:start="179:32" pos:end="179:53"><name pos:start="179:32" pos:end="179:49"><name pos:start="179:32" pos:end="179:32">s</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:49">fragment_height</name></name> <operator pos:start="179:51" pos:end="179:51">/</operator> <literal type="number" pos:start="179:53" pos:end="179:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:51"><expr pos:start="183:5" pos:end="183:50"><call pos:start="183:5" pos:end="183:50"><name pos:start="183:5" pos:end="183:20">render_fragments</name><argument_list pos:start="183:21" pos:end="183:50">(<argument pos:start="183:22" pos:end="183:22"><expr pos:start="183:22" pos:end="183:22"><name pos:start="183:22" pos:end="183:22">s</name></expr></argument>, <argument pos:start="183:25" pos:end="183:25"><expr pos:start="183:25" pos:end="183:25"><literal type="number" pos:start="183:25" pos:end="183:25">0</literal></expr></argument>, <argument pos:start="183:28" pos:end="183:35"><expr pos:start="183:28" pos:end="183:35"><name pos:start="183:28" pos:end="183:35"><name pos:start="183:28" pos:end="183:28">s</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:35">width</name></name></expr></argument>, <argument pos:start="183:38" pos:end="183:46"><expr pos:start="183:38" pos:end="183:46"><name pos:start="183:38" pos:end="183:46"><name pos:start="183:38" pos:end="183:38">s</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:46">height</name></name></expr></argument>, <argument pos:start="183:49" pos:end="183:49"><expr pos:start="183:49" pos:end="183:49"><literal type="number" pos:start="183:49" pos:end="183:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:77"><expr pos:start="185:5" pos:end="185:76"><call pos:start="185:5" pos:end="185:76"><name pos:start="185:5" pos:end="185:20">render_fragments</name><argument_list pos:start="185:21" pos:end="185:76">(<argument pos:start="185:22" pos:end="185:22"><expr pos:start="185:22" pos:end="185:22"><name pos:start="185:22" pos:end="185:22">s</name></expr></argument>, <argument pos:start="185:25" pos:end="185:43"><expr pos:start="185:25" pos:end="185:43"><name pos:start="185:25" pos:end="185:43"><name pos:start="185:25" pos:end="185:25">s</name><operator pos:start="185:26" pos:end="185:27">-&gt;</operator><name pos:start="185:28" pos:end="185:43">u_fragment_start</name></name></expr></argument>, <argument pos:start="185:46" pos:end="185:57"><expr pos:start="185:46" pos:end="185:57"><name pos:start="185:46" pos:end="185:53"><name pos:start="185:46" pos:end="185:46">s</name><operator pos:start="185:47" pos:end="185:48">-&gt;</operator><name pos:start="185:49" pos:end="185:53">width</name></name> <operator pos:start="185:55" pos:end="185:55">/</operator> <literal type="number" pos:start="185:57" pos:end="185:57">2</literal></expr></argument>, <argument pos:start="185:60" pos:end="185:72"><expr pos:start="185:60" pos:end="185:72"><name pos:start="185:60" pos:end="185:68"><name pos:start="185:60" pos:end="185:60">s</name><operator pos:start="185:61" pos:end="185:62">-&gt;</operator><name pos:start="185:63" pos:end="185:68">height</name></name> <operator pos:start="185:70" pos:end="185:70">/</operator> <literal type="number" pos:start="185:72" pos:end="185:72">2</literal></expr></argument>, <argument pos:start="185:75" pos:end="185:75"><expr pos:start="185:75" pos:end="185:75"><literal type="number" pos:start="185:75" pos:end="185:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="192:0"><expr pos:start="187:5" pos:end="187:76"><call pos:start="187:5" pos:end="187:76"><name pos:start="187:5" pos:end="187:20">render_fragments</name><argument_list pos:start="187:21" pos:end="187:76">(<argument pos:start="187:22" pos:end="187:22"><expr pos:start="187:22" pos:end="187:22"><name pos:start="187:22" pos:end="187:22">s</name></expr></argument>, <argument pos:start="187:25" pos:end="187:43"><expr pos:start="187:25" pos:end="187:43"><name pos:start="187:25" pos:end="187:43"><name pos:start="187:25" pos:end="187:25">s</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:43">v_fragment_start</name></name></expr></argument>, <argument pos:start="187:46" pos:end="187:57"><expr pos:start="187:46" pos:end="187:57"><name pos:start="187:46" pos:end="187:53"><name pos:start="187:46" pos:end="187:46">s</name><operator pos:start="187:47" pos:end="187:48">-&gt;</operator><name pos:start="187:49" pos:end="187:53">width</name></name> <operator pos:start="187:55" pos:end="187:55">/</operator> <literal type="number" pos:start="187:57" pos:end="187:57">2</literal></expr></argument>, <argument pos:start="187:60" pos:end="187:72"><expr pos:start="187:60" pos:end="187:72"><name pos:start="187:60" pos:end="187:68"><name pos:start="187:60" pos:end="187:60">s</name><operator pos:start="187:61" pos:end="187:62">-&gt;</operator><name pos:start="187:63" pos:end="187:68">height</name></name> <operator pos:start="187:70" pos:end="187:70">/</operator> <literal type="number" pos:start="187:72" pos:end="187:72">2</literal></expr></argument>, <argument pos:start="187:75" pos:end="187:75"><expr pos:start="187:75" pos:end="187:75"><literal type="number" pos:start="187:75" pos:end="187:75">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="191:1" pos:end="191:18">#<cpp:directive pos:start="191:2" pos:end="191:3">if</cpp:directive> <expr pos:start="191:5" pos:end="191:18"><name pos:start="191:5" pos:end="191:18">KEYFRAMES_ONLY</name></expr></cpp:if>

</block_content>}</block></else></if_stmt>

<cpp:endif pos:start="195:1" pos:end="195:6">#<cpp:directive pos:start="195:2" pos:end="195:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="199:5" pos:end="199:31"><expr pos:start="199:5" pos:end="199:30"><operator pos:start="199:5" pos:end="199:5">*</operator><name pos:start="199:6" pos:end="199:14">data_size</name><operator pos:start="199:15" pos:end="199:15">=</operator><sizeof pos:start="199:16" pos:end="199:30">sizeof<argument_list pos:start="199:22" pos:end="199:30">(<argument pos:start="199:23" pos:end="199:29"><expr pos:start="199:23" pos:end="199:29"><name pos:start="199:23" pos:end="199:29">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:38"><expr pos:start="201:5" pos:end="201:37"><operator pos:start="201:5" pos:end="201:5">*</operator><operator pos:start="201:6" pos:end="201:6">(</operator><name pos:start="201:7" pos:end="201:13">AVFrame</name><operator pos:start="201:14" pos:end="201:14">*</operator><operator pos:start="201:15" pos:end="201:15">)</operator><name pos:start="201:16" pos:end="201:19">data</name><operator pos:start="201:20" pos:end="201:20">=</operator> <name pos:start="201:22" pos:end="201:37"><name pos:start="201:22" pos:end="201:22">s</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:37">current_frame</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="205:5" pos:end="207:22">/* release the last frame, if it is allocated and if it is not the

     * golden frame */</comment>

    <if_stmt pos:start="209:5" pos:end="213:53"><if pos:start="209:5" pos:end="213:53">if <condition pos:start="209:8" pos:end="211:59">(<expr pos:start="209:9" pos:end="211:58"><operator pos:start="209:9" pos:end="209:9">(</operator><name pos:start="209:10" pos:end="209:30"><name pos:start="209:10" pos:end="209:10">s</name><operator pos:start="209:11" pos:end="209:12">-&gt;</operator><name pos:start="209:13" pos:end="209:22">last_frame</name><operator pos:start="209:23" pos:end="209:23">.</operator><name pos:start="209:24" pos:end="209:27">data</name><index pos:start="209:28" pos:end="209:30">[<expr pos:start="209:29" pos:end="209:29"><literal type="number" pos:start="209:29" pos:end="209:29">0</literal></expr>]</index></name><operator pos:start="209:31" pos:end="209:31">)</operator> <operator pos:start="209:33" pos:end="209:34">&amp;&amp;</operator>

        <operator pos:start="211:9" pos:end="211:9">(</operator><name pos:start="211:10" pos:end="211:30"><name pos:start="211:10" pos:end="211:10">s</name><operator pos:start="211:11" pos:end="211:12">-&gt;</operator><name pos:start="211:13" pos:end="211:22">last_frame</name><operator pos:start="211:23" pos:end="211:23">.</operator><name pos:start="211:24" pos:end="211:27">data</name><index pos:start="211:28" pos:end="211:30">[<expr pos:start="211:29" pos:end="211:29"><literal type="number" pos:start="211:29" pos:end="211:29">0</literal></expr>]</index></name> <operator pos:start="211:32" pos:end="211:33">!=</operator> <name pos:start="211:35" pos:end="211:57"><name pos:start="211:35" pos:end="211:35">s</name><operator pos:start="211:36" pos:end="211:37">-&gt;</operator><name pos:start="211:38" pos:end="211:49">golden_frame</name><operator pos:start="211:50" pos:end="211:50">.</operator><name pos:start="211:51" pos:end="211:54">data</name><index pos:start="211:55" pos:end="211:57">[<expr pos:start="211:56" pos:end="211:56"><literal type="number" pos:start="211:56" pos:end="211:56">0</literal></expr>]</index></name><operator pos:start="211:58" pos:end="211:58">)</operator></expr>)</condition><block type="pseudo" pos:start="213:9" pos:end="213:53"><block_content pos:start="213:9" pos:end="213:53">

        <expr_stmt pos:start="213:9" pos:end="213:53"><expr pos:start="213:9" pos:end="213:52"><call pos:start="213:9" pos:end="213:52"><name pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:13">avctx</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:29">release_buffer</name></name><argument_list pos:start="213:30" pos:end="213:52">(<argument pos:start="213:31" pos:end="213:35"><expr pos:start="213:31" pos:end="213:35"><name pos:start="213:31" pos:end="213:35">avctx</name></expr></argument>, <argument pos:start="213:38" pos:end="213:51"><expr pos:start="213:38" pos:end="213:51"><operator pos:start="213:38" pos:end="213:38">&amp;</operator><name pos:start="213:39" pos:end="213:51"><name pos:start="213:39" pos:end="213:39">s</name><operator pos:start="213:40" pos:end="213:41">-&gt;</operator><name pos:start="213:42" pos:end="213:51">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="217:5" pos:end="217:41">/* shuffle frames (last = current) */</comment>

    <expr_stmt pos:start="219:5" pos:end="219:63"><expr pos:start="219:5" pos:end="219:62"><call pos:start="219:5" pos:end="219:62"><name pos:start="219:5" pos:end="219:10">memcpy</name><argument_list pos:start="219:11" pos:end="219:62">(<argument pos:start="219:12" pos:end="219:25"><expr pos:start="219:12" pos:end="219:25"><operator pos:start="219:12" pos:end="219:12">&amp;</operator><name pos:start="219:13" pos:end="219:25"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:25">last_frame</name></name></expr></argument>, <argument pos:start="219:28" pos:end="219:44"><expr pos:start="219:28" pos:end="219:44"><operator pos:start="219:28" pos:end="219:28">&amp;</operator><name pos:start="219:29" pos:end="219:44"><name pos:start="219:29" pos:end="219:29">s</name><operator pos:start="219:30" pos:end="219:31">-&gt;</operator><name pos:start="219:32" pos:end="219:44">current_frame</name></name></expr></argument>, <argument pos:start="219:47" pos:end="219:61"><expr pos:start="219:47" pos:end="219:61"><sizeof pos:start="219:47" pos:end="219:61">sizeof<argument_list pos:start="219:53" pos:end="219:61">(<argument pos:start="219:54" pos:end="219:60"><expr pos:start="219:54" pos:end="219:60"><name pos:start="219:54" pos:end="219:60">AVFrame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="223:5" pos:end="223:20">return <expr pos:start="223:12" pos:end="223:19"><name pos:start="223:12" pos:end="223:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
