<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19079.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">RENAME</name></type>(<name pos:start="1:13" pos:end="1:31">ff_init_mpadsp_tabs</name>)<parameter_list pos:start="1:33" pos:end="1:38">(<parameter pos:start="1:34" pos:end="1:37"><decl pos:start="1:34" pos:end="1:37"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <comment type="block" pos:start="7:5" pos:end="7:30">/* compute mdct windows */</comment>

    <for pos:start="9:5" pos:end="63:5">for <control pos:start="9:9" pos:end="9:28">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:23"><expr pos:start="9:17" pos:end="9:22"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <literal type="number" pos:start="9:21" pos:end="9:22">36</literal></expr>;</condition> <incr pos:start="9:25" pos:end="9:27"><expr pos:start="9:25" pos:end="9:27"><name pos:start="9:25" pos:end="9:25">i</name><operator pos:start="9:26" pos:end="9:27">++</operator></expr></incr>)</control> <block pos:start="9:30" pos:end="63:5">{<block_content pos:start="11:9" pos:end="61:9">

        <for pos:start="11:9" pos:end="61:9">for <control pos:start="11:13" pos:end="11:31">(<init pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:18"><name pos:start="11:14" pos:end="11:14">j</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>;</init> <condition pos:start="11:21" pos:end="11:26"><expr pos:start="11:21" pos:end="11:25"><name pos:start="11:21" pos:end="11:21">j</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <literal type="number" pos:start="11:25" pos:end="11:25">4</literal></expr>;</condition> <incr pos:start="11:28" pos:end="11:30"><expr pos:start="11:28" pos:end="11:30"><name pos:start="11:28" pos:end="11:28">j</name><operator pos:start="11:29" pos:end="11:30">++</operator></expr></incr>)</control> <block pos:start="11:33" pos:end="61:9">{<block_content pos:start="13:13" pos:end="59:13">

            <decl_stmt pos:start="13:13" pos:end="13:21"><decl pos:start="13:13" pos:end="13:20"><type pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">double</name></type> <name pos:start="13:20" pos:end="13:20">d</name></decl>;</decl_stmt>



            <if_stmt pos:start="17:13" pos:end="19:25"><if pos:start="17:13" pos:end="19:25">if <condition pos:start="17:16" pos:end="17:37">(<expr pos:start="17:17" pos:end="17:36"><name pos:start="17:17" pos:end="17:17">j</name> <operator pos:start="17:19" pos:end="17:20">==</operator> <literal type="number" pos:start="17:22" pos:end="17:22">2</literal> <operator pos:start="17:24" pos:end="17:25">&amp;&amp;</operator> <name pos:start="17:27" pos:end="17:27">i</name> <operator pos:start="17:29" pos:end="17:29">%</operator> <literal type="number" pos:start="17:31" pos:end="17:31">3</literal> <operator pos:start="17:33" pos:end="17:34">!=</operator> <literal type="number" pos:start="17:36" pos:end="17:36">1</literal></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:25"><block_content pos:start="19:17" pos:end="19:25">

                <continue pos:start="19:17" pos:end="19:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="23:13" pos:end="23:45"><expr pos:start="23:13" pos:end="23:44"><name pos:start="23:13" pos:end="23:13">d</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:44"><name pos:start="23:17" pos:end="23:19">sin</name><argument_list pos:start="23:20" pos:end="23:44">(<argument pos:start="23:21" pos:end="23:43"><expr pos:start="23:21" pos:end="23:43"><name pos:start="23:21" pos:end="23:24">M_PI</name> <operator pos:start="23:26" pos:end="23:26">*</operator> <operator pos:start="23:28" pos:end="23:28">(</operator><name pos:start="23:29" pos:end="23:29">i</name> <operator pos:start="23:31" pos:end="23:31">+</operator> <literal type="number" pos:start="23:33" pos:end="23:35">0.5</literal><operator pos:start="23:36" pos:end="23:36">)</operator> <operator pos:start="23:38" pos:end="23:38">/</operator> <literal type="number" pos:start="23:40" pos:end="23:43">36.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="41:13"><if pos:start="25:13" pos:end="33:13">if <condition pos:start="25:16" pos:end="25:23">(<expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:17">j</name> <operator pos:start="25:19" pos:end="25:20">==</operator> <literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr>)</condition> <block pos:start="25:25" pos:end="33:13">{<block_content pos:start="27:17" pos:end="31:40">

                <if_stmt pos:start="27:17" pos:end="31:40"><if pos:start="27:17" pos:end="27:40">if      <condition pos:start="27:25" pos:end="27:33">(<expr pos:start="27:26" pos:end="27:32"><name pos:start="27:26" pos:end="27:26">i</name> <operator pos:start="27:28" pos:end="27:29">&gt;=</operator> <literal type="number" pos:start="27:31" pos:end="27:32">30</literal></expr>)</condition><block type="pseudo" pos:start="27:35" pos:end="27:40"><block_content pos:start="27:35" pos:end="27:40"> <expr_stmt pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:39"><name pos:start="27:35" pos:end="27:35">d</name> <operator pos:start="27:37" pos:end="27:37">=</operator> <literal type="number" pos:start="27:39" pos:end="27:39">0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="29:17" pos:end="29:72">else if <condition pos:start="29:25" pos:end="29:33">(<expr pos:start="29:26" pos:end="29:32"><name pos:start="29:26" pos:end="29:26">i</name> <operator pos:start="29:28" pos:end="29:29">&gt;=</operator> <literal type="number" pos:start="29:31" pos:end="29:32">24</literal></expr>)</condition><block type="pseudo" pos:start="29:35" pos:end="29:72"><block_content pos:start="29:35" pos:end="29:72"> <expr_stmt pos:start="29:35" pos:end="29:72"><expr pos:start="29:35" pos:end="29:71"><name pos:start="29:35" pos:end="29:35">d</name> <operator pos:start="29:37" pos:end="29:37">=</operator> <call pos:start="29:39" pos:end="29:71"><name pos:start="29:39" pos:end="29:41">sin</name><argument_list pos:start="29:42" pos:end="29:71">(<argument pos:start="29:43" pos:end="29:70"><expr pos:start="29:43" pos:end="29:70"><name pos:start="29:43" pos:end="29:46">M_PI</name> <operator pos:start="29:48" pos:end="29:48">*</operator> <operator pos:start="29:50" pos:end="29:50">(</operator><name pos:start="29:51" pos:end="29:51">i</name> <operator pos:start="29:53" pos:end="29:53">-</operator> <literal type="number" pos:start="29:55" pos:end="29:58">18</literal> <operator pos:start="29:58" pos:end="29:58">+</operator> <literal type="number" pos:start="29:60" pos:end="29:62">0.5</literal><operator pos:start="29:63" pos:end="29:63">)</operator> <operator pos:start="29:65" pos:end="29:65">/</operator> <literal type="number" pos:start="29:67" pos:end="29:70">12.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="31:17" pos:end="31:40">else if <condition pos:start="31:25" pos:end="31:33">(<expr pos:start="31:26" pos:end="31:32"><name pos:start="31:26" pos:end="31:26">i</name> <operator pos:start="31:28" pos:end="31:29">&gt;=</operator> <literal type="number" pos:start="31:31" pos:end="31:32">18</literal></expr>)</condition><block type="pseudo" pos:start="31:35" pos:end="31:40"><block_content pos:start="31:35" pos:end="31:40"> <expr_stmt pos:start="31:35" pos:end="31:40"><expr pos:start="31:35" pos:end="31:39"><name pos:start="31:35" pos:end="31:35">d</name> <operator pos:start="31:37" pos:end="31:37">=</operator> <literal type="number" pos:start="31:39" pos:end="31:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="33:15" pos:end="41:13">else if <condition pos:start="33:23" pos:end="33:30">(<expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:24">j</name> <operator pos:start="33:26" pos:end="33:27">==</operator> <literal type="number" pos:start="33:29" pos:end="33:29">3</literal></expr>)</condition> <block pos:start="33:32" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:40">

                <if_stmt pos:start="35:17" pos:end="39:40"><if pos:start="35:17" pos:end="35:40">if      <condition pos:start="35:25" pos:end="35:33">(<expr pos:start="35:26" pos:end="35:32"><name pos:start="35:26" pos:end="35:26">i</name> <operator pos:start="35:28" pos:end="35:28">&lt;</operator>   <literal type="number" pos:start="35:32" pos:end="35:32">6</literal></expr>)</condition><block type="pseudo" pos:start="35:35" pos:end="35:40"><block_content pos:start="35:35" pos:end="35:40"> <expr_stmt pos:start="35:35" pos:end="35:40"><expr pos:start="35:35" pos:end="35:39"><name pos:start="35:35" pos:end="35:35">d</name> <operator pos:start="35:37" pos:end="35:37">=</operator> <literal type="number" pos:start="35:39" pos:end="35:39">0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="37:17" pos:end="37:72">else if <condition pos:start="37:25" pos:end="37:33">(<expr pos:start="37:26" pos:end="37:32"><name pos:start="37:26" pos:end="37:26">i</name> <operator pos:start="37:28" pos:end="37:28">&lt;</operator>  <literal type="number" pos:start="37:31" pos:end="37:32">12</literal></expr>)</condition><block type="pseudo" pos:start="37:35" pos:end="37:72"><block_content pos:start="37:35" pos:end="37:72"> <expr_stmt pos:start="37:35" pos:end="37:72"><expr pos:start="37:35" pos:end="37:71"><name pos:start="37:35" pos:end="37:35">d</name> <operator pos:start="37:37" pos:end="37:37">=</operator> <call pos:start="37:39" pos:end="37:71"><name pos:start="37:39" pos:end="37:41">sin</name><argument_list pos:start="37:42" pos:end="37:71">(<argument pos:start="37:43" pos:end="37:70"><expr pos:start="37:43" pos:end="37:70"><name pos:start="37:43" pos:end="37:46">M_PI</name> <operator pos:start="37:48" pos:end="37:48">*</operator> <operator pos:start="37:50" pos:end="37:50">(</operator><name pos:start="37:51" pos:end="37:51">i</name> <operator pos:start="37:53" pos:end="37:53">-</operator>  <literal type="number" pos:start="37:56" pos:end="37:58">6</literal> <operator pos:start="37:58" pos:end="37:58">+</operator> <literal type="number" pos:start="37:60" pos:end="37:62">0.5</literal><operator pos:start="37:63" pos:end="37:63">)</operator> <operator pos:start="37:65" pos:end="37:65">/</operator> <literal type="number" pos:start="37:67" pos:end="37:70">12.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="39:17" pos:end="39:40">else if <condition pos:start="39:25" pos:end="39:33">(<expr pos:start="39:26" pos:end="39:32"><name pos:start="39:26" pos:end="39:26">i</name> <operator pos:start="39:28" pos:end="39:28">&lt;</operator>  <literal type="number" pos:start="39:31" pos:end="39:32">18</literal></expr>)</condition><block type="pseudo" pos:start="39:35" pos:end="39:40"><block_content pos:start="39:35" pos:end="39:40"> <expr_stmt pos:start="39:35" pos:end="39:40"><expr pos:start="39:35" pos:end="39:39"><name pos:start="39:35" pos:end="39:35">d</name> <operator pos:start="39:37" pos:end="39:37">=</operator> <literal type="number" pos:start="39:39" pos:end="39:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="43:13" pos:end="43:68">//merge last stage of imdct into the window coefficients</comment>

            <expr_stmt pos:start="45:13" pos:end="45:53"><expr pos:start="45:13" pos:end="45:52"><name pos:start="45:13" pos:end="45:13">d</name> <operator pos:start="45:15" pos:end="45:16">*=</operator> <literal type="number" pos:start="45:18" pos:end="45:20">0.5</literal> <operator pos:start="45:22" pos:end="45:22">/</operator> <call pos:start="45:24" pos:end="45:52"><name pos:start="45:24" pos:end="45:26">cos</name><argument_list pos:start="45:27" pos:end="45:52">(<argument pos:start="45:28" pos:end="45:51"><expr pos:start="45:28" pos:end="45:51"><name pos:start="45:28" pos:end="45:31">M_PI</name> <operator pos:start="45:33" pos:end="45:33">*</operator> <operator pos:start="45:35" pos:end="45:35">(</operator><literal type="number" pos:start="45:36" pos:end="45:36">2</literal> <operator pos:start="45:38" pos:end="45:38">*</operator> <name pos:start="45:40" pos:end="45:40">i</name> <operator pos:start="45:42" pos:end="45:42">+</operator> <literal type="number" pos:start="45:44" pos:end="45:45">19</literal><operator pos:start="45:46" pos:end="45:46">)</operator> <operator pos:start="45:48" pos:end="45:48">/</operator> <literal type="number" pos:start="45:50" pos:end="45:51">72</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="49:13" pos:end="59:13"><if pos:start="49:13" pos:end="51:66">if <condition pos:start="49:16" pos:end="49:23">(<expr pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:17">j</name> <operator pos:start="49:19" pos:end="49:20">==</operator> <literal type="number" pos:start="49:22" pos:end="49:22">2</literal></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:66"><block_content pos:start="51:17" pos:end="51:66">

                <expr_stmt pos:start="51:17" pos:end="51:66"><expr pos:start="51:17" pos:end="51:65"><call pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:22">RENAME</name><argument_list pos:start="51:23" pos:end="51:35">(<argument pos:start="51:24" pos:end="51:34"><expr pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:34">ff_mdct_win</name></expr></argument>)</argument_list></call><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">j</name></expr>]</index><index pos:start="51:39" pos:end="51:43">[<expr pos:start="51:40" pos:end="51:42"><name pos:start="51:40" pos:end="51:40">i</name><operator pos:start="51:41" pos:end="51:41">/</operator><literal type="number" pos:start="51:42" pos:end="51:42">3</literal></expr>]</index> <operator pos:start="51:45" pos:end="51:45">=</operator> <call pos:start="51:47" pos:end="51:65"><name pos:start="51:47" pos:end="51:51">FIXHR</name><argument_list pos:start="51:52" pos:end="51:65">(<argument pos:start="51:53" pos:end="51:64"><expr pos:start="51:53" pos:end="51:64"><operator pos:start="51:53" pos:end="51:53">(</operator><name pos:start="51:54" pos:end="51:54">d</name> <operator pos:start="51:56" pos:end="51:56">/</operator> <operator pos:start="51:58" pos:end="51:58">(</operator><literal type="number" pos:start="51:59" pos:end="51:59">1</literal><operator pos:start="51:60" pos:end="51:61">&lt;&lt;</operator><literal type="number" pos:start="51:62" pos:end="51:62">5</literal><operator pos:start="51:63" pos:end="51:63">)</operator><operator pos:start="51:64" pos:end="51:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="53:13" pos:end="59:13">else <block pos:start="53:18" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:66">

                <decl_stmt pos:start="55:17" pos:end="55:66"><decl pos:start="55:17" pos:end="55:65"><type pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:19">int</name></type> <name pos:start="55:21" pos:end="55:23">idx</name> <init pos:start="55:25" pos:end="55:65">= <expr pos:start="55:27" pos:end="55:65"><ternary pos:start="55:27" pos:end="55:65"><condition pos:start="55:27" pos:end="55:34"><expr pos:start="55:27" pos:end="55:32"><name pos:start="55:27" pos:end="55:27">i</name> <operator pos:start="55:29" pos:end="55:29">&lt;</operator> <literal type="number" pos:start="55:31" pos:end="55:32">18</literal></expr> ?</condition><then pos:start="55:36" pos:end="55:36"> <expr pos:start="55:36" pos:end="55:36"><name pos:start="55:36" pos:end="55:36">i</name></expr> </then><else pos:start="55:38" pos:end="55:65">: <expr pos:start="55:40" pos:end="55:65"><name pos:start="55:40" pos:end="55:40">i</name> <operator pos:start="55:42" pos:end="55:42">+</operator> <operator pos:start="55:44" pos:end="55:44">(</operator><name pos:start="55:45" pos:end="55:57">MDCT_BUF_SIZE</name><operator pos:start="55:58" pos:end="55:58">/</operator><literal type="number" pos:start="55:59" pos:end="55:61">2</literal> <operator pos:start="55:61" pos:end="55:61">-</operator> <literal type="number" pos:start="55:63" pos:end="55:64">18</literal><operator pos:start="55:65" pos:end="55:65">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:66"><expr pos:start="57:17" pos:end="57:65"><call pos:start="57:17" pos:end="57:35"><name pos:start="57:17" pos:end="57:22">RENAME</name><argument_list pos:start="57:23" pos:end="57:35">(<argument pos:start="57:24" pos:end="57:34"><expr pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:34">ff_mdct_win</name></expr></argument>)</argument_list></call><index pos:start="57:36" pos:end="57:38">[<expr pos:start="57:37" pos:end="57:37"><name pos:start="57:37" pos:end="57:37">j</name></expr>]</index><index pos:start="57:39" pos:end="57:43">[<expr pos:start="57:40" pos:end="57:42"><name pos:start="57:40" pos:end="57:42">idx</name></expr>]</index> <operator pos:start="57:45" pos:end="57:45">=</operator> <call pos:start="57:47" pos:end="57:65"><name pos:start="57:47" pos:end="57:51">FIXHR</name><argument_list pos:start="57:52" pos:end="57:65">(<argument pos:start="57:53" pos:end="57:64"><expr pos:start="57:53" pos:end="57:64"><operator pos:start="57:53" pos:end="57:53">(</operator><name pos:start="57:54" pos:end="57:54">d</name> <operator pos:start="57:56" pos:end="57:56">/</operator> <operator pos:start="57:58" pos:end="57:58">(</operator><literal type="number" pos:start="57:59" pos:end="57:59">1</literal><operator pos:start="57:60" pos:end="57:61">&lt;&lt;</operator><literal type="number" pos:start="57:62" pos:end="57:62">5</literal><operator pos:start="57:63" pos:end="57:63">)</operator><operator pos:start="57:64" pos:end="57:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="67:5" pos:end="69:45">/* NOTE: we do frequency inversion adter the MDCT by changing

        the sign of the right window coefs */</comment>

    <for pos:start="71:5" pos:end="81:5">for <control pos:start="71:9" pos:end="71:27">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">j</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:22"><expr pos:start="71:17" pos:end="71:21"><name pos:start="71:17" pos:end="71:17">j</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <literal type="number" pos:start="71:21" pos:end="71:21">4</literal></expr>;</condition> <incr pos:start="71:24" pos:end="71:26"><expr pos:start="71:24" pos:end="71:26"><name pos:start="71:24" pos:end="71:24">j</name><operator pos:start="71:25" pos:end="71:26">++</operator></expr></incr>)</control> <block pos:start="71:29" pos:end="81:5">{<block_content pos:start="73:9" pos:end="79:9">

        <for pos:start="73:9" pos:end="79:9">for <control pos:start="73:13" pos:end="73:46">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">i</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:38"><expr pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:21">i</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:37">MDCT_BUF_SIZE</name></expr>;</condition> <incr pos:start="73:40" pos:end="73:45"><expr pos:start="73:40" pos:end="73:45"><name pos:start="73:40" pos:end="73:40">i</name> <operator pos:start="73:42" pos:end="73:43">+=</operator> <literal type="number" pos:start="73:45" pos:end="73:45">2</literal></expr></incr>)</control> <block pos:start="73:48" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:79">

            <expr_stmt pos:start="75:13" pos:end="75:79"><expr pos:start="75:13" pos:end="75:78"><call pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:18">RENAME</name><argument_list pos:start="75:19" pos:end="75:31">(<argument pos:start="75:20" pos:end="75:30"><expr pos:start="75:20" pos:end="75:30"><name pos:start="75:20" pos:end="75:30">ff_mdct_win</name></expr></argument>)</argument_list></call><index pos:start="75:32" pos:end="75:38">[<expr pos:start="75:33" pos:end="75:37"><name pos:start="75:33" pos:end="75:33">j</name> <operator pos:start="75:35" pos:end="75:35">+</operator> <literal type="number" pos:start="75:37" pos:end="75:37">4</literal></expr>]</index><index pos:start="75:39" pos:end="75:45">[<expr pos:start="75:40" pos:end="75:40"><name pos:start="75:40" pos:end="75:40">i</name></expr>    ]</index> <operator pos:start="75:47" pos:end="75:47">=</operator>  <call pos:start="75:50" pos:end="75:68"><name pos:start="75:50" pos:end="75:55">RENAME</name><argument_list pos:start="75:56" pos:end="75:68">(<argument pos:start="75:57" pos:end="75:67"><expr pos:start="75:57" pos:end="75:67"><name pos:start="75:57" pos:end="75:67">ff_mdct_win</name></expr></argument>)</argument_list></call><index pos:start="75:69" pos:end="75:71">[<expr pos:start="75:70" pos:end="75:70"><name pos:start="75:70" pos:end="75:70">j</name></expr>]</index><index pos:start="75:72" pos:end="75:78">[<expr pos:start="75:73" pos:end="75:73"><name pos:start="75:73" pos:end="75:73">i</name></expr>    ]</index></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:79"><expr pos:start="77:13" pos:end="77:78"><call pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:18">RENAME</name><argument_list pos:start="77:19" pos:end="77:31">(<argument pos:start="77:20" pos:end="77:30"><expr pos:start="77:20" pos:end="77:30"><name pos:start="77:20" pos:end="77:30">ff_mdct_win</name></expr></argument>)</argument_list></call><index pos:start="77:32" pos:end="77:38">[<expr pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:33">j</name> <operator pos:start="77:35" pos:end="77:35">+</operator> <literal type="number" pos:start="77:37" pos:end="77:37">4</literal></expr>]</index><index pos:start="77:39" pos:end="77:45">[<expr pos:start="77:40" pos:end="77:44"><name pos:start="77:40" pos:end="77:40">i</name> <operator pos:start="77:42" pos:end="77:42">+</operator> <literal type="number" pos:start="77:44" pos:end="77:44">1</literal></expr>]</index> <operator pos:start="77:47" pos:end="77:47">=</operator> <operator pos:start="77:49" pos:end="77:49">-</operator><call pos:start="77:50" pos:end="77:68"><name pos:start="77:50" pos:end="77:55">RENAME</name><argument_list pos:start="77:56" pos:end="77:68">(<argument pos:start="77:57" pos:end="77:67"><expr pos:start="77:57" pos:end="77:67"><name pos:start="77:57" pos:end="77:67">ff_mdct_win</name></expr></argument>)</argument_list></call><index pos:start="77:69" pos:end="77:71">[<expr pos:start="77:70" pos:end="77:70"><name pos:start="77:70" pos:end="77:70">j</name></expr>]</index><index pos:start="77:72" pos:end="77:78">[<expr pos:start="77:73" pos:end="77:77"><name pos:start="77:73" pos:end="77:73">i</name> <operator pos:start="77:75" pos:end="77:75">+</operator> <literal type="number" pos:start="77:77" pos:end="77:77">1</literal></expr>]</index></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
