<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16288.c" pos:tabs="8"><function pos:start="1:1" pos:end="194:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_mpeg_update_thread_context</name><parameter_list pos:start="1:34" pos:end="3:60">(<parameter pos:start="1:35" pos:end="1:53"><decl pos:start="1:35" pos:end="1:53"><type pos:start="1:35" pos:end="1:53"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dst</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:59"><decl pos:start="3:35" pos:end="3:59"><type pos:start="3:35" pos:end="3:59"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:54">AVCodecContext</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:59">src</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="194:1">{<block_content pos:start="8:5" pos:end="192:13">


    <decl_stmt pos:start="8:5" pos:end="8:61"><decl pos:start="8:5" pos:end="8:38"><type pos:start="8:5" pos:end="8:20"><name pos:start="8:5" pos:end="8:18">MpegEncContext</name> <modifier pos:start="8:20" pos:end="8:20">*</modifier></type><name pos:start="8:21" pos:end="8:21">s</name> <init pos:start="8:23" pos:end="8:38">= <expr pos:start="8:25" pos:end="8:38"><name pos:start="8:25" pos:end="8:38"><name pos:start="8:25" pos:end="8:27">dst</name><operator pos:start="8:28" pos:end="8:29">-&gt;</operator><name pos:start="8:30" pos:end="8:38">priv_data</name></name></expr></init></decl>, <decl pos:start="8:41" pos:end="8:60"><type ref="prev" pos:start="8:5" pos:end="8:20"><modifier pos:start="8:41" pos:end="8:41">*</modifier></type><name pos:start="8:42" pos:end="8:43">s1</name> <init pos:start="8:45" pos:end="8:60">= <expr pos:start="8:47" pos:end="8:60"><name pos:start="8:47" pos:end="8:60"><name pos:start="8:47" pos:end="8:49">src</name><operator pos:start="8:50" pos:end="8:51">-&gt;</operator><name pos:start="8:52" pos:end="8:60">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="12:5" pos:end="14:17"><if pos:start="12:5" pos:end="14:17">if <condition pos:start="12:8" pos:end="12:47">(<expr pos:start="12:9" pos:end="12:46"><name pos:start="12:9" pos:end="12:11">dst</name> <operator pos:start="12:13" pos:end="12:14">==</operator> <name pos:start="12:16" pos:end="12:18">src</name> <operator pos:start="12:20" pos:end="12:21">||</operator> <operator pos:start="12:23" pos:end="12:23">!</operator><name pos:start="12:24" pos:end="12:46"><name pos:start="12:24" pos:end="12:25">s1</name><operator pos:start="12:26" pos:end="12:27">-&gt;</operator><name pos:start="12:28" pos:end="12:46">context_initialized</name></name></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:17"><block_content pos:start="14:9" pos:end="14:17">

        <return pos:start="14:9" pos:end="14:17">return <expr pos:start="14:16" pos:end="14:16"><literal type="number" pos:start="14:16" pos:end="14:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="18:5" pos:end="18:47">// FIXME can parameters change on I-frames?</comment>

    <comment type="line" pos:start="20:5" pos:end="20:41">// in that case dst may need a reinit</comment>

    <if_stmt pos:start="22:5" pos:end="42:5"><if pos:start="22:5" pos:end="42:5">if <condition pos:start="22:8" pos:end="22:32">(<expr pos:start="22:9" pos:end="22:31"><operator pos:start="22:9" pos:end="22:9">!</operator><name pos:start="22:10" pos:end="22:31"><name pos:start="22:10" pos:end="22:10">s</name><operator pos:start="22:11" pos:end="22:12">-&gt;</operator><name pos:start="22:13" pos:end="22:31">context_initialized</name></name></expr>)</condition> <block pos:start="22:34" pos:end="42:5">{<block_content pos:start="24:9" pos:end="40:30">

        <expr_stmt pos:start="24:9" pos:end="24:46"><expr pos:start="24:9" pos:end="24:45"><call pos:start="24:9" pos:end="24:45"><name pos:start="24:9" pos:end="24:14">memcpy</name><argument_list pos:start="24:15" pos:end="24:45">(<argument pos:start="24:16" pos:end="24:16"><expr pos:start="24:16" pos:end="24:16"><name pos:start="24:16" pos:end="24:16">s</name></expr></argument>, <argument pos:start="24:19" pos:end="24:20"><expr pos:start="24:19" pos:end="24:20"><name pos:start="24:19" pos:end="24:20">s1</name></expr></argument>, <argument pos:start="24:23" pos:end="24:44"><expr pos:start="24:23" pos:end="24:44"><sizeof pos:start="24:23" pos:end="24:44">sizeof<argument_list pos:start="24:29" pos:end="24:44">(<argument pos:start="24:30" pos:end="24:43"><expr pos:start="24:30" pos:end="24:43"><name pos:start="24:30" pos:end="24:43">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="28:9" pos:end="28:39"><expr pos:start="28:9" pos:end="28:38"><name pos:start="28:9" pos:end="28:16"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:16">avctx</name></name>                 <operator pos:start="28:34" pos:end="28:34">=</operator> <name pos:start="28:36" pos:end="28:38">dst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="30:9" pos:end="30:53"><expr pos:start="30:9" pos:end="30:52"><name pos:start="30:9" pos:end="30:30"><name pos:start="30:9" pos:end="30:9">s</name><operator pos:start="30:10" pos:end="30:11">-&gt;</operator><name pos:start="30:12" pos:end="30:30">picture_range_start</name></name>  <operator pos:start="30:33" pos:end="30:34">+=</operator> <name pos:start="30:36" pos:end="30:52">MAX_PICTURE_COUNT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="32:9" pos:end="32:53"><expr pos:start="32:9" pos:end="32:52"><name pos:start="32:9" pos:end="32:28"><name pos:start="32:9" pos:end="32:9">s</name><operator pos:start="32:10" pos:end="32:11">-&gt;</operator><name pos:start="32:12" pos:end="32:28">picture_range_end</name></name>    <operator pos:start="32:33" pos:end="32:34">+=</operator> <name pos:start="32:36" pos:end="32:52">MAX_PICTURE_COUNT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="34:9" pos:end="34:40"><expr pos:start="34:9" pos:end="34:39"><name pos:start="34:9" pos:end="34:27"><name pos:start="34:9" pos:end="34:9">s</name><operator pos:start="34:10" pos:end="34:11">-&gt;</operator><name pos:start="34:12" pos:end="34:27">bitstream_buffer</name></name>      <operator pos:start="34:34" pos:end="34:34">=</operator> <name pos:start="34:36" pos:end="34:39">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="36:9" pos:end="36:74"><expr pos:start="36:9" pos:end="36:73"><name pos:start="36:9" pos:end="36:32"><name pos:start="36:9" pos:end="36:9">s</name><operator pos:start="36:10" pos:end="36:11">-&gt;</operator><name pos:start="36:12" pos:end="36:32">bitstream_buffer_size</name></name> <operator pos:start="36:34" pos:end="36:34">=</operator> <name pos:start="36:36" pos:end="36:69"><name pos:start="36:36" pos:end="36:36">s</name><operator pos:start="36:37" pos:end="36:38">-&gt;</operator><name pos:start="36:39" pos:end="36:69">allocated_bitstream_buffer_size</name></name> <operator pos:start="36:71" pos:end="36:71">=</operator> <literal type="number" pos:start="36:73" pos:end="36:73">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="40:9" pos:end="40:30"><expr pos:start="40:9" pos:end="40:29"><call pos:start="40:9" pos:end="40:29"><name pos:start="40:9" pos:end="40:26">ff_MPV_common_init</name><argument_list pos:start="40:27" pos:end="40:29">(<argument pos:start="40:28" pos:end="40:28"><expr pos:start="40:28" pos:end="40:28"><name pos:start="40:28" pos:end="40:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="46:5" pos:end="60:5"><if pos:start="46:5" pos:end="60:5">if <condition pos:start="46:8" pos:end="46:78">(<expr pos:start="46:9" pos:end="46:77"><name pos:start="46:9" pos:end="46:17"><name pos:start="46:9" pos:end="46:9">s</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:17">height</name></name> <operator pos:start="46:19" pos:end="46:20">!=</operator> <name pos:start="46:22" pos:end="46:31"><name pos:start="46:22" pos:end="46:23">s1</name><operator pos:start="46:24" pos:end="46:25">-&gt;</operator><name pos:start="46:26" pos:end="46:31">height</name></name> <operator pos:start="46:33" pos:end="46:34">||</operator> <name pos:start="46:36" pos:end="46:43"><name pos:start="46:36" pos:end="46:36">s</name><operator pos:start="46:37" pos:end="46:38">-&gt;</operator><name pos:start="46:39" pos:end="46:43">width</name></name> <operator pos:start="46:45" pos:end="46:46">!=</operator> <name pos:start="46:48" pos:end="46:56"><name pos:start="46:48" pos:end="46:49">s1</name><operator pos:start="46:50" pos:end="46:51">-&gt;</operator><name pos:start="46:52" pos:end="46:56">width</name></name> <operator pos:start="46:58" pos:end="46:59">||</operator> <name pos:start="46:61" pos:end="46:77"><name pos:start="46:61" pos:end="46:61">s</name><operator pos:start="46:62" pos:end="46:63">-&gt;</operator><name pos:start="46:64" pos:end="46:77">context_reinit</name></name></expr>)</condition> <block pos:start="46:80" pos:end="60:5">{<block_content pos:start="48:9" pos:end="58:23">

        <decl_stmt pos:start="48:9" pos:end="48:16"><decl pos:start="48:9" pos:end="48:15"><type pos:start="48:9" pos:end="48:11"><name pos:start="48:9" pos:end="48:11">int</name></type> <name pos:start="48:13" pos:end="48:15">err</name></decl>;</decl_stmt>

        <expr_stmt pos:start="50:9" pos:end="50:30"><expr pos:start="50:9" pos:end="50:29"><name pos:start="50:9" pos:end="50:25"><name pos:start="50:9" pos:end="50:9">s</name><operator pos:start="50:10" pos:end="50:11">-&gt;</operator><name pos:start="50:12" pos:end="50:25">context_reinit</name></name> <operator pos:start="50:27" pos:end="50:27">=</operator> <literal type="number" pos:start="50:29" pos:end="50:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="52:9" pos:end="52:31"><expr pos:start="52:9" pos:end="52:30"><name pos:start="52:9" pos:end="52:17"><name pos:start="52:9" pos:end="52:9">s</name><operator pos:start="52:10" pos:end="52:11">-&gt;</operator><name pos:start="52:12" pos:end="52:17">height</name></name> <operator pos:start="52:19" pos:end="52:19">=</operator> <name pos:start="52:21" pos:end="52:30"><name pos:start="52:21" pos:end="52:22">s1</name><operator pos:start="52:23" pos:end="52:24">-&gt;</operator><name pos:start="52:25" pos:end="52:30">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="54:9" pos:end="54:30"><expr pos:start="54:9" pos:end="54:29"><name pos:start="54:9" pos:end="54:16"><name pos:start="54:9" pos:end="54:9">s</name><operator pos:start="54:10" pos:end="54:11">-&gt;</operator><name pos:start="54:12" pos:end="54:16">width</name></name>  <operator pos:start="54:19" pos:end="54:19">=</operator> <name pos:start="54:21" pos:end="54:29"><name pos:start="54:21" pos:end="54:22">s1</name><operator pos:start="54:23" pos:end="54:24">-&gt;</operator><name pos:start="54:25" pos:end="54:29">width</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="56:9" pos:end="58:23"><if pos:start="56:9" pos:end="58:23">if <condition pos:start="56:12" pos:end="56:59">(<expr pos:start="56:13" pos:end="56:58"><operator pos:start="56:13" pos:end="56:13">(</operator><name pos:start="56:14" pos:end="56:16">err</name> <operator pos:start="56:18" pos:end="56:18">=</operator> <call pos:start="56:20" pos:end="56:53"><name pos:start="56:20" pos:end="56:50">ff_MPV_common_frame_size_change</name><argument_list pos:start="56:51" pos:end="56:53">(<argument pos:start="56:52" pos:end="56:52"><expr pos:start="56:52" pos:end="56:52"><name pos:start="56:52" pos:end="56:52">s</name></expr></argument>)</argument_list></call><operator pos:start="56:54" pos:end="56:54">)</operator> <operator pos:start="56:56" pos:end="56:56">&lt;</operator> <literal type="number" pos:start="56:58" pos:end="56:58">0</literal></expr>)</condition><block type="pseudo" pos:start="58:13" pos:end="58:23"><block_content pos:start="58:13" pos:end="58:23">

            <return pos:start="58:13" pos:end="58:23">return <expr pos:start="58:20" pos:end="58:22"><name pos:start="58:20" pos:end="58:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="64:5" pos:end="64:54"><expr pos:start="64:5" pos:end="64:53"><name pos:start="64:5" pos:end="64:26"><name pos:start="64:5" pos:end="64:5">s</name><operator pos:start="64:6" pos:end="64:7">-&gt;</operator><name pos:start="64:8" pos:end="64:12">avctx</name><operator pos:start="64:13" pos:end="64:14">-&gt;</operator><name pos:start="64:15" pos:end="64:26">coded_height</name></name>  <operator pos:start="64:29" pos:end="64:29">=</operator> <name pos:start="64:31" pos:end="64:53"><name pos:start="64:31" pos:end="64:32">s1</name><operator pos:start="64:33" pos:end="64:34">-&gt;</operator><name pos:start="64:35" pos:end="64:39">avctx</name><operator pos:start="64:40" pos:end="64:41">-&gt;</operator><name pos:start="64:42" pos:end="64:53">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="66:5" pos:end="66:53"><expr pos:start="66:5" pos:end="66:52"><name pos:start="66:5" pos:end="66:25"><name pos:start="66:5" pos:end="66:5">s</name><operator pos:start="66:6" pos:end="66:7">-&gt;</operator><name pos:start="66:8" pos:end="66:12">avctx</name><operator pos:start="66:13" pos:end="66:14">-&gt;</operator><name pos:start="66:15" pos:end="66:25">coded_width</name></name>   <operator pos:start="66:29" pos:end="66:29">=</operator> <name pos:start="66:31" pos:end="66:52"><name pos:start="66:31" pos:end="66:32">s1</name><operator pos:start="66:33" pos:end="66:34">-&gt;</operator><name pos:start="66:35" pos:end="66:39">avctx</name><operator pos:start="66:40" pos:end="66:41">-&gt;</operator><name pos:start="66:42" pos:end="66:52">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="68:5" pos:end="68:47"><expr pos:start="68:5" pos:end="68:46"><name pos:start="68:5" pos:end="68:19"><name pos:start="68:5" pos:end="68:5">s</name><operator pos:start="68:6" pos:end="68:7">-&gt;</operator><name pos:start="68:8" pos:end="68:12">avctx</name><operator pos:start="68:13" pos:end="68:14">-&gt;</operator><name pos:start="68:15" pos:end="68:19">width</name></name>         <operator pos:start="68:29" pos:end="68:29">=</operator> <name pos:start="68:31" pos:end="68:46"><name pos:start="68:31" pos:end="68:32">s1</name><operator pos:start="68:33" pos:end="68:34">-&gt;</operator><name pos:start="68:35" pos:end="68:39">avctx</name><operator pos:start="68:40" pos:end="68:41">-&gt;</operator><name pos:start="68:42" pos:end="68:46">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="70:5" pos:end="70:48"><expr pos:start="70:5" pos:end="70:47"><name pos:start="70:5" pos:end="70:20"><name pos:start="70:5" pos:end="70:5">s</name><operator pos:start="70:6" pos:end="70:7">-&gt;</operator><name pos:start="70:8" pos:end="70:12">avctx</name><operator pos:start="70:13" pos:end="70:14">-&gt;</operator><name pos:start="70:15" pos:end="70:20">height</name></name>        <operator pos:start="70:29" pos:end="70:29">=</operator> <name pos:start="70:31" pos:end="70:47"><name pos:start="70:31" pos:end="70:32">s1</name><operator pos:start="70:33" pos:end="70:34">-&gt;</operator><name pos:start="70:35" pos:end="70:39">avctx</name><operator pos:start="70:40" pos:end="70:41">-&gt;</operator><name pos:start="70:42" pos:end="70:47">height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="74:5" pos:end="74:55"><expr pos:start="74:5" pos:end="74:54"><name pos:start="74:5" pos:end="74:27"><name pos:start="74:5" pos:end="74:5">s</name><operator pos:start="74:6" pos:end="74:7">-&gt;</operator><name pos:start="74:8" pos:end="74:27">coded_picture_number</name></name> <operator pos:start="74:29" pos:end="74:29">=</operator> <name pos:start="74:31" pos:end="74:54"><name pos:start="74:31" pos:end="74:32">s1</name><operator pos:start="74:33" pos:end="74:34">-&gt;</operator><name pos:start="74:35" pos:end="74:54">coded_picture_number</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="76:5" pos:end="76:49"><expr pos:start="76:5" pos:end="76:48"><name pos:start="76:5" pos:end="76:21"><name pos:start="76:5" pos:end="76:5">s</name><operator pos:start="76:6" pos:end="76:7">-&gt;</operator><name pos:start="76:8" pos:end="76:21">picture_number</name></name>       <operator pos:start="76:29" pos:end="76:29">=</operator> <name pos:start="76:31" pos:end="76:48"><name pos:start="76:31" pos:end="76:32">s1</name><operator pos:start="76:33" pos:end="76:34">-&gt;</operator><name pos:start="76:35" pos:end="76:48">picture_number</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="78:5" pos:end="78:55"><expr pos:start="78:5" pos:end="78:54"><name pos:start="78:5" pos:end="78:27"><name pos:start="78:5" pos:end="78:5">s</name><operator pos:start="78:6" pos:end="78:7">-&gt;</operator><name pos:start="78:8" pos:end="78:27">input_picture_number</name></name> <operator pos:start="78:29" pos:end="78:29">=</operator> <name pos:start="78:31" pos:end="78:54"><name pos:start="78:31" pos:end="78:32">s1</name><operator pos:start="78:33" pos:end="78:34">-&gt;</operator><name pos:start="78:35" pos:end="78:54">input_picture_number</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="82:5" pos:end="82:73"><expr pos:start="82:5" pos:end="82:72"><call pos:start="82:5" pos:end="82:72"><name pos:start="82:5" pos:end="82:10">memcpy</name><argument_list pos:start="82:11" pos:end="82:72">(<argument pos:start="82:12" pos:end="82:21"><expr pos:start="82:12" pos:end="82:21"><name pos:start="82:12" pos:end="82:21"><name pos:start="82:12" pos:end="82:12">s</name><operator pos:start="82:13" pos:end="82:14">-&gt;</operator><name pos:start="82:15" pos:end="82:21">picture</name></name></expr></argument>, <argument pos:start="82:24" pos:end="82:34"><expr pos:start="82:24" pos:end="82:34"><name pos:start="82:24" pos:end="82:34"><name pos:start="82:24" pos:end="82:25">s1</name><operator pos:start="82:26" pos:end="82:27">-&gt;</operator><name pos:start="82:28" pos:end="82:34">picture</name></name></expr></argument>, <argument pos:start="82:37" pos:end="82:71"><expr pos:start="82:37" pos:end="82:71"><name pos:start="82:37" pos:end="82:53"><name pos:start="82:37" pos:end="82:38">s1</name><operator pos:start="82:39" pos:end="82:40">-&gt;</operator><name pos:start="82:41" pos:end="82:53">picture_count</name></name> <operator pos:start="82:55" pos:end="82:55">*</operator> <sizeof pos:start="82:57" pos:end="82:71">sizeof<argument_list pos:start="82:63" pos:end="82:71">(<argument pos:start="82:64" pos:end="82:70"><expr pos:start="82:64" pos:end="82:70"><name pos:start="82:64" pos:end="82:70">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="84:5" pos:end="86:72"><expr pos:start="84:5" pos:end="86:71"><call pos:start="84:5" pos:end="86:71"><name pos:start="84:5" pos:end="84:10">memcpy</name><argument_list pos:start="84:11" pos:end="86:71">(<argument pos:start="84:12" pos:end="84:27"><expr pos:start="84:12" pos:end="84:27"><operator pos:start="84:12" pos:end="84:12">&amp;</operator><name pos:start="84:13" pos:end="84:27"><name pos:start="84:13" pos:end="84:13">s</name><operator pos:start="84:14" pos:end="84:15">-&gt;</operator><name pos:start="84:16" pos:end="84:27">last_picture</name></name></expr></argument>, <argument pos:start="84:30" pos:end="84:46"><expr pos:start="84:30" pos:end="84:46"><operator pos:start="84:30" pos:end="84:30">&amp;</operator><name pos:start="84:31" pos:end="84:46"><name pos:start="84:31" pos:end="84:32">s1</name><operator pos:start="84:33" pos:end="84:34">-&gt;</operator><name pos:start="84:35" pos:end="84:46">last_picture</name></name></expr></argument>,

           <argument pos:start="86:12" pos:end="86:70"><expr pos:start="86:12" pos:end="86:70"><operator pos:start="86:12" pos:end="86:12">(</operator><name pos:start="86:13" pos:end="86:16">char</name> <operator pos:start="86:18" pos:end="86:18">*</operator><operator pos:start="86:19" pos:end="86:19">)</operator> <operator pos:start="86:21" pos:end="86:21">&amp;</operator><name pos:start="86:22" pos:end="86:41"><name pos:start="86:22" pos:end="86:23">s1</name><operator pos:start="86:24" pos:end="86:25">-&gt;</operator><name pos:start="86:26" pos:end="86:41">last_picture_ptr</name></name> <operator pos:start="86:43" pos:end="86:43">-</operator> <operator pos:start="86:45" pos:end="86:45">(</operator><name pos:start="86:46" pos:end="86:49">char</name> <operator pos:start="86:51" pos:end="86:51">*</operator><operator pos:start="86:52" pos:end="86:52">)</operator> <operator pos:start="86:54" pos:end="86:54">&amp;</operator><name pos:start="86:55" pos:end="86:70"><name pos:start="86:55" pos:end="86:56">s1</name><operator pos:start="86:57" pos:end="86:58">-&gt;</operator><name pos:start="86:59" pos:end="86:70">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="90:5" pos:end="90:64">// reset s-&gt;picture[].f.extended_data to s-&gt;picture[].f.data</comment>

    <for pos:start="92:5" pos:end="94:61">for <control pos:start="92:9" pos:end="92:42">(<init pos:start="92:10" pos:end="92:15"><expr pos:start="92:10" pos:end="92:14"><name pos:start="92:10" pos:end="92:10">i</name> <operator pos:start="92:12" pos:end="92:12">=</operator> <literal type="number" pos:start="92:14" pos:end="92:14">0</literal></expr>;</init> <condition pos:start="92:17" pos:end="92:37"><expr pos:start="92:17" pos:end="92:36"><name pos:start="92:17" pos:end="92:17">i</name> <operator pos:start="92:19" pos:end="92:19">&lt;</operator> <name pos:start="92:21" pos:end="92:36"><name pos:start="92:21" pos:end="92:21">s</name><operator pos:start="92:22" pos:end="92:23">-&gt;</operator><name pos:start="92:24" pos:end="92:36">picture_count</name></name></expr>;</condition> <incr pos:start="92:39" pos:end="92:41"><expr pos:start="92:39" pos:end="92:41"><name pos:start="92:39" pos:end="92:39">i</name><operator pos:start="92:40" pos:end="92:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="94:9" pos:end="94:61"><block_content pos:start="94:9" pos:end="94:61">

        <expr_stmt pos:start="94:9" pos:end="94:61"><expr pos:start="94:9" pos:end="94:60"><name pos:start="94:9" pos:end="94:21"><name pos:start="94:9" pos:end="94:9">s</name><operator pos:start="94:10" pos:end="94:11">-&gt;</operator><name pos:start="94:12" pos:end="94:18">picture</name><index pos:start="94:19" pos:end="94:21">[<expr pos:start="94:20" pos:end="94:20"><name pos:start="94:20" pos:end="94:20">i</name></expr>]</index></name><operator pos:start="94:22" pos:end="94:22">.</operator><name pos:start="94:23" pos:end="94:37"><name pos:start="94:23" pos:end="94:23">f</name><operator pos:start="94:24" pos:end="94:24">.</operator><name pos:start="94:25" pos:end="94:37">extended_data</name></name> <operator pos:start="94:39" pos:end="94:39">=</operator> <name pos:start="94:41" pos:end="94:53"><name pos:start="94:41" pos:end="94:41">s</name><operator pos:start="94:42" pos:end="94:43">-&gt;</operator><name pos:start="94:44" pos:end="94:50">picture</name><index pos:start="94:51" pos:end="94:53">[<expr pos:start="94:52" pos:end="94:52"><name pos:start="94:52" pos:end="94:52">i</name></expr>]</index></name><operator pos:start="94:54" pos:end="94:54">.</operator><name pos:start="94:55" pos:end="94:60"><name pos:start="94:55" pos:end="94:55">f</name><operator pos:start="94:56" pos:end="94:56">.</operator><name pos:start="94:57" pos:end="94:60">data</name></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="98:5" pos:end="98:76"><expr pos:start="98:5" pos:end="98:75"><name pos:start="98:5" pos:end="98:23"><name pos:start="98:5" pos:end="98:5">s</name><operator pos:start="98:6" pos:end="98:7">-&gt;</operator><name pos:start="98:8" pos:end="98:23">last_picture_ptr</name></name>    <operator pos:start="98:28" pos:end="98:28">=</operator> <call pos:start="98:30" pos:end="98:75"><name pos:start="98:30" pos:end="98:43">REBASE_PICTURE</name><argument_list pos:start="98:44" pos:end="98:75">(<argument pos:start="98:45" pos:end="98:64"><expr pos:start="98:45" pos:end="98:64"><name pos:start="98:45" pos:end="98:64"><name pos:start="98:45" pos:end="98:46">s1</name><operator pos:start="98:47" pos:end="98:48">-&gt;</operator><name pos:start="98:49" pos:end="98:64">last_picture_ptr</name></name></expr></argument>,    <argument pos:start="98:70" pos:end="98:70"><expr pos:start="98:70" pos:end="98:70"><name pos:start="98:70" pos:end="98:70">s</name></expr></argument>, <argument pos:start="98:73" pos:end="98:74"><expr pos:start="98:73" pos:end="98:74"><name pos:start="98:73" pos:end="98:74">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="100:5" pos:end="100:76"><expr pos:start="100:5" pos:end="100:75"><name pos:start="100:5" pos:end="100:26"><name pos:start="100:5" pos:end="100:5">s</name><operator pos:start="100:6" pos:end="100:7">-&gt;</operator><name pos:start="100:8" pos:end="100:26">current_picture_ptr</name></name> <operator pos:start="100:28" pos:end="100:28">=</operator> <call pos:start="100:30" pos:end="100:75"><name pos:start="100:30" pos:end="100:43">REBASE_PICTURE</name><argument_list pos:start="100:44" pos:end="100:75">(<argument pos:start="100:45" pos:end="100:67"><expr pos:start="100:45" pos:end="100:67"><name pos:start="100:45" pos:end="100:67"><name pos:start="100:45" pos:end="100:46">s1</name><operator pos:start="100:47" pos:end="100:48">-&gt;</operator><name pos:start="100:49" pos:end="100:67">current_picture_ptr</name></name></expr></argument>, <argument pos:start="100:70" pos:end="100:70"><expr pos:start="100:70" pos:end="100:70"><name pos:start="100:70" pos:end="100:70">s</name></expr></argument>, <argument pos:start="100:73" pos:end="100:74"><expr pos:start="100:73" pos:end="100:74"><name pos:start="100:73" pos:end="100:74">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="102:5" pos:end="102:76"><expr pos:start="102:5" pos:end="102:75"><name pos:start="102:5" pos:end="102:23"><name pos:start="102:5" pos:end="102:5">s</name><operator pos:start="102:6" pos:end="102:7">-&gt;</operator><name pos:start="102:8" pos:end="102:23">next_picture_ptr</name></name>    <operator pos:start="102:28" pos:end="102:28">=</operator> <call pos:start="102:30" pos:end="102:75"><name pos:start="102:30" pos:end="102:43">REBASE_PICTURE</name><argument_list pos:start="102:44" pos:end="102:75">(<argument pos:start="102:45" pos:end="102:64"><expr pos:start="102:45" pos:end="102:64"><name pos:start="102:45" pos:end="102:64"><name pos:start="102:45" pos:end="102:46">s1</name><operator pos:start="102:47" pos:end="102:48">-&gt;</operator><name pos:start="102:49" pos:end="102:64">next_picture_ptr</name></name></expr></argument>,    <argument pos:start="102:70" pos:end="102:70"><expr pos:start="102:70" pos:end="102:70"><name pos:start="102:70" pos:end="102:70">s</name></expr></argument>, <argument pos:start="102:73" pos:end="102:74"><expr pos:start="102:73" pos:end="102:74"><name pos:start="102:73" pos:end="102:74">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="106:5" pos:end="106:27">// Error/bug resilience</comment>

    <expr_stmt pos:start="108:5" pos:end="108:55"><expr pos:start="108:5" pos:end="108:54"><name pos:start="108:5" pos:end="108:27"><name pos:start="108:5" pos:end="108:5">s</name><operator pos:start="108:6" pos:end="108:7">-&gt;</operator><name pos:start="108:8" pos:end="108:27">next_p_frame_damaged</name></name> <operator pos:start="108:29" pos:end="108:29">=</operator> <name pos:start="108:31" pos:end="108:54"><name pos:start="108:31" pos:end="108:32">s1</name><operator pos:start="108:33" pos:end="108:34">-&gt;</operator><name pos:start="108:35" pos:end="108:54">next_p_frame_damaged</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="110:5" pos:end="110:50"><expr pos:start="110:5" pos:end="110:49"><name pos:start="110:5" pos:end="110:22"><name pos:start="110:5" pos:end="110:5">s</name><operator pos:start="110:6" pos:end="110:7">-&gt;</operator><name pos:start="110:8" pos:end="110:22">workaround_bugs</name></name>      <operator pos:start="110:29" pos:end="110:29">=</operator> <name pos:start="110:31" pos:end="110:49"><name pos:start="110:31" pos:end="110:32">s1</name><operator pos:start="110:33" pos:end="110:34">-&gt;</operator><name pos:start="110:35" pos:end="110:49">workaround_bugs</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="114:5" pos:end="114:24">// MPEG4 timing info</comment>

    <expr_stmt pos:start="116:5" pos:end="118:68"><expr pos:start="116:5" pos:end="118:67"><call pos:start="116:5" pos:end="118:67"><name pos:start="116:5" pos:end="116:10">memcpy</name><argument_list pos:start="116:11" pos:end="118:67">(<argument pos:start="116:12" pos:end="116:34"><expr pos:start="116:12" pos:end="116:34"><operator pos:start="116:12" pos:end="116:12">&amp;</operator><name pos:start="116:13" pos:end="116:34"><name pos:start="116:13" pos:end="116:13">s</name><operator pos:start="116:14" pos:end="116:15">-&gt;</operator><name pos:start="116:16" pos:end="116:34">time_increment_bits</name></name></expr></argument>, <argument pos:start="116:37" pos:end="116:60"><expr pos:start="116:37" pos:end="116:60"><operator pos:start="116:37" pos:end="116:37">&amp;</operator><name pos:start="116:38" pos:end="116:60"><name pos:start="116:38" pos:end="116:39">s1</name><operator pos:start="116:40" pos:end="116:41">-&gt;</operator><name pos:start="116:42" pos:end="116:60">time_increment_bits</name></name></expr></argument>,

           <argument pos:start="118:12" pos:end="118:66"><expr pos:start="118:12" pos:end="118:66"><operator pos:start="118:12" pos:end="118:12">(</operator><name pos:start="118:13" pos:end="118:16">char</name> <operator pos:start="118:18" pos:end="118:18">*</operator><operator pos:start="118:19" pos:end="118:19">)</operator> <operator pos:start="118:21" pos:end="118:21">&amp;</operator><name pos:start="118:22" pos:end="118:30"><name pos:start="118:22" pos:end="118:23">s1</name><operator pos:start="118:24" pos:end="118:25">-&gt;</operator><name pos:start="118:26" pos:end="118:30">shape</name></name> <operator pos:start="118:32" pos:end="118:32">-</operator> <operator pos:start="118:34" pos:end="118:34">(</operator><name pos:start="118:35" pos:end="118:38">char</name> <operator pos:start="118:40" pos:end="118:40">*</operator><operator pos:start="118:41" pos:end="118:41">)</operator> <operator pos:start="118:43" pos:end="118:43">&amp;</operator><name pos:start="118:44" pos:end="118:66"><name pos:start="118:44" pos:end="118:45">s1</name><operator pos:start="118:46" pos:end="118:47">-&gt;</operator><name pos:start="118:48" pos:end="118:66">time_increment_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="122:5" pos:end="122:19">// B-frame info</comment>

    <expr_stmt pos:start="124:5" pos:end="124:39"><expr pos:start="124:5" pos:end="124:38"><name pos:start="124:5" pos:end="124:19"><name pos:start="124:5" pos:end="124:5">s</name><operator pos:start="124:6" pos:end="124:7">-&gt;</operator><name pos:start="124:8" pos:end="124:19">max_b_frames</name></name> <operator pos:start="124:21" pos:end="124:21">=</operator> <name pos:start="124:23" pos:end="124:38"><name pos:start="124:23" pos:end="124:24">s1</name><operator pos:start="124:25" pos:end="124:26">-&gt;</operator><name pos:start="124:27" pos:end="124:38">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="126:5" pos:end="126:36"><expr pos:start="126:5" pos:end="126:35"><name pos:start="126:5" pos:end="126:16"><name pos:start="126:5" pos:end="126:5">s</name><operator pos:start="126:6" pos:end="126:7">-&gt;</operator><name pos:start="126:8" pos:end="126:16">low_delay</name></name>    <operator pos:start="126:21" pos:end="126:21">=</operator> <name pos:start="126:23" pos:end="126:35"><name pos:start="126:23" pos:end="126:24">s1</name><operator pos:start="126:25" pos:end="126:26">-&gt;</operator><name pos:start="126:27" pos:end="126:35">low_delay</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="128:5" pos:end="128:35"><expr pos:start="128:5" pos:end="128:34"><name pos:start="128:5" pos:end="128:15"><name pos:start="128:5" pos:end="128:5">s</name><operator pos:start="128:6" pos:end="128:7">-&gt;</operator><name pos:start="128:8" pos:end="128:15">dropable</name></name>     <operator pos:start="128:21" pos:end="128:21">=</operator> <name pos:start="128:23" pos:end="128:34"><name pos:start="128:23" pos:end="128:24">s1</name><operator pos:start="128:25" pos:end="128:26">-&gt;</operator><name pos:start="128:27" pos:end="128:34">dropable</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="132:5" pos:end="132:35">// DivX handling (doesn't work)</comment>

    <expr_stmt pos:start="134:5" pos:end="134:38"><expr pos:start="134:5" pos:end="134:37"><name pos:start="134:5" pos:end="134:18"><name pos:start="134:5" pos:end="134:5">s</name><operator pos:start="134:6" pos:end="134:7">-&gt;</operator><name pos:start="134:8" pos:end="134:18">divx_packed</name></name>  <operator pos:start="134:21" pos:end="134:21">=</operator> <name pos:start="134:23" pos:end="134:37"><name pos:start="134:23" pos:end="134:24">s1</name><operator pos:start="134:25" pos:end="134:26">-&gt;</operator><name pos:start="134:27" pos:end="134:37">divx_packed</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="138:5" pos:end="160:5"><if pos:start="138:5" pos:end="160:5">if <condition pos:start="138:8" pos:end="138:29">(<expr pos:start="138:9" pos:end="138:28"><name pos:start="138:9" pos:end="138:28"><name pos:start="138:9" pos:end="138:10">s1</name><operator pos:start="138:11" pos:end="138:12">-&gt;</operator><name pos:start="138:13" pos:end="138:28">bitstream_buffer</name></name></expr>)</condition> <block pos:start="138:31" pos:end="160:5">{<block_content pos:start="140:9" pos:end="158:45">

        <if_stmt pos:start="140:9" pos:end="148:64"><if pos:start="140:9" pos:end="148:64">if <condition pos:start="140:12" pos:end="142:78">(<expr pos:start="140:13" pos:end="142:77"><name pos:start="140:13" pos:end="140:37"><name pos:start="140:13" pos:end="140:14">s1</name><operator pos:start="140:15" pos:end="140:16">-&gt;</operator><name pos:start="140:17" pos:end="140:37">bitstream_buffer_size</name></name> <operator pos:start="140:39" pos:end="140:39">+</operator>

            <name pos:start="142:13" pos:end="142:40">FF_INPUT_BUFFER_PADDING_SIZE</name> <operator pos:start="142:42" pos:end="142:42">&gt;</operator> <name pos:start="142:44" pos:end="142:77"><name pos:start="142:44" pos:end="142:44">s</name><operator pos:start="142:45" pos:end="142:46">-&gt;</operator><name pos:start="142:47" pos:end="142:77">allocated_bitstream_buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="144:13" pos:end="148:64"><block_content pos:start="144:13" pos:end="148:64">

            <expr_stmt pos:start="144:13" pos:end="148:64"><expr pos:start="144:13" pos:end="148:63"><call pos:start="144:13" pos:end="148:63"><name pos:start="144:13" pos:end="144:26">av_fast_malloc</name><argument_list pos:start="144:27" pos:end="148:63">(<argument pos:start="144:28" pos:end="144:47"><expr pos:start="144:28" pos:end="144:47"><operator pos:start="144:28" pos:end="144:28">&amp;</operator><name pos:start="144:29" pos:end="144:47"><name pos:start="144:29" pos:end="144:29">s</name><operator pos:start="144:30" pos:end="144:31">-&gt;</operator><name pos:start="144:32" pos:end="144:47">bitstream_buffer</name></name></expr></argument>,

                           <argument pos:start="146:28" pos:end="146:62"><expr pos:start="146:28" pos:end="146:62"><operator pos:start="146:28" pos:end="146:28">&amp;</operator><name pos:start="146:29" pos:end="146:62"><name pos:start="146:29" pos:end="146:29">s</name><operator pos:start="146:30" pos:end="146:31">-&gt;</operator><name pos:start="146:32" pos:end="146:62">allocated_bitstream_buffer_size</name></name></expr></argument>,

                           <argument pos:start="148:28" pos:end="148:62"><expr pos:start="148:28" pos:end="148:62"><name pos:start="148:28" pos:end="148:62"><name pos:start="148:28" pos:end="148:29">s1</name><operator pos:start="148:30" pos:end="148:31">-&gt;</operator><name pos:start="148:32" pos:end="148:62">allocated_bitstream_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="150:13" pos:end="150:65"><expr pos:start="150:13" pos:end="150:64"><name pos:start="150:13" pos:end="150:36"><name pos:start="150:13" pos:end="150:13">s</name><operator pos:start="150:14" pos:end="150:15">-&gt;</operator><name pos:start="150:16" pos:end="150:36">bitstream_buffer_size</name></name> <operator pos:start="150:38" pos:end="150:38">=</operator> <name pos:start="150:40" pos:end="150:64"><name pos:start="150:40" pos:end="150:41">s1</name><operator pos:start="150:42" pos:end="150:43">-&gt;</operator><name pos:start="150:44" pos:end="150:64">bitstream_buffer_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="152:9" pos:end="154:42"><expr pos:start="152:9" pos:end="154:41"><call pos:start="152:9" pos:end="154:41"><name pos:start="152:9" pos:end="152:14">memcpy</name><argument_list pos:start="152:15" pos:end="154:41">(<argument pos:start="152:16" pos:end="152:34"><expr pos:start="152:16" pos:end="152:34"><name pos:start="152:16" pos:end="152:34"><name pos:start="152:16" pos:end="152:16">s</name><operator pos:start="152:17" pos:end="152:18">-&gt;</operator><name pos:start="152:19" pos:end="152:34">bitstream_buffer</name></name></expr></argument>, <argument pos:start="152:37" pos:end="152:56"><expr pos:start="152:37" pos:end="152:56"><name pos:start="152:37" pos:end="152:56"><name pos:start="152:37" pos:end="152:38">s1</name><operator pos:start="152:39" pos:end="152:40">-&gt;</operator><name pos:start="152:41" pos:end="152:56">bitstream_buffer</name></name></expr></argument>,

               <argument pos:start="154:16" pos:end="154:40"><expr pos:start="154:16" pos:end="154:40"><name pos:start="154:16" pos:end="154:40"><name pos:start="154:16" pos:end="154:17">s1</name><operator pos:start="154:18" pos:end="154:19">-&gt;</operator><name pos:start="154:20" pos:end="154:40">bitstream_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="156:9" pos:end="158:45"><expr pos:start="156:9" pos:end="158:44"><call pos:start="156:9" pos:end="158:44"><name pos:start="156:9" pos:end="156:14">memset</name><argument_list pos:start="156:15" pos:end="158:44">(<argument pos:start="156:16" pos:end="156:61"><expr pos:start="156:16" pos:end="156:61"><name pos:start="156:16" pos:end="156:34"><name pos:start="156:16" pos:end="156:16">s</name><operator pos:start="156:17" pos:end="156:18">-&gt;</operator><name pos:start="156:19" pos:end="156:34">bitstream_buffer</name></name> <operator pos:start="156:36" pos:end="156:36">+</operator> <name pos:start="156:38" pos:end="156:61"><name pos:start="156:38" pos:end="156:38">s</name><operator pos:start="156:39" pos:end="156:40">-&gt;</operator><name pos:start="156:41" pos:end="156:61">bitstream_buffer_size</name></name></expr></argument>, <argument pos:start="156:64" pos:end="156:64"><expr pos:start="156:64" pos:end="156:64"><literal type="number" pos:start="156:64" pos:end="156:64">0</literal></expr></argument>,

               <argument pos:start="158:16" pos:end="158:43"><expr pos:start="158:16" pos:end="158:43"><name pos:start="158:16" pos:end="158:43">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="164:5" pos:end="164:29">// MPEG2/interlacing info</comment>

    <expr_stmt pos:start="166:5" pos:end="168:72"><expr pos:start="166:5" pos:end="168:71"><call pos:start="166:5" pos:end="168:71"><name pos:start="166:5" pos:end="166:10">memcpy</name><argument_list pos:start="166:11" pos:end="168:71">(<argument pos:start="166:12" pos:end="166:35"><expr pos:start="166:12" pos:end="166:35"><operator pos:start="166:12" pos:end="166:12">&amp;</operator><name pos:start="166:13" pos:end="166:35"><name pos:start="166:13" pos:end="166:13">s</name><operator pos:start="166:14" pos:end="166:15">-&gt;</operator><name pos:start="166:16" pos:end="166:35">progressive_sequence</name></name></expr></argument>, <argument pos:start="166:38" pos:end="166:62"><expr pos:start="166:38" pos:end="166:62"><operator pos:start="166:38" pos:end="166:38">&amp;</operator><name pos:start="166:39" pos:end="166:62"><name pos:start="166:39" pos:end="166:40">s1</name><operator pos:start="166:41" pos:end="166:42">-&gt;</operator><name pos:start="166:43" pos:end="166:62">progressive_sequence</name></name></expr></argument>,

           <argument pos:start="168:12" pos:end="168:70"><expr pos:start="168:12" pos:end="168:70"><operator pos:start="168:12" pos:end="168:12">(</operator><name pos:start="168:13" pos:end="168:16">char</name> <operator pos:start="168:18" pos:end="168:18">*</operator><operator pos:start="168:19" pos:end="168:19">)</operator> <operator pos:start="168:21" pos:end="168:21">&amp;</operator><name pos:start="168:22" pos:end="168:33"><name pos:start="168:22" pos:end="168:23">s1</name><operator pos:start="168:24" pos:end="168:25">-&gt;</operator><name pos:start="168:26" pos:end="168:33">rtp_mode</name></name> <operator pos:start="168:35" pos:end="168:35">-</operator> <operator pos:start="168:37" pos:end="168:37">(</operator><name pos:start="168:38" pos:end="168:41">char</name> <operator pos:start="168:43" pos:end="168:43">*</operator><operator pos:start="168:44" pos:end="168:44">)</operator> <operator pos:start="168:46" pos:end="168:46">&amp;</operator><name pos:start="168:47" pos:end="168:70"><name pos:start="168:47" pos:end="168:48">s1</name><operator pos:start="168:49" pos:end="168:50">-&gt;</operator><name pos:start="168:51" pos:end="168:70">progressive_sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="172:5" pos:end="188:5"><if pos:start="172:5" pos:end="188:5">if <condition pos:start="172:8" pos:end="172:25">(<expr pos:start="172:9" pos:end="172:24"><operator pos:start="172:9" pos:end="172:9">!</operator><name pos:start="172:10" pos:end="172:24"><name pos:start="172:10" pos:end="172:11">s1</name><operator pos:start="172:12" pos:end="172:13">-&gt;</operator><name pos:start="172:14" pos:end="172:24">first_field</name></name></expr>)</condition> <block pos:start="172:27" pos:end="188:5">{<block_content pos:start="174:9" pos:end="186:9">

        <expr_stmt pos:start="174:9" pos:end="174:42"><expr pos:start="174:9" pos:end="174:41"><name pos:start="174:9" pos:end="174:25"><name pos:start="174:9" pos:end="174:9">s</name><operator pos:start="174:10" pos:end="174:11">-&gt;</operator><name pos:start="174:12" pos:end="174:25">last_pict_type</name></name> <operator pos:start="174:27" pos:end="174:27">=</operator> <name pos:start="174:29" pos:end="174:41"><name pos:start="174:29" pos:end="174:30">s1</name><operator pos:start="174:31" pos:end="174:32">-&gt;</operator><name pos:start="174:33" pos:end="174:41">pict_type</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="176:9" pos:end="178:83"><if pos:start="176:9" pos:end="178:83">if <condition pos:start="176:12" pos:end="176:36">(<expr pos:start="176:13" pos:end="176:35"><name pos:start="176:13" pos:end="176:35"><name pos:start="176:13" pos:end="176:14">s1</name><operator pos:start="176:15" pos:end="176:16">-&gt;</operator><name pos:start="176:17" pos:end="176:35">current_picture_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="178:13" pos:end="178:83"><block_content pos:start="178:13" pos:end="178:83">

            <expr_stmt pos:start="178:13" pos:end="178:83"><expr pos:start="178:13" pos:end="178:82"><name pos:start="178:13" pos:end="178:45"><name pos:start="178:13" pos:end="178:13">s</name><operator pos:start="178:14" pos:end="178:15">-&gt;</operator><name pos:start="178:16" pos:end="178:30">last_lambda_for</name><index pos:start="178:31" pos:end="178:45">[<expr pos:start="178:32" pos:end="178:44"><name pos:start="178:32" pos:end="178:44"><name pos:start="178:32" pos:end="178:33">s1</name><operator pos:start="178:34" pos:end="178:35">-&gt;</operator><name pos:start="178:36" pos:end="178:44">pict_type</name></name></expr>]</index></name> <operator pos:start="178:47" pos:end="178:47">=</operator> <name pos:start="178:49" pos:end="178:82"><name pos:start="178:49" pos:end="178:50">s1</name><operator pos:start="178:51" pos:end="178:52">-&gt;</operator><name pos:start="178:53" pos:end="178:71">current_picture_ptr</name><operator pos:start="178:72" pos:end="178:73">-&gt;</operator><name pos:start="178:74" pos:end="178:74">f</name><operator pos:start="178:75" pos:end="178:75">.</operator><name pos:start="178:76" pos:end="178:82">quality</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="182:9" pos:end="186:9"><if pos:start="182:9" pos:end="186:9">if <condition pos:start="182:12" pos:end="182:47">(<expr pos:start="182:13" pos:end="182:46"><name pos:start="182:13" pos:end="182:25"><name pos:start="182:13" pos:end="182:14">s1</name><operator pos:start="182:15" pos:end="182:16">-&gt;</operator><name pos:start="182:17" pos:end="182:25">pict_type</name></name> <operator pos:start="182:27" pos:end="182:28">!=</operator> <name pos:start="182:30" pos:end="182:46">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="182:49" pos:end="186:9">{<block_content pos:start="184:13" pos:end="184:52">

            <expr_stmt pos:start="184:13" pos:end="184:52"><expr pos:start="184:13" pos:end="184:51"><name pos:start="184:13" pos:end="184:35"><name pos:start="184:13" pos:end="184:13">s</name><operator pos:start="184:14" pos:end="184:15">-&gt;</operator><name pos:start="184:16" pos:end="184:35">last_non_b_pict_type</name></name> <operator pos:start="184:37" pos:end="184:37">=</operator> <name pos:start="184:39" pos:end="184:51"><name pos:start="184:39" pos:end="184:40">s1</name><operator pos:start="184:41" pos:end="184:42">-&gt;</operator><name pos:start="184:43" pos:end="184:51">pict_type</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="192:5" pos:end="192:13">return <expr pos:start="192:12" pos:end="192:12"><literal type="number" pos:start="192:12" pos:end="192:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
