<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6792.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:54">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, 

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:39"><decl pos:start="5:30" pos:end="5:39"><type pos:start="5:30" pos:end="5:39"><name pos:start="5:30" pos:end="5:34">UINT8</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:39">buf</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="213:1">{<block_content pos:start="9:5" pos:end="211:25">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">Mpeg1Context</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:38">= <expr pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:27">avctx</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">UINT8</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:18">buf_end</name></decl>, <decl pos:start="11:21" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:28">buf_ptr</name></decl>, <decl pos:start="11:31" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:40">buf_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:65"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">len</name></decl>, <decl pos:start="13:14" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:29">start_code_found</name></decl>, <decl pos:start="13:32" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:34">ret</name></decl>, <decl pos:start="13:37" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:37" pos:end="13:40">code</name></decl>, <decl pos:start="13:43" pos:end="13:52"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:43" pos:end="13:52">start_code</name></decl>, <decl pos:start="13:55" pos:end="13:64"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:55" pos:end="13:64">input_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AVPicture</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:22">picture</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">MpegEncContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:22">s2</name> <init pos:start="17:24" pos:end="17:41">= <expr pos:start="17:26" pos:end="17:41"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:41"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

            

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><call pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:11">dprintf</name><argument_list pos:start="21:12" pos:end="21:28">(<argument pos:start="21:13" pos:end="21:27"><expr pos:start="21:13" pos:end="21:27"><literal type="string" pos:start="21:13" pos:end="21:27">"fill_buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><operator pos:start="25:5" pos:end="25:5">*</operator><name pos:start="25:6" pos:end="25:14">data_size</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</expr_stmt>

    

    <comment type="block" pos:start="29:5" pos:end="29:39">/* special case for last picture */</comment>

    <if_stmt pos:start="31:5" pos:end="53:5"><if pos:start="31:5" pos:end="53:5">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:16">buf_size</name> <operator pos:start="31:18" pos:end="31:19">==</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>)</condition> <block pos:start="31:24" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:17">

        <if_stmt pos:start="33:9" pos:end="49:9"><if pos:start="33:9" pos:end="49:9">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:14">s2</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:30">picture_number</name></name> <operator pos:start="33:32" pos:end="33:32">&gt;</operator> <literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr>)</condition> <block pos:start="33:37" pos:end="49:9">{<block_content pos:start="35:13" pos:end="47:43">

            <expr_stmt pos:start="35:13" pos:end="35:51"><expr pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:19">picture</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">data</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr>]</index></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <name pos:start="35:32" pos:end="35:50"><name pos:start="35:32" pos:end="35:33">s2</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:47">next_picture</name><index pos:start="35:48" pos:end="35:50">[<expr pos:start="35:49" pos:end="35:49"><literal type="number" pos:start="35:49" pos:end="35:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:51"><expr pos:start="37:13" pos:end="37:50"><name pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:19">picture</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:25">data</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><literal type="number" pos:start="37:27" pos:end="37:27">1</literal></expr>]</index></name> <operator pos:start="37:30" pos:end="37:30">=</operator> <name pos:start="37:32" pos:end="37:50"><name pos:start="37:32" pos:end="37:33">s2</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:47">next_picture</name><index pos:start="37:48" pos:end="37:50">[<expr pos:start="37:49" pos:end="37:49"><literal type="number" pos:start="37:49" pos:end="37:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:51"><expr pos:start="39:13" pos:end="39:50"><name pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:19">picture</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:25">data</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">2</literal></expr>]</index></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <name pos:start="39:32" pos:end="39:50"><name pos:start="39:32" pos:end="39:33">s2</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:47">next_picture</name><index pos:start="39:48" pos:end="39:50">[<expr pos:start="39:49" pos:end="39:49"><literal type="number" pos:start="39:49" pos:end="39:49">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:48"><expr pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:19">picture</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:29">linesize</name><index pos:start="41:30" pos:end="41:32">[<expr pos:start="41:31" pos:end="41:31"><literal type="number" pos:start="41:31" pos:end="41:31">0</literal></expr>]</index></name> <operator pos:start="41:34" pos:end="41:34">=</operator> <name pos:start="41:36" pos:end="41:47"><name pos:start="41:36" pos:end="41:37">s2</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:47">linesize</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:52"><expr pos:start="43:13" pos:end="43:51"><name pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:19">picture</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:29">linesize</name><index pos:start="43:30" pos:end="43:32">[<expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">1</literal></expr>]</index></name> <operator pos:start="43:34" pos:end="43:34">=</operator> <name pos:start="43:36" pos:end="43:47"><name pos:start="43:36" pos:end="43:37">s2</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:47">linesize</name></name> <operator pos:start="43:49" pos:end="43:49">/</operator> <literal type="number" pos:start="43:51" pos:end="43:51">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:52"><expr pos:start="45:13" pos:end="45:51"><name pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:19">picture</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:29">linesize</name><index pos:start="45:30" pos:end="45:32">[<expr pos:start="45:31" pos:end="45:31"><literal type="number" pos:start="45:31" pos:end="45:31">2</literal></expr>]</index></name> <operator pos:start="45:34" pos:end="45:34">=</operator> <name pos:start="45:36" pos:end="45:47"><name pos:start="45:36" pos:end="45:37">s2</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:47">linesize</name></name> <operator pos:start="45:49" pos:end="45:49">/</operator> <literal type="number" pos:start="45:51" pos:end="45:51">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:43"><expr pos:start="47:13" pos:end="47:42"><operator pos:start="47:13" pos:end="47:13">*</operator><name pos:start="47:14" pos:end="47:22">data_size</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <sizeof pos:start="47:26" pos:end="47:42">sizeof<argument_list pos:start="47:32" pos:end="47:42">(<argument pos:start="47:33" pos:end="47:41"><expr pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:41">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:11">buf_ptr</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:11">buf_end</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:17">buf</name> <operator pos:start="59:19" pos:end="59:19">+</operator> <name pos:start="59:21" pos:end="59:28">buf_size</name></expr>;</expr_stmt>

    

    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="75:5">if <condition pos:start="63:8" pos:end="63:33">(<expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:23">repeat_field</name></name> <operator pos:start="63:25" pos:end="63:25">%</operator> <literal type="number" pos:start="63:27" pos:end="63:27">2</literal> <operator pos:start="63:29" pos:end="63:30">==</operator> <literal type="number" pos:start="63:32" pos:end="63:32">1</literal></expr>)</condition> <block pos:start="63:35" pos:end="75:5">{<block_content pos:start="65:9" pos:end="73:21">

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:23">repeat_field</name></name><operator pos:start="65:24" pos:end="65:25">++</operator></expr>;</expr_stmt>

        <comment type="line" pos:start="67:9" pos:end="67:117">//fprintf(stderr,"\nRepeating last frame: %d -&gt; %d! pict: %d %d", avctx-&gt;frame_number-1, avctx-&gt;frame_number,</comment>

        <comment type="line" pos:start="69:9" pos:end="69:104">//                                                         s2-&gt;picture_number, s-&gt;repeat_field);</comment>

        <expr_stmt pos:start="71:9" pos:end="71:39"><expr pos:start="71:9" pos:end="71:38"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:18">data_size</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <sizeof pos:start="71:22" pos:end="71:38">sizeof<argument_list pos:start="71:28" pos:end="71:38">(<argument pos:start="71:29" pos:end="71:37"><expr pos:start="71:29" pos:end="71:37"><name pos:start="71:29" pos:end="71:37">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:21">goto <name pos:start="73:14" pos:end="73:20">the_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

        

    <while pos:start="79:5" pos:end="207:5">while <condition pos:start="79:11" pos:end="79:29">(<expr pos:start="79:12" pos:end="79:28"><name pos:start="79:12" pos:end="79:18">buf_ptr</name> <operator pos:start="79:20" pos:end="79:20">&lt;</operator> <name pos:start="79:22" pos:end="79:28">buf_end</name></expr>)</condition> <block pos:start="79:31" pos:end="207:5">{<block_content pos:start="81:9" pos:end="205:9">

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:17">buf_start</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:27">buf_ptr</name></expr>;</expr_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:34">/* find start next code */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:68"><expr pos:start="85:9" pos:end="85:67"><name pos:start="85:9" pos:end="85:12">code</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:67"><name pos:start="85:16" pos:end="85:30">find_start_code</name><argument_list pos:start="85:31" pos:end="85:67">(<argument pos:start="85:32" pos:end="85:39"><expr pos:start="85:32" pos:end="85:39"><operator pos:start="85:32" pos:end="85:32">&amp;</operator><name pos:start="85:33" pos:end="85:39">buf_ptr</name></expr></argument>, <argument pos:start="85:42" pos:end="85:48"><expr pos:start="85:42" pos:end="85:48"><name pos:start="85:42" pos:end="85:48">buf_end</name></expr></argument>, <argument pos:start="85:51" pos:end="85:66"><expr pos:start="85:51" pos:end="85:66"><operator pos:start="85:51" pos:end="85:51">&amp;</operator><name pos:start="85:52" pos:end="85:66"><name pos:start="85:52" pos:end="85:52">s</name><operator pos:start="85:53" pos:end="85:54">-&gt;</operator><name pos:start="85:55" pos:end="85:66">header_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="95:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:22">(<expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:16">code</name> <operator pos:start="87:18" pos:end="87:19">&gt;=</operator> <literal type="number" pos:start="87:21" pos:end="87:21">0</literal></expr>)</condition> <block pos:start="87:24" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:33">

            <expr_stmt pos:start="89:13" pos:end="89:33"><expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:28">start_code_found</name> <operator pos:start="89:30" pos:end="89:30">=</operator> <literal type="number" pos:start="89:32" pos:end="89:32">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="91:11" pos:end="95:9">else <block pos:start="91:16" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:33">

            <expr_stmt pos:start="93:13" pos:end="93:33"><expr pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:28">start_code_found</name> <operator pos:start="93:30" pos:end="93:30">=</operator> <literal type="number" pos:start="93:32" pos:end="93:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="97:9" pos:end="97:28">/* copy to buffer */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:11">len</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <name pos:start="99:15" pos:end="99:21">buf_ptr</name> <operator pos:start="99:23" pos:end="99:23">-</operator> <name pos:start="99:25" pos:end="99:33">buf_start</name></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="205:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:60">(<expr pos:start="101:13" pos:end="101:59"><name pos:start="101:13" pos:end="101:15">len</name> <operator pos:start="101:17" pos:end="101:17">+</operator> <operator pos:start="101:19" pos:end="101:19">(</operator><name pos:start="101:20" pos:end="101:29"><name pos:start="101:20" pos:end="101:20">s</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:29">buf_ptr</name></name> <operator pos:start="101:31" pos:end="101:31">-</operator> <name pos:start="101:33" pos:end="101:41"><name pos:start="101:33" pos:end="101:33">s</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:41">buffer</name></name><operator pos:start="101:42" pos:end="101:42">)</operator> <operator pos:start="101:44" pos:end="101:44">&gt;</operator> <name pos:start="101:46" pos:end="101:59"><name pos:start="101:46" pos:end="101:46">s</name><operator pos:start="101:47" pos:end="101:48">-&gt;</operator><name pos:start="101:49" pos:end="101:59">buffer_size</name></name></expr>)</condition> <block pos:start="101:62" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:37">

            <comment type="block" pos:start="103:13" pos:end="103:38">/* data too big : flush */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:35"><expr pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:22">buf_ptr</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:34"><name pos:start="105:26" pos:end="105:26">s</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:34">buffer</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="109:37"><if pos:start="107:13" pos:end="109:37">if <condition pos:start="107:16" pos:end="107:33">(<expr pos:start="107:17" pos:end="107:32"><name pos:start="107:17" pos:end="107:32">start_code_found</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:37"><block_content pos:start="109:17" pos:end="109:37">

                <expr_stmt pos:start="109:17" pos:end="109:37"><expr pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:29"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:29">start_code</name></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <name pos:start="109:33" pos:end="109:36">code</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="205:9">else <block pos:start="111:16" pos:end="205:9">{<block_content pos:start="113:13" pos:end="203:13">

            <expr_stmt pos:start="113:13" pos:end="113:47"><expr pos:start="113:13" pos:end="113:46"><call pos:start="113:13" pos:end="113:46"><name pos:start="113:13" pos:end="113:18">memcpy</name><argument_list pos:start="113:19" pos:end="113:46">(<argument pos:start="113:20" pos:end="113:29"><expr pos:start="113:20" pos:end="113:29"><name pos:start="113:20" pos:end="113:29"><name pos:start="113:20" pos:end="113:20">s</name><operator pos:start="113:21" pos:end="113:22">-&gt;</operator><name pos:start="113:23" pos:end="113:29">buf_ptr</name></name></expr></argument>, <argument pos:start="113:32" pos:end="113:40"><expr pos:start="113:32" pos:end="113:40"><name pos:start="113:32" pos:end="113:40">buf_start</name></expr></argument>, <argument pos:start="113:43" pos:end="113:45"><expr pos:start="113:43" pos:end="113:45"><name pos:start="113:43" pos:end="113:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:30"><expr pos:start="115:13" pos:end="115:29"><name pos:start="115:13" pos:end="115:22"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:22">buf_ptr</name></name> <operator pos:start="115:24" pos:end="115:25">+=</operator> <name pos:start="115:27" pos:end="115:29">len</name></expr>;</expr_stmt>

            

            <if_stmt pos:start="119:13" pos:end="203:13"><if pos:start="119:13" pos:end="203:13">if <condition pos:start="119:16" pos:end="119:33">(<expr pos:start="119:17" pos:end="119:32"><name pos:start="119:17" pos:end="119:32">start_code_found</name></expr>)</condition> <block pos:start="119:35" pos:end="203:13">{<block_content pos:start="123:17" pos:end="201:17">

                <comment type="block" pos:start="121:17" pos:end="121:54">/* prepare data for next start code */</comment>

                <expr_stmt pos:start="123:17" pos:end="123:52"><expr pos:start="123:17" pos:end="123:51"><name pos:start="123:17" pos:end="123:26">input_size</name> <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:39"><name pos:start="123:30" pos:end="123:30">s</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:39">buf_ptr</name></name> <operator pos:start="123:41" pos:end="123:41">-</operator> <name pos:start="123:43" pos:end="123:51"><name pos:start="123:43" pos:end="123:43">s</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:51">buffer</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:43"><expr pos:start="125:17" pos:end="125:42"><name pos:start="125:17" pos:end="125:26">start_code</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <name pos:start="125:30" pos:end="125:42"><name pos:start="125:30" pos:end="125:30">s</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:42">start_code</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:39"><expr pos:start="127:17" pos:end="127:38"><name pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:17">s</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:26">buf_ptr</name></name> <operator pos:start="127:28" pos:end="127:28">=</operator> <name pos:start="127:30" pos:end="127:38"><name pos:start="127:30" pos:end="127:30">s</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:38">buffer</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:37"><expr pos:start="129:17" pos:end="129:36"><name pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:29">start_code</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:36">code</name></expr>;</expr_stmt>

                <switch pos:start="131:17" pos:end="201:17">switch<condition pos:start="131:23" pos:end="131:34">(<expr pos:start="131:24" pos:end="131:33"><name pos:start="131:24" pos:end="131:33">start_code</name></expr>)</condition> <block pos:start="131:36" pos:end="201:17">{<block_content pos:start="133:17" pos:end="199:26">

                <case pos:start="133:17" pos:end="133:36">case <expr pos:start="133:22" pos:end="133:35"><name pos:start="133:22" pos:end="133:35">SEQ_START_CODE</name></expr>:</case>

                    <expr_stmt pos:start="135:21" pos:end="137:54"><expr pos:start="135:21" pos:end="137:53"><call pos:start="135:21" pos:end="137:53"><name pos:start="135:21" pos:end="135:41">mpeg1_decode_sequence</name><argument_list pos:start="135:42" pos:end="137:53">(<argument pos:start="135:43" pos:end="135:47"><expr pos:start="135:43" pos:end="135:47"><name pos:start="135:43" pos:end="135:47">avctx</name></expr></argument>, <argument pos:start="135:50" pos:end="135:58"><expr pos:start="135:50" pos:end="135:58"><name pos:start="135:50" pos:end="135:58"><name pos:start="135:50" pos:end="135:50">s</name><operator pos:start="135:51" pos:end="135:52">-&gt;</operator><name pos:start="135:53" pos:end="135:58">buffer</name></name></expr></argument>, 

                                          <argument pos:start="137:43" pos:end="137:52"><expr pos:start="137:43" pos:end="137:52"><name pos:start="137:43" pos:end="137:52">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="139:21" pos:end="139:26">break;</break>

                            

                <case pos:start="143:17" pos:end="143:40">case <expr pos:start="143:22" pos:end="143:39"><name pos:start="143:22" pos:end="143:39">PICTURE_START_CODE</name></expr>:</case>

                    <comment type="block" pos:start="145:21" pos:end="145:76">/* we have a complete image : we try to decompress it */</comment>

                    <expr_stmt pos:start="147:21" pos:end="149:64"><expr pos:start="147:21" pos:end="149:63"><call pos:start="147:21" pos:end="149:63"><name pos:start="147:21" pos:end="147:40">mpeg1_decode_picture</name><argument_list pos:start="147:41" pos:end="149:63">(<argument pos:start="147:42" pos:end="147:46"><expr pos:start="147:42" pos:end="147:46"><name pos:start="147:42" pos:end="147:46">avctx</name></expr></argument>, 

                                         <argument pos:start="149:42" pos:end="149:50"><expr pos:start="149:42" pos:end="149:50"><name pos:start="149:42" pos:end="149:50"><name pos:start="149:42" pos:end="149:42">s</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:50">buffer</name></name></expr></argument>, <argument pos:start="149:53" pos:end="149:62"><expr pos:start="149:53" pos:end="149:62"><name pos:start="149:53" pos:end="149:62">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="151:21" pos:end="151:26">break;</break>

                <case pos:start="153:17" pos:end="153:36">case <expr pos:start="153:22" pos:end="153:35"><name pos:start="153:22" pos:end="153:35">EXT_START_CODE</name></expr>:</case>

                    <expr_stmt pos:start="155:21" pos:end="157:65"><expr pos:start="155:21" pos:end="157:64"><call pos:start="155:21" pos:end="157:64"><name pos:start="155:21" pos:end="155:41">mpeg_decode_extension</name><argument_list pos:start="155:42" pos:end="157:64">(<argument pos:start="155:43" pos:end="155:47"><expr pos:start="155:43" pos:end="155:47"><name pos:start="155:43" pos:end="155:47">avctx</name></expr></argument>,

                                          <argument pos:start="157:43" pos:end="157:51"><expr pos:start="157:43" pos:end="157:51"><name pos:start="157:43" pos:end="157:51"><name pos:start="157:43" pos:end="157:43">s</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:51">buffer</name></name></expr></argument>, <argument pos:start="157:54" pos:end="157:63"><expr pos:start="157:54" pos:end="157:63"><name pos:start="157:54" pos:end="157:63">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="159:21" pos:end="159:26">break;</break>

                <default pos:start="161:17" pos:end="161:24">default:</default>

                    <if_stmt pos:start="163:21" pos:end="197:21"><if pos:start="163:21" pos:end="197:21">if <condition pos:start="163:24" pos:end="165:59">(<expr pos:start="163:25" pos:end="165:58"><name pos:start="163:25" pos:end="163:34">start_code</name> <operator pos:start="163:36" pos:end="163:37">&gt;=</operator> <name pos:start="163:39" pos:end="163:58">SLICE_MIN_START_CODE</name> <operator pos:start="163:60" pos:end="163:61">&amp;&amp;</operator>

                        <name pos:start="165:25" pos:end="165:34">start_code</name> <operator pos:start="165:36" pos:end="165:37">&lt;=</operator> <name pos:start="165:39" pos:end="165:58">SLICE_MAX_START_CODE</name></expr>)</condition> <block pos:start="165:61" pos:end="197:21">{<block_content pos:start="167:25" pos:end="195:25">

                        <expr_stmt pos:start="167:25" pos:end="169:83"><expr pos:start="167:25" pos:end="169:82"><name pos:start="167:25" pos:end="167:27">ret</name> <operator pos:start="167:29" pos:end="167:29">=</operator> <call pos:start="167:31" pos:end="169:82"><name pos:start="167:31" pos:end="167:47">mpeg_decode_slice</name><argument_list pos:start="167:48" pos:end="169:82">(<argument pos:start="167:49" pos:end="167:53"><expr pos:start="167:49" pos:end="167:53"><name pos:start="167:49" pos:end="167:53">avctx</name></expr></argument>, <argument pos:start="167:56" pos:end="167:62"><expr pos:start="167:56" pos:end="167:62"><name pos:start="167:56" pos:end="167:62">picture</name></expr></argument>,

                                                <argument pos:start="169:49" pos:end="169:58"><expr pos:start="169:49" pos:end="169:58"><name pos:start="169:49" pos:end="169:58">start_code</name></expr></argument>, <argument pos:start="169:61" pos:end="169:69"><expr pos:start="169:61" pos:end="169:69"><name pos:start="169:61" pos:end="169:69"><name pos:start="169:61" pos:end="169:61">s</name><operator pos:start="169:62" pos:end="169:63">-&gt;</operator><name pos:start="169:64" pos:end="169:69">buffer</name></name></expr></argument>, <argument pos:start="169:72" pos:end="169:81"><expr pos:start="169:72" pos:end="169:81"><name pos:start="169:72" pos:end="169:81">input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="171:25" pos:end="195:25"><if pos:start="171:25" pos:end="195:25">if <condition pos:start="171:28" pos:end="171:37">(<expr pos:start="171:29" pos:end="171:36"><name pos:start="171:29" pos:end="171:31">ret</name> <operator pos:start="171:33" pos:end="171:34">==</operator> <literal type="number" pos:start="171:36" pos:end="171:36">1</literal></expr>)</condition> <block pos:start="171:39" pos:end="195:25">{<block_content pos:start="177:29" pos:end="193:41">

                            <comment type="block" pos:start="173:29" pos:end="173:53">/* got a picture: exit */</comment>

                            <comment type="block" pos:start="175:29" pos:end="175:73">/* first check if we must repeat the frame */</comment>

                            <if_stmt pos:start="177:29" pos:end="189:29"><if pos:start="177:29" pos:end="189:29">if <condition pos:start="177:32" pos:end="177:80">(<expr pos:start="177:33" pos:end="177:79"><name pos:start="177:33" pos:end="177:53"><name pos:start="177:33" pos:end="177:34">s2</name><operator pos:start="177:35" pos:end="177:36">-&gt;</operator><name pos:start="177:37" pos:end="177:53">progressive_frame</name></name> <operator pos:start="177:55" pos:end="177:56">&amp;&amp;</operator> <name pos:start="177:58" pos:end="177:79"><name pos:start="177:58" pos:end="177:59">s2</name><operator pos:start="177:60" pos:end="177:61">-&gt;</operator><name pos:start="177:62" pos:end="177:79">repeat_first_field</name></name></expr>)</condition> <block pos:start="177:82" pos:end="189:29">{<block_content pos:start="181:33" pos:end="187:56">

                                <comment type="line" pos:start="179:33" pos:end="179:125">//fprintf(stderr,"\nRepeat this frame: %d! pict: %d",avctx-&gt;frame_number,s2-&gt;picture_number);</comment>

                                <expr_stmt pos:start="181:33" pos:end="181:59"><expr pos:start="181:33" pos:end="181:58"><name pos:start="181:33" pos:end="181:54"><name pos:start="181:33" pos:end="181:34">s2</name><operator pos:start="181:35" pos:end="181:36">-&gt;</operator><name pos:start="181:37" pos:end="181:54">repeat_first_field</name></name> <operator pos:start="181:56" pos:end="181:56">=</operator> <literal type="number" pos:start="181:58" pos:end="181:58">0</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="183:33" pos:end="183:58"><expr pos:start="183:33" pos:end="183:57"><name pos:start="183:33" pos:end="183:53"><name pos:start="183:33" pos:end="183:34">s2</name><operator pos:start="183:35" pos:end="183:36">-&gt;</operator><name pos:start="183:37" pos:end="183:53">progressive_frame</name></name> <operator pos:start="183:55" pos:end="183:55">=</operator> <literal type="number" pos:start="183:57" pos:end="183:57">0</literal></expr>;</expr_stmt>

                                <if_stmt pos:start="185:33" pos:end="187:56"><if pos:start="185:33" pos:end="187:56">if <condition pos:start="185:36" pos:end="185:58">(<expr pos:start="185:37" pos:end="185:57"><operator pos:start="185:37" pos:end="185:38">++</operator><name pos:start="185:39" pos:end="185:53"><name pos:start="185:39" pos:end="185:39">s</name><operator pos:start="185:40" pos:end="185:41">-&gt;</operator><name pos:start="185:42" pos:end="185:53">repeat_field</name></name> <operator pos:start="185:55" pos:end="185:55">&gt;</operator> <literal type="number" pos:start="185:57" pos:end="185:57">2</literal></expr>)</condition><block type="pseudo" pos:start="187:37" pos:end="187:56"><block_content pos:start="187:37" pos:end="187:56">

                                    <expr_stmt pos:start="187:37" pos:end="187:56"><expr pos:start="187:37" pos:end="187:55"><name pos:start="187:37" pos:end="187:51"><name pos:start="187:37" pos:end="187:37">s</name><operator pos:start="187:38" pos:end="187:39">-&gt;</operator><name pos:start="187:40" pos:end="187:51">repeat_field</name></name> <operator pos:start="187:53" pos:end="187:53">=</operator> <literal type="number" pos:start="187:55" pos:end="187:55">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="191:29" pos:end="191:59"><expr pos:start="191:29" pos:end="191:58"><operator pos:start="191:29" pos:end="191:29">*</operator><name pos:start="191:30" pos:end="191:38">data_size</name> <operator pos:start="191:40" pos:end="191:40">=</operator> <sizeof pos:start="191:42" pos:end="191:58">sizeof<argument_list pos:start="191:48" pos:end="191:58">(<argument pos:start="191:49" pos:end="191:57"><expr pos:start="191:49" pos:end="191:57"><name pos:start="191:49" pos:end="191:57">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

                            <goto pos:start="193:29" pos:end="193:41">goto <name pos:start="193:34" pos:end="193:40">the_end</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="199:21" pos:end="199:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

 <label pos:start="209:2" pos:end="209:9"><name pos:start="209:2" pos:end="209:8">the_end</name>:</label>

    <return pos:start="211:5" pos:end="211:25">return <expr pos:start="211:12" pos:end="211:24"><name pos:start="211:12" pos:end="211:18">buf_ptr</name> <operator pos:start="211:20" pos:end="211:20">-</operator> <name pos:start="211:22" pos:end="211:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
