<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10879.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">PXA2xxState</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:24">pxa255_init</name><parameter_list pos:start="1:25" pos:end="1:78">(<parameter pos:start="1:26" pos:end="1:52"><decl pos:start="1:26" pos:end="1:52"><type pos:start="1:26" pos:end="1:52"><name pos:start="1:26" pos:end="1:37">MemoryRegion</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:52">address_space</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:77"><decl pos:start="1:55" pos:end="1:77"><type pos:start="1:55" pos:end="1:77"><name pos:start="1:55" pos:end="1:62">unsigned</name> <name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:77">sdram_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="5:5" pos:end="253:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">PXA2xxState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">DriveInfo</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">dinfo</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:14">g_new0</name><argument_list pos:start="13:15" pos:end="13:30">(<argument pos:start="13:16" pos:end="13:26"><expr pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:26">PXA2xxState</name></expr></argument>, <argument pos:start="13:29" pos:end="13:29"><expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">cpu</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:35"><name pos:start="17:14" pos:end="17:25">cpu_arm_init</name><argument_list pos:start="17:26" pos:end="17:35">(<argument pos:start="17:27" pos:end="17:34"><expr pos:start="17:27" pos:end="17:34"><literal type="string" pos:start="17:27" pos:end="17:34">"pxa255"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:14">cpu</name></name> <operator pos:start="19:16" pos:end="19:17">==</operator> <name pos:start="19:19" pos:end="19:22">NULL</name></expr>)</condition> <block pos:start="19:25" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:16">

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><call pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:58">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:57"><expr pos:start="21:25" pos:end="21:57"><literal type="string" pos:start="21:25" pos:end="21:57">"Unable to find CPU definition\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><call pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:12">exit</name><argument_list pos:start="23:13" pos:end="23:15">(<argument pos:start="23:14" pos:end="23:14"><expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">reset</name></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:52"><name pos:start="27:16" pos:end="27:32">qemu_allocate_irq</name><argument_list pos:start="27:33" pos:end="27:52">(<argument pos:start="27:34" pos:end="27:45"><expr pos:start="27:34" pos:end="27:45"><name pos:start="27:34" pos:end="27:45">pxa2xx_reset</name></expr></argument>, <argument pos:start="27:48" pos:end="27:48"><expr pos:start="27:48" pos:end="27:48"><name pos:start="27:48" pos:end="27:48">s</name></expr></argument>, <argument pos:start="27:51" pos:end="27:51"><expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:41">/* SDRAM &amp; Internal Memory Storage */</comment>

    <expr_stmt pos:start="33:5" pos:end="35:41"><expr pos:start="33:5" pos:end="35:40"><call pos:start="33:5" pos:end="35:40"><name pos:start="33:5" pos:end="33:26">memory_region_init_ram</name><argument_list pos:start="33:27" pos:end="35:40">(<argument pos:start="33:28" pos:end="33:36"><expr pos:start="33:28" pos:end="33:36"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:36"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:36">sdram</name></name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">NULL</name></expr></argument>, <argument pos:start="33:45" pos:end="33:58"><expr pos:start="33:45" pos:end="33:58"><literal type="string" pos:start="33:45" pos:end="33:58">"pxa255.sdram"</literal></expr></argument>, <argument pos:start="33:61" pos:end="33:70"><expr pos:start="33:61" pos:end="33:70"><name pos:start="33:61" pos:end="33:70">sdram_size</name></expr></argument>,

                           <argument pos:start="35:28" pos:end="35:39"><expr pos:start="35:28" pos:end="35:39"><operator pos:start="35:28" pos:end="35:28">&amp;</operator><name pos:start="35:29" pos:end="35:39">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><call pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:31">vmstate_register_ram_global</name><argument_list pos:start="37:32" pos:end="37:42">(<argument pos:start="37:33" pos:end="37:41"><expr pos:start="37:33" pos:end="37:41"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:41"><name pos:start="37:34" pos:end="37:34">s</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:41">sdram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:77"><expr pos:start="39:5" pos:end="39:76"><call pos:start="39:5" pos:end="39:76"><name pos:start="39:5" pos:end="39:31">memory_region_add_subregion</name><argument_list pos:start="39:32" pos:end="39:76">(<argument pos:start="39:33" pos:end="39:45"><expr pos:start="39:33" pos:end="39:45"><name pos:start="39:33" pos:end="39:45">address_space</name></expr></argument>, <argument pos:start="39:48" pos:end="39:64"><expr pos:start="39:48" pos:end="39:64"><name pos:start="39:48" pos:end="39:64">PXA2XX_SDRAM_BASE</name></expr></argument>, <argument pos:start="39:67" pos:end="39:75"><expr pos:start="39:67" pos:end="39:75"><operator pos:start="39:67" pos:end="39:67">&amp;</operator><name pos:start="39:68" pos:end="39:75"><name pos:start="39:68" pos:end="39:68">s</name><operator pos:start="39:69" pos:end="39:70">-&gt;</operator><name pos:start="39:71" pos:end="39:75">sdram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:63"><expr pos:start="41:5" pos:end="43:62"><call pos:start="41:5" pos:end="43:62"><name pos:start="41:5" pos:end="41:26">memory_region_init_ram</name><argument_list pos:start="41:27" pos:end="43:62">(<argument pos:start="41:28" pos:end="41:39"><expr pos:start="41:28" pos:end="41:39"><operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:39"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:39">internal</name></name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">NULL</name></expr></argument>, <argument pos:start="41:48" pos:end="41:64"><expr pos:start="41:48" pos:end="41:64"><literal type="string" pos:start="41:48" pos:end="41:64">"pxa255.internal"</literal></expr></argument>,

                           <argument pos:start="43:28" pos:end="43:47"><expr pos:start="43:28" pos:end="43:47"><name pos:start="43:28" pos:end="43:47">PXA2XX_INTERNAL_SIZE</name></expr></argument>, <argument pos:start="43:50" pos:end="43:61"><expr pos:start="43:50" pos:end="43:61"><operator pos:start="43:50" pos:end="43:50">&amp;</operator><name pos:start="43:51" pos:end="43:61">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><call pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:31">vmstate_register_ram_global</name><argument_list pos:start="45:32" pos:end="45:45">(<argument pos:start="45:33" pos:end="45:44"><expr pos:start="45:33" pos:end="45:44"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:44"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:44">internal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:46"><expr pos:start="47:5" pos:end="49:45"><call pos:start="47:5" pos:end="49:45"><name pos:start="47:5" pos:end="47:31">memory_region_add_subregion</name><argument_list pos:start="47:32" pos:end="49:45">(<argument pos:start="47:33" pos:end="47:45"><expr pos:start="47:33" pos:end="47:45"><name pos:start="47:33" pos:end="47:45">address_space</name></expr></argument>, <argument pos:start="47:48" pos:end="47:67"><expr pos:start="47:48" pos:end="47:67"><name pos:start="47:48" pos:end="47:67">PXA2XX_INTERNAL_BASE</name></expr></argument>,

                                <argument pos:start="49:33" pos:end="49:44"><expr pos:start="49:33" pos:end="49:44"><operator pos:start="49:33" pos:end="49:33">&amp;</operator><name pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:44">internal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:49"><expr pos:start="53:5" pos:end="53:48"><name pos:start="53:5" pos:end="53:10"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:10">pic</name></name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:48"><name pos:start="53:14" pos:end="53:28">pxa2xx_pic_init</name><argument_list pos:start="53:29" pos:end="53:48">(<argument pos:start="53:30" pos:end="53:39"><expr pos:start="53:30" pos:end="53:39"><literal type="number" pos:start="53:30" pos:end="53:39">0x40d00000</literal></expr></argument>, <argument pos:start="53:42" pos:end="53:47"><expr pos:start="53:42" pos:end="53:47"><name pos:start="53:42" pos:end="53:47"><name pos:start="53:42" pos:end="53:42">s</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:47">cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:62"><expr pos:start="57:5" pos:end="59:61"><name pos:start="57:5" pos:end="57:10"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:10">dma</name></name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="59:61"><name pos:start="57:14" pos:end="57:28">pxa255_dma_init</name><argument_list pos:start="57:29" pos:end="59:61">(<argument pos:start="57:30" pos:end="57:39"><expr pos:start="57:30" pos:end="57:39"><literal type="number" pos:start="57:30" pos:end="57:39">0x40000000</literal></expr></argument>,

                    <argument pos:start="59:21" pos:end="59:60"><expr pos:start="59:21" pos:end="59:60"><call pos:start="59:21" pos:end="59:60"><name pos:start="59:21" pos:end="59:36">qdev_get_gpio_in</name><argument_list pos:start="59:37" pos:end="59:60">(<argument pos:start="59:38" pos:end="59:43"><expr pos:start="59:38" pos:end="59:43"><name pos:start="59:38" pos:end="59:43"><name pos:start="59:38" pos:end="59:38">s</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:43">pic</name></name></expr></argument>, <argument pos:start="59:46" pos:end="59:59"><expr pos:start="59:46" pos:end="59:59"><name pos:start="59:46" pos:end="59:59">PXA2XX_PIC_DMA</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="73:26"><expr pos:start="63:5" pos:end="73:25"><call pos:start="63:5" pos:end="73:25"><name pos:start="63:5" pos:end="63:25">sysbus_create_varargs</name><argument_list pos:start="63:26" pos:end="73:25">(<argument pos:start="63:27" pos:end="63:40"><expr pos:start="63:27" pos:end="63:40"><literal type="string" pos:start="63:27" pos:end="63:40">"pxa25x-timer"</literal></expr></argument>, <argument pos:start="63:43" pos:end="63:52"><expr pos:start="63:43" pos:end="63:52"><literal type="number" pos:start="63:43" pos:end="63:52">0x40a00000</literal></expr></argument>,

                    <argument pos:start="65:21" pos:end="65:66"><expr pos:start="65:21" pos:end="65:66"><call pos:start="65:21" pos:end="65:66"><name pos:start="65:21" pos:end="65:36">qdev_get_gpio_in</name><argument_list pos:start="65:37" pos:end="65:66">(<argument pos:start="65:38" pos:end="65:43"><expr pos:start="65:38" pos:end="65:43"><name pos:start="65:38" pos:end="65:43"><name pos:start="65:38" pos:end="65:38">s</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:43">pic</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:65"><expr pos:start="65:46" pos:end="65:65"><name pos:start="65:46" pos:end="65:61">PXA2XX_PIC_OST_0</name> <operator pos:start="65:63" pos:end="65:63">+</operator> <literal type="number" pos:start="65:65" pos:end="65:65">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="67:21" pos:end="67:66"><expr pos:start="67:21" pos:end="67:66"><call pos:start="67:21" pos:end="67:66"><name pos:start="67:21" pos:end="67:36">qdev_get_gpio_in</name><argument_list pos:start="67:37" pos:end="67:66">(<argument pos:start="67:38" pos:end="67:43"><expr pos:start="67:38" pos:end="67:43"><name pos:start="67:38" pos:end="67:43"><name pos:start="67:38" pos:end="67:38">s</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:43">pic</name></name></expr></argument>, <argument pos:start="67:46" pos:end="67:65"><expr pos:start="67:46" pos:end="67:65"><name pos:start="67:46" pos:end="67:61">PXA2XX_PIC_OST_0</name> <operator pos:start="67:63" pos:end="67:63">+</operator> <literal type="number" pos:start="67:65" pos:end="67:65">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="69:21" pos:end="69:66"><expr pos:start="69:21" pos:end="69:66"><call pos:start="69:21" pos:end="69:66"><name pos:start="69:21" pos:end="69:36">qdev_get_gpio_in</name><argument_list pos:start="69:37" pos:end="69:66">(<argument pos:start="69:38" pos:end="69:43"><expr pos:start="69:38" pos:end="69:43"><name pos:start="69:38" pos:end="69:43"><name pos:start="69:38" pos:end="69:38">s</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:43">pic</name></name></expr></argument>, <argument pos:start="69:46" pos:end="69:65"><expr pos:start="69:46" pos:end="69:65"><name pos:start="69:46" pos:end="69:61">PXA2XX_PIC_OST_0</name> <operator pos:start="69:63" pos:end="69:63">+</operator> <literal type="number" pos:start="69:65" pos:end="69:65">2</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="71:21" pos:end="71:66"><expr pos:start="71:21" pos:end="71:66"><call pos:start="71:21" pos:end="71:66"><name pos:start="71:21" pos:end="71:36">qdev_get_gpio_in</name><argument_list pos:start="71:37" pos:end="71:66">(<argument pos:start="71:38" pos:end="71:43"><expr pos:start="71:38" pos:end="71:43"><name pos:start="71:38" pos:end="71:43"><name pos:start="71:38" pos:end="71:38">s</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:43">pic</name></name></expr></argument>, <argument pos:start="71:46" pos:end="71:65"><expr pos:start="71:46" pos:end="71:65"><name pos:start="71:46" pos:end="71:61">PXA2XX_PIC_OST_0</name> <operator pos:start="71:63" pos:end="71:63">+</operator> <literal type="number" pos:start="71:65" pos:end="71:65">3</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="73:21" pos:end="73:24"><expr pos:start="73:21" pos:end="73:24"><name pos:start="73:21" pos:end="73:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:63"><expr pos:start="77:5" pos:end="77:62"><name pos:start="77:5" pos:end="77:11"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:11">gpio</name></name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:62"><name pos:start="77:15" pos:end="77:30">pxa2xx_gpio_init</name><argument_list pos:start="77:31" pos:end="77:62">(<argument pos:start="77:32" pos:end="77:41"><expr pos:start="77:32" pos:end="77:41"><literal type="number" pos:start="77:32" pos:end="77:41">0x40e00000</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:49"><expr pos:start="77:44" pos:end="77:49"><name pos:start="77:44" pos:end="77:49"><name pos:start="77:44" pos:end="77:44">s</name><operator pos:start="77:45" pos:end="77:46">-&gt;</operator><name pos:start="77:47" pos:end="77:49">cpu</name></name></expr></argument>, <argument pos:start="77:52" pos:end="77:57"><expr pos:start="77:52" pos:end="77:57"><name pos:start="77:52" pos:end="77:57"><name pos:start="77:52" pos:end="77:52">s</name><operator pos:start="77:53" pos:end="77:54">-&gt;</operator><name pos:start="77:55" pos:end="77:57">pic</name></name></expr></argument>, <argument pos:start="77:60" pos:end="77:61"><expr pos:start="77:60" pos:end="77:61"><literal type="number" pos:start="77:60" pos:end="77:61">85</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:35"><expr pos:start="81:5" pos:end="81:34"><name pos:start="81:5" pos:end="81:9">dinfo</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <call pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:21">drive_get</name><argument_list pos:start="81:22" pos:end="81:34">(<argument pos:start="81:23" pos:end="81:27"><expr pos:start="81:23" pos:end="81:27"><name pos:start="81:23" pos:end="81:27">IF_SD</name></expr></argument>, <argument pos:start="81:30" pos:end="81:30"><expr pos:start="81:30" pos:end="81:30"><literal type="number" pos:start="81:30" pos:end="81:30">0</literal></expr></argument>, <argument pos:start="81:33" pos:end="81:33"><expr pos:start="81:33" pos:end="81:33"><literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:15">(<expr pos:start="83:9" pos:end="83:14"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:14">dinfo</name></expr>)</condition> <block pos:start="83:17" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:16">

        <expr_stmt pos:start="85:9" pos:end="85:64"><expr pos:start="85:9" pos:end="85:63"><call pos:start="85:9" pos:end="85:63"><name pos:start="85:9" pos:end="85:15">fprintf</name><argument_list pos:start="85:16" pos:end="85:63">(<argument pos:start="85:17" pos:end="85:22"><expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:22">stderr</name></expr></argument>, <argument pos:start="85:25" pos:end="85:62"><expr pos:start="85:25" pos:end="85:62"><literal type="string" pos:start="85:25" pos:end="85:62">"qemu: missing SecureDigital device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:16"><expr pos:start="87:9" pos:end="87:15"><call pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:12">exit</name><argument_list pos:start="87:13" pos:end="87:15">(<argument pos:start="87:14" pos:end="87:14"><expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="99:65"><expr pos:start="91:5" pos:end="99:64"><name pos:start="91:5" pos:end="91:10"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:10">mmc</name></name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="99:64"><name pos:start="91:14" pos:end="91:29">pxa2xx_mmci_init</name><argument_list pos:start="91:30" pos:end="99:64">(<argument pos:start="91:31" pos:end="91:43"><expr pos:start="91:31" pos:end="91:43"><name pos:start="91:31" pos:end="91:43">address_space</name></expr></argument>, <argument pos:start="91:46" pos:end="91:55"><expr pos:start="91:46" pos:end="91:55"><literal type="number" pos:start="91:46" pos:end="91:55">0x41100000</literal></expr></argument>,

                    <argument pos:start="93:21" pos:end="93:46"><expr pos:start="93:21" pos:end="93:46"><call pos:start="93:21" pos:end="93:46"><name pos:start="93:21" pos:end="93:39">blk_by_legacy_dinfo</name><argument_list pos:start="93:40" pos:end="93:46">(<argument pos:start="93:41" pos:end="93:45"><expr pos:start="93:41" pos:end="93:45"><name pos:start="93:41" pos:end="93:45">dinfo</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="95:21" pos:end="95:60"><expr pos:start="95:21" pos:end="95:60"><call pos:start="95:21" pos:end="95:60"><name pos:start="95:21" pos:end="95:36">qdev_get_gpio_in</name><argument_list pos:start="95:37" pos:end="95:60">(<argument pos:start="95:38" pos:end="95:43"><expr pos:start="95:38" pos:end="95:43"><name pos:start="95:38" pos:end="95:43"><name pos:start="95:38" pos:end="95:38">s</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:43">pic</name></name></expr></argument>, <argument pos:start="95:46" pos:end="95:59"><expr pos:start="95:46" pos:end="95:59"><name pos:start="95:46" pos:end="95:59">PXA2XX_PIC_MMC</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="97:21" pos:end="97:63"><expr pos:start="97:21" pos:end="97:63"><call pos:start="97:21" pos:end="97:63"><name pos:start="97:21" pos:end="97:36">qdev_get_gpio_in</name><argument_list pos:start="97:37" pos:end="97:63">(<argument pos:start="97:38" pos:end="97:43"><expr pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:38">s</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:43">dma</name></name></expr></argument>, <argument pos:start="97:46" pos:end="97:62"><expr pos:start="97:46" pos:end="97:62"><name pos:start="97:46" pos:end="97:62">PXA2XX_RX_RQ_MMCI</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="99:21" pos:end="99:63"><expr pos:start="99:21" pos:end="99:63"><call pos:start="99:21" pos:end="99:63"><name pos:start="99:21" pos:end="99:36">qdev_get_gpio_in</name><argument_list pos:start="99:37" pos:end="99:63">(<argument pos:start="99:38" pos:end="99:43"><expr pos:start="99:38" pos:end="99:43"><name pos:start="99:38" pos:end="99:43"><name pos:start="99:38" pos:end="99:38">s</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:43">dma</name></name></expr></argument>, <argument pos:start="99:46" pos:end="99:62"><expr pos:start="99:46" pos:end="99:62"><name pos:start="99:46" pos:end="99:62">PXA2XX_TX_RQ_MMCI</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="103:5" pos:end="121:5">for <control pos:start="103:9" pos:end="103:46">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:41"><expr pos:start="103:17" pos:end="103:40"><name pos:start="103:17" pos:end="103:32"><name pos:start="103:17" pos:end="103:29">pxa255_serial</name><index pos:start="103:30" pos:end="103:32">[<expr pos:start="103:31" pos:end="103:31"><name pos:start="103:31" pos:end="103:31">i</name></expr>]</index></name><operator pos:start="103:33" pos:end="103:33">.</operator><name pos:start="103:34" pos:end="103:40">io_base</name></expr>;</condition> <incr pos:start="103:43" pos:end="103:45"><expr pos:start="103:43" pos:end="103:45"><name pos:start="103:43" pos:end="103:43">i</name><operator pos:start="103:44" pos:end="103:45">++</operator></expr></incr>)</control> <block pos:start="103:48" pos:end="121:5">{<block_content pos:start="105:9" pos:end="119:9">

        <if_stmt pos:start="105:9" pos:end="119:9"><if pos:start="105:9" pos:end="115:9">if <condition pos:start="105:12" pos:end="105:26">(<expr pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:22">serial_hds</name><index pos:start="105:23" pos:end="105:25">[<expr pos:start="105:24" pos:end="105:24"><name pos:start="105:24" pos:end="105:24">i</name></expr>]</index></name></expr>)</condition> <block pos:start="105:28" pos:end="115:9">{<block_content pos:start="107:13" pos:end="113:49">

            <expr_stmt pos:start="107:13" pos:end="113:49"><expr pos:start="107:13" pos:end="113:48"><call pos:start="107:13" pos:end="113:48"><name pos:start="107:13" pos:end="107:26">serial_mm_init</name><argument_list pos:start="107:27" pos:end="113:48">(<argument pos:start="107:28" pos:end="107:40"><expr pos:start="107:28" pos:end="107:40"><name pos:start="107:28" pos:end="107:40">address_space</name></expr></argument>, <argument pos:start="107:43" pos:end="107:66"><expr pos:start="107:43" pos:end="107:66"><name pos:start="107:43" pos:end="107:58"><name pos:start="107:43" pos:end="107:55">pxa255_serial</name><index pos:start="107:56" pos:end="107:58">[<expr pos:start="107:57" pos:end="107:57"><name pos:start="107:57" pos:end="107:57">i</name></expr>]</index></name><operator pos:start="107:59" pos:end="107:59">.</operator><name pos:start="107:60" pos:end="107:66">io_base</name></expr></argument>, <argument pos:start="107:69" pos:end="107:69"><expr pos:start="107:69" pos:end="107:69"><literal type="number" pos:start="107:69" pos:end="107:69">2</literal></expr></argument>,

                           <argument pos:start="109:28" pos:end="109:74"><expr pos:start="109:28" pos:end="109:74"><call pos:start="109:28" pos:end="109:74"><name pos:start="109:28" pos:end="109:43">qdev_get_gpio_in</name><argument_list pos:start="109:44" pos:end="109:74">(<argument pos:start="109:45" pos:end="109:50"><expr pos:start="109:45" pos:end="109:50"><name pos:start="109:45" pos:end="109:50"><name pos:start="109:45" pos:end="109:45">s</name><operator pos:start="109:46" pos:end="109:47">-&gt;</operator><name pos:start="109:48" pos:end="109:50">pic</name></name></expr></argument>, <argument pos:start="109:53" pos:end="109:73"><expr pos:start="109:53" pos:end="109:73"><name pos:start="109:53" pos:end="109:68"><name pos:start="109:53" pos:end="109:65">pxa255_serial</name><index pos:start="109:66" pos:end="109:68">[<expr pos:start="109:67" pos:end="109:67"><name pos:start="109:67" pos:end="109:67">i</name></expr>]</index></name><operator pos:start="109:69" pos:end="109:69">.</operator><name pos:start="109:70" pos:end="109:73">irqn</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="111:28" pos:end="111:40"><expr pos:start="111:28" pos:end="111:40"><literal type="number" pos:start="111:28" pos:end="111:35">14745600</literal> <operator pos:start="111:37" pos:end="111:37">/</operator> <literal type="number" pos:start="111:39" pos:end="111:40">16</literal></expr></argument>, <argument pos:start="111:43" pos:end="111:55"><expr pos:start="111:43" pos:end="111:55"><name pos:start="111:43" pos:end="111:55"><name pos:start="111:43" pos:end="111:52">serial_hds</name><index pos:start="111:53" pos:end="111:55">[<expr pos:start="111:54" pos:end="111:54"><name pos:start="111:54" pos:end="111:54">i</name></expr>]</index></name></expr></argument>,

                           <argument pos:start="113:28" pos:end="113:47"><expr pos:start="113:28" pos:end="113:47"><name pos:start="113:28" pos:end="113:47">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="119:9">else <block pos:start="115:16" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:18">

            <break pos:start="117:13" pos:end="117:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="123:5" pos:end="133:39"><if pos:start="123:5" pos:end="133:39">if <condition pos:start="123:8" pos:end="123:22">(<expr pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:18">serial_hds</name><index pos:start="123:19" pos:end="123:21">[<expr pos:start="123:20" pos:end="123:20"><name pos:start="123:20" pos:end="123:20">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="133:39"><block_content pos:start="125:9" pos:end="133:39">

        <expr_stmt pos:start="125:9" pos:end="133:39"><expr pos:start="125:9" pos:end="133:38"><name pos:start="125:9" pos:end="125:14"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:14">fir</name></name> <operator pos:start="125:16" pos:end="125:16">=</operator> <call pos:start="125:18" pos:end="133:38"><name pos:start="125:18" pos:end="125:32">pxa2xx_fir_init</name><argument_list pos:start="125:33" pos:end="133:38">(<argument pos:start="125:34" pos:end="125:46"><expr pos:start="125:34" pos:end="125:46"><name pos:start="125:34" pos:end="125:46">address_space</name></expr></argument>, <argument pos:start="125:49" pos:end="125:58"><expr pos:start="125:49" pos:end="125:58"><literal type="number" pos:start="125:49" pos:end="125:58">0x40800000</literal></expr></argument>,

                        <argument pos:start="127:25" pos:end="127:64"><expr pos:start="127:25" pos:end="127:64"><call pos:start="127:25" pos:end="127:64"><name pos:start="127:25" pos:end="127:40">qdev_get_gpio_in</name><argument_list pos:start="127:41" pos:end="127:64">(<argument pos:start="127:42" pos:end="127:47"><expr pos:start="127:42" pos:end="127:47"><name pos:start="127:42" pos:end="127:47"><name pos:start="127:42" pos:end="127:42">s</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:47">pic</name></name></expr></argument>, <argument pos:start="127:50" pos:end="127:63"><expr pos:start="127:50" pos:end="127:63"><name pos:start="127:50" pos:end="127:63">PXA2XX_PIC_ICP</name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="129:25" pos:end="129:66"><expr pos:start="129:25" pos:end="129:66"><call pos:start="129:25" pos:end="129:66"><name pos:start="129:25" pos:end="129:40">qdev_get_gpio_in</name><argument_list pos:start="129:41" pos:end="129:66">(<argument pos:start="129:42" pos:end="129:47"><expr pos:start="129:42" pos:end="129:47"><name pos:start="129:42" pos:end="129:47"><name pos:start="129:42" pos:end="129:42">s</name><operator pos:start="129:43" pos:end="129:44">-&gt;</operator><name pos:start="129:45" pos:end="129:47">dma</name></name></expr></argument>, <argument pos:start="129:50" pos:end="129:65"><expr pos:start="129:50" pos:end="129:65"><name pos:start="129:50" pos:end="129:65">PXA2XX_RX_RQ_ICP</name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="131:25" pos:end="131:66"><expr pos:start="131:25" pos:end="131:66"><call pos:start="131:25" pos:end="131:66"><name pos:start="131:25" pos:end="131:40">qdev_get_gpio_in</name><argument_list pos:start="131:41" pos:end="131:66">(<argument pos:start="131:42" pos:end="131:47"><expr pos:start="131:42" pos:end="131:47"><name pos:start="131:42" pos:end="131:47"><name pos:start="131:42" pos:end="131:42">s</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:47">dma</name></name></expr></argument>, <argument pos:start="131:50" pos:end="131:65"><expr pos:start="131:50" pos:end="131:65"><name pos:start="131:50" pos:end="131:65">PXA2XX_TX_RQ_ICP</name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="133:25" pos:end="133:37"><expr pos:start="133:25" pos:end="133:37"><name pos:start="133:25" pos:end="133:37"><name pos:start="133:25" pos:end="133:34">serial_hds</name><index pos:start="133:35" pos:end="133:37">[<expr pos:start="133:36" pos:end="133:36"><name pos:start="133:36" pos:end="133:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="139:62"><expr pos:start="137:5" pos:end="139:61"><name pos:start="137:5" pos:end="137:10"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:10">lcd</name></name> <operator pos:start="137:12" pos:end="137:12">=</operator> <call pos:start="137:14" pos:end="139:61"><name pos:start="137:14" pos:end="137:29">pxa2xx_lcdc_init</name><argument_list pos:start="137:30" pos:end="139:61">(<argument pos:start="137:31" pos:end="137:43"><expr pos:start="137:31" pos:end="137:43"><name pos:start="137:31" pos:end="137:43">address_space</name></expr></argument>, <argument pos:start="137:46" pos:end="137:55"><expr pos:start="137:46" pos:end="137:55"><literal type="number" pos:start="137:46" pos:end="137:55">0x44000000</literal></expr></argument>,

                    <argument pos:start="139:21" pos:end="139:60"><expr pos:start="139:21" pos:end="139:60"><call pos:start="139:21" pos:end="139:60"><name pos:start="139:21" pos:end="139:36">qdev_get_gpio_in</name><argument_list pos:start="139:37" pos:end="139:60">(<argument pos:start="139:38" pos:end="139:43"><expr pos:start="139:38" pos:end="139:43"><name pos:start="139:38" pos:end="139:43"><name pos:start="139:38" pos:end="139:38">s</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:43">pic</name></name></expr></argument>, <argument pos:start="139:46" pos:end="139:59"><expr pos:start="139:46" pos:end="139:59"><name pos:start="139:46" pos:end="139:59">PXA2XX_PIC_LCD</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:28"><expr pos:start="143:5" pos:end="143:27"><name pos:start="143:5" pos:end="143:14"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:14">cm_base</name></name> <operator pos:start="143:16" pos:end="143:16">=</operator> <literal type="number" pos:start="143:18" pos:end="143:27">0x41300000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:39"><expr pos:start="145:5" pos:end="145:38"><name pos:start="145:5" pos:end="145:25"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:14">cm_regs</name><index pos:start="145:15" pos:end="145:25">[<expr pos:start="145:16" pos:end="145:24"><name pos:start="145:16" pos:end="145:19">CCCR</name> <operator pos:start="145:21" pos:end="145:22">&gt;&gt;</operator> <literal type="number" pos:start="145:24" pos:end="145:24">2</literal></expr>]</index></name> <operator pos:start="145:27" pos:end="145:27">=</operator> <literal type="number" pos:start="145:29" pos:end="145:38">0x02000210</literal></expr>;</expr_stmt>	<comment type="block" pos:start="145:41" pos:end="145:55">/* 416.0 MHz */</comment>

    <expr_stmt pos:start="147:5" pos:end="147:27"><expr pos:start="147:5" pos:end="147:26"><name pos:start="147:5" pos:end="147:13"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:13">clkcfg</name></name> <operator pos:start="147:15" pos:end="147:15">=</operator> <literal type="number" pos:start="147:17" pos:end="147:26">0x00000009</literal></expr>;</expr_stmt>		<comment type="block" pos:start="147:41" pos:end="147:63">/* Turbo mode active */</comment>

    <expr_stmt pos:start="149:5" pos:end="149:86"><expr pos:start="149:5" pos:end="149:85"><call pos:start="149:5" pos:end="149:85"><name pos:start="149:5" pos:end="149:25">memory_region_init_io</name><argument_list pos:start="149:26" pos:end="149:85">(<argument pos:start="149:27" pos:end="149:38"><expr pos:start="149:27" pos:end="149:38"><operator pos:start="149:27" pos:end="149:27">&amp;</operator><name pos:start="149:28" pos:end="149:38"><name pos:start="149:28" pos:end="149:28">s</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:38">cm_iomem</name></name></expr></argument>, <argument pos:start="149:41" pos:end="149:44"><expr pos:start="149:41" pos:end="149:44"><name pos:start="149:41" pos:end="149:44">NULL</name></expr></argument>, <argument pos:start="149:47" pos:end="149:60"><expr pos:start="149:47" pos:end="149:60"><operator pos:start="149:47" pos:end="149:47">&amp;</operator><name pos:start="149:48" pos:end="149:60">pxa2xx_cm_ops</name></expr></argument>, <argument pos:start="149:63" pos:end="149:63"><expr pos:start="149:63" pos:end="149:63"><name pos:start="149:63" pos:end="149:63">s</name></expr></argument>, <argument pos:start="149:66" pos:end="149:76"><expr pos:start="149:66" pos:end="149:76"><literal type="string" pos:start="149:66" pos:end="149:76">"pxa2xx-cm"</literal></expr></argument>, <argument pos:start="149:79" pos:end="149:84"><expr pos:start="149:79" pos:end="149:84"><literal type="number" pos:start="149:79" pos:end="149:84">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:73"><expr pos:start="151:5" pos:end="151:72"><call pos:start="151:5" pos:end="151:72"><name pos:start="151:5" pos:end="151:31">memory_region_add_subregion</name><argument_list pos:start="151:32" pos:end="151:72">(<argument pos:start="151:33" pos:end="151:45"><expr pos:start="151:33" pos:end="151:45"><name pos:start="151:33" pos:end="151:45">address_space</name></expr></argument>, <argument pos:start="151:48" pos:end="151:57"><expr pos:start="151:48" pos:end="151:57"><name pos:start="151:48" pos:end="151:57"><name pos:start="151:48" pos:end="151:48">s</name><operator pos:start="151:49" pos:end="151:50">-&gt;</operator><name pos:start="151:51" pos:end="151:57">cm_base</name></name></expr></argument>, <argument pos:start="151:60" pos:end="151:71"><expr pos:start="151:60" pos:end="151:71"><operator pos:start="151:60" pos:end="151:60">&amp;</operator><name pos:start="151:61" pos:end="151:71"><name pos:start="151:61" pos:end="151:61">s</name><operator pos:start="151:62" pos:end="151:63">-&gt;</operator><name pos:start="151:64" pos:end="151:71">cm_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:53"><expr pos:start="153:5" pos:end="153:52"><call pos:start="153:5" pos:end="153:52"><name pos:start="153:5" pos:end="153:20">vmstate_register</name><argument_list pos:start="153:21" pos:end="153:52">(<argument pos:start="153:22" pos:end="153:25"><expr pos:start="153:22" pos:end="153:25"><name pos:start="153:22" pos:end="153:25">NULL</name></expr></argument>, <argument pos:start="153:28" pos:end="153:28"><expr pos:start="153:28" pos:end="153:28"><literal type="number" pos:start="153:28" pos:end="153:28">0</literal></expr></argument>, <argument pos:start="153:31" pos:end="153:48"><expr pos:start="153:31" pos:end="153:48"><operator pos:start="153:31" pos:end="153:31">&amp;</operator><name pos:start="153:32" pos:end="153:48">vmstate_pxa2xx_cm</name></expr></argument>, <argument pos:start="153:51" pos:end="153:51"><expr pos:start="153:51" pos:end="153:51"><name pos:start="153:51" pos:end="153:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:25"><expr pos:start="157:5" pos:end="157:24"><call pos:start="157:5" pos:end="157:24"><name pos:start="157:5" pos:end="157:21">pxa2xx_setup_cp14</name><argument_list pos:start="157:22" pos:end="157:24">(<argument pos:start="157:23" pos:end="157:23"><expr pos:start="157:23" pos:end="157:23"><name pos:start="157:23" pos:end="157:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:28"><expr pos:start="161:5" pos:end="161:27"><name pos:start="161:5" pos:end="161:14"><name pos:start="161:5" pos:end="161:5">s</name><operator pos:start="161:6" pos:end="161:7">-&gt;</operator><name pos:start="161:8" pos:end="161:14">mm_base</name></name> <operator pos:start="161:16" pos:end="161:16">=</operator> <literal type="number" pos:start="161:18" pos:end="161:27">0x48000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:40"><expr pos:start="163:5" pos:end="163:39"><name pos:start="163:5" pos:end="163:26"><name pos:start="163:5" pos:end="163:5">s</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:14">mm_regs</name><index pos:start="163:15" pos:end="163:26">[<expr pos:start="163:16" pos:end="163:25"><name pos:start="163:16" pos:end="163:20">MDMRS</name> <operator pos:start="163:22" pos:end="163:23">&gt;&gt;</operator> <literal type="number" pos:start="163:25" pos:end="163:25">2</literal></expr>]</index></name> <operator pos:start="163:28" pos:end="163:28">=</operator> <literal type="number" pos:start="163:30" pos:end="163:39">0x00020002</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:41"><expr pos:start="165:5" pos:end="165:40"><name pos:start="165:5" pos:end="165:27"><name pos:start="165:5" pos:end="165:5">s</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:14">mm_regs</name><index pos:start="165:15" pos:end="165:27">[<expr pos:start="165:16" pos:end="165:26"><name pos:start="165:16" pos:end="165:21">MDREFR</name> <operator pos:start="165:23" pos:end="165:24">&gt;&gt;</operator> <literal type="number" pos:start="165:26" pos:end="165:26">2</literal></expr>]</index></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <literal type="number" pos:start="165:31" pos:end="165:40">0x03ca4000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:39"><expr pos:start="167:5" pos:end="167:38"><name pos:start="167:5" pos:end="167:25"><name pos:start="167:5" pos:end="167:5">s</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:14">mm_regs</name><index pos:start="167:15" pos:end="167:25">[<expr pos:start="167:16" pos:end="167:24"><name pos:start="167:16" pos:end="167:19">MECR</name> <operator pos:start="167:21" pos:end="167:22">&gt;&gt;</operator> <literal type="number" pos:start="167:24" pos:end="167:24">2</literal></expr>]</index></name> <operator pos:start="167:27" pos:end="167:27">=</operator> <literal type="number" pos:start="167:29" pos:end="167:38">0x00000001</literal></expr>;</expr_stmt>	<comment type="block" pos:start="167:41" pos:end="167:65">/* Two PC Card sockets */</comment>

    <expr_stmt pos:start="169:5" pos:end="169:86"><expr pos:start="169:5" pos:end="169:85"><call pos:start="169:5" pos:end="169:85"><name pos:start="169:5" pos:end="169:25">memory_region_init_io</name><argument_list pos:start="169:26" pos:end="169:85">(<argument pos:start="169:27" pos:end="169:38"><expr pos:start="169:27" pos:end="169:38"><operator pos:start="169:27" pos:end="169:27">&amp;</operator><name pos:start="169:28" pos:end="169:38"><name pos:start="169:28" pos:end="169:28">s</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:38">mm_iomem</name></name></expr></argument>, <argument pos:start="169:41" pos:end="169:44"><expr pos:start="169:41" pos:end="169:44"><name pos:start="169:41" pos:end="169:44">NULL</name></expr></argument>, <argument pos:start="169:47" pos:end="169:60"><expr pos:start="169:47" pos:end="169:60"><operator pos:start="169:47" pos:end="169:47">&amp;</operator><name pos:start="169:48" pos:end="169:60">pxa2xx_mm_ops</name></expr></argument>, <argument pos:start="169:63" pos:end="169:63"><expr pos:start="169:63" pos:end="169:63"><name pos:start="169:63" pos:end="169:63">s</name></expr></argument>, <argument pos:start="169:66" pos:end="169:76"><expr pos:start="169:66" pos:end="169:76"><literal type="string" pos:start="169:66" pos:end="169:76">"pxa2xx-mm"</literal></expr></argument>, <argument pos:start="169:79" pos:end="169:84"><expr pos:start="169:79" pos:end="169:84"><literal type="number" pos:start="169:79" pos:end="169:84">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:73"><expr pos:start="171:5" pos:end="171:72"><call pos:start="171:5" pos:end="171:72"><name pos:start="171:5" pos:end="171:31">memory_region_add_subregion</name><argument_list pos:start="171:32" pos:end="171:72">(<argument pos:start="171:33" pos:end="171:45"><expr pos:start="171:33" pos:end="171:45"><name pos:start="171:33" pos:end="171:45">address_space</name></expr></argument>, <argument pos:start="171:48" pos:end="171:57"><expr pos:start="171:48" pos:end="171:57"><name pos:start="171:48" pos:end="171:57"><name pos:start="171:48" pos:end="171:48">s</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:57">mm_base</name></name></expr></argument>, <argument pos:start="171:60" pos:end="171:71"><expr pos:start="171:60" pos:end="171:71"><operator pos:start="171:60" pos:end="171:60">&amp;</operator><name pos:start="171:61" pos:end="171:71"><name pos:start="171:61" pos:end="171:61">s</name><operator pos:start="171:62" pos:end="171:63">-&gt;</operator><name pos:start="171:64" pos:end="171:71">mm_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:53"><expr pos:start="173:5" pos:end="173:52"><call pos:start="173:5" pos:end="173:52"><name pos:start="173:5" pos:end="173:20">vmstate_register</name><argument_list pos:start="173:21" pos:end="173:52">(<argument pos:start="173:22" pos:end="173:25"><expr pos:start="173:22" pos:end="173:25"><name pos:start="173:22" pos:end="173:25">NULL</name></expr></argument>, <argument pos:start="173:28" pos:end="173:28"><expr pos:start="173:28" pos:end="173:28"><literal type="number" pos:start="173:28" pos:end="173:28">0</literal></expr></argument>, <argument pos:start="173:31" pos:end="173:48"><expr pos:start="173:31" pos:end="173:48"><operator pos:start="173:31" pos:end="173:31">&amp;</operator><name pos:start="173:32" pos:end="173:48">vmstate_pxa2xx_mm</name></expr></argument>, <argument pos:start="173:51" pos:end="173:51"><expr pos:start="173:51" pos:end="173:51"><name pos:start="173:51" pos:end="173:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:28"><expr pos:start="177:5" pos:end="177:27"><name pos:start="177:5" pos:end="177:14"><name pos:start="177:5" pos:end="177:5">s</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:14">pm_base</name></name> <operator pos:start="177:16" pos:end="177:16">=</operator> <literal type="number" pos:start="177:18" pos:end="177:27">0x40f00000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:85"><expr pos:start="179:5" pos:end="179:84"><call pos:start="179:5" pos:end="179:84"><name pos:start="179:5" pos:end="179:25">memory_region_init_io</name><argument_list pos:start="179:26" pos:end="179:84">(<argument pos:start="179:27" pos:end="179:38"><expr pos:start="179:27" pos:end="179:38"><operator pos:start="179:27" pos:end="179:27">&amp;</operator><name pos:start="179:28" pos:end="179:38"><name pos:start="179:28" pos:end="179:28">s</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:38">pm_iomem</name></name></expr></argument>, <argument pos:start="179:41" pos:end="179:44"><expr pos:start="179:41" pos:end="179:44"><name pos:start="179:41" pos:end="179:44">NULL</name></expr></argument>, <argument pos:start="179:47" pos:end="179:60"><expr pos:start="179:47" pos:end="179:60"><operator pos:start="179:47" pos:end="179:47">&amp;</operator><name pos:start="179:48" pos:end="179:60">pxa2xx_pm_ops</name></expr></argument>, <argument pos:start="179:63" pos:end="179:63"><expr pos:start="179:63" pos:end="179:63"><name pos:start="179:63" pos:end="179:63">s</name></expr></argument>, <argument pos:start="179:66" pos:end="179:76"><expr pos:start="179:66" pos:end="179:76"><literal type="string" pos:start="179:66" pos:end="179:76">"pxa2xx-pm"</literal></expr></argument>, <argument pos:start="179:79" pos:end="179:83"><expr pos:start="179:79" pos:end="179:83"><literal type="number" pos:start="179:79" pos:end="179:83">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:73"><expr pos:start="181:5" pos:end="181:72"><call pos:start="181:5" pos:end="181:72"><name pos:start="181:5" pos:end="181:31">memory_region_add_subregion</name><argument_list pos:start="181:32" pos:end="181:72">(<argument pos:start="181:33" pos:end="181:45"><expr pos:start="181:33" pos:end="181:45"><name pos:start="181:33" pos:end="181:45">address_space</name></expr></argument>, <argument pos:start="181:48" pos:end="181:57"><expr pos:start="181:48" pos:end="181:57"><name pos:start="181:48" pos:end="181:57"><name pos:start="181:48" pos:end="181:48">s</name><operator pos:start="181:49" pos:end="181:50">-&gt;</operator><name pos:start="181:51" pos:end="181:57">pm_base</name></name></expr></argument>, <argument pos:start="181:60" pos:end="181:71"><expr pos:start="181:60" pos:end="181:71"><operator pos:start="181:60" pos:end="181:60">&amp;</operator><name pos:start="181:61" pos:end="181:71"><name pos:start="181:61" pos:end="181:61">s</name><operator pos:start="181:62" pos:end="181:63">-&gt;</operator><name pos:start="181:64" pos:end="181:71">pm_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:53"><expr pos:start="183:5" pos:end="183:52"><call pos:start="183:5" pos:end="183:52"><name pos:start="183:5" pos:end="183:20">vmstate_register</name><argument_list pos:start="183:21" pos:end="183:52">(<argument pos:start="183:22" pos:end="183:25"><expr pos:start="183:22" pos:end="183:25"><name pos:start="183:22" pos:end="183:25">NULL</name></expr></argument>, <argument pos:start="183:28" pos:end="183:28"><expr pos:start="183:28" pos:end="183:28"><literal type="number" pos:start="183:28" pos:end="183:28">0</literal></expr></argument>, <argument pos:start="183:31" pos:end="183:48"><expr pos:start="183:31" pos:end="183:48"><operator pos:start="183:31" pos:end="183:31">&amp;</operator><name pos:start="183:32" pos:end="183:48">vmstate_pxa2xx_pm</name></expr></argument>, <argument pos:start="183:51" pos:end="183:51"><expr pos:start="183:51" pos:end="183:51"><name pos:start="183:51" pos:end="183:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="187:5" pos:end="187:45">for <control pos:start="187:9" pos:end="187:44">(<init pos:start="187:10" pos:end="187:15"><expr pos:start="187:10" pos:end="187:14"><name pos:start="187:10" pos:end="187:10">i</name> <operator pos:start="187:12" pos:end="187:12">=</operator> <literal type="number" pos:start="187:14" pos:end="187:14">0</literal></expr>;</init> <condition pos:start="187:17" pos:end="187:38"><expr pos:start="187:17" pos:end="187:37"><name pos:start="187:17" pos:end="187:29"><name pos:start="187:17" pos:end="187:26">pxa255_ssp</name><index pos:start="187:27" pos:end="187:29">[<expr pos:start="187:28" pos:end="187:28"><name pos:start="187:28" pos:end="187:28">i</name></expr>]</index></name><operator pos:start="187:30" pos:end="187:30">.</operator><name pos:start="187:31" pos:end="187:37">io_base</name></expr>;</condition> <incr pos:start="187:40" pos:end="187:43"><expr pos:start="187:40" pos:end="187:43"><name pos:start="187:40" pos:end="187:40">i</name> <operator pos:start="187:42" pos:end="187:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:45" pos:end="187:45"><block_content pos:start="187:45" pos:end="187:45"><empty_stmt pos:start="187:45" pos:end="187:45">;</empty_stmt></block_content></block></for>

    <expr_stmt pos:start="189:5" pos:end="189:33"><expr pos:start="189:5" pos:end="189:32"><name pos:start="189:5" pos:end="189:10"><name pos:start="189:5" pos:end="189:5">s</name><operator pos:start="189:6" pos:end="189:7">-&gt;</operator><name pos:start="189:8" pos:end="189:10">ssp</name></name> <operator pos:start="189:12" pos:end="189:12">=</operator> <call pos:start="189:14" pos:end="189:32"><name pos:start="189:14" pos:end="189:19">g_new0</name><argument_list pos:start="189:20" pos:end="189:32">(<argument pos:start="189:21" pos:end="189:28"><expr pos:start="189:21" pos:end="189:28"><name pos:start="189:21" pos:end="189:26">SSIBus</name> <operator pos:start="189:28" pos:end="189:28">*</operator></expr></argument>, <argument pos:start="189:31" pos:end="189:31"><expr pos:start="189:31" pos:end="189:31"><name pos:start="189:31" pos:end="189:31">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="191:5" pos:end="201:5">for <control pos:start="191:9" pos:end="191:44">(<init pos:start="191:10" pos:end="191:15"><expr pos:start="191:10" pos:end="191:14"><name pos:start="191:10" pos:end="191:10">i</name> <operator pos:start="191:12" pos:end="191:12">=</operator> <literal type="number" pos:start="191:14" pos:end="191:14">0</literal></expr>;</init> <condition pos:start="191:17" pos:end="191:38"><expr pos:start="191:17" pos:end="191:37"><name pos:start="191:17" pos:end="191:29"><name pos:start="191:17" pos:end="191:26">pxa255_ssp</name><index pos:start="191:27" pos:end="191:29">[<expr pos:start="191:28" pos:end="191:28"><name pos:start="191:28" pos:end="191:28">i</name></expr>]</index></name><operator pos:start="191:30" pos:end="191:30">.</operator><name pos:start="191:31" pos:end="191:37">io_base</name></expr>;</condition> <incr pos:start="191:40" pos:end="191:43"><expr pos:start="191:40" pos:end="191:43"><name pos:start="191:40" pos:end="191:40">i</name> <operator pos:start="191:42" pos:end="191:43">++</operator></expr></incr>)</control> <block pos:start="191:46" pos:end="201:5">{<block_content pos:start="193:9" pos:end="199:61">

        <decl_stmt pos:start="193:9" pos:end="193:25"><decl pos:start="193:9" pos:end="193:24"><type pos:start="193:9" pos:end="193:21"><name pos:start="193:9" pos:end="193:19">DeviceState</name> <modifier pos:start="193:21" pos:end="193:21">*</modifier></type><name pos:start="193:22" pos:end="193:24">dev</name></decl>;</decl_stmt>

        <expr_stmt pos:start="195:9" pos:end="197:70"><expr pos:start="195:9" pos:end="197:69"><name pos:start="195:9" pos:end="195:11">dev</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <call pos:start="195:15" pos:end="197:69"><name pos:start="195:15" pos:end="195:34">sysbus_create_simple</name><argument_list pos:start="195:35" pos:end="197:69">(<argument pos:start="195:36" pos:end="195:50"><expr pos:start="195:36" pos:end="195:50"><name pos:start="195:36" pos:end="195:50">TYPE_PXA2XX_SSP</name></expr></argument>, <argument pos:start="195:53" pos:end="195:73"><expr pos:start="195:53" pos:end="195:73"><name pos:start="195:53" pos:end="195:65"><name pos:start="195:53" pos:end="195:62">pxa255_ssp</name><index pos:start="195:63" pos:end="195:65">[<expr pos:start="195:64" pos:end="195:64"><name pos:start="195:64" pos:end="195:64">i</name></expr>]</index></name><operator pos:start="195:66" pos:end="195:66">.</operator><name pos:start="195:67" pos:end="195:73">io_base</name></expr></argument>,

                        <argument pos:start="197:25" pos:end="197:68"><expr pos:start="197:25" pos:end="197:68"><call pos:start="197:25" pos:end="197:68"><name pos:start="197:25" pos:end="197:40">qdev_get_gpio_in</name><argument_list pos:start="197:41" pos:end="197:68">(<argument pos:start="197:42" pos:end="197:47"><expr pos:start="197:42" pos:end="197:47"><name pos:start="197:42" pos:end="197:47"><name pos:start="197:42" pos:end="197:42">s</name><operator pos:start="197:43" pos:end="197:44">-&gt;</operator><name pos:start="197:45" pos:end="197:47">pic</name></name></expr></argument>, <argument pos:start="197:50" pos:end="197:67"><expr pos:start="197:50" pos:end="197:67"><name pos:start="197:50" pos:end="197:62"><name pos:start="197:50" pos:end="197:59">pxa255_ssp</name><index pos:start="197:60" pos:end="197:62">[<expr pos:start="197:61" pos:end="197:61"><name pos:start="197:61" pos:end="197:61">i</name></expr>]</index></name><operator pos:start="197:63" pos:end="197:63">.</operator><name pos:start="197:64" pos:end="197:67">irqn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:61"><expr pos:start="199:9" pos:end="199:60"><name pos:start="199:9" pos:end="199:17"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:14">ssp</name><index pos:start="199:15" pos:end="199:17">[<expr pos:start="199:16" pos:end="199:16"><name pos:start="199:16" pos:end="199:16">i</name></expr>]</index></name> <operator pos:start="199:19" pos:end="199:19">=</operator> <operator pos:start="199:21" pos:end="199:21">(</operator><name pos:start="199:22" pos:end="199:27">SSIBus</name> <operator pos:start="199:29" pos:end="199:29">*</operator><operator pos:start="199:30" pos:end="199:30">)</operator><call pos:start="199:31" pos:end="199:60"><name pos:start="199:31" pos:end="199:48">qdev_get_child_bus</name><argument_list pos:start="199:49" pos:end="199:60">(<argument pos:start="199:50" pos:end="199:52"><expr pos:start="199:50" pos:end="199:52"><name pos:start="199:50" pos:end="199:52">dev</name></expr></argument>, <argument pos:start="199:55" pos:end="199:59"><expr pos:start="199:55" pos:end="199:59"><literal type="string" pos:start="199:55" pos:end="199:59">"ssi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="205:5" pos:end="211:5"><if pos:start="205:5" pos:end="211:5">if <condition pos:start="205:8" pos:end="205:22">(<expr pos:start="205:9" pos:end="205:21"><call pos:start="205:9" pos:end="205:21"><name pos:start="205:9" pos:end="205:19">usb_enabled</name><argument_list pos:start="205:20" pos:end="205:21">()</argument_list></call></expr>)</condition> <block pos:start="205:24" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:68">

        <expr_stmt pos:start="207:9" pos:end="209:68"><expr pos:start="207:9" pos:end="209:67"><call pos:start="207:9" pos:end="209:67"><name pos:start="207:9" pos:end="207:28">sysbus_create_simple</name><argument_list pos:start="207:29" pos:end="209:67">(<argument pos:start="207:30" pos:end="207:42"><expr pos:start="207:30" pos:end="207:42"><literal type="string" pos:start="207:30" pos:end="207:42">"sysbus-ohci"</literal></expr></argument>, <argument pos:start="207:45" pos:end="207:54"><expr pos:start="207:45" pos:end="207:54"><literal type="number" pos:start="207:45" pos:end="207:54">0x4c000000</literal></expr></argument>,

                        <argument pos:start="209:25" pos:end="209:66"><expr pos:start="209:25" pos:end="209:66"><call pos:start="209:25" pos:end="209:66"><name pos:start="209:25" pos:end="209:40">qdev_get_gpio_in</name><argument_list pos:start="209:41" pos:end="209:66">(<argument pos:start="209:42" pos:end="209:47"><expr pos:start="209:42" pos:end="209:47"><name pos:start="209:42" pos:end="209:47"><name pos:start="209:42" pos:end="209:42">s</name><operator pos:start="209:43" pos:end="209:44">-&gt;</operator><name pos:start="209:45" pos:end="209:47">pic</name></name></expr></argument>, <argument pos:start="209:50" pos:end="209:65"><expr pos:start="209:50" pos:end="209:65"><name pos:start="209:50" pos:end="209:65">PXA2XX_PIC_USBH1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:65"><expr pos:start="215:5" pos:end="215:64"><name pos:start="215:5" pos:end="215:16"><name pos:start="215:5" pos:end="215:5">s</name><operator pos:start="215:6" pos:end="215:7">-&gt;</operator><name pos:start="215:8" pos:end="215:13">pcmcia</name><index pos:start="215:14" pos:end="215:16">[<expr pos:start="215:15" pos:end="215:15"><literal type="number" pos:start="215:15" pos:end="215:15">0</literal></expr>]</index></name> <operator pos:start="215:18" pos:end="215:18">=</operator> <call pos:start="215:20" pos:end="215:64"><name pos:start="215:20" pos:end="215:37">pxa2xx_pcmcia_init</name><argument_list pos:start="215:38" pos:end="215:64">(<argument pos:start="215:39" pos:end="215:51"><expr pos:start="215:39" pos:end="215:51"><name pos:start="215:39" pos:end="215:51">address_space</name></expr></argument>, <argument pos:start="215:54" pos:end="215:63"><expr pos:start="215:54" pos:end="215:63"><literal type="number" pos:start="215:54" pos:end="215:63">0x20000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:65"><expr pos:start="217:5" pos:end="217:64"><name pos:start="217:5" pos:end="217:16"><name pos:start="217:5" pos:end="217:5">s</name><operator pos:start="217:6" pos:end="217:7">-&gt;</operator><name pos:start="217:8" pos:end="217:13">pcmcia</name><index pos:start="217:14" pos:end="217:16">[<expr pos:start="217:15" pos:end="217:15"><literal type="number" pos:start="217:15" pos:end="217:15">1</literal></expr>]</index></name> <operator pos:start="217:18" pos:end="217:18">=</operator> <call pos:start="217:20" pos:end="217:64"><name pos:start="217:20" pos:end="217:37">pxa2xx_pcmcia_init</name><argument_list pos:start="217:38" pos:end="217:64">(<argument pos:start="217:39" pos:end="217:51"><expr pos:start="217:39" pos:end="217:51"><name pos:start="217:39" pos:end="217:51">address_space</name></expr></argument>, <argument pos:start="217:54" pos:end="217:63"><expr pos:start="217:54" pos:end="217:63"><literal type="number" pos:start="217:54" pos:end="217:63">0x30000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="221:5" pos:end="223:67"><expr pos:start="221:5" pos:end="223:66"><call pos:start="221:5" pos:end="223:66"><name pos:start="221:5" pos:end="221:24">sysbus_create_simple</name><argument_list pos:start="221:25" pos:end="223:66">(<argument pos:start="221:26" pos:end="221:40"><expr pos:start="221:26" pos:end="221:40"><name pos:start="221:26" pos:end="221:40">TYPE_PXA2XX_RTC</name></expr></argument>, <argument pos:start="221:43" pos:end="221:52"><expr pos:start="221:43" pos:end="221:52"><literal type="number" pos:start="221:43" pos:end="221:52">0x40900000</literal></expr></argument>,

                    <argument pos:start="223:21" pos:end="223:65"><expr pos:start="223:21" pos:end="223:65"><call pos:start="223:21" pos:end="223:65"><name pos:start="223:21" pos:end="223:36">qdev_get_gpio_in</name><argument_list pos:start="223:37" pos:end="223:65">(<argument pos:start="223:38" pos:end="223:43"><expr pos:start="223:38" pos:end="223:43"><name pos:start="223:38" pos:end="223:43"><name pos:start="223:38" pos:end="223:38">s</name><operator pos:start="223:39" pos:end="223:40">-&gt;</operator><name pos:start="223:41" pos:end="223:43">pic</name></name></expr></argument>, <argument pos:start="223:46" pos:end="223:64"><expr pos:start="223:46" pos:end="223:64"><name pos:start="223:46" pos:end="223:64">PXA2XX_PIC_RTCALARM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="227:5" pos:end="229:70"><expr pos:start="227:5" pos:end="229:69"><name pos:start="227:5" pos:end="227:13"><name pos:start="227:5" pos:end="227:5">s</name><operator pos:start="227:6" pos:end="227:7">-&gt;</operator><name pos:start="227:8" pos:end="227:10">i2c</name><index pos:start="227:11" pos:end="227:13">[<expr pos:start="227:12" pos:end="227:12"><literal type="number" pos:start="227:12" pos:end="227:12">0</literal></expr>]</index></name> <operator pos:start="227:15" pos:end="227:15">=</operator> <call pos:start="227:17" pos:end="229:69"><name pos:start="227:17" pos:end="227:31">pxa2xx_i2c_init</name><argument_list pos:start="227:32" pos:end="229:69">(<argument pos:start="227:33" pos:end="227:42"><expr pos:start="227:33" pos:end="227:42"><literal type="number" pos:start="227:33" pos:end="227:42">0x40301600</literal></expr></argument>,

                    <argument pos:start="229:21" pos:end="229:60"><expr pos:start="229:21" pos:end="229:60"><call pos:start="229:21" pos:end="229:60"><name pos:start="229:21" pos:end="229:36">qdev_get_gpio_in</name><argument_list pos:start="229:37" pos:end="229:60">(<argument pos:start="229:38" pos:end="229:43"><expr pos:start="229:38" pos:end="229:43"><name pos:start="229:38" pos:end="229:43"><name pos:start="229:38" pos:end="229:38">s</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:43">pic</name></name></expr></argument>, <argument pos:start="229:46" pos:end="229:59"><expr pos:start="229:46" pos:end="229:59"><name pos:start="229:46" pos:end="229:59">PXA2XX_PIC_I2C</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="229:63" pos:end="229:68"><expr pos:start="229:63" pos:end="229:68"><literal type="number" pos:start="229:63" pos:end="229:68">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="233:71"><expr pos:start="231:5" pos:end="233:70"><name pos:start="231:5" pos:end="231:13"><name pos:start="231:5" pos:end="231:5">s</name><operator pos:start="231:6" pos:end="231:7">-&gt;</operator><name pos:start="231:8" pos:end="231:10">i2c</name><index pos:start="231:11" pos:end="231:13">[<expr pos:start="231:12" pos:end="231:12"><literal type="number" pos:start="231:12" pos:end="231:12">1</literal></expr>]</index></name> <operator pos:start="231:15" pos:end="231:15">=</operator> <call pos:start="231:17" pos:end="233:70"><name pos:start="231:17" pos:end="231:31">pxa2xx_i2c_init</name><argument_list pos:start="231:32" pos:end="233:70">(<argument pos:start="231:33" pos:end="231:42"><expr pos:start="231:33" pos:end="231:42"><literal type="number" pos:start="231:33" pos:end="231:42">0x40f00100</literal></expr></argument>,

                    <argument pos:start="233:21" pos:end="233:63"><expr pos:start="233:21" pos:end="233:63"><call pos:start="233:21" pos:end="233:63"><name pos:start="233:21" pos:end="233:36">qdev_get_gpio_in</name><argument_list pos:start="233:37" pos:end="233:63">(<argument pos:start="233:38" pos:end="233:43"><expr pos:start="233:38" pos:end="233:43"><name pos:start="233:38" pos:end="233:43"><name pos:start="233:38" pos:end="233:38">s</name><operator pos:start="233:39" pos:end="233:40">-&gt;</operator><name pos:start="233:41" pos:end="233:43">pic</name></name></expr></argument>, <argument pos:start="233:46" pos:end="233:62"><expr pos:start="233:46" pos:end="233:62"><name pos:start="233:46" pos:end="233:62">PXA2XX_PIC_PWRI2C</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="233:66" pos:end="233:69"><expr pos:start="233:66" pos:end="233:69"><literal type="number" pos:start="233:66" pos:end="233:69">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="237:5" pos:end="243:64"><expr pos:start="237:5" pos:end="243:63"><name pos:start="237:5" pos:end="237:10"><name pos:start="237:5" pos:end="237:5">s</name><operator pos:start="237:6" pos:end="237:7">-&gt;</operator><name pos:start="237:8" pos:end="237:10">i2s</name></name> <operator pos:start="237:12" pos:end="237:12">=</operator> <call pos:start="237:14" pos:end="243:63"><name pos:start="237:14" pos:end="237:28">pxa2xx_i2s_init</name><argument_list pos:start="237:29" pos:end="243:63">(<argument pos:start="237:30" pos:end="237:42"><expr pos:start="237:30" pos:end="237:42"><name pos:start="237:30" pos:end="237:42">address_space</name></expr></argument>, <argument pos:start="237:45" pos:end="237:54"><expr pos:start="237:45" pos:end="237:54"><literal type="number" pos:start="237:45" pos:end="237:54">0x40400000</literal></expr></argument>,

                    <argument pos:start="239:21" pos:end="239:60"><expr pos:start="239:21" pos:end="239:60"><call pos:start="239:21" pos:end="239:60"><name pos:start="239:21" pos:end="239:36">qdev_get_gpio_in</name><argument_list pos:start="239:37" pos:end="239:60">(<argument pos:start="239:38" pos:end="239:43"><expr pos:start="239:38" pos:end="239:43"><name pos:start="239:38" pos:end="239:43"><name pos:start="239:38" pos:end="239:38">s</name><operator pos:start="239:39" pos:end="239:40">-&gt;</operator><name pos:start="239:41" pos:end="239:43">pic</name></name></expr></argument>, <argument pos:start="239:46" pos:end="239:59"><expr pos:start="239:46" pos:end="239:59"><name pos:start="239:46" pos:end="239:59">PXA2XX_PIC_I2S</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="241:21" pos:end="241:62"><expr pos:start="241:21" pos:end="241:62"><call pos:start="241:21" pos:end="241:62"><name pos:start="241:21" pos:end="241:36">qdev_get_gpio_in</name><argument_list pos:start="241:37" pos:end="241:62">(<argument pos:start="241:38" pos:end="241:43"><expr pos:start="241:38" pos:end="241:43"><name pos:start="241:38" pos:end="241:43"><name pos:start="241:38" pos:end="241:38">s</name><operator pos:start="241:39" pos:end="241:40">-&gt;</operator><name pos:start="241:41" pos:end="241:43">dma</name></name></expr></argument>, <argument pos:start="241:46" pos:end="241:61"><expr pos:start="241:46" pos:end="241:61"><name pos:start="241:46" pos:end="241:61">PXA2XX_RX_RQ_I2S</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="243:21" pos:end="243:62"><expr pos:start="243:21" pos:end="243:62"><call pos:start="243:21" pos:end="243:62"><name pos:start="243:21" pos:end="243:36">qdev_get_gpio_in</name><argument_list pos:start="243:37" pos:end="243:62">(<argument pos:start="243:38" pos:end="243:43"><expr pos:start="243:38" pos:end="243:43"><name pos:start="243:38" pos:end="243:43"><name pos:start="243:38" pos:end="243:38">s</name><operator pos:start="243:39" pos:end="243:40">-&gt;</operator><name pos:start="243:41" pos:end="243:43">dma</name></name></expr></argument>, <argument pos:start="243:46" pos:end="243:61"><expr pos:start="243:46" pos:end="243:61"><name pos:start="243:46" pos:end="243:61">PXA2XX_TX_RQ_I2S</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="247:5" pos:end="247:36">/* GPIO1 resets the processor */</comment>

    <comment type="block" pos:start="249:5" pos:end="249:62">/* The handler can be overridden by board-specific code */</comment>

    <expr_stmt pos:start="251:5" pos:end="251:48"><expr pos:start="251:5" pos:end="251:47"><call pos:start="251:5" pos:end="251:47"><name pos:start="251:5" pos:end="251:25">qdev_connect_gpio_out</name><argument_list pos:start="251:26" pos:end="251:47">(<argument pos:start="251:27" pos:end="251:33"><expr pos:start="251:27" pos:end="251:33"><name pos:start="251:27" pos:end="251:33"><name pos:start="251:27" pos:end="251:27">s</name><operator pos:start="251:28" pos:end="251:29">-&gt;</operator><name pos:start="251:30" pos:end="251:33">gpio</name></name></expr></argument>, <argument pos:start="251:36" pos:end="251:36"><expr pos:start="251:36" pos:end="251:36"><literal type="number" pos:start="251:36" pos:end="251:36">1</literal></expr></argument>, <argument pos:start="251:39" pos:end="251:46"><expr pos:start="251:39" pos:end="251:46"><name pos:start="251:39" pos:end="251:46"><name pos:start="251:39" pos:end="251:39">s</name><operator pos:start="251:40" pos:end="251:41">-&gt;</operator><name pos:start="251:42" pos:end="251:46">reset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="253:5" pos:end="253:13">return <expr pos:start="253:12" pos:end="253:12"><name pos:start="253:12" pos:end="253:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
