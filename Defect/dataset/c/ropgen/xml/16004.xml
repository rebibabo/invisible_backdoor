<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16004.c" pos:tabs="8"><function pos:start="1:1" pos:end="128:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_video_frame</name><parameter_list pos:start="1:27" pos:end="1:100">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:37">VideoState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">is</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:50">AVFrame</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">frame</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">int64_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">pts</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:81">AVPacket</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">pkt</name></decl></parameter>, <parameter pos:start="1:89" pos:end="1:99"><decl pos:start="1:89" pos:end="1:99"><type pos:start="1:89" pos:end="1:99"><name pos:start="1:89" pos:end="1:91">int</name> <modifier pos:start="1:93" pos:end="1:93">*</modifier></type><name pos:start="1:94" pos:end="1:99">serial</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="128:1">{<block_content pos:start="5:5" pos:end="126:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">got_picture</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if <condition pos:start="9:8" pos:end="9:58">(<expr pos:start="9:9" pos:end="9:57"><call pos:start="9:9" pos:end="9:53"><name pos:start="9:9" pos:end="9:24">packet_queue_get</name><argument_list pos:start="9:25" pos:end="9:53">(<argument pos:start="9:26" pos:end="9:36"><expr pos:start="9:26" pos:end="9:36"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:36"><name pos:start="9:27" pos:end="9:28">is</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:36">videoq</name></name></expr></argument>, <argument pos:start="9:39" pos:end="9:41"><expr pos:start="9:39" pos:end="9:41"><name pos:start="9:39" pos:end="9:41">pkt</name></expr></argument>, <argument pos:start="9:44" pos:end="9:44"><expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">1</literal></expr></argument>, <argument pos:start="9:47" pos:end="9:52"><expr pos:start="9:47" pos:end="9:52"><name pos:start="9:47" pos:end="9:52">serial</name></expr></argument>)</argument_list></call> <operator pos:start="9:55" pos:end="9:55">&lt;</operator> <literal type="number" pos:start="9:57" pos:end="9:57">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="45:5"><if pos:start="15:5" pos:end="45:5">if <condition pos:start="15:8" pos:end="15:36">(<expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:11">pkt</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:17">data</name></name> <operator pos:start="15:19" pos:end="15:20">==</operator> <name pos:start="15:22" pos:end="15:35"><name pos:start="15:22" pos:end="15:30">flush_pkt</name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:35">data</name></name></expr>)</condition> <block pos:start="15:38" pos:end="45:5">{<block_content pos:start="17:9" pos:end="43:17">

        <expr_stmt pos:start="17:9" pos:end="17:51"><expr pos:start="17:9" pos:end="17:50"><call pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:29">avcodec_flush_buffers</name><argument_list pos:start="17:30" pos:end="17:50">(<argument pos:start="17:31" pos:end="17:49"><expr pos:start="17:31" pos:end="17:49"><name pos:start="17:31" pos:end="17:49"><name pos:start="17:31" pos:end="17:32">is</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:42">video_st</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:49">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><call pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:21">SDL_LockMutex</name><argument_list pos:start="21:22" pos:end="21:38">(<argument pos:start="21:23" pos:end="21:37"><expr pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:24">is</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="23:9" pos:end="23:110">// Make sure there are no long delay timers (ideally we should just flush the queue but that's harder)</comment>

        <while pos:start="25:9" pos:end="29:9">while <condition pos:start="25:15" pos:end="25:59">(<expr pos:start="25:16" pos:end="25:58"><name pos:start="25:16" pos:end="25:29"><name pos:start="25:16" pos:end="25:17">is</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:29">pictq_size</name></name> <operator pos:start="25:31" pos:end="25:32">&amp;&amp;</operator> <operator pos:start="25:34" pos:end="25:34">!</operator><name pos:start="25:35" pos:end="25:58"><name pos:start="25:35" pos:end="25:36">is</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:44">videoq</name><operator pos:start="25:45" pos:end="25:45">.</operator><name pos:start="25:46" pos:end="25:58">abort_request</name></name></expr>)</condition> <block pos:start="25:61" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:58">

            <expr_stmt pos:start="27:13" pos:end="27:58"><expr pos:start="27:13" pos:end="27:57"><call pos:start="27:13" pos:end="27:57"><name pos:start="27:13" pos:end="27:24">SDL_CondWait</name><argument_list pos:start="27:25" pos:end="27:57">(<argument pos:start="27:26" pos:end="27:39"><expr pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:27">is</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:39">pictq_cond</name></name></expr></argument>, <argument pos:start="27:42" pos:end="27:56"><expr pos:start="27:42" pos:end="27:56"><name pos:start="27:42" pos:end="27:56"><name pos:start="27:42" pos:end="27:43">is</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:56">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:10">is</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:29">video_current_pos</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <operator pos:start="31:33" pos:end="31:33">-</operator><literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:10">is</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:26">frame_last_pts</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:43">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:36"><expr pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:10">is</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:31">frame_last_duration</name></name> <operator pos:start="35:33" pos:end="35:33">=</operator> <literal type="number" pos:start="35:35" pos:end="35:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:10">is</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:23">frame_timer</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <operator pos:start="37:27" pos:end="37:27">(</operator><name pos:start="37:28" pos:end="37:33">double</name><operator pos:start="37:34" pos:end="37:34">)</operator><call pos:start="37:35" pos:end="37:46"><name pos:start="37:35" pos:end="37:44">av_gettime</name><argument_list pos:start="37:45" pos:end="37:46">()</argument_list></call> <operator pos:start="37:48" pos:end="37:48">/</operator> <literal type="number" pos:start="37:50" pos:end="37:58">1000000.0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:10">is</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:34">frame_last_dropped_pts</name></name> <operator pos:start="39:36" pos:end="39:36">=</operator> <name pos:start="39:38" pos:end="39:51">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:41"><expr pos:start="41:9" pos:end="41:40"><call pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:23">SDL_UnlockMutex</name><argument_list pos:start="41:24" pos:end="41:40">(<argument pos:start="41:25" pos:end="41:39"><expr pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:26">is</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:17"><if pos:start="49:5" pos:end="51:17">if<condition pos:start="49:7" pos:end="49:80">(<expr pos:start="49:8" pos:end="49:79"><call pos:start="49:8" pos:end="49:75"><name pos:start="49:8" pos:end="49:28">avcodec_decode_video2</name><argument_list pos:start="49:29" pos:end="49:75">(<argument pos:start="49:30" pos:end="49:48"><expr pos:start="49:30" pos:end="49:48"><name pos:start="49:30" pos:end="49:48"><name pos:start="49:30" pos:end="49:31">is</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:41">video_st</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:48">codec</name></name></expr></argument>, <argument pos:start="49:51" pos:end="49:55"><expr pos:start="49:51" pos:end="49:55"><name pos:start="49:51" pos:end="49:55">frame</name></expr></argument>, <argument pos:start="49:58" pos:end="49:69"><expr pos:start="49:58" pos:end="49:69"><operator pos:start="49:58" pos:end="49:58">&amp;</operator><name pos:start="49:59" pos:end="49:69">got_picture</name></expr></argument>, <argument pos:start="49:72" pos:end="49:74"><expr pos:start="49:72" pos:end="49:74"><name pos:start="49:72" pos:end="49:74">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="49:77" pos:end="49:77">&lt;</operator> <literal type="number" pos:start="49:79" pos:end="49:79">0</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:17"><block_content pos:start="51:9" pos:end="51:17">

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="124:5"><if pos:start="55:5" pos:end="124:5">if <condition pos:start="55:8" pos:end="55:20">(<expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:19">got_picture</name></expr>)</condition> <block pos:start="55:22" pos:end="124:5">{<block_content pos:start="57:9" pos:end="122:19">

        <decl_stmt pos:start="57:9" pos:end="57:20"><decl pos:start="57:9" pos:end="57:19"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:15">ret</name> <init pos:start="57:17" pos:end="57:19">= <expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">1</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="61:9" pos:end="73:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:38">(<expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:31">decoder_reorder_pts</name> <operator pos:start="61:33" pos:end="61:34">==</operator> <operator pos:start="61:36" pos:end="61:36">-</operator><literal type="number" pos:start="61:37" pos:end="61:37">1</literal></expr>)</condition> <block pos:start="61:40" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:61">

            <expr_stmt pos:start="63:13" pos:end="63:61"><expr pos:start="63:13" pos:end="63:60"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:16">pts</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:60"><name pos:start="63:20" pos:end="63:53">av_frame_get_best_effort_timestamp</name><argument_list pos:start="63:54" pos:end="63:60">(<argument pos:start="63:55" pos:end="63:59"><expr pos:start="63:55" pos:end="63:59"><name pos:start="63:55" pos:end="63:59">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="69:9">else if <condition pos:start="65:19" pos:end="65:39">(<expr pos:start="65:20" pos:end="65:38"><name pos:start="65:20" pos:end="65:38">decoder_reorder_pts</name></expr>)</condition> <block pos:start="65:41" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:34">

            <expr_stmt pos:start="67:13" pos:end="67:34"><expr pos:start="67:13" pos:end="67:33"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:16">pts</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:33"><name pos:start="67:20" pos:end="67:24">frame</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:33">pkt_pts</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="73:9">else <block pos:start="69:16" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:34">

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><operator pos:start="71:13" pos:end="71:13">*</operator><name pos:start="71:14" pos:end="71:16">pts</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:33"><name pos:start="71:20" pos:end="71:24">frame</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:33">pkt_dts</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:35">(<expr pos:start="77:13" pos:end="77:34"><operator pos:start="77:13" pos:end="77:13">*</operator><name pos:start="77:14" pos:end="77:16">pts</name> <operator pos:start="77:18" pos:end="77:19">==</operator> <name pos:start="77:21" pos:end="77:34">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="77:37" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:21">

            <expr_stmt pos:start="79:13" pos:end="79:21"><expr pos:start="79:13" pos:end="79:20"><operator pos:start="79:13" pos:end="79:13">*</operator><name pos:start="79:14" pos:end="79:16">pts</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="85:9" pos:end="118:9"><if pos:start="85:9" pos:end="118:9">if <condition pos:start="85:12" pos:end="85:91">(<expr pos:start="85:13" pos:end="85:90"><name pos:start="85:13" pos:end="85:21">framedrop</name><operator pos:start="85:22" pos:end="85:22">&gt;</operator><literal type="number" pos:start="85:23" pos:end="85:23">0</literal> <operator pos:start="85:25" pos:end="85:26">||</operator> <operator pos:start="85:28" pos:end="85:28">(</operator><name pos:start="85:29" pos:end="85:37">framedrop</name> <operator pos:start="85:39" pos:end="85:40">&amp;&amp;</operator> <call pos:start="85:42" pos:end="85:65"><name pos:start="85:42" pos:end="85:61">get_master_sync_type</name><argument_list pos:start="85:62" pos:end="85:65">(<argument pos:start="85:63" pos:end="85:64"><expr pos:start="85:63" pos:end="85:64"><name pos:start="85:63" pos:end="85:64">is</name></expr></argument>)</argument_list></call> <operator pos:start="85:67" pos:end="85:68">!=</operator> <name pos:start="85:70" pos:end="85:89">AV_SYNC_VIDEO_MASTER</name><operator pos:start="85:90" pos:end="85:90">)</operator></expr>)</condition> <block pos:start="85:93" pos:end="118:9">{<block_content pos:start="87:13" pos:end="116:45">

            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><call pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:25">SDL_LockMutex</name><argument_list pos:start="87:26" pos:end="87:42">(<argument pos:start="87:27" pos:end="87:41"><expr pos:start="87:27" pos:end="87:41"><name pos:start="87:27" pos:end="87:41"><name pos:start="87:27" pos:end="87:28">is</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:41">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="114:13"><if pos:start="89:13" pos:end="114:13">if <condition pos:start="89:16" pos:end="89:61">(<expr pos:start="89:17" pos:end="89:60"><name pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:18">is</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:34">frame_last_pts</name></name> <operator pos:start="89:36" pos:end="89:37">!=</operator> <name pos:start="89:39" pos:end="89:52">AV_NOPTS_VALUE</name> <operator pos:start="89:54" pos:end="89:55">&amp;&amp;</operator> <operator pos:start="89:57" pos:end="89:57">*</operator><name pos:start="89:58" pos:end="89:60">pts</name></expr>)</condition> <block pos:start="89:63" pos:end="114:13">{<block_content pos:start="91:17" pos:end="112:17">

                <decl_stmt pos:start="91:17" pos:end="91:78"><decl pos:start="91:17" pos:end="91:77"><type pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:22">double</name></type> <name pos:start="91:24" pos:end="91:32">clockdiff</name> <init pos:start="91:34" pos:end="91:77">= <expr pos:start="91:36" pos:end="91:77"><call pos:start="91:36" pos:end="91:54"><name pos:start="91:36" pos:end="91:50">get_video_clock</name><argument_list pos:start="91:51" pos:end="91:54">(<argument pos:start="91:52" pos:end="91:53"><expr pos:start="91:52" pos:end="91:53"><name pos:start="91:52" pos:end="91:53">is</name></expr></argument>)</argument_list></call> <operator pos:start="91:56" pos:end="91:56">-</operator> <call pos:start="91:58" pos:end="91:77"><name pos:start="91:58" pos:end="91:73">get_master_clock</name><argument_list pos:start="91:74" pos:end="91:77">(<argument pos:start="91:75" pos:end="91:76"><expr pos:start="91:75" pos:end="91:76"><name pos:start="91:75" pos:end="91:76">is</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="93:17" pos:end="93:69"><decl pos:start="93:17" pos:end="93:68"><type pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:22">double</name></type> <name pos:start="93:24" pos:end="93:27">dpts</name> <init pos:start="93:29" pos:end="93:68">= <expr pos:start="93:31" pos:end="93:68"><call pos:start="93:31" pos:end="93:61"><name pos:start="93:31" pos:end="93:36">av_q2d</name><argument_list pos:start="93:37" pos:end="93:61">(<argument pos:start="93:38" pos:end="93:60"><expr pos:start="93:38" pos:end="93:60"><name pos:start="93:38" pos:end="93:60"><name pos:start="93:38" pos:end="93:39">is</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:49">video_st</name><operator pos:start="93:50" pos:end="93:51">-&gt;</operator><name pos:start="93:52" pos:end="93:60">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:63" pos:end="93:63">*</operator> <operator pos:start="93:65" pos:end="93:65">*</operator><name pos:start="93:66" pos:end="93:68">pts</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="95:17" pos:end="95:59"><decl pos:start="95:17" pos:end="95:58"><type pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:22">double</name></type> <name pos:start="95:24" pos:end="95:30">ptsdiff</name> <init pos:start="95:32" pos:end="95:58">= <expr pos:start="95:34" pos:end="95:58"><name pos:start="95:34" pos:end="95:37">dpts</name> <operator pos:start="95:39" pos:end="95:39">-</operator> <name pos:start="95:41" pos:end="95:58"><name pos:start="95:41" pos:end="95:42">is</name><operator pos:start="95:43" pos:end="95:44">-&gt;</operator><name pos:start="95:45" pos:end="95:58">frame_last_pts</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="97:17" pos:end="112:17"><if pos:start="97:17" pos:end="112:17">if <condition pos:start="97:20" pos:end="101:75">(<expr pos:start="97:21" pos:end="101:74"><operator pos:start="97:21" pos:end="97:21">!</operator><call pos:start="97:22" pos:end="97:37"><name pos:start="97:22" pos:end="97:26">isnan</name><argument_list pos:start="97:27" pos:end="97:37">(<argument pos:start="97:28" pos:end="97:36"><expr pos:start="97:28" pos:end="97:36"><name pos:start="97:28" pos:end="97:36">clockdiff</name></expr></argument>)</argument_list></call> <operator pos:start="97:39" pos:end="97:40">&amp;&amp;</operator> <call pos:start="97:42" pos:end="97:56"><name pos:start="97:42" pos:end="97:45">fabs</name><argument_list pos:start="97:46" pos:end="97:56">(<argument pos:start="97:47" pos:end="97:55"><expr pos:start="97:47" pos:end="97:55"><name pos:start="97:47" pos:end="97:55">clockdiff</name></expr></argument>)</argument_list></call> <operator pos:start="97:58" pos:end="97:58">&lt;</operator> <name pos:start="97:60" pos:end="97:78">AV_NOSYNC_THRESHOLD</name> <operator pos:start="97:80" pos:end="97:81">&amp;&amp;</operator>

                     <name pos:start="99:22" pos:end="99:28">ptsdiff</name> <operator pos:start="99:30" pos:end="99:30">&gt;</operator> <literal type="number" pos:start="99:32" pos:end="99:32">0</literal> <operator pos:start="99:34" pos:end="99:35">&amp;&amp;</operator> <name pos:start="99:37" pos:end="99:43">ptsdiff</name> <operator pos:start="99:45" pos:end="99:45">&lt;</operator> <name pos:start="99:47" pos:end="99:65">AV_NOSYNC_THRESHOLD</name> <operator pos:start="99:67" pos:end="99:68">&amp;&amp;</operator>

                     <name pos:start="101:22" pos:end="101:30">clockdiff</name> <operator pos:start="101:32" pos:end="101:32">+</operator> <name pos:start="101:34" pos:end="101:40">ptsdiff</name> <operator pos:start="101:42" pos:end="101:42">-</operator> <name pos:start="101:44" pos:end="101:70"><name pos:start="101:44" pos:end="101:45">is</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:70">frame_last_filter_delay</name></name> <operator pos:start="101:72" pos:end="101:72">&lt;</operator> <literal type="number" pos:start="101:74" pos:end="101:74">0</literal></expr>)</condition> <block pos:start="101:77" pos:end="112:17">{<block_content pos:start="103:21" pos:end="110:28">

                    <expr_stmt pos:start="103:21" pos:end="103:58"><expr pos:start="103:21" pos:end="103:57"><name pos:start="103:21" pos:end="103:46"><name pos:start="103:21" pos:end="103:22">is</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:46">frame_last_dropped_pos</name></name> <operator pos:start="103:48" pos:end="103:48">=</operator> <name pos:start="103:50" pos:end="103:57"><name pos:start="103:50" pos:end="103:52">pkt</name><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:57">pos</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:54"><expr pos:start="105:21" pos:end="105:53"><name pos:start="105:21" pos:end="105:46"><name pos:start="105:21" pos:end="105:22">is</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:46">frame_last_dropped_pts</name></name> <operator pos:start="105:48" pos:end="105:48">=</operator> <name pos:start="105:50" pos:end="105:53">dpts</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:44"><expr pos:start="107:21" pos:end="107:43"><name pos:start="107:21" pos:end="107:41"><name pos:start="107:21" pos:end="107:22">is</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:41">frame_drops_early</name></name><operator pos:start="107:42" pos:end="107:43">++</operator></expr>;</expr_stmt>


                    <expr_stmt pos:start="110:21" pos:end="110:28"><expr pos:start="110:21" pos:end="110:27"><name pos:start="110:21" pos:end="110:23">ret</name> <operator pos:start="110:25" pos:end="110:25">=</operator> <literal type="number" pos:start="110:27" pos:end="110:27">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="116:13" pos:end="116:45"><expr pos:start="116:13" pos:end="116:44"><call pos:start="116:13" pos:end="116:44"><name pos:start="116:13" pos:end="116:27">SDL_UnlockMutex</name><argument_list pos:start="116:28" pos:end="116:44">(<argument pos:start="116:29" pos:end="116:43"><expr pos:start="116:29" pos:end="116:43"><name pos:start="116:29" pos:end="116:43"><name pos:start="116:29" pos:end="116:30">is</name><operator pos:start="116:31" pos:end="116:32">-&gt;</operator><name pos:start="116:33" pos:end="116:43">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="122:9" pos:end="122:19">return <expr pos:start="122:16" pos:end="122:18"><name pos:start="122:16" pos:end="122:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="126:5" pos:end="126:13">return <expr pos:start="126:12" pos:end="126:12"><literal type="number" pos:start="126:12" pos:end="126:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
