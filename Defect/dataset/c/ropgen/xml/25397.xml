<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25397.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">pci_bridge_initfn</name><parameter_list pos:start="1:22" pos:end="1:37">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:31">PCIDevice</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">PCIBus</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:18">parent</name> <init pos:start="5:20" pos:end="5:29">= <expr pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:24">dev</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:29">bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIBridge</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">br</name> <init pos:start="7:19" pos:end="7:50">= <expr pos:start="7:21" pos:end="7:50"><call pos:start="7:21" pos:end="7:50"><name pos:start="7:21" pos:end="7:29">DO_UPCAST</name><argument_list pos:start="7:30" pos:end="7:50">(<argument pos:start="7:31" pos:end="7:39"><expr pos:start="7:31" pos:end="7:39"><name pos:start="7:31" pos:end="7:39">PCIBridge</name></expr></argument>, <argument pos:start="7:42" pos:end="7:44"><expr pos:start="7:42" pos:end="7:44"><name pos:start="7:42" pos:end="7:44">dev</name></expr></argument>, <argument pos:start="7:47" pos:end="7:49"><expr pos:start="7:47" pos:end="7:49"><name pos:start="7:47" pos:end="7:49">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">PCIBus</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:19">sec_bus</name> <init pos:start="9:21" pos:end="9:34">= <expr pos:start="9:23" pos:end="9:34"><operator pos:start="9:23" pos:end="9:23">&amp;</operator><name pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:25">br</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:34">sec_bus</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:72"><expr pos:start="13:5" pos:end="15:71"><call pos:start="13:5" pos:end="15:71"><name pos:start="13:5" pos:end="13:30">pci_word_test_and_set_mask</name><argument_list pos:start="13:31" pos:end="15:71">(<argument pos:start="13:32" pos:end="13:55"><expr pos:start="13:32" pos:end="13:55"><name pos:start="13:32" pos:end="13:42"><name pos:start="13:32" pos:end="13:34">dev</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:42">config</name></name> <operator pos:start="13:44" pos:end="13:44">+</operator> <name pos:start="13:46" pos:end="13:55">PCI_STATUS</name></expr></argument>,

                               <argument pos:start="15:32" pos:end="15:70"><expr pos:start="15:32" pos:end="15:70"><name pos:start="15:32" pos:end="15:47">PCI_STATUS_66MHZ</name> <operator pos:start="15:49" pos:end="15:49">|</operator> <name pos:start="15:51" pos:end="15:70">PCI_STATUS_FAST_BACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><call pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:24">pci_config_set_class</name><argument_list pos:start="17:25" pos:end="17:59">(<argument pos:start="17:26" pos:end="17:36"><expr pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:28">dev</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">config</name></name></expr></argument>, <argument pos:start="17:39" pos:end="17:58"><expr pos:start="17:39" pos:end="17:58"><name pos:start="17:39" pos:end="17:58">PCI_CLASS_BRIDGE_PCI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="23:31"><expr pos:start="19:5" pos:end="23:30"><name pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:7">dev</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:15">config</name><index pos:start="19:16" pos:end="19:32">[<expr pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:31">PCI_HEADER_TYPE</name></expr>]</index></name> <operator pos:start="19:34" pos:end="19:34">=</operator>

        <operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:37"><name pos:start="21:10" pos:end="21:12">dev</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:20">config</name><index pos:start="21:21" pos:end="21:37">[<expr pos:start="21:22" pos:end="21:36"><name pos:start="21:22" pos:end="21:36">PCI_HEADER_TYPE</name></expr>]</index></name> <operator pos:start="21:39" pos:end="21:39">&amp;</operator> <name pos:start="21:41" pos:end="21:70">PCI_HEADER_TYPE_MULTI_FUNCTION</name><operator pos:start="21:71" pos:end="21:71">)</operator> <operator pos:start="21:73" pos:end="21:73">|</operator>

        <name pos:start="23:9" pos:end="23:30">PCI_HEADER_TYPE_BRIDGE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:58"><expr pos:start="25:5" pos:end="27:57"><call pos:start="25:5" pos:end="27:57"><name pos:start="25:5" pos:end="25:16">pci_set_word</name><argument_list pos:start="25:17" pos:end="27:57">(<argument pos:start="25:18" pos:end="25:45"><expr pos:start="25:18" pos:end="25:45"><name pos:start="25:18" pos:end="25:28"><name pos:start="25:18" pos:end="25:20">dev</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:28">config</name></name> <operator pos:start="25:30" pos:end="25:30">+</operator> <name pos:start="25:32" pos:end="25:45">PCI_SEC_STATUS</name></expr></argument>,

                 <argument pos:start="27:18" pos:end="27:56"><expr pos:start="27:18" pos:end="27:56"><name pos:start="27:18" pos:end="27:33">PCI_STATUS_66MHZ</name> <operator pos:start="27:35" pos:end="27:35">|</operator> <name pos:start="27:37" pos:end="27:56">PCI_STATUS_FAST_BACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="41:7">/*

     * If we don't specify the name, the bus will be addressed as &lt;id&gt;.0, where

     * id is the device id.

     * Since PCI Bridge devices have a single bus each, we don't need the index:

     * let users address the bus using the device name.

     */</comment>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:55">(<expr pos:start="43:9" pos:end="43:54"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:21"><name pos:start="43:10" pos:end="43:11">br</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:21">bus_name</name></name> <operator pos:start="43:23" pos:end="43:24">&amp;&amp;</operator> <name pos:start="43:26" pos:end="43:37"><name pos:start="43:26" pos:end="43:28">dev</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:34">qdev</name><operator pos:start="43:35" pos:end="43:35">.</operator><name pos:start="43:36" pos:end="43:37">id</name></name> <operator pos:start="43:39" pos:end="43:40">&amp;&amp;</operator> <operator pos:start="43:42" pos:end="43:42">*</operator><name pos:start="43:43" pos:end="43:54"><name pos:start="43:43" pos:end="43:45">dev</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:51">qdev</name><operator pos:start="43:52" pos:end="43:52">.</operator><name pos:start="43:53" pos:end="43:54">id</name></name></expr>)</condition> <block pos:start="43:57" pos:end="47:5">{<block_content pos:start="45:13" pos:end="45:40">

	    <expr_stmt pos:start="45:13" pos:end="45:40"><expr pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:14">br</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:24">bus_name</name></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:39"><name pos:start="45:28" pos:end="45:30">dev</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:36">qdev</name><operator pos:start="45:37" pos:end="45:37">.</operator><name pos:start="45:38" pos:end="45:39">id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:38"><expr pos:start="51:5" pos:end="53:37"><call pos:start="51:5" pos:end="53:37"><name pos:start="51:5" pos:end="51:23">qbus_create_inplace</name><argument_list pos:start="51:24" pos:end="53:37">(<argument pos:start="51:25" pos:end="51:38"><expr pos:start="51:25" pos:end="51:38"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:38"><name pos:start="51:26" pos:end="51:32">sec_bus</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:38">qbus</name></name></expr></argument>, <argument pos:start="51:41" pos:end="51:52"><expr pos:start="51:41" pos:end="51:52"><name pos:start="51:41" pos:end="51:52">TYPE_PCI_BUS</name></expr></argument>, <argument pos:start="51:55" pos:end="51:64"><expr pos:start="51:55" pos:end="51:64"><operator pos:start="51:55" pos:end="51:55">&amp;</operator><name pos:start="51:56" pos:end="51:64"><name pos:start="51:56" pos:end="51:58">dev</name><operator pos:start="51:59" pos:end="51:60">-&gt;</operator><name pos:start="51:61" pos:end="51:64">qdev</name></name></expr></argument>,

                        <argument pos:start="53:25" pos:end="53:36"><expr pos:start="53:25" pos:end="53:36"><name pos:start="53:25" pos:end="53:36"><name pos:start="53:25" pos:end="53:26">br</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:36">bus_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:11">sec_bus</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:23">parent_dev</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:29">dev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:35"><expr pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:11">sec_bus</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:20">map_irq</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:25">br</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:34">map_irq</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:56"><expr pos:start="59:5" pos:end="59:55"><name pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:11">sec_bus</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:30">address_space_mem</name></name> <operator pos:start="59:32" pos:end="59:32">=</operator> <operator pos:start="59:34" pos:end="59:34">&amp;</operator><name pos:start="59:35" pos:end="59:55"><name pos:start="59:35" pos:end="59:36">br</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:55">address_space_mem</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:76"><expr pos:start="61:5" pos:end="61:75"><call pos:start="61:5" pos:end="61:75"><name pos:start="61:5" pos:end="61:22">memory_region_init</name><argument_list pos:start="61:23" pos:end="61:75">(<argument pos:start="61:24" pos:end="61:45"><expr pos:start="61:24" pos:end="61:45"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:45"><name pos:start="61:25" pos:end="61:26">br</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:45">address_space_mem</name></name></expr></argument>, <argument pos:start="61:48" pos:end="61:63"><expr pos:start="61:48" pos:end="61:63"><literal type="string" pos:start="61:48" pos:end="61:63">"pci_bridge_pci"</literal></expr></argument>, <argument pos:start="61:66" pos:end="61:74"><expr pos:start="61:66" pos:end="61:74"><name pos:start="61:66" pos:end="61:74">INT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:54"><expr pos:start="63:5" pos:end="63:53"><name pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:11">sec_bus</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:29">address_space_io</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <operator pos:start="63:33" pos:end="63:33">&amp;</operator><name pos:start="63:34" pos:end="63:53"><name pos:start="63:34" pos:end="63:35">br</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:53">address_space_io</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:70"><expr pos:start="65:5" pos:end="65:69"><call pos:start="65:5" pos:end="65:69"><name pos:start="65:5" pos:end="65:22">memory_region_init</name><argument_list pos:start="65:23" pos:end="65:69">(<argument pos:start="65:24" pos:end="65:44"><expr pos:start="65:24" pos:end="65:44"><operator pos:start="65:24" pos:end="65:24">&amp;</operator><name pos:start="65:25" pos:end="65:44"><name pos:start="65:25" pos:end="65:26">br</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:44">address_space_io</name></name></expr></argument>, <argument pos:start="65:47" pos:end="65:61"><expr pos:start="65:47" pos:end="65:61"><literal type="string" pos:start="65:47" pos:end="65:61">"pci_bridge_io"</literal></expr></argument>, <argument pos:start="65:64" pos:end="65:68"><expr pos:start="65:64" pos:end="65:68"><literal type="number" pos:start="65:64" pos:end="65:68">65536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><call pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:26">pci_bridge_region_init</name><argument_list pos:start="67:27" pos:end="67:30">(<argument pos:start="67:28" pos:end="67:29"><expr pos:start="67:28" pos:end="67:29"><name pos:start="67:28" pos:end="67:29">br</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><call pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:14">QLIST_INIT</name><argument_list pos:start="69:15" pos:end="69:31">(<argument pos:start="69:16" pos:end="69:30"><expr pos:start="69:16" pos:end="69:30"><operator pos:start="69:16" pos:end="69:16">&amp;</operator><name pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:23">sec_bus</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:30">child</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:56"><expr pos:start="71:5" pos:end="71:55"><call pos:start="71:5" pos:end="71:55"><name pos:start="71:5" pos:end="71:21">QLIST_INSERT_HEAD</name><argument_list pos:start="71:22" pos:end="71:55">(<argument pos:start="71:23" pos:end="71:36"><expr pos:start="71:23" pos:end="71:36"><operator pos:start="71:23" pos:end="71:23">&amp;</operator><name pos:start="71:24" pos:end="71:36"><name pos:start="71:24" pos:end="71:29">parent</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:36">child</name></name></expr></argument>, <argument pos:start="71:39" pos:end="71:45"><expr pos:start="71:39" pos:end="71:45"><name pos:start="71:39" pos:end="71:45">sec_bus</name></expr></argument>, <argument pos:start="71:48" pos:end="71:54"><expr pos:start="71:48" pos:end="71:54"><name pos:start="71:48" pos:end="71:54">sibling</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
