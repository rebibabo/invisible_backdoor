<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17829.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:23"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">vble_decode_frame</name><parameter_list pos:start="1:29" pos:end="2:45">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:67">int</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:78">data_size</name></decl></parameter>,
                             <parameter pos:start="2:30" pos:end="2:44"><decl pos:start="2:30" pos:end="2:44"><type pos:start="2:30" pos:end="2:44"><name pos:start="2:30" pos:end="2:37">AVPacket</name> <modifier pos:start="2:39" pos:end="2:39">*</modifier></type><name pos:start="2:40" pos:end="2:44">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="40:23">{<block_content pos:start="4:5" pos:end="40:23">
    <decl_stmt pos:start="4:5" pos:end="4:40"><decl pos:start="4:5" pos:end="4:39"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:15">VBLEContext</name> <modifier pos:start="4:17" pos:end="4:17">*</modifier></type><name pos:start="4:18" pos:end="4:20">ctx</name> <init pos:start="4:22" pos:end="4:39">= <expr pos:start="4:24" pos:end="4:39"><name pos:start="4:24" pos:end="4:39"><name pos:start="4:24" pos:end="4:28">avctx</name><operator pos:start="4:29" pos:end="4:30">-&gt;</operator><name pos:start="4:31" pos:end="4:39">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">pic</name> <init pos:start="5:18" pos:end="5:37">= <expr pos:start="5:20" pos:end="5:37"><name pos:start="5:20" pos:end="5:37"><name pos:start="5:20" pos:end="5:24">avctx</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:37">coded_frame</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:21"><decl pos:start="6:5" pos:end="6:20"><type pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:17">GetBitContext</name></type> <name pos:start="6:19" pos:end="6:20">gb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">src</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:15"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:15">version</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:67"><decl pos:start="10:5" pos:end="10:35"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:16">width_uv</name> <init pos:start="10:18" pos:end="10:35">= <expr pos:start="10:20" pos:end="10:35"><name pos:start="10:20" pos:end="10:31"><name pos:start="10:20" pos:end="10:24">avctx</name><operator pos:start="10:25" pos:end="10:26">-&gt;</operator><name pos:start="10:27" pos:end="10:31">width</name></name> <operator pos:start="10:33" pos:end="10:33">/</operator> <literal type="number" pos:start="10:35" pos:end="10:35">2</literal></expr></init></decl>, <decl pos:start="10:38" pos:end="10:66"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:38" pos:end="10:46">height_uv</name> <init pos:start="10:48" pos:end="10:66">= <expr pos:start="10:50" pos:end="10:66"><name pos:start="10:50" pos:end="10:62"><name pos:start="10:50" pos:end="10:54">avctx</name><operator pos:start="10:55" pos:end="10:56">-&gt;</operator><name pos:start="10:57" pos:end="10:62">height</name></name> <operator pos:start="10:64" pos:end="10:64">/</operator> <literal type="number" pos:start="10:66" pos:end="10:66">2</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:7">pic</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:18">reference</name></name> <operator pos:start="11:20" pos:end="11:20">=</operator> <literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="12:5" pos:end="12:33">/* Clear buffer if need be */</comment>
    <if_stmt pos:start="13:5" pos:end="14:42"><if pos:start="13:5" pos:end="14:42">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:11">pic</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">data</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:42"><block_content pos:start="14:9" pos:end="14:42">
        <expr_stmt pos:start="14:9" pos:end="14:42"><expr pos:start="14:9" pos:end="14:41"><call pos:start="14:9" pos:end="14:41"><name pos:start="14:9" pos:end="14:29"><name pos:start="14:9" pos:end="14:13">avctx</name><operator pos:start="14:14" pos:end="14:15">-&gt;</operator><name pos:start="14:16" pos:end="14:29">release_buffer</name></name><argument_list pos:start="14:30" pos:end="14:41">(<argument pos:start="14:31" pos:end="14:35"><expr pos:start="14:31" pos:end="14:35"><name pos:start="14:31" pos:end="14:35">avctx</name></expr></argument>, <argument pos:start="14:38" pos:end="14:40"><expr pos:start="14:38" pos:end="14:40"><name pos:start="14:38" pos:end="14:40">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="15:5" pos:end="15:25">/* Allocate buffer */</comment>
    <if_stmt pos:start="16:5" pos:end="40:23"><if pos:start="16:5" pos:end="40:23">if <condition pos:start="16:8" pos:end="16:42">(<expr pos:start="16:9" pos:end="16:41"><call pos:start="16:9" pos:end="16:37"><name pos:start="16:9" pos:end="16:25"><name pos:start="16:9" pos:end="16:13">avctx</name><operator pos:start="16:14" pos:end="16:15">-&gt;</operator><name pos:start="16:16" pos:end="16:25">get_buffer</name></name><argument_list pos:start="16:26" pos:end="16:37">(<argument pos:start="16:27" pos:end="16:31"><expr pos:start="16:27" pos:end="16:31"><name pos:start="16:27" pos:end="16:31">avctx</name></expr></argument>, <argument pos:start="16:34" pos:end="16:36"><expr pos:start="16:34" pos:end="16:36"><name pos:start="16:34" pos:end="16:36">pic</name></expr></argument>)</argument_list></call> <operator pos:start="16:39" pos:end="16:39">&lt;</operator> <literal type="number" pos:start="16:41" pos:end="16:41">0</literal></expr>)</condition> <block pos:start="16:44" pos:end="40:23">{<block_content pos:start="17:9" pos:end="40:23">
        <expr_stmt pos:start="17:9" pos:end="17:68"><expr pos:start="17:9" pos:end="17:67"><call pos:start="17:9" pos:end="17:67"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:67">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">avctx</name></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:37" pos:end="17:66"><expr pos:start="17:37" pos:end="17:66"><literal type="string" pos:start="17:37" pos:end="17:66">"Could not allocate buffer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="18:9" pos:end="18:31">return <expr pos:start="18:16" pos:end="18:30"><call pos:start="18:16" pos:end="18:30"><name pos:start="18:16" pos:end="18:22">AVERROR</name><argument_list pos:start="18:23" pos:end="18:30">(<argument pos:start="18:24" pos:end="18:29"><expr pos:start="18:24" pos:end="18:29"><name pos:start="18:24" pos:end="18:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>
    <comment type="block" pos:start="19:5" pos:end="19:19">/* Set flags */</comment>
    <expr_stmt pos:start="20:5" pos:end="20:23"><expr pos:start="20:5" pos:end="20:22"><name pos:start="20:5" pos:end="20:18"><name pos:start="20:5" pos:end="20:7">pic</name><operator pos:start="20:8" pos:end="20:9">-&gt;</operator><name pos:start="20:10" pos:end="20:18">key_frame</name></name> <operator pos:start="20:20" pos:end="20:20">=</operator> <literal type="number" pos:start="20:22" pos:end="20:22">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:7">pic</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:18">pict_type</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:38">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
    <comment type="block" pos:start="22:5" pos:end="22:36">/* Version should always be 1 */</comment>
    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:11">version</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:21">AV_RL32</name><argument_list pos:start="23:22" pos:end="23:26">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="24:5" pos:end="25:81"><if pos:start="24:5" pos:end="25:81">if <condition pos:start="24:8" pos:end="24:21">(<expr pos:start="24:9" pos:end="24:20"><name pos:start="24:9" pos:end="24:15">version</name> <operator pos:start="24:17" pos:end="24:18">!=</operator> <literal type="number" pos:start="24:20" pos:end="24:20">1</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:81"><block_content pos:start="25:9" pos:end="25:81">
        <expr_stmt pos:start="25:9" pos:end="25:81"><expr pos:start="25:9" pos:end="25:80"><call pos:start="25:9" pos:end="25:80"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:80">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:36"><expr pos:start="25:23" pos:end="25:36"><name pos:start="25:23" pos:end="25:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="25:39" pos:end="25:70"><expr pos:start="25:39" pos:end="25:70"><literal type="string" pos:start="25:39" pos:end="25:70">"Unsupported VBLE Version: %d\n"</literal></expr></argument>, <argument pos:start="25:73" pos:end="25:79"><expr pos:start="25:73" pos:end="25:79"><name pos:start="25:73" pos:end="25:79">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:55"><expr pos:start="26:5" pos:end="26:54"><call pos:start="26:5" pos:end="26:54"><name pos:start="26:5" pos:end="26:17">init_get_bits</name><argument_list pos:start="26:18" pos:end="26:54">(<argument pos:start="26:19" pos:end="26:21"><expr pos:start="26:19" pos:end="26:21"><operator pos:start="26:19" pos:end="26:19">&amp;</operator><name pos:start="26:20" pos:end="26:21">gb</name></expr></argument>, <argument pos:start="26:24" pos:end="26:30"><expr pos:start="26:24" pos:end="26:30"><name pos:start="26:24" pos:end="26:26">src</name> <operator pos:start="26:28" pos:end="26:28">+</operator> <literal type="number" pos:start="26:30" pos:end="26:30">4</literal></expr></argument>, <argument pos:start="26:33" pos:end="26:53"><expr pos:start="26:33" pos:end="26:53"><operator pos:start="26:33" pos:end="26:33">(</operator><name pos:start="26:34" pos:end="26:44"><name pos:start="26:34" pos:end="26:38">avpkt</name><operator pos:start="26:39" pos:end="26:40">-&gt;</operator><name pos:start="26:41" pos:end="26:44">size</name></name> <operator pos:start="26:46" pos:end="26:46">-</operator> <literal type="number" pos:start="26:48" pos:end="26:48">4</literal><operator pos:start="26:49" pos:end="26:49">)</operator> <operator pos:start="26:51" pos:end="26:51">*</operator> <literal type="number" pos:start="26:53" pos:end="26:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="27:5" pos:end="27:16">/* Unpack */</comment>
    <if_stmt pos:start="28:5" pos:end="40:23"><if pos:start="28:5" pos:end="40:23">if <condition pos:start="28:8" pos:end="28:34">(<expr pos:start="28:9" pos:end="28:33"><call pos:start="28:9" pos:end="28:29"><name pos:start="28:9" pos:end="28:19">vble_unpack</name><argument_list pos:start="28:20" pos:end="28:29">(<argument pos:start="28:21" pos:end="28:23"><expr pos:start="28:21" pos:end="28:23"><name pos:start="28:21" pos:end="28:23">ctx</name></expr></argument>, <argument pos:start="28:26" pos:end="28:28"><expr pos:start="28:26" pos:end="28:28"><operator pos:start="28:26" pos:end="28:26">&amp;</operator><name pos:start="28:27" pos:end="28:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="28:31" pos:end="28:31">&lt;</operator> <literal type="number" pos:start="28:33" pos:end="28:33">0</literal></expr>)</condition> <block pos:start="28:36" pos:end="40:23">{<block_content pos:start="29:9" pos:end="40:23">
        <expr_stmt pos:start="29:9" pos:end="29:54"><expr pos:start="29:9" pos:end="29:53"><call pos:start="29:9" pos:end="29:53"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:53">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:52"><expr pos:start="29:37" pos:end="29:52"><literal type="string" pos:start="29:37" pos:end="29:52">"Invalid Code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="30:5" pos:end="30:66">/* Restore planes. Should be almost identical to Huffyuv's. */</comment>
    <expr_stmt pos:start="31:5" pos:end="31:73"><expr pos:start="31:5" pos:end="31:72"><call pos:start="31:5" pos:end="31:72"><name pos:start="31:5" pos:end="31:22">vble_restore_plane</name><argument_list pos:start="31:23" pos:end="31:72">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">ctx</name></expr></argument>, <argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><operator pos:start="31:29" pos:end="31:29">&amp;</operator><name pos:start="31:30" pos:end="31:31">gb</name></expr></argument>, <argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr></argument>, <argument pos:start="31:37" pos:end="31:42"><expr pos:start="31:37" pos:end="31:42"><name pos:start="31:37" pos:end="31:42">offset</name></expr></argument>, <argument pos:start="31:45" pos:end="31:56"><expr pos:start="31:45" pos:end="31:56"><name pos:start="31:45" pos:end="31:56"><name pos:start="31:45" pos:end="31:49">avctx</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:56">width</name></name></expr></argument>, <argument pos:start="31:59" pos:end="31:71"><expr pos:start="31:59" pos:end="31:71"><name pos:start="31:59" pos:end="31:71"><name pos:start="31:59" pos:end="31:63">avctx</name><operator pos:start="31:64" pos:end="31:65">-&gt;</operator><name pos:start="31:66" pos:end="31:71">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="32:5" pos:end="32:16">/* Chroma */</comment>
    <if_stmt pos:start="33:5" pos:end="40:23"><if pos:start="33:5" pos:end="40:23">if <condition pos:start="33:8" pos:end="33:47">(<expr pos:start="33:9" pos:end="33:46"><operator pos:start="33:9" pos:end="33:9">!</operator><operator pos:start="33:10" pos:end="33:10">(</operator><name pos:start="33:11" pos:end="33:27"><name pos:start="33:11" pos:end="33:13">ctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:20">avctx</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">flags</name></name> <operator pos:start="33:29" pos:end="33:29">&amp;</operator> <name pos:start="33:31" pos:end="33:45">CODEC_FLAG_GRAY</name><operator pos:start="33:46" pos:end="33:46">)</operator></expr>)</condition> <block pos:start="33:49" pos:end="40:23">{<block_content pos:start="34:9" pos:end="40:23">
        <expr_stmt pos:start="34:9" pos:end="34:47"><expr pos:start="34:9" pos:end="34:46"><name pos:start="34:9" pos:end="34:14">offset</name> <operator pos:start="34:16" pos:end="34:17">+=</operator> <name pos:start="34:19" pos:end="34:30"><name pos:start="34:19" pos:end="34:23">avctx</name><operator pos:start="34:24" pos:end="34:25">-&gt;</operator><name pos:start="34:26" pos:end="34:30">width</name></name> <operator pos:start="34:32" pos:end="34:32">*</operator> <name pos:start="34:34" pos:end="34:46"><name pos:start="34:34" pos:end="34:38">avctx</name><operator pos:start="34:39" pos:end="34:40">-&gt;</operator><name pos:start="34:41" pos:end="34:46">height</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:69"><expr pos:start="35:9" pos:end="35:68"><call pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:26">vble_restore_plane</name><argument_list pos:start="35:27" pos:end="35:68">(<argument pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:30">ctx</name></expr></argument>, <argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:35">gb</name></expr></argument>, <argument pos:start="35:38" pos:end="35:38"><expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">1</literal></expr></argument>, <argument pos:start="35:41" pos:end="35:46"><expr pos:start="35:41" pos:end="35:46"><name pos:start="35:41" pos:end="35:46">offset</name></expr></argument>, <argument pos:start="35:49" pos:end="35:56"><expr pos:start="35:49" pos:end="35:56"><name pos:start="35:49" pos:end="35:56">width_uv</name></expr></argument>, <argument pos:start="35:59" pos:end="35:67"><expr pos:start="35:59" pos:end="35:67"><name pos:start="35:59" pos:end="35:67">height_uv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:39"><expr pos:start="36:9" pos:end="36:38"><name pos:start="36:9" pos:end="36:14">offset</name> <operator pos:start="36:16" pos:end="36:17">+=</operator> <name pos:start="36:19" pos:end="36:26">width_uv</name> <operator pos:start="36:28" pos:end="36:28">*</operator> <name pos:start="36:30" pos:end="36:38">height_uv</name></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:69"><expr pos:start="37:9" pos:end="37:68"><call pos:start="37:9" pos:end="37:68"><name pos:start="37:9" pos:end="37:26">vble_restore_plane</name><argument_list pos:start="37:27" pos:end="37:68">(<argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">ctx</name></expr></argument>, <argument pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:35">gb</name></expr></argument>, <argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">2</literal></expr></argument>, <argument pos:start="37:41" pos:end="37:46"><expr pos:start="37:41" pos:end="37:46"><name pos:start="37:41" pos:end="37:46">offset</name></expr></argument>, <argument pos:start="37:49" pos:end="37:56"><expr pos:start="37:49" pos:end="37:56"><name pos:start="37:49" pos:end="37:56">width_uv</name></expr></argument>, <argument pos:start="37:59" pos:end="37:67"><expr pos:start="37:59" pos:end="37:67"><name pos:start="37:59" pos:end="37:67">height_uv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:33"><expr pos:start="38:5" pos:end="38:32"><operator pos:start="38:5" pos:end="38:5">*</operator><name pos:start="38:6" pos:end="38:14">data_size</name> <operator pos:start="38:16" pos:end="38:16">=</operator> <sizeof pos:start="38:18" pos:end="38:32">sizeof<argument_list pos:start="38:24" pos:end="38:32">(<argument pos:start="38:25" pos:end="38:31"><expr pos:start="38:25" pos:end="38:31"><name pos:start="38:25" pos:end="38:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><operator pos:start="39:5" pos:end="39:5">*</operator><operator pos:start="39:6" pos:end="39:6">(</operator><name pos:start="39:7" pos:end="39:13">AVFrame</name> <operator pos:start="39:15" pos:end="39:15">*</operator><operator pos:start="39:16" pos:end="39:16">)</operator><name pos:start="39:17" pos:end="39:20">data</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <operator pos:start="39:24" pos:end="39:24">*</operator><name pos:start="39:25" pos:end="39:27">pic</name></expr>;</expr_stmt>
    <return pos:start="40:5" pos:end="40:23">return <expr pos:start="40:12" pos:end="40:22"><name pos:start="40:12" pos:end="40:22"><name pos:start="40:12" pos:end="40:16">avpkt</name><operator pos:start="40:17" pos:end="40:18">-&gt;</operator><name pos:start="40:19" pos:end="40:22">size</name></name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
