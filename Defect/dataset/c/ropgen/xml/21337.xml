<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21337.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">decode_sequence_header</name><parameter_list pos:start="1:34" pos:end="1:75">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:74"><decl pos:start="1:58" pos:end="1:74"><type pos:start="1:58" pos:end="1:74"><name pos:start="1:58" pos:end="1:70">GetBitContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:74">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="261:1">{<block_content pos:start="5:5" pos:end="260:0">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VC9Context</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">v</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:5">v</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:14">profile</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <call pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:25">get_bits</name><argument_list pos:start="9:26" pos:end="9:32">(<argument pos:start="9:27" pos:end="9:28"><expr pos:start="9:27" pos:end="9:28"><name pos:start="9:27" pos:end="9:28">gb</name></expr></argument>, <argument pos:start="9:31" pos:end="9:31"><expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="16:0"><expr pos:start="11:5" pos:end="11:60"><call pos:start="11:5" pos:end="11:60"><name pos:start="11:5" pos:end="11:10">av_log</name><argument_list pos:start="11:11" pos:end="11:60">(<argument pos:start="11:12" pos:end="11:16"><expr pos:start="11:12" pos:end="11:16"><name pos:start="11:12" pos:end="11:16">avctx</name></expr></argument>, <argument pos:start="11:19" pos:end="11:30"><expr pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="11:33" pos:end="11:47"><expr pos:start="11:33" pos:end="11:47"><literal type="string" pos:start="11:33" pos:end="11:47">"Profile: %i\n"</literal></expr></argument>, <argument pos:start="11:50" pos:end="11:59"><expr pos:start="11:50" pos:end="11:59"><name pos:start="11:50" pos:end="11:59"><name pos:start="11:50" pos:end="11:50">v</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:59">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="15:1" pos:end="15:24">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:24">HAS_ADVANCED_PROFILE</name></expr></cpp:if>

    <if_stmt pos:start="17:5" pos:end="59:5"><if pos:start="17:5" pos:end="37:5">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">v</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">profile</name></name> <operator pos:start="17:20" pos:end="17:20">&gt;</operator> <name pos:start="17:22" pos:end="17:33">PROFILE_MAIN</name></expr>)</condition>

    <block pos:start="19:5" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:9">

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:9">v</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">level</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:34"><name pos:start="21:20" pos:end="21:27">get_bits</name><argument_list pos:start="21:28" pos:end="21:34">(<argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><name pos:start="21:29" pos:end="21:30">gb</name></expr></argument>, <argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">v</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:23">chromaformat</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:41"><name pos:start="23:27" pos:end="23:34">get_bits</name><argument_list pos:start="23:35" pos:end="23:41">(<argument pos:start="23:36" pos:end="23:37"><expr pos:start="23:36" pos:end="23:37"><name pos:start="23:36" pos:end="23:37">gb</name></expr></argument>, <argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:33">(<expr pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:13">v</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:27">chromaformat</name></name> <operator pos:start="25:29" pos:end="25:30">!=</operator> <literal type="number" pos:start="25:32" pos:end="25:32">1</literal></expr>)</condition>

        <block pos:start="27:9" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:22">

            <expr_stmt pos:start="29:13" pos:end="31:59"><expr pos:start="29:13" pos:end="31:58"><call pos:start="29:13" pos:end="31:58"><name pos:start="29:13" pos:end="29:18">av_log</name><argument_list pos:start="29:19" pos:end="31:58">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">avctx</name></expr></argument>, <argument pos:start="29:27" pos:end="29:38"><expr pos:start="29:27" pos:end="29:38"><name pos:start="29:27" pos:end="29:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="31:20" pos:end="31:57"><expr pos:start="31:20" pos:end="31:57"><literal type="string" pos:start="31:20" pos:end="31:57">"Only 4:2:0 chroma format supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if>

    <else pos:start="39:5" pos:end="59:5">else

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

    <block pos:start="43:5" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:9">

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:9">v</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:17">res_sm</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:35"><name pos:start="45:21" pos:end="45:28">get_bits</name><argument_list pos:start="45:29" pos:end="45:35">(<argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><name pos:start="45:30" pos:end="45:31">gb</name></expr></argument>, <argument pos:start="45:34" pos:end="45:34"><expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="45:38" pos:end="45:47">//reserved</comment>

        <if_stmt pos:start="47:9" pos:end="57:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="47:22">(<expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:13">v</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:21">res_sm</name></name></expr>)</condition>

        <block pos:start="49:9" pos:end="57:9">{<block_content pos:start="51:13" pos:end="53:67">

            <expr_stmt pos:start="51:13" pos:end="53:67"><expr pos:start="51:13" pos:end="53:66"><call pos:start="51:13" pos:end="53:66"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="53:66">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">avctx</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="53:20" pos:end="53:54"><expr pos:start="53:20" pos:end="53:54"><literal type="string" pos:start="53:20" pos:end="53:54">"Reserved RES_SM=%i is forbidden\n"</literal></expr></argument>, <argument pos:start="53:57" pos:end="53:65"><expr pos:start="53:57" pos:end="53:65"><name pos:start="53:57" pos:end="53:65"><name pos:start="53:57" pos:end="53:57">v</name><operator pos:start="53:58" pos:end="53:59">-&gt;</operator><name pos:start="53:60" pos:end="53:65">res_sm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="55:13" pos:end="55:24">//return -1;</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="63:5" pos:end="63:23">// (fps-2)/4 (-&gt;30)</comment>

    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:5">v</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:22">frmrtq_postproc</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <call pos:start="65:26" pos:end="65:40"><name pos:start="65:26" pos:end="65:33">get_bits</name><argument_list pos:start="65:34" pos:end="65:40">(<argument pos:start="65:35" pos:end="65:36"><expr pos:start="65:35" pos:end="65:36"><name pos:start="65:35" pos:end="65:36">gb</name></expr></argument>, <argument pos:start="65:39" pos:end="65:39"><expr pos:start="65:39" pos:end="65:39"><literal type="number" pos:start="65:39" pos:end="65:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="65:43" pos:end="65:50">//common</comment>

    <comment type="line" pos:start="67:5" pos:end="67:30">// (bitrate-32kbps)/64kbps</comment>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:5">v</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:22">bitrtq_postproc</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:40"><name pos:start="69:26" pos:end="69:33">get_bits</name><argument_list pos:start="69:34" pos:end="69:40">(<argument pos:start="69:35" pos:end="69:36"><expr pos:start="69:35" pos:end="69:36"><name pos:start="69:35" pos:end="69:36">gb</name></expr></argument>, <argument pos:start="69:39" pos:end="69:39"><expr pos:start="69:39" pos:end="69:39"><literal type="number" pos:start="69:39" pos:end="69:39">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="69:43" pos:end="69:50">//common</comment>

    <expr_stmt pos:start="71:5" pos:end="76:0"><expr pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:5">v</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:8">s</name><operator pos:start="71:9" pos:end="71:9">.</operator><name pos:start="71:10" pos:end="71:20">loop_filter</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:38"><name pos:start="71:24" pos:end="71:31">get_bits</name><argument_list pos:start="71:32" pos:end="71:38">(<argument pos:start="71:33" pos:end="71:34"><expr pos:start="71:33" pos:end="71:34"><name pos:start="71:33" pos:end="71:34">gb</name></expr></argument>, <argument pos:start="71:37" pos:end="71:37"><expr pos:start="71:37" pos:end="71:37"><literal type="number" pos:start="71:37" pos:end="71:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="71:41" pos:end="71:48">//common</comment>



<cpp:if pos:start="75:1" pos:end="75:24">#<cpp:directive pos:start="75:2" pos:end="75:3">if</cpp:directive> <expr pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:24">HAS_ADVANCED_PROFILE</name></expr></cpp:if>

    <if_stmt pos:start="77:5" pos:end="113:5"><if pos:start="77:5" pos:end="113:5">if <condition pos:start="77:8" pos:end="80:0">(<expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:9">v</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:18">profile</name></name> <operator pos:start="77:20" pos:end="77:21">&lt;=</operator> <name pos:start="77:23" pos:end="77:34">PROFILE_MAIN</name></expr>)</condition>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

    <block pos:start="81:5" pos:end="113:5">{<block_content pos:start="83:9" pos:end="111:9">

        <expr_stmt pos:start="83:9" pos:end="83:36"><expr pos:start="83:9" pos:end="83:35"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:9">v</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:17">res_x8</name></name> <operator pos:start="83:19" pos:end="83:19">=</operator> <call pos:start="83:21" pos:end="83:35"><name pos:start="83:21" pos:end="83:28">get_bits</name><argument_list pos:start="83:29" pos:end="83:35">(<argument pos:start="83:30" pos:end="83:31"><expr pos:start="83:30" pos:end="83:31"><name pos:start="83:30" pos:end="83:31">gb</name></expr></argument>, <argument pos:start="83:34" pos:end="83:34"><expr pos:start="83:34" pos:end="83:34"><literal type="number" pos:start="83:34" pos:end="83:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="83:38" pos:end="83:47">//reserved</comment>

        <if_stmt pos:start="85:9" pos:end="95:9"><if pos:start="85:9" pos:end="95:9">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:13">v</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:21">res_x8</name></name></expr>)</condition>

        <block pos:start="87:9" pos:end="95:9">{<block_content pos:start="89:13" pos:end="91:59">

            <expr_stmt pos:start="89:13" pos:end="91:59"><expr pos:start="89:13" pos:end="91:58"><call pos:start="89:13" pos:end="91:58"><name pos:start="89:13" pos:end="89:18">av_log</name><argument_list pos:start="89:19" pos:end="91:58">(<argument pos:start="89:20" pos:end="89:24"><expr pos:start="89:20" pos:end="89:24"><name pos:start="89:20" pos:end="89:24">avctx</name></expr></argument>, <argument pos:start="89:27" pos:end="89:38"><expr pos:start="89:27" pos:end="89:38"><name pos:start="89:27" pos:end="89:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="91:20" pos:end="91:57"><expr pos:start="91:20" pos:end="91:57"><literal type="string" pos:start="91:20" pos:end="91:57">"1 for reserved RES_X8 is forbidden\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="93:13" pos:end="93:24">//return -1;</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:38"><expr pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:9">v</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:19">multires</name></name> <operator pos:start="97:21" pos:end="97:21">=</operator> <call pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:30">get_bits</name><argument_list pos:start="97:31" pos:end="97:37">(<argument pos:start="97:32" pos:end="97:33"><expr pos:start="97:32" pos:end="97:33"><name pos:start="97:32" pos:end="97:33">gb</name></expr></argument>, <argument pos:start="97:36" pos:end="97:36"><expr pos:start="97:36" pos:end="97:36"><literal type="number" pos:start="97:36" pos:end="97:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:40"><expr pos:start="99:9" pos:end="99:39"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:9">v</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:21">res_fasttx</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <call pos:start="99:25" pos:end="99:39"><name pos:start="99:25" pos:end="99:32">get_bits</name><argument_list pos:start="99:33" pos:end="99:39">(<argument pos:start="99:34" pos:end="99:35"><expr pos:start="99:34" pos:end="99:35"><name pos:start="99:34" pos:end="99:35">gb</name></expr></argument>, <argument pos:start="99:38" pos:end="99:38"><expr pos:start="99:38" pos:end="99:38"><literal type="number" pos:start="99:38" pos:end="99:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:27">(<expr pos:start="101:13" pos:end="101:26"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:26"><name pos:start="101:14" pos:end="101:14">v</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:26">res_fasttx</name></name></expr>)</condition>

        <block pos:start="103:9" pos:end="111:9">{<block_content pos:start="105:13" pos:end="107:63">

            <expr_stmt pos:start="105:13" pos:end="107:63"><expr pos:start="105:13" pos:end="107:62"><call pos:start="105:13" pos:end="107:62"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="107:62">(<argument pos:start="105:20" pos:end="105:24"><expr pos:start="105:20" pos:end="105:24"><name pos:start="105:20" pos:end="105:24">avctx</name></expr></argument>, <argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:61"><expr pos:start="107:20" pos:end="107:61"><literal type="string" pos:start="107:20" pos:end="107:61">"0 for reserved RES_FASTTX is forbidden\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="109:13" pos:end="109:24">//return -1;</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:35"><expr pos:start="117:5" pos:end="117:34"><name pos:start="117:5" pos:end="117:15"><name pos:start="117:5" pos:end="117:5">v</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:15">fastuvmc</name></name> <operator pos:start="117:17" pos:end="117:17">=</operator>  <call pos:start="117:20" pos:end="117:34"><name pos:start="117:20" pos:end="117:27">get_bits</name><argument_list pos:start="117:28" pos:end="117:34">(<argument pos:start="117:29" pos:end="117:30"><expr pos:start="117:29" pos:end="117:30"><name pos:start="117:29" pos:end="117:30">gb</name></expr></argument>, <argument pos:start="117:33" pos:end="117:33"><expr pos:start="117:33" pos:end="117:33"><literal type="number" pos:start="117:33" pos:end="117:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="117:37" pos:end="117:44">//common</comment>

    <if_stmt pos:start="119:5" pos:end="129:5"><if pos:start="119:5" pos:end="129:5">if <condition pos:start="119:8" pos:end="119:36">(<expr pos:start="119:9" pos:end="119:35"><operator pos:start="119:9" pos:end="119:9">!</operator><name pos:start="119:10" pos:end="119:19"><name pos:start="119:10" pos:end="119:10">v</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:19">profile</name></name> <operator pos:start="119:21" pos:end="119:22">&amp;&amp;</operator> <operator pos:start="119:24" pos:end="119:24">!</operator><name pos:start="119:25" pos:end="119:35"><name pos:start="119:25" pos:end="119:25">v</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:35">fastuvmc</name></name></expr>)</condition>

    <block pos:start="121:5" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:18">

        <expr_stmt pos:start="123:9" pos:end="125:59"><expr pos:start="123:9" pos:end="125:58"><call pos:start="123:9" pos:end="125:58"><name pos:start="123:9" pos:end="123:14">av_log</name><argument_list pos:start="123:15" pos:end="125:58">(<argument pos:start="123:16" pos:end="123:20"><expr pos:start="123:16" pos:end="123:20"><name pos:start="123:16" pos:end="123:20">avctx</name></expr></argument>, <argument pos:start="123:23" pos:end="123:34"><expr pos:start="123:23" pos:end="123:34"><name pos:start="123:23" pos:end="123:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="125:16" pos:end="125:57"><expr pos:start="125:16" pos:end="125:57"><literal type="string" pos:start="125:16" pos:end="125:57">"FASTUVMC unavailable in Simple Profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="127:9" pos:end="127:18">return <expr pos:start="127:16" pos:end="127:17"><operator pos:start="127:16" pos:end="127:16">-</operator><literal type="number" pos:start="127:17" pos:end="127:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:38"><expr pos:start="131:5" pos:end="131:37"><name pos:start="131:5" pos:end="131:18"><name pos:start="131:5" pos:end="131:5">v</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:18">extended_mv</name></name> <operator pos:start="131:20" pos:end="131:20">=</operator>  <call pos:start="131:23" pos:end="131:37"><name pos:start="131:23" pos:end="131:30">get_bits</name><argument_list pos:start="131:31" pos:end="131:37">(<argument pos:start="131:32" pos:end="131:33"><expr pos:start="131:32" pos:end="131:33"><name pos:start="131:32" pos:end="131:33">gb</name></expr></argument>, <argument pos:start="131:36" pos:end="131:36"><expr pos:start="131:36" pos:end="131:36"><literal type="number" pos:start="131:36" pos:end="131:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="131:40" pos:end="131:47">//common</comment>

    <if_stmt pos:start="133:5" pos:end="143:5"><if pos:start="133:5" pos:end="143:5">if <condition pos:start="133:8" pos:end="133:38">(<expr pos:start="133:9" pos:end="133:37"><operator pos:start="133:9" pos:end="133:9">!</operator><name pos:start="133:10" pos:end="133:19"><name pos:start="133:10" pos:end="133:10">v</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:19">profile</name></name> <operator pos:start="133:21" pos:end="133:22">&amp;&amp;</operator> <name pos:start="133:24" pos:end="133:37"><name pos:start="133:24" pos:end="133:24">v</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:37">extended_mv</name></name></expr>)</condition>

    <block pos:start="135:5" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:18">

        <expr_stmt pos:start="137:9" pos:end="139:63"><expr pos:start="137:9" pos:end="139:62"><call pos:start="137:9" pos:end="139:62"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="139:62">(<argument pos:start="137:16" pos:end="137:20"><expr pos:start="137:16" pos:end="137:20"><name pos:start="137:16" pos:end="137:20">avctx</name></expr></argument>, <argument pos:start="137:23" pos:end="137:34"><expr pos:start="137:23" pos:end="137:34"><name pos:start="137:23" pos:end="137:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="139:16" pos:end="139:61"><expr pos:start="139:16" pos:end="139:61"><literal type="string" pos:start="139:16" pos:end="139:61">"Extended MVs unavailable in Simple Profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="141:18">return <expr pos:start="141:16" pos:end="141:17"><operator pos:start="141:16" pos:end="141:16">-</operator><literal type="number" pos:start="141:17" pos:end="141:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:33"><expr pos:start="145:5" pos:end="145:32"><name pos:start="145:5" pos:end="145:13"><name pos:start="145:5" pos:end="145:5">v</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:13">dquant</name></name> <operator pos:start="145:15" pos:end="145:15">=</operator>  <call pos:start="145:18" pos:end="145:32"><name pos:start="145:18" pos:end="145:25">get_bits</name><argument_list pos:start="145:26" pos:end="145:32">(<argument pos:start="145:27" pos:end="145:28"><expr pos:start="145:27" pos:end="145:28"><name pos:start="145:27" pos:end="145:28">gb</name></expr></argument>, <argument pos:start="145:31" pos:end="145:31"><expr pos:start="145:31" pos:end="145:31"><literal type="number" pos:start="145:31" pos:end="145:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="145:35" pos:end="145:42">//common</comment>

    <expr_stmt pos:start="147:5" pos:end="152:0"><expr pos:start="147:5" pos:end="147:37"><name pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:5">v</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:18">vstransform</name></name> <operator pos:start="147:20" pos:end="147:20">=</operator>  <call pos:start="147:23" pos:end="147:37"><name pos:start="147:23" pos:end="147:30">get_bits</name><argument_list pos:start="147:31" pos:end="147:37">(<argument pos:start="147:32" pos:end="147:33"><expr pos:start="147:32" pos:end="147:33"><name pos:start="147:32" pos:end="147:33">gb</name></expr></argument>, <argument pos:start="147:36" pos:end="147:36"><expr pos:start="147:36" pos:end="147:36"><literal type="number" pos:start="147:36" pos:end="147:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="147:40" pos:end="147:47">//common</comment>

    

<cpp:if pos:start="151:1" pos:end="151:24">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:24"><name pos:start="151:5" pos:end="151:24">HAS_ADVANCED_PROFILE</name></expr></cpp:if>

    <if_stmt pos:start="153:5" pos:end="173:5"><if pos:start="153:5" pos:end="173:5">if <condition pos:start="153:8" pos:end="156:0">(<expr pos:start="153:9" pos:end="153:34"><name pos:start="153:9" pos:end="153:18"><name pos:start="153:9" pos:end="153:9">v</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:18">profile</name></name> <operator pos:start="153:20" pos:end="153:21">&lt;=</operator> <name pos:start="153:23" pos:end="153:34">PROFILE_MAIN</name></expr>)</condition>

<cpp:endif pos:start="155:1" pos:end="155:6">#<cpp:directive pos:start="155:2" pos:end="155:6">endif</cpp:directive></cpp:endif>

    <block pos:start="157:5" pos:end="173:5">{<block_content pos:start="159:9" pos:end="171:9">

        <expr_stmt pos:start="159:9" pos:end="159:42"><expr pos:start="159:9" pos:end="159:41"><name pos:start="159:9" pos:end="159:23"><name pos:start="159:9" pos:end="159:9">v</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:23">res_transtab</name></name> <operator pos:start="159:25" pos:end="159:25">=</operator> <call pos:start="159:27" pos:end="159:41"><name pos:start="159:27" pos:end="159:34">get_bits</name><argument_list pos:start="159:35" pos:end="159:41">(<argument pos:start="159:36" pos:end="159:37"><expr pos:start="159:36" pos:end="159:37"><name pos:start="159:36" pos:end="159:37">gb</name></expr></argument>, <argument pos:start="159:40" pos:end="159:40"><expr pos:start="159:40" pos:end="159:40"><literal type="number" pos:start="159:40" pos:end="159:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="171:9"><if pos:start="161:9" pos:end="171:9">if <condition pos:start="161:12" pos:end="161:28">(<expr pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:13">v</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:27">res_transtab</name></name></expr>)</condition>

        <block pos:start="163:9" pos:end="171:9">{<block_content pos:start="165:13" pos:end="169:22">

            <expr_stmt pos:start="165:13" pos:end="167:65"><expr pos:start="165:13" pos:end="167:64"><call pos:start="165:13" pos:end="167:64"><name pos:start="165:13" pos:end="165:18">av_log</name><argument_list pos:start="165:19" pos:end="167:64">(<argument pos:start="165:20" pos:end="165:24"><expr pos:start="165:20" pos:end="165:24"><name pos:start="165:20" pos:end="165:24">avctx</name></expr></argument>, <argument pos:start="165:27" pos:end="165:38"><expr pos:start="165:27" pos:end="165:38"><name pos:start="165:27" pos:end="165:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="167:20" pos:end="167:63"><expr pos:start="167:20" pos:end="167:63"><literal type="string" pos:start="167:20" pos:end="167:63">"1 for reserved RES_TRANSTAB is forbidden\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="169:13" pos:end="169:22">return <expr pos:start="169:20" pos:end="169:21"><operator pos:start="169:20" pos:end="169:20">-</operator><literal type="number" pos:start="169:21" pos:end="169:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="182:0"><expr pos:start="177:5" pos:end="177:32"><name pos:start="177:5" pos:end="177:14"><name pos:start="177:5" pos:end="177:5">v</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:14">overlap</name></name> <operator pos:start="177:16" pos:end="177:16">=</operator> <call pos:start="177:18" pos:end="177:32"><name pos:start="177:18" pos:end="177:25">get_bits</name><argument_list pos:start="177:26" pos:end="177:32">(<argument pos:start="177:27" pos:end="177:28"><expr pos:start="177:27" pos:end="177:28"><name pos:start="177:27" pos:end="177:28">gb</name></expr></argument>, <argument pos:start="177:31" pos:end="177:31"><expr pos:start="177:31" pos:end="177:31"><literal type="number" pos:start="177:31" pos:end="177:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="177:35" pos:end="177:42">//common</comment>



<cpp:if pos:start="181:1" pos:end="181:24">#<cpp:directive pos:start="181:2" pos:end="181:3">if</cpp:directive> <expr pos:start="181:5" pos:end="181:24"><name pos:start="181:5" pos:end="181:24">HAS_ADVANCED_PROFILE</name></expr></cpp:if>

    <if_stmt pos:start="183:5" pos:end="193:5"><if pos:start="183:5" pos:end="193:5">if <condition pos:start="183:8" pos:end="186:0">(<expr pos:start="183:9" pos:end="183:34"><name pos:start="183:9" pos:end="183:18"><name pos:start="183:9" pos:end="183:9">v</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:18">profile</name></name> <operator pos:start="183:20" pos:end="183:21">&lt;=</operator> <name pos:start="183:23" pos:end="183:34">PROFILE_MAIN</name></expr>)</condition>

<cpp:endif pos:start="185:1" pos:end="185:6">#<cpp:directive pos:start="185:2" pos:end="185:6">endif</cpp:directive></cpp:endif>

    <block pos:start="187:5" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:38">

        <expr_stmt pos:start="189:9" pos:end="189:45"><expr pos:start="189:9" pos:end="189:44"><name pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:9">v</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:12">s</name><operator pos:start="189:13" pos:end="189:13">.</operator><name pos:start="189:14" pos:end="189:26">resync_marker</name></name> <operator pos:start="189:28" pos:end="189:28">=</operator> <call pos:start="189:30" pos:end="189:44"><name pos:start="189:30" pos:end="189:37">get_bits</name><argument_list pos:start="189:38" pos:end="189:44">(<argument pos:start="189:39" pos:end="189:40"><expr pos:start="189:39" pos:end="189:40"><name pos:start="189:39" pos:end="189:40">gb</name></expr></argument>, <argument pos:start="189:43" pos:end="189:43"><expr pos:start="189:43" pos:end="189:43"><literal type="number" pos:start="189:43" pos:end="189:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:38"><expr pos:start="191:9" pos:end="191:37"><name pos:start="191:9" pos:end="191:19"><name pos:start="191:9" pos:end="191:9">v</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:19">rangered</name></name> <operator pos:start="191:21" pos:end="191:21">=</operator> <call pos:start="191:23" pos:end="191:37"><name pos:start="191:23" pos:end="191:30">get_bits</name><argument_list pos:start="191:31" pos:end="191:37">(<argument pos:start="191:32" pos:end="191:33"><expr pos:start="191:32" pos:end="191:33"><name pos:start="191:32" pos:end="191:33">gb</name></expr></argument>, <argument pos:start="191:36" pos:end="191:36"><expr pos:start="191:36" pos:end="191:36"><literal type="number" pos:start="191:36" pos:end="191:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:62"><expr pos:start="197:5" pos:end="197:61"><name pos:start="197:5" pos:end="197:21"><name pos:start="197:5" pos:end="197:5">v</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:8">s</name><operator pos:start="197:9" pos:end="197:9">.</operator><name pos:start="197:10" pos:end="197:21">max_b_frames</name></name> <operator pos:start="197:23" pos:end="197:23">=</operator> <name pos:start="197:25" pos:end="197:43"><name pos:start="197:25" pos:end="197:29">avctx</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:43">max_b_frames</name></name> <operator pos:start="197:45" pos:end="197:45">=</operator> <call pos:start="197:47" pos:end="197:61"><name pos:start="197:47" pos:end="197:54">get_bits</name><argument_list pos:start="197:55" pos:end="197:61">(<argument pos:start="197:56" pos:end="197:57"><expr pos:start="197:56" pos:end="197:57"><name pos:start="197:56" pos:end="197:57">gb</name></expr></argument>, <argument pos:start="197:60" pos:end="197:60"><expr pos:start="197:60" pos:end="197:60"><literal type="number" pos:start="197:60" pos:end="197:60">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="197:64" pos:end="197:71">//common</comment>

    <expr_stmt pos:start="199:5" pos:end="204:0"><expr pos:start="199:5" pos:end="199:39"><name pos:start="199:5" pos:end="199:21"><name pos:start="199:5" pos:end="199:5">v</name><operator pos:start="199:6" pos:end="199:7">-&gt;</operator><name pos:start="199:8" pos:end="199:21">quantizer_mode</name></name> <operator pos:start="199:23" pos:end="199:23">=</operator> <call pos:start="199:25" pos:end="199:39"><name pos:start="199:25" pos:end="199:32">get_bits</name><argument_list pos:start="199:33" pos:end="199:39">(<argument pos:start="199:34" pos:end="199:35"><expr pos:start="199:34" pos:end="199:35"><name pos:start="199:34" pos:end="199:35">gb</name></expr></argument>, <argument pos:start="199:38" pos:end="199:38"><expr pos:start="199:38" pos:end="199:38"><literal type="number" pos:start="199:38" pos:end="199:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="199:42" pos:end="199:49">//common</comment>



<cpp:if pos:start="203:1" pos:end="203:24">#<cpp:directive pos:start="203:2" pos:end="203:3">if</cpp:directive> <expr pos:start="203:5" pos:end="203:24"><name pos:start="203:5" pos:end="203:24">HAS_ADVANCED_PROFILE</name></expr></cpp:if>

    <if_stmt pos:start="205:5" pos:end="260:0"><if pos:start="205:5" pos:end="256:0">if <condition pos:start="205:8" pos:end="208:0">(<expr pos:start="205:9" pos:end="205:34"><name pos:start="205:9" pos:end="205:18"><name pos:start="205:9" pos:end="205:9">v</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:18">profile</name></name> <operator pos:start="205:20" pos:end="205:21">&lt;=</operator> <name pos:start="205:23" pos:end="205:34">PROFILE_MAIN</name></expr>)</condition>

<cpp:endif pos:start="207:1" pos:end="207:6">#<cpp:directive pos:start="207:2" pos:end="207:6">endif</cpp:directive></cpp:endif>

    <block pos:start="209:5" pos:end="256:0">{<block_content pos:start="211:9" pos:end="252:0">

        <expr_stmt pos:start="211:9" pos:end="211:41"><expr pos:start="211:9" pos:end="211:40"><name pos:start="211:9" pos:end="211:22"><name pos:start="211:9" pos:end="211:9">v</name><operator pos:start="211:10" pos:end="211:11">-&gt;</operator><name pos:start="211:12" pos:end="211:22">finterpflag</name></name> <operator pos:start="211:24" pos:end="211:24">=</operator> <call pos:start="211:26" pos:end="211:40"><name pos:start="211:26" pos:end="211:33">get_bits</name><argument_list pos:start="211:34" pos:end="211:40">(<argument pos:start="211:35" pos:end="211:36"><expr pos:start="211:35" pos:end="211:36"><name pos:start="211:35" pos:end="211:36">gb</name></expr></argument>, <argument pos:start="211:39" pos:end="211:39"><expr pos:start="211:39" pos:end="211:39"><literal type="number" pos:start="211:39" pos:end="211:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="211:43" pos:end="211:50">//common</comment>

        <expr_stmt pos:start="213:9" pos:end="213:42"><expr pos:start="213:9" pos:end="213:41"><name pos:start="213:9" pos:end="213:23"><name pos:start="213:9" pos:end="213:9">v</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:23">res_rtm_flag</name></name> <operator pos:start="213:25" pos:end="213:25">=</operator> <call pos:start="213:27" pos:end="213:41"><name pos:start="213:27" pos:end="213:34">get_bits</name><argument_list pos:start="213:35" pos:end="213:41">(<argument pos:start="213:36" pos:end="213:37"><expr pos:start="213:36" pos:end="213:37"><name pos:start="213:36" pos:end="213:37">gb</name></expr></argument>, <argument pos:start="213:40" pos:end="213:40"><expr pos:start="213:40" pos:end="213:40"><literal type="number" pos:start="213:40" pos:end="213:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="213:44" pos:end="213:53">//reserved</comment>

        <if_stmt pos:start="215:9" pos:end="228:0"><if pos:start="215:9" pos:end="228:0">if <condition pos:start="215:12" pos:end="215:29">(<expr pos:start="215:13" pos:end="215:28"><operator pos:start="215:13" pos:end="215:13">!</operator><name pos:start="215:14" pos:end="215:28"><name pos:start="215:14" pos:end="215:14">v</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:28">res_rtm_flag</name></name></expr>)</condition>

        <block pos:start="217:9" pos:end="228:0">{<block_content pos:start="219:13" pos:end="221:65">

            <expr_stmt pos:start="219:13" pos:end="221:65"><expr pos:start="219:13" pos:end="221:64"><call pos:start="219:13" pos:end="221:64"><name pos:start="219:13" pos:end="219:18">av_log</name><argument_list pos:start="219:19" pos:end="221:64">(<argument pos:start="219:20" pos:end="219:24"><expr pos:start="219:20" pos:end="219:24"><name pos:start="219:20" pos:end="219:24">avctx</name></expr></argument>, <argument pos:start="219:27" pos:end="219:38"><expr pos:start="219:27" pos:end="219:38"><name pos:start="219:27" pos:end="219:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="221:20" pos:end="221:63"><expr pos:start="221:20" pos:end="221:63"><literal type="string" pos:start="221:20" pos:end="221:63">"0 for reserved RES_RTM_FLAG is forbidden\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="223:13" pos:end="223:24">//return -1;</comment>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="227:1" pos:end="227:9">#<cpp:directive pos:start="227:2" pos:end="227:3">if</cpp:directive> <expr pos:start="227:5" pos:end="227:9"><name pos:start="227:5" pos:end="227:9">TRACE</name></expr></cpp:if>

        <expr_stmt pos:start="229:9" pos:end="247:17"><expr pos:start="229:9" pos:end="247:16"><call pos:start="229:9" pos:end="247:16"><name pos:start="229:9" pos:end="229:14">av_log</name><argument_list pos:start="229:15" pos:end="247:16">(<argument pos:start="229:16" pos:end="229:20"><expr pos:start="229:16" pos:end="229:20"><name pos:start="229:16" pos:end="229:20">avctx</name></expr></argument>, <argument pos:start="229:23" pos:end="229:33"><expr pos:start="229:23" pos:end="229:33"><name pos:start="229:23" pos:end="229:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="231:16" pos:end="237:64"><expr pos:start="231:16" pos:end="237:64"><literal type="string" pos:start="231:16" pos:end="231:70">"Profile %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\n"</literal>

               <literal type="string" pos:start="233:16" pos:end="233:74">"LoopFilter=%i, MultiRes=%i, FastUVMV=%i, Extended MV=%i\n"</literal>

               <literal type="string" pos:start="235:16" pos:end="235:73">"Rangered=%i, VSTransform=%i, Overlap=%i, SyncMarker=%i\n"</literal>

               <literal type="string" pos:start="237:16" pos:end="237:64">"DQuant=%i, Quantizer mode=%i, Max B frames=%i\n"</literal></expr></argument>,

               <argument pos:start="239:16" pos:end="239:25"><expr pos:start="239:16" pos:end="239:25"><name pos:start="239:16" pos:end="239:25"><name pos:start="239:16" pos:end="239:16">v</name><operator pos:start="239:17" pos:end="239:18">-&gt;</operator><name pos:start="239:19" pos:end="239:25">profile</name></name></expr></argument>, <argument pos:start="239:28" pos:end="239:45"><expr pos:start="239:28" pos:end="239:45"><name pos:start="239:28" pos:end="239:45"><name pos:start="239:28" pos:end="239:28">v</name><operator pos:start="239:29" pos:end="239:30">-&gt;</operator><name pos:start="239:31" pos:end="239:45">frmrtq_postproc</name></name></expr></argument>, <argument pos:start="239:48" pos:end="239:65"><expr pos:start="239:48" pos:end="239:65"><name pos:start="239:48" pos:end="239:65"><name pos:start="239:48" pos:end="239:48">v</name><operator pos:start="239:49" pos:end="239:50">-&gt;</operator><name pos:start="239:51" pos:end="239:65">bitrtq_postproc</name></name></expr></argument>,

               <argument pos:start="241:16" pos:end="241:31"><expr pos:start="241:16" pos:end="241:31"><name pos:start="241:16" pos:end="241:31"><name pos:start="241:16" pos:end="241:16">v</name><operator pos:start="241:17" pos:end="241:18">-&gt;</operator><name pos:start="241:19" pos:end="241:19">s</name><operator pos:start="241:20" pos:end="241:20">.</operator><name pos:start="241:21" pos:end="241:31">loop_filter</name></name></expr></argument>, <argument pos:start="241:34" pos:end="241:44"><expr pos:start="241:34" pos:end="241:44"><name pos:start="241:34" pos:end="241:44"><name pos:start="241:34" pos:end="241:34">v</name><operator pos:start="241:35" pos:end="241:36">-&gt;</operator><name pos:start="241:37" pos:end="241:44">multires</name></name></expr></argument>, <argument pos:start="241:47" pos:end="241:57"><expr pos:start="241:47" pos:end="241:57"><name pos:start="241:47" pos:end="241:57"><name pos:start="241:47" pos:end="241:47">v</name><operator pos:start="241:48" pos:end="241:49">-&gt;</operator><name pos:start="241:50" pos:end="241:57">fastuvmc</name></name></expr></argument>, <argument pos:start="241:60" pos:end="241:73"><expr pos:start="241:60" pos:end="241:73"><name pos:start="241:60" pos:end="241:73"><name pos:start="241:60" pos:end="241:60">v</name><operator pos:start="241:61" pos:end="241:62">-&gt;</operator><name pos:start="241:63" pos:end="241:73">extended_mv</name></name></expr></argument>,

               <argument pos:start="243:16" pos:end="243:26"><expr pos:start="243:16" pos:end="243:26"><name pos:start="243:16" pos:end="243:26"><name pos:start="243:16" pos:end="243:16">v</name><operator pos:start="243:17" pos:end="243:18">-&gt;</operator><name pos:start="243:19" pos:end="243:26">rangered</name></name></expr></argument>, <argument pos:start="243:29" pos:end="243:42"><expr pos:start="243:29" pos:end="243:42"><name pos:start="243:29" pos:end="243:42"><name pos:start="243:29" pos:end="243:29">v</name><operator pos:start="243:30" pos:end="243:31">-&gt;</operator><name pos:start="243:32" pos:end="243:42">vstransform</name></name></expr></argument>, <argument pos:start="243:45" pos:end="243:54"><expr pos:start="243:45" pos:end="243:54"><name pos:start="243:45" pos:end="243:54"><name pos:start="243:45" pos:end="243:45">v</name><operator pos:start="243:46" pos:end="243:47">-&gt;</operator><name pos:start="243:48" pos:end="243:54">overlap</name></name></expr></argument>, <argument pos:start="243:57" pos:end="243:74"><expr pos:start="243:57" pos:end="243:74"><name pos:start="243:57" pos:end="243:74"><name pos:start="243:57" pos:end="243:57">v</name><operator pos:start="243:58" pos:end="243:59">-&gt;</operator><name pos:start="243:60" pos:end="243:60">s</name><operator pos:start="243:61" pos:end="243:61">.</operator><name pos:start="243:62" pos:end="243:74">resync_marker</name></name></expr></argument>,

               <argument pos:start="245:16" pos:end="245:24"><expr pos:start="245:16" pos:end="245:24"><name pos:start="245:16" pos:end="245:24"><name pos:start="245:16" pos:end="245:16">v</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:24">dquant</name></name></expr></argument>, <argument pos:start="245:27" pos:end="245:43"><expr pos:start="245:27" pos:end="245:43"><name pos:start="245:27" pos:end="245:43"><name pos:start="245:27" pos:end="245:27">v</name><operator pos:start="245:28" pos:end="245:29">-&gt;</operator><name pos:start="245:30" pos:end="245:43">quantizer_mode</name></name></expr></argument>, <argument pos:start="245:46" pos:end="245:64"><expr pos:start="245:46" pos:end="245:64"><name pos:start="245:46" pos:end="245:64"><name pos:start="245:46" pos:end="245:50">avctx</name><operator pos:start="245:51" pos:end="245:52">-&gt;</operator><name pos:start="245:53" pos:end="245:64">max_b_frames</name></name></expr></argument>

               )</argument_list></call></expr>;</expr_stmt>

        <return pos:start="249:9" pos:end="252:0">return <expr pos:start="249:16" pos:end="249:16"><literal type="number" pos:start="249:16" pos:end="249:16">0</literal></expr>;</return>

<cpp:endif pos:start="251:1" pos:end="251:6">#<cpp:directive pos:start="251:2" pos:end="251:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if>

<cpp:if pos:start="255:1" pos:end="255:24">#<cpp:directive pos:start="255:2" pos:end="255:3">if</cpp:directive> <expr pos:start="255:5" pos:end="255:24"><name pos:start="255:5" pos:end="255:24">HAS_ADVANCED_PROFILE</name></expr></cpp:if>

    <else pos:start="257:5" pos:end="260:0">else<block type="pseudo" pos:start="257:10" pos:end="260:0"><block_content pos:start="257:10" pos:end="260:0"> <return pos:start="257:10" pos:end="260:0">return <expr pos:start="257:17" pos:end="257:58"><call pos:start="257:17" pos:end="257:58"><name pos:start="257:17" pos:end="257:47">decode_advanced_sequence_header</name><argument_list pos:start="257:48" pos:end="257:58">(<argument pos:start="257:49" pos:end="257:53"><expr pos:start="257:49" pos:end="257:53"><name pos:start="257:49" pos:end="257:53">avctx</name></expr></argument>, <argument pos:start="257:56" pos:end="257:57"><expr pos:start="257:56" pos:end="257:57"><name pos:start="257:56" pos:end="257:57">gb</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

<cpp:endif pos:start="259:1" pos:end="259:6">#<cpp:directive pos:start="259:2" pos:end="259:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
