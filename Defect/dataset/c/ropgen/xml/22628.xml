<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22628.c" pos:tabs="8"><function pos:start="1:1" pos:end="457:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:42">filter_mb_dir</name><parameter_list pos:start="1:43" pos:end="1:281">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:54">H264Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:67"><decl pos:start="1:60" pos:end="1:67"><type pos:start="1:60" pos:end="1:67"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:67">mb_x</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:77"><decl pos:start="1:70" pos:end="1:77"><type pos:start="1:70" pos:end="1:77"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:77">mb_y</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:93"><decl pos:start="1:80" pos:end="1:93"><type pos:start="1:80" pos:end="1:93"><name pos:start="1:80" pos:end="1:86">uint8_t</name> <modifier pos:start="1:88" pos:end="1:88">*</modifier></type><name pos:start="1:89" pos:end="1:93">img_y</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:110"><decl pos:start="1:96" pos:end="1:110"><type pos:start="1:96" pos:end="1:110"><name pos:start="1:96" pos:end="1:102">uint8_t</name> <modifier pos:start="1:104" pos:end="1:104">*</modifier></type><name pos:start="1:105" pos:end="1:110">img_cb</name></decl></parameter>, <parameter pos:start="1:113" pos:end="1:127"><decl pos:start="1:113" pos:end="1:127"><type pos:start="1:113" pos:end="1:127"><name pos:start="1:113" pos:end="1:119">uint8_t</name> <modifier pos:start="1:121" pos:end="1:121">*</modifier></type><name pos:start="1:122" pos:end="1:127">img_cr</name></decl></parameter>, <parameter pos:start="1:130" pos:end="1:150"><decl pos:start="1:130" pos:end="1:150"><type pos:start="1:130" pos:end="1:150"><name pos:start="1:130" pos:end="1:137">unsigned</name> <name pos:start="1:139" pos:end="1:141">int</name></type> <name pos:start="1:143" pos:end="1:150">linesize</name></decl></parameter>, <parameter pos:start="1:153" pos:end="1:175"><decl pos:start="1:153" pos:end="1:175"><type pos:start="1:153" pos:end="1:175"><name pos:start="1:153" pos:end="1:160">unsigned</name> <name pos:start="1:162" pos:end="1:164">int</name></type> <name pos:start="1:166" pos:end="1:175">uvlinesize</name></decl></parameter>, <parameter pos:start="1:178" pos:end="1:186"><decl pos:start="1:178" pos:end="1:186"><type pos:start="1:178" pos:end="1:186"><name pos:start="1:178" pos:end="1:180">int</name></type> <name pos:start="1:182" pos:end="1:186">mb_xy</name></decl></parameter>, <parameter pos:start="1:189" pos:end="1:199"><decl pos:start="1:189" pos:end="1:199"><type pos:start="1:189" pos:end="1:199"><name pos:start="1:189" pos:end="1:191">int</name></type> <name pos:start="1:193" pos:end="1:199">mb_type</name></decl></parameter>, <parameter pos:start="1:202" pos:end="1:214"><decl pos:start="1:202" pos:end="1:214"><type pos:start="1:202" pos:end="1:214"><name pos:start="1:202" pos:end="1:204">int</name></type> <name pos:start="1:206" pos:end="1:214">mvy_limit</name></decl></parameter>, <parameter pos:start="1:217" pos:end="1:244"><decl pos:start="1:217" pos:end="1:244"><type pos:start="1:217" pos:end="1:244"><name pos:start="1:217" pos:end="1:219">int</name></type> <name pos:start="1:221" pos:end="1:244">first_vertical_edge_done</name></decl></parameter>, <parameter pos:start="1:247" pos:end="1:256"><decl pos:start="1:247" pos:end="1:256"><type pos:start="1:247" pos:end="1:256"><name pos:start="1:247" pos:end="1:249">int</name></type> <name pos:start="1:251" pos:end="1:256">chroma</name></decl></parameter>, <parameter pos:start="1:259" pos:end="1:271"><decl pos:start="1:259" pos:end="1:271"><type pos:start="1:259" pos:end="1:271"><name pos:start="1:259" pos:end="1:261">int</name></type> <name pos:start="1:263" pos:end="1:271">chroma444</name></decl></parameter>, <parameter pos:start="1:274" pos:end="1:280"><decl pos:start="1:274" pos:end="1:280"><type pos:start="1:274" pos:end="1:280"><name pos:start="1:274" pos:end="1:276">int</name></type> <name pos:start="1:278" pos:end="1:280">dir</name></decl></parameter>)</parameter_list> <block pos:start="1:283" pos:end="457:1">{<block_content pos:start="3:5" pos:end="455:5">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">edge</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:21">chroma_qp_avg</name><index pos:start="7:22" pos:end="7:24">[<expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:20">mbm_xy</name> <init pos:start="9:22" pos:end="9:57">= <expr pos:start="9:24" pos:end="9:57"><ternary pos:start="9:24" pos:end="9:57"><condition pos:start="9:24" pos:end="9:33"><expr pos:start="9:24" pos:end="9:31"><name pos:start="9:24" pos:end="9:26">dir</name> <operator pos:start="9:28" pos:end="9:29">==</operator> <literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr> ?</condition><then pos:start="9:35" pos:end="9:42"> <expr pos:start="9:35" pos:end="9:42"><name pos:start="9:35" pos:end="9:39">mb_xy</name> <operator pos:start="9:41" pos:end="9:41">-</operator><literal type="number" pos:start="9:42" pos:end="9:42">1</literal></expr> </then><else pos:start="9:44" pos:end="9:57">: <expr pos:start="9:46" pos:end="9:57"><name pos:start="9:46" pos:end="9:57"><name pos:start="9:46" pos:end="9:46">h</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:57">top_mb_xy</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:69"><decl pos:start="11:5" pos:end="11:68"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:22">mbm_type</name> <init pos:start="11:24" pos:end="11:68">= <expr pos:start="11:26" pos:end="11:68"><ternary pos:start="11:26" pos:end="11:68"><condition pos:start="11:26" pos:end="11:35"><expr pos:start="11:26" pos:end="11:33"><name pos:start="11:26" pos:end="11:28">dir</name> <operator pos:start="11:30" pos:end="11:31">==</operator> <literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr> ?</condition><then pos:start="11:37" pos:end="11:54"> <expr pos:start="11:37" pos:end="11:54"><name pos:start="11:37" pos:end="11:54"><name pos:start="11:37" pos:end="11:37">h</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:48">left_type</name><index pos:start="11:49" pos:end="11:54">[<expr pos:start="11:50" pos:end="11:53"><name pos:start="11:50" pos:end="11:53">LTOP</name></expr>]</index></name></expr> </then><else pos:start="11:56" pos:end="11:68">: <expr pos:start="11:58" pos:end="11:68"><name pos:start="11:58" pos:end="11:68"><name pos:start="11:58" pos:end="11:58">h</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:68">top_type</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="15:5" pos:end="15:68">// how often to recheck mv-based bS when iterating between edges</comment>

    <decl_stmt pos:start="17:5" pos:end="19:65"><decl pos:start="17:5" pos:end="19:64"><type pos:start="17:5" pos:end="17:24"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <specifier pos:start="17:12" pos:end="17:16">const</specifier> <name pos:start="17:18" pos:end="17:24">uint8_t</name></type> <name pos:start="17:26" pos:end="17:44"><name pos:start="17:26" pos:end="17:38">mask_edge_tab</name><index pos:start="17:39" pos:end="17:41">[<expr pos:start="17:40" pos:end="17:40"><literal type="number" pos:start="17:40" pos:end="17:40">2</literal></expr>]</index><index pos:start="17:42" pos:end="17:44">[<expr pos:start="17:43" pos:end="17:43"><literal type="number" pos:start="17:43" pos:end="17:43">8</literal></expr>]</index></name><init pos:start="17:45" pos:end="19:64">=<expr pos:start="17:46" pos:end="19:64"><block pos:start="17:46" pos:end="19:64">{<expr pos:start="17:47" pos:end="17:63"><block pos:start="17:47" pos:end="17:63">{<expr pos:start="17:48" pos:end="17:48"><literal type="number" pos:start="17:48" pos:end="17:48">0</literal></expr>,<expr pos:start="17:50" pos:end="17:50"><literal type="number" pos:start="17:50" pos:end="17:50">3</literal></expr>,<expr pos:start="17:52" pos:end="17:52"><literal type="number" pos:start="17:52" pos:end="17:52">3</literal></expr>,<expr pos:start="17:54" pos:end="17:54"><literal type="number" pos:start="17:54" pos:end="17:54">3</literal></expr>,<expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">1</literal></expr>,<expr pos:start="17:58" pos:end="17:58"><literal type="number" pos:start="17:58" pos:end="17:58">1</literal></expr>,<expr pos:start="17:60" pos:end="17:60"><literal type="number" pos:start="17:60" pos:end="17:60">1</literal></expr>,<expr pos:start="17:62" pos:end="17:62"><literal type="number" pos:start="17:62" pos:end="17:62">1</literal></expr>}</block></expr>,

                                              <expr pos:start="19:47" pos:end="19:63"><block pos:start="19:47" pos:end="19:63">{<expr pos:start="19:48" pos:end="19:48"><literal type="number" pos:start="19:48" pos:end="19:48">0</literal></expr>,<expr pos:start="19:50" pos:end="19:50"><literal type="number" pos:start="19:50" pos:end="19:50">3</literal></expr>,<expr pos:start="19:52" pos:end="19:52"><literal type="number" pos:start="19:52" pos:end="19:52">1</literal></expr>,<expr pos:start="19:54" pos:end="19:54"><literal type="number" pos:start="19:54" pos:end="19:54">1</literal></expr>,<expr pos:start="19:56" pos:end="19:56"><literal type="number" pos:start="19:56" pos:end="19:56">3</literal></expr>,<expr pos:start="19:58" pos:end="19:58"><literal type="number" pos:start="19:58" pos:end="19:58">3</literal></expr>,<expr pos:start="19:60" pos:end="19:60"><literal type="number" pos:start="19:60" pos:end="19:60">3</literal></expr>,<expr pos:start="19:62" pos:end="19:62"><literal type="number" pos:start="19:62" pos:end="19:62">3</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:61"><decl pos:start="21:5" pos:end="21:60"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:23">mask_edge</name> <init pos:start="21:25" pos:end="21:60">= <expr pos:start="21:27" pos:end="21:60"><name pos:start="21:27" pos:end="21:60"><name pos:start="21:27" pos:end="21:39">mask_edge_tab</name><index pos:start="21:40" pos:end="21:44">[<expr pos:start="21:41" pos:end="21:43"><name pos:start="21:41" pos:end="21:43">dir</name></expr>]</index><index pos:start="21:45" pos:end="21:60">[<expr pos:start="21:46" pos:end="21:59"><operator pos:start="21:46" pos:end="21:46">(</operator><name pos:start="21:47" pos:end="21:53">mb_type</name><operator pos:start="21:54" pos:end="21:55">&gt;&gt;</operator><literal type="number" pos:start="21:56" pos:end="21:56">3</literal><operator pos:start="21:57" pos:end="21:57">)</operator><operator pos:start="21:58" pos:end="21:58">&amp;</operator><literal type="number" pos:start="21:59" pos:end="21:59">7</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:60"><decl pos:start="23:5" pos:end="23:59"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:19">edges</name> <init pos:start="23:21" pos:end="23:59">= <expr pos:start="23:23" pos:end="23:59"><ternary pos:start="23:23" pos:end="23:59"><condition pos:start="23:23" pos:end="23:53"><expr pos:start="23:23" pos:end="23:51"><name pos:start="23:23" pos:end="23:31">mask_edge</name><operator pos:start="23:32" pos:end="23:33">==</operator> <literal type="number" pos:start="23:35" pos:end="23:35">3</literal> <operator pos:start="23:37" pos:end="23:38">&amp;&amp;</operator> <operator pos:start="23:40" pos:end="23:40">!</operator><operator pos:start="23:41" pos:end="23:41">(</operator><name pos:start="23:42" pos:end="23:47"><name pos:start="23:42" pos:end="23:42">h</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:47">cbp</name></name><operator pos:start="23:48" pos:end="23:48">&amp;</operator><literal type="number" pos:start="23:49" pos:end="23:50">15</literal><operator pos:start="23:51" pos:end="23:51">)</operator></expr> ?</condition><then pos:start="23:55" pos:end="23:55"> <expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">1</literal></expr> </then><else pos:start="23:57" pos:end="23:59">: <expr pos:start="23:59" pos:end="23:59"><literal type="number" pos:start="23:59" pos:end="23:59">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="27:5" pos:end="27:70">// how often to recheck mv-based bS when iterating along each edge</comment>

    <decl_stmt pos:start="29:5" pos:end="29:76"><decl pos:start="29:5" pos:end="29:75"><type pos:start="29:5" pos:end="29:13"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:13">int</name></type> <name pos:start="29:15" pos:end="29:23">mask_par0</name> <init pos:start="29:25" pos:end="29:75">= <expr pos:start="29:27" pos:end="29:75"><name pos:start="29:27" pos:end="29:33">mb_type</name> <operator pos:start="29:35" pos:end="29:35">&amp;</operator> <operator pos:start="29:37" pos:end="29:37">(</operator><name pos:start="29:38" pos:end="29:50">MB_TYPE_16x16</name> <operator pos:start="29:52" pos:end="29:52">|</operator> <operator pos:start="29:54" pos:end="29:54">(</operator><name pos:start="29:55" pos:end="29:66">MB_TYPE_8x16</name> <operator pos:start="29:68" pos:end="29:69">&gt;&gt;</operator> <name pos:start="29:71" pos:end="29:73">dir</name><operator pos:start="29:74" pos:end="29:74">)</operator><operator pos:start="29:75" pos:end="29:75">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="295:5"><if pos:start="33:5" pos:end="295:5">if<condition pos:start="33:7" pos:end="33:45">(<expr pos:start="33:8" pos:end="33:44"><name pos:start="33:8" pos:end="33:15">mbm_type</name> <operator pos:start="33:17" pos:end="33:18">&amp;&amp;</operator> <operator pos:start="33:20" pos:end="33:20">!</operator><name pos:start="33:21" pos:end="33:44">first_vertical_edge_done</name></expr>)</condition><block pos:start="33:46" pos:end="295:5">{<block_content pos:start="37:9" pos:end="293:9">



        <if_stmt pos:start="37:9" pos:end="293:9"><if pos:start="37:9" pos:end="135:9">if <condition pos:start="37:12" pos:end="41:13">(<expr pos:start="37:13" pos:end="39:47"><name pos:start="37:13" pos:end="37:23">FRAME_MBAFF</name> <operator pos:start="37:25" pos:end="37:26">&amp;&amp;</operator> <operator pos:start="37:28" pos:end="37:28">(</operator><name pos:start="37:29" pos:end="37:31">dir</name> <operator pos:start="37:33" pos:end="37:34">==</operator> <literal type="number" pos:start="37:36" pos:end="37:36">1</literal><operator pos:start="37:37" pos:end="37:37">)</operator> <operator pos:start="37:39" pos:end="37:40">&amp;&amp;</operator> <operator pos:start="37:42" pos:end="37:42">(</operator><operator pos:start="37:43" pos:end="37:43">(</operator><name pos:start="37:44" pos:end="37:47">mb_y</name><operator pos:start="37:48" pos:end="37:48">&amp;</operator><literal type="number" pos:start="37:49" pos:end="37:49">1</literal><operator pos:start="37:50" pos:end="37:50">)</operator> <operator pos:start="37:52" pos:end="37:53">==</operator> <literal type="number" pos:start="37:55" pos:end="37:55">0</literal><operator pos:start="37:56" pos:end="37:56">)</operator>

            <operator pos:start="39:13" pos:end="39:14">&amp;&amp;</operator> <call pos:start="39:16" pos:end="39:47"><name pos:start="39:16" pos:end="39:28">IS_INTERLACED</name><argument_list pos:start="39:29" pos:end="39:47">(<argument pos:start="39:30" pos:end="39:46"><expr pos:start="39:30" pos:end="39:46"><name pos:start="39:30" pos:end="39:37">mbm_type</name><operator pos:start="39:38" pos:end="39:38">&amp;</operator><operator pos:start="39:39" pos:end="39:39">~</operator><name pos:start="39:40" pos:end="39:46">mb_type</name></expr></argument>)</argument_list></call></expr>

            )</condition> <block pos:start="41:15" pos:end="135:9">{<block_content pos:start="51:13" pos:end="133:13">

            <comment type="line" pos:start="43:13" pos:end="43:74">// This is a special case in the norm where the filtering must</comment>

            <comment type="line" pos:start="45:13" pos:end="45:72">// be done twice (one each of the field) even if we are in a</comment>

            <comment type="line" pos:start="47:13" pos:end="47:32">// frame macroblock.</comment>

            <comment type="line" pos:start="49:13" pos:end="49:14">//</comment>

            <decl_stmt pos:start="51:13" pos:end="51:57"><decl pos:start="51:13" pos:end="51:56"><type pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:20">unsigned</name> <name pos:start="51:22" pos:end="51:24">int</name></type> <name pos:start="51:26" pos:end="51:37">tmp_linesize</name>   <init pos:start="51:41" pos:end="51:56">= <expr pos:start="51:43" pos:end="51:56"><literal type="number" pos:start="51:43" pos:end="51:43">2</literal> <operator pos:start="51:45" pos:end="51:45">*</operator>   <name pos:start="51:49" pos:end="51:56">linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:57"><decl pos:start="53:13" pos:end="53:56"><type pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:20">unsigned</name> <name pos:start="53:22" pos:end="53:24">int</name></type> <name pos:start="53:26" pos:end="53:39">tmp_uvlinesize</name> <init pos:start="53:41" pos:end="53:56">= <expr pos:start="53:43" pos:end="53:56"><literal type="number" pos:start="53:43" pos:end="53:43">2</literal> <operator pos:start="53:45" pos:end="53:45">*</operator> <name pos:start="53:47" pos:end="53:56">uvlinesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:50"><decl pos:start="55:13" pos:end="55:49"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:22">mbn_xy</name> <init pos:start="55:24" pos:end="55:49">= <expr pos:start="55:26" pos:end="55:49"><name pos:start="55:26" pos:end="55:30">mb_xy</name> <operator pos:start="55:32" pos:end="55:32">-</operator> <literal type="number" pos:start="55:34" pos:end="55:34">2</literal> <operator pos:start="55:36" pos:end="55:36">*</operator> <name pos:start="55:38" pos:end="55:49"><name pos:start="55:38" pos:end="55:38">s</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:18"><decl pos:start="57:13" pos:end="57:17"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:17">j</name></decl>;</decl_stmt>



            <for pos:start="61:13" pos:end="133:13">for<control pos:start="61:16" pos:end="61:54">(<init pos:start="61:17" pos:end="61:20"><expr pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:17">j</name><operator pos:start="61:18" pos:end="61:18">=</operator><literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>;</init> <condition pos:start="61:22" pos:end="61:25"><expr pos:start="61:22" pos:end="61:24"><name pos:start="61:22" pos:end="61:22">j</name><operator pos:start="61:23" pos:end="61:23">&lt;</operator><literal type="number" pos:start="61:24" pos:end="61:24">2</literal></expr>;</condition> <incr pos:start="61:27" pos:end="61:53"><expr pos:start="61:27" pos:end="61:29"><name pos:start="61:27" pos:end="61:27">j</name><operator pos:start="61:28" pos:end="61:29">++</operator></expr><operator pos:start="61:30" pos:end="61:30">,</operator> <expr pos:start="61:32" pos:end="61:53"><name pos:start="61:32" pos:end="61:37">mbn_xy</name> <operator pos:start="61:39" pos:end="61:40">+=</operator> <name pos:start="61:42" pos:end="61:53"><name pos:start="61:42" pos:end="61:42">s</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:53">mb_stride</name></name></expr></incr>)</control><block pos:start="61:55" pos:end="133:13">{<block_content pos:start="63:17" pos:end="131:17">

                <expr_stmt pos:start="63:17" pos:end="63:51"><expr pos:start="63:17" pos:end="63:50"><call pos:start="63:17" pos:end="63:47"><name pos:start="63:17" pos:end="63:31">DECLARE_ALIGNED</name><argument_list pos:start="63:32" pos:end="63:47">(<argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">8</literal></expr></argument>, <argument pos:start="63:36" pos:end="63:42"><expr pos:start="63:36" pos:end="63:42"><name pos:start="63:36" pos:end="63:42">int16_t</name></expr></argument>, <argument pos:start="63:45" pos:end="63:46"><expr pos:start="63:45" pos:end="63:46"><name pos:start="63:45" pos:end="63:46">bS</name></expr></argument>)</argument_list></call><index pos:start="63:48" pos:end="63:50">[<expr pos:start="63:49" pos:end="63:49"><literal type="number" pos:start="63:49" pos:end="63:49">4</literal></expr>]</index></expr>;</expr_stmt>

                <decl_stmt pos:start="65:17" pos:end="65:23"><decl pos:start="65:17" pos:end="65:22"><type pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">int</name></type> <name pos:start="65:21" pos:end="65:22">qp</name></decl>;</decl_stmt>

                <if_stmt pos:start="67:17" pos:end="97:17"><if pos:start="67:17" pos:end="71:17">if <condition pos:start="67:20" pos:end="67:77">(<expr pos:start="67:21" pos:end="67:76"><call pos:start="67:21" pos:end="67:76"><name pos:start="67:21" pos:end="67:28">IS_INTRA</name><argument_list pos:start="67:29" pos:end="67:76">(<argument pos:start="67:30" pos:end="67:75"><expr pos:start="67:30" pos:end="67:75"><name pos:start="67:30" pos:end="67:36">mb_type</name> <operator pos:start="67:38" pos:end="67:38">|</operator> <name pos:start="67:40" pos:end="67:75"><name pos:start="67:40" pos:end="67:40">s</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:57">current_picture</name><operator pos:start="67:58" pos:end="67:58">.</operator><name pos:start="67:59" pos:end="67:59">f</name><operator pos:start="67:60" pos:end="67:60">.</operator><name pos:start="67:61" pos:end="67:67">mb_type</name><index pos:start="67:68" pos:end="67:75">[<expr pos:start="67:69" pos:end="67:74"><name pos:start="67:69" pos:end="67:74">mbn_xy</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:79" pos:end="71:17">{<block_content pos:start="69:21" pos:end="69:56">

                    <expr_stmt pos:start="69:21" pos:end="69:56"><expr pos:start="69:21" pos:end="69:55"><call pos:start="69:21" pos:end="69:55"><name pos:start="69:21" pos:end="69:28">AV_WN64A</name><argument_list pos:start="69:29" pos:end="69:55">(<argument pos:start="69:30" pos:end="69:31"><expr pos:start="69:30" pos:end="69:31"><name pos:start="69:30" pos:end="69:31">bS</name></expr></argument>, <argument pos:start="69:34" pos:end="69:54"><expr pos:start="69:34" pos:end="69:54"><literal type="number" pos:start="69:34" pos:end="69:54">0x0003000300030003ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="71:19" pos:end="97:17">else <block pos:start="71:24" pos:end="97:17">{<block_content pos:start="73:21" pos:end="95:21">

                    <if_stmt pos:start="73:21" pos:end="95:21"><if pos:start="73:21" pos:end="83:21">if <condition pos:start="73:24" pos:end="73:82">(<expr pos:start="73:25" pos:end="73:81"><operator pos:start="73:25" pos:end="73:25">!</operator><name pos:start="73:26" pos:end="73:30">CABAC</name> <operator pos:start="73:32" pos:end="73:33">&amp;&amp;</operator> <call pos:start="73:35" pos:end="73:81"><name pos:start="73:35" pos:end="73:43">IS_8x8DCT</name><argument_list pos:start="73:44" pos:end="73:81">(<argument pos:start="73:45" pos:end="73:80"><expr pos:start="73:45" pos:end="73:80"><name pos:start="73:45" pos:end="73:80"><name pos:start="73:45" pos:end="73:45">s</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:62">current_picture</name><operator pos:start="73:63" pos:end="73:63">.</operator><name pos:start="73:64" pos:end="73:64">f</name><operator pos:start="73:65" pos:end="73:65">.</operator><name pos:start="73:66" pos:end="73:72">mb_type</name><index pos:start="73:73" pos:end="73:80">[<expr pos:start="73:74" pos:end="73:79"><name pos:start="73:74" pos:end="73:79">mbn_xy</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:84" pos:end="83:21">{<block_content pos:start="75:25" pos:end="81:104">

                        <expr_stmt pos:start="75:25" pos:end="75:104"><expr pos:start="75:25" pos:end="75:103"><name pos:start="75:25" pos:end="75:29"><name pos:start="75:25" pos:end="75:26">bS</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">0</literal></expr>]</index></name><operator pos:start="75:30" pos:end="75:30">=</operator> <literal type="number" pos:start="75:32" pos:end="75:33">1</literal><operator pos:start="75:33" pos:end="75:33">+</operator><operator pos:start="75:34" pos:end="75:34">(</operator><operator pos:start="75:35" pos:end="75:35">(</operator><name pos:start="75:36" pos:end="75:55"><name pos:start="75:36" pos:end="75:36">h</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:47">cbp_table</name><index pos:start="75:48" pos:end="75:55">[<expr pos:start="75:49" pos:end="75:54"><name pos:start="75:49" pos:end="75:54">mbn_xy</name></expr>]</index></name> <operator pos:start="75:57" pos:end="75:57">&amp;</operator> <literal type="number" pos:start="75:59" pos:end="75:64">0x4000</literal><operator pos:start="75:65" pos:end="75:65">)</operator><operator pos:start="75:66" pos:end="75:67">||</operator><name pos:start="75:68" pos:end="75:102"><name pos:start="75:68" pos:end="75:68">h</name><operator pos:start="75:69" pos:end="75:70">-&gt;</operator><name pos:start="75:71" pos:end="75:90">non_zero_count_cache</name><index pos:start="75:91" pos:end="75:102">[<expr pos:start="75:92" pos:end="75:101"><name pos:start="75:92" pos:end="75:99"><name pos:start="75:92" pos:end="75:96">scan8</name><index pos:start="75:97" pos:end="75:99">[<expr pos:start="75:98" pos:end="75:98"><literal type="number" pos:start="75:98" pos:end="75:98">0</literal></expr>]</index></name><operator pos:start="75:100" pos:end="75:100">+</operator><literal type="number" pos:start="75:101" pos:end="75:101">0</literal></expr>]</index></name><operator pos:start="75:103" pos:end="75:103">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="77:25" pos:end="77:104"><expr pos:start="77:25" pos:end="77:103"><name pos:start="77:25" pos:end="77:29"><name pos:start="77:25" pos:end="77:26">bS</name><index pos:start="77:27" pos:end="77:29">[<expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">1</literal></expr>]</index></name><operator pos:start="77:30" pos:end="77:30">=</operator> <literal type="number" pos:start="77:32" pos:end="77:33">1</literal><operator pos:start="77:33" pos:end="77:33">+</operator><operator pos:start="77:34" pos:end="77:34">(</operator><operator pos:start="77:35" pos:end="77:35">(</operator><name pos:start="77:36" pos:end="77:55"><name pos:start="77:36" pos:end="77:36">h</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:47">cbp_table</name><index pos:start="77:48" pos:end="77:55">[<expr pos:start="77:49" pos:end="77:54"><name pos:start="77:49" pos:end="77:54">mbn_xy</name></expr>]</index></name> <operator pos:start="77:57" pos:end="77:57">&amp;</operator> <literal type="number" pos:start="77:59" pos:end="77:64">0x4000</literal><operator pos:start="77:65" pos:end="77:65">)</operator><operator pos:start="77:66" pos:end="77:67">||</operator><name pos:start="77:68" pos:end="77:102"><name pos:start="77:68" pos:end="77:68">h</name><operator pos:start="77:69" pos:end="77:70">-&gt;</operator><name pos:start="77:71" pos:end="77:90">non_zero_count_cache</name><index pos:start="77:91" pos:end="77:102">[<expr pos:start="77:92" pos:end="77:101"><name pos:start="77:92" pos:end="77:99"><name pos:start="77:92" pos:end="77:96">scan8</name><index pos:start="77:97" pos:end="77:99">[<expr pos:start="77:98" pos:end="77:98"><literal type="number" pos:start="77:98" pos:end="77:98">0</literal></expr>]</index></name><operator pos:start="77:100" pos:end="77:100">+</operator><literal type="number" pos:start="77:101" pos:end="77:101">1</literal></expr>]</index></name><operator pos:start="77:103" pos:end="77:103">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="79:25" pos:end="79:104"><expr pos:start="79:25" pos:end="79:103"><name pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:26">bS</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">2</literal></expr>]</index></name><operator pos:start="79:30" pos:end="79:30">=</operator> <literal type="number" pos:start="79:32" pos:end="79:33">1</literal><operator pos:start="79:33" pos:end="79:33">+</operator><operator pos:start="79:34" pos:end="79:34">(</operator><operator pos:start="79:35" pos:end="79:35">(</operator><name pos:start="79:36" pos:end="79:55"><name pos:start="79:36" pos:end="79:36">h</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:47">cbp_table</name><index pos:start="79:48" pos:end="79:55">[<expr pos:start="79:49" pos:end="79:54"><name pos:start="79:49" pos:end="79:54">mbn_xy</name></expr>]</index></name> <operator pos:start="79:57" pos:end="79:57">&amp;</operator> <literal type="number" pos:start="79:59" pos:end="79:64">0x8000</literal><operator pos:start="79:65" pos:end="79:65">)</operator><operator pos:start="79:66" pos:end="79:67">||</operator><name pos:start="79:68" pos:end="79:102"><name pos:start="79:68" pos:end="79:68">h</name><operator pos:start="79:69" pos:end="79:70">-&gt;</operator><name pos:start="79:71" pos:end="79:90">non_zero_count_cache</name><index pos:start="79:91" pos:end="79:102">[<expr pos:start="79:92" pos:end="79:101"><name pos:start="79:92" pos:end="79:99"><name pos:start="79:92" pos:end="79:96">scan8</name><index pos:start="79:97" pos:end="79:99">[<expr pos:start="79:98" pos:end="79:98"><literal type="number" pos:start="79:98" pos:end="79:98">0</literal></expr>]</index></name><operator pos:start="79:100" pos:end="79:100">+</operator><literal type="number" pos:start="79:101" pos:end="79:101">2</literal></expr>]</index></name><operator pos:start="79:103" pos:end="79:103">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="81:25" pos:end="81:104"><expr pos:start="81:25" pos:end="81:103"><name pos:start="81:25" pos:end="81:29"><name pos:start="81:25" pos:end="81:26">bS</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">3</literal></expr>]</index></name><operator pos:start="81:30" pos:end="81:30">=</operator> <literal type="number" pos:start="81:32" pos:end="81:33">1</literal><operator pos:start="81:33" pos:end="81:33">+</operator><operator pos:start="81:34" pos:end="81:34">(</operator><operator pos:start="81:35" pos:end="81:35">(</operator><name pos:start="81:36" pos:end="81:55"><name pos:start="81:36" pos:end="81:36">h</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:47">cbp_table</name><index pos:start="81:48" pos:end="81:55">[<expr pos:start="81:49" pos:end="81:54"><name pos:start="81:49" pos:end="81:54">mbn_xy</name></expr>]</index></name> <operator pos:start="81:57" pos:end="81:57">&amp;</operator> <literal type="number" pos:start="81:59" pos:end="81:64">0x8000</literal><operator pos:start="81:65" pos:end="81:65">)</operator><operator pos:start="81:66" pos:end="81:67">||</operator><name pos:start="81:68" pos:end="81:102"><name pos:start="81:68" pos:end="81:68">h</name><operator pos:start="81:69" pos:end="81:70">-&gt;</operator><name pos:start="81:71" pos:end="81:90">non_zero_count_cache</name><index pos:start="81:91" pos:end="81:102">[<expr pos:start="81:92" pos:end="81:101"><name pos:start="81:92" pos:end="81:99"><name pos:start="81:92" pos:end="81:96">scan8</name><index pos:start="81:97" pos:end="81:99">[<expr pos:start="81:98" pos:end="81:98"><literal type="number" pos:start="81:98" pos:end="81:98">0</literal></expr>]</index></name><operator pos:start="81:100" pos:end="81:100">+</operator><literal type="number" pos:start="81:101" pos:end="81:101">3</literal></expr>]</index></name><operator pos:start="81:103" pos:end="81:103">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="83:22" pos:end="95:21">else<block pos:start="83:26" pos:end="95:21">{<block_content pos:start="85:21" pos:end="93:21">

                    <decl_stmt pos:start="85:21" pos:end="85:77"><decl pos:start="85:21" pos:end="85:76"><type pos:start="85:21" pos:end="85:35"><specifier pos:start="85:21" pos:end="85:25">const</specifier> <name pos:start="85:27" pos:end="85:33">uint8_t</name> <modifier pos:start="85:35" pos:end="85:35">*</modifier></type><name pos:start="85:36" pos:end="85:42">mbn_nnz</name> <init pos:start="85:44" pos:end="85:76">= <expr pos:start="85:46" pos:end="85:76"><name pos:start="85:46" pos:end="85:70"><name pos:start="85:46" pos:end="85:46">h</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:62">non_zero_count</name><index pos:start="85:63" pos:end="85:70">[<expr pos:start="85:64" pos:end="85:69"><name pos:start="85:64" pos:end="85:69">mbn_xy</name></expr>]</index></name> <operator pos:start="85:72" pos:end="85:72">+</operator> <literal type="number" pos:start="85:74" pos:end="85:74">3</literal><operator pos:start="85:75" pos:end="85:75">*</operator><literal type="number" pos:start="85:76" pos:end="85:76">4</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="87:21" pos:end="87:26"><decl pos:start="87:21" pos:end="87:25"><type pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">int</name></type> <name pos:start="87:25" pos:end="87:25">i</name></decl>;</decl_stmt>

                    <for pos:start="89:21" pos:end="93:21">for<control pos:start="89:24" pos:end="89:44">( <init pos:start="89:26" pos:end="89:31"><expr pos:start="89:26" pos:end="89:30"><name pos:start="89:26" pos:end="89:26">i</name> <operator pos:start="89:28" pos:end="89:28">=</operator> <literal type="number" pos:start="89:30" pos:end="89:30">0</literal></expr>;</init> <condition pos:start="89:33" pos:end="89:38"><expr pos:start="89:33" pos:end="89:37"><name pos:start="89:33" pos:end="89:33">i</name> <operator pos:start="89:35" pos:end="89:35">&lt;</operator> <literal type="number" pos:start="89:37" pos:end="89:37">4</literal></expr>;</condition> <incr pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:40">i</name><operator pos:start="89:41" pos:end="89:42">++</operator></expr></incr> )</control> <block pos:start="89:46" pos:end="93:21">{<block_content pos:start="91:25" pos:end="91:89">

                        <expr_stmt pos:start="91:25" pos:end="91:89"><expr pos:start="91:25" pos:end="91:88"><name pos:start="91:25" pos:end="91:29"><name pos:start="91:25" pos:end="91:26">bS</name><index pos:start="91:27" pos:end="91:29">[<expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">i</name></expr>]</index></name> <operator pos:start="91:31" pos:end="91:31">=</operator> <literal type="number" pos:start="91:33" pos:end="91:35">1</literal> <operator pos:start="91:35" pos:end="91:35">+</operator> <operator pos:start="91:37" pos:end="91:37">!</operator><operator pos:start="91:38" pos:end="91:38">!</operator><operator pos:start="91:39" pos:end="91:39">(</operator><name pos:start="91:40" pos:end="91:74"><name pos:start="91:40" pos:end="91:40">h</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:62">non_zero_count_cache</name><index pos:start="91:63" pos:end="91:74">[<expr pos:start="91:64" pos:end="91:73"><name pos:start="91:64" pos:end="91:71"><name pos:start="91:64" pos:end="91:68">scan8</name><index pos:start="91:69" pos:end="91:71">[<expr pos:start="91:70" pos:end="91:70"><literal type="number" pos:start="91:70" pos:end="91:70">0</literal></expr>]</index></name><operator pos:start="91:72" pos:end="91:72">+</operator><name pos:start="91:73" pos:end="91:73">i</name></expr>]</index></name> <operator pos:start="91:76" pos:end="91:76">|</operator> <name pos:start="91:78" pos:end="91:87"><name pos:start="91:78" pos:end="91:84">mbn_nnz</name><index pos:start="91:85" pos:end="91:87">[<expr pos:start="91:86" pos:end="91:86"><name pos:start="91:86" pos:end="91:86">i</name></expr>]</index></name><operator pos:start="91:88" pos:end="91:88">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <comment type="line" pos:start="99:17" pos:end="99:85">// Do not use s-&gt;qscale as luma quantizer because it has not the same</comment>

                <comment type="line" pos:start="101:17" pos:end="101:45">// value in IPCM macroblocks.</comment>

                <expr_stmt pos:start="103:17" pos:end="103:117"><expr pos:start="103:17" pos:end="103:116"><name pos:start="103:17" pos:end="103:18">qp</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <operator pos:start="103:22" pos:end="103:22">(</operator><name pos:start="103:23" pos:end="103:62"><name pos:start="103:23" pos:end="103:23">s</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:40">current_picture</name><operator pos:start="103:41" pos:end="103:41">.</operator><name pos:start="103:42" pos:end="103:42">f</name><operator pos:start="103:43" pos:end="103:43">.</operator><name pos:start="103:44" pos:end="103:55">qscale_table</name><index pos:start="103:56" pos:end="103:62">[<expr pos:start="103:57" pos:end="103:61"><name pos:start="103:57" pos:end="103:61">mb_xy</name></expr>]</index></name> <operator pos:start="103:64" pos:end="103:64">+</operator> <name pos:start="103:66" pos:end="103:106"><name pos:start="103:66" pos:end="103:66">s</name><operator pos:start="103:67" pos:end="103:68">-&gt;</operator><name pos:start="103:69" pos:end="103:83">current_picture</name><operator pos:start="103:84" pos:end="103:84">.</operator><name pos:start="103:85" pos:end="103:85">f</name><operator pos:start="103:86" pos:end="103:86">.</operator><name pos:start="103:87" pos:end="103:98">qscale_table</name><index pos:start="103:99" pos:end="103:106">[<expr pos:start="103:100" pos:end="103:105"><name pos:start="103:100" pos:end="103:105">mbn_xy</name></expr>]</index></name> <operator pos:start="103:108" pos:end="103:108">+</operator> <literal type="number" pos:start="103:110" pos:end="103:110">1</literal><operator pos:start="103:111" pos:end="103:111">)</operator> <operator pos:start="103:113" pos:end="103:114">&gt;&gt;</operator> <literal type="number" pos:start="103:116" pos:end="103:116">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:147"><expr pos:start="105:17" pos:end="105:146"><call pos:start="105:17" pos:end="105:146"><name pos:start="105:17" pos:end="105:23">tprintf</name><argument_list pos:start="105:24" pos:end="105:146">(<argument pos:start="105:25" pos:end="105:32"><expr pos:start="105:25" pos:end="105:32"><name pos:start="105:25" pos:end="105:32"><name pos:start="105:25" pos:end="105:25">s</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:32">avctx</name></name></expr></argument>, <argument pos:start="105:35" pos:end="105:88"><expr pos:start="105:35" pos:end="105:88"><literal type="string" pos:start="105:35" pos:end="105:88">"filter mb:%d/%d dir:%d edge:%d, QPy:%d ls:%d uvls:%d"</literal></expr></argument>, <argument pos:start="105:91" pos:end="105:94"><expr pos:start="105:91" pos:end="105:94"><name pos:start="105:91" pos:end="105:94">mb_x</name></expr></argument>, <argument pos:start="105:97" pos:end="105:100"><expr pos:start="105:97" pos:end="105:100"><name pos:start="105:97" pos:end="105:100">mb_y</name></expr></argument>, <argument pos:start="105:103" pos:end="105:105"><expr pos:start="105:103" pos:end="105:105"><name pos:start="105:103" pos:end="105:105">dir</name></expr></argument>, <argument pos:start="105:108" pos:end="105:111"><expr pos:start="105:108" pos:end="105:111"><name pos:start="105:108" pos:end="105:111">edge</name></expr></argument>, <argument pos:start="105:114" pos:end="105:115"><expr pos:start="105:114" pos:end="105:115"><name pos:start="105:114" pos:end="105:115">qp</name></expr></argument>, <argument pos:start="105:118" pos:end="105:129"><expr pos:start="105:118" pos:end="105:129"><name pos:start="105:118" pos:end="105:129">tmp_linesize</name></expr></argument>, <argument pos:start="105:132" pos:end="105:145"><expr pos:start="105:132" pos:end="105:145"><name pos:start="105:132" pos:end="105:145">tmp_uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="107:17" pos:end="107:118">{<block_content pos:start="107:19" pos:end="107:116"> <decl_stmt pos:start="107:19" pos:end="107:24"><decl pos:start="107:19" pos:end="107:23"><type pos:start="107:19" pos:end="107:21"><name pos:start="107:19" pos:end="107:21">int</name></type> <name pos:start="107:23" pos:end="107:23">i</name></decl>;</decl_stmt> <for pos:start="107:26" pos:end="107:91">for <control pos:start="107:30" pos:end="107:48">(<init pos:start="107:31" pos:end="107:36"><expr pos:start="107:31" pos:end="107:35"><name pos:start="107:31" pos:end="107:31">i</name> <operator pos:start="107:33" pos:end="107:33">=</operator> <literal type="number" pos:start="107:35" pos:end="107:35">0</literal></expr>;</init> <condition pos:start="107:38" pos:end="107:43"><expr pos:start="107:38" pos:end="107:42"><name pos:start="107:38" pos:end="107:38">i</name> <operator pos:start="107:40" pos:end="107:40">&lt;</operator> <literal type="number" pos:start="107:42" pos:end="107:42">4</literal></expr>;</condition> <incr pos:start="107:45" pos:end="107:47"><expr pos:start="107:45" pos:end="107:47"><name pos:start="107:45" pos:end="107:45">i</name><operator pos:start="107:46" pos:end="107:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:50" pos:end="107:91"><block_content pos:start="107:50" pos:end="107:91"> <expr_stmt pos:start="107:50" pos:end="107:91"><expr pos:start="107:50" pos:end="107:90"><call pos:start="107:50" pos:end="107:90"><name pos:start="107:50" pos:end="107:56">tprintf</name><argument_list pos:start="107:57" pos:end="107:90">(<argument pos:start="107:58" pos:end="107:65"><expr pos:start="107:58" pos:end="107:65"><name pos:start="107:58" pos:end="107:65"><name pos:start="107:58" pos:end="107:58">s</name><operator pos:start="107:59" pos:end="107:60">-&gt;</operator><name pos:start="107:61" pos:end="107:65">avctx</name></name></expr></argument>, <argument pos:start="107:68" pos:end="107:79"><expr pos:start="107:68" pos:end="107:79"><literal type="string" pos:start="107:68" pos:end="107:79">" bS[%d]:%d"</literal></expr></argument>, <argument pos:start="107:82" pos:end="107:82"><expr pos:start="107:82" pos:end="107:82"><name pos:start="107:82" pos:end="107:82">i</name></expr></argument>, <argument pos:start="107:85" pos:end="107:89"><expr pos:start="107:85" pos:end="107:89"><name pos:start="107:85" pos:end="107:89"><name pos:start="107:85" pos:end="107:86">bS</name><index pos:start="107:87" pos:end="107:89">[<expr pos:start="107:88" pos:end="107:88"><name pos:start="107:88" pos:end="107:88">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for> <expr_stmt pos:start="107:93" pos:end="107:116"><expr pos:start="107:93" pos:end="107:115"><call pos:start="107:93" pos:end="107:115"><name pos:start="107:93" pos:end="107:99">tprintf</name><argument_list pos:start="107:100" pos:end="107:115">(<argument pos:start="107:101" pos:end="107:108"><expr pos:start="107:101" pos:end="107:108"><name pos:start="107:101" pos:end="107:108"><name pos:start="107:101" pos:end="107:101">s</name><operator pos:start="107:102" pos:end="107:103">-&gt;</operator><name pos:start="107:104" pos:end="107:108">avctx</name></name></expr></argument>, <argument pos:start="107:111" pos:end="107:114"><expr pos:start="107:111" pos:end="107:114"><literal type="string" pos:start="107:111" pos:end="107:114">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block>

                <expr_stmt pos:start="109:17" pos:end="109:79"><expr pos:start="109:17" pos:end="109:78"><call pos:start="109:17" pos:end="109:78"><name pos:start="109:17" pos:end="109:31">filter_mb_edgeh</name><argument_list pos:start="109:32" pos:end="109:78">( <argument pos:start="109:34" pos:end="109:51"><expr pos:start="109:34" pos:end="109:51"><operator pos:start="109:34" pos:end="109:34">&amp;</operator><name pos:start="109:35" pos:end="109:51"><name pos:start="109:35" pos:end="109:39">img_y</name><index pos:start="109:40" pos:end="109:51">[<expr pos:start="109:41" pos:end="109:50"><name pos:start="109:41" pos:end="109:41">j</name><operator pos:start="109:42" pos:end="109:42">*</operator><name pos:start="109:43" pos:end="109:50">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="109:54" pos:end="109:65"><expr pos:start="109:54" pos:end="109:65"><name pos:start="109:54" pos:end="109:65">tmp_linesize</name></expr></argument>, <argument pos:start="109:68" pos:end="109:69"><expr pos:start="109:68" pos:end="109:69"><name pos:start="109:68" pos:end="109:69">bS</name></expr></argument>, <argument pos:start="109:72" pos:end="109:73"><expr pos:start="109:72" pos:end="109:73"><name pos:start="109:72" pos:end="109:73">qp</name></expr></argument>, <argument pos:start="109:76" pos:end="109:76"><expr pos:start="109:76" pos:end="109:76"><name pos:start="109:76" pos:end="109:76">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:127"><expr pos:start="111:17" pos:end="111:126"><name pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:29">chroma_qp_avg</name><index pos:start="111:30" pos:end="111:32">[<expr pos:start="111:31" pos:end="111:31"><literal type="number" pos:start="111:31" pos:end="111:31">0</literal></expr>]</index></name> <operator pos:start="111:34" pos:end="111:34">=</operator> <operator pos:start="111:36" pos:end="111:36">(</operator><name pos:start="111:37" pos:end="111:51"><name pos:start="111:37" pos:end="111:37">h</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:48">chroma_qp</name><index pos:start="111:49" pos:end="111:51">[<expr pos:start="111:50" pos:end="111:50"><literal type="number" pos:start="111:50" pos:end="111:50">0</literal></expr>]</index></name> <operator pos:start="111:53" pos:end="111:53">+</operator> <call pos:start="111:55" pos:end="111:116"><name pos:start="111:55" pos:end="111:67">get_chroma_qp</name><argument_list pos:start="111:68" pos:end="111:116">(<argument pos:start="111:69" pos:end="111:69"><expr pos:start="111:69" pos:end="111:69"><name pos:start="111:69" pos:end="111:69">h</name></expr></argument>, <argument pos:start="111:72" pos:end="111:72"><expr pos:start="111:72" pos:end="111:72"><literal type="number" pos:start="111:72" pos:end="111:72">0</literal></expr></argument>, <argument pos:start="111:75" pos:end="111:115"><expr pos:start="111:75" pos:end="111:115"><name pos:start="111:75" pos:end="111:115"><name pos:start="111:75" pos:end="111:75">s</name><operator pos:start="111:76" pos:end="111:77">-&gt;</operator><name pos:start="111:78" pos:end="111:92">current_picture</name><operator pos:start="111:93" pos:end="111:93">.</operator><name pos:start="111:94" pos:end="111:94">f</name><operator pos:start="111:95" pos:end="111:95">.</operator><name pos:start="111:96" pos:end="111:107">qscale_table</name><index pos:start="111:108" pos:end="111:115">[<expr pos:start="111:109" pos:end="111:114"><name pos:start="111:109" pos:end="111:114">mbn_xy</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="111:118" pos:end="111:118">+</operator> <literal type="number" pos:start="111:120" pos:end="111:120">1</literal><operator pos:start="111:121" pos:end="111:121">)</operator> <operator pos:start="111:123" pos:end="111:124">&gt;&gt;</operator> <literal type="number" pos:start="111:126" pos:end="111:126">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:127"><expr pos:start="113:17" pos:end="113:126"><name pos:start="113:17" pos:end="113:32"><name pos:start="113:17" pos:end="113:29">chroma_qp_avg</name><index pos:start="113:30" pos:end="113:32">[<expr pos:start="113:31" pos:end="113:31"><literal type="number" pos:start="113:31" pos:end="113:31">1</literal></expr>]</index></name> <operator pos:start="113:34" pos:end="113:34">=</operator> <operator pos:start="113:36" pos:end="113:36">(</operator><name pos:start="113:37" pos:end="113:51"><name pos:start="113:37" pos:end="113:37">h</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:48">chroma_qp</name><index pos:start="113:49" pos:end="113:51">[<expr pos:start="113:50" pos:end="113:50"><literal type="number" pos:start="113:50" pos:end="113:50">1</literal></expr>]</index></name> <operator pos:start="113:53" pos:end="113:53">+</operator> <call pos:start="113:55" pos:end="113:116"><name pos:start="113:55" pos:end="113:67">get_chroma_qp</name><argument_list pos:start="113:68" pos:end="113:116">(<argument pos:start="113:69" pos:end="113:69"><expr pos:start="113:69" pos:end="113:69"><name pos:start="113:69" pos:end="113:69">h</name></expr></argument>, <argument pos:start="113:72" pos:end="113:72"><expr pos:start="113:72" pos:end="113:72"><literal type="number" pos:start="113:72" pos:end="113:72">1</literal></expr></argument>, <argument pos:start="113:75" pos:end="113:115"><expr pos:start="113:75" pos:end="113:115"><name pos:start="113:75" pos:end="113:115"><name pos:start="113:75" pos:end="113:75">s</name><operator pos:start="113:76" pos:end="113:77">-&gt;</operator><name pos:start="113:78" pos:end="113:92">current_picture</name><operator pos:start="113:93" pos:end="113:93">.</operator><name pos:start="113:94" pos:end="113:94">f</name><operator pos:start="113:95" pos:end="113:95">.</operator><name pos:start="113:96" pos:end="113:107">qscale_table</name><index pos:start="113:108" pos:end="113:115">[<expr pos:start="113:109" pos:end="113:114"><name pos:start="113:109" pos:end="113:114">mbn_xy</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="113:118" pos:end="113:118">+</operator> <literal type="number" pos:start="113:120" pos:end="113:120">1</literal><operator pos:start="113:121" pos:end="113:121">)</operator> <operator pos:start="113:123" pos:end="113:124">&gt;&gt;</operator> <literal type="number" pos:start="113:126" pos:end="113:126">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="115:17" pos:end="131:17"><if pos:start="115:17" pos:end="131:17">if <condition pos:start="115:20" pos:end="115:27">(<expr pos:start="115:21" pos:end="115:26"><name pos:start="115:21" pos:end="115:26">chroma</name></expr>)</condition> <block pos:start="115:29" pos:end="131:17">{<block_content pos:start="117:21" pos:end="129:21">

                    <if_stmt pos:start="117:21" pos:end="129:21"><if pos:start="117:21" pos:end="123:21">if <condition pos:start="117:24" pos:end="117:34">(<expr pos:start="117:25" pos:end="117:33"><name pos:start="117:25" pos:end="117:33">chroma444</name></expr>)</condition> <block pos:start="117:36" pos:end="123:21">{<block_content pos:start="119:25" pos:end="121:105">

                        <expr_stmt pos:start="119:25" pos:end="119:105"><expr pos:start="119:25" pos:end="119:104"><call pos:start="119:25" pos:end="119:104"><name pos:start="119:25" pos:end="119:39">filter_mb_edgeh</name> <argument_list pos:start="119:41" pos:end="119:104">(<argument pos:start="119:42" pos:end="119:62"><expr pos:start="119:42" pos:end="119:62"><operator pos:start="119:42" pos:end="119:42">&amp;</operator><name pos:start="119:43" pos:end="119:62"><name pos:start="119:43" pos:end="119:48">img_cb</name><index pos:start="119:49" pos:end="119:62">[<expr pos:start="119:50" pos:end="119:61"><name pos:start="119:50" pos:end="119:50">j</name><operator pos:start="119:51" pos:end="119:51">*</operator><name pos:start="119:52" pos:end="119:61">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="119:65" pos:end="119:78"><expr pos:start="119:65" pos:end="119:78"><name pos:start="119:65" pos:end="119:78">tmp_uvlinesize</name></expr></argument>, <argument pos:start="119:81" pos:end="119:82"><expr pos:start="119:81" pos:end="119:82"><name pos:start="119:81" pos:end="119:82">bS</name></expr></argument>, <argument pos:start="119:85" pos:end="119:100"><expr pos:start="119:85" pos:end="119:100"><name pos:start="119:85" pos:end="119:100"><name pos:start="119:85" pos:end="119:97">chroma_qp_avg</name><index pos:start="119:98" pos:end="119:100">[<expr pos:start="119:99" pos:end="119:99"><literal type="number" pos:start="119:99" pos:end="119:99">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:103" pos:end="119:103"><expr pos:start="119:103" pos:end="119:103"><name pos:start="119:103" pos:end="119:103">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="121:25" pos:end="121:105"><expr pos:start="121:25" pos:end="121:104"><call pos:start="121:25" pos:end="121:104"><name pos:start="121:25" pos:end="121:39">filter_mb_edgeh</name> <argument_list pos:start="121:41" pos:end="121:104">(<argument pos:start="121:42" pos:end="121:62"><expr pos:start="121:42" pos:end="121:62"><operator pos:start="121:42" pos:end="121:42">&amp;</operator><name pos:start="121:43" pos:end="121:62"><name pos:start="121:43" pos:end="121:48">img_cr</name><index pos:start="121:49" pos:end="121:62">[<expr pos:start="121:50" pos:end="121:61"><name pos:start="121:50" pos:end="121:50">j</name><operator pos:start="121:51" pos:end="121:51">*</operator><name pos:start="121:52" pos:end="121:61">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="121:65" pos:end="121:78"><expr pos:start="121:65" pos:end="121:78"><name pos:start="121:65" pos:end="121:78">tmp_uvlinesize</name></expr></argument>, <argument pos:start="121:81" pos:end="121:82"><expr pos:start="121:81" pos:end="121:82"><name pos:start="121:81" pos:end="121:82">bS</name></expr></argument>, <argument pos:start="121:85" pos:end="121:100"><expr pos:start="121:85" pos:end="121:100"><name pos:start="121:85" pos:end="121:100"><name pos:start="121:85" pos:end="121:97">chroma_qp_avg</name><index pos:start="121:98" pos:end="121:100">[<expr pos:start="121:99" pos:end="121:99"><literal type="number" pos:start="121:99" pos:end="121:99">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:103" pos:end="121:103"><expr pos:start="121:103" pos:end="121:103"><name pos:start="121:103" pos:end="121:103">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="123:23" pos:end="129:21">else <block pos:start="123:28" pos:end="129:21">{<block_content pos:start="125:25" pos:end="127:105">

                        <expr_stmt pos:start="125:25" pos:end="125:105"><expr pos:start="125:25" pos:end="125:104"><call pos:start="125:25" pos:end="125:104"><name pos:start="125:25" pos:end="125:40">filter_mb_edgech</name><argument_list pos:start="125:41" pos:end="125:104">(<argument pos:start="125:42" pos:end="125:62"><expr pos:start="125:42" pos:end="125:62"><operator pos:start="125:42" pos:end="125:42">&amp;</operator><name pos:start="125:43" pos:end="125:62"><name pos:start="125:43" pos:end="125:48">img_cb</name><index pos:start="125:49" pos:end="125:62">[<expr pos:start="125:50" pos:end="125:61"><name pos:start="125:50" pos:end="125:50">j</name><operator pos:start="125:51" pos:end="125:51">*</operator><name pos:start="125:52" pos:end="125:61">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="125:65" pos:end="125:78"><expr pos:start="125:65" pos:end="125:78"><name pos:start="125:65" pos:end="125:78">tmp_uvlinesize</name></expr></argument>, <argument pos:start="125:81" pos:end="125:82"><expr pos:start="125:81" pos:end="125:82"><name pos:start="125:81" pos:end="125:82">bS</name></expr></argument>, <argument pos:start="125:85" pos:end="125:100"><expr pos:start="125:85" pos:end="125:100"><name pos:start="125:85" pos:end="125:100"><name pos:start="125:85" pos:end="125:97">chroma_qp_avg</name><index pos:start="125:98" pos:end="125:100">[<expr pos:start="125:99" pos:end="125:99"><literal type="number" pos:start="125:99" pos:end="125:99">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:103" pos:end="125:103"><expr pos:start="125:103" pos:end="125:103"><name pos:start="125:103" pos:end="125:103">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="127:25" pos:end="127:105"><expr pos:start="127:25" pos:end="127:104"><call pos:start="127:25" pos:end="127:104"><name pos:start="127:25" pos:end="127:40">filter_mb_edgech</name><argument_list pos:start="127:41" pos:end="127:104">(<argument pos:start="127:42" pos:end="127:62"><expr pos:start="127:42" pos:end="127:62"><operator pos:start="127:42" pos:end="127:42">&amp;</operator><name pos:start="127:43" pos:end="127:62"><name pos:start="127:43" pos:end="127:48">img_cr</name><index pos:start="127:49" pos:end="127:62">[<expr pos:start="127:50" pos:end="127:61"><name pos:start="127:50" pos:end="127:50">j</name><operator pos:start="127:51" pos:end="127:51">*</operator><name pos:start="127:52" pos:end="127:61">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="127:65" pos:end="127:78"><expr pos:start="127:65" pos:end="127:78"><name pos:start="127:65" pos:end="127:78">tmp_uvlinesize</name></expr></argument>, <argument pos:start="127:81" pos:end="127:82"><expr pos:start="127:81" pos:end="127:82"><name pos:start="127:81" pos:end="127:82">bS</name></expr></argument>, <argument pos:start="127:85" pos:end="127:100"><expr pos:start="127:85" pos:end="127:100"><name pos:start="127:85" pos:end="127:100"><name pos:start="127:85" pos:end="127:97">chroma_qp_avg</name><index pos:start="127:98" pos:end="127:100">[<expr pos:start="127:99" pos:end="127:99"><literal type="number" pos:start="127:99" pos:end="127:99">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:103" pos:end="127:103"><expr pos:start="127:103" pos:end="127:103"><name pos:start="127:103" pos:end="127:103">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="135:10" pos:end="293:9">else<block pos:start="135:14" pos:end="293:9">{<block_content pos:start="137:13" pos:end="291:13">

            <expr_stmt pos:start="137:13" pos:end="137:47"><expr pos:start="137:13" pos:end="137:46"><call pos:start="137:13" pos:end="137:43"><name pos:start="137:13" pos:end="137:27">DECLARE_ALIGNED</name><argument_list pos:start="137:28" pos:end="137:43">(<argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><literal type="number" pos:start="137:29" pos:end="137:29">8</literal></expr></argument>, <argument pos:start="137:32" pos:end="137:38"><expr pos:start="137:32" pos:end="137:38"><name pos:start="137:32" pos:end="137:38">int16_t</name></expr></argument>, <argument pos:start="137:41" pos:end="137:42"><expr pos:start="137:41" pos:end="137:42"><name pos:start="137:41" pos:end="137:42">bS</name></expr></argument>)</argument_list></call><index pos:start="137:44" pos:end="137:46">[<expr pos:start="137:45" pos:end="137:45"><literal type="number" pos:start="137:45" pos:end="137:45">4</literal></expr>]</index></expr>;</expr_stmt>

            <decl_stmt pos:start="139:13" pos:end="139:19"><decl pos:start="139:13" pos:end="139:18"><type pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">int</name></type> <name pos:start="139:17" pos:end="139:18">qp</name></decl>;</decl_stmt>



            <if_stmt pos:start="143:13" pos:end="221:13"><if pos:start="143:13" pos:end="155:13">if<condition pos:start="143:15" pos:end="143:43">( <expr pos:start="143:17" pos:end="143:42"><call pos:start="143:17" pos:end="143:42"><name pos:start="143:17" pos:end="143:24">IS_INTRA</name><argument_list pos:start="143:25" pos:end="143:42">(<argument pos:start="143:26" pos:end="143:41"><expr pos:start="143:26" pos:end="143:41"><name pos:start="143:26" pos:end="143:32">mb_type</name><operator pos:start="143:33" pos:end="143:33">|</operator><name pos:start="143:34" pos:end="143:41">mbm_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:45" pos:end="155:13">{<block_content pos:start="145:17" pos:end="153:56">

                <expr_stmt pos:start="145:17" pos:end="145:52"><expr pos:start="145:17" pos:end="145:51"><call pos:start="145:17" pos:end="145:51"><name pos:start="145:17" pos:end="145:24">AV_WN64A</name><argument_list pos:start="145:25" pos:end="145:51">(<argument pos:start="145:26" pos:end="145:27"><expr pos:start="145:26" pos:end="145:27"><name pos:start="145:26" pos:end="145:27">bS</name></expr></argument>, <argument pos:start="145:30" pos:end="145:50"><expr pos:start="145:30" pos:end="145:50"><literal type="number" pos:start="145:30" pos:end="145:50">0x0003000300030003ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="147:17" pos:end="153:56"><if pos:start="147:17" pos:end="153:56">if <condition pos:start="147:20" pos:end="151:17">(   <expr pos:start="147:24" pos:end="149:92"><operator pos:start="147:24" pos:end="147:24">(</operator><operator pos:start="147:25" pos:end="147:25">!</operator><call pos:start="147:26" pos:end="147:56"><name pos:start="147:26" pos:end="147:38">IS_INTERLACED</name><argument_list pos:start="147:39" pos:end="147:56">(<argument pos:start="147:40" pos:end="147:55"><expr pos:start="147:40" pos:end="147:55"><name pos:start="147:40" pos:end="147:46">mb_type</name><operator pos:start="147:47" pos:end="147:47">|</operator><name pos:start="147:48" pos:end="147:55">mbm_type</name></expr></argument>)</argument_list></call><operator pos:start="147:57" pos:end="147:57">)</operator>

                    <operator pos:start="149:21" pos:end="149:22">||</operator> <operator pos:start="149:24" pos:end="149:24">(</operator><operator pos:start="149:25" pos:end="149:25">(</operator><name pos:start="149:26" pos:end="149:36">FRAME_MBAFF</name> <operator pos:start="149:38" pos:end="149:39">||</operator> <operator pos:start="149:41" pos:end="149:41">(</operator><name pos:start="149:42" pos:end="149:61"><name pos:start="149:42" pos:end="149:42">s</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:61">picture_structure</name></name> <operator pos:start="149:63" pos:end="149:64">!=</operator> <name pos:start="149:66" pos:end="149:75">PICT_FRAME</name><operator pos:start="149:76" pos:end="149:76">)</operator><operator pos:start="149:77" pos:end="149:77">)</operator> <operator pos:start="149:79" pos:end="149:80">&amp;&amp;</operator> <operator pos:start="149:82" pos:end="149:82">(</operator><name pos:start="149:83" pos:end="149:85">dir</name> <operator pos:start="149:87" pos:end="149:88">==</operator> <literal type="number" pos:start="149:90" pos:end="149:90">0</literal><operator pos:start="149:91" pos:end="149:91">)</operator><operator pos:start="149:92" pos:end="149:92">)</operator></expr>

                )</condition><block type="pseudo" pos:start="153:21" pos:end="153:56"><block_content pos:start="153:21" pos:end="153:56">

                    <expr_stmt pos:start="153:21" pos:end="153:56"><expr pos:start="153:21" pos:end="153:55"><call pos:start="153:21" pos:end="153:55"><name pos:start="153:21" pos:end="153:28">AV_WN64A</name><argument_list pos:start="153:29" pos:end="153:55">(<argument pos:start="153:30" pos:end="153:31"><expr pos:start="153:30" pos:end="153:31"><name pos:start="153:30" pos:end="153:31">bS</name></expr></argument>, <argument pos:start="153:34" pos:end="153:54"><expr pos:start="153:34" pos:end="153:54"><literal type="number" pos:start="153:34" pos:end="153:54">0x0004000400040004ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="155:15" pos:end="221:13">else <block pos:start="155:20" pos:end="221:13">{<block_content pos:start="157:17" pos:end="219:17">

                <decl_stmt pos:start="157:17" pos:end="157:22"><decl pos:start="157:17" pos:end="157:21"><type pos:start="157:17" pos:end="157:19"><name pos:start="157:17" pos:end="157:19">int</name></type> <name pos:start="157:21" pos:end="157:21">i</name></decl>;</decl_stmt>

                <decl_stmt pos:start="159:17" pos:end="159:28"><decl pos:start="159:17" pos:end="159:27"><type pos:start="159:17" pos:end="159:19"><name pos:start="159:17" pos:end="159:19">int</name></type> <name pos:start="159:21" pos:end="159:27">mv_done</name></decl>;</decl_stmt>



                <if_stmt pos:start="163:17" pos:end="187:32"><if pos:start="163:17" pos:end="169:17">if<condition pos:start="163:19" pos:end="163:76">( <expr pos:start="163:21" pos:end="163:75"><name pos:start="163:21" pos:end="163:23">dir</name> <operator pos:start="163:25" pos:end="163:26">&amp;&amp;</operator> <name pos:start="163:28" pos:end="163:38">FRAME_MBAFF</name> <operator pos:start="163:40" pos:end="163:41">&amp;&amp;</operator> <call pos:start="163:43" pos:end="163:75"><name pos:start="163:43" pos:end="163:55">IS_INTERLACED</name><argument_list pos:start="163:56" pos:end="163:75">(<argument pos:start="163:57" pos:end="163:74"><expr pos:start="163:57" pos:end="163:74"><name pos:start="163:57" pos:end="163:63">mb_type</name> <operator pos:start="163:65" pos:end="163:65">^</operator> <name pos:start="163:67" pos:end="163:74">mbm_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:78" pos:end="169:17">{<block_content pos:start="165:21" pos:end="167:32">

                    <expr_stmt pos:start="165:21" pos:end="165:56"><expr pos:start="165:21" pos:end="165:55"><call pos:start="165:21" pos:end="165:55"><name pos:start="165:21" pos:end="165:28">AV_WN64A</name><argument_list pos:start="165:29" pos:end="165:55">(<argument pos:start="165:30" pos:end="165:31"><expr pos:start="165:30" pos:end="165:31"><name pos:start="165:30" pos:end="165:31">bS</name></expr></argument>, <argument pos:start="165:34" pos:end="165:54"><expr pos:start="165:34" pos:end="165:54"><literal type="number" pos:start="165:34" pos:end="165:54">0x0001000100010001ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:32"><expr pos:start="167:21" pos:end="167:31"><name pos:start="167:21" pos:end="167:27">mv_done</name> <operator pos:start="167:29" pos:end="167:29">=</operator> <literal type="number" pos:start="167:31" pos:end="167:31">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if>

                <if type="elseif" pos:start="171:17" pos:end="183:17">else if<condition pos:start="171:24" pos:end="171:94">( <expr pos:start="171:26" pos:end="171:92"><name pos:start="171:26" pos:end="171:34">mask_par0</name> <operator pos:start="171:36" pos:end="171:37">&amp;&amp;</operator> <operator pos:start="171:39" pos:end="171:39">(</operator><operator pos:start="171:40" pos:end="171:40">(</operator><name pos:start="171:41" pos:end="171:48">mbm_type</name> <operator pos:start="171:50" pos:end="171:50">&amp;</operator> <operator pos:start="171:52" pos:end="171:52">(</operator><name pos:start="171:53" pos:end="171:65">MB_TYPE_16x16</name> <operator pos:start="171:67" pos:end="171:67">|</operator> <operator pos:start="171:69" pos:end="171:69">(</operator><name pos:start="171:70" pos:end="171:81">MB_TYPE_8x16</name> <operator pos:start="171:83" pos:end="171:84">&gt;&gt;</operator> <name pos:start="171:86" pos:end="171:88">dir</name><operator pos:start="171:89" pos:end="171:89">)</operator><operator pos:start="171:90" pos:end="171:90">)</operator><operator pos:start="171:91" pos:end="171:91">)</operator><operator pos:start="171:92" pos:end="171:92">)</operator></expr> )</condition> <block pos:start="171:96" pos:end="183:17">{<block_content pos:start="173:21" pos:end="181:32">

                    <decl_stmt pos:start="173:21" pos:end="173:37"><decl pos:start="173:21" pos:end="173:36"><type pos:start="173:21" pos:end="173:23"><name pos:start="173:21" pos:end="173:23">int</name></type> <name pos:start="173:25" pos:end="173:29">b_idx</name><init pos:start="173:30" pos:end="173:36">= <expr pos:start="173:32" pos:end="173:36"><literal type="number" pos:start="173:32" pos:end="173:34">8</literal> <operator pos:start="173:34" pos:end="173:34">+</operator> <literal type="number" pos:start="173:36" pos:end="173:36">4</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="175:21" pos:end="175:52"><decl pos:start="175:21" pos:end="175:51"><type pos:start="175:21" pos:end="175:23"><name pos:start="175:21" pos:end="175:23">int</name></type> <name pos:start="175:25" pos:end="175:30">bn_idx</name><init pos:start="175:31" pos:end="175:51">= <expr pos:start="175:33" pos:end="175:51"><name pos:start="175:33" pos:end="175:37">b_idx</name> <operator pos:start="175:39" pos:end="175:39">-</operator> <operator pos:start="175:41" pos:end="175:41">(</operator><ternary pos:start="175:42" pos:end="175:50"><condition pos:start="175:42" pos:end="175:46"><expr pos:start="175:42" pos:end="175:44"><name pos:start="175:42" pos:end="175:44">dir</name></expr> ?</condition><then pos:start="175:48" pos:end="175:48"> <expr pos:start="175:48" pos:end="175:48"><literal type="number" pos:start="175:48" pos:end="175:48">8</literal></expr></then><else pos:start="175:49" pos:end="175:50">:<expr pos:start="175:50" pos:end="175:50"><literal type="number" pos:start="175:50" pos:end="175:50">1</literal></expr></else></ternary><operator pos:start="175:51" pos:end="175:51">)</operator></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="179:21" pos:end="179:90"><expr pos:start="179:21" pos:end="179:89"><name pos:start="179:21" pos:end="179:25"><name pos:start="179:21" pos:end="179:22">bS</name><index pos:start="179:23" pos:end="179:25">[<expr pos:start="179:24" pos:end="179:24"><literal type="number" pos:start="179:24" pos:end="179:24">0</literal></expr>]</index></name> <operator pos:start="179:27" pos:end="179:27">=</operator> <name pos:start="179:29" pos:end="179:33"><name pos:start="179:29" pos:end="179:30">bS</name><index pos:start="179:31" pos:end="179:33">[<expr pos:start="179:32" pos:end="179:32"><literal type="number" pos:start="179:32" pos:end="179:32">1</literal></expr>]</index></name> <operator pos:start="179:35" pos:end="179:35">=</operator> <name pos:start="179:37" pos:end="179:41"><name pos:start="179:37" pos:end="179:38">bS</name><index pos:start="179:39" pos:end="179:41">[<expr pos:start="179:40" pos:end="179:40"><literal type="number" pos:start="179:40" pos:end="179:40">2</literal></expr>]</index></name> <operator pos:start="179:43" pos:end="179:43">=</operator> <name pos:start="179:45" pos:end="179:49"><name pos:start="179:45" pos:end="179:46">bS</name><index pos:start="179:47" pos:end="179:49">[<expr pos:start="179:48" pos:end="179:48"><literal type="number" pos:start="179:48" pos:end="179:48">3</literal></expr>]</index></name> <operator pos:start="179:51" pos:end="179:51">=</operator> <call pos:start="179:53" pos:end="179:89"><name pos:start="179:53" pos:end="179:60">check_mv</name><argument_list pos:start="179:61" pos:end="179:89">(<argument pos:start="179:62" pos:end="179:62"><expr pos:start="179:62" pos:end="179:62"><name pos:start="179:62" pos:end="179:62">h</name></expr></argument>, <argument pos:start="179:65" pos:end="179:69"><expr pos:start="179:65" pos:end="179:69"><literal type="number" pos:start="179:65" pos:end="179:67">8</literal> <operator pos:start="179:67" pos:end="179:67">+</operator> <literal type="number" pos:start="179:69" pos:end="179:69">4</literal></expr></argument>, <argument pos:start="179:72" pos:end="179:77"><expr pos:start="179:72" pos:end="179:77"><name pos:start="179:72" pos:end="179:77">bn_idx</name></expr></argument>, <argument pos:start="179:80" pos:end="179:88"><expr pos:start="179:80" pos:end="179:88"><name pos:start="179:80" pos:end="179:88">mvy_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="181:21" pos:end="181:32"><expr pos:start="181:21" pos:end="181:31"><name pos:start="181:21" pos:end="181:27">mv_done</name> <operator pos:start="181:29" pos:end="181:29">=</operator> <literal type="number" pos:start="181:31" pos:end="181:31">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if>

                <else pos:start="185:17" pos:end="187:32">else<block type="pseudo" pos:start="187:21" pos:end="187:32"><block_content pos:start="187:21" pos:end="187:32">

                    <expr_stmt pos:start="187:21" pos:end="187:32"><expr pos:start="187:21" pos:end="187:31"><name pos:start="187:21" pos:end="187:27">mv_done</name> <operator pos:start="187:29" pos:end="187:29">=</operator> <literal type="number" pos:start="187:31" pos:end="187:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <for pos:start="191:17" pos:end="219:17">for<control pos:start="191:20" pos:end="191:40">( <init pos:start="191:22" pos:end="191:27"><expr pos:start="191:22" pos:end="191:26"><name pos:start="191:22" pos:end="191:22">i</name> <operator pos:start="191:24" pos:end="191:24">=</operator> <literal type="number" pos:start="191:26" pos:end="191:26">0</literal></expr>;</init> <condition pos:start="191:29" pos:end="191:34"><expr pos:start="191:29" pos:end="191:33"><name pos:start="191:29" pos:end="191:29">i</name> <operator pos:start="191:31" pos:end="191:31">&lt;</operator> <literal type="number" pos:start="191:33" pos:end="191:33">4</literal></expr>;</condition> <incr pos:start="191:36" pos:end="191:38"><expr pos:start="191:36" pos:end="191:38"><name pos:start="191:36" pos:end="191:36">i</name><operator pos:start="191:37" pos:end="191:38">++</operator></expr></incr> )</control> <block pos:start="191:42" pos:end="219:17">{<block_content pos:start="193:21" pos:end="217:21">

                    <decl_stmt pos:start="193:21" pos:end="193:45"><decl pos:start="193:21" pos:end="193:44"><type pos:start="193:21" pos:end="193:23"><name pos:start="193:21" pos:end="193:23">int</name></type> <name pos:start="193:25" pos:end="193:25">x</name> <init pos:start="193:27" pos:end="193:44">= <expr pos:start="193:29" pos:end="193:44"><ternary pos:start="193:29" pos:end="193:44"><condition pos:start="193:29" pos:end="193:38"><expr pos:start="193:29" pos:end="193:36"><name pos:start="193:29" pos:end="193:31">dir</name> <operator pos:start="193:33" pos:end="193:34">==</operator> <literal type="number" pos:start="193:36" pos:end="193:36">0</literal></expr> ?</condition><then pos:start="193:40" pos:end="193:40"> <expr pos:start="193:40" pos:end="193:40"><literal type="number" pos:start="193:40" pos:end="193:40">0</literal></expr> </then><else pos:start="193:42" pos:end="193:44">: <expr pos:start="193:44" pos:end="193:44"><name pos:start="193:44" pos:end="193:44">i</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="195:21" pos:end="195:48"><decl pos:start="195:21" pos:end="195:47"><type pos:start="195:21" pos:end="195:23"><name pos:start="195:21" pos:end="195:23">int</name></type> <name pos:start="195:25" pos:end="195:25">y</name> <init pos:start="195:27" pos:end="195:47">= <expr pos:start="195:29" pos:end="195:47"><ternary pos:start="195:29" pos:end="195:47"><condition pos:start="195:29" pos:end="195:38"><expr pos:start="195:29" pos:end="195:36"><name pos:start="195:29" pos:end="195:31">dir</name> <operator pos:start="195:33" pos:end="195:34">==</operator> <literal type="number" pos:start="195:36" pos:end="195:36">0</literal></expr> ?</condition><then pos:start="195:40" pos:end="195:40"> <expr pos:start="195:40" pos:end="195:40"><name pos:start="195:40" pos:end="195:40">i</name></expr>    </then><else pos:start="195:45" pos:end="195:47">: <expr pos:start="195:47" pos:end="195:47"><literal type="number" pos:start="195:47" pos:end="195:47">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="197:21" pos:end="197:47"><decl pos:start="197:21" pos:end="197:46"><type pos:start="197:21" pos:end="197:23"><name pos:start="197:21" pos:end="197:23">int</name></type> <name pos:start="197:25" pos:end="197:29">b_idx</name><init pos:start="197:30" pos:end="197:46">= <expr pos:start="197:32" pos:end="197:46"><literal type="number" pos:start="197:32" pos:end="197:34">8</literal> <operator pos:start="197:34" pos:end="197:34">+</operator> <literal type="number" pos:start="197:36" pos:end="197:38">4</literal> <operator pos:start="197:38" pos:end="197:38">+</operator> <name pos:start="197:40" pos:end="197:40">x</name> <operator pos:start="197:42" pos:end="197:42">+</operator> <literal type="number" pos:start="197:44" pos:end="197:44">8</literal><operator pos:start="197:45" pos:end="197:45">*</operator><name pos:start="197:46" pos:end="197:46">y</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="199:21" pos:end="199:52"><decl pos:start="199:21" pos:end="199:51"><type pos:start="199:21" pos:end="199:23"><name pos:start="199:21" pos:end="199:23">int</name></type> <name pos:start="199:25" pos:end="199:30">bn_idx</name><init pos:start="199:31" pos:end="199:51">= <expr pos:start="199:33" pos:end="199:51"><name pos:start="199:33" pos:end="199:37">b_idx</name> <operator pos:start="199:39" pos:end="199:39">-</operator> <operator pos:start="199:41" pos:end="199:41">(</operator><ternary pos:start="199:42" pos:end="199:50"><condition pos:start="199:42" pos:end="199:46"><expr pos:start="199:42" pos:end="199:44"><name pos:start="199:42" pos:end="199:44">dir</name></expr> ?</condition><then pos:start="199:48" pos:end="199:48"> <expr pos:start="199:48" pos:end="199:48"><literal type="number" pos:start="199:48" pos:end="199:48">8</literal></expr></then><else pos:start="199:49" pos:end="199:50">:<expr pos:start="199:50" pos:end="199:50"><literal type="number" pos:start="199:50" pos:end="199:50">1</literal></expr></else></ternary><operator pos:start="199:51" pos:end="199:51">)</operator></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="203:21" pos:end="217:21"><if pos:start="203:21" pos:end="209:21">if<condition pos:start="203:23" pos:end="205:57">( <expr pos:start="203:25" pos:end="205:55"><name pos:start="203:25" pos:end="203:54"><name pos:start="203:25" pos:end="203:25">h</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:47">non_zero_count_cache</name><index pos:start="203:48" pos:end="203:54">[<expr pos:start="203:49" pos:end="203:53"><name pos:start="203:49" pos:end="203:53">b_idx</name></expr>]</index></name> <operator pos:start="203:56" pos:end="203:56">|</operator>

                        <name pos:start="205:25" pos:end="205:55"><name pos:start="205:25" pos:end="205:25">h</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:47">non_zero_count_cache</name><index pos:start="205:48" pos:end="205:55">[<expr pos:start="205:49" pos:end="205:54"><name pos:start="205:49" pos:end="205:54">bn_idx</name></expr>]</index></name></expr> )</condition> <block pos:start="205:59" pos:end="209:21">{<block_content pos:start="207:25" pos:end="207:34">

                        <expr_stmt pos:start="207:25" pos:end="207:34"><expr pos:start="207:25" pos:end="207:33"><name pos:start="207:25" pos:end="207:29"><name pos:start="207:25" pos:end="207:26">bS</name><index pos:start="207:27" pos:end="207:29">[<expr pos:start="207:28" pos:end="207:28"><name pos:start="207:28" pos:end="207:28">i</name></expr>]</index></name> <operator pos:start="207:31" pos:end="207:31">=</operator> <literal type="number" pos:start="207:33" pos:end="207:33">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if>

                    <if type="elseif" pos:start="211:21" pos:end="217:21">else if<condition pos:start="211:28" pos:end="211:37">(<expr pos:start="211:29" pos:end="211:36"><operator pos:start="211:29" pos:end="211:29">!</operator><name pos:start="211:30" pos:end="211:36">mv_done</name></expr>)</condition>

                    <block pos:start="213:21" pos:end="217:21">{<block_content pos:start="215:25" pos:end="215:70">

                        <expr_stmt pos:start="215:25" pos:end="215:70"><expr pos:start="215:25" pos:end="215:69"><name pos:start="215:25" pos:end="215:29"><name pos:start="215:25" pos:end="215:26">bS</name><index pos:start="215:27" pos:end="215:29">[<expr pos:start="215:28" pos:end="215:28"><name pos:start="215:28" pos:end="215:28">i</name></expr>]</index></name> <operator pos:start="215:31" pos:end="215:31">=</operator> <call pos:start="215:33" pos:end="215:69"><name pos:start="215:33" pos:end="215:40">check_mv</name><argument_list pos:start="215:41" pos:end="215:69">(<argument pos:start="215:42" pos:end="215:42"><expr pos:start="215:42" pos:end="215:42"><name pos:start="215:42" pos:end="215:42">h</name></expr></argument>, <argument pos:start="215:45" pos:end="215:49"><expr pos:start="215:45" pos:end="215:49"><name pos:start="215:45" pos:end="215:49">b_idx</name></expr></argument>, <argument pos:start="215:52" pos:end="215:57"><expr pos:start="215:52" pos:end="215:57"><name pos:start="215:52" pos:end="215:57">bn_idx</name></expr></argument>, <argument pos:start="215:60" pos:end="215:68"><expr pos:start="215:60" pos:end="215:68"><name pos:start="215:60" pos:end="215:68">mvy_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="225:13" pos:end="225:29">/* Filter edge */</comment>

            <comment type="line" pos:start="227:13" pos:end="227:81">// Do not use s-&gt;qscale as luma quantizer because it has not the same</comment>

            <comment type="line" pos:start="229:13" pos:end="229:41">// value in IPCM macroblocks.</comment>

            <if_stmt pos:start="231:13" pos:end="291:13"><if pos:start="231:13" pos:end="291:13">if<condition pos:start="231:15" pos:end="231:39">(<expr pos:start="231:16" pos:end="231:38"><name pos:start="231:16" pos:end="231:20"><name pos:start="231:16" pos:end="231:17">bS</name><index pos:start="231:18" pos:end="231:20">[<expr pos:start="231:19" pos:end="231:19"><literal type="number" pos:start="231:19" pos:end="231:19">0</literal></expr>]</index></name><operator pos:start="231:21" pos:end="231:21">+</operator><name pos:start="231:22" pos:end="231:26"><name pos:start="231:22" pos:end="231:23">bS</name><index pos:start="231:24" pos:end="231:26">[<expr pos:start="231:25" pos:end="231:25"><literal type="number" pos:start="231:25" pos:end="231:25">1</literal></expr>]</index></name><operator pos:start="231:27" pos:end="231:27">+</operator><name pos:start="231:28" pos:end="231:32"><name pos:start="231:28" pos:end="231:29">bS</name><index pos:start="231:30" pos:end="231:32">[<expr pos:start="231:31" pos:end="231:31"><literal type="number" pos:start="231:31" pos:end="231:31">2</literal></expr>]</index></name><operator pos:start="231:33" pos:end="231:33">+</operator><name pos:start="231:34" pos:end="231:38"><name pos:start="231:34" pos:end="231:35">bS</name><index pos:start="231:36" pos:end="231:38">[<expr pos:start="231:37" pos:end="231:37"><literal type="number" pos:start="231:37" pos:end="231:37">3</literal></expr>]</index></name></expr>)</condition><block pos:start="231:40" pos:end="291:13">{<block_content pos:start="233:17" pos:end="289:17">

                <expr_stmt pos:start="233:17" pos:end="233:117"><expr pos:start="233:17" pos:end="233:116"><name pos:start="233:17" pos:end="233:18">qp</name> <operator pos:start="233:20" pos:end="233:20">=</operator> <operator pos:start="233:22" pos:end="233:22">(</operator><name pos:start="233:23" pos:end="233:62"><name pos:start="233:23" pos:end="233:23">s</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:40">current_picture</name><operator pos:start="233:41" pos:end="233:41">.</operator><name pos:start="233:42" pos:end="233:42">f</name><operator pos:start="233:43" pos:end="233:43">.</operator><name pos:start="233:44" pos:end="233:55">qscale_table</name><index pos:start="233:56" pos:end="233:62">[<expr pos:start="233:57" pos:end="233:61"><name pos:start="233:57" pos:end="233:61">mb_xy</name></expr>]</index></name> <operator pos:start="233:64" pos:end="233:64">+</operator> <name pos:start="233:66" pos:end="233:106"><name pos:start="233:66" pos:end="233:66">s</name><operator pos:start="233:67" pos:end="233:68">-&gt;</operator><name pos:start="233:69" pos:end="233:83">current_picture</name><operator pos:start="233:84" pos:end="233:84">.</operator><name pos:start="233:85" pos:end="233:85">f</name><operator pos:start="233:86" pos:end="233:86">.</operator><name pos:start="233:87" pos:end="233:98">qscale_table</name><index pos:start="233:99" pos:end="233:106">[<expr pos:start="233:100" pos:end="233:105"><name pos:start="233:100" pos:end="233:105">mbm_xy</name></expr>]</index></name> <operator pos:start="233:108" pos:end="233:108">+</operator> <literal type="number" pos:start="233:110" pos:end="233:110">1</literal><operator pos:start="233:111" pos:end="233:111">)</operator> <operator pos:start="233:113" pos:end="233:114">&gt;&gt;</operator> <literal type="number" pos:start="233:116" pos:end="233:116">1</literal></expr>;</expr_stmt>

                <comment type="line" pos:start="235:17" pos:end="235:182">//tprintf(s-&gt;avctx, "filter mb:%d/%d dir:%d edge:%d, QPy:%d, QPc:%d, QPcn:%d\n", mb_x, mb_y, dir, edge, qp, h-&gt;chroma_qp[0], s-&gt;current_picture.qscale_table[mbn_xy]);</comment>

                <expr_stmt pos:start="237:17" pos:end="237:139"><expr pos:start="237:17" pos:end="237:138"><call pos:start="237:17" pos:end="237:138"><name pos:start="237:17" pos:end="237:23">tprintf</name><argument_list pos:start="237:24" pos:end="237:138">(<argument pos:start="237:25" pos:end="237:32"><expr pos:start="237:25" pos:end="237:32"><name pos:start="237:25" pos:end="237:32"><name pos:start="237:25" pos:end="237:25">s</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:32">avctx</name></name></expr></argument>, <argument pos:start="237:35" pos:end="237:88"><expr pos:start="237:35" pos:end="237:88"><literal type="string" pos:start="237:35" pos:end="237:88">"filter mb:%d/%d dir:%d edge:%d, QPy:%d ls:%d uvls:%d"</literal></expr></argument>, <argument pos:start="237:91" pos:end="237:94"><expr pos:start="237:91" pos:end="237:94"><name pos:start="237:91" pos:end="237:94">mb_x</name></expr></argument>, <argument pos:start="237:97" pos:end="237:100"><expr pos:start="237:97" pos:end="237:100"><name pos:start="237:97" pos:end="237:100">mb_y</name></expr></argument>, <argument pos:start="237:103" pos:end="237:105"><expr pos:start="237:103" pos:end="237:105"><name pos:start="237:103" pos:end="237:105">dir</name></expr></argument>, <argument pos:start="237:108" pos:end="237:111"><expr pos:start="237:108" pos:end="237:111"><name pos:start="237:108" pos:end="237:111">edge</name></expr></argument>, <argument pos:start="237:114" pos:end="237:115"><expr pos:start="237:114" pos:end="237:115"><name pos:start="237:114" pos:end="237:115">qp</name></expr></argument>, <argument pos:start="237:118" pos:end="237:125"><expr pos:start="237:118" pos:end="237:125"><name pos:start="237:118" pos:end="237:125">linesize</name></expr></argument>, <argument pos:start="237:128" pos:end="237:137"><expr pos:start="237:128" pos:end="237:137"><name pos:start="237:128" pos:end="237:137">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="239:17" pos:end="239:120">//{ int i; for (i = 0; i &lt; 4; i++) tprintf(s-&gt;avctx, " bS[%d]:%d", i, bS[i]); tprintf(s-&gt;avctx, "\n"); }</comment>

                <expr_stmt pos:start="241:17" pos:end="241:127"><expr pos:start="241:17" pos:end="241:126"><name pos:start="241:17" pos:end="241:32"><name pos:start="241:17" pos:end="241:29">chroma_qp_avg</name><index pos:start="241:30" pos:end="241:32">[<expr pos:start="241:31" pos:end="241:31"><literal type="number" pos:start="241:31" pos:end="241:31">0</literal></expr>]</index></name> <operator pos:start="241:34" pos:end="241:34">=</operator> <operator pos:start="241:36" pos:end="241:36">(</operator><name pos:start="241:37" pos:end="241:51"><name pos:start="241:37" pos:end="241:37">h</name><operator pos:start="241:38" pos:end="241:39">-&gt;</operator><name pos:start="241:40" pos:end="241:48">chroma_qp</name><index pos:start="241:49" pos:end="241:51">[<expr pos:start="241:50" pos:end="241:50"><literal type="number" pos:start="241:50" pos:end="241:50">0</literal></expr>]</index></name> <operator pos:start="241:53" pos:end="241:53">+</operator> <call pos:start="241:55" pos:end="241:116"><name pos:start="241:55" pos:end="241:67">get_chroma_qp</name><argument_list pos:start="241:68" pos:end="241:116">(<argument pos:start="241:69" pos:end="241:69"><expr pos:start="241:69" pos:end="241:69"><name pos:start="241:69" pos:end="241:69">h</name></expr></argument>, <argument pos:start="241:72" pos:end="241:72"><expr pos:start="241:72" pos:end="241:72"><literal type="number" pos:start="241:72" pos:end="241:72">0</literal></expr></argument>, <argument pos:start="241:75" pos:end="241:115"><expr pos:start="241:75" pos:end="241:115"><name pos:start="241:75" pos:end="241:115"><name pos:start="241:75" pos:end="241:75">s</name><operator pos:start="241:76" pos:end="241:77">-&gt;</operator><name pos:start="241:78" pos:end="241:92">current_picture</name><operator pos:start="241:93" pos:end="241:93">.</operator><name pos:start="241:94" pos:end="241:94">f</name><operator pos:start="241:95" pos:end="241:95">.</operator><name pos:start="241:96" pos:end="241:107">qscale_table</name><index pos:start="241:108" pos:end="241:115">[<expr pos:start="241:109" pos:end="241:114"><name pos:start="241:109" pos:end="241:114">mbm_xy</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="241:118" pos:end="241:118">+</operator> <literal type="number" pos:start="241:120" pos:end="241:120">1</literal><operator pos:start="241:121" pos:end="241:121">)</operator> <operator pos:start="241:123" pos:end="241:124">&gt;&gt;</operator> <literal type="number" pos:start="241:126" pos:end="241:126">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:127"><expr pos:start="243:17" pos:end="243:126"><name pos:start="243:17" pos:end="243:32"><name pos:start="243:17" pos:end="243:29">chroma_qp_avg</name><index pos:start="243:30" pos:end="243:32">[<expr pos:start="243:31" pos:end="243:31"><literal type="number" pos:start="243:31" pos:end="243:31">1</literal></expr>]</index></name> <operator pos:start="243:34" pos:end="243:34">=</operator> <operator pos:start="243:36" pos:end="243:36">(</operator><name pos:start="243:37" pos:end="243:51"><name pos:start="243:37" pos:end="243:37">h</name><operator pos:start="243:38" pos:end="243:39">-&gt;</operator><name pos:start="243:40" pos:end="243:48">chroma_qp</name><index pos:start="243:49" pos:end="243:51">[<expr pos:start="243:50" pos:end="243:50"><literal type="number" pos:start="243:50" pos:end="243:50">1</literal></expr>]</index></name> <operator pos:start="243:53" pos:end="243:53">+</operator> <call pos:start="243:55" pos:end="243:116"><name pos:start="243:55" pos:end="243:67">get_chroma_qp</name><argument_list pos:start="243:68" pos:end="243:116">(<argument pos:start="243:69" pos:end="243:69"><expr pos:start="243:69" pos:end="243:69"><name pos:start="243:69" pos:end="243:69">h</name></expr></argument>, <argument pos:start="243:72" pos:end="243:72"><expr pos:start="243:72" pos:end="243:72"><literal type="number" pos:start="243:72" pos:end="243:72">1</literal></expr></argument>, <argument pos:start="243:75" pos:end="243:115"><expr pos:start="243:75" pos:end="243:115"><name pos:start="243:75" pos:end="243:115"><name pos:start="243:75" pos:end="243:75">s</name><operator pos:start="243:76" pos:end="243:77">-&gt;</operator><name pos:start="243:78" pos:end="243:92">current_picture</name><operator pos:start="243:93" pos:end="243:93">.</operator><name pos:start="243:94" pos:end="243:94">f</name><operator pos:start="243:95" pos:end="243:95">.</operator><name pos:start="243:96" pos:end="243:107">qscale_table</name><index pos:start="243:108" pos:end="243:115">[<expr pos:start="243:109" pos:end="243:114"><name pos:start="243:109" pos:end="243:114">mbm_xy</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="243:118" pos:end="243:118">+</operator> <literal type="number" pos:start="243:120" pos:end="243:120">1</literal><operator pos:start="243:121" pos:end="243:121">)</operator> <operator pos:start="243:123" pos:end="243:124">&gt;&gt;</operator> <literal type="number" pos:start="243:126" pos:end="243:126">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="245:17" pos:end="289:17"><if pos:start="245:17" pos:end="267:17">if<condition pos:start="245:19" pos:end="245:30">( <expr pos:start="245:21" pos:end="245:28"><name pos:start="245:21" pos:end="245:23">dir</name> <operator pos:start="245:25" pos:end="245:26">==</operator> <literal type="number" pos:start="245:28" pos:end="245:28">0</literal></expr> )</condition> <block pos:start="245:32" pos:end="267:17">{<block_content pos:start="247:21" pos:end="265:21">

                    <expr_stmt pos:start="247:21" pos:end="247:70"><expr pos:start="247:21" pos:end="247:69"><call pos:start="247:21" pos:end="247:69"><name pos:start="247:21" pos:end="247:35">filter_mb_edgev</name><argument_list pos:start="247:36" pos:end="247:69">( <argument pos:start="247:38" pos:end="247:46"><expr pos:start="247:38" pos:end="247:46"><operator pos:start="247:38" pos:end="247:38">&amp;</operator><name pos:start="247:39" pos:end="247:46"><name pos:start="247:39" pos:end="247:43">img_y</name><index pos:start="247:44" pos:end="247:46">[<expr pos:start="247:45" pos:end="247:45"><literal type="number" pos:start="247:45" pos:end="247:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="247:49" pos:end="247:56"><expr pos:start="247:49" pos:end="247:56"><name pos:start="247:49" pos:end="247:56">linesize</name></expr></argument>, <argument pos:start="247:59" pos:end="247:60"><expr pos:start="247:59" pos:end="247:60"><name pos:start="247:59" pos:end="247:60">bS</name></expr></argument>, <argument pos:start="247:63" pos:end="247:64"><expr pos:start="247:63" pos:end="247:64"><name pos:start="247:63" pos:end="247:64">qp</name></expr></argument>, <argument pos:start="247:67" pos:end="247:67"><expr pos:start="247:67" pos:end="247:67"><name pos:start="247:67" pos:end="247:67">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="249:21" pos:end="265:21"><if pos:start="249:21" pos:end="265:21">if <condition pos:start="249:24" pos:end="249:31">(<expr pos:start="249:25" pos:end="249:30"><name pos:start="249:25" pos:end="249:30">chroma</name></expr>)</condition> <block pos:start="249:33" pos:end="265:21">{<block_content pos:start="251:25" pos:end="263:25">

                        <if_stmt pos:start="251:25" pos:end="263:25"><if pos:start="251:25" pos:end="257:25">if <condition pos:start="251:28" pos:end="251:38">(<expr pos:start="251:29" pos:end="251:37"><name pos:start="251:29" pos:end="251:37">chroma444</name></expr>)</condition> <block pos:start="251:40" pos:end="257:25">{<block_content pos:start="253:29" pos:end="255:95">

                            <expr_stmt pos:start="253:29" pos:end="253:95"><expr pos:start="253:29" pos:end="253:94"><call pos:start="253:29" pos:end="253:94"><name pos:start="253:29" pos:end="253:43">filter_mb_edgev</name> <argument_list pos:start="253:45" pos:end="253:94">( <argument pos:start="253:47" pos:end="253:56"><expr pos:start="253:47" pos:end="253:56"><operator pos:start="253:47" pos:end="253:47">&amp;</operator><name pos:start="253:48" pos:end="253:56"><name pos:start="253:48" pos:end="253:53">img_cb</name><index pos:start="253:54" pos:end="253:56">[<expr pos:start="253:55" pos:end="253:55"><literal type="number" pos:start="253:55" pos:end="253:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="253:59" pos:end="253:68"><expr pos:start="253:59" pos:end="253:68"><name pos:start="253:59" pos:end="253:68">uvlinesize</name></expr></argument>, <argument pos:start="253:71" pos:end="253:72"><expr pos:start="253:71" pos:end="253:72"><name pos:start="253:71" pos:end="253:72">bS</name></expr></argument>, <argument pos:start="253:75" pos:end="253:90"><expr pos:start="253:75" pos:end="253:90"><name pos:start="253:75" pos:end="253:90"><name pos:start="253:75" pos:end="253:87">chroma_qp_avg</name><index pos:start="253:88" pos:end="253:90">[<expr pos:start="253:89" pos:end="253:89"><literal type="number" pos:start="253:89" pos:end="253:89">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="253:93" pos:end="253:93"><expr pos:start="253:93" pos:end="253:93"><name pos:start="253:93" pos:end="253:93">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="255:29" pos:end="255:95"><expr pos:start="255:29" pos:end="255:94"><call pos:start="255:29" pos:end="255:94"><name pos:start="255:29" pos:end="255:43">filter_mb_edgev</name> <argument_list pos:start="255:45" pos:end="255:94">( <argument pos:start="255:47" pos:end="255:56"><expr pos:start="255:47" pos:end="255:56"><operator pos:start="255:47" pos:end="255:47">&amp;</operator><name pos:start="255:48" pos:end="255:56"><name pos:start="255:48" pos:end="255:53">img_cr</name><index pos:start="255:54" pos:end="255:56">[<expr pos:start="255:55" pos:end="255:55"><literal type="number" pos:start="255:55" pos:end="255:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="255:59" pos:end="255:68"><expr pos:start="255:59" pos:end="255:68"><name pos:start="255:59" pos:end="255:68">uvlinesize</name></expr></argument>, <argument pos:start="255:71" pos:end="255:72"><expr pos:start="255:71" pos:end="255:72"><name pos:start="255:71" pos:end="255:72">bS</name></expr></argument>, <argument pos:start="255:75" pos:end="255:90"><expr pos:start="255:75" pos:end="255:90"><name pos:start="255:75" pos:end="255:90"><name pos:start="255:75" pos:end="255:87">chroma_qp_avg</name><index pos:start="255:88" pos:end="255:90">[<expr pos:start="255:89" pos:end="255:89"><literal type="number" pos:start="255:89" pos:end="255:89">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="255:93" pos:end="255:93"><expr pos:start="255:93" pos:end="255:93"><name pos:start="255:93" pos:end="255:93">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="257:27" pos:end="263:25">else <block pos:start="257:32" pos:end="263:25">{<block_content pos:start="259:29" pos:end="261:95">

                            <expr_stmt pos:start="259:29" pos:end="259:95"><expr pos:start="259:29" pos:end="259:94"><call pos:start="259:29" pos:end="259:94"><name pos:start="259:29" pos:end="259:44">filter_mb_edgecv</name><argument_list pos:start="259:45" pos:end="259:94">( <argument pos:start="259:47" pos:end="259:56"><expr pos:start="259:47" pos:end="259:56"><operator pos:start="259:47" pos:end="259:47">&amp;</operator><name pos:start="259:48" pos:end="259:56"><name pos:start="259:48" pos:end="259:53">img_cb</name><index pos:start="259:54" pos:end="259:56">[<expr pos:start="259:55" pos:end="259:55"><literal type="number" pos:start="259:55" pos:end="259:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="259:59" pos:end="259:68"><expr pos:start="259:59" pos:end="259:68"><name pos:start="259:59" pos:end="259:68">uvlinesize</name></expr></argument>, <argument pos:start="259:71" pos:end="259:72"><expr pos:start="259:71" pos:end="259:72"><name pos:start="259:71" pos:end="259:72">bS</name></expr></argument>, <argument pos:start="259:75" pos:end="259:90"><expr pos:start="259:75" pos:end="259:90"><name pos:start="259:75" pos:end="259:90"><name pos:start="259:75" pos:end="259:87">chroma_qp_avg</name><index pos:start="259:88" pos:end="259:90">[<expr pos:start="259:89" pos:end="259:89"><literal type="number" pos:start="259:89" pos:end="259:89">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="259:93" pos:end="259:93"><expr pos:start="259:93" pos:end="259:93"><name pos:start="259:93" pos:end="259:93">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="261:29" pos:end="261:95"><expr pos:start="261:29" pos:end="261:94"><call pos:start="261:29" pos:end="261:94"><name pos:start="261:29" pos:end="261:44">filter_mb_edgecv</name><argument_list pos:start="261:45" pos:end="261:94">( <argument pos:start="261:47" pos:end="261:56"><expr pos:start="261:47" pos:end="261:56"><operator pos:start="261:47" pos:end="261:47">&amp;</operator><name pos:start="261:48" pos:end="261:56"><name pos:start="261:48" pos:end="261:53">img_cr</name><index pos:start="261:54" pos:end="261:56">[<expr pos:start="261:55" pos:end="261:55"><literal type="number" pos:start="261:55" pos:end="261:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="261:59" pos:end="261:68"><expr pos:start="261:59" pos:end="261:68"><name pos:start="261:59" pos:end="261:68">uvlinesize</name></expr></argument>, <argument pos:start="261:71" pos:end="261:72"><expr pos:start="261:71" pos:end="261:72"><name pos:start="261:71" pos:end="261:72">bS</name></expr></argument>, <argument pos:start="261:75" pos:end="261:90"><expr pos:start="261:75" pos:end="261:90"><name pos:start="261:75" pos:end="261:90"><name pos:start="261:75" pos:end="261:87">chroma_qp_avg</name><index pos:start="261:88" pos:end="261:90">[<expr pos:start="261:89" pos:end="261:89"><literal type="number" pos:start="261:89" pos:end="261:89">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="261:93" pos:end="261:93"><expr pos:start="261:93" pos:end="261:93"><name pos:start="261:93" pos:end="261:93">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="267:19" pos:end="289:17">else <block pos:start="267:24" pos:end="289:17">{<block_content pos:start="269:21" pos:end="287:21">

                    <expr_stmt pos:start="269:21" pos:end="269:70"><expr pos:start="269:21" pos:end="269:69"><call pos:start="269:21" pos:end="269:69"><name pos:start="269:21" pos:end="269:35">filter_mb_edgeh</name><argument_list pos:start="269:36" pos:end="269:69">( <argument pos:start="269:38" pos:end="269:46"><expr pos:start="269:38" pos:end="269:46"><operator pos:start="269:38" pos:end="269:38">&amp;</operator><name pos:start="269:39" pos:end="269:46"><name pos:start="269:39" pos:end="269:43">img_y</name><index pos:start="269:44" pos:end="269:46">[<expr pos:start="269:45" pos:end="269:45"><literal type="number" pos:start="269:45" pos:end="269:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="269:49" pos:end="269:56"><expr pos:start="269:49" pos:end="269:56"><name pos:start="269:49" pos:end="269:56">linesize</name></expr></argument>, <argument pos:start="269:59" pos:end="269:60"><expr pos:start="269:59" pos:end="269:60"><name pos:start="269:59" pos:end="269:60">bS</name></expr></argument>, <argument pos:start="269:63" pos:end="269:64"><expr pos:start="269:63" pos:end="269:64"><name pos:start="269:63" pos:end="269:64">qp</name></expr></argument>, <argument pos:start="269:67" pos:end="269:67"><expr pos:start="269:67" pos:end="269:67"><name pos:start="269:67" pos:end="269:67">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="271:21" pos:end="287:21"><if pos:start="271:21" pos:end="287:21">if <condition pos:start="271:24" pos:end="271:31">(<expr pos:start="271:25" pos:end="271:30"><name pos:start="271:25" pos:end="271:30">chroma</name></expr>)</condition> <block pos:start="271:33" pos:end="287:21">{<block_content pos:start="273:25" pos:end="285:25">

                        <if_stmt pos:start="273:25" pos:end="285:25"><if pos:start="273:25" pos:end="279:25">if <condition pos:start="273:28" pos:end="273:38">(<expr pos:start="273:29" pos:end="273:37"><name pos:start="273:29" pos:end="273:37">chroma444</name></expr>)</condition> <block pos:start="273:40" pos:end="279:25">{<block_content pos:start="275:29" pos:end="277:95">

                            <expr_stmt pos:start="275:29" pos:end="275:95"><expr pos:start="275:29" pos:end="275:94"><call pos:start="275:29" pos:end="275:94"><name pos:start="275:29" pos:end="275:43">filter_mb_edgeh</name> <argument_list pos:start="275:45" pos:end="275:94">( <argument pos:start="275:47" pos:end="275:56"><expr pos:start="275:47" pos:end="275:56"><operator pos:start="275:47" pos:end="275:47">&amp;</operator><name pos:start="275:48" pos:end="275:56"><name pos:start="275:48" pos:end="275:53">img_cb</name><index pos:start="275:54" pos:end="275:56">[<expr pos:start="275:55" pos:end="275:55"><literal type="number" pos:start="275:55" pos:end="275:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="275:59" pos:end="275:68"><expr pos:start="275:59" pos:end="275:68"><name pos:start="275:59" pos:end="275:68">uvlinesize</name></expr></argument>, <argument pos:start="275:71" pos:end="275:72"><expr pos:start="275:71" pos:end="275:72"><name pos:start="275:71" pos:end="275:72">bS</name></expr></argument>, <argument pos:start="275:75" pos:end="275:90"><expr pos:start="275:75" pos:end="275:90"><name pos:start="275:75" pos:end="275:90"><name pos:start="275:75" pos:end="275:87">chroma_qp_avg</name><index pos:start="275:88" pos:end="275:90">[<expr pos:start="275:89" pos:end="275:89"><literal type="number" pos:start="275:89" pos:end="275:89">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="275:93" pos:end="275:93"><expr pos:start="275:93" pos:end="275:93"><name pos:start="275:93" pos:end="275:93">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="277:29" pos:end="277:95"><expr pos:start="277:29" pos:end="277:94"><call pos:start="277:29" pos:end="277:94"><name pos:start="277:29" pos:end="277:43">filter_mb_edgeh</name> <argument_list pos:start="277:45" pos:end="277:94">( <argument pos:start="277:47" pos:end="277:56"><expr pos:start="277:47" pos:end="277:56"><operator pos:start="277:47" pos:end="277:47">&amp;</operator><name pos:start="277:48" pos:end="277:56"><name pos:start="277:48" pos:end="277:53">img_cr</name><index pos:start="277:54" pos:end="277:56">[<expr pos:start="277:55" pos:end="277:55"><literal type="number" pos:start="277:55" pos:end="277:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="277:59" pos:end="277:68"><expr pos:start="277:59" pos:end="277:68"><name pos:start="277:59" pos:end="277:68">uvlinesize</name></expr></argument>, <argument pos:start="277:71" pos:end="277:72"><expr pos:start="277:71" pos:end="277:72"><name pos:start="277:71" pos:end="277:72">bS</name></expr></argument>, <argument pos:start="277:75" pos:end="277:90"><expr pos:start="277:75" pos:end="277:90"><name pos:start="277:75" pos:end="277:90"><name pos:start="277:75" pos:end="277:87">chroma_qp_avg</name><index pos:start="277:88" pos:end="277:90">[<expr pos:start="277:89" pos:end="277:89"><literal type="number" pos:start="277:89" pos:end="277:89">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="277:93" pos:end="277:93"><expr pos:start="277:93" pos:end="277:93"><name pos:start="277:93" pos:end="277:93">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="279:27" pos:end="285:25">else <block pos:start="279:32" pos:end="285:25">{<block_content pos:start="281:29" pos:end="283:95">

                            <expr_stmt pos:start="281:29" pos:end="281:95"><expr pos:start="281:29" pos:end="281:94"><call pos:start="281:29" pos:end="281:94"><name pos:start="281:29" pos:end="281:44">filter_mb_edgech</name><argument_list pos:start="281:45" pos:end="281:94">( <argument pos:start="281:47" pos:end="281:56"><expr pos:start="281:47" pos:end="281:56"><operator pos:start="281:47" pos:end="281:47">&amp;</operator><name pos:start="281:48" pos:end="281:56"><name pos:start="281:48" pos:end="281:53">img_cb</name><index pos:start="281:54" pos:end="281:56">[<expr pos:start="281:55" pos:end="281:55"><literal type="number" pos:start="281:55" pos:end="281:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="281:59" pos:end="281:68"><expr pos:start="281:59" pos:end="281:68"><name pos:start="281:59" pos:end="281:68">uvlinesize</name></expr></argument>, <argument pos:start="281:71" pos:end="281:72"><expr pos:start="281:71" pos:end="281:72"><name pos:start="281:71" pos:end="281:72">bS</name></expr></argument>, <argument pos:start="281:75" pos:end="281:90"><expr pos:start="281:75" pos:end="281:90"><name pos:start="281:75" pos:end="281:90"><name pos:start="281:75" pos:end="281:87">chroma_qp_avg</name><index pos:start="281:88" pos:end="281:90">[<expr pos:start="281:89" pos:end="281:89"><literal type="number" pos:start="281:89" pos:end="281:89">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="281:93" pos:end="281:93"><expr pos:start="281:93" pos:end="281:93"><name pos:start="281:93" pos:end="281:93">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="283:29" pos:end="283:95"><expr pos:start="283:29" pos:end="283:94"><call pos:start="283:29" pos:end="283:94"><name pos:start="283:29" pos:end="283:44">filter_mb_edgech</name><argument_list pos:start="283:45" pos:end="283:94">( <argument pos:start="283:47" pos:end="283:56"><expr pos:start="283:47" pos:end="283:56"><operator pos:start="283:47" pos:end="283:47">&amp;</operator><name pos:start="283:48" pos:end="283:56"><name pos:start="283:48" pos:end="283:53">img_cr</name><index pos:start="283:54" pos:end="283:56">[<expr pos:start="283:55" pos:end="283:55"><literal type="number" pos:start="283:55" pos:end="283:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:59" pos:end="283:68"><expr pos:start="283:59" pos:end="283:68"><name pos:start="283:59" pos:end="283:68">uvlinesize</name></expr></argument>, <argument pos:start="283:71" pos:end="283:72"><expr pos:start="283:71" pos:end="283:72"><name pos:start="283:71" pos:end="283:72">bS</name></expr></argument>, <argument pos:start="283:75" pos:end="283:90"><expr pos:start="283:75" pos:end="283:90"><name pos:start="283:75" pos:end="283:90"><name pos:start="283:75" pos:end="283:87">chroma_qp_avg</name><index pos:start="283:88" pos:end="283:90">[<expr pos:start="283:89" pos:end="283:89"><literal type="number" pos:start="283:89" pos:end="283:89">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:93" pos:end="283:93"><expr pos:start="283:93" pos:end="283:93"><name pos:start="283:93" pos:end="283:93">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="299:5" pos:end="299:22">/* Calculate bS */</comment>

    <for pos:start="301:5" pos:end="455:5">for<control pos:start="301:8" pos:end="301:41">( <init pos:start="301:10" pos:end="301:18"><expr pos:start="301:10" pos:end="301:17"><name pos:start="301:10" pos:end="301:13">edge</name> <operator pos:start="301:15" pos:end="301:15">=</operator> <literal type="number" pos:start="301:17" pos:end="301:17">1</literal></expr>;</init> <condition pos:start="301:20" pos:end="301:32"><expr pos:start="301:20" pos:end="301:31"><name pos:start="301:20" pos:end="301:23">edge</name> <operator pos:start="301:25" pos:end="301:25">&lt;</operator> <name pos:start="301:27" pos:end="301:31">edges</name></expr>;</condition> <incr pos:start="301:34" pos:end="301:39"><expr pos:start="301:34" pos:end="301:39"><name pos:start="301:34" pos:end="301:37">edge</name><operator pos:start="301:38" pos:end="301:39">++</operator></expr></incr> )</control> <block pos:start="301:43" pos:end="455:5">{<block_content pos:start="303:9" pos:end="453:9">

        <expr_stmt pos:start="303:9" pos:end="303:43"><expr pos:start="303:9" pos:end="303:42"><call pos:start="303:9" pos:end="303:39"><name pos:start="303:9" pos:end="303:23">DECLARE_ALIGNED</name><argument_list pos:start="303:24" pos:end="303:39">(<argument pos:start="303:25" pos:end="303:25"><expr pos:start="303:25" pos:end="303:25"><literal type="number" pos:start="303:25" pos:end="303:25">8</literal></expr></argument>, <argument pos:start="303:28" pos:end="303:34"><expr pos:start="303:28" pos:end="303:34"><name pos:start="303:28" pos:end="303:34">int16_t</name></expr></argument>, <argument pos:start="303:37" pos:end="303:38"><expr pos:start="303:37" pos:end="303:38"><name pos:start="303:37" pos:end="303:38">bS</name></expr></argument>)</argument_list></call><index pos:start="303:40" pos:end="303:42">[<expr pos:start="303:41" pos:end="303:41"><literal type="number" pos:start="303:41" pos:end="303:41">4</literal></expr>]</index></expr>;</expr_stmt>

        <decl_stmt pos:start="305:9" pos:end="305:15"><decl pos:start="305:9" pos:end="305:14"><type pos:start="305:9" pos:end="305:11"><name pos:start="305:9" pos:end="305:11">int</name></type> <name pos:start="305:13" pos:end="305:14">qp</name></decl>;</decl_stmt>



        <if_stmt pos:start="309:9" pos:end="311:21"><if pos:start="309:9" pos:end="311:21">if<condition pos:start="309:11" pos:end="309:45">( <expr pos:start="309:13" pos:end="309:43"><call pos:start="309:13" pos:end="309:43"><name pos:start="309:13" pos:end="309:21">IS_8x8DCT</name><argument_list pos:start="309:22" pos:end="309:43">(<argument pos:start="309:23" pos:end="309:42"><expr pos:start="309:23" pos:end="309:42"><name pos:start="309:23" pos:end="309:29">mb_type</name> <operator pos:start="309:31" pos:end="309:31">&amp;</operator> <operator pos:start="309:33" pos:end="309:33">(</operator><name pos:start="309:34" pos:end="309:37">edge</name><operator pos:start="309:38" pos:end="309:39">&lt;&lt;</operator><literal type="number" pos:start="309:40" pos:end="309:41">24</literal><operator pos:start="309:42" pos:end="309:42">)</operator></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo" pos:start="311:13" pos:end="311:21"><block_content pos:start="311:13" pos:end="311:21"> <comment type="line" pos:start="309:47" pos:end="309:79">// (edge&amp;1) &amp;&amp; IS_8x8DCT(mb_type)</comment>

            <continue pos:start="311:13" pos:end="311:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="315:9" pos:end="391:9"><if pos:start="315:9" pos:end="319:9">if<condition pos:start="315:11" pos:end="315:30">( <expr pos:start="315:13" pos:end="315:29"><call pos:start="315:13" pos:end="315:29"><name pos:start="315:13" pos:end="315:20">IS_INTRA</name><argument_list pos:start="315:21" pos:end="315:29">(<argument pos:start="315:22" pos:end="315:28"><expr pos:start="315:22" pos:end="315:28"><name pos:start="315:22" pos:end="315:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="315:32" pos:end="319:9">{<block_content pos:start="317:13" pos:end="317:48">

            <expr_stmt pos:start="317:13" pos:end="317:48"><expr pos:start="317:13" pos:end="317:47"><call pos:start="317:13" pos:end="317:47"><name pos:start="317:13" pos:end="317:20">AV_WN64A</name><argument_list pos:start="317:21" pos:end="317:47">(<argument pos:start="317:22" pos:end="317:23"><expr pos:start="317:22" pos:end="317:23"><name pos:start="317:22" pos:end="317:23">bS</name></expr></argument>, <argument pos:start="317:26" pos:end="317:46"><expr pos:start="317:26" pos:end="317:46"><literal type="number" pos:start="317:26" pos:end="317:46">0x0003000300030003ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="319:11" pos:end="391:9">else <block pos:start="319:16" pos:end="391:9">{<block_content pos:start="321:13" pos:end="389:25">

            <decl_stmt pos:start="321:13" pos:end="321:18"><decl pos:start="321:13" pos:end="321:17"><type pos:start="321:13" pos:end="321:15"><name pos:start="321:13" pos:end="321:15">int</name></type> <name pos:start="321:17" pos:end="321:17">i</name></decl>;</decl_stmt>

            <decl_stmt pos:start="323:13" pos:end="323:24"><decl pos:start="323:13" pos:end="323:23"><type pos:start="323:13" pos:end="323:15"><name pos:start="323:13" pos:end="323:15">int</name></type> <name pos:start="323:17" pos:end="323:23">mv_done</name></decl>;</decl_stmt>



            <if_stmt pos:start="327:13" pos:end="351:28"><if pos:start="327:13" pos:end="333:13">if<condition pos:start="327:15" pos:end="327:34">( <expr pos:start="327:17" pos:end="327:32"><name pos:start="327:17" pos:end="327:20">edge</name> <operator pos:start="327:22" pos:end="327:22">&amp;</operator> <name pos:start="327:24" pos:end="327:32">mask_edge</name></expr> )</condition> <block pos:start="327:36" pos:end="333:13">{<block_content pos:start="329:17" pos:end="331:28">

                <expr_stmt pos:start="329:17" pos:end="329:30"><expr pos:start="329:17" pos:end="329:29"><call pos:start="329:17" pos:end="329:29"><name pos:start="329:17" pos:end="329:25">AV_ZERO64</name><argument_list pos:start="329:26" pos:end="329:29">(<argument pos:start="329:27" pos:end="329:28"><expr pos:start="329:27" pos:end="329:28"><name pos:start="329:27" pos:end="329:28">bS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:28"><expr pos:start="331:17" pos:end="331:27"><name pos:start="331:17" pos:end="331:23">mv_done</name> <operator pos:start="331:25" pos:end="331:25">=</operator> <literal type="number" pos:start="331:27" pos:end="331:27">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <if type="elseif" pos:start="335:13" pos:end="347:13">else if<condition pos:start="335:20" pos:end="335:32">( <expr pos:start="335:22" pos:end="335:30"><name pos:start="335:22" pos:end="335:30">mask_par0</name></expr> )</condition> <block pos:start="335:34" pos:end="347:13">{<block_content pos:start="337:17" pos:end="345:28">

                <decl_stmt pos:start="337:17" pos:end="337:54"><decl pos:start="337:17" pos:end="337:53"><type pos:start="337:17" pos:end="337:19"><name pos:start="337:17" pos:end="337:19">int</name></type> <name pos:start="337:21" pos:end="337:25">b_idx</name><init pos:start="337:26" pos:end="337:53">= <expr pos:start="337:28" pos:end="337:53"><literal type="number" pos:start="337:28" pos:end="337:30">8</literal> <operator pos:start="337:30" pos:end="337:30">+</operator> <literal type="number" pos:start="337:32" pos:end="337:34">4</literal> <operator pos:start="337:34" pos:end="337:34">+</operator> <name pos:start="337:36" pos:end="337:39">edge</name> <operator pos:start="337:41" pos:end="337:41">*</operator> <operator pos:start="337:43" pos:end="337:43">(</operator><ternary pos:start="337:44" pos:end="337:52"><condition pos:start="337:44" pos:end="337:48"><expr pos:start="337:44" pos:end="337:46"><name pos:start="337:44" pos:end="337:46">dir</name></expr> ?</condition><then pos:start="337:50" pos:end="337:50"> <expr pos:start="337:50" pos:end="337:50"><literal type="number" pos:start="337:50" pos:end="337:50">8</literal></expr></then><else pos:start="337:51" pos:end="337:52">:<expr pos:start="337:52" pos:end="337:52"><literal type="number" pos:start="337:52" pos:end="337:52">1</literal></expr></else></ternary><operator pos:start="337:53" pos:end="337:53">)</operator></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="339:17" pos:end="339:48"><decl pos:start="339:17" pos:end="339:47"><type pos:start="339:17" pos:end="339:19"><name pos:start="339:17" pos:end="339:19">int</name></type> <name pos:start="339:21" pos:end="339:26">bn_idx</name><init pos:start="339:27" pos:end="339:47">= <expr pos:start="339:29" pos:end="339:47"><name pos:start="339:29" pos:end="339:33">b_idx</name> <operator pos:start="339:35" pos:end="339:35">-</operator> <operator pos:start="339:37" pos:end="339:37">(</operator><ternary pos:start="339:38" pos:end="339:46"><condition pos:start="339:38" pos:end="339:42"><expr pos:start="339:38" pos:end="339:40"><name pos:start="339:38" pos:end="339:40">dir</name></expr> ?</condition><then pos:start="339:44" pos:end="339:44"> <expr pos:start="339:44" pos:end="339:44"><literal type="number" pos:start="339:44" pos:end="339:44">8</literal></expr></then><else pos:start="339:45" pos:end="339:46">:<expr pos:start="339:46" pos:end="339:46"><literal type="number" pos:start="339:46" pos:end="339:46">1</literal></expr></else></ternary><operator pos:start="339:47" pos:end="339:47">)</operator></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="343:17" pos:end="343:86"><expr pos:start="343:17" pos:end="343:85"><name pos:start="343:17" pos:end="343:21"><name pos:start="343:17" pos:end="343:18">bS</name><index pos:start="343:19" pos:end="343:21">[<expr pos:start="343:20" pos:end="343:20"><literal type="number" pos:start="343:20" pos:end="343:20">0</literal></expr>]</index></name> <operator pos:start="343:23" pos:end="343:23">=</operator> <name pos:start="343:25" pos:end="343:29"><name pos:start="343:25" pos:end="343:26">bS</name><index pos:start="343:27" pos:end="343:29">[<expr pos:start="343:28" pos:end="343:28"><literal type="number" pos:start="343:28" pos:end="343:28">1</literal></expr>]</index></name> <operator pos:start="343:31" pos:end="343:31">=</operator> <name pos:start="343:33" pos:end="343:37"><name pos:start="343:33" pos:end="343:34">bS</name><index pos:start="343:35" pos:end="343:37">[<expr pos:start="343:36" pos:end="343:36"><literal type="number" pos:start="343:36" pos:end="343:36">2</literal></expr>]</index></name> <operator pos:start="343:39" pos:end="343:39">=</operator> <name pos:start="343:41" pos:end="343:45"><name pos:start="343:41" pos:end="343:42">bS</name><index pos:start="343:43" pos:end="343:45">[<expr pos:start="343:44" pos:end="343:44"><literal type="number" pos:start="343:44" pos:end="343:44">3</literal></expr>]</index></name> <operator pos:start="343:47" pos:end="343:47">=</operator> <call pos:start="343:49" pos:end="343:85"><name pos:start="343:49" pos:end="343:56">check_mv</name><argument_list pos:start="343:57" pos:end="343:85">(<argument pos:start="343:58" pos:end="343:58"><expr pos:start="343:58" pos:end="343:58"><name pos:start="343:58" pos:end="343:58">h</name></expr></argument>, <argument pos:start="343:61" pos:end="343:65"><expr pos:start="343:61" pos:end="343:65"><name pos:start="343:61" pos:end="343:65">b_idx</name></expr></argument>, <argument pos:start="343:68" pos:end="343:73"><expr pos:start="343:68" pos:end="343:73"><name pos:start="343:68" pos:end="343:73">bn_idx</name></expr></argument>, <argument pos:start="343:76" pos:end="343:84"><expr pos:start="343:76" pos:end="343:84"><name pos:start="343:76" pos:end="343:84">mvy_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:28"><expr pos:start="345:17" pos:end="345:27"><name pos:start="345:17" pos:end="345:23">mv_done</name> <operator pos:start="345:25" pos:end="345:25">=</operator> <literal type="number" pos:start="345:27" pos:end="345:27">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="349:13" pos:end="351:28">else<block type="pseudo" pos:start="351:17" pos:end="351:28"><block_content pos:start="351:17" pos:end="351:28">

                <expr_stmt pos:start="351:17" pos:end="351:28"><expr pos:start="351:17" pos:end="351:27"><name pos:start="351:17" pos:end="351:23">mv_done</name> <operator pos:start="351:25" pos:end="351:25">=</operator> <literal type="number" pos:start="351:27" pos:end="351:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <for pos:start="355:13" pos:end="383:13">for<control pos:start="355:16" pos:end="355:36">( <init pos:start="355:18" pos:end="355:23"><expr pos:start="355:18" pos:end="355:22"><name pos:start="355:18" pos:end="355:18">i</name> <operator pos:start="355:20" pos:end="355:20">=</operator> <literal type="number" pos:start="355:22" pos:end="355:22">0</literal></expr>;</init> <condition pos:start="355:25" pos:end="355:30"><expr pos:start="355:25" pos:end="355:29"><name pos:start="355:25" pos:end="355:25">i</name> <operator pos:start="355:27" pos:end="355:27">&lt;</operator> <literal type="number" pos:start="355:29" pos:end="355:29">4</literal></expr>;</condition> <incr pos:start="355:32" pos:end="355:34"><expr pos:start="355:32" pos:end="355:34"><name pos:start="355:32" pos:end="355:32">i</name><operator pos:start="355:33" pos:end="355:34">++</operator></expr></incr> )</control> <block pos:start="355:38" pos:end="383:13">{<block_content pos:start="357:17" pos:end="381:17">

                <decl_stmt pos:start="357:17" pos:end="357:44"><decl pos:start="357:17" pos:end="357:43"><type pos:start="357:17" pos:end="357:19"><name pos:start="357:17" pos:end="357:19">int</name></type> <name pos:start="357:21" pos:end="357:21">x</name> <init pos:start="357:23" pos:end="357:43">= <expr pos:start="357:25" pos:end="357:43"><ternary pos:start="357:25" pos:end="357:43"><condition pos:start="357:25" pos:end="357:34"><expr pos:start="357:25" pos:end="357:32"><name pos:start="357:25" pos:end="357:27">dir</name> <operator pos:start="357:29" pos:end="357:30">==</operator> <literal type="number" pos:start="357:32" pos:end="357:32">0</literal></expr> ?</condition><then pos:start="357:36" pos:end="357:39"> <expr pos:start="357:36" pos:end="357:39"><name pos:start="357:36" pos:end="357:39">edge</name></expr> </then><else pos:start="357:41" pos:end="357:43">: <expr pos:start="357:43" pos:end="357:43"><name pos:start="357:43" pos:end="357:43">i</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="359:17" pos:end="359:47"><decl pos:start="359:17" pos:end="359:46"><type pos:start="359:17" pos:end="359:19"><name pos:start="359:17" pos:end="359:19">int</name></type> <name pos:start="359:21" pos:end="359:21">y</name> <init pos:start="359:23" pos:end="359:46">= <expr pos:start="359:25" pos:end="359:46"><ternary pos:start="359:25" pos:end="359:46"><condition pos:start="359:25" pos:end="359:34"><expr pos:start="359:25" pos:end="359:32"><name pos:start="359:25" pos:end="359:27">dir</name> <operator pos:start="359:29" pos:end="359:30">==</operator> <literal type="number" pos:start="359:32" pos:end="359:32">0</literal></expr> ?</condition><then pos:start="359:36" pos:end="359:36"> <expr pos:start="359:36" pos:end="359:36"><name pos:start="359:36" pos:end="359:36">i</name></expr>    </then><else pos:start="359:41" pos:end="359:46">: <expr pos:start="359:43" pos:end="359:46"><name pos:start="359:43" pos:end="359:46">edge</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="361:17" pos:end="361:43"><decl pos:start="361:17" pos:end="361:42"><type pos:start="361:17" pos:end="361:19"><name pos:start="361:17" pos:end="361:19">int</name></type> <name pos:start="361:21" pos:end="361:25">b_idx</name><init pos:start="361:26" pos:end="361:42">= <expr pos:start="361:28" pos:end="361:42"><literal type="number" pos:start="361:28" pos:end="361:30">8</literal> <operator pos:start="361:30" pos:end="361:30">+</operator> <literal type="number" pos:start="361:32" pos:end="361:34">4</literal> <operator pos:start="361:34" pos:end="361:34">+</operator> <name pos:start="361:36" pos:end="361:36">x</name> <operator pos:start="361:38" pos:end="361:38">+</operator> <literal type="number" pos:start="361:40" pos:end="361:40">8</literal><operator pos:start="361:41" pos:end="361:41">*</operator><name pos:start="361:42" pos:end="361:42">y</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="363:17" pos:end="363:48"><decl pos:start="363:17" pos:end="363:47"><type pos:start="363:17" pos:end="363:19"><name pos:start="363:17" pos:end="363:19">int</name></type> <name pos:start="363:21" pos:end="363:26">bn_idx</name><init pos:start="363:27" pos:end="363:47">= <expr pos:start="363:29" pos:end="363:47"><name pos:start="363:29" pos:end="363:33">b_idx</name> <operator pos:start="363:35" pos:end="363:35">-</operator> <operator pos:start="363:37" pos:end="363:37">(</operator><ternary pos:start="363:38" pos:end="363:46"><condition pos:start="363:38" pos:end="363:42"><expr pos:start="363:38" pos:end="363:40"><name pos:start="363:38" pos:end="363:40">dir</name></expr> ?</condition><then pos:start="363:44" pos:end="363:44"> <expr pos:start="363:44" pos:end="363:44"><literal type="number" pos:start="363:44" pos:end="363:44">8</literal></expr></then><else pos:start="363:45" pos:end="363:46">:<expr pos:start="363:46" pos:end="363:46"><literal type="number" pos:start="363:46" pos:end="363:46">1</literal></expr></else></ternary><operator pos:start="363:47" pos:end="363:47">)</operator></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="367:17" pos:end="381:17"><if pos:start="367:17" pos:end="373:17">if<condition pos:start="367:19" pos:end="369:53">( <expr pos:start="367:21" pos:end="369:51"><name pos:start="367:21" pos:end="367:50"><name pos:start="367:21" pos:end="367:21">h</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:43">non_zero_count_cache</name><index pos:start="367:44" pos:end="367:50">[<expr pos:start="367:45" pos:end="367:49"><name pos:start="367:45" pos:end="367:49">b_idx</name></expr>]</index></name> <operator pos:start="367:52" pos:end="367:52">|</operator>

                    <name pos:start="369:21" pos:end="369:51"><name pos:start="369:21" pos:end="369:21">h</name><operator pos:start="369:22" pos:end="369:23">-&gt;</operator><name pos:start="369:24" pos:end="369:43">non_zero_count_cache</name><index pos:start="369:44" pos:end="369:51">[<expr pos:start="369:45" pos:end="369:50"><name pos:start="369:45" pos:end="369:50">bn_idx</name></expr>]</index></name></expr> )</condition> <block pos:start="369:55" pos:end="373:17">{<block_content pos:start="371:21" pos:end="371:30">

                    <expr_stmt pos:start="371:21" pos:end="371:30"><expr pos:start="371:21" pos:end="371:29"><name pos:start="371:21" pos:end="371:25"><name pos:start="371:21" pos:end="371:22">bS</name><index pos:start="371:23" pos:end="371:25">[<expr pos:start="371:24" pos:end="371:24"><name pos:start="371:24" pos:end="371:24">i</name></expr>]</index></name> <operator pos:start="371:27" pos:end="371:27">=</operator> <literal type="number" pos:start="371:29" pos:end="371:29">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if>

                <if type="elseif" pos:start="375:17" pos:end="381:17">else if<condition pos:start="375:24" pos:end="375:33">(<expr pos:start="375:25" pos:end="375:32"><operator pos:start="375:25" pos:end="375:25">!</operator><name pos:start="375:26" pos:end="375:32">mv_done</name></expr>)</condition>

                <block pos:start="377:17" pos:end="381:17">{<block_content pos:start="379:21" pos:end="379:66">

                    <expr_stmt pos:start="379:21" pos:end="379:66"><expr pos:start="379:21" pos:end="379:65"><name pos:start="379:21" pos:end="379:25"><name pos:start="379:21" pos:end="379:22">bS</name><index pos:start="379:23" pos:end="379:25">[<expr pos:start="379:24" pos:end="379:24"><name pos:start="379:24" pos:end="379:24">i</name></expr>]</index></name> <operator pos:start="379:27" pos:end="379:27">=</operator> <call pos:start="379:29" pos:end="379:65"><name pos:start="379:29" pos:end="379:36">check_mv</name><argument_list pos:start="379:37" pos:end="379:65">(<argument pos:start="379:38" pos:end="379:38"><expr pos:start="379:38" pos:end="379:38"><name pos:start="379:38" pos:end="379:38">h</name></expr></argument>, <argument pos:start="379:41" pos:end="379:45"><expr pos:start="379:41" pos:end="379:45"><name pos:start="379:41" pos:end="379:45">b_idx</name></expr></argument>, <argument pos:start="379:48" pos:end="379:53"><expr pos:start="379:48" pos:end="379:53"><name pos:start="379:48" pos:end="379:53">bn_idx</name></expr></argument>, <argument pos:start="379:56" pos:end="379:64"><expr pos:start="379:56" pos:end="379:64"><name pos:start="379:56" pos:end="379:64">mvy_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="387:13" pos:end="389:25"><if pos:start="387:13" pos:end="389:25">if<condition pos:start="387:15" pos:end="387:44">(<expr pos:start="387:16" pos:end="387:43"><name pos:start="387:16" pos:end="387:20"><name pos:start="387:16" pos:end="387:17">bS</name><index pos:start="387:18" pos:end="387:20">[<expr pos:start="387:19" pos:end="387:19"><literal type="number" pos:start="387:19" pos:end="387:19">0</literal></expr>]</index></name><operator pos:start="387:21" pos:end="387:21">+</operator><name pos:start="387:22" pos:end="387:26"><name pos:start="387:22" pos:end="387:23">bS</name><index pos:start="387:24" pos:end="387:26">[<expr pos:start="387:25" pos:end="387:25"><literal type="number" pos:start="387:25" pos:end="387:25">1</literal></expr>]</index></name><operator pos:start="387:27" pos:end="387:27">+</operator><name pos:start="387:28" pos:end="387:32"><name pos:start="387:28" pos:end="387:29">bS</name><index pos:start="387:30" pos:end="387:32">[<expr pos:start="387:31" pos:end="387:31"><literal type="number" pos:start="387:31" pos:end="387:31">2</literal></expr>]</index></name><operator pos:start="387:33" pos:end="387:33">+</operator><name pos:start="387:34" pos:end="387:38"><name pos:start="387:34" pos:end="387:35">bS</name><index pos:start="387:36" pos:end="387:38">[<expr pos:start="387:37" pos:end="387:37"><literal type="number" pos:start="387:37" pos:end="387:37">3</literal></expr>]</index></name> <operator pos:start="387:40" pos:end="387:41">==</operator> <literal type="number" pos:start="387:43" pos:end="387:43">0</literal></expr>)</condition><block type="pseudo" pos:start="389:17" pos:end="389:25"><block_content pos:start="389:17" pos:end="389:25">

                <continue pos:start="389:17" pos:end="389:25">continue;</continue></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="395:9" pos:end="395:25">/* Filter edge */</comment>

        <comment type="line" pos:start="397:9" pos:end="397:77">// Do not use s-&gt;qscale as luma quantizer because it has not the same</comment>

        <comment type="line" pos:start="399:9" pos:end="399:37">// value in IPCM macroblocks.</comment>

        <expr_stmt pos:start="401:9" pos:end="401:54"><expr pos:start="401:9" pos:end="401:53"><name pos:start="401:9" pos:end="401:10">qp</name> <operator pos:start="401:12" pos:end="401:12">=</operator> <name pos:start="401:14" pos:end="401:53"><name pos:start="401:14" pos:end="401:14">s</name><operator pos:start="401:15" pos:end="401:16">-&gt;</operator><name pos:start="401:17" pos:end="401:31">current_picture</name><operator pos:start="401:32" pos:end="401:32">.</operator><name pos:start="401:33" pos:end="401:33">f</name><operator pos:start="401:34" pos:end="401:34">.</operator><name pos:start="401:35" pos:end="401:46">qscale_table</name><index pos:start="401:47" pos:end="401:53">[<expr pos:start="401:48" pos:end="401:52"><name pos:start="401:48" pos:end="401:52">mb_xy</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="line" pos:start="403:9" pos:end="403:174">//tprintf(s-&gt;avctx, "filter mb:%d/%d dir:%d edge:%d, QPy:%d, QPc:%d, QPcn:%d\n", mb_x, mb_y, dir, edge, qp, h-&gt;chroma_qp[0], s-&gt;current_picture.qscale_table[mbn_xy]);</comment>

        <expr_stmt pos:start="405:9" pos:end="405:131"><expr pos:start="405:9" pos:end="405:130"><call pos:start="405:9" pos:end="405:130"><name pos:start="405:9" pos:end="405:15">tprintf</name><argument_list pos:start="405:16" pos:end="405:130">(<argument pos:start="405:17" pos:end="405:24"><expr pos:start="405:17" pos:end="405:24"><name pos:start="405:17" pos:end="405:24"><name pos:start="405:17" pos:end="405:17">s</name><operator pos:start="405:18" pos:end="405:19">-&gt;</operator><name pos:start="405:20" pos:end="405:24">avctx</name></name></expr></argument>, <argument pos:start="405:27" pos:end="405:80"><expr pos:start="405:27" pos:end="405:80"><literal type="string" pos:start="405:27" pos:end="405:80">"filter mb:%d/%d dir:%d edge:%d, QPy:%d ls:%d uvls:%d"</literal></expr></argument>, <argument pos:start="405:83" pos:end="405:86"><expr pos:start="405:83" pos:end="405:86"><name pos:start="405:83" pos:end="405:86">mb_x</name></expr></argument>, <argument pos:start="405:89" pos:end="405:92"><expr pos:start="405:89" pos:end="405:92"><name pos:start="405:89" pos:end="405:92">mb_y</name></expr></argument>, <argument pos:start="405:95" pos:end="405:97"><expr pos:start="405:95" pos:end="405:97"><name pos:start="405:95" pos:end="405:97">dir</name></expr></argument>, <argument pos:start="405:100" pos:end="405:103"><expr pos:start="405:100" pos:end="405:103"><name pos:start="405:100" pos:end="405:103">edge</name></expr></argument>, <argument pos:start="405:106" pos:end="405:107"><expr pos:start="405:106" pos:end="405:107"><name pos:start="405:106" pos:end="405:107">qp</name></expr></argument>, <argument pos:start="405:110" pos:end="405:117"><expr pos:start="405:110" pos:end="405:117"><name pos:start="405:110" pos:end="405:117">linesize</name></expr></argument>, <argument pos:start="405:120" pos:end="405:129"><expr pos:start="405:120" pos:end="405:129"><name pos:start="405:120" pos:end="405:129">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="407:9" pos:end="407:112">//{ int i; for (i = 0; i &lt; 4; i++) tprintf(s-&gt;avctx, " bS[%d]:%d", i, bS[i]); tprintf(s-&gt;avctx, "\n"); }</comment>

        <if_stmt pos:start="409:9" pos:end="453:9"><if pos:start="409:9" pos:end="431:9">if<condition pos:start="409:11" pos:end="409:22">( <expr pos:start="409:13" pos:end="409:20"><name pos:start="409:13" pos:end="409:15">dir</name> <operator pos:start="409:17" pos:end="409:18">==</operator> <literal type="number" pos:start="409:20" pos:end="409:20">0</literal></expr> )</condition> <block pos:start="409:24" pos:end="431:9">{<block_content pos:start="411:13" pos:end="429:13">

            <expr_stmt pos:start="411:13" pos:end="411:85"><expr pos:start="411:13" pos:end="411:84"><call pos:start="411:13" pos:end="411:84"><name pos:start="411:13" pos:end="411:27">filter_mb_edgev</name><argument_list pos:start="411:28" pos:end="411:84">( <argument pos:start="411:30" pos:end="411:61"><expr pos:start="411:30" pos:end="411:61"><operator pos:start="411:30" pos:end="411:30">&amp;</operator><name pos:start="411:31" pos:end="411:61"><name pos:start="411:31" pos:end="411:35">img_y</name><index pos:start="411:36" pos:end="411:61">[<expr pos:start="411:37" pos:end="411:60"><literal type="number" pos:start="411:37" pos:end="411:37">4</literal><operator pos:start="411:38" pos:end="411:38">*</operator><name pos:start="411:39" pos:end="411:42">edge</name> <operator pos:start="411:44" pos:end="411:45">&lt;&lt;</operator> <name pos:start="411:47" pos:end="411:60"><name pos:start="411:47" pos:end="411:47">h</name><operator pos:start="411:48" pos:end="411:49">-&gt;</operator><name pos:start="411:50" pos:end="411:60">pixel_shift</name></name></expr>]</index></name></expr></argument>, <argument pos:start="411:64" pos:end="411:71"><expr pos:start="411:64" pos:end="411:71"><name pos:start="411:64" pos:end="411:71">linesize</name></expr></argument>, <argument pos:start="411:74" pos:end="411:75"><expr pos:start="411:74" pos:end="411:75"><name pos:start="411:74" pos:end="411:75">bS</name></expr></argument>, <argument pos:start="411:78" pos:end="411:79"><expr pos:start="411:78" pos:end="411:79"><name pos:start="411:78" pos:end="411:79">qp</name></expr></argument>, <argument pos:start="411:82" pos:end="411:82"><expr pos:start="411:82" pos:end="411:82"><name pos:start="411:82" pos:end="411:82">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="413:13" pos:end="429:13"><if pos:start="413:13" pos:end="429:13">if <condition pos:start="413:16" pos:end="413:23">(<expr pos:start="413:17" pos:end="413:22"><name pos:start="413:17" pos:end="413:22">chroma</name></expr>)</condition> <block pos:start="413:25" pos:end="429:13">{<block_content pos:start="415:17" pos:end="427:17">

                <if_stmt pos:start="415:17" pos:end="427:17"><if pos:start="415:17" pos:end="421:17">if <condition pos:start="415:20" pos:end="415:30">(<expr pos:start="415:21" pos:end="415:29"><name pos:start="415:21" pos:end="415:29">chroma444</name></expr>)</condition> <block pos:start="415:32" pos:end="421:17">{<block_content pos:start="417:21" pos:end="419:109">

                    <expr_stmt pos:start="417:21" pos:end="417:109"><expr pos:start="417:21" pos:end="417:108"><call pos:start="417:21" pos:end="417:108"><name pos:start="417:21" pos:end="417:35">filter_mb_edgev</name> <argument_list pos:start="417:37" pos:end="417:108">( <argument pos:start="417:39" pos:end="417:71"><expr pos:start="417:39" pos:end="417:71"><operator pos:start="417:39" pos:end="417:39">&amp;</operator><name pos:start="417:40" pos:end="417:71"><name pos:start="417:40" pos:end="417:45">img_cb</name><index pos:start="417:46" pos:end="417:71">[<expr pos:start="417:47" pos:end="417:70"><literal type="number" pos:start="417:47" pos:end="417:47">4</literal><operator pos:start="417:48" pos:end="417:48">*</operator><name pos:start="417:49" pos:end="417:52">edge</name> <operator pos:start="417:54" pos:end="417:55">&lt;&lt;</operator> <name pos:start="417:57" pos:end="417:70"><name pos:start="417:57" pos:end="417:57">h</name><operator pos:start="417:58" pos:end="417:59">-&gt;</operator><name pos:start="417:60" pos:end="417:70">pixel_shift</name></name></expr>]</index></name></expr></argument>, <argument pos:start="417:74" pos:end="417:83"><expr pos:start="417:74" pos:end="417:83"><name pos:start="417:74" pos:end="417:83">uvlinesize</name></expr></argument>, <argument pos:start="417:86" pos:end="417:87"><expr pos:start="417:86" pos:end="417:87"><name pos:start="417:86" pos:end="417:87">bS</name></expr></argument>, <argument pos:start="417:90" pos:end="417:104"><expr pos:start="417:90" pos:end="417:104"><name pos:start="417:90" pos:end="417:104"><name pos:start="417:90" pos:end="417:90">h</name><operator pos:start="417:91" pos:end="417:92">-&gt;</operator><name pos:start="417:93" pos:end="417:101">chroma_qp</name><index pos:start="417:102" pos:end="417:104">[<expr pos:start="417:103" pos:end="417:103"><literal type="number" pos:start="417:103" pos:end="417:103">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="417:107" pos:end="417:107"><expr pos:start="417:107" pos:end="417:107"><name pos:start="417:107" pos:end="417:107">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="419:21" pos:end="419:109"><expr pos:start="419:21" pos:end="419:108"><call pos:start="419:21" pos:end="419:108"><name pos:start="419:21" pos:end="419:35">filter_mb_edgev</name> <argument_list pos:start="419:37" pos:end="419:108">( <argument pos:start="419:39" pos:end="419:71"><expr pos:start="419:39" pos:end="419:71"><operator pos:start="419:39" pos:end="419:39">&amp;</operator><name pos:start="419:40" pos:end="419:71"><name pos:start="419:40" pos:end="419:45">img_cr</name><index pos:start="419:46" pos:end="419:71">[<expr pos:start="419:47" pos:end="419:70"><literal type="number" pos:start="419:47" pos:end="419:47">4</literal><operator pos:start="419:48" pos:end="419:48">*</operator><name pos:start="419:49" pos:end="419:52">edge</name> <operator pos:start="419:54" pos:end="419:55">&lt;&lt;</operator> <name pos:start="419:57" pos:end="419:70"><name pos:start="419:57" pos:end="419:57">h</name><operator pos:start="419:58" pos:end="419:59">-&gt;</operator><name pos:start="419:60" pos:end="419:70">pixel_shift</name></name></expr>]</index></name></expr></argument>, <argument pos:start="419:74" pos:end="419:83"><expr pos:start="419:74" pos:end="419:83"><name pos:start="419:74" pos:end="419:83">uvlinesize</name></expr></argument>, <argument pos:start="419:86" pos:end="419:87"><expr pos:start="419:86" pos:end="419:87"><name pos:start="419:86" pos:end="419:87">bS</name></expr></argument>, <argument pos:start="419:90" pos:end="419:104"><expr pos:start="419:90" pos:end="419:104"><name pos:start="419:90" pos:end="419:104"><name pos:start="419:90" pos:end="419:90">h</name><operator pos:start="419:91" pos:end="419:92">-&gt;</operator><name pos:start="419:93" pos:end="419:101">chroma_qp</name><index pos:start="419:102" pos:end="419:104">[<expr pos:start="419:103" pos:end="419:103"><literal type="number" pos:start="419:103" pos:end="419:103">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="419:107" pos:end="419:107"><expr pos:start="419:107" pos:end="419:107"><name pos:start="419:107" pos:end="419:107">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="421:19" pos:end="427:17">else if<condition pos:start="421:26" pos:end="421:42">( <expr pos:start="421:28" pos:end="421:40"><operator pos:start="421:28" pos:end="421:28">(</operator><name pos:start="421:29" pos:end="421:32">edge</name><operator pos:start="421:33" pos:end="421:33">&amp;</operator><literal type="number" pos:start="421:34" pos:end="421:34">1</literal><operator pos:start="421:35" pos:end="421:35">)</operator> <operator pos:start="421:37" pos:end="421:38">==</operator> <literal type="number" pos:start="421:40" pos:end="421:40">0</literal></expr> )</condition> <block pos:start="421:44" pos:end="427:17">{<block_content pos:start="423:21" pos:end="425:109">

                    <expr_stmt pos:start="423:21" pos:end="423:109"><expr pos:start="423:21" pos:end="423:108"><call pos:start="423:21" pos:end="423:108"><name pos:start="423:21" pos:end="423:36">filter_mb_edgecv</name><argument_list pos:start="423:37" pos:end="423:108">( <argument pos:start="423:39" pos:end="423:71"><expr pos:start="423:39" pos:end="423:71"><operator pos:start="423:39" pos:end="423:39">&amp;</operator><name pos:start="423:40" pos:end="423:71"><name pos:start="423:40" pos:end="423:45">img_cb</name><index pos:start="423:46" pos:end="423:71">[<expr pos:start="423:47" pos:end="423:70"><literal type="number" pos:start="423:47" pos:end="423:47">2</literal><operator pos:start="423:48" pos:end="423:48">*</operator><name pos:start="423:49" pos:end="423:52">edge</name> <operator pos:start="423:54" pos:end="423:55">&lt;&lt;</operator> <name pos:start="423:57" pos:end="423:70"><name pos:start="423:57" pos:end="423:57">h</name><operator pos:start="423:58" pos:end="423:59">-&gt;</operator><name pos:start="423:60" pos:end="423:70">pixel_shift</name></name></expr>]</index></name></expr></argument>, <argument pos:start="423:74" pos:end="423:83"><expr pos:start="423:74" pos:end="423:83"><name pos:start="423:74" pos:end="423:83">uvlinesize</name></expr></argument>, <argument pos:start="423:86" pos:end="423:87"><expr pos:start="423:86" pos:end="423:87"><name pos:start="423:86" pos:end="423:87">bS</name></expr></argument>, <argument pos:start="423:90" pos:end="423:104"><expr pos:start="423:90" pos:end="423:104"><name pos:start="423:90" pos:end="423:104"><name pos:start="423:90" pos:end="423:90">h</name><operator pos:start="423:91" pos:end="423:92">-&gt;</operator><name pos:start="423:93" pos:end="423:101">chroma_qp</name><index pos:start="423:102" pos:end="423:104">[<expr pos:start="423:103" pos:end="423:103"><literal type="number" pos:start="423:103" pos:end="423:103">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="423:107" pos:end="423:107"><expr pos:start="423:107" pos:end="423:107"><name pos:start="423:107" pos:end="423:107">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="425:21" pos:end="425:109"><expr pos:start="425:21" pos:end="425:108"><call pos:start="425:21" pos:end="425:108"><name pos:start="425:21" pos:end="425:36">filter_mb_edgecv</name><argument_list pos:start="425:37" pos:end="425:108">( <argument pos:start="425:39" pos:end="425:71"><expr pos:start="425:39" pos:end="425:71"><operator pos:start="425:39" pos:end="425:39">&amp;</operator><name pos:start="425:40" pos:end="425:71"><name pos:start="425:40" pos:end="425:45">img_cr</name><index pos:start="425:46" pos:end="425:71">[<expr pos:start="425:47" pos:end="425:70"><literal type="number" pos:start="425:47" pos:end="425:47">2</literal><operator pos:start="425:48" pos:end="425:48">*</operator><name pos:start="425:49" pos:end="425:52">edge</name> <operator pos:start="425:54" pos:end="425:55">&lt;&lt;</operator> <name pos:start="425:57" pos:end="425:70"><name pos:start="425:57" pos:end="425:57">h</name><operator pos:start="425:58" pos:end="425:59">-&gt;</operator><name pos:start="425:60" pos:end="425:70">pixel_shift</name></name></expr>]</index></name></expr></argument>, <argument pos:start="425:74" pos:end="425:83"><expr pos:start="425:74" pos:end="425:83"><name pos:start="425:74" pos:end="425:83">uvlinesize</name></expr></argument>, <argument pos:start="425:86" pos:end="425:87"><expr pos:start="425:86" pos:end="425:87"><name pos:start="425:86" pos:end="425:87">bS</name></expr></argument>, <argument pos:start="425:90" pos:end="425:104"><expr pos:start="425:90" pos:end="425:104"><name pos:start="425:90" pos:end="425:104"><name pos:start="425:90" pos:end="425:90">h</name><operator pos:start="425:91" pos:end="425:92">-&gt;</operator><name pos:start="425:93" pos:end="425:101">chroma_qp</name><index pos:start="425:102" pos:end="425:104">[<expr pos:start="425:103" pos:end="425:103"><literal type="number" pos:start="425:103" pos:end="425:103">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="425:107" pos:end="425:107"><expr pos:start="425:107" pos:end="425:107"><name pos:start="425:107" pos:end="425:107">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="431:11" pos:end="453:9">else <block pos:start="431:16" pos:end="453:9">{<block_content pos:start="433:13" pos:end="451:13">

            <expr_stmt pos:start="433:13" pos:end="433:76"><expr pos:start="433:13" pos:end="433:75"><call pos:start="433:13" pos:end="433:75"><name pos:start="433:13" pos:end="433:27">filter_mb_edgeh</name><argument_list pos:start="433:28" pos:end="433:75">( <argument pos:start="433:30" pos:end="433:52"><expr pos:start="433:30" pos:end="433:52"><operator pos:start="433:30" pos:end="433:30">&amp;</operator><name pos:start="433:31" pos:end="433:52"><name pos:start="433:31" pos:end="433:35">img_y</name><index pos:start="433:36" pos:end="433:52">[<expr pos:start="433:37" pos:end="433:51"><literal type="number" pos:start="433:37" pos:end="433:37">4</literal><operator pos:start="433:38" pos:end="433:38">*</operator><name pos:start="433:39" pos:end="433:42">edge</name><operator pos:start="433:43" pos:end="433:43">*</operator><name pos:start="433:44" pos:end="433:51">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="433:55" pos:end="433:62"><expr pos:start="433:55" pos:end="433:62"><name pos:start="433:55" pos:end="433:62">linesize</name></expr></argument>, <argument pos:start="433:65" pos:end="433:66"><expr pos:start="433:65" pos:end="433:66"><name pos:start="433:65" pos:end="433:66">bS</name></expr></argument>, <argument pos:start="433:69" pos:end="433:70"><expr pos:start="433:69" pos:end="433:70"><name pos:start="433:69" pos:end="433:70">qp</name></expr></argument>, <argument pos:start="433:73" pos:end="433:73"><expr pos:start="433:73" pos:end="433:73"><name pos:start="433:73" pos:end="433:73">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="435:13" pos:end="451:13"><if pos:start="435:13" pos:end="451:13">if <condition pos:start="435:16" pos:end="435:23">(<expr pos:start="435:17" pos:end="435:22"><name pos:start="435:17" pos:end="435:22">chroma</name></expr>)</condition> <block pos:start="435:25" pos:end="451:13">{<block_content pos:start="437:17" pos:end="449:17">

                <if_stmt pos:start="437:17" pos:end="449:17"><if pos:start="437:17" pos:end="443:17">if <condition pos:start="437:20" pos:end="437:30">(<expr pos:start="437:21" pos:end="437:29"><name pos:start="437:21" pos:end="437:29">chroma444</name></expr>)</condition> <block pos:start="437:32" pos:end="443:17">{<block_content pos:start="439:21" pos:end="441:102">

                    <expr_stmt pos:start="439:21" pos:end="439:102"><expr pos:start="439:21" pos:end="439:101"><call pos:start="439:21" pos:end="439:101"><name pos:start="439:21" pos:end="439:35">filter_mb_edgeh</name> <argument_list pos:start="439:37" pos:end="439:101">( <argument pos:start="439:39" pos:end="439:64"><expr pos:start="439:39" pos:end="439:64"><operator pos:start="439:39" pos:end="439:39">&amp;</operator><name pos:start="439:40" pos:end="439:64"><name pos:start="439:40" pos:end="439:45">img_cb</name><index pos:start="439:46" pos:end="439:64">[<expr pos:start="439:47" pos:end="439:63"><literal type="number" pos:start="439:47" pos:end="439:47">4</literal><operator pos:start="439:48" pos:end="439:48">*</operator><name pos:start="439:49" pos:end="439:52">edge</name><operator pos:start="439:53" pos:end="439:53">*</operator><name pos:start="439:54" pos:end="439:63">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="439:67" pos:end="439:76"><expr pos:start="439:67" pos:end="439:76"><name pos:start="439:67" pos:end="439:76">uvlinesize</name></expr></argument>, <argument pos:start="439:79" pos:end="439:80"><expr pos:start="439:79" pos:end="439:80"><name pos:start="439:79" pos:end="439:80">bS</name></expr></argument>, <argument pos:start="439:83" pos:end="439:97"><expr pos:start="439:83" pos:end="439:97"><name pos:start="439:83" pos:end="439:97"><name pos:start="439:83" pos:end="439:83">h</name><operator pos:start="439:84" pos:end="439:85">-&gt;</operator><name pos:start="439:86" pos:end="439:94">chroma_qp</name><index pos:start="439:95" pos:end="439:97">[<expr pos:start="439:96" pos:end="439:96"><literal type="number" pos:start="439:96" pos:end="439:96">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="439:100" pos:end="439:100"><expr pos:start="439:100" pos:end="439:100"><name pos:start="439:100" pos:end="439:100">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="441:21" pos:end="441:102"><expr pos:start="441:21" pos:end="441:101"><call pos:start="441:21" pos:end="441:101"><name pos:start="441:21" pos:end="441:35">filter_mb_edgeh</name> <argument_list pos:start="441:37" pos:end="441:101">( <argument pos:start="441:39" pos:end="441:64"><expr pos:start="441:39" pos:end="441:64"><operator pos:start="441:39" pos:end="441:39">&amp;</operator><name pos:start="441:40" pos:end="441:64"><name pos:start="441:40" pos:end="441:45">img_cr</name><index pos:start="441:46" pos:end="441:64">[<expr pos:start="441:47" pos:end="441:63"><literal type="number" pos:start="441:47" pos:end="441:47">4</literal><operator pos:start="441:48" pos:end="441:48">*</operator><name pos:start="441:49" pos:end="441:52">edge</name><operator pos:start="441:53" pos:end="441:53">*</operator><name pos:start="441:54" pos:end="441:63">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="441:67" pos:end="441:76"><expr pos:start="441:67" pos:end="441:76"><name pos:start="441:67" pos:end="441:76">uvlinesize</name></expr></argument>, <argument pos:start="441:79" pos:end="441:80"><expr pos:start="441:79" pos:end="441:80"><name pos:start="441:79" pos:end="441:80">bS</name></expr></argument>, <argument pos:start="441:83" pos:end="441:97"><expr pos:start="441:83" pos:end="441:97"><name pos:start="441:83" pos:end="441:97"><name pos:start="441:83" pos:end="441:83">h</name><operator pos:start="441:84" pos:end="441:85">-&gt;</operator><name pos:start="441:86" pos:end="441:94">chroma_qp</name><index pos:start="441:95" pos:end="441:97">[<expr pos:start="441:96" pos:end="441:96"><literal type="number" pos:start="441:96" pos:end="441:96">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="441:100" pos:end="441:100"><expr pos:start="441:100" pos:end="441:100"><name pos:start="441:100" pos:end="441:100">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="443:19" pos:end="449:17">else if<condition pos:start="443:26" pos:end="443:42">( <expr pos:start="443:28" pos:end="443:40"><operator pos:start="443:28" pos:end="443:28">(</operator><name pos:start="443:29" pos:end="443:32">edge</name><operator pos:start="443:33" pos:end="443:33">&amp;</operator><literal type="number" pos:start="443:34" pos:end="443:34">1</literal><operator pos:start="443:35" pos:end="443:35">)</operator> <operator pos:start="443:37" pos:end="443:38">==</operator> <literal type="number" pos:start="443:40" pos:end="443:40">0</literal></expr> )</condition> <block pos:start="443:44" pos:end="449:17">{<block_content pos:start="445:21" pos:end="447:102">

                    <expr_stmt pos:start="445:21" pos:end="445:102"><expr pos:start="445:21" pos:end="445:101"><call pos:start="445:21" pos:end="445:101"><name pos:start="445:21" pos:end="445:36">filter_mb_edgech</name><argument_list pos:start="445:37" pos:end="445:101">( <argument pos:start="445:39" pos:end="445:64"><expr pos:start="445:39" pos:end="445:64"><operator pos:start="445:39" pos:end="445:39">&amp;</operator><name pos:start="445:40" pos:end="445:64"><name pos:start="445:40" pos:end="445:45">img_cb</name><index pos:start="445:46" pos:end="445:64">[<expr pos:start="445:47" pos:end="445:63"><literal type="number" pos:start="445:47" pos:end="445:47">2</literal><operator pos:start="445:48" pos:end="445:48">*</operator><name pos:start="445:49" pos:end="445:52">edge</name><operator pos:start="445:53" pos:end="445:53">*</operator><name pos:start="445:54" pos:end="445:63">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="445:67" pos:end="445:76"><expr pos:start="445:67" pos:end="445:76"><name pos:start="445:67" pos:end="445:76">uvlinesize</name></expr></argument>, <argument pos:start="445:79" pos:end="445:80"><expr pos:start="445:79" pos:end="445:80"><name pos:start="445:79" pos:end="445:80">bS</name></expr></argument>, <argument pos:start="445:83" pos:end="445:97"><expr pos:start="445:83" pos:end="445:97"><name pos:start="445:83" pos:end="445:97"><name pos:start="445:83" pos:end="445:83">h</name><operator pos:start="445:84" pos:end="445:85">-&gt;</operator><name pos:start="445:86" pos:end="445:94">chroma_qp</name><index pos:start="445:95" pos:end="445:97">[<expr pos:start="445:96" pos:end="445:96"><literal type="number" pos:start="445:96" pos:end="445:96">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="445:100" pos:end="445:100"><expr pos:start="445:100" pos:end="445:100"><name pos:start="445:100" pos:end="445:100">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="447:21" pos:end="447:102"><expr pos:start="447:21" pos:end="447:101"><call pos:start="447:21" pos:end="447:101"><name pos:start="447:21" pos:end="447:36">filter_mb_edgech</name><argument_list pos:start="447:37" pos:end="447:101">( <argument pos:start="447:39" pos:end="447:64"><expr pos:start="447:39" pos:end="447:64"><operator pos:start="447:39" pos:end="447:39">&amp;</operator><name pos:start="447:40" pos:end="447:64"><name pos:start="447:40" pos:end="447:45">img_cr</name><index pos:start="447:46" pos:end="447:64">[<expr pos:start="447:47" pos:end="447:63"><literal type="number" pos:start="447:47" pos:end="447:47">2</literal><operator pos:start="447:48" pos:end="447:48">*</operator><name pos:start="447:49" pos:end="447:52">edge</name><operator pos:start="447:53" pos:end="447:53">*</operator><name pos:start="447:54" pos:end="447:63">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="447:67" pos:end="447:76"><expr pos:start="447:67" pos:end="447:76"><name pos:start="447:67" pos:end="447:76">uvlinesize</name></expr></argument>, <argument pos:start="447:79" pos:end="447:80"><expr pos:start="447:79" pos:end="447:80"><name pos:start="447:79" pos:end="447:80">bS</name></expr></argument>, <argument pos:start="447:83" pos:end="447:97"><expr pos:start="447:83" pos:end="447:97"><name pos:start="447:83" pos:end="447:97"><name pos:start="447:83" pos:end="447:83">h</name><operator pos:start="447:84" pos:end="447:85">-&gt;</operator><name pos:start="447:86" pos:end="447:94">chroma_qp</name><index pos:start="447:95" pos:end="447:97">[<expr pos:start="447:96" pos:end="447:96"><literal type="number" pos:start="447:96" pos:end="447:96">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="447:100" pos:end="447:100"><expr pos:start="447:100" pos:end="447:100"><name pos:start="447:100" pos:end="447:100">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
