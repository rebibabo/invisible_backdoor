<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4330.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">qcow_open</name><parameter_list pos:start="1:21" pos:end="1:75">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">filename</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="235:1">{<block_content pos:start="5:5" pos:end="233:14">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>, <decl pos:start="7:17" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:21">shift</name></decl>, <decl pos:start="7:24" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:26">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">QCowHeader</name></type> <name pos:start="9:16" pos:end="9:21">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">ext_end</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:49"><name pos:start="15:11" pos:end="15:24">bdrv_file_open</name><argument_list pos:start="15:25" pos:end="15:49">(<argument pos:start="15:26" pos:end="15:31"><expr pos:start="15:26" pos:end="15:31"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:31">hd</name></name></expr></argument>, <argument pos:start="15:34" pos:end="15:41"><expr pos:start="15:34" pos:end="15:41"><name pos:start="15:34" pos:end="15:41">filename</name></expr></argument>, <argument pos:start="15:44" pos:end="15:48"><expr pos:start="15:44" pos:end="15:48"><name pos:start="15:44" pos:end="15:48">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:19"><if pos:start="17:5" pos:end="19:19">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:19"><block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:72">(<expr pos:start="21:9" pos:end="21:71"><call pos:start="21:9" pos:end="21:53"><name pos:start="21:9" pos:end="21:18">bdrv_pread</name><argument_list pos:start="21:19" pos:end="21:53">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:24">hd</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:27"><expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr></argument>, <argument pos:start="21:30" pos:end="21:36"><expr pos:start="21:30" pos:end="21:36"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:36">header</name></expr></argument>, <argument pos:start="21:39" pos:end="21:52"><expr pos:start="21:39" pos:end="21:52"><sizeof pos:start="21:39" pos:end="21:52">sizeof<argument_list pos:start="21:45" pos:end="21:52">(<argument pos:start="21:46" pos:end="21:51"><expr pos:start="21:46" pos:end="21:51"><name pos:start="21:46" pos:end="21:51">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="21:55" pos:end="21:56">!=</operator> <sizeof pos:start="21:58" pos:end="21:71">sizeof<argument_list pos:start="21:64" pos:end="21:71">(<argument pos:start="21:65" pos:end="21:70"><expr pos:start="21:65" pos:end="21:70"><name pos:start="21:65" pos:end="21:70">header</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><call pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:16">be32_to_cpus</name><argument_list pos:start="25:17" pos:end="25:31">(<argument pos:start="25:18" pos:end="25:30"><expr pos:start="25:18" pos:end="25:30"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:24">header</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:30">magic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:16">be32_to_cpus</name><argument_list pos:start="27:17" pos:end="27:33">(<argument pos:start="27:18" pos:end="27:32"><expr pos:start="27:18" pos:end="27:32"><operator pos:start="27:18" pos:end="27:18">&amp;</operator><name pos:start="27:19" pos:end="27:32"><name pos:start="27:19" pos:end="27:24">header</name><operator pos:start="27:25" pos:end="27:25">.</operator><name pos:start="27:26" pos:end="27:32">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><call pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:16">be64_to_cpus</name><argument_list pos:start="29:17" pos:end="29:45">(<argument pos:start="29:18" pos:end="29:44"><expr pos:start="29:18" pos:end="29:44"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:44"><name pos:start="29:19" pos:end="29:24">header</name><operator pos:start="29:25" pos:end="29:25">.</operator><name pos:start="29:26" pos:end="29:44">backing_file_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><call pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:16">be32_to_cpus</name><argument_list pos:start="31:17" pos:end="31:43">(<argument pos:start="31:18" pos:end="31:42"><expr pos:start="31:18" pos:end="31:42"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:42"><name pos:start="31:19" pos:end="31:24">header</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:42">backing_file_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><call pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:16">be64_to_cpus</name><argument_list pos:start="33:17" pos:end="33:30">(<argument pos:start="33:18" pos:end="33:29"><expr pos:start="33:18" pos:end="33:29"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:29"><name pos:start="33:19" pos:end="33:24">header</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:29">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><call pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:16">be32_to_cpus</name><argument_list pos:start="35:17" pos:end="35:38">(<argument pos:start="35:18" pos:end="35:37"><expr pos:start="35:18" pos:end="35:37"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:37"><name pos:start="35:19" pos:end="35:24">header</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:37">cluster_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><call pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:16">be32_to_cpus</name><argument_list pos:start="37:17" pos:end="37:38">(<argument pos:start="37:18" pos:end="37:37"><expr pos:start="37:18" pos:end="37:37"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:37"><name pos:start="37:19" pos:end="37:24">header</name><operator pos:start="37:25" pos:end="37:25">.</operator><name pos:start="37:26" pos:end="37:37">crypt_method</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><call pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:16">be64_to_cpus</name><argument_list pos:start="39:17" pos:end="39:41">(<argument pos:start="39:18" pos:end="39:40"><expr pos:start="39:18" pos:end="39:40"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:40"><name pos:start="39:19" pos:end="39:24">header</name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:40">l1_table_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:16">be32_to_cpus</name><argument_list pos:start="41:17" pos:end="41:33">(<argument pos:start="41:18" pos:end="41:32"><expr pos:start="41:18" pos:end="41:32"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:32"><name pos:start="41:19" pos:end="41:24">header</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:32">l1_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><call pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:16">be64_to_cpus</name><argument_list pos:start="43:17" pos:end="43:47">(<argument pos:start="43:18" pos:end="43:46"><expr pos:start="43:18" pos:end="43:46"><operator pos:start="43:18" pos:end="43:18">&amp;</operator><name pos:start="43:19" pos:end="43:46"><name pos:start="43:19" pos:end="43:24">header</name><operator pos:start="43:25" pos:end="43:25">.</operator><name pos:start="43:26" pos:end="43:46">refcount_table_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:50"><expr pos:start="45:5" pos:end="45:49"><call pos:start="45:5" pos:end="45:49"><name pos:start="45:5" pos:end="45:16">be32_to_cpus</name><argument_list pos:start="45:17" pos:end="45:49">(<argument pos:start="45:18" pos:end="45:48"><expr pos:start="45:18" pos:end="45:48"><operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:48"><name pos:start="45:19" pos:end="45:24">header</name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:48">refcount_table_clusters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><call pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:16">be64_to_cpus</name><argument_list pos:start="47:17" pos:end="47:42">(<argument pos:start="47:18" pos:end="47:41"><expr pos:start="47:18" pos:end="47:41"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:41"><name pos:start="47:19" pos:end="47:24">header</name><operator pos:start="47:25" pos:end="47:25">.</operator><name pos:start="47:26" pos:end="47:41">snapshots_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:39"><expr pos:start="49:5" pos:end="49:38"><call pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:16">be32_to_cpus</name><argument_list pos:start="49:17" pos:end="49:38">(<argument pos:start="49:18" pos:end="49:37"><expr pos:start="49:18" pos:end="49:37"><operator pos:start="49:18" pos:end="49:18">&amp;</operator><name pos:start="49:19" pos:end="49:37"><name pos:start="49:19" pos:end="49:24">header</name><operator pos:start="49:25" pos:end="49:25">.</operator><name pos:start="49:26" pos:end="49:37">nb_snapshots</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:69">(<expr pos:start="53:9" pos:end="53:68"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:14">header</name><operator pos:start="53:15" pos:end="53:15">.</operator><name pos:start="53:16" pos:end="53:20">magic</name></name> <operator pos:start="53:22" pos:end="53:23">!=</operator> <name pos:start="53:25" pos:end="53:34">QCOW_MAGIC</name> <operator pos:start="53:36" pos:end="53:37">||</operator> <name pos:start="53:39" pos:end="53:52"><name pos:start="53:39" pos:end="53:44">header</name><operator pos:start="53:45" pos:end="53:45">.</operator><name pos:start="53:46" pos:end="53:52">version</name></name> <operator pos:start="53:54" pos:end="53:55">!=</operator> <name pos:start="53:57" pos:end="53:68">QCOW_VERSION</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18">

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="63:18"><if pos:start="57:5" pos:end="63:18">if <condition pos:start="57:8" pos:end="61:47">(<expr pos:start="57:9" pos:end="61:46"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:14">header</name><operator pos:start="57:15" pos:end="57:15">.</operator><name pos:start="57:16" pos:end="57:19">size</name></name> <operator pos:start="57:21" pos:end="57:22">&lt;=</operator> <literal type="number" pos:start="57:24" pos:end="57:24">1</literal> <operator pos:start="57:26" pos:end="57:27">||</operator>

        <name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:14">header</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:27">cluster_bits</name></name> <operator pos:start="59:29" pos:end="59:29">&lt;</operator> <name pos:start="59:31" pos:end="59:46">MIN_CLUSTER_BITS</name> <operator pos:start="59:48" pos:end="59:49">||</operator>

        <name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:14">header</name><operator pos:start="61:15" pos:end="61:15">.</operator><name pos:start="61:16" pos:end="61:27">cluster_bits</name></name> <operator pos:start="61:29" pos:end="61:29">&gt;</operator> <name pos:start="61:31" pos:end="61:46">MAX_CLUSTER_BITS</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:18"><block_content pos:start="63:9" pos:end="63:18">

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="67:18"><if pos:start="65:5" pos:end="67:18">if <condition pos:start="65:8" pos:end="65:45">(<expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:14">header</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:27">crypt_method</name></name> <operator pos:start="65:29" pos:end="65:29">&gt;</operator> <name pos:start="65:31" pos:end="65:44">QCOW_CRYPT_AES</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:18"><block_content pos:start="67:9" pos:end="67:18">

        <goto pos:start="67:9" pos:end="67:18">goto <name pos:start="67:14" pos:end="67:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:26">crypt_method_header</name></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <name pos:start="69:30" pos:end="69:48"><name pos:start="69:30" pos:end="69:35">header</name><operator pos:start="69:36" pos:end="69:36">.</operator><name pos:start="69:37" pos:end="69:48">crypt_method</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:26"><if pos:start="71:5" pos:end="73:26">if <condition pos:start="71:8" pos:end="71:31">(<expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:30">crypt_method_header</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:26"><block_content pos:start="73:9" pos:end="73:26">

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:10">bs</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:21">encrypted</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <literal type="number" pos:start="73:25" pos:end="73:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:42"><expr pos:start="75:5" pos:end="75:41"><name pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:19">cluster_bits</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:41"><name pos:start="75:23" pos:end="75:28">header</name><operator pos:start="75:29" pos:end="75:29">.</operator><name pos:start="75:30" pos:end="75:41">cluster_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:43"><expr pos:start="77:5" pos:end="77:42"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:19">cluster_size</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <literal type="number" pos:start="77:23" pos:end="77:23">1</literal> <operator pos:start="77:25" pos:end="77:26">&lt;&lt;</operator> <name pos:start="77:28" pos:end="77:42"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:42">cluster_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:52"><expr pos:start="79:5" pos:end="79:51"><name pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:22">cluster_sectors</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <literal type="number" pos:start="79:26" pos:end="79:26">1</literal> <operator pos:start="79:28" pos:end="79:29">&lt;&lt;</operator> <operator pos:start="79:31" pos:end="79:31">(</operator><name pos:start="79:32" pos:end="79:46"><name pos:start="79:32" pos:end="79:32">s</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:46">cluster_bits</name></name> <operator pos:start="79:48" pos:end="79:48">-</operator> <literal type="number" pos:start="79:50" pos:end="79:50">9</literal><operator pos:start="79:51" pos:end="79:51">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:37"><expr pos:start="81:5" pos:end="81:36"><name pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:14">l2_bits</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:32"><name pos:start="81:18" pos:end="81:18">s</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:32">cluster_bits</name></name> <operator pos:start="81:34" pos:end="81:34">-</operator> <literal type="number" pos:start="81:36" pos:end="81:36">3</literal></expr>;</expr_stmt> <comment type="block" pos:start="81:39" pos:end="81:68">/* L2 is always one cluster */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:33"><expr pos:start="83:5" pos:end="83:32"><name pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:14">l2_size</name></name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">1</literal> <operator pos:start="83:20" pos:end="83:21">&lt;&lt;</operator> <name pos:start="83:23" pos:end="83:32"><name pos:start="83:23" pos:end="83:23">s</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:32">l2_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:42"><expr pos:start="85:5" pos:end="85:41"><name pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:6">bs</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:21">total_sectors</name></name> <operator pos:start="85:23" pos:end="85:23">=</operator> <name pos:start="85:25" pos:end="85:35"><name pos:start="85:25" pos:end="85:30">header</name><operator pos:start="85:31" pos:end="85:31">.</operator><name pos:start="85:32" pos:end="85:35">size</name></name> <operator pos:start="85:37" pos:end="85:37">/</operator> <literal type="number" pos:start="85:39" pos:end="85:41">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:50"><expr pos:start="87:5" pos:end="87:49"><name pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:18">csize_shift</name></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <operator pos:start="87:22" pos:end="87:22">(</operator><literal type="number" pos:start="87:23" pos:end="87:26">62</literal> <operator pos:start="87:26" pos:end="87:26">-</operator> <operator pos:start="87:28" pos:end="87:28">(</operator><name pos:start="87:29" pos:end="87:43"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:43">cluster_bits</name></name> <operator pos:start="87:45" pos:end="87:45">-</operator> <literal type="number" pos:start="87:47" pos:end="87:47">8</literal><operator pos:start="87:48" pos:end="87:48">)</operator><operator pos:start="87:49" pos:end="87:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:53"><expr pos:start="89:5" pos:end="89:52"><name pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:17">csize_mask</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <operator pos:start="89:21" pos:end="89:21">(</operator><literal type="number" pos:start="89:22" pos:end="89:22">1</literal> <operator pos:start="89:24" pos:end="89:25">&lt;&lt;</operator> <operator pos:start="89:27" pos:end="89:27">(</operator><name pos:start="89:28" pos:end="89:42"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:42">cluster_bits</name></name> <operator pos:start="89:44" pos:end="89:44">-</operator> <literal type="number" pos:start="89:46" pos:end="89:46">8</literal><operator pos:start="89:47" pos:end="89:47">)</operator><operator pos:start="89:48" pos:end="89:48">)</operator> <operator pos:start="89:50" pos:end="89:50">-</operator> <literal type="number" pos:start="89:52" pos:end="89:52">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:57"><expr pos:start="91:5" pos:end="91:56"><name pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:26">cluster_offset_mask</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <operator pos:start="91:30" pos:end="91:30">(</operator><literal type="number" pos:start="91:31" pos:end="91:33">1LL</literal> <operator pos:start="91:35" pos:end="91:36">&lt;&lt;</operator> <name pos:start="91:38" pos:end="91:51"><name pos:start="91:38" pos:end="91:38">s</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:51">csize_shift</name></name><operator pos:start="91:52" pos:end="91:52">)</operator> <operator pos:start="91:54" pos:end="91:54">-</operator> <literal type="number" pos:start="91:56" pos:end="91:56">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:60"><expr pos:start="93:5" pos:end="93:59"><name pos:start="93:5" pos:end="93:28"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:28">refcount_table_offset</name></name> <operator pos:start="93:30" pos:end="93:30">=</operator> <name pos:start="93:32" pos:end="93:59"><name pos:start="93:32" pos:end="93:37">header</name><operator pos:start="93:38" pos:end="93:38">.</operator><name pos:start="93:39" pos:end="93:59">refcount_table_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="97:64"><expr pos:start="95:5" pos:end="97:63"><name pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:26">refcount_table_size</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator>

        <name pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:14">header</name><operator pos:start="97:15" pos:end="97:15">.</operator><name pos:start="97:16" pos:end="97:38">refcount_table_clusters</name></name> <operator pos:start="97:40" pos:end="97:41">&lt;&lt;</operator> <operator pos:start="97:43" pos:end="97:43">(</operator><name pos:start="97:44" pos:end="97:58"><name pos:start="97:44" pos:end="97:44">s</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:58">cluster_bits</name></name> <operator pos:start="97:60" pos:end="97:60">-</operator> <literal type="number" pos:start="97:62" pos:end="97:62">3</literal><operator pos:start="97:63" pos:end="97:63">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:50"><expr pos:start="101:5" pos:end="101:49"><name pos:start="101:5" pos:end="101:23"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:23">snapshots_offset</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:49"><name pos:start="101:27" pos:end="101:32">header</name><operator pos:start="101:33" pos:end="101:33">.</operator><name pos:start="101:34" pos:end="101:49">snapshots_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:42"><expr pos:start="103:5" pos:end="103:41"><name pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:19">nb_snapshots</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <name pos:start="103:23" pos:end="103:41"><name pos:start="103:23" pos:end="103:28">header</name><operator pos:start="103:29" pos:end="103:29">.</operator><name pos:start="103:30" pos:end="103:41">nb_snapshots</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:32">/* read the level 1 table */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:32"><expr pos:start="109:5" pos:end="109:31"><name pos:start="109:5" pos:end="109:14"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:14">l1_size</name></name> <operator pos:start="109:16" pos:end="109:16">=</operator> <name pos:start="109:18" pos:end="109:31"><name pos:start="109:18" pos:end="109:23">header</name><operator pos:start="109:24" pos:end="109:24">.</operator><name pos:start="109:25" pos:end="109:31">l1_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:41"><expr pos:start="111:5" pos:end="111:40"><name pos:start="111:5" pos:end="111:9">shift</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <name pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:27">cluster_bits</name></name> <operator pos:start="111:29" pos:end="111:29">+</operator> <name pos:start="111:31" pos:end="111:40"><name pos:start="111:31" pos:end="111:31">s</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:40">l2_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:71"><expr pos:start="113:5" pos:end="113:70"><name pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:24">l1_vm_state_index</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <operator pos:start="113:28" pos:end="113:28">(</operator><name pos:start="113:29" pos:end="113:39"><name pos:start="113:29" pos:end="113:34">header</name><operator pos:start="113:35" pos:end="113:35">.</operator><name pos:start="113:36" pos:end="113:39">size</name></name> <operator pos:start="113:41" pos:end="113:41">+</operator> <operator pos:start="113:43" pos:end="113:43">(</operator><literal type="number" pos:start="113:44" pos:end="113:46">1LL</literal> <operator pos:start="113:48" pos:end="113:49">&lt;&lt;</operator> <name pos:start="113:51" pos:end="113:55">shift</name><operator pos:start="113:56" pos:end="113:56">)</operator> <operator pos:start="113:58" pos:end="113:58">-</operator> <literal type="number" pos:start="113:60" pos:end="113:60">1</literal><operator pos:start="113:61" pos:end="113:61">)</operator> <operator pos:start="113:63" pos:end="113:64">&gt;&gt;</operator> <name pos:start="113:66" pos:end="113:70">shift</name></expr>;</expr_stmt>

    <comment type="block" pos:start="115:5" pos:end="117:27">/* the L1 table must contain at least enough entries to put

       header.size bytes */</comment>

    <if_stmt pos:start="119:5" pos:end="121:18"><if pos:start="119:5" pos:end="121:18">if <condition pos:start="119:8" pos:end="119:42">(<expr pos:start="119:9" pos:end="119:41"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:18">l1_size</name></name> <operator pos:start="119:20" pos:end="119:20">&lt;</operator> <name pos:start="119:22" pos:end="119:41"><name pos:start="119:22" pos:end="119:22">s</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:41">l1_vm_state_index</name></name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:18"><block_content pos:start="121:9" pos:end="121:18">

        <goto pos:start="121:9" pos:end="121:18">goto <name pos:start="121:14" pos:end="121:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:48"><expr pos:start="123:5" pos:end="123:47"><name pos:start="123:5" pos:end="123:22"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:22">l1_table_offset</name></name> <operator pos:start="123:24" pos:end="123:24">=</operator> <name pos:start="123:26" pos:end="123:47"><name pos:start="123:26" pos:end="123:31">header</name><operator pos:start="123:32" pos:end="123:32">.</operator><name pos:start="123:33" pos:end="123:47">l1_table_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="127:58"><expr pos:start="125:5" pos:end="127:57"><name pos:start="125:5" pos:end="125:15"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:15">l1_table</name></name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="127:57"><name pos:start="125:19" pos:end="125:30">qemu_mallocz</name><argument_list pos:start="125:31" pos:end="127:57">(

        <argument pos:start="127:9" pos:end="127:56"><expr pos:start="127:9" pos:end="127:56"><call pos:start="127:9" pos:end="127:56"><name pos:start="127:9" pos:end="127:20">align_offset</name><argument_list pos:start="127:21" pos:end="127:56">(<argument pos:start="127:22" pos:end="127:50"><expr pos:start="127:22" pos:end="127:50"><name pos:start="127:22" pos:end="127:31"><name pos:start="127:22" pos:end="127:22">s</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:31">l1_size</name></name> <operator pos:start="127:33" pos:end="127:33">*</operator> <sizeof pos:start="127:35" pos:end="127:50">sizeof<argument_list pos:start="127:41" pos:end="127:50">(<argument pos:start="127:42" pos:end="127:49"><expr pos:start="127:42" pos:end="127:49"><name pos:start="127:42" pos:end="127:49">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="127:53" pos:end="127:55"><expr pos:start="127:53" pos:end="127:55"><literal type="number" pos:start="127:53" pos:end="127:55">512</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="133:18"><if pos:start="129:5" pos:end="133:18">if <condition pos:start="129:8" pos:end="131:38">(<expr pos:start="129:9" pos:end="131:37"><call pos:start="129:9" pos:end="129:89"><name pos:start="129:9" pos:end="129:18">bdrv_pread</name><argument_list pos:start="129:19" pos:end="129:89">(<argument pos:start="129:20" pos:end="129:24"><expr pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:20">s</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:24">hd</name></name></expr></argument>, <argument pos:start="129:27" pos:end="129:44"><expr pos:start="129:27" pos:end="129:44"><name pos:start="129:27" pos:end="129:44"><name pos:start="129:27" pos:end="129:27">s</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:44">l1_table_offset</name></name></expr></argument>, <argument pos:start="129:47" pos:end="129:57"><expr pos:start="129:47" pos:end="129:57"><name pos:start="129:47" pos:end="129:57"><name pos:start="129:47" pos:end="129:47">s</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:57">l1_table</name></name></expr></argument>, <argument pos:start="129:60" pos:end="129:88"><expr pos:start="129:60" pos:end="129:88"><name pos:start="129:60" pos:end="129:69"><name pos:start="129:60" pos:end="129:60">s</name><operator pos:start="129:61" pos:end="129:62">-&gt;</operator><name pos:start="129:63" pos:end="129:69">l1_size</name></name> <operator pos:start="129:71" pos:end="129:71">*</operator> <sizeof pos:start="129:73" pos:end="129:88">sizeof<argument_list pos:start="129:79" pos:end="129:88">(<argument pos:start="129:80" pos:end="129:87"><expr pos:start="129:80" pos:end="129:87"><name pos:start="129:80" pos:end="129:87">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="129:91" pos:end="129:92">!=</operator>

        <name pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:18">l1_size</name></name> <operator pos:start="131:20" pos:end="131:20">*</operator> <sizeof pos:start="131:22" pos:end="131:37">sizeof<argument_list pos:start="131:28" pos:end="131:37">(<argument pos:start="131:29" pos:end="131:36"><expr pos:start="131:29" pos:end="131:36"><name pos:start="131:29" pos:end="131:36">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:18"><block_content pos:start="133:9" pos:end="133:18">

        <goto pos:start="133:9" pos:end="133:18">goto <name pos:start="133:14" pos:end="133:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <for pos:start="135:5" pos:end="139:5">for<control pos:start="135:8" pos:end="135:34">(<init pos:start="135:9" pos:end="135:14"><expr pos:start="135:9" pos:end="135:13"><name pos:start="135:9" pos:end="135:9">i</name> <operator pos:start="135:11" pos:end="135:11">=</operator> <literal type="number" pos:start="135:13" pos:end="135:13">0</literal></expr>;</init><condition pos:start="135:15" pos:end="135:29"><expr pos:start="135:15" pos:end="135:28"><name pos:start="135:15" pos:end="135:15">i</name> <operator pos:start="135:17" pos:end="135:17">&lt;</operator> <name pos:start="135:19" pos:end="135:28"><name pos:start="135:19" pos:end="135:19">s</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:28">l1_size</name></name></expr>;</condition> <incr pos:start="135:31" pos:end="135:33"><expr pos:start="135:31" pos:end="135:33"><name pos:start="135:31" pos:end="135:31">i</name><operator pos:start="135:32" pos:end="135:33">++</operator></expr></incr>)</control> <block pos:start="135:36" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:38">

        <expr_stmt pos:start="137:9" pos:end="137:38"><expr pos:start="137:9" pos:end="137:37"><call pos:start="137:9" pos:end="137:37"><name pos:start="137:9" pos:end="137:20">be64_to_cpus</name><argument_list pos:start="137:21" pos:end="137:37">(<argument pos:start="137:22" pos:end="137:36"><expr pos:start="137:22" pos:end="137:36"><operator pos:start="137:22" pos:end="137:22">&amp;</operator><name pos:start="137:23" pos:end="137:36"><name pos:start="137:23" pos:end="137:23">s</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:33">l1_table</name><index pos:start="137:34" pos:end="137:36">[<expr pos:start="137:35" pos:end="137:35"><name pos:start="137:35" pos:end="137:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="141:5" pos:end="141:24">/* alloc L2 cache */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:77"><expr pos:start="143:5" pos:end="143:76"><name pos:start="143:5" pos:end="143:15"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:15">l2_cache</name></name> <operator pos:start="143:17" pos:end="143:17">=</operator> <call pos:start="143:19" pos:end="143:76"><name pos:start="143:19" pos:end="143:29">qemu_malloc</name><argument_list pos:start="143:30" pos:end="143:76">(<argument pos:start="143:31" pos:end="143:75"><expr pos:start="143:31" pos:end="143:75"><name pos:start="143:31" pos:end="143:40"><name pos:start="143:31" pos:end="143:31">s</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:40">l2_size</name></name> <operator pos:start="143:42" pos:end="143:42">*</operator> <name pos:start="143:44" pos:end="143:56">L2_CACHE_SIZE</name> <operator pos:start="143:58" pos:end="143:58">*</operator> <sizeof pos:start="143:60" pos:end="143:75">sizeof<argument_list pos:start="143:66" pos:end="143:75">(<argument pos:start="143:67" pos:end="143:74"><expr pos:start="143:67" pos:end="143:74"><name pos:start="143:67" pos:end="143:74">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:52"><expr pos:start="145:5" pos:end="145:51"><name pos:start="145:5" pos:end="145:20"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:20">cluster_cache</name></name> <operator pos:start="145:22" pos:end="145:22">=</operator> <call pos:start="145:24" pos:end="145:51"><name pos:start="145:24" pos:end="145:34">qemu_malloc</name><argument_list pos:start="145:35" pos:end="145:51">(<argument pos:start="145:36" pos:end="145:50"><expr pos:start="145:36" pos:end="145:50"><name pos:start="145:36" pos:end="145:50"><name pos:start="145:36" pos:end="145:36">s</name><operator pos:start="145:37" pos:end="145:38">-&gt;</operator><name pos:start="145:39" pos:end="145:50">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="147:5" pos:end="147:57">/* one more sector for decompressed data alignment */</comment>

    <expr_stmt pos:start="149:5" pos:end="151:41"><expr pos:start="149:5" pos:end="151:40"><name pos:start="149:5" pos:end="149:19"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:19">cluster_data</name></name> <operator pos:start="149:21" pos:end="149:21">=</operator> <call pos:start="149:23" pos:end="151:40"><name pos:start="149:23" pos:end="149:33">qemu_malloc</name><argument_list pos:start="149:34" pos:end="151:40">(<argument pos:start="149:35" pos:end="151:39"><expr pos:start="149:35" pos:end="151:39"><name pos:start="149:35" pos:end="149:57">QCOW_MAX_CRYPT_CLUSTERS</name> <operator pos:start="149:59" pos:end="149:59">*</operator> <name pos:start="149:61" pos:end="149:75"><name pos:start="149:61" pos:end="149:61">s</name><operator pos:start="149:62" pos:end="149:63">-&gt;</operator><name pos:start="149:64" pos:end="149:75">cluster_size</name></name>

                                  <operator pos:start="151:35" pos:end="151:35">+</operator> <literal type="number" pos:start="151:37" pos:end="151:39">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:33"><expr pos:start="153:5" pos:end="153:32"><name pos:start="153:5" pos:end="153:27"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:27">cluster_cache_offset</name></name> <operator pos:start="153:29" pos:end="153:29">=</operator> <operator pos:start="153:31" pos:end="153:31">-</operator><literal type="number" pos:start="153:32" pos:end="153:32">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="157:5" pos:end="159:18"><if pos:start="157:5" pos:end="159:18">if <condition pos:start="157:8" pos:end="157:36">(<expr pos:start="157:9" pos:end="157:35"><call pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:27">qcow2_refcount_init</name><argument_list pos:start="157:28" pos:end="157:31">(<argument pos:start="157:29" pos:end="157:30"><expr pos:start="157:29" pos:end="157:30"><name pos:start="157:29" pos:end="157:30">bs</name></expr></argument>)</argument_list></call> <operator pos:start="157:33" pos:end="157:33">&lt;</operator> <literal type="number" pos:start="157:35" pos:end="157:35">0</literal></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:18"><block_content pos:start="159:9" pos:end="159:18">

        <goto pos:start="159:9" pos:end="159:18">goto <name pos:start="159:14" pos:end="159:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:34"><expr pos:start="163:5" pos:end="163:33"><call pos:start="163:5" pos:end="163:33"><name pos:start="163:5" pos:end="163:13">LIST_INIT</name><argument_list pos:start="163:14" pos:end="163:33">(<argument pos:start="163:15" pos:end="163:32"><expr pos:start="163:15" pos:end="163:32"><operator pos:start="163:15" pos:end="163:15">&amp;</operator><name pos:start="163:16" pos:end="163:32"><name pos:start="163:16" pos:end="163:16">s</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:32">cluster_allocs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:31">/* read qcow2 extensions */</comment>

    <if_stmt pos:start="169:5" pos:end="175:34"><if pos:start="169:5" pos:end="171:45">if <condition pos:start="169:8" pos:end="169:35">(<expr pos:start="169:9" pos:end="169:34"><name pos:start="169:9" pos:end="169:34"><name pos:start="169:9" pos:end="169:14">header</name><operator pos:start="169:15" pos:end="169:15">.</operator><name pos:start="169:16" pos:end="169:34">backing_file_offset</name></name></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:45"><block_content pos:start="171:9" pos:end="171:45">

        <expr_stmt pos:start="171:9" pos:end="171:45"><expr pos:start="171:9" pos:end="171:44"><name pos:start="171:9" pos:end="171:15">ext_end</name> <operator pos:start="171:17" pos:end="171:17">=</operator> <name pos:start="171:19" pos:end="171:44"><name pos:start="171:19" pos:end="171:24">header</name><operator pos:start="171:25" pos:end="171:25">.</operator><name pos:start="171:26" pos:end="171:44">backing_file_offset</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="173:5" pos:end="175:34">else<block type="pseudo" pos:start="175:9" pos:end="175:34"><block_content pos:start="175:9" pos:end="175:34">

        <expr_stmt pos:start="175:9" pos:end="175:34"><expr pos:start="175:9" pos:end="175:33"><name pos:start="175:9" pos:end="175:15">ext_end</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:33"><name pos:start="175:19" pos:end="175:19">s</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:33">cluster_size</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="177:5" pos:end="179:18"><if pos:start="177:5" pos:end="179:18">if <condition pos:start="177:8" pos:end="177:58">(<expr pos:start="177:9" pos:end="177:57"><call pos:start="177:9" pos:end="177:57"><name pos:start="177:9" pos:end="177:28">qcow_read_extensions</name><argument_list pos:start="177:29" pos:end="177:57">(<argument pos:start="177:30" pos:end="177:31"><expr pos:start="177:30" pos:end="177:31"><name pos:start="177:30" pos:end="177:31">bs</name></expr></argument>, <argument pos:start="177:34" pos:end="177:47"><expr pos:start="177:34" pos:end="177:47"><sizeof pos:start="177:34" pos:end="177:47">sizeof<argument_list pos:start="177:40" pos:end="177:47">(<argument pos:start="177:41" pos:end="177:46"><expr pos:start="177:41" pos:end="177:46"><name pos:start="177:41" pos:end="177:46">header</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="177:50" pos:end="177:56"><expr pos:start="177:50" pos:end="177:56"><name pos:start="177:50" pos:end="177:56">ext_end</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:18"><block_content pos:start="179:9" pos:end="179:18">

        <goto pos:start="179:9" pos:end="179:18">goto <name pos:start="179:14" pos:end="179:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="183:5" pos:end="183:36">/* read the backing file name */</comment>

    <if_stmt pos:start="185:5" pos:end="199:5"><if pos:start="185:5" pos:end="199:5">if <condition pos:start="185:8" pos:end="185:40">(<expr pos:start="185:9" pos:end="185:39"><name pos:start="185:9" pos:end="185:34"><name pos:start="185:9" pos:end="185:14">header</name><operator pos:start="185:15" pos:end="185:15">.</operator><name pos:start="185:16" pos:end="185:34">backing_file_offset</name></name> <operator pos:start="185:36" pos:end="185:37">!=</operator> <literal type="number" pos:start="185:39" pos:end="185:39">0</literal></expr>)</condition> <block pos:start="185:42" pos:end="199:5">{<block_content pos:start="187:9" pos:end="197:37">

        <expr_stmt pos:start="187:9" pos:end="187:39"><expr pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:11">len</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <name pos:start="187:15" pos:end="187:38"><name pos:start="187:15" pos:end="187:20">header</name><operator pos:start="187:21" pos:end="187:21">.</operator><name pos:start="187:22" pos:end="187:38">backing_file_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="189:9" pos:end="191:23"><if pos:start="189:9" pos:end="191:23">if <condition pos:start="189:12" pos:end="189:23">(<expr pos:start="189:13" pos:end="189:22"><name pos:start="189:13" pos:end="189:15">len</name> <operator pos:start="189:17" pos:end="189:17">&gt;</operator> <literal type="number" pos:start="189:19" pos:end="189:22">1023</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:23"><block_content pos:start="191:13" pos:end="191:23">

            <expr_stmt pos:start="191:13" pos:end="191:23"><expr pos:start="191:13" pos:end="191:22"><name pos:start="191:13" pos:end="191:15">len</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <literal type="number" pos:start="191:19" pos:end="191:22">1023</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="193:9" pos:end="195:22"><if pos:start="193:9" pos:end="195:22">if <condition pos:start="193:12" pos:end="193:88">(<expr pos:start="193:13" pos:end="193:87"><call pos:start="193:13" pos:end="193:80"><name pos:start="193:13" pos:end="193:22">bdrv_pread</name><argument_list pos:start="193:23" pos:end="193:80">(<argument pos:start="193:24" pos:end="193:28"><expr pos:start="193:24" pos:end="193:28"><name pos:start="193:24" pos:end="193:28"><name pos:start="193:24" pos:end="193:24">s</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:28">hd</name></name></expr></argument>, <argument pos:start="193:31" pos:end="193:56"><expr pos:start="193:31" pos:end="193:56"><name pos:start="193:31" pos:end="193:56"><name pos:start="193:31" pos:end="193:36">header</name><operator pos:start="193:37" pos:end="193:37">.</operator><name pos:start="193:38" pos:end="193:56">backing_file_offset</name></name></expr></argument>, <argument pos:start="193:59" pos:end="193:74"><expr pos:start="193:59" pos:end="193:74"><name pos:start="193:59" pos:end="193:74"><name pos:start="193:59" pos:end="193:60">bs</name><operator pos:start="193:61" pos:end="193:62">-&gt;</operator><name pos:start="193:63" pos:end="193:74">backing_file</name></name></expr></argument>, <argument pos:start="193:77" pos:end="193:79"><expr pos:start="193:77" pos:end="193:79"><name pos:start="193:77" pos:end="193:79">len</name></expr></argument>)</argument_list></call> <operator pos:start="193:82" pos:end="193:83">!=</operator> <name pos:start="193:85" pos:end="193:87">len</name></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:22"><block_content pos:start="195:13" pos:end="195:22">

            <goto pos:start="195:13" pos:end="195:22">goto <name pos:start="195:18" pos:end="195:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:37"><expr pos:start="197:9" pos:end="197:36"><name pos:start="197:9" pos:end="197:29"><name pos:start="197:9" pos:end="197:10">bs</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:24">backing_file</name><index pos:start="197:25" pos:end="197:29">[<expr pos:start="197:26" pos:end="197:28"><name pos:start="197:26" pos:end="197:28">len</name></expr>]</index></name> <operator pos:start="197:31" pos:end="197:31">=</operator> <literal type="char" pos:start="197:33" pos:end="197:36">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="201:5" pos:end="208:0"><if pos:start="201:5" pos:end="208:0">if <condition pos:start="201:8" pos:end="201:37">(<expr pos:start="201:9" pos:end="201:36"><call pos:start="201:9" pos:end="201:32"><name pos:start="201:9" pos:end="201:28">qcow2_read_snapshots</name><argument_list pos:start="201:29" pos:end="201:32">(<argument pos:start="201:30" pos:end="201:31"><expr pos:start="201:30" pos:end="201:31"><name pos:start="201:30" pos:end="201:31">bs</name></expr></argument>)</argument_list></call> <operator pos:start="201:34" pos:end="201:34">&lt;</operator> <literal type="number" pos:start="201:36" pos:end="201:36">0</literal></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="208:0"><block_content pos:start="203:9" pos:end="208:0">

        <goto pos:start="203:9" pos:end="208:0">goto <name pos:start="203:14" pos:end="203:17">fail</name>;</goto></block_content></block></if></if_stmt>



<cpp:ifdef pos:start="207:1" pos:end="207:18">#<cpp:directive pos:start="207:2" pos:end="207:6">ifdef</cpp:directive> <name pos:start="207:8" pos:end="207:18">DEBUG_ALLOC</name></cpp:ifdef>

    <expr_stmt pos:start="209:5" pos:end="212:0"><expr pos:start="209:5" pos:end="209:29"><call pos:start="209:5" pos:end="209:29"><name pos:start="209:5" pos:end="209:25">qcow2_check_refcounts</name><argument_list pos:start="209:26" pos:end="209:29">(<argument pos:start="209:27" pos:end="209:28"><expr pos:start="209:27" pos:end="209:28"><name pos:start="209:27" pos:end="209:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="211:1" pos:end="211:6">#<cpp:directive pos:start="211:2" pos:end="211:6">endif</cpp:directive></cpp:endif>

    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><literal type="number" pos:start="213:12" pos:end="213:12">0</literal></expr>;</return>



 <label pos:start="217:2" pos:end="217:6"><name pos:start="217:2" pos:end="217:5">fail</name>:</label>

    <expr_stmt pos:start="219:5" pos:end="219:29"><expr pos:start="219:5" pos:end="219:28"><call pos:start="219:5" pos:end="219:28"><name pos:start="219:5" pos:end="219:24">qcow2_free_snapshots</name><argument_list pos:start="219:25" pos:end="219:28">(<argument pos:start="219:26" pos:end="219:27"><expr pos:start="219:26" pos:end="219:27"><name pos:start="219:26" pos:end="219:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:29"><expr pos:start="221:5" pos:end="221:28"><call pos:start="221:5" pos:end="221:28"><name pos:start="221:5" pos:end="221:24">qcow2_refcount_close</name><argument_list pos:start="221:25" pos:end="221:28">(<argument pos:start="221:26" pos:end="221:27"><expr pos:start="221:26" pos:end="221:27"><name pos:start="221:26" pos:end="221:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:27"><expr pos:start="223:5" pos:end="223:26"><call pos:start="223:5" pos:end="223:26"><name pos:start="223:5" pos:end="223:13">qemu_free</name><argument_list pos:start="223:14" pos:end="223:26">(<argument pos:start="223:15" pos:end="223:25"><expr pos:start="223:15" pos:end="223:25"><name pos:start="223:15" pos:end="223:25"><name pos:start="223:15" pos:end="223:15">s</name><operator pos:start="223:16" pos:end="223:17">-&gt;</operator><name pos:start="223:18" pos:end="223:25">l1_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:27"><expr pos:start="225:5" pos:end="225:26"><call pos:start="225:5" pos:end="225:26"><name pos:start="225:5" pos:end="225:13">qemu_free</name><argument_list pos:start="225:14" pos:end="225:26">(<argument pos:start="225:15" pos:end="225:25"><expr pos:start="225:15" pos:end="225:25"><name pos:start="225:15" pos:end="225:25"><name pos:start="225:15" pos:end="225:15">s</name><operator pos:start="225:16" pos:end="225:17">-&gt;</operator><name pos:start="225:18" pos:end="225:25">l2_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:32"><expr pos:start="227:5" pos:end="227:31"><call pos:start="227:5" pos:end="227:31"><name pos:start="227:5" pos:end="227:13">qemu_free</name><argument_list pos:start="227:14" pos:end="227:31">(<argument pos:start="227:15" pos:end="227:30"><expr pos:start="227:15" pos:end="227:30"><name pos:start="227:15" pos:end="227:30"><name pos:start="227:15" pos:end="227:15">s</name><operator pos:start="227:16" pos:end="227:17">-&gt;</operator><name pos:start="227:18" pos:end="227:30">cluster_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:31"><expr pos:start="229:5" pos:end="229:30"><call pos:start="229:5" pos:end="229:30"><name pos:start="229:5" pos:end="229:13">qemu_free</name><argument_list pos:start="229:14" pos:end="229:30">(<argument pos:start="229:15" pos:end="229:29"><expr pos:start="229:15" pos:end="229:29"><name pos:start="229:15" pos:end="229:29"><name pos:start="229:15" pos:end="229:15">s</name><operator pos:start="229:16" pos:end="229:17">-&gt;</operator><name pos:start="229:18" pos:end="229:29">cluster_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:23"><expr pos:start="231:5" pos:end="231:22"><call pos:start="231:5" pos:end="231:22"><name pos:start="231:5" pos:end="231:15">bdrv_delete</name><argument_list pos:start="231:16" pos:end="231:22">(<argument pos:start="231:17" pos:end="231:21"><expr pos:start="231:17" pos:end="231:21"><name pos:start="231:17" pos:end="231:21"><name pos:start="231:17" pos:end="231:17">s</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:21">hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="233:5" pos:end="233:14">return <expr pos:start="233:12" pos:end="233:13"><operator pos:start="233:12" pos:end="233:12">-</operator><literal type="number" pos:start="233:13" pos:end="233:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
