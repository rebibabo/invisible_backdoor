<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8426.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">xma_decode_init</name><parameter_list pos:start="1:35" pos:end="1:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">XMADecodeCtx</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="31:5">for <control pos:start="11:9" pos:end="11:45">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:40"><expr pos:start="11:17" pos:end="11:39"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:35"><name pos:start="11:21" pos:end="11:25">avctx</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:35">channels</name></name> <operator pos:start="11:37" pos:end="11:37">/</operator> <literal type="number" pos:start="11:39" pos:end="11:39">2</literal></expr>;</condition> <incr pos:start="11:42" pos:end="11:44"><expr pos:start="11:42" pos:end="11:44"><name pos:start="11:42" pos:end="11:42">i</name><operator pos:start="11:43" pos:end="11:44">++</operator></expr></incr>)</control> <block pos:start="11:47" pos:end="31:5">{<block_content pos:start="13:9" pos:end="27:9">

        <expr_stmt pos:start="13:9" pos:end="13:45"><expr pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:44"><name pos:start="13:15" pos:end="13:25">decode_init</name><argument_list pos:start="13:26" pos:end="13:44">(<argument pos:start="13:27" pos:end="13:36"><expr pos:start="13:27" pos:end="13:36"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:36"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:33">xma</name><index pos:start="13:34" pos:end="13:36">[<expr pos:start="13:35" pos:end="13:35"><name pos:start="13:35" pos:end="13:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="13:39" pos:end="13:43"><expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:43">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:40"><expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:17">frames</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">i</name></expr>]</index></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="15:39"><name pos:start="15:24" pos:end="15:37">av_frame_alloc</name><argument_list pos:start="15:38" pos:end="15:39">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:35"><if pos:start="17:9" pos:end="19:35">if <condition pos:start="17:12" pos:end="17:26">(<expr pos:start="17:13" pos:end="17:25"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:22">frames</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:35"><block_content pos:start="19:13" pos:end="19:35">

            <return pos:start="19:13" pos:end="19:35">return <expr pos:start="19:20" pos:end="19:34"><call pos:start="19:20" pos:end="19:34"><name pos:start="19:20" pos:end="19:26">AVERROR</name><argument_list pos:start="19:27" pos:end="19:34">(<argument pos:start="19:28" pos:end="19:33"><expr pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:17">frames</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">i</name></expr>]</index></name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:32">nb_samples</name> <operator pos:start="21:34" pos:end="21:34">=</operator> <literal type="number" pos:start="21:36" pos:end="21:38">512</literal></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:62">(<expr pos:start="23:13" pos:end="23:61"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:16">ret</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:56"><name pos:start="23:20" pos:end="23:32">ff_get_buffer</name><argument_list pos:start="23:33" pos:end="23:56">(<argument pos:start="23:34" pos:end="23:38"><expr pos:start="23:34" pos:end="23:38"><name pos:start="23:34" pos:end="23:38">avctx</name></expr></argument>, <argument pos:start="23:41" pos:end="23:52"><expr pos:start="23:41" pos:end="23:52"><name pos:start="23:41" pos:end="23:52"><name pos:start="23:41" pos:end="23:41">s</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:49">frames</name><index pos:start="23:50" pos:end="23:52">[<expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="23:55" pos:end="23:55"><expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">0</literal></expr></argument>)</argument_list></call><operator pos:start="23:57" pos:end="23:57">)</operator> <operator pos:start="23:59" pos:end="23:59">&lt;</operator> <literal type="number" pos:start="23:61" pos:end="23:61">0</literal></expr>)</condition> <block pos:start="23:64" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:35">

            <return pos:start="25:13" pos:end="25:35">return <expr pos:start="25:20" pos:end="25:34"><call pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:26">AVERROR</name><argument_list pos:start="25:27" pos:end="25:34">(<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></for>



    <return pos:start="35:5" pos:end="35:15">return <expr pos:start="35:12" pos:end="35:14"><name pos:start="35:12" pos:end="35:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
