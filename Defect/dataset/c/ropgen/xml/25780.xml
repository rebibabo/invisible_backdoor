<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25780.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:22"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">rm_read_header</name><parameter_list pos:start="1:26" pos:end="1:69">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:68"><decl pos:start="1:47" pos:end="1:68"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:64">AVFormatParameters</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">ap</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="143:22">{<block_content pos:start="3:5" pos:end="143:22">
    <decl_stmt pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:32"><type pos:start="3:5" pos:end="3:15"><name pos:start="3:5" pos:end="3:13">RMContext</name> <modifier pos:start="3:15" pos:end="3:15">*</modifier></type><name pos:start="3:16" pos:end="3:17">rm</name> <init pos:start="3:19" pos:end="3:32">= <expr pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:21">s</name><operator pos:start="3:22" pos:end="3:23">-&gt;</operator><name pos:start="3:24" pos:end="3:32">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:12">AVStream</name> <modifier pos:start="4:14" pos:end="4:14">*</modifier></type><name pos:start="4:15" pos:end="4:16">st</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">pb</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">pb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:24"><decl pos:start="6:5" pos:end="6:20"><type pos:start="6:5" pos:end="6:16"><name pos:start="6:5" pos:end="6:12">unsigned</name> <name pos:start="6:14" pos:end="6:16">int</name></type> <name pos:start="6:18" pos:end="6:20">tag</name></decl>, <decl pos:start="6:23" pos:end="6:23"><type ref="prev" pos:start="6:5" pos:end="6:16"/><name pos:start="6:23" pos:end="6:23">v</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">tag_size</name></decl>, <decl pos:start="7:19" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:22">size</name></decl>, <decl pos:start="7:25" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:39">codec_data_size</name></decl>, <decl pos:start="7:42" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:42" pos:end="7:42">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:22"><decl pos:start="8:5" pos:end="8:21"><type pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:11">int64_t</name></type> <name pos:start="8:13" pos:end="8:21">codec_pos</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:34">h263_hack_version</name></decl>, <decl pos:start="9:37" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:37" pos:end="9:46">start_time</name></decl>, <decl pos:start="9:49" pos:end="9:56"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:49" pos:end="9:56">duration</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:18"><decl pos:start="10:5" pos:end="10:17"><type pos:start="10:5" pos:end="10:8"><name pos:start="10:5" pos:end="10:8">char</name></type> <name pos:start="10:10" pos:end="10:17"><name pos:start="10:10" pos:end="10:12">buf</name><index pos:start="10:13" pos:end="10:17">[<expr pos:start="10:14" pos:end="10:16"><literal type="number" pos:start="10:14" pos:end="10:16">128</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">flags</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:23"><expr pos:start="12:5" pos:end="12:22"><name pos:start="12:5" pos:end="12:7">tag</name> <operator pos:start="12:9" pos:end="12:9">=</operator> <call pos:start="12:11" pos:end="12:22"><name pos:start="12:11" pos:end="12:18">get_le32</name><argument_list pos:start="12:19" pos:end="12:22">(<argument pos:start="12:20" pos:end="12:21"><expr pos:start="12:20" pos:end="12:21"><name pos:start="12:20" pos:end="12:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="143:22"><if pos:start="13:5" pos:end="16:5">if <condition pos:start="13:8" pos:end="13:42">(<expr pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:11">tag</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <call pos:start="13:16" pos:end="13:41"><name pos:start="13:16" pos:end="13:20">MKTAG</name><argument_list pos:start="13:21" pos:end="13:41">(<argument pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><literal type="char" pos:start="13:22" pos:end="13:24">'.'</literal></expr></argument>, <argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><literal type="char" pos:start="13:27" pos:end="13:29">'r'</literal></expr></argument>, <argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><literal type="char" pos:start="13:32" pos:end="13:34">'a'</literal></expr></argument>, <argument pos:start="13:37" pos:end="13:40"><expr pos:start="13:37" pos:end="13:40"><literal type="number" pos:start="13:37" pos:end="13:40">0xfd</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:44" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:41">
        <comment type="block" pos:start="14:9" pos:end="14:33">/* very old .ra format */</comment>
        <return pos:start="15:9" pos:end="15:41">return <expr pos:start="15:16" pos:end="15:40"><call pos:start="15:16" pos:end="15:40"><name pos:start="15:16" pos:end="15:33">rm_read_header_old</name><argument_list pos:start="15:34" pos:end="15:40">(<argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">s</name></expr></argument>, <argument pos:start="15:38" pos:end="15:39"><expr pos:start="15:38" pos:end="15:39"><name pos:start="15:38" pos:end="15:39">ap</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <if type="elseif" pos:start="16:7" pos:end="143:22">else if <condition pos:start="16:15" pos:end="16:48">(<expr pos:start="16:16" pos:end="16:47"><name pos:start="16:16" pos:end="16:18">tag</name> <operator pos:start="16:20" pos:end="16:21">!=</operator> <call pos:start="16:23" pos:end="16:47"><name pos:start="16:23" pos:end="16:27">MKTAG</name><argument_list pos:start="16:28" pos:end="16:47">(<argument pos:start="16:29" pos:end="16:31"><expr pos:start="16:29" pos:end="16:31"><literal type="char" pos:start="16:29" pos:end="16:31">'.'</literal></expr></argument>, <argument pos:start="16:34" pos:end="16:36"><expr pos:start="16:34" pos:end="16:36"><literal type="char" pos:start="16:34" pos:end="16:36">'R'</literal></expr></argument>, <argument pos:start="16:39" pos:end="16:41"><expr pos:start="16:39" pos:end="16:41"><literal type="char" pos:start="16:39" pos:end="16:41">'M'</literal></expr></argument>, <argument pos:start="16:44" pos:end="16:46"><expr pos:start="16:44" pos:end="16:46"><literal type="char" pos:start="16:44" pos:end="16:46">'F'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:50" pos:end="143:22">{<block_content pos:start="17:9" pos:end="143:22">
        <return pos:start="17:9" pos:end="17:26">return <expr pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:25">AVERROR_IO</name></expr>;</return>
    <expr_stmt pos:start="18:5" pos:end="18:17"><expr pos:start="18:5" pos:end="18:16"><call pos:start="18:5" pos:end="18:16"><name pos:start="18:5" pos:end="18:12">get_be32</name><argument_list pos:start="18:13" pos:end="18:16">(<argument pos:start="18:14" pos:end="18:15"><expr pos:start="18:14" pos:end="18:15"><name pos:start="18:14" pos:end="18:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="18:19" pos:end="18:35">/* header size */</comment>
    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><call pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">get_be16</name><argument_list pos:start="19:13" pos:end="19:16">(<argument pos:start="19:14" pos:end="19:15"><expr pos:start="19:14" pos:end="19:15"><name pos:start="19:14" pos:end="19:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:17"><expr pos:start="20:5" pos:end="20:16"><call pos:start="20:5" pos:end="20:16"><name pos:start="20:5" pos:end="20:12">get_be32</name><argument_list pos:start="20:13" pos:end="20:16">(<argument pos:start="20:14" pos:end="20:15"><expr pos:start="20:14" pos:end="20:15"><name pos:start="20:14" pos:end="20:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><call pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">get_be32</name><argument_list pos:start="21:13" pos:end="21:16">(<argument pos:start="21:14" pos:end="21:15"><expr pos:start="21:14" pos:end="21:15"><name pos:start="21:14" pos:end="21:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:19" pos:end="21:41">/* number of headers */</comment>
    <for pos:start="22:5" pos:end="143:22">for<control pos:start="22:8" pos:end="22:11">(<init pos:start="22:9" pos:end="22:9">;</init><condition pos:start="22:10" pos:end="22:10">;</condition><incr/>)</control> <block pos:start="22:13" pos:end="143:22">{<block_content pos:start="23:9" pos:end="143:22">
        <if_stmt pos:start="23:9" pos:end="24:22"><if pos:start="23:9" pos:end="24:22">if <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><call pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:20">url_feof</name><argument_list pos:start="23:21" pos:end="23:24">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="24:13" pos:end="24:22"><block_content pos:start="24:13" pos:end="24:22">
            <goto pos:start="24:13" pos:end="24:22">goto <name pos:start="24:18" pos:end="24:21">fail</name>;</goto></block_content></block></if></if_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:11">tag</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:22">get_le32</name><argument_list pos:start="25:23" pos:end="25:26">(<argument pos:start="25:24" pos:end="25:25"><expr pos:start="25:24" pos:end="25:25"><name pos:start="25:24" pos:end="25:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:32"><expr pos:start="26:9" pos:end="26:31"><name pos:start="26:9" pos:end="26:16">tag_size</name> <operator pos:start="26:18" pos:end="26:18">=</operator> <call pos:start="26:20" pos:end="26:31"><name pos:start="26:20" pos:end="26:27">get_be32</name><argument_list pos:start="26:28" pos:end="26:31">(<argument pos:start="26:29" pos:end="26:30"><expr pos:start="26:29" pos:end="26:30"><name pos:start="26:29" pos:end="26:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="37:0"><expr pos:start="27:9" pos:end="27:20"><call pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:16">get_be16</name><argument_list pos:start="27:17" pos:end="27:20">(<argument pos:start="27:18" pos:end="27:19"><expr pos:start="27:18" pos:end="27:19"><name pos:start="27:18" pos:end="27:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:start="28:1" pos:end="28:5">#<cpp:directive pos:start="28:2" pos:end="28:3">if</cpp:directive> <expr pos:start="28:5" pos:end="28:5"><literal type="number" pos:start="28:5" pos:end="28:5">0</literal></expr></cpp:if>
        printf("tag=%c%c%c%c (%08x) size=%d\n",
               (tag) &amp; 0xff,
               (tag &gt;&gt; 8) &amp; 0xff,
               (tag &gt;&gt; 16) &amp; 0xff,
               (tag &gt;&gt; 24) &amp; 0xff,
               tag,
               tag_size);
<cpp:endif pos:start="36:1" pos:end="36:6">#<cpp:directive pos:start="36:2" pos:end="36:6">endif</cpp:directive></cpp:endif>
        <if_stmt pos:start="37:9" pos:end="38:22"><if pos:start="37:9" pos:end="38:22">if <condition pos:start="37:12" pos:end="37:62">(<expr pos:start="37:13" pos:end="37:61"><name pos:start="37:13" pos:end="37:20">tag_size</name> <operator pos:start="37:22" pos:end="37:22">&lt;</operator> <literal type="number" pos:start="37:24" pos:end="37:25">10</literal> <operator pos:start="37:27" pos:end="37:28">&amp;&amp;</operator> <name pos:start="37:30" pos:end="37:32">tag</name> <operator pos:start="37:34" pos:end="37:35">!=</operator> <call pos:start="37:37" pos:end="37:61"><name pos:start="37:37" pos:end="37:41">MKTAG</name><argument_list pos:start="37:42" pos:end="37:61">(<argument pos:start="37:43" pos:end="37:45"><expr pos:start="37:43" pos:end="37:45"><literal type="char" pos:start="37:43" pos:end="37:45">'D'</literal></expr></argument>, <argument pos:start="37:48" pos:end="37:50"><expr pos:start="37:48" pos:end="37:50"><literal type="char" pos:start="37:48" pos:end="37:50">'A'</literal></expr></argument>, <argument pos:start="37:53" pos:end="37:55"><expr pos:start="37:53" pos:end="37:55"><literal type="char" pos:start="37:53" pos:end="37:55">'T'</literal></expr></argument>, <argument pos:start="37:58" pos:end="37:60"><expr pos:start="37:58" pos:end="37:60"><literal type="char" pos:start="37:58" pos:end="37:60">'A'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="38:13" pos:end="38:22"><block_content pos:start="38:13" pos:end="38:22">
            <goto pos:start="38:13" pos:end="38:22">goto <name pos:start="38:18" pos:end="38:21">fail</name>;</goto></block_content></block></if></if_stmt>
        <switch pos:start="39:9" pos:end="143:22">switch<condition pos:start="39:15" pos:end="39:19">(<expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">tag</name></expr>)</condition> <block pos:start="39:21" pos:end="143:22">{<block_content pos:start="40:9" pos:end="143:22">
        <case pos:start="40:9" pos:end="40:39">case <expr pos:start="40:14" pos:end="40:38"><call pos:start="40:14" pos:end="40:38"><name pos:start="40:14" pos:end="40:18">MKTAG</name><argument_list pos:start="40:19" pos:end="40:38">(<argument pos:start="40:20" pos:end="40:22"><expr pos:start="40:20" pos:end="40:22"><literal type="char" pos:start="40:20" pos:end="40:22">'P'</literal></expr></argument>, <argument pos:start="40:25" pos:end="40:27"><expr pos:start="40:25" pos:end="40:27"><literal type="char" pos:start="40:25" pos:end="40:27">'R'</literal></expr></argument>, <argument pos:start="40:30" pos:end="40:32"><expr pos:start="40:30" pos:end="40:32"><literal type="char" pos:start="40:30" pos:end="40:32">'O'</literal></expr></argument>, <argument pos:start="40:35" pos:end="40:37"><expr pos:start="40:35" pos:end="40:37"><literal type="char" pos:start="40:35" pos:end="40:37">'P'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <comment type="block" pos:start="41:13" pos:end="41:29">/* file header */</comment>
            <expr_stmt pos:start="42:13" pos:end="42:25"><expr pos:start="42:13" pos:end="42:24"><call pos:start="42:13" pos:end="42:24"><name pos:start="42:13" pos:end="42:20">get_be32</name><argument_list pos:start="42:21" pos:end="42:24">(<argument pos:start="42:22" pos:end="42:23"><expr pos:start="42:22" pos:end="42:23"><name pos:start="42:22" pos:end="42:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="42:27" pos:end="42:44">/* max bit rate */</comment>
            <expr_stmt pos:start="43:13" pos:end="43:25"><expr pos:start="43:13" pos:end="43:24"><call pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:20">get_be32</name><argument_list pos:start="43:21" pos:end="43:24">(<argument pos:start="43:22" pos:end="43:23"><expr pos:start="43:22" pos:end="43:23"><name pos:start="43:22" pos:end="43:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="43:27" pos:end="43:44">/* avg bit rate */</comment>
            <expr_stmt pos:start="44:13" pos:end="44:25"><expr pos:start="44:13" pos:end="44:24"><call pos:start="44:13" pos:end="44:24"><name pos:start="44:13" pos:end="44:20">get_be32</name><argument_list pos:start="44:21" pos:end="44:24">(<argument pos:start="44:22" pos:end="44:23"><expr pos:start="44:22" pos:end="44:23"><name pos:start="44:22" pos:end="44:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="44:27" pos:end="44:47">/* max packet size */</comment>
            <expr_stmt pos:start="45:13" pos:end="45:25"><expr pos:start="45:13" pos:end="45:24"><call pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:20">get_be32</name><argument_list pos:start="45:21" pos:end="45:24">(<argument pos:start="45:22" pos:end="45:23"><expr pos:start="45:22" pos:end="45:23"><name pos:start="45:22" pos:end="45:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:27" pos:end="45:47">/* avg packet size */</comment>
            <expr_stmt pos:start="46:13" pos:end="46:25"><expr pos:start="46:13" pos:end="46:24"><call pos:start="46:13" pos:end="46:24"><name pos:start="46:13" pos:end="46:20">get_be32</name><argument_list pos:start="46:21" pos:end="46:24">(<argument pos:start="46:22" pos:end="46:23"><expr pos:start="46:22" pos:end="46:23"><name pos:start="46:22" pos:end="46:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="46:27" pos:end="46:42">/* nb packets */</comment>
            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><call pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:20">get_be32</name><argument_list pos:start="47:21" pos:end="47:24">(<argument pos:start="47:22" pos:end="47:23"><expr pos:start="47:22" pos:end="47:23"><name pos:start="47:22" pos:end="47:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="47:27" pos:end="47:40">/* duration */</comment>
            <expr_stmt pos:start="48:13" pos:end="48:25"><expr pos:start="48:13" pos:end="48:24"><call pos:start="48:13" pos:end="48:24"><name pos:start="48:13" pos:end="48:20">get_be32</name><argument_list pos:start="48:21" pos:end="48:24">(<argument pos:start="48:22" pos:end="48:23"><expr pos:start="48:22" pos:end="48:23"><name pos:start="48:22" pos:end="48:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="48:27" pos:end="48:39">/* preroll */</comment>
            <expr_stmt pos:start="49:13" pos:end="49:25"><expr pos:start="49:13" pos:end="49:24"><call pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:20">get_be32</name><argument_list pos:start="49:21" pos:end="49:24">(<argument pos:start="49:22" pos:end="49:23"><expr pos:start="49:22" pos:end="49:23"><name pos:start="49:22" pos:end="49:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:27" pos:end="49:44">/* index offset */</comment>
            <expr_stmt pos:start="50:13" pos:end="50:25"><expr pos:start="50:13" pos:end="50:24"><call pos:start="50:13" pos:end="50:24"><name pos:start="50:13" pos:end="50:20">get_be32</name><argument_list pos:start="50:21" pos:end="50:24">(<argument pos:start="50:22" pos:end="50:23"><expr pos:start="50:22" pos:end="50:23"><name pos:start="50:22" pos:end="50:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="50:27" pos:end="50:43">/* data offset */</comment>
            <expr_stmt pos:start="51:13" pos:end="51:25"><expr pos:start="51:13" pos:end="51:24"><call pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:20">get_be16</name><argument_list pos:start="51:21" pos:end="51:24">(<argument pos:start="51:22" pos:end="51:23"><expr pos:start="51:22" pos:end="51:23"><name pos:start="51:22" pos:end="51:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:27" pos:end="51:42">/* nb streams */</comment>
            <expr_stmt pos:start="52:13" pos:end="52:33"><expr pos:start="52:13" pos:end="52:32"><name pos:start="52:13" pos:end="52:17">flags</name> <operator pos:start="52:19" pos:end="52:19">=</operator> <call pos:start="52:21" pos:end="52:32"><name pos:start="52:21" pos:end="52:28">get_be16</name><argument_list pos:start="52:29" pos:end="52:32">(<argument pos:start="52:30" pos:end="52:31"><expr pos:start="52:30" pos:end="52:31"><name pos:start="52:30" pos:end="52:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="52:35" pos:end="52:45">/* flags */</comment>
            <break pos:start="53:13" pos:end="53:18">break;</break>
        <case pos:start="54:9" pos:end="54:39">case <expr pos:start="54:14" pos:end="54:38"><call pos:start="54:14" pos:end="54:38"><name pos:start="54:14" pos:end="54:18">MKTAG</name><argument_list pos:start="54:19" pos:end="54:38">(<argument pos:start="54:20" pos:end="54:22"><expr pos:start="54:20" pos:end="54:22"><literal type="char" pos:start="54:20" pos:end="54:22">'C'</literal></expr></argument>, <argument pos:start="54:25" pos:end="54:27"><expr pos:start="54:25" pos:end="54:27"><literal type="char" pos:start="54:25" pos:end="54:27">'O'</literal></expr></argument>, <argument pos:start="54:30" pos:end="54:32"><expr pos:start="54:30" pos:end="54:32"><literal type="char" pos:start="54:30" pos:end="54:32">'N'</literal></expr></argument>, <argument pos:start="54:35" pos:end="54:37"><expr pos:start="54:35" pos:end="54:37"><literal type="char" pos:start="54:35" pos:end="54:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="55:13" pos:end="55:52"><expr pos:start="55:13" pos:end="55:51"><call pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:19">get_str</name><argument_list pos:start="55:20" pos:end="55:51">(<argument pos:start="55:21" pos:end="55:22"><expr pos:start="55:21" pos:end="55:22"><name pos:start="55:21" pos:end="55:22">pb</name></expr></argument>, <argument pos:start="55:25" pos:end="55:32"><expr pos:start="55:25" pos:end="55:32"><name pos:start="55:25" pos:end="55:32"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:32">title</name></name></expr></argument>, <argument pos:start="55:35" pos:end="55:50"><expr pos:start="55:35" pos:end="55:50"><sizeof pos:start="55:35" pos:end="55:50">sizeof<argument_list pos:start="55:41" pos:end="55:50">(<argument pos:start="55:42" pos:end="55:49"><expr pos:start="55:42" pos:end="55:49"><name pos:start="55:42" pos:end="55:49"><name pos:start="55:42" pos:end="55:42">s</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:49">title</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="56:13" pos:end="56:54"><expr pos:start="56:13" pos:end="56:53"><call pos:start="56:13" pos:end="56:53"><name pos:start="56:13" pos:end="56:19">get_str</name><argument_list pos:start="56:20" pos:end="56:53">(<argument pos:start="56:21" pos:end="56:22"><expr pos:start="56:21" pos:end="56:22"><name pos:start="56:21" pos:end="56:22">pb</name></expr></argument>, <argument pos:start="56:25" pos:end="56:33"><expr pos:start="56:25" pos:end="56:33"><name pos:start="56:25" pos:end="56:33"><name pos:start="56:25" pos:end="56:25">s</name><operator pos:start="56:26" pos:end="56:27">-&gt;</operator><name pos:start="56:28" pos:end="56:33">author</name></name></expr></argument>, <argument pos:start="56:36" pos:end="56:52"><expr pos:start="56:36" pos:end="56:52"><sizeof pos:start="56:36" pos:end="56:52">sizeof<argument_list pos:start="56:42" pos:end="56:52">(<argument pos:start="56:43" pos:end="56:51"><expr pos:start="56:43" pos:end="56:51"><name pos:start="56:43" pos:end="56:51"><name pos:start="56:43" pos:end="56:43">s</name><operator pos:start="56:44" pos:end="56:45">-&gt;</operator><name pos:start="56:46" pos:end="56:51">author</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="57:13" pos:end="57:60"><expr pos:start="57:13" pos:end="57:59"><call pos:start="57:13" pos:end="57:59"><name pos:start="57:13" pos:end="57:19">get_str</name><argument_list pos:start="57:20" pos:end="57:59">(<argument pos:start="57:21" pos:end="57:22"><expr pos:start="57:21" pos:end="57:22"><name pos:start="57:21" pos:end="57:22">pb</name></expr></argument>, <argument pos:start="57:25" pos:end="57:36"><expr pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:36">copyright</name></name></expr></argument>, <argument pos:start="57:39" pos:end="57:58"><expr pos:start="57:39" pos:end="57:58"><sizeof pos:start="57:39" pos:end="57:58">sizeof<argument_list pos:start="57:45" pos:end="57:58">(<argument pos:start="57:46" pos:end="57:57"><expr pos:start="57:46" pos:end="57:57"><name pos:start="57:46" pos:end="57:57"><name pos:start="57:46" pos:end="57:46">s</name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:57">copyright</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:56"><expr pos:start="58:13" pos:end="58:55"><call pos:start="58:13" pos:end="58:55"><name pos:start="58:13" pos:end="58:19">get_str</name><argument_list pos:start="58:20" pos:end="58:55">(<argument pos:start="58:21" pos:end="58:22"><expr pos:start="58:21" pos:end="58:22"><name pos:start="58:21" pos:end="58:22">pb</name></expr></argument>, <argument pos:start="58:25" pos:end="58:34"><expr pos:start="58:25" pos:end="58:34"><name pos:start="58:25" pos:end="58:34"><name pos:start="58:25" pos:end="58:25">s</name><operator pos:start="58:26" pos:end="58:27">-&gt;</operator><name pos:start="58:28" pos:end="58:34">comment</name></name></expr></argument>, <argument pos:start="58:37" pos:end="58:54"><expr pos:start="58:37" pos:end="58:54"><sizeof pos:start="58:37" pos:end="58:54">sizeof<argument_list pos:start="58:43" pos:end="58:54">(<argument pos:start="58:44" pos:end="58:53"><expr pos:start="58:44" pos:end="58:53"><name pos:start="58:44" pos:end="58:53"><name pos:start="58:44" pos:end="58:44">s</name><operator pos:start="58:45" pos:end="58:46">-&gt;</operator><name pos:start="58:47" pos:end="58:53">comment</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="59:13" pos:end="59:18">break;</break>
        <case pos:start="60:9" pos:end="60:39">case <expr pos:start="60:14" pos:end="60:38"><call pos:start="60:14" pos:end="60:38"><name pos:start="60:14" pos:end="60:18">MKTAG</name><argument_list pos:start="60:19" pos:end="60:38">(<argument pos:start="60:20" pos:end="60:22"><expr pos:start="60:20" pos:end="60:22"><literal type="char" pos:start="60:20" pos:end="60:22">'M'</literal></expr></argument>, <argument pos:start="60:25" pos:end="60:27"><expr pos:start="60:25" pos:end="60:27"><literal type="char" pos:start="60:25" pos:end="60:27">'D'</literal></expr></argument>, <argument pos:start="60:30" pos:end="60:32"><expr pos:start="60:30" pos:end="60:32"><literal type="char" pos:start="60:30" pos:end="60:32">'P'</literal></expr></argument>, <argument pos:start="60:35" pos:end="60:37"><expr pos:start="60:35" pos:end="60:37"><literal type="char" pos:start="60:35" pos:end="60:37">'R'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <expr_stmt pos:start="61:13" pos:end="61:37"><expr pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:14">st</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:36"><name pos:start="61:18" pos:end="61:30">av_new_stream</name><argument_list pos:start="61:31" pos:end="61:36">(<argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">s</name></expr></argument>, <argument pos:start="61:35" pos:end="61:35"><expr pos:start="61:35" pos:end="61:35"><literal type="number" pos:start="61:35" pos:end="61:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="62:13" pos:end="63:26"><if pos:start="62:13" pos:end="63:26">if <condition pos:start="62:16" pos:end="62:20">(<expr pos:start="62:17" pos:end="62:19"><operator pos:start="62:17" pos:end="62:17">!</operator><name pos:start="62:18" pos:end="62:19">st</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:26"><block_content pos:start="63:17" pos:end="63:26">
                <goto pos:start="63:17" pos:end="63:26">goto <name pos:start="63:22" pos:end="63:25">fail</name>;</goto></block_content></block></if></if_stmt>
            <expr_stmt pos:start="64:13" pos:end="64:34"><expr pos:start="64:13" pos:end="64:33"><name pos:start="64:13" pos:end="64:18"><name pos:start="64:13" pos:end="64:14">st</name><operator pos:start="64:15" pos:end="64:16">-&gt;</operator><name pos:start="64:17" pos:end="64:18">id</name></name> <operator pos:start="64:20" pos:end="64:20">=</operator> <call pos:start="64:22" pos:end="64:33"><name pos:start="64:22" pos:end="64:29">get_be16</name><argument_list pos:start="64:30" pos:end="64:33">(<argument pos:start="64:31" pos:end="64:32"><expr pos:start="64:31" pos:end="64:32"><name pos:start="64:31" pos:end="64:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="65:13" pos:end="65:25"><expr pos:start="65:13" pos:end="65:24"><call pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:20">get_be32</name><argument_list pos:start="65:21" pos:end="65:24">(<argument pos:start="65:22" pos:end="65:23"><expr pos:start="65:22" pos:end="65:23"><name pos:start="65:22" pos:end="65:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:27" pos:end="65:44">/* max bit rate */</comment>
            <expr_stmt pos:start="66:13" pos:end="66:47"><expr pos:start="66:13" pos:end="66:46"><name pos:start="66:13" pos:end="66:31"><name pos:start="66:13" pos:end="66:14">st</name><operator pos:start="66:15" pos:end="66:16">-&gt;</operator><name pos:start="66:17" pos:end="66:21">codec</name><operator pos:start="66:22" pos:end="66:23">-&gt;</operator><name pos:start="66:24" pos:end="66:31">bit_rate</name></name> <operator pos:start="66:33" pos:end="66:33">=</operator> <call pos:start="66:35" pos:end="66:46"><name pos:start="66:35" pos:end="66:42">get_be32</name><argument_list pos:start="66:43" pos:end="66:46">(<argument pos:start="66:44" pos:end="66:45"><expr pos:start="66:44" pos:end="66:45"><name pos:start="66:44" pos:end="66:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="66:49" pos:end="66:62">/* bit rate */</comment>
            <expr_stmt pos:start="67:13" pos:end="67:25"><expr pos:start="67:13" pos:end="67:24"><call pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:20">get_be32</name><argument_list pos:start="67:21" pos:end="67:24">(<argument pos:start="67:22" pos:end="67:23"><expr pos:start="67:22" pos:end="67:23"><name pos:start="67:22" pos:end="67:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:27" pos:end="67:47">/* max packet size */</comment>
            <expr_stmt pos:start="68:13" pos:end="68:25"><expr pos:start="68:13" pos:end="68:24"><call pos:start="68:13" pos:end="68:24"><name pos:start="68:13" pos:end="68:20">get_be32</name><argument_list pos:start="68:21" pos:end="68:24">(<argument pos:start="68:22" pos:end="68:23"><expr pos:start="68:22" pos:end="68:23"><name pos:start="68:22" pos:end="68:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="68:27" pos:end="68:47">/* avg packet size */</comment>
            <expr_stmt pos:start="69:13" pos:end="69:38"><expr pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:22">start_time</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:37"><name pos:start="69:26" pos:end="69:33">get_be32</name><argument_list pos:start="69:34" pos:end="69:37">(<argument pos:start="69:35" pos:end="69:36"><expr pos:start="69:35" pos:end="69:36"><name pos:start="69:35" pos:end="69:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:40" pos:end="69:55">/* start time */</comment>
            <expr_stmt pos:start="70:13" pos:end="70:25"><expr pos:start="70:13" pos:end="70:24"><call pos:start="70:13" pos:end="70:24"><name pos:start="70:13" pos:end="70:20">get_be32</name><argument_list pos:start="70:21" pos:end="70:24">(<argument pos:start="70:22" pos:end="70:23"><expr pos:start="70:22" pos:end="70:23"><name pos:start="70:22" pos:end="70:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="70:27" pos:end="70:39">/* preroll */</comment>
            <expr_stmt pos:start="71:13" pos:end="71:36"><expr pos:start="71:13" pos:end="71:35"><name pos:start="71:13" pos:end="71:20">duration</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:31">get_be32</name><argument_list pos:start="71:32" pos:end="71:35">(<argument pos:start="71:33" pos:end="71:34"><expr pos:start="71:33" pos:end="71:34"><name pos:start="71:33" pos:end="71:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:38" pos:end="71:51">/* duration */</comment>
            <expr_stmt pos:start="72:13" pos:end="72:40"><expr pos:start="72:13" pos:end="72:39"><name pos:start="72:13" pos:end="72:26"><name pos:start="72:13" pos:end="72:14">st</name><operator pos:start="72:15" pos:end="72:16">-&gt;</operator><name pos:start="72:17" pos:end="72:26">start_time</name></name> <operator pos:start="72:28" pos:end="72:28">=</operator> <name pos:start="72:30" pos:end="72:39">start_time</name></expr>;</expr_stmt>
            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:14">st</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:24">duration</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:35">duration</name></expr>;</expr_stmt>
            <expr_stmt pos:start="74:13" pos:end="74:43"><expr pos:start="74:13" pos:end="74:42"><call pos:start="74:13" pos:end="74:42"><name pos:start="74:13" pos:end="74:20">get_str8</name><argument_list pos:start="74:21" pos:end="74:42">(<argument pos:start="74:22" pos:end="74:23"><expr pos:start="74:22" pos:end="74:23"><name pos:start="74:22" pos:end="74:23">pb</name></expr></argument>, <argument pos:start="74:26" pos:end="74:28"><expr pos:start="74:26" pos:end="74:28"><name pos:start="74:26" pos:end="74:28">buf</name></expr></argument>, <argument pos:start="74:31" pos:end="74:41"><expr pos:start="74:31" pos:end="74:41"><sizeof pos:start="74:31" pos:end="74:41">sizeof<argument_list pos:start="74:37" pos:end="74:41">(<argument pos:start="74:38" pos:end="74:40"><expr pos:start="74:38" pos:end="74:40"><name pos:start="74:38" pos:end="74:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="74:45" pos:end="74:54">/* desc */</comment>
            <expr_stmt pos:start="75:13" pos:end="75:43"><expr pos:start="75:13" pos:end="75:42"><call pos:start="75:13" pos:end="75:42"><name pos:start="75:13" pos:end="75:20">get_str8</name><argument_list pos:start="75:21" pos:end="75:42">(<argument pos:start="75:22" pos:end="75:23"><expr pos:start="75:22" pos:end="75:23"><name pos:start="75:22" pos:end="75:23">pb</name></expr></argument>, <argument pos:start="75:26" pos:end="75:28"><expr pos:start="75:26" pos:end="75:28"><name pos:start="75:26" pos:end="75:28">buf</name></expr></argument>, <argument pos:start="75:31" pos:end="75:41"><expr pos:start="75:31" pos:end="75:41"><sizeof pos:start="75:31" pos:end="75:41">sizeof<argument_list pos:start="75:37" pos:end="75:41">(<argument pos:start="75:38" pos:end="75:40"><expr pos:start="75:38" pos:end="75:40"><name pos:start="75:38" pos:end="75:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:45" pos:end="75:58">/* mimetype */</comment>
            <expr_stmt pos:start="76:13" pos:end="76:43"><expr pos:start="76:13" pos:end="76:42"><name pos:start="76:13" pos:end="76:27">codec_data_size</name> <operator pos:start="76:29" pos:end="76:29">=</operator> <call pos:start="76:31" pos:end="76:42"><name pos:start="76:31" pos:end="76:38">get_be32</name><argument_list pos:start="76:39" pos:end="76:42">(<argument pos:start="76:40" pos:end="76:41"><expr pos:start="76:40" pos:end="76:41"><name pos:start="76:40" pos:end="76:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="77:13" pos:end="77:38"><expr pos:start="77:13" pos:end="77:37"><name pos:start="77:13" pos:end="77:21">codec_pos</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <call pos:start="77:25" pos:end="77:37"><name pos:start="77:25" pos:end="77:33">url_ftell</name><argument_list pos:start="77:34" pos:end="77:37">(<argument pos:start="77:35" pos:end="77:36"><expr pos:start="77:35" pos:end="77:36"><name pos:start="77:35" pos:end="77:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="78:13" pos:end="78:52"><expr pos:start="78:13" pos:end="78:51"><name pos:start="78:13" pos:end="78:33"><name pos:start="78:13" pos:end="78:14">st</name><operator pos:start="78:15" pos:end="78:16">-&gt;</operator><name pos:start="78:17" pos:end="78:21">codec</name><operator pos:start="78:22" pos:end="78:23">-&gt;</operator><name pos:start="78:24" pos:end="78:33">codec_type</name></name> <operator pos:start="78:35" pos:end="78:35">=</operator> <name pos:start="78:37" pos:end="78:51">CODEC_TYPE_DATA</name></expr>;</expr_stmt>
            <expr_stmt pos:start="79:13" pos:end="79:45"><expr pos:start="79:13" pos:end="79:44"><call pos:start="79:13" pos:end="79:44"><name pos:start="79:13" pos:end="79:27">av_set_pts_info</name><argument_list pos:start="79:28" pos:end="79:44">(<argument pos:start="79:29" pos:end="79:30"><expr pos:start="79:29" pos:end="79:30"><name pos:start="79:29" pos:end="79:30">st</name></expr></argument>, <argument pos:start="79:33" pos:end="79:34"><expr pos:start="79:33" pos:end="79:34"><literal type="number" pos:start="79:33" pos:end="79:34">64</literal></expr></argument>, <argument pos:start="79:37" pos:end="79:37"><expr pos:start="79:37" pos:end="79:37"><literal type="number" pos:start="79:37" pos:end="79:37">1</literal></expr></argument>, <argument pos:start="79:40" pos:end="79:43"><expr pos:start="79:40" pos:end="79:43"><literal type="number" pos:start="79:40" pos:end="79:43">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="80:13" pos:end="80:29"><expr pos:start="80:13" pos:end="80:28"><name pos:start="80:13" pos:end="80:13">v</name> <operator pos:start="80:15" pos:end="80:15">=</operator> <call pos:start="80:17" pos:end="80:28"><name pos:start="80:17" pos:end="80:24">get_be32</name><argument_list pos:start="80:25" pos:end="80:28">(<argument pos:start="80:26" pos:end="80:27"><expr pos:start="80:26" pos:end="80:27"><name pos:start="80:26" pos:end="80:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="81:13" pos:end="143:22"><if pos:start="81:13" pos:end="84:13">if <condition pos:start="81:16" pos:end="81:48">(<expr pos:start="81:17" pos:end="81:47"><name pos:start="81:17" pos:end="81:17">v</name> <operator pos:start="81:19" pos:end="81:20">==</operator> <call pos:start="81:22" pos:end="81:47"><name pos:start="81:22" pos:end="81:26">MKTAG</name><argument_list pos:start="81:27" pos:end="81:47">(<argument pos:start="81:28" pos:end="81:31"><expr pos:start="81:28" pos:end="81:31"><literal type="number" pos:start="81:28" pos:end="81:31">0xfd</literal></expr></argument>, <argument pos:start="81:34" pos:end="81:36"><expr pos:start="81:34" pos:end="81:36"><literal type="char" pos:start="81:34" pos:end="81:36">'a'</literal></expr></argument>, <argument pos:start="81:39" pos:end="81:41"><expr pos:start="81:39" pos:end="81:41"><literal type="char" pos:start="81:39" pos:end="81:41">'r'</literal></expr></argument>, <argument pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><literal type="char" pos:start="81:44" pos:end="81:46">'.'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:50" pos:end="84:13">{<block_content pos:start="83:17" pos:end="83:52">
                <comment type="block" pos:start="82:17" pos:end="82:36">/* ra type header */</comment>
                <expr_stmt pos:start="83:17" pos:end="83:52"><expr pos:start="83:17" pos:end="83:51"><call pos:start="83:17" pos:end="83:51"><name pos:start="83:17" pos:end="83:41">rm_read_audio_stream_info</name><argument_list pos:start="83:42" pos:end="83:51">(<argument pos:start="83:43" pos:end="83:43"><expr pos:start="83:43" pos:end="83:43"><name pos:start="83:43" pos:end="83:43">s</name></expr></argument>, <argument pos:start="83:46" pos:end="83:47"><expr pos:start="83:46" pos:end="83:47"><name pos:start="83:46" pos:end="83:47">st</name></expr></argument>, <argument pos:start="83:50" pos:end="83:50"><expr pos:start="83:50" pos:end="83:50"><literal type="number" pos:start="83:50" pos:end="83:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="84:15" pos:end="143:22">else <block pos:start="84:20" pos:end="143:22">{<block_content pos:start="85:17" pos:end="143:22">
                <decl_stmt pos:start="85:17" pos:end="85:30"><decl pos:start="85:17" pos:end="85:23"><type pos:start="85:17" pos:end="85:19"><name pos:start="85:17" pos:end="85:19">int</name></type> <name pos:start="85:21" pos:end="85:23">fps</name></decl>, <decl pos:start="85:26" pos:end="85:29"><type ref="prev" pos:start="85:17" pos:end="85:19"/><name pos:start="85:26" pos:end="85:29">fps2</name></decl>;</decl_stmt>
                <if_stmt pos:start="86:17" pos:end="143:22"><if pos:start="86:17" pos:end="143:22">if <condition pos:start="86:20" pos:end="86:62">(<expr pos:start="86:21" pos:end="86:61"><call pos:start="86:21" pos:end="86:32"><name pos:start="86:21" pos:end="86:28">get_le32</name><argument_list pos:start="86:29" pos:end="86:32">(<argument pos:start="86:30" pos:end="86:31"><expr pos:start="86:30" pos:end="86:31"><name pos:start="86:30" pos:end="86:31">pb</name></expr></argument>)</argument_list></call> <operator pos:start="86:34" pos:end="86:35">!=</operator> <call pos:start="86:37" pos:end="86:61"><name pos:start="86:37" pos:end="86:41">MKTAG</name><argument_list pos:start="86:42" pos:end="86:61">(<argument pos:start="86:43" pos:end="86:45"><expr pos:start="86:43" pos:end="86:45"><literal type="char" pos:start="86:43" pos:end="86:45">'V'</literal></expr></argument>, <argument pos:start="86:48" pos:end="86:50"><expr pos:start="86:48" pos:end="86:50"><literal type="char" pos:start="86:48" pos:end="86:50">'I'</literal></expr></argument>, <argument pos:start="86:53" pos:end="86:55"><expr pos:start="86:53" pos:end="86:55"><literal type="char" pos:start="86:53" pos:end="86:55">'D'</literal></expr></argument>, <argument pos:start="86:58" pos:end="86:60"><expr pos:start="86:58" pos:end="86:60"><literal type="char" pos:start="86:58" pos:end="86:60">'O'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="86:64" pos:end="143:22">{<block_content pos:start="87:17" pos:end="143:22">
                <label pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:21">fail1</name>:</label>
                    <expr_stmt pos:start="88:21" pos:end="88:81"><expr pos:start="88:21" pos:end="88:80"><call pos:start="88:21" pos:end="88:80"><name pos:start="88:21" pos:end="88:26">av_log</name><argument_list pos:start="88:27" pos:end="88:80">(<argument pos:start="88:28" pos:end="88:36"><expr pos:start="88:28" pos:end="88:36"><name pos:start="88:28" pos:end="88:36"><name pos:start="88:28" pos:end="88:29">st</name><operator pos:start="88:30" pos:end="88:31">-&gt;</operator><name pos:start="88:32" pos:end="88:36">codec</name></name></expr></argument>, <argument pos:start="88:39" pos:end="88:50"><expr pos:start="88:39" pos:end="88:50"><name pos:start="88:39" pos:end="88:50">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="88:53" pos:end="88:79"><expr pos:start="88:53" pos:end="88:79"><literal type="string" pos:start="88:53" pos:end="88:79">"Unsupported video codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <goto pos:start="89:21" pos:end="89:30">goto <name pos:start="89:26" pos:end="89:29">skip</name>;</goto>
                <expr_stmt pos:start="90:17" pos:end="90:52"><expr pos:start="90:17" pos:end="90:51"><name pos:start="90:17" pos:end="90:36"><name pos:start="90:17" pos:end="90:18">st</name><operator pos:start="90:19" pos:end="90:20">-&gt;</operator><name pos:start="90:21" pos:end="90:25">codec</name><operator pos:start="90:26" pos:end="90:27">-&gt;</operator><name pos:start="90:28" pos:end="90:36">codec_tag</name></name> <operator pos:start="90:38" pos:end="90:38">=</operator> <call pos:start="90:40" pos:end="90:51"><name pos:start="90:40" pos:end="90:47">get_le32</name><argument_list pos:start="90:48" pos:end="90:51">(<argument pos:start="90:49" pos:end="90:50"><expr pos:start="90:49" pos:end="90:50"><name pos:start="90:49" pos:end="90:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="91:1" pos:end="91:105">//                av_log(NULL, AV_LOG_DEBUG, "%X %X\n", st-&gt;codec-&gt;codec_tag, MKTAG('R', 'V', '2', '0'));</comment>
                <if_stmt pos:start="92:17" pos:end="96:31"><if pos:start="92:17" pos:end="96:31">if <condition pos:start="92:20" pos:end="95:73">(   <expr pos:start="92:24" pos:end="95:72"><name pos:start="92:24" pos:end="92:43"><name pos:start="92:24" pos:end="92:25">st</name><operator pos:start="92:26" pos:end="92:27">-&gt;</operator><name pos:start="92:28" pos:end="92:32">codec</name><operator pos:start="92:33" pos:end="92:34">-&gt;</operator><name pos:start="92:35" pos:end="92:43">codec_tag</name></name> <operator pos:start="92:45" pos:end="92:46">!=</operator> <call pos:start="92:48" pos:end="92:72"><name pos:start="92:48" pos:end="92:52">MKTAG</name><argument_list pos:start="92:53" pos:end="92:72">(<argument pos:start="92:54" pos:end="92:56"><expr pos:start="92:54" pos:end="92:56"><literal type="char" pos:start="92:54" pos:end="92:56">'R'</literal></expr></argument>, <argument pos:start="92:59" pos:end="92:61"><expr pos:start="92:59" pos:end="92:61"><literal type="char" pos:start="92:59" pos:end="92:61">'V'</literal></expr></argument>, <argument pos:start="92:64" pos:end="92:66"><expr pos:start="92:64" pos:end="92:66"><literal type="char" pos:start="92:64" pos:end="92:66">'1'</literal></expr></argument>, <argument pos:start="92:69" pos:end="92:71"><expr pos:start="92:69" pos:end="92:71"><literal type="char" pos:start="92:69" pos:end="92:71">'0'</literal></expr></argument>)</argument_list></call>
                    <operator pos:start="93:21" pos:end="93:22">&amp;&amp;</operator> <name pos:start="93:24" pos:end="93:43"><name pos:start="93:24" pos:end="93:25">st</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:32">codec</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:43">codec_tag</name></name> <operator pos:start="93:45" pos:end="93:46">!=</operator> <call pos:start="93:48" pos:end="93:72"><name pos:start="93:48" pos:end="93:52">MKTAG</name><argument_list pos:start="93:53" pos:end="93:72">(<argument pos:start="93:54" pos:end="93:56"><expr pos:start="93:54" pos:end="93:56"><literal type="char" pos:start="93:54" pos:end="93:56">'R'</literal></expr></argument>, <argument pos:start="93:59" pos:end="93:61"><expr pos:start="93:59" pos:end="93:61"><literal type="char" pos:start="93:59" pos:end="93:61">'V'</literal></expr></argument>, <argument pos:start="93:64" pos:end="93:66"><expr pos:start="93:64" pos:end="93:66"><literal type="char" pos:start="93:64" pos:end="93:66">'2'</literal></expr></argument>, <argument pos:start="93:69" pos:end="93:71"><expr pos:start="93:69" pos:end="93:71"><literal type="char" pos:start="93:69" pos:end="93:71">'0'</literal></expr></argument>)</argument_list></call>
                    <operator pos:start="94:21" pos:end="94:22">&amp;&amp;</operator> <name pos:start="94:24" pos:end="94:43"><name pos:start="94:24" pos:end="94:25">st</name><operator pos:start="94:26" pos:end="94:27">-&gt;</operator><name pos:start="94:28" pos:end="94:32">codec</name><operator pos:start="94:33" pos:end="94:34">-&gt;</operator><name pos:start="94:35" pos:end="94:43">codec_tag</name></name> <operator pos:start="94:45" pos:end="94:46">!=</operator> <call pos:start="94:48" pos:end="94:72"><name pos:start="94:48" pos:end="94:52">MKTAG</name><argument_list pos:start="94:53" pos:end="94:72">(<argument pos:start="94:54" pos:end="94:56"><expr pos:start="94:54" pos:end="94:56"><literal type="char" pos:start="94:54" pos:end="94:56">'R'</literal></expr></argument>, <argument pos:start="94:59" pos:end="94:61"><expr pos:start="94:59" pos:end="94:61"><literal type="char" pos:start="94:59" pos:end="94:61">'V'</literal></expr></argument>, <argument pos:start="94:64" pos:end="94:66"><expr pos:start="94:64" pos:end="94:66"><literal type="char" pos:start="94:64" pos:end="94:66">'3'</literal></expr></argument>, <argument pos:start="94:69" pos:end="94:71"><expr pos:start="94:69" pos:end="94:71"><literal type="char" pos:start="94:69" pos:end="94:71">'0'</literal></expr></argument>)</argument_list></call>
                    <operator pos:start="95:21" pos:end="95:22">&amp;&amp;</operator> <name pos:start="95:24" pos:end="95:43"><name pos:start="95:24" pos:end="95:25">st</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:32">codec</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:43">codec_tag</name></name> <operator pos:start="95:45" pos:end="95:46">!=</operator> <call pos:start="95:48" pos:end="95:72"><name pos:start="95:48" pos:end="95:52">MKTAG</name><argument_list pos:start="95:53" pos:end="95:72">(<argument pos:start="95:54" pos:end="95:56"><expr pos:start="95:54" pos:end="95:56"><literal type="char" pos:start="95:54" pos:end="95:56">'R'</literal></expr></argument>, <argument pos:start="95:59" pos:end="95:61"><expr pos:start="95:59" pos:end="95:61"><literal type="char" pos:start="95:59" pos:end="95:61">'V'</literal></expr></argument>, <argument pos:start="95:64" pos:end="95:66"><expr pos:start="95:64" pos:end="95:66"><literal type="char" pos:start="95:64" pos:end="95:66">'4'</literal></expr></argument>, <argument pos:start="95:69" pos:end="95:71"><expr pos:start="95:69" pos:end="95:71"><literal type="char" pos:start="95:69" pos:end="95:71">'0'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="96:21" pos:end="96:31"><block_content pos:start="96:21" pos:end="96:31">
                    <goto pos:start="96:21" pos:end="96:31">goto <name pos:start="96:26" pos:end="96:30">fail1</name>;</goto></block_content></block></if></if_stmt>
                <expr_stmt pos:start="97:17" pos:end="97:48"><expr pos:start="97:17" pos:end="97:47"><name pos:start="97:17" pos:end="97:32"><name pos:start="97:17" pos:end="97:18">st</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:25">codec</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:32">width</name></name> <operator pos:start="97:34" pos:end="97:34">=</operator> <call pos:start="97:36" pos:end="97:47"><name pos:start="97:36" pos:end="97:43">get_be16</name><argument_list pos:start="97:44" pos:end="97:47">(<argument pos:start="97:45" pos:end="97:46"><expr pos:start="97:45" pos:end="97:46"><name pos:start="97:45" pos:end="97:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="98:17" pos:end="98:49"><expr pos:start="98:17" pos:end="98:48"><name pos:start="98:17" pos:end="98:33"><name pos:start="98:17" pos:end="98:18">st</name><operator pos:start="98:19" pos:end="98:20">-&gt;</operator><name pos:start="98:21" pos:end="98:25">codec</name><operator pos:start="98:26" pos:end="98:27">-&gt;</operator><name pos:start="98:28" pos:end="98:33">height</name></name> <operator pos:start="98:35" pos:end="98:35">=</operator> <call pos:start="98:37" pos:end="98:48"><name pos:start="98:37" pos:end="98:44">get_be16</name><argument_list pos:start="98:45" pos:end="98:48">(<argument pos:start="98:46" pos:end="98:47"><expr pos:start="98:46" pos:end="98:47"><name pos:start="98:46" pos:end="98:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="99:17" pos:end="99:44"><expr pos:start="99:17" pos:end="99:43"><name pos:start="99:17" pos:end="99:40"><name pos:start="99:17" pos:end="99:18">st</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:25">codec</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:36">time_base</name><operator pos:start="99:37" pos:end="99:37">.</operator><name pos:start="99:38" pos:end="99:40">num</name></name><operator pos:start="99:41" pos:end="99:41">=</operator> <literal type="number" pos:start="99:43" pos:end="99:43">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="100:17" pos:end="100:34"><expr pos:start="100:17" pos:end="100:33"><name pos:start="100:17" pos:end="100:19">fps</name><operator pos:start="100:20" pos:end="100:20">=</operator> <call pos:start="100:22" pos:end="100:33"><name pos:start="100:22" pos:end="100:29">get_be16</name><argument_list pos:start="100:30" pos:end="100:33">(<argument pos:start="100:31" pos:end="100:32"><expr pos:start="100:31" pos:end="100:32"><name pos:start="100:31" pos:end="100:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="101:17" pos:end="101:57"><expr pos:start="101:17" pos:end="101:56"><name pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:18">st</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:25">codec</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:37">codec_type</name></name> <operator pos:start="101:39" pos:end="101:39">=</operator> <name pos:start="101:41" pos:end="101:56">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>
                <expr_stmt pos:start="102:17" pos:end="102:29"><expr pos:start="102:17" pos:end="102:28"><call pos:start="102:17" pos:end="102:28"><name pos:start="102:17" pos:end="102:24">get_be32</name><argument_list pos:start="102:25" pos:end="102:28">(<argument pos:start="102:26" pos:end="102:27"><expr pos:start="102:26" pos:end="102:27"><name pos:start="102:26" pos:end="102:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="103:17" pos:end="103:35"><expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:20">fps2</name><operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="103:34"><name pos:start="103:23" pos:end="103:30">get_be16</name><argument_list pos:start="103:31" pos:end="103:34">(<argument pos:start="103:32" pos:end="103:33"><expr pos:start="103:32" pos:end="103:33"><name pos:start="103:32" pos:end="103:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="104:17" pos:end="104:29"><expr pos:start="104:17" pos:end="104:28"><call pos:start="104:17" pos:end="104:28"><name pos:start="104:17" pos:end="104:24">get_be16</name><argument_list pos:start="104:25" pos:end="104:28">(<argument pos:start="104:26" pos:end="104:27"><expr pos:start="104:26" pos:end="104:27"><name pos:start="104:26" pos:end="104:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="105:17" pos:end="105:89"><expr pos:start="105:17" pos:end="105:88"><name pos:start="105:17" pos:end="105:41"><name pos:start="105:17" pos:end="105:18">st</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:25">codec</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:41">extradata_size</name></name><operator pos:start="105:42" pos:end="105:42">=</operator> <name pos:start="105:44" pos:end="105:58">codec_data_size</name> <operator pos:start="105:60" pos:end="105:60">-</operator> <operator pos:start="105:62" pos:end="105:62">(</operator><call pos:start="105:63" pos:end="105:75"><name pos:start="105:63" pos:end="105:71">url_ftell</name><argument_list pos:start="105:72" pos:end="105:75">(<argument pos:start="105:73" pos:end="105:74"><expr pos:start="105:73" pos:end="105:74"><name pos:start="105:73" pos:end="105:74">pb</name></expr></argument>)</argument_list></call> <operator pos:start="105:77" pos:end="105:77">-</operator> <name pos:start="105:79" pos:end="105:87">codec_pos</name><operator pos:start="105:88" pos:end="105:88">)</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="106:17" pos:end="106:107"><expr pos:start="106:17" pos:end="106:106"><name pos:start="106:17" pos:end="106:36"><name pos:start="106:17" pos:end="106:18">st</name><operator pos:start="106:19" pos:end="106:20">-&gt;</operator><name pos:start="106:21" pos:end="106:25">codec</name><operator pos:start="106:26" pos:end="106:27">-&gt;</operator><name pos:start="106:28" pos:end="106:36">extradata</name></name><operator pos:start="106:37" pos:end="106:37">=</operator> <call pos:start="106:39" pos:end="106:106"><name pos:start="106:39" pos:end="106:48">av_mallocz</name><argument_list pos:start="106:49" pos:end="106:106">(<argument pos:start="106:50" pos:end="106:105"><expr pos:start="106:50" pos:end="106:105"><name pos:start="106:50" pos:end="106:74"><name pos:start="106:50" pos:end="106:51">st</name><operator pos:start="106:52" pos:end="106:53">-&gt;</operator><name pos:start="106:54" pos:end="106:58">codec</name><operator pos:start="106:59" pos:end="106:60">-&gt;</operator><name pos:start="106:61" pos:end="106:74">extradata_size</name></name> <operator pos:start="106:76" pos:end="106:76">+</operator> <name pos:start="106:78" pos:end="106:105">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="107:17" pos:end="107:80"><expr pos:start="107:17" pos:end="107:79"><call pos:start="107:17" pos:end="107:79"><name pos:start="107:17" pos:end="107:26">get_buffer</name><argument_list pos:start="107:27" pos:end="107:79">(<argument pos:start="107:28" pos:end="107:29"><expr pos:start="107:28" pos:end="107:29"><name pos:start="107:28" pos:end="107:29">pb</name></expr></argument>, <argument pos:start="107:32" pos:end="107:51"><expr pos:start="107:32" pos:end="107:51"><name pos:start="107:32" pos:end="107:51"><name pos:start="107:32" pos:end="107:33">st</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:40">codec</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:51">extradata</name></name></expr></argument>, <argument pos:start="107:54" pos:end="107:78"><expr pos:start="107:54" pos:end="107:78"><name pos:start="107:54" pos:end="107:78"><name pos:start="107:54" pos:end="107:55">st</name><operator pos:start="107:56" pos:end="107:57">-&gt;</operator><name pos:start="107:58" pos:end="107:62">codec</name><operator pos:start="107:63" pos:end="107:64">-&gt;</operator><name pos:start="107:65" pos:end="107:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="108:1" pos:end="108:78">//                av_log(NULL, AV_LOG_DEBUG, "fps= %d fps2= %d\n", fps, fps2);</comment>
                <expr_stmt pos:start="109:17" pos:end="112:0"><expr pos:start="109:17" pos:end="109:73"><name pos:start="109:17" pos:end="109:40"><name pos:start="109:17" pos:end="109:18">st</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:25">codec</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:36">time_base</name><operator pos:start="109:37" pos:end="109:37">.</operator><name pos:start="109:38" pos:end="109:40">den</name></name> <operator pos:start="109:42" pos:end="109:42">=</operator> <name pos:start="109:44" pos:end="109:46">fps</name> <operator pos:start="109:48" pos:end="109:48">*</operator> <name pos:start="109:50" pos:end="109:73"><name pos:start="109:50" pos:end="109:51">st</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:58">codec</name><operator pos:start="109:59" pos:end="109:60">-&gt;</operator><name pos:start="109:61" pos:end="109:69">time_base</name><operator pos:start="109:70" pos:end="109:70">.</operator><name pos:start="109:71" pos:end="109:73">num</name></name></expr>;</expr_stmt>
                <comment type="block" pos:start="110:17" pos:end="110:60">/* modification of h263 codec version (!) */</comment>
<cpp:ifdef pos:start="111:1" pos:end="111:22">#<cpp:directive pos:start="111:2" pos:end="111:6">ifdef</cpp:directive> <name pos:start="111:8" pos:end="111:22">WORDS_BIGENDIAN</name></cpp:ifdef>
                <expr_stmt pos:start="112:17" pos:end="114:0"><expr pos:start="112:17" pos:end="112:72"><name pos:start="112:17" pos:end="112:33">h263_hack_version</name> <operator pos:start="112:35" pos:end="112:35">=</operator> <operator pos:start="112:37" pos:end="112:37">(</operator><operator pos:start="112:38" pos:end="112:38">(</operator><name pos:start="112:39" pos:end="112:46">uint32_t</name><operator pos:start="112:47" pos:end="112:47">*</operator><operator pos:start="112:48" pos:end="112:48">)</operator><name pos:start="112:49" pos:end="112:68"><name pos:start="112:49" pos:end="112:50">st</name><operator pos:start="112:51" pos:end="112:52">-&gt;</operator><name pos:start="112:53" pos:end="112:57">codec</name><operator pos:start="112:58" pos:end="112:59">-&gt;</operator><name pos:start="112:60" pos:end="112:68">extradata</name></name><operator pos:start="112:69" pos:end="112:69">)</operator><index pos:start="112:70" pos:end="112:72">[<expr pos:start="112:71" pos:end="112:71"><literal type="number" pos:start="112:71" pos:end="112:71">1</literal></expr>]</index></expr>;</expr_stmt>
<cpp:else pos:start="113:1" pos:end="113:5">#<cpp:directive pos:start="113:2" pos:end="113:5">else</cpp:directive></cpp:else>
                <expr_stmt pos:start="114:17" pos:end="116:0"><expr pos:start="114:17" pos:end="114:82"><name pos:start="114:17" pos:end="114:33">h263_hack_version</name> <operator pos:start="114:35" pos:end="114:35">=</operator> <call pos:start="114:37" pos:end="114:82"><name pos:start="114:37" pos:end="114:44">bswap_32</name><argument_list pos:start="114:45" pos:end="114:82">(<argument pos:start="114:46" pos:end="114:81"><expr pos:start="114:46" pos:end="114:81"><operator pos:start="114:46" pos:end="114:46">(</operator><operator pos:start="114:47" pos:end="114:47">(</operator><name pos:start="114:48" pos:end="114:55">uint32_t</name><operator pos:start="114:56" pos:end="114:56">*</operator><operator pos:start="114:57" pos:end="114:57">)</operator><name pos:start="114:58" pos:end="114:77"><name pos:start="114:58" pos:end="114:59">st</name><operator pos:start="114:60" pos:end="114:61">-&gt;</operator><name pos:start="114:62" pos:end="114:66">codec</name><operator pos:start="114:67" pos:end="114:68">-&gt;</operator><name pos:start="114:69" pos:end="114:77">extradata</name></name><operator pos:start="114:78" pos:end="114:78">)</operator><index pos:start="114:79" pos:end="114:81">[<expr pos:start="114:80" pos:end="114:80"><literal type="number" pos:start="114:80" pos:end="114:80">1</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>
                <expr_stmt pos:start="116:17" pos:end="116:54"><expr pos:start="116:17" pos:end="116:53"><name pos:start="116:17" pos:end="116:33"><name pos:start="116:17" pos:end="116:18">st</name><operator pos:start="116:19" pos:end="116:20">-&gt;</operator><name pos:start="116:21" pos:end="116:25">codec</name><operator pos:start="116:26" pos:end="116:27">-&gt;</operator><name pos:start="116:28" pos:end="116:33">sub_id</name></name> <operator pos:start="116:35" pos:end="116:35">=</operator> <name pos:start="116:37" pos:end="116:53">h263_hack_version</name></expr>;</expr_stmt>
                <switch pos:start="117:17" pos:end="143:22">switch<condition pos:start="117:23" pos:end="117:47">(<expr pos:start="117:24" pos:end="117:46"><operator pos:start="117:24" pos:end="117:24">(</operator><name pos:start="117:25" pos:end="117:41">h263_hack_version</name><operator pos:start="117:42" pos:end="117:43">&gt;&gt;</operator><literal type="number" pos:start="117:44" pos:end="117:45">28</literal><operator pos:start="117:46" pos:end="117:46">)</operator></expr>)</condition><block pos:start="117:48" pos:end="143:22">{<block_content pos:start="118:17" pos:end="143:22">
                <case pos:start="118:17" pos:end="118:23">case <expr pos:start="118:22" pos:end="118:22"><literal type="number" pos:start="118:22" pos:end="118:22">1</literal></expr>:</case> <expr_stmt pos:start="118:25" pos:end="118:60"><expr pos:start="118:25" pos:end="118:59"><name pos:start="118:25" pos:end="118:43"><name pos:start="118:25" pos:end="118:26">st</name><operator pos:start="118:27" pos:end="118:28">-&gt;</operator><name pos:start="118:29" pos:end="118:33">codec</name><operator pos:start="118:34" pos:end="118:35">-&gt;</operator><name pos:start="118:36" pos:end="118:43">codec_id</name></name> <operator pos:start="118:45" pos:end="118:45">=</operator> <name pos:start="118:47" pos:end="118:59">CODEC_ID_RV10</name></expr>;</expr_stmt> <break pos:start="118:62" pos:end="118:67">break;</break>
                <case pos:start="119:17" pos:end="119:23">case <expr pos:start="119:22" pos:end="119:22"><literal type="number" pos:start="119:22" pos:end="119:22">2</literal></expr>:</case> <expr_stmt pos:start="119:25" pos:end="119:60"><expr pos:start="119:25" pos:end="119:59"><name pos:start="119:25" pos:end="119:43"><name pos:start="119:25" pos:end="119:26">st</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:33">codec</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:43">codec_id</name></name> <operator pos:start="119:45" pos:end="119:45">=</operator> <name pos:start="119:47" pos:end="119:59">CODEC_ID_RV20</name></expr>;</expr_stmt> <break pos:start="119:62" pos:end="119:67">break;</break>
                <case pos:start="120:17" pos:end="120:23">case <expr pos:start="120:22" pos:end="120:22"><literal type="number" pos:start="120:22" pos:end="120:22">3</literal></expr>:</case> <expr_stmt pos:start="120:25" pos:end="120:60"><expr pos:start="120:25" pos:end="120:59"><name pos:start="120:25" pos:end="120:43"><name pos:start="120:25" pos:end="120:26">st</name><operator pos:start="120:27" pos:end="120:28">-&gt;</operator><name pos:start="120:29" pos:end="120:33">codec</name><operator pos:start="120:34" pos:end="120:35">-&gt;</operator><name pos:start="120:36" pos:end="120:43">codec_id</name></name> <operator pos:start="120:45" pos:end="120:45">=</operator> <name pos:start="120:47" pos:end="120:59">CODEC_ID_RV30</name></expr>;</expr_stmt> <break pos:start="120:62" pos:end="120:67">break;</break>
                <case pos:start="121:17" pos:end="121:23">case <expr pos:start="121:22" pos:end="121:22"><literal type="number" pos:start="121:22" pos:end="121:22">4</literal></expr>:</case> <expr_stmt pos:start="121:25" pos:end="121:60"><expr pos:start="121:25" pos:end="121:59"><name pos:start="121:25" pos:end="121:43"><name pos:start="121:25" pos:end="121:26">st</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:33">codec</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:43">codec_id</name></name> <operator pos:start="121:45" pos:end="121:45">=</operator> <name pos:start="121:47" pos:end="121:59">CODEC_ID_RV40</name></expr>;</expr_stmt> <break pos:start="121:62" pos:end="121:67">break;</break>
                <default pos:start="122:17" pos:end="122:24">default:</default> <goto pos:start="122:26" pos:end="122:36">goto <name pos:start="122:31" pos:end="122:35">fail1</name>;</goto>
<label pos:start="123:1" pos:end="123:5"><name pos:start="123:1" pos:end="123:4">skip</name>:</label>
            <comment type="block" pos:start="124:13" pos:end="124:33">/* skip codec info */</comment>
            <expr_stmt pos:start="125:13" pos:end="125:45"><expr pos:start="125:13" pos:end="125:44"><name pos:start="125:13" pos:end="125:16">size</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <call pos:start="125:20" pos:end="125:32"><name pos:start="125:20" pos:end="125:28">url_ftell</name><argument_list pos:start="125:29" pos:end="125:32">(<argument pos:start="125:30" pos:end="125:31"><expr pos:start="125:30" pos:end="125:31"><name pos:start="125:30" pos:end="125:31">pb</name></expr></argument>)</argument_list></call> <operator pos:start="125:34" pos:end="125:34">-</operator> <name pos:start="125:36" pos:end="125:44">codec_pos</name></expr>;</expr_stmt>
            <expr_stmt pos:start="126:13" pos:end="126:50"><expr pos:start="126:13" pos:end="126:49"><call pos:start="126:13" pos:end="126:49"><name pos:start="126:13" pos:end="126:21">url_fskip</name><argument_list pos:start="126:22" pos:end="126:49">(<argument pos:start="126:23" pos:end="126:24"><expr pos:start="126:23" pos:end="126:24"><name pos:start="126:23" pos:end="126:24">pb</name></expr></argument>, <argument pos:start="126:27" pos:end="126:48"><expr pos:start="126:27" pos:end="126:48"><name pos:start="126:27" pos:end="126:41">codec_data_size</name> <operator pos:start="126:43" pos:end="126:43">-</operator> <name pos:start="126:45" pos:end="126:48">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="127:13" pos:end="127:18">break;</break>
        <case pos:start="128:9" pos:end="128:39">case <expr pos:start="128:14" pos:end="128:38"><call pos:start="128:14" pos:end="128:38"><name pos:start="128:14" pos:end="128:18">MKTAG</name><argument_list pos:start="128:19" pos:end="128:38">(<argument pos:start="128:20" pos:end="128:22"><expr pos:start="128:20" pos:end="128:22"><literal type="char" pos:start="128:20" pos:end="128:22">'D'</literal></expr></argument>, <argument pos:start="128:25" pos:end="128:27"><expr pos:start="128:25" pos:end="128:27"><literal type="char" pos:start="128:25" pos:end="128:27">'A'</literal></expr></argument>, <argument pos:start="128:30" pos:end="128:32"><expr pos:start="128:30" pos:end="128:32"><literal type="char" pos:start="128:30" pos:end="128:32">'T'</literal></expr></argument>, <argument pos:start="128:35" pos:end="128:37"><expr pos:start="128:35" pos:end="128:37"><literal type="char" pos:start="128:35" pos:end="128:37">'A'</literal></expr></argument>)</argument_list></call></expr>:</case>
            <goto pos:start="129:13" pos:end="129:28">goto <name pos:start="129:18" pos:end="129:27">header_end</name>;</goto>
        <default pos:start="130:9" pos:end="130:16">default:</default>
            <comment type="block" pos:start="131:13" pos:end="131:38">/* unknown tag: skip it */</comment>
            <expr_stmt pos:start="132:13" pos:end="132:41"><expr pos:start="132:13" pos:end="132:40"><call pos:start="132:13" pos:end="132:40"><name pos:start="132:13" pos:end="132:21">url_fskip</name><argument_list pos:start="132:22" pos:end="132:40">(<argument pos:start="132:23" pos:end="132:24"><expr pos:start="132:23" pos:end="132:24"><name pos:start="132:23" pos:end="132:24">pb</name></expr></argument>, <argument pos:start="132:27" pos:end="132:39"><expr pos:start="132:27" pos:end="132:39"><name pos:start="132:27" pos:end="132:34">tag_size</name> <operator pos:start="132:36" pos:end="132:36">-</operator> <literal type="number" pos:start="132:38" pos:end="132:39">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="133:13" pos:end="133:18">break;</break>
 <label pos:start="134:2" pos:end="134:12"><name pos:start="134:2" pos:end="134:11">header_end</name>:</label>
    <expr_stmt pos:start="135:5" pos:end="135:34"><expr pos:start="135:5" pos:end="135:33"><name pos:start="135:5" pos:end="135:18"><name pos:start="135:5" pos:end="135:6">rm</name><operator pos:start="135:7" pos:end="135:8">-&gt;</operator><name pos:start="135:9" pos:end="135:18">nb_packets</name></name> <operator pos:start="135:20" pos:end="135:20">=</operator> <call pos:start="135:22" pos:end="135:33"><name pos:start="135:22" pos:end="135:29">get_be32</name><argument_list pos:start="135:30" pos:end="135:33">(<argument pos:start="135:31" pos:end="135:32"><expr pos:start="135:31" pos:end="135:32"><name pos:start="135:31" pos:end="135:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="135:36" pos:end="135:58">/* number of packets */</comment>
    <if_stmt pos:start="136:5" pos:end="137:35"><if pos:start="136:5" pos:end="137:35">if <condition pos:start="136:8" pos:end="136:39">(<expr pos:start="136:9" pos:end="136:38"><operator pos:start="136:9" pos:end="136:9">!</operator><name pos:start="136:10" pos:end="136:23"><name pos:start="136:10" pos:end="136:11">rm</name><operator pos:start="136:12" pos:end="136:13">-&gt;</operator><name pos:start="136:14" pos:end="136:23">nb_packets</name></name> <operator pos:start="136:25" pos:end="136:26">&amp;&amp;</operator> <operator pos:start="136:28" pos:end="136:28">(</operator><name pos:start="136:29" pos:end="136:33">flags</name> <operator pos:start="136:35" pos:end="136:35">&amp;</operator> <literal type="number" pos:start="136:37" pos:end="136:37">4</literal><operator pos:start="136:38" pos:end="136:38">)</operator></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:35"><block_content pos:start="137:9" pos:end="137:35">
        <expr_stmt pos:start="137:9" pos:end="137:35"><expr pos:start="137:9" pos:end="137:34"><name pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:10">rm</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:22">nb_packets</name></name> <operator pos:start="137:24" pos:end="137:24">=</operator> <literal type="number" pos:start="137:26" pos:end="137:29">3600</literal> <operator pos:start="137:31" pos:end="137:31">*</operator> <literal type="number" pos:start="137:33" pos:end="137:34">25</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="138:5" pos:end="138:17"><expr pos:start="138:5" pos:end="138:16"><call pos:start="138:5" pos:end="138:16"><name pos:start="138:5" pos:end="138:12">get_be32</name><argument_list pos:start="138:13" pos:end="138:16">(<argument pos:start="138:14" pos:end="138:15"><expr pos:start="138:14" pos:end="138:15"><name pos:start="138:14" pos:end="138:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="138:19" pos:end="138:40">/* next data header */</comment>
    <return pos:start="139:5" pos:end="139:13">return <expr pos:start="139:12" pos:end="139:12"><literal type="number" pos:start="139:12" pos:end="139:12">0</literal></expr>;</return>
 <label pos:start="140:2" pos:end="140:6"><name pos:start="140:2" pos:end="140:5">fail</name>:</label>
    <for pos:start="141:5" pos:end="143:22">for<control pos:start="141:8" pos:end="141:32">(<init pos:start="141:9" pos:end="141:12"><expr pos:start="141:9" pos:end="141:11"><name pos:start="141:9" pos:end="141:9">i</name><operator pos:start="141:10" pos:end="141:10">=</operator><literal type="number" pos:start="141:11" pos:end="141:11">0</literal></expr>;</init><condition pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:13">i</name><operator pos:start="141:14" pos:end="141:14">&lt;</operator><name pos:start="141:15" pos:end="141:27"><name pos:start="141:15" pos:end="141:15">s</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:27">nb_streams</name></name></expr>;</condition><incr pos:start="141:29" pos:end="141:31"><expr pos:start="141:29" pos:end="141:31"><name pos:start="141:29" pos:end="141:29">i</name><operator pos:start="141:30" pos:end="141:31">++</operator></expr></incr>)</control> <block pos:start="141:34" pos:end="143:22">{<block_content pos:start="142:9" pos:end="143:22">
        <expr_stmt pos:start="142:9" pos:end="142:31"><expr pos:start="142:9" pos:end="142:30"><call pos:start="142:9" pos:end="142:30"><name pos:start="142:9" pos:end="142:15">av_free</name><argument_list pos:start="142:16" pos:end="142:30">(<argument pos:start="142:17" pos:end="142:29"><expr pos:start="142:17" pos:end="142:29"><name pos:start="142:17" pos:end="142:29"><name pos:start="142:17" pos:end="142:17">s</name><operator pos:start="142:18" pos:end="142:19">-&gt;</operator><name pos:start="142:20" pos:end="142:26">streams</name><index pos:start="142:27" pos:end="142:29">[<expr pos:start="142:28" pos:end="142:28"><name pos:start="142:28" pos:end="142:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="143:5" pos:end="143:22">return <expr pos:start="143:12" pos:end="143:21"><name pos:start="143:12" pos:end="143:21">AVERROR_IO</name></expr>;</return></block_content></block></for></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></switch></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
