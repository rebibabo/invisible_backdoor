<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21849.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">mkv_write_attachments</name><parameter_list pos:start="1:33" pos:end="1:52">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MatroskaMuxContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">mkv</name> <init pos:start="5:29" pos:end="5:42">= <expr pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:31">s</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:23">dyn_cp</name></decl>, <decl pos:start="7:26" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:28">pb</name> <init pos:start="7:30" pos:end="7:36">= <expr pos:start="7:32" pos:end="7:36"><name pos:start="7:32" pos:end="7:36"><name pos:start="7:32" pos:end="7:32">s</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:36">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">ebml_master</name></type> <name pos:start="9:17" pos:end="9:27">attachments</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">AVLFG</name></type> <name pos:start="11:11" pos:end="11:11">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:12">mkv</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:30">have_attachments</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:61"><expr pos:start="23:5" pos:end="23:60"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:7">mkv</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:20">attachments</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:60"><name pos:start="23:24" pos:end="23:33">av_mallocz</name><argument_list pos:start="23:34" pos:end="23:60">(<argument pos:start="23:35" pos:end="23:59"><expr pos:start="23:35" pos:end="23:59"><sizeof pos:start="23:35" pos:end="23:59">sizeof<argument_list pos:start="23:41" pos:end="23:59">(<argument pos:start="23:42" pos:end="23:58"><expr pos:start="23:42" pos:end="23:58"><operator pos:start="23:42" pos:end="23:42">*</operator><name pos:start="23:43" pos:end="23:58"><name pos:start="23:43" pos:end="23:45">mkv</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:58">attachments</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:26">(<expr pos:start="25:9" pos:end="25:25"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:12">mkv</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:25">attachments</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><call pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:15">av_lfg_init</name><argument_list pos:start="31:16" pos:end="31:41">(<argument pos:start="31:17" pos:end="31:18"><expr pos:start="31:17" pos:end="31:18"><operator pos:start="31:17" pos:end="31:17">&amp;</operator><name pos:start="31:18" pos:end="31:18">c</name></expr></argument>, <argument pos:start="31:21" pos:end="31:40"><expr pos:start="31:21" pos:end="31:40"><call pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:38">av_get_random_seed</name><argument_list pos:start="31:39" pos:end="31:40">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:93"><expr pos:start="35:5" pos:end="35:92"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:92"><name pos:start="35:11" pos:end="35:32">mkv_add_seekhead_entry</name><argument_list pos:start="35:33" pos:end="35:92">(<argument pos:start="35:34" pos:end="35:51"><expr pos:start="35:34" pos:end="35:51"><name pos:start="35:34" pos:end="35:51"><name pos:start="35:34" pos:end="35:36">mkv</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:51">main_seekhead</name></name></expr></argument>, <argument pos:start="35:54" pos:end="35:76"><expr pos:start="35:54" pos:end="35:76"><name pos:start="35:54" pos:end="35:76">MATROSKA_ID_ATTACHMENTS</name></expr></argument>, <argument pos:start="35:79" pos:end="35:91"><expr pos:start="35:79" pos:end="35:91"><call pos:start="35:79" pos:end="35:91"><name pos:start="35:79" pos:end="35:87">avio_tell</name><argument_list pos:start="35:88" pos:end="35:91">(<argument pos:start="35:89" pos:end="35:90"><expr pos:start="35:89" pos:end="35:90"><name pos:start="35:89" pos:end="35:90">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="37:28"><if pos:start="37:5" pos:end="37:28">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition><block type="pseudo" pos:start="37:18" pos:end="37:28"><block_content pos:start="37:18" pos:end="37:28"> <return pos:start="37:18" pos:end="37:28">return <expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:94"><expr pos:start="41:5" pos:end="41:93"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:93"><name pos:start="41:11" pos:end="41:33">start_ebml_master_crc32</name><argument_list pos:start="41:34" pos:end="41:93">(<argument pos:start="41:35" pos:end="41:36"><expr pos:start="41:35" pos:end="41:36"><name pos:start="41:35" pos:end="41:36">pb</name></expr></argument>, <argument pos:start="41:39" pos:end="41:45"><expr pos:start="41:39" pos:end="41:45"><operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:45">dyn_cp</name></expr></argument>, <argument pos:start="41:48" pos:end="41:50"><expr pos:start="41:48" pos:end="41:50"><name pos:start="41:48" pos:end="41:50">mkv</name></expr></argument>, <argument pos:start="41:53" pos:end="41:64"><expr pos:start="41:53" pos:end="41:64"><operator pos:start="41:53" pos:end="41:53">&amp;</operator><name pos:start="41:54" pos:end="41:64">attachments</name></expr></argument>, <argument pos:start="41:67" pos:end="41:89"><expr pos:start="41:67" pos:end="41:89"><name pos:start="41:67" pos:end="41:89">MATROSKA_ID_ATTACHMENTS</name></expr></argument>, <argument pos:start="41:92" pos:end="41:92"><expr pos:start="41:92" pos:end="41:92"><literal type="number" pos:start="41:92" pos:end="41:92">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="43:28"><if pos:start="43:5" pos:end="43:28">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:18" pos:end="43:28"><block_content pos:start="43:18" pos:end="43:28"> <return pos:start="43:18" pos:end="43:28">return <expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:27">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="47:5" pos:end="185:5">for <control pos:start="47:9" pos:end="47:39">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:34"><expr pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:33"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:33">nb_streams</name></name></expr>;</condition> <incr pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><name pos:start="47:36" pos:end="47:36">i</name><operator pos:start="47:37" pos:end="47:38">++</operator></expr></incr>)</control> <block pos:start="47:41" pos:end="185:5">{<block_content pos:start="49:9" pos:end="183:86">

        <decl_stmt pos:start="49:9" pos:end="49:37"><decl pos:start="49:9" pos:end="49:36"><type pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:16">AVStream</name> <modifier pos:start="49:18" pos:end="49:18">*</modifier></type><name pos:start="49:19" pos:end="49:20">st</name> <init pos:start="49:22" pos:end="49:36">= <expr pos:start="49:24" pos:end="49:36"><name pos:start="49:24" pos:end="49:36"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:33">streams</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><name pos:start="49:35" pos:end="49:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:34"><decl pos:start="51:9" pos:end="51:33"><type pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:19">ebml_master</name></type> <name pos:start="51:21" pos:end="51:33">attached_file</name></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:63"><decl pos:start="53:9" pos:end="53:62"><type pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:22">mkv_attachment</name> <modifier pos:start="53:24" pos:end="53:24">*</modifier></type><name pos:start="53:25" pos:end="53:34">attachment</name> <init pos:start="53:36" pos:end="53:62">= <expr pos:start="53:38" pos:end="53:62"><name pos:start="53:38" pos:end="53:62"><name pos:start="53:38" pos:end="53:40">mkv</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:53">attachments</name><operator pos:start="53:54" pos:end="53:55">-&gt;</operator><name pos:start="53:56" pos:end="53:62">entries</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:29"><decl pos:start="55:9" pos:end="55:28"><type pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:25">AVDictionaryEntry</name> <modifier pos:start="55:27" pos:end="55:27">*</modifier></type><name pos:start="55:28" pos:end="55:28">t</name></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:36"><decl pos:start="57:9" pos:end="57:35"><type pos:start="57:9" pos:end="57:20"><specifier pos:start="57:9" pos:end="57:13">const</specifier> <name pos:start="57:15" pos:end="57:18">char</name> <modifier pos:start="57:20" pos:end="57:20">*</modifier></type><name pos:start="57:21" pos:end="57:28">mimetype</name> <init pos:start="57:30" pos:end="57:35">= <expr pos:start="57:32" pos:end="57:35"><name pos:start="57:32" pos:end="57:35">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:25"><decl pos:start="59:9" pos:end="59:24"><type pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:16">uint32_t</name></type> <name pos:start="59:18" pos:end="59:24">fileuid</name></decl>;</decl_stmt>



        <if_stmt pos:start="63:9" pos:end="65:21"><if pos:start="63:9" pos:end="65:21">if <condition pos:start="63:12" pos:end="63:64">(<expr pos:start="63:13" pos:end="63:63"><name pos:start="63:13" pos:end="63:36"><name pos:start="63:13" pos:end="63:14">st</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:24">codecpar</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:36">codec_type</name></name> <operator pos:start="63:38" pos:end="63:39">!=</operator> <name pos:start="63:41" pos:end="63:63">AVMEDIA_TYPE_ATTACHMENT</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:21"><block_content pos:start="65:13" pos:end="65:21">

            <continue pos:start="65:13" pos:end="65:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:109"><expr pos:start="69:9" pos:end="69:108"><name pos:start="69:9" pos:end="69:18">attachment</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:108"><name pos:start="69:22" pos:end="69:37">av_realloc_array</name><argument_list pos:start="69:38" pos:end="69:108">(<argument pos:start="69:39" pos:end="69:48"><expr pos:start="69:39" pos:end="69:48"><name pos:start="69:39" pos:end="69:48">attachment</name></expr></argument>, <argument pos:start="69:51" pos:end="69:83"><expr pos:start="69:51" pos:end="69:83"><name pos:start="69:51" pos:end="69:79"><name pos:start="69:51" pos:end="69:53">mkv</name><operator pos:start="69:54" pos:end="69:55">-&gt;</operator><name pos:start="69:56" pos:end="69:66">attachments</name><operator pos:start="69:67" pos:end="69:68">-&gt;</operator><name pos:start="69:69" pos:end="69:79">num_entries</name></name> <operator pos:start="69:81" pos:end="69:81">+</operator> <literal type="number" pos:start="69:83" pos:end="69:83">1</literal></expr></argument>, <argument pos:start="69:86" pos:end="69:107"><expr pos:start="69:86" pos:end="69:107"><sizeof pos:start="69:86" pos:end="69:107">sizeof<argument_list pos:start="69:92" pos:end="69:107">(<argument pos:start="69:93" pos:end="69:106"><expr pos:start="69:93" pos:end="69:106"><name pos:start="69:93" pos:end="69:106">mkv_attachment</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:35"><if pos:start="71:9" pos:end="73:35">if <condition pos:start="71:12" pos:end="71:24">(<expr pos:start="71:13" pos:end="71:23"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:23">attachment</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:35"><block_content pos:start="73:13" pos:end="73:35">

            <return pos:start="73:13" pos:end="73:35">return <expr pos:start="73:20" pos:end="73:34"><call pos:start="73:20" pos:end="73:34"><name pos:start="73:20" pos:end="73:26">AVERROR</name><argument_list pos:start="73:27" pos:end="73:34">(<argument pos:start="73:28" pos:end="73:33"><expr pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:47"><expr pos:start="75:9" pos:end="75:46"><name pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:11">mkv</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:24">attachments</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:33">entries</name></name> <operator pos:start="75:35" pos:end="75:35">=</operator> <name pos:start="75:37" pos:end="75:46">attachment</name></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:79"><expr pos:start="79:9" pos:end="79:78"><name pos:start="79:9" pos:end="79:21">attached_file</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <call pos:start="79:25" pos:end="79:78"><name pos:start="79:25" pos:end="79:41">start_ebml_master</name><argument_list pos:start="79:42" pos:end="79:78">(<argument pos:start="79:43" pos:end="79:48"><expr pos:start="79:43" pos:end="79:48"><name pos:start="79:43" pos:end="79:48">dyn_cp</name></expr></argument>, <argument pos:start="79:51" pos:end="79:74"><expr pos:start="79:51" pos:end="79:74"><name pos:start="79:51" pos:end="79:74">MATROSKA_ID_ATTACHEDFILE</name></expr></argument>, <argument pos:start="79:77" pos:end="79:77"><expr pos:start="79:77" pos:end="79:77"><literal type="number" pos:start="79:77" pos:end="79:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="85:68"><if pos:start="83:9" pos:end="85:68">if <condition pos:start="83:12" pos:end="83:60">(<expr pos:start="83:13" pos:end="83:59"><name pos:start="83:13" pos:end="83:13">t</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <call pos:start="83:17" pos:end="83:59"><name pos:start="83:17" pos:end="83:27">av_dict_get</name><argument_list pos:start="83:28" pos:end="83:59">(<argument pos:start="83:29" pos:end="83:40"><expr pos:start="83:29" pos:end="83:40"><name pos:start="83:29" pos:end="83:40"><name pos:start="83:29" pos:end="83:30">st</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:40">metadata</name></name></expr></argument>, <argument pos:start="83:43" pos:end="83:49"><expr pos:start="83:43" pos:end="83:49"><literal type="string" pos:start="83:43" pos:end="83:49">"title"</literal></expr></argument>, <argument pos:start="83:52" pos:end="83:55"><expr pos:start="83:52" pos:end="83:55"><name pos:start="83:52" pos:end="83:55">NULL</name></expr></argument>, <argument pos:start="83:58" pos:end="83:58"><expr pos:start="83:58" pos:end="83:58"><literal type="number" pos:start="83:58" pos:end="83:58">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:68"><block_content pos:start="85:13" pos:end="85:68">

            <expr_stmt pos:start="85:13" pos:end="85:68"><expr pos:start="85:13" pos:end="85:67"><call pos:start="85:13" pos:end="85:67"><name pos:start="85:13" pos:end="85:27">put_ebml_string</name><argument_list pos:start="85:28" pos:end="85:67">(<argument pos:start="85:29" pos:end="85:34"><expr pos:start="85:29" pos:end="85:34"><name pos:start="85:29" pos:end="85:34">dyn_cp</name></expr></argument>, <argument pos:start="85:37" pos:end="85:56"><expr pos:start="85:37" pos:end="85:56"><name pos:start="85:37" pos:end="85:56">MATROSKA_ID_FILEDESC</name></expr></argument>, <argument pos:start="85:59" pos:end="85:66"><expr pos:start="85:59" pos:end="85:66"><name pos:start="85:59" pos:end="85:66"><name pos:start="85:59" pos:end="85:59">t</name><operator pos:start="85:60" pos:end="85:61">-&gt;</operator><name pos:start="85:62" pos:end="85:66">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:66">(<expr pos:start="87:13" pos:end="87:65"><operator pos:start="87:13" pos:end="87:13">!</operator><operator pos:start="87:14" pos:end="87:14">(</operator><name pos:start="87:15" pos:end="87:15">t</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:64"><name pos:start="87:19" pos:end="87:29">av_dict_get</name><argument_list pos:start="87:30" pos:end="87:64">(<argument pos:start="87:31" pos:end="87:42"><expr pos:start="87:31" pos:end="87:42"><name pos:start="87:31" pos:end="87:42"><name pos:start="87:31" pos:end="87:32">st</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:42">metadata</name></name></expr></argument>, <argument pos:start="87:45" pos:end="87:54"><expr pos:start="87:45" pos:end="87:54"><literal type="string" pos:start="87:45" pos:end="87:54">"filename"</literal></expr></argument>, <argument pos:start="87:57" pos:end="87:60"><expr pos:start="87:57" pos:end="87:60"><name pos:start="87:57" pos:end="87:60">NULL</name></expr></argument>, <argument pos:start="87:63" pos:end="87:63"><expr pos:start="87:63" pos:end="87:63"><literal type="number" pos:start="87:63" pos:end="87:63">0</literal></expr></argument>)</argument_list></call><operator pos:start="87:65" pos:end="87:65">)</operator></expr>)</condition> <block pos:start="87:68" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:35">

            <expr_stmt pos:start="89:13" pos:end="89:86"><expr pos:start="89:13" pos:end="89:85"><call pos:start="89:13" pos:end="89:85"><name pos:start="89:13" pos:end="89:18">av_log</name><argument_list pos:start="89:19" pos:end="89:85">(<argument pos:start="89:20" pos:end="89:20"><expr pos:start="89:20" pos:end="89:20"><name pos:start="89:20" pos:end="89:20">s</name></expr></argument>, <argument pos:start="89:23" pos:end="89:34"><expr pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:37" pos:end="89:81"><expr pos:start="89:37" pos:end="89:81"><literal type="string" pos:start="89:37" pos:end="89:81">"Attachment stream %d has no filename tag.\n"</literal></expr></argument>, <argument pos:start="89:84" pos:end="89:84"><expr pos:start="89:84" pos:end="89:84"><name pos:start="89:84" pos:end="89:84">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:35">return <expr pos:start="91:20" pos:end="91:34"><call pos:start="91:20" pos:end="91:34"><name pos:start="91:20" pos:end="91:26">AVERROR</name><argument_list pos:start="91:27" pos:end="91:34">(<argument pos:start="91:28" pos:end="91:33"><expr pos:start="91:28" pos:end="91:33"><name pos:start="91:28" pos:end="91:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:64"><expr pos:start="95:9" pos:end="95:63"><call pos:start="95:9" pos:end="95:63"><name pos:start="95:9" pos:end="95:23">put_ebml_string</name><argument_list pos:start="95:24" pos:end="95:63">(<argument pos:start="95:25" pos:end="95:30"><expr pos:start="95:25" pos:end="95:30"><name pos:start="95:25" pos:end="95:30">dyn_cp</name></expr></argument>, <argument pos:start="95:33" pos:end="95:52"><expr pos:start="95:33" pos:end="95:52"><name pos:start="95:33" pos:end="95:52">MATROSKA_ID_FILENAME</name></expr></argument>, <argument pos:start="95:55" pos:end="95:62"><expr pos:start="95:55" pos:end="95:62"><name pos:start="95:55" pos:end="95:62"><name pos:start="95:55" pos:end="95:55">t</name><operator pos:start="95:56" pos:end="95:57">-&gt;</operator><name pos:start="95:58" pos:end="95:62">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="125:9"><if pos:start="97:9" pos:end="99:32">if <condition pos:start="97:12" pos:end="97:63">(<expr pos:start="97:13" pos:end="97:62"><name pos:start="97:13" pos:end="97:13">t</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <call pos:start="97:17" pos:end="97:62"><name pos:start="97:17" pos:end="97:27">av_dict_get</name><argument_list pos:start="97:28" pos:end="97:62">(<argument pos:start="97:29" pos:end="97:40"><expr pos:start="97:29" pos:end="97:40"><name pos:start="97:29" pos:end="97:40"><name pos:start="97:29" pos:end="97:30">st</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:40">metadata</name></name></expr></argument>, <argument pos:start="97:43" pos:end="97:52"><expr pos:start="97:43" pos:end="97:52"><literal type="string" pos:start="97:43" pos:end="97:52">"mimetype"</literal></expr></argument>, <argument pos:start="97:55" pos:end="97:58"><expr pos:start="97:55" pos:end="97:58"><name pos:start="97:55" pos:end="97:58">NULL</name></expr></argument>, <argument pos:start="97:61" pos:end="97:61"><expr pos:start="97:61" pos:end="97:61"><literal type="number" pos:start="97:61" pos:end="97:61">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:32"><block_content pos:start="99:13" pos:end="99:32">

            <expr_stmt pos:start="99:13" pos:end="99:32"><expr pos:start="99:13" pos:end="99:31"><name pos:start="99:13" pos:end="99:20">mimetype</name> <operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:31"><name pos:start="99:24" pos:end="99:24">t</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:31">value</name></name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="101:9" pos:end="125:9">else if <condition pos:start="101:17" pos:end="101:61">(<expr pos:start="101:18" pos:end="101:59"><name pos:start="101:18" pos:end="101:39"><name pos:start="101:18" pos:end="101:19">st</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:29">codecpar</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:39">codec_id</name></name> <operator pos:start="101:41" pos:end="101:42">!=</operator> <name pos:start="101:44" pos:end="101:59">AV_CODEC_ID_NONE</name></expr> )</condition> <block pos:start="101:63" pos:end="125:9">{<block_content pos:start="103:13" pos:end="123:17">

            <decl_stmt pos:start="103:13" pos:end="103:18"><decl pos:start="103:13" pos:end="103:17"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:17">i</name></decl>;</decl_stmt>

            <for pos:start="105:13" pos:end="113:17">for <control pos:start="105:17" pos:end="105:72">(<init pos:start="105:18" pos:end="105:23"><expr pos:start="105:18" pos:end="105:22"><name pos:start="105:18" pos:end="105:18">i</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>;</init> <condition pos:start="105:25" pos:end="105:67"><expr pos:start="105:25" pos:end="105:66"><name pos:start="105:25" pos:end="105:43"><name pos:start="105:25" pos:end="105:40">ff_mkv_mime_tags</name><index pos:start="105:41" pos:end="105:43">[<expr pos:start="105:42" pos:end="105:42"><name pos:start="105:42" pos:end="105:42">i</name></expr>]</index></name><operator pos:start="105:44" pos:end="105:44">.</operator><name pos:start="105:45" pos:end="105:46">id</name> <operator pos:start="105:48" pos:end="105:49">!=</operator> <name pos:start="105:51" pos:end="105:66">AV_CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="105:69" pos:end="105:71"><expr pos:start="105:69" pos:end="105:71"><name pos:start="105:69" pos:end="105:69">i</name><operator pos:start="105:70" pos:end="105:71">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:17" pos:end="113:17"><block_content pos:start="107:17" pos:end="113:17">

                <if_stmt pos:start="107:17" pos:end="113:17"><if pos:start="107:17" pos:end="113:17">if <condition pos:start="107:20" pos:end="107:69">(<expr pos:start="107:21" pos:end="107:68"><name pos:start="107:21" pos:end="107:39"><name pos:start="107:21" pos:end="107:36">ff_mkv_mime_tags</name><index pos:start="107:37" pos:end="107:39">[<expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">i</name></expr>]</index></name><operator pos:start="107:40" pos:end="107:40">.</operator><name pos:start="107:41" pos:end="107:42">id</name> <operator pos:start="107:44" pos:end="107:45">==</operator> <name pos:start="107:47" pos:end="107:68"><name pos:start="107:47" pos:end="107:48">st</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:58">codecpar</name><operator pos:start="107:59" pos:end="107:60">-&gt;</operator><name pos:start="107:61" pos:end="107:68">codec_id</name></name></expr>)</condition> <block pos:start="107:71" pos:end="113:17">{<block_content pos:start="109:21" pos:end="111:26">

                    <expr_stmt pos:start="109:21" pos:end="109:55"><expr pos:start="109:21" pos:end="109:54"><name pos:start="109:21" pos:end="109:28">mimetype</name> <operator pos:start="109:30" pos:end="109:30">=</operator> <name pos:start="109:32" pos:end="109:50"><name pos:start="109:32" pos:end="109:47">ff_mkv_mime_tags</name><index pos:start="109:48" pos:end="109:50">[<expr pos:start="109:49" pos:end="109:49"><name pos:start="109:49" pos:end="109:49">i</name></expr>]</index></name><operator pos:start="109:51" pos:end="109:51">.</operator><name pos:start="109:52" pos:end="109:54">str</name></expr>;</expr_stmt>

                    <break pos:start="111:21" pos:end="111:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

            <for pos:start="115:13" pos:end="123:17">for <control pos:start="115:17" pos:end="115:78">(<init pos:start="115:18" pos:end="115:23"><expr pos:start="115:18" pos:end="115:22"><name pos:start="115:18" pos:end="115:18">i</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <literal type="number" pos:start="115:22" pos:end="115:22">0</literal></expr>;</init> <condition pos:start="115:25" pos:end="115:73"><expr pos:start="115:25" pos:end="115:72"><name pos:start="115:25" pos:end="115:49"><name pos:start="115:25" pos:end="115:46">ff_mkv_image_mime_tags</name><index pos:start="115:47" pos:end="115:49">[<expr pos:start="115:48" pos:end="115:48"><name pos:start="115:48" pos:end="115:48">i</name></expr>]</index></name><operator pos:start="115:50" pos:end="115:50">.</operator><name pos:start="115:51" pos:end="115:52">id</name> <operator pos:start="115:54" pos:end="115:55">!=</operator> <name pos:start="115:57" pos:end="115:72">AV_CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="115:75" pos:end="115:77"><expr pos:start="115:75" pos:end="115:77"><name pos:start="115:75" pos:end="115:75">i</name><operator pos:start="115:76" pos:end="115:77">++</operator></expr></incr>)</control><block type="pseudo" pos:start="117:17" pos:end="123:17"><block_content pos:start="117:17" pos:end="123:17">

                <if_stmt pos:start="117:17" pos:end="123:17"><if pos:start="117:17" pos:end="123:17">if <condition pos:start="117:20" pos:end="117:75">(<expr pos:start="117:21" pos:end="117:74"><name pos:start="117:21" pos:end="117:45"><name pos:start="117:21" pos:end="117:42">ff_mkv_image_mime_tags</name><index pos:start="117:43" pos:end="117:45">[<expr pos:start="117:44" pos:end="117:44"><name pos:start="117:44" pos:end="117:44">i</name></expr>]</index></name><operator pos:start="117:46" pos:end="117:46">.</operator><name pos:start="117:47" pos:end="117:48">id</name> <operator pos:start="117:50" pos:end="117:51">==</operator> <name pos:start="117:53" pos:end="117:74"><name pos:start="117:53" pos:end="117:54">st</name><operator pos:start="117:55" pos:end="117:56">-&gt;</operator><name pos:start="117:57" pos:end="117:64">codecpar</name><operator pos:start="117:65" pos:end="117:66">-&gt;</operator><name pos:start="117:67" pos:end="117:74">codec_id</name></name></expr>)</condition> <block pos:start="117:77" pos:end="123:17">{<block_content pos:start="119:21" pos:end="121:26">

                    <expr_stmt pos:start="119:21" pos:end="119:61"><expr pos:start="119:21" pos:end="119:60"><name pos:start="119:21" pos:end="119:28">mimetype</name> <operator pos:start="119:30" pos:end="119:30">=</operator> <name pos:start="119:32" pos:end="119:56"><name pos:start="119:32" pos:end="119:53">ff_mkv_image_mime_tags</name><index pos:start="119:54" pos:end="119:56">[<expr pos:start="119:55" pos:end="119:55"><name pos:start="119:55" pos:end="119:55">i</name></expr>]</index></name><operator pos:start="119:57" pos:end="119:57">.</operator><name pos:start="119:58" pos:end="119:60">str</name></expr>;</expr_stmt>

                    <break pos:start="121:21" pos:end="121:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="127:22">(<expr pos:start="127:13" pos:end="127:21"><operator pos:start="127:13" pos:end="127:13">!</operator><name pos:start="127:14" pos:end="127:21">mimetype</name></expr>)</condition> <block pos:start="127:24" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:35">

            <expr_stmt pos:start="129:13" pos:end="131:84"><expr pos:start="129:13" pos:end="131:83"><call pos:start="129:13" pos:end="131:83"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="131:83">(<argument pos:start="129:20" pos:end="129:20"><expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">s</name></expr></argument>, <argument pos:start="129:23" pos:end="129:34"><expr pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:37" pos:end="131:79"><expr pos:start="129:37" pos:end="131:79"><literal type="string" pos:start="129:37" pos:end="129:83">"Attachment stream %d has no mimetype tag and "</literal>

                                    <literal type="string" pos:start="131:37" pos:end="131:79">"it cannot be deduced from the codec id.\n"</literal></expr></argument>, <argument pos:start="131:82" pos:end="131:82"><expr pos:start="131:82" pos:end="131:82"><name pos:start="131:82" pos:end="131:82">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:35">return <expr pos:start="133:20" pos:end="133:34"><call pos:start="133:20" pos:end="133:34"><name pos:start="133:20" pos:end="133:26">AVERROR</name><argument_list pos:start="133:27" pos:end="133:34">(<argument pos:start="133:28" pos:end="133:33"><expr pos:start="133:28" pos:end="133:33"><name pos:start="133:28" pos:end="133:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="163:9"><if pos:start="139:9" pos:end="159:9">if <condition pos:start="139:12" pos:end="139:43">(<expr pos:start="139:13" pos:end="139:42"><name pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:20">flags</name></name> <operator pos:start="139:22" pos:end="139:22">&amp;</operator> <name pos:start="139:24" pos:end="139:42">AVFMT_FLAG_BITEXACT</name></expr>)</condition> <block pos:start="139:45" pos:end="159:9">{<block_content pos:start="141:13" pos:end="157:38">

            <decl_stmt pos:start="141:13" pos:end="141:47"><decl pos:start="141:13" pos:end="141:46"><type pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:18">struct</name> <name pos:start="141:20" pos:end="141:24">AVSHA</name></name> <modifier pos:start="141:26" pos:end="141:26">*</modifier></type><name pos:start="141:27" pos:end="141:29">sha</name> <init pos:start="141:31" pos:end="141:46">= <expr pos:start="141:33" pos:end="141:46"><call pos:start="141:33" pos:end="141:46"><name pos:start="141:33" pos:end="141:44">av_sha_alloc</name><argument_list pos:start="141:45" pos:end="141:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="143:13" pos:end="143:31"><decl pos:start="143:13" pos:end="143:30"><type pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:19">uint8_t</name></type> <name pos:start="143:21" pos:end="143:30"><name pos:start="143:21" pos:end="143:26">digest</name><index pos:start="143:27" pos:end="143:30">[<expr pos:start="143:28" pos:end="143:29"><literal type="number" pos:start="143:28" pos:end="143:29">20</literal></expr>]</index></name></decl>;</decl_stmt>

            <if_stmt pos:start="145:13" pos:end="147:39"><if pos:start="145:13" pos:end="147:39">if <condition pos:start="145:16" pos:end="145:21">(<expr pos:start="145:17" pos:end="145:20"><operator pos:start="145:17" pos:end="145:17">!</operator><name pos:start="145:18" pos:end="145:20">sha</name></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:39"><block_content pos:start="147:17" pos:end="147:39">

                <return pos:start="147:17" pos:end="147:39">return <expr pos:start="147:24" pos:end="147:38"><call pos:start="147:24" pos:end="147:38"><name pos:start="147:24" pos:end="147:30">AVERROR</name><argument_list pos:start="147:31" pos:end="147:38">(<argument pos:start="147:32" pos:end="147:37"><expr pos:start="147:32" pos:end="147:37"><name pos:start="147:32" pos:end="147:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:34"><expr pos:start="149:13" pos:end="149:33"><call pos:start="149:13" pos:end="149:33"><name pos:start="149:13" pos:end="149:23">av_sha_init</name><argument_list pos:start="149:24" pos:end="149:33">(<argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:27">sha</name></expr></argument>, <argument pos:start="149:30" pos:end="149:32"><expr pos:start="149:30" pos:end="149:32"><literal type="number" pos:start="149:30" pos:end="149:32">160</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:86"><expr pos:start="151:13" pos:end="151:85"><call pos:start="151:13" pos:end="151:85"><name pos:start="151:13" pos:end="151:25">av_sha_update</name><argument_list pos:start="151:26" pos:end="151:85">(<argument pos:start="151:27" pos:end="151:29"><expr pos:start="151:27" pos:end="151:29"><name pos:start="151:27" pos:end="151:29">sha</name></expr></argument>, <argument pos:start="151:32" pos:end="151:54"><expr pos:start="151:32" pos:end="151:54"><name pos:start="151:32" pos:end="151:54"><name pos:start="151:32" pos:end="151:33">st</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:43">codecpar</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:54">extradata</name></name></expr></argument>, <argument pos:start="151:57" pos:end="151:84"><expr pos:start="151:57" pos:end="151:84"><name pos:start="151:57" pos:end="151:84"><name pos:start="151:57" pos:end="151:58">st</name><operator pos:start="151:59" pos:end="151:60">-&gt;</operator><name pos:start="151:61" pos:end="151:68">codecpar</name><operator pos:start="151:69" pos:end="151:70">-&gt;</operator><name pos:start="151:71" pos:end="151:84">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:38"><expr pos:start="153:13" pos:end="153:37"><call pos:start="153:13" pos:end="153:37"><name pos:start="153:13" pos:end="153:24">av_sha_final</name><argument_list pos:start="153:25" pos:end="153:37">(<argument pos:start="153:26" pos:end="153:28"><expr pos:start="153:26" pos:end="153:28"><name pos:start="153:26" pos:end="153:28">sha</name></expr></argument>, <argument pos:start="153:31" pos:end="153:36"><expr pos:start="153:31" pos:end="153:36"><name pos:start="153:31" pos:end="153:36">digest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:25"><expr pos:start="155:13" pos:end="155:24"><call pos:start="155:13" pos:end="155:24"><name pos:start="155:13" pos:end="155:19">av_free</name><argument_list pos:start="155:20" pos:end="155:24">(<argument pos:start="155:21" pos:end="155:23"><expr pos:start="155:21" pos:end="155:23"><name pos:start="155:21" pos:end="155:23">sha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:38"><expr pos:start="157:13" pos:end="157:37"><name pos:start="157:13" pos:end="157:19">fileuid</name> <operator pos:start="157:21" pos:end="157:21">=</operator> <call pos:start="157:23" pos:end="157:37"><name pos:start="157:23" pos:end="157:29">AV_RL32</name><argument_list pos:start="157:30" pos:end="157:37">(<argument pos:start="157:31" pos:end="157:36"><expr pos:start="157:31" pos:end="157:36"><name pos:start="157:31" pos:end="157:36">digest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="159:11" pos:end="163:9">else <block pos:start="159:16" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:37">

            <expr_stmt pos:start="161:13" pos:end="161:37"><expr pos:start="161:13" pos:end="161:36"><name pos:start="161:13" pos:end="161:19">fileuid</name> <operator pos:start="161:21" pos:end="161:21">=</operator> <call pos:start="161:23" pos:end="161:36"><name pos:start="161:23" pos:end="161:32">av_lfg_get</name><argument_list pos:start="161:33" pos:end="161:36">(<argument pos:start="161:34" pos:end="161:35"><expr pos:start="161:34" pos:end="161:35"><operator pos:start="161:34" pos:end="161:34">&amp;</operator><name pos:start="161:35" pos:end="161:35">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="167:55"><expr pos:start="165:9" pos:end="167:54"><call pos:start="165:9" pos:end="167:54"><name pos:start="165:9" pos:end="165:14">av_log</name><argument_list pos:start="165:15" pos:end="167:54">(<argument pos:start="165:16" pos:end="165:16"><expr pos:start="165:16" pos:end="165:16"><name pos:start="165:16" pos:end="165:16">s</name></expr></argument>, <argument pos:start="165:19" pos:end="165:32"><expr pos:start="165:19" pos:end="165:32"><name pos:start="165:19" pos:end="165:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="165:35" pos:end="165:73"><expr pos:start="165:35" pos:end="165:73"><literal type="string" pos:start="165:35" pos:end="165:45">"Using %.8"</literal><name pos:start="165:46" pos:end="165:51">PRIx32</name><literal type="string" pos:start="165:52" pos:end="165:73">" for attachment %d\n"</literal></expr></argument>,

               <argument pos:start="167:16" pos:end="167:22"><expr pos:start="167:16" pos:end="167:22"><name pos:start="167:16" pos:end="167:22">fileuid</name></expr></argument>, <argument pos:start="167:25" pos:end="167:53"><expr pos:start="167:25" pos:end="167:53"><name pos:start="167:25" pos:end="167:53"><name pos:start="167:25" pos:end="167:27">mkv</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:40">attachments</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:53">num_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:68"><expr pos:start="171:9" pos:end="171:67"><call pos:start="171:9" pos:end="171:67"><name pos:start="171:9" pos:end="171:23">put_ebml_string</name><argument_list pos:start="171:24" pos:end="171:67">(<argument pos:start="171:25" pos:end="171:30"><expr pos:start="171:25" pos:end="171:30"><name pos:start="171:25" pos:end="171:30">dyn_cp</name></expr></argument>, <argument pos:start="171:33" pos:end="171:56"><expr pos:start="171:33" pos:end="171:56"><name pos:start="171:33" pos:end="171:56">MATROSKA_ID_FILEMIMETYPE</name></expr></argument>, <argument pos:start="171:59" pos:end="171:66"><expr pos:start="171:59" pos:end="171:66"><name pos:start="171:59" pos:end="171:66">mimetype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:109"><expr pos:start="173:9" pos:end="173:108"><call pos:start="173:9" pos:end="173:108"><name pos:start="173:9" pos:end="173:23">put_ebml_binary</name><argument_list pos:start="173:24" pos:end="173:108">(<argument pos:start="173:25" pos:end="173:30"><expr pos:start="173:25" pos:end="173:30"><name pos:start="173:25" pos:end="173:30">dyn_cp</name></expr></argument>, <argument pos:start="173:33" pos:end="173:52"><expr pos:start="173:33" pos:end="173:52"><name pos:start="173:33" pos:end="173:52">MATROSKA_ID_FILEDATA</name></expr></argument>, <argument pos:start="173:55" pos:end="173:77"><expr pos:start="173:55" pos:end="173:77"><name pos:start="173:55" pos:end="173:77"><name pos:start="173:55" pos:end="173:56">st</name><operator pos:start="173:57" pos:end="173:58">-&gt;</operator><name pos:start="173:59" pos:end="173:66">codecpar</name><operator pos:start="173:67" pos:end="173:68">-&gt;</operator><name pos:start="173:69" pos:end="173:77">extradata</name></name></expr></argument>, <argument pos:start="173:80" pos:end="173:107"><expr pos:start="173:80" pos:end="173:107"><name pos:start="173:80" pos:end="173:107"><name pos:start="173:80" pos:end="173:81">st</name><operator pos:start="173:82" pos:end="173:83">-&gt;</operator><name pos:start="173:84" pos:end="173:91">codecpar</name><operator pos:start="173:92" pos:end="173:93">-&gt;</operator><name pos:start="173:94" pos:end="173:107">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:60"><expr pos:start="175:9" pos:end="175:59"><call pos:start="175:9" pos:end="175:59"><name pos:start="175:9" pos:end="175:21">put_ebml_uint</name><argument_list pos:start="175:22" pos:end="175:59">(<argument pos:start="175:23" pos:end="175:28"><expr pos:start="175:23" pos:end="175:28"><name pos:start="175:23" pos:end="175:28">dyn_cp</name></expr></argument>, <argument pos:start="175:31" pos:end="175:49"><expr pos:start="175:31" pos:end="175:49"><name pos:start="175:31" pos:end="175:49">MATROSKA_ID_FILEUID</name></expr></argument>, <argument pos:start="175:52" pos:end="175:58"><expr pos:start="175:52" pos:end="175:58"><name pos:start="175:52" pos:end="175:58">fileuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:47"><expr pos:start="177:9" pos:end="177:46"><call pos:start="177:9" pos:end="177:46"><name pos:start="177:9" pos:end="177:23">end_ebml_master</name><argument_list pos:start="177:24" pos:end="177:46">(<argument pos:start="177:25" pos:end="177:30"><expr pos:start="177:25" pos:end="177:30"><name pos:start="177:25" pos:end="177:30">dyn_cp</name></expr></argument>, <argument pos:start="177:33" pos:end="177:45"><expr pos:start="177:33" pos:end="177:45"><name pos:start="177:33" pos:end="177:45">attached_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:80"><expr pos:start="181:9" pos:end="181:79"><name pos:start="181:9" pos:end="181:64"><name pos:start="181:9" pos:end="181:11">mkv</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:24">attachments</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:33">entries</name><index pos:start="181:34" pos:end="181:64">[<expr pos:start="181:35" pos:end="181:63"><name pos:start="181:35" pos:end="181:63"><name pos:start="181:35" pos:end="181:37">mkv</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:50">attachments</name><operator pos:start="181:51" pos:end="181:52">-&gt;</operator><name pos:start="181:53" pos:end="181:63">num_entries</name></name></expr>]</index></name><operator pos:start="181:65" pos:end="181:65">.</operator><name pos:start="181:66" pos:end="181:75">stream_idx</name> <operator pos:start="181:77" pos:end="181:77">=</operator> <name pos:start="181:79" pos:end="181:79">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:86"><expr pos:start="183:9" pos:end="183:85"><name pos:start="183:9" pos:end="183:66"><name pos:start="183:9" pos:end="183:11">mkv</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:24">attachments</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:33">entries</name><index pos:start="183:34" pos:end="183:66">[<expr pos:start="183:35" pos:end="183:65"><name pos:start="183:35" pos:end="183:63"><name pos:start="183:35" pos:end="183:37">mkv</name><operator pos:start="183:38" pos:end="183:39">-&gt;</operator><name pos:start="183:40" pos:end="183:50">attachments</name><operator pos:start="183:51" pos:end="183:52">-&gt;</operator><name pos:start="183:53" pos:end="183:63">num_entries</name></name><operator pos:start="183:64" pos:end="183:65">++</operator></expr>]</index></name><operator pos:start="183:67" pos:end="183:67">.</operator><name pos:start="183:68" pos:end="183:74">fileuid</name>  <operator pos:start="183:77" pos:end="183:77">=</operator> <name pos:start="183:79" pos:end="183:85">fileuid</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="187:5" pos:end="187:57"><expr pos:start="187:5" pos:end="187:56"><call pos:start="187:5" pos:end="187:56"><name pos:start="187:5" pos:end="187:25">end_ebml_master_crc32</name><argument_list pos:start="187:26" pos:end="187:56">(<argument pos:start="187:27" pos:end="187:28"><expr pos:start="187:27" pos:end="187:28"><name pos:start="187:27" pos:end="187:28">pb</name></expr></argument>, <argument pos:start="187:31" pos:end="187:37"><expr pos:start="187:31" pos:end="187:37"><operator pos:start="187:31" pos:end="187:31">&amp;</operator><name pos:start="187:32" pos:end="187:37">dyn_cp</name></expr></argument>, <argument pos:start="187:40" pos:end="187:42"><expr pos:start="187:40" pos:end="187:42"><name pos:start="187:40" pos:end="187:42">mkv</name></expr></argument>, <argument pos:start="187:45" pos:end="187:55"><expr pos:start="187:45" pos:end="187:55"><name pos:start="187:45" pos:end="187:55">attachments</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="191:5" pos:end="191:13">return <expr pos:start="191:12" pos:end="191:12"><literal type="number" pos:start="191:12" pos:end="191:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
