<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7179.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:22"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverAIOCB</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:43">bdrv_aio_rw_vector</name><parameter_list pos:start="1:44" pos:end="13:57">(<parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:60">BlockDriverState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">bs</name></decl></parameter>,

                                            <parameter pos:start="3:45" pos:end="3:62"><decl pos:start="3:45" pos:end="3:62"><type pos:start="3:45" pos:end="3:62"><name pos:start="3:45" pos:end="3:51">int64_t</name></type> <name pos:start="3:53" pos:end="3:62">sector_num</name></decl></parameter>,

                                            <parameter pos:start="5:45" pos:end="5:61"><decl pos:start="5:45" pos:end="5:61"><type pos:start="5:45" pos:end="5:61"><name pos:start="5:45" pos:end="5:56">QEMUIOVector</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:61">iov</name></decl></parameter>,

                                            <parameter pos:start="7:45" pos:end="7:58"><decl pos:start="7:45" pos:end="7:58"><type pos:start="7:45" pos:end="7:58"><name pos:start="7:45" pos:end="7:47">int</name></type> <name pos:start="7:49" pos:end="7:58">nb_sectors</name></decl></parameter>,

                                            <parameter pos:start="9:45" pos:end="9:73"><decl pos:start="9:45" pos:end="9:73"><type pos:start="9:45" pos:end="9:73"><name pos:start="9:45" pos:end="9:69">BlockDriverCompletionFunc</name> <modifier pos:start="9:71" pos:end="9:71">*</modifier></type><name pos:start="9:72" pos:end="9:73">cb</name></decl></parameter>,

                                            <parameter pos:start="11:45" pos:end="11:56"><decl pos:start="11:45" pos:end="11:56"><type pos:start="11:45" pos:end="11:56"><name pos:start="11:45" pos:end="11:48">void</name> <modifier pos:start="11:50" pos:end="11:50">*</modifier></type><name pos:start="11:51" pos:end="11:56">opaque</name></decl></parameter>,

                                            <parameter pos:start="13:45" pos:end="13:56"><decl pos:start="13:45" pos:end="13:56"><type pos:start="13:45" pos:end="13:56"><name pos:start="13:45" pos:end="13:47">int</name></type> <name pos:start="13:49" pos:end="13:56">is_write</name></decl></parameter>)</parameter_list>



<block pos:start="17:1" pos:end="51:22">{<block_content pos:start="19:5" pos:end="51:22">

    <decl_stmt pos:start="19:5" pos:end="21:62"><decl pos:start="19:5" pos:end="21:61"><type pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:26">VectorTranslationAIOCB</name> <modifier pos:start="19:28" pos:end="19:28">*</modifier></type><name pos:start="19:29" pos:end="19:29">s</name> <init pos:start="19:31" pos:end="21:61">= <expr pos:start="19:33" pos:end="21:61"><call pos:start="19:33" pos:end="21:61"><name pos:start="19:33" pos:end="19:49">qemu_aio_get_pool</name><argument_list pos:start="19:50" pos:end="21:61">(<argument pos:start="19:51" pos:end="19:68"><expr pos:start="19:51" pos:end="19:68"><operator pos:start="19:51" pos:end="19:51">&amp;</operator><name pos:start="19:52" pos:end="19:68">vectored_aio_pool</name></expr></argument>, <argument pos:start="19:71" pos:end="19:72"><expr pos:start="19:71" pos:end="19:72"><name pos:start="19:71" pos:end="19:72">bs</name></expr></argument>,

                                                  <argument pos:start="21:51" pos:end="21:52"><expr pos:start="21:51" pos:end="21:52"><name pos:start="21:51" pos:end="21:52">cb</name></expr></argument>, <argument pos:start="21:55" pos:end="21:60"><expr pos:start="21:55" pos:end="21:60"><name pos:start="21:55" pos:end="21:60">opaque</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:10">iov</name></name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:16">iov</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:13">bounce</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:52"><name pos:start="27:17" pos:end="27:29">qemu_memalign</name><argument_list pos:start="27:30" pos:end="27:52">(<argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><literal type="number" pos:start="27:31" pos:end="27:33">512</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:51"><expr pos:start="27:36" pos:end="27:51"><name pos:start="27:36" pos:end="27:45">nb_sectors</name> <operator pos:start="27:47" pos:end="27:47">*</operator> <literal type="number" pos:start="27:49" pos:end="27:51">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">is_write</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:26">is_write</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="51:22"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">is_write</name></expr>)</condition> <block pos:start="31:19" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:60">

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><call pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:28">qemu_iovec_to_buffer</name><argument_list pos:start="33:29" pos:end="33:47">(<argument pos:start="33:30" pos:end="33:35"><expr pos:start="33:30" pos:end="33:35"><name pos:start="33:30" pos:end="33:35"><name pos:start="33:30" pos:end="33:30">s</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:35">iov</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:38">s</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:46">bounce</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:60"><expr pos:start="35:9" pos:end="37:59"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:16">aiocb</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="37:59"><name pos:start="35:20" pos:end="35:33">bdrv_aio_write</name><argument_list pos:start="35:34" pos:end="37:59">(<argument pos:start="35:35" pos:end="35:36"><expr pos:start="35:35" pos:end="35:36"><name pos:start="35:35" pos:end="35:36">bs</name></expr></argument>, <argument pos:start="35:39" pos:end="35:48"><expr pos:start="35:39" pos:end="35:48"><name pos:start="35:39" pos:end="35:48">sector_num</name></expr></argument>, <argument pos:start="35:51" pos:end="35:59"><expr pos:start="35:51" pos:end="35:59"><name pos:start="35:51" pos:end="35:59"><name pos:start="35:51" pos:end="35:51">s</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:59">bounce</name></name></expr></argument>, <argument pos:start="35:62" pos:end="35:71"><expr pos:start="35:62" pos:end="35:71"><name pos:start="35:62" pos:end="35:71">nb_sectors</name></expr></argument>,

                                  <argument pos:start="37:35" pos:end="37:55"><expr pos:start="37:35" pos:end="37:55"><name pos:start="37:35" pos:end="37:55">bdrv_aio_rw_vector_cb</name></expr></argument>, <argument pos:start="37:58" pos:end="37:58"><expr pos:start="37:58" pos:end="37:58"><name pos:start="37:58" pos:end="37:58">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="51:22">else <block pos:start="39:12" pos:end="51:22">{<block_content pos:start="41:9" pos:end="51:22">

        <expr_stmt pos:start="41:9" pos:end="43:59"><expr pos:start="41:9" pos:end="43:58"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">aiocb</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="43:58"><name pos:start="41:20" pos:end="41:32">bdrv_aio_read</name><argument_list pos:start="41:33" pos:end="43:58">(<argument pos:start="41:34" pos:end="41:35"><expr pos:start="41:34" pos:end="41:35"><name pos:start="41:34" pos:end="41:35">bs</name></expr></argument>, <argument pos:start="41:38" pos:end="41:47"><expr pos:start="41:38" pos:end="41:47"><name pos:start="41:38" pos:end="41:47">sector_num</name></expr></argument>, <argument pos:start="41:50" pos:end="41:58"><expr pos:start="41:50" pos:end="41:58"><name pos:start="41:50" pos:end="41:58"><name pos:start="41:50" pos:end="41:50">s</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:58">bounce</name></name></expr></argument>, <argument pos:start="41:61" pos:end="41:70"><expr pos:start="41:61" pos:end="41:70"><name pos:start="41:61" pos:end="41:70">nb_sectors</name></expr></argument>,

                                 <argument pos:start="43:34" pos:end="43:54"><expr pos:start="43:34" pos:end="43:54"><name pos:start="43:34" pos:end="43:54">bdrv_aio_rw_vector_cb</name></expr></argument>, <argument pos:start="43:57" pos:end="43:57"><expr pos:start="43:57" pos:end="43:57"><name pos:start="43:57" pos:end="43:57">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    <return pos:start="51:5" pos:end="51:22">return <expr pos:start="51:12" pos:end="51:21"><operator pos:start="51:12" pos:end="51:12">&amp;</operator><name pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:21">common</name></name></expr>;</return></block_content></block></else></if_stmt></block_content></block></function>
</unit>
