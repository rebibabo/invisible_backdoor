<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10042.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">parse_packet_header</name><parameter_list pos:start="1:31" pos:end="1:50">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">WMAVoiceContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:20">res</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><call pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:21">get_bits_left</name><argument_list pos:start="11:22" pos:end="11:25">(<argument pos:start="11:23" pos:end="11:24"><expr pos:start="11:23" pos:end="11:24"><name pos:start="11:23" pos:end="11:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="11:27" pos:end="11:27">&lt;</operator> <literal type="number" pos:start="11:29" pos:end="11:30">11</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><call pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:13">skip_bits</name><argument_list pos:start="15:14" pos:end="15:20">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">gb</name></expr></argument>, <argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:start="15:32" pos:end="15:56">// packet sequence number</comment>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:24">has_residual_lsps</name></name> <operator pos:start="17:26" pos:end="17:26">=</operator> <call pos:start="17:28" pos:end="17:40"><name pos:start="17:28" pos:end="17:36">get_bits1</name><argument_list pos:start="17:37" pos:end="17:40">(<argument pos:start="17:38" pos:end="17:39"><expr pos:start="17:38" pos:end="17:39"><name pos:start="17:38" pos:end="17:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <do pos:start="19:5" pos:end="29:26">do <block pos:start="19:8" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:21">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:11">res</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:29"><name pos:start="21:15" pos:end="21:22">get_bits</name><argument_list pos:start="21:23" pos:end="21:29">(<argument pos:start="21:24" pos:end="21:25"><expr pos:start="21:24" pos:end="21:25"><name pos:start="21:24" pos:end="21:25">gb</name></expr></argument>, <argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="21:32" pos:end="21:66">// number of superframes per packet</comment>

                               <comment type="line" pos:start="23:32" pos:end="23:73">// (minus first one if there is spillover)</comment>

        <if_stmt pos:start="25:9" pos:end="27:21"><if pos:start="25:9" pos:end="27:21">if <condition pos:start="25:12" pos:end="25:73">(<expr pos:start="25:13" pos:end="25:72"><call pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:25">get_bits_left</name><argument_list pos:start="25:26" pos:end="25:29">(<argument pos:start="25:27" pos:end="25:28"><expr pos:start="25:27" pos:end="25:28"><name pos:start="25:27" pos:end="25:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="25:31" pos:end="25:31">&lt;</operator> <literal type="number" pos:start="25:33" pos:end="25:33">6</literal> <operator pos:start="25:35" pos:end="25:35">*</operator> <operator pos:start="25:37" pos:end="25:37">(</operator><name pos:start="25:38" pos:end="25:40">res</name> <operator pos:start="25:42" pos:end="25:43">==</operator> <literal type="number" pos:start="25:45" pos:end="25:48">0x3F</literal><operator pos:start="25:49" pos:end="25:49">)</operator> <operator pos:start="25:51" pos:end="25:51">+</operator> <name pos:start="25:53" pos:end="25:72"><name pos:start="25:53" pos:end="25:53">s</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:72">spillover_bitsize</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="29:13" pos:end="29:25">(<expr pos:start="29:14" pos:end="29:24"><name pos:start="29:14" pos:end="29:16">res</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <literal type="number" pos:start="29:21" pos:end="29:24">0x3F</literal></expr>)</condition>;</do>

    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:22">spillover_nbits</name></name>   <operator pos:start="31:26" pos:end="31:26">=</operator> <call pos:start="31:28" pos:end="31:61"><name pos:start="31:28" pos:end="31:35">get_bits</name><argument_list pos:start="31:36" pos:end="31:61">(<argument pos:start="31:37" pos:end="31:38"><expr pos:start="31:37" pos:end="31:38"><name pos:start="31:37" pos:end="31:38">gb</name></expr></argument>, <argument pos:start="31:41" pos:end="31:60"><expr pos:start="31:41" pos:end="31:60"><name pos:start="31:41" pos:end="31:60"><name pos:start="31:41" pos:end="31:41">s</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:60">spillover_bitsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
