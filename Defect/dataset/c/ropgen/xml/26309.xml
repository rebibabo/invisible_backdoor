<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26309.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">http_read_stream</name><parameter_list pos:start="1:28" pos:end="1:66">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">URLContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">h</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">buf</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:65"><decl pos:start="1:58" pos:end="1:65"><type pos:start="1:58" pos:end="1:65"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:65">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:39">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HTTPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>, <decl pos:start="7:14" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:25">new_location</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:27"><if pos:start="11:5" pos:end="13:27">if <condition pos:start="11:8" pos:end="11:15">(<expr pos:start="11:9" pos:end="11:14"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:14">hd</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:27"><block_content pos:start="13:9" pos:end="13:27">

        <return pos:start="13:9" pos:end="13:27">return <expr pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:46">(<expr pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:27">end_chunked_post</name></name> <operator pos:start="17:29" pos:end="17:30">&amp;&amp;</operator> <operator pos:start="17:32" pos:end="17:32">!</operator><name pos:start="17:33" pos:end="17:45"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:45">end_header</name></name></expr>)</condition> <block pos:start="17:48" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:23">

        <expr_stmt pos:start="19:9" pos:end="19:49"><expr pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:11">err</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:48"><name pos:start="19:15" pos:end="19:30">http_read_header</name><argument_list pos:start="19:31" pos:end="19:48">(<argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">h</name></expr></argument>, <argument pos:start="19:35" pos:end="19:47"><expr pos:start="19:35" pos:end="19:47"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:47">new_location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:23"><if pos:start="21:9" pos:end="23:23">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">err</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:23"><block_content pos:start="23:13" pos:end="23:23">

            <return pos:start="23:13" pos:end="23:23">return <expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="74:0"><if pos:start="29:5" pos:end="74:0">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">chunksize</name></name> <operator pos:start="29:22" pos:end="29:23">&gt;=</operator> <literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>)</condition> <block pos:start="29:28" pos:end="74:0">{<block_content pos:start="31:9" pos:end="69:41">

        <if_stmt pos:start="31:9" pos:end="67:9"><if pos:start="31:9" pos:end="67:9">if <condition pos:start="31:12" pos:end="31:26">(<expr pos:start="31:13" pos:end="31:25"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:14">s</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:25">chunksize</name></name></expr>)</condition> <block pos:start="31:28" pos:end="67:9">{<block_content pos:start="33:13" pos:end="65:13">

            <decl_stmt pos:start="33:13" pos:end="33:26"><decl pos:start="33:13" pos:end="33:25"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">char</name></type> <name pos:start="33:18" pos:end="33:25"><name pos:start="33:18" pos:end="33:21">line</name><index pos:start="33:22" pos:end="33:25">[<expr pos:start="33:23" pos:end="33:24"><literal type="number" pos:start="33:23" pos:end="33:24">32</literal></expr>]</index></name></decl>;</decl_stmt>



            <for pos:start="37:13" pos:end="65:13">for <control pos:start="37:17" pos:end="37:20">(<init pos:start="37:18" pos:end="37:18">;</init><condition pos:start="37:19" pos:end="37:19">;</condition><incr/>)</control> <block pos:start="37:22" pos:end="65:13">{<block_content pos:start="39:17" pos:end="63:22">

                <do pos:start="39:17" pos:end="45:33">do <block pos:start="39:20" pos:end="45:17">{<block_content pos:start="41:21" pos:end="43:35">

                    <if_stmt pos:start="41:21" pos:end="43:35"><if pos:start="41:21" pos:end="43:35">if <condition pos:start="41:24" pos:end="41:73">(<expr pos:start="41:25" pos:end="41:72"><operator pos:start="41:25" pos:end="41:25">(</operator><name pos:start="41:26" pos:end="41:28">err</name> <operator pos:start="41:30" pos:end="41:30">=</operator> <call pos:start="41:32" pos:end="41:67"><name pos:start="41:32" pos:end="41:44">http_get_line</name><argument_list pos:start="41:45" pos:end="41:67">(<argument pos:start="41:46" pos:end="41:46"><expr pos:start="41:46" pos:end="41:46"><name pos:start="41:46" pos:end="41:46">s</name></expr></argument>, <argument pos:start="41:49" pos:end="41:52"><expr pos:start="41:49" pos:end="41:52"><name pos:start="41:49" pos:end="41:52">line</name></expr></argument>, <argument pos:start="41:55" pos:end="41:66"><expr pos:start="41:55" pos:end="41:66"><sizeof pos:start="41:55" pos:end="41:66">sizeof<argument_list pos:start="41:61" pos:end="41:66">(<argument pos:start="41:62" pos:end="41:65"><expr pos:start="41:62" pos:end="41:65"><name pos:start="41:62" pos:end="41:65">line</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="41:68" pos:end="41:68">)</operator> <operator pos:start="41:70" pos:end="41:70">&lt;</operator> <literal type="number" pos:start="41:72" pos:end="41:72">0</literal></expr>)</condition><block type="pseudo" pos:start="43:25" pos:end="43:35"><block_content pos:start="43:25" pos:end="43:35">

                        <return pos:start="43:25" pos:end="43:35">return <expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">err</name></expr>;</return></block_content></block></if></if_stmt>

                </block_content>}</block> while <condition pos:start="45:25" pos:end="45:32">(<expr pos:start="45:26" pos:end="45:31"><operator pos:start="45:26" pos:end="45:26">!</operator><operator pos:start="45:27" pos:end="45:27">*</operator><name pos:start="45:28" pos:end="45:31">line</name></expr>)</condition>;</do>    <comment type="block" pos:start="45:38" pos:end="45:69">/* skip CR LF from last chunk */</comment>



                <expr_stmt pos:start="49:17" pos:end="49:55"><expr pos:start="49:17" pos:end="49:54"><name pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:28">chunksize</name></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <call pos:start="49:32" pos:end="49:54"><name pos:start="49:32" pos:end="49:38">strtoll</name><argument_list pos:start="49:39" pos:end="49:54">(<argument pos:start="49:40" pos:end="49:43"><expr pos:start="49:40" pos:end="49:43"><name pos:start="49:40" pos:end="49:43">line</name></expr></argument>, <argument pos:start="49:46" pos:end="49:49"><expr pos:start="49:46" pos:end="49:49"><name pos:start="49:46" pos:end="49:49">NULL</name></expr></argument>, <argument pos:start="49:52" pos:end="49:53"><expr pos:start="49:52" pos:end="49:53"><literal type="number" pos:start="49:52" pos:end="49:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="53:17" pos:end="55:38"><expr pos:start="53:17" pos:end="55:37"><call pos:start="53:17" pos:end="55:37"><name pos:start="53:17" pos:end="53:22">av_log</name><argument_list pos:start="53:23" pos:end="55:37">(<argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">NULL</name></expr></argument>, <argument pos:start="53:30" pos:end="53:41"><expr pos:start="53:30" pos:end="53:41"><name pos:start="53:30" pos:end="53:41">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="53:44" pos:end="53:85"><expr pos:start="53:44" pos:end="53:85"><literal type="string" pos:start="53:44" pos:end="53:74">"Chunked encoding data size: %"</literal><name pos:start="53:75" pos:end="53:80">PRId64</name><literal type="string" pos:start="53:81" pos:end="53:85">"'\n"</literal></expr></argument>,

                        <argument pos:start="55:25" pos:end="55:36"><expr pos:start="55:25" pos:end="55:36"><name pos:start="55:25" pos:end="55:36"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:36">chunksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="59:17" pos:end="61:29"><if pos:start="59:17" pos:end="61:29">if <condition pos:start="59:20" pos:end="59:34">(<expr pos:start="59:21" pos:end="59:33"><operator pos:start="59:21" pos:end="59:21">!</operator><name pos:start="59:22" pos:end="59:33"><name pos:start="59:22" pos:end="59:22">s</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:33">chunksize</name></name></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:29"><block_content pos:start="61:21" pos:end="61:29">

                    <return pos:start="61:21" pos:end="61:29">return <expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="63:17" pos:end="63:22">break;</break>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:41"><expr pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:12">size</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:40"><name pos:start="69:16" pos:end="69:20">FFMIN</name><argument_list pos:start="69:21" pos:end="69:40">(<argument pos:start="69:22" pos:end="69:25"><expr pos:start="69:22" pos:end="69:25"><name pos:start="69:22" pos:end="69:25">size</name></expr></argument>, <argument pos:start="69:28" pos:end="69:39"><expr pos:start="69:28" pos:end="69:39"><name pos:start="69:28" pos:end="69:39"><name pos:start="69:28" pos:end="69:28">s</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:39">chunksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="73:1" pos:end="73:15">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:15">CONFIG_ZLIB</name></expr></cpp:if>

    <if_stmt pos:start="75:5" pos:end="80:0"><if pos:start="75:5" pos:end="80:0">if <condition pos:start="75:8" pos:end="75:22">(<expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">compressed</name></name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="80:0"><block_content pos:start="77:9" pos:end="80:0">

        <return pos:start="77:9" pos:end="80:0">return <expr pos:start="77:16" pos:end="77:53"><call pos:start="77:16" pos:end="77:53"><name pos:start="77:16" pos:end="77:39">http_buf_read_compressed</name><argument_list pos:start="77:40" pos:end="77:53">(<argument pos:start="77:41" pos:end="77:41"><expr pos:start="77:41" pos:end="77:41"><name pos:start="77:41" pos:end="77:41">h</name></expr></argument>, <argument pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><name pos:start="77:44" pos:end="77:46">buf</name></expr></argument>, <argument pos:start="77:49" pos:end="77:52"><expr pos:start="77:49" pos:end="77:52"><name pos:start="77:49" pos:end="77:52">size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="79:8" pos:end="79:24">/* CONFIG_ZLIB */</comment>

    <return pos:start="81:5" pos:end="81:39">return <expr pos:start="81:12" pos:end="81:38"><call pos:start="81:12" pos:end="81:38"><name pos:start="81:12" pos:end="81:24">http_buf_read</name><argument_list pos:start="81:25" pos:end="81:38">(<argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><name pos:start="81:26" pos:end="81:26">h</name></expr></argument>, <argument pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:31">buf</name></expr></argument>, <argument pos:start="81:34" pos:end="81:37"><expr pos:start="81:34" pos:end="81:37"><name pos:start="81:34" pos:end="81:37">size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
