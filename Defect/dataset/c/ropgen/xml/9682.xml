<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9682.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">virtio_net_set_mrg_rx_bufs</name><parameter_list pos:start="1:39" pos:end="1:75">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:48">VirtIONet</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">n</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:74"><decl pos:start="1:54" pos:end="1:74"><type pos:start="1:54" pos:end="1:74"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:74">mergeable_rx_bufs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">NetClientState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">nc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:45"><expr pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:5">n</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:24">mergeable_rx_bufs</name></name> <operator pos:start="11:26" pos:end="11:26">=</operator> <name pos:start="11:28" pos:end="11:44">mergeable_rx_bufs</name></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:80"><expr pos:start="15:5" pos:end="17:79"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:5">n</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:20">guest_hdr_len</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <ternary pos:start="15:24" pos:end="17:79"><condition pos:start="15:24" pos:end="15:45"><expr pos:start="15:24" pos:end="15:43"><name pos:start="15:24" pos:end="15:43"><name pos:start="15:24" pos:end="15:24">n</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:43">mergeable_rx_bufs</name></name></expr> ?</condition><then pos:start="17:9" pos:end="17:47">

        <expr pos:start="17:9" pos:end="17:47"><sizeof pos:start="17:9" pos:end="17:47">sizeof<argument_list pos:start="17:15" pos:end="17:47">(<argument pos:start="17:16" pos:end="17:46"><expr pos:start="17:16" pos:end="17:46">struct <name pos:start="17:23" pos:end="17:46">virtio_net_hdr_mrg_rxbuf</name></expr></argument>)</argument_list></sizeof></expr> </then><else pos:start="17:49" pos:end="17:79">: <expr pos:start="17:51" pos:end="17:79"><sizeof pos:start="17:51" pos:end="17:79">sizeof<argument_list pos:start="17:57" pos:end="17:79">(<argument pos:start="17:58" pos:end="17:78"><expr pos:start="17:58" pos:end="17:78">struct <name pos:start="17:65" pos:end="17:78">virtio_net_hdr</name></expr></argument>)</argument_list></sizeof></expr></else></ternary></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="37:5">for <control pos:start="21:9" pos:end="21:39">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:34"><expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:21">n</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">max_queues</name></name></expr>;</condition> <incr pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:36">i</name><operator pos:start="21:37" pos:end="21:38">++</operator></expr></incr>)</control> <block pos:start="21:41" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:9">

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:10">nc</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:41"><name pos:start="23:14" pos:end="23:30">qemu_get_subqueue</name><argument_list pos:start="23:31" pos:end="23:41">(<argument pos:start="23:32" pos:end="23:37"><expr pos:start="23:32" pos:end="23:37"><name pos:start="23:32" pos:end="23:37"><name pos:start="23:32" pos:end="23:32">n</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:37">nic</name></name></expr></argument>, <argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><name pos:start="23:40" pos:end="23:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="29:61">(<expr pos:start="27:13" pos:end="29:60"><call pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:29">peer_has_vnet_hdr</name><argument_list pos:start="27:30" pos:end="27:32">(<argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">n</name></expr></argument>)</argument_list></call> <operator pos:start="27:34" pos:end="27:35">&amp;&amp;</operator>

            <call pos:start="29:13" pos:end="29:60"><name pos:start="29:13" pos:end="29:32">tap_has_vnet_hdr_len</name><argument_list pos:start="29:33" pos:end="29:60">(<argument pos:start="29:34" pos:end="29:41"><expr pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:35">nc</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:41">peer</name></name></expr></argument>, <argument pos:start="29:44" pos:end="29:59"><expr pos:start="29:44" pos:end="29:59"><name pos:start="29:44" pos:end="29:59"><name pos:start="29:44" pos:end="29:44">n</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:59">guest_hdr_len</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:63" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:47">

            <expr_stmt pos:start="31:13" pos:end="31:61"><expr pos:start="31:13" pos:end="31:60"><call pos:start="31:13" pos:end="31:60"><name pos:start="31:13" pos:end="31:32">tap_set_vnet_hdr_len</name><argument_list pos:start="31:33" pos:end="31:60">(<argument pos:start="31:34" pos:end="31:41"><expr pos:start="31:34" pos:end="31:41"><name pos:start="31:34" pos:end="31:41"><name pos:start="31:34" pos:end="31:35">nc</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:41">peer</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:59"><expr pos:start="31:44" pos:end="31:59"><name pos:start="31:44" pos:end="31:59"><name pos:start="31:44" pos:end="31:44">n</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:59">guest_hdr_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:13">n</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:27">host_hdr_len</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:46"><name pos:start="33:31" pos:end="33:31">n</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:46">guest_hdr_len</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
