<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22076.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">VFIOGroup</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:32">vfio_get_group</name><parameter_list pos:start="1:33" pos:end="1:63">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:44">groupid</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:58">AddressSpace</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">as</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:16">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VFIOGroup</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">group</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:13">path</name><index pos:start="7:14" pos:end="7:17">[<expr pos:start="7:15" pos:end="7:16"><literal type="number" pos:start="7:15" pos:end="7:16">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:65"><type pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:28">vfio_group_status</name></name></type> <name pos:start="9:30" pos:end="9:35">status</name> <init pos:start="9:37" pos:end="9:65">= <expr pos:start="9:39" pos:end="9:65"><block pos:start="9:39" pos:end="9:65">{ <expr pos:start="9:41" pos:end="9:63"><operator pos:start="9:41" pos:end="9:41">.</operator><name pos:start="9:42" pos:end="9:46">argsz</name> <operator pos:start="9:48" pos:end="9:48">=</operator> sizeof<operator pos:start="9:56" pos:end="9:56">(</operator><name pos:start="9:57" pos:end="9:62">status</name><operator pos:start="9:63" pos:end="9:63">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:43"><name pos:start="13:5" pos:end="13:17">QLIST_FOREACH</name><argument_list pos:start="13:18" pos:end="13:43">(<argument pos:start="13:19" pos:end="13:23">group</argument>, <argument pos:start="13:26" pos:end="13:36">&amp;group_list</argument>, <argument pos:start="13:39" pos:end="13:42">next</argument>)</argument_list></macro> <block pos:start="13:45" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:9">

        <if_stmt pos:start="15:9" pos:end="33:9"><if pos:start="15:9" pos:end="33:9">if <condition pos:start="15:12" pos:end="15:38">(<expr pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:26"><name pos:start="15:13" pos:end="15:17">group</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:26">groupid</name></name> <operator pos:start="15:28" pos:end="15:29">==</operator> <name pos:start="15:31" pos:end="15:37">groupid</name></expr>)</condition> <block pos:start="15:40" pos:end="33:9">{<block_content pos:start="19:13" pos:end="31:13">

            <comment type="block" pos:start="17:13" pos:end="17:68">/* Found it.  Now is it already in the right context? */</comment>

            <if_stmt pos:start="19:13" pos:end="31:13"><if pos:start="19:13" pos:end="23:13">if <condition pos:start="19:16" pos:end="19:50">(<expr pos:start="19:17" pos:end="19:49"><name pos:start="19:17" pos:end="19:43"><name pos:start="19:17" pos:end="19:21">group</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:32">container</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:39">space</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:43">as</name></name> <operator pos:start="19:45" pos:end="19:46">==</operator> <name pos:start="19:48" pos:end="19:49">as</name></expr>)</condition> <block pos:start="19:52" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:29">

                <return pos:start="21:17" pos:end="21:29">return <expr pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:28">group</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="23:15" pos:end="31:13">else <block pos:start="23:20" pos:end="31:13">{<block_content pos:start="25:17" pos:end="29:28">

                <expr_stmt pos:start="25:17" pos:end="27:45"><expr pos:start="25:17" pos:end="27:44"><call pos:start="25:17" pos:end="27:44"><name pos:start="25:17" pos:end="25:28">error_report</name><argument_list pos:start="25:29" pos:end="27:44">(<argument pos:start="25:30" pos:end="25:77"><expr pos:start="25:30" pos:end="25:77"><literal type="string" pos:start="25:30" pos:end="25:77">"vfio: group %d used in multiple address spaces"</literal></expr></argument>,

                             <argument pos:start="27:30" pos:end="27:43"><expr pos:start="27:30" pos:end="27:43"><name pos:start="27:30" pos:end="27:43"><name pos:start="27:30" pos:end="27:34">group</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:43">groupid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="29:17" pos:end="29:28">return <expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">NULL</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:9">group</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:21">g_malloc0</name><argument_list pos:start="39:22" pos:end="39:37">(<argument pos:start="39:23" pos:end="39:36"><expr pos:start="39:23" pos:end="39:36"><sizeof pos:start="39:23" pos:end="39:36">sizeof<argument_list pos:start="39:29" pos:end="39:36">(<argument pos:start="39:30" pos:end="39:35"><expr pos:start="39:30" pos:end="39:35"><operator pos:start="39:30" pos:end="39:30">*</operator><name pos:start="39:31" pos:end="39:35">group</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:58"><expr pos:start="43:5" pos:end="43:57"><call pos:start="43:5" pos:end="43:57"><name pos:start="43:5" pos:end="43:12">snprintf</name><argument_list pos:start="43:13" pos:end="43:57">(<argument pos:start="43:14" pos:end="43:17"><expr pos:start="43:14" pos:end="43:17"><name pos:start="43:14" pos:end="43:17">path</name></expr></argument>, <argument pos:start="43:20" pos:end="43:31"><expr pos:start="43:20" pos:end="43:31"><sizeof pos:start="43:20" pos:end="43:31">sizeof<argument_list pos:start="43:26" pos:end="43:31">(<argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:34" pos:end="43:47"><expr pos:start="43:34" pos:end="43:47"><literal type="string" pos:start="43:34" pos:end="43:47">"/dev/vfio/%d"</literal></expr></argument>, <argument pos:start="43:50" pos:end="43:56"><expr pos:start="43:50" pos:end="43:56"><name pos:start="43:50" pos:end="43:56">groupid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:13"><name pos:start="45:5" pos:end="45:9">group</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:13">fd</name></name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:39"><name pos:start="45:17" pos:end="45:25">qemu_open</name><argument_list pos:start="45:26" pos:end="45:39">(<argument pos:start="45:27" pos:end="45:30"><expr pos:start="45:27" pos:end="45:30"><name pos:start="45:27" pos:end="45:30">path</name></expr></argument>, <argument pos:start="45:33" pos:end="45:38"><expr pos:start="45:33" pos:end="45:38"><name pos:start="45:33" pos:end="45:38">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:22">(<expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:13">group</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:17">fd</name></name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>)</condition> <block pos:start="47:24" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:29">

        <expr_stmt pos:start="49:9" pos:end="49:57"><expr pos:start="49:9" pos:end="49:56"><call pos:start="49:9" pos:end="49:56"><name pos:start="49:9" pos:end="49:20">error_report</name><argument_list pos:start="49:21" pos:end="49:56">(<argument pos:start="49:22" pos:end="49:49"><expr pos:start="49:22" pos:end="49:49"><literal type="string" pos:start="49:22" pos:end="49:49">"vfio: error opening %s: %m"</literal></expr></argument>, <argument pos:start="49:52" pos:end="49:55"><expr pos:start="49:52" pos:end="49:55"><name pos:start="49:52" pos:end="49:55">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:29">goto <name pos:start="51:14" pos:end="51:28">free_group_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:57">(<expr pos:start="57:9" pos:end="57:56"><call pos:start="57:9" pos:end="57:56"><name pos:start="57:9" pos:end="57:13">ioctl</name><argument_list pos:start="57:14" pos:end="57:56">(<argument pos:start="57:15" pos:end="57:23"><expr pos:start="57:15" pos:end="57:23"><name pos:start="57:15" pos:end="57:23"><name pos:start="57:15" pos:end="57:19">group</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:23">fd</name></name></expr></argument>, <argument pos:start="57:26" pos:end="57:46"><expr pos:start="57:26" pos:end="57:46"><name pos:start="57:26" pos:end="57:46">VFIO_GROUP_GET_STATUS</name></expr></argument>, <argument pos:start="57:49" pos:end="57:55"><expr pos:start="57:49" pos:end="57:55"><operator pos:start="57:49" pos:end="57:49">&amp;</operator><name pos:start="57:50" pos:end="57:55">status</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:59" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:27">

        <expr_stmt pos:start="59:9" pos:end="59:61"><expr pos:start="59:9" pos:end="59:60"><call pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:20">error_report</name><argument_list pos:start="59:21" pos:end="59:60">(<argument pos:start="59:22" pos:end="59:59"><expr pos:start="59:22" pos:end="59:59"><literal type="string" pos:start="59:22" pos:end="59:59">"vfio: error getting group status: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:27">goto <name pos:start="61:14" pos:end="61:26">close_fd_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="77:5"><if pos:start="67:5" pos:end="77:5">if <condition pos:start="67:8" pos:end="67:50">(<expr pos:start="67:9" pos:end="67:49"><operator pos:start="67:9" pos:end="67:9">!</operator><operator pos:start="67:10" pos:end="67:10">(</operator><name pos:start="67:11" pos:end="67:22"><name pos:start="67:11" pos:end="67:16">status</name><operator pos:start="67:17" pos:end="67:17">.</operator><name pos:start="67:18" pos:end="67:22">flags</name></name> <operator pos:start="67:24" pos:end="67:24">&amp;</operator> <name pos:start="67:26" pos:end="67:48">VFIO_GROUP_FLAGS_VIABLE</name><operator pos:start="67:49" pos:end="67:49">)</operator></expr>)</condition> <block pos:start="67:52" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:27">

        <expr_stmt pos:start="69:9" pos:end="73:50"><expr pos:start="69:9" pos:end="73:49"><call pos:start="69:9" pos:end="73:49"><name pos:start="69:9" pos:end="69:20">error_report</name><argument_list pos:start="69:21" pos:end="73:49">(<argument pos:start="69:22" pos:end="73:39"><expr pos:start="69:22" pos:end="73:39"><literal type="string" pos:start="69:22" pos:end="69:74">"vfio: error, group %d is not viable, please ensure "</literal>

                     <literal type="string" pos:start="71:22" pos:end="71:77">"all devices within the iommu_group are bound to their "</literal>

                     <literal type="string" pos:start="73:22" pos:end="73:39">"vfio bus driver."</literal></expr></argument>, <argument pos:start="73:42" pos:end="73:48"><expr pos:start="73:42" pos:end="73:48"><name pos:start="73:42" pos:end="73:48">groupid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:27">goto <name pos:start="75:14" pos:end="75:26">close_fd_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:9">group</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:18">groupid</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:28">groupid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:36"><expr pos:start="83:5" pos:end="83:35"><call pos:start="83:5" pos:end="83:35"><name pos:start="83:5" pos:end="83:14">QLIST_INIT</name><argument_list pos:start="83:15" pos:end="83:35">(<argument pos:start="83:16" pos:end="83:34"><expr pos:start="83:16" pos:end="83:34"><operator pos:start="83:16" pos:end="83:16">&amp;</operator><name pos:start="83:17" pos:end="83:34"><name pos:start="83:17" pos:end="83:21">group</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:34">device_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:42">(<expr pos:start="87:9" pos:end="87:41"><call pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:30">vfio_connect_container</name><argument_list pos:start="87:31" pos:end="87:41">(<argument pos:start="87:32" pos:end="87:36"><expr pos:start="87:32" pos:end="87:36"><name pos:start="87:32" pos:end="87:36">group</name></expr></argument>, <argument pos:start="87:39" pos:end="87:40"><expr pos:start="87:39" pos:end="87:40"><name pos:start="87:39" pos:end="87:40">as</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:44" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:27">

        <expr_stmt pos:start="89:9" pos:end="89:78"><expr pos:start="89:9" pos:end="89:77"><call pos:start="89:9" pos:end="89:77"><name pos:start="89:9" pos:end="89:20">error_report</name><argument_list pos:start="89:21" pos:end="89:77">(<argument pos:start="89:22" pos:end="89:67"><expr pos:start="89:22" pos:end="89:67"><literal type="string" pos:start="89:22" pos:end="89:67">"vfio: failed to setup container for group %d"</literal></expr></argument>, <argument pos:start="89:70" pos:end="89:76"><expr pos:start="89:70" pos:end="89:76"><name pos:start="89:70" pos:end="89:76">groupid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:27">goto <name pos:start="91:14" pos:end="91:26">close_fd_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:33">(<expr pos:start="97:9" pos:end="97:32"><call pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:19">QLIST_EMPTY</name><argument_list pos:start="97:20" pos:end="97:32">(<argument pos:start="97:21" pos:end="97:31"><expr pos:start="97:21" pos:end="97:31"><operator pos:start="97:21" pos:end="97:21">&amp;</operator><name pos:start="97:22" pos:end="97:31">group_list</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:35" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:58">

        <expr_stmt pos:start="99:9" pos:end="99:58"><expr pos:start="99:9" pos:end="99:57"><call pos:start="99:9" pos:end="99:57"><name pos:start="99:9" pos:end="99:27">qemu_register_reset</name><argument_list pos:start="99:28" pos:end="99:57">(<argument pos:start="99:29" pos:end="99:50"><expr pos:start="99:29" pos:end="99:50"><name pos:start="99:29" pos:end="99:50">vfio_pci_reset_handler</name></expr></argument>, <argument pos:start="99:53" pos:end="99:56"><expr pos:start="99:53" pos:end="99:56"><name pos:start="99:53" pos:end="99:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:48"><expr pos:start="105:5" pos:end="105:47"><call pos:start="105:5" pos:end="105:47"><name pos:start="105:5" pos:end="105:21">QLIST_INSERT_HEAD</name><argument_list pos:start="105:22" pos:end="105:47">(<argument pos:start="105:23" pos:end="105:33"><expr pos:start="105:23" pos:end="105:33"><operator pos:start="105:23" pos:end="105:23">&amp;</operator><name pos:start="105:24" pos:end="105:33">group_list</name></expr></argument>, <argument pos:start="105:36" pos:end="105:40"><expr pos:start="105:36" pos:end="105:40"><name pos:start="105:36" pos:end="105:40">group</name></expr></argument>, <argument pos:start="105:43" pos:end="105:46"><expr pos:start="105:43" pos:end="105:46"><name pos:start="105:43" pos:end="105:46">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:37"><expr pos:start="109:5" pos:end="109:36"><call pos:start="109:5" pos:end="109:36"><name pos:start="109:5" pos:end="109:29">vfio_kvm_device_add_group</name><argument_list pos:start="109:30" pos:end="109:36">(<argument pos:start="109:31" pos:end="109:35"><expr pos:start="109:31" pos:end="109:35"><name pos:start="109:31" pos:end="109:35">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="113:5" pos:end="113:17">return <expr pos:start="113:12" pos:end="113:16"><name pos:start="113:12" pos:end="113:16">group</name></expr>;</return>



<label pos:start="117:1" pos:end="117:14"><name pos:start="117:1" pos:end="117:13">close_fd_exit</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:21"><expr pos:start="119:5" pos:end="119:20"><call pos:start="119:5" pos:end="119:20"><name pos:start="119:5" pos:end="119:9">close</name><argument_list pos:start="119:10" pos:end="119:20">(<argument pos:start="119:11" pos:end="119:19"><expr pos:start="119:11" pos:end="119:19"><name pos:start="119:11" pos:end="119:19"><name pos:start="119:11" pos:end="119:15">group</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="123:1" pos:end="123:16"><name pos:start="123:1" pos:end="123:15">free_group_exit</name>:</label>

    <expr_stmt pos:start="125:5" pos:end="125:18"><expr pos:start="125:5" pos:end="125:17"><call pos:start="125:5" pos:end="125:17"><name pos:start="125:5" pos:end="125:10">g_free</name><argument_list pos:start="125:11" pos:end="125:17">(<argument pos:start="125:12" pos:end="125:16"><expr pos:start="125:12" pos:end="125:16"><name pos:start="125:12" pos:end="125:16">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="129:5" pos:end="129:16">return <expr pos:start="129:12" pos:end="129:15"><name pos:start="129:12" pos:end="129:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
