<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9005.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">mpl2_probe</name><parameter_list pos:start="1:22" pos:end="1:37">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:33">AVProbeData</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:29">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:10">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:17">start</name></decl>, <decl pos:start="9:20" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:20" pos:end="9:22">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:25"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">unsigned</name> <name pos:start="11:20" pos:end="11:23">char</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:28">ptr</name> <init pos:start="11:30" pos:end="11:37">= <expr pos:start="11:32" pos:end="11:37"><name pos:start="11:32" pos:end="11:37"><name pos:start="11:32" pos:end="11:32">p</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:37">buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:53"><decl pos:start="13:5" pos:end="13:52"><type pos:start="13:5" pos:end="13:25"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:18">unsigned</name> <name pos:start="13:20" pos:end="13:23">char</name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:32">ptr_end</name> <init pos:start="13:34" pos:end="13:52">= <expr pos:start="13:36" pos:end="13:52"><name pos:start="13:36" pos:end="13:38">ptr</name> <operator pos:start="13:40" pos:end="13:40">+</operator> <name pos:start="13:42" pos:end="13:52"><name pos:start="13:42" pos:end="13:42">p</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:52">buf_size</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="31:5">for <control pos:start="17:9" pos:end="17:27">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <literal type="number" pos:start="17:21" pos:end="17:21">2</literal></expr>;</condition> <incr pos:start="17:24" pos:end="17:26"><expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:24">i</name><operator pos:start="17:25" pos:end="17:26">++</operator></expr></incr>)</control> <block pos:start="17:29" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:21">

        <if_stmt pos:start="19:9" pos:end="23:21"><if pos:start="19:9" pos:end="23:21">if <condition pos:start="19:12" pos:end="21:75">(<expr pos:start="19:13" pos:end="21:74"><call pos:start="19:13" pos:end="19:69"><name pos:start="19:13" pos:end="19:18">sscanf</name><argument_list pos:start="19:19" pos:end="19:69">(<argument pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ptr</name></expr></argument>, <argument pos:start="19:25" pos:end="19:50"><expr pos:start="19:25" pos:end="19:50"><literal type="string" pos:start="19:25" pos:end="19:28">"[%"</literal><name pos:start="19:29" pos:end="19:34">SCNd64</name><literal type="string" pos:start="19:35" pos:end="19:39">"][%"</literal><name pos:start="19:40" pos:end="19:45">SCNd64</name><literal type="string" pos:start="19:46" pos:end="19:50">"]%c"</literal></expr></argument>, <argument pos:start="19:53" pos:end="19:58"><expr pos:start="19:53" pos:end="19:58"><operator pos:start="19:53" pos:end="19:53">&amp;</operator><name pos:start="19:54" pos:end="19:58">start</name></expr></argument>, <argument pos:start="19:61" pos:end="19:64"><expr pos:start="19:61" pos:end="19:64"><operator pos:start="19:61" pos:end="19:61">&amp;</operator><name pos:start="19:62" pos:end="19:64">end</name></expr></argument>, <argument pos:start="19:67" pos:end="19:68"><expr pos:start="19:67" pos:end="19:68"><operator pos:start="19:67" pos:end="19:67">&amp;</operator><name pos:start="19:68" pos:end="19:68">c</name></expr></argument>)</argument_list></call> <operator pos:start="19:71" pos:end="19:72">!=</operator> <literal type="number" pos:start="19:74" pos:end="19:74">3</literal> <operator pos:start="19:76" pos:end="19:77">&amp;&amp;</operator>

            <call pos:start="21:13" pos:end="21:69"><name pos:start="21:13" pos:end="21:18">sscanf</name><argument_list pos:start="21:19" pos:end="21:69">(<argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">ptr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:41"><expr pos:start="21:25" pos:end="21:41"><literal type="string" pos:start="21:25" pos:end="21:28">"[%"</literal><name pos:start="21:29" pos:end="21:34">SCNd64</name><literal type="string" pos:start="21:35" pos:end="21:41">"][]%c"</literal></expr></argument>,          <argument pos:start="21:53" pos:end="21:58"><expr pos:start="21:53" pos:end="21:58"><operator pos:start="21:53" pos:end="21:53">&amp;</operator><name pos:start="21:54" pos:end="21:58">start</name></expr></argument>,       <argument pos:start="21:67" pos:end="21:68"><expr pos:start="21:67" pos:end="21:68"><operator pos:start="21:67" pos:end="21:67">&amp;</operator><name pos:start="21:68" pos:end="21:68">c</name></expr></argument>)</argument_list></call> <operator pos:start="21:71" pos:end="21:72">!=</operator> <literal type="number" pos:start="21:74" pos:end="21:74">2</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <return pos:start="23:13" pos:end="23:21">return <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:11">ptr</name> <operator pos:start="25:13" pos:end="25:14">+=</operator> <call pos:start="25:16" pos:end="25:33"><name pos:start="25:16" pos:end="25:22">strcspn</name><argument_list pos:start="25:23" pos:end="25:33">(<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">ptr</name></expr></argument>, <argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><literal type="string" pos:start="25:29" pos:end="25:32">"\n"</literal></expr></argument>)</argument_list></call> <operator pos:start="25:35" pos:end="25:35">+</operator> <literal type="number" pos:start="25:37" pos:end="25:37">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:27">(<expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:15">ptr</name> <operator pos:start="27:17" pos:end="27:18">&gt;=</operator> <name pos:start="27:20" pos:end="27:26">ptr_end</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="33:5" pos:end="33:29">return <expr pos:start="33:12" pos:end="33:28"><name pos:start="33:12" pos:end="33:28">AVPROBE_SCORE_MAX</name></expr>;</return>

</block_content>}</block></function>
</unit>
