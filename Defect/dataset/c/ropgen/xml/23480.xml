<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23480.c" pos:tabs="8"><function pos:start="1:1" pos:end="1785:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">transcode</name><parameter_list pos:start="1:21" pos:end="9:64">(<parameter pos:start="1:22" pos:end="1:51"><decl pos:start="1:22" pos:end="1:51"><type pos:start="1:22" pos:end="1:51"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:51">output_files</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:40"><decl pos:start="3:22" pos:end="3:40"><type pos:start="3:22" pos:end="3:40"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:40">nb_output_files</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:43"><decl pos:start="5:22" pos:end="5:43"><type pos:start="5:22" pos:end="5:43"><name pos:start="5:22" pos:end="5:30">InputFile</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:43">input_files</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:39"><decl pos:start="7:22" pos:end="7:39"><type pos:start="7:22" pos:end="7:39"><name pos:start="7:22" pos:end="7:24">int</name></type> <name pos:start="7:26" pos:end="7:39">nb_input_files</name></decl></parameter>,

                     <parameter pos:start="9:22" pos:end="9:43"><decl pos:start="9:22" pos:end="9:43"><type pos:start="9:22" pos:end="9:43"><name pos:start="9:22" pos:end="9:30">StreamMap</name> <modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:43">stream_maps</name></decl></parameter>, <parameter pos:start="9:46" pos:end="9:63"><decl pos:start="9:46" pos:end="9:63"><type pos:start="9:46" pos:end="9:63"><name pos:start="9:46" pos:end="9:48">int</name></type> <name pos:start="9:50" pos:end="9:63">nb_stream_maps</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="1785:1">{<block_content pos:start="13:5" pos:end="1783:15">

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">i</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">j</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">k</name></decl>, <decl pos:start="13:27" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:27">n</name></decl>, <decl pos:start="13:30" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:40">nb_ostreams</name> <init pos:start="13:42" pos:end="13:44">= <expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></init></decl>, <decl pos:start="13:47" pos:end="13:50"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:47" pos:end="13:50">step</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:19">AVFormatContext</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:23">is</name></decl>, <decl pos:start="17:26" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:21"><modifier pos:start="17:26" pos:end="17:26">*</modifier></type><name pos:start="17:27" pos:end="17:28">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVCodecContext</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:25">codec</name></decl>, <decl pos:start="19:28" pos:end="19:34"><type ref="prev" pos:start="19:5" pos:end="19:20"><modifier pos:start="19:28" pos:end="19:28">*</modifier></type><name pos:start="19:29" pos:end="19:34">icodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:42"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">OutputStream</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:21">ost</name></decl>, <decl pos:start="21:24" pos:end="21:41"><type ref="prev" pos:start="21:5" pos:end="21:18"><modifier pos:start="21:24" pos:end="21:24">*</modifier><modifier pos:start="21:25" pos:end="21:25">*</modifier></type><name pos:start="21:26" pos:end="21:34">ost_table</name> <init pos:start="21:36" pos:end="21:41">= <expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">InputStream</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">char</name></type> <name pos:start="25:10" pos:end="25:20"><name pos:start="25:10" pos:end="25:14">error</name><index pos:start="25:15" pos:end="25:20">[<expr pos:start="25:16" pos:end="25:19"><literal type="number" pos:start="25:16" pos:end="25:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">key</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:16">want_sdp</name> <init pos:start="29:18" pos:end="29:20">= <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:37"><decl pos:start="31:5" pos:end="31:36"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">uint8_t</name></type> <name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:21">no_packet</name><index pos:start="31:22" pos:end="31:32">[<expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31">MAX_FILES</name></expr>]</index></name><init pos:start="31:33" pos:end="31:36">=<expr pos:start="31:34" pos:end="31:36"><block pos:start="31:34" pos:end="31:36">{<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:26"><decl pos:start="33:5" pos:end="33:25"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:23">no_packet_count</name><init pos:start="33:24" pos:end="33:25">=<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:48"><decl pos:start="35:5" pos:end="35:47"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:26">nb_frame_threshold</name><index pos:start="35:27" pos:end="35:43">[<expr pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:42">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="35:44" pos:end="35:47">=<expr pos:start="35:45" pos:end="35:47"><block pos:start="35:45" pos:end="35:47">{<expr pos:start="35:46" pos:end="35:46"><literal type="number" pos:start="35:46" pos:end="35:46">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:40"><decl pos:start="37:5" pos:end="37:39"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:18">nb_streams</name><index pos:start="37:19" pos:end="37:35">[<expr pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:34">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="37:36" pos:end="37:39">=<expr pos:start="37:37" pos:end="37:39"><block pos:start="37:37" pos:end="37:39">{<expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="41:5" pos:end="45:50"><if pos:start="41:5" pos:end="45:50">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">rate_emu</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="45:50"><block_content pos:start="43:9" pos:end="45:50">

        <for pos:start="43:9" pos:end="45:50">for <control pos:start="43:13" pos:end="43:46">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:41"><expr pos:start="43:21" pos:end="43:40"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:40">nb_input_streams</name></expr>;</condition> <incr pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:43">i</name><operator pos:start="43:44" pos:end="43:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:13" pos:end="45:50"><block_content pos:start="45:13" pos:end="45:50">

            <expr_stmt pos:start="45:13" pos:end="45:50"><expr pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:25">input_streams</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">i</name></expr>]</index></name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:34">start</name> <operator pos:start="45:36" pos:end="45:36">=</operator> <call pos:start="45:38" pos:end="45:49"><name pos:start="45:38" pos:end="45:47">av_gettime</name><argument_list pos:start="45:48" pos:end="45:49">()</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:28">/* output stream init */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:15">nb_ostreams</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="71:5">for<control pos:start="53:8" pos:end="53:34">(<init pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</init><condition pos:start="53:13" pos:end="53:30"><expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:13">i</name><operator pos:start="53:14" pos:end="53:14">&lt;</operator><name pos:start="53:15" pos:end="53:29">nb_output_files</name></expr>;</condition><incr pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:31">i</name><operator pos:start="53:32" pos:end="53:33">++</operator></expr></incr>)</control> <block pos:start="53:36" pos:end="71:5">{<block_content pos:start="55:9" pos:end="69:38">

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:10">os</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:25">output_files</name><index pos:start="55:26" pos:end="55:28">[<expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:71">(<expr pos:start="57:13" pos:end="57:70"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:27"><name pos:start="57:14" pos:end="57:15">os</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:27">nb_streams</name></name> <operator pos:start="57:29" pos:end="57:30">&amp;&amp;</operator> <operator pos:start="57:32" pos:end="57:32">!</operator><operator pos:start="57:33" pos:end="57:33">(</operator><name pos:start="57:34" pos:end="57:51"><name pos:start="57:34" pos:end="57:35">os</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:44">oformat</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:51">flags</name></name> <operator pos:start="57:53" pos:end="57:53">&amp;</operator> <name pos:start="57:55" pos:end="57:69">AVFMT_NOSTREAMS</name><operator pos:start="57:70" pos:end="57:70">)</operator></expr>)</condition> <block pos:start="57:73" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:22">

            <expr_stmt pos:start="59:13" pos:end="59:77"><expr pos:start="59:13" pos:end="59:76"><call pos:start="59:13" pos:end="59:76"><name pos:start="59:13" pos:end="59:26">av_dump_format</name><argument_list pos:start="59:27" pos:end="59:76">(<argument pos:start="59:28" pos:end="59:42"><expr pos:start="59:28" pos:end="59:42"><name pos:start="59:28" pos:end="59:42"><name pos:start="59:28" pos:end="59:39">output_files</name><index pos:start="59:40" pos:end="59:42">[<expr pos:start="59:41" pos:end="59:41"><name pos:start="59:41" pos:end="59:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="59:45" pos:end="59:45"><expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">i</name></expr></argument>, <argument pos:start="59:48" pos:end="59:72"><expr pos:start="59:48" pos:end="59:72"><name pos:start="59:48" pos:end="59:62"><name pos:start="59:48" pos:end="59:59">output_files</name><index pos:start="59:60" pos:end="59:62">[<expr pos:start="59:61" pos:end="59:61"><name pos:start="59:61" pos:end="59:61">i</name></expr>]</index></name><operator pos:start="59:63" pos:end="59:64">-&gt;</operator><name pos:start="59:65" pos:end="59:72">filename</name></expr></argument>, <argument pos:start="59:75" pos:end="59:75"><expr pos:start="59:75" pos:end="59:75"><literal type="number" pos:start="59:75" pos:end="59:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:80"><expr pos:start="61:13" pos:end="61:79"><call pos:start="61:13" pos:end="61:79"><name pos:start="61:13" pos:end="61:19">fprintf</name><argument_list pos:start="61:20" pos:end="61:79">(<argument pos:start="61:21" pos:end="61:26"><expr pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:26">stderr</name></expr></argument>, <argument pos:start="61:29" pos:end="61:75"><expr pos:start="61:29" pos:end="61:75"><literal type="string" pos:start="61:29" pos:end="61:75">"Output file #%d does not contain any stream\n"</literal></expr></argument>, <argument pos:start="61:78" pos:end="61:78"><expr pos:start="61:78" pos:end="61:78"><name pos:start="61:78" pos:end="61:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:34"><expr pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:33"><name pos:start="63:19" pos:end="63:25">AVERROR</name><argument_list pos:start="63:26" pos:end="63:33">(<argument pos:start="63:27" pos:end="63:32"><expr pos:start="63:27" pos:end="63:32"><name pos:start="63:27" pos:end="63:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:19">nb_ostreams</name> <operator pos:start="69:21" pos:end="69:22">+=</operator> <name pos:start="69:24" pos:end="69:37"><name pos:start="69:24" pos:end="69:25">os</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:37">nb_streams</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:60">(<expr pos:start="73:9" pos:end="73:59"><name pos:start="73:9" pos:end="73:22">nb_stream_maps</name> <operator pos:start="73:24" pos:end="73:24">&gt;</operator> <literal type="number" pos:start="73:26" pos:end="73:26">0</literal> <operator pos:start="73:28" pos:end="73:29">&amp;&amp;</operator> <name pos:start="73:31" pos:end="73:44">nb_stream_maps</name> <operator pos:start="73:46" pos:end="73:47">!=</operator> <name pos:start="73:49" pos:end="73:59">nb_ostreams</name></expr>)</condition> <block pos:start="73:62" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:18">

        <expr_stmt pos:start="75:9" pos:end="75:87"><expr pos:start="75:9" pos:end="75:86"><call pos:start="75:9" pos:end="75:86"><name pos:start="75:9" pos:end="75:15">fprintf</name><argument_list pos:start="75:16" pos:end="75:86">(<argument pos:start="75:17" pos:end="75:22"><expr pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:22">stderr</name></expr></argument>, <argument pos:start="75:25" pos:end="75:85"><expr pos:start="75:25" pos:end="75:85"><literal type="string" pos:start="75:25" pos:end="75:85">"Number of stream maps must match number of output streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:29"><name pos:start="77:15" pos:end="77:21">AVERROR</name><argument_list pos:start="77:22" pos:end="77:29">(<argument pos:start="77:23" pos:end="77:28"><expr pos:start="77:23" pos:end="77:28"><name pos:start="77:23" pos:end="77:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:78">/* Sanity check the mapping args -- do the input files &amp; streams exist? */</comment>

    <for pos:start="87:5" pos:end="123:5">for<control pos:start="87:8" pos:end="87:33">(<init pos:start="87:9" pos:end="87:12"><expr pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:9">i</name><operator pos:start="87:10" pos:end="87:10">=</operator><literal type="number" pos:start="87:11" pos:end="87:11">0</literal></expr>;</init><condition pos:start="87:13" pos:end="87:29"><expr pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:13">i</name><operator pos:start="87:14" pos:end="87:14">&lt;</operator><name pos:start="87:15" pos:end="87:28">nb_stream_maps</name></expr>;</condition><incr pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><name pos:start="87:30" pos:end="87:30">i</name><operator pos:start="87:31" pos:end="87:32">++</operator></expr></incr>)</control> <block pos:start="87:35" pos:end="123:5">{<block_content pos:start="89:9" pos:end="121:9">

        <decl_stmt pos:start="89:9" pos:end="89:43"><decl pos:start="89:9" pos:end="89:42"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:14">fi</name> <init pos:start="89:16" pos:end="89:42">= <expr pos:start="89:18" pos:end="89:42"><name pos:start="89:18" pos:end="89:31"><name pos:start="89:18" pos:end="89:28">stream_maps</name><index pos:start="89:29" pos:end="89:31">[<expr pos:start="89:30" pos:end="89:30"><name pos:start="89:30" pos:end="89:30">i</name></expr>]</index></name><operator pos:start="89:32" pos:end="89:32">.</operator><name pos:start="89:33" pos:end="89:42">file_index</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:45"><decl pos:start="91:9" pos:end="91:44"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:14">si</name> <init pos:start="91:16" pos:end="91:44">= <expr pos:start="91:18" pos:end="91:44"><name pos:start="91:18" pos:end="91:31"><name pos:start="91:18" pos:end="91:28">stream_maps</name><index pos:start="91:29" pos:end="91:31">[<expr pos:start="91:30" pos:end="91:30"><name pos:start="91:30" pos:end="91:30">i</name></expr>]</index></name><operator pos:start="91:32" pos:end="91:32">.</operator><name pos:start="91:33" pos:end="91:44">stream_index</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="95:9" pos:end="105:9"><if pos:start="95:9" pos:end="105:9">if <condition pos:start="95:12" pos:end="97:63">(<expr pos:start="95:13" pos:end="97:62"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:14">fi</name> <argument_list type="generic" pos:start="95:16" pos:end="95:26">&lt; <argument pos:start="95:18" pos:end="95:24"><expr pos:start="95:18" pos:end="95:24"><literal type="number" pos:start="95:18" pos:end="95:18">0</literal> <operator pos:start="95:20" pos:end="95:21">||</operator> <name pos:start="95:23" pos:end="95:24">fi</name></expr></argument> &gt;</argument_list></name> <name pos:start="95:28" pos:end="95:41">nb_input_files</name> <operator pos:start="95:43" pos:end="95:43">-</operator> <literal type="number" pos:start="95:45" pos:end="95:45">1</literal> <operator pos:start="95:47" pos:end="95:48">||</operator>

            <name pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:14">si</name> <argument_list type="generic" pos:start="97:16" pos:end="97:26">&lt; <argument pos:start="97:18" pos:end="97:24"><expr pos:start="97:18" pos:end="97:24"><literal type="number" pos:start="97:18" pos:end="97:18">0</literal> <operator pos:start="97:20" pos:end="97:21">||</operator> <name pos:start="97:23" pos:end="97:24">si</name></expr></argument> &gt;</argument_list></name> <name pos:start="97:28" pos:end="97:42"><name pos:start="97:28" pos:end="97:38">input_files</name><index pos:start="97:39" pos:end="97:42">[<expr pos:start="97:40" pos:end="97:41"><name pos:start="97:40" pos:end="97:41">fi</name></expr>]</index></name><operator pos:start="97:43" pos:end="97:43">.</operator><name pos:start="97:44" pos:end="97:58"><name pos:start="97:44" pos:end="97:46">ctx</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:58">nb_streams</name></name> <operator pos:start="97:60" pos:end="97:60">-</operator> <literal type="number" pos:start="97:62" pos:end="97:62">1</literal></expr>)</condition> <block pos:start="97:65" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:22">

            <expr_stmt pos:start="99:13" pos:end="99:75"><expr pos:start="99:13" pos:end="99:74"><call pos:start="99:13" pos:end="99:74"><name pos:start="99:13" pos:end="99:19">fprintf</name><argument_list pos:start="99:20" pos:end="99:74">(<argument pos:start="99:21" pos:end="99:26"><expr pos:start="99:21" pos:end="99:26"><name pos:start="99:21" pos:end="99:26">stderr</name></expr></argument>,<argument pos:start="99:28" pos:end="99:65"><expr pos:start="99:28" pos:end="99:65"><literal type="string" pos:start="99:28" pos:end="99:65">"Could not find input stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="99:68" pos:end="99:69"><expr pos:start="99:68" pos:end="99:69"><name pos:start="99:68" pos:end="99:69">fi</name></expr></argument>, <argument pos:start="99:72" pos:end="99:73"><expr pos:start="99:72" pos:end="99:73"><name pos:start="99:72" pos:end="99:73">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:34"><expr pos:start="101:13" pos:end="101:33"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:33"><name pos:start="101:19" pos:end="101:25">AVERROR</name><argument_list pos:start="101:26" pos:end="101:33">(<argument pos:start="101:27" pos:end="101:32"><expr pos:start="101:27" pos:end="101:32"><name pos:start="101:27" pos:end="101:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="103:13" pos:end="103:22">goto <name pos:start="103:18" pos:end="103:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:44"><expr pos:start="107:9" pos:end="107:43"><name pos:start="107:9" pos:end="107:10">fi</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <name pos:start="107:14" pos:end="107:27"><name pos:start="107:14" pos:end="107:24">stream_maps</name><index pos:start="107:25" pos:end="107:27">[<expr pos:start="107:26" pos:end="107:26"><name pos:start="107:26" pos:end="107:26">i</name></expr>]</index></name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:43">sync_file_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:46"><expr pos:start="109:9" pos:end="109:45"><name pos:start="109:9" pos:end="109:10">si</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <name pos:start="109:14" pos:end="109:27"><name pos:start="109:14" pos:end="109:24">stream_maps</name><index pos:start="109:25" pos:end="109:27">[<expr pos:start="109:26" pos:end="109:26"><name pos:start="109:26" pos:end="109:26">i</name></expr>]</index></name><operator pos:start="109:28" pos:end="109:28">.</operator><name pos:start="109:29" pos:end="109:45">sync_stream_index</name></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="121:9"><if pos:start="111:9" pos:end="121:9">if <condition pos:start="111:12" pos:end="113:63">(<expr pos:start="111:13" pos:end="113:62"><name pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:14">fi</name> <argument_list type="generic" pos:start="111:16" pos:end="111:26">&lt; <argument pos:start="111:18" pos:end="111:24"><expr pos:start="111:18" pos:end="111:24"><literal type="number" pos:start="111:18" pos:end="111:18">0</literal> <operator pos:start="111:20" pos:end="111:21">||</operator> <name pos:start="111:23" pos:end="111:24">fi</name></expr></argument> &gt;</argument_list></name> <name pos:start="111:28" pos:end="111:41">nb_input_files</name> <operator pos:start="111:43" pos:end="111:43">-</operator> <literal type="number" pos:start="111:45" pos:end="111:45">1</literal> <operator pos:start="111:47" pos:end="111:48">||</operator>

            <name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:14">si</name> <argument_list type="generic" pos:start="113:16" pos:end="113:26">&lt; <argument pos:start="113:18" pos:end="113:24"><expr pos:start="113:18" pos:end="113:24"><literal type="number" pos:start="113:18" pos:end="113:18">0</literal> <operator pos:start="113:20" pos:end="113:21">||</operator> <name pos:start="113:23" pos:end="113:24">si</name></expr></argument> &gt;</argument_list></name> <name pos:start="113:28" pos:end="113:42"><name pos:start="113:28" pos:end="113:38">input_files</name><index pos:start="113:39" pos:end="113:42">[<expr pos:start="113:40" pos:end="113:41"><name pos:start="113:40" pos:end="113:41">fi</name></expr>]</index></name><operator pos:start="113:43" pos:end="113:43">.</operator><name pos:start="113:44" pos:end="113:58"><name pos:start="113:44" pos:end="113:46">ctx</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:58">nb_streams</name></name> <operator pos:start="113:60" pos:end="113:60">-</operator> <literal type="number" pos:start="113:62" pos:end="113:62">1</literal></expr>)</condition> <block pos:start="113:65" pos:end="121:9">{<block_content pos:start="115:13" pos:end="119:22">

            <expr_stmt pos:start="115:13" pos:end="115:74"><expr pos:start="115:13" pos:end="115:73"><call pos:start="115:13" pos:end="115:73"><name pos:start="115:13" pos:end="115:19">fprintf</name><argument_list pos:start="115:20" pos:end="115:73">(<argument pos:start="115:21" pos:end="115:26"><expr pos:start="115:21" pos:end="115:26"><name pos:start="115:21" pos:end="115:26">stderr</name></expr></argument>,<argument pos:start="115:28" pos:end="115:64"><expr pos:start="115:28" pos:end="115:64"><literal type="string" pos:start="115:28" pos:end="115:64">"Could not find sync stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="115:67" pos:end="115:68"><expr pos:start="115:67" pos:end="115:68"><name pos:start="115:67" pos:end="115:68">fi</name></expr></argument>, <argument pos:start="115:71" pos:end="115:72"><expr pos:start="115:71" pos:end="115:72"><name pos:start="115:71" pos:end="115:72">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:34"><expr pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:33"><name pos:start="117:19" pos:end="117:25">AVERROR</name><argument_list pos:start="117:26" pos:end="117:33">(<argument pos:start="117:27" pos:end="117:32"><expr pos:start="117:27" pos:end="117:32"><name pos:start="117:27" pos:end="117:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="119:13" pos:end="119:22">goto <name pos:start="119:18" pos:end="119:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="127:5" pos:end="127:65"><expr pos:start="127:5" pos:end="127:64"><name pos:start="127:5" pos:end="127:13">ost_table</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:64"><name pos:start="127:17" pos:end="127:26">av_mallocz</name><argument_list pos:start="127:27" pos:end="127:64">(<argument pos:start="127:28" pos:end="127:63"><expr pos:start="127:28" pos:end="127:63"><sizeof pos:start="127:28" pos:end="127:49">sizeof<argument_list pos:start="127:34" pos:end="127:49">(<argument pos:start="127:35" pos:end="127:48"><expr pos:start="127:35" pos:end="127:48"><name pos:start="127:35" pos:end="127:46">OutputStream</name> <operator pos:start="127:48" pos:end="127:48">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="127:51" pos:end="127:51">*</operator> <name pos:start="127:53" pos:end="127:63">nb_ostreams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="131:18"><if pos:start="129:5" pos:end="131:18">if <condition pos:start="129:8" pos:end="129:19">(<expr pos:start="129:9" pos:end="129:18"><operator pos:start="129:9" pos:end="129:9">!</operator><name pos:start="129:10" pos:end="129:18">ost_table</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:18"><block_content pos:start="131:9" pos:end="131:18">

        <goto pos:start="131:9" pos:end="131:18">goto <name pos:start="131:14" pos:end="131:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="135:5" pos:end="145:5">for<control pos:start="135:8" pos:end="135:34">(<init pos:start="135:9" pos:end="135:12"><expr pos:start="135:9" pos:end="135:11"><name pos:start="135:9" pos:end="135:9">k</name><operator pos:start="135:10" pos:end="135:10">=</operator><literal type="number" pos:start="135:11" pos:end="135:11">0</literal></expr>;</init><condition pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:13">k</name><operator pos:start="135:14" pos:end="135:14">&lt;</operator><name pos:start="135:15" pos:end="135:29">nb_output_files</name></expr>;</condition><incr pos:start="135:31" pos:end="135:33"><expr pos:start="135:31" pos:end="135:33"><name pos:start="135:31" pos:end="135:31">k</name><operator pos:start="135:32" pos:end="135:33">++</operator></expr></incr>)</control> <block pos:start="135:36" pos:end="145:5">{<block_content pos:start="137:9" pos:end="143:9">

        <expr_stmt pos:start="137:9" pos:end="137:29"><expr pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:10">os</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <name pos:start="137:14" pos:end="137:28"><name pos:start="137:14" pos:end="137:25">output_files</name><index pos:start="137:26" pos:end="137:28">[<expr pos:start="137:27" pos:end="137:27"><name pos:start="137:27" pos:end="137:27">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="139:9" pos:end="143:9">for<control pos:start="139:12" pos:end="139:41">(<init pos:start="139:13" pos:end="139:16"><expr pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:13">i</name><operator pos:start="139:14" pos:end="139:14">=</operator><literal type="number" pos:start="139:15" pos:end="139:15">0</literal></expr>;</init><condition pos:start="139:17" pos:end="139:33"><expr pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:17">i</name><operator pos:start="139:18" pos:end="139:18">&lt;</operator><name pos:start="139:19" pos:end="139:32"><name pos:start="139:19" pos:end="139:20">os</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:32">nb_streams</name></name></expr>;</condition><incr pos:start="139:34" pos:end="139:40"><expr pos:start="139:34" pos:end="139:36"><name pos:start="139:34" pos:end="139:34">i</name><operator pos:start="139:35" pos:end="139:36">++</operator></expr><operator pos:start="139:37" pos:end="139:37">,</operator><expr pos:start="139:38" pos:end="139:40"><name pos:start="139:38" pos:end="139:38">n</name><operator pos:start="139:39" pos:end="139:40">++</operator></expr></incr>)</control> <block pos:start="139:43" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:60">

            <expr_stmt pos:start="141:13" pos:end="141:60"><expr pos:start="141:13" pos:end="141:59"><name pos:start="141:13" pos:end="141:57"><name pos:start="141:13" pos:end="141:22">nb_streams</name><index pos:start="141:23" pos:end="141:57">[<expr pos:start="141:24" pos:end="141:56"><name pos:start="141:24" pos:end="141:37"><name pos:start="141:24" pos:end="141:25">os</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:34">streams</name><index pos:start="141:35" pos:end="141:37">[<expr pos:start="141:36" pos:end="141:36"><name pos:start="141:36" pos:end="141:36">i</name></expr>]</index></name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:56"><name pos:start="141:40" pos:end="141:44">codec</name><operator pos:start="141:45" pos:end="141:46">-&gt;</operator><name pos:start="141:47" pos:end="141:56">codec_type</name></name></expr>]</index></name><operator pos:start="141:58" pos:end="141:59">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="147:5" pos:end="205:5">for<control pos:start="147:8" pos:end="147:35">(<init pos:start="147:9" pos:end="147:19"><expr pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:12">step</name><operator pos:start="147:13" pos:end="147:13">=</operator><literal type="number" pos:start="147:14" pos:end="147:14">1</literal><operator pos:start="147:15" pos:end="147:16">&lt;&lt;</operator><literal type="number" pos:start="147:17" pos:end="147:18">30</literal></expr>;</init> <condition pos:start="147:21" pos:end="147:25"><expr pos:start="147:21" pos:end="147:24"><name pos:start="147:21" pos:end="147:24">step</name></expr>;</condition> <incr pos:start="147:27" pos:end="147:34"><expr pos:start="147:27" pos:end="147:34"><name pos:start="147:27" pos:end="147:30">step</name><operator pos:start="147:31" pos:end="147:33">&gt;&gt;=</operator><literal type="number" pos:start="147:34" pos:end="147:34">1</literal></expr></incr>)</control><block pos:start="147:36" pos:end="205:5">{<block_content pos:start="149:9" pos:end="203:46">

        <decl_stmt pos:start="149:9" pos:end="149:47"><decl pos:start="149:9" pos:end="149:46"><type pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">int</name></type> <name pos:start="149:13" pos:end="149:42"><name pos:start="149:13" pos:end="149:25">found_streams</name><index pos:start="149:26" pos:end="149:42">[<expr pos:start="149:27" pos:end="149:41"><name pos:start="149:27" pos:end="149:41">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="149:43" pos:end="149:46">=<expr pos:start="149:44" pos:end="149:46"><block pos:start="149:44" pos:end="149:46">{<expr pos:start="149:45" pos:end="149:45"><literal type="number" pos:start="149:45" pos:end="149:45">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <for pos:start="151:9" pos:end="153:42">for<control pos:start="151:12" pos:end="151:40">(<init pos:start="151:13" pos:end="151:16"><expr pos:start="151:13" pos:end="151:15"><name pos:start="151:13" pos:end="151:13">j</name><operator pos:start="151:14" pos:end="151:14">=</operator><literal type="number" pos:start="151:15" pos:end="151:15">0</literal></expr>;</init> <condition pos:start="151:18" pos:end="151:35"><expr pos:start="151:18" pos:end="151:34"><name pos:start="151:18" pos:end="151:18">j</name><operator pos:start="151:19" pos:end="151:19">&lt;</operator><name pos:start="151:20" pos:end="151:34">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="151:37" pos:end="151:39"><expr pos:start="151:37" pos:end="151:39"><name pos:start="151:37" pos:end="151:37">j</name><operator pos:start="151:38" pos:end="151:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="153:13" pos:end="153:42"><block_content pos:start="153:13" pos:end="153:42">

            <expr_stmt pos:start="153:13" pos:end="153:42"><expr pos:start="153:13" pos:end="153:41"><name pos:start="153:13" pos:end="153:33"><name pos:start="153:13" pos:end="153:30">nb_frame_threshold</name><index pos:start="153:31" pos:end="153:33">[<expr pos:start="153:32" pos:end="153:32"><name pos:start="153:32" pos:end="153:32">j</name></expr>]</index></name> <operator pos:start="153:35" pos:end="153:36">+=</operator> <name pos:start="153:38" pos:end="153:41">step</name></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="157:9" pos:end="197:9">for<control pos:start="157:12" pos:end="157:41">(<init pos:start="157:13" pos:end="157:16"><expr pos:start="157:13" pos:end="157:15"><name pos:start="157:13" pos:end="157:13">j</name><operator pos:start="157:14" pos:end="157:14">=</operator><literal type="number" pos:start="157:15" pos:end="157:15">0</literal></expr>;</init> <condition pos:start="157:18" pos:end="157:36"><expr pos:start="157:18" pos:end="157:35"><name pos:start="157:18" pos:end="157:18">j</name><operator pos:start="157:19" pos:end="157:19">&lt;</operator><name pos:start="157:20" pos:end="157:35">nb_input_streams</name></expr>;</condition> <incr pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><name pos:start="157:38" pos:end="157:38">j</name><operator pos:start="157:39" pos:end="157:40">++</operator></expr></incr>)</control> <block pos:start="157:43" pos:end="197:9">{<block_content pos:start="159:13" pos:end="195:13">

            <decl_stmt pos:start="159:13" pos:end="159:23"><decl pos:start="159:13" pos:end="159:22"><type pos:start="159:13" pos:end="159:15"><name pos:start="159:13" pos:end="159:15">int</name></type> <name pos:start="159:17" pos:end="159:20">skip</name><init pos:start="159:21" pos:end="159:22">=<expr pos:start="159:22" pos:end="159:22"><literal type="number" pos:start="159:22" pos:end="159:22">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:36"><expr pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:15">ist</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <operator pos:start="161:19" pos:end="161:19">&amp;</operator><name pos:start="161:20" pos:end="161:35"><name pos:start="161:20" pos:end="161:32">input_streams</name><index pos:start="161:33" pos:end="161:35">[<expr pos:start="161:34" pos:end="161:34"><name pos:start="161:34" pos:end="161:34">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="187:13"><if pos:start="163:13" pos:end="187:13">if<condition pos:start="163:15" pos:end="163:29">(<expr pos:start="163:16" pos:end="163:28"><name pos:start="163:16" pos:end="163:28">opt_programid</name></expr>)</condition><block pos:start="163:30" pos:end="187:13">{<block_content pos:start="165:17" pos:end="185:17">

                <decl_stmt pos:start="165:17" pos:end="165:26"><decl pos:start="165:17" pos:end="165:22"><type pos:start="165:17" pos:end="165:19"><name pos:start="165:17" pos:end="165:19">int</name></type> <name pos:start="165:21" pos:end="165:22">pi</name></decl>,<decl pos:start="165:24" pos:end="165:25"><type ref="prev" pos:start="165:17" pos:end="165:19"/><name pos:start="165:24" pos:end="165:25">si</name></decl>;</decl_stmt>

                <decl_stmt pos:start="167:17" pos:end="167:71"><decl pos:start="167:17" pos:end="167:70"><type pos:start="167:17" pos:end="167:33"><name pos:start="167:17" pos:end="167:31">AVFormatContext</name> <modifier pos:start="167:33" pos:end="167:33">*</modifier></type><name pos:start="167:34" pos:end="167:34">f</name><init pos:start="167:35" pos:end="167:70">= <expr pos:start="167:37" pos:end="167:70"><name pos:start="167:37" pos:end="167:66"><name pos:start="167:37" pos:end="167:47">input_files</name><index pos:start="167:48" pos:end="167:66">[ <expr pos:start="167:50" pos:end="167:64"><name pos:start="167:50" pos:end="167:64"><name pos:start="167:50" pos:end="167:52">ist</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:64">file_index</name></name></expr> ]</index></name><operator pos:start="167:67" pos:end="167:67">.</operator><name pos:start="167:68" pos:end="167:70">ctx</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:23"><expr pos:start="169:17" pos:end="169:22"><name pos:start="169:17" pos:end="169:20">skip</name><operator pos:start="169:21" pos:end="169:21">=</operator><literal type="number" pos:start="169:22" pos:end="169:22">1</literal></expr>;</expr_stmt>

                <for pos:start="171:17" pos:end="185:17">for<control pos:start="171:20" pos:end="171:50">(<init pos:start="171:21" pos:end="171:25"><expr pos:start="171:21" pos:end="171:24"><name pos:start="171:21" pos:end="171:22">pi</name><operator pos:start="171:23" pos:end="171:23">=</operator><literal type="number" pos:start="171:24" pos:end="171:24">0</literal></expr>;</init> <condition pos:start="171:27" pos:end="171:44"><expr pos:start="171:27" pos:end="171:43"><name pos:start="171:27" pos:end="171:28">pi</name><operator pos:start="171:29" pos:end="171:29">&lt;</operator><name pos:start="171:30" pos:end="171:43"><name pos:start="171:30" pos:end="171:30">f</name><operator pos:start="171:31" pos:end="171:32">-&gt;</operator><name pos:start="171:33" pos:end="171:43">nb_programs</name></name></expr>;</condition> <incr pos:start="171:46" pos:end="171:49"><expr pos:start="171:46" pos:end="171:49"><name pos:start="171:46" pos:end="171:47">pi</name><operator pos:start="171:48" pos:end="171:49">++</operator></expr></incr>)</control><block pos:start="171:51" pos:end="185:17">{<block_content pos:start="173:21" pos:end="183:25">

                    <decl_stmt pos:start="173:21" pos:end="173:50"><decl pos:start="173:21" pos:end="173:49"><type pos:start="173:21" pos:end="173:31"><name pos:start="173:21" pos:end="173:29">AVProgram</name> <modifier pos:start="173:31" pos:end="173:31">*</modifier></type><name pos:start="173:32" pos:end="173:32">p</name><init pos:start="173:33" pos:end="173:49">= <expr pos:start="173:35" pos:end="173:49"><name pos:start="173:35" pos:end="173:49"><name pos:start="173:35" pos:end="173:35">f</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:45">programs</name><index pos:start="173:46" pos:end="173:49">[<expr pos:start="173:47" pos:end="173:48"><name pos:start="173:47" pos:end="173:48">pi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="175:21" pos:end="183:25"><if pos:start="175:21" pos:end="183:25">if<condition pos:start="175:23" pos:end="175:46">(<expr pos:start="175:24" pos:end="175:45"><name pos:start="175:24" pos:end="175:28"><name pos:start="175:24" pos:end="175:24">p</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:28">id</name></name> <operator pos:start="175:30" pos:end="175:31">==</operator> <name pos:start="175:33" pos:end="175:45">opt_programid</name></expr>)</condition><block type="pseudo" pos:start="177:25" pos:end="183:25"><block_content pos:start="177:25" pos:end="183:25">

                        <for pos:start="177:25" pos:end="183:25">for<control pos:start="177:28" pos:end="177:64">(<init pos:start="177:29" pos:end="177:33"><expr pos:start="177:29" pos:end="177:32"><name pos:start="177:29" pos:end="177:30">si</name><operator pos:start="177:31" pos:end="177:31">=</operator><literal type="number" pos:start="177:32" pos:end="177:32">0</literal></expr>;</init> <condition pos:start="177:35" pos:end="177:58"><expr pos:start="177:35" pos:end="177:57"><name pos:start="177:35" pos:end="177:36">si</name><operator pos:start="177:37" pos:end="177:37">&lt;</operator><name pos:start="177:38" pos:end="177:57"><name pos:start="177:38" pos:end="177:38">p</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:57">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="177:60" pos:end="177:63"><expr pos:start="177:60" pos:end="177:63"><name pos:start="177:60" pos:end="177:61">si</name><operator pos:start="177:62" pos:end="177:63">++</operator></expr></incr>)</control><block pos:start="177:65" pos:end="183:25">{<block_content pos:start="179:29" pos:end="181:39">

                            <if_stmt pos:start="179:29" pos:end="181:39"><if pos:start="179:29" pos:end="181:39">if<condition pos:start="179:31" pos:end="179:76">(<expr pos:start="179:32" pos:end="179:75"><name pos:start="179:32" pos:end="179:64"><name pos:start="179:32" pos:end="179:32">f</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:41">streams</name><index pos:start="179:42" pos:end="179:64">[ <expr pos:start="179:44" pos:end="179:62"><name pos:start="179:44" pos:end="179:62"><name pos:start="179:44" pos:end="179:44">p</name><operator pos:start="179:45" pos:end="179:46">-&gt;</operator><name pos:start="179:47" pos:end="179:58">stream_index</name><index pos:start="179:59" pos:end="179:62">[<expr pos:start="179:60" pos:end="179:61"><name pos:start="179:60" pos:end="179:61">si</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="179:66" pos:end="179:67">==</operator> <name pos:start="179:69" pos:end="179:75"><name pos:start="179:69" pos:end="179:71">ist</name><operator pos:start="179:72" pos:end="179:73">-&gt;</operator><name pos:start="179:74" pos:end="179:75">st</name></name></expr>)</condition><block type="pseudo" pos:start="181:33" pos:end="181:39"><block_content pos:start="181:33" pos:end="181:39">

                                <expr_stmt pos:start="181:33" pos:end="181:39"><expr pos:start="181:33" pos:end="181:38"><name pos:start="181:33" pos:end="181:36">skip</name><operator pos:start="181:37" pos:end="181:37">=</operator><literal type="number" pos:start="181:38" pos:end="181:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></for></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="189:13" pos:end="195:13"><if pos:start="189:13" pos:end="195:13">if <condition pos:start="189:16" pos:end="191:99">(<expr pos:start="189:17" pos:end="191:98"><name pos:start="189:17" pos:end="189:28"><name pos:start="189:17" pos:end="189:19">ist</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:28">discard</name></name> <operator pos:start="189:30" pos:end="189:31">&amp;&amp;</operator> <name pos:start="189:33" pos:end="189:48"><name pos:start="189:33" pos:end="189:35">ist</name><operator pos:start="189:36" pos:end="189:37">-&gt;</operator><name pos:start="189:38" pos:end="189:39">st</name><operator pos:start="189:40" pos:end="189:41">-&gt;</operator><name pos:start="189:42" pos:end="189:48">discard</name></name> <operator pos:start="189:50" pos:end="189:51">!=</operator> <name pos:start="189:53" pos:end="189:65">AVDISCARD_ALL</name> <operator pos:start="189:67" pos:end="189:68">&amp;&amp;</operator> <operator pos:start="189:70" pos:end="189:70">!</operator><name pos:start="189:71" pos:end="189:74">skip</name>

                <operator pos:start="191:17" pos:end="191:18">&amp;&amp;</operator> <name pos:start="191:20" pos:end="191:65"><name pos:start="191:20" pos:end="191:37">nb_frame_threshold</name><index pos:start="191:38" pos:end="191:65">[<expr pos:start="191:39" pos:end="191:64"><name pos:start="191:39" pos:end="191:64"><name pos:start="191:39" pos:end="191:41">ist</name><operator pos:start="191:42" pos:end="191:43">-&gt;</operator><name pos:start="191:44" pos:end="191:45">st</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:52">codec</name><operator pos:start="191:53" pos:end="191:54">-&gt;</operator><name pos:start="191:55" pos:end="191:64">codec_type</name></name></expr>]</index></name> <operator pos:start="191:67" pos:end="191:68">&lt;=</operator> <name pos:start="191:70" pos:end="191:98"><name pos:start="191:70" pos:end="191:72">ist</name><operator pos:start="191:73" pos:end="191:74">-&gt;</operator><name pos:start="191:75" pos:end="191:76">st</name><operator pos:start="191:77" pos:end="191:78">-&gt;</operator><name pos:start="191:79" pos:end="191:98">codec_info_nb_frames</name></name></expr>)</condition><block pos:start="191:100" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:60">

                <expr_stmt pos:start="193:17" pos:end="193:60"><expr pos:start="193:17" pos:end="193:59"><name pos:start="193:17" pos:end="193:57"><name pos:start="193:17" pos:end="193:29">found_streams</name><index pos:start="193:30" pos:end="193:57">[<expr pos:start="193:31" pos:end="193:56"><name pos:start="193:31" pos:end="193:56"><name pos:start="193:31" pos:end="193:33">ist</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:37">st</name><operator pos:start="193:38" pos:end="193:39">-&gt;</operator><name pos:start="193:40" pos:end="193:44">codec</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:56">codec_type</name></name></expr>]</index></name><operator pos:start="193:58" pos:end="193:59">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <for pos:start="199:9" pos:end="203:46">for<control pos:start="199:12" pos:end="199:40">(<init pos:start="199:13" pos:end="199:16"><expr pos:start="199:13" pos:end="199:15"><name pos:start="199:13" pos:end="199:13">j</name><operator pos:start="199:14" pos:end="199:14">=</operator><literal type="number" pos:start="199:15" pos:end="199:15">0</literal></expr>;</init> <condition pos:start="199:18" pos:end="199:35"><expr pos:start="199:18" pos:end="199:34"><name pos:start="199:18" pos:end="199:18">j</name><operator pos:start="199:19" pos:end="199:19">&lt;</operator><name pos:start="199:20" pos:end="199:34">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="199:37" pos:end="199:39"><expr pos:start="199:37" pos:end="199:39"><name pos:start="199:37" pos:end="199:37">j</name><operator pos:start="199:38" pos:end="199:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="201:13" pos:end="203:46"><block_content pos:start="201:13" pos:end="203:46">

            <if_stmt pos:start="201:13" pos:end="203:46"><if pos:start="201:13" pos:end="203:46">if<condition pos:start="201:15" pos:end="201:48">(<expr pos:start="201:16" pos:end="201:47"><name pos:start="201:16" pos:end="201:31"><name pos:start="201:16" pos:end="201:28">found_streams</name><index pos:start="201:29" pos:end="201:31">[<expr pos:start="201:30" pos:end="201:30"><name pos:start="201:30" pos:end="201:30">j</name></expr>]</index></name> <operator pos:start="201:33" pos:end="201:33">&lt;</operator> <name pos:start="201:35" pos:end="201:47"><name pos:start="201:35" pos:end="201:44">nb_streams</name><index pos:start="201:45" pos:end="201:47">[<expr pos:start="201:46" pos:end="201:46"><name pos:start="201:46" pos:end="201:46">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:46"><block_content pos:start="203:17" pos:end="203:46">

                <expr_stmt pos:start="203:17" pos:end="203:46"><expr pos:start="203:17" pos:end="203:45"><name pos:start="203:17" pos:end="203:37"><name pos:start="203:17" pos:end="203:34">nb_frame_threshold</name><index pos:start="203:35" pos:end="203:37">[<expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">j</name></expr>]</index></name> <operator pos:start="203:39" pos:end="203:40">-=</operator> <name pos:start="203:42" pos:end="203:45">step</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="207:5" pos:end="207:10"><expr pos:start="207:5" pos:end="207:9"><name pos:start="207:5" pos:end="207:5">n</name> <operator pos:start="207:7" pos:end="207:7">=</operator> <literal type="number" pos:start="207:9" pos:end="207:9">0</literal></expr>;</expr_stmt>

    <for pos:start="209:5" pos:end="357:5">for<control pos:start="209:8" pos:end="209:34">(<init pos:start="209:9" pos:end="209:12"><expr pos:start="209:9" pos:end="209:11"><name pos:start="209:9" pos:end="209:9">k</name><operator pos:start="209:10" pos:end="209:10">=</operator><literal type="number" pos:start="209:11" pos:end="209:11">0</literal></expr>;</init><condition pos:start="209:13" pos:end="209:30"><expr pos:start="209:13" pos:end="209:29"><name pos:start="209:13" pos:end="209:13">k</name><operator pos:start="209:14" pos:end="209:14">&lt;</operator><name pos:start="209:15" pos:end="209:29">nb_output_files</name></expr>;</condition><incr pos:start="209:31" pos:end="209:33"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:31">k</name><operator pos:start="209:32" pos:end="209:33">++</operator></expr></incr>)</control> <block pos:start="209:36" pos:end="357:5">{<block_content pos:start="211:9" pos:end="355:9">

        <expr_stmt pos:start="211:9" pos:end="211:29"><expr pos:start="211:9" pos:end="211:28"><name pos:start="211:9" pos:end="211:10">os</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <name pos:start="211:14" pos:end="211:28"><name pos:start="211:14" pos:end="211:25">output_files</name><index pos:start="211:26" pos:end="211:28">[<expr pos:start="211:27" pos:end="211:27"><name pos:start="211:27" pos:end="211:27">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="213:9" pos:end="355:9">for<control pos:start="213:12" pos:end="213:41">(<init pos:start="213:13" pos:end="213:16"><expr pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:13">i</name><operator pos:start="213:14" pos:end="213:14">=</operator><literal type="number" pos:start="213:15" pos:end="213:15">0</literal></expr>;</init><condition pos:start="213:17" pos:end="213:33"><expr pos:start="213:17" pos:end="213:32"><name pos:start="213:17" pos:end="213:17">i</name><operator pos:start="213:18" pos:end="213:18">&lt;</operator><name pos:start="213:19" pos:end="213:32"><name pos:start="213:19" pos:end="213:20">os</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:32">nb_streams</name></name></expr>;</condition><incr pos:start="213:34" pos:end="213:40"><expr pos:start="213:34" pos:end="213:36"><name pos:start="213:34" pos:end="213:34">i</name><operator pos:start="213:35" pos:end="213:36">++</operator></expr><operator pos:start="213:37" pos:end="213:37">,</operator><expr pos:start="213:38" pos:end="213:40"><name pos:start="213:38" pos:end="213:38">n</name><operator pos:start="213:39" pos:end="213:40">++</operator></expr></incr>)</control> <block pos:start="213:43" pos:end="355:9">{<block_content pos:start="215:13" pos:end="353:65">

            <decl_stmt pos:start="215:13" pos:end="215:22"><decl pos:start="215:13" pos:end="215:21"><type pos:start="215:13" pos:end="215:15"><name pos:start="215:13" pos:end="215:15">int</name></type> <name pos:start="215:17" pos:end="215:21">found</name></decl>;</decl_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:63"><expr pos:start="217:13" pos:end="217:62"><name pos:start="217:13" pos:end="217:15">ost</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <name pos:start="217:19" pos:end="217:30"><name pos:start="217:19" pos:end="217:27">ost_table</name><index pos:start="217:28" pos:end="217:30">[<expr pos:start="217:29" pos:end="217:29"><name pos:start="217:29" pos:end="217:29">n</name></expr>]</index></name> <operator pos:start="217:32" pos:end="217:32">=</operator> <name pos:start="217:34" pos:end="217:62"><name pos:start="217:34" pos:end="217:56">output_streams_for_file</name><index pos:start="217:57" pos:end="217:59">[<expr pos:start="217:58" pos:end="217:58"><name pos:start="217:58" pos:end="217:58">k</name></expr>]</index><index pos:start="217:60" pos:end="217:62">[<expr pos:start="217:61" pos:end="217:61"><name pos:start="217:61" pos:end="217:61">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="343:13"><if pos:start="219:13" pos:end="247:13">if <condition pos:start="219:16" pos:end="219:35">(<expr pos:start="219:17" pos:end="219:34"><name pos:start="219:17" pos:end="219:30">nb_stream_maps</name> <operator pos:start="219:32" pos:end="219:32">&gt;</operator> <literal type="number" pos:start="219:34" pos:end="219:34">0</literal></expr>)</condition> <block pos:start="219:37" pos:end="247:13">{<block_content pos:start="221:17" pos:end="243:17">

                <expr_stmt pos:start="221:17" pos:end="223:48"><expr pos:start="221:17" pos:end="223:47"><name pos:start="221:17" pos:end="221:33"><name pos:start="221:17" pos:end="221:19">ost</name><operator pos:start="221:20" pos:end="221:21">-&gt;</operator><name pos:start="221:22" pos:end="221:33">source_index</name></name> <operator pos:start="221:35" pos:end="221:35">=</operator> <name pos:start="221:37" pos:end="221:74"><name pos:start="221:37" pos:end="221:47">input_files</name><index pos:start="221:48" pos:end="221:74">[<expr pos:start="221:49" pos:end="221:73"><name pos:start="221:49" pos:end="221:62"><name pos:start="221:49" pos:end="221:59">stream_maps</name><index pos:start="221:60" pos:end="221:62">[<expr pos:start="221:61" pos:end="221:61"><name pos:start="221:61" pos:end="221:61">n</name></expr>]</index></name><operator pos:start="221:63" pos:end="221:63">.</operator><name pos:start="221:64" pos:end="221:73">file_index</name></expr>]</index></name><operator pos:start="221:75" pos:end="221:75">.</operator><name pos:start="221:76" pos:end="221:84">ist_index</name> <operator pos:start="221:86" pos:end="221:86">+</operator>

                    <name pos:start="223:21" pos:end="223:34"><name pos:start="223:21" pos:end="223:31">stream_maps</name><index pos:start="223:32" pos:end="223:34">[<expr pos:start="223:33" pos:end="223:33"><name pos:start="223:33" pos:end="223:33">n</name></expr>]</index></name><operator pos:start="223:35" pos:end="223:35">.</operator><name pos:start="223:36" pos:end="223:47">stream_index</name></expr>;</expr_stmt>



                <comment type="block" pos:start="227:17" pos:end="227:62">/* Sanity check that the stream types match */</comment>

                <if_stmt pos:start="229:17" pos:end="243:17"><if pos:start="229:17" pos:end="243:17">if <condition pos:start="229:20" pos:end="229:105">(<expr pos:start="229:21" pos:end="229:104"><name pos:start="229:21" pos:end="229:52"><name pos:start="229:21" pos:end="229:33">input_streams</name><index pos:start="229:34" pos:end="229:52">[<expr pos:start="229:35" pos:end="229:51"><name pos:start="229:35" pos:end="229:51"><name pos:start="229:35" pos:end="229:37">ost</name><operator pos:start="229:38" pos:end="229:39">-&gt;</operator><name pos:start="229:40" pos:end="229:51">source_index</name></name></expr>]</index></name><operator pos:start="229:53" pos:end="229:53">.</operator><name pos:start="229:54" pos:end="229:74"><name pos:start="229:54" pos:end="229:55">st</name><operator pos:start="229:56" pos:end="229:57">-&gt;</operator><name pos:start="229:58" pos:end="229:62">codec</name><operator pos:start="229:63" pos:end="229:64">-&gt;</operator><name pos:start="229:65" pos:end="229:74">codec_type</name></name> <operator pos:start="229:76" pos:end="229:77">!=</operator> <name pos:start="229:79" pos:end="229:104"><name pos:start="229:79" pos:end="229:81">ost</name><operator pos:start="229:82" pos:end="229:83">-&gt;</operator><name pos:start="229:84" pos:end="229:85">st</name><operator pos:start="229:86" pos:end="229:87">-&gt;</operator><name pos:start="229:88" pos:end="229:92">codec</name><operator pos:start="229:93" pos:end="229:94">-&gt;</operator><name pos:start="229:95" pos:end="229:104">codec_type</name></name></expr>)</condition> <block pos:start="229:107" pos:end="243:17">{<block_content pos:start="231:21" pos:end="241:35">

                    <decl_stmt pos:start="231:21" pos:end="231:43"><decl pos:start="231:21" pos:end="231:42"><type pos:start="231:21" pos:end="231:23"><name pos:start="231:21" pos:end="231:23">int</name></type> <name pos:start="231:25" pos:end="231:25">i</name><init pos:start="231:26" pos:end="231:42">= <expr pos:start="231:28" pos:end="231:42"><name pos:start="231:28" pos:end="231:42"><name pos:start="231:28" pos:end="231:30">ost</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:42">file_index</name></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:85"><expr pos:start="233:21" pos:end="233:84"><call pos:start="233:21" pos:end="233:84"><name pos:start="233:21" pos:end="233:34">av_dump_format</name><argument_list pos:start="233:35" pos:end="233:84">(<argument pos:start="233:36" pos:end="233:50"><expr pos:start="233:36" pos:end="233:50"><name pos:start="233:36" pos:end="233:50"><name pos:start="233:36" pos:end="233:47">output_files</name><index pos:start="233:48" pos:end="233:50">[<expr pos:start="233:49" pos:end="233:49"><name pos:start="233:49" pos:end="233:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="233:53" pos:end="233:53"><expr pos:start="233:53" pos:end="233:53"><name pos:start="233:53" pos:end="233:53">i</name></expr></argument>, <argument pos:start="233:56" pos:end="233:80"><expr pos:start="233:56" pos:end="233:80"><name pos:start="233:56" pos:end="233:70"><name pos:start="233:56" pos:end="233:67">output_files</name><index pos:start="233:68" pos:end="233:70">[<expr pos:start="233:69" pos:end="233:69"><name pos:start="233:69" pos:end="233:69">i</name></expr>]</index></name><operator pos:start="233:71" pos:end="233:72">-&gt;</operator><name pos:start="233:73" pos:end="233:80">filename</name></expr></argument>, <argument pos:start="233:83" pos:end="233:83"><expr pos:start="233:83" pos:end="233:83"><literal type="number" pos:start="233:83" pos:end="233:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="239:53"><expr pos:start="235:21" pos:end="239:52"><call pos:start="235:21" pos:end="239:52"><name pos:start="235:21" pos:end="235:27">fprintf</name><argument_list pos:start="235:28" pos:end="239:52">(<argument pos:start="235:29" pos:end="235:34"><expr pos:start="235:29" pos:end="235:34"><name pos:start="235:29" pos:end="235:34">stderr</name></expr></argument>, <argument pos:start="235:37" pos:end="235:88"><expr pos:start="235:37" pos:end="235:88"><literal type="string" pos:start="235:37" pos:end="235:88">"Codec type mismatch for mapping #%d.%d -&gt; #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="237:25" pos:end="237:49"><expr pos:start="237:25" pos:end="237:49"><name pos:start="237:25" pos:end="237:38"><name pos:start="237:25" pos:end="237:35">stream_maps</name><index pos:start="237:36" pos:end="237:38">[<expr pos:start="237:37" pos:end="237:37"><name pos:start="237:37" pos:end="237:37">n</name></expr>]</index></name><operator pos:start="237:39" pos:end="237:39">.</operator><name pos:start="237:40" pos:end="237:49">file_index</name></expr></argument>, <argument pos:start="237:52" pos:end="237:78"><expr pos:start="237:52" pos:end="237:78"><name pos:start="237:52" pos:end="237:65"><name pos:start="237:52" pos:end="237:62">stream_maps</name><index pos:start="237:63" pos:end="237:65">[<expr pos:start="237:64" pos:end="237:64"><name pos:start="237:64" pos:end="237:64">n</name></expr>]</index></name><operator pos:start="237:66" pos:end="237:66">.</operator><name pos:start="237:67" pos:end="237:78">stream_index</name></expr></argument>,

                        <argument pos:start="239:25" pos:end="239:39"><expr pos:start="239:25" pos:end="239:39"><name pos:start="239:25" pos:end="239:39"><name pos:start="239:25" pos:end="239:27">ost</name><operator pos:start="239:28" pos:end="239:29">-&gt;</operator><name pos:start="239:30" pos:end="239:39">file_index</name></name></expr></argument>, <argument pos:start="239:42" pos:end="239:51"><expr pos:start="239:42" pos:end="239:51"><name pos:start="239:42" pos:end="239:51"><name pos:start="239:42" pos:end="239:44">ost</name><operator pos:start="239:45" pos:end="239:46">-&gt;</operator><name pos:start="239:47" pos:end="239:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="241:21" pos:end="241:35"><expr pos:start="241:21" pos:end="241:34"><call pos:start="241:21" pos:end="241:34"><name pos:start="241:21" pos:end="241:31">ffmpeg_exit</name><argument_list pos:start="241:32" pos:end="241:34">(<argument pos:start="241:33" pos:end="241:33"><expr pos:start="241:33" pos:end="241:33"><literal type="number" pos:start="241:33" pos:end="241:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



            </block_content>}</block></if> <else pos:start="247:15" pos:end="343:13">else <block pos:start="247:20" pos:end="343:13">{<block_content pos:start="251:17" pos:end="341:17">

                <comment type="block" pos:start="249:17" pos:end="249:104">/* get corresponding input stream index : we select the first one with the right type */</comment>

                <expr_stmt pos:start="251:17" pos:end="251:26"><expr pos:start="251:17" pos:end="251:25"><name pos:start="251:17" pos:end="251:21">found</name> <operator pos:start="251:23" pos:end="251:23">=</operator> <literal type="number" pos:start="251:25" pos:end="251:25">0</literal></expr>;</expr_stmt>

                <for pos:start="253:17" pos:end="299:17">for <control pos:start="253:21" pos:end="253:54">(<init pos:start="253:22" pos:end="253:27"><expr pos:start="253:22" pos:end="253:26"><name pos:start="253:22" pos:end="253:22">j</name> <operator pos:start="253:24" pos:end="253:24">=</operator> <literal type="number" pos:start="253:26" pos:end="253:26">0</literal></expr>;</init> <condition pos:start="253:29" pos:end="253:49"><expr pos:start="253:29" pos:end="253:48"><name pos:start="253:29" pos:end="253:29">j</name> <operator pos:start="253:31" pos:end="253:31">&lt;</operator> <name pos:start="253:33" pos:end="253:48">nb_input_streams</name></expr>;</condition> <incr pos:start="253:51" pos:end="253:53"><expr pos:start="253:51" pos:end="253:53"><name pos:start="253:51" pos:end="253:51">j</name><operator pos:start="253:52" pos:end="253:53">++</operator></expr></incr>)</control> <block pos:start="253:56" pos:end="299:17">{<block_content pos:start="255:21" pos:end="297:21">

                    <decl_stmt pos:start="255:21" pos:end="255:31"><decl pos:start="255:21" pos:end="255:30"><type pos:start="255:21" pos:end="255:23"><name pos:start="255:21" pos:end="255:23">int</name></type> <name pos:start="255:25" pos:end="255:28">skip</name><init pos:start="255:29" pos:end="255:30">=<expr pos:start="255:30" pos:end="255:30"><literal type="number" pos:start="255:30" pos:end="255:30">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:44"><expr pos:start="257:21" pos:end="257:43"><name pos:start="257:21" pos:end="257:23">ist</name> <operator pos:start="257:25" pos:end="257:25">=</operator> <operator pos:start="257:27" pos:end="257:27">&amp;</operator><name pos:start="257:28" pos:end="257:43"><name pos:start="257:28" pos:end="257:40">input_streams</name><index pos:start="257:41" pos:end="257:43">[<expr pos:start="257:42" pos:end="257:42"><name pos:start="257:42" pos:end="257:42">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="259:21" pos:end="283:21"><if pos:start="259:21" pos:end="283:21">if<condition pos:start="259:23" pos:end="259:37">(<expr pos:start="259:24" pos:end="259:36"><name pos:start="259:24" pos:end="259:36">opt_programid</name></expr>)</condition><block pos:start="259:38" pos:end="283:21">{<block_content pos:start="261:25" pos:end="281:25">

                        <decl_stmt pos:start="261:25" pos:end="261:34"><decl pos:start="261:25" pos:end="261:30"><type pos:start="261:25" pos:end="261:27"><name pos:start="261:25" pos:end="261:27">int</name></type> <name pos:start="261:29" pos:end="261:30">pi</name></decl>,<decl pos:start="261:32" pos:end="261:33"><type ref="prev" pos:start="261:25" pos:end="261:27"/><name pos:start="261:32" pos:end="261:33">si</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="263:25" pos:end="263:78"><decl pos:start="263:25" pos:end="263:77"><type pos:start="263:25" pos:end="263:41"><name pos:start="263:25" pos:end="263:39">AVFormatContext</name> <modifier pos:start="263:41" pos:end="263:41">*</modifier></type><name pos:start="263:42" pos:end="263:42">f</name> <init pos:start="263:44" pos:end="263:77">= <expr pos:start="263:46" pos:end="263:77"><name pos:start="263:46" pos:end="263:73"><name pos:start="263:46" pos:end="263:56">input_files</name><index pos:start="263:57" pos:end="263:73">[<expr pos:start="263:58" pos:end="263:72"><name pos:start="263:58" pos:end="263:72"><name pos:start="263:58" pos:end="263:60">ist</name><operator pos:start="263:61" pos:end="263:62">-&gt;</operator><name pos:start="263:63" pos:end="263:72">file_index</name></name></expr>]</index></name><operator pos:start="263:74" pos:end="263:74">.</operator><name pos:start="263:75" pos:end="263:77">ctx</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="265:25" pos:end="265:31"><expr pos:start="265:25" pos:end="265:30"><name pos:start="265:25" pos:end="265:28">skip</name><operator pos:start="265:29" pos:end="265:29">=</operator><literal type="number" pos:start="265:30" pos:end="265:30">1</literal></expr>;</expr_stmt>

                        <for pos:start="267:25" pos:end="281:25">for<control pos:start="267:28" pos:end="267:58">(<init pos:start="267:29" pos:end="267:33"><expr pos:start="267:29" pos:end="267:32"><name pos:start="267:29" pos:end="267:30">pi</name><operator pos:start="267:31" pos:end="267:31">=</operator><literal type="number" pos:start="267:32" pos:end="267:32">0</literal></expr>;</init> <condition pos:start="267:35" pos:end="267:52"><expr pos:start="267:35" pos:end="267:51"><name pos:start="267:35" pos:end="267:36">pi</name><operator pos:start="267:37" pos:end="267:37">&lt;</operator><name pos:start="267:38" pos:end="267:51"><name pos:start="267:38" pos:end="267:38">f</name><operator pos:start="267:39" pos:end="267:40">-&gt;</operator><name pos:start="267:41" pos:end="267:51">nb_programs</name></name></expr>;</condition> <incr pos:start="267:54" pos:end="267:57"><expr pos:start="267:54" pos:end="267:57"><name pos:start="267:54" pos:end="267:55">pi</name><operator pos:start="267:56" pos:end="267:57">++</operator></expr></incr>)</control><block pos:start="267:59" pos:end="281:25">{<block_content pos:start="269:29" pos:end="279:33">

                            <decl_stmt pos:start="269:29" pos:end="269:58"><decl pos:start="269:29" pos:end="269:57"><type pos:start="269:29" pos:end="269:39"><name pos:start="269:29" pos:end="269:37">AVProgram</name> <modifier pos:start="269:39" pos:end="269:39">*</modifier></type><name pos:start="269:40" pos:end="269:40">p</name><init pos:start="269:41" pos:end="269:57">= <expr pos:start="269:43" pos:end="269:57"><name pos:start="269:43" pos:end="269:57"><name pos:start="269:43" pos:end="269:43">f</name><operator pos:start="269:44" pos:end="269:45">-&gt;</operator><name pos:start="269:46" pos:end="269:53">programs</name><index pos:start="269:54" pos:end="269:57">[<expr pos:start="269:55" pos:end="269:56"><name pos:start="269:55" pos:end="269:56">pi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="271:29" pos:end="279:33"><if pos:start="271:29" pos:end="279:33">if<condition pos:start="271:31" pos:end="271:54">(<expr pos:start="271:32" pos:end="271:53"><name pos:start="271:32" pos:end="271:36"><name pos:start="271:32" pos:end="271:32">p</name><operator pos:start="271:33" pos:end="271:34">-&gt;</operator><name pos:start="271:35" pos:end="271:36">id</name></name> <operator pos:start="271:38" pos:end="271:39">==</operator> <name pos:start="271:41" pos:end="271:53">opt_programid</name></expr>)</condition><block type="pseudo" pos:start="273:33" pos:end="279:33"><block_content pos:start="273:33" pos:end="279:33">

                                <for pos:start="273:33" pos:end="279:33">for<control pos:start="273:36" pos:end="273:72">(<init pos:start="273:37" pos:end="273:41"><expr pos:start="273:37" pos:end="273:40"><name pos:start="273:37" pos:end="273:38">si</name><operator pos:start="273:39" pos:end="273:39">=</operator><literal type="number" pos:start="273:40" pos:end="273:40">0</literal></expr>;</init> <condition pos:start="273:43" pos:end="273:66"><expr pos:start="273:43" pos:end="273:65"><name pos:start="273:43" pos:end="273:44">si</name><operator pos:start="273:45" pos:end="273:45">&lt;</operator><name pos:start="273:46" pos:end="273:65"><name pos:start="273:46" pos:end="273:46">p</name><operator pos:start="273:47" pos:end="273:48">-&gt;</operator><name pos:start="273:49" pos:end="273:65">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="273:68" pos:end="273:71"><expr pos:start="273:68" pos:end="273:71"><name pos:start="273:68" pos:end="273:69">si</name><operator pos:start="273:70" pos:end="273:71">++</operator></expr></incr>)</control><block pos:start="273:73" pos:end="279:33">{<block_content pos:start="275:37" pos:end="277:47">

                                    <if_stmt pos:start="275:37" pos:end="277:47"><if pos:start="275:37" pos:end="277:47">if<condition pos:start="275:39" pos:end="275:84">(<expr pos:start="275:40" pos:end="275:83"><name pos:start="275:40" pos:end="275:72"><name pos:start="275:40" pos:end="275:40">f</name><operator pos:start="275:41" pos:end="275:42">-&gt;</operator><name pos:start="275:43" pos:end="275:49">streams</name><index pos:start="275:50" pos:end="275:72">[ <expr pos:start="275:52" pos:end="275:70"><name pos:start="275:52" pos:end="275:70"><name pos:start="275:52" pos:end="275:52">p</name><operator pos:start="275:53" pos:end="275:54">-&gt;</operator><name pos:start="275:55" pos:end="275:66">stream_index</name><index pos:start="275:67" pos:end="275:70">[<expr pos:start="275:68" pos:end="275:69"><name pos:start="275:68" pos:end="275:69">si</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="275:74" pos:end="275:75">==</operator> <name pos:start="275:77" pos:end="275:83"><name pos:start="275:77" pos:end="275:79">ist</name><operator pos:start="275:80" pos:end="275:81">-&gt;</operator><name pos:start="275:82" pos:end="275:83">st</name></name></expr>)</condition><block type="pseudo" pos:start="277:41" pos:end="277:47"><block_content pos:start="277:41" pos:end="277:47">

                                        <expr_stmt pos:start="277:41" pos:end="277:47"><expr pos:start="277:41" pos:end="277:46"><name pos:start="277:41" pos:end="277:44">skip</name><operator pos:start="277:45" pos:end="277:45">=</operator><literal type="number" pos:start="277:46" pos:end="277:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                                </block_content>}</block></for></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="285:21" pos:end="297:21"><if pos:start="285:21" pos:end="297:21">if <condition pos:start="285:24" pos:end="289:104">(<expr pos:start="285:25" pos:end="289:103"><name pos:start="285:25" pos:end="285:36"><name pos:start="285:25" pos:end="285:27">ist</name><operator pos:start="285:28" pos:end="285:29">-&gt;</operator><name pos:start="285:30" pos:end="285:36">discard</name></name> <operator pos:start="285:38" pos:end="285:39">&amp;&amp;</operator> <name pos:start="285:41" pos:end="285:56"><name pos:start="285:41" pos:end="285:43">ist</name><operator pos:start="285:44" pos:end="285:45">-&gt;</operator><name pos:start="285:46" pos:end="285:47">st</name><operator pos:start="285:48" pos:end="285:49">-&gt;</operator><name pos:start="285:50" pos:end="285:56">discard</name></name> <operator pos:start="285:58" pos:end="285:59">!=</operator> <name pos:start="285:61" pos:end="285:73">AVDISCARD_ALL</name> <operator pos:start="285:75" pos:end="285:76">&amp;&amp;</operator> <operator pos:start="285:78" pos:end="285:78">!</operator><name pos:start="285:79" pos:end="285:82">skip</name> <operator pos:start="285:84" pos:end="285:85">&amp;&amp;</operator>

                        <name pos:start="287:25" pos:end="287:50"><name pos:start="287:25" pos:end="287:27">ist</name><operator pos:start="287:28" pos:end="287:29">-&gt;</operator><name pos:start="287:30" pos:end="287:31">st</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:38">codec</name><operator pos:start="287:39" pos:end="287:40">-&gt;</operator><name pos:start="287:41" pos:end="287:50">codec_type</name></name> <operator pos:start="287:52" pos:end="287:53">==</operator> <name pos:start="287:55" pos:end="287:80"><name pos:start="287:55" pos:end="287:57">ost</name><operator pos:start="287:58" pos:end="287:59">-&gt;</operator><name pos:start="287:60" pos:end="287:61">st</name><operator pos:start="287:62" pos:end="287:63">-&gt;</operator><name pos:start="287:64" pos:end="287:68">codec</name><operator pos:start="287:69" pos:end="287:70">-&gt;</operator><name pos:start="287:71" pos:end="287:80">codec_type</name></name> <operator pos:start="287:82" pos:end="287:83">&amp;&amp;</operator>

                        <name pos:start="289:25" pos:end="289:70"><name pos:start="289:25" pos:end="289:42">nb_frame_threshold</name><index pos:start="289:43" pos:end="289:70">[<expr pos:start="289:44" pos:end="289:69"><name pos:start="289:44" pos:end="289:69"><name pos:start="289:44" pos:end="289:46">ist</name><operator pos:start="289:47" pos:end="289:48">-&gt;</operator><name pos:start="289:49" pos:end="289:50">st</name><operator pos:start="289:51" pos:end="289:52">-&gt;</operator><name pos:start="289:53" pos:end="289:57">codec</name><operator pos:start="289:58" pos:end="289:59">-&gt;</operator><name pos:start="289:60" pos:end="289:69">codec_type</name></name></expr>]</index></name> <operator pos:start="289:72" pos:end="289:73">&lt;=</operator> <name pos:start="289:75" pos:end="289:103"><name pos:start="289:75" pos:end="289:77">ist</name><operator pos:start="289:78" pos:end="289:79">-&gt;</operator><name pos:start="289:80" pos:end="289:81">st</name><operator pos:start="289:82" pos:end="289:83">-&gt;</operator><name pos:start="289:84" pos:end="289:103">codec_info_nb_frames</name></name></expr>)</condition> <block pos:start="289:106" pos:end="297:21">{<block_content pos:start="291:29" pos:end="295:34">

                            <expr_stmt pos:start="291:29" pos:end="291:50"><expr pos:start="291:29" pos:end="291:49"><name pos:start="291:29" pos:end="291:45"><name pos:start="291:29" pos:end="291:31">ost</name><operator pos:start="291:32" pos:end="291:33">-&gt;</operator><name pos:start="291:34" pos:end="291:45">source_index</name></name> <operator pos:start="291:47" pos:end="291:47">=</operator> <name pos:start="291:49" pos:end="291:49">j</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="293:29" pos:end="293:38"><expr pos:start="293:29" pos:end="293:37"><name pos:start="293:29" pos:end="293:33">found</name> <operator pos:start="293:35" pos:end="293:35">=</operator> <literal type="number" pos:start="293:37" pos:end="293:37">1</literal></expr>;</expr_stmt>

                            <break pos:start="295:29" pos:end="295:34">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="303:17" pos:end="341:17"><if pos:start="303:17" pos:end="341:17">if <condition pos:start="303:20" pos:end="303:27">(<expr pos:start="303:21" pos:end="303:26"><operator pos:start="303:21" pos:end="303:21">!</operator><name pos:start="303:22" pos:end="303:26">found</name></expr>)</condition> <block pos:start="303:29" pos:end="341:17">{<block_content pos:start="305:21" pos:end="339:21">

                    <if_stmt pos:start="305:21" pos:end="325:21"><if pos:start="305:21" pos:end="325:21">if<condition pos:start="305:23" pos:end="305:39">(<expr pos:start="305:24" pos:end="305:38"><operator pos:start="305:24" pos:end="305:24">!</operator> <name pos:start="305:26" pos:end="305:38">opt_programid</name></expr>)</condition> <block pos:start="305:41" pos:end="325:21">{<block_content pos:start="309:25" pos:end="323:25">

                        <comment type="block" pos:start="307:25" pos:end="307:65">/* try again and reuse existing stream */</comment>

                        <for pos:start="309:25" pos:end="323:25">for <control pos:start="309:29" pos:end="309:62">(<init pos:start="309:30" pos:end="309:35"><expr pos:start="309:30" pos:end="309:34"><name pos:start="309:30" pos:end="309:30">j</name> <operator pos:start="309:32" pos:end="309:32">=</operator> <literal type="number" pos:start="309:34" pos:end="309:34">0</literal></expr>;</init> <condition pos:start="309:37" pos:end="309:57"><expr pos:start="309:37" pos:end="309:56"><name pos:start="309:37" pos:end="309:37">j</name> <operator pos:start="309:39" pos:end="309:39">&lt;</operator> <name pos:start="309:41" pos:end="309:56">nb_input_streams</name></expr>;</condition> <incr pos:start="309:59" pos:end="309:61"><expr pos:start="309:59" pos:end="309:61"><name pos:start="309:59" pos:end="309:59">j</name><operator pos:start="309:60" pos:end="309:61">++</operator></expr></incr>)</control> <block pos:start="309:64" pos:end="323:25">{<block_content pos:start="311:29" pos:end="321:29">

                            <expr_stmt pos:start="311:29" pos:end="311:52"><expr pos:start="311:29" pos:end="311:51"><name pos:start="311:29" pos:end="311:31">ist</name> <operator pos:start="311:33" pos:end="311:33">=</operator> <operator pos:start="311:35" pos:end="311:35">&amp;</operator><name pos:start="311:36" pos:end="311:51"><name pos:start="311:36" pos:end="311:48">input_streams</name><index pos:start="311:49" pos:end="311:51">[<expr pos:start="311:50" pos:end="311:50"><name pos:start="311:50" pos:end="311:50">j</name></expr>]</index></name></expr>;</expr_stmt>

                            <if_stmt pos:start="313:29" pos:end="321:29"><if pos:start="313:29" pos:end="321:29">if <condition pos:start="313:32" pos:end="315:69">(   <expr pos:start="313:36" pos:end="315:68"><name pos:start="313:36" pos:end="313:61"><name pos:start="313:36" pos:end="313:38">ist</name><operator pos:start="313:39" pos:end="313:40">-&gt;</operator><name pos:start="313:41" pos:end="313:42">st</name><operator pos:start="313:43" pos:end="313:44">-&gt;</operator><name pos:start="313:45" pos:end="313:49">codec</name><operator pos:start="313:50" pos:end="313:51">-&gt;</operator><name pos:start="313:52" pos:end="313:61">codec_type</name></name> <operator pos:start="313:63" pos:end="313:64">==</operator> <name pos:start="313:66" pos:end="313:91"><name pos:start="313:66" pos:end="313:68">ost</name><operator pos:start="313:69" pos:end="313:70">-&gt;</operator><name pos:start="313:71" pos:end="313:72">st</name><operator pos:start="313:73" pos:end="313:74">-&gt;</operator><name pos:start="313:75" pos:end="313:79">codec</name><operator pos:start="313:80" pos:end="313:81">-&gt;</operator><name pos:start="313:82" pos:end="313:91">codec_type</name></name>

                                <operator pos:start="315:33" pos:end="315:34">&amp;&amp;</operator> <name pos:start="315:36" pos:end="315:51"><name pos:start="315:36" pos:end="315:38">ist</name><operator pos:start="315:39" pos:end="315:40">-&gt;</operator><name pos:start="315:41" pos:end="315:42">st</name><operator pos:start="315:43" pos:end="315:44">-&gt;</operator><name pos:start="315:45" pos:end="315:51">discard</name></name> <operator pos:start="315:53" pos:end="315:54">!=</operator> <name pos:start="315:56" pos:end="315:68">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="315:71" pos:end="321:29">{<block_content pos:start="317:33" pos:end="319:42">

                                <expr_stmt pos:start="317:33" pos:end="317:54"><expr pos:start="317:33" pos:end="317:53"><name pos:start="317:33" pos:end="317:49"><name pos:start="317:33" pos:end="317:35">ost</name><operator pos:start="317:36" pos:end="317:37">-&gt;</operator><name pos:start="317:38" pos:end="317:49">source_index</name></name> <operator pos:start="317:51" pos:end="317:51">=</operator> <name pos:start="317:53" pos:end="317:53">j</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="319:33" pos:end="319:42"><expr pos:start="319:33" pos:end="319:41"><name pos:start="319:33" pos:end="319:37">found</name> <operator pos:start="319:39" pos:end="319:39">=</operator> <literal type="number" pos:start="319:41" pos:end="319:41">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="327:21" pos:end="339:21"><if pos:start="327:21" pos:end="339:21">if <condition pos:start="327:24" pos:end="327:31">(<expr pos:start="327:25" pos:end="327:30"><operator pos:start="327:25" pos:end="327:25">!</operator><name pos:start="327:26" pos:end="327:30">found</name></expr>)</condition> <block pos:start="327:33" pos:end="339:21">{<block_content pos:start="329:25" pos:end="337:39">

                        <decl_stmt pos:start="329:25" pos:end="329:47"><decl pos:start="329:25" pos:end="329:46"><type pos:start="329:25" pos:end="329:27"><name pos:start="329:25" pos:end="329:27">int</name></type> <name pos:start="329:29" pos:end="329:29">i</name><init pos:start="329:30" pos:end="329:46">= <expr pos:start="329:32" pos:end="329:46"><name pos:start="329:32" pos:end="329:46"><name pos:start="329:32" pos:end="329:34">ost</name><operator pos:start="329:35" pos:end="329:36">-&gt;</operator><name pos:start="329:37" pos:end="329:46">file_index</name></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="331:25" pos:end="331:89"><expr pos:start="331:25" pos:end="331:88"><call pos:start="331:25" pos:end="331:88"><name pos:start="331:25" pos:end="331:38">av_dump_format</name><argument_list pos:start="331:39" pos:end="331:88">(<argument pos:start="331:40" pos:end="331:54"><expr pos:start="331:40" pos:end="331:54"><name pos:start="331:40" pos:end="331:54"><name pos:start="331:40" pos:end="331:51">output_files</name><index pos:start="331:52" pos:end="331:54">[<expr pos:start="331:53" pos:end="331:53"><name pos:start="331:53" pos:end="331:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="331:57" pos:end="331:57"><expr pos:start="331:57" pos:end="331:57"><name pos:start="331:57" pos:end="331:57">i</name></expr></argument>, <argument pos:start="331:60" pos:end="331:84"><expr pos:start="331:60" pos:end="331:84"><name pos:start="331:60" pos:end="331:74"><name pos:start="331:60" pos:end="331:71">output_files</name><index pos:start="331:72" pos:end="331:74">[<expr pos:start="331:73" pos:end="331:73"><name pos:start="331:73" pos:end="331:73">i</name></expr>]</index></name><operator pos:start="331:75" pos:end="331:76">-&gt;</operator><name pos:start="331:77" pos:end="331:84">filename</name></expr></argument>, <argument pos:start="331:87" pos:end="331:87"><expr pos:start="331:87" pos:end="331:87"><literal type="number" pos:start="331:87" pos:end="331:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="333:25" pos:end="335:61"><expr pos:start="333:25" pos:end="335:60"><call pos:start="333:25" pos:end="335:60"><name pos:start="333:25" pos:end="333:31">fprintf</name><argument_list pos:start="333:32" pos:end="335:60">(<argument pos:start="333:33" pos:end="333:38"><expr pos:start="333:33" pos:end="333:38"><name pos:start="333:33" pos:end="333:38">stderr</name></expr></argument>, <argument pos:start="333:41" pos:end="333:101"><expr pos:start="333:41" pos:end="333:101"><literal type="string" pos:start="333:41" pos:end="333:101">"Could not find input stream matching output stream #%d.%d\n"</literal></expr></argument>,

                                <argument pos:start="335:33" pos:end="335:47"><expr pos:start="335:33" pos:end="335:47"><name pos:start="335:33" pos:end="335:47"><name pos:start="335:33" pos:end="335:35">ost</name><operator pos:start="335:36" pos:end="335:37">-&gt;</operator><name pos:start="335:38" pos:end="335:47">file_index</name></name></expr></argument>, <argument pos:start="335:50" pos:end="335:59"><expr pos:start="335:50" pos:end="335:59"><name pos:start="335:50" pos:end="335:59"><name pos:start="335:50" pos:end="335:52">ost</name><operator pos:start="335:53" pos:end="335:54">-&gt;</operator><name pos:start="335:55" pos:end="335:59">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="337:25" pos:end="337:39"><expr pos:start="337:25" pos:end="337:38"><call pos:start="337:25" pos:end="337:38"><name pos:start="337:25" pos:end="337:35">ffmpeg_exit</name><argument_list pos:start="337:36" pos:end="337:38">(<argument pos:start="337:37" pos:end="337:37"><expr pos:start="337:37" pos:end="337:37"><literal type="number" pos:start="337:37" pos:end="337:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:52"><expr pos:start="345:13" pos:end="345:51"><name pos:start="345:13" pos:end="345:15">ist</name> <operator pos:start="345:17" pos:end="345:17">=</operator> <operator pos:start="345:19" pos:end="345:19">&amp;</operator><name pos:start="345:20" pos:end="345:51"><name pos:start="345:20" pos:end="345:32">input_streams</name><index pos:start="345:33" pos:end="345:51">[<expr pos:start="345:34" pos:end="345:50"><name pos:start="345:34" pos:end="345:50"><name pos:start="345:34" pos:end="345:36">ost</name><operator pos:start="345:37" pos:end="345:38">-&gt;</operator><name pos:start="345:39" pos:end="345:50">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:29"><expr pos:start="347:13" pos:end="347:28"><name pos:start="347:13" pos:end="347:24"><name pos:start="347:13" pos:end="347:15">ist</name><operator pos:start="347:16" pos:end="347:17">-&gt;</operator><name pos:start="347:18" pos:end="347:24">discard</name></name> <operator pos:start="347:26" pos:end="347:26">=</operator> <literal type="number" pos:start="347:28" pos:end="347:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="353:65"><expr pos:start="349:13" pos:end="353:64"><name pos:start="349:13" pos:end="349:25"><name pos:start="349:13" pos:end="349:15">ost</name><operator pos:start="349:16" pos:end="349:17">-&gt;</operator><name pos:start="349:18" pos:end="349:25">sync_ist</name></name> <operator pos:start="349:27" pos:end="349:27">=</operator> <ternary pos:start="349:29" pos:end="353:64"><condition pos:start="349:29" pos:end="349:50"><expr pos:start="349:29" pos:end="349:48"><operator pos:start="349:29" pos:end="349:29">(</operator><name pos:start="349:30" pos:end="349:43">nb_stream_maps</name> <operator pos:start="349:45" pos:end="349:45">&gt;</operator> <literal type="number" pos:start="349:47" pos:end="349:47">0</literal><operator pos:start="349:48" pos:end="349:48">)</operator></expr> ?</condition><then pos:start="351:17" pos:end="353:58">

                <expr pos:start="351:17" pos:end="353:58"><operator pos:start="351:17" pos:end="351:17">&amp;</operator><name pos:start="351:18" pos:end="353:58"><name pos:start="351:18" pos:end="351:30">input_streams</name><index pos:start="351:31" pos:end="353:58">[<expr pos:start="351:32" pos:end="353:57"><name pos:start="351:32" pos:end="351:74"><name pos:start="351:32" pos:end="351:42">input_files</name><index pos:start="351:43" pos:end="351:74">[<expr pos:start="351:44" pos:end="351:73"><name pos:start="351:44" pos:end="351:57"><name pos:start="351:44" pos:end="351:54">stream_maps</name><index pos:start="351:55" pos:end="351:57">[<expr pos:start="351:56" pos:end="351:56"><name pos:start="351:56" pos:end="351:56">n</name></expr>]</index></name><operator pos:start="351:58" pos:end="351:58">.</operator><name pos:start="351:59" pos:end="351:73">sync_file_index</name></expr>]</index></name><operator pos:start="351:75" pos:end="351:75">.</operator><name pos:start="351:76" pos:end="351:84">ist_index</name> <operator pos:start="351:86" pos:end="351:86">+</operator>

                         <name pos:start="353:26" pos:end="353:39"><name pos:start="353:26" pos:end="353:36">stream_maps</name><index pos:start="353:37" pos:end="353:39">[<expr pos:start="353:38" pos:end="353:38"><name pos:start="353:38" pos:end="353:38">n</name></expr>]</index></name><operator pos:start="353:40" pos:end="353:40">.</operator><name pos:start="353:41" pos:end="353:57">sync_stream_index</name></expr>]</index></name></expr> </then><else pos:start="353:60" pos:end="353:64">: <expr pos:start="353:62" pos:end="353:64"><name pos:start="353:62" pos:end="353:64">ist</name></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="361:5" pos:end="361:74">/* for each output stream, we compute the right encoding parameters */</comment>

    <for pos:start="363:5" pos:end="795:5">for<control pos:start="363:8" pos:end="363:30">(<init pos:start="363:9" pos:end="363:12"><expr pos:start="363:9" pos:end="363:11"><name pos:start="363:9" pos:end="363:9">i</name><operator pos:start="363:10" pos:end="363:10">=</operator><literal type="number" pos:start="363:11" pos:end="363:11">0</literal></expr>;</init><condition pos:start="363:13" pos:end="363:26"><expr pos:start="363:13" pos:end="363:25"><name pos:start="363:13" pos:end="363:13">i</name><operator pos:start="363:14" pos:end="363:14">&lt;</operator><name pos:start="363:15" pos:end="363:25">nb_ostreams</name></expr>;</condition><incr pos:start="363:27" pos:end="363:29"><expr pos:start="363:27" pos:end="363:29"><name pos:start="363:27" pos:end="363:27">i</name><operator pos:start="363:28" pos:end="363:29">++</operator></expr></incr>)</control> <block pos:start="363:32" pos:end="795:5">{<block_content pos:start="365:9" pos:end="793:9">

        <expr_stmt pos:start="365:9" pos:end="365:27"><expr pos:start="365:9" pos:end="365:26"><name pos:start="365:9" pos:end="365:11">ost</name> <operator pos:start="365:13" pos:end="365:13">=</operator> <name pos:start="365:15" pos:end="365:26"><name pos:start="365:15" pos:end="365:23">ost_table</name><index pos:start="365:24" pos:end="365:26">[<expr pos:start="365:25" pos:end="365:25"><name pos:start="365:25" pos:end="365:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:43"><expr pos:start="367:9" pos:end="367:42"><name pos:start="367:9" pos:end="367:10">os</name> <operator pos:start="367:12" pos:end="367:12">=</operator> <name pos:start="367:14" pos:end="367:42"><name pos:start="367:14" pos:end="367:25">output_files</name><index pos:start="367:26" pos:end="367:42">[<expr pos:start="367:27" pos:end="367:41"><name pos:start="367:27" pos:end="367:41"><name pos:start="367:27" pos:end="367:29">ost</name><operator pos:start="367:30" pos:end="367:31">-&gt;</operator><name pos:start="367:32" pos:end="367:41">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:48"><expr pos:start="369:9" pos:end="369:47"><name pos:start="369:9" pos:end="369:11">ist</name> <operator pos:start="369:13" pos:end="369:13">=</operator> <operator pos:start="369:15" pos:end="369:15">&amp;</operator><name pos:start="369:16" pos:end="369:47"><name pos:start="369:16" pos:end="369:28">input_streams</name><index pos:start="369:29" pos:end="369:47">[<expr pos:start="369:30" pos:end="369:46"><name pos:start="369:30" pos:end="369:46"><name pos:start="369:30" pos:end="369:32">ost</name><operator pos:start="369:33" pos:end="369:34">-&gt;</operator><name pos:start="369:35" pos:end="369:46">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="373:9" pos:end="373:31"><expr pos:start="373:9" pos:end="373:30"><name pos:start="373:9" pos:end="373:13">codec</name> <operator pos:start="373:15" pos:end="373:15">=</operator> <name pos:start="373:17" pos:end="373:30"><name pos:start="373:17" pos:end="373:19">ost</name><operator pos:start="373:20" pos:end="373:21">-&gt;</operator><name pos:start="373:22" pos:end="373:23">st</name><operator pos:start="373:24" pos:end="373:25">-&gt;</operator><name pos:start="373:26" pos:end="373:30">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:32"><expr pos:start="375:9" pos:end="375:31"><name pos:start="375:9" pos:end="375:14">icodec</name> <operator pos:start="375:16" pos:end="375:16">=</operator> <name pos:start="375:18" pos:end="375:31"><name pos:start="375:18" pos:end="375:20">ist</name><operator pos:start="375:21" pos:end="375:22">-&gt;</operator><name pos:start="375:23" pos:end="375:24">st</name><operator pos:start="375:25" pos:end="375:26">-&gt;</operator><name pos:start="375:27" pos:end="375:31">codec</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="379:9" pos:end="383:49"><if pos:start="379:9" pos:end="383:49">if <condition pos:start="379:12" pos:end="379:38">(<expr pos:start="379:13" pos:end="379:37"><name pos:start="379:13" pos:end="379:37">metadata_streams_autocopy</name></expr>)</condition><block type="pseudo" pos:start="381:13" pos:end="383:49"><block_content pos:start="381:13" pos:end="383:49">

            <expr_stmt pos:start="381:13" pos:end="383:49"><expr pos:start="381:13" pos:end="383:48"><call pos:start="381:13" pos:end="383:48"><name pos:start="381:13" pos:end="381:24">av_dict_copy</name><argument_list pos:start="381:25" pos:end="383:48">(<argument pos:start="381:26" pos:end="381:43"><expr pos:start="381:26" pos:end="381:43"><operator pos:start="381:26" pos:end="381:26">&amp;</operator><name pos:start="381:27" pos:end="381:43"><name pos:start="381:27" pos:end="381:29">ost</name><operator pos:start="381:30" pos:end="381:31">-&gt;</operator><name pos:start="381:32" pos:end="381:33">st</name><operator pos:start="381:34" pos:end="381:35">-&gt;</operator><name pos:start="381:36" pos:end="381:43">metadata</name></name></expr></argument>, <argument pos:start="381:46" pos:end="381:62"><expr pos:start="381:46" pos:end="381:62"><name pos:start="381:46" pos:end="381:62"><name pos:start="381:46" pos:end="381:48">ist</name><operator pos:start="381:49" pos:end="381:50">-&gt;</operator><name pos:start="381:51" pos:end="381:52">st</name><operator pos:start="381:53" pos:end="381:54">-&gt;</operator><name pos:start="381:55" pos:end="381:62">metadata</name></name></expr></argument>,

                         <argument pos:start="383:26" pos:end="383:47"><expr pos:start="383:26" pos:end="383:47"><name pos:start="383:26" pos:end="383:47">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="387:9" pos:end="387:52"><expr pos:start="387:9" pos:end="387:51"><name pos:start="387:9" pos:end="387:28"><name pos:start="387:9" pos:end="387:11">ost</name><operator pos:start="387:12" pos:end="387:13">-&gt;</operator><name pos:start="387:14" pos:end="387:15">st</name><operator pos:start="387:16" pos:end="387:17">-&gt;</operator><name pos:start="387:18" pos:end="387:28">disposition</name></name> <operator pos:start="387:30" pos:end="387:30">=</operator> <name pos:start="387:32" pos:end="387:51"><name pos:start="387:32" pos:end="387:34">ist</name><operator pos:start="387:35" pos:end="387:36">-&gt;</operator><name pos:start="387:37" pos:end="387:38">st</name><operator pos:start="387:39" pos:end="387:40">-&gt;</operator><name pos:start="387:41" pos:end="387:51">disposition</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="389:9" pos:end="389:64"><expr pos:start="389:9" pos:end="389:63"><name pos:start="389:9" pos:end="389:34"><name pos:start="389:9" pos:end="389:13">codec</name><operator pos:start="389:14" pos:end="389:15">-&gt;</operator><name pos:start="389:16" pos:end="389:34">bits_per_raw_sample</name></name><operator pos:start="389:35" pos:end="389:35">=</operator> <name pos:start="389:37" pos:end="389:63"><name pos:start="389:37" pos:end="389:42">icodec</name><operator pos:start="389:43" pos:end="389:44">-&gt;</operator><name pos:start="389:45" pos:end="389:63">bits_per_raw_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:71"><expr pos:start="391:9" pos:end="391:70"><name pos:start="391:9" pos:end="391:37"><name pos:start="391:9" pos:end="391:13">codec</name><operator pos:start="391:14" pos:end="391:15">-&gt;</operator><name pos:start="391:16" pos:end="391:37">chroma_sample_location</name></name> <operator pos:start="391:39" pos:end="391:39">=</operator> <name pos:start="391:41" pos:end="391:70"><name pos:start="391:41" pos:end="391:46">icodec</name><operator pos:start="391:47" pos:end="391:48">-&gt;</operator><name pos:start="391:49" pos:end="391:70">chroma_sample_location</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="395:9" pos:end="783:9"><if pos:start="395:9" pos:end="557:9">if <condition pos:start="395:12" pos:end="395:33">(<expr pos:start="395:13" pos:end="395:32"><name pos:start="395:13" pos:end="395:32"><name pos:start="395:13" pos:end="395:15">ost</name><operator pos:start="395:16" pos:end="395:17">-&gt;</operator><name pos:start="395:18" pos:end="395:19">st</name><operator pos:start="395:20" pos:end="395:21">-&gt;</operator><name pos:start="395:22" pos:end="395:32">stream_copy</name></name></expr>)</condition> <block pos:start="395:35" pos:end="557:9">{<block_content pos:start="397:13" pos:end="555:13">

            <decl_stmt pos:start="397:13" pos:end="397:98"><decl pos:start="397:13" pos:end="397:97"><type pos:start="397:13" pos:end="397:20"><name pos:start="397:13" pos:end="397:20">uint64_t</name></type> <name pos:start="397:22" pos:end="397:31">extra_size</name> <init pos:start="397:33" pos:end="397:97">= <expr pos:start="397:35" pos:end="397:97"><operator pos:start="397:35" pos:end="397:35">(</operator><name pos:start="397:36" pos:end="397:43">uint64_t</name><operator pos:start="397:44" pos:end="397:44">)</operator><name pos:start="397:45" pos:end="397:66"><name pos:start="397:45" pos:end="397:50">icodec</name><operator pos:start="397:51" pos:end="397:52">-&gt;</operator><name pos:start="397:53" pos:end="397:66">extradata_size</name></name> <operator pos:start="397:68" pos:end="397:68">+</operator> <name pos:start="397:70" pos:end="397:97">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="401:13" pos:end="403:26"><if pos:start="401:13" pos:end="403:26">if <condition pos:start="401:16" pos:end="401:37">(<expr pos:start="401:17" pos:end="401:36"><name pos:start="401:17" pos:end="401:26">extra_size</name> <operator pos:start="401:28" pos:end="401:28">&gt;</operator> <name pos:start="401:30" pos:end="401:36">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="403:17" pos:end="403:26"><block_content pos:start="403:17" pos:end="403:26">

                <goto pos:start="403:17" pos:end="403:26">goto <name pos:start="403:22" pos:end="403:25">fail</name>;</goto></block_content></block></if></if_stmt>



            <comment type="block" pos:start="407:13" pos:end="407:73">/* if stream_copy is selected, no need to decode or encode */</comment>

            <expr_stmt pos:start="409:13" pos:end="409:47"><expr pos:start="409:13" pos:end="409:46"><name pos:start="409:13" pos:end="409:27"><name pos:start="409:13" pos:end="409:17">codec</name><operator pos:start="409:18" pos:end="409:19">-&gt;</operator><name pos:start="409:20" pos:end="409:27">codec_id</name></name> <operator pos:start="409:29" pos:end="409:29">=</operator> <name pos:start="409:31" pos:end="409:46"><name pos:start="409:31" pos:end="409:36">icodec</name><operator pos:start="409:37" pos:end="409:38">-&gt;</operator><name pos:start="409:39" pos:end="409:46">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:51"><expr pos:start="411:13" pos:end="411:50"><name pos:start="411:13" pos:end="411:29"><name pos:start="411:13" pos:end="411:17">codec</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:29">codec_type</name></name> <operator pos:start="411:31" pos:end="411:31">=</operator> <name pos:start="411:33" pos:end="411:50"><name pos:start="411:33" pos:end="411:38">icodec</name><operator pos:start="411:39" pos:end="411:40">-&gt;</operator><name pos:start="411:41" pos:end="411:50">codec_type</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="415:13" pos:end="425:13"><if pos:start="415:13" pos:end="425:13">if<condition pos:start="415:15" pos:end="415:33">(<expr pos:start="415:16" pos:end="415:32"><operator pos:start="415:16" pos:end="415:16">!</operator><name pos:start="415:17" pos:end="415:32"><name pos:start="415:17" pos:end="415:21">codec</name><operator pos:start="415:22" pos:end="415:23">-&gt;</operator><name pos:start="415:24" pos:end="415:32">codec_tag</name></name></expr>)</condition><block pos:start="415:34" pos:end="425:13">{<block_content pos:start="417:17" pos:end="423:57">

                <if_stmt pos:start="417:17" pos:end="423:57"><if pos:start="417:17" pos:end="423:57">if<condition pos:start="417:19" pos:end="421:86">(   <expr pos:start="417:23" pos:end="421:85"><operator pos:start="417:23" pos:end="417:23">!</operator><name pos:start="417:24" pos:end="417:45"><name pos:start="417:24" pos:end="417:25">os</name><operator pos:start="417:26" pos:end="417:27">-&gt;</operator><name pos:start="417:28" pos:end="417:34">oformat</name><operator pos:start="417:35" pos:end="417:36">-&gt;</operator><name pos:start="417:37" pos:end="417:45">codec_tag</name></name>

                   <operator pos:start="419:20" pos:end="419:21">||</operator> <call pos:start="419:23" pos:end="419:81"><name pos:start="419:23" pos:end="419:37">av_codec_get_id</name> <argument_list pos:start="419:39" pos:end="419:81">(<argument pos:start="419:40" pos:end="419:61"><expr pos:start="419:40" pos:end="419:61"><name pos:start="419:40" pos:end="419:61"><name pos:start="419:40" pos:end="419:41">os</name><operator pos:start="419:42" pos:end="419:43">-&gt;</operator><name pos:start="419:44" pos:end="419:50">oformat</name><operator pos:start="419:51" pos:end="419:52">-&gt;</operator><name pos:start="419:53" pos:end="419:61">codec_tag</name></name></expr></argument>, <argument pos:start="419:64" pos:end="419:80"><expr pos:start="419:64" pos:end="419:80"><name pos:start="419:64" pos:end="419:80"><name pos:start="419:64" pos:end="419:69">icodec</name><operator pos:start="419:70" pos:end="419:71">-&gt;</operator><name pos:start="419:72" pos:end="419:80">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="419:83" pos:end="419:84">==</operator> <name pos:start="419:86" pos:end="419:100"><name pos:start="419:86" pos:end="419:90">codec</name><operator pos:start="419:91" pos:end="419:92">-&gt;</operator><name pos:start="419:93" pos:end="419:100">codec_id</name></name>

                   <operator pos:start="421:20" pos:end="421:21">||</operator> <call pos:start="421:23" pos:end="421:80"><name pos:start="421:23" pos:end="421:38">av_codec_get_tag</name><argument_list pos:start="421:39" pos:end="421:80">(<argument pos:start="421:40" pos:end="421:61"><expr pos:start="421:40" pos:end="421:61"><name pos:start="421:40" pos:end="421:61"><name pos:start="421:40" pos:end="421:41">os</name><operator pos:start="421:42" pos:end="421:43">-&gt;</operator><name pos:start="421:44" pos:end="421:50">oformat</name><operator pos:start="421:51" pos:end="421:52">-&gt;</operator><name pos:start="421:53" pos:end="421:61">codec_tag</name></name></expr></argument>, <argument pos:start="421:64" pos:end="421:79"><expr pos:start="421:64" pos:end="421:79"><name pos:start="421:64" pos:end="421:79"><name pos:start="421:64" pos:end="421:69">icodec</name><operator pos:start="421:70" pos:end="421:71">-&gt;</operator><name pos:start="421:72" pos:end="421:79">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="421:82" pos:end="421:83">&lt;=</operator> <literal type="number" pos:start="421:85" pos:end="421:85">0</literal></expr>)</condition><block type="pseudo" pos:start="423:21" pos:end="423:57"><block_content pos:start="423:21" pos:end="423:57">

                    <expr_stmt pos:start="423:21" pos:end="423:57"><expr pos:start="423:21" pos:end="423:56"><name pos:start="423:21" pos:end="423:36"><name pos:start="423:21" pos:end="423:25">codec</name><operator pos:start="423:26" pos:end="423:27">-&gt;</operator><name pos:start="423:28" pos:end="423:36">codec_tag</name></name> <operator pos:start="423:38" pos:end="423:38">=</operator> <name pos:start="423:40" pos:end="423:56"><name pos:start="423:40" pos:end="423:45">icodec</name><operator pos:start="423:46" pos:end="423:47">-&gt;</operator><name pos:start="423:48" pos:end="423:56">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="429:13" pos:end="429:47"><expr pos:start="429:13" pos:end="429:46"><name pos:start="429:13" pos:end="429:27"><name pos:start="429:13" pos:end="429:17">codec</name><operator pos:start="429:18" pos:end="429:19">-&gt;</operator><name pos:start="429:20" pos:end="429:27">bit_rate</name></name> <operator pos:start="429:29" pos:end="429:29">=</operator> <name pos:start="429:31" pos:end="429:46"><name pos:start="429:31" pos:end="429:36">icodec</name><operator pos:start="429:37" pos:end="429:38">-&gt;</operator><name pos:start="429:39" pos:end="429:46">bit_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:56"><expr pos:start="431:13" pos:end="431:55"><name pos:start="431:13" pos:end="431:30"><name pos:start="431:13" pos:end="431:17">codec</name><operator pos:start="431:18" pos:end="431:19">-&gt;</operator><name pos:start="431:20" pos:end="431:30">rc_max_rate</name></name>    <operator pos:start="431:35" pos:end="431:35">=</operator> <name pos:start="431:37" pos:end="431:55"><name pos:start="431:37" pos:end="431:42">icodec</name><operator pos:start="431:43" pos:end="431:44">-&gt;</operator><name pos:start="431:45" pos:end="431:55">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:59"><expr pos:start="433:13" pos:end="433:58"><name pos:start="433:13" pos:end="433:33"><name pos:start="433:13" pos:end="433:17">codec</name><operator pos:start="433:18" pos:end="433:19">-&gt;</operator><name pos:start="433:20" pos:end="433:33">rc_buffer_size</name></name> <operator pos:start="433:35" pos:end="433:35">=</operator> <name pos:start="433:37" pos:end="433:58"><name pos:start="433:37" pos:end="433:42">icodec</name><operator pos:start="433:43" pos:end="433:44">-&gt;</operator><name pos:start="433:45" pos:end="433:58">rc_buffer_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:53"><expr pos:start="435:13" pos:end="435:52"><name pos:start="435:13" pos:end="435:28"><name pos:start="435:13" pos:end="435:17">codec</name><operator pos:start="435:18" pos:end="435:19">-&gt;</operator><name pos:start="435:20" pos:end="435:28">extradata</name></name><operator pos:start="435:29" pos:end="435:29">=</operator> <call pos:start="435:31" pos:end="435:52"><name pos:start="435:31" pos:end="435:40">av_mallocz</name><argument_list pos:start="435:41" pos:end="435:52">(<argument pos:start="435:42" pos:end="435:51"><expr pos:start="435:42" pos:end="435:51"><name pos:start="435:42" pos:end="435:51">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="437:13" pos:end="439:26"><if pos:start="437:13" pos:end="439:26">if <condition pos:start="437:16" pos:end="437:34">(<expr pos:start="437:17" pos:end="437:33"><operator pos:start="437:17" pos:end="437:17">!</operator><name pos:start="437:18" pos:end="437:33"><name pos:start="437:18" pos:end="437:22">codec</name><operator pos:start="437:23" pos:end="437:24">-&gt;</operator><name pos:start="437:25" pos:end="437:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="439:17" pos:end="439:26"><block_content pos:start="439:17" pos:end="439:26">

                <goto pos:start="439:17" pos:end="439:26">goto <name pos:start="439:22" pos:end="439:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:80"><expr pos:start="441:13" pos:end="441:79"><call pos:start="441:13" pos:end="441:79"><name pos:start="441:13" pos:end="441:18">memcpy</name><argument_list pos:start="441:19" pos:end="441:79">(<argument pos:start="441:20" pos:end="441:35"><expr pos:start="441:20" pos:end="441:35"><name pos:start="441:20" pos:end="441:35"><name pos:start="441:20" pos:end="441:24">codec</name><operator pos:start="441:25" pos:end="441:26">-&gt;</operator><name pos:start="441:27" pos:end="441:35">extradata</name></name></expr></argument>, <argument pos:start="441:38" pos:end="441:54"><expr pos:start="441:38" pos:end="441:54"><name pos:start="441:38" pos:end="441:54"><name pos:start="441:38" pos:end="441:43">icodec</name><operator pos:start="441:44" pos:end="441:45">-&gt;</operator><name pos:start="441:46" pos:end="441:54">extradata</name></name></expr></argument>, <argument pos:start="441:57" pos:end="441:78"><expr pos:start="441:57" pos:end="441:78"><name pos:start="441:57" pos:end="441:78"><name pos:start="441:57" pos:end="441:62">icodec</name><operator pos:start="441:63" pos:end="441:64">-&gt;</operator><name pos:start="441:65" pos:end="441:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:58"><expr pos:start="443:13" pos:end="443:57"><name pos:start="443:13" pos:end="443:33"><name pos:start="443:13" pos:end="443:17">codec</name><operator pos:start="443:18" pos:end="443:19">-&gt;</operator><name pos:start="443:20" pos:end="443:33">extradata_size</name></name><operator pos:start="443:34" pos:end="443:34">=</operator> <name pos:start="443:36" pos:end="443:57"><name pos:start="443:36" pos:end="443:41">icodec</name><operator pos:start="443:42" pos:end="443:43">-&gt;</operator><name pos:start="443:44" pos:end="443:57">extradata_size</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="447:13" pos:end="447:50"><expr pos:start="447:13" pos:end="447:49"><name pos:start="447:13" pos:end="447:28"><name pos:start="447:13" pos:end="447:17">codec</name><operator pos:start="447:18" pos:end="447:19">-&gt;</operator><name pos:start="447:20" pos:end="447:28">time_base</name></name> <operator pos:start="447:30" pos:end="447:30">=</operator> <name pos:start="447:32" pos:end="447:49"><name pos:start="447:32" pos:end="447:34">ist</name><operator pos:start="447:35" pos:end="447:36">-&gt;</operator><name pos:start="447:37" pos:end="447:38">st</name><operator pos:start="447:39" pos:end="447:40">-&gt;</operator><name pos:start="447:41" pos:end="447:49">time_base</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="449:13" pos:end="471:13"><if pos:start="449:13" pos:end="461:13">if<condition pos:start="449:15" pos:end="449:49">(<expr pos:start="449:16" pos:end="449:48"><operator pos:start="449:16" pos:end="449:16">!</operator><call pos:start="449:17" pos:end="449:48"><name pos:start="449:17" pos:end="449:22">strcmp</name><argument_list pos:start="449:23" pos:end="449:48">(<argument pos:start="449:24" pos:end="449:40"><expr pos:start="449:24" pos:end="449:40"><name pos:start="449:24" pos:end="449:40"><name pos:start="449:24" pos:end="449:25">os</name><operator pos:start="449:26" pos:end="449:27">-&gt;</operator><name pos:start="449:28" pos:end="449:34">oformat</name><operator pos:start="449:35" pos:end="449:36">-&gt;</operator><name pos:start="449:37" pos:end="449:40">name</name></name></expr></argument>, <argument pos:start="449:43" pos:end="449:47"><expr pos:start="449:43" pos:end="449:47"><literal type="string" pos:start="449:43" pos:end="449:47">"avi"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="449:51" pos:end="461:13">{<block_content pos:start="451:17" pos:end="459:17">

                <if_stmt pos:start="451:17" pos:end="459:17"><if pos:start="451:17" pos:end="459:17">if<condition pos:start="451:19" pos:end="451:152">(<expr pos:start="451:20" pos:end="451:151"><operator pos:start="451:20" pos:end="451:20">!</operator><name pos:start="451:21" pos:end="451:27">copy_tb</name> <operator pos:start="451:29" pos:end="451:30">&amp;&amp;</operator> <call pos:start="451:32" pos:end="451:56"><name pos:start="451:32" pos:end="451:37">av_q2d</name><argument_list pos:start="451:38" pos:end="451:56">(<argument pos:start="451:39" pos:end="451:55"><expr pos:start="451:39" pos:end="451:55"><name pos:start="451:39" pos:end="451:55"><name pos:start="451:39" pos:end="451:44">icodec</name><operator pos:start="451:45" pos:end="451:46">-&gt;</operator><name pos:start="451:47" pos:end="451:55">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="451:57" pos:end="451:57">*</operator><name pos:start="451:58" pos:end="451:80"><name pos:start="451:58" pos:end="451:63">icodec</name><operator pos:start="451:64" pos:end="451:65">-&gt;</operator><name pos:start="451:66" pos:end="451:80">ticks_per_frame</name></name> <operator pos:start="451:82" pos:end="451:82">&gt;</operator> <literal type="number" pos:start="451:84" pos:end="451:84">2</literal><operator pos:start="451:85" pos:end="451:85">*</operator><call pos:start="451:86" pos:end="451:111"><name pos:start="451:86" pos:end="451:91">av_q2d</name><argument_list pos:start="451:92" pos:end="451:111">(<argument pos:start="451:93" pos:end="451:110"><expr pos:start="451:93" pos:end="451:110"><name pos:start="451:93" pos:end="451:110"><name pos:start="451:93" pos:end="451:95">ist</name><operator pos:start="451:96" pos:end="451:97">-&gt;</operator><name pos:start="451:98" pos:end="451:99">st</name><operator pos:start="451:100" pos:end="451:101">-&gt;</operator><name pos:start="451:102" pos:end="451:110">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="451:113" pos:end="451:114">&amp;&amp;</operator> <call pos:start="451:116" pos:end="451:141"><name pos:start="451:116" pos:end="451:121">av_q2d</name><argument_list pos:start="451:122" pos:end="451:141">(<argument pos:start="451:123" pos:end="451:140"><expr pos:start="451:123" pos:end="451:140"><name pos:start="451:123" pos:end="451:140"><name pos:start="451:123" pos:end="451:125">ist</name><operator pos:start="451:126" pos:end="451:127">-&gt;</operator><name pos:start="451:128" pos:end="451:129">st</name><operator pos:start="451:130" pos:end="451:131">-&gt;</operator><name pos:start="451:132" pos:end="451:140">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="451:143" pos:end="451:143">&lt;</operator> <literal type="number" pos:start="451:145" pos:end="451:147">1.0</literal><operator pos:start="451:148" pos:end="451:148">/</operator><literal type="number" pos:start="451:149" pos:end="451:151">500</literal></expr>)</condition><block pos:start="451:153" pos:end="459:17">{<block_content pos:start="453:21" pos:end="457:46">

                    <expr_stmt pos:start="453:21" pos:end="453:57"><expr pos:start="453:21" pos:end="453:56"><name pos:start="453:21" pos:end="453:36"><name pos:start="453:21" pos:end="453:25">codec</name><operator pos:start="453:26" pos:end="453:27">-&gt;</operator><name pos:start="453:28" pos:end="453:36">time_base</name></name> <operator pos:start="453:38" pos:end="453:38">=</operator> <name pos:start="453:40" pos:end="453:56"><name pos:start="453:40" pos:end="453:45">icodec</name><operator pos:start="453:46" pos:end="453:47">-&gt;</operator><name pos:start="453:48" pos:end="453:56">time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="455:21" pos:end="455:68"><expr pos:start="455:21" pos:end="455:67"><name pos:start="455:21" pos:end="455:40"><name pos:start="455:21" pos:end="455:25">codec</name><operator pos:start="455:26" pos:end="455:27">-&gt;</operator><name pos:start="455:28" pos:end="455:36">time_base</name><operator pos:start="455:37" pos:end="455:37">.</operator><name pos:start="455:38" pos:end="455:40">num</name></name> <operator pos:start="455:42" pos:end="455:43">*=</operator> <name pos:start="455:45" pos:end="455:67"><name pos:start="455:45" pos:end="455:50">icodec</name><operator pos:start="455:51" pos:end="455:52">-&gt;</operator><name pos:start="455:53" pos:end="455:67">ticks_per_frame</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="457:21" pos:end="457:46"><expr pos:start="457:21" pos:end="457:45"><name pos:start="457:21" pos:end="457:40"><name pos:start="457:21" pos:end="457:25">codec</name><operator pos:start="457:26" pos:end="457:27">-&gt;</operator><name pos:start="457:28" pos:end="457:36">time_base</name><operator pos:start="457:37" pos:end="457:37">.</operator><name pos:start="457:38" pos:end="457:40">den</name></name> <operator pos:start="457:42" pos:end="457:43">*=</operator> <literal type="number" pos:start="457:45" pos:end="457:45">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="461:15" pos:end="471:13">else if<condition pos:start="461:22" pos:end="461:65">(<expr pos:start="461:23" pos:end="461:64"><operator pos:start="461:23" pos:end="461:23">!</operator><operator pos:start="461:24" pos:end="461:24">(</operator><name pos:start="461:25" pos:end="461:42"><name pos:start="461:25" pos:end="461:26">os</name><operator pos:start="461:27" pos:end="461:28">-&gt;</operator><name pos:start="461:29" pos:end="461:35">oformat</name><operator pos:start="461:36" pos:end="461:37">-&gt;</operator><name pos:start="461:38" pos:end="461:42">flags</name></name> <operator pos:start="461:44" pos:end="461:44">&amp;</operator> <name pos:start="461:46" pos:end="461:63">AVFMT_VARIABLE_FPS</name><operator pos:start="461:64" pos:end="461:64">)</operator></expr>)</condition> <block pos:start="461:67" pos:end="471:13">{<block_content pos:start="463:17" pos:end="469:17">

                <if_stmt pos:start="463:17" pos:end="469:17"><if pos:start="463:17" pos:end="469:17">if<condition pos:start="463:19" pos:end="463:150">(<expr pos:start="463:20" pos:end="463:149"><operator pos:start="463:20" pos:end="463:20">!</operator><name pos:start="463:21" pos:end="463:27">copy_tb</name> <operator pos:start="463:29" pos:end="463:30">&amp;&amp;</operator> <call pos:start="463:32" pos:end="463:56"><name pos:start="463:32" pos:end="463:37">av_q2d</name><argument_list pos:start="463:38" pos:end="463:56">(<argument pos:start="463:39" pos:end="463:55"><expr pos:start="463:39" pos:end="463:55"><name pos:start="463:39" pos:end="463:55"><name pos:start="463:39" pos:end="463:44">icodec</name><operator pos:start="463:45" pos:end="463:46">-&gt;</operator><name pos:start="463:47" pos:end="463:55">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="463:57" pos:end="463:57">*</operator><name pos:start="463:58" pos:end="463:80"><name pos:start="463:58" pos:end="463:63">icodec</name><operator pos:start="463:64" pos:end="463:65">-&gt;</operator><name pos:start="463:66" pos:end="463:80">ticks_per_frame</name></name> <operator pos:start="463:82" pos:end="463:82">&gt;</operator> <call pos:start="463:84" pos:end="463:109"><name pos:start="463:84" pos:end="463:89">av_q2d</name><argument_list pos:start="463:90" pos:end="463:109">(<argument pos:start="463:91" pos:end="463:108"><expr pos:start="463:91" pos:end="463:108"><name pos:start="463:91" pos:end="463:108"><name pos:start="463:91" pos:end="463:93">ist</name><operator pos:start="463:94" pos:end="463:95">-&gt;</operator><name pos:start="463:96" pos:end="463:97">st</name><operator pos:start="463:98" pos:end="463:99">-&gt;</operator><name pos:start="463:100" pos:end="463:108">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="463:111" pos:end="463:112">&amp;&amp;</operator> <call pos:start="463:114" pos:end="463:139"><name pos:start="463:114" pos:end="463:119">av_q2d</name><argument_list pos:start="463:120" pos:end="463:139">(<argument pos:start="463:121" pos:end="463:138"><expr pos:start="463:121" pos:end="463:138"><name pos:start="463:121" pos:end="463:138"><name pos:start="463:121" pos:end="463:123">ist</name><operator pos:start="463:124" pos:end="463:125">-&gt;</operator><name pos:start="463:126" pos:end="463:127">st</name><operator pos:start="463:128" pos:end="463:129">-&gt;</operator><name pos:start="463:130" pos:end="463:138">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="463:141" pos:end="463:141">&lt;</operator> <literal type="number" pos:start="463:143" pos:end="463:145">1.0</literal><operator pos:start="463:146" pos:end="463:146">/</operator><literal type="number" pos:start="463:147" pos:end="463:149">500</literal></expr>)</condition><block pos:start="463:151" pos:end="469:17">{<block_content pos:start="465:21" pos:end="467:68">

                    <expr_stmt pos:start="465:21" pos:end="465:57"><expr pos:start="465:21" pos:end="465:56"><name pos:start="465:21" pos:end="465:36"><name pos:start="465:21" pos:end="465:25">codec</name><operator pos:start="465:26" pos:end="465:27">-&gt;</operator><name pos:start="465:28" pos:end="465:36">time_base</name></name> <operator pos:start="465:38" pos:end="465:38">=</operator> <name pos:start="465:40" pos:end="465:56"><name pos:start="465:40" pos:end="465:45">icodec</name><operator pos:start="465:46" pos:end="465:47">-&gt;</operator><name pos:start="465:48" pos:end="465:56">time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="467:21" pos:end="467:68"><expr pos:start="467:21" pos:end="467:67"><name pos:start="467:21" pos:end="467:40"><name pos:start="467:21" pos:end="467:25">codec</name><operator pos:start="467:26" pos:end="467:27">-&gt;</operator><name pos:start="467:28" pos:end="467:36">time_base</name><operator pos:start="467:37" pos:end="467:37">.</operator><name pos:start="467:38" pos:end="467:40">num</name></name> <operator pos:start="467:42" pos:end="467:43">*=</operator> <name pos:start="467:45" pos:end="467:67"><name pos:start="467:45" pos:end="467:50">icodec</name><operator pos:start="467:51" pos:end="467:52">-&gt;</operator><name pos:start="467:53" pos:end="467:67">ticks_per_frame</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="473:13" pos:end="475:77"><expr pos:start="473:13" pos:end="475:76"><call pos:start="473:13" pos:end="475:76"><name pos:start="473:13" pos:end="473:21">av_reduce</name><argument_list pos:start="473:22" pos:end="475:76">(<argument pos:start="473:23" pos:end="473:43"><expr pos:start="473:23" pos:end="473:43"><operator pos:start="473:23" pos:end="473:23">&amp;</operator><name pos:start="473:24" pos:end="473:43"><name pos:start="473:24" pos:end="473:28">codec</name><operator pos:start="473:29" pos:end="473:30">-&gt;</operator><name pos:start="473:31" pos:end="473:39">time_base</name><operator pos:start="473:40" pos:end="473:40">.</operator><name pos:start="473:41" pos:end="473:43">num</name></name></expr></argument>, <argument pos:start="473:46" pos:end="473:66"><expr pos:start="473:46" pos:end="473:66"><operator pos:start="473:46" pos:end="473:46">&amp;</operator><name pos:start="473:47" pos:end="473:66"><name pos:start="473:47" pos:end="473:51">codec</name><operator pos:start="473:52" pos:end="473:53">-&gt;</operator><name pos:start="473:54" pos:end="473:62">time_base</name><operator pos:start="473:63" pos:end="473:63">.</operator><name pos:start="473:64" pos:end="473:66">den</name></name></expr></argument>,

                        <argument pos:start="475:25" pos:end="475:44"><expr pos:start="475:25" pos:end="475:44"><name pos:start="475:25" pos:end="475:44"><name pos:start="475:25" pos:end="475:29">codec</name><operator pos:start="475:30" pos:end="475:31">-&gt;</operator><name pos:start="475:32" pos:end="475:40">time_base</name><operator pos:start="475:41" pos:end="475:41">.</operator><name pos:start="475:42" pos:end="475:44">num</name></name></expr></argument>, <argument pos:start="475:47" pos:end="475:66"><expr pos:start="475:47" pos:end="475:66"><name pos:start="475:47" pos:end="475:66"><name pos:start="475:47" pos:end="475:51">codec</name><operator pos:start="475:52" pos:end="475:53">-&gt;</operator><name pos:start="475:54" pos:end="475:62">time_base</name><operator pos:start="475:63" pos:end="475:63">.</operator><name pos:start="475:64" pos:end="475:66">den</name></name></expr></argument>, <argument pos:start="475:69" pos:end="475:75"><expr pos:start="475:69" pos:end="475:75"><name pos:start="475:69" pos:end="475:75">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="479:13" pos:end="555:13">switch<condition pos:start="479:19" pos:end="479:37">(<expr pos:start="479:20" pos:end="479:36"><name pos:start="479:20" pos:end="479:36"><name pos:start="479:20" pos:end="479:24">codec</name><operator pos:start="479:25" pos:end="479:26">-&gt;</operator><name pos:start="479:27" pos:end="479:36">codec_type</name></name></expr>)</condition> <block pos:start="479:39" pos:end="555:13">{<block_content pos:start="481:13" pos:end="553:24">

            <case pos:start="481:13" pos:end="481:36">case <expr pos:start="481:18" pos:end="481:35"><name pos:start="481:18" pos:end="481:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="483:17" pos:end="489:17"><if pos:start="483:17" pos:end="489:17">if<condition pos:start="483:19" pos:end="483:39">(<expr pos:start="483:20" pos:end="483:38"><name pos:start="483:20" pos:end="483:31">audio_volume</name> <operator pos:start="483:33" pos:end="483:34">!=</operator> <literal type="number" pos:start="483:36" pos:end="483:38">256</literal></expr>)</condition> <block pos:start="483:41" pos:end="489:17">{<block_content pos:start="485:21" pos:end="487:35">

                    <expr_stmt pos:start="485:21" pos:end="485:104"><expr pos:start="485:21" pos:end="485:103"><call pos:start="485:21" pos:end="485:103"><name pos:start="485:21" pos:end="485:27">fprintf</name><argument_list pos:start="485:28" pos:end="485:103">(<argument pos:start="485:29" pos:end="485:34"><expr pos:start="485:29" pos:end="485:34"><name pos:start="485:29" pos:end="485:34">stderr</name></expr></argument>,<argument pos:start="485:36" pos:end="485:102"><expr pos:start="485:36" pos:end="485:102"><literal type="string" pos:start="485:36" pos:end="485:102">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="487:21" pos:end="487:35"><expr pos:start="487:21" pos:end="487:34"><call pos:start="487:21" pos:end="487:34"><name pos:start="487:21" pos:end="487:31">ffmpeg_exit</name><argument_list pos:start="487:32" pos:end="487:34">(<argument pos:start="487:33" pos:end="487:33"><expr pos:start="487:33" pos:end="487:33"><literal type="number" pos:start="487:33" pos:end="487:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="491:17" pos:end="491:63"><expr pos:start="491:17" pos:end="491:62"><name pos:start="491:17" pos:end="491:37"><name pos:start="491:17" pos:end="491:21">codec</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:37">channel_layout</name></name> <operator pos:start="491:39" pos:end="491:39">=</operator> <name pos:start="491:41" pos:end="491:62"><name pos:start="491:41" pos:end="491:46">icodec</name><operator pos:start="491:47" pos:end="491:48">-&gt;</operator><name pos:start="491:49" pos:end="491:62">channel_layout</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="493:17" pos:end="493:57"><expr pos:start="493:17" pos:end="493:56"><name pos:start="493:17" pos:end="493:34"><name pos:start="493:17" pos:end="493:21">codec</name><operator pos:start="493:22" pos:end="493:23">-&gt;</operator><name pos:start="493:24" pos:end="493:34">sample_rate</name></name> <operator pos:start="493:36" pos:end="493:36">=</operator> <name pos:start="493:38" pos:end="493:56"><name pos:start="493:38" pos:end="493:43">icodec</name><operator pos:start="493:44" pos:end="493:45">-&gt;</operator><name pos:start="493:46" pos:end="493:56">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="495:17" pos:end="495:51"><expr pos:start="495:17" pos:end="495:50"><name pos:start="495:17" pos:end="495:31"><name pos:start="495:17" pos:end="495:21">codec</name><operator pos:start="495:22" pos:end="495:23">-&gt;</operator><name pos:start="495:24" pos:end="495:31">channels</name></name> <operator pos:start="495:33" pos:end="495:33">=</operator> <name pos:start="495:35" pos:end="495:50"><name pos:start="495:35" pos:end="495:40">icodec</name><operator pos:start="495:41" pos:end="495:42">-&gt;</operator><name pos:start="495:43" pos:end="495:50">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="497:17" pos:end="497:55"><expr pos:start="497:17" pos:end="497:54"><name pos:start="497:17" pos:end="497:33"><name pos:start="497:17" pos:end="497:21">codec</name><operator pos:start="497:22" pos:end="497:23">-&gt;</operator><name pos:start="497:24" pos:end="497:33">frame_size</name></name> <operator pos:start="497:35" pos:end="497:35">=</operator> <name pos:start="497:37" pos:end="497:54"><name pos:start="497:37" pos:end="497:42">icodec</name><operator pos:start="497:43" pos:end="497:44">-&gt;</operator><name pos:start="497:45" pos:end="497:54">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="499:17" pos:end="499:71"><expr pos:start="499:17" pos:end="499:70"><name pos:start="499:17" pos:end="499:41"><name pos:start="499:17" pos:end="499:21">codec</name><operator pos:start="499:22" pos:end="499:23">-&gt;</operator><name pos:start="499:24" pos:end="499:41">audio_service_type</name></name> <operator pos:start="499:43" pos:end="499:43">=</operator> <name pos:start="499:45" pos:end="499:70"><name pos:start="499:45" pos:end="499:50">icodec</name><operator pos:start="499:51" pos:end="499:52">-&gt;</operator><name pos:start="499:53" pos:end="499:70">audio_service_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="501:17" pos:end="501:56"><expr pos:start="501:17" pos:end="501:55"><name pos:start="501:17" pos:end="501:34"><name pos:start="501:17" pos:end="501:21">codec</name><operator pos:start="501:22" pos:end="501:23">-&gt;</operator><name pos:start="501:24" pos:end="501:34">block_align</name></name><operator pos:start="501:35" pos:end="501:35">=</operator> <name pos:start="501:37" pos:end="501:55"><name pos:start="501:37" pos:end="501:42">icodec</name><operator pos:start="501:43" pos:end="501:44">-&gt;</operator><name pos:start="501:45" pos:end="501:55">block_align</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="503:17" pos:end="505:42"><if pos:start="503:17" pos:end="505:42">if<condition pos:start="503:19" pos:end="503:78">(<expr pos:start="503:20" pos:end="503:77"><name pos:start="503:20" pos:end="503:37"><name pos:start="503:20" pos:end="503:24">codec</name><operator pos:start="503:25" pos:end="503:26">-&gt;</operator><name pos:start="503:27" pos:end="503:37">block_align</name></name> <operator pos:start="503:39" pos:end="503:40">==</operator> <literal type="number" pos:start="503:42" pos:end="503:42">1</literal> <operator pos:start="503:44" pos:end="503:45">&amp;&amp;</operator> <name pos:start="503:47" pos:end="503:61"><name pos:start="503:47" pos:end="503:51">codec</name><operator pos:start="503:52" pos:end="503:53">-&gt;</operator><name pos:start="503:54" pos:end="503:61">codec_id</name></name> <operator pos:start="503:63" pos:end="503:64">==</operator> <name pos:start="503:66" pos:end="503:77">CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="505:21" pos:end="505:42"><block_content pos:start="505:21" pos:end="505:42">

                    <expr_stmt pos:start="505:21" pos:end="505:42"><expr pos:start="505:21" pos:end="505:41"><name pos:start="505:21" pos:end="505:38"><name pos:start="505:21" pos:end="505:25">codec</name><operator pos:start="505:26" pos:end="505:27">-&gt;</operator><name pos:start="505:28" pos:end="505:38">block_align</name></name><operator pos:start="505:39" pos:end="505:39">=</operator> <literal type="number" pos:start="505:41" pos:end="505:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="507:17" pos:end="509:42"><if pos:start="507:17" pos:end="509:42">if<condition pos:start="507:19" pos:end="507:51">(<expr pos:start="507:20" pos:end="507:50"><name pos:start="507:20" pos:end="507:34"><name pos:start="507:20" pos:end="507:24">codec</name><operator pos:start="507:25" pos:end="507:26">-&gt;</operator><name pos:start="507:27" pos:end="507:34">codec_id</name></name> <operator pos:start="507:36" pos:end="507:37">==</operator> <name pos:start="507:39" pos:end="507:50">CODEC_ID_AC3</name></expr>)</condition><block type="pseudo" pos:start="509:21" pos:end="509:42"><block_content pos:start="509:21" pos:end="509:42">

                    <expr_stmt pos:start="509:21" pos:end="509:42"><expr pos:start="509:21" pos:end="509:41"><name pos:start="509:21" pos:end="509:38"><name pos:start="509:21" pos:end="509:25">codec</name><operator pos:start="509:26" pos:end="509:27">-&gt;</operator><name pos:start="509:28" pos:end="509:38">block_align</name></name><operator pos:start="509:39" pos:end="509:39">=</operator> <literal type="number" pos:start="509:41" pos:end="509:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="511:17" pos:end="511:22">break;</break>

            <case pos:start="513:13" pos:end="513:36">case <expr pos:start="513:18" pos:end="513:35"><name pos:start="513:18" pos:end="513:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="515:17" pos:end="515:49"><expr pos:start="515:17" pos:end="515:48"><name pos:start="515:17" pos:end="515:30"><name pos:start="515:17" pos:end="515:21">codec</name><operator pos:start="515:22" pos:end="515:23">-&gt;</operator><name pos:start="515:24" pos:end="515:30">pix_fmt</name></name> <operator pos:start="515:32" pos:end="515:32">=</operator> <name pos:start="515:34" pos:end="515:48"><name pos:start="515:34" pos:end="515:39">icodec</name><operator pos:start="515:40" pos:end="515:41">-&gt;</operator><name pos:start="515:42" pos:end="515:48">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="517:17" pos:end="517:45"><expr pos:start="517:17" pos:end="517:44"><name pos:start="517:17" pos:end="517:28"><name pos:start="517:17" pos:end="517:21">codec</name><operator pos:start="517:22" pos:end="517:23">-&gt;</operator><name pos:start="517:24" pos:end="517:28">width</name></name> <operator pos:start="517:30" pos:end="517:30">=</operator> <name pos:start="517:32" pos:end="517:44"><name pos:start="517:32" pos:end="517:37">icodec</name><operator pos:start="517:38" pos:end="517:39">-&gt;</operator><name pos:start="517:40" pos:end="517:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="519:17" pos:end="519:47"><expr pos:start="519:17" pos:end="519:46"><name pos:start="519:17" pos:end="519:29"><name pos:start="519:17" pos:end="519:21">codec</name><operator pos:start="519:22" pos:end="519:23">-&gt;</operator><name pos:start="519:24" pos:end="519:29">height</name></name> <operator pos:start="519:31" pos:end="519:31">=</operator> <name pos:start="519:33" pos:end="519:46"><name pos:start="519:33" pos:end="519:38">icodec</name><operator pos:start="519:39" pos:end="519:40">-&gt;</operator><name pos:start="519:41" pos:end="519:46">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="521:17" pos:end="521:59"><expr pos:start="521:17" pos:end="521:58"><name pos:start="521:17" pos:end="521:35"><name pos:start="521:17" pos:end="521:21">codec</name><operator pos:start="521:22" pos:end="521:23">-&gt;</operator><name pos:start="521:24" pos:end="521:35">has_b_frames</name></name> <operator pos:start="521:37" pos:end="521:37">=</operator> <name pos:start="521:39" pos:end="521:58"><name pos:start="521:39" pos:end="521:44">icodec</name><operator pos:start="521:45" pos:end="521:46">-&gt;</operator><name pos:start="521:47" pos:end="521:58">has_b_frames</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="523:17" pos:end="535:17"><if pos:start="523:17" pos:end="535:17">if <condition pos:start="523:20" pos:end="523:52">(<expr pos:start="523:21" pos:end="523:51"><operator pos:start="523:21" pos:end="523:21">!</operator><name pos:start="523:22" pos:end="523:51"><name pos:start="523:22" pos:end="523:26">codec</name><operator pos:start="523:27" pos:end="523:28">-&gt;</operator><name pos:start="523:29" pos:end="523:47">sample_aspect_ratio</name><operator pos:start="523:48" pos:end="523:48">.</operator><name pos:start="523:49" pos:end="523:51">num</name></name></expr>)</condition> <block pos:start="523:54" pos:end="535:17">{<block_content pos:start="525:21" pos:end="533:81">

                    <expr_stmt pos:start="525:21" pos:end="533:81"><expr pos:start="525:21" pos:end="533:80"><name pos:start="525:21" pos:end="525:46"><name pos:start="525:21" pos:end="525:25">codec</name><operator pos:start="525:26" pos:end="525:27">-&gt;</operator><name pos:start="525:28" pos:end="525:46">sample_aspect_ratio</name></name> <operator pos:start="525:48" pos:end="525:48">=</operator>

                    <name pos:start="527:21" pos:end="527:48"><name pos:start="527:21" pos:end="527:23">ost</name><operator pos:start="527:24" pos:end="527:25">-&gt;</operator><name pos:start="527:26" pos:end="527:27">st</name><operator pos:start="527:28" pos:end="527:29">-&gt;</operator><name pos:start="527:30" pos:end="527:48">sample_aspect_ratio</name></name> <operator pos:start="527:50" pos:end="527:50">=</operator>

                        <ternary pos:start="529:25" pos:end="533:80"><condition pos:start="529:25" pos:end="529:58"><expr pos:start="529:25" pos:end="529:56"><name pos:start="529:25" pos:end="529:56"><name pos:start="529:25" pos:end="529:27">ist</name><operator pos:start="529:28" pos:end="529:29">-&gt;</operator><name pos:start="529:30" pos:end="529:31">st</name><operator pos:start="529:32" pos:end="529:33">-&gt;</operator><name pos:start="529:34" pos:end="529:52">sample_aspect_ratio</name><operator pos:start="529:53" pos:end="529:53">.</operator><name pos:start="529:54" pos:end="529:56">num</name></name></expr> ?</condition><then pos:start="529:60" pos:end="529:87"> <expr pos:start="529:60" pos:end="529:87"><name pos:start="529:60" pos:end="529:87"><name pos:start="529:60" pos:end="529:62">ist</name><operator pos:start="529:63" pos:end="529:64">-&gt;</operator><name pos:start="529:65" pos:end="529:66">st</name><operator pos:start="529:67" pos:end="529:68">-&gt;</operator><name pos:start="529:69" pos:end="529:87">sample_aspect_ratio</name></name></expr> </then><else pos:start="529:89" pos:end="533:80">:

                        <expr pos:start="531:25" pos:end="533:80"><ternary pos:start="531:25" pos:end="533:80"><condition pos:start="531:25" pos:end="531:65"><expr pos:start="531:25" pos:end="531:63"><name pos:start="531:25" pos:end="531:63"><name pos:start="531:25" pos:end="531:27">ist</name><operator pos:start="531:28" pos:end="531:29">-&gt;</operator><name pos:start="531:30" pos:end="531:31">st</name><operator pos:start="531:32" pos:end="531:33">-&gt;</operator><name pos:start="531:34" pos:end="531:38">codec</name><operator pos:start="531:39" pos:end="531:40">-&gt;</operator><name pos:start="531:41" pos:end="531:59">sample_aspect_ratio</name><operator pos:start="531:60" pos:end="531:60">.</operator><name pos:start="531:61" pos:end="531:63">num</name></name></expr> ?</condition><then pos:start="533:25" pos:end="533:59">

                        <expr pos:start="533:25" pos:end="533:59"><name pos:start="533:25" pos:end="533:59"><name pos:start="533:25" pos:end="533:27">ist</name><operator pos:start="533:28" pos:end="533:29">-&gt;</operator><name pos:start="533:30" pos:end="533:31">st</name><operator pos:start="533:32" pos:end="533:33">-&gt;</operator><name pos:start="533:34" pos:end="533:38">codec</name><operator pos:start="533:39" pos:end="533:40">-&gt;</operator><name pos:start="533:41" pos:end="533:59">sample_aspect_ratio</name></name></expr> </then><else pos:start="533:61" pos:end="533:80">: <expr pos:start="533:63" pos:end="533:80"><operator pos:start="533:63" pos:end="533:63">(</operator><name pos:start="533:64" pos:end="533:73">AVRational</name><operator pos:start="533:74" pos:end="533:74">)</operator><block pos:start="533:75" pos:end="533:80">{<expr pos:start="533:76" pos:end="533:76"><literal type="number" pos:start="533:76" pos:end="533:76">0</literal></expr>, <expr pos:start="533:79" pos:end="533:79"><literal type="number" pos:start="533:79" pos:end="533:79">1</literal></expr>}</block></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="537:17" pos:end="537:22">break;</break>

            <case pos:start="539:13" pos:end="539:39">case <expr pos:start="539:18" pos:end="539:38"><name pos:start="539:18" pos:end="539:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="541:17" pos:end="541:45"><expr pos:start="541:17" pos:end="541:44"><name pos:start="541:17" pos:end="541:28"><name pos:start="541:17" pos:end="541:21">codec</name><operator pos:start="541:22" pos:end="541:23">-&gt;</operator><name pos:start="541:24" pos:end="541:28">width</name></name> <operator pos:start="541:30" pos:end="541:30">=</operator> <name pos:start="541:32" pos:end="541:44"><name pos:start="541:32" pos:end="541:37">icodec</name><operator pos:start="541:38" pos:end="541:39">-&gt;</operator><name pos:start="541:40" pos:end="541:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="543:17" pos:end="543:47"><expr pos:start="543:17" pos:end="543:46"><name pos:start="543:17" pos:end="543:29"><name pos:start="543:17" pos:end="543:21">codec</name><operator pos:start="543:22" pos:end="543:23">-&gt;</operator><name pos:start="543:24" pos:end="543:29">height</name></name> <operator pos:start="543:31" pos:end="543:31">=</operator> <name pos:start="543:33" pos:end="543:46"><name pos:start="543:33" pos:end="543:38">icodec</name><operator pos:start="543:39" pos:end="543:40">-&gt;</operator><name pos:start="543:41" pos:end="543:46">height</name></name></expr>;</expr_stmt>

                <break pos:start="545:17" pos:end="545:22">break;</break>

            <case pos:start="547:13" pos:end="547:35">case <expr pos:start="547:18" pos:end="547:34"><name pos:start="547:18" pos:end="547:34">AVMEDIA_TYPE_DATA</name></expr>:</case>

                <break pos:start="549:17" pos:end="549:22">break;</break>

            <default pos:start="551:13" pos:end="551:20">default:</default>

                <expr_stmt pos:start="553:17" pos:end="553:24"><expr pos:start="553:17" pos:end="553:23"><call pos:start="553:17" pos:end="553:23"><name pos:start="553:17" pos:end="553:21">abort</name><argument_list pos:start="553:22" pos:end="553:23">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="557:11" pos:end="783:9">else <block pos:start="557:16" pos:end="783:9">{<block_content pos:start="559:13" pos:end="781:13">

            <if_stmt pos:start="559:13" pos:end="561:74"><if pos:start="559:13" pos:end="561:74">if <condition pos:start="559:16" pos:end="559:26">(<expr pos:start="559:17" pos:end="559:25"><operator pos:start="559:17" pos:end="559:17">!</operator><name pos:start="559:18" pos:end="559:25"><name pos:start="559:18" pos:end="559:20">ost</name><operator pos:start="559:21" pos:end="559:22">-&gt;</operator><name pos:start="559:23" pos:end="559:25">enc</name></name></expr>)</condition><block type="pseudo" pos:start="561:17" pos:end="561:74"><block_content pos:start="561:17" pos:end="561:74">

                <expr_stmt pos:start="561:17" pos:end="561:74"><expr pos:start="561:17" pos:end="561:73"><name pos:start="561:17" pos:end="561:24"><name pos:start="561:17" pos:end="561:19">ost</name><operator pos:start="561:20" pos:end="561:21">-&gt;</operator><name pos:start="561:22" pos:end="561:24">enc</name></name> <operator pos:start="561:26" pos:end="561:26">=</operator> <call pos:start="561:28" pos:end="561:73"><name pos:start="561:28" pos:end="561:47">avcodec_find_encoder</name><argument_list pos:start="561:48" pos:end="561:73">(<argument pos:start="561:49" pos:end="561:72"><expr pos:start="561:49" pos:end="561:72"><name pos:start="561:49" pos:end="561:72"><name pos:start="561:49" pos:end="561:51">ost</name><operator pos:start="561:52" pos:end="561:53">-&gt;</operator><name pos:start="561:54" pos:end="561:55">st</name><operator pos:start="561:56" pos:end="561:57">-&gt;</operator><name pos:start="561:58" pos:end="561:62">codec</name><operator pos:start="561:63" pos:end="561:64">-&gt;</operator><name pos:start="561:65" pos:end="561:72">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="563:13" pos:end="729:13">switch<condition pos:start="563:19" pos:end="563:37">(<expr pos:start="563:20" pos:end="563:36"><name pos:start="563:20" pos:end="563:36"><name pos:start="563:20" pos:end="563:24">codec</name><operator pos:start="563:25" pos:end="563:26">-&gt;</operator><name pos:start="563:27" pos:end="563:36">codec_type</name></name></expr>)</condition> <block pos:start="563:39" pos:end="729:13">{<block_content pos:start="565:13" pos:end="727:22">

            <case pos:start="565:13" pos:end="565:36">case <expr pos:start="565:18" pos:end="565:35"><name pos:start="565:18" pos:end="565:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="567:17" pos:end="567:47"><expr pos:start="567:17" pos:end="567:46"><name pos:start="567:17" pos:end="567:25"><name pos:start="567:17" pos:end="567:19">ost</name><operator pos:start="567:20" pos:end="567:21">-&gt;</operator><name pos:start="567:22" pos:end="567:25">fifo</name></name><operator pos:start="567:26" pos:end="567:26">=</operator> <call pos:start="567:28" pos:end="567:46"><name pos:start="567:28" pos:end="567:40">av_fifo_alloc</name><argument_list pos:start="567:41" pos:end="567:46">(<argument pos:start="567:42" pos:end="567:45"><expr pos:start="567:42" pos:end="567:45"><literal type="number" pos:start="567:42" pos:end="567:45">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="569:17" pos:end="571:30"><if pos:start="569:17" pos:end="571:30">if<condition pos:start="569:19" pos:end="569:30">(<expr pos:start="569:20" pos:end="569:29"><operator pos:start="569:20" pos:end="569:20">!</operator><name pos:start="569:21" pos:end="569:29"><name pos:start="569:21" pos:end="569:23">ost</name><operator pos:start="569:24" pos:end="569:25">-&gt;</operator><name pos:start="569:26" pos:end="569:29">fifo</name></name></expr>)</condition><block type="pseudo" pos:start="571:21" pos:end="571:30"><block_content pos:start="571:21" pos:end="571:30">

                    <goto pos:start="571:21" pos:end="571:30">goto <name pos:start="571:26" pos:end="571:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:91"><expr pos:start="573:17" pos:end="573:90"><name pos:start="573:17" pos:end="573:34"><name pos:start="573:17" pos:end="573:19">ost</name><operator pos:start="573:20" pos:end="573:21">-&gt;</operator><name pos:start="573:22" pos:end="573:34">reformat_pair</name></name> <operator pos:start="573:36" pos:end="573:36">=</operator> <call pos:start="573:38" pos:end="573:90"><name pos:start="573:38" pos:end="573:51">MAKE_SFMT_PAIR</name><argument_list pos:start="573:52" pos:end="573:90">(<argument pos:start="573:53" pos:end="573:70"><expr pos:start="573:53" pos:end="573:70"><name pos:start="573:53" pos:end="573:70">AV_SAMPLE_FMT_NONE</name></expr></argument>,<argument pos:start="573:72" pos:end="573:89"><expr pos:start="573:72" pos:end="573:89"><name pos:start="573:72" pos:end="573:89">AV_SAMPLE_FMT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="575:17" pos:end="579:17"><if pos:start="575:17" pos:end="579:17">if <condition pos:start="575:20" pos:end="575:40">(<expr pos:start="575:21" pos:end="575:39"><operator pos:start="575:21" pos:end="575:21">!</operator><name pos:start="575:22" pos:end="575:39"><name pos:start="575:22" pos:end="575:26">codec</name><operator pos:start="575:27" pos:end="575:28">-&gt;</operator><name pos:start="575:29" pos:end="575:39">sample_rate</name></name></expr>)</condition> <block pos:start="575:42" pos:end="579:17">{<block_content pos:start="577:21" pos:end="577:61">

                    <expr_stmt pos:start="577:21" pos:end="577:61"><expr pos:start="577:21" pos:end="577:60"><name pos:start="577:21" pos:end="577:38"><name pos:start="577:21" pos:end="577:25">codec</name><operator pos:start="577:26" pos:end="577:27">-&gt;</operator><name pos:start="577:28" pos:end="577:38">sample_rate</name></name> <operator pos:start="577:40" pos:end="577:40">=</operator> <name pos:start="577:42" pos:end="577:60"><name pos:start="577:42" pos:end="577:47">icodec</name><operator pos:start="577:48" pos:end="577:49">-&gt;</operator><name pos:start="577:50" pos:end="577:60">sample_rate</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="581:17" pos:end="581:54"><expr pos:start="581:17" pos:end="581:53"><call pos:start="581:17" pos:end="581:53"><name pos:start="581:17" pos:end="581:34">choose_sample_rate</name><argument_list pos:start="581:35" pos:end="581:53">(<argument pos:start="581:36" pos:end="581:42"><expr pos:start="581:36" pos:end="581:42"><name pos:start="581:36" pos:end="581:42"><name pos:start="581:36" pos:end="581:38">ost</name><operator pos:start="581:39" pos:end="581:40">-&gt;</operator><name pos:start="581:41" pos:end="581:42">st</name></name></expr></argument>, <argument pos:start="581:45" pos:end="581:52"><expr pos:start="581:45" pos:end="581:52"><name pos:start="581:45" pos:end="581:52"><name pos:start="581:45" pos:end="581:47">ost</name><operator pos:start="581:48" pos:end="581:49">-&gt;</operator><name pos:start="581:50" pos:end="581:52">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="583:17" pos:end="583:71"><expr pos:start="583:17" pos:end="583:70"><name pos:start="583:17" pos:end="583:32"><name pos:start="583:17" pos:end="583:21">codec</name><operator pos:start="583:22" pos:end="583:23">-&gt;</operator><name pos:start="583:24" pos:end="583:32">time_base</name></name> <operator pos:start="583:34" pos:end="583:34">=</operator> <operator pos:start="583:36" pos:end="583:36">(</operator><name pos:start="583:37" pos:end="583:46">AVRational</name><operator pos:start="583:47" pos:end="583:47">)</operator><block pos:start="583:48" pos:end="583:70">{<expr pos:start="583:49" pos:end="583:49"><literal type="number" pos:start="583:49" pos:end="583:49">1</literal></expr>, <expr pos:start="583:52" pos:end="583:69"><name pos:start="583:52" pos:end="583:69"><name pos:start="583:52" pos:end="583:56">codec</name><operator pos:start="583:57" pos:end="583:58">-&gt;</operator><name pos:start="583:59" pos:end="583:69">sample_rate</name></name></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="585:17" pos:end="587:59"><if pos:start="585:17" pos:end="587:59">if <condition pos:start="585:20" pos:end="585:60">(<expr pos:start="585:21" pos:end="585:59"><name pos:start="585:21" pos:end="585:37"><name pos:start="585:21" pos:end="585:25">codec</name><operator pos:start="585:26" pos:end="585:27">-&gt;</operator><name pos:start="585:28" pos:end="585:37">sample_fmt</name></name> <operator pos:start="585:39" pos:end="585:40">==</operator> <name pos:start="585:42" pos:end="585:59">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="587:21" pos:end="587:59"><block_content pos:start="587:21" pos:end="587:59">

                    <expr_stmt pos:start="587:21" pos:end="587:59"><expr pos:start="587:21" pos:end="587:58"><name pos:start="587:21" pos:end="587:37"><name pos:start="587:21" pos:end="587:25">codec</name><operator pos:start="587:26" pos:end="587:27">-&gt;</operator><name pos:start="587:28" pos:end="587:37">sample_fmt</name></name> <operator pos:start="587:39" pos:end="587:39">=</operator> <name pos:start="587:41" pos:end="587:58"><name pos:start="587:41" pos:end="587:46">icodec</name><operator pos:start="587:47" pos:end="587:48">-&gt;</operator><name pos:start="587:49" pos:end="587:58">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="589:17" pos:end="589:53"><expr pos:start="589:17" pos:end="589:52"><call pos:start="589:17" pos:end="589:52"><name pos:start="589:17" pos:end="589:33">choose_sample_fmt</name><argument_list pos:start="589:34" pos:end="589:52">(<argument pos:start="589:35" pos:end="589:41"><expr pos:start="589:35" pos:end="589:41"><name pos:start="589:35" pos:end="589:41"><name pos:start="589:35" pos:end="589:37">ost</name><operator pos:start="589:38" pos:end="589:39">-&gt;</operator><name pos:start="589:40" pos:end="589:41">st</name></name></expr></argument>, <argument pos:start="589:44" pos:end="589:51"><expr pos:start="589:44" pos:end="589:51"><name pos:start="589:44" pos:end="589:51"><name pos:start="589:44" pos:end="589:46">ost</name><operator pos:start="589:47" pos:end="589:48">-&gt;</operator><name pos:start="589:49" pos:end="589:51">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="591:17" pos:end="597:17"><if pos:start="591:17" pos:end="597:17">if <condition pos:start="591:20" pos:end="591:37">(<expr pos:start="591:21" pos:end="591:36"><operator pos:start="591:21" pos:end="591:21">!</operator><name pos:start="591:22" pos:end="591:36"><name pos:start="591:22" pos:end="591:26">codec</name><operator pos:start="591:27" pos:end="591:28">-&gt;</operator><name pos:start="591:29" pos:end="591:36">channels</name></name></expr>)</condition> <block pos:start="591:39" pos:end="597:17">{<block_content pos:start="593:21" pos:end="595:67">

                    <expr_stmt pos:start="593:21" pos:end="593:55"><expr pos:start="593:21" pos:end="593:54"><name pos:start="593:21" pos:end="593:35"><name pos:start="593:21" pos:end="593:25">codec</name><operator pos:start="593:26" pos:end="593:27">-&gt;</operator><name pos:start="593:28" pos:end="593:35">channels</name></name> <operator pos:start="593:37" pos:end="593:37">=</operator> <name pos:start="593:39" pos:end="593:54"><name pos:start="593:39" pos:end="593:44">icodec</name><operator pos:start="593:45" pos:end="593:46">-&gt;</operator><name pos:start="593:47" pos:end="593:54">channels</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="595:21" pos:end="595:67"><expr pos:start="595:21" pos:end="595:66"><name pos:start="595:21" pos:end="595:41"><name pos:start="595:21" pos:end="595:25">codec</name><operator pos:start="595:26" pos:end="595:27">-&gt;</operator><name pos:start="595:28" pos:end="595:41">channel_layout</name></name> <operator pos:start="595:43" pos:end="595:43">=</operator> <name pos:start="595:45" pos:end="595:66"><name pos:start="595:45" pos:end="595:50">icodec</name><operator pos:start="595:51" pos:end="595:52">-&gt;</operator><name pos:start="595:53" pos:end="595:66">channel_layout</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="599:17" pos:end="601:46"><if pos:start="599:17" pos:end="601:46">if <condition pos:start="599:20" pos:end="599:96">(<expr pos:start="599:21" pos:end="599:95"><call pos:start="599:21" pos:end="599:76"><name pos:start="599:21" pos:end="599:53">av_get_channel_layout_nb_channels</name><argument_list pos:start="599:54" pos:end="599:76">(<argument pos:start="599:55" pos:end="599:75"><expr pos:start="599:55" pos:end="599:75"><name pos:start="599:55" pos:end="599:75"><name pos:start="599:55" pos:end="599:59">codec</name><operator pos:start="599:60" pos:end="599:61">-&gt;</operator><name pos:start="599:62" pos:end="599:75">channel_layout</name></name></expr></argument>)</argument_list></call> <operator pos:start="599:78" pos:end="599:79">!=</operator> <name pos:start="599:81" pos:end="599:95"><name pos:start="599:81" pos:end="599:85">codec</name><operator pos:start="599:86" pos:end="599:87">-&gt;</operator><name pos:start="599:88" pos:end="599:95">channels</name></name></expr>)</condition><block type="pseudo" pos:start="601:21" pos:end="601:46"><block_content pos:start="601:21" pos:end="601:46">

                    <expr_stmt pos:start="601:21" pos:end="601:46"><expr pos:start="601:21" pos:end="601:45"><name pos:start="601:21" pos:end="601:41"><name pos:start="601:21" pos:end="601:25">codec</name><operator pos:start="601:26" pos:end="601:27">-&gt;</operator><name pos:start="601:28" pos:end="601:41">channel_layout</name></name> <operator pos:start="601:43" pos:end="601:43">=</operator> <literal type="number" pos:start="601:45" pos:end="601:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:105"><expr pos:start="603:17" pos:end="603:104"><name pos:start="603:17" pos:end="603:35"><name pos:start="603:17" pos:end="603:19">ost</name><operator pos:start="603:20" pos:end="603:21">-&gt;</operator><name pos:start="603:22" pos:end="603:35">audio_resample</name></name> <operator pos:start="603:37" pos:end="603:37">=</operator> <name pos:start="603:39" pos:end="603:56"><name pos:start="603:39" pos:end="603:43">codec</name><operator pos:start="603:44" pos:end="603:45">-&gt;</operator><name pos:start="603:46" pos:end="603:56">sample_rate</name></name> <operator pos:start="603:58" pos:end="603:59">!=</operator> <name pos:start="603:61" pos:end="603:79"><name pos:start="603:61" pos:end="603:66">icodec</name><operator pos:start="603:67" pos:end="603:68">-&gt;</operator><name pos:start="603:69" pos:end="603:79">sample_rate</name></name> <operator pos:start="603:81" pos:end="603:82">||</operator> <name pos:start="603:84" pos:end="603:100">audio_sync_method</name> <operator pos:start="603:102" pos:end="603:102">&gt;</operator> <literal type="number" pos:start="603:104" pos:end="603:104">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="605:17" pos:end="605:59"><expr pos:start="605:17" pos:end="605:58"><name pos:start="605:17" pos:end="605:40"><name pos:start="605:17" pos:end="605:22">icodec</name><operator pos:start="605:23" pos:end="605:24">-&gt;</operator><name pos:start="605:25" pos:end="605:40">request_channels</name></name> <operator pos:start="605:42" pos:end="605:42">=</operator> <name pos:start="605:44" pos:end="605:58"><name pos:start="605:44" pos:end="605:48">codec</name><operator pos:start="605:49" pos:end="605:50">-&gt;</operator><name pos:start="605:51" pos:end="605:58">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="607:17" pos:end="607:41"><expr pos:start="607:17" pos:end="607:40"><name pos:start="607:17" pos:end="607:36"><name pos:start="607:17" pos:end="607:19">ist</name><operator pos:start="607:20" pos:end="607:21">-&gt;</operator><name pos:start="607:22" pos:end="607:36">decoding_needed</name></name> <operator pos:start="607:38" pos:end="607:38">=</operator> <literal type="number" pos:start="607:40" pos:end="607:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="609:17" pos:end="609:41"><expr pos:start="609:17" pos:end="609:40"><name pos:start="609:17" pos:end="609:36"><name pos:start="609:17" pos:end="609:19">ost</name><operator pos:start="609:20" pos:end="609:21">-&gt;</operator><name pos:start="609:22" pos:end="609:36">encoding_needed</name></name> <operator pos:start="609:38" pos:end="609:38">=</operator> <literal type="number" pos:start="609:40" pos:end="609:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="611:17" pos:end="611:63"><expr pos:start="611:17" pos:end="611:62"><name pos:start="611:17" pos:end="611:40"><name pos:start="611:17" pos:end="611:19">ost</name><operator pos:start="611:20" pos:end="611:21">-&gt;</operator><name pos:start="611:22" pos:end="611:40">resample_sample_fmt</name></name>  <operator pos:start="611:43" pos:end="611:43">=</operator> <name pos:start="611:45" pos:end="611:62"><name pos:start="611:45" pos:end="611:50">icodec</name><operator pos:start="611:51" pos:end="611:52">-&gt;</operator><name pos:start="611:53" pos:end="611:62">sample_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="613:17" pos:end="613:64"><expr pos:start="613:17" pos:end="613:63"><name pos:start="613:17" pos:end="613:41"><name pos:start="613:17" pos:end="613:19">ost</name><operator pos:start="613:20" pos:end="613:21">-&gt;</operator><name pos:start="613:22" pos:end="613:41">resample_sample_rate</name></name> <operator pos:start="613:43" pos:end="613:43">=</operator> <name pos:start="613:45" pos:end="613:63"><name pos:start="613:45" pos:end="613:50">icodec</name><operator pos:start="613:51" pos:end="613:52">-&gt;</operator><name pos:start="613:53" pos:end="613:63">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="615:17" pos:end="615:61"><expr pos:start="615:17" pos:end="615:60"><name pos:start="615:17" pos:end="615:38"><name pos:start="615:17" pos:end="615:19">ost</name><operator pos:start="615:20" pos:end="615:21">-&gt;</operator><name pos:start="615:22" pos:end="615:38">resample_channels</name></name>    <operator pos:start="615:43" pos:end="615:43">=</operator> <name pos:start="615:45" pos:end="615:60"><name pos:start="615:45" pos:end="615:50">icodec</name><operator pos:start="615:51" pos:end="615:52">-&gt;</operator><name pos:start="615:53" pos:end="615:60">channels</name></name></expr>;</expr_stmt>

                <break pos:start="617:17" pos:end="617:22">break;</break>

            <case pos:start="619:13" pos:end="619:36">case <expr pos:start="619:18" pos:end="619:35"><name pos:start="619:18" pos:end="619:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="621:17" pos:end="623:53"><if pos:start="621:17" pos:end="623:53">if <condition pos:start="621:20" pos:end="621:51">(<expr pos:start="621:21" pos:end="621:50"><name pos:start="621:21" pos:end="621:34"><name pos:start="621:21" pos:end="621:25">codec</name><operator pos:start="621:26" pos:end="621:27">-&gt;</operator><name pos:start="621:28" pos:end="621:34">pix_fmt</name></name> <operator pos:start="621:36" pos:end="621:37">==</operator> <name pos:start="621:39" pos:end="621:50">PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="623:21" pos:end="623:53"><block_content pos:start="623:21" pos:end="623:53">

                    <expr_stmt pos:start="623:21" pos:end="623:53"><expr pos:start="623:21" pos:end="623:52"><name pos:start="623:21" pos:end="623:34"><name pos:start="623:21" pos:end="623:25">codec</name><operator pos:start="623:26" pos:end="623:27">-&gt;</operator><name pos:start="623:28" pos:end="623:34">pix_fmt</name></name> <operator pos:start="623:36" pos:end="623:36">=</operator> <name pos:start="623:38" pos:end="623:52"><name pos:start="623:38" pos:end="623:43">icodec</name><operator pos:start="623:44" pos:end="623:45">-&gt;</operator><name pos:start="623:46" pos:end="623:52">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="625:17" pos:end="625:52"><expr pos:start="625:17" pos:end="625:51"><call pos:start="625:17" pos:end="625:51"><name pos:start="625:17" pos:end="625:32">choose_pixel_fmt</name><argument_list pos:start="625:33" pos:end="625:51">(<argument pos:start="625:34" pos:end="625:40"><expr pos:start="625:34" pos:end="625:40"><name pos:start="625:34" pos:end="625:40"><name pos:start="625:34" pos:end="625:36">ost</name><operator pos:start="625:37" pos:end="625:38">-&gt;</operator><name pos:start="625:39" pos:end="625:40">st</name></name></expr></argument>, <argument pos:start="625:43" pos:end="625:50"><expr pos:start="625:43" pos:end="625:50"><name pos:start="625:43" pos:end="625:50"><name pos:start="625:43" pos:end="625:45">ost</name><operator pos:start="625:46" pos:end="625:47">-&gt;</operator><name pos:start="625:48" pos:end="625:50">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="629:17" pos:end="635:17"><if pos:start="629:17" pos:end="635:17">if <condition pos:start="629:20" pos:end="629:60">(<expr pos:start="629:21" pos:end="629:59"><name pos:start="629:21" pos:end="629:43"><name pos:start="629:21" pos:end="629:23">ost</name><operator pos:start="629:24" pos:end="629:25">-&gt;</operator><name pos:start="629:26" pos:end="629:27">st</name><operator pos:start="629:28" pos:end="629:29">-&gt;</operator><name pos:start="629:30" pos:end="629:34">codec</name><operator pos:start="629:35" pos:end="629:36">-&gt;</operator><name pos:start="629:37" pos:end="629:43">pix_fmt</name></name> <operator pos:start="629:45" pos:end="629:46">==</operator> <name pos:start="629:48" pos:end="629:59">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="629:62" pos:end="635:17">{<block_content pos:start="631:21" pos:end="633:35">

                    <expr_stmt pos:start="631:21" pos:end="631:97"><expr pos:start="631:21" pos:end="631:96"><call pos:start="631:21" pos:end="631:96"><name pos:start="631:21" pos:end="631:27">fprintf</name><argument_list pos:start="631:28" pos:end="631:96">(<argument pos:start="631:29" pos:end="631:34"><expr pos:start="631:29" pos:end="631:34"><name pos:start="631:29" pos:end="631:34">stderr</name></expr></argument>, <argument pos:start="631:37" pos:end="631:95"><expr pos:start="631:37" pos:end="631:95"><literal type="string" pos:start="631:37" pos:end="631:95">"Video pixel format is unknown, stream cannot be encoded\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="633:21" pos:end="633:35"><expr pos:start="633:21" pos:end="633:34"><call pos:start="633:21" pos:end="633:34"><name pos:start="633:21" pos:end="633:31">ffmpeg_exit</name><argument_list pos:start="633:32" pos:end="633:34">(<argument pos:start="633:33" pos:end="633:33"><expr pos:start="633:33" pos:end="633:33"><literal type="number" pos:start="633:33" pos:end="633:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="639:17" pos:end="645:17"><if pos:start="639:17" pos:end="645:17">if <condition pos:start="639:20" pos:end="639:52">(<expr pos:start="639:21" pos:end="639:51"><operator pos:start="639:21" pos:end="639:21">!</operator><name pos:start="639:22" pos:end="639:33"><name pos:start="639:22" pos:end="639:26">codec</name><operator pos:start="639:27" pos:end="639:28">-&gt;</operator><name pos:start="639:29" pos:end="639:33">width</name></name> <operator pos:start="639:35" pos:end="639:36">||</operator> <operator pos:start="639:38" pos:end="639:38">!</operator><name pos:start="639:39" pos:end="639:51"><name pos:start="639:39" pos:end="639:43">codec</name><operator pos:start="639:44" pos:end="639:45">-&gt;</operator><name pos:start="639:46" pos:end="639:51">height</name></name></expr>)</condition> <block pos:start="639:54" pos:end="645:17">{<block_content pos:start="641:21" pos:end="643:51">

                    <expr_stmt pos:start="641:21" pos:end="641:50"><expr pos:start="641:21" pos:end="641:49"><name pos:start="641:21" pos:end="641:32"><name pos:start="641:21" pos:end="641:25">codec</name><operator pos:start="641:26" pos:end="641:27">-&gt;</operator><name pos:start="641:28" pos:end="641:32">width</name></name>  <operator pos:start="641:35" pos:end="641:35">=</operator> <name pos:start="641:37" pos:end="641:49"><name pos:start="641:37" pos:end="641:42">icodec</name><operator pos:start="641:43" pos:end="641:44">-&gt;</operator><name pos:start="641:45" pos:end="641:49">width</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="643:21" pos:end="643:51"><expr pos:start="643:21" pos:end="643:50"><name pos:start="643:21" pos:end="643:33"><name pos:start="643:21" pos:end="643:25">codec</name><operator pos:start="643:26" pos:end="643:27">-&gt;</operator><name pos:start="643:28" pos:end="643:33">height</name></name> <operator pos:start="643:35" pos:end="643:35">=</operator> <name pos:start="643:37" pos:end="643:50"><name pos:start="643:37" pos:end="643:42">icodec</name><operator pos:start="643:43" pos:end="643:44">-&gt;</operator><name pos:start="643:45" pos:end="643:50">height</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="649:17" pos:end="653:72"><expr pos:start="649:17" pos:end="653:71"><name pos:start="649:17" pos:end="649:35"><name pos:start="649:17" pos:end="649:19">ost</name><operator pos:start="649:20" pos:end="649:21">-&gt;</operator><name pos:start="649:22" pos:end="649:35">video_resample</name></name> <operator pos:start="649:37" pos:end="649:37">=</operator> <name pos:start="649:39" pos:end="649:50"><name pos:start="649:39" pos:end="649:43">codec</name><operator pos:start="649:44" pos:end="649:45">-&gt;</operator><name pos:start="649:46" pos:end="649:50">width</name></name>   <operator pos:start="649:54" pos:end="649:55">!=</operator> <name pos:start="649:57" pos:end="649:69"><name pos:start="649:57" pos:end="649:62">icodec</name><operator pos:start="649:63" pos:end="649:64">-&gt;</operator><name pos:start="649:65" pos:end="649:69">width</name></name>  <operator pos:start="649:72" pos:end="649:73">||</operator>

                                      <name pos:start="651:39" pos:end="651:51"><name pos:start="651:39" pos:end="651:43">codec</name><operator pos:start="651:44" pos:end="651:45">-&gt;</operator><name pos:start="651:46" pos:end="651:51">height</name></name>  <operator pos:start="651:54" pos:end="651:55">!=</operator> <name pos:start="651:57" pos:end="651:70"><name pos:start="651:57" pos:end="651:62">icodec</name><operator pos:start="651:63" pos:end="651:64">-&gt;</operator><name pos:start="651:65" pos:end="651:70">height</name></name> <operator pos:start="651:72" pos:end="651:73">||</operator>

                                      <name pos:start="653:39" pos:end="653:52"><name pos:start="653:39" pos:end="653:43">codec</name><operator pos:start="653:44" pos:end="653:45">-&gt;</operator><name pos:start="653:46" pos:end="653:52">pix_fmt</name></name> <operator pos:start="653:54" pos:end="653:55">!=</operator> <name pos:start="653:57" pos:end="653:71"><name pos:start="653:57" pos:end="653:62">icodec</name><operator pos:start="653:63" pos:end="653:64">-&gt;</operator><name pos:start="653:65" pos:end="653:71">pix_fmt</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="655:17" pos:end="659:17"><if pos:start="655:17" pos:end="659:17">if <condition pos:start="655:20" pos:end="655:40">(<expr pos:start="655:21" pos:end="655:39"><name pos:start="655:21" pos:end="655:39"><name pos:start="655:21" pos:end="655:23">ost</name><operator pos:start="655:24" pos:end="655:25">-&gt;</operator><name pos:start="655:26" pos:end="655:39">video_resample</name></name></expr>)</condition> <block pos:start="655:42" pos:end="659:17">{<block_content pos:start="657:21" pos:end="657:74">

                    <expr_stmt pos:start="657:21" pos:end="657:74"><expr pos:start="657:21" pos:end="657:73"><name pos:start="657:21" pos:end="657:46"><name pos:start="657:21" pos:end="657:25">codec</name><operator pos:start="657:26" pos:end="657:27">-&gt;</operator><name pos:start="657:28" pos:end="657:46">bits_per_raw_sample</name></name><operator pos:start="657:47" pos:end="657:47">=</operator> <name pos:start="657:49" pos:end="657:73">frame_bits_per_raw_sample</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="663:17" pos:end="663:54"><expr pos:start="663:17" pos:end="663:53"><name pos:start="663:17" pos:end="663:36"><name pos:start="663:17" pos:end="663:19">ost</name><operator pos:start="663:20" pos:end="663:21">-&gt;</operator><name pos:start="663:22" pos:end="663:36">resample_height</name></name> <operator pos:start="663:38" pos:end="663:38">=</operator> <name pos:start="663:40" pos:end="663:53"><name pos:start="663:40" pos:end="663:45">icodec</name><operator pos:start="663:46" pos:end="663:47">-&gt;</operator><name pos:start="663:48" pos:end="663:53">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="665:17" pos:end="665:53"><expr pos:start="665:17" pos:end="665:52"><name pos:start="665:17" pos:end="665:35"><name pos:start="665:17" pos:end="665:19">ost</name><operator pos:start="665:20" pos:end="665:21">-&gt;</operator><name pos:start="665:22" pos:end="665:35">resample_width</name></name>  <operator pos:start="665:38" pos:end="665:38">=</operator> <name pos:start="665:40" pos:end="665:52"><name pos:start="665:40" pos:end="665:45">icodec</name><operator pos:start="665:46" pos:end="665:47">-&gt;</operator><name pos:start="665:48" pos:end="665:52">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="667:17" pos:end="667:55"><expr pos:start="667:17" pos:end="667:54"><name pos:start="667:17" pos:end="667:37"><name pos:start="667:17" pos:end="667:19">ost</name><operator pos:start="667:20" pos:end="667:21">-&gt;</operator><name pos:start="667:22" pos:end="667:37">resample_pix_fmt</name></name><operator pos:start="667:38" pos:end="667:38">=</operator> <name pos:start="667:40" pos:end="667:54"><name pos:start="667:40" pos:end="667:45">icodec</name><operator pos:start="667:46" pos:end="667:47">-&gt;</operator><name pos:start="667:48" pos:end="667:54">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="669:17" pos:end="669:41"><expr pos:start="669:17" pos:end="669:40"><name pos:start="669:17" pos:end="669:36"><name pos:start="669:17" pos:end="669:19">ost</name><operator pos:start="669:20" pos:end="669:21">-&gt;</operator><name pos:start="669:22" pos:end="669:36">encoding_needed</name></name> <operator pos:start="669:38" pos:end="669:38">=</operator> <literal type="number" pos:start="669:40" pos:end="669:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="671:17" pos:end="671:41"><expr pos:start="671:17" pos:end="671:40"><name pos:start="671:17" pos:end="671:36"><name pos:start="671:17" pos:end="671:19">ist</name><operator pos:start="671:20" pos:end="671:21">-&gt;</operator><name pos:start="671:22" pos:end="671:36">decoding_needed</name></name> <operator pos:start="671:38" pos:end="671:38">=</operator> <literal type="number" pos:start="671:40" pos:end="671:40">1</literal></expr>;</expr_stmt>



                <if_stmt pos:start="675:17" pos:end="677:109"><if pos:start="675:17" pos:end="677:109">if <condition pos:start="675:20" pos:end="675:41">(<expr pos:start="675:21" pos:end="675:40"><operator pos:start="675:21" pos:end="675:21">!</operator><name pos:start="675:22" pos:end="675:40"><name pos:start="675:22" pos:end="675:24">ost</name><operator pos:start="675:25" pos:end="675:26">-&gt;</operator><name pos:start="675:27" pos:end="675:36">frame_rate</name><operator pos:start="675:37" pos:end="675:37">.</operator><name pos:start="675:38" pos:end="675:40">num</name></name></expr>)</condition><block type="pseudo" pos:start="677:21" pos:end="677:109"><block_content pos:start="677:21" pos:end="677:109">

                    <expr_stmt pos:start="677:21" pos:end="677:109"><expr pos:start="677:21" pos:end="677:108"><name pos:start="677:21" pos:end="677:35"><name pos:start="677:21" pos:end="677:23">ost</name><operator pos:start="677:24" pos:end="677:25">-&gt;</operator><name pos:start="677:26" pos:end="677:35">frame_rate</name></name> <operator pos:start="677:37" pos:end="677:37">=</operator> <ternary pos:start="677:39" pos:end="677:108"><condition pos:start="677:39" pos:end="677:65"><expr pos:start="677:39" pos:end="677:63"><name pos:start="677:39" pos:end="677:63"><name pos:start="677:39" pos:end="677:41">ist</name><operator pos:start="677:42" pos:end="677:43">-&gt;</operator><name pos:start="677:44" pos:end="677:45">st</name><operator pos:start="677:46" pos:end="677:47">-&gt;</operator><name pos:start="677:48" pos:end="677:59">r_frame_rate</name><operator pos:start="677:60" pos:end="677:60">.</operator><name pos:start="677:61" pos:end="677:63">num</name></name></expr> ?</condition><then pos:start="677:67" pos:end="677:87"> <expr pos:start="677:67" pos:end="677:87"><name pos:start="677:67" pos:end="677:87"><name pos:start="677:67" pos:end="677:69">ist</name><operator pos:start="677:70" pos:end="677:71">-&gt;</operator><name pos:start="677:72" pos:end="677:73">st</name><operator pos:start="677:74" pos:end="677:75">-&gt;</operator><name pos:start="677:76" pos:end="677:87">r_frame_rate</name></name></expr> </then><else pos:start="677:89" pos:end="677:108">: <expr pos:start="677:91" pos:end="677:108"><operator pos:start="677:91" pos:end="677:91">(</operator><name pos:start="677:92" pos:end="677:101">AVRational</name><operator pos:start="677:102" pos:end="677:102">)</operator><block pos:start="677:103" pos:end="677:108">{<expr pos:start="677:104" pos:end="677:105"><literal type="number" pos:start="677:104" pos:end="677:105">25</literal></expr>,<expr pos:start="677:107" pos:end="677:107"><literal type="number" pos:start="677:107" pos:end="677:107">1</literal></expr>}</block></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="679:17" pos:end="685:17"><if pos:start="679:17" pos:end="685:17">if <condition pos:start="679:20" pos:end="679:77">(<expr pos:start="679:21" pos:end="679:76"><name pos:start="679:21" pos:end="679:28"><name pos:start="679:21" pos:end="679:23">ost</name><operator pos:start="679:24" pos:end="679:25">-&gt;</operator><name pos:start="679:26" pos:end="679:28">enc</name></name> <operator pos:start="679:30" pos:end="679:31">&amp;&amp;</operator> <name pos:start="679:33" pos:end="679:62"><name pos:start="679:33" pos:end="679:35">ost</name><operator pos:start="679:36" pos:end="679:37">-&gt;</operator><name pos:start="679:38" pos:end="679:40">enc</name><operator pos:start="679:41" pos:end="679:42">-&gt;</operator><name pos:start="679:43" pos:end="679:62">supported_framerates</name></name> <operator pos:start="679:64" pos:end="679:65">&amp;&amp;</operator> <operator pos:start="679:67" pos:end="679:67">!</operator><name pos:start="679:68" pos:end="679:76">force_fps</name></expr>)</condition> <block pos:start="679:79" pos:end="685:17">{<block_content pos:start="681:21" pos:end="683:74">

                    <decl_stmt pos:start="681:21" pos:end="681:101"><decl pos:start="681:21" pos:end="681:100"><type pos:start="681:21" pos:end="681:23"><name pos:start="681:21" pos:end="681:23">int</name></type> <name pos:start="681:25" pos:end="681:27">idx</name> <init pos:start="681:29" pos:end="681:100">= <expr pos:start="681:31" pos:end="681:100"><call pos:start="681:31" pos:end="681:100"><name pos:start="681:31" pos:end="681:51">av_find_nearest_q_idx</name><argument_list pos:start="681:52" pos:end="681:100">(<argument pos:start="681:53" pos:end="681:67"><expr pos:start="681:53" pos:end="681:67"><name pos:start="681:53" pos:end="681:67"><name pos:start="681:53" pos:end="681:55">ost</name><operator pos:start="681:56" pos:end="681:57">-&gt;</operator><name pos:start="681:58" pos:end="681:67">frame_rate</name></name></expr></argument>, <argument pos:start="681:70" pos:end="681:99"><expr pos:start="681:70" pos:end="681:99"><name pos:start="681:70" pos:end="681:99"><name pos:start="681:70" pos:end="681:72">ost</name><operator pos:start="681:73" pos:end="681:74">-&gt;</operator><name pos:start="681:75" pos:end="681:77">enc</name><operator pos:start="681:78" pos:end="681:79">-&gt;</operator><name pos:start="681:80" pos:end="681:99">supported_framerates</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="683:21" pos:end="683:74"><expr pos:start="683:21" pos:end="683:73"><name pos:start="683:21" pos:end="683:35"><name pos:start="683:21" pos:end="683:23">ost</name><operator pos:start="683:24" pos:end="683:25">-&gt;</operator><name pos:start="683:26" pos:end="683:35">frame_rate</name></name> <operator pos:start="683:37" pos:end="683:37">=</operator> <name pos:start="683:39" pos:end="683:73"><name pos:start="683:39" pos:end="683:41">ost</name><operator pos:start="683:42" pos:end="683:43">-&gt;</operator><name pos:start="683:44" pos:end="683:46">enc</name><operator pos:start="683:47" pos:end="683:48">-&gt;</operator><name pos:start="683:49" pos:end="683:68">supported_framerates</name><index pos:start="683:69" pos:end="683:73">[<expr pos:start="683:70" pos:end="683:72"><name pos:start="683:70" pos:end="683:72">idx</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="687:17" pos:end="687:90"><expr pos:start="687:17" pos:end="687:89"><name pos:start="687:17" pos:end="687:32"><name pos:start="687:17" pos:end="687:21">codec</name><operator pos:start="687:22" pos:end="687:23">-&gt;</operator><name pos:start="687:24" pos:end="687:32">time_base</name></name> <operator pos:start="687:34" pos:end="687:34">=</operator> <operator pos:start="687:36" pos:end="687:36">(</operator><name pos:start="687:37" pos:end="687:46">AVRational</name><operator pos:start="687:47" pos:end="687:47">)</operator><block pos:start="687:48" pos:end="687:89">{<expr pos:start="687:49" pos:end="687:67"><name pos:start="687:49" pos:end="687:67"><name pos:start="687:49" pos:end="687:51">ost</name><operator pos:start="687:52" pos:end="687:53">-&gt;</operator><name pos:start="687:54" pos:end="687:63">frame_rate</name><operator pos:start="687:64" pos:end="687:64">.</operator><name pos:start="687:65" pos:end="687:67">den</name></name></expr>, <expr pos:start="687:70" pos:end="687:88"><name pos:start="687:70" pos:end="687:88"><name pos:start="687:70" pos:end="687:72">ost</name><operator pos:start="687:73" pos:end="687:74">-&gt;</operator><name pos:start="687:75" pos:end="687:84">frame_rate</name><operator pos:start="687:85" pos:end="687:85">.</operator><name pos:start="687:86" pos:end="687:88">num</name></name></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="689:17" pos:end="702:0"><if pos:start="689:17" pos:end="702:0">if<condition pos:start="689:19" pos:end="691:116">(   <expr pos:start="689:23" pos:end="691:115"><call pos:start="689:23" pos:end="689:46"><name pos:start="689:23" pos:end="689:28">av_q2d</name><argument_list pos:start="689:29" pos:end="689:46">(<argument pos:start="689:30" pos:end="689:45"><expr pos:start="689:30" pos:end="689:45"><name pos:start="689:30" pos:end="689:45"><name pos:start="689:30" pos:end="689:34">codec</name><operator pos:start="689:35" pos:end="689:36">-&gt;</operator><name pos:start="689:37" pos:end="689:45">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="689:48" pos:end="689:48">&lt;</operator> <literal type="number" pos:start="689:50" pos:end="689:54">0.001</literal> <operator pos:start="689:56" pos:end="689:57">&amp;&amp;</operator> <name pos:start="689:59" pos:end="689:75">video_sync_method</name>

                   <operator pos:start="691:20" pos:end="691:21">&amp;&amp;</operator> <operator pos:start="691:23" pos:end="691:23">(</operator><name pos:start="691:24" pos:end="691:40">video_sync_method</name><operator pos:start="691:41" pos:end="691:42">==</operator><literal type="number" pos:start="691:43" pos:end="691:43">1</literal> <operator pos:start="691:45" pos:end="691:46">||</operator> <operator pos:start="691:48" pos:end="691:48">(</operator><name pos:start="691:49" pos:end="691:65">video_sync_method</name><operator pos:start="691:66" pos:end="691:66">&lt;</operator><literal type="number" pos:start="691:67" pos:end="691:67">0</literal> <operator pos:start="691:69" pos:end="691:70">&amp;&amp;</operator> <operator pos:start="691:72" pos:end="691:72">!</operator><operator pos:start="691:73" pos:end="691:73">(</operator><name pos:start="691:74" pos:end="691:91"><name pos:start="691:74" pos:end="691:75">os</name><operator pos:start="691:76" pos:end="691:77">-&gt;</operator><name pos:start="691:78" pos:end="691:84">oformat</name><operator pos:start="691:85" pos:end="691:86">-&gt;</operator><name pos:start="691:87" pos:end="691:91">flags</name></name> <operator pos:start="691:93" pos:end="691:93">&amp;</operator> <name pos:start="691:95" pos:end="691:112">AVFMT_VARIABLE_FPS</name><operator pos:start="691:113" pos:end="691:113">)</operator><operator pos:start="691:114" pos:end="691:114">)</operator><operator pos:start="691:115" pos:end="691:115">)</operator></expr>)</condition><block pos:start="691:117" pos:end="702:0">{<block_content pos:start="693:21" pos:end="695:129">

                    <expr_stmt pos:start="693:21" pos:end="695:129"><expr pos:start="693:21" pos:end="695:128"><call pos:start="693:21" pos:end="695:128"><name pos:start="693:21" pos:end="693:26">av_log</name><argument_list pos:start="693:27" pos:end="695:128">(<argument pos:start="693:28" pos:end="693:29"><expr pos:start="693:28" pos:end="693:29"><name pos:start="693:28" pos:end="693:29">os</name></expr></argument>, <argument pos:start="693:32" pos:end="693:45"><expr pos:start="693:32" pos:end="693:45"><name pos:start="693:32" pos:end="693:45">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="693:48" pos:end="695:127"><expr pos:start="693:48" pos:end="695:127"><literal type="string" pos:start="693:48" pos:end="693:115">"Frame rate very high for a muxer not effciciently supporting it.\n"</literal>

                                               <literal type="string" pos:start="695:48" pos:end="695:127">"Please consider specifiying a lower framerate, a different muxer or -vsync 2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



<cpp:if pos:start="701:1" pos:end="701:19">#<cpp:directive pos:start="701:2" pos:end="701:3">if</cpp:directive> <expr pos:start="701:5" pos:end="701:19"><name pos:start="701:5" pos:end="701:19">CONFIG_AVFILTER</name></expr></cpp:if>

                <if_stmt pos:start="703:17" pos:end="712:0"><if pos:start="703:17" pos:end="712:0">if <condition pos:start="703:20" pos:end="703:54">(<expr pos:start="703:21" pos:end="703:53"><call pos:start="703:21" pos:end="703:53"><name pos:start="703:21" pos:end="703:43">configure_video_filters</name><argument_list pos:start="703:44" pos:end="703:53">(<argument pos:start="703:45" pos:end="703:47"><expr pos:start="703:45" pos:end="703:47"><name pos:start="703:45" pos:end="703:47">ist</name></expr></argument>, <argument pos:start="703:50" pos:end="703:52"><expr pos:start="703:50" pos:end="703:52"><name pos:start="703:50" pos:end="703:52">ost</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="703:56" pos:end="712:0">{<block_content pos:start="705:21" pos:end="707:28">

                    <expr_stmt pos:start="705:21" pos:end="705:64"><expr pos:start="705:21" pos:end="705:63"><call pos:start="705:21" pos:end="705:63"><name pos:start="705:21" pos:end="705:27">fprintf</name><argument_list pos:start="705:28" pos:end="705:63">(<argument pos:start="705:29" pos:end="705:34"><expr pos:start="705:29" pos:end="705:34"><name pos:start="705:29" pos:end="705:34">stderr</name></expr></argument>, <argument pos:start="705:37" pos:end="705:62"><expr pos:start="705:37" pos:end="705:62"><literal type="string" pos:start="705:37" pos:end="705:62">"Error opening filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="707:21" pos:end="707:28"><expr pos:start="707:21" pos:end="707:27"><call pos:start="707:21" pos:end="707:27"><name pos:start="707:21" pos:end="707:24">exit</name><argument_list pos:start="707:25" pos:end="707:27">(<argument pos:start="707:26" pos:end="707:26"><expr pos:start="707:26" pos:end="707:26"><literal type="number" pos:start="707:26" pos:end="707:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="711:1" pos:end="711:6">#<cpp:directive pos:start="711:2" pos:end="711:6">endif</cpp:directive></cpp:endif>

                <break pos:start="713:17" pos:end="713:22">break;</break>

            <case pos:start="715:13" pos:end="715:39">case <expr pos:start="715:18" pos:end="715:38"><name pos:start="715:18" pos:end="715:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="717:17" pos:end="717:41"><expr pos:start="717:17" pos:end="717:40"><name pos:start="717:17" pos:end="717:36"><name pos:start="717:17" pos:end="717:19">ost</name><operator pos:start="717:20" pos:end="717:21">-&gt;</operator><name pos:start="717:22" pos:end="717:36">encoding_needed</name></name> <operator pos:start="717:38" pos:end="717:38">=</operator> <literal type="number" pos:start="717:40" pos:end="717:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="719:17" pos:end="719:41"><expr pos:start="719:17" pos:end="719:40"><name pos:start="719:17" pos:end="719:36"><name pos:start="719:17" pos:end="719:19">ist</name><operator pos:start="719:20" pos:end="719:21">-&gt;</operator><name pos:start="719:22" pos:end="719:36">decoding_needed</name></name> <operator pos:start="719:38" pos:end="719:38">=</operator> <literal type="number" pos:start="719:40" pos:end="719:40">1</literal></expr>;</expr_stmt>

                <break pos:start="721:17" pos:end="721:22">break;</break>

            <default pos:start="723:13" pos:end="723:20">default:</default>

                <expr_stmt pos:start="725:17" pos:end="725:24"><expr pos:start="725:17" pos:end="725:23"><call pos:start="725:17" pos:end="725:23"><name pos:start="725:17" pos:end="725:21">abort</name><argument_list pos:start="725:22" pos:end="725:23">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="727:17" pos:end="727:22">break;</break>

            </block_content>}</block></switch>

            <comment type="block" pos:start="731:13" pos:end="731:31">/* two pass mode */</comment>

            <if_stmt pos:start="733:13" pos:end="781:13"><if pos:start="733:13" pos:end="781:13">if <condition pos:start="733:16" pos:end="735:71">(<expr pos:start="733:17" pos:end="735:70"><name pos:start="733:17" pos:end="733:36"><name pos:start="733:17" pos:end="733:19">ost</name><operator pos:start="733:20" pos:end="733:21">-&gt;</operator><name pos:start="733:22" pos:end="733:36">encoding_needed</name></name> <operator pos:start="733:38" pos:end="733:39">&amp;&amp;</operator> <name pos:start="733:41" pos:end="733:55"><name pos:start="733:41" pos:end="733:45">codec</name><operator pos:start="733:46" pos:end="733:47">-&gt;</operator><name pos:start="733:48" pos:end="733:55">codec_id</name></name> <operator pos:start="733:57" pos:end="733:58">!=</operator> <name pos:start="733:60" pos:end="733:72">CODEC_ID_H264</name> <operator pos:start="733:74" pos:end="733:75">&amp;&amp;</operator>

                <operator pos:start="735:17" pos:end="735:17">(</operator><name pos:start="735:18" pos:end="735:29"><name pos:start="735:18" pos:end="735:22">codec</name><operator pos:start="735:23" pos:end="735:24">-&gt;</operator><name pos:start="735:25" pos:end="735:29">flags</name></name> <operator pos:start="735:31" pos:end="735:31">&amp;</operator> <operator pos:start="735:33" pos:end="735:33">(</operator><name pos:start="735:34" pos:end="735:49">CODEC_FLAG_PASS1</name> <operator pos:start="735:51" pos:end="735:51">|</operator> <name pos:start="735:53" pos:end="735:68">CODEC_FLAG_PASS2</name><operator pos:start="735:69" pos:end="735:69">)</operator><operator pos:start="735:70" pos:end="735:70">)</operator></expr>)</condition> <block pos:start="735:73" pos:end="781:13">{<block_content pos:start="737:17" pos:end="779:17">

                <decl_stmt pos:start="737:17" pos:end="737:39"><decl pos:start="737:17" pos:end="737:38"><type pos:start="737:17" pos:end="737:20"><name pos:start="737:17" pos:end="737:20">char</name></type> <name pos:start="737:22" pos:end="737:38"><name pos:start="737:22" pos:end="737:32">logfilename</name><index pos:start="737:33" pos:end="737:38">[<expr pos:start="737:34" pos:end="737:37"><literal type="number" pos:start="737:34" pos:end="737:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="739:17" pos:end="739:24"><decl pos:start="739:17" pos:end="739:23"><type pos:start="739:17" pos:end="739:22"><name pos:start="739:17" pos:end="739:20">FILE</name> <modifier pos:start="739:22" pos:end="739:22">*</modifier></type><name pos:start="739:23" pos:end="739:23">f</name></decl>;</decl_stmt>



                <expr_stmt pos:start="743:17" pos:end="747:28"><expr pos:start="743:17" pos:end="747:27"><call pos:start="743:17" pos:end="747:27"><name pos:start="743:17" pos:end="743:24">snprintf</name><argument_list pos:start="743:25" pos:end="747:27">(<argument pos:start="743:26" pos:end="743:36"><expr pos:start="743:26" pos:end="743:36"><name pos:start="743:26" pos:end="743:36">logfilename</name></expr></argument>, <argument pos:start="743:39" pos:end="743:57"><expr pos:start="743:39" pos:end="743:57"><sizeof pos:start="743:39" pos:end="743:57">sizeof<argument_list pos:start="743:45" pos:end="743:57">(<argument pos:start="743:46" pos:end="743:56"><expr pos:start="743:46" pos:end="743:56"><name pos:start="743:46" pos:end="743:56">logfilename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="743:60" pos:end="743:70"><expr pos:start="743:60" pos:end="743:70"><literal type="string" pos:start="743:60" pos:end="743:70">"%s-%d.log"</literal></expr></argument>,

                         <argument pos:start="745:26" pos:end="745:108"><expr pos:start="745:26" pos:end="745:108"><ternary pos:start="745:26" pos:end="745:108"><condition pos:start="745:26" pos:end="745:50"><expr pos:start="745:26" pos:end="745:48"><name pos:start="745:26" pos:end="745:48">pass_logfilename_prefix</name></expr> ?</condition><then pos:start="745:52" pos:end="745:74"> <expr pos:start="745:52" pos:end="745:74"><name pos:start="745:52" pos:end="745:74">pass_logfilename_prefix</name></expr> </then><else pos:start="745:76" pos:end="745:108">: <expr pos:start="745:78" pos:end="745:108"><name pos:start="745:78" pos:end="745:108">DEFAULT_PASS_LOGFILENAME_PREFIX</name></expr></else></ternary></expr></argument>,

                         <argument pos:start="747:26" pos:end="747:26"><expr pos:start="747:26" pos:end="747:26"><name pos:start="747:26" pos:end="747:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="749:17" pos:end="779:17"><if pos:start="749:17" pos:end="763:17">if <condition pos:start="749:20" pos:end="749:52">(<expr pos:start="749:21" pos:end="749:51"><name pos:start="749:21" pos:end="749:32"><name pos:start="749:21" pos:end="749:25">codec</name><operator pos:start="749:26" pos:end="749:27">-&gt;</operator><name pos:start="749:28" pos:end="749:32">flags</name></name> <operator pos:start="749:34" pos:end="749:34">&amp;</operator> <name pos:start="749:36" pos:end="749:51">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="749:54" pos:end="763:17">{<block_content pos:start="751:21" pos:end="761:37">

                    <expr_stmt pos:start="751:21" pos:end="751:49"><expr pos:start="751:21" pos:end="751:48"><name pos:start="751:21" pos:end="751:21">f</name> <operator pos:start="751:23" pos:end="751:23">=</operator> <call pos:start="751:25" pos:end="751:48"><name pos:start="751:25" pos:end="751:29">fopen</name><argument_list pos:start="751:30" pos:end="751:48">(<argument pos:start="751:31" pos:end="751:41"><expr pos:start="751:31" pos:end="751:41"><name pos:start="751:31" pos:end="751:41">logfilename</name></expr></argument>, <argument pos:start="751:44" pos:end="751:47"><expr pos:start="751:44" pos:end="751:47"><literal type="string" pos:start="751:44" pos:end="751:47">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="753:21" pos:end="759:21"><if pos:start="753:21" pos:end="759:21">if <condition pos:start="753:24" pos:end="753:27">(<expr pos:start="753:25" pos:end="753:26"><operator pos:start="753:25" pos:end="753:25">!</operator><name pos:start="753:26" pos:end="753:26">f</name></expr>)</condition> <block pos:start="753:29" pos:end="759:21">{<block_content pos:start="755:25" pos:end="757:39">

                        <expr_stmt pos:start="755:25" pos:end="755:126"><expr pos:start="755:25" pos:end="755:125"><call pos:start="755:25" pos:end="755:125"><name pos:start="755:25" pos:end="755:31">fprintf</name><argument_list pos:start="755:32" pos:end="755:125">(<argument pos:start="755:33" pos:end="755:38"><expr pos:start="755:33" pos:end="755:38"><name pos:start="755:33" pos:end="755:38">stderr</name></expr></argument>, <argument pos:start="755:41" pos:end="755:94"><expr pos:start="755:41" pos:end="755:94"><literal type="string" pos:start="755:41" pos:end="755:94">"Cannot write log file '%s' for pass-1 encoding: %s\n"</literal></expr></argument>, <argument pos:start="755:97" pos:end="755:107"><expr pos:start="755:97" pos:end="755:107"><name pos:start="755:97" pos:end="755:107">logfilename</name></expr></argument>, <argument pos:start="755:110" pos:end="755:124"><expr pos:start="755:110" pos:end="755:124"><call pos:start="755:110" pos:end="755:124"><name pos:start="755:110" pos:end="755:117">strerror</name><argument_list pos:start="755:118" pos:end="755:124">(<argument pos:start="755:119" pos:end="755:123"><expr pos:start="755:119" pos:end="755:123"><name pos:start="755:119" pos:end="755:123">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="757:25" pos:end="757:39"><expr pos:start="757:25" pos:end="757:38"><call pos:start="757:25" pos:end="757:38"><name pos:start="757:25" pos:end="757:35">ffmpeg_exit</name><argument_list pos:start="757:36" pos:end="757:38">(<argument pos:start="757:37" pos:end="757:37"><expr pos:start="757:37" pos:end="757:37"><literal type="number" pos:start="757:37" pos:end="757:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="761:21" pos:end="761:37"><expr pos:start="761:21" pos:end="761:36"><name pos:start="761:21" pos:end="761:32"><name pos:start="761:21" pos:end="761:23">ost</name><operator pos:start="761:24" pos:end="761:25">-&gt;</operator><name pos:start="761:26" pos:end="761:32">logfile</name></name> <operator pos:start="761:34" pos:end="761:34">=</operator> <name pos:start="761:36" pos:end="761:36">f</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="763:19" pos:end="779:17">else <block pos:start="763:24" pos:end="779:17">{<block_content pos:start="765:21" pos:end="777:48">

                    <decl_stmt pos:start="765:21" pos:end="765:37"><decl pos:start="765:21" pos:end="765:36"><type pos:start="765:21" pos:end="765:27"><name pos:start="765:21" pos:end="765:24">char</name>  <modifier pos:start="765:27" pos:end="765:27">*</modifier></type><name pos:start="765:28" pos:end="765:36">logbuffer</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="767:21" pos:end="767:42"><decl pos:start="767:21" pos:end="767:41"><type pos:start="767:21" pos:end="767:26"><name pos:start="767:21" pos:end="767:26">size_t</name></type> <name pos:start="767:28" pos:end="767:41">logbuffer_size</name></decl>;</decl_stmt>

                    <if_stmt pos:start="769:21" pos:end="775:21"><if pos:start="769:21" pos:end="775:21">if <condition pos:start="769:24" pos:end="769:80">(<expr pos:start="769:25" pos:end="769:79"><call pos:start="769:25" pos:end="769:75"><name pos:start="769:25" pos:end="769:33">read_file</name><argument_list pos:start="769:34" pos:end="769:75">(<argument pos:start="769:35" pos:end="769:45"><expr pos:start="769:35" pos:end="769:45"><name pos:start="769:35" pos:end="769:45">logfilename</name></expr></argument>, <argument pos:start="769:48" pos:end="769:57"><expr pos:start="769:48" pos:end="769:57"><operator pos:start="769:48" pos:end="769:48">&amp;</operator><name pos:start="769:49" pos:end="769:57">logbuffer</name></expr></argument>, <argument pos:start="769:60" pos:end="769:74"><expr pos:start="769:60" pos:end="769:74"><operator pos:start="769:60" pos:end="769:60">&amp;</operator><name pos:start="769:61" pos:end="769:74">logbuffer_size</name></expr></argument>)</argument_list></call> <operator pos:start="769:77" pos:end="769:77">&lt;</operator> <literal type="number" pos:start="769:79" pos:end="769:79">0</literal></expr>)</condition> <block pos:start="769:82" pos:end="775:21">{<block_content pos:start="771:25" pos:end="773:39">

                        <expr_stmt pos:start="771:25" pos:end="771:106"><expr pos:start="771:25" pos:end="771:105"><call pos:start="771:25" pos:end="771:105"><name pos:start="771:25" pos:end="771:31">fprintf</name><argument_list pos:start="771:32" pos:end="771:105">(<argument pos:start="771:33" pos:end="771:38"><expr pos:start="771:33" pos:end="771:38"><name pos:start="771:33" pos:end="771:38">stderr</name></expr></argument>, <argument pos:start="771:41" pos:end="771:91"><expr pos:start="771:41" pos:end="771:91"><literal type="string" pos:start="771:41" pos:end="771:91">"Error reading log file '%s' for pass-2 encoding\n"</literal></expr></argument>, <argument pos:start="771:94" pos:end="771:104"><expr pos:start="771:94" pos:end="771:104"><name pos:start="771:94" pos:end="771:104">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="773:25" pos:end="773:39"><expr pos:start="773:25" pos:end="773:38"><call pos:start="773:25" pos:end="773:38"><name pos:start="773:25" pos:end="773:35">ffmpeg_exit</name><argument_list pos:start="773:36" pos:end="773:38">(<argument pos:start="773:37" pos:end="773:37"><expr pos:start="773:37" pos:end="773:37"><literal type="number" pos:start="773:37" pos:end="773:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="777:21" pos:end="777:48"><expr pos:start="777:21" pos:end="777:47"><name pos:start="777:21" pos:end="777:35"><name pos:start="777:21" pos:end="777:25">codec</name><operator pos:start="777:26" pos:end="777:27">-&gt;</operator><name pos:start="777:28" pos:end="777:35">stats_in</name></name> <operator pos:start="777:37" pos:end="777:37">=</operator> <name pos:start="777:39" pos:end="777:47">logbuffer</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="785:9" pos:end="793:9"><if pos:start="785:9" pos:end="793:9">if<condition pos:start="785:11" pos:end="785:51">(<expr pos:start="785:12" pos:end="785:50"><name pos:start="785:12" pos:end="785:28"><name pos:start="785:12" pos:end="785:16">codec</name><operator pos:start="785:17" pos:end="785:18">-&gt;</operator><name pos:start="785:19" pos:end="785:28">codec_type</name></name> <operator pos:start="785:30" pos:end="785:31">==</operator> <name pos:start="785:33" pos:end="785:50">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block pos:start="785:52" pos:end="793:9">{<block_content pos:start="789:13" pos:end="791:67">

            <comment type="block" pos:start="787:13" pos:end="787:86">/* maximum video buffer size is 6-bytes per pixel, plus DPX header size */</comment>

            <decl_stmt pos:start="789:13" pos:end="789:51"><decl pos:start="789:13" pos:end="789:50"><type pos:start="789:13" pos:end="789:15"><name pos:start="789:13" pos:end="789:15">int</name></type> <name pos:start="789:17" pos:end="789:20">size</name><init pos:start="789:21" pos:end="789:50">= <expr pos:start="789:23" pos:end="789:50"><name pos:start="789:23" pos:end="789:34"><name pos:start="789:23" pos:end="789:27">codec</name><operator pos:start="789:28" pos:end="789:29">-&gt;</operator><name pos:start="789:30" pos:end="789:34">width</name></name> <operator pos:start="789:36" pos:end="789:36">*</operator> <name pos:start="789:38" pos:end="789:50"><name pos:start="789:38" pos:end="789:42">codec</name><operator pos:start="789:43" pos:end="789:44">-&gt;</operator><name pos:start="789:45" pos:end="789:50">height</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="791:13" pos:end="791:67"><expr pos:start="791:13" pos:end="791:66"><name pos:start="791:13" pos:end="791:27">bit_buffer_size</name><operator pos:start="791:28" pos:end="791:28">=</operator> <call pos:start="791:30" pos:end="791:66"><name pos:start="791:30" pos:end="791:34">FFMAX</name><argument_list pos:start="791:35" pos:end="791:66">(<argument pos:start="791:36" pos:end="791:50"><expr pos:start="791:36" pos:end="791:50"><name pos:start="791:36" pos:end="791:50">bit_buffer_size</name></expr></argument>, <argument pos:start="791:53" pos:end="791:65"><expr pos:start="791:53" pos:end="791:65"><literal type="number" pos:start="791:53" pos:end="791:53">6</literal><operator pos:start="791:54" pos:end="791:54">*</operator><name pos:start="791:55" pos:end="791:58">size</name> <operator pos:start="791:60" pos:end="791:60">+</operator> <literal type="number" pos:start="791:62" pos:end="791:65">1664</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="799:5" pos:end="801:48"><if pos:start="799:5" pos:end="801:48">if <condition pos:start="799:8" pos:end="799:20">(<expr pos:start="799:9" pos:end="799:19"><operator pos:start="799:9" pos:end="799:9">!</operator><name pos:start="799:10" pos:end="799:19">bit_buffer</name></expr>)</condition><block type="pseudo" pos:start="801:9" pos:end="801:48"><block_content pos:start="801:9" pos:end="801:48">

        <expr_stmt pos:start="801:9" pos:end="801:48"><expr pos:start="801:9" pos:end="801:47"><name pos:start="801:9" pos:end="801:18">bit_buffer</name> <operator pos:start="801:20" pos:end="801:20">=</operator> <call pos:start="801:22" pos:end="801:47"><name pos:start="801:22" pos:end="801:30">av_malloc</name><argument_list pos:start="801:31" pos:end="801:47">(<argument pos:start="801:32" pos:end="801:46"><expr pos:start="801:32" pos:end="801:46"><name pos:start="801:32" pos:end="801:46">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="803:5" pos:end="813:5"><if pos:start="803:5" pos:end="813:5">if <condition pos:start="803:8" pos:end="803:20">(<expr pos:start="803:9" pos:end="803:19"><operator pos:start="803:9" pos:end="803:9">!</operator><name pos:start="803:10" pos:end="803:19">bit_buffer</name></expr>)</condition> <block pos:start="803:22" pos:end="813:5">{<block_content pos:start="805:9" pos:end="811:18">

        <expr_stmt pos:start="805:9" pos:end="807:33"><expr pos:start="805:9" pos:end="807:32"><call pos:start="805:9" pos:end="807:32"><name pos:start="805:9" pos:end="805:15">fprintf</name><argument_list pos:start="805:16" pos:end="807:32">(<argument pos:start="805:17" pos:end="805:22"><expr pos:start="805:17" pos:end="805:22"><name pos:start="805:17" pos:end="805:22">stderr</name></expr></argument>, <argument pos:start="805:25" pos:end="805:66"><expr pos:start="805:25" pos:end="805:66"><literal type="string" pos:start="805:25" pos:end="805:66">"Cannot allocate %d bytes output buffer\n"</literal></expr></argument>,

                <argument pos:start="807:17" pos:end="807:31"><expr pos:start="807:17" pos:end="807:31"><name pos:start="807:17" pos:end="807:31">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="809:9" pos:end="809:30"><expr pos:start="809:9" pos:end="809:29"><name pos:start="809:9" pos:end="809:11">ret</name> <operator pos:start="809:13" pos:end="809:13">=</operator> <call pos:start="809:15" pos:end="809:29"><name pos:start="809:15" pos:end="809:21">AVERROR</name><argument_list pos:start="809:22" pos:end="809:29">(<argument pos:start="809:23" pos:end="809:28"><expr pos:start="809:23" pos:end="809:28"><name pos:start="809:23" pos:end="809:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="811:9" pos:end="811:18">goto <name pos:start="811:14" pos:end="811:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="817:5" pos:end="817:27">/* open each encoder */</comment>

    <for pos:start="819:5" pos:end="885:5">for<control pos:start="819:8" pos:end="819:30">(<init pos:start="819:9" pos:end="819:12"><expr pos:start="819:9" pos:end="819:11"><name pos:start="819:9" pos:end="819:9">i</name><operator pos:start="819:10" pos:end="819:10">=</operator><literal type="number" pos:start="819:11" pos:end="819:11">0</literal></expr>;</init><condition pos:start="819:13" pos:end="819:26"><expr pos:start="819:13" pos:end="819:25"><name pos:start="819:13" pos:end="819:13">i</name><operator pos:start="819:14" pos:end="819:14">&lt;</operator><name pos:start="819:15" pos:end="819:25">nb_ostreams</name></expr>;</condition><incr pos:start="819:27" pos:end="819:29"><expr pos:start="819:27" pos:end="819:29"><name pos:start="819:27" pos:end="819:27">i</name><operator pos:start="819:28" pos:end="819:29">++</operator></expr></incr>)</control> <block pos:start="819:32" pos:end="885:5">{<block_content pos:start="821:9" pos:end="883:9">

        <expr_stmt pos:start="821:9" pos:end="821:27"><expr pos:start="821:9" pos:end="821:26"><name pos:start="821:9" pos:end="821:11">ost</name> <operator pos:start="821:13" pos:end="821:13">=</operator> <name pos:start="821:15" pos:end="821:26"><name pos:start="821:15" pos:end="821:23">ost_table</name><index pos:start="821:24" pos:end="821:26">[<expr pos:start="821:25" pos:end="821:25"><name pos:start="821:25" pos:end="821:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="823:9" pos:end="883:9"><if pos:start="823:9" pos:end="883:9">if <condition pos:start="823:12" pos:end="823:33">(<expr pos:start="823:13" pos:end="823:32"><name pos:start="823:13" pos:end="823:32"><name pos:start="823:13" pos:end="823:15">ost</name><operator pos:start="823:16" pos:end="823:17">-&gt;</operator><name pos:start="823:18" pos:end="823:32">encoding_needed</name></name></expr>)</condition> <block pos:start="823:35" pos:end="883:9">{<block_content pos:start="825:13" pos:end="881:57">

            <decl_stmt pos:start="825:13" pos:end="825:38"><decl pos:start="825:13" pos:end="825:37"><type pos:start="825:13" pos:end="825:21"><name pos:start="825:13" pos:end="825:19">AVCodec</name> <modifier pos:start="825:21" pos:end="825:21">*</modifier></type><name pos:start="825:22" pos:end="825:26">codec</name> <init pos:start="825:28" pos:end="825:37">= <expr pos:start="825:30" pos:end="825:37"><name pos:start="825:30" pos:end="825:37"><name pos:start="825:30" pos:end="825:32">ost</name><operator pos:start="825:33" pos:end="825:34">-&gt;</operator><name pos:start="825:35" pos:end="825:37">enc</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="827:13" pos:end="827:77"><decl pos:start="827:13" pos:end="827:76"><type pos:start="827:13" pos:end="827:28"><name pos:start="827:13" pos:end="827:26">AVCodecContext</name> <modifier pos:start="827:28" pos:end="827:28">*</modifier></type><name pos:start="827:29" pos:end="827:31">dec</name> <init pos:start="827:33" pos:end="827:76">= <expr pos:start="827:35" pos:end="827:76"><name pos:start="827:35" pos:end="827:66"><name pos:start="827:35" pos:end="827:47">input_streams</name><index pos:start="827:48" pos:end="827:66">[<expr pos:start="827:49" pos:end="827:65"><name pos:start="827:49" pos:end="827:65"><name pos:start="827:49" pos:end="827:51">ost</name><operator pos:start="827:52" pos:end="827:53">-&gt;</operator><name pos:start="827:54" pos:end="827:65">source_index</name></name></expr>]</index></name><operator pos:start="827:67" pos:end="827:67">.</operator><name pos:start="827:68" pos:end="827:76"><name pos:start="827:68" pos:end="827:69">st</name><operator pos:start="827:70" pos:end="827:71">-&gt;</operator><name pos:start="827:72" pos:end="827:76">codec</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="829:13" pos:end="839:13"><if pos:start="829:13" pos:end="839:13">if <condition pos:start="829:16" pos:end="829:23">(<expr pos:start="829:17" pos:end="829:22"><operator pos:start="829:17" pos:end="829:17">!</operator><name pos:start="829:18" pos:end="829:22">codec</name></expr>)</condition> <block pos:start="829:25" pos:end="839:13">{<block_content pos:start="831:17" pos:end="837:33">

                <expr_stmt pos:start="831:17" pos:end="833:80"><expr pos:start="831:17" pos:end="833:79"><call pos:start="831:17" pos:end="833:79"><name pos:start="831:17" pos:end="831:24">snprintf</name><argument_list pos:start="831:25" pos:end="833:79">(<argument pos:start="831:26" pos:end="831:30"><expr pos:start="831:26" pos:end="831:30"><name pos:start="831:26" pos:end="831:30">error</name></expr></argument>, <argument pos:start="831:33" pos:end="831:45"><expr pos:start="831:33" pos:end="831:45"><sizeof pos:start="831:33" pos:end="831:45">sizeof<argument_list pos:start="831:39" pos:end="831:45">(<argument pos:start="831:40" pos:end="831:44"><expr pos:start="831:40" pos:end="831:44"><name pos:start="831:40" pos:end="831:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="831:48" pos:end="831:105"><expr pos:start="831:48" pos:end="831:105"><literal type="string" pos:start="831:48" pos:end="831:105">"Encoder (codec id %d) not found for output stream #%d.%d"</literal></expr></argument>,

                         <argument pos:start="833:26" pos:end="833:49"><expr pos:start="833:26" pos:end="833:49"><name pos:start="833:26" pos:end="833:49"><name pos:start="833:26" pos:end="833:28">ost</name><operator pos:start="833:29" pos:end="833:30">-&gt;</operator><name pos:start="833:31" pos:end="833:32">st</name><operator pos:start="833:33" pos:end="833:34">-&gt;</operator><name pos:start="833:35" pos:end="833:39">codec</name><operator pos:start="833:40" pos:end="833:41">-&gt;</operator><name pos:start="833:42" pos:end="833:49">codec_id</name></name></expr></argument>, <argument pos:start="833:52" pos:end="833:66"><expr pos:start="833:52" pos:end="833:66"><name pos:start="833:52" pos:end="833:66"><name pos:start="833:52" pos:end="833:54">ost</name><operator pos:start="833:55" pos:end="833:56">-&gt;</operator><name pos:start="833:57" pos:end="833:66">file_index</name></name></expr></argument>, <argument pos:start="833:69" pos:end="833:78"><expr pos:start="833:69" pos:end="833:78"><name pos:start="833:69" pos:end="833:78"><name pos:start="833:69" pos:end="833:71">ost</name><operator pos:start="833:72" pos:end="833:73">-&gt;</operator><name pos:start="833:74" pos:end="833:78">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="835:17" pos:end="835:38"><expr pos:start="835:17" pos:end="835:37"><name pos:start="835:17" pos:end="835:19">ret</name> <operator pos:start="835:21" pos:end="835:21">=</operator> <call pos:start="835:23" pos:end="835:37"><name pos:start="835:23" pos:end="835:29">AVERROR</name><argument_list pos:start="835:30" pos:end="835:37">(<argument pos:start="835:31" pos:end="835:36"><expr pos:start="835:31" pos:end="835:36"><name pos:start="835:31" pos:end="835:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="837:17" pos:end="837:33">goto <name pos:start="837:22" pos:end="837:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="841:13" pos:end="857:13"><if pos:start="841:13" pos:end="857:13">if <condition pos:start="841:16" pos:end="841:37">(<expr pos:start="841:17" pos:end="841:36"><name pos:start="841:17" pos:end="841:36"><name pos:start="841:17" pos:end="841:19">dec</name><operator pos:start="841:20" pos:end="841:21">-&gt;</operator><name pos:start="841:22" pos:end="841:36">subtitle_header</name></name></expr>)</condition> <block pos:start="841:39" pos:end="857:13">{<block_content pos:start="843:17" pos:end="855:81">

                <expr_stmt pos:start="843:17" pos:end="843:87"><expr pos:start="843:17" pos:end="843:86"><name pos:start="843:17" pos:end="843:47"><name pos:start="843:17" pos:end="843:19">ost</name><operator pos:start="843:20" pos:end="843:21">-&gt;</operator><name pos:start="843:22" pos:end="843:23">st</name><operator pos:start="843:24" pos:end="843:25">-&gt;</operator><name pos:start="843:26" pos:end="843:30">codec</name><operator pos:start="843:31" pos:end="843:32">-&gt;</operator><name pos:start="843:33" pos:end="843:47">subtitle_header</name></name> <operator pos:start="843:49" pos:end="843:49">=</operator> <call pos:start="843:51" pos:end="843:86"><name pos:start="843:51" pos:end="843:59">av_malloc</name><argument_list pos:start="843:60" pos:end="843:86">(<argument pos:start="843:61" pos:end="843:85"><expr pos:start="843:61" pos:end="843:85"><name pos:start="843:61" pos:end="843:85"><name pos:start="843:61" pos:end="843:63">dec</name><operator pos:start="843:64" pos:end="843:65">-&gt;</operator><name pos:start="843:66" pos:end="843:85">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="845:17" pos:end="851:17"><if pos:start="845:17" pos:end="851:17">if <condition pos:start="845:20" pos:end="845:53">(<expr pos:start="845:21" pos:end="845:52"><operator pos:start="845:21" pos:end="845:21">!</operator><name pos:start="845:22" pos:end="845:52"><name pos:start="845:22" pos:end="845:24">ost</name><operator pos:start="845:25" pos:end="845:26">-&gt;</operator><name pos:start="845:27" pos:end="845:28">st</name><operator pos:start="845:29" pos:end="845:30">-&gt;</operator><name pos:start="845:31" pos:end="845:35">codec</name><operator pos:start="845:36" pos:end="845:37">-&gt;</operator><name pos:start="845:38" pos:end="845:52">subtitle_header</name></name></expr>)</condition> <block pos:start="845:55" pos:end="851:17">{<block_content pos:start="847:21" pos:end="849:37">

                    <expr_stmt pos:start="847:21" pos:end="847:42"><expr pos:start="847:21" pos:end="847:41"><name pos:start="847:21" pos:end="847:23">ret</name> <operator pos:start="847:25" pos:end="847:25">=</operator> <call pos:start="847:27" pos:end="847:41"><name pos:start="847:27" pos:end="847:33">AVERROR</name><argument_list pos:start="847:34" pos:end="847:41">(<argument pos:start="847:35" pos:end="847:40"><expr pos:start="847:35" pos:end="847:40"><name pos:start="847:35" pos:end="847:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="849:21" pos:end="849:37">goto <name pos:start="849:26" pos:end="849:36">dump_format</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="853:17" pos:end="853:105"><expr pos:start="853:17" pos:end="853:104"><call pos:start="853:17" pos:end="853:104"><name pos:start="853:17" pos:end="853:22">memcpy</name><argument_list pos:start="853:23" pos:end="853:104">(<argument pos:start="853:24" pos:end="853:54"><expr pos:start="853:24" pos:end="853:54"><name pos:start="853:24" pos:end="853:54"><name pos:start="853:24" pos:end="853:26">ost</name><operator pos:start="853:27" pos:end="853:28">-&gt;</operator><name pos:start="853:29" pos:end="853:30">st</name><operator pos:start="853:31" pos:end="853:32">-&gt;</operator><name pos:start="853:33" pos:end="853:37">codec</name><operator pos:start="853:38" pos:end="853:39">-&gt;</operator><name pos:start="853:40" pos:end="853:54">subtitle_header</name></name></expr></argument>, <argument pos:start="853:57" pos:end="853:76"><expr pos:start="853:57" pos:end="853:76"><name pos:start="853:57" pos:end="853:76"><name pos:start="853:57" pos:end="853:59">dec</name><operator pos:start="853:60" pos:end="853:61">-&gt;</operator><name pos:start="853:62" pos:end="853:76">subtitle_header</name></name></expr></argument>, <argument pos:start="853:79" pos:end="853:103"><expr pos:start="853:79" pos:end="853:103"><name pos:start="853:79" pos:end="853:103"><name pos:start="853:79" pos:end="853:81">dec</name><operator pos:start="853:82" pos:end="853:83">-&gt;</operator><name pos:start="853:84" pos:end="853:103">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="855:17" pos:end="855:81"><expr pos:start="855:17" pos:end="855:80"><name pos:start="855:17" pos:end="855:52"><name pos:start="855:17" pos:end="855:19">ost</name><operator pos:start="855:20" pos:end="855:21">-&gt;</operator><name pos:start="855:22" pos:end="855:23">st</name><operator pos:start="855:24" pos:end="855:25">-&gt;</operator><name pos:start="855:26" pos:end="855:30">codec</name><operator pos:start="855:31" pos:end="855:32">-&gt;</operator><name pos:start="855:33" pos:end="855:52">subtitle_header_size</name></name> <operator pos:start="855:54" pos:end="855:54">=</operator> <name pos:start="855:56" pos:end="855:80"><name pos:start="855:56" pos:end="855:58">dec</name><operator pos:start="855:59" pos:end="855:60">-&gt;</operator><name pos:start="855:61" pos:end="855:80">subtitle_header_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="859:13" pos:end="869:13"><if pos:start="859:13" pos:end="869:13">if <condition pos:start="859:16" pos:end="859:69">(<expr pos:start="859:17" pos:end="859:68"><call pos:start="859:17" pos:end="859:64"><name pos:start="859:17" pos:end="859:29">avcodec_open2</name><argument_list pos:start="859:30" pos:end="859:64">(<argument pos:start="859:31" pos:end="859:44"><expr pos:start="859:31" pos:end="859:44"><name pos:start="859:31" pos:end="859:44"><name pos:start="859:31" pos:end="859:33">ost</name><operator pos:start="859:34" pos:end="859:35">-&gt;</operator><name pos:start="859:36" pos:end="859:37">st</name><operator pos:start="859:38" pos:end="859:39">-&gt;</operator><name pos:start="859:40" pos:end="859:44">codec</name></name></expr></argument>, <argument pos:start="859:47" pos:end="859:51"><expr pos:start="859:47" pos:end="859:51"><name pos:start="859:47" pos:end="859:51">codec</name></expr></argument>, <argument pos:start="859:54" pos:end="859:63"><expr pos:start="859:54" pos:end="859:63"><operator pos:start="859:54" pos:end="859:54">&amp;</operator><name pos:start="859:55" pos:end="859:63"><name pos:start="859:55" pos:end="859:57">ost</name><operator pos:start="859:58" pos:end="859:59">-&gt;</operator><name pos:start="859:60" pos:end="859:63">opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="859:66" pos:end="859:66">&lt;</operator> <literal type="number" pos:start="859:68" pos:end="859:68">0</literal></expr>)</condition> <block pos:start="859:71" pos:end="869:13">{<block_content pos:start="861:17" pos:end="867:33">

                <expr_stmt pos:start="861:17" pos:end="863:53"><expr pos:start="861:17" pos:end="863:52"><call pos:start="861:17" pos:end="863:52"><name pos:start="861:17" pos:end="861:24">snprintf</name><argument_list pos:start="861:25" pos:end="863:52">(<argument pos:start="861:26" pos:end="861:30"><expr pos:start="861:26" pos:end="861:30"><name pos:start="861:26" pos:end="861:30">error</name></expr></argument>, <argument pos:start="861:33" pos:end="861:45"><expr pos:start="861:33" pos:end="861:45"><sizeof pos:start="861:33" pos:end="861:45">sizeof<argument_list pos:start="861:39" pos:end="861:45">(<argument pos:start="861:40" pos:end="861:44"><expr pos:start="861:40" pos:end="861:44"><name pos:start="861:40" pos:end="861:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="861:48" pos:end="861:170"><expr pos:start="861:48" pos:end="861:170"><literal type="string" pos:start="861:48" pos:end="861:170">"Error while opening encoder for output stream #%d.%d - maybe incorrect parameters such as bit_rate, rate, width or height"</literal></expr></argument>,

                        <argument pos:start="863:25" pos:end="863:39"><expr pos:start="863:25" pos:end="863:39"><name pos:start="863:25" pos:end="863:39"><name pos:start="863:25" pos:end="863:27">ost</name><operator pos:start="863:28" pos:end="863:29">-&gt;</operator><name pos:start="863:30" pos:end="863:39">file_index</name></name></expr></argument>, <argument pos:start="863:42" pos:end="863:51"><expr pos:start="863:42" pos:end="863:51"><name pos:start="863:42" pos:end="863:51"><name pos:start="863:42" pos:end="863:44">ost</name><operator pos:start="863:45" pos:end="863:46">-&gt;</operator><name pos:start="863:47" pos:end="863:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="865:17" pos:end="865:38"><expr pos:start="865:17" pos:end="865:37"><name pos:start="865:17" pos:end="865:19">ret</name> <operator pos:start="865:21" pos:end="865:21">=</operator> <call pos:start="865:23" pos:end="865:37"><name pos:start="865:23" pos:end="865:29">AVERROR</name><argument_list pos:start="865:30" pos:end="865:37">(<argument pos:start="865:31" pos:end="865:36"><expr pos:start="865:31" pos:end="865:36"><name pos:start="865:31" pos:end="865:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="867:17" pos:end="867:33">goto <name pos:start="867:22" pos:end="867:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="871:13" pos:end="871:57"><expr pos:start="871:13" pos:end="871:56"><call pos:start="871:13" pos:end="871:56"><name pos:start="871:13" pos:end="871:37">assert_codec_experimental</name><argument_list pos:start="871:38" pos:end="871:56">(<argument pos:start="871:39" pos:end="871:52"><expr pos:start="871:39" pos:end="871:52"><name pos:start="871:39" pos:end="871:52"><name pos:start="871:39" pos:end="871:41">ost</name><operator pos:start="871:42" pos:end="871:43">-&gt;</operator><name pos:start="871:44" pos:end="871:45">st</name><operator pos:start="871:46" pos:end="871:47">-&gt;</operator><name pos:start="871:48" pos:end="871:52">codec</name></name></expr></argument>, <argument pos:start="871:55" pos:end="871:55"><expr pos:start="871:55" pos:end="871:55"><literal type="number" pos:start="871:55" pos:end="871:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="873:13" pos:end="873:40"><expr pos:start="873:13" pos:end="873:39"><call pos:start="873:13" pos:end="873:39"><name pos:start="873:13" pos:end="873:28">assert_avoptions</name><argument_list pos:start="873:29" pos:end="873:39">(<argument pos:start="873:30" pos:end="873:38"><expr pos:start="873:30" pos:end="873:38"><name pos:start="873:30" pos:end="873:38"><name pos:start="873:30" pos:end="873:32">ost</name><operator pos:start="873:33" pos:end="873:34">-&gt;</operator><name pos:start="873:35" pos:end="873:38">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="875:13" pos:end="879:91"><if pos:start="875:13" pos:end="879:91">if <condition pos:start="875:16" pos:end="875:76">(<expr pos:start="875:17" pos:end="875:75"><name pos:start="875:17" pos:end="875:40"><name pos:start="875:17" pos:end="875:19">ost</name><operator pos:start="875:20" pos:end="875:21">-&gt;</operator><name pos:start="875:22" pos:end="875:23">st</name><operator pos:start="875:24" pos:end="875:25">-&gt;</operator><name pos:start="875:26" pos:end="875:30">codec</name><operator pos:start="875:31" pos:end="875:32">-&gt;</operator><name pos:start="875:33" pos:end="875:40">bit_rate</name></name> <operator pos:start="875:42" pos:end="875:43">&amp;&amp;</operator> <name pos:start="875:45" pos:end="875:68"><name pos:start="875:45" pos:end="875:47">ost</name><operator pos:start="875:48" pos:end="875:49">-&gt;</operator><name pos:start="875:50" pos:end="875:51">st</name><operator pos:start="875:52" pos:end="875:53">-&gt;</operator><name pos:start="875:54" pos:end="875:58">codec</name><operator pos:start="875:59" pos:end="875:60">-&gt;</operator><name pos:start="875:61" pos:end="875:68">bit_rate</name></name> <operator pos:start="875:70" pos:end="875:70">&lt;</operator> <literal type="number" pos:start="875:72" pos:end="875:75">1000</literal></expr>)</condition><block type="pseudo" pos:start="877:17" pos:end="879:91"><block_content pos:start="877:17" pos:end="879:91">

                <expr_stmt pos:start="877:17" pos:end="879:91"><expr pos:start="877:17" pos:end="879:90"><call pos:start="877:17" pos:end="879:90"><name pos:start="877:17" pos:end="877:22">av_log</name><argument_list pos:start="877:23" pos:end="879:90">(<argument pos:start="877:24" pos:end="877:27"><expr pos:start="877:24" pos:end="877:27"><name pos:start="877:24" pos:end="877:27">NULL</name></expr></argument>, <argument pos:start="877:30" pos:end="877:43"><expr pos:start="877:30" pos:end="877:43"><name pos:start="877:30" pos:end="877:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="877:46" pos:end="879:89"><expr pos:start="877:46" pos:end="879:89"><literal type="string" pos:start="877:46" pos:end="877:84">"The bitrate parameter is set too low."</literal>

                                             <literal type="string" pos:start="879:46" pos:end="879:89">"It takes bits/s as argument, not kbits/s\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="881:13" pos:end="881:57"><expr pos:start="881:13" pos:end="881:56"><name pos:start="881:13" pos:end="881:22">extra_size</name> <operator pos:start="881:24" pos:end="881:25">+=</operator> <name pos:start="881:27" pos:end="881:56"><name pos:start="881:27" pos:end="881:29">ost</name><operator pos:start="881:30" pos:end="881:31">-&gt;</operator><name pos:start="881:32" pos:end="881:33">st</name><operator pos:start="881:34" pos:end="881:35">-&gt;</operator><name pos:start="881:36" pos:end="881:40">codec</name><operator pos:start="881:41" pos:end="881:42">-&gt;</operator><name pos:start="881:43" pos:end="881:56">extradata_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="889:5" pos:end="889:27">/* open each decoder */</comment>

    <for pos:start="891:5" pos:end="937:5">for <control pos:start="891:9" pos:end="891:42">(<init pos:start="891:10" pos:end="891:15"><expr pos:start="891:10" pos:end="891:14"><name pos:start="891:10" pos:end="891:10">i</name> <operator pos:start="891:12" pos:end="891:12">=</operator> <literal type="number" pos:start="891:14" pos:end="891:14">0</literal></expr>;</init> <condition pos:start="891:17" pos:end="891:37"><expr pos:start="891:17" pos:end="891:36"><name pos:start="891:17" pos:end="891:17">i</name> <operator pos:start="891:19" pos:end="891:19">&lt;</operator> <name pos:start="891:21" pos:end="891:36">nb_input_streams</name></expr>;</condition> <incr pos:start="891:39" pos:end="891:41"><expr pos:start="891:39" pos:end="891:41"><name pos:start="891:39" pos:end="891:39">i</name><operator pos:start="891:40" pos:end="891:41">++</operator></expr></incr>)</control> <block pos:start="891:44" pos:end="937:5">{<block_content pos:start="893:9" pos:end="935:9">

        <expr_stmt pos:start="893:9" pos:end="893:32"><expr pos:start="893:9" pos:end="893:31"><name pos:start="893:9" pos:end="893:11">ist</name> <operator pos:start="893:13" pos:end="893:13">=</operator> <operator pos:start="893:15" pos:end="893:15">&amp;</operator><name pos:start="893:16" pos:end="893:31"><name pos:start="893:16" pos:end="893:28">input_streams</name><index pos:start="893:29" pos:end="893:31">[<expr pos:start="893:30" pos:end="893:30"><name pos:start="893:30" pos:end="893:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="895:9" pos:end="935:9"><if pos:start="895:9" pos:end="935:9">if <condition pos:start="895:12" pos:end="895:33">(<expr pos:start="895:13" pos:end="895:32"><name pos:start="895:13" pos:end="895:32"><name pos:start="895:13" pos:end="895:15">ist</name><operator pos:start="895:16" pos:end="895:17">-&gt;</operator><name pos:start="895:18" pos:end="895:32">decoding_needed</name></name></expr>)</condition> <block pos:start="895:35" pos:end="935:9">{<block_content pos:start="897:13" pos:end="929:40">

            <decl_stmt pos:start="897:13" pos:end="897:38"><decl pos:start="897:13" pos:end="897:37"><type pos:start="897:13" pos:end="897:21"><name pos:start="897:13" pos:end="897:19">AVCodec</name> <modifier pos:start="897:21" pos:end="897:21">*</modifier></type><name pos:start="897:22" pos:end="897:26">codec</name> <init pos:start="897:28" pos:end="897:37">= <expr pos:start="897:30" pos:end="897:37"><name pos:start="897:30" pos:end="897:37"><name pos:start="897:30" pos:end="897:32">ist</name><operator pos:start="897:33" pos:end="897:34">-&gt;</operator><name pos:start="897:35" pos:end="897:37">dec</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="899:13" pos:end="901:71"><if pos:start="899:13" pos:end="901:71">if <condition pos:start="899:16" pos:end="899:23">(<expr pos:start="899:17" pos:end="899:22"><operator pos:start="899:17" pos:end="899:17">!</operator><name pos:start="899:18" pos:end="899:22">codec</name></expr>)</condition><block type="pseudo" pos:start="901:17" pos:end="901:71"><block_content pos:start="901:17" pos:end="901:71">

                <expr_stmt pos:start="901:17" pos:end="901:71"><expr pos:start="901:17" pos:end="901:70"><name pos:start="901:17" pos:end="901:21">codec</name> <operator pos:start="901:23" pos:end="901:23">=</operator> <call pos:start="901:25" pos:end="901:70"><name pos:start="901:25" pos:end="901:44">avcodec_find_decoder</name><argument_list pos:start="901:45" pos:end="901:70">(<argument pos:start="901:46" pos:end="901:69"><expr pos:start="901:46" pos:end="901:69"><name pos:start="901:46" pos:end="901:69"><name pos:start="901:46" pos:end="901:48">ist</name><operator pos:start="901:49" pos:end="901:50">-&gt;</operator><name pos:start="901:51" pos:end="901:52">st</name><operator pos:start="901:53" pos:end="901:54">-&gt;</operator><name pos:start="901:55" pos:end="901:59">codec</name><operator pos:start="901:60" pos:end="901:61">-&gt;</operator><name pos:start="901:62" pos:end="901:69">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="903:13" pos:end="913:13"><if pos:start="903:13" pos:end="913:13">if <condition pos:start="903:16" pos:end="903:23">(<expr pos:start="903:17" pos:end="903:22"><operator pos:start="903:17" pos:end="903:17">!</operator><name pos:start="903:18" pos:end="903:22">codec</name></expr>)</condition> <block pos:start="903:25" pos:end="913:13">{<block_content pos:start="905:17" pos:end="911:33">

                <expr_stmt pos:start="905:17" pos:end="907:83"><expr pos:start="905:17" pos:end="907:82"><call pos:start="905:17" pos:end="907:82"><name pos:start="905:17" pos:end="905:24">snprintf</name><argument_list pos:start="905:25" pos:end="907:82">(<argument pos:start="905:26" pos:end="905:30"><expr pos:start="905:26" pos:end="905:30"><name pos:start="905:26" pos:end="905:30">error</name></expr></argument>, <argument pos:start="905:33" pos:end="905:45"><expr pos:start="905:33" pos:end="905:45"><sizeof pos:start="905:33" pos:end="905:45">sizeof<argument_list pos:start="905:39" pos:end="905:45">(<argument pos:start="905:40" pos:end="905:44"><expr pos:start="905:40" pos:end="905:44"><name pos:start="905:40" pos:end="905:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="905:48" pos:end="905:104"><expr pos:start="905:48" pos:end="905:104"><literal type="string" pos:start="905:48" pos:end="905:104">"Decoder (codec id %d) not found for input stream #%d.%d"</literal></expr></argument>,

                        <argument pos:start="907:25" pos:end="907:48"><expr pos:start="907:25" pos:end="907:48"><name pos:start="907:25" pos:end="907:48"><name pos:start="907:25" pos:end="907:27">ist</name><operator pos:start="907:28" pos:end="907:29">-&gt;</operator><name pos:start="907:30" pos:end="907:31">st</name><operator pos:start="907:32" pos:end="907:33">-&gt;</operator><name pos:start="907:34" pos:end="907:38">codec</name><operator pos:start="907:39" pos:end="907:40">-&gt;</operator><name pos:start="907:41" pos:end="907:48">codec_id</name></name></expr></argument>, <argument pos:start="907:51" pos:end="907:65"><expr pos:start="907:51" pos:end="907:65"><name pos:start="907:51" pos:end="907:65"><name pos:start="907:51" pos:end="907:53">ist</name><operator pos:start="907:54" pos:end="907:55">-&gt;</operator><name pos:start="907:56" pos:end="907:65">file_index</name></name></expr></argument>, <argument pos:start="907:68" pos:end="907:81"><expr pos:start="907:68" pos:end="907:81"><name pos:start="907:68" pos:end="907:81"><name pos:start="907:68" pos:end="907:70">ist</name><operator pos:start="907:71" pos:end="907:72">-&gt;</operator><name pos:start="907:73" pos:end="907:74">st</name><operator pos:start="907:75" pos:end="907:76">-&gt;</operator><name pos:start="907:77" pos:end="907:81">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="909:17" pos:end="909:38"><expr pos:start="909:17" pos:end="909:37"><name pos:start="909:17" pos:end="909:19">ret</name> <operator pos:start="909:21" pos:end="909:21">=</operator> <call pos:start="909:23" pos:end="909:37"><name pos:start="909:23" pos:end="909:29">AVERROR</name><argument_list pos:start="909:30" pos:end="909:37">(<argument pos:start="909:31" pos:end="909:36"><expr pos:start="909:31" pos:end="909:36"><name pos:start="909:31" pos:end="909:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="911:17" pos:end="911:33">goto <name pos:start="911:22" pos:end="911:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="915:13" pos:end="925:13"><if pos:start="915:13" pos:end="925:13">if <condition pos:start="915:16" pos:end="915:69">(<expr pos:start="915:17" pos:end="915:68"><call pos:start="915:17" pos:end="915:64"><name pos:start="915:17" pos:end="915:29">avcodec_open2</name><argument_list pos:start="915:30" pos:end="915:64">(<argument pos:start="915:31" pos:end="915:44"><expr pos:start="915:31" pos:end="915:44"><name pos:start="915:31" pos:end="915:44"><name pos:start="915:31" pos:end="915:33">ist</name><operator pos:start="915:34" pos:end="915:35">-&gt;</operator><name pos:start="915:36" pos:end="915:37">st</name><operator pos:start="915:38" pos:end="915:39">-&gt;</operator><name pos:start="915:40" pos:end="915:44">codec</name></name></expr></argument>, <argument pos:start="915:47" pos:end="915:51"><expr pos:start="915:47" pos:end="915:51"><name pos:start="915:47" pos:end="915:51">codec</name></expr></argument>, <argument pos:start="915:54" pos:end="915:63"><expr pos:start="915:54" pos:end="915:63"><operator pos:start="915:54" pos:end="915:54">&amp;</operator><name pos:start="915:55" pos:end="915:63"><name pos:start="915:55" pos:end="915:57">ist</name><operator pos:start="915:58" pos:end="915:59">-&gt;</operator><name pos:start="915:60" pos:end="915:63">opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="915:66" pos:end="915:66">&lt;</operator> <literal type="number" pos:start="915:68" pos:end="915:68">0</literal></expr>)</condition> <block pos:start="915:71" pos:end="925:13">{<block_content pos:start="917:17" pos:end="923:33">

                <expr_stmt pos:start="917:17" pos:end="919:57"><expr pos:start="917:17" pos:end="919:56"><call pos:start="917:17" pos:end="919:56"><name pos:start="917:17" pos:end="917:24">snprintf</name><argument_list pos:start="917:25" pos:end="919:56">(<argument pos:start="917:26" pos:end="917:30"><expr pos:start="917:26" pos:end="917:30"><name pos:start="917:26" pos:end="917:30">error</name></expr></argument>, <argument pos:start="917:33" pos:end="917:45"><expr pos:start="917:33" pos:end="917:45"><sizeof pos:start="917:33" pos:end="917:45">sizeof<argument_list pos:start="917:39" pos:end="917:45">(<argument pos:start="917:40" pos:end="917:44"><expr pos:start="917:40" pos:end="917:44"><name pos:start="917:40" pos:end="917:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="917:48" pos:end="917:100"><expr pos:start="917:48" pos:end="917:100"><literal type="string" pos:start="917:48" pos:end="917:100">"Error while opening decoder for input stream #%d.%d"</literal></expr></argument>,

                        <argument pos:start="919:25" pos:end="919:39"><expr pos:start="919:25" pos:end="919:39"><name pos:start="919:25" pos:end="919:39"><name pos:start="919:25" pos:end="919:27">ist</name><operator pos:start="919:28" pos:end="919:29">-&gt;</operator><name pos:start="919:30" pos:end="919:39">file_index</name></name></expr></argument>, <argument pos:start="919:42" pos:end="919:55"><expr pos:start="919:42" pos:end="919:55"><name pos:start="919:42" pos:end="919:55"><name pos:start="919:42" pos:end="919:44">ist</name><operator pos:start="919:45" pos:end="919:46">-&gt;</operator><name pos:start="919:47" pos:end="919:48">st</name><operator pos:start="919:49" pos:end="919:50">-&gt;</operator><name pos:start="919:51" pos:end="919:55">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="921:17" pos:end="921:38"><expr pos:start="921:17" pos:end="921:37"><name pos:start="921:17" pos:end="921:19">ret</name> <operator pos:start="921:21" pos:end="921:21">=</operator> <call pos:start="921:23" pos:end="921:37"><name pos:start="921:23" pos:end="921:29">AVERROR</name><argument_list pos:start="921:30" pos:end="921:37">(<argument pos:start="921:31" pos:end="921:36"><expr pos:start="921:31" pos:end="921:36"><name pos:start="921:31" pos:end="921:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="923:17" pos:end="923:33">goto <name pos:start="923:22" pos:end="923:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="927:13" pos:end="927:57"><expr pos:start="927:13" pos:end="927:56"><call pos:start="927:13" pos:end="927:56"><name pos:start="927:13" pos:end="927:37">assert_codec_experimental</name><argument_list pos:start="927:38" pos:end="927:56">(<argument pos:start="927:39" pos:end="927:52"><expr pos:start="927:39" pos:end="927:52"><name pos:start="927:39" pos:end="927:52"><name pos:start="927:39" pos:end="927:41">ist</name><operator pos:start="927:42" pos:end="927:43">-&gt;</operator><name pos:start="927:44" pos:end="927:45">st</name><operator pos:start="927:46" pos:end="927:47">-&gt;</operator><name pos:start="927:48" pos:end="927:52">codec</name></name></expr></argument>, <argument pos:start="927:55" pos:end="927:55"><expr pos:start="927:55" pos:end="927:55"><literal type="number" pos:start="927:55" pos:end="927:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="929:13" pos:end="929:40"><expr pos:start="929:13" pos:end="929:39"><call pos:start="929:13" pos:end="929:39"><name pos:start="929:13" pos:end="929:28">assert_avoptions</name><argument_list pos:start="929:29" pos:end="929:39">(<argument pos:start="929:30" pos:end="929:38"><expr pos:start="929:30" pos:end="929:38"><name pos:start="929:30" pos:end="929:38"><name pos:start="929:30" pos:end="929:32">ost</name><operator pos:start="929:33" pos:end="929:34">-&gt;</operator><name pos:start="929:35" pos:end="929:38">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="931:13" pos:end="931:67">//if (ist-&gt;st-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_VIDEO)</comment>

            <comment type="line" pos:start="933:13" pos:end="933:67">//    ist-&gt;st-&gt;codec-&gt;flags |= CODEC_FLAG_REPEAT_FIELD;</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="941:5" pos:end="941:18">/* init pts */</comment>

    <for pos:start="943:5" pos:end="957:5">for <control pos:start="943:9" pos:end="943:42">(<init pos:start="943:10" pos:end="943:15"><expr pos:start="943:10" pos:end="943:14"><name pos:start="943:10" pos:end="943:10">i</name> <operator pos:start="943:12" pos:end="943:12">=</operator> <literal type="number" pos:start="943:14" pos:end="943:14">0</literal></expr>;</init> <condition pos:start="943:17" pos:end="943:37"><expr pos:start="943:17" pos:end="943:36"><name pos:start="943:17" pos:end="943:17">i</name> <operator pos:start="943:19" pos:end="943:19">&lt;</operator> <name pos:start="943:21" pos:end="943:36">nb_input_streams</name></expr>;</condition> <incr pos:start="943:39" pos:end="943:41"><expr pos:start="943:39" pos:end="943:41"><name pos:start="943:39" pos:end="943:39">i</name><operator pos:start="943:40" pos:end="943:41">++</operator></expr></incr>)</control> <block pos:start="943:44" pos:end="957:5">{<block_content pos:start="945:9" pos:end="955:26">

        <decl_stmt pos:start="945:9" pos:end="945:21"><decl pos:start="945:9" pos:end="945:20"><type pos:start="945:9" pos:end="945:18"><name pos:start="945:9" pos:end="945:16">AVStream</name> <modifier pos:start="945:18" pos:end="945:18">*</modifier></type><name pos:start="945:19" pos:end="945:20">st</name></decl>;</decl_stmt>

        <expr_stmt pos:start="947:9" pos:end="947:32"><expr pos:start="947:9" pos:end="947:31"><name pos:start="947:9" pos:end="947:11">ist</name> <operator pos:start="947:13" pos:end="947:13">=</operator> <operator pos:start="947:15" pos:end="947:15">&amp;</operator><name pos:start="947:16" pos:end="947:31"><name pos:start="947:16" pos:end="947:28">input_streams</name><index pos:start="947:29" pos:end="947:31">[<expr pos:start="947:30" pos:end="947:30"><name pos:start="947:30" pos:end="947:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="949:9" pos:end="949:20"><expr pos:start="949:9" pos:end="949:19"><name pos:start="949:9" pos:end="949:10">st</name><operator pos:start="949:11" pos:end="949:11">=</operator> <name pos:start="949:13" pos:end="949:19"><name pos:start="949:13" pos:end="949:15">ist</name><operator pos:start="949:16" pos:end="949:17">-&gt;</operator><name pos:start="949:18" pos:end="949:19">st</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="951:9" pos:end="951:116"><expr pos:start="951:9" pos:end="951:115"><name pos:start="951:9" pos:end="951:16"><name pos:start="951:9" pos:end="951:11">ist</name><operator pos:start="951:12" pos:end="951:13">-&gt;</operator><name pos:start="951:14" pos:end="951:16">pts</name></name> <operator pos:start="951:18" pos:end="951:18">=</operator> <ternary pos:start="951:20" pos:end="951:115"><condition pos:start="951:20" pos:end="951:43"><expr pos:start="951:20" pos:end="951:41"><name pos:start="951:20" pos:end="951:41"><name pos:start="951:20" pos:end="951:21">st</name><operator pos:start="951:22" pos:end="951:23">-&gt;</operator><name pos:start="951:24" pos:end="951:37">avg_frame_rate</name><operator pos:start="951:38" pos:end="951:38">.</operator><name pos:start="951:39" pos:end="951:41">num</name></name></expr> ?</condition><then pos:start="951:45" pos:end="951:111"> <expr pos:start="951:45" pos:end="951:111"><operator pos:start="951:45" pos:end="951:45">-</operator> <name pos:start="951:47" pos:end="951:69"><name pos:start="951:47" pos:end="951:48">st</name><operator pos:start="951:49" pos:end="951:50">-&gt;</operator><name pos:start="951:51" pos:end="951:55">codec</name><operator pos:start="951:56" pos:end="951:57">-&gt;</operator><name pos:start="951:58" pos:end="951:69">has_b_frames</name></name><operator pos:start="951:70" pos:end="951:70">*</operator><name pos:start="951:71" pos:end="951:82">AV_TIME_BASE</name> <operator pos:start="951:84" pos:end="951:84">/</operator> <call pos:start="951:86" pos:end="951:111"><name pos:start="951:86" pos:end="951:91">av_q2d</name><argument_list pos:start="951:92" pos:end="951:111">(<argument pos:start="951:93" pos:end="951:110"><expr pos:start="951:93" pos:end="951:110"><name pos:start="951:93" pos:end="951:110"><name pos:start="951:93" pos:end="951:94">st</name><operator pos:start="951:95" pos:end="951:96">-&gt;</operator><name pos:start="951:97" pos:end="951:110">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="951:113" pos:end="951:115">: <expr pos:start="951:115" pos:end="951:115"><literal type="number" pos:start="951:115" pos:end="951:115">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="953:9" pos:end="953:39"><expr pos:start="953:9" pos:end="953:38"><name pos:start="953:9" pos:end="953:21"><name pos:start="953:9" pos:end="953:11">ist</name><operator pos:start="953:12" pos:end="953:13">-&gt;</operator><name pos:start="953:14" pos:end="953:21">next_pts</name></name> <operator pos:start="953:23" pos:end="953:23">=</operator> <name pos:start="953:25" pos:end="953:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="955:9" pos:end="955:26"><expr pos:start="955:9" pos:end="955:25"><name pos:start="955:9" pos:end="955:21"><name pos:start="955:9" pos:end="955:11">ist</name><operator pos:start="955:12" pos:end="955:13">-&gt;</operator><name pos:start="955:14" pos:end="955:21">is_start</name></name> <operator pos:start="955:23" pos:end="955:23">=</operator> <literal type="number" pos:start="955:25" pos:end="955:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="961:5" pos:end="961:63">/* set meta data information from input file if required */</comment>

    <for pos:start="963:5" pos:end="1055:5">for <control pos:start="963:9" pos:end="963:37">(<init pos:start="963:10" pos:end="963:13"><expr pos:start="963:10" pos:end="963:12"><name pos:start="963:10" pos:end="963:10">i</name><operator pos:start="963:11" pos:end="963:11">=</operator><literal type="number" pos:start="963:12" pos:end="963:12">0</literal></expr>;</init><condition pos:start="963:14" pos:end="963:33"><expr pos:start="963:14" pos:end="963:32"><name pos:start="963:14" pos:end="963:14">i</name><operator pos:start="963:15" pos:end="963:15">&lt;</operator><name pos:start="963:16" pos:end="963:32">nb_meta_data_maps</name></expr>;</condition><incr pos:start="963:34" pos:end="963:36"><expr pos:start="963:34" pos:end="963:36"><name pos:start="963:34" pos:end="963:34">i</name><operator pos:start="963:35" pos:end="963:36">++</operator></expr></incr>)</control> <block pos:start="963:39" pos:end="1055:5">{<block_content pos:start="965:9" pos:end="1053:64">

        <decl_stmt pos:start="965:9" pos:end="965:34"><decl pos:start="965:9" pos:end="965:33"><type pos:start="965:9" pos:end="965:25"><name pos:start="965:9" pos:end="965:23">AVFormatContext</name> <modifier pos:start="965:25" pos:end="965:25">*</modifier></type><name pos:start="965:26" pos:end="965:33"><name pos:start="965:26" pos:end="965:30">files</name><index pos:start="965:31" pos:end="965:33">[<expr pos:start="965:32" pos:end="965:32"><literal type="number" pos:start="965:32" pos:end="965:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="967:9" pos:end="967:34"><decl pos:start="967:9" pos:end="967:33"><type pos:start="967:9" pos:end="967:26"><name pos:start="967:9" pos:end="967:20">AVDictionary</name>    <modifier pos:start="967:25" pos:end="967:25">*</modifier><modifier pos:start="967:26" pos:end="967:26">*</modifier></type><name pos:start="967:27" pos:end="967:33"><name pos:start="967:27" pos:end="967:30">meta</name><index pos:start="967:31" pos:end="967:33">[<expr pos:start="967:32" pos:end="967:32"><literal type="number" pos:start="967:32" pos:end="967:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="969:9" pos:end="986:0"><decl pos:start="969:9" pos:end="969:13"><type pos:start="969:9" pos:end="969:11"><name pos:start="969:9" pos:end="969:11">int</name></type> <name pos:start="969:13" pos:end="969:13">j</name></decl>;</decl_stmt>



<cpp:define pos:start="973:1" pos:end="985:9">#<cpp:directive pos:start="973:2" pos:end="973:7">define</cpp:directive> <cpp:macro pos:start="973:9" pos:end="973:51"><name pos:start="973:9" pos:end="973:28">METADATA_CHECK_INDEX</name><parameter_list pos:start="973:29" pos:end="973:51">(<parameter pos:start="973:30" pos:end="973:34"><type pos:start="973:30" pos:end="973:34"><name pos:start="973:30" pos:end="973:34">index</name></type></parameter>, <parameter pos:start="973:37" pos:end="973:44"><type pos:start="973:37" pos:end="973:44"><name pos:start="973:37" pos:end="973:44">nb_elems</name></type></parameter>, <parameter pos:start="973:47" pos:end="973:50"><type pos:start="973:47" pos:end="973:50"><name pos:start="973:47" pos:end="973:50">desc</name></type></parameter>)</parameter_list></cpp:macro>\

        <cpp:value pos:start="975:9" pos:end="985:9">if ((index) &lt; 0 || (index) &gt;= (nb_elems)) {\

            snprintf(error, sizeof(error), "Invalid %s index %d while processing metadata maps\n",\

                     (desc), (index));\

            ret = AVERROR(EINVAL);\

            goto dump_format;\

        }</cpp:value></cpp:define>



        <decl_stmt pos:start="989:9" pos:end="989:55"><decl pos:start="989:9" pos:end="989:54"><type pos:start="989:9" pos:end="989:11"><name pos:start="989:9" pos:end="989:11">int</name></type> <name pos:start="989:13" pos:end="989:26">out_file_index</name> <init pos:start="989:28" pos:end="989:54">= <expr pos:start="989:30" pos:end="989:54"><name pos:start="989:30" pos:end="989:49"><name pos:start="989:30" pos:end="989:43">meta_data_maps</name><index pos:start="989:44" pos:end="989:46">[<expr pos:start="989:45" pos:end="989:45"><name pos:start="989:45" pos:end="989:45">i</name></expr>]</index><index pos:start="989:47" pos:end="989:49">[<expr pos:start="989:48" pos:end="989:48"><literal type="number" pos:start="989:48" pos:end="989:48">0</literal></expr>]</index></name><operator pos:start="989:50" pos:end="989:50">.</operator><name pos:start="989:51" pos:end="989:54">file</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="991:9" pos:end="991:54"><decl pos:start="991:9" pos:end="991:53"><type pos:start="991:9" pos:end="991:11"><name pos:start="991:9" pos:end="991:11">int</name></type> <name pos:start="991:13" pos:end="991:25">in_file_index</name> <init pos:start="991:27" pos:end="991:53">= <expr pos:start="991:29" pos:end="991:53"><name pos:start="991:29" pos:end="991:48"><name pos:start="991:29" pos:end="991:42">meta_data_maps</name><index pos:start="991:43" pos:end="991:45">[<expr pos:start="991:44" pos:end="991:44"><name pos:start="991:44" pos:end="991:44">i</name></expr>]</index><index pos:start="991:46" pos:end="991:48">[<expr pos:start="991:47" pos:end="991:47"><literal type="number" pos:start="991:47" pos:end="991:47">1</literal></expr>]</index></name><operator pos:start="991:49" pos:end="991:49">.</operator><name pos:start="991:50" pos:end="991:53">file</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="993:9" pos:end="995:21"><if pos:start="993:9" pos:end="995:21">if <condition pos:start="993:12" pos:end="993:52">(<expr pos:start="993:13" pos:end="993:51"><name pos:start="993:13" pos:end="993:25">in_file_index</name> <operator pos:start="993:27" pos:end="993:27">&lt;</operator> <literal type="number" pos:start="993:29" pos:end="993:29">0</literal> <operator pos:start="993:31" pos:end="993:32">||</operator> <name pos:start="993:34" pos:end="993:47">out_file_index</name> <operator pos:start="993:49" pos:end="993:49">&lt;</operator> <literal type="number" pos:start="993:51" pos:end="993:51">0</literal></expr>)</condition><block type="pseudo" pos:start="995:13" pos:end="995:21"><block_content pos:start="995:13" pos:end="995:21">

            <continue pos:start="995:13" pos:end="995:21">continue;</continue></block_content></block></if></if_stmt>

        <macro pos:start="997:9" pos:end="997:76"><name pos:start="997:9" pos:end="997:28">METADATA_CHECK_INDEX</name><argument_list pos:start="997:29" pos:end="997:76">(<argument pos:start="997:30" pos:end="997:43">out_file_index</argument>, <argument pos:start="997:46" pos:end="997:60">nb_output_files</argument>, <argument pos:start="997:63" pos:end="997:75"><literal type="string" pos:start="997:63" pos:end="997:75">"output file"</literal></argument>)</argument_list></macro>

        <macro pos:start="999:9" pos:end="999:73"><name pos:start="999:9" pos:end="999:28">METADATA_CHECK_INDEX</name><argument_list pos:start="999:29" pos:end="999:73">(<argument pos:start="999:30" pos:end="999:42">in_file_index</argument>, <argument pos:start="999:45" pos:end="999:58">nb_input_files</argument>, <argument pos:start="999:61" pos:end="999:72"><literal type="string" pos:start="999:61" pos:end="999:72">"input file"</literal></argument>)</argument_list></macro>



        <expr_stmt pos:start="1003:9" pos:end="1003:48"><expr pos:start="1003:9" pos:end="1003:47"><name pos:start="1003:9" pos:end="1003:16"><name pos:start="1003:9" pos:end="1003:13">files</name><index pos:start="1003:14" pos:end="1003:16">[<expr pos:start="1003:15" pos:end="1003:15"><literal type="number" pos:start="1003:15" pos:end="1003:15">0</literal></expr>]</index></name> <operator pos:start="1003:18" pos:end="1003:18">=</operator> <name pos:start="1003:20" pos:end="1003:47"><name pos:start="1003:20" pos:end="1003:31">output_files</name><index pos:start="1003:32" pos:end="1003:47">[<expr pos:start="1003:33" pos:end="1003:46"><name pos:start="1003:33" pos:end="1003:46">out_file_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1005:9" pos:end="1005:50"><expr pos:start="1005:9" pos:end="1005:49"><name pos:start="1005:9" pos:end="1005:16"><name pos:start="1005:9" pos:end="1005:13">files</name><index pos:start="1005:14" pos:end="1005:16">[<expr pos:start="1005:15" pos:end="1005:15"><literal type="number" pos:start="1005:15" pos:end="1005:15">1</literal></expr>]</index></name> <operator pos:start="1005:18" pos:end="1005:18">=</operator> <name pos:start="1005:20" pos:end="1005:45"><name pos:start="1005:20" pos:end="1005:30">input_files</name><index pos:start="1005:31" pos:end="1005:45">[<expr pos:start="1005:32" pos:end="1005:44"><name pos:start="1005:32" pos:end="1005:44">in_file_index</name></expr>]</index></name><operator pos:start="1005:46" pos:end="1005:46">.</operator><name pos:start="1005:47" pos:end="1005:49">ctx</name></expr>;</expr_stmt>



        <for pos:start="1009:9" pos:end="1049:9">for <control pos:start="1009:13" pos:end="1009:31">(<init pos:start="1009:14" pos:end="1009:19"><expr pos:start="1009:14" pos:end="1009:18"><name pos:start="1009:14" pos:end="1009:14">j</name> <operator pos:start="1009:16" pos:end="1009:16">=</operator> <literal type="number" pos:start="1009:18" pos:end="1009:18">0</literal></expr>;</init> <condition pos:start="1009:21" pos:end="1009:26"><expr pos:start="1009:21" pos:end="1009:25"><name pos:start="1009:21" pos:end="1009:21">j</name> <operator pos:start="1009:23" pos:end="1009:23">&lt;</operator> <literal type="number" pos:start="1009:25" pos:end="1009:25">2</literal></expr>;</condition> <incr pos:start="1009:28" pos:end="1009:30"><expr pos:start="1009:28" pos:end="1009:30"><name pos:start="1009:28" pos:end="1009:28">j</name><operator pos:start="1009:29" pos:end="1009:30">++</operator></expr></incr>)</control> <block pos:start="1009:33" pos:end="1049:9">{<block_content pos:start="1011:13" pos:end="1047:13">

            <decl_stmt pos:start="1011:13" pos:end="1011:53"><decl pos:start="1011:13" pos:end="1011:52"><type pos:start="1011:13" pos:end="1011:25"><name pos:start="1011:13" pos:end="1011:23">MetadataMap</name> <modifier pos:start="1011:25" pos:end="1011:25">*</modifier></type><name pos:start="1011:26" pos:end="1011:28">map</name> <init pos:start="1011:30" pos:end="1011:52">= <expr pos:start="1011:32" pos:end="1011:52"><operator pos:start="1011:32" pos:end="1011:32">&amp;</operator><name pos:start="1011:33" pos:end="1011:52"><name pos:start="1011:33" pos:end="1011:46">meta_data_maps</name><index pos:start="1011:47" pos:end="1011:49">[<expr pos:start="1011:48" pos:end="1011:48"><name pos:start="1011:48" pos:end="1011:48">i</name></expr>]</index><index pos:start="1011:50" pos:end="1011:52">[<expr pos:start="1011:51" pos:end="1011:51"><name pos:start="1011:51" pos:end="1011:51">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <switch pos:start="1015:13" pos:end="1047:13">switch <condition pos:start="1015:20" pos:end="1015:30">(<expr pos:start="1015:21" pos:end="1015:29"><name pos:start="1015:21" pos:end="1015:29"><name pos:start="1015:21" pos:end="1015:23">map</name><operator pos:start="1015:24" pos:end="1015:25">-&gt;</operator><name pos:start="1015:26" pos:end="1015:29">type</name></name></expr>)</condition> <block pos:start="1015:32" pos:end="1047:13">{<block_content pos:start="1017:13" pos:end="1045:22">

            <case pos:start="1017:13" pos:end="1017:21">case <expr pos:start="1017:18" pos:end="1017:20"><literal type="char" pos:start="1017:18" pos:end="1017:20">'g'</literal></expr>:</case>

                <expr_stmt pos:start="1019:17" pos:end="1019:46"><expr pos:start="1019:17" pos:end="1019:45"><name pos:start="1019:17" pos:end="1019:23"><name pos:start="1019:17" pos:end="1019:20">meta</name><index pos:start="1019:21" pos:end="1019:23">[<expr pos:start="1019:22" pos:end="1019:22"><name pos:start="1019:22" pos:end="1019:22">j</name></expr>]</index></name> <operator pos:start="1019:25" pos:end="1019:25">=</operator> <operator pos:start="1019:27" pos:end="1019:27">&amp;</operator><name pos:start="1019:28" pos:end="1019:35"><name pos:start="1019:28" pos:end="1019:32">files</name><index pos:start="1019:33" pos:end="1019:35">[<expr pos:start="1019:34" pos:end="1019:34"><name pos:start="1019:34" pos:end="1019:34">j</name></expr>]</index></name><operator pos:start="1019:36" pos:end="1019:37">-&gt;</operator><name pos:start="1019:38" pos:end="1019:45">metadata</name></expr>;</expr_stmt>

                <break pos:start="1021:17" pos:end="1021:22">break;</break>

            <case pos:start="1023:13" pos:end="1023:21">case <expr pos:start="1023:18" pos:end="1023:20"><literal type="char" pos:start="1023:18" pos:end="1023:20">'s'</literal></expr>:</case>

                <macro pos:start="1025:17" pos:end="1025:80"><name pos:start="1025:17" pos:end="1025:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1025:37" pos:end="1025:80">(<argument pos:start="1025:38" pos:end="1025:47">map-&gt;index</argument>, <argument pos:start="1025:50" pos:end="1025:69">files[j]-&gt;nb_streams</argument>, <argument pos:start="1025:72" pos:end="1025:79"><literal type="string" pos:start="1025:72" pos:end="1025:79">"stream"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1027:17" pos:end="1027:67"><expr pos:start="1027:17" pos:end="1027:66"><name pos:start="1027:17" pos:end="1027:23"><name pos:start="1027:17" pos:end="1027:20">meta</name><index pos:start="1027:21" pos:end="1027:23">[<expr pos:start="1027:22" pos:end="1027:22"><name pos:start="1027:22" pos:end="1027:22">j</name></expr>]</index></name> <operator pos:start="1027:25" pos:end="1027:25">=</operator> <operator pos:start="1027:27" pos:end="1027:27">&amp;</operator><name pos:start="1027:28" pos:end="1027:35"><name pos:start="1027:28" pos:end="1027:32">files</name><index pos:start="1027:33" pos:end="1027:35">[<expr pos:start="1027:34" pos:end="1027:34"><name pos:start="1027:34" pos:end="1027:34">j</name></expr>]</index></name><operator pos:start="1027:36" pos:end="1027:37">-&gt;</operator><name pos:start="1027:38" pos:end="1027:56"><name pos:start="1027:38" pos:end="1027:44">streams</name><index pos:start="1027:45" pos:end="1027:56">[<expr pos:start="1027:46" pos:end="1027:55"><name pos:start="1027:46" pos:end="1027:55"><name pos:start="1027:46" pos:end="1027:48">map</name><operator pos:start="1027:49" pos:end="1027:50">-&gt;</operator><name pos:start="1027:51" pos:end="1027:55">index</name></name></expr>]</index></name><operator pos:start="1027:57" pos:end="1027:58">-&gt;</operator><name pos:start="1027:59" pos:end="1027:66">metadata</name></expr>;</expr_stmt>

                <break pos:start="1029:17" pos:end="1029:22">break;</break>

            <case pos:start="1031:13" pos:end="1031:21">case <expr pos:start="1031:18" pos:end="1031:20"><literal type="char" pos:start="1031:18" pos:end="1031:20">'c'</literal></expr>:</case>

                <macro pos:start="1033:17" pos:end="1033:82"><name pos:start="1033:17" pos:end="1033:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1033:37" pos:end="1033:82">(<argument pos:start="1033:38" pos:end="1033:47">map-&gt;index</argument>, <argument pos:start="1033:50" pos:end="1033:70">files[j]-&gt;nb_chapters</argument>, <argument pos:start="1033:73" pos:end="1033:81"><literal type="string" pos:start="1033:73" pos:end="1033:81">"chapter"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1035:17" pos:end="1035:68"><expr pos:start="1035:17" pos:end="1035:67"><name pos:start="1035:17" pos:end="1035:23"><name pos:start="1035:17" pos:end="1035:20">meta</name><index pos:start="1035:21" pos:end="1035:23">[<expr pos:start="1035:22" pos:end="1035:22"><name pos:start="1035:22" pos:end="1035:22">j</name></expr>]</index></name> <operator pos:start="1035:25" pos:end="1035:25">=</operator> <operator pos:start="1035:27" pos:end="1035:27">&amp;</operator><name pos:start="1035:28" pos:end="1035:35"><name pos:start="1035:28" pos:end="1035:32">files</name><index pos:start="1035:33" pos:end="1035:35">[<expr pos:start="1035:34" pos:end="1035:34"><name pos:start="1035:34" pos:end="1035:34">j</name></expr>]</index></name><operator pos:start="1035:36" pos:end="1035:37">-&gt;</operator><name pos:start="1035:38" pos:end="1035:57"><name pos:start="1035:38" pos:end="1035:45">chapters</name><index pos:start="1035:46" pos:end="1035:57">[<expr pos:start="1035:47" pos:end="1035:56"><name pos:start="1035:47" pos:end="1035:56"><name pos:start="1035:47" pos:end="1035:49">map</name><operator pos:start="1035:50" pos:end="1035:51">-&gt;</operator><name pos:start="1035:52" pos:end="1035:56">index</name></name></expr>]</index></name><operator pos:start="1035:58" pos:end="1035:59">-&gt;</operator><name pos:start="1035:60" pos:end="1035:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="1037:17" pos:end="1037:22">break;</break>

            <case pos:start="1039:13" pos:end="1039:21">case <expr pos:start="1039:18" pos:end="1039:20"><literal type="char" pos:start="1039:18" pos:end="1039:20">'p'</literal></expr>:</case>

                <macro pos:start="1041:17" pos:end="1041:82"><name pos:start="1041:17" pos:end="1041:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1041:37" pos:end="1041:82">(<argument pos:start="1041:38" pos:end="1041:47">map-&gt;index</argument>, <argument pos:start="1041:50" pos:end="1041:70">files[j]-&gt;nb_programs</argument>, <argument pos:start="1041:73" pos:end="1041:81"><literal type="string" pos:start="1041:73" pos:end="1041:81">"program"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1043:17" pos:end="1043:68"><expr pos:start="1043:17" pos:end="1043:67"><name pos:start="1043:17" pos:end="1043:23"><name pos:start="1043:17" pos:end="1043:20">meta</name><index pos:start="1043:21" pos:end="1043:23">[<expr pos:start="1043:22" pos:end="1043:22"><name pos:start="1043:22" pos:end="1043:22">j</name></expr>]</index></name> <operator pos:start="1043:25" pos:end="1043:25">=</operator> <operator pos:start="1043:27" pos:end="1043:27">&amp;</operator><name pos:start="1043:28" pos:end="1043:35"><name pos:start="1043:28" pos:end="1043:32">files</name><index pos:start="1043:33" pos:end="1043:35">[<expr pos:start="1043:34" pos:end="1043:34"><name pos:start="1043:34" pos:end="1043:34">j</name></expr>]</index></name><operator pos:start="1043:36" pos:end="1043:37">-&gt;</operator><name pos:start="1043:38" pos:end="1043:57"><name pos:start="1043:38" pos:end="1043:45">programs</name><index pos:start="1043:46" pos:end="1043:57">[<expr pos:start="1043:47" pos:end="1043:56"><name pos:start="1043:47" pos:end="1043:56"><name pos:start="1043:47" pos:end="1043:49">map</name><operator pos:start="1043:50" pos:end="1043:51">-&gt;</operator><name pos:start="1043:52" pos:end="1043:56">index</name></name></expr>]</index></name><operator pos:start="1043:58" pos:end="1043:59">-&gt;</operator><name pos:start="1043:60" pos:end="1043:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="1045:17" pos:end="1045:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>



        <expr_stmt pos:start="1053:9" pos:end="1053:64"><expr pos:start="1053:9" pos:end="1053:63"><call pos:start="1053:9" pos:end="1053:63"><name pos:start="1053:9" pos:end="1053:20">av_dict_copy</name><argument_list pos:start="1053:21" pos:end="1053:63">(<argument pos:start="1053:22" pos:end="1053:28"><expr pos:start="1053:22" pos:end="1053:28"><name pos:start="1053:22" pos:end="1053:28"><name pos:start="1053:22" pos:end="1053:25">meta</name><index pos:start="1053:26" pos:end="1053:28">[<expr pos:start="1053:27" pos:end="1053:27"><literal type="number" pos:start="1053:27" pos:end="1053:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1053:31" pos:end="1053:38"><expr pos:start="1053:31" pos:end="1053:38"><operator pos:start="1053:31" pos:end="1053:31">*</operator><name pos:start="1053:32" pos:end="1053:38"><name pos:start="1053:32" pos:end="1053:35">meta</name><index pos:start="1053:36" pos:end="1053:38">[<expr pos:start="1053:37" pos:end="1053:37"><literal type="number" pos:start="1053:37" pos:end="1053:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1053:41" pos:end="1053:62"><expr pos:start="1053:41" pos:end="1053:62"><name pos:start="1053:41" pos:end="1053:62">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1059:5" pos:end="1059:41">/* copy global metadata by default */</comment>

    <if_stmt pos:start="1061:5" pos:end="1071:5"><if pos:start="1061:5" pos:end="1071:5">if <condition pos:start="1061:8" pos:end="1061:33">(<expr pos:start="1061:9" pos:end="1061:32"><name pos:start="1061:9" pos:end="1061:32">metadata_global_autocopy</name></expr>)</condition> <block pos:start="1061:35" pos:end="1071:5">{<block_content pos:start="1065:9" pos:end="1069:49">



        <for pos:start="1065:9" pos:end="1069:49">for <control pos:start="1065:13" pos:end="1065:45">(<init pos:start="1065:14" pos:end="1065:19"><expr pos:start="1065:14" pos:end="1065:18"><name pos:start="1065:14" pos:end="1065:14">i</name> <operator pos:start="1065:16" pos:end="1065:16">=</operator> <literal type="number" pos:start="1065:18" pos:end="1065:18">0</literal></expr>;</init> <condition pos:start="1065:21" pos:end="1065:40"><expr pos:start="1065:21" pos:end="1065:39"><name pos:start="1065:21" pos:end="1065:21">i</name> <operator pos:start="1065:23" pos:end="1065:23">&lt;</operator> <name pos:start="1065:25" pos:end="1065:39">nb_output_files</name></expr>;</condition> <incr pos:start="1065:42" pos:end="1065:44"><expr pos:start="1065:42" pos:end="1065:44"><name pos:start="1065:42" pos:end="1065:42">i</name><operator pos:start="1065:43" pos:end="1065:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1067:13" pos:end="1069:49"><block_content pos:start="1067:13" pos:end="1069:49">

            <expr_stmt pos:start="1067:13" pos:end="1069:49"><expr pos:start="1067:13" pos:end="1069:48"><call pos:start="1067:13" pos:end="1069:48"><name pos:start="1067:13" pos:end="1067:24">av_dict_copy</name><argument_list pos:start="1067:25" pos:end="1069:48">(<argument pos:start="1067:26" pos:end="1067:51"><expr pos:start="1067:26" pos:end="1067:51"><operator pos:start="1067:26" pos:end="1067:26">&amp;</operator><name pos:start="1067:27" pos:end="1067:41"><name pos:start="1067:27" pos:end="1067:38">output_files</name><index pos:start="1067:39" pos:end="1067:41">[<expr pos:start="1067:40" pos:end="1067:40"><name pos:start="1067:40" pos:end="1067:40">i</name></expr>]</index></name><operator pos:start="1067:42" pos:end="1067:43">-&gt;</operator><name pos:start="1067:44" pos:end="1067:51">metadata</name></expr></argument>, <argument pos:start="1067:54" pos:end="1067:81"><expr pos:start="1067:54" pos:end="1067:81"><name pos:start="1067:54" pos:end="1067:67"><name pos:start="1067:54" pos:end="1067:64">input_files</name><index pos:start="1067:65" pos:end="1067:67">[<expr pos:start="1067:66" pos:end="1067:66"><literal type="number" pos:start="1067:66" pos:end="1067:66">0</literal></expr>]</index></name><operator pos:start="1067:68" pos:end="1067:68">.</operator><name pos:start="1067:69" pos:end="1067:81"><name pos:start="1067:69" pos:end="1067:71">ctx</name><operator pos:start="1067:72" pos:end="1067:73">-&gt;</operator><name pos:start="1067:74" pos:end="1067:81">metadata</name></name></expr></argument>,

                         <argument pos:start="1069:26" pos:end="1069:47"><expr pos:start="1069:26" pos:end="1069:47"><name pos:start="1069:26" pos:end="1069:47">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="1075:5" pos:end="1075:49">/* copy chapters according to chapter maps */</comment>

    <for pos:start="1077:5" pos:end="1111:5">for <control pos:start="1077:9" pos:end="1077:41">(<init pos:start="1077:10" pos:end="1077:15"><expr pos:start="1077:10" pos:end="1077:14"><name pos:start="1077:10" pos:end="1077:10">i</name> <operator pos:start="1077:12" pos:end="1077:12">=</operator> <literal type="number" pos:start="1077:14" pos:end="1077:14">0</literal></expr>;</init> <condition pos:start="1077:17" pos:end="1077:36"><expr pos:start="1077:17" pos:end="1077:35"><name pos:start="1077:17" pos:end="1077:17">i</name> <operator pos:start="1077:19" pos:end="1077:19">&lt;</operator> <name pos:start="1077:21" pos:end="1077:35">nb_chapter_maps</name></expr>;</condition> <incr pos:start="1077:38" pos:end="1077:40"><expr pos:start="1077:38" pos:end="1077:40"><name pos:start="1077:38" pos:end="1077:38">i</name><operator pos:start="1077:39" pos:end="1077:40">++</operator></expr></incr>)</control> <block pos:start="1077:43" pos:end="1111:5">{<block_content pos:start="1079:9" pos:end="1109:39">

        <decl_stmt pos:start="1079:9" pos:end="1079:46"><decl pos:start="1079:9" pos:end="1079:45"><type pos:start="1079:9" pos:end="1079:11"><name pos:start="1079:9" pos:end="1079:11">int</name></type> <name pos:start="1079:13" pos:end="1079:18">infile</name>  <init pos:start="1079:21" pos:end="1079:45">= <expr pos:start="1079:23" pos:end="1079:45"><name pos:start="1079:23" pos:end="1079:37"><name pos:start="1079:23" pos:end="1079:34">chapter_maps</name><index pos:start="1079:35" pos:end="1079:37">[<expr pos:start="1079:36" pos:end="1079:36"><name pos:start="1079:36" pos:end="1079:36">i</name></expr>]</index></name><operator pos:start="1079:38" pos:end="1079:38">.</operator><name pos:start="1079:39" pos:end="1079:45">in_file</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1081:9" pos:end="1081:47"><decl pos:start="1081:9" pos:end="1081:46"><type pos:start="1081:9" pos:end="1081:11"><name pos:start="1081:9" pos:end="1081:11">int</name></type> <name pos:start="1081:13" pos:end="1081:19">outfile</name> <init pos:start="1081:21" pos:end="1081:46">= <expr pos:start="1081:23" pos:end="1081:46"><name pos:start="1081:23" pos:end="1081:37"><name pos:start="1081:23" pos:end="1081:34">chapter_maps</name><index pos:start="1081:35" pos:end="1081:37">[<expr pos:start="1081:36" pos:end="1081:36"><name pos:start="1081:36" pos:end="1081:36">i</name></expr>]</index></name><operator pos:start="1081:38" pos:end="1081:38">.</operator><name pos:start="1081:39" pos:end="1081:46">out_file</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="1085:9" pos:end="1087:21"><if pos:start="1085:9" pos:end="1087:21">if <condition pos:start="1085:12" pos:end="1085:38">(<expr pos:start="1085:13" pos:end="1085:37"><name pos:start="1085:13" pos:end="1085:18">infile</name> <operator pos:start="1085:20" pos:end="1085:20">&lt;</operator> <literal type="number" pos:start="1085:22" pos:end="1085:22">0</literal> <operator pos:start="1085:24" pos:end="1085:25">||</operator> <name pos:start="1085:27" pos:end="1085:33">outfile</name> <operator pos:start="1085:35" pos:end="1085:35">&lt;</operator> <literal type="number" pos:start="1085:37" pos:end="1085:37">0</literal></expr>)</condition><block type="pseudo" pos:start="1087:13" pos:end="1087:21"><block_content pos:start="1087:13" pos:end="1087:21">

            <continue pos:start="1087:13" pos:end="1087:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="1089:9" pos:end="1097:9"><if pos:start="1089:9" pos:end="1097:9">if <condition pos:start="1089:12" pos:end="1089:37">(<expr pos:start="1089:13" pos:end="1089:36"><name pos:start="1089:13" pos:end="1089:18">infile</name> <operator pos:start="1089:20" pos:end="1089:21">&gt;=</operator> <name pos:start="1089:23" pos:end="1089:36">nb_input_files</name></expr>)</condition> <block pos:start="1089:39" pos:end="1097:9">{<block_content pos:start="1091:13" pos:end="1095:29">

            <expr_stmt pos:start="1091:13" pos:end="1091:104"><expr pos:start="1091:13" pos:end="1091:103"><call pos:start="1091:13" pos:end="1091:103"><name pos:start="1091:13" pos:end="1091:20">snprintf</name><argument_list pos:start="1091:21" pos:end="1091:103">(<argument pos:start="1091:22" pos:end="1091:26"><expr pos:start="1091:22" pos:end="1091:26"><name pos:start="1091:22" pos:end="1091:26">error</name></expr></argument>, <argument pos:start="1091:29" pos:end="1091:41"><expr pos:start="1091:29" pos:end="1091:41"><sizeof pos:start="1091:29" pos:end="1091:41">sizeof<argument_list pos:start="1091:35" pos:end="1091:41">(<argument pos:start="1091:36" pos:end="1091:40"><expr pos:start="1091:36" pos:end="1091:40"><name pos:start="1091:36" pos:end="1091:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1091:44" pos:end="1091:94"><expr pos:start="1091:44" pos:end="1091:94"><literal type="string" pos:start="1091:44" pos:end="1091:94">"Invalid input file index %d in chapter mapping.\n"</literal></expr></argument>, <argument pos:start="1091:97" pos:end="1091:102"><expr pos:start="1091:97" pos:end="1091:102"><name pos:start="1091:97" pos:end="1091:102">infile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1093:13" pos:end="1093:34"><expr pos:start="1093:13" pos:end="1093:33"><name pos:start="1093:13" pos:end="1093:15">ret</name> <operator pos:start="1093:17" pos:end="1093:17">=</operator> <call pos:start="1093:19" pos:end="1093:33"><name pos:start="1093:19" pos:end="1093:25">AVERROR</name><argument_list pos:start="1093:26" pos:end="1093:33">(<argument pos:start="1093:27" pos:end="1093:32"><expr pos:start="1093:27" pos:end="1093:32"><name pos:start="1093:27" pos:end="1093:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1095:13" pos:end="1095:29">goto <name pos:start="1095:18" pos:end="1095:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1099:9" pos:end="1107:9"><if pos:start="1099:9" pos:end="1107:9">if <condition pos:start="1099:12" pos:end="1099:39">(<expr pos:start="1099:13" pos:end="1099:38"><name pos:start="1099:13" pos:end="1099:19">outfile</name> <operator pos:start="1099:21" pos:end="1099:22">&gt;=</operator> <name pos:start="1099:24" pos:end="1099:38">nb_output_files</name></expr>)</condition> <block pos:start="1099:41" pos:end="1107:9">{<block_content pos:start="1101:13" pos:end="1105:29">

            <expr_stmt pos:start="1101:13" pos:end="1101:105"><expr pos:start="1101:13" pos:end="1101:104"><call pos:start="1101:13" pos:end="1101:104"><name pos:start="1101:13" pos:end="1101:20">snprintf</name><argument_list pos:start="1101:21" pos:end="1101:104">(<argument pos:start="1101:22" pos:end="1101:26"><expr pos:start="1101:22" pos:end="1101:26"><name pos:start="1101:22" pos:end="1101:26">error</name></expr></argument>, <argument pos:start="1101:29" pos:end="1101:41"><expr pos:start="1101:29" pos:end="1101:41"><sizeof pos:start="1101:29" pos:end="1101:41">sizeof<argument_list pos:start="1101:35" pos:end="1101:41">(<argument pos:start="1101:36" pos:end="1101:40"><expr pos:start="1101:36" pos:end="1101:40"><name pos:start="1101:36" pos:end="1101:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1101:44" pos:end="1101:95"><expr pos:start="1101:44" pos:end="1101:95"><literal type="string" pos:start="1101:44" pos:end="1101:95">"Invalid output file index %d in chapter mapping.\n"</literal></expr></argument>,<argument pos:start="1101:97" pos:end="1101:103"><expr pos:start="1101:97" pos:end="1101:103"><name pos:start="1101:97" pos:end="1101:103">outfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1103:13" pos:end="1103:34"><expr pos:start="1103:13" pos:end="1103:33"><name pos:start="1103:13" pos:end="1103:15">ret</name> <operator pos:start="1103:17" pos:end="1103:17">=</operator> <call pos:start="1103:19" pos:end="1103:33"><name pos:start="1103:19" pos:end="1103:25">AVERROR</name><argument_list pos:start="1103:26" pos:end="1103:33">(<argument pos:start="1103:27" pos:end="1103:32"><expr pos:start="1103:27" pos:end="1103:32"><name pos:start="1103:27" pos:end="1103:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1105:13" pos:end="1105:29">goto <name pos:start="1105:18" pos:end="1105:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1109:9" pos:end="1109:39"><expr pos:start="1109:9" pos:end="1109:38"><call pos:start="1109:9" pos:end="1109:38"><name pos:start="1109:9" pos:end="1109:21">copy_chapters</name><argument_list pos:start="1109:22" pos:end="1109:38">(<argument pos:start="1109:23" pos:end="1109:28"><expr pos:start="1109:23" pos:end="1109:28"><name pos:start="1109:23" pos:end="1109:28">infile</name></expr></argument>, <argument pos:start="1109:31" pos:end="1109:37"><expr pos:start="1109:31" pos:end="1109:37"><name pos:start="1109:31" pos:end="1109:37">outfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1115:5" pos:end="1115:62">/* copy chapters from the first input file that has them*/</comment>

    <if_stmt pos:start="1117:5" pos:end="1135:9"><if pos:start="1117:5" pos:end="1135:9">if <condition pos:start="1117:8" pos:end="1117:25">(<expr pos:start="1117:9" pos:end="1117:24"><operator pos:start="1117:9" pos:end="1117:9">!</operator><name pos:start="1117:10" pos:end="1117:24">nb_chapter_maps</name></expr>)</condition><block type="pseudo" pos:start="1119:9" pos:end="1135:9"><block_content pos:start="1119:9" pos:end="1135:9">

        <for pos:start="1119:9" pos:end="1135:9">for <control pos:start="1119:13" pos:end="1119:44">(<init pos:start="1119:14" pos:end="1119:19"><expr pos:start="1119:14" pos:end="1119:18"><name pos:start="1119:14" pos:end="1119:14">i</name> <operator pos:start="1119:16" pos:end="1119:16">=</operator> <literal type="number" pos:start="1119:18" pos:end="1119:18">0</literal></expr>;</init> <condition pos:start="1119:21" pos:end="1119:39"><expr pos:start="1119:21" pos:end="1119:38"><name pos:start="1119:21" pos:end="1119:21">i</name> <operator pos:start="1119:23" pos:end="1119:23">&lt;</operator> <name pos:start="1119:25" pos:end="1119:38">nb_input_files</name></expr>;</condition> <incr pos:start="1119:41" pos:end="1119:43"><expr pos:start="1119:41" pos:end="1119:43"><name pos:start="1119:41" pos:end="1119:41">i</name><operator pos:start="1119:42" pos:end="1119:43">++</operator></expr></incr>)</control> <block pos:start="1119:46" pos:end="1135:9">{<block_content pos:start="1121:13" pos:end="1133:18">

            <if_stmt pos:start="1121:13" pos:end="1123:25"><if pos:start="1121:13" pos:end="1123:25">if <condition pos:start="1121:16" pos:end="1121:49">(<expr pos:start="1121:17" pos:end="1121:48"><operator pos:start="1121:17" pos:end="1121:17">!</operator><name pos:start="1121:18" pos:end="1121:31"><name pos:start="1121:18" pos:end="1121:28">input_files</name><index pos:start="1121:29" pos:end="1121:31">[<expr pos:start="1121:30" pos:end="1121:30"><name pos:start="1121:30" pos:end="1121:30">i</name></expr>]</index></name><operator pos:start="1121:32" pos:end="1121:32">.</operator><name pos:start="1121:33" pos:end="1121:48"><name pos:start="1121:33" pos:end="1121:35">ctx</name><operator pos:start="1121:36" pos:end="1121:37">-&gt;</operator><name pos:start="1121:38" pos:end="1121:48">nb_chapters</name></name></expr>)</condition><block type="pseudo" pos:start="1123:17" pos:end="1123:25"><block_content pos:start="1123:17" pos:end="1123:25">

                <continue pos:start="1123:17" pos:end="1123:25">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="1127:13" pos:end="1131:37">for <control pos:start="1127:17" pos:end="1127:49">(<init pos:start="1127:18" pos:end="1127:23"><expr pos:start="1127:18" pos:end="1127:22"><name pos:start="1127:18" pos:end="1127:18">j</name> <operator pos:start="1127:20" pos:end="1127:20">=</operator> <literal type="number" pos:start="1127:22" pos:end="1127:22">0</literal></expr>;</init> <condition pos:start="1127:25" pos:end="1127:44"><expr pos:start="1127:25" pos:end="1127:43"><name pos:start="1127:25" pos:end="1127:25">j</name> <operator pos:start="1127:27" pos:end="1127:27">&lt;</operator> <name pos:start="1127:29" pos:end="1127:43">nb_output_files</name></expr>;</condition> <incr pos:start="1127:46" pos:end="1127:48"><expr pos:start="1127:46" pos:end="1127:48"><name pos:start="1127:46" pos:end="1127:46">j</name><operator pos:start="1127:47" pos:end="1127:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1129:17" pos:end="1131:37"><block_content pos:start="1129:17" pos:end="1131:37">

                <if_stmt pos:start="1129:17" pos:end="1131:37"><if pos:start="1129:17" pos:end="1131:37">if <condition pos:start="1129:20" pos:end="1129:52">(<expr pos:start="1129:21" pos:end="1129:51"><operator pos:start="1129:21" pos:end="1129:21">(</operator><name pos:start="1129:22" pos:end="1129:24">ret</name> <operator pos:start="1129:26" pos:end="1129:26">=</operator> <call pos:start="1129:28" pos:end="1129:46"><name pos:start="1129:28" pos:end="1129:40">copy_chapters</name><argument_list pos:start="1129:41" pos:end="1129:46">(<argument pos:start="1129:42" pos:end="1129:42"><expr pos:start="1129:42" pos:end="1129:42"><name pos:start="1129:42" pos:end="1129:42">i</name></expr></argument>, <argument pos:start="1129:45" pos:end="1129:45"><expr pos:start="1129:45" pos:end="1129:45"><name pos:start="1129:45" pos:end="1129:45">j</name></expr></argument>)</argument_list></call><operator pos:start="1129:47" pos:end="1129:47">)</operator> <operator pos:start="1129:49" pos:end="1129:49">&lt;</operator> <literal type="number" pos:start="1129:51" pos:end="1129:51">0</literal></expr>)</condition><block type="pseudo" pos:start="1131:21" pos:end="1131:37"><block_content pos:start="1131:21" pos:end="1131:37">

                    <goto pos:start="1131:21" pos:end="1131:37">goto <name pos:start="1131:26" pos:end="1131:36">dump_format</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>

            <break pos:start="1133:13" pos:end="1133:18">break;</break>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="1139:5" pos:end="1139:43">/* open files and write file headers */</comment>

    <for pos:start="1141:5" pos:end="1163:5">for<control pos:start="1141:8" pos:end="1141:34">(<init pos:start="1141:9" pos:end="1141:12"><expr pos:start="1141:9" pos:end="1141:11"><name pos:start="1141:9" pos:end="1141:9">i</name><operator pos:start="1141:10" pos:end="1141:10">=</operator><literal type="number" pos:start="1141:11" pos:end="1141:11">0</literal></expr>;</init><condition pos:start="1141:13" pos:end="1141:30"><expr pos:start="1141:13" pos:end="1141:29"><name pos:start="1141:13" pos:end="1141:13">i</name><operator pos:start="1141:14" pos:end="1141:14">&lt;</operator><name pos:start="1141:15" pos:end="1141:29">nb_output_files</name></expr>;</condition><incr pos:start="1141:31" pos:end="1141:33"><expr pos:start="1141:31" pos:end="1141:33"><name pos:start="1141:31" pos:end="1141:31">i</name><operator pos:start="1141:32" pos:end="1141:33">++</operator></expr></incr>)</control> <block pos:start="1141:36" pos:end="1163:5">{<block_content pos:start="1143:9" pos:end="1161:9">

        <expr_stmt pos:start="1143:9" pos:end="1143:29"><expr pos:start="1143:9" pos:end="1143:28"><name pos:start="1143:9" pos:end="1143:10">os</name> <operator pos:start="1143:12" pos:end="1143:12">=</operator> <name pos:start="1143:14" pos:end="1143:28"><name pos:start="1143:14" pos:end="1143:25">output_files</name><index pos:start="1143:26" pos:end="1143:28">[<expr pos:start="1143:27" pos:end="1143:27"><name pos:start="1143:27" pos:end="1143:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1145:9" pos:end="1153:9"><if pos:start="1145:9" pos:end="1153:9">if <condition pos:start="1145:12" pos:end="1145:59">(<expr pos:start="1145:13" pos:end="1145:58"><call pos:start="1145:13" pos:end="1145:54"><name pos:start="1145:13" pos:end="1145:33">avformat_write_header</name><argument_list pos:start="1145:34" pos:end="1145:54">(<argument pos:start="1145:35" pos:end="1145:36"><expr pos:start="1145:35" pos:end="1145:36"><name pos:start="1145:35" pos:end="1145:36">os</name></expr></argument>, <argument pos:start="1145:39" pos:end="1145:53"><expr pos:start="1145:39" pos:end="1145:53"><operator pos:start="1145:39" pos:end="1145:39">&amp;</operator><name pos:start="1145:40" pos:end="1145:53"><name pos:start="1145:40" pos:end="1145:50">output_opts</name><index pos:start="1145:51" pos:end="1145:53">[<expr pos:start="1145:52" pos:end="1145:52"><name pos:start="1145:52" pos:end="1145:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="1145:56" pos:end="1145:56">&lt;</operator> <literal type="number" pos:start="1145:58" pos:end="1145:58">0</literal></expr>)</condition> <block pos:start="1145:61" pos:end="1153:9">{<block_content pos:start="1147:13" pos:end="1151:29">

            <expr_stmt pos:start="1147:13" pos:end="1147:123"><expr pos:start="1147:13" pos:end="1147:122"><call pos:start="1147:13" pos:end="1147:122"><name pos:start="1147:13" pos:end="1147:20">snprintf</name><argument_list pos:start="1147:21" pos:end="1147:122">(<argument pos:start="1147:22" pos:end="1147:26"><expr pos:start="1147:22" pos:end="1147:26"><name pos:start="1147:22" pos:end="1147:26">error</name></expr></argument>, <argument pos:start="1147:29" pos:end="1147:41"><expr pos:start="1147:29" pos:end="1147:41"><sizeof pos:start="1147:29" pos:end="1147:41">sizeof<argument_list pos:start="1147:35" pos:end="1147:41">(<argument pos:start="1147:36" pos:end="1147:40"><expr pos:start="1147:36" pos:end="1147:40"><name pos:start="1147:36" pos:end="1147:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1147:44" pos:end="1147:118"><expr pos:start="1147:44" pos:end="1147:118"><literal type="string" pos:start="1147:44" pos:end="1147:118">"Could not write header for output file #%d (incorrect codec parameters ?)"</literal></expr></argument>, <argument pos:start="1147:121" pos:end="1147:121"><expr pos:start="1147:121" pos:end="1147:121"><name pos:start="1147:121" pos:end="1147:121">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1149:13" pos:end="1149:34"><expr pos:start="1149:13" pos:end="1149:33"><name pos:start="1149:13" pos:end="1149:15">ret</name> <operator pos:start="1149:17" pos:end="1149:17">=</operator> <call pos:start="1149:19" pos:end="1149:33"><name pos:start="1149:19" pos:end="1149:25">AVERROR</name><argument_list pos:start="1149:26" pos:end="1149:33">(<argument pos:start="1149:27" pos:end="1149:32"><expr pos:start="1149:27" pos:end="1149:32"><name pos:start="1149:27" pos:end="1149:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1151:13" pos:end="1151:29">goto <name pos:start="1151:18" pos:end="1151:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="1155:1" pos:end="1155:43">//        assert_avoptions(output_opts[i]);</comment>

        <if_stmt pos:start="1157:9" pos:end="1161:9"><if pos:start="1157:9" pos:end="1161:9">if <condition pos:start="1157:12" pos:end="1157:58">(<expr pos:start="1157:13" pos:end="1157:57"><call pos:start="1157:13" pos:end="1157:57"><name pos:start="1157:13" pos:end="1157:18">strcmp</name><argument_list pos:start="1157:19" pos:end="1157:57">(<argument pos:start="1157:20" pos:end="1157:49"><expr pos:start="1157:20" pos:end="1157:49"><name pos:start="1157:20" pos:end="1157:34"><name pos:start="1157:20" pos:end="1157:31">output_files</name><index pos:start="1157:32" pos:end="1157:34">[<expr pos:start="1157:33" pos:end="1157:33"><name pos:start="1157:33" pos:end="1157:33">i</name></expr>]</index></name><operator pos:start="1157:35" pos:end="1157:36">-&gt;</operator><name pos:start="1157:37" pos:end="1157:49"><name pos:start="1157:37" pos:end="1157:43">oformat</name><operator pos:start="1157:44" pos:end="1157:45">-&gt;</operator><name pos:start="1157:46" pos:end="1157:49">name</name></name></expr></argument>, <argument pos:start="1157:52" pos:end="1157:56"><expr pos:start="1157:52" pos:end="1157:56"><literal type="string" pos:start="1157:52" pos:end="1157:56">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1157:60" pos:end="1161:9">{<block_content pos:start="1159:13" pos:end="1159:25">

            <expr_stmt pos:start="1159:13" pos:end="1159:25"><expr pos:start="1159:13" pos:end="1159:24"><name pos:start="1159:13" pos:end="1159:20">want_sdp</name> <operator pos:start="1159:22" pos:end="1159:22">=</operator> <literal type="number" pos:start="1159:24" pos:end="1159:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="1167:2" pos:end="1167:13"><name pos:start="1167:2" pos:end="1167:12">dump_format</name>:</label>

    <comment type="block" pos:start="1169:5" pos:end="1171:24">/* dump the file output parameters - cannot be done before in case

       of stream copy */</comment>

    <for pos:start="1173:5" pos:end="1177:5">for<control pos:start="1173:8" pos:end="1173:34">(<init pos:start="1173:9" pos:end="1173:12"><expr pos:start="1173:9" pos:end="1173:11"><name pos:start="1173:9" pos:end="1173:9">i</name><operator pos:start="1173:10" pos:end="1173:10">=</operator><literal type="number" pos:start="1173:11" pos:end="1173:11">0</literal></expr>;</init><condition pos:start="1173:13" pos:end="1173:30"><expr pos:start="1173:13" pos:end="1173:29"><name pos:start="1173:13" pos:end="1173:13">i</name><operator pos:start="1173:14" pos:end="1173:14">&lt;</operator><name pos:start="1173:15" pos:end="1173:29">nb_output_files</name></expr>;</condition><incr pos:start="1173:31" pos:end="1173:33"><expr pos:start="1173:31" pos:end="1173:33"><name pos:start="1173:31" pos:end="1173:31">i</name><operator pos:start="1173:32" pos:end="1173:33">++</operator></expr></incr>)</control> <block pos:start="1173:36" pos:end="1177:5">{<block_content pos:start="1175:9" pos:end="1175:73">

        <expr_stmt pos:start="1175:9" pos:end="1175:73"><expr pos:start="1175:9" pos:end="1175:72"><call pos:start="1175:9" pos:end="1175:72"><name pos:start="1175:9" pos:end="1175:22">av_dump_format</name><argument_list pos:start="1175:23" pos:end="1175:72">(<argument pos:start="1175:24" pos:end="1175:38"><expr pos:start="1175:24" pos:end="1175:38"><name pos:start="1175:24" pos:end="1175:38"><name pos:start="1175:24" pos:end="1175:35">output_files</name><index pos:start="1175:36" pos:end="1175:38">[<expr pos:start="1175:37" pos:end="1175:37"><name pos:start="1175:37" pos:end="1175:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="1175:41" pos:end="1175:41"><expr pos:start="1175:41" pos:end="1175:41"><name pos:start="1175:41" pos:end="1175:41">i</name></expr></argument>, <argument pos:start="1175:44" pos:end="1175:68"><expr pos:start="1175:44" pos:end="1175:68"><name pos:start="1175:44" pos:end="1175:58"><name pos:start="1175:44" pos:end="1175:55">output_files</name><index pos:start="1175:56" pos:end="1175:58">[<expr pos:start="1175:57" pos:end="1175:57"><name pos:start="1175:57" pos:end="1175:57">i</name></expr>]</index></name><operator pos:start="1175:59" pos:end="1175:60">-&gt;</operator><name pos:start="1175:61" pos:end="1175:68">filename</name></expr></argument>, <argument pos:start="1175:71" pos:end="1175:71"><expr pos:start="1175:71" pos:end="1175:71"><literal type="number" pos:start="1175:71" pos:end="1175:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1181:5" pos:end="1181:33">/* dump the stream mapping */</comment>

    <if_stmt pos:start="1183:5" pos:end="1213:5"><if pos:start="1183:5" pos:end="1213:5">if <condition pos:start="1183:8" pos:end="1183:21">(<expr pos:start="1183:9" pos:end="1183:20"><name pos:start="1183:9" pos:end="1183:15">verbose</name> <operator pos:start="1183:17" pos:end="1183:18">&gt;=</operator> <literal type="number" pos:start="1183:20" pos:end="1183:20">0</literal></expr>)</condition> <block pos:start="1183:23" pos:end="1213:5">{<block_content pos:start="1185:9" pos:end="1211:9">

        <expr_stmt pos:start="1185:9" pos:end="1185:45"><expr pos:start="1185:9" pos:end="1185:44"><call pos:start="1185:9" pos:end="1185:44"><name pos:start="1185:9" pos:end="1185:15">fprintf</name><argument_list pos:start="1185:16" pos:end="1185:44">(<argument pos:start="1185:17" pos:end="1185:22"><expr pos:start="1185:17" pos:end="1185:22"><name pos:start="1185:17" pos:end="1185:22">stderr</name></expr></argument>, <argument pos:start="1185:25" pos:end="1185:43"><expr pos:start="1185:25" pos:end="1185:43"><literal type="string" pos:start="1185:25" pos:end="1185:43">"Stream mapping:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="1187:9" pos:end="1211:9">for<control pos:start="1187:12" pos:end="1187:34">(<init pos:start="1187:13" pos:end="1187:16"><expr pos:start="1187:13" pos:end="1187:15"><name pos:start="1187:13" pos:end="1187:13">i</name><operator pos:start="1187:14" pos:end="1187:14">=</operator><literal type="number" pos:start="1187:15" pos:end="1187:15">0</literal></expr>;</init><condition pos:start="1187:17" pos:end="1187:30"><expr pos:start="1187:17" pos:end="1187:29"><name pos:start="1187:17" pos:end="1187:17">i</name><operator pos:start="1187:18" pos:end="1187:18">&lt;</operator><name pos:start="1187:19" pos:end="1187:29">nb_ostreams</name></expr>;</condition><incr pos:start="1187:31" pos:end="1187:33"><expr pos:start="1187:31" pos:end="1187:33"><name pos:start="1187:31" pos:end="1187:31">i</name><operator pos:start="1187:32" pos:end="1187:33">++</operator></expr></incr>)</control> <block pos:start="1187:36" pos:end="1211:9">{<block_content pos:start="1189:13" pos:end="1209:34">

            <expr_stmt pos:start="1189:13" pos:end="1189:31"><expr pos:start="1189:13" pos:end="1189:30"><name pos:start="1189:13" pos:end="1189:15">ost</name> <operator pos:start="1189:17" pos:end="1189:17">=</operator> <name pos:start="1189:19" pos:end="1189:30"><name pos:start="1189:19" pos:end="1189:27">ost_table</name><index pos:start="1189:28" pos:end="1189:30">[<expr pos:start="1189:29" pos:end="1189:29"><name pos:start="1189:29" pos:end="1189:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1191:13" pos:end="1199:32"><expr pos:start="1191:13" pos:end="1199:31"><call pos:start="1191:13" pos:end="1199:31"><name pos:start="1191:13" pos:end="1191:19">fprintf</name><argument_list pos:start="1191:20" pos:end="1199:31">(<argument pos:start="1191:21" pos:end="1191:26"><expr pos:start="1191:21" pos:end="1191:26"><name pos:start="1191:21" pos:end="1191:26">stderr</name></expr></argument>, <argument pos:start="1191:29" pos:end="1191:55"><expr pos:start="1191:29" pos:end="1191:55"><literal type="string" pos:start="1191:29" pos:end="1191:55">"  Stream #%d.%d -&gt; #%d.%d"</literal></expr></argument>,

                    <argument pos:start="1193:21" pos:end="1193:63"><expr pos:start="1193:21" pos:end="1193:63"><name pos:start="1193:21" pos:end="1193:52"><name pos:start="1193:21" pos:end="1193:33">input_streams</name><index pos:start="1193:34" pos:end="1193:52">[<expr pos:start="1193:35" pos:end="1193:51"><name pos:start="1193:35" pos:end="1193:51"><name pos:start="1193:35" pos:end="1193:37">ost</name><operator pos:start="1193:38" pos:end="1193:39">-&gt;</operator><name pos:start="1193:40" pos:end="1193:51">source_index</name></name></expr>]</index></name><operator pos:start="1193:53" pos:end="1193:53">.</operator><name pos:start="1193:54" pos:end="1193:63">file_index</name></expr></argument>,

                    <argument pos:start="1195:21" pos:end="1195:62"><expr pos:start="1195:21" pos:end="1195:62"><name pos:start="1195:21" pos:end="1195:52"><name pos:start="1195:21" pos:end="1195:33">input_streams</name><index pos:start="1195:34" pos:end="1195:52">[<expr pos:start="1195:35" pos:end="1195:51"><name pos:start="1195:35" pos:end="1195:51"><name pos:start="1195:35" pos:end="1195:37">ost</name><operator pos:start="1195:38" pos:end="1195:39">-&gt;</operator><name pos:start="1195:40" pos:end="1195:51">source_index</name></name></expr>]</index></name><operator pos:start="1195:53" pos:end="1195:53">.</operator><name pos:start="1195:54" pos:end="1195:62"><name pos:start="1195:54" pos:end="1195:55">st</name><operator pos:start="1195:56" pos:end="1195:57">-&gt;</operator><name pos:start="1195:58" pos:end="1195:62">index</name></name></expr></argument>,

                    <argument pos:start="1197:21" pos:end="1197:35"><expr pos:start="1197:21" pos:end="1197:35"><name pos:start="1197:21" pos:end="1197:35"><name pos:start="1197:21" pos:end="1197:23">ost</name><operator pos:start="1197:24" pos:end="1197:25">-&gt;</operator><name pos:start="1197:26" pos:end="1197:35">file_index</name></name></expr></argument>,

                    <argument pos:start="1199:21" pos:end="1199:30"><expr pos:start="1199:21" pos:end="1199:30"><name pos:start="1199:21" pos:end="1199:30"><name pos:start="1199:21" pos:end="1199:23">ost</name><operator pos:start="1199:24" pos:end="1199:25">-&gt;</operator><name pos:start="1199:26" pos:end="1199:30">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1201:13" pos:end="1207:50"><if pos:start="1201:13" pos:end="1207:50">if <condition pos:start="1201:16" pos:end="1201:67">(<expr pos:start="1201:17" pos:end="1201:66"><name pos:start="1201:17" pos:end="1201:29"><name pos:start="1201:17" pos:end="1201:19">ost</name><operator pos:start="1201:20" pos:end="1201:21">-&gt;</operator><name pos:start="1201:22" pos:end="1201:29">sync_ist</name></name> <operator pos:start="1201:31" pos:end="1201:32">!=</operator> <operator pos:start="1201:34" pos:end="1201:34">&amp;</operator><name pos:start="1201:35" pos:end="1201:66"><name pos:start="1201:35" pos:end="1201:47">input_streams</name><index pos:start="1201:48" pos:end="1201:66">[<expr pos:start="1201:49" pos:end="1201:65"><name pos:start="1201:49" pos:end="1201:65"><name pos:start="1201:49" pos:end="1201:51">ost</name><operator pos:start="1201:52" pos:end="1201:53">-&gt;</operator><name pos:start="1201:54" pos:end="1201:65">source_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1203:17" pos:end="1207:50"><block_content pos:start="1203:17" pos:end="1207:50">

                <expr_stmt pos:start="1203:17" pos:end="1207:50"><expr pos:start="1203:17" pos:end="1207:49"><call pos:start="1203:17" pos:end="1207:49"><name pos:start="1203:17" pos:end="1203:23">fprintf</name><argument_list pos:start="1203:24" pos:end="1207:49">(<argument pos:start="1203:25" pos:end="1203:30"><expr pos:start="1203:25" pos:end="1203:30"><name pos:start="1203:25" pos:end="1203:30">stderr</name></expr></argument>, <argument pos:start="1203:33" pos:end="1203:48"><expr pos:start="1203:33" pos:end="1203:48"><literal type="string" pos:start="1203:33" pos:end="1203:48">" [sync #%d.%d]"</literal></expr></argument>,

                        <argument pos:start="1205:25" pos:end="1205:49"><expr pos:start="1205:25" pos:end="1205:49"><name pos:start="1205:25" pos:end="1205:49"><name pos:start="1205:25" pos:end="1205:27">ost</name><operator pos:start="1205:28" pos:end="1205:29">-&gt;</operator><name pos:start="1205:30" pos:end="1205:37">sync_ist</name><operator pos:start="1205:38" pos:end="1205:39">-&gt;</operator><name pos:start="1205:40" pos:end="1205:49">file_index</name></name></expr></argument>,

                        <argument pos:start="1207:25" pos:end="1207:48"><expr pos:start="1207:25" pos:end="1207:48"><name pos:start="1207:25" pos:end="1207:48"><name pos:start="1207:25" pos:end="1207:27">ost</name><operator pos:start="1207:28" pos:end="1207:29">-&gt;</operator><name pos:start="1207:30" pos:end="1207:37">sync_ist</name><operator pos:start="1207:38" pos:end="1207:39">-&gt;</operator><name pos:start="1207:40" pos:end="1207:41">st</name><operator pos:start="1207:42" pos:end="1207:43">-&gt;</operator><name pos:start="1207:44" pos:end="1207:48">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1209:13" pos:end="1209:34"><expr pos:start="1209:13" pos:end="1209:33"><call pos:start="1209:13" pos:end="1209:33"><name pos:start="1209:13" pos:end="1209:19">fprintf</name><argument_list pos:start="1209:20" pos:end="1209:33">(<argument pos:start="1209:21" pos:end="1209:26"><expr pos:start="1209:21" pos:end="1209:26"><name pos:start="1209:21" pos:end="1209:26">stderr</name></expr></argument>, <argument pos:start="1209:29" pos:end="1209:32"><expr pos:start="1209:29" pos:end="1209:32"><literal type="string" pos:start="1209:29" pos:end="1209:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1217:5" pos:end="1223:5"><if pos:start="1217:5" pos:end="1223:5">if <condition pos:start="1217:8" pos:end="1217:12">(<expr pos:start="1217:9" pos:end="1217:11"><name pos:start="1217:9" pos:end="1217:11">ret</name></expr>)</condition> <block pos:start="1217:14" pos:end="1223:5">{<block_content pos:start="1219:9" pos:end="1221:18">

        <expr_stmt pos:start="1219:9" pos:end="1219:39"><expr pos:start="1219:9" pos:end="1219:38"><call pos:start="1219:9" pos:end="1219:38"><name pos:start="1219:9" pos:end="1219:15">fprintf</name><argument_list pos:start="1219:16" pos:end="1219:38">(<argument pos:start="1219:17" pos:end="1219:22"><expr pos:start="1219:17" pos:end="1219:22"><name pos:start="1219:17" pos:end="1219:22">stderr</name></expr></argument>, <argument pos:start="1219:25" pos:end="1219:30"><expr pos:start="1219:25" pos:end="1219:30"><literal type="string" pos:start="1219:25" pos:end="1219:30">"%s\n"</literal></expr></argument>, <argument pos:start="1219:33" pos:end="1219:37"><expr pos:start="1219:33" pos:end="1219:37"><name pos:start="1219:33" pos:end="1219:37">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1221:9" pos:end="1221:18">goto <name pos:start="1221:14" pos:end="1221:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1227:5" pos:end="1231:5"><if pos:start="1227:5" pos:end="1231:5">if <condition pos:start="1227:8" pos:end="1227:17">(<expr pos:start="1227:9" pos:end="1227:16"><name pos:start="1227:9" pos:end="1227:16">want_sdp</name></expr>)</condition> <block pos:start="1227:19" pos:end="1231:5">{<block_content pos:start="1229:9" pos:end="1229:49">

        <expr_stmt pos:start="1229:9" pos:end="1229:49"><expr pos:start="1229:9" pos:end="1229:48"><call pos:start="1229:9" pos:end="1229:48"><name pos:start="1229:9" pos:end="1229:17">print_sdp</name><argument_list pos:start="1229:18" pos:end="1229:48">(<argument pos:start="1229:19" pos:end="1229:30"><expr pos:start="1229:19" pos:end="1229:30"><name pos:start="1229:19" pos:end="1229:30">output_files</name></expr></argument>, <argument pos:start="1229:33" pos:end="1229:47"><expr pos:start="1229:33" pos:end="1229:47"><name pos:start="1229:33" pos:end="1229:47">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1235:5" pos:end="1243:5"><if pos:start="1235:5" pos:end="1243:5">if <condition pos:start="1235:8" pos:end="1235:21">(<expr pos:start="1235:9" pos:end="1235:20"><operator pos:start="1235:9" pos:end="1235:9">!</operator><name pos:start="1235:10" pos:end="1235:20">using_stdin</name></expr>)</condition> <block pos:start="1235:23" pos:end="1243:5">{<block_content pos:start="1237:9" pos:end="1241:51">

        <if_stmt pos:start="1237:9" pos:end="1239:65"><if pos:start="1237:9" pos:end="1239:65">if<condition pos:start="1237:11" pos:end="1237:24">(<expr pos:start="1237:12" pos:end="1237:23"><name pos:start="1237:12" pos:end="1237:18">verbose</name> <operator pos:start="1237:20" pos:end="1237:21">&gt;=</operator> <literal type="number" pos:start="1237:23" pos:end="1237:23">0</literal></expr>)</condition><block type="pseudo" pos:start="1239:13" pos:end="1239:65"><block_content pos:start="1239:13" pos:end="1239:65">

            <expr_stmt pos:start="1239:13" pos:end="1239:65"><expr pos:start="1239:13" pos:end="1239:64"><call pos:start="1239:13" pos:end="1239:64"><name pos:start="1239:13" pos:end="1239:19">fprintf</name><argument_list pos:start="1239:20" pos:end="1239:64">(<argument pos:start="1239:21" pos:end="1239:26"><expr pos:start="1239:21" pos:end="1239:26"><name pos:start="1239:21" pos:end="1239:26">stderr</name></expr></argument>, <argument pos:start="1239:29" pos:end="1239:63"><expr pos:start="1239:29" pos:end="1239:63"><literal type="string" pos:start="1239:29" pos:end="1239:63">"Press [q] to stop, [?] for help\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1241:9" pos:end="1241:51"><expr pos:start="1241:9" pos:end="1241:50"><call pos:start="1241:9" pos:end="1241:50"><name pos:start="1241:9" pos:end="1241:29">avio_set_interrupt_cb</name><argument_list pos:start="1241:30" pos:end="1241:50">(<argument pos:start="1241:31" pos:end="1241:49"><expr pos:start="1241:31" pos:end="1241:49"><name pos:start="1241:31" pos:end="1241:49">decode_interrupt_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1245:5" pos:end="1245:16"><expr pos:start="1245:5" pos:end="1245:15"><call pos:start="1245:5" pos:end="1245:15"><name pos:start="1245:5" pos:end="1245:13">term_init</name><argument_list pos:start="1245:14" pos:end="1245:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="1249:5" pos:end="1249:31"><expr pos:start="1249:5" pos:end="1249:30"><name pos:start="1249:5" pos:end="1249:15">timer_start</name> <operator pos:start="1249:17" pos:end="1249:17">=</operator> <call pos:start="1249:19" pos:end="1249:30"><name pos:start="1249:19" pos:end="1249:28">av_gettime</name><argument_list pos:start="1249:29" pos:end="1249:30">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="1253:5" pos:end="1635:5">for<control pos:start="1253:8" pos:end="1253:33">(<init pos:start="1253:9" pos:end="1253:9">;</init> <condition pos:start="1253:11" pos:end="1253:32"><expr pos:start="1253:11" pos:end="1253:31"><name pos:start="1253:11" pos:end="1253:26">received_sigterm</name> <operator pos:start="1253:28" pos:end="1253:29">==</operator> <literal type="number" pos:start="1253:31" pos:end="1253:31">0</literal></expr>;</condition><incr/>)</control> <block pos:start="1253:35" pos:end="1635:5">{<block_content pos:start="1255:9" pos:end="1633:62">

        <decl_stmt pos:start="1255:9" pos:end="1255:34"><decl pos:start="1255:9" pos:end="1255:22"><type pos:start="1255:9" pos:end="1255:11"><name pos:start="1255:9" pos:end="1255:11">int</name></type> <name pos:start="1255:13" pos:end="1255:22">file_index</name></decl>, <decl pos:start="1255:25" pos:end="1255:33"><type ref="prev" pos:start="1255:9" pos:end="1255:11"/><name pos:start="1255:25" pos:end="1255:33">ist_index</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1257:9" pos:end="1257:21"><decl pos:start="1257:9" pos:end="1257:20"><type pos:start="1257:9" pos:end="1257:16"><name pos:start="1257:9" pos:end="1257:16">AVPacket</name></type> <name pos:start="1257:18" pos:end="1257:20">pkt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1259:9" pos:end="1259:24"><decl pos:start="1259:9" pos:end="1259:23"><type pos:start="1259:9" pos:end="1259:14"><name pos:start="1259:9" pos:end="1259:14">double</name></type> <name pos:start="1259:16" pos:end="1259:23">ipts_min</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1261:9" pos:end="1261:24"><decl pos:start="1261:9" pos:end="1261:23"><type pos:start="1261:9" pos:end="1261:14"><name pos:start="1261:9" pos:end="1261:14">double</name></type> <name pos:start="1261:16" pos:end="1261:23">opts_min</name></decl>;</decl_stmt>



    <label pos:start="1265:5" pos:end="1265:9"><name pos:start="1265:5" pos:end="1265:8">redo</name>:</label>

        <expr_stmt pos:start="1267:9" pos:end="1267:24"><expr pos:start="1267:9" pos:end="1267:23"><name pos:start="1267:9" pos:end="1267:16">ipts_min</name><operator pos:start="1267:17" pos:end="1267:17">=</operator> <literal type="number" pos:start="1267:19" pos:end="1267:23">1e100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1269:9" pos:end="1269:24"><expr pos:start="1269:9" pos:end="1269:23"><name pos:start="1269:9" pos:end="1269:16">opts_min</name><operator pos:start="1269:17" pos:end="1269:17">=</operator> <literal type="number" pos:start="1269:19" pos:end="1269:23">1e100</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="1271:9" pos:end="1271:35">/* if 'q' pressed, exits */</comment>

        <if_stmt pos:start="1273:9" pos:end="1371:9"><if pos:start="1273:9" pos:end="1371:9">if <condition pos:start="1273:12" pos:end="1273:25">(<expr pos:start="1273:13" pos:end="1273:24"><operator pos:start="1273:13" pos:end="1273:13">!</operator><name pos:start="1273:14" pos:end="1273:24">using_stdin</name></expr>)</condition> <block pos:start="1273:27" pos:end="1371:9">{<block_content pos:start="1275:13" pos:end="1369:13">

            <if_stmt pos:start="1275:13" pos:end="1277:22"><if pos:start="1275:13" pos:end="1277:22">if <condition pos:start="1275:16" pos:end="1275:26">(<expr pos:start="1275:17" pos:end="1275:25"><name pos:start="1275:17" pos:end="1275:25">q_pressed</name></expr>)</condition><block type="pseudo" pos:start="1277:17" pos:end="1277:22"><block_content pos:start="1277:17" pos:end="1277:22">

                <break pos:start="1277:17" pos:end="1277:22">break;</break></block_content></block></if></if_stmt>

            <comment type="block" pos:start="1279:13" pos:end="1279:45">/* read_key() returns 0 on EOF */</comment>

            <expr_stmt pos:start="1281:13" pos:end="1281:29"><expr pos:start="1281:13" pos:end="1281:28"><name pos:start="1281:13" pos:end="1281:15">key</name> <operator pos:start="1281:17" pos:end="1281:17">=</operator> <call pos:start="1281:19" pos:end="1281:28"><name pos:start="1281:19" pos:end="1281:26">read_key</name><argument_list pos:start="1281:27" pos:end="1281:28">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1283:13" pos:end="1285:22"><if pos:start="1283:13" pos:end="1285:22">if <condition pos:start="1283:16" pos:end="1283:27">(<expr pos:start="1283:17" pos:end="1283:26"><name pos:start="1283:17" pos:end="1283:19">key</name> <operator pos:start="1283:21" pos:end="1283:22">==</operator> <literal type="char" pos:start="1283:24" pos:end="1283:26">'q'</literal></expr>)</condition><block type="pseudo" pos:start="1285:17" pos:end="1285:22"><block_content pos:start="1285:17" pos:end="1285:22">

                <break pos:start="1285:17" pos:end="1285:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="1287:13" pos:end="1287:38"><if pos:start="1287:13" pos:end="1287:38">if <condition pos:start="1287:16" pos:end="1287:27">(<expr pos:start="1287:17" pos:end="1287:26"><name pos:start="1287:17" pos:end="1287:19">key</name> <operator pos:start="1287:21" pos:end="1287:22">==</operator> <literal type="char" pos:start="1287:24" pos:end="1287:26">'+'</literal></expr>)</condition><block type="pseudo" pos:start="1287:29" pos:end="1287:38"><block_content pos:start="1287:29" pos:end="1287:38"> <expr_stmt pos:start="1287:29" pos:end="1287:38"><expr pos:start="1287:29" pos:end="1287:37"><name pos:start="1287:29" pos:end="1287:35">verbose</name><operator pos:start="1287:36" pos:end="1287:37">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1289:13" pos:end="1289:38"><if pos:start="1289:13" pos:end="1289:38">if <condition pos:start="1289:16" pos:end="1289:27">(<expr pos:start="1289:17" pos:end="1289:26"><name pos:start="1289:17" pos:end="1289:19">key</name> <operator pos:start="1289:21" pos:end="1289:22">==</operator> <literal type="char" pos:start="1289:24" pos:end="1289:26">'-'</literal></expr>)</condition><block type="pseudo" pos:start="1289:29" pos:end="1289:38"><block_content pos:start="1289:29" pos:end="1289:38"> <expr_stmt pos:start="1289:29" pos:end="1289:38"><expr pos:start="1289:29" pos:end="1289:37"><name pos:start="1289:29" pos:end="1289:35">verbose</name><operator pos:start="1289:36" pos:end="1289:37">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1291:13" pos:end="1291:45"><if pos:start="1291:13" pos:end="1291:45">if <condition pos:start="1291:16" pos:end="1291:27">(<expr pos:start="1291:17" pos:end="1291:26"><name pos:start="1291:17" pos:end="1291:19">key</name> <operator pos:start="1291:21" pos:end="1291:22">==</operator> <literal type="char" pos:start="1291:24" pos:end="1291:26">'s'</literal></expr>)</condition><block type="pseudo" pos:start="1291:29" pos:end="1291:45"><block_content pos:start="1291:29" pos:end="1291:45"> <expr_stmt pos:start="1291:29" pos:end="1291:45"><expr pos:start="1291:29" pos:end="1291:44"><name pos:start="1291:29" pos:end="1291:35">qp_hist</name>     <operator pos:start="1291:41" pos:end="1291:42">^=</operator> <literal type="number" pos:start="1291:44" pos:end="1291:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1293:13" pos:end="1309:13"><if pos:start="1293:13" pos:end="1309:13">if <condition pos:start="1293:16" pos:end="1293:27">(<expr pos:start="1293:17" pos:end="1293:26"><name pos:start="1293:17" pos:end="1293:19">key</name> <operator pos:start="1293:21" pos:end="1293:22">==</operator> <literal type="char" pos:start="1293:24" pos:end="1293:26">'h'</literal></expr>)</condition><block pos:start="1293:28" pos:end="1309:13">{<block_content pos:start="1295:17" pos:end="1307:47">

                <if_stmt pos:start="1295:17" pos:end="1305:36"><if pos:start="1295:17" pos:end="1299:17">if <condition pos:start="1295:20" pos:end="1295:32">(<expr pos:start="1295:21" pos:end="1295:31"><name pos:start="1295:21" pos:end="1295:31">do_hex_dump</name></expr>)</condition><block pos:start="1295:33" pos:end="1299:17">{<block_content pos:start="1297:21" pos:end="1297:50">

                    <expr_stmt pos:start="1297:21" pos:end="1297:50"><expr pos:start="1297:21" pos:end="1297:49"><name pos:start="1297:21" pos:end="1297:31">do_hex_dump</name> <operator pos:start="1297:33" pos:end="1297:33">=</operator> <name pos:start="1297:35" pos:end="1297:45">do_pkt_dump</name> <operator pos:start="1297:47" pos:end="1297:47">=</operator> <literal type="number" pos:start="1297:49" pos:end="1297:49">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1299:19" pos:end="1303:17">else if<condition pos:start="1299:26" pos:end="1299:38">(<expr pos:start="1299:27" pos:end="1299:37"><name pos:start="1299:27" pos:end="1299:37">do_pkt_dump</name></expr>)</condition><block pos:start="1299:39" pos:end="1303:17">{<block_content pos:start="1301:21" pos:end="1301:36">

                    <expr_stmt pos:start="1301:21" pos:end="1301:36"><expr pos:start="1301:21" pos:end="1301:35"><name pos:start="1301:21" pos:end="1301:31">do_hex_dump</name> <operator pos:start="1301:33" pos:end="1301:33">=</operator> <literal type="number" pos:start="1301:35" pos:end="1301:35">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1303:19" pos:end="1305:36">else<block type="pseudo" pos:start="1305:21" pos:end="1305:36"><block_content pos:start="1305:21" pos:end="1305:36">

                    <expr_stmt pos:start="1305:21" pos:end="1305:36"><expr pos:start="1305:21" pos:end="1305:35"><name pos:start="1305:21" pos:end="1305:31">do_pkt_dump</name> <operator pos:start="1305:33" pos:end="1305:33">=</operator> <literal type="number" pos:start="1305:35" pos:end="1305:35">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="1307:17" pos:end="1307:47"><expr pos:start="1307:17" pos:end="1307:46"><call pos:start="1307:17" pos:end="1307:46"><name pos:start="1307:17" pos:end="1307:32">av_log_set_level</name><argument_list pos:start="1307:33" pos:end="1307:46">(<argument pos:start="1307:34" pos:end="1307:45"><expr pos:start="1307:34" pos:end="1307:45"><name pos:start="1307:34" pos:end="1307:45">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1311:13" pos:end="1347:13"><if pos:start="1311:13" pos:end="1347:13">if <condition pos:start="1311:16" pos:end="1311:41">(<expr pos:start="1311:17" pos:end="1311:40"><name pos:start="1311:17" pos:end="1311:19">key</name> <operator pos:start="1311:21" pos:end="1311:22">==</operator> <literal type="char" pos:start="1311:24" pos:end="1311:26">'d'</literal> <operator pos:start="1311:28" pos:end="1311:29">||</operator> <name pos:start="1311:31" pos:end="1311:33">key</name> <operator pos:start="1311:35" pos:end="1311:36">==</operator> <literal type="char" pos:start="1311:38" pos:end="1311:40">'D'</literal></expr>)</condition><block pos:start="1311:42" pos:end="1347:13">{<block_content pos:start="1313:17" pos:end="1345:52">

                <decl_stmt pos:start="1313:17" pos:end="1313:28"><decl pos:start="1313:17" pos:end="1313:27"><type pos:start="1313:17" pos:end="1313:19"><name pos:start="1313:17" pos:end="1313:19">int</name></type> <name pos:start="1313:21" pos:end="1313:25">debug</name><init pos:start="1313:26" pos:end="1313:27">=<expr pos:start="1313:27" pos:end="1313:27"><literal type="number" pos:start="1313:27" pos:end="1313:27">0</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="1315:17" pos:end="1327:40"><if pos:start="1315:17" pos:end="1325:17">if<condition pos:start="1315:19" pos:end="1315:30">(<expr pos:start="1315:20" pos:end="1315:29"><name pos:start="1315:20" pos:end="1315:22">key</name> <operator pos:start="1315:24" pos:end="1315:25">==</operator> <literal type="char" pos:start="1315:27" pos:end="1315:29">'D'</literal></expr>)</condition> <block pos:start="1315:32" pos:end="1325:17">{<block_content pos:start="1317:21" pos:end="1323:39">

                    <expr_stmt pos:start="1317:21" pos:end="1317:65"><expr pos:start="1317:21" pos:end="1317:64"><name pos:start="1317:21" pos:end="1317:25">debug</name> <operator pos:start="1317:27" pos:end="1317:27">=</operator> <name pos:start="1317:29" pos:end="1317:44"><name pos:start="1317:29" pos:end="1317:41">input_streams</name><index pos:start="1317:42" pos:end="1317:44">[<expr pos:start="1317:43" pos:end="1317:43"><literal type="number" pos:start="1317:43" pos:end="1317:43">0</literal></expr>]</index></name><operator pos:start="1317:45" pos:end="1317:45">.</operator><name pos:start="1317:46" pos:end="1317:61"><name pos:start="1317:46" pos:end="1317:47">st</name><operator pos:start="1317:48" pos:end="1317:49">-&gt;</operator><name pos:start="1317:50" pos:end="1317:54">codec</name><operator pos:start="1317:55" pos:end="1317:56">-&gt;</operator><name pos:start="1317:57" pos:end="1317:61">debug</name></name><operator pos:start="1317:62" pos:end="1317:63">&lt;&lt;</operator><literal type="number" pos:start="1317:64" pos:end="1317:64">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1319:21" pos:end="1319:41"><if pos:start="1319:21" pos:end="1319:41">if<condition pos:start="1319:23" pos:end="1319:30">(<expr pos:start="1319:24" pos:end="1319:29"><operator pos:start="1319:24" pos:end="1319:24">!</operator><name pos:start="1319:25" pos:end="1319:29">debug</name></expr>)</condition><block type="pseudo" pos:start="1319:32" pos:end="1319:41"><block_content pos:start="1319:32" pos:end="1319:41"> <expr_stmt pos:start="1319:32" pos:end="1319:41"><expr pos:start="1319:32" pos:end="1319:40"><name pos:start="1319:32" pos:end="1319:36">debug</name> <operator pos:start="1319:38" pos:end="1319:38">=</operator> <literal type="number" pos:start="1319:40" pos:end="1319:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <while pos:start="1321:21" pos:end="1323:39">while<condition pos:start="1321:26" pos:end="1321:92">(<expr pos:start="1321:27" pos:end="1321:91"><name pos:start="1321:27" pos:end="1321:31">debug</name> <operator pos:start="1321:33" pos:end="1321:33">&amp;</operator> <operator pos:start="1321:35" pos:end="1321:35">(</operator><name pos:start="1321:36" pos:end="1321:53">FF_DEBUG_DCT_COEFF</name><operator pos:start="1321:54" pos:end="1321:54">|</operator><name pos:start="1321:55" pos:end="1321:69">FF_DEBUG_VIS_QP</name><operator pos:start="1321:70" pos:end="1321:70">|</operator><name pos:start="1321:71" pos:end="1321:90">FF_DEBUG_VIS_MB_TYPE</name><operator pos:start="1321:91" pos:end="1321:91">)</operator></expr>)</condition><block type="pseudo" pos:start="1323:25" pos:end="1323:39"><block_content pos:start="1323:25" pos:end="1323:39"> <comment type="line" pos:start="1321:94" pos:end="1321:124">//unsupported, would just crash</comment>

                        <expr_stmt pos:start="1323:25" pos:end="1323:39"><expr pos:start="1323:25" pos:end="1323:38"><name pos:start="1323:25" pos:end="1323:29">debug</name> <operator pos:start="1323:31" pos:end="1323:32">+=</operator> <name pos:start="1323:34" pos:end="1323:38">debug</name></expr>;</expr_stmt></block_content></block></while>

                </block_content>}</block></if><else pos:start="1325:18" pos:end="1327:40">else<block type="pseudo" pos:start="1327:21" pos:end="1327:40"><block_content pos:start="1327:21" pos:end="1327:40">

                    <expr_stmt pos:start="1327:21" pos:end="1327:40"><expr pos:start="1327:21" pos:end="1327:39"><call pos:start="1327:21" pos:end="1327:39"><name pos:start="1327:21" pos:end="1327:25">scanf</name><argument_list pos:start="1327:26" pos:end="1327:39">(<argument pos:start="1327:27" pos:end="1327:30"><expr pos:start="1327:27" pos:end="1327:30"><literal type="string" pos:start="1327:27" pos:end="1327:30">"%d"</literal></expr></argument>, <argument pos:start="1327:33" pos:end="1327:38"><expr pos:start="1327:33" pos:end="1327:38"><operator pos:start="1327:33" pos:end="1327:33">&amp;</operator><name pos:start="1327:34" pos:end="1327:38">debug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <for pos:start="1329:17" pos:end="1333:17">for<control pos:start="1329:20" pos:end="1329:47">(<init pos:start="1329:21" pos:end="1329:24"><expr pos:start="1329:21" pos:end="1329:23"><name pos:start="1329:21" pos:end="1329:21">i</name><operator pos:start="1329:22" pos:end="1329:22">=</operator><literal type="number" pos:start="1329:23" pos:end="1329:23">0</literal></expr>;</init><condition pos:start="1329:25" pos:end="1329:43"><expr pos:start="1329:25" pos:end="1329:42"><name pos:start="1329:25" pos:end="1329:25">i</name><operator pos:start="1329:26" pos:end="1329:26">&lt;</operator><name pos:start="1329:27" pos:end="1329:42">nb_input_streams</name></expr>;</condition><incr pos:start="1329:44" pos:end="1329:46"><expr pos:start="1329:44" pos:end="1329:46"><name pos:start="1329:44" pos:end="1329:44">i</name><operator pos:start="1329:45" pos:end="1329:46">++</operator></expr></incr>)</control> <block pos:start="1329:49" pos:end="1333:17">{<block_content pos:start="1331:21" pos:end="1331:62">

                    <expr_stmt pos:start="1331:21" pos:end="1331:62"><expr pos:start="1331:21" pos:end="1331:61"><name pos:start="1331:21" pos:end="1331:36"><name pos:start="1331:21" pos:end="1331:33">input_streams</name><index pos:start="1331:34" pos:end="1331:36">[<expr pos:start="1331:35" pos:end="1331:35"><name pos:start="1331:35" pos:end="1331:35">i</name></expr>]</index></name><operator pos:start="1331:37" pos:end="1331:37">.</operator><name pos:start="1331:38" pos:end="1331:53"><name pos:start="1331:38" pos:end="1331:39">st</name><operator pos:start="1331:40" pos:end="1331:41">-&gt;</operator><name pos:start="1331:42" pos:end="1331:46">codec</name><operator pos:start="1331:47" pos:end="1331:48">-&gt;</operator><name pos:start="1331:49" pos:end="1331:53">debug</name></name> <operator pos:start="1331:55" pos:end="1331:55">=</operator> <name pos:start="1331:57" pos:end="1331:61">debug</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <for pos:start="1335:17" pos:end="1341:17">for<control pos:start="1335:20" pos:end="1335:42">(<init pos:start="1335:21" pos:end="1335:24"><expr pos:start="1335:21" pos:end="1335:23"><name pos:start="1335:21" pos:end="1335:21">i</name><operator pos:start="1335:22" pos:end="1335:22">=</operator><literal type="number" pos:start="1335:23" pos:end="1335:23">0</literal></expr>;</init><condition pos:start="1335:25" pos:end="1335:38"><expr pos:start="1335:25" pos:end="1335:37"><name pos:start="1335:25" pos:end="1335:25">i</name><operator pos:start="1335:26" pos:end="1335:26">&lt;</operator><name pos:start="1335:27" pos:end="1335:37">nb_ostreams</name></expr>;</condition><incr pos:start="1335:39" pos:end="1335:41"><expr pos:start="1335:39" pos:end="1335:41"><name pos:start="1335:39" pos:end="1335:39">i</name><operator pos:start="1335:40" pos:end="1335:41">++</operator></expr></incr>)</control> <block pos:start="1335:44" pos:end="1341:17">{<block_content pos:start="1337:21" pos:end="1339:50">

                    <expr_stmt pos:start="1337:21" pos:end="1337:39"><expr pos:start="1337:21" pos:end="1337:38"><name pos:start="1337:21" pos:end="1337:23">ost</name> <operator pos:start="1337:25" pos:end="1337:25">=</operator> <name pos:start="1337:27" pos:end="1337:38"><name pos:start="1337:27" pos:end="1337:35">ost_table</name><index pos:start="1337:36" pos:end="1337:38">[<expr pos:start="1337:37" pos:end="1337:37"><name pos:start="1337:37" pos:end="1337:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="1339:21" pos:end="1339:50"><expr pos:start="1339:21" pos:end="1339:49"><name pos:start="1339:21" pos:end="1339:41"><name pos:start="1339:21" pos:end="1339:23">ost</name><operator pos:start="1339:24" pos:end="1339:25">-&gt;</operator><name pos:start="1339:26" pos:end="1339:27">st</name><operator pos:start="1339:28" pos:end="1339:29">-&gt;</operator><name pos:start="1339:30" pos:end="1339:34">codec</name><operator pos:start="1339:35" pos:end="1339:36">-&gt;</operator><name pos:start="1339:37" pos:end="1339:41">debug</name></name> <operator pos:start="1339:43" pos:end="1339:43">=</operator> <name pos:start="1339:45" pos:end="1339:49">debug</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="1343:17" pos:end="1343:57"><if pos:start="1343:17" pos:end="1343:57">if<condition pos:start="1343:19" pos:end="1343:25">(<expr pos:start="1343:20" pos:end="1343:24"><name pos:start="1343:20" pos:end="1343:24">debug</name></expr>)</condition><block type="pseudo" pos:start="1343:27" pos:end="1343:57"><block_content pos:start="1343:27" pos:end="1343:57"> <expr_stmt pos:start="1343:27" pos:end="1343:57"><expr pos:start="1343:27" pos:end="1343:56"><call pos:start="1343:27" pos:end="1343:56"><name pos:start="1343:27" pos:end="1343:42">av_log_set_level</name><argument_list pos:start="1343:43" pos:end="1343:56">(<argument pos:start="1343:44" pos:end="1343:55"><expr pos:start="1343:44" pos:end="1343:55"><name pos:start="1343:44" pos:end="1343:55">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1345:17" pos:end="1345:52"><expr pos:start="1345:17" pos:end="1345:51"><call pos:start="1345:17" pos:end="1345:51"><name pos:start="1345:17" pos:end="1345:23">fprintf</name><argument_list pos:start="1345:24" pos:end="1345:51">(<argument pos:start="1345:25" pos:end="1345:30"><expr pos:start="1345:25" pos:end="1345:30"><name pos:start="1345:25" pos:end="1345:30">stderr</name></expr></argument>,<argument pos:start="1345:32" pos:end="1345:43"><expr pos:start="1345:32" pos:end="1345:43"><literal type="string" pos:start="1345:32" pos:end="1345:43">"debug=%d\n"</literal></expr></argument>, <argument pos:start="1345:46" pos:end="1345:50"><expr pos:start="1345:46" pos:end="1345:50"><name pos:start="1345:46" pos:end="1345:50">debug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1349:13" pos:end="1369:13"><if pos:start="1349:13" pos:end="1369:13">if <condition pos:start="1349:16" pos:end="1349:27">(<expr pos:start="1349:17" pos:end="1349:26"><name pos:start="1349:17" pos:end="1349:19">key</name> <operator pos:start="1349:21" pos:end="1349:22">==</operator> <literal type="char" pos:start="1349:24" pos:end="1349:26">'?'</literal></expr>)</condition><block pos:start="1349:28" pos:end="1369:13">{<block_content pos:start="1351:17" pos:end="1367:18">

                <expr_stmt pos:start="1351:17" pos:end="1367:18"><expr pos:start="1351:17" pos:end="1367:17"><call pos:start="1351:17" pos:end="1367:17"><name pos:start="1351:17" pos:end="1351:23">fprintf</name><argument_list pos:start="1351:24" pos:end="1367:17">(<argument pos:start="1351:25" pos:end="1351:30"><expr pos:start="1351:25" pos:end="1351:30"><name pos:start="1351:25" pos:end="1351:30">stderr</name></expr></argument>, <argument pos:start="1351:33" pos:end="1365:60"><expr pos:start="1351:33" pos:end="1365:60"><literal type="string" pos:start="1351:33" pos:end="1351:51">"key    function\n"</literal>

                                <literal type="string" pos:start="1353:33" pos:end="1353:57">"?      show this help\n"</literal>

                                <literal type="string" pos:start="1355:33" pos:end="1355:61">"+      increase verbosity\n"</literal>

                                <literal type="string" pos:start="1357:33" pos:end="1357:61">"-      decrease verbosity\n"</literal>

                                <literal type="string" pos:start="1359:33" pos:end="1359:78">"D      cycle through available debug modes\n"</literal>

                                <literal type="string" pos:start="1361:33" pos:end="1361:95">"h      dump packets/hex press to cycle through the 3 states\n"</literal>

                                <literal type="string" pos:start="1363:33" pos:end="1363:47">"q      quit\n"</literal>

                                <literal type="string" pos:start="1365:33" pos:end="1365:60">"s      Show QP histogram\n"</literal></expr></argument>

                )</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1375:9" pos:end="1377:33">/* select the stream that we must read now by looking at the

           smallest output pts */</comment>

        <expr_stmt pos:start="1379:9" pos:end="1379:24"><expr pos:start="1379:9" pos:end="1379:23"><name pos:start="1379:9" pos:end="1379:18">file_index</name> <operator pos:start="1379:20" pos:end="1379:20">=</operator> <operator pos:start="1379:22" pos:end="1379:22">-</operator><literal type="number" pos:start="1379:23" pos:end="1379:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1381:9" pos:end="1427:9">for<control pos:start="1381:12" pos:end="1381:34">(<init pos:start="1381:13" pos:end="1381:16"><expr pos:start="1381:13" pos:end="1381:15"><name pos:start="1381:13" pos:end="1381:13">i</name><operator pos:start="1381:14" pos:end="1381:14">=</operator><literal type="number" pos:start="1381:15" pos:end="1381:15">0</literal></expr>;</init><condition pos:start="1381:17" pos:end="1381:30"><expr pos:start="1381:17" pos:end="1381:29"><name pos:start="1381:17" pos:end="1381:17">i</name><operator pos:start="1381:18" pos:end="1381:18">&lt;</operator><name pos:start="1381:19" pos:end="1381:29">nb_ostreams</name></expr>;</condition><incr pos:start="1381:31" pos:end="1381:33"><expr pos:start="1381:31" pos:end="1381:33"><name pos:start="1381:31" pos:end="1381:31">i</name><operator pos:start="1381:32" pos:end="1381:33">++</operator></expr></incr>)</control> <block pos:start="1381:36" pos:end="1427:9">{<block_content pos:start="1383:13" pos:end="1425:13">

            <decl_stmt pos:start="1383:13" pos:end="1383:30"><decl pos:start="1383:13" pos:end="1383:23"><type pos:start="1383:13" pos:end="1383:18"><name pos:start="1383:13" pos:end="1383:18">double</name></type> <name pos:start="1383:20" pos:end="1383:23">ipts</name></decl>, <decl pos:start="1383:26" pos:end="1383:29"><type ref="prev" pos:start="1383:13" pos:end="1383:18"/><name pos:start="1383:26" pos:end="1383:29">opts</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1385:13" pos:end="1385:31"><expr pos:start="1385:13" pos:end="1385:30"><name pos:start="1385:13" pos:end="1385:15">ost</name> <operator pos:start="1385:17" pos:end="1385:17">=</operator> <name pos:start="1385:19" pos:end="1385:30"><name pos:start="1385:19" pos:end="1385:27">ost_table</name><index pos:start="1385:28" pos:end="1385:30">[<expr pos:start="1385:29" pos:end="1385:29"><name pos:start="1385:29" pos:end="1385:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1387:13" pos:end="1387:47"><expr pos:start="1387:13" pos:end="1387:46"><name pos:start="1387:13" pos:end="1387:14">os</name> <operator pos:start="1387:16" pos:end="1387:16">=</operator> <name pos:start="1387:18" pos:end="1387:46"><name pos:start="1387:18" pos:end="1387:29">output_files</name><index pos:start="1387:30" pos:end="1387:46">[<expr pos:start="1387:31" pos:end="1387:45"><name pos:start="1387:31" pos:end="1387:45"><name pos:start="1387:31" pos:end="1387:33">ost</name><operator pos:start="1387:34" pos:end="1387:35">-&gt;</operator><name pos:start="1387:36" pos:end="1387:45">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1389:13" pos:end="1389:52"><expr pos:start="1389:13" pos:end="1389:51"><name pos:start="1389:13" pos:end="1389:15">ist</name> <operator pos:start="1389:17" pos:end="1389:17">=</operator> <operator pos:start="1389:19" pos:end="1389:19">&amp;</operator><name pos:start="1389:20" pos:end="1389:51"><name pos:start="1389:20" pos:end="1389:32">input_streams</name><index pos:start="1389:33" pos:end="1389:51">[<expr pos:start="1389:34" pos:end="1389:50"><name pos:start="1389:34" pos:end="1389:50"><name pos:start="1389:34" pos:end="1389:36">ost</name><operator pos:start="1389:37" pos:end="1389:38">-&gt;</operator><name pos:start="1389:39" pos:end="1389:50">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1391:13" pos:end="1393:25"><if pos:start="1391:13" pos:end="1393:25">if<condition pos:start="1391:15" pos:end="1391:73">(<expr pos:start="1391:16" pos:end="1391:72"><name pos:start="1391:16" pos:end="1391:42"><name pos:start="1391:16" pos:end="1391:18">ist</name><operator pos:start="1391:19" pos:end="1391:20">-&gt;</operator><name pos:start="1391:21" pos:end="1391:42">is_past_recording_time</name></name> <operator pos:start="1391:44" pos:end="1391:45">||</operator> <name pos:start="1391:47" pos:end="1391:72"><name pos:start="1391:47" pos:end="1391:55">no_packet</name><index pos:start="1391:56" pos:end="1391:72">[<expr pos:start="1391:57" pos:end="1391:71"><name pos:start="1391:57" pos:end="1391:71"><name pos:start="1391:57" pos:end="1391:59">ist</name><operator pos:start="1391:60" pos:end="1391:61">-&gt;</operator><name pos:start="1391:62" pos:end="1391:71">file_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1393:17" pos:end="1393:25"><block_content pos:start="1393:17" pos:end="1393:25">

                <continue pos:start="1393:17" pos:end="1393:25">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1395:17" pos:end="1395:69"><expr pos:start="1395:17" pos:end="1395:68"><name pos:start="1395:17" pos:end="1395:20">opts</name> <operator pos:start="1395:22" pos:end="1395:22">=</operator> <name pos:start="1395:24" pos:end="1395:39"><name pos:start="1395:24" pos:end="1395:26">ost</name><operator pos:start="1395:27" pos:end="1395:28">-&gt;</operator><name pos:start="1395:29" pos:end="1395:30">st</name><operator pos:start="1395:31" pos:end="1395:32">-&gt;</operator><name pos:start="1395:33" pos:end="1395:35">pts</name><operator pos:start="1395:36" pos:end="1395:36">.</operator><name pos:start="1395:37" pos:end="1395:39">val</name></name> <operator pos:start="1395:41" pos:end="1395:41">*</operator> <call pos:start="1395:43" pos:end="1395:68"><name pos:start="1395:43" pos:end="1395:48">av_q2d</name><argument_list pos:start="1395:49" pos:end="1395:68">(<argument pos:start="1395:50" pos:end="1395:67"><expr pos:start="1395:50" pos:end="1395:67"><name pos:start="1395:50" pos:end="1395:67"><name pos:start="1395:50" pos:end="1395:52">ost</name><operator pos:start="1395:53" pos:end="1395:54">-&gt;</operator><name pos:start="1395:55" pos:end="1395:56">st</name><operator pos:start="1395:57" pos:end="1395:58">-&gt;</operator><name pos:start="1395:59" pos:end="1395:67">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1397:13" pos:end="1397:36"><expr pos:start="1397:13" pos:end="1397:35"><name pos:start="1397:13" pos:end="1397:16">ipts</name> <operator pos:start="1397:18" pos:end="1397:18">=</operator> <operator pos:start="1397:20" pos:end="1397:20">(</operator><name pos:start="1397:21" pos:end="1397:26">double</name><operator pos:start="1397:27" pos:end="1397:27">)</operator><name pos:start="1397:28" pos:end="1397:35"><name pos:start="1397:28" pos:end="1397:30">ist</name><operator pos:start="1397:31" pos:end="1397:32">-&gt;</operator><name pos:start="1397:33" pos:end="1397:35">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="1399:13" pos:end="1417:13"><if pos:start="1399:13" pos:end="1417:13">if <condition pos:start="1399:16" pos:end="1399:58">(<expr pos:start="1399:17" pos:end="1399:57"><operator pos:start="1399:17" pos:end="1399:17">!</operator><name pos:start="1399:18" pos:end="1399:45"><name pos:start="1399:18" pos:end="1399:28">input_files</name><index pos:start="1399:29" pos:end="1399:45">[<expr pos:start="1399:30" pos:end="1399:44"><name pos:start="1399:30" pos:end="1399:44"><name pos:start="1399:30" pos:end="1399:32">ist</name><operator pos:start="1399:33" pos:end="1399:34">-&gt;</operator><name pos:start="1399:35" pos:end="1399:44">file_index</name></name></expr>]</index></name><operator pos:start="1399:46" pos:end="1399:46">.</operator><name pos:start="1399:47" pos:end="1399:57">eof_reached</name></expr>)</condition><block pos:start="1399:59" pos:end="1417:13">{<block_content pos:start="1401:17" pos:end="1415:17">

                <if_stmt pos:start="1401:17" pos:end="1407:17"><if pos:start="1401:17" pos:end="1407:17">if<condition pos:start="1401:19" pos:end="1401:35">(<expr pos:start="1401:20" pos:end="1401:34"><name pos:start="1401:20" pos:end="1401:23">ipts</name> <operator pos:start="1401:25" pos:end="1401:25">&lt;</operator> <name pos:start="1401:27" pos:end="1401:34">ipts_min</name></expr>)</condition> <block pos:start="1401:37" pos:end="1407:17">{<block_content pos:start="1403:21" pos:end="1405:65">

                    <expr_stmt pos:start="1403:21" pos:end="1403:36"><expr pos:start="1403:21" pos:end="1403:35"><name pos:start="1403:21" pos:end="1403:28">ipts_min</name> <operator pos:start="1403:30" pos:end="1403:30">=</operator> <name pos:start="1403:32" pos:end="1403:35">ipts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1405:21" pos:end="1405:65"><if pos:start="1405:21" pos:end="1405:65">if<condition pos:start="1405:23" pos:end="1405:35">(<expr pos:start="1405:24" pos:end="1405:33"><name pos:start="1405:24" pos:end="1405:33">input_sync</name></expr> )</condition><block type="pseudo" pos:start="1405:37" pos:end="1405:65"><block_content pos:start="1405:37" pos:end="1405:65"> <expr_stmt pos:start="1405:37" pos:end="1405:65"><expr pos:start="1405:37" pos:end="1405:64"><name pos:start="1405:37" pos:end="1405:46">file_index</name> <operator pos:start="1405:48" pos:end="1405:48">=</operator> <name pos:start="1405:50" pos:end="1405:64"><name pos:start="1405:50" pos:end="1405:52">ist</name><operator pos:start="1405:53" pos:end="1405:54">-&gt;</operator><name pos:start="1405:55" pos:end="1405:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1409:17" pos:end="1415:17"><if pos:start="1409:17" pos:end="1415:17">if<condition pos:start="1409:19" pos:end="1409:35">(<expr pos:start="1409:20" pos:end="1409:34"><name pos:start="1409:20" pos:end="1409:23">opts</name> <operator pos:start="1409:25" pos:end="1409:25">&lt;</operator> <name pos:start="1409:27" pos:end="1409:34">opts_min</name></expr>)</condition> <block pos:start="1409:37" pos:end="1415:17">{<block_content pos:start="1411:21" pos:end="1413:65">

                    <expr_stmt pos:start="1411:21" pos:end="1411:36"><expr pos:start="1411:21" pos:end="1411:35"><name pos:start="1411:21" pos:end="1411:28">opts_min</name> <operator pos:start="1411:30" pos:end="1411:30">=</operator> <name pos:start="1411:32" pos:end="1411:35">opts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1413:21" pos:end="1413:65"><if pos:start="1413:21" pos:end="1413:65">if<condition pos:start="1413:23" pos:end="1413:35">(<expr pos:start="1413:24" pos:end="1413:34"><operator pos:start="1413:24" pos:end="1413:24">!</operator><name pos:start="1413:25" pos:end="1413:34">input_sync</name></expr>)</condition><block type="pseudo" pos:start="1413:37" pos:end="1413:65"><block_content pos:start="1413:37" pos:end="1413:65"> <expr_stmt pos:start="1413:37" pos:end="1413:65"><expr pos:start="1413:37" pos:end="1413:64"><name pos:start="1413:37" pos:end="1413:46">file_index</name> <operator pos:start="1413:48" pos:end="1413:48">=</operator> <name pos:start="1413:50" pos:end="1413:64"><name pos:start="1413:50" pos:end="1413:52">ist</name><operator pos:start="1413:53" pos:end="1413:54">-&gt;</operator><name pos:start="1413:55" pos:end="1413:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1419:13" pos:end="1425:13"><if pos:start="1419:13" pos:end="1425:13">if<condition pos:start="1419:15" pos:end="1419:75">(<expr pos:start="1419:16" pos:end="1419:74"><name pos:start="1419:16" pos:end="1419:32"><name pos:start="1419:16" pos:end="1419:18">ost</name><operator pos:start="1419:19" pos:end="1419:20">-&gt;</operator><name pos:start="1419:21" pos:end="1419:32">frame_number</name></name> <operator pos:start="1419:34" pos:end="1419:35">&gt;=</operator> <name pos:start="1419:37" pos:end="1419:74"><name pos:start="1419:37" pos:end="1419:46">max_frames</name><index pos:start="1419:47" pos:end="1419:74">[<expr pos:start="1419:48" pos:end="1419:73"><name pos:start="1419:48" pos:end="1419:73"><name pos:start="1419:48" pos:end="1419:50">ost</name><operator pos:start="1419:51" pos:end="1419:52">-&gt;</operator><name pos:start="1419:53" pos:end="1419:54">st</name><operator pos:start="1419:55" pos:end="1419:56">-&gt;</operator><name pos:start="1419:57" pos:end="1419:61">codec</name><operator pos:start="1419:62" pos:end="1419:63">-&gt;</operator><name pos:start="1419:64" pos:end="1419:73">codec_type</name></name></expr>]</index></name></expr>)</condition><block pos:start="1419:76" pos:end="1425:13">{<block_content pos:start="1421:17" pos:end="1423:22">

                <expr_stmt pos:start="1421:17" pos:end="1421:31"><expr pos:start="1421:17" pos:end="1421:30"><name pos:start="1421:17" pos:end="1421:26">file_index</name><operator pos:start="1421:27" pos:end="1421:27">=</operator> <operator pos:start="1421:29" pos:end="1421:29">-</operator><literal type="number" pos:start="1421:30" pos:end="1421:30">1</literal></expr>;</expr_stmt>

                <break pos:start="1423:17" pos:end="1423:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="1429:9" pos:end="1429:37">/* if none, if is finished */</comment>

        <if_stmt pos:start="1431:9" pos:end="1447:9"><if pos:start="1431:9" pos:end="1447:9">if <condition pos:start="1431:12" pos:end="1431:27">(<expr pos:start="1431:13" pos:end="1431:26"><name pos:start="1431:13" pos:end="1431:22">file_index</name> <operator pos:start="1431:24" pos:end="1431:24">&lt;</operator> <literal type="number" pos:start="1431:26" pos:end="1431:26">0</literal></expr>)</condition> <block pos:start="1431:29" pos:end="1447:9">{<block_content pos:start="1433:13" pos:end="1445:18">

            <if_stmt pos:start="1433:13" pos:end="1443:13"><if pos:start="1433:13" pos:end="1443:13">if<condition pos:start="1433:15" pos:end="1433:31">(<expr pos:start="1433:16" pos:end="1433:30"><name pos:start="1433:16" pos:end="1433:30">no_packet_count</name></expr>)</condition><block pos:start="1433:32" pos:end="1443:13">{<block_content pos:start="1435:17" pos:end="1441:25">

                <expr_stmt pos:start="1435:17" pos:end="1435:34"><expr pos:start="1435:17" pos:end="1435:33"><name pos:start="1435:17" pos:end="1435:31">no_packet_count</name><operator pos:start="1435:32" pos:end="1435:32">=</operator><literal type="number" pos:start="1435:33" pos:end="1435:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1437:17" pos:end="1437:56"><expr pos:start="1437:17" pos:end="1437:55"><call pos:start="1437:17" pos:end="1437:55"><name pos:start="1437:17" pos:end="1437:22">memset</name><argument_list pos:start="1437:23" pos:end="1437:55">(<argument pos:start="1437:24" pos:end="1437:32"><expr pos:start="1437:24" pos:end="1437:32"><name pos:start="1437:24" pos:end="1437:32">no_packet</name></expr></argument>, <argument pos:start="1437:35" pos:end="1437:35"><expr pos:start="1437:35" pos:end="1437:35"><literal type="number" pos:start="1437:35" pos:end="1437:35">0</literal></expr></argument>, <argument pos:start="1437:38" pos:end="1437:54"><expr pos:start="1437:38" pos:end="1437:54"><sizeof pos:start="1437:38" pos:end="1437:54">sizeof<argument_list pos:start="1437:44" pos:end="1437:54">(<argument pos:start="1437:45" pos:end="1437:53"><expr pos:start="1437:45" pos:end="1437:53"><name pos:start="1437:45" pos:end="1437:53">no_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1439:17" pos:end="1439:30"><expr pos:start="1439:17" pos:end="1439:29"><call pos:start="1439:17" pos:end="1439:29"><name pos:start="1439:17" pos:end="1439:22">usleep</name><argument_list pos:start="1439:23" pos:end="1439:29">(<argument pos:start="1439:24" pos:end="1439:28"><expr pos:start="1439:24" pos:end="1439:28"><literal type="number" pos:start="1439:24" pos:end="1439:28">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="1441:17" pos:end="1441:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1445:13" pos:end="1445:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1451:9" pos:end="1451:44">/* finish if limit size exhausted */</comment>

        <if_stmt pos:start="1453:9" pos:end="1455:18"><if pos:start="1453:9" pos:end="1455:18">if <condition pos:start="1453:12" pos:end="1453:84">(<expr pos:start="1453:13" pos:end="1453:83"><name pos:start="1453:13" pos:end="1453:26">limit_filesize</name> <operator pos:start="1453:28" pos:end="1453:29">!=</operator> <literal type="number" pos:start="1453:31" pos:end="1453:31">0</literal> <operator pos:start="1453:33" pos:end="1453:34">&amp;&amp;</operator> <name pos:start="1453:36" pos:end="1453:49">limit_filesize</name> <operator pos:start="1453:51" pos:end="1453:52">&lt;=</operator> <call pos:start="1453:54" pos:end="1453:83"><name pos:start="1453:54" pos:end="1453:62">avio_tell</name><argument_list pos:start="1453:63" pos:end="1453:83">(<argument pos:start="1453:64" pos:end="1453:82"><expr pos:start="1453:64" pos:end="1453:82"><name pos:start="1453:64" pos:end="1453:78"><name pos:start="1453:64" pos:end="1453:75">output_files</name><index pos:start="1453:76" pos:end="1453:78">[<expr pos:start="1453:77" pos:end="1453:77"><literal type="number" pos:start="1453:77" pos:end="1453:77">0</literal></expr>]</index></name><operator pos:start="1453:79" pos:end="1453:80">-&gt;</operator><name pos:start="1453:81" pos:end="1453:82">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1455:13" pos:end="1455:18"><block_content pos:start="1455:13" pos:end="1455:18">

            <break pos:start="1455:13" pos:end="1455:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="1459:9" pos:end="1459:60">/* read a frame from it and output it in the fifo */</comment>

        <expr_stmt pos:start="1461:9" pos:end="1461:41"><expr pos:start="1461:9" pos:end="1461:40"><name pos:start="1461:9" pos:end="1461:10">is</name> <operator pos:start="1461:12" pos:end="1461:12">=</operator> <name pos:start="1461:14" pos:end="1461:36"><name pos:start="1461:14" pos:end="1461:24">input_files</name><index pos:start="1461:25" pos:end="1461:36">[<expr pos:start="1461:26" pos:end="1461:35"><name pos:start="1461:26" pos:end="1461:35">file_index</name></expr>]</index></name><operator pos:start="1461:37" pos:end="1461:37">.</operator><name pos:start="1461:38" pos:end="1461:40">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="1463:9" pos:end="1463:37"><expr pos:start="1463:9" pos:end="1463:36"><name pos:start="1463:9" pos:end="1463:11">ret</name><operator pos:start="1463:12" pos:end="1463:12">=</operator> <call pos:start="1463:14" pos:end="1463:36"><name pos:start="1463:14" pos:end="1463:26">av_read_frame</name><argument_list pos:start="1463:27" pos:end="1463:36">(<argument pos:start="1463:28" pos:end="1463:29"><expr pos:start="1463:28" pos:end="1463:29"><name pos:start="1463:28" pos:end="1463:29">is</name></expr></argument>, <argument pos:start="1463:32" pos:end="1463:35"><expr pos:start="1463:32" pos:end="1463:35"><operator pos:start="1463:32" pos:end="1463:32">&amp;</operator><name pos:start="1463:33" pos:end="1463:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1465:9" pos:end="1473:9"><if pos:start="1465:9" pos:end="1473:9">if<condition pos:start="1465:11" pos:end="1465:34">(<expr pos:start="1465:12" pos:end="1465:33"><name pos:start="1465:12" pos:end="1465:14">ret</name> <operator pos:start="1465:16" pos:end="1465:17">==</operator> <call pos:start="1465:19" pos:end="1465:33"><name pos:start="1465:19" pos:end="1465:25">AVERROR</name><argument_list pos:start="1465:26" pos:end="1465:33">(<argument pos:start="1465:27" pos:end="1465:32"><expr pos:start="1465:27" pos:end="1465:32"><name pos:start="1465:27" pos:end="1465:32">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="1465:35" pos:end="1473:9">{<block_content pos:start="1467:13" pos:end="1471:21">

            <expr_stmt pos:start="1467:13" pos:end="1467:36"><expr pos:start="1467:13" pos:end="1467:35"><name pos:start="1467:13" pos:end="1467:33"><name pos:start="1467:13" pos:end="1467:21">no_packet</name><index pos:start="1467:22" pos:end="1467:33">[<expr pos:start="1467:23" pos:end="1467:32"><name pos:start="1467:23" pos:end="1467:32">file_index</name></expr>]</index></name><operator pos:start="1467:34" pos:end="1467:34">=</operator><literal type="number" pos:start="1467:35" pos:end="1467:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1469:13" pos:end="1469:30"><expr pos:start="1469:13" pos:end="1469:29"><name pos:start="1469:13" pos:end="1469:27">no_packet_count</name><operator pos:start="1469:28" pos:end="1469:29">++</operator></expr>;</expr_stmt>

            <continue pos:start="1471:13" pos:end="1471:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1475:9" pos:end="1487:9"><if pos:start="1475:9" pos:end="1487:9">if <condition pos:start="1475:12" pos:end="1475:20">(<expr pos:start="1475:13" pos:end="1475:19"><name pos:start="1475:13" pos:end="1475:15">ret</name> <operator pos:start="1475:17" pos:end="1475:17">&lt;</operator> <literal type="number" pos:start="1475:19" pos:end="1475:19">0</literal></expr>)</condition> <block pos:start="1475:22" pos:end="1487:9">{<block_content pos:start="1477:13" pos:end="1485:25">

            <expr_stmt pos:start="1477:13" pos:end="1477:52"><expr pos:start="1477:13" pos:end="1477:51"><name pos:start="1477:13" pos:end="1477:35"><name pos:start="1477:13" pos:end="1477:23">input_files</name><index pos:start="1477:24" pos:end="1477:35">[<expr pos:start="1477:25" pos:end="1477:34"><name pos:start="1477:25" pos:end="1477:34">file_index</name></expr>]</index></name><operator pos:start="1477:36" pos:end="1477:36">.</operator><name pos:start="1477:37" pos:end="1477:47">eof_reached</name> <operator pos:start="1477:49" pos:end="1477:49">=</operator> <literal type="number" pos:start="1477:51" pos:end="1477:51">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1479:13" pos:end="1485:25"><if pos:start="1479:13" pos:end="1481:22">if <condition pos:start="1479:16" pos:end="1479:29">(<expr pos:start="1479:17" pos:end="1479:28"><name pos:start="1479:17" pos:end="1479:28">opt_shortest</name></expr>)</condition><block type="pseudo" pos:start="1481:17" pos:end="1481:22"><block_content pos:start="1481:17" pos:end="1481:22">

                <break pos:start="1481:17" pos:end="1481:22">break;</break></block_content></block></if>

            <else pos:start="1483:13" pos:end="1485:25">else<block type="pseudo" pos:start="1485:17" pos:end="1485:25"><block_content pos:start="1485:17" pos:end="1485:25">

                <continue pos:start="1485:17" pos:end="1485:25">continue;</continue></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1491:9" pos:end="1491:26"><expr pos:start="1491:9" pos:end="1491:25"><name pos:start="1491:9" pos:end="1491:23">no_packet_count</name><operator pos:start="1491:24" pos:end="1491:24">=</operator><literal type="number" pos:start="1491:25" pos:end="1491:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1493:9" pos:end="1493:48"><expr pos:start="1493:9" pos:end="1493:47"><call pos:start="1493:9" pos:end="1493:47"><name pos:start="1493:9" pos:end="1493:14">memset</name><argument_list pos:start="1493:15" pos:end="1493:47">(<argument pos:start="1493:16" pos:end="1493:24"><expr pos:start="1493:16" pos:end="1493:24"><name pos:start="1493:16" pos:end="1493:24">no_packet</name></expr></argument>, <argument pos:start="1493:27" pos:end="1493:27"><expr pos:start="1493:27" pos:end="1493:27"><literal type="number" pos:start="1493:27" pos:end="1493:27">0</literal></expr></argument>, <argument pos:start="1493:30" pos:end="1493:46"><expr pos:start="1493:30" pos:end="1493:46"><sizeof pos:start="1493:30" pos:end="1493:46">sizeof<argument_list pos:start="1493:36" pos:end="1493:46">(<argument pos:start="1493:37" pos:end="1493:45"><expr pos:start="1493:37" pos:end="1493:45"><name pos:start="1493:37" pos:end="1493:45">no_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1497:9" pos:end="1503:9"><if pos:start="1497:9" pos:end="1503:9">if <condition pos:start="1497:12" pos:end="1497:24">(<expr pos:start="1497:13" pos:end="1497:23"><name pos:start="1497:13" pos:end="1497:23">do_pkt_dump</name></expr>)</condition> <block pos:start="1497:26" pos:end="1503:9">{<block_content pos:start="1499:13" pos:end="1501:60">

            <expr_stmt pos:start="1499:13" pos:end="1501:60"><expr pos:start="1499:13" pos:end="1501:59"><call pos:start="1499:13" pos:end="1501:59"><name pos:start="1499:13" pos:end="1499:28">av_pkt_dump_log2</name><argument_list pos:start="1499:29" pos:end="1501:59">(<argument pos:start="1499:30" pos:end="1499:33"><expr pos:start="1499:30" pos:end="1499:33"><name pos:start="1499:30" pos:end="1499:33">NULL</name></expr></argument>, <argument pos:start="1499:36" pos:end="1499:47"><expr pos:start="1499:36" pos:end="1499:47"><name pos:start="1499:36" pos:end="1499:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="1499:50" pos:end="1499:53"><expr pos:start="1499:50" pos:end="1499:53"><operator pos:start="1499:50" pos:end="1499:50">&amp;</operator><name pos:start="1499:51" pos:end="1499:53">pkt</name></expr></argument>, <argument pos:start="1499:56" pos:end="1499:66"><expr pos:start="1499:56" pos:end="1499:66"><name pos:start="1499:56" pos:end="1499:66">do_hex_dump</name></expr></argument>,

                             <argument pos:start="1501:30" pos:end="1501:58"><expr pos:start="1501:30" pos:end="1501:58"><name pos:start="1501:30" pos:end="1501:58"><name pos:start="1501:30" pos:end="1501:31">is</name><operator pos:start="1501:32" pos:end="1501:33">-&gt;</operator><name pos:start="1501:34" pos:end="1501:40">streams</name><index pos:start="1501:41" pos:end="1501:58">[<expr pos:start="1501:42" pos:end="1501:57"><name pos:start="1501:42" pos:end="1501:57"><name pos:start="1501:42" pos:end="1501:44">pkt</name><operator pos:start="1501:45" pos:end="1501:45">.</operator><name pos:start="1501:46" pos:end="1501:57">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="1505:9" pos:end="1507:52">/* the following test is needed in case new streams appear

           dynamically in stream : we ignore them */</comment>

        <if_stmt pos:start="1509:9" pos:end="1511:32"><if pos:start="1509:9" pos:end="1511:32">if <condition pos:start="1509:12" pos:end="1509:72">(<expr pos:start="1509:13" pos:end="1509:71"><name pos:start="1509:13" pos:end="1509:28"><name pos:start="1509:13" pos:end="1509:15">pkt</name><operator pos:start="1509:16" pos:end="1509:16">.</operator><name pos:start="1509:17" pos:end="1509:28">stream_index</name></name> <operator pos:start="1509:30" pos:end="1509:31">&gt;=</operator> <name pos:start="1509:33" pos:end="1509:55"><name pos:start="1509:33" pos:end="1509:43">input_files</name><index pos:start="1509:44" pos:end="1509:55">[<expr pos:start="1509:45" pos:end="1509:54"><name pos:start="1509:45" pos:end="1509:54">file_index</name></expr>]</index></name><operator pos:start="1509:56" pos:end="1509:56">.</operator><name pos:start="1509:57" pos:end="1509:71"><name pos:start="1509:57" pos:end="1509:59">ctx</name><operator pos:start="1509:60" pos:end="1509:61">-&gt;</operator><name pos:start="1509:62" pos:end="1509:71">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="1511:13" pos:end="1511:32"><block_content pos:start="1511:13" pos:end="1511:32">

            <goto pos:start="1511:13" pos:end="1511:32">goto <name pos:start="1511:18" pos:end="1511:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1513:9" pos:end="1513:73"><expr pos:start="1513:9" pos:end="1513:72"><name pos:start="1513:9" pos:end="1513:17">ist_index</name> <operator pos:start="1513:19" pos:end="1513:19">=</operator> <name pos:start="1513:21" pos:end="1513:43"><name pos:start="1513:21" pos:end="1513:31">input_files</name><index pos:start="1513:32" pos:end="1513:43">[<expr pos:start="1513:33" pos:end="1513:42"><name pos:start="1513:33" pos:end="1513:42">file_index</name></expr>]</index></name><operator pos:start="1513:44" pos:end="1513:44">.</operator><name pos:start="1513:45" pos:end="1513:53">ist_index</name> <operator pos:start="1513:55" pos:end="1513:55">+</operator> <name pos:start="1513:57" pos:end="1513:72"><name pos:start="1513:57" pos:end="1513:59">pkt</name><operator pos:start="1513:60" pos:end="1513:60">.</operator><name pos:start="1513:61" pos:end="1513:72">stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1515:9" pos:end="1515:40"><expr pos:start="1515:9" pos:end="1515:39"><name pos:start="1515:9" pos:end="1515:11">ist</name> <operator pos:start="1515:13" pos:end="1515:13">=</operator> <operator pos:start="1515:15" pos:end="1515:15">&amp;</operator><name pos:start="1515:16" pos:end="1515:39"><name pos:start="1515:16" pos:end="1515:28">input_streams</name><index pos:start="1515:29" pos:end="1515:39">[<expr pos:start="1515:30" pos:end="1515:38"><name pos:start="1515:30" pos:end="1515:38">ist_index</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1517:9" pos:end="1519:32"><if pos:start="1517:9" pos:end="1519:32">if <condition pos:start="1517:12" pos:end="1517:25">(<expr pos:start="1517:13" pos:end="1517:24"><name pos:start="1517:13" pos:end="1517:24"><name pos:start="1517:13" pos:end="1517:15">ist</name><operator pos:start="1517:16" pos:end="1517:17">-&gt;</operator><name pos:start="1517:18" pos:end="1517:24">discard</name></name></expr>)</condition><block type="pseudo" pos:start="1519:13" pos:end="1519:32"><block_content pos:start="1519:13" pos:end="1519:32">

            <goto pos:start="1519:13" pos:end="1519:32">goto <name pos:start="1519:18" pos:end="1519:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="1523:9" pos:end="1525:112"><if pos:start="1523:9" pos:end="1525:112">if <condition pos:start="1523:12" pos:end="1523:38">(<expr pos:start="1523:13" pos:end="1523:37"><name pos:start="1523:13" pos:end="1523:19"><name pos:start="1523:13" pos:end="1523:15">pkt</name><operator pos:start="1523:16" pos:end="1523:16">.</operator><name pos:start="1523:17" pos:end="1523:19">dts</name></name> <operator pos:start="1523:21" pos:end="1523:22">!=</operator> <name pos:start="1523:24" pos:end="1523:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1525:13" pos:end="1525:112"><block_content pos:start="1525:13" pos:end="1525:112">

            <expr_stmt pos:start="1525:13" pos:end="1525:112"><expr pos:start="1525:13" pos:end="1525:111"><name pos:start="1525:13" pos:end="1525:19"><name pos:start="1525:13" pos:end="1525:15">pkt</name><operator pos:start="1525:16" pos:end="1525:16">.</operator><name pos:start="1525:17" pos:end="1525:19">dts</name></name> <operator pos:start="1525:21" pos:end="1525:22">+=</operator> <call pos:start="1525:24" pos:end="1525:111"><name pos:start="1525:24" pos:end="1525:35">av_rescale_q</name><argument_list pos:start="1525:36" pos:end="1525:111">(<argument pos:start="1525:37" pos:end="1525:74"><expr pos:start="1525:37" pos:end="1525:74"><name pos:start="1525:37" pos:end="1525:64"><name pos:start="1525:37" pos:end="1525:47">input_files</name><index pos:start="1525:48" pos:end="1525:64">[<expr pos:start="1525:49" pos:end="1525:63"><name pos:start="1525:49" pos:end="1525:63"><name pos:start="1525:49" pos:end="1525:51">ist</name><operator pos:start="1525:52" pos:end="1525:53">-&gt;</operator><name pos:start="1525:54" pos:end="1525:63">file_index</name></name></expr>]</index></name><operator pos:start="1525:65" pos:end="1525:65">.</operator><name pos:start="1525:66" pos:end="1525:74">ts_offset</name></expr></argument>, <argument pos:start="1525:77" pos:end="1525:90"><expr pos:start="1525:77" pos:end="1525:90"><name pos:start="1525:77" pos:end="1525:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1525:93" pos:end="1525:110"><expr pos:start="1525:93" pos:end="1525:110"><name pos:start="1525:93" pos:end="1525:110"><name pos:start="1525:93" pos:end="1525:95">ist</name><operator pos:start="1525:96" pos:end="1525:97">-&gt;</operator><name pos:start="1525:98" pos:end="1525:99">st</name><operator pos:start="1525:100" pos:end="1525:101">-&gt;</operator><name pos:start="1525:102" pos:end="1525:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1527:9" pos:end="1529:112"><if pos:start="1527:9" pos:end="1529:112">if <condition pos:start="1527:12" pos:end="1527:38">(<expr pos:start="1527:13" pos:end="1527:37"><name pos:start="1527:13" pos:end="1527:19"><name pos:start="1527:13" pos:end="1527:15">pkt</name><operator pos:start="1527:16" pos:end="1527:16">.</operator><name pos:start="1527:17" pos:end="1527:19">pts</name></name> <operator pos:start="1527:21" pos:end="1527:22">!=</operator> <name pos:start="1527:24" pos:end="1527:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1529:13" pos:end="1529:112"><block_content pos:start="1529:13" pos:end="1529:112">

            <expr_stmt pos:start="1529:13" pos:end="1529:112"><expr pos:start="1529:13" pos:end="1529:111"><name pos:start="1529:13" pos:end="1529:19"><name pos:start="1529:13" pos:end="1529:15">pkt</name><operator pos:start="1529:16" pos:end="1529:16">.</operator><name pos:start="1529:17" pos:end="1529:19">pts</name></name> <operator pos:start="1529:21" pos:end="1529:22">+=</operator> <call pos:start="1529:24" pos:end="1529:111"><name pos:start="1529:24" pos:end="1529:35">av_rescale_q</name><argument_list pos:start="1529:36" pos:end="1529:111">(<argument pos:start="1529:37" pos:end="1529:74"><expr pos:start="1529:37" pos:end="1529:74"><name pos:start="1529:37" pos:end="1529:64"><name pos:start="1529:37" pos:end="1529:47">input_files</name><index pos:start="1529:48" pos:end="1529:64">[<expr pos:start="1529:49" pos:end="1529:63"><name pos:start="1529:49" pos:end="1529:63"><name pos:start="1529:49" pos:end="1529:51">ist</name><operator pos:start="1529:52" pos:end="1529:53">-&gt;</operator><name pos:start="1529:54" pos:end="1529:63">file_index</name></name></expr>]</index></name><operator pos:start="1529:65" pos:end="1529:65">.</operator><name pos:start="1529:66" pos:end="1529:74">ts_offset</name></expr></argument>, <argument pos:start="1529:77" pos:end="1529:90"><expr pos:start="1529:77" pos:end="1529:90"><name pos:start="1529:77" pos:end="1529:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1529:93" pos:end="1529:110"><expr pos:start="1529:93" pos:end="1529:110"><name pos:start="1529:93" pos:end="1529:110"><name pos:start="1529:93" pos:end="1529:95">ist</name><operator pos:start="1529:96" pos:end="1529:97">-&gt;</operator><name pos:start="1529:98" pos:end="1529:99">st</name><operator pos:start="1529:100" pos:end="1529:101">-&gt;</operator><name pos:start="1529:102" pos:end="1529:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="1533:9" pos:end="1543:9"><if pos:start="1533:9" pos:end="1543:9">if <condition pos:start="1533:12" pos:end="1533:26">(<expr pos:start="1533:13" pos:end="1533:25"><name pos:start="1533:13" pos:end="1533:25"><name pos:start="1533:13" pos:end="1533:15">ist</name><operator pos:start="1533:16" pos:end="1533:17">-&gt;</operator><name pos:start="1533:18" pos:end="1533:25">ts_scale</name></name></expr>)</condition> <block pos:start="1533:28" pos:end="1543:9">{<block_content pos:start="1535:13" pos:end="1541:41">

            <if_stmt pos:start="1535:13" pos:end="1537:41"><if pos:start="1535:13" pos:end="1537:41">if<condition pos:start="1535:15" pos:end="1535:41">(<expr pos:start="1535:16" pos:end="1535:40"><name pos:start="1535:16" pos:end="1535:22"><name pos:start="1535:16" pos:end="1535:18">pkt</name><operator pos:start="1535:19" pos:end="1535:19">.</operator><name pos:start="1535:20" pos:end="1535:22">pts</name></name> <operator pos:start="1535:24" pos:end="1535:25">!=</operator> <name pos:start="1535:27" pos:end="1535:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1537:17" pos:end="1537:41"><block_content pos:start="1537:17" pos:end="1537:41">

                <expr_stmt pos:start="1537:17" pos:end="1537:41"><expr pos:start="1537:17" pos:end="1537:40"><name pos:start="1537:17" pos:end="1537:23"><name pos:start="1537:17" pos:end="1537:19">pkt</name><operator pos:start="1537:20" pos:end="1537:20">.</operator><name pos:start="1537:21" pos:end="1537:23">pts</name></name> <operator pos:start="1537:25" pos:end="1537:26">*=</operator> <name pos:start="1537:28" pos:end="1537:40"><name pos:start="1537:28" pos:end="1537:30">ist</name><operator pos:start="1537:31" pos:end="1537:32">-&gt;</operator><name pos:start="1537:33" pos:end="1537:40">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1539:13" pos:end="1541:41"><if pos:start="1539:13" pos:end="1541:41">if<condition pos:start="1539:15" pos:end="1539:41">(<expr pos:start="1539:16" pos:end="1539:40"><name pos:start="1539:16" pos:end="1539:22"><name pos:start="1539:16" pos:end="1539:18">pkt</name><operator pos:start="1539:19" pos:end="1539:19">.</operator><name pos:start="1539:20" pos:end="1539:22">dts</name></name> <operator pos:start="1539:24" pos:end="1539:25">!=</operator> <name pos:start="1539:27" pos:end="1539:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1541:17" pos:end="1541:41"><block_content pos:start="1541:17" pos:end="1541:41">

                <expr_stmt pos:start="1541:17" pos:end="1541:41"><expr pos:start="1541:17" pos:end="1541:40"><name pos:start="1541:17" pos:end="1541:23"><name pos:start="1541:17" pos:end="1541:19">pkt</name><operator pos:start="1541:20" pos:end="1541:20">.</operator><name pos:start="1541:21" pos:end="1541:23">dts</name></name> <operator pos:start="1541:25" pos:end="1541:26">*=</operator> <name pos:start="1541:28" pos:end="1541:40"><name pos:start="1541:28" pos:end="1541:30">ist</name><operator pos:start="1541:31" pos:end="1541:32">-&gt;</operator><name pos:start="1541:33" pos:end="1541:40">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="1547:1" pos:end="1547:169">//        fprintf(stderr, "next:%"PRId64" dts:%"PRId64" off:%"PRId64" %d\n", ist-&gt;next_pts, pkt.dts, input_files[ist-&gt;file_index].ts_offset, ist-&gt;st-&gt;codec-&gt;codec_type);</comment>

        <if_stmt pos:start="1549:9" pos:end="1575:9"><if pos:start="1549:9" pos:end="1575:9">if <condition pos:start="1549:12" pos:end="1551:55">(<expr pos:start="1549:13" pos:end="1551:54"><name pos:start="1549:13" pos:end="1549:19"><name pos:start="1549:13" pos:end="1549:15">pkt</name><operator pos:start="1549:16" pos:end="1549:16">.</operator><name pos:start="1549:17" pos:end="1549:19">dts</name></name> <operator pos:start="1549:21" pos:end="1549:22">!=</operator> <name pos:start="1549:24" pos:end="1549:37">AV_NOPTS_VALUE</name> <operator pos:start="1549:39" pos:end="1549:40">&amp;&amp;</operator> <name pos:start="1549:42" pos:end="1549:54"><name pos:start="1549:42" pos:end="1549:44">ist</name><operator pos:start="1549:45" pos:end="1549:46">-&gt;</operator><name pos:start="1549:47" pos:end="1549:54">next_pts</name></name> <operator pos:start="1549:56" pos:end="1549:57">!=</operator> <name pos:start="1549:59" pos:end="1549:72">AV_NOPTS_VALUE</name>

            <operator pos:start="1551:13" pos:end="1551:14">&amp;&amp;</operator> <operator pos:start="1551:16" pos:end="1551:16">(</operator><name pos:start="1551:17" pos:end="1551:34"><name pos:start="1551:17" pos:end="1551:18">is</name><operator pos:start="1551:19" pos:end="1551:20">-&gt;</operator><name pos:start="1551:21" pos:end="1551:27">iformat</name><operator pos:start="1551:28" pos:end="1551:29">-&gt;</operator><name pos:start="1551:30" pos:end="1551:34">flags</name></name> <operator pos:start="1551:36" pos:end="1551:36">&amp;</operator> <name pos:start="1551:38" pos:end="1551:53">AVFMT_TS_DISCONT</name><operator pos:start="1551:54" pos:end="1551:54">)</operator></expr>)</condition> <block pos:start="1551:57" pos:end="1575:9">{<block_content pos:start="1553:13" pos:end="1573:13">

            <decl_stmt pos:start="1553:13" pos:end="1553:87"><decl pos:start="1553:13" pos:end="1553:86"><type pos:start="1553:13" pos:end="1553:19"><name pos:start="1553:13" pos:end="1553:19">int64_t</name></type> <name pos:start="1553:21" pos:end="1553:27">pkt_dts</name><init pos:start="1553:28" pos:end="1553:86">= <expr pos:start="1553:30" pos:end="1553:86"><call pos:start="1553:30" pos:end="1553:86"><name pos:start="1553:30" pos:end="1553:41">av_rescale_q</name><argument_list pos:start="1553:42" pos:end="1553:86">(<argument pos:start="1553:43" pos:end="1553:49"><expr pos:start="1553:43" pos:end="1553:49"><name pos:start="1553:43" pos:end="1553:49"><name pos:start="1553:43" pos:end="1553:45">pkt</name><operator pos:start="1553:46" pos:end="1553:46">.</operator><name pos:start="1553:47" pos:end="1553:49">dts</name></name></expr></argument>, <argument pos:start="1553:52" pos:end="1553:69"><expr pos:start="1553:52" pos:end="1553:69"><name pos:start="1553:52" pos:end="1553:69"><name pos:start="1553:52" pos:end="1553:54">ist</name><operator pos:start="1553:55" pos:end="1553:56">-&gt;</operator><name pos:start="1553:57" pos:end="1553:58">st</name><operator pos:start="1553:59" pos:end="1553:60">-&gt;</operator><name pos:start="1553:61" pos:end="1553:69">time_base</name></name></expr></argument>, <argument pos:start="1553:72" pos:end="1553:85"><expr pos:start="1553:72" pos:end="1553:85"><name pos:start="1553:72" pos:end="1553:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1555:13" pos:end="1555:51"><decl pos:start="1555:13" pos:end="1555:50"><type pos:start="1555:13" pos:end="1555:19"><name pos:start="1555:13" pos:end="1555:19">int64_t</name></type> <name pos:start="1555:21" pos:end="1555:25">delta</name><init pos:start="1555:26" pos:end="1555:50">= <expr pos:start="1555:28" pos:end="1555:50"><name pos:start="1555:28" pos:end="1555:34">pkt_dts</name> <operator pos:start="1555:36" pos:end="1555:36">-</operator> <name pos:start="1555:38" pos:end="1555:50"><name pos:start="1555:38" pos:end="1555:40">ist</name><operator pos:start="1555:41" pos:end="1555:42">-&gt;</operator><name pos:start="1555:43" pos:end="1555:50">next_pts</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="1557:13" pos:end="1573:13"><if pos:start="1557:13" pos:end="1573:13">if<condition pos:start="1557:15" pos:end="1557:102">(<expr pos:start="1557:16" pos:end="1557:101"><operator pos:start="1557:16" pos:end="1557:16">(</operator><call pos:start="1557:17" pos:end="1557:28"><name pos:start="1557:17" pos:end="1557:21">FFABS</name><argument_list pos:start="1557:22" pos:end="1557:28">(<argument pos:start="1557:23" pos:end="1557:27"><expr pos:start="1557:23" pos:end="1557:27"><name pos:start="1557:23" pos:end="1557:27">delta</name></expr></argument>)</argument_list></call> <operator pos:start="1557:30" pos:end="1557:30">&gt;</operator> <literal type="number" pos:start="1557:32" pos:end="1557:34">1LL</literal><operator pos:start="1557:35" pos:end="1557:35">*</operator><name pos:start="1557:36" pos:end="1557:54">dts_delta_threshold</name><operator pos:start="1557:55" pos:end="1557:55">*</operator><name pos:start="1557:56" pos:end="1557:67">AV_TIME_BASE</name> <operator pos:start="1557:69" pos:end="1557:70">||</operator> <name pos:start="1557:72" pos:end="1557:78">pkt_dts</name><operator pos:start="1557:79" pos:end="1557:79">+</operator><literal type="number" pos:start="1557:80" pos:end="1557:80">1</literal><operator pos:start="1557:81" pos:end="1557:81">&lt;</operator><name pos:start="1557:82" pos:end="1557:89"><name pos:start="1557:82" pos:end="1557:84">ist</name><operator pos:start="1557:85" pos:end="1557:86">-&gt;</operator><name pos:start="1557:87" pos:end="1557:89">pts</name></name><operator pos:start="1557:90" pos:end="1557:90">)</operator><operator pos:start="1557:91" pos:end="1557:92">&amp;&amp;</operator> <operator pos:start="1557:94" pos:end="1557:94">!</operator><name pos:start="1557:95" pos:end="1557:101">copy_ts</name></expr>)</condition><block pos:start="1557:103" pos:end="1573:13">{<block_content pos:start="1559:17" pos:end="1571:86">

                <expr_stmt pos:start="1559:17" pos:end="1559:64"><expr pos:start="1559:17" pos:end="1559:63"><name pos:start="1559:17" pos:end="1559:44"><name pos:start="1559:17" pos:end="1559:27">input_files</name><index pos:start="1559:28" pos:end="1559:44">[<expr pos:start="1559:29" pos:end="1559:43"><name pos:start="1559:29" pos:end="1559:43"><name pos:start="1559:29" pos:end="1559:31">ist</name><operator pos:start="1559:32" pos:end="1559:33">-&gt;</operator><name pos:start="1559:34" pos:end="1559:43">file_index</name></name></expr>]</index></name><operator pos:start="1559:45" pos:end="1559:45">.</operator><name pos:start="1559:46" pos:end="1559:54">ts_offset</name> <operator pos:start="1559:56" pos:end="1559:57">-=</operator> <name pos:start="1559:59" pos:end="1559:63">delta</name></expr>;</expr_stmt>

                <if_stmt pos:start="1561:17" pos:end="1565:75"><if pos:start="1561:17" pos:end="1565:75">if <condition pos:start="1561:20" pos:end="1561:32">(<expr pos:start="1561:21" pos:end="1561:31"><name pos:start="1561:21" pos:end="1561:27">verbose</name> <operator pos:start="1561:29" pos:end="1561:29">&gt;</operator> <literal type="number" pos:start="1561:31" pos:end="1561:31">2</literal></expr>)</condition><block type="pseudo" pos:start="1563:21" pos:end="1565:75"><block_content pos:start="1563:21" pos:end="1565:75">

                    <expr_stmt pos:start="1563:21" pos:end="1565:75"><expr pos:start="1563:21" pos:end="1565:74"><call pos:start="1563:21" pos:end="1565:74"><name pos:start="1563:21" pos:end="1563:27">fprintf</name><argument_list pos:start="1563:28" pos:end="1565:74">(<argument pos:start="1563:29" pos:end="1563:34"><expr pos:start="1563:29" pos:end="1563:34"><name pos:start="1563:29" pos:end="1563:34">stderr</name></expr></argument>, <argument pos:start="1563:37" pos:end="1563:96"><expr pos:start="1563:37" pos:end="1563:96"><literal type="string" pos:start="1563:37" pos:end="1563:63">"timestamp discontinuity %"</literal><name pos:start="1563:64" pos:end="1563:69">PRId64</name><literal type="string" pos:start="1563:70" pos:end="1563:86">", new offset= %"</literal><name pos:start="1563:87" pos:end="1563:92">PRId64</name><literal type="string" pos:start="1563:93" pos:end="1563:96">"\n"</literal></expr></argument>,

                            <argument pos:start="1565:29" pos:end="1565:33"><expr pos:start="1565:29" pos:end="1565:33"><name pos:start="1565:29" pos:end="1565:33">delta</name></expr></argument>, <argument pos:start="1565:36" pos:end="1565:73"><expr pos:start="1565:36" pos:end="1565:73"><name pos:start="1565:36" pos:end="1565:63"><name pos:start="1565:36" pos:end="1565:46">input_files</name><index pos:start="1565:47" pos:end="1565:63">[<expr pos:start="1565:48" pos:end="1565:62"><name pos:start="1565:48" pos:end="1565:62"><name pos:start="1565:48" pos:end="1565:50">ist</name><operator pos:start="1565:51" pos:end="1565:52">-&gt;</operator><name pos:start="1565:53" pos:end="1565:62">file_index</name></name></expr>]</index></name><operator pos:start="1565:64" pos:end="1565:64">.</operator><name pos:start="1565:65" pos:end="1565:73">ts_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1567:17" pos:end="1567:82"><expr pos:start="1567:17" pos:end="1567:81"><name pos:start="1567:17" pos:end="1567:23"><name pos:start="1567:17" pos:end="1567:19">pkt</name><operator pos:start="1567:20" pos:end="1567:20">.</operator><name pos:start="1567:21" pos:end="1567:23">dts</name></name><operator pos:start="1567:24" pos:end="1567:25">-=</operator> <call pos:start="1567:27" pos:end="1567:81"><name pos:start="1567:27" pos:end="1567:38">av_rescale_q</name><argument_list pos:start="1567:39" pos:end="1567:81">(<argument pos:start="1567:40" pos:end="1567:44"><expr pos:start="1567:40" pos:end="1567:44"><name pos:start="1567:40" pos:end="1567:44">delta</name></expr></argument>, <argument pos:start="1567:47" pos:end="1567:60"><expr pos:start="1567:47" pos:end="1567:60"><name pos:start="1567:47" pos:end="1567:60">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1567:63" pos:end="1567:80"><expr pos:start="1567:63" pos:end="1567:80"><name pos:start="1567:63" pos:end="1567:80"><name pos:start="1567:63" pos:end="1567:65">ist</name><operator pos:start="1567:66" pos:end="1567:67">-&gt;</operator><name pos:start="1567:68" pos:end="1567:69">st</name><operator pos:start="1567:70" pos:end="1567:71">-&gt;</operator><name pos:start="1567:72" pos:end="1567:80">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1569:17" pos:end="1571:86"><if pos:start="1569:17" pos:end="1571:86">if<condition pos:start="1569:19" pos:end="1569:45">(<expr pos:start="1569:20" pos:end="1569:44"><name pos:start="1569:20" pos:end="1569:26"><name pos:start="1569:20" pos:end="1569:22">pkt</name><operator pos:start="1569:23" pos:end="1569:23">.</operator><name pos:start="1569:24" pos:end="1569:26">pts</name></name> <operator pos:start="1569:28" pos:end="1569:29">!=</operator> <name pos:start="1569:31" pos:end="1569:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1571:21" pos:end="1571:86"><block_content pos:start="1571:21" pos:end="1571:86">

                    <expr_stmt pos:start="1571:21" pos:end="1571:86"><expr pos:start="1571:21" pos:end="1571:85"><name pos:start="1571:21" pos:end="1571:27"><name pos:start="1571:21" pos:end="1571:23">pkt</name><operator pos:start="1571:24" pos:end="1571:24">.</operator><name pos:start="1571:25" pos:end="1571:27">pts</name></name><operator pos:start="1571:28" pos:end="1571:29">-=</operator> <call pos:start="1571:31" pos:end="1571:85"><name pos:start="1571:31" pos:end="1571:42">av_rescale_q</name><argument_list pos:start="1571:43" pos:end="1571:85">(<argument pos:start="1571:44" pos:end="1571:48"><expr pos:start="1571:44" pos:end="1571:48"><name pos:start="1571:44" pos:end="1571:48">delta</name></expr></argument>, <argument pos:start="1571:51" pos:end="1571:64"><expr pos:start="1571:51" pos:end="1571:64"><name pos:start="1571:51" pos:end="1571:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1571:67" pos:end="1571:84"><expr pos:start="1571:67" pos:end="1571:84"><name pos:start="1571:67" pos:end="1571:84"><name pos:start="1571:67" pos:end="1571:69">ist</name><operator pos:start="1571:70" pos:end="1571:71">-&gt;</operator><name pos:start="1571:72" pos:end="1571:73">st</name><operator pos:start="1571:74" pos:end="1571:75">-&gt;</operator><name pos:start="1571:76" pos:end="1571:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1579:9" pos:end="1579:48">/* finish if recording time exhausted */</comment>

        <if_stmt pos:start="1581:9" pos:end="1597:9"><if pos:start="1581:9" pos:end="1597:9">if <condition pos:start="1581:12" pos:end="1591:18">(<expr pos:start="1581:13" pos:end="1591:17"><name pos:start="1581:13" pos:end="1581:26">recording_time</name> <operator pos:start="1581:28" pos:end="1581:29">!=</operator> <name pos:start="1581:31" pos:end="1581:39">INT64_MAX</name> <operator pos:start="1581:41" pos:end="1581:42">&amp;&amp;</operator>

            <operator pos:start="1583:13" pos:end="1583:13">(</operator><ternary pos:start="1583:14" pos:end="1589:110"><condition pos:start="1583:14" pos:end="1583:40"><expr pos:start="1583:14" pos:end="1583:38"><name pos:start="1583:14" pos:end="1583:20"><name pos:start="1583:14" pos:end="1583:16">pkt</name><operator pos:start="1583:17" pos:end="1583:17">.</operator><name pos:start="1583:18" pos:end="1583:20">pts</name></name> <operator pos:start="1583:22" pos:end="1583:23">!=</operator> <name pos:start="1583:25" pos:end="1583:38">AV_NOPTS_VALUE</name></expr> ?</condition><then pos:start="1585:17" pos:end="1585:113">

                <macro pos:start="1585:17" pos:end="1585:113"><name pos:start="1585:17" pos:end="1585:29">av_compare_ts</name><argument_list pos:start="1585:30" pos:end="1585:113">(<argument pos:start="1585:31" pos:end="1585:37">pkt.pts</argument>, <argument pos:start="1585:40" pos:end="1585:57">ist-&gt;st-&gt;time_base</argument>, <argument pos:start="1585:60" pos:end="1585:86">recording_time + start_time</argument>, <argument pos:start="1585:89" pos:end="1585:102">(AVRational){<literal type="number" pos:start="1585:102" pos:end="1585:102">1</literal></argument>, <argument pos:start="1585:105" pos:end="1585:112"><literal type="number" pos:start="1585:105" pos:end="1585:111">1000000</literal>}</argument>)</argument_list></macro>

                    </then><else pos:start="1587:21" pos:end="1589:110">:

                <macro pos:start="1589:17" pos:end="1589:110"><name pos:start="1589:17" pos:end="1589:29">av_compare_ts</name><argument_list pos:start="1589:30" pos:end="1589:110">(<argument pos:start="1589:31" pos:end="1589:38">ist-&gt;pts</argument>, <argument pos:start="1589:41" pos:end="1589:54">AV_TIME_BASE_Q</argument>, <argument pos:start="1589:57" pos:end="1589:83">recording_time + start_time</argument>, <argument pos:start="1589:86" pos:end="1589:99">(AVRational){<literal type="number" pos:start="1589:99" pos:end="1589:99">1</literal></argument>, <argument pos:start="1589:102" pos:end="1589:109"><literal type="number" pos:start="1589:102" pos:end="1589:108">1000000</literal>}</argument>)</argument_list></macro>

            <expr/></else></ternary><operator pos:start="1591:13" pos:end="1591:13">)</operator><operator pos:start="1591:14" pos:end="1591:15">&gt;=</operator> <literal type="number" pos:start="1591:17" pos:end="1591:17">0</literal></expr>)</condition> <block pos:start="1591:20" pos:end="1597:9">{<block_content pos:start="1593:13" pos:end="1595:32">

            <expr_stmt pos:start="1593:13" pos:end="1593:44"><expr pos:start="1593:13" pos:end="1593:43"><name pos:start="1593:13" pos:end="1593:39"><name pos:start="1593:13" pos:end="1593:15">ist</name><operator pos:start="1593:16" pos:end="1593:17">-&gt;</operator><name pos:start="1593:18" pos:end="1593:39">is_past_recording_time</name></name> <operator pos:start="1593:41" pos:end="1593:41">=</operator> <literal type="number" pos:start="1593:43" pos:end="1593:43">1</literal></expr>;</expr_stmt>

            <goto pos:start="1595:13" pos:end="1595:32">goto <name pos:start="1595:18" pos:end="1595:31">discard_packet</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="1601:9" pos:end="1601:93">//fprintf(stderr,"read #%d.%d size=%d\n", ist-&gt;file_index, ist-&gt;st-&gt;index, pkt.size);</comment>

        <if_stmt pos:start="1603:9" pos:end="1621:9"><if pos:start="1603:9" pos:end="1621:9">if <condition pos:start="1603:12" pos:end="1603:76">(<expr pos:start="1603:13" pos:end="1603:75"><call pos:start="1603:13" pos:end="1603:71"><name pos:start="1603:13" pos:end="1603:25">output_packet</name><argument_list pos:start="1603:26" pos:end="1603:71">(<argument pos:start="1603:27" pos:end="1603:29"><expr pos:start="1603:27" pos:end="1603:29"><name pos:start="1603:27" pos:end="1603:29">ist</name></expr></argument>, <argument pos:start="1603:32" pos:end="1603:40"><expr pos:start="1603:32" pos:end="1603:40"><name pos:start="1603:32" pos:end="1603:40">ist_index</name></expr></argument>, <argument pos:start="1603:43" pos:end="1603:51"><expr pos:start="1603:43" pos:end="1603:51"><name pos:start="1603:43" pos:end="1603:51">ost_table</name></expr></argument>, <argument pos:start="1603:54" pos:end="1603:64"><expr pos:start="1603:54" pos:end="1603:64"><name pos:start="1603:54" pos:end="1603:64">nb_ostreams</name></expr></argument>, <argument pos:start="1603:67" pos:end="1603:70"><expr pos:start="1603:67" pos:end="1603:70"><operator pos:start="1603:67" pos:end="1603:67">&amp;</operator><name pos:start="1603:68" pos:end="1603:70">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="1603:73" pos:end="1603:73">&lt;</operator> <literal type="number" pos:start="1603:75" pos:end="1603:75">0</literal></expr>)</condition> <block pos:start="1603:78" pos:end="1621:9">{<block_content pos:start="1607:13" pos:end="1619:22">



            <if_stmt pos:start="1607:13" pos:end="1611:57"><if pos:start="1607:13" pos:end="1611:57">if <condition pos:start="1607:16" pos:end="1607:29">(<expr pos:start="1607:17" pos:end="1607:28"><name pos:start="1607:17" pos:end="1607:23">verbose</name> <operator pos:start="1607:25" pos:end="1607:26">&gt;=</operator> <literal type="number" pos:start="1607:28" pos:end="1607:28">0</literal></expr>)</condition><block type="pseudo" pos:start="1609:17" pos:end="1611:57"><block_content pos:start="1609:17" pos:end="1611:57">

                <expr_stmt pos:start="1609:17" pos:end="1611:57"><expr pos:start="1609:17" pos:end="1611:56"><call pos:start="1609:17" pos:end="1611:56"><name pos:start="1609:17" pos:end="1609:23">fprintf</name><argument_list pos:start="1609:24" pos:end="1611:56">(<argument pos:start="1609:25" pos:end="1609:30"><expr pos:start="1609:25" pos:end="1609:30"><name pos:start="1609:25" pos:end="1609:30">stderr</name></expr></argument>, <argument pos:start="1609:33" pos:end="1609:70"><expr pos:start="1609:33" pos:end="1609:70"><literal type="string" pos:start="1609:33" pos:end="1609:70">"Error while decoding stream #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="1611:25" pos:end="1611:39"><expr pos:start="1611:25" pos:end="1611:39"><name pos:start="1611:25" pos:end="1611:39"><name pos:start="1611:25" pos:end="1611:27">ist</name><operator pos:start="1611:28" pos:end="1611:29">-&gt;</operator><name pos:start="1611:30" pos:end="1611:39">file_index</name></name></expr></argument>, <argument pos:start="1611:42" pos:end="1611:55"><expr pos:start="1611:42" pos:end="1611:55"><name pos:start="1611:42" pos:end="1611:55"><name pos:start="1611:42" pos:end="1611:44">ist</name><operator pos:start="1611:45" pos:end="1611:46">-&gt;</operator><name pos:start="1611:47" pos:end="1611:48">st</name><operator pos:start="1611:49" pos:end="1611:50">-&gt;</operator><name pos:start="1611:51" pos:end="1611:55">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1613:13" pos:end="1615:31"><if pos:start="1613:13" pos:end="1615:31">if <condition pos:start="1613:16" pos:end="1613:30">(<expr pos:start="1613:17" pos:end="1613:29"><name pos:start="1613:17" pos:end="1613:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="1615:17" pos:end="1615:31"><block_content pos:start="1615:17" pos:end="1615:31">

                <expr_stmt pos:start="1615:17" pos:end="1615:31"><expr pos:start="1615:17" pos:end="1615:30"><call pos:start="1615:17" pos:end="1615:30"><name pos:start="1615:17" pos:end="1615:27">ffmpeg_exit</name><argument_list pos:start="1615:28" pos:end="1615:30">(<argument pos:start="1615:29" pos:end="1615:29"><expr pos:start="1615:29" pos:end="1615:29"><literal type="number" pos:start="1615:29" pos:end="1615:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1617:13" pos:end="1617:33"><expr pos:start="1617:13" pos:end="1617:32"><call pos:start="1617:13" pos:end="1617:32"><name pos:start="1617:13" pos:end="1617:26">av_free_packet</name><argument_list pos:start="1617:27" pos:end="1617:32">(<argument pos:start="1617:28" pos:end="1617:31"><expr pos:start="1617:28" pos:end="1617:31"><operator pos:start="1617:28" pos:end="1617:28">&amp;</operator><name pos:start="1617:29" pos:end="1617:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1619:13" pos:end="1619:22">goto <name pos:start="1619:18" pos:end="1619:21">redo</name>;</goto>

        </block_content>}</block></if></if_stmt>



    <label pos:start="1625:5" pos:end="1625:19"><name pos:start="1625:5" pos:end="1625:18">discard_packet</name>:</label>

        <expr_stmt pos:start="1627:9" pos:end="1627:29"><expr pos:start="1627:9" pos:end="1627:28"><call pos:start="1627:9" pos:end="1627:28"><name pos:start="1627:9" pos:end="1627:22">av_free_packet</name><argument_list pos:start="1627:23" pos:end="1627:28">(<argument pos:start="1627:24" pos:end="1627:27"><expr pos:start="1627:24" pos:end="1627:27"><operator pos:start="1627:24" pos:end="1627:24">&amp;</operator><name pos:start="1627:25" pos:end="1627:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="1631:9" pos:end="1631:75">/* dump report by using the output first video and audio streams */</comment>

        <expr_stmt pos:start="1633:9" pos:end="1633:62"><expr pos:start="1633:9" pos:end="1633:61"><call pos:start="1633:9" pos:end="1633:61"><name pos:start="1633:9" pos:end="1633:20">print_report</name><argument_list pos:start="1633:21" pos:end="1633:61">(<argument pos:start="1633:22" pos:end="1633:33"><expr pos:start="1633:22" pos:end="1633:33"><name pos:start="1633:22" pos:end="1633:33">output_files</name></expr></argument>, <argument pos:start="1633:36" pos:end="1633:44"><expr pos:start="1633:36" pos:end="1633:44"><name pos:start="1633:36" pos:end="1633:44">ost_table</name></expr></argument>, <argument pos:start="1633:47" pos:end="1633:57"><expr pos:start="1633:47" pos:end="1633:57"><name pos:start="1633:47" pos:end="1633:57">nb_ostreams</name></expr></argument>, <argument pos:start="1633:60" pos:end="1633:60"><expr pos:start="1633:60" pos:end="1633:60"><literal type="number" pos:start="1633:60" pos:end="1633:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1639:5" pos:end="1639:65">/* at the end of stream, we must flush the decoder buffers */</comment>

    <for pos:start="1641:5" pos:end="1651:5">for <control pos:start="1641:9" pos:end="1641:42">(<init pos:start="1641:10" pos:end="1641:15"><expr pos:start="1641:10" pos:end="1641:14"><name pos:start="1641:10" pos:end="1641:10">i</name> <operator pos:start="1641:12" pos:end="1641:12">=</operator> <literal type="number" pos:start="1641:14" pos:end="1641:14">0</literal></expr>;</init> <condition pos:start="1641:17" pos:end="1641:37"><expr pos:start="1641:17" pos:end="1641:36"><name pos:start="1641:17" pos:end="1641:17">i</name> <operator pos:start="1641:19" pos:end="1641:19">&lt;</operator> <name pos:start="1641:21" pos:end="1641:36">nb_input_streams</name></expr>;</condition> <incr pos:start="1641:39" pos:end="1641:41"><expr pos:start="1641:39" pos:end="1641:41"><name pos:start="1641:39" pos:end="1641:39">i</name><operator pos:start="1641:40" pos:end="1641:41">++</operator></expr></incr>)</control> <block pos:start="1641:44" pos:end="1651:5">{<block_content pos:start="1643:9" pos:end="1649:9">

        <expr_stmt pos:start="1643:9" pos:end="1643:32"><expr pos:start="1643:9" pos:end="1643:31"><name pos:start="1643:9" pos:end="1643:11">ist</name> <operator pos:start="1643:13" pos:end="1643:13">=</operator> <operator pos:start="1643:15" pos:end="1643:15">&amp;</operator><name pos:start="1643:16" pos:end="1643:31"><name pos:start="1643:16" pos:end="1643:28">input_streams</name><index pos:start="1643:29" pos:end="1643:31">[<expr pos:start="1643:30" pos:end="1643:30"><name pos:start="1643:30" pos:end="1643:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1645:9" pos:end="1649:9"><if pos:start="1645:9" pos:end="1649:9">if <condition pos:start="1645:12" pos:end="1645:33">(<expr pos:start="1645:13" pos:end="1645:32"><name pos:start="1645:13" pos:end="1645:32"><name pos:start="1645:13" pos:end="1645:15">ist</name><operator pos:start="1645:16" pos:end="1645:17">-&gt;</operator><name pos:start="1645:18" pos:end="1645:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1645:35" pos:end="1649:9">{<block_content pos:start="1647:13" pos:end="1647:64">

            <expr_stmt pos:start="1647:13" pos:end="1647:64"><expr pos:start="1647:13" pos:end="1647:63"><call pos:start="1647:13" pos:end="1647:63"><name pos:start="1647:13" pos:end="1647:25">output_packet</name><argument_list pos:start="1647:26" pos:end="1647:63">(<argument pos:start="1647:27" pos:end="1647:29"><expr pos:start="1647:27" pos:end="1647:29"><name pos:start="1647:27" pos:end="1647:29">ist</name></expr></argument>, <argument pos:start="1647:32" pos:end="1647:32"><expr pos:start="1647:32" pos:end="1647:32"><name pos:start="1647:32" pos:end="1647:32">i</name></expr></argument>, <argument pos:start="1647:35" pos:end="1647:43"><expr pos:start="1647:35" pos:end="1647:43"><name pos:start="1647:35" pos:end="1647:43">ost_table</name></expr></argument>, <argument pos:start="1647:46" pos:end="1647:56"><expr pos:start="1647:46" pos:end="1647:56"><name pos:start="1647:46" pos:end="1647:56">nb_ostreams</name></expr></argument>, <argument pos:start="1647:59" pos:end="1647:62"><expr pos:start="1647:59" pos:end="1647:62"><name pos:start="1647:59" pos:end="1647:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="1655:5" pos:end="1655:16"><expr pos:start="1655:5" pos:end="1655:15"><call pos:start="1655:5" pos:end="1655:15"><name pos:start="1655:5" pos:end="1655:13">term_exit</name><argument_list pos:start="1655:14" pos:end="1655:15">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1659:5" pos:end="1659:52">/* write the trailer if needed and close file */</comment>

    <for pos:start="1661:5" pos:end="1667:5">for<control pos:start="1661:8" pos:end="1661:34">(<init pos:start="1661:9" pos:end="1661:12"><expr pos:start="1661:9" pos:end="1661:11"><name pos:start="1661:9" pos:end="1661:9">i</name><operator pos:start="1661:10" pos:end="1661:10">=</operator><literal type="number" pos:start="1661:11" pos:end="1661:11">0</literal></expr>;</init><condition pos:start="1661:13" pos:end="1661:30"><expr pos:start="1661:13" pos:end="1661:29"><name pos:start="1661:13" pos:end="1661:13">i</name><operator pos:start="1661:14" pos:end="1661:14">&lt;</operator><name pos:start="1661:15" pos:end="1661:29">nb_output_files</name></expr>;</condition><incr pos:start="1661:31" pos:end="1661:33"><expr pos:start="1661:31" pos:end="1661:33"><name pos:start="1661:31" pos:end="1661:31">i</name><operator pos:start="1661:32" pos:end="1661:33">++</operator></expr></incr>)</control> <block pos:start="1661:36" pos:end="1667:5">{<block_content pos:start="1663:9" pos:end="1665:29">

        <expr_stmt pos:start="1663:9" pos:end="1663:29"><expr pos:start="1663:9" pos:end="1663:28"><name pos:start="1663:9" pos:end="1663:10">os</name> <operator pos:start="1663:12" pos:end="1663:12">=</operator> <name pos:start="1663:14" pos:end="1663:28"><name pos:start="1663:14" pos:end="1663:25">output_files</name><index pos:start="1663:26" pos:end="1663:28">[<expr pos:start="1663:27" pos:end="1663:27"><name pos:start="1663:27" pos:end="1663:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1665:9" pos:end="1665:29"><expr pos:start="1665:9" pos:end="1665:28"><call pos:start="1665:9" pos:end="1665:28"><name pos:start="1665:9" pos:end="1665:24">av_write_trailer</name><argument_list pos:start="1665:25" pos:end="1665:28">(<argument pos:start="1665:26" pos:end="1665:27"><expr pos:start="1665:26" pos:end="1665:27"><name pos:start="1665:26" pos:end="1665:27">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1671:5" pos:end="1671:64">/* dump report by using the first video and audio streams */</comment>

    <expr_stmt pos:start="1673:5" pos:end="1673:58"><expr pos:start="1673:5" pos:end="1673:57"><call pos:start="1673:5" pos:end="1673:57"><name pos:start="1673:5" pos:end="1673:16">print_report</name><argument_list pos:start="1673:17" pos:end="1673:57">(<argument pos:start="1673:18" pos:end="1673:29"><expr pos:start="1673:18" pos:end="1673:29"><name pos:start="1673:18" pos:end="1673:29">output_files</name></expr></argument>, <argument pos:start="1673:32" pos:end="1673:40"><expr pos:start="1673:32" pos:end="1673:40"><name pos:start="1673:32" pos:end="1673:40">ost_table</name></expr></argument>, <argument pos:start="1673:43" pos:end="1673:53"><expr pos:start="1673:43" pos:end="1673:53"><name pos:start="1673:43" pos:end="1673:53">nb_ostreams</name></expr></argument>, <argument pos:start="1673:56" pos:end="1673:56"><expr pos:start="1673:56" pos:end="1673:56"><literal type="number" pos:start="1673:56" pos:end="1673:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1677:5" pos:end="1677:28">/* close each encoder */</comment>

    <for pos:start="1679:5" pos:end="1697:5">for<control pos:start="1679:8" pos:end="1679:30">(<init pos:start="1679:9" pos:end="1679:12"><expr pos:start="1679:9" pos:end="1679:11"><name pos:start="1679:9" pos:end="1679:9">i</name><operator pos:start="1679:10" pos:end="1679:10">=</operator><literal type="number" pos:start="1679:11" pos:end="1679:11">0</literal></expr>;</init><condition pos:start="1679:13" pos:end="1679:26"><expr pos:start="1679:13" pos:end="1679:25"><name pos:start="1679:13" pos:end="1679:13">i</name><operator pos:start="1679:14" pos:end="1679:14">&lt;</operator><name pos:start="1679:15" pos:end="1679:25">nb_ostreams</name></expr>;</condition><incr pos:start="1679:27" pos:end="1679:29"><expr pos:start="1679:27" pos:end="1679:29"><name pos:start="1679:27" pos:end="1679:27">i</name><operator pos:start="1679:28" pos:end="1679:29">++</operator></expr></incr>)</control> <block pos:start="1679:32" pos:end="1697:5">{<block_content pos:start="1681:9" pos:end="1696:0">

        <expr_stmt pos:start="1681:9" pos:end="1681:27"><expr pos:start="1681:9" pos:end="1681:26"><name pos:start="1681:9" pos:end="1681:11">ost</name> <operator pos:start="1681:13" pos:end="1681:13">=</operator> <name pos:start="1681:15" pos:end="1681:26"><name pos:start="1681:15" pos:end="1681:23">ost_table</name><index pos:start="1681:24" pos:end="1681:26">[<expr pos:start="1681:25" pos:end="1681:25"><name pos:start="1681:25" pos:end="1681:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1683:9" pos:end="1692:0"><if pos:start="1683:9" pos:end="1692:0">if <condition pos:start="1683:12" pos:end="1683:33">(<expr pos:start="1683:13" pos:end="1683:32"><name pos:start="1683:13" pos:end="1683:32"><name pos:start="1683:13" pos:end="1683:15">ost</name><operator pos:start="1683:16" pos:end="1683:17">-&gt;</operator><name pos:start="1683:18" pos:end="1683:32">encoding_needed</name></name></expr>)</condition> <block pos:start="1683:35" pos:end="1692:0">{<block_content pos:start="1685:13" pos:end="1687:42">

            <expr_stmt pos:start="1685:13" pos:end="1685:48"><expr pos:start="1685:13" pos:end="1685:47"><call pos:start="1685:13" pos:end="1685:47"><name pos:start="1685:13" pos:end="1685:20">av_freep</name><argument_list pos:start="1685:21" pos:end="1685:47">(<argument pos:start="1685:22" pos:end="1685:46"><expr pos:start="1685:22" pos:end="1685:46"><operator pos:start="1685:22" pos:end="1685:22">&amp;</operator><name pos:start="1685:23" pos:end="1685:46"><name pos:start="1685:23" pos:end="1685:25">ost</name><operator pos:start="1685:26" pos:end="1685:27">-&gt;</operator><name pos:start="1685:28" pos:end="1685:29">st</name><operator pos:start="1685:30" pos:end="1685:31">-&gt;</operator><name pos:start="1685:32" pos:end="1685:36">codec</name><operator pos:start="1685:37" pos:end="1685:38">-&gt;</operator><name pos:start="1685:39" pos:end="1685:46">stats_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1687:13" pos:end="1687:42"><expr pos:start="1687:13" pos:end="1687:41"><call pos:start="1687:13" pos:end="1687:41"><name pos:start="1687:13" pos:end="1687:25">avcodec_close</name><argument_list pos:start="1687:26" pos:end="1687:41">(<argument pos:start="1687:27" pos:end="1687:40"><expr pos:start="1687:27" pos:end="1687:40"><name pos:start="1687:27" pos:end="1687:40"><name pos:start="1687:27" pos:end="1687:29">ost</name><operator pos:start="1687:30" pos:end="1687:31">-&gt;</operator><name pos:start="1687:32" pos:end="1687:33">st</name><operator pos:start="1687:34" pos:end="1687:35">-&gt;</operator><name pos:start="1687:36" pos:end="1687:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="1691:1" pos:end="1691:19">#<cpp:directive pos:start="1691:2" pos:end="1691:3">if</cpp:directive> <expr pos:start="1691:5" pos:end="1691:19"><name pos:start="1691:5" pos:end="1691:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <expr_stmt pos:start="1693:9" pos:end="1696:0"><expr pos:start="1693:9" pos:end="1693:40"><call pos:start="1693:9" pos:end="1693:40"><name pos:start="1693:9" pos:end="1693:27">avfilter_graph_free</name><argument_list pos:start="1693:28" pos:end="1693:40">(<argument pos:start="1693:29" pos:end="1693:39"><expr pos:start="1693:29" pos:end="1693:39"><operator pos:start="1693:29" pos:end="1693:29">&amp;</operator><name pos:start="1693:30" pos:end="1693:39"><name pos:start="1693:30" pos:end="1693:32">ost</name><operator pos:start="1693:33" pos:end="1693:34">-&gt;</operator><name pos:start="1693:35" pos:end="1693:39">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1695:1" pos:end="1695:6">#<cpp:directive pos:start="1695:2" pos:end="1695:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <comment type="block" pos:start="1701:5" pos:end="1701:28">/* close each decoder */</comment>

    <for pos:start="1703:5" pos:end="1713:5">for <control pos:start="1703:9" pos:end="1703:42">(<init pos:start="1703:10" pos:end="1703:15"><expr pos:start="1703:10" pos:end="1703:14"><name pos:start="1703:10" pos:end="1703:10">i</name> <operator pos:start="1703:12" pos:end="1703:12">=</operator> <literal type="number" pos:start="1703:14" pos:end="1703:14">0</literal></expr>;</init> <condition pos:start="1703:17" pos:end="1703:37"><expr pos:start="1703:17" pos:end="1703:36"><name pos:start="1703:17" pos:end="1703:17">i</name> <operator pos:start="1703:19" pos:end="1703:19">&lt;</operator> <name pos:start="1703:21" pos:end="1703:36">nb_input_streams</name></expr>;</condition> <incr pos:start="1703:39" pos:end="1703:41"><expr pos:start="1703:39" pos:end="1703:41"><name pos:start="1703:39" pos:end="1703:39">i</name><operator pos:start="1703:40" pos:end="1703:41">++</operator></expr></incr>)</control> <block pos:start="1703:44" pos:end="1713:5">{<block_content pos:start="1705:9" pos:end="1711:9">

        <expr_stmt pos:start="1705:9" pos:end="1705:32"><expr pos:start="1705:9" pos:end="1705:31"><name pos:start="1705:9" pos:end="1705:11">ist</name> <operator pos:start="1705:13" pos:end="1705:13">=</operator> <operator pos:start="1705:15" pos:end="1705:15">&amp;</operator><name pos:start="1705:16" pos:end="1705:31"><name pos:start="1705:16" pos:end="1705:28">input_streams</name><index pos:start="1705:29" pos:end="1705:31">[<expr pos:start="1705:30" pos:end="1705:30"><name pos:start="1705:30" pos:end="1705:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1707:9" pos:end="1711:9"><if pos:start="1707:9" pos:end="1711:9">if <condition pos:start="1707:12" pos:end="1707:33">(<expr pos:start="1707:13" pos:end="1707:32"><name pos:start="1707:13" pos:end="1707:32"><name pos:start="1707:13" pos:end="1707:15">ist</name><operator pos:start="1707:16" pos:end="1707:17">-&gt;</operator><name pos:start="1707:18" pos:end="1707:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1707:35" pos:end="1711:9">{<block_content pos:start="1709:13" pos:end="1709:42">

            <expr_stmt pos:start="1709:13" pos:end="1709:42"><expr pos:start="1709:13" pos:end="1709:41"><call pos:start="1709:13" pos:end="1709:41"><name pos:start="1709:13" pos:end="1709:25">avcodec_close</name><argument_list pos:start="1709:26" pos:end="1709:41">(<argument pos:start="1709:27" pos:end="1709:40"><expr pos:start="1709:27" pos:end="1709:40"><name pos:start="1709:27" pos:end="1709:40"><name pos:start="1709:27" pos:end="1709:29">ist</name><operator pos:start="1709:30" pos:end="1709:31">-&gt;</operator><name pos:start="1709:32" pos:end="1709:33">st</name><operator pos:start="1709:34" pos:end="1709:35">-&gt;</operator><name pos:start="1709:36" pos:end="1709:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1717:5" pos:end="1717:20">/* finished ! */</comment>

    <expr_stmt pos:start="1719:5" pos:end="1719:12"><expr pos:start="1719:5" pos:end="1719:11"><name pos:start="1719:5" pos:end="1719:7">ret</name> <operator pos:start="1719:9" pos:end="1719:9">=</operator> <literal type="number" pos:start="1719:11" pos:end="1719:11">0</literal></expr>;</expr_stmt>



 <label pos:start="1723:2" pos:end="1723:6"><name pos:start="1723:2" pos:end="1723:5">fail</name>:</label>

    <expr_stmt pos:start="1725:5" pos:end="1725:26"><expr pos:start="1725:5" pos:end="1725:25"><call pos:start="1725:5" pos:end="1725:25"><name pos:start="1725:5" pos:end="1725:12">av_freep</name><argument_list pos:start="1725:13" pos:end="1725:25">(<argument pos:start="1725:14" pos:end="1725:24"><expr pos:start="1725:14" pos:end="1725:24"><operator pos:start="1725:14" pos:end="1725:14">&amp;</operator><name pos:start="1725:15" pos:end="1725:24">bit_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1729:5" pos:end="1781:5"><if pos:start="1729:5" pos:end="1781:5">if <condition pos:start="1729:8" pos:end="1729:18">(<expr pos:start="1729:9" pos:end="1729:17"><name pos:start="1729:9" pos:end="1729:17">ost_table</name></expr>)</condition> <block pos:start="1729:20" pos:end="1781:5">{<block_content pos:start="1731:9" pos:end="1779:27">

        <for pos:start="1731:9" pos:end="1777:9">for<control pos:start="1731:12" pos:end="1731:34">(<init pos:start="1731:13" pos:end="1731:16"><expr pos:start="1731:13" pos:end="1731:15"><name pos:start="1731:13" pos:end="1731:13">i</name><operator pos:start="1731:14" pos:end="1731:14">=</operator><literal type="number" pos:start="1731:15" pos:end="1731:15">0</literal></expr>;</init><condition pos:start="1731:17" pos:end="1731:30"><expr pos:start="1731:17" pos:end="1731:29"><name pos:start="1731:17" pos:end="1731:17">i</name><operator pos:start="1731:18" pos:end="1731:18">&lt;</operator><name pos:start="1731:19" pos:end="1731:29">nb_ostreams</name></expr>;</condition><incr pos:start="1731:31" pos:end="1731:33"><expr pos:start="1731:31" pos:end="1731:33"><name pos:start="1731:31" pos:end="1731:31">i</name><operator pos:start="1731:32" pos:end="1731:33">++</operator></expr></incr>)</control> <block pos:start="1731:36" pos:end="1777:9">{<block_content pos:start="1733:13" pos:end="1775:13">

            <expr_stmt pos:start="1733:13" pos:end="1733:31"><expr pos:start="1733:13" pos:end="1733:30"><name pos:start="1733:13" pos:end="1733:15">ost</name> <operator pos:start="1733:17" pos:end="1733:17">=</operator> <name pos:start="1733:19" pos:end="1733:30"><name pos:start="1733:19" pos:end="1733:27">ost_table</name><index pos:start="1733:28" pos:end="1733:30">[<expr pos:start="1733:29" pos:end="1733:29"><name pos:start="1733:29" pos:end="1733:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1735:13" pos:end="1775:13"><if pos:start="1735:13" pos:end="1775:13">if <condition pos:start="1735:16" pos:end="1735:20">(<expr pos:start="1735:17" pos:end="1735:19"><name pos:start="1735:17" pos:end="1735:19">ost</name></expr>)</condition> <block pos:start="1735:22" pos:end="1775:13">{<block_content pos:start="1737:17" pos:end="1773:29">

                <if_stmt pos:start="1737:17" pos:end="1739:57"><if pos:start="1737:17" pos:end="1739:57">if <condition pos:start="1737:20" pos:end="1737:41">(<expr pos:start="1737:21" pos:end="1737:40"><name pos:start="1737:21" pos:end="1737:40"><name pos:start="1737:21" pos:end="1737:23">ost</name><operator pos:start="1737:24" pos:end="1737:25">-&gt;</operator><name pos:start="1737:26" pos:end="1737:27">st</name><operator pos:start="1737:28" pos:end="1737:29">-&gt;</operator><name pos:start="1737:30" pos:end="1737:40">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="1739:21" pos:end="1739:57"><block_content pos:start="1739:21" pos:end="1739:57">

                    <expr_stmt pos:start="1739:21" pos:end="1739:57"><expr pos:start="1739:21" pos:end="1739:56"><call pos:start="1739:21" pos:end="1739:56"><name pos:start="1739:21" pos:end="1739:28">av_freep</name><argument_list pos:start="1739:29" pos:end="1739:56">(<argument pos:start="1739:30" pos:end="1739:55"><expr pos:start="1739:30" pos:end="1739:55"><operator pos:start="1739:30" pos:end="1739:30">&amp;</operator><name pos:start="1739:31" pos:end="1739:55"><name pos:start="1739:31" pos:end="1739:33">ost</name><operator pos:start="1739:34" pos:end="1739:35">-&gt;</operator><name pos:start="1739:36" pos:end="1739:37">st</name><operator pos:start="1739:38" pos:end="1739:39">-&gt;</operator><name pos:start="1739:40" pos:end="1739:44">codec</name><operator pos:start="1739:45" pos:end="1739:46">-&gt;</operator><name pos:start="1739:47" pos:end="1739:55">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1741:17" pos:end="1747:17"><if pos:start="1741:17" pos:end="1747:17">if <condition pos:start="1741:20" pos:end="1741:33">(<expr pos:start="1741:21" pos:end="1741:32"><name pos:start="1741:21" pos:end="1741:32"><name pos:start="1741:21" pos:end="1741:23">ost</name><operator pos:start="1741:24" pos:end="1741:25">-&gt;</operator><name pos:start="1741:26" pos:end="1741:32">logfile</name></name></expr>)</condition> <block pos:start="1741:35" pos:end="1747:17">{<block_content pos:start="1743:21" pos:end="1745:40">

                    <expr_stmt pos:start="1743:21" pos:end="1743:41"><expr pos:start="1743:21" pos:end="1743:40"><call pos:start="1743:21" pos:end="1743:40"><name pos:start="1743:21" pos:end="1743:26">fclose</name><argument_list pos:start="1743:27" pos:end="1743:40">(<argument pos:start="1743:28" pos:end="1743:39"><expr pos:start="1743:28" pos:end="1743:39"><name pos:start="1743:28" pos:end="1743:39"><name pos:start="1743:28" pos:end="1743:30">ost</name><operator pos:start="1743:31" pos:end="1743:32">-&gt;</operator><name pos:start="1743:33" pos:end="1743:39">logfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1745:21" pos:end="1745:40"><expr pos:start="1745:21" pos:end="1745:39"><name pos:start="1745:21" pos:end="1745:32"><name pos:start="1745:21" pos:end="1745:23">ost</name><operator pos:start="1745:24" pos:end="1745:25">-&gt;</operator><name pos:start="1745:26" pos:end="1745:32">logfile</name></name> <operator pos:start="1745:34" pos:end="1745:34">=</operator> <name pos:start="1745:36" pos:end="1745:39">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1749:17" pos:end="1749:40"><expr pos:start="1749:17" pos:end="1749:39"><call pos:start="1749:17" pos:end="1749:39"><name pos:start="1749:17" pos:end="1749:28">av_fifo_free</name><argument_list pos:start="1749:29" pos:end="1749:39">(<argument pos:start="1749:30" pos:end="1749:38"><expr pos:start="1749:30" pos:end="1749:38"><name pos:start="1749:30" pos:end="1749:38"><name pos:start="1749:30" pos:end="1749:32">ost</name><operator pos:start="1749:33" pos:end="1749:34">-&gt;</operator><name pos:start="1749:35" pos:end="1749:38">fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1749:42" pos:end="1751:75">/* works even if fifo is not

                                             initialized but set to zero */</comment>

                <expr_stmt pos:start="1753:17" pos:end="1753:59"><expr pos:start="1753:17" pos:end="1753:58"><call pos:start="1753:17" pos:end="1753:58"><name pos:start="1753:17" pos:end="1753:24">av_freep</name><argument_list pos:start="1753:25" pos:end="1753:58">(<argument pos:start="1753:26" pos:end="1753:57"><expr pos:start="1753:26" pos:end="1753:57"><operator pos:start="1753:26" pos:end="1753:26">&amp;</operator><name pos:start="1753:27" pos:end="1753:57"><name pos:start="1753:27" pos:end="1753:29">ost</name><operator pos:start="1753:30" pos:end="1753:31">-&gt;</operator><name pos:start="1753:32" pos:end="1753:33">st</name><operator pos:start="1753:34" pos:end="1753:35">-&gt;</operator><name pos:start="1753:36" pos:end="1753:40">codec</name><operator pos:start="1753:41" pos:end="1753:42">-&gt;</operator><name pos:start="1753:43" pos:end="1753:57">subtitle_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1755:17" pos:end="1755:53"><expr pos:start="1755:17" pos:end="1755:52"><call pos:start="1755:17" pos:end="1755:52"><name pos:start="1755:17" pos:end="1755:23">av_free</name><argument_list pos:start="1755:24" pos:end="1755:52">(<argument pos:start="1755:25" pos:end="1755:51"><expr pos:start="1755:25" pos:end="1755:51"><name pos:start="1755:25" pos:end="1755:51"><name pos:start="1755:25" pos:end="1755:27">ost</name><operator pos:start="1755:28" pos:end="1755:29">-&gt;</operator><name pos:start="1755:30" pos:end="1755:43">resample_frame</name><operator pos:start="1755:44" pos:end="1755:44">.</operator><name pos:start="1755:45" pos:end="1755:48">data</name><index pos:start="1755:49" pos:end="1755:51">[<expr pos:start="1755:50" pos:end="1755:50"><literal type="number" pos:start="1755:50" pos:end="1755:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1757:17" pos:end="1757:44"><expr pos:start="1757:17" pos:end="1757:43"><call pos:start="1757:17" pos:end="1757:43"><name pos:start="1757:17" pos:end="1757:23">av_free</name><argument_list pos:start="1757:24" pos:end="1757:43">(<argument pos:start="1757:25" pos:end="1757:42"><expr pos:start="1757:25" pos:end="1757:42"><name pos:start="1757:25" pos:end="1757:42"><name pos:start="1757:25" pos:end="1757:27">ost</name><operator pos:start="1757:28" pos:end="1757:29">-&gt;</operator><name pos:start="1757:30" pos:end="1757:42">forced_kf_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1759:17" pos:end="1761:59"><if pos:start="1759:17" pos:end="1761:59">if <condition pos:start="1759:20" pos:end="1759:40">(<expr pos:start="1759:21" pos:end="1759:39"><name pos:start="1759:21" pos:end="1759:39"><name pos:start="1759:21" pos:end="1759:23">ost</name><operator pos:start="1759:24" pos:end="1759:25">-&gt;</operator><name pos:start="1759:26" pos:end="1759:39">video_resample</name></name></expr>)</condition><block type="pseudo" pos:start="1761:21" pos:end="1761:59"><block_content pos:start="1761:21" pos:end="1761:59">

                    <expr_stmt pos:start="1761:21" pos:end="1761:59"><expr pos:start="1761:21" pos:end="1761:58"><call pos:start="1761:21" pos:end="1761:58"><name pos:start="1761:21" pos:end="1761:35">sws_freeContext</name><argument_list pos:start="1761:36" pos:end="1761:58">(<argument pos:start="1761:37" pos:end="1761:57"><expr pos:start="1761:37" pos:end="1761:57"><name pos:start="1761:37" pos:end="1761:57"><name pos:start="1761:37" pos:end="1761:39">ost</name><operator pos:start="1761:40" pos:end="1761:41">-&gt;</operator><name pos:start="1761:42" pos:end="1761:57">img_resample_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1763:17" pos:end="1765:56"><if pos:start="1763:17" pos:end="1765:56">if <condition pos:start="1763:20" pos:end="1763:34">(<expr pos:start="1763:21" pos:end="1763:33"><name pos:start="1763:21" pos:end="1763:33"><name pos:start="1763:21" pos:end="1763:23">ost</name><operator pos:start="1763:24" pos:end="1763:25">-&gt;</operator><name pos:start="1763:26" pos:end="1763:33">resample</name></name></expr>)</condition><block type="pseudo" pos:start="1765:21" pos:end="1765:56"><block_content pos:start="1765:21" pos:end="1765:56">

                    <expr_stmt pos:start="1765:21" pos:end="1765:56"><expr pos:start="1765:21" pos:end="1765:55"><call pos:start="1765:21" pos:end="1765:55"><name pos:start="1765:21" pos:end="1765:40">audio_resample_close</name><argument_list pos:start="1765:41" pos:end="1765:55">(<argument pos:start="1765:42" pos:end="1765:54"><expr pos:start="1765:42" pos:end="1765:54"><name pos:start="1765:42" pos:end="1765:54"><name pos:start="1765:42" pos:end="1765:44">ost</name><operator pos:start="1765:45" pos:end="1765:46">-&gt;</operator><name pos:start="1765:47" pos:end="1765:54">resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1767:17" pos:end="1769:61"><if pos:start="1767:17" pos:end="1769:61">if <condition pos:start="1767:20" pos:end="1767:38">(<expr pos:start="1767:21" pos:end="1767:37"><name pos:start="1767:21" pos:end="1767:37"><name pos:start="1767:21" pos:end="1767:23">ost</name><operator pos:start="1767:24" pos:end="1767:25">-&gt;</operator><name pos:start="1767:26" pos:end="1767:37">reformat_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="1769:21" pos:end="1769:61"><block_content pos:start="1769:21" pos:end="1769:61">

                    <expr_stmt pos:start="1769:21" pos:end="1769:61"><expr pos:start="1769:21" pos:end="1769:60"><call pos:start="1769:21" pos:end="1769:60"><name pos:start="1769:21" pos:end="1769:41">av_audio_convert_free</name><argument_list pos:start="1769:42" pos:end="1769:60">(<argument pos:start="1769:43" pos:end="1769:59"><expr pos:start="1769:43" pos:end="1769:59"><name pos:start="1769:43" pos:end="1769:59"><name pos:start="1769:43" pos:end="1769:45">ost</name><operator pos:start="1769:46" pos:end="1769:47">-&gt;</operator><name pos:start="1769:48" pos:end="1769:59">reformat_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1771:17" pos:end="1771:41"><expr pos:start="1771:17" pos:end="1771:40"><call pos:start="1771:17" pos:end="1771:40"><name pos:start="1771:17" pos:end="1771:28">av_dict_free</name><argument_list pos:start="1771:29" pos:end="1771:40">(<argument pos:start="1771:30" pos:end="1771:39"><expr pos:start="1771:30" pos:end="1771:39"><operator pos:start="1771:30" pos:end="1771:30">&amp;</operator><name pos:start="1771:31" pos:end="1771:39"><name pos:start="1771:31" pos:end="1771:33">ost</name><operator pos:start="1771:34" pos:end="1771:35">-&gt;</operator><name pos:start="1771:36" pos:end="1771:39">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1773:17" pos:end="1773:29"><expr pos:start="1773:17" pos:end="1773:28"><call pos:start="1773:17" pos:end="1773:28"><name pos:start="1773:17" pos:end="1773:23">av_free</name><argument_list pos:start="1773:24" pos:end="1773:28">(<argument pos:start="1773:25" pos:end="1773:27"><expr pos:start="1773:25" pos:end="1773:27"><name pos:start="1773:25" pos:end="1773:27">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1779:9" pos:end="1779:27"><expr pos:start="1779:9" pos:end="1779:26"><call pos:start="1779:9" pos:end="1779:26"><name pos:start="1779:9" pos:end="1779:15">av_free</name><argument_list pos:start="1779:16" pos:end="1779:26">(<argument pos:start="1779:17" pos:end="1779:25"><expr pos:start="1779:17" pos:end="1779:25"><name pos:start="1779:17" pos:end="1779:25">ost_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="1783:5" pos:end="1783:15">return <expr pos:start="1783:12" pos:end="1783:14"><name pos:start="1783:12" pos:end="1783:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
