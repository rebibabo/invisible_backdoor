<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16117.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">do_store_msr</name> <parameter_list pos:start="1:18" pos:end="1:55">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:34"><name pos:start="1:19" pos:end="1:29">CPUPPCState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:48">target_ulong</name></type> <name pos:start="1:50" pos:end="1:54">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:20">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">enter_pm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:9">value</name> <operator pos:start="9:11" pos:end="9:12">&amp;=</operator> <name pos:start="9:14" pos:end="9:26"><name pos:start="9:14" pos:end="9:16">env</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:26">msr_mask</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="24:0"><if pos:start="11:5" pos:end="24:0">if <condition pos:start="11:8" pos:end="13:42">(<expr pos:start="11:9" pos:end="13:41"><operator pos:start="11:9" pos:end="11:9">(</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:15">value</name> <operator pos:start="11:17" pos:end="11:18">&gt;&gt;</operator> <name pos:start="11:20" pos:end="11:25">MSR_IR</name><operator pos:start="11:26" pos:end="11:26">)</operator> <operator pos:start="11:28" pos:end="11:28">&amp;</operator> <literal type="number" pos:start="11:30" pos:end="11:30">1</literal><operator pos:start="11:31" pos:end="11:31">)</operator> <operator pos:start="11:33" pos:end="11:34">!=</operator> <name pos:start="11:36" pos:end="11:41">msr_ir</name> <operator pos:start="11:43" pos:end="11:44">||</operator>

        <operator pos:start="13:9" pos:end="13:9">(</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:15">value</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <name pos:start="13:20" pos:end="13:25">MSR_DR</name><operator pos:start="13:26" pos:end="13:26">)</operator> <operator pos:start="13:28" pos:end="13:28">&amp;</operator> <literal type="number" pos:start="13:30" pos:end="13:30">1</literal><operator pos:start="13:31" pos:end="13:31">)</operator> <operator pos:start="13:33" pos:end="13:34">!=</operator> <name pos:start="13:36" pos:end="13:41">msr_dr</name></expr>)</condition> <block pos:start="13:44" pos:end="24:0">{<block_content pos:start="17:9" pos:end="19:55">

        <comment type="block" pos:start="15:9" pos:end="15:58">/* Flush all tlb when changing translation mode */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><call pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:17">tlb_flush</name><argument_list pos:start="17:18" pos:end="17:25">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">env</name></expr></argument>, <argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:30">interrupt_request</name></name> <operator pos:start="19:32" pos:end="19:33">|=</operator> <name pos:start="19:35" pos:end="19:54">CPU_INTERRUPT_EXITTB</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="23:1" pos:end="23:31">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:31"><operator pos:start="23:5" pos:end="23:5">!</operator><call pos:start="23:6" pos:end="23:31"><name pos:start="23:6" pos:end="23:12">defined</name> <argument_list pos:start="23:14" pos:end="23:31">(<argument pos:start="23:15" pos:end="23:30"><expr pos:start="23:15" pos:end="23:30"><name pos:start="23:15" pos:end="23:30">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="27:56">(<expr pos:start="25:9" pos:end="27:55"><call pos:start="25:9" pos:end="27:55"><name pos:start="25:9" pos:end="25:16">unlikely</name><argument_list pos:start="25:17" pos:end="27:55">(<argument pos:start="25:18" pos:end="27:54"><expr pos:start="25:18" pos:end="27:54"><operator pos:start="25:18" pos:end="25:18">(</operator><name pos:start="25:19" pos:end="25:28"><name pos:start="25:19" pos:end="25:21">env</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:28">flags</name></name> <operator pos:start="25:30" pos:end="25:30">&amp;</operator> <name pos:start="25:32" pos:end="25:48">POWERPC_FLAG_TGPR</name><operator pos:start="25:49" pos:end="25:49">)</operator> <operator pos:start="25:51" pos:end="25:52">&amp;&amp;</operator>

                 <operator pos:start="27:18" pos:end="27:18">(</operator><operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:24">value</name> <operator pos:start="27:26" pos:end="27:27">&gt;&gt;</operator> <name pos:start="27:29" pos:end="27:36">MSR_TGPR</name><operator pos:start="27:37" pos:end="27:37">)</operator> <operator pos:start="27:39" pos:end="27:39">&amp;</operator> <literal type="number" pos:start="27:41" pos:end="27:41">1</literal><operator pos:start="27:42" pos:end="27:42">)</operator> <operator pos:start="27:44" pos:end="27:45">!=</operator> <name pos:start="27:47" pos:end="27:54">msr_tgpr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:58" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:27">

        <comment type="block" pos:start="29:9" pos:end="29:54">/* Swap temporary saved registers with GPRs */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><call pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:21">swap_gpr_tgpr</name><argument_list pos:start="31:22" pos:end="31:26">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="46:0"><if pos:start="35:5" pos:end="46:0">if <condition pos:start="35:8" pos:end="35:50">(<expr pos:start="35:9" pos:end="35:49"><call pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:16">unlikely</name><argument_list pos:start="35:17" pos:end="35:39">(<argument pos:start="35:18" pos:end="35:38"><expr pos:start="35:18" pos:end="35:38"><operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:23">value</name> <operator pos:start="35:25" pos:end="35:26">&gt;&gt;</operator> <name pos:start="35:28" pos:end="35:33">MSR_EP</name><operator pos:start="35:34" pos:end="35:34">)</operator> <operator pos:start="35:36" pos:end="35:36">&amp;</operator> <literal type="number" pos:start="35:38" pos:end="35:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="35:41" pos:end="35:42">!=</operator> <name pos:start="35:44" pos:end="35:49">msr_ep</name></expr>)</condition> <block pos:start="35:52" pos:end="46:0">{<block_content pos:start="39:9" pos:end="39:64">

        <comment type="block" pos:start="37:9" pos:end="37:56">/* Change the exception prefix on PowerPC 601 */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:11">env</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:24">excp_prefix</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <operator pos:start="39:28" pos:end="39:28">(</operator><operator pos:start="39:29" pos:end="39:29">(</operator><name pos:start="39:30" pos:end="39:34">value</name> <operator pos:start="39:36" pos:end="39:37">&gt;&gt;</operator> <name pos:start="39:39" pos:end="39:44">MSR_EP</name><operator pos:start="39:45" pos:end="39:45">)</operator> <operator pos:start="39:47" pos:end="39:47">&amp;</operator> <literal type="number" pos:start="39:49" pos:end="39:49">1</literal><operator pos:start="39:50" pos:end="39:50">)</operator> <operator pos:start="39:52" pos:end="39:52">*</operator> <literal type="number" pos:start="39:54" pos:end="39:63">0xFFF00000</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="45:1" pos:end="45:26">#<cpp:directive pos:start="45:2" pos:end="45:3">if</cpp:directive> <expr pos:start="45:5" pos:end="45:26"><call pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:11">defined</name> <argument_list pos:start="45:13" pos:end="45:26">(<argument pos:start="45:14" pos:end="45:25"><expr pos:start="45:14" pos:end="45:25"><name pos:start="45:14" pos:end="45:25">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:10">msr_sf</name>   <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:21">value</name> <operator pos:start="47:23" pos:end="47:24">&gt;&gt;</operator> <name pos:start="47:26" pos:end="47:31">MSR_SF</name><operator pos:start="47:32" pos:end="47:32">)</operator>   <operator pos:start="47:36" pos:end="47:36">&amp;</operator> <literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:39"><expr pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:11">msr_isf</name>  <operator pos:start="49:14" pos:end="49:14">=</operator> <operator pos:start="49:16" pos:end="49:16">(</operator><name pos:start="49:17" pos:end="49:21">value</name> <operator pos:start="49:23" pos:end="49:24">&gt;&gt;</operator> <name pos:start="49:26" pos:end="49:32">MSR_ISF</name><operator pos:start="49:33" pos:end="49:33">)</operator>  <operator pos:start="49:36" pos:end="49:36">&amp;</operator> <literal type="number" pos:start="49:38" pos:end="49:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="54:0"><expr pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:10">msr_hv</name>   <operator pos:start="51:14" pos:end="51:14">=</operator> <operator pos:start="51:16" pos:end="51:16">(</operator><name pos:start="51:17" pos:end="51:21">value</name> <operator pos:start="51:23" pos:end="51:24">&gt;&gt;</operator> <name pos:start="51:26" pos:end="51:31">MSR_HV</name><operator pos:start="51:32" pos:end="51:32">)</operator>   <operator pos:start="51:36" pos:end="51:36">&amp;</operator> <literal type="number" pos:start="51:38" pos:end="51:38">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="55:5" pos:end="55:39"><expr pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:12">msr_ucle</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <operator pos:start="55:16" pos:end="55:16">(</operator><name pos:start="55:17" pos:end="55:21">value</name> <operator pos:start="55:23" pos:end="55:24">&gt;&gt;</operator> <name pos:start="55:26" pos:end="55:33">MSR_UCLE</name><operator pos:start="55:34" pos:end="55:34">)</operator> <operator pos:start="55:36" pos:end="55:36">&amp;</operator> <literal type="number" pos:start="55:38" pos:end="55:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:10">msr_vr</name>   <operator pos:start="57:14" pos:end="57:14">=</operator> <operator pos:start="57:16" pos:end="57:16">(</operator><name pos:start="57:17" pos:end="57:21">value</name> <operator pos:start="57:23" pos:end="57:24">&gt;&gt;</operator> <name pos:start="57:26" pos:end="57:31">MSR_VR</name><operator pos:start="57:32" pos:end="57:32">)</operator>   <operator pos:start="57:36" pos:end="57:36">&amp;</operator> <literal type="number" pos:start="57:38" pos:end="57:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="57:41" pos:end="57:54">/* VR / SPE */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:10">msr_ap</name>   <operator pos:start="59:14" pos:end="59:14">=</operator> <operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:21">value</name> <operator pos:start="59:23" pos:end="59:24">&gt;&gt;</operator> <name pos:start="59:26" pos:end="59:31">MSR_AP</name><operator pos:start="59:32" pos:end="59:32">)</operator>   <operator pos:start="59:36" pos:end="59:36">&amp;</operator> <literal type="number" pos:start="59:38" pos:end="59:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:10">msr_sa</name>   <operator pos:start="61:14" pos:end="61:14">=</operator> <operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:21">value</name> <operator pos:start="61:23" pos:end="61:24">&gt;&gt;</operator> <name pos:start="61:26" pos:end="61:31">MSR_SA</name><operator pos:start="61:32" pos:end="61:32">)</operator>   <operator pos:start="61:36" pos:end="61:36">&amp;</operator> <literal type="number" pos:start="61:38" pos:end="61:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:11">msr_key</name>  <operator pos:start="63:14" pos:end="63:14">=</operator> <operator pos:start="63:16" pos:end="63:16">(</operator><name pos:start="63:17" pos:end="63:21">value</name> <operator pos:start="63:23" pos:end="63:24">&gt;&gt;</operator> <name pos:start="63:26" pos:end="63:32">MSR_KEY</name><operator pos:start="63:33" pos:end="63:33">)</operator>  <operator pos:start="63:36" pos:end="63:36">&amp;</operator> <literal type="number" pos:start="63:38" pos:end="63:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:39"><expr pos:start="65:5" pos:end="65:38"><name pos:start="65:5" pos:end="65:11">msr_pow</name>  <operator pos:start="65:14" pos:end="65:14">=</operator> <operator pos:start="65:16" pos:end="65:16">(</operator><name pos:start="65:17" pos:end="65:21">value</name> <operator pos:start="65:23" pos:end="65:24">&gt;&gt;</operator> <name pos:start="65:26" pos:end="65:32">MSR_POW</name><operator pos:start="65:33" pos:end="65:33">)</operator>  <operator pos:start="65:36" pos:end="65:36">&amp;</operator> <literal type="number" pos:start="65:38" pos:end="65:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:41" pos:end="65:54">/* POW / WE */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:12">msr_tgpr</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <operator pos:start="67:16" pos:end="67:16">(</operator><name pos:start="67:17" pos:end="67:21">value</name> <operator pos:start="67:23" pos:end="67:24">&gt;&gt;</operator> <name pos:start="67:26" pos:end="67:33">MSR_TGPR</name><operator pos:start="67:34" pos:end="67:34">)</operator> <operator pos:start="67:36" pos:end="67:36">&amp;</operator> <literal type="number" pos:start="67:38" pos:end="67:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:41" pos:end="67:55">/* TGPR / CE */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:11">msr_ile</name>  <operator pos:start="69:14" pos:end="69:14">=</operator> <operator pos:start="69:16" pos:end="69:16">(</operator><name pos:start="69:17" pos:end="69:21">value</name> <operator pos:start="69:23" pos:end="69:24">&gt;&gt;</operator> <name pos:start="69:26" pos:end="69:32">MSR_ILE</name><operator pos:start="69:33" pos:end="69:33">)</operator>  <operator pos:start="69:36" pos:end="69:36">&amp;</operator> <literal type="number" pos:start="69:38" pos:end="69:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:10">msr_ee</name>   <operator pos:start="71:14" pos:end="71:14">=</operator> <operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:21">value</name> <operator pos:start="71:23" pos:end="71:24">&gt;&gt;</operator> <name pos:start="71:26" pos:end="71:31">MSR_EE</name><operator pos:start="71:32" pos:end="71:32">)</operator>   <operator pos:start="71:36" pos:end="71:36">&amp;</operator> <literal type="number" pos:start="71:38" pos:end="71:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:39"><expr pos:start="73:5" pos:end="73:38"><name pos:start="73:5" pos:end="73:10">msr_pr</name>   <operator pos:start="73:14" pos:end="73:14">=</operator> <operator pos:start="73:16" pos:end="73:16">(</operator><name pos:start="73:17" pos:end="73:21">value</name> <operator pos:start="73:23" pos:end="73:24">&gt;&gt;</operator> <name pos:start="73:26" pos:end="73:31">MSR_PR</name><operator pos:start="73:32" pos:end="73:32">)</operator>   <operator pos:start="73:36" pos:end="73:36">&amp;</operator> <literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:39"><expr pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:10">msr_fp</name>   <operator pos:start="75:14" pos:end="75:14">=</operator> <operator pos:start="75:16" pos:end="75:16">(</operator><name pos:start="75:17" pos:end="75:21">value</name> <operator pos:start="75:23" pos:end="75:24">&gt;&gt;</operator> <name pos:start="75:26" pos:end="75:31">MSR_FP</name><operator pos:start="75:32" pos:end="75:32">)</operator>   <operator pos:start="75:36" pos:end="75:36">&amp;</operator> <literal type="number" pos:start="75:38" pos:end="75:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:39"><expr pos:start="77:5" pos:end="77:38"><name pos:start="77:5" pos:end="77:10">msr_me</name>   <operator pos:start="77:14" pos:end="77:14">=</operator> <operator pos:start="77:16" pos:end="77:16">(</operator><name pos:start="77:17" pos:end="77:21">value</name> <operator pos:start="77:23" pos:end="77:24">&gt;&gt;</operator> <name pos:start="77:26" pos:end="77:31">MSR_ME</name><operator pos:start="77:32" pos:end="77:32">)</operator>   <operator pos:start="77:36" pos:end="77:36">&amp;</operator> <literal type="number" pos:start="77:38" pos:end="77:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><name pos:start="79:5" pos:end="79:11">msr_fe0</name>  <operator pos:start="79:14" pos:end="79:14">=</operator> <operator pos:start="79:16" pos:end="79:16">(</operator><name pos:start="79:17" pos:end="79:21">value</name> <operator pos:start="79:23" pos:end="79:24">&gt;&gt;</operator> <name pos:start="79:26" pos:end="79:32">MSR_FE0</name><operator pos:start="79:33" pos:end="79:33">)</operator>  <operator pos:start="79:36" pos:end="79:36">&amp;</operator> <literal type="number" pos:start="79:38" pos:end="79:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:39"><expr pos:start="81:5" pos:end="81:38"><name pos:start="81:5" pos:end="81:10">msr_se</name>   <operator pos:start="81:14" pos:end="81:14">=</operator> <operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:21">value</name> <operator pos:start="81:23" pos:end="81:24">&gt;&gt;</operator> <name pos:start="81:26" pos:end="81:31">MSR_SE</name><operator pos:start="81:32" pos:end="81:32">)</operator>   <operator pos:start="81:36" pos:end="81:36">&amp;</operator> <literal type="number" pos:start="81:38" pos:end="81:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="81:41" pos:end="81:61">/* SE / DWE / UBLE */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:39"><expr pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:10">msr_be</name>   <operator pos:start="83:14" pos:end="83:14">=</operator> <operator pos:start="83:16" pos:end="83:16">(</operator><name pos:start="83:17" pos:end="83:21">value</name> <operator pos:start="83:23" pos:end="83:24">&gt;&gt;</operator> <name pos:start="83:26" pos:end="83:31">MSR_BE</name><operator pos:start="83:32" pos:end="83:32">)</operator>   <operator pos:start="83:36" pos:end="83:36">&amp;</operator> <literal type="number" pos:start="83:38" pos:end="83:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="83:41" pos:end="83:53">/* BE / DE */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:11">msr_fe1</name>  <operator pos:start="85:14" pos:end="85:14">=</operator> <operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:21">value</name> <operator pos:start="85:23" pos:end="85:24">&gt;&gt;</operator> <name pos:start="85:26" pos:end="85:32">MSR_FE1</name><operator pos:start="85:33" pos:end="85:33">)</operator>  <operator pos:start="85:36" pos:end="85:36">&amp;</operator> <literal type="number" pos:start="85:38" pos:end="85:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:39"><expr pos:start="87:5" pos:end="87:38"><name pos:start="87:5" pos:end="87:10">msr_al</name>   <operator pos:start="87:14" pos:end="87:14">=</operator> <operator pos:start="87:16" pos:end="87:16">(</operator><name pos:start="87:17" pos:end="87:21">value</name> <operator pos:start="87:23" pos:end="87:24">&gt;&gt;</operator> <name pos:start="87:26" pos:end="87:31">MSR_AL</name><operator pos:start="87:32" pos:end="87:32">)</operator>   <operator pos:start="87:36" pos:end="87:36">&amp;</operator> <literal type="number" pos:start="87:38" pos:end="87:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:10">msr_ip</name>   <operator pos:start="89:14" pos:end="89:14">=</operator> <operator pos:start="89:16" pos:end="89:16">(</operator><name pos:start="89:17" pos:end="89:21">value</name> <operator pos:start="89:23" pos:end="89:24">&gt;&gt;</operator> <name pos:start="89:26" pos:end="89:31">MSR_IP</name><operator pos:start="89:32" pos:end="89:32">)</operator>   <operator pos:start="89:36" pos:end="89:36">&amp;</operator> <literal type="number" pos:start="89:38" pos:end="89:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:10">msr_ir</name>   <operator pos:start="91:14" pos:end="91:14">=</operator> <operator pos:start="91:16" pos:end="91:16">(</operator><name pos:start="91:17" pos:end="91:21">value</name> <operator pos:start="91:23" pos:end="91:24">&gt;&gt;</operator> <name pos:start="91:26" pos:end="91:31">MSR_IR</name><operator pos:start="91:32" pos:end="91:32">)</operator>   <operator pos:start="91:36" pos:end="91:36">&amp;</operator> <literal type="number" pos:start="91:38" pos:end="91:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="91:41" pos:end="91:53">/* IR / IS */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:39"><expr pos:start="93:5" pos:end="93:38"><name pos:start="93:5" pos:end="93:10">msr_dr</name>   <operator pos:start="93:14" pos:end="93:14">=</operator> <operator pos:start="93:16" pos:end="93:16">(</operator><name pos:start="93:17" pos:end="93:21">value</name> <operator pos:start="93:23" pos:end="93:24">&gt;&gt;</operator> <name pos:start="93:26" pos:end="93:31">MSR_DR</name><operator pos:start="93:32" pos:end="93:32">)</operator>   <operator pos:start="93:36" pos:end="93:36">&amp;</operator> <literal type="number" pos:start="93:38" pos:end="93:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="93:41" pos:end="93:53">/* DR / DS */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:39"><expr pos:start="95:5" pos:end="95:38"><name pos:start="95:5" pos:end="95:10">msr_pe</name>   <operator pos:start="95:14" pos:end="95:14">=</operator> <operator pos:start="95:16" pos:end="95:16">(</operator><name pos:start="95:17" pos:end="95:21">value</name> <operator pos:start="95:23" pos:end="95:24">&gt;&gt;</operator> <name pos:start="95:26" pos:end="95:31">MSR_PE</name><operator pos:start="95:32" pos:end="95:32">)</operator>   <operator pos:start="95:36" pos:end="95:36">&amp;</operator> <literal type="number" pos:start="95:38" pos:end="95:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="95:41" pos:end="95:53">/* PE / EP */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:39"><expr pos:start="97:5" pos:end="97:38"><name pos:start="97:5" pos:end="97:10">msr_px</name>   <operator pos:start="97:14" pos:end="97:14">=</operator> <operator pos:start="97:16" pos:end="97:16">(</operator><name pos:start="97:17" pos:end="97:21">value</name> <operator pos:start="97:23" pos:end="97:24">&gt;&gt;</operator> <name pos:start="97:26" pos:end="97:31">MSR_PX</name><operator pos:start="97:32" pos:end="97:32">)</operator>   <operator pos:start="97:36" pos:end="97:36">&amp;</operator> <literal type="number" pos:start="97:38" pos:end="97:38">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="97:41" pos:end="97:54">/* PX / PMM */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:39"><expr pos:start="99:5" pos:end="99:38"><name pos:start="99:5" pos:end="99:10">msr_ri</name>   <operator pos:start="99:14" pos:end="99:14">=</operator> <operator pos:start="99:16" pos:end="99:16">(</operator><name pos:start="99:17" pos:end="99:21">value</name> <operator pos:start="99:23" pos:end="99:24">&gt;&gt;</operator> <name pos:start="99:26" pos:end="99:31">MSR_RI</name><operator pos:start="99:32" pos:end="99:32">)</operator>   <operator pos:start="99:36" pos:end="99:36">&amp;</operator> <literal type="number" pos:start="99:38" pos:end="99:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:39"><expr pos:start="101:5" pos:end="101:38"><name pos:start="101:5" pos:end="101:10">msr_le</name>   <operator pos:start="101:14" pos:end="101:14">=</operator> <operator pos:start="101:16" pos:end="101:16">(</operator><name pos:start="101:17" pos:end="101:21">value</name> <operator pos:start="101:23" pos:end="101:24">&gt;&gt;</operator> <name pos:start="101:26" pos:end="101:31">MSR_LE</name><operator pos:start="101:32" pos:end="101:32">)</operator>   <operator pos:start="101:36" pos:end="101:36">&amp;</operator> <literal type="number" pos:start="101:38" pos:end="101:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><call pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:21">do_compute_hflags</name><argument_list pos:start="103:22" pos:end="103:26">(<argument pos:start="103:23" pos:end="103:25"><expr pos:start="103:23" pos:end="103:25"><name pos:start="103:23" pos:end="103:25">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:17"><expr pos:start="107:5" pos:end="107:16"><name pos:start="107:5" pos:end="107:12">enter_pm</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <literal type="number" pos:start="107:16" pos:end="107:16">0</literal></expr>;</expr_stmt>

    <switch pos:start="109:5" pos:end="149:5">switch <condition pos:start="109:12" pos:end="109:28">(<expr pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:15">env</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:27">excp_model</name></name></expr>)</condition> <block pos:start="109:30" pos:end="149:5">{<block_content pos:start="111:5" pos:end="147:14">

    <case pos:start="111:5" pos:end="111:26">case <expr pos:start="111:10" pos:end="111:25"><name pos:start="111:10" pos:end="111:25">POWERPC_EXCP_603</name></expr>:</case>

    <case pos:start="113:5" pos:end="113:27">case <expr pos:start="113:10" pos:end="113:26"><name pos:start="113:10" pos:end="113:26">POWERPC_EXCP_603E</name></expr>:</case>

    <case pos:start="115:5" pos:end="115:25">case <expr pos:start="115:10" pos:end="115:24"><name pos:start="115:10" pos:end="115:24">POWERPC_EXCP_G2</name></expr>:</case>

        <comment type="block" pos:start="117:9" pos:end="121:11">/* Don't handle SLEEP mode: we should disable all clocks...

         * No dynamic power-management.

         */</comment>

        <if_stmt pos:start="123:9" pos:end="125:25"><if pos:start="123:9" pos:end="125:25">if <condition pos:start="123:12" pos:end="123:67">(<expr pos:start="123:13" pos:end="123:66"><name pos:start="123:13" pos:end="123:19">msr_pow</name> <operator pos:start="123:21" pos:end="123:22">==</operator> <literal type="number" pos:start="123:24" pos:end="123:24">1</literal> <operator pos:start="123:26" pos:end="123:27">&amp;&amp;</operator> <operator pos:start="123:29" pos:end="123:29">(</operator><name pos:start="123:30" pos:end="123:47"><name pos:start="123:30" pos:end="123:32">env</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:37">spr</name><index pos:start="123:38" pos:end="123:47">[<expr pos:start="123:39" pos:end="123:46"><name pos:start="123:39" pos:end="123:46">SPR_HID0</name></expr>]</index></name> <operator pos:start="123:49" pos:end="123:49">&amp;</operator> <literal type="number" pos:start="123:51" pos:end="123:60">0x00C00000</literal><operator pos:start="123:61" pos:end="123:61">)</operator> <operator pos:start="123:63" pos:end="123:64">!=</operator> <literal type="number" pos:start="123:66" pos:end="123:66">0</literal></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:25"><block_content pos:start="125:13" pos:end="125:25">

            <expr_stmt pos:start="125:13" pos:end="125:25"><expr pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:20">enter_pm</name> <operator pos:start="125:22" pos:end="125:22">=</operator> <literal type="number" pos:start="125:24" pos:end="125:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:26">case <expr pos:start="129:10" pos:end="129:25"><name pos:start="129:10" pos:end="129:25">POWERPC_EXCP_604</name></expr>:</case>

        <if_stmt pos:start="131:9" pos:end="133:25"><if pos:start="131:9" pos:end="133:25">if <condition pos:start="131:12" pos:end="131:25">(<expr pos:start="131:13" pos:end="131:24"><name pos:start="131:13" pos:end="131:19">msr_pow</name> <operator pos:start="131:21" pos:end="131:22">==</operator> <literal type="number" pos:start="131:24" pos:end="131:24">1</literal></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:25"><block_content pos:start="133:13" pos:end="133:25">

            <expr_stmt pos:start="133:13" pos:end="133:25"><expr pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:20">enter_pm</name> <operator pos:start="133:22" pos:end="133:22">=</operator> <literal type="number" pos:start="133:24" pos:end="133:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <case pos:start="137:5" pos:end="137:26">case <expr pos:start="137:10" pos:end="137:25"><name pos:start="137:10" pos:end="137:25">POWERPC_EXCP_7x0</name></expr>:</case>

        <if_stmt pos:start="139:9" pos:end="141:25"><if pos:start="139:9" pos:end="141:25">if <condition pos:start="139:12" pos:end="139:67">(<expr pos:start="139:13" pos:end="139:66"><name pos:start="139:13" pos:end="139:19">msr_pow</name> <operator pos:start="139:21" pos:end="139:22">==</operator> <literal type="number" pos:start="139:24" pos:end="139:24">1</literal> <operator pos:start="139:26" pos:end="139:27">&amp;&amp;</operator> <operator pos:start="139:29" pos:end="139:29">(</operator><name pos:start="139:30" pos:end="139:47"><name pos:start="139:30" pos:end="139:32">env</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:37">spr</name><index pos:start="139:38" pos:end="139:47">[<expr pos:start="139:39" pos:end="139:46"><name pos:start="139:39" pos:end="139:46">SPR_HID0</name></expr>]</index></name> <operator pos:start="139:49" pos:end="139:49">&amp;</operator> <literal type="number" pos:start="139:51" pos:end="139:60">0x00E00000</literal><operator pos:start="139:61" pos:end="139:61">)</operator> <operator pos:start="139:63" pos:end="139:64">!=</operator> <literal type="number" pos:start="139:66" pos:end="139:66">0</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:25"><block_content pos:start="141:13" pos:end="141:25">

            <expr_stmt pos:start="141:13" pos:end="141:25"><expr pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:20">enter_pm</name> <operator pos:start="141:22" pos:end="141:22">=</operator> <literal type="number" pos:start="141:24" pos:end="141:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <default pos:start="145:5" pos:end="145:12">default:</default>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="153:5" pos:end="153:20">return <expr pos:start="153:12" pos:end="153:19"><name pos:start="153:12" pos:end="153:19">enter_pm</name></expr>;</return>

</block_content>}</block></function>
</unit>
