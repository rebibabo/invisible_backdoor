<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13090.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">SCSIDevice</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:37">scsi_bus_legacy_add_drive</name><parameter_list pos:start="1:38" pos:end="5:71">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">SCSIBus</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">bus</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:64">BlockBackend</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">blk</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:46"><decl pos:start="3:39" pos:end="3:46"><type pos:start="3:39" pos:end="3:46"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:46">unit</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:52">bool</name></type> <name pos:start="3:54" pos:end="3:62">removable</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:77"><decl pos:start="3:65" pos:end="3:77"><type pos:start="3:65" pos:end="3:77"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:77">bootindex</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:56"><decl pos:start="5:39" pos:end="5:56"><type pos:start="5:39" pos:end="5:56"><specifier pos:start="5:39" pos:end="5:43">const</specifier> <name pos:start="5:45" pos:end="5:48">char</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:56">serial</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:70"><decl pos:start="5:59" pos:end="5:70"><type pos:start="5:59" pos:end="5:70"><name pos:start="5:59" pos:end="5:63">Error</name> <modifier pos:start="5:65" pos:end="5:65">*</modifier><modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="83:1">{<block_content pos:start="9:5" pos:end="81:28">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">driver</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:14">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">DeviceState</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">err</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:10">driver</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <ternary pos:start="19:14" pos:end="19:58"><condition pos:start="19:14" pos:end="19:29"><expr pos:start="19:14" pos:end="19:27"><call pos:start="19:14" pos:end="19:27"><name pos:start="19:14" pos:end="19:22">blk_is_sg</name><argument_list pos:start="19:23" pos:end="19:27">(<argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">blk</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="19:31" pos:end="19:44"> <expr pos:start="19:31" pos:end="19:44"><literal type="string" pos:start="19:31" pos:end="19:44">"scsi-generic"</literal></expr> </then><else pos:start="19:46" pos:end="19:58">: <expr pos:start="19:48" pos:end="19:58"><literal type="string" pos:start="19:48" pos:end="19:58">"scsi-disk"</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:7">dev</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:41"><name pos:start="21:11" pos:end="21:21">qdev_create</name><argument_list pos:start="21:22" pos:end="21:41">(<argument pos:start="21:23" pos:end="21:32"><expr pos:start="21:23" pos:end="21:32"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:26">bus</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:32">qbus</name></name></expr></argument>, <argument pos:start="21:35" pos:end="21:40"><expr pos:start="21:35" pos:end="21:40"><name pos:start="21:35" pos:end="21:40">driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:47"><expr pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:8">name</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:46"><name pos:start="23:12" pos:end="23:26">g_strdup_printf</name><argument_list pos:start="23:27" pos:end="23:46">(<argument pos:start="23:28" pos:end="23:39"><expr pos:start="23:28" pos:end="23:39"><literal type="string" pos:start="23:28" pos:end="23:39">"legacy[%d]"</literal></expr></argument>, <argument pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:45">unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:68"><expr pos:start="25:5" pos:end="25:67"><call pos:start="25:5" pos:end="25:67"><name pos:start="25:5" pos:end="25:29">object_property_add_child</name><argument_list pos:start="25:30" pos:end="25:67">(<argument pos:start="25:31" pos:end="25:41"><expr pos:start="25:31" pos:end="25:41"><call pos:start="25:31" pos:end="25:41"><name pos:start="25:31" pos:end="25:36">OBJECT</name><argument_list pos:start="25:37" pos:end="25:41">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:44" pos:end="25:47"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">name</name></expr></argument>, <argument pos:start="25:50" pos:end="25:60"><expr pos:start="25:50" pos:end="25:60"><call pos:start="25:50" pos:end="25:60"><name pos:start="25:50" pos:end="25:55">OBJECT</name><argument_list pos:start="25:56" pos:end="25:60">(<argument pos:start="25:57" pos:end="25:59"><expr pos:start="25:57" pos:end="25:59"><name pos:start="25:57" pos:end="25:59">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:63" pos:end="25:66"><expr pos:start="25:63" pos:end="25:66"><name pos:start="25:63" pos:end="25:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><call pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:10">g_free</name><argument_list pos:start="27:11" pos:end="27:16">(<argument pos:start="27:12" pos:end="27:15"><expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><call pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:24">qdev_prop_set_uint32</name><argument_list pos:start="31:25" pos:end="31:46">(<argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">dev</name></expr></argument>, <argument pos:start="31:31" pos:end="31:39"><expr pos:start="31:31" pos:end="31:39"><literal type="string" pos:start="31:31" pos:end="31:39">"scsi-id"</literal></expr></argument>, <argument pos:start="31:42" pos:end="31:45"><expr pos:start="31:42" pos:end="31:45"><name pos:start="31:42" pos:end="31:45">unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:17">bootindex</name> <operator pos:start="33:19" pos:end="33:20">&gt;=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>)</condition> <block pos:start="33:25" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:46">

        <expr_stmt pos:start="35:9" pos:end="37:46"><expr pos:start="35:9" pos:end="37:45"><call pos:start="35:9" pos:end="37:45"><name pos:start="35:9" pos:end="35:31">object_property_set_int</name><argument_list pos:start="35:32" pos:end="37:45">(<argument pos:start="35:33" pos:end="35:43"><expr pos:start="35:33" pos:end="35:43"><call pos:start="35:33" pos:end="35:43"><name pos:start="35:33" pos:end="35:38">OBJECT</name><argument_list pos:start="35:39" pos:end="35:43">(<argument pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:42">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:46" pos:end="35:54"><expr pos:start="35:46" pos:end="35:54"><name pos:start="35:46" pos:end="35:54">bootindex</name></expr></argument>, <argument pos:start="35:57" pos:end="35:67"><expr pos:start="35:57" pos:end="35:67"><literal type="string" pos:start="35:57" pos:end="35:67">"bootindex"</literal></expr></argument>,

                                <argument pos:start="37:33" pos:end="37:44"><expr pos:start="37:33" pos:end="37:44"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:44">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:61">(<expr pos:start="41:9" pos:end="41:60"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:28">object_property_find</name><argument_list pos:start="41:29" pos:end="41:60">(<argument pos:start="41:30" pos:end="41:40"><expr pos:start="41:30" pos:end="41:40"><call pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:35">OBJECT</name><argument_list pos:start="41:36" pos:end="41:40">(<argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:43" pos:end="41:53"><expr pos:start="41:43" pos:end="41:53"><literal type="string" pos:start="41:43" pos:end="41:53">"removable"</literal></expr></argument>, <argument pos:start="41:56" pos:end="41:59"><expr pos:start="41:56" pos:end="41:59"><name pos:start="41:56" pos:end="41:59">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:63" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:55">

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:25">qdev_prop_set_bit</name><argument_list pos:start="43:26" pos:end="43:54">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">dev</name></expr></argument>, <argument pos:start="43:32" pos:end="43:42"><expr pos:start="43:32" pos:end="43:42"><literal type="string" pos:start="43:32" pos:end="43:42">"removable"</literal></expr></argument>, <argument pos:start="43:45" pos:end="43:53"><expr pos:start="43:45" pos:end="43:53"><name pos:start="43:45" pos:end="43:53">removable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:68">(<expr pos:start="47:9" pos:end="47:67"><name pos:start="47:9" pos:end="47:14">serial</name> <operator pos:start="47:16" pos:end="47:17">&amp;&amp;</operator> <call pos:start="47:19" pos:end="47:67"><name pos:start="47:19" pos:end="47:38">object_property_find</name><argument_list pos:start="47:39" pos:end="47:67">(<argument pos:start="47:40" pos:end="47:50"><expr pos:start="47:40" pos:end="47:50"><call pos:start="47:40" pos:end="47:50"><name pos:start="47:40" pos:end="47:45">OBJECT</name><argument_list pos:start="47:46" pos:end="47:50">(<argument pos:start="47:47" pos:end="47:49"><expr pos:start="47:47" pos:end="47:49"><name pos:start="47:47" pos:end="47:49">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:53" pos:end="47:60"><expr pos:start="47:53" pos:end="47:60"><literal type="string" pos:start="47:53" pos:end="47:60">"serial"</literal></expr></argument>, <argument pos:start="47:63" pos:end="47:66"><expr pos:start="47:63" pos:end="47:66"><name pos:start="47:63" pos:end="47:66">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:70" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:52">

        <expr_stmt pos:start="49:9" pos:end="49:52"><expr pos:start="49:9" pos:end="49:51"><call pos:start="49:9" pos:end="49:51"><name pos:start="49:9" pos:end="49:28">qdev_prop_set_string</name><argument_list pos:start="49:29" pos:end="49:51">(<argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:32">dev</name></expr></argument>, <argument pos:start="49:35" pos:end="49:42"><expr pos:start="49:35" pos:end="49:42"><literal type="string" pos:start="49:35" pos:end="49:42">"serial"</literal></expr></argument>, <argument pos:start="49:45" pos:end="49:50"><expr pos:start="49:45" pos:end="49:50"><name pos:start="49:45" pos:end="49:50">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:49"><expr pos:start="53:5" pos:end="53:48"><call pos:start="53:5" pos:end="53:48"><name pos:start="53:5" pos:end="53:23">qdev_prop_set_drive</name><argument_list pos:start="53:24" pos:end="53:48">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">dev</name></expr></argument>, <argument pos:start="53:30" pos:end="53:36"><expr pos:start="53:30" pos:end="53:36"><literal type="string" pos:start="53:30" pos:end="53:36">"drive"</literal></expr></argument>, <argument pos:start="53:39" pos:end="53:41"><expr pos:start="53:39" pos:end="53:41"><name pos:start="53:39" pos:end="53:41">blk</name></expr></argument>, <argument pos:start="53:44" pos:end="53:47"><expr pos:start="53:44" pos:end="53:47"><operator pos:start="53:44" pos:end="53:44">&amp;</operator><name pos:start="53:45" pos:end="53:47">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="67:5"><if pos:start="55:5" pos:end="67:5">if <condition pos:start="55:8" pos:end="55:12">(<expr pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">err</name></expr>)</condition> <block pos:start="55:14" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:20">

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:25">qerror_report_err</name><argument_list pos:start="57:26" pos:end="57:30">(<argument pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><call pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:18">error_free</name><argument_list pos:start="59:19" pos:end="59:23">(<argument pos:start="59:20" pos:end="59:22"><expr pos:start="59:20" pos:end="59:22"><name pos:start="59:20" pos:end="59:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><call pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:18">error_setg</name><argument_list pos:start="61:19" pos:end="61:57">(<argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">errp</name></expr></argument>, <argument pos:start="61:26" pos:end="61:56"><expr pos:start="61:26" pos:end="61:56"><literal type="string" pos:start="61:26" pos:end="61:56">"Setting drive property failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><call pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:23">object_unparent</name><argument_list pos:start="63:24" pos:end="63:36">(<argument pos:start="63:25" pos:end="63:35"><expr pos:start="63:25" pos:end="63:35"><call pos:start="63:25" pos:end="63:35"><name pos:start="63:25" pos:end="63:30">OBJECT</name><argument_list pos:start="63:31" pos:end="63:35">(<argument pos:start="63:32" pos:end="63:34"><expr pos:start="63:32" pos:end="63:34"><name pos:start="63:32" pos:end="63:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:66"><expr pos:start="69:5" pos:end="69:65"><call pos:start="69:5" pos:end="69:65"><name pos:start="69:5" pos:end="69:28">object_property_set_bool</name><argument_list pos:start="69:29" pos:end="69:65">(<argument pos:start="69:30" pos:end="69:40"><expr pos:start="69:30" pos:end="69:40"><call pos:start="69:30" pos:end="69:40"><name pos:start="69:30" pos:end="69:35">OBJECT</name><argument_list pos:start="69:36" pos:end="69:40">(<argument pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:43" pos:end="69:46"><expr pos:start="69:43" pos:end="69:46"><name pos:start="69:43" pos:end="69:46">true</name></expr></argument>, <argument pos:start="69:49" pos:end="69:58"><expr pos:start="69:49" pos:end="69:58"><literal type="string" pos:start="69:49" pos:end="69:58">"realized"</literal></expr></argument>, <argument pos:start="69:61" pos:end="69:64"><expr pos:start="69:61" pos:end="69:64"><operator pos:start="69:61" pos:end="69:61">&amp;</operator><name pos:start="69:62" pos:end="69:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:20">(<expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:11">err</name> <operator pos:start="71:13" pos:end="71:14">!=</operator> <name pos:start="71:16" pos:end="71:19">NULL</name></expr>)</condition> <block pos:start="71:22" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:20">

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><call pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:23">error_propagate</name><argument_list pos:start="73:24" pos:end="73:34">(<argument pos:start="73:25" pos:end="73:28"><expr pos:start="73:25" pos:end="73:28"><name pos:start="73:25" pos:end="73:28">errp</name></expr></argument>, <argument pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><name pos:start="73:31" pos:end="73:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><call pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:23">object_unparent</name><argument_list pos:start="75:24" pos:end="75:36">(<argument pos:start="75:25" pos:end="75:35"><expr pos:start="75:25" pos:end="75:35"><call pos:start="75:25" pos:end="75:35"><name pos:start="75:25" pos:end="75:30">OBJECT</name><argument_list pos:start="75:31" pos:end="75:35">(<argument pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:20">return <expr pos:start="77:16" pos:end="77:19"><name pos:start="77:16" pos:end="77:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="81:5" pos:end="81:28">return <expr pos:start="81:12" pos:end="81:27"><call pos:start="81:12" pos:end="81:27"><name pos:start="81:12" pos:end="81:22">SCSI_DEVICE</name><argument_list pos:start="81:23" pos:end="81:27">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
