<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17444.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">pl050_init</name><parameter_list pos:start="1:16" pos:end="1:58">(<parameter pos:start="1:17" pos:end="1:29"><decl pos:start="1:17" pos:end="1:29"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:24">uint32_t</name></type> <name pos:start="1:26" pos:end="1:29">base</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:39">qemu_irq</name></type> <name pos:start="1:41" pos:end="1:43">irq</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:57">is_mouse</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="31:47">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">iomemtype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">pl050_state</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:57"><expr pos:start="11:5" pos:end="11:56"><name pos:start="11:5" pos:end="11:5">s</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:20">pl050_state</name> <operator pos:start="11:22" pos:end="11:22">*</operator><operator pos:start="11:23" pos:end="11:23">)</operator><call pos:start="11:24" pos:end="11:56"><name pos:start="11:24" pos:end="11:35">qemu_mallocz</name><argument_list pos:start="11:36" pos:end="11:56">(<argument pos:start="11:37" pos:end="11:55"><expr pos:start="11:37" pos:end="11:55"><sizeof pos:start="11:37" pos:end="11:55">sizeof<argument_list pos:start="11:43" pos:end="11:55">(<argument pos:start="11:44" pos:end="11:54"><expr pos:start="11:44" pos:end="11:54"><name pos:start="11:44" pos:end="11:54">pl050_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:57"><expr pos:start="13:5" pos:end="15:56"><name pos:start="13:5" pos:end="13:13">iomemtype</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="15:56"><name pos:start="13:17" pos:end="13:38">cpu_register_io_memory</name><argument_list pos:start="13:39" pos:end="15:56">(<argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr></argument>, <argument pos:start="13:43" pos:end="13:54"><expr pos:start="13:43" pos:end="13:54"><name pos:start="13:43" pos:end="13:54">pl050_readfn</name></expr></argument>,

                                       <argument pos:start="15:40" pos:end="15:52"><expr pos:start="15:40" pos:end="15:52"><name pos:start="15:40" pos:end="15:52">pl050_writefn</name></expr></argument>, <argument pos:start="15:55" pos:end="15:55"><expr pos:start="15:55" pos:end="15:55"><name pos:start="15:55" pos:end="15:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><call pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:32">cpu_register_physical_memory</name><argument_list pos:start="17:33" pos:end="17:61">(<argument pos:start="17:34" pos:end="17:37"><expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">base</name></expr></argument>, <argument pos:start="17:40" pos:end="17:49"><expr pos:start="17:40" pos:end="17:49"><literal type="number" pos:start="17:40" pos:end="17:49">0x00000fff</literal></expr></argument>, <argument pos:start="17:52" pos:end="17:60"><expr pos:start="17:52" pos:end="17:60"><name pos:start="17:52" pos:end="17:60">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:11">base</name></name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:18">base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:10">irq</name></name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:16">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:15">is_mouse</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:26">is_mouse</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:47"><if pos:start="25:5" pos:end="27:49">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">is_mouse</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:49"><block_content pos:start="27:9" pos:end="27:49">

        <expr_stmt pos:start="27:9" pos:end="27:49"><expr pos:start="27:9" pos:end="27:48"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:14">dev</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:48"><name pos:start="27:18" pos:end="27:31">ps2_mouse_init</name><argument_list pos:start="27:32" pos:end="27:48">(<argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:44">pl050_update</name></expr></argument>, <argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><name pos:start="27:47" pos:end="27:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:47">else<block type="pseudo" pos:start="31:9" pos:end="31:47"><block_content pos:start="31:9" pos:end="31:47">

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:14">dev</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:46"><name pos:start="31:18" pos:end="31:29">ps2_kbd_init</name><argument_list pos:start="31:30" pos:end="31:46">(<argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:42">pl050_update</name></expr></argument>, <argument pos:start="31:45" pos:end="31:45"><expr pos:start="31:45" pos:end="31:45"><name pos:start="31:45" pos:end="31:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:28">/* ??? Save/restore.  */</comment>

</block_content>}</block></function>
</unit>
