<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14620.c" pos:tabs="8"><function pos:start="1:1" pos:end="423:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">g2m_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:66">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:48">got_picture_ptr</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:58">AVPacket</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:65">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="423:1">{<block_content pos:start="7:5" pos:end="421:15">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">G2MContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">c</name> <init pos:start="11:19" pos:end="11:36">= <expr pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:25">avctx</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pic</name> <init pos:start="13:18" pos:end="13:23">= <expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:18">GetByteContext</name></type> <name pos:start="15:20" pos:end="15:21">bc</name></decl>, <decl pos:start="15:24" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:18"/><name pos:start="15:24" pos:end="15:26">tbc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">magic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">got_header</name> <init pos:start="19:20" pos:end="19:22">= <expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:48"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:23">chunk_size</name></decl>, <decl pos:start="21:26" pos:end="21:31"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:26" pos:end="21:31">r_mask</name></decl>, <decl pos:start="21:34" pos:end="21:39"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:34" pos:end="21:39">g_mask</name></decl>, <decl pos:start="21:42" pos:end="21:47"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:42" pos:end="21:47">b_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">chunk_type</name></decl>, <decl pos:start="23:21" pos:end="23:31"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:21" pos:end="23:31">chunk_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:22">(<expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:16">buf_size</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <literal type="number" pos:start="31:20" pos:end="31:21">12</literal></expr>)</condition> <block pos:start="31:24" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:35">

        <expr_stmt pos:start="33:9" pos:end="37:25"><expr pos:start="33:9" pos:end="37:24"><call pos:start="33:9" pos:end="37:24"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="37:24">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="35:16" pos:end="35:70"><expr pos:start="35:16" pos:end="35:70"><literal type="string" pos:start="35:16" pos:end="35:70">"Frame should have at least 12 bytes, got %d instead\n"</literal></expr></argument>,

               <argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:23">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><call pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:20">bytestream2_init</name><argument_list pos:start="45:21" pos:end="45:40">(<argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:24">bc</name></expr></argument>, <argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">buf</name></expr></argument>, <argument pos:start="45:32" pos:end="45:39"><expr pos:start="45:32" pos:end="45:39"><name pos:start="45:32" pos:end="45:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:9">magic</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:32">bytestream2_get_be32</name><argument_list pos:start="49:33" pos:end="49:37">(<argument pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><operator pos:start="49:34" pos:end="49:34">&amp;</operator><name pos:start="49:35" pos:end="49:36">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="53:47">(<expr pos:start="51:9" pos:end="53:46"><operator pos:start="51:9" pos:end="51:9">(</operator><name pos:start="51:10" pos:end="51:14">magic</name> <operator pos:start="51:16" pos:end="51:16">&amp;</operator> <operator pos:start="51:18" pos:end="51:18">~</operator><literal type="number" pos:start="51:19" pos:end="51:21">0xF</literal><operator pos:start="51:22" pos:end="51:22">)</operator> <operator pos:start="51:24" pos:end="51:25">!=</operator> <call pos:start="51:27" pos:end="51:53"><name pos:start="51:27" pos:end="51:33">MKBETAG</name><argument_list pos:start="51:34" pos:end="51:53">(<argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><literal type="char" pos:start="51:35" pos:end="51:37">'G'</literal></expr></argument>, <argument pos:start="51:40" pos:end="51:42"><expr pos:start="51:40" pos:end="51:42"><literal type="char" pos:start="51:40" pos:end="51:42">'2'</literal></expr></argument>, <argument pos:start="51:45" pos:end="51:47"><expr pos:start="51:45" pos:end="51:47"><literal type="char" pos:start="51:45" pos:end="51:47">'M'</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:52"><expr pos:start="51:50" pos:end="51:52"><literal type="char" pos:start="51:50" pos:end="51:52">'0'</literal></expr></argument>)</argument_list></call> <operator pos:start="51:55" pos:end="51:56">||</operator>

        <operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:14">magic</name> <operator pos:start="53:16" pos:end="53:16">&amp;</operator> <literal type="number" pos:start="53:18" pos:end="53:20">0xF</literal><operator pos:start="53:21" pos:end="53:21">)</operator> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">2</literal> <operator pos:start="53:27" pos:end="53:28">||</operator> <operator pos:start="53:30" pos:end="53:30">(</operator><name pos:start="53:31" pos:end="53:35">magic</name> <operator pos:start="53:37" pos:end="53:37">&amp;</operator> <literal type="number" pos:start="53:39" pos:end="53:41">0xF</literal><operator pos:start="53:42" pos:end="53:42">)</operator> <operator pos:start="53:44" pos:end="53:44">&gt;</operator> <literal type="number" pos:start="53:46" pos:end="53:46">5</literal></expr>)</condition> <block pos:start="53:49" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:35">

        <expr_stmt pos:start="55:9" pos:end="55:65"><expr pos:start="55:9" pos:end="55:64"><call pos:start="55:9" pos:end="55:64"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:64">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:56"><expr pos:start="55:37" pos:end="55:56"><literal type="string" pos:start="55:37" pos:end="55:56">"Wrong magic %08X\n"</literal></expr></argument>, <argument pos:start="55:59" pos:end="55:63"><expr pos:start="55:59" pos:end="55:63"><name pos:start="55:59" pos:end="55:63">magic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:53"><expr pos:start="63:5" pos:end="63:52"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:5">c</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:13">swapuv</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:21">magic</name> <operator pos:start="63:23" pos:end="63:24">==</operator> <call pos:start="63:26" pos:end="63:52"><name pos:start="63:26" pos:end="63:32">MKBETAG</name><argument_list pos:start="63:33" pos:end="63:52">(<argument pos:start="63:34" pos:end="63:36"><expr pos:start="63:34" pos:end="63:36"><literal type="char" pos:start="63:34" pos:end="63:36">'G'</literal></expr></argument>, <argument pos:start="63:39" pos:end="63:41"><expr pos:start="63:39" pos:end="63:41"><literal type="char" pos:start="63:39" pos:end="63:41">'2'</literal></expr></argument>, <argument pos:start="63:44" pos:end="63:46"><expr pos:start="63:44" pos:end="63:46"><literal type="char" pos:start="63:44" pos:end="63:46">'M'</literal></expr></argument>, <argument pos:start="63:49" pos:end="63:51"><expr pos:start="63:49" pos:end="63:51"><literal type="char" pos:start="63:49" pos:end="63:51">'2'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="67:5" pos:end="367:5">while <condition pos:start="67:11" pos:end="67:47">(<expr pos:start="67:12" pos:end="67:46"><call pos:start="67:12" pos:end="67:42"><name pos:start="67:12" pos:end="67:37">bytestream2_get_bytes_left</name><argument_list pos:start="67:38" pos:end="67:42">(<argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><operator pos:start="67:39" pos:end="67:39">&amp;</operator><name pos:start="67:40" pos:end="67:41">bc</name></expr></argument>)</argument_list></call> <operator pos:start="67:44" pos:end="67:44">&gt;</operator> <literal type="number" pos:start="67:46" pos:end="67:46">5</literal></expr>)</condition> <block pos:start="67:49" pos:end="367:5">{<block_content pos:start="69:9" pos:end="365:80">

        <expr_stmt pos:start="69:9" pos:end="69:52"><expr pos:start="69:9" pos:end="69:51"><name pos:start="69:9" pos:end="69:18">chunk_size</name>  <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:47"><name pos:start="69:23" pos:end="69:42">bytestream2_get_le32</name><argument_list pos:start="69:43" pos:end="69:47">(<argument pos:start="69:44" pos:end="69:46"><expr pos:start="69:44" pos:end="69:46"><operator pos:start="69:44" pos:end="69:44">&amp;</operator><name pos:start="69:45" pos:end="69:46">bc</name></expr></argument>)</argument_list></call> <operator pos:start="69:49" pos:end="69:49">-</operator> <literal type="number" pos:start="69:51" pos:end="69:51">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:18">chunk_type</name>  <operator pos:start="71:21" pos:end="71:21">=</operator> <call pos:start="71:23" pos:end="71:47"><name pos:start="71:23" pos:end="71:42">bytestream2_get_byte</name><argument_list pos:start="71:43" pos:end="71:47">(<argument pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><operator pos:start="71:44" pos:end="71:44">&amp;</operator><name pos:start="71:45" pos:end="71:46">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:19">chunk_start</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:43"><name pos:start="73:23" pos:end="73:38">bytestream2_tell</name><argument_list pos:start="73:39" pos:end="73:43">(<argument pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><operator pos:start="73:40" pos:end="73:40">&amp;</operator><name pos:start="73:41" pos:end="73:42">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="83:9"><if pos:start="75:9" pos:end="83:9">if <condition pos:start="75:12" pos:end="75:57">(<expr pos:start="75:13" pos:end="75:56"><name pos:start="75:13" pos:end="75:22">chunk_size</name> <operator pos:start="75:24" pos:end="75:24">&gt;</operator> <call pos:start="75:26" pos:end="75:56"><name pos:start="75:26" pos:end="75:51">bytestream2_get_bytes_left</name><argument_list pos:start="75:52" pos:end="75:56">(<argument pos:start="75:53" pos:end="75:55"><expr pos:start="75:53" pos:end="75:55"><operator pos:start="75:53" pos:end="75:53">&amp;</operator><name pos:start="75:54" pos:end="75:55">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:59" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:18">

            <expr_stmt pos:start="77:13" pos:end="79:43"><expr pos:start="77:13" pos:end="79:42"><call pos:start="77:13" pos:end="79:42"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="79:42">(<argument pos:start="77:20" pos:end="77:24"><expr pos:start="77:20" pos:end="77:24"><name pos:start="77:20" pos:end="77:24">avctx</name></expr></argument>, <argument pos:start="77:27" pos:end="77:38"><expr pos:start="77:27" pos:end="77:38"><name pos:start="77:27" pos:end="77:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:41" pos:end="77:82"><expr pos:start="77:41" pos:end="77:82"><literal type="string" pos:start="77:41" pos:end="77:62">"Invalid chunk size %"</literal><name pos:start="77:63" pos:end="77:68">PRIu32</name><literal type="string" pos:start="77:69" pos:end="77:82">" type %02X\n"</literal></expr></argument>,

                   <argument pos:start="79:20" pos:end="79:29"><expr pos:start="79:20" pos:end="79:29"><name pos:start="79:20" pos:end="79:29">chunk_size</name></expr></argument>, <argument pos:start="79:32" pos:end="79:41"><expr pos:start="79:32" pos:end="79:41"><name pos:start="79:32" pos:end="79:41">chunk_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="85:9" pos:end="359:9">switch <condition pos:start="85:16" pos:end="85:27">(<expr pos:start="85:17" pos:end="85:26"><name pos:start="85:17" pos:end="85:26">chunk_type</name></expr>)</condition> <block pos:start="85:29" pos:end="359:9">{<block_content pos:start="87:9" pos:end="357:31">

        <case pos:start="87:9" pos:end="87:26">case <expr pos:start="87:14" pos:end="87:25"><name pos:start="87:14" pos:end="87:25">DISPLAY_INFO</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="91:30"><expr pos:start="89:13" pos:end="91:29"><name pos:start="89:13" pos:end="89:22">got_header</name> <operator pos:start="89:24" pos:end="89:24">=</operator>

            <name pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:13">c</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:25">got_header</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <literal type="number" pos:start="91:29" pos:end="91:29">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="101:13"><if pos:start="93:13" pos:end="101:13">if <condition pos:start="93:16" pos:end="93:32">(<expr pos:start="93:17" pos:end="93:31"><name pos:start="93:17" pos:end="93:26">chunk_size</name> <operator pos:start="93:28" pos:end="93:28">&lt;</operator> <literal type="number" pos:start="93:30" pos:end="93:31">21</literal></expr>)</condition> <block pos:start="93:34" pos:end="101:13">{<block_content pos:start="95:17" pos:end="99:22">

                <expr_stmt pos:start="95:17" pos:end="97:35"><expr pos:start="95:17" pos:end="97:34"><call pos:start="95:17" pos:end="97:34"><name pos:start="95:17" pos:end="95:22">av_log</name><argument_list pos:start="95:23" pos:end="97:34">(<argument pos:start="95:24" pos:end="95:28"><expr pos:start="95:24" pos:end="95:28"><name pos:start="95:24" pos:end="95:28">avctx</name></expr></argument>, <argument pos:start="95:31" pos:end="95:42"><expr pos:start="95:31" pos:end="95:42"><name pos:start="95:31" pos:end="95:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:45" pos:end="95:83"><expr pos:start="95:45" pos:end="95:83"><literal type="string" pos:start="95:45" pos:end="95:73">"Invalid display info size %"</literal><name pos:start="95:74" pos:end="95:79">PRIu32</name><literal type="string" pos:start="95:80" pos:end="95:83">"\n"</literal></expr></argument>,

                       <argument pos:start="97:24" pos:end="97:33"><expr pos:start="97:24" pos:end="97:33"><name pos:start="97:24" pos:end="97:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="99:17" pos:end="99:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:50"><expr pos:start="103:13" pos:end="103:49"><name pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:13">c</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:20">width</name></name>  <operator pos:start="103:23" pos:end="103:23">=</operator> <call pos:start="103:25" pos:end="103:49"><name pos:start="103:25" pos:end="103:44">bytestream2_get_be32</name><argument_list pos:start="103:45" pos:end="103:49">(<argument pos:start="103:46" pos:end="103:48"><expr pos:start="103:46" pos:end="103:48"><operator pos:start="103:46" pos:end="103:46">&amp;</operator><name pos:start="103:47" pos:end="103:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:50"><expr pos:start="105:13" pos:end="105:49"><name pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:13">c</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:21">height</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <call pos:start="105:25" pos:end="105:49"><name pos:start="105:25" pos:end="105:44">bytestream2_get_be32</name><argument_list pos:start="105:45" pos:end="105:49">(<argument pos:start="105:46" pos:end="105:48"><expr pos:start="105:46" pos:end="105:48"><operator pos:start="105:46" pos:end="105:46">&amp;</operator><name pos:start="105:47" pos:end="105:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="121:13"><if pos:start="107:13" pos:end="121:13">if <condition pos:start="107:16" pos:end="109:61">(<expr pos:start="107:17" pos:end="109:60"><name pos:start="107:17" pos:end="107:24"><name pos:start="107:17" pos:end="107:17">c</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:24">width</name></name>  <operator pos:start="107:27" pos:end="107:27">&lt;</operator> <literal type="number" pos:start="107:29" pos:end="107:30">16</literal> <operator pos:start="107:32" pos:end="107:33">||</operator> <name pos:start="107:35" pos:end="107:42"><name pos:start="107:35" pos:end="107:35">c</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:42">width</name></name>  <operator pos:start="107:45" pos:end="107:45">&gt;</operator> <name pos:start="107:47" pos:end="107:59"><name pos:start="107:47" pos:end="107:47">c</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:59">orig_width</name></name> <operator pos:start="107:61" pos:end="107:62">||</operator>

                <name pos:start="109:17" pos:end="109:25"><name pos:start="109:17" pos:end="109:17">c</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:25">height</name></name> <operator pos:start="109:27" pos:end="109:27">&lt;</operator> <literal type="number" pos:start="109:29" pos:end="109:30">16</literal> <operator pos:start="109:32" pos:end="109:33">||</operator> <name pos:start="109:35" pos:end="109:43"><name pos:start="109:35" pos:end="109:35">c</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:43">height</name></name> <operator pos:start="109:45" pos:end="109:45">&gt;</operator> <name pos:start="109:47" pos:end="109:60"><name pos:start="109:47" pos:end="109:47">c</name><operator pos:start="109:48" pos:end="109:49">-&gt;</operator><name pos:start="109:50" pos:end="109:60">orig_height</name></name></expr>)</condition> <block pos:start="109:63" pos:end="121:13">{<block_content pos:start="111:17" pos:end="119:33">

                <expr_stmt pos:start="111:17" pos:end="115:44"><expr pos:start="111:17" pos:end="115:43"><call pos:start="111:17" pos:end="115:43"><name pos:start="111:17" pos:end="111:22">av_log</name><argument_list pos:start="111:23" pos:end="115:43">(<argument pos:start="111:24" pos:end="111:28"><expr pos:start="111:24" pos:end="111:28"><name pos:start="111:24" pos:end="111:28">avctx</name></expr></argument>, <argument pos:start="111:31" pos:end="111:42"><expr pos:start="111:31" pos:end="111:42"><name pos:start="111:31" pos:end="111:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="113:24" pos:end="113:57"><expr pos:start="113:24" pos:end="113:57"><literal type="string" pos:start="113:24" pos:end="113:57">"Invalid frame dimensions %dx%d\n"</literal></expr></argument>,

                       <argument pos:start="115:24" pos:end="115:31"><expr pos:start="115:24" pos:end="115:31"><name pos:start="115:24" pos:end="115:31"><name pos:start="115:24" pos:end="115:24">c</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:31">width</name></name></expr></argument>, <argument pos:start="115:34" pos:end="115:42"><expr pos:start="115:34" pos:end="115:42"><name pos:start="115:34" pos:end="115:42"><name pos:start="115:34" pos:end="115:34">c</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:42">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:42"><expr pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:19">ret</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="119:17" pos:end="119:33">goto <name pos:start="119:22" pos:end="119:32">header_fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="123:13" pos:end="131:13"><if pos:start="123:13" pos:end="131:13">if <condition pos:start="123:16" pos:end="123:71">(<expr pos:start="123:17" pos:end="123:70"><name pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:17">c</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:24">width</name></name> <operator pos:start="123:26" pos:end="123:27">!=</operator> <name pos:start="123:29" pos:end="123:40"><name pos:start="123:29" pos:end="123:33">avctx</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:40">width</name></name> <operator pos:start="123:42" pos:end="123:43">||</operator> <name pos:start="123:45" pos:end="123:53"><name pos:start="123:45" pos:end="123:45">c</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:53">height</name></name> <operator pos:start="123:55" pos:end="123:56">!=</operator> <name pos:start="123:58" pos:end="123:70"><name pos:start="123:58" pos:end="123:62">avctx</name><operator pos:start="123:63" pos:end="123:64">-&gt;</operator><name pos:start="123:65" pos:end="123:70">height</name></name></expr>)</condition> <block pos:start="123:73" pos:end="131:13">{<block_content pos:start="125:17" pos:end="129:37">

                <expr_stmt pos:start="125:17" pos:end="125:68"><expr pos:start="125:17" pos:end="125:67"><name pos:start="125:17" pos:end="125:19">ret</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <call pos:start="125:23" pos:end="125:67"><name pos:start="125:23" pos:end="125:39">ff_set_dimensions</name><argument_list pos:start="125:40" pos:end="125:67">(<argument pos:start="125:41" pos:end="125:45"><expr pos:start="125:41" pos:end="125:45"><name pos:start="125:41" pos:end="125:45">avctx</name></expr></argument>, <argument pos:start="125:48" pos:end="125:55"><expr pos:start="125:48" pos:end="125:55"><name pos:start="125:48" pos:end="125:55"><name pos:start="125:48" pos:end="125:48">c</name><operator pos:start="125:49" pos:end="125:50">-&gt;</operator><name pos:start="125:51" pos:end="125:55">width</name></name></expr></argument>, <argument pos:start="125:58" pos:end="125:66"><expr pos:start="125:58" pos:end="125:66"><name pos:start="125:58" pos:end="125:66"><name pos:start="125:58" pos:end="125:58">c</name><operator pos:start="125:59" pos:end="125:60">-&gt;</operator><name pos:start="125:61" pos:end="125:66">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="129:37"><if pos:start="127:17" pos:end="129:37">if <condition pos:start="127:20" pos:end="127:28">(<expr pos:start="127:21" pos:end="127:27"><name pos:start="127:21" pos:end="127:23">ret</name> <operator pos:start="127:25" pos:end="127:25">&lt;</operator> <literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:37"><block_content pos:start="129:21" pos:end="129:37">

                    <goto pos:start="129:21" pos:end="129:37">goto <name pos:start="129:26" pos:end="129:36">header_fail</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:55"><expr pos:start="133:13" pos:end="133:54"><name pos:start="133:13" pos:end="133:26"><name pos:start="133:13" pos:end="133:13">c</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:26">compression</name></name> <operator pos:start="133:28" pos:end="133:28">=</operator> <call pos:start="133:30" pos:end="133:54"><name pos:start="133:30" pos:end="133:49">bytestream2_get_be32</name><argument_list pos:start="133:50" pos:end="133:54">(<argument pos:start="133:51" pos:end="133:53"><expr pos:start="133:51" pos:end="133:53"><operator pos:start="133:51" pos:end="133:51">&amp;</operator><name pos:start="133:52" pos:end="133:53">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="147:13"><if pos:start="135:13" pos:end="147:13">if <condition pos:start="135:16" pos:end="135:59">(<expr pos:start="135:17" pos:end="135:58"><name pos:start="135:17" pos:end="135:30"><name pos:start="135:17" pos:end="135:17">c</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:30">compression</name></name> <operator pos:start="135:32" pos:end="135:33">!=</operator> <literal type="number" pos:start="135:35" pos:end="135:35">2</literal> <operator pos:start="135:37" pos:end="135:38">&amp;&amp;</operator> <name pos:start="135:40" pos:end="135:53"><name pos:start="135:40" pos:end="135:40">c</name><operator pos:start="135:41" pos:end="135:42">-&gt;</operator><name pos:start="135:43" pos:end="135:53">compression</name></name> <operator pos:start="135:55" pos:end="135:56">!=</operator> <literal type="number" pos:start="135:58" pos:end="135:58">3</literal></expr>)</condition> <block pos:start="135:61" pos:end="147:13">{<block_content pos:start="137:17" pos:end="145:33">

                <expr_stmt pos:start="137:17" pos:end="141:39"><expr pos:start="137:17" pos:end="141:38"><call pos:start="137:17" pos:end="141:38"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="141:38">(<argument pos:start="137:24" pos:end="137:28"><expr pos:start="137:24" pos:end="137:28"><name pos:start="137:24" pos:end="137:28">avctx</name></expr></argument>, <argument pos:start="137:31" pos:end="137:42"><expr pos:start="137:31" pos:end="137:42"><name pos:start="137:31" pos:end="137:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="139:24" pos:end="139:56"><expr pos:start="139:24" pos:end="139:56"><literal type="string" pos:start="139:24" pos:end="139:56">"Unknown compression method %d\n"</literal></expr></argument>,

                       <argument pos:start="141:24" pos:end="141:37"><expr pos:start="141:24" pos:end="141:37"><name pos:start="141:24" pos:end="141:37"><name pos:start="141:24" pos:end="141:24">c</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:37">compression</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:43"><expr pos:start="143:17" pos:end="143:42"><name pos:start="143:17" pos:end="143:19">ret</name> <operator pos:start="143:21" pos:end="143:21">=</operator> <name pos:start="143:23" pos:end="143:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <goto pos:start="145:17" pos:end="145:33">goto <name pos:start="145:22" pos:end="145:32">header_fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:55"><expr pos:start="149:13" pos:end="149:54"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:13">c</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:25">tile_width</name></name>  <operator pos:start="149:28" pos:end="149:28">=</operator> <call pos:start="149:30" pos:end="149:54"><name pos:start="149:30" pos:end="149:49">bytestream2_get_be32</name><argument_list pos:start="149:50" pos:end="149:54">(<argument pos:start="149:51" pos:end="149:53"><expr pos:start="149:51" pos:end="149:53"><operator pos:start="149:51" pos:end="149:51">&amp;</operator><name pos:start="149:52" pos:end="149:53">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:55"><expr pos:start="151:13" pos:end="151:54"><name pos:start="151:13" pos:end="151:26"><name pos:start="151:13" pos:end="151:13">c</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:26">tile_height</name></name> <operator pos:start="151:28" pos:end="151:28">=</operator> <call pos:start="151:30" pos:end="151:54"><name pos:start="151:30" pos:end="151:49">bytestream2_get_be32</name><argument_list pos:start="151:50" pos:end="151:54">(<argument pos:start="151:51" pos:end="151:53"><expr pos:start="151:51" pos:end="151:53"><operator pos:start="151:51" pos:end="151:51">&amp;</operator><name pos:start="151:52" pos:end="151:53">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="171:13"><if pos:start="153:13" pos:end="171:13">if <condition pos:start="153:16" pos:end="159:13">(<expr pos:start="153:17" pos:end="157:63"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:17">c</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:29">tile_width</name></name> <operator pos:start="153:31" pos:end="153:32">&lt;=</operator> <literal type="number" pos:start="153:34" pos:end="153:34">0</literal> <operator pos:start="153:36" pos:end="153:37">||</operator> <name pos:start="153:39" pos:end="153:52"><name pos:start="153:39" pos:end="153:39">c</name><operator pos:start="153:40" pos:end="153:41">-&gt;</operator><name pos:start="153:42" pos:end="153:52">tile_height</name></name> <operator pos:start="153:54" pos:end="153:55">&lt;=</operator> <literal type="number" pos:start="153:57" pos:end="153:57">0</literal> <operator pos:start="153:59" pos:end="153:60">||</operator>

                <operator pos:start="155:17" pos:end="155:17">(</operator><operator pos:start="155:18" pos:end="155:18">(</operator><name pos:start="155:19" pos:end="155:31"><name pos:start="155:19" pos:end="155:19">c</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:31">tile_width</name></name> <operator pos:start="155:33" pos:end="155:33">|</operator> <name pos:start="155:35" pos:end="155:48"><name pos:start="155:35" pos:end="155:35">c</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:48">tile_height</name></name><operator pos:start="155:49" pos:end="155:49">)</operator> <operator pos:start="155:51" pos:end="155:51">&amp;</operator> <literal type="number" pos:start="155:53" pos:end="155:55">0xF</literal><operator pos:start="155:56" pos:end="155:56">)</operator> <operator pos:start="155:58" pos:end="155:59">||</operator>

                <name pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:17">c</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:29">tile_width</name></name> <operator pos:start="157:31" pos:end="157:31">*</operator> <literal type="number" pos:start="157:33" pos:end="157:35">4LL</literal> <operator pos:start="157:37" pos:end="157:37">*</operator> <name pos:start="157:39" pos:end="157:52"><name pos:start="157:39" pos:end="157:39">c</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:52">tile_height</name></name> <operator pos:start="157:54" pos:end="157:55">&gt;=</operator> <name pos:start="157:57" pos:end="157:63">INT_MAX</name></expr>

            )</condition> <block pos:start="159:15" pos:end="171:13">{<block_content pos:start="161:17" pos:end="169:33">

                <expr_stmt pos:start="161:17" pos:end="165:54"><expr pos:start="161:17" pos:end="165:53"><call pos:start="161:17" pos:end="165:53"><name pos:start="161:17" pos:end="161:22">av_log</name><argument_list pos:start="161:23" pos:end="165:53">(<argument pos:start="161:24" pos:end="161:28"><expr pos:start="161:24" pos:end="161:28"><name pos:start="161:24" pos:end="161:28">avctx</name></expr></argument>, <argument pos:start="161:31" pos:end="161:42"><expr pos:start="161:31" pos:end="161:42"><name pos:start="161:31" pos:end="161:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="163:24" pos:end="163:56"><expr pos:start="163:24" pos:end="163:56"><literal type="string" pos:start="163:24" pos:end="163:56">"Invalid tile dimensions %dx%d\n"</literal></expr></argument>,

                       <argument pos:start="165:24" pos:end="165:36"><expr pos:start="165:24" pos:end="165:36"><name pos:start="165:24" pos:end="165:36"><name pos:start="165:24" pos:end="165:24">c</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:36">tile_width</name></name></expr></argument>, <argument pos:start="165:39" pos:end="165:52"><expr pos:start="165:39" pos:end="165:52"><name pos:start="165:39" pos:end="165:52"><name pos:start="165:39" pos:end="165:39">c</name><operator pos:start="165:40" pos:end="165:41">-&gt;</operator><name pos:start="165:42" pos:end="165:52">tile_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:42"><expr pos:start="167:17" pos:end="167:41"><name pos:start="167:17" pos:end="167:19">ret</name> <operator pos:start="167:21" pos:end="167:21">=</operator> <name pos:start="167:23" pos:end="167:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="169:17" pos:end="169:33">goto <name pos:start="169:22" pos:end="169:32">header_fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:74"><expr pos:start="173:13" pos:end="173:73"><name pos:start="173:13" pos:end="173:22"><name pos:start="173:13" pos:end="173:13">c</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:22">tiles_x</name></name> <operator pos:start="173:24" pos:end="173:24">=</operator> <operator pos:start="173:26" pos:end="173:26">(</operator><name pos:start="173:27" pos:end="173:34"><name pos:start="173:27" pos:end="173:27">c</name><operator pos:start="173:28" pos:end="173:29">-&gt;</operator><name pos:start="173:30" pos:end="173:34">width</name></name>  <operator pos:start="173:37" pos:end="173:37">+</operator> <name pos:start="173:39" pos:end="173:51"><name pos:start="173:39" pos:end="173:39">c</name><operator pos:start="173:40" pos:end="173:41">-&gt;</operator><name pos:start="173:42" pos:end="173:51">tile_width</name></name>  <operator pos:start="173:54" pos:end="173:54">-</operator> <literal type="number" pos:start="173:56" pos:end="173:56">1</literal><operator pos:start="173:57" pos:end="173:57">)</operator> <operator pos:start="173:59" pos:end="173:59">/</operator> <name pos:start="173:61" pos:end="173:73"><name pos:start="173:61" pos:end="173:61">c</name><operator pos:start="173:62" pos:end="173:63">-&gt;</operator><name pos:start="173:64" pos:end="173:73">tile_width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:75"><expr pos:start="175:13" pos:end="175:74"><name pos:start="175:13" pos:end="175:22"><name pos:start="175:13" pos:end="175:13">c</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:22">tiles_y</name></name> <operator pos:start="175:24" pos:end="175:24">=</operator> <operator pos:start="175:26" pos:end="175:26">(</operator><name pos:start="175:27" pos:end="175:35"><name pos:start="175:27" pos:end="175:27">c</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:35">height</name></name> <operator pos:start="175:37" pos:end="175:37">+</operator> <name pos:start="175:39" pos:end="175:52"><name pos:start="175:39" pos:end="175:39">c</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:52">tile_height</name></name> <operator pos:start="175:54" pos:end="175:54">-</operator> <literal type="number" pos:start="175:56" pos:end="175:56">1</literal><operator pos:start="175:57" pos:end="175:57">)</operator> <operator pos:start="175:59" pos:end="175:59">/</operator> <name pos:start="175:61" pos:end="175:74"><name pos:start="175:61" pos:end="175:61">c</name><operator pos:start="175:62" pos:end="175:63">-&gt;</operator><name pos:start="175:64" pos:end="175:74">tile_height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:51"><expr pos:start="177:13" pos:end="177:50"><name pos:start="177:13" pos:end="177:18"><name pos:start="177:13" pos:end="177:13">c</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:18">bpp</name></name>     <operator pos:start="177:24" pos:end="177:24">=</operator> <call pos:start="177:26" pos:end="177:50"><name pos:start="177:26" pos:end="177:45">bytestream2_get_byte</name><argument_list pos:start="177:46" pos:end="177:50">(<argument pos:start="177:47" pos:end="177:49"><expr pos:start="177:47" pos:end="177:49"><operator pos:start="177:47" pos:end="177:47">&amp;</operator><name pos:start="177:48" pos:end="177:49">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="223:13"><if pos:start="179:13" pos:end="215:13">if <condition pos:start="179:16" pos:end="179:29">(<expr pos:start="179:17" pos:end="179:28"><name pos:start="179:17" pos:end="179:22"><name pos:start="179:17" pos:end="179:17">c</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:22">bpp</name></name> <operator pos:start="179:24" pos:end="179:25">==</operator> <literal type="number" pos:start="179:27" pos:end="179:28">32</literal></expr>)</condition> <block pos:start="179:31" pos:end="215:13">{<block_content pos:start="181:17" pos:end="213:17">

                <if_stmt pos:start="181:17" pos:end="193:17"><if pos:start="181:17" pos:end="193:17">if <condition pos:start="181:20" pos:end="183:43">(<expr pos:start="181:21" pos:end="183:42"><call pos:start="181:21" pos:end="181:51"><name pos:start="181:21" pos:end="181:46">bytestream2_get_bytes_left</name><argument_list pos:start="181:47" pos:end="181:51">(<argument pos:start="181:48" pos:end="181:50"><expr pos:start="181:48" pos:end="181:50"><operator pos:start="181:48" pos:end="181:48">&amp;</operator><name pos:start="181:49" pos:end="181:50">bc</name></expr></argument>)</argument_list></call> <operator pos:start="181:53" pos:end="181:53">&lt;</operator> <literal type="number" pos:start="181:55" pos:end="181:56">16</literal> <operator pos:start="181:58" pos:end="181:59">||</operator>

                    <operator pos:start="183:21" pos:end="183:21">(</operator><name pos:start="183:22" pos:end="183:31">chunk_size</name> <operator pos:start="183:33" pos:end="183:33">-</operator> <literal type="number" pos:start="183:35" pos:end="183:36">21</literal><operator pos:start="183:37" pos:end="183:37">)</operator> <operator pos:start="183:39" pos:end="183:39">&lt;</operator> <literal type="number" pos:start="183:41" pos:end="183:42">16</literal></expr>)</condition> <block pos:start="183:45" pos:end="193:17">{<block_content pos:start="185:21" pos:end="191:37">

                    <expr_stmt pos:start="185:21" pos:end="187:64"><expr pos:start="185:21" pos:end="187:63"><call pos:start="185:21" pos:end="187:63"><name pos:start="185:21" pos:end="185:26">av_log</name><argument_list pos:start="185:27" pos:end="187:63">(<argument pos:start="185:28" pos:end="185:32"><expr pos:start="185:28" pos:end="185:32"><name pos:start="185:28" pos:end="185:32">avctx</name></expr></argument>, <argument pos:start="185:35" pos:end="185:46"><expr pos:start="185:35" pos:end="185:46"><name pos:start="185:35" pos:end="185:46">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="187:28" pos:end="187:62"><expr pos:start="187:28" pos:end="187:62"><literal type="string" pos:start="187:28" pos:end="187:62">"Display info: missing bitmasks!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:46"><expr pos:start="189:21" pos:end="189:45"><name pos:start="189:21" pos:end="189:23">ret</name> <operator pos:start="189:25" pos:end="189:25">=</operator> <name pos:start="189:27" pos:end="189:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                    <goto pos:start="191:21" pos:end="191:37">goto <name pos:start="191:26" pos:end="191:36">header_fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:51"><expr pos:start="195:17" pos:end="195:50"><name pos:start="195:17" pos:end="195:22">r_mask</name> <operator pos:start="195:24" pos:end="195:24">=</operator> <call pos:start="195:26" pos:end="195:50"><name pos:start="195:26" pos:end="195:45">bytestream2_get_be32</name><argument_list pos:start="195:46" pos:end="195:50">(<argument pos:start="195:47" pos:end="195:49"><expr pos:start="195:47" pos:end="195:49"><operator pos:start="195:47" pos:end="195:47">&amp;</operator><name pos:start="195:48" pos:end="195:49">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:51"><expr pos:start="197:17" pos:end="197:50"><name pos:start="197:17" pos:end="197:22">g_mask</name> <operator pos:start="197:24" pos:end="197:24">=</operator> <call pos:start="197:26" pos:end="197:50"><name pos:start="197:26" pos:end="197:45">bytestream2_get_be32</name><argument_list pos:start="197:46" pos:end="197:50">(<argument pos:start="197:47" pos:end="197:49"><expr pos:start="197:47" pos:end="197:49"><operator pos:start="197:47" pos:end="197:47">&amp;</operator><name pos:start="197:48" pos:end="197:49">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:51"><expr pos:start="199:17" pos:end="199:50"><name pos:start="199:17" pos:end="199:22">b_mask</name> <operator pos:start="199:24" pos:end="199:24">=</operator> <call pos:start="199:26" pos:end="199:50"><name pos:start="199:26" pos:end="199:45">bytestream2_get_be32</name><argument_list pos:start="199:46" pos:end="199:50">(<argument pos:start="199:47" pos:end="199:49"><expr pos:start="199:47" pos:end="199:49"><operator pos:start="199:47" pos:end="199:47">&amp;</operator><name pos:start="199:48" pos:end="199:49">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="201:17" pos:end="213:17"><if pos:start="201:17" pos:end="213:17">if <condition pos:start="201:20" pos:end="201:77">(<expr pos:start="201:21" pos:end="201:76"><name pos:start="201:21" pos:end="201:26">r_mask</name> <operator pos:start="201:28" pos:end="201:29">!=</operator> <literal type="number" pos:start="201:31" pos:end="201:38">0xFF0000</literal> <operator pos:start="201:40" pos:end="201:41">||</operator> <name pos:start="201:43" pos:end="201:48">g_mask</name> <operator pos:start="201:50" pos:end="201:51">!=</operator> <literal type="number" pos:start="201:53" pos:end="201:58">0xFF00</literal> <operator pos:start="201:60" pos:end="201:61">||</operator> <name pos:start="201:63" pos:end="201:68">b_mask</name> <operator pos:start="201:70" pos:end="201:71">!=</operator> <literal type="number" pos:start="201:73" pos:end="201:76">0xFF</literal></expr>)</condition> <block pos:start="201:79" pos:end="213:17">{<block_content pos:start="203:21" pos:end="211:37">

                    <expr_stmt pos:start="203:21" pos:end="207:51"><expr pos:start="203:21" pos:end="207:50"><call pos:start="203:21" pos:end="207:50"><name pos:start="203:21" pos:end="203:26">av_log</name><argument_list pos:start="203:27" pos:end="207:50">(<argument pos:start="203:28" pos:end="203:32"><expr pos:start="203:28" pos:end="203:32"><name pos:start="203:28" pos:end="203:32">avctx</name></expr></argument>, <argument pos:start="203:35" pos:end="203:46"><expr pos:start="203:35" pos:end="203:46"><name pos:start="203:35" pos:end="203:46">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="205:28" pos:end="205:101"><expr pos:start="205:28" pos:end="205:101"><literal type="string" pos:start="205:28" pos:end="205:65">"Invalid or unsupported bitmasks: R=%"</literal><name pos:start="205:66" pos:end="205:71">PRIX32</name><literal type="string" pos:start="205:72" pos:end="205:78">", G=%"</literal><name pos:start="205:79" pos:end="205:84">PRIX32</name><literal type="string" pos:start="205:85" pos:end="205:91">", B=%"</literal><name pos:start="205:92" pos:end="205:97">PRIX32</name><literal type="string" pos:start="205:98" pos:end="205:101">"\n"</literal></expr></argument>,

                           <argument pos:start="207:28" pos:end="207:33"><expr pos:start="207:28" pos:end="207:33"><name pos:start="207:28" pos:end="207:33">r_mask</name></expr></argument>, <argument pos:start="207:36" pos:end="207:41"><expr pos:start="207:36" pos:end="207:41"><name pos:start="207:36" pos:end="207:41">g_mask</name></expr></argument>, <argument pos:start="207:44" pos:end="207:49"><expr pos:start="207:44" pos:end="207:49"><name pos:start="207:44" pos:end="207:49">b_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:47"><expr pos:start="209:21" pos:end="209:46"><name pos:start="209:21" pos:end="209:23">ret</name> <operator pos:start="209:25" pos:end="209:25">=</operator> <name pos:start="209:27" pos:end="209:46">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                    <goto pos:start="211:21" pos:end="211:37">goto <name pos:start="211:26" pos:end="211:36">header_fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="215:15" pos:end="223:13">else <block pos:start="215:20" pos:end="223:13">{<block_content pos:start="217:17" pos:end="221:33">

                <expr_stmt pos:start="217:17" pos:end="217:63"><expr pos:start="217:17" pos:end="217:62"><call pos:start="217:17" pos:end="217:62"><name pos:start="217:17" pos:end="217:37">avpriv_request_sample</name><argument_list pos:start="217:38" pos:end="217:62">(<argument pos:start="217:39" pos:end="217:43"><expr pos:start="217:39" pos:end="217:43"><name pos:start="217:39" pos:end="217:43">avctx</name></expr></argument>, <argument pos:start="217:46" pos:end="217:53"><expr pos:start="217:46" pos:end="217:53"><literal type="string" pos:start="217:46" pos:end="217:53">"bpp=%d"</literal></expr></argument>, <argument pos:start="217:56" pos:end="217:61"><expr pos:start="217:56" pos:end="217:61"><name pos:start="217:56" pos:end="217:61"><name pos:start="217:56" pos:end="217:56">c</name><operator pos:start="217:57" pos:end="217:58">-&gt;</operator><name pos:start="217:59" pos:end="217:61">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:43"><expr pos:start="219:17" pos:end="219:42"><name pos:start="219:17" pos:end="219:19">ret</name> <operator pos:start="219:21" pos:end="219:21">=</operator> <name pos:start="219:23" pos:end="219:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <goto pos:start="221:17" pos:end="221:33">goto <name pos:start="221:22" pos:end="221:32">header_fail</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="225:13" pos:end="231:13"><if pos:start="225:13" pos:end="231:13">if <condition pos:start="225:16" pos:end="225:36">(<expr pos:start="225:17" pos:end="225:35"><call pos:start="225:17" pos:end="225:35"><name pos:start="225:17" pos:end="225:32">g2m_init_buffers</name><argument_list pos:start="225:33" pos:end="225:35">(<argument pos:start="225:34" pos:end="225:34"><expr pos:start="225:34" pos:end="225:34"><name pos:start="225:34" pos:end="225:34">c</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="225:38" pos:end="231:13">{<block_content pos:start="227:17" pos:end="229:33">

                <expr_stmt pos:start="227:17" pos:end="227:38"><expr pos:start="227:17" pos:end="227:37"><name pos:start="227:17" pos:end="227:19">ret</name> <operator pos:start="227:21" pos:end="227:21">=</operator> <call pos:start="227:23" pos:end="227:37"><name pos:start="227:23" pos:end="227:29">AVERROR</name><argument_list pos:start="227:30" pos:end="227:37">(<argument pos:start="227:31" pos:end="227:36"><expr pos:start="227:31" pos:end="227:36"><name pos:start="227:31" pos:end="227:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="229:17" pos:end="229:33">goto <name pos:start="229:22" pos:end="229:32">header_fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:27"><expr pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:22">got_header</name> <operator pos:start="233:24" pos:end="233:24">=</operator> <literal type="number" pos:start="233:26" pos:end="233:26">1</literal></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <case pos:start="237:9" pos:end="237:23">case <expr pos:start="237:14" pos:end="237:22"><name pos:start="237:14" pos:end="237:22">TILE_DATA</name></expr>:</case>

            <if_stmt pos:start="239:13" pos:end="247:13"><if pos:start="239:13" pos:end="247:13">if <condition pos:start="239:16" pos:end="239:43">(<expr pos:start="239:17" pos:end="239:42"><operator pos:start="239:17" pos:end="239:17">!</operator><name pos:start="239:18" pos:end="239:27"><name pos:start="239:18" pos:end="239:18">c</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:27">tiles_x</name></name> <operator pos:start="239:29" pos:end="239:30">||</operator> <operator pos:start="239:32" pos:end="239:32">!</operator><name pos:start="239:33" pos:end="239:42"><name pos:start="239:33" pos:end="239:33">c</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:42">tiles_y</name></name></expr>)</condition> <block pos:start="239:45" pos:end="247:13">{<block_content pos:start="241:17" pos:end="245:22">

                <expr_stmt pos:start="241:17" pos:end="243:60"><expr pos:start="241:17" pos:end="243:59"><call pos:start="241:17" pos:end="243:59"><name pos:start="241:17" pos:end="241:22">av_log</name><argument_list pos:start="241:23" pos:end="243:59">(<argument pos:start="241:24" pos:end="241:28"><expr pos:start="241:24" pos:end="241:28"><name pos:start="241:24" pos:end="241:28">avctx</name></expr></argument>, <argument pos:start="241:31" pos:end="241:44"><expr pos:start="241:31" pos:end="241:44"><name pos:start="241:31" pos:end="241:44">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="243:24" pos:end="243:58"><expr pos:start="243:24" pos:end="243:58"><literal type="string" pos:start="243:24" pos:end="243:58">"No display info - skipping tile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="245:17" pos:end="245:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="249:13" pos:end="257:13"><if pos:start="249:13" pos:end="257:13">if <condition pos:start="249:16" pos:end="249:31">(<expr pos:start="249:17" pos:end="249:30"><name pos:start="249:17" pos:end="249:26">chunk_size</name> <operator pos:start="249:28" pos:end="249:28">&lt;</operator> <literal type="number" pos:start="249:30" pos:end="249:30">2</literal></expr>)</condition> <block pos:start="249:33" pos:end="257:13">{<block_content pos:start="251:17" pos:end="255:22">

                <expr_stmt pos:start="251:17" pos:end="253:35"><expr pos:start="251:17" pos:end="253:34"><call pos:start="251:17" pos:end="253:34"><name pos:start="251:17" pos:end="251:22">av_log</name><argument_list pos:start="251:23" pos:end="253:34">(<argument pos:start="251:24" pos:end="251:28"><expr pos:start="251:24" pos:end="251:28"><name pos:start="251:24" pos:end="251:28">avctx</name></expr></argument>, <argument pos:start="251:31" pos:end="251:42"><expr pos:start="251:31" pos:end="251:42"><name pos:start="251:31" pos:end="251:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="251:45" pos:end="251:80"><expr pos:start="251:45" pos:end="251:80"><literal type="string" pos:start="251:45" pos:end="251:70">"Invalid tile data size %"</literal><name pos:start="251:71" pos:end="251:76">PRIu32</name><literal type="string" pos:start="251:77" pos:end="251:80">"\n"</literal></expr></argument>,

                       <argument pos:start="253:24" pos:end="253:33"><expr pos:start="253:24" pos:end="253:33"><name pos:start="253:24" pos:end="253:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="255:17" pos:end="255:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:50"><expr pos:start="259:13" pos:end="259:49"><name pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:13">c</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:21">tile_x</name></name> <operator pos:start="259:23" pos:end="259:23">=</operator> <call pos:start="259:25" pos:end="259:49"><name pos:start="259:25" pos:end="259:44">bytestream2_get_byte</name><argument_list pos:start="259:45" pos:end="259:49">(<argument pos:start="259:46" pos:end="259:48"><expr pos:start="259:46" pos:end="259:48"><operator pos:start="259:46" pos:end="259:46">&amp;</operator><name pos:start="259:47" pos:end="259:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:50"><expr pos:start="261:13" pos:end="261:49"><name pos:start="261:13" pos:end="261:21"><name pos:start="261:13" pos:end="261:13">c</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:21">tile_y</name></name> <operator pos:start="261:23" pos:end="261:23">=</operator> <call pos:start="261:25" pos:end="261:49"><name pos:start="261:25" pos:end="261:44">bytestream2_get_byte</name><argument_list pos:start="261:45" pos:end="261:49">(<argument pos:start="261:46" pos:end="261:48"><expr pos:start="261:46" pos:end="261:48"><operator pos:start="261:46" pos:end="261:46">&amp;</operator><name pos:start="261:47" pos:end="261:48">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="263:13" pos:end="273:13"><if pos:start="263:13" pos:end="273:13">if <condition pos:start="263:16" pos:end="263:67">(<expr pos:start="263:17" pos:end="263:66"><name pos:start="263:17" pos:end="263:25"><name pos:start="263:17" pos:end="263:17">c</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:25">tile_x</name></name> <operator pos:start="263:27" pos:end="263:28">&gt;=</operator> <name pos:start="263:30" pos:end="263:39"><name pos:start="263:30" pos:end="263:30">c</name><operator pos:start="263:31" pos:end="263:32">-&gt;</operator><name pos:start="263:33" pos:end="263:39">tiles_x</name></name> <operator pos:start="263:41" pos:end="263:42">||</operator> <name pos:start="263:44" pos:end="263:52"><name pos:start="263:44" pos:end="263:44">c</name><operator pos:start="263:45" pos:end="263:46">-&gt;</operator><name pos:start="263:47" pos:end="263:52">tile_y</name></name> <operator pos:start="263:54" pos:end="263:55">&gt;=</operator> <name pos:start="263:57" pos:end="263:66"><name pos:start="263:57" pos:end="263:57">c</name><operator pos:start="263:58" pos:end="263:59">-&gt;</operator><name pos:start="263:60" pos:end="263:66">tiles_y</name></name></expr>)</condition> <block pos:start="263:69" pos:end="273:13">{<block_content pos:start="265:17" pos:end="271:22">

                <expr_stmt pos:start="265:17" pos:end="269:69"><expr pos:start="265:17" pos:end="269:68"><call pos:start="265:17" pos:end="269:68"><name pos:start="265:17" pos:end="265:22">av_log</name><argument_list pos:start="265:23" pos:end="269:68">(<argument pos:start="265:24" pos:end="265:28"><expr pos:start="265:24" pos:end="265:28"><name pos:start="265:24" pos:end="265:28">avctx</name></expr></argument>, <argument pos:start="265:31" pos:end="265:42"><expr pos:start="265:31" pos:end="265:42"><name pos:start="265:31" pos:end="265:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="267:24" pos:end="267:65"><expr pos:start="267:24" pos:end="267:65"><literal type="string" pos:start="267:24" pos:end="267:65">"Invalid tile pos %d,%d (in %dx%d grid)\n"</literal></expr></argument>,

                       <argument pos:start="269:24" pos:end="269:32"><expr pos:start="269:24" pos:end="269:32"><name pos:start="269:24" pos:end="269:32"><name pos:start="269:24" pos:end="269:24">c</name><operator pos:start="269:25" pos:end="269:26">-&gt;</operator><name pos:start="269:27" pos:end="269:32">tile_x</name></name></expr></argument>, <argument pos:start="269:35" pos:end="269:43"><expr pos:start="269:35" pos:end="269:43"><name pos:start="269:35" pos:end="269:43"><name pos:start="269:35" pos:end="269:35">c</name><operator pos:start="269:36" pos:end="269:37">-&gt;</operator><name pos:start="269:38" pos:end="269:43">tile_y</name></name></expr></argument>, <argument pos:start="269:46" pos:end="269:55"><expr pos:start="269:46" pos:end="269:55"><name pos:start="269:46" pos:end="269:55"><name pos:start="269:46" pos:end="269:46">c</name><operator pos:start="269:47" pos:end="269:48">-&gt;</operator><name pos:start="269:49" pos:end="269:55">tiles_x</name></name></expr></argument>, <argument pos:start="269:58" pos:end="269:67"><expr pos:start="269:58" pos:end="269:67"><name pos:start="269:58" pos:end="269:67"><name pos:start="269:58" pos:end="269:58">c</name><operator pos:start="269:59" pos:end="269:60">-&gt;</operator><name pos:start="269:61" pos:end="269:67">tiles_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="271:17" pos:end="271:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:20"><expr pos:start="275:13" pos:end="275:19"><name pos:start="275:13" pos:end="275:15">ret</name> <operator pos:start="275:17" pos:end="275:17">=</operator> <literal type="number" pos:start="275:19" pos:end="275:19">0</literal></expr>;</expr_stmt>

            <switch pos:start="277:13" pos:end="299:13">switch <condition pos:start="277:20" pos:end="277:35">(<expr pos:start="277:21" pos:end="277:34"><name pos:start="277:21" pos:end="277:34"><name pos:start="277:21" pos:end="277:21">c</name><operator pos:start="277:22" pos:end="277:23">-&gt;</operator><name pos:start="277:24" pos:end="277:34">compression</name></name></expr>)</condition> <block pos:start="277:37" pos:end="299:13">{<block_content pos:start="279:13" pos:end="297:22">

            <case pos:start="279:13" pos:end="279:32">case <expr pos:start="279:18" pos:end="279:31"><name pos:start="279:18" pos:end="279:31">COMPR_EPIC_J_B</name></expr>:</case>

                <expr_stmt pos:start="281:17" pos:end="285:65"><expr pos:start="281:17" pos:end="285:64"><name pos:start="281:17" pos:end="281:19">ret</name> <operator pos:start="281:21" pos:end="281:21">=</operator> <call pos:start="281:23" pos:end="285:64"><name pos:start="281:23" pos:end="281:41">epic_jb_decode_tile</name><argument_list pos:start="281:42" pos:end="285:64">(<argument pos:start="281:43" pos:end="281:43"><expr pos:start="281:43" pos:end="281:43"><name pos:start="281:43" pos:end="281:43">c</name></expr></argument>, <argument pos:start="281:46" pos:end="281:54"><expr pos:start="281:46" pos:end="281:54"><name pos:start="281:46" pos:end="281:54"><name pos:start="281:46" pos:end="281:46">c</name><operator pos:start="281:47" pos:end="281:48">-&gt;</operator><name pos:start="281:49" pos:end="281:54">tile_x</name></name></expr></argument>, <argument pos:start="281:57" pos:end="281:65"><expr pos:start="281:57" pos:end="281:65"><name pos:start="281:57" pos:end="281:65"><name pos:start="281:57" pos:end="281:57">c</name><operator pos:start="281:58" pos:end="281:59">-&gt;</operator><name pos:start="281:60" pos:end="281:65">tile_y</name></name></expr></argument>,

                                          <argument pos:start="283:43" pos:end="283:69"><expr pos:start="283:43" pos:end="283:69"><name pos:start="283:43" pos:end="283:45">buf</name> <operator pos:start="283:47" pos:end="283:47">+</operator> <call pos:start="283:49" pos:end="283:69"><name pos:start="283:49" pos:end="283:64">bytestream2_tell</name><argument_list pos:start="283:65" pos:end="283:69">(<argument pos:start="283:66" pos:end="283:68"><expr pos:start="283:66" pos:end="283:68"><operator pos:start="283:66" pos:end="283:66">&amp;</operator><name pos:start="283:67" pos:end="283:68">bc</name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="285:43" pos:end="285:56"><expr pos:start="285:43" pos:end="285:56"><name pos:start="285:43" pos:end="285:52">chunk_size</name> <operator pos:start="285:54" pos:end="285:54">-</operator> <literal type="number" pos:start="285:56" pos:end="285:56">2</literal></expr></argument>, <argument pos:start="285:59" pos:end="285:63"><expr pos:start="285:59" pos:end="285:63"><name pos:start="285:59" pos:end="285:63">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="287:17" pos:end="287:22">break;</break>

            <case pos:start="289:13" pos:end="289:33">case <expr pos:start="289:18" pos:end="289:32"><name pos:start="289:18" pos:end="289:32">COMPR_KEMPF_J_B</name></expr>:</case>

                <expr_stmt pos:start="291:17" pos:end="295:56"><expr pos:start="291:17" pos:end="295:55"><name pos:start="291:17" pos:end="291:19">ret</name> <operator pos:start="291:21" pos:end="291:21">=</operator> <call pos:start="291:23" pos:end="295:55"><name pos:start="291:23" pos:end="291:39">kempf_decode_tile</name><argument_list pos:start="291:40" pos:end="295:55">(<argument pos:start="291:41" pos:end="291:41"><expr pos:start="291:41" pos:end="291:41"><name pos:start="291:41" pos:end="291:41">c</name></expr></argument>, <argument pos:start="291:44" pos:end="291:52"><expr pos:start="291:44" pos:end="291:52"><name pos:start="291:44" pos:end="291:52"><name pos:start="291:44" pos:end="291:44">c</name><operator pos:start="291:45" pos:end="291:46">-&gt;</operator><name pos:start="291:47" pos:end="291:52">tile_x</name></name></expr></argument>, <argument pos:start="291:55" pos:end="291:63"><expr pos:start="291:55" pos:end="291:63"><name pos:start="291:55" pos:end="291:63"><name pos:start="291:55" pos:end="291:55">c</name><operator pos:start="291:56" pos:end="291:57">-&gt;</operator><name pos:start="291:58" pos:end="291:63">tile_y</name></name></expr></argument>,

                                        <argument pos:start="293:41" pos:end="293:67"><expr pos:start="293:41" pos:end="293:67"><name pos:start="293:41" pos:end="293:43">buf</name> <operator pos:start="293:45" pos:end="293:45">+</operator> <call pos:start="293:47" pos:end="293:67"><name pos:start="293:47" pos:end="293:62">bytestream2_tell</name><argument_list pos:start="293:63" pos:end="293:67">(<argument pos:start="293:64" pos:end="293:66"><expr pos:start="293:64" pos:end="293:66"><operator pos:start="293:64" pos:end="293:64">&amp;</operator><name pos:start="293:65" pos:end="293:66">bc</name></expr></argument>)</argument_list></call></expr></argument>,

                                        <argument pos:start="295:41" pos:end="295:54"><expr pos:start="295:41" pos:end="295:54"><name pos:start="295:41" pos:end="295:50">chunk_size</name> <operator pos:start="295:52" pos:end="295:52">-</operator> <literal type="number" pos:start="295:54" pos:end="295:54">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="297:17" pos:end="297:22">break;</break>

            </block_content>}</block></switch>

            <if_stmt pos:start="301:13" pos:end="305:45"><if pos:start="301:13" pos:end="305:45">if <condition pos:start="301:16" pos:end="301:35">(<expr pos:start="301:17" pos:end="301:34"><name pos:start="301:17" pos:end="301:19">ret</name> <operator pos:start="301:21" pos:end="301:22">&amp;&amp;</operator> <name pos:start="301:24" pos:end="301:34"><name pos:start="301:24" pos:end="301:24">c</name><operator pos:start="301:25" pos:end="301:26">-&gt;</operator><name pos:start="301:27" pos:end="301:34">framebuf</name></name></expr>)</condition><block type="pseudo" pos:start="303:17" pos:end="305:45"><block_content pos:start="303:17" pos:end="305:45">

                <expr_stmt pos:start="303:17" pos:end="305:45"><expr pos:start="303:17" pos:end="305:44"><call pos:start="303:17" pos:end="305:44"><name pos:start="303:17" pos:end="303:22">av_log</name><argument_list pos:start="303:23" pos:end="305:44">(<argument pos:start="303:24" pos:end="303:28"><expr pos:start="303:24" pos:end="303:28"><name pos:start="303:24" pos:end="303:28">avctx</name></expr></argument>, <argument pos:start="303:31" pos:end="303:42"><expr pos:start="303:31" pos:end="303:42"><name pos:start="303:31" pos:end="303:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="303:45" pos:end="303:73"><expr pos:start="303:45" pos:end="303:73"><literal type="string" pos:start="303:45" pos:end="303:73">"Error decoding tile %d,%d\n"</literal></expr></argument>,

                       <argument pos:start="305:24" pos:end="305:32"><expr pos:start="305:24" pos:end="305:32"><name pos:start="305:24" pos:end="305:32"><name pos:start="305:24" pos:end="305:24">c</name><operator pos:start="305:25" pos:end="305:26">-&gt;</operator><name pos:start="305:27" pos:end="305:32">tile_x</name></name></expr></argument>, <argument pos:start="305:35" pos:end="305:43"><expr pos:start="305:35" pos:end="305:43"><name pos:start="305:35" pos:end="305:43"><name pos:start="305:35" pos:end="305:35">c</name><operator pos:start="305:36" pos:end="305:37">-&gt;</operator><name pos:start="305:38" pos:end="305:43">tile_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="307:13" pos:end="307:18">break;</break>

        <case pos:start="309:9" pos:end="309:24">case <expr pos:start="309:14" pos:end="309:23"><name pos:start="309:14" pos:end="309:23">CURSOR_POS</name></expr>:</case>

            <if_stmt pos:start="311:13" pos:end="319:13"><if pos:start="311:13" pos:end="319:13">if <condition pos:start="311:16" pos:end="311:31">(<expr pos:start="311:17" pos:end="311:30"><name pos:start="311:17" pos:end="311:26">chunk_size</name> <operator pos:start="311:28" pos:end="311:28">&lt;</operator> <literal type="number" pos:start="311:30" pos:end="311:30">5</literal></expr>)</condition> <block pos:start="311:33" pos:end="319:13">{<block_content pos:start="313:17" pos:end="317:22">

                <expr_stmt pos:start="313:17" pos:end="315:35"><expr pos:start="313:17" pos:end="315:34"><call pos:start="313:17" pos:end="315:34"><name pos:start="313:17" pos:end="313:22">av_log</name><argument_list pos:start="313:23" pos:end="315:34">(<argument pos:start="313:24" pos:end="313:28"><expr pos:start="313:24" pos:end="313:28"><name pos:start="313:24" pos:end="313:28">avctx</name></expr></argument>, <argument pos:start="313:31" pos:end="313:42"><expr pos:start="313:31" pos:end="313:42"><name pos:start="313:31" pos:end="313:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="313:45" pos:end="313:81"><expr pos:start="313:45" pos:end="313:81"><literal type="string" pos:start="313:45" pos:end="313:71">"Invalid cursor pos size %"</literal><name pos:start="313:72" pos:end="313:77">PRIu32</name><literal type="string" pos:start="313:78" pos:end="313:81">"\n"</literal></expr></argument>,

                       <argument pos:start="315:24" pos:end="315:33"><expr pos:start="315:24" pos:end="315:33"><name pos:start="315:24" pos:end="315:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="317:17" pos:end="317:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:52"><expr pos:start="321:13" pos:end="321:51"><name pos:start="321:13" pos:end="321:23"><name pos:start="321:13" pos:end="321:13">c</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:23">cursor_x</name></name> <operator pos:start="321:25" pos:end="321:25">=</operator> <call pos:start="321:27" pos:end="321:51"><name pos:start="321:27" pos:end="321:46">bytestream2_get_be16</name><argument_list pos:start="321:47" pos:end="321:51">(<argument pos:start="321:48" pos:end="321:50"><expr pos:start="321:48" pos:end="321:50"><operator pos:start="321:48" pos:end="321:48">&amp;</operator><name pos:start="321:49" pos:end="321:50">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:52"><expr pos:start="323:13" pos:end="323:51"><name pos:start="323:13" pos:end="323:23"><name pos:start="323:13" pos:end="323:13">c</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:23">cursor_y</name></name> <operator pos:start="323:25" pos:end="323:25">=</operator> <call pos:start="323:27" pos:end="323:51"><name pos:start="323:27" pos:end="323:46">bytestream2_get_be16</name><argument_list pos:start="323:47" pos:end="323:51">(<argument pos:start="323:48" pos:end="323:50"><expr pos:start="323:48" pos:end="323:50"><operator pos:start="323:48" pos:end="323:48">&amp;</operator><name pos:start="323:49" pos:end="323:50">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        <case pos:start="327:9" pos:end="327:26">case <expr pos:start="327:14" pos:end="327:25"><name pos:start="327:14" pos:end="327:25">CURSOR_SHAPE</name></expr>:</case>

            <if_stmt pos:start="329:13" pos:end="337:13"><if pos:start="329:13" pos:end="337:13">if <condition pos:start="329:16" pos:end="329:31">(<expr pos:start="329:17" pos:end="329:30"><name pos:start="329:17" pos:end="329:26">chunk_size</name> <operator pos:start="329:28" pos:end="329:28">&lt;</operator> <literal type="number" pos:start="329:30" pos:end="329:30">8</literal></expr>)</condition> <block pos:start="329:33" pos:end="337:13">{<block_content pos:start="331:17" pos:end="335:22">

                <expr_stmt pos:start="331:17" pos:end="333:35"><expr pos:start="331:17" pos:end="333:34"><call pos:start="331:17" pos:end="333:34"><name pos:start="331:17" pos:end="331:22">av_log</name><argument_list pos:start="331:23" pos:end="333:34">(<argument pos:start="331:24" pos:end="331:28"><expr pos:start="331:24" pos:end="331:28"><name pos:start="331:24" pos:end="331:28">avctx</name></expr></argument>, <argument pos:start="331:31" pos:end="331:42"><expr pos:start="331:31" pos:end="331:42"><name pos:start="331:31" pos:end="331:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="331:45" pos:end="331:82"><expr pos:start="331:45" pos:end="331:82"><literal type="string" pos:start="331:45" pos:end="331:72">"Invalid cursor data size %"</literal><name pos:start="331:73" pos:end="331:78">PRIu32</name><literal type="string" pos:start="331:79" pos:end="331:82">"\n"</literal></expr></argument>,

                       <argument pos:start="333:24" pos:end="333:33"><expr pos:start="333:24" pos:end="333:33"><name pos:start="333:24" pos:end="333:33">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="335:17" pos:end="335:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="339:13" pos:end="341:45"><expr pos:start="339:13" pos:end="341:44"><call pos:start="339:13" pos:end="341:44"><name pos:start="339:13" pos:end="339:28">bytestream2_init</name><argument_list pos:start="339:29" pos:end="341:44">(<argument pos:start="339:30" pos:end="339:33"><expr pos:start="339:30" pos:end="339:33"><operator pos:start="339:30" pos:end="339:30">&amp;</operator><name pos:start="339:31" pos:end="339:33">tbc</name></expr></argument>, <argument pos:start="339:36" pos:end="339:62"><expr pos:start="339:36" pos:end="339:62"><name pos:start="339:36" pos:end="339:38">buf</name> <operator pos:start="339:40" pos:end="339:40">+</operator> <call pos:start="339:42" pos:end="339:62"><name pos:start="339:42" pos:end="339:57">bytestream2_tell</name><argument_list pos:start="339:58" pos:end="339:62">(<argument pos:start="339:59" pos:end="339:61"><expr pos:start="339:59" pos:end="339:61"><operator pos:start="339:59" pos:end="339:59">&amp;</operator><name pos:start="339:60" pos:end="339:61">bc</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="341:30" pos:end="341:43"><expr pos:start="341:30" pos:end="341:43"><name pos:start="341:30" pos:end="341:39">chunk_size</name> <operator pos:start="341:41" pos:end="341:41">-</operator> <literal type="number" pos:start="341:43" pos:end="341:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:44"><expr pos:start="343:13" pos:end="343:43"><call pos:start="343:13" pos:end="343:43"><name pos:start="343:13" pos:end="343:27">g2m_load_cursor</name><argument_list pos:start="343:28" pos:end="343:43">(<argument pos:start="343:29" pos:end="343:33"><expr pos:start="343:29" pos:end="343:33"><name pos:start="343:29" pos:end="343:33">avctx</name></expr></argument>, <argument pos:start="343:36" pos:end="343:36"><expr pos:start="343:36" pos:end="343:36"><name pos:start="343:36" pos:end="343:36">c</name></expr></argument>, <argument pos:start="343:39" pos:end="343:42"><expr pos:start="343:39" pos:end="343:42"><operator pos:start="343:39" pos:end="343:39">&amp;</operator><name pos:start="343:40" pos:end="343:42">tbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="345:13" pos:end="345:18">break;</break>

        <case pos:start="347:9" pos:end="347:22">case <expr pos:start="347:14" pos:end="347:21"><name pos:start="347:14" pos:end="347:21">CHUNK_CC</name></expr>:</case>

        <case pos:start="349:9" pos:end="349:22">case <expr pos:start="349:14" pos:end="349:21"><name pos:start="349:14" pos:end="349:21">CHUNK_CD</name></expr>:</case>

            <break pos:start="351:13" pos:end="351:18">break;</break>

        <default pos:start="353:9" pos:end="353:16">default:</default>

            <expr_stmt pos:start="355:13" pos:end="357:31"><expr pos:start="355:13" pos:end="357:30"><call pos:start="355:13" pos:end="357:30"><name pos:start="355:13" pos:end="355:18">av_log</name><argument_list pos:start="355:19" pos:end="357:30">(<argument pos:start="355:20" pos:end="355:24"><expr pos:start="355:20" pos:end="355:24"><name pos:start="355:20" pos:end="355:24">avctx</name></expr></argument>, <argument pos:start="355:27" pos:end="355:40"><expr pos:start="355:27" pos:end="355:40"><name pos:start="355:27" pos:end="355:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="355:43" pos:end="355:70"><expr pos:start="355:43" pos:end="355:70"><literal type="string" pos:start="355:43" pos:end="355:70">"Skipping chunk type %02d\n"</literal></expr></argument>,

                   <argument pos:start="357:20" pos:end="357:29"><expr pos:start="357:20" pos:end="357:29"><name pos:start="357:20" pos:end="357:29">chunk_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>



        <comment type="block" pos:start="363:9" pos:end="363:36">/* navigate to next chunk */</comment>

        <expr_stmt pos:start="365:9" pos:end="365:80"><expr pos:start="365:9" pos:end="365:79"><call pos:start="365:9" pos:end="365:79"><name pos:start="365:9" pos:end="365:24">bytestream2_skip</name><argument_list pos:start="365:25" pos:end="365:79">(<argument pos:start="365:26" pos:end="365:28"><expr pos:start="365:26" pos:end="365:28"><operator pos:start="365:26" pos:end="365:26">&amp;</operator><name pos:start="365:27" pos:end="365:28">bc</name></expr></argument>, <argument pos:start="365:31" pos:end="365:78"><expr pos:start="365:31" pos:end="365:78"><name pos:start="365:31" pos:end="365:41">chunk_start</name> <operator pos:start="365:43" pos:end="365:43">+</operator> <name pos:start="365:45" pos:end="365:54">chunk_size</name> <operator pos:start="365:56" pos:end="365:56">-</operator> <call pos:start="365:58" pos:end="365:78"><name pos:start="365:58" pos:end="365:73">bytestream2_tell</name><argument_list pos:start="365:74" pos:end="365:78">(<argument pos:start="365:75" pos:end="365:77"><expr pos:start="365:75" pos:end="365:77"><operator pos:start="365:75" pos:end="365:75">&amp;</operator><name pos:start="365:76" pos:end="365:77">bc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="369:5" pos:end="371:26"><if pos:start="369:5" pos:end="371:26">if <condition pos:start="369:8" pos:end="369:19">(<expr pos:start="369:9" pos:end="369:18"><name pos:start="369:9" pos:end="369:18">got_header</name></expr>)</condition><block type="pseudo" pos:start="371:9" pos:end="371:26"><block_content pos:start="371:9" pos:end="371:26">

        <expr_stmt pos:start="371:9" pos:end="371:26"><expr pos:start="371:9" pos:end="371:25"><name pos:start="371:9" pos:end="371:21"><name pos:start="371:9" pos:end="371:9">c</name><operator pos:start="371:10" pos:end="371:11">-&gt;</operator><name pos:start="371:12" pos:end="371:21">got_header</name></name> <operator pos:start="371:23" pos:end="371:23">=</operator> <literal type="number" pos:start="371:25" pos:end="371:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="375:5" pos:end="403:5"><if pos:start="375:5" pos:end="403:5">if <condition pos:start="375:8" pos:end="375:45">(<expr pos:start="375:9" pos:end="375:44"><name pos:start="375:9" pos:end="375:16"><name pos:start="375:9" pos:end="375:9">c</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:16">width</name></name> <operator pos:start="375:18" pos:end="375:19">&amp;&amp;</operator> <name pos:start="375:21" pos:end="375:29"><name pos:start="375:21" pos:end="375:21">c</name><operator pos:start="375:22" pos:end="375:23">-&gt;</operator><name pos:start="375:24" pos:end="375:29">height</name></name> <operator pos:start="375:31" pos:end="375:32">&amp;&amp;</operator> <name pos:start="375:34" pos:end="375:44"><name pos:start="375:34" pos:end="375:34">c</name><operator pos:start="375:35" pos:end="375:36">-&gt;</operator><name pos:start="375:37" pos:end="375:44">framebuf</name></name></expr>)</condition> <block pos:start="375:47" pos:end="403:5">{<block_content pos:start="377:9" pos:end="401:29">

        <if_stmt pos:start="377:9" pos:end="379:23"><if pos:start="377:9" pos:end="379:23">if <condition pos:start="377:12" pos:end="377:53">(<expr pos:start="377:13" pos:end="377:52"><operator pos:start="377:13" pos:end="377:13">(</operator><name pos:start="377:14" pos:end="377:16">ret</name> <operator pos:start="377:18" pos:end="377:18">=</operator> <call pos:start="377:20" pos:end="377:47"><name pos:start="377:20" pos:end="377:32">ff_get_buffer</name><argument_list pos:start="377:33" pos:end="377:47">(<argument pos:start="377:34" pos:end="377:38"><expr pos:start="377:34" pos:end="377:38"><name pos:start="377:34" pos:end="377:38">avctx</name></expr></argument>, <argument pos:start="377:41" pos:end="377:43"><expr pos:start="377:41" pos:end="377:43"><name pos:start="377:41" pos:end="377:43">pic</name></expr></argument>, <argument pos:start="377:46" pos:end="377:46"><expr pos:start="377:46" pos:end="377:46"><literal type="number" pos:start="377:46" pos:end="377:46">0</literal></expr></argument>)</argument_list></call><operator pos:start="377:48" pos:end="377:48">)</operator> <operator pos:start="377:50" pos:end="377:50">&lt;</operator> <literal type="number" pos:start="377:52" pos:end="377:52">0</literal></expr>)</condition><block type="pseudo" pos:start="379:13" pos:end="379:23"><block_content pos:start="379:13" pos:end="379:23">

            <return pos:start="379:13" pos:end="379:23">return <expr pos:start="379:20" pos:end="379:22"><name pos:start="379:20" pos:end="379:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="383:9" pos:end="383:36"><expr pos:start="383:9" pos:end="383:35"><name pos:start="383:9" pos:end="383:22"><name pos:start="383:9" pos:end="383:11">pic</name><operator pos:start="383:12" pos:end="383:13">-&gt;</operator><name pos:start="383:14" pos:end="383:22">key_frame</name></name> <operator pos:start="383:24" pos:end="383:24">=</operator> <name pos:start="383:26" pos:end="383:35">got_header</name></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:76"><expr pos:start="385:9" pos:end="385:75"><name pos:start="385:9" pos:end="385:22"><name pos:start="385:9" pos:end="385:11">pic</name><operator pos:start="385:12" pos:end="385:13">-&gt;</operator><name pos:start="385:14" pos:end="385:22">pict_type</name></name> <operator pos:start="385:24" pos:end="385:24">=</operator> <ternary pos:start="385:26" pos:end="385:75"><condition pos:start="385:26" pos:end="385:37"><expr pos:start="385:26" pos:end="385:35"><name pos:start="385:26" pos:end="385:35">got_header</name></expr> ?</condition><then pos:start="385:39" pos:end="385:55"> <expr pos:start="385:39" pos:end="385:55"><name pos:start="385:39" pos:end="385:55">AV_PICTURE_TYPE_I</name></expr> </then><else pos:start="385:57" pos:end="385:75">: <expr pos:start="385:59" pos:end="385:75"><name pos:start="385:59" pos:end="385:75">AV_PICTURE_TYPE_P</name></expr></else></ternary></expr>;</expr_stmt>



        <for pos:start="389:9" pos:end="395:33">for <control pos:start="389:13" pos:end="389:43">(<init pos:start="389:14" pos:end="389:19"><expr pos:start="389:14" pos:end="389:18"><name pos:start="389:14" pos:end="389:14">i</name> <operator pos:start="389:16" pos:end="389:16">=</operator> <literal type="number" pos:start="389:18" pos:end="389:18">0</literal></expr>;</init> <condition pos:start="389:21" pos:end="389:38"><expr pos:start="389:21" pos:end="389:37"><name pos:start="389:21" pos:end="389:21">i</name> <operator pos:start="389:23" pos:end="389:23">&lt;</operator> <name pos:start="389:25" pos:end="389:37"><name pos:start="389:25" pos:end="389:29">avctx</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:37">height</name></name></expr>;</condition> <incr pos:start="389:40" pos:end="389:42"><expr pos:start="389:40" pos:end="389:42"><name pos:start="389:40" pos:end="389:40">i</name><operator pos:start="389:41" pos:end="389:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="391:13" pos:end="395:33"><block_content pos:start="391:13" pos:end="395:33">

            <expr_stmt pos:start="391:13" pos:end="395:33"><expr pos:start="391:13" pos:end="395:32"><call pos:start="391:13" pos:end="395:32"><name pos:start="391:13" pos:end="391:18">memcpy</name><argument_list pos:start="391:19" pos:end="395:32">(<argument pos:start="391:20" pos:end="391:54"><expr pos:start="391:20" pos:end="391:54"><name pos:start="391:20" pos:end="391:31"><name pos:start="391:20" pos:end="391:22">pic</name><operator pos:start="391:23" pos:end="391:24">-&gt;</operator><name pos:start="391:25" pos:end="391:28">data</name><index pos:start="391:29" pos:end="391:31">[<expr pos:start="391:30" pos:end="391:30"><literal type="number" pos:start="391:30" pos:end="391:30">0</literal></expr>]</index></name> <operator pos:start="391:33" pos:end="391:33">+</operator> <name pos:start="391:35" pos:end="391:35">i</name> <operator pos:start="391:37" pos:end="391:37">*</operator> <name pos:start="391:39" pos:end="391:54"><name pos:start="391:39" pos:end="391:41">pic</name><operator pos:start="391:42" pos:end="391:43">-&gt;</operator><name pos:start="391:44" pos:end="391:51">linesize</name><index pos:start="391:52" pos:end="391:54">[<expr pos:start="391:53" pos:end="391:53"><literal type="number" pos:start="391:53" pos:end="391:53">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="393:20" pos:end="393:55"><expr pos:start="393:20" pos:end="393:55"><name pos:start="393:20" pos:end="393:30"><name pos:start="393:20" pos:end="393:20">c</name><operator pos:start="393:21" pos:end="393:22">-&gt;</operator><name pos:start="393:23" pos:end="393:30">framebuf</name></name> <operator pos:start="393:32" pos:end="393:32">+</operator> <name pos:start="393:34" pos:end="393:34">i</name> <operator pos:start="393:36" pos:end="393:36">*</operator> <name pos:start="393:38" pos:end="393:55"><name pos:start="393:38" pos:end="393:38">c</name><operator pos:start="393:39" pos:end="393:40">-&gt;</operator><name pos:start="393:41" pos:end="393:55">framebuf_stride</name></name></expr></argument>,

                   <argument pos:start="395:20" pos:end="395:31"><expr pos:start="395:20" pos:end="395:31"><name pos:start="395:20" pos:end="395:27"><name pos:start="395:20" pos:end="395:20">c</name><operator pos:start="395:21" pos:end="395:22">-&gt;</operator><name pos:start="395:23" pos:end="395:27">width</name></name> <operator pos:start="395:29" pos:end="395:29">*</operator> <literal type="number" pos:start="395:31" pos:end="395:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="397:9" pos:end="397:60"><expr pos:start="397:9" pos:end="397:59"><call pos:start="397:9" pos:end="397:59"><name pos:start="397:9" pos:end="397:24">g2m_paint_cursor</name><argument_list pos:start="397:25" pos:end="397:59">(<argument pos:start="397:26" pos:end="397:26"><expr pos:start="397:26" pos:end="397:26"><name pos:start="397:26" pos:end="397:26">c</name></expr></argument>, <argument pos:start="397:29" pos:end="397:40"><expr pos:start="397:29" pos:end="397:40"><name pos:start="397:29" pos:end="397:40"><name pos:start="397:29" pos:end="397:31">pic</name><operator pos:start="397:32" pos:end="397:33">-&gt;</operator><name pos:start="397:34" pos:end="397:37">data</name><index pos:start="397:38" pos:end="397:40">[<expr pos:start="397:39" pos:end="397:39"><literal type="number" pos:start="397:39" pos:end="397:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="397:43" pos:end="397:58"><expr pos:start="397:43" pos:end="397:58"><name pos:start="397:43" pos:end="397:58"><name pos:start="397:43" pos:end="397:45">pic</name><operator pos:start="397:46" pos:end="397:47">-&gt;</operator><name pos:start="397:48" pos:end="397:55">linesize</name><index pos:start="397:56" pos:end="397:58">[<expr pos:start="397:57" pos:end="397:57"><literal type="number" pos:start="397:57" pos:end="397:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="401:9" pos:end="401:29"><expr pos:start="401:9" pos:end="401:28"><operator pos:start="401:9" pos:end="401:9">*</operator><name pos:start="401:10" pos:end="401:24">got_picture_ptr</name> <operator pos:start="401:26" pos:end="401:26">=</operator> <literal type="number" pos:start="401:28" pos:end="401:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="407:5" pos:end="407:20">return <expr pos:start="407:12" pos:end="407:19"><name pos:start="407:12" pos:end="407:19">buf_size</name></expr>;</return>



<label pos:start="411:1" pos:end="411:12"><name pos:start="411:1" pos:end="411:11">header_fail</name>:</label>

    <expr_stmt pos:start="413:5" pos:end="415:19"><expr pos:start="413:5" pos:end="415:18"><name pos:start="413:5" pos:end="413:12"><name pos:start="413:5" pos:end="413:5">c</name><operator pos:start="413:6" pos:end="413:7">-&gt;</operator><name pos:start="413:8" pos:end="413:12">width</name></name>   <operator pos:start="413:16" pos:end="413:16">=</operator>

    <name pos:start="415:5" pos:end="415:13"><name pos:start="415:5" pos:end="415:5">c</name><operator pos:start="415:6" pos:end="415:7">-&gt;</operator><name pos:start="415:8" pos:end="415:13">height</name></name>  <operator pos:start="415:16" pos:end="415:16">=</operator> <literal type="number" pos:start="415:18" pos:end="415:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="417:5" pos:end="419:19"><expr pos:start="417:5" pos:end="419:18"><name pos:start="417:5" pos:end="417:14"><name pos:start="417:5" pos:end="417:5">c</name><operator pos:start="417:6" pos:end="417:7">-&gt;</operator><name pos:start="417:8" pos:end="417:14">tiles_x</name></name> <operator pos:start="417:16" pos:end="417:16">=</operator>

    <name pos:start="419:5" pos:end="419:14"><name pos:start="419:5" pos:end="419:5">c</name><operator pos:start="419:6" pos:end="419:7">-&gt;</operator><name pos:start="419:8" pos:end="419:14">tiles_y</name></name> <operator pos:start="419:16" pos:end="419:16">=</operator> <literal type="number" pos:start="419:18" pos:end="419:18">0</literal></expr>;</expr_stmt>

    <return pos:start="421:5" pos:end="421:15">return <expr pos:start="421:12" pos:end="421:14"><name pos:start="421:12" pos:end="421:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
