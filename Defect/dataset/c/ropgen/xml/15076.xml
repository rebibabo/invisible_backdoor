<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15076.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">apb_pci_bridge_initfn</name><parameter_list pos:start="1:33" pos:end="1:48">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:42">PCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:6">rc</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:31"><name pos:start="9:10" pos:end="9:26">pci_bridge_initfn</name><argument_list pos:start="9:27" pos:end="9:31">(<argument pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:30">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:15">(<expr pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:10">rc</name> <operator pos:start="11:12" pos:end="11:12">&lt;</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>)</condition> <block pos:start="11:17" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:18">

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><name pos:start="13:16" pos:end="13:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:61"><expr pos:start="19:5" pos:end="19:60"><call pos:start="19:5" pos:end="19:60"><name pos:start="19:5" pos:end="19:28">pci_config_set_vendor_id</name><argument_list pos:start="19:29" pos:end="19:60">(<argument pos:start="19:30" pos:end="19:40"><expr pos:start="19:30" pos:end="19:40"><name pos:start="19:30" pos:end="19:40"><name pos:start="19:30" pos:end="19:32">dev</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:40">config</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:59"><expr pos:start="19:43" pos:end="19:59"><name pos:start="19:43" pos:end="19:59">PCI_VENDOR_ID_SUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:67"><expr pos:start="21:5" pos:end="21:66"><call pos:start="21:5" pos:end="21:66"><name pos:start="21:5" pos:end="21:28">pci_config_set_device_id</name><argument_list pos:start="21:29" pos:end="21:66">(<argument pos:start="21:30" pos:end="21:40"><expr pos:start="21:30" pos:end="21:40"><name pos:start="21:30" pos:end="21:40"><name pos:start="21:30" pos:end="21:32">dev</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:40">config</name></name></expr></argument>, <argument pos:start="21:43" pos:end="21:65"><expr pos:start="21:43" pos:end="21:65"><name pos:start="21:43" pos:end="21:65">PCI_DEVICE_ID_SUN_SIMBA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="41:7">/*

     * command register:

     * According to PCI bridge spec, after reset

     *   bus master bit is off

     *   memory space enable bit is off

     * According to manual (805-1251.pdf).

     *   the reset value should be zero unless the boot pin is tied high

     *   (which is true) and thus it should be PCI_COMMAND_MEMORY.

     */</comment>

    <expr_stmt pos:start="43:5" pos:end="45:37"><expr pos:start="43:5" pos:end="45:36"><call pos:start="43:5" pos:end="45:36"><name pos:start="43:5" pos:end="43:16">pci_set_word</name><argument_list pos:start="43:17" pos:end="45:36">(<argument pos:start="43:18" pos:end="43:42"><expr pos:start="43:18" pos:end="43:42"><name pos:start="43:18" pos:end="43:28"><name pos:start="43:18" pos:end="43:20">dev</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:28">config</name></name> <operator pos:start="43:30" pos:end="43:30">+</operator> <name pos:start="43:32" pos:end="43:42">PCI_COMMAND</name></expr></argument>,

                 <argument pos:start="45:18" pos:end="45:35"><expr pos:start="45:18" pos:end="45:35"><name pos:start="45:18" pos:end="45:35">PCI_COMMAND_MEMORY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="51:43"><expr pos:start="47:5" pos:end="51:42"><call pos:start="47:5" pos:end="51:42"><name pos:start="47:5" pos:end="47:16">pci_set_word</name><argument_list pos:start="47:17" pos:end="51:42">(<argument pos:start="47:18" pos:end="47:41"><expr pos:start="47:18" pos:end="47:41"><name pos:start="47:18" pos:end="47:28"><name pos:start="47:18" pos:end="47:20">dev</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:28">config</name></name> <operator pos:start="47:30" pos:end="47:30">+</operator> <name pos:start="47:32" pos:end="47:41">PCI_STATUS</name></expr></argument>,

                 <argument pos:start="49:18" pos:end="51:41"><expr pos:start="49:18" pos:end="51:41"><name pos:start="49:18" pos:end="49:37">PCI_STATUS_FAST_BACK</name> <operator pos:start="49:39" pos:end="49:39">|</operator> <name pos:start="49:41" pos:end="49:56">PCI_STATUS_66MHZ</name> <operator pos:start="49:58" pos:end="49:58">|</operator>

                 <name pos:start="51:18" pos:end="51:41">PCI_STATUS_DEVSEL_MEDIUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:54"><expr pos:start="53:5" pos:end="53:53"><call pos:start="53:5" pos:end="53:53"><name pos:start="53:5" pos:end="53:16">pci_set_byte</name><argument_list pos:start="53:17" pos:end="53:53">(<argument pos:start="53:18" pos:end="53:46"><expr pos:start="53:18" pos:end="53:46"><name pos:start="53:18" pos:end="53:28"><name pos:start="53:18" pos:end="53:20">dev</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:28">config</name></name> <operator pos:start="53:30" pos:end="53:30">+</operator> <name pos:start="53:32" pos:end="53:46">PCI_REVISION_ID</name></expr></argument>, <argument pos:start="53:49" pos:end="53:52"><expr pos:start="53:49" pos:end="53:52"><literal type="number" pos:start="53:49" pos:end="53:52">0x11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
