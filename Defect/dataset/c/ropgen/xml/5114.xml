<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5114.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">rpcit_service_call</name><parameter_list pos:start="1:23" pos:end="1:60">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:30">S390CPU</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">cpu</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:47"><decl pos:start="1:38" pos:end="1:47"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:44">uint8_t</name></type> <name pos:start="1:46" pos:end="1:47">r1</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:56">uint8_t</name></type> <name pos:start="1:58" pos:end="1:59">r2</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUS390XState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">env</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:34"><name pos:start="5:27" pos:end="5:29">cpu</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">fh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">S390PCIBusDevice</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:27">pbdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">S390PCIIOMMU</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:23">iommu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">hwaddr</name></type> <name pos:start="13:12" pos:end="13:16">start</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:10"/><name pos:start="13:19" pos:end="13:21">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:17">IOMMUTLBEntry</name></type> <name pos:start="15:19" pos:end="15:23">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">MemoryRegion</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:20">mr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><call pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:25">cpu_synchronize_state</name><argument_list pos:start="21:26" pos:end="21:35">(<argument pos:start="21:27" pos:end="21:34"><expr pos:start="21:27" pos:end="21:34"><call pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:29">CPU</name><argument_list pos:start="21:30" pos:end="21:34">(<argument pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:33">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:40">(<expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:16">psw</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:21">mask</name></name> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <name pos:start="25:25" pos:end="25:39">PSW_MASK_PSTATE</name></expr>)</condition> <block pos:start="25:42" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:17">

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><call pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:25">program_interrupt</name><argument_list pos:start="27:26" pos:end="27:49">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">env</name></expr></argument>, <argument pos:start="27:32" pos:end="27:45"><expr pos:start="27:32" pos:end="27:45"><name pos:start="27:32" pos:end="27:45">PGM_PRIVILEGED</name></expr></argument>, <argument pos:start="27:48" pos:end="27:48"><expr pos:start="27:48" pos:end="27:48"><literal type="number" pos:start="27:48" pos:end="27:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:10">r2</name> <operator pos:start="35:12" pos:end="35:12">&amp;</operator> <literal type="number" pos:start="35:14" pos:end="35:16">0x1</literal></expr>)</condition> <block pos:start="35:19" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:17">

        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><call pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:25">program_interrupt</name><argument_list pos:start="37:26" pos:end="37:52">(<argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">env</name></expr></argument>, <argument pos:start="37:32" pos:end="37:48"><expr pos:start="37:32" pos:end="37:48"><name pos:start="37:32" pos:end="37:48">PGM_SPECIFICATION</name></expr></argument>, <argument pos:start="37:51" pos:end="37:51"><expr pos:start="37:51" pos:end="37:51"><literal type="number" pos:start="37:51" pos:end="37:51">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:17">goto <name pos:start="39:14" pos:end="39:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:6">fh</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <name pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:12">env</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:18">regs</name><index pos:start="45:19" pos:end="45:22">[<expr pos:start="45:20" pos:end="45:21"><name pos:start="45:20" pos:end="45:21">r1</name></expr>]</index></name> <operator pos:start="45:24" pos:end="45:25">&gt;&gt;</operator> <literal type="number" pos:start="45:27" pos:end="45:28">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:9">start</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:15">env</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:21">regs</name><index pos:start="47:22" pos:end="47:25">[<expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">r2</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:7">end</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <name pos:start="49:11" pos:end="49:15">start</name> <operator pos:start="49:17" pos:end="49:17">+</operator> <name pos:start="49:19" pos:end="49:35"><name pos:start="49:19" pos:end="49:21">env</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:27">regs</name><index pos:start="49:28" pos:end="49:35">[<expr pos:start="49:29" pos:end="49:34"><name pos:start="49:29" pos:end="49:30">r2</name> <operator pos:start="49:32" pos:end="49:32">+</operator> <literal type="number" pos:start="49:34" pos:end="49:34">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:56"><expr pos:start="53:5" pos:end="53:55"><name pos:start="53:5" pos:end="53:9">pbdev</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <call pos:start="53:13" pos:end="53:55"><name pos:start="53:13" pos:end="53:35">s390_pci_find_dev_by_fh</name><argument_list pos:start="53:36" pos:end="53:55">(<argument pos:start="53:37" pos:end="53:50"><expr pos:start="53:37" pos:end="53:50"><call pos:start="53:37" pos:end="53:50"><name pos:start="53:37" pos:end="53:48">s390_get_phb</name><argument_list pos:start="53:49" pos:end="53:50">()</argument_list></call></expr></argument>, <argument pos:start="53:53" pos:end="53:54"><expr pos:start="53:53" pos:end="53:54"><name pos:start="53:53" pos:end="53:54">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:15">(<expr pos:start="55:9" pos:end="55:14"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:14">pbdev</name></expr>)</condition> <block pos:start="55:17" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:17">

        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><call pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:15">DPRINTF</name><argument_list pos:start="57:16" pos:end="57:37">(<argument pos:start="57:17" pos:end="57:36"><expr pos:start="57:17" pos:end="57:36"><literal type="string" pos:start="57:17" pos:end="57:36">"rpcit no pci dev\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><call pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:13">setcc</name><argument_list pos:start="59:14" pos:end="59:44">(<argument pos:start="59:15" pos:end="59:17"><expr pos:start="59:15" pos:end="59:17"><name pos:start="59:15" pos:end="59:17">cpu</name></expr></argument>, <argument pos:start="59:20" pos:end="59:43"><expr pos:start="59:20" pos:end="59:43"><name pos:start="59:20" pos:end="59:43">ZPCI_PCI_LS_INVAL_HANDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="67:5" pos:end="93:5">switch <condition pos:start="67:12" pos:end="67:25">(<expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:17">pbdev</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:24">state</name></name></expr>)</condition> <block pos:start="67:27" pos:end="93:5">{<block_content pos:start="69:5" pos:end="91:14">

    <case pos:start="69:5" pos:end="69:26">case <expr pos:start="69:10" pos:end="69:25"><name pos:start="69:10" pos:end="69:25">ZPCI_FS_RESERVED</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:25">case <expr pos:start="71:10" pos:end="71:24"><name pos:start="71:10" pos:end="71:24">ZPCI_FS_STANDBY</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:26">case <expr pos:start="73:10" pos:end="73:25"><name pos:start="73:10" pos:end="73:25">ZPCI_FS_DISABLED</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:33">case <expr pos:start="75:10" pos:end="75:32"><name pos:start="75:10" pos:end="75:32">ZPCI_FS_PERMANENT_ERROR</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><call pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:13">setcc</name><argument_list pos:start="77:14" pos:end="77:44">(<argument pos:start="77:15" pos:end="77:17"><expr pos:start="77:15" pos:end="77:17"><name pos:start="77:15" pos:end="77:17">cpu</name></expr></argument>, <argument pos:start="77:20" pos:end="77:43"><expr pos:start="77:20" pos:end="77:43"><name pos:start="77:20" pos:end="77:43">ZPCI_PCI_LS_INVAL_HANDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</return>

    <case pos:start="81:5" pos:end="81:23">case <expr pos:start="81:10" pos:end="81:22"><name pos:start="81:10" pos:end="81:22">ZPCI_FS_ERROR</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:36"><expr pos:start="83:9" pos:end="83:35"><call pos:start="83:9" pos:end="83:35"><name pos:start="83:9" pos:end="83:13">setcc</name><argument_list pos:start="83:14" pos:end="83:35">(<argument pos:start="83:15" pos:end="83:17"><expr pos:start="83:15" pos:end="83:17"><name pos:start="83:15" pos:end="83:17">cpu</name></expr></argument>, <argument pos:start="83:20" pos:end="83:34"><expr pos:start="83:20" pos:end="83:34"><name pos:start="83:20" pos:end="83:34">ZPCI_PCI_LS_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:65"><expr pos:start="85:9" pos:end="85:64"><call pos:start="85:9" pos:end="85:64"><name pos:start="85:9" pos:end="85:28">s390_set_status_code</name><argument_list pos:start="85:29" pos:end="85:64">(<argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:32">env</name></expr></argument>, <argument pos:start="85:35" pos:end="85:36"><expr pos:start="85:35" pos:end="85:36"><name pos:start="85:35" pos:end="85:36">r1</name></expr></argument>, <argument pos:start="85:39" pos:end="85:63"><expr pos:start="85:39" pos:end="85:63"><name pos:start="85:39" pos:end="85:63">ZPCI_MOD_ST_ERROR_RECOVER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:17">return <expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>;</return>

    <default pos:start="89:5" pos:end="89:12">default:</default>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="97:5" pos:end="97:25"><expr pos:start="97:5" pos:end="97:24"><name pos:start="97:5" pos:end="97:9">iommu</name> <operator pos:start="97:11" pos:end="97:11">=</operator> <name pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:17">pbdev</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:24">iommu</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="113:5"><if pos:start="99:5" pos:end="113:5">if <condition pos:start="99:8" pos:end="99:23">(<expr pos:start="99:9" pos:end="99:22"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:22"><name pos:start="99:10" pos:end="99:14">iommu</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:22">g_iota</name></name></expr>)</condition> <block pos:start="99:25" pos:end="113:5">{<block_content pos:start="101:9" pos:end="111:17">

        <expr_stmt pos:start="101:9" pos:end="101:37"><expr pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:13">pbdev</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:20">state</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:36">ZPCI_FS_ERROR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:36"><expr pos:start="103:9" pos:end="103:35"><call pos:start="103:9" pos:end="103:35"><name pos:start="103:9" pos:end="103:13">setcc</name><argument_list pos:start="103:14" pos:end="103:35">(<argument pos:start="103:15" pos:end="103:17"><expr pos:start="103:15" pos:end="103:17"><name pos:start="103:15" pos:end="103:17">cpu</name></expr></argument>, <argument pos:start="103:20" pos:end="103:34"><expr pos:start="103:20" pos:end="103:34"><name pos:start="103:20" pos:end="103:34">ZPCI_PCI_LS_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:61"><expr pos:start="105:9" pos:end="105:60"><call pos:start="105:9" pos:end="105:60"><name pos:start="105:9" pos:end="105:28">s390_set_status_code</name><argument_list pos:start="105:29" pos:end="105:60">(<argument pos:start="105:30" pos:end="105:32"><expr pos:start="105:30" pos:end="105:32"><name pos:start="105:30" pos:end="105:32">env</name></expr></argument>, <argument pos:start="105:35" pos:end="105:36"><expr pos:start="105:35" pos:end="105:36"><name pos:start="105:35" pos:end="105:36">r1</name></expr></argument>, <argument pos:start="105:39" pos:end="105:59"><expr pos:start="105:39" pos:end="105:59"><name pos:start="105:39" pos:end="105:59">ZPCI_PCI_ST_INSUF_RES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="109:48"><expr pos:start="107:9" pos:end="109:47"><call pos:start="107:9" pos:end="109:47"><name pos:start="107:9" pos:end="107:37">s390_pci_generate_error_event</name><argument_list pos:start="107:38" pos:end="109:47">(<argument pos:start="107:39" pos:end="107:55"><expr pos:start="107:39" pos:end="107:55"><name pos:start="107:39" pos:end="107:55">ERR_EVENT_INVALAS</name></expr></argument>, <argument pos:start="107:58" pos:end="107:66"><expr pos:start="107:58" pos:end="107:66"><name pos:start="107:58" pos:end="107:66"><name pos:start="107:58" pos:end="107:62">pbdev</name><operator pos:start="107:63" pos:end="107:64">-&gt;</operator><name pos:start="107:65" pos:end="107:66">fh</name></name></expr></argument>, <argument pos:start="107:69" pos:end="107:78"><expr pos:start="107:69" pos:end="107:78"><name pos:start="107:69" pos:end="107:78"><name pos:start="107:69" pos:end="107:73">pbdev</name><operator pos:start="107:74" pos:end="107:75">-&gt;</operator><name pos:start="107:76" pos:end="107:78">fid</name></name></expr></argument>,

                                      <argument pos:start="109:39" pos:end="109:43"><expr pos:start="109:39" pos:end="109:43"><name pos:start="109:39" pos:end="109:43">start</name></expr></argument>, <argument pos:start="109:46" pos:end="109:46"><expr pos:start="109:46" pos:end="109:46"><literal type="number" pos:start="109:46" pos:end="109:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:17">goto <name pos:start="111:14" pos:end="111:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="131:5"><if pos:start="117:5" pos:end="131:5">if <condition pos:start="117:8" pos:end="117:47">(<expr pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:11">end</name> <argument_list type="generic" pos:start="117:13" pos:end="117:35">&lt; <argument pos:start="117:15" pos:end="117:33"><expr pos:start="117:15" pos:end="117:33"><name pos:start="117:15" pos:end="117:24"><name pos:start="117:15" pos:end="117:19">iommu</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:24">pba</name></name> <operator pos:start="117:26" pos:end="117:27">||</operator> <name pos:start="117:29" pos:end="117:33">start</name></expr></argument> &gt;</argument_list></name> <name pos:start="117:37" pos:end="117:46"><name pos:start="117:37" pos:end="117:41">iommu</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:46">pal</name></name></expr>)</condition> <block pos:start="117:49" pos:end="131:5">{<block_content pos:start="119:9" pos:end="129:17">

        <expr_stmt pos:start="119:9" pos:end="119:37"><expr pos:start="119:9" pos:end="119:36"><name pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:13">pbdev</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:20">state</name></name> <operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:36">ZPCI_FS_ERROR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:36"><expr pos:start="121:9" pos:end="121:35"><call pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:13">setcc</name><argument_list pos:start="121:14" pos:end="121:35">(<argument pos:start="121:15" pos:end="121:17"><expr pos:start="121:15" pos:end="121:17"><name pos:start="121:15" pos:end="121:17">cpu</name></expr></argument>, <argument pos:start="121:20" pos:end="121:34"><expr pos:start="121:20" pos:end="121:34"><name pos:start="121:20" pos:end="121:34">ZPCI_PCI_LS_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:61"><expr pos:start="123:9" pos:end="123:60"><call pos:start="123:9" pos:end="123:60"><name pos:start="123:9" pos:end="123:28">s390_set_status_code</name><argument_list pos:start="123:29" pos:end="123:60">(<argument pos:start="123:30" pos:end="123:32"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:32">env</name></expr></argument>, <argument pos:start="123:35" pos:end="123:36"><expr pos:start="123:35" pos:end="123:36"><name pos:start="123:35" pos:end="123:36">r1</name></expr></argument>, <argument pos:start="123:39" pos:end="123:59"><expr pos:start="123:39" pos:end="123:59"><name pos:start="123:39" pos:end="123:59">ZPCI_PCI_ST_INSUF_RES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="127:48"><expr pos:start="125:9" pos:end="127:47"><call pos:start="125:9" pos:end="127:47"><name pos:start="125:9" pos:end="125:37">s390_pci_generate_error_event</name><argument_list pos:start="125:38" pos:end="127:47">(<argument pos:start="125:39" pos:end="125:55"><expr pos:start="125:39" pos:end="125:55"><name pos:start="125:39" pos:end="125:55">ERR_EVENT_OORANGE</name></expr></argument>, <argument pos:start="125:58" pos:end="125:66"><expr pos:start="125:58" pos:end="125:66"><name pos:start="125:58" pos:end="125:66"><name pos:start="125:58" pos:end="125:62">pbdev</name><operator pos:start="125:63" pos:end="125:64">-&gt;</operator><name pos:start="125:65" pos:end="125:66">fh</name></name></expr></argument>, <argument pos:start="125:69" pos:end="125:78"><expr pos:start="125:69" pos:end="125:78"><name pos:start="125:69" pos:end="125:78"><name pos:start="125:69" pos:end="125:73">pbdev</name><operator pos:start="125:74" pos:end="125:75">-&gt;</operator><name pos:start="125:76" pos:end="125:78">fid</name></name></expr></argument>,

                                      <argument pos:start="127:39" pos:end="127:43"><expr pos:start="127:39" pos:end="127:43"><name pos:start="127:39" pos:end="127:43">start</name></expr></argument>, <argument pos:start="127:46" pos:end="127:46"><expr pos:start="127:46" pos:end="127:46"><literal type="number" pos:start="127:46" pos:end="127:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="129:9" pos:end="129:17">goto <name pos:start="129:14" pos:end="129:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:26"><expr pos:start="135:5" pos:end="135:25"><name pos:start="135:5" pos:end="135:6">mr</name> <operator pos:start="135:8" pos:end="135:8">=</operator> <operator pos:start="135:10" pos:end="135:10">&amp;</operator><name pos:start="135:11" pos:end="135:25"><name pos:start="135:11" pos:end="135:15">iommu</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:25">iommu_mr</name></name></expr>;</expr_stmt>

    <while pos:start="137:5" pos:end="165:5">while <condition pos:start="137:11" pos:end="137:23">(<expr pos:start="137:12" pos:end="137:22"><name pos:start="137:12" pos:end="137:16">start</name> <operator pos:start="137:18" pos:end="137:18">&lt;</operator> <name pos:start="137:20" pos:end="137:22">end</name></expr>)</condition> <block pos:start="137:25" pos:end="165:5">{<block_content pos:start="139:9" pos:end="163:37">

        <expr_stmt pos:start="139:9" pos:end="139:55"><expr pos:start="139:9" pos:end="139:54"><name pos:start="139:9" pos:end="139:13">entry</name> <operator pos:start="139:15" pos:end="139:15">=</operator> <call pos:start="139:17" pos:end="139:54"><name pos:start="139:17" pos:end="139:40"><name pos:start="139:17" pos:end="139:18">mr</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:29">iommu_ops</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:40">translate</name></name><argument_list pos:start="139:41" pos:end="139:54">(<argument pos:start="139:42" pos:end="139:43"><expr pos:start="139:42" pos:end="139:43"><name pos:start="139:42" pos:end="139:43">mr</name></expr></argument>, <argument pos:start="139:46" pos:end="139:50"><expr pos:start="139:46" pos:end="139:50"><name pos:start="139:46" pos:end="139:50">start</name></expr></argument>, <argument pos:start="139:53" pos:end="139:53"><expr pos:start="139:53" pos:end="139:53"><literal type="number" pos:start="139:53" pos:end="139:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="143:9" pos:end="157:9"><if pos:start="143:9" pos:end="157:9">if <condition pos:start="143:12" pos:end="143:35">(<expr pos:start="143:13" pos:end="143:34"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:34"><name pos:start="143:14" pos:end="143:18">entry</name><operator pos:start="143:19" pos:end="143:19">.</operator><name pos:start="143:20" pos:end="143:34">translated_addr</name></name></expr>)</condition> <block pos:start="143:37" pos:end="157:9">{<block_content pos:start="145:13" pos:end="155:21">

            <expr_stmt pos:start="145:13" pos:end="145:41"><expr pos:start="145:13" pos:end="145:40"><name pos:start="145:13" pos:end="145:24"><name pos:start="145:13" pos:end="145:17">pbdev</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:24">state</name></name> <operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:40">ZPCI_FS_ERROR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:40"><expr pos:start="147:13" pos:end="147:39"><call pos:start="147:13" pos:end="147:39"><name pos:start="147:13" pos:end="147:17">setcc</name><argument_list pos:start="147:18" pos:end="147:39">(<argument pos:start="147:19" pos:end="147:21"><expr pos:start="147:19" pos:end="147:21"><name pos:start="147:19" pos:end="147:21">cpu</name></expr></argument>, <argument pos:start="147:24" pos:end="147:38"><expr pos:start="147:24" pos:end="147:38"><name pos:start="147:24" pos:end="147:38">ZPCI_PCI_LS_ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:65"><expr pos:start="149:13" pos:end="149:64"><call pos:start="149:13" pos:end="149:64"><name pos:start="149:13" pos:end="149:32">s390_set_status_code</name><argument_list pos:start="149:33" pos:end="149:64">(<argument pos:start="149:34" pos:end="149:36"><expr pos:start="149:34" pos:end="149:36"><name pos:start="149:34" pos:end="149:36">env</name></expr></argument>, <argument pos:start="149:39" pos:end="149:40"><expr pos:start="149:39" pos:end="149:40"><name pos:start="149:39" pos:end="149:40">r1</name></expr></argument>, <argument pos:start="149:43" pos:end="149:63"><expr pos:start="149:43" pos:end="149:63"><name pos:start="149:43" pos:end="149:63">ZPCI_PCI_ST_INSUF_RES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="153:66"><expr pos:start="151:13" pos:end="153:65"><call pos:start="151:13" pos:end="153:65"><name pos:start="151:13" pos:end="151:41">s390_pci_generate_error_event</name><argument_list pos:start="151:42" pos:end="153:65">(<argument pos:start="151:43" pos:end="151:56"><expr pos:start="151:43" pos:end="151:56"><name pos:start="151:43" pos:end="151:56">ERR_EVENT_SERR</name></expr></argument>, <argument pos:start="151:59" pos:end="151:67"><expr pos:start="151:59" pos:end="151:67"><name pos:start="151:59" pos:end="151:67"><name pos:start="151:59" pos:end="151:63">pbdev</name><operator pos:start="151:64" pos:end="151:65">-&gt;</operator><name pos:start="151:66" pos:end="151:67">fh</name></name></expr></argument>, <argument pos:start="151:70" pos:end="151:79"><expr pos:start="151:70" pos:end="151:79"><name pos:start="151:70" pos:end="151:79"><name pos:start="151:70" pos:end="151:74">pbdev</name><operator pos:start="151:75" pos:end="151:76">-&gt;</operator><name pos:start="151:77" pos:end="151:79">fid</name></name></expr></argument>,

                                          <argument pos:start="153:43" pos:end="153:47"><expr pos:start="153:43" pos:end="153:47"><name pos:start="153:43" pos:end="153:47">start</name></expr></argument>, <argument pos:start="153:50" pos:end="153:64"><expr pos:start="153:50" pos:end="153:64"><name pos:start="153:50" pos:end="153:64">ERR_EVENT_Q_BIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="155:13" pos:end="155:21">goto <name pos:start="155:18" pos:end="155:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:46"><expr pos:start="161:9" pos:end="161:45"><call pos:start="161:9" pos:end="161:45"><name pos:start="161:9" pos:end="161:34">memory_region_notify_iommu</name><argument_list pos:start="161:35" pos:end="161:45">(<argument pos:start="161:36" pos:end="161:37"><expr pos:start="161:36" pos:end="161:37"><name pos:start="161:36" pos:end="161:37">mr</name></expr></argument>, <argument pos:start="161:40" pos:end="161:44"><expr pos:start="161:40" pos:end="161:44"><name pos:start="161:40" pos:end="161:44">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:37"><expr pos:start="163:9" pos:end="163:36"><name pos:start="163:9" pos:end="163:13">start</name> <operator pos:start="163:15" pos:end="163:16">+=</operator> <name pos:start="163:18" pos:end="163:32"><name pos:start="163:18" pos:end="163:22">entry</name><operator pos:start="163:23" pos:end="163:23">.</operator><name pos:start="163:24" pos:end="163:32">addr_mask</name></name> <operator pos:start="163:34" pos:end="163:34">+</operator> <literal type="number" pos:start="163:36" pos:end="163:36">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="169:5" pos:end="169:31"><expr pos:start="169:5" pos:end="169:30"><call pos:start="169:5" pos:end="169:30"><name pos:start="169:5" pos:end="169:9">setcc</name><argument_list pos:start="169:10" pos:end="169:30">(<argument pos:start="169:11" pos:end="169:13"><expr pos:start="169:11" pos:end="169:13"><name pos:start="169:11" pos:end="169:13">cpu</name></expr></argument>, <argument pos:start="169:16" pos:end="169:29"><expr pos:start="169:16" pos:end="169:29"><name pos:start="169:16" pos:end="169:29">ZPCI_PCI_LS_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="171:1" pos:end="171:4"><name pos:start="171:1" pos:end="171:3">out</name>:</label>

    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
