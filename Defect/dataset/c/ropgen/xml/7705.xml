<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7705.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:18">glfs</name></name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:42">qemu_gluster_glfs_init</name><parameter_list pos:start="1:43" pos:end="3:56">(<parameter pos:start="1:44" pos:end="1:72"><decl pos:start="1:44" pos:end="1:72"><type pos:start="1:44" pos:end="1:72"><name pos:start="1:44" pos:end="1:65">BlockdevOptionsGluster</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">gconf</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:55"><decl pos:start="3:44" pos:end="3:55"><type pos:start="3:44" pos:end="3:55"><name pos:start="3:44" pos:end="3:48">Error</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier><modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:16">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:15">glfs</name></name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">glfs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">old_errno</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">GlusterServerList</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:29">server</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:8">glfs</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:19">glfs_new</name><argument_list pos:start="17:20" pos:end="17:34">(<argument pos:start="17:21" pos:end="17:33"><expr pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:25">gconf</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:33">volume</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:14">(<expr pos:start="19:9" pos:end="19:13"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:13">glfs</name></expr>)</condition> <block pos:start="19:16" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="27:5" pos:end="57:5">for <control pos:start="27:9" pos:end="27:63">(<init pos:start="27:10" pos:end="27:32"><expr pos:start="27:10" pos:end="27:31"><name pos:start="27:10" pos:end="27:15">server</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:31"><name pos:start="27:19" pos:end="27:23">gconf</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:31">server</name></name></expr>;</init> <condition pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:39">server</name></expr>;</condition> <incr pos:start="27:42" pos:end="27:62"><expr pos:start="27:42" pos:end="27:62"><name pos:start="27:42" pos:end="27:47">server</name> <operator pos:start="27:49" pos:end="27:49">=</operator> <name pos:start="27:51" pos:end="27:62"><name pos:start="27:51" pos:end="27:56">server</name><operator pos:start="27:57" pos:end="27:58">-&gt;</operator><name pos:start="27:59" pos:end="27:62">next</name></name></expr></incr>)</control> <block pos:start="27:65" pos:end="57:5">{<block_content pos:start="29:9" pos:end="55:9">

        <if_stmt pos:start="29:9" pos:end="47:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:59">(<expr pos:start="29:13" pos:end="29:58"><name pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:18">server</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:25">value</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:31">type</name></name>  <operator pos:start="29:34" pos:end="29:35">==</operator> <name pos:start="29:37" pos:end="29:58">GLUSTER_TRANSPORT_UNIX</name></expr>)</condition> <block pos:start="29:61" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:68">

            <expr_stmt pos:start="31:13" pos:end="35:68"><expr pos:start="31:13" pos:end="35:67"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="35:67"><name pos:start="31:19" pos:end="31:41">glfs_set_volfile_server</name><argument_list pos:start="31:42" pos:end="35:67">(<argument pos:start="31:43" pos:end="31:46"><expr pos:start="31:43" pos:end="31:46"><name pos:start="31:43" pos:end="31:46">glfs</name></expr></argument>,

                                   <argument pos:start="33:36" pos:end="33:79"><expr pos:start="33:36" pos:end="33:79"><name pos:start="33:36" pos:end="33:79"><name pos:start="33:36" pos:end="33:58">GlusterTransport_lookup</name><index pos:start="33:59" pos:end="33:79">[<expr pos:start="33:60" pos:end="33:78"><name pos:start="33:60" pos:end="33:78"><name pos:start="33:60" pos:end="33:65">server</name><operator pos:start="33:66" pos:end="33:67">-&gt;</operator><name pos:start="33:68" pos:end="33:72">value</name><operator pos:start="33:73" pos:end="33:74">-&gt;</operator><name pos:start="33:75" pos:end="33:78">type</name></name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="35:36" pos:end="35:63"><expr pos:start="35:36" pos:end="35:63"><name pos:start="35:36" pos:end="35:63"><name pos:start="35:36" pos:end="35:41">server</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:48">value</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:51">u</name><operator pos:start="35:52" pos:end="35:52">.</operator><name pos:start="35:53" pos:end="35:58">q_unix</name><operator pos:start="35:59" pos:end="35:59">.</operator><name pos:start="35:60" pos:end="35:63">path</name></name></expr></argument>, <argument pos:start="35:66" pos:end="35:66"><expr pos:start="35:66" pos:end="35:66"><literal type="number" pos:start="35:66" pos:end="35:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="47:9">else <block pos:start="37:16" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:68">

            <expr_stmt pos:start="39:13" pos:end="45:68"><expr pos:start="39:13" pos:end="45:67"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="45:67"><name pos:start="39:19" pos:end="39:41">glfs_set_volfile_server</name><argument_list pos:start="39:42" pos:end="45:67">(<argument pos:start="39:43" pos:end="39:46"><expr pos:start="39:43" pos:end="39:46"><name pos:start="39:43" pos:end="39:46">glfs</name></expr></argument>,

                                   <argument pos:start="41:36" pos:end="41:79"><expr pos:start="41:36" pos:end="41:79"><name pos:start="41:36" pos:end="41:79"><name pos:start="41:36" pos:end="41:58">GlusterTransport_lookup</name><index pos:start="41:59" pos:end="41:79">[<expr pos:start="41:60" pos:end="41:78"><name pos:start="41:60" pos:end="41:78"><name pos:start="41:60" pos:end="41:65">server</name><operator pos:start="41:66" pos:end="41:67">-&gt;</operator><name pos:start="41:68" pos:end="41:72">value</name><operator pos:start="41:73" pos:end="41:74">-&gt;</operator><name pos:start="41:75" pos:end="41:78">type</name></name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="43:36" pos:end="43:60"><expr pos:start="43:36" pos:end="43:60"><name pos:start="43:36" pos:end="43:60"><name pos:start="43:36" pos:end="43:41">server</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:48">value</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:51">u</name><operator pos:start="43:52" pos:end="43:52">.</operator><name pos:start="43:53" pos:end="43:55">tcp</name><operator pos:start="43:56" pos:end="43:56">.</operator><name pos:start="43:57" pos:end="43:60">host</name></name></expr></argument>,

                                   <argument pos:start="45:36" pos:end="45:66"><expr pos:start="45:36" pos:end="45:66"><call pos:start="45:36" pos:end="45:66"><name pos:start="45:36" pos:end="45:39">atoi</name><argument_list pos:start="45:40" pos:end="45:66">(<argument pos:start="45:41" pos:end="45:65"><expr pos:start="45:41" pos:end="45:65"><name pos:start="45:41" pos:end="45:65"><name pos:start="45:41" pos:end="45:46">server</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:53">value</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:56">u</name><operator pos:start="45:57" pos:end="45:57">.</operator><name pos:start="45:58" pos:end="45:60">tcp</name><operator pos:start="45:61" pos:end="45:61">.</operator><name pos:start="45:62" pos:end="45:65">port</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition> <block pos:start="51:22" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:21">

            <goto pos:start="53:13" pos:end="53:21">goto <name pos:start="53:18" pos:end="53:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:58"><expr pos:start="61:5" pos:end="61:57"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:57"><name pos:start="61:11" pos:end="61:26">glfs_set_logging</name><argument_list pos:start="61:27" pos:end="61:57">(<argument pos:start="61:28" pos:end="61:31"><expr pos:start="61:28" pos:end="61:31"><name pos:start="61:28" pos:end="61:31">glfs</name></expr></argument>, <argument pos:start="61:34" pos:end="61:36"><expr pos:start="61:34" pos:end="61:36"><literal type="string" pos:start="61:34" pos:end="61:36">"-"</literal></expr></argument>, <argument pos:start="61:39" pos:end="61:56"><expr pos:start="61:39" pos:end="61:56"><name pos:start="61:39" pos:end="61:56"><name pos:start="61:39" pos:end="61:43">gconf</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:56">debug_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">&lt;</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition> <block pos:start="63:18" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:17">

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:25"><name pos:start="71:11" pos:end="71:19">glfs_init</name><argument_list pos:start="71:20" pos:end="71:25">(<argument pos:start="71:21" pos:end="71:24"><expr pos:start="71:21" pos:end="71:24"><name pos:start="71:21" pos:end="71:24">glfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="117:5"><if pos:start="73:5" pos:end="117:5">if <condition pos:start="73:8" pos:end="73:12">(<expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">ret</name></expr>)</condition> <block pos:start="73:14" pos:end="117:5">{<block_content pos:start="75:9" pos:end="115:17">

        <expr_stmt pos:start="75:9" pos:end="77:68"><expr pos:start="75:9" pos:end="77:67"><call pos:start="75:9" pos:end="77:67"><name pos:start="75:9" pos:end="75:18">error_setg</name><argument_list pos:start="75:19" pos:end="77:67">(<argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">errp</name></expr></argument>, <argument pos:start="75:26" pos:end="77:38"><expr pos:start="75:26" pos:end="77:38"><literal type="string" pos:start="75:26" pos:end="75:75">"Gluster connection for volume %s, path %s failed"</literal>

                         <literal type="string" pos:start="77:26" pos:end="77:38">" to connect"</literal></expr></argument>, <argument pos:start="77:41" pos:end="77:53"><expr pos:start="77:41" pos:end="77:53"><name pos:start="77:41" pos:end="77:53"><name pos:start="77:41" pos:end="77:45">gconf</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:53">volume</name></name></expr></argument>, <argument pos:start="77:56" pos:end="77:66"><expr pos:start="77:56" pos:end="77:66"><name pos:start="77:56" pos:end="77:66"><name pos:start="77:56" pos:end="77:60">gconf</name><operator pos:start="77:61" pos:end="77:62">-&gt;</operator><name pos:start="77:63" pos:end="77:66">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="79:9" pos:end="97:9">for <control pos:start="79:13" pos:end="79:67">(<init pos:start="79:14" pos:end="79:36"><expr pos:start="79:14" pos:end="79:35"><name pos:start="79:14" pos:end="79:19">server</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:35"><name pos:start="79:23" pos:end="79:27">gconf</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:35">server</name></name></expr>;</init> <condition pos:start="79:38" pos:end="79:44"><expr pos:start="79:38" pos:end="79:43"><name pos:start="79:38" pos:end="79:43">server</name></expr>;</condition> <incr pos:start="79:46" pos:end="79:66"><expr pos:start="79:46" pos:end="79:66"><name pos:start="79:46" pos:end="79:51">server</name> <operator pos:start="79:53" pos:end="79:53">=</operator> <name pos:start="79:55" pos:end="79:66"><name pos:start="79:55" pos:end="79:60">server</name><operator pos:start="79:61" pos:end="79:62">-&gt;</operator><name pos:start="79:63" pos:end="79:66">next</name></name></expr></incr>)</control> <block pos:start="79:69" pos:end="97:9">{<block_content pos:start="81:13" pos:end="95:13">

            <if_stmt pos:start="81:13" pos:end="95:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:63">(<expr pos:start="81:17" pos:end="81:62"><name pos:start="81:17" pos:end="81:35"><name pos:start="81:17" pos:end="81:22">server</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:29">value</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:35">type</name></name>  <operator pos:start="81:38" pos:end="81:39">==</operator> <name pos:start="81:41" pos:end="81:62">GLUSTER_TRANSPORT_UNIX</name></expr>)</condition> <block pos:start="81:65" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:64">

                <expr_stmt pos:start="83:17" pos:end="85:64"><expr pos:start="83:17" pos:end="85:63"><call pos:start="83:17" pos:end="85:63"><name pos:start="83:17" pos:end="83:33">error_append_hint</name><argument_list pos:start="83:34" pos:end="85:63">(<argument pos:start="83:35" pos:end="83:38"><expr pos:start="83:35" pos:end="83:38"><name pos:start="83:35" pos:end="83:38">errp</name></expr></argument>, <argument pos:start="83:41" pos:end="83:68"><expr pos:start="83:41" pos:end="83:68"><literal type="string" pos:start="83:41" pos:end="83:68">"hint: failed on socket %s "</literal></expr></argument>,

                                  <argument pos:start="85:35" pos:end="85:62"><expr pos:start="85:35" pos:end="85:62"><name pos:start="85:35" pos:end="85:62"><name pos:start="85:35" pos:end="85:40">server</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:47">value</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:50">u</name><operator pos:start="85:51" pos:end="85:51">.</operator><name pos:start="85:52" pos:end="85:57">q_unix</name><operator pos:start="85:58" pos:end="85:58">.</operator><name pos:start="85:59" pos:end="85:62">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="87:15" pos:end="95:13">else <block pos:start="87:20" pos:end="95:13">{<block_content pos:start="89:17" pos:end="93:61">

                <expr_stmt pos:start="89:17" pos:end="93:61"><expr pos:start="89:17" pos:end="93:60"><call pos:start="89:17" pos:end="93:60"><name pos:start="89:17" pos:end="89:33">error_append_hint</name><argument_list pos:start="89:34" pos:end="93:60">(<argument pos:start="89:35" pos:end="89:38"><expr pos:start="89:35" pos:end="89:38"><name pos:start="89:35" pos:end="89:38">errp</name></expr></argument>, <argument pos:start="89:41" pos:end="89:78"><expr pos:start="89:41" pos:end="89:78"><literal type="string" pos:start="89:41" pos:end="89:78">"hint: failed on host %s and port %s "</literal></expr></argument>,

                                  <argument pos:start="91:35" pos:end="91:59"><expr pos:start="91:35" pos:end="91:59"><name pos:start="91:35" pos:end="91:59"><name pos:start="91:35" pos:end="91:40">server</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:47">value</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:50">u</name><operator pos:start="91:51" pos:end="91:51">.</operator><name pos:start="91:52" pos:end="91:54">tcp</name><operator pos:start="91:55" pos:end="91:55">.</operator><name pos:start="91:56" pos:end="91:59">host</name></name></expr></argument>,

                                  <argument pos:start="93:35" pos:end="93:59"><expr pos:start="93:35" pos:end="93:59"><name pos:start="93:35" pos:end="93:59"><name pos:start="93:35" pos:end="93:40">server</name><operator pos:start="93:41" pos:end="93:42">-&gt;</operator><name pos:start="93:43" pos:end="93:47">value</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:50">u</name><operator pos:start="93:51" pos:end="93:51">.</operator><name pos:start="93:52" pos:end="93:54">tcp</name><operator pos:start="93:55" pos:end="93:55">.</operator><name pos:start="93:56" pos:end="93:59">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="101:9" pos:end="101:80"><expr pos:start="101:9" pos:end="101:79"><call pos:start="101:9" pos:end="101:79"><name pos:start="101:9" pos:end="101:25">error_append_hint</name><argument_list pos:start="101:26" pos:end="101:79">(<argument pos:start="101:27" pos:end="101:30"><expr pos:start="101:27" pos:end="101:30"><name pos:start="101:27" pos:end="101:30">errp</name></expr></argument>, <argument pos:start="101:33" pos:end="101:78"><expr pos:start="101:33" pos:end="101:78"><literal type="string" pos:start="101:33" pos:end="101:78">"Please refer to gluster logs for more info\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="105:9" pos:end="105:78">/* glfs_init sometimes doesn't set errno although docs suggest that */</comment>

        <if_stmt pos:start="107:9" pos:end="111:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:23">(<expr pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:17">errno</name> <operator pos:start="107:19" pos:end="107:20">==</operator> <literal type="number" pos:start="107:22" pos:end="107:22">0</literal></expr>)</condition> <block pos:start="107:25" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:27">

            <expr_stmt pos:start="109:13" pos:end="109:27"><expr pos:start="109:13" pos:end="109:26"><name pos:start="109:13" pos:end="109:17">errno</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:26">EINVAL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <goto pos:start="115:9" pos:end="115:17">goto <name pos:start="115:14" pos:end="115:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <return pos:start="119:5" pos:end="119:16">return <expr pos:start="119:12" pos:end="119:15"><name pos:start="119:12" pos:end="119:15">glfs</name></expr>;</return>



<label pos:start="123:1" pos:end="123:4"><name pos:start="123:1" pos:end="123:3">out</name>:</label>

    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if <condition pos:start="125:8" pos:end="125:13">(<expr pos:start="125:9" pos:end="125:12"><name pos:start="125:9" pos:end="125:12">glfs</name></expr>)</condition> <block pos:start="125:15" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:26">

        <expr_stmt pos:start="127:9" pos:end="127:26"><expr pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:17">old_errno</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:25">errno</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:24"><expr pos:start="129:9" pos:end="129:23"><call pos:start="129:9" pos:end="129:23"><name pos:start="129:9" pos:end="129:17">glfs_fini</name><argument_list pos:start="129:18" pos:end="129:23">(<argument pos:start="129:19" pos:end="129:22"><expr pos:start="129:19" pos:end="129:22"><name pos:start="129:19" pos:end="129:22">glfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:26"><expr pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:13">errno</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <name pos:start="131:17" pos:end="131:25">old_errno</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="135:5" pos:end="135:16">return <expr pos:start="135:12" pos:end="135:15"><name pos:start="135:12" pos:end="135:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
