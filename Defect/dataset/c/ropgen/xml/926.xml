<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/926.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">inc_refcounts</name><parameter_list pos:start="1:25" pos:end="7:55">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:50"><decl pos:start="3:27" pos:end="3:50"><type pos:start="3:27" pos:end="3:50"><name pos:start="3:27" pos:end="3:34">uint16_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:50">refcount_table</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:49"><decl pos:start="5:27" pos:end="5:49"><type pos:start="5:27" pos:end="5:49"><name pos:start="5:27" pos:end="5:29">int</name></type> <name pos:start="5:31" pos:end="5:49">refcount_table_size</name></decl></parameter>,

                          <parameter pos:start="7:27" pos:end="7:40"><decl pos:start="7:27" pos:end="7:40"><type pos:start="7:27" pos:end="7:40"><name pos:start="7:27" pos:end="7:33">int64_t</name></type> <name pos:start="7:35" pos:end="7:40">offset</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:54"><decl pos:start="7:43" pos:end="7:54"><type pos:start="7:43" pos:end="7:54"><name pos:start="7:43" pos:end="7:49">int64_t</name></type> <name pos:start="7:51" pos:end="7:54">size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="65:1">{<block_content pos:start="11:5" pos:end="63:18">

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">BDRVQcowState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:33">= <expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:25">bs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:17">start</name></decl>, <decl pos:start="13:20" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:20" pos:end="13:23">last</name></decl>, <decl pos:start="13:26" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:26" pos:end="13:39">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">errors</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:12">size</name> <operator pos:start="21:14" pos:end="21:15">&lt;=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:9">start</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:18">offset</name> <operator pos:start="27:20" pos:end="27:20">&amp;</operator> <operator pos:start="27:22" pos:end="27:22">~</operator><operator pos:start="27:23" pos:end="27:23">(</operator><name pos:start="27:24" pos:end="27:38"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:38">cluster_size</name></name> <operator pos:start="27:40" pos:end="27:40">-</operator> <literal type="number" pos:start="27:42" pos:end="27:42">1</literal><operator pos:start="27:43" pos:end="27:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:8">last</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <operator pos:start="29:12" pos:end="29:12">(</operator><name pos:start="29:13" pos:end="29:18">offset</name> <operator pos:start="29:20" pos:end="29:20">+</operator> <name pos:start="29:22" pos:end="29:25">size</name> <operator pos:start="29:27" pos:end="29:27">-</operator> <literal type="number" pos:start="29:29" pos:end="29:29">1</literal><operator pos:start="29:30" pos:end="29:30">)</operator> <operator pos:start="29:32" pos:end="29:32">&amp;</operator> <operator pos:start="29:34" pos:end="29:34">~</operator><operator pos:start="29:35" pos:end="29:35">(</operator><name pos:start="29:36" pos:end="29:50"><name pos:start="29:36" pos:end="29:36">s</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:50">cluster_size</name></name> <operator pos:start="29:52" pos:end="29:52">-</operator> <literal type="number" pos:start="29:54" pos:end="29:54">1</literal><operator pos:start="29:55" pos:end="29:55">)</operator></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="59:5">for<control pos:start="31:8" pos:end="33:42">(<init pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:22">cluster_offset</name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:30">start</name></expr>;</init> <condition pos:start="31:33" pos:end="31:55"><expr pos:start="31:33" pos:end="31:54"><name pos:start="31:33" pos:end="31:46">cluster_offset</name> <operator pos:start="31:48" pos:end="31:49">&lt;=</operator> <name pos:start="31:51" pos:end="31:54">last</name></expr>;</condition>

        <incr pos:start="33:9" pos:end="33:41"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:22">cluster_offset</name> <operator pos:start="33:24" pos:end="33:25">+=</operator> <name pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:41">cluster_size</name></name></expr></incr>)</control> <block pos:start="33:44" pos:end="59:5">{<block_content pos:start="35:9" pos:end="57:9">

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:9">k</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <name pos:start="35:13" pos:end="35:26">cluster_offset</name> <operator pos:start="35:28" pos:end="35:29">&gt;&gt;</operator> <name pos:start="35:31" pos:end="35:45"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:45">cluster_bits</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="57:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:46">(<expr pos:start="37:13" pos:end="37:45"><name pos:start="37:13" pos:end="37:13">k</name> <operator pos:start="37:15" pos:end="37:15">&lt;</operator> <literal type="number" pos:start="37:17" pos:end="37:17">0</literal> <operator pos:start="37:19" pos:end="37:20">||</operator> <name pos:start="37:22" pos:end="37:22">k</name> <operator pos:start="37:24" pos:end="37:25">&gt;=</operator> <name pos:start="37:27" pos:end="37:45">refcount_table_size</name></expr>)</condition> <block pos:start="37:48" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:21">

            <expr_stmt pos:start="39:13" pos:end="41:32"><expr pos:start="39:13" pos:end="41:31"><call pos:start="39:13" pos:end="41:31"><name pos:start="39:13" pos:end="39:19">fprintf</name><argument_list pos:start="39:20" pos:end="41:31">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">stderr</name></expr></argument>, <argument pos:start="39:29" pos:end="39:75"><expr pos:start="39:29" pos:end="39:75"><literal type="string" pos:start="39:29" pos:end="39:63">"ERROR: invalid cluster offset=0x%"</literal> <name pos:start="39:65" pos:end="39:70">PRIx64</name> <literal type="string" pos:start="39:72" pos:end="39:75">"\n"</literal></expr></argument>,

                <argument pos:start="41:17" pos:end="41:30"><expr pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:30">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:21"><expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:18">errors</name><operator pos:start="43:19" pos:end="43:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="57:9">else <block pos:start="45:16" pos:end="57:9">{<block_content pos:start="47:13" pos:end="55:13">

            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="55:13">if <condition pos:start="47:16" pos:end="47:41">(<expr pos:start="47:17" pos:end="47:40"><operator pos:start="47:17" pos:end="47:18">++</operator><name pos:start="47:19" pos:end="47:35"><name pos:start="47:19" pos:end="47:32">refcount_table</name><index pos:start="47:33" pos:end="47:35">[<expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">k</name></expr>]</index></name> <operator pos:start="47:37" pos:end="47:38">==</operator> <literal type="number" pos:start="47:40" pos:end="47:40">0</literal></expr>)</condition> <block pos:start="47:43" pos:end="55:13">{<block_content pos:start="49:17" pos:end="53:25">

                <expr_stmt pos:start="49:17" pos:end="51:42"><expr pos:start="49:17" pos:end="51:41"><call pos:start="49:17" pos:end="51:41"><name pos:start="49:17" pos:end="49:23">fprintf</name><argument_list pos:start="49:24" pos:end="51:41">(<argument pos:start="49:25" pos:end="49:30"><expr pos:start="49:25" pos:end="49:30"><name pos:start="49:25" pos:end="49:30">stderr</name></expr></argument>, <argument pos:start="49:33" pos:end="51:24"><expr pos:start="49:33" pos:end="51:24"><literal type="string" pos:start="49:33" pos:end="49:68">"ERROR: overflow cluster offset=0x%"</literal> <name pos:start="49:70" pos:end="49:75">PRIx64</name>

                    <literal type="string" pos:start="51:21" pos:end="51:24">"\n"</literal></expr></argument>, <argument pos:start="51:27" pos:end="51:40"><expr pos:start="51:27" pos:end="51:40"><name pos:start="51:27" pos:end="51:40">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:22">errors</name><operator pos:start="53:23" pos:end="53:24">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="63:5" pos:end="63:18">return <expr pos:start="63:12" pos:end="63:17"><name pos:start="63:12" pos:end="63:17">errors</name></expr>;</return>

</block_content>}</block></function>
</unit>
