<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14159.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:48"><name pos:start="1:1" pos:end="1:19">dshow_cycle_formats</name><argument_list pos:start="1:20" pos:end="3:48">(<argument pos:start="1:21" pos:end="1:42">AVFormatContext *avctx</argument>, <argument pos:start="1:45" pos:end="1:72">enum dshowDeviceType devtype</argument>,

                    <argument pos:start="3:21" pos:end="3:29">IPin *pin</argument>, <argument pos:start="3:32" pos:end="3:47">int *pformat_set</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="281:1">{<block_content pos:start="7:5" pos:end="279:34">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">dshow_ctx</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">ctx</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:33">avctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">IAMStreamConfig</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:27">config</name> <init pos:start="9:29" pos:end="9:34">= <expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">AM_MEDIA_TYPE</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:23">type</name> <init pos:start="11:25" pos:end="11:30">= <expr pos:start="11:27" pos:end="11:30"><name pos:start="11:27" pos:end="11:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">format_set</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">void</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:14">caps</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">n</name></decl>, <decl pos:start="17:15" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:18">size</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:15"><if pos:start="21:5" pos:end="23:15">if <condition pos:start="21:8" pos:end="21:82">(<expr pos:start="21:9" pos:end="21:81"><call pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:27">IPin_QueryInterface</name><argument_list pos:start="21:28" pos:end="21:73">(<argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">pin</name></expr></argument>, <argument pos:start="21:34" pos:end="21:53"><expr pos:start="21:34" pos:end="21:53"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:53">IID_IAMStreamConfig</name></expr></argument>, <argument pos:start="21:56" pos:end="21:72"><expr pos:start="21:56" pos:end="21:72"><operator pos:start="21:56" pos:end="21:56">(</operator><name pos:start="21:57" pos:end="21:60">void</name> <operator pos:start="21:62" pos:end="21:62">*</operator><operator pos:start="21:63" pos:end="21:63">*</operator><operator pos:start="21:64" pos:end="21:64">)</operator> <operator pos:start="21:66" pos:end="21:66">&amp;</operator><name pos:start="21:67" pos:end="21:72">config</name></expr></argument>)</argument_list></call> <operator pos:start="21:75" pos:end="21:76">!=</operator> <name pos:start="21:78" pos:end="21:81">S_OK</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:15"><block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:75">(<expr pos:start="25:9" pos:end="25:74"><call pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:47">IAMStreamConfig_GetNumberOfCapabilities</name><argument_list pos:start="25:48" pos:end="25:66">(<argument pos:start="25:49" pos:end="25:54"><expr pos:start="25:49" pos:end="25:54"><name pos:start="25:49" pos:end="25:54">config</name></expr></argument>, <argument pos:start="25:57" pos:end="25:58"><expr pos:start="25:57" pos:end="25:58"><operator pos:start="25:57" pos:end="25:57">&amp;</operator><name pos:start="25:58" pos:end="25:58">n</name></expr></argument>, <argument pos:start="25:61" pos:end="25:65"><expr pos:start="25:61" pos:end="25:65"><operator pos:start="25:61" pos:end="25:61">&amp;</operator><name pos:start="25:62" pos:end="25:65">size</name></expr></argument>)</argument_list></call> <operator pos:start="25:68" pos:end="25:69">!=</operator> <name pos:start="25:71" pos:end="25:74">S_OK</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <goto pos:start="27:9" pos:end="27:17">goto <name pos:start="27:14" pos:end="27:16">end</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:8">caps</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:26"><name pos:start="31:12" pos:end="31:20">av_malloc</name><argument_list pos:start="31:21" pos:end="31:26">(<argument pos:start="31:22" pos:end="31:25"><expr pos:start="31:22" pos:end="31:25"><name pos:start="31:22" pos:end="31:25">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:14">(<expr pos:start="33:9" pos:end="33:13"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:13">caps</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">end</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="39:5" pos:end="267:5">for <control pos:start="39:9" pos:end="39:42">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:37"><expr pos:start="39:17" pos:end="39:36"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:21">n</name> <operator pos:start="39:23" pos:end="39:24">&amp;&amp;</operator> <operator pos:start="39:26" pos:end="39:26">!</operator><name pos:start="39:27" pos:end="39:36">format_set</name></expr>;</condition> <incr pos:start="39:39" pos:end="39:41"><expr pos:start="39:39" pos:end="39:41"><name pos:start="39:39" pos:end="39:39">i</name><operator pos:start="39:40" pos:end="39:41">++</operator></expr></incr>)</control> <block pos:start="39:44" pos:end="267:5">{<block_content pos:start="41:9" pos:end="265:28">

        <expr_stmt pos:start="41:9" pos:end="46:0"><expr pos:start="41:9" pos:end="41:70"><call pos:start="41:9" pos:end="41:70"><name pos:start="41:9" pos:end="41:37">IAMStreamConfig_GetStreamCaps</name><argument_list pos:start="41:38" pos:end="41:70">(<argument pos:start="41:39" pos:end="41:44"><expr pos:start="41:39" pos:end="41:44"><name pos:start="41:39" pos:end="41:44">config</name></expr></argument>, <argument pos:start="41:47" pos:end="41:47"><expr pos:start="41:47" pos:end="41:47"><name pos:start="41:47" pos:end="41:47">i</name></expr></argument>, <argument pos:start="41:50" pos:end="41:54"><expr pos:start="41:50" pos:end="41:54"><operator pos:start="41:50" pos:end="41:50">&amp;</operator><name pos:start="41:51" pos:end="41:54">type</name></expr></argument>, <argument pos:start="41:57" pos:end="41:69"><expr pos:start="41:57" pos:end="41:69"><operator pos:start="41:57" pos:end="41:57">(</operator><name pos:start="41:58" pos:end="41:61">void</name> <operator pos:start="41:63" pos:end="41:63">*</operator><operator pos:start="41:64" pos:end="41:64">)</operator> <name pos:start="41:66" pos:end="41:69">caps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="45:1" pos:end="45:14">#<cpp:directive pos:start="45:2" pos:end="45:3">if</cpp:directive> <expr pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:14">DSHOWDEBUG</name></expr></cpp:if>

        <expr_stmt pos:start="47:9" pos:end="50:0"><expr pos:start="47:9" pos:end="47:36"><call pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:30">ff_print_AM_MEDIA_TYPE</name><argument_list pos:start="47:31" pos:end="47:36">(<argument pos:start="47:32" pos:end="47:35"><expr pos:start="47:32" pos:end="47:35"><name pos:start="47:32" pos:end="47:35">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="53:9" pos:end="251:9"><if pos:start="53:9" pos:end="181:9">if <condition pos:start="53:12" pos:end="53:35">(<expr pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:19">devtype</name> <operator pos:start="53:21" pos:end="53:22">==</operator> <name pos:start="53:24" pos:end="53:34">VideoDevice</name></expr>)</condition> <block pos:start="53:37" pos:end="181:9">{<block_content pos:start="55:13" pos:end="179:13">

            <decl_stmt pos:start="55:13" pos:end="55:51"><decl pos:start="55:13" pos:end="55:50"><type pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:36">VIDEO_STREAM_CONFIG_CAPS</name> <modifier pos:start="55:38" pos:end="55:38">*</modifier></type><name pos:start="55:39" pos:end="55:43">vcaps</name> <init pos:start="55:45" pos:end="55:50">= <expr pos:start="55:47" pos:end="55:50"><name pos:start="55:47" pos:end="55:50">caps</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:34"><decl pos:start="57:13" pos:end="57:33"><type pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:28">BITMAPINFOHEADER</name> <modifier pos:start="57:30" pos:end="57:30">*</modifier></type><name pos:start="57:31" pos:end="57:33">bih</name></decl>;</decl_stmt>

            <decl_stmt pos:start="59:13" pos:end="59:24"><decl pos:start="59:13" pos:end="59:23"><type pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:19">int64_t</name> <modifier pos:start="59:21" pos:end="59:21">*</modifier></type><name pos:start="59:22" pos:end="59:23">fr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="64:0"><decl pos:start="61:13" pos:end="61:85"><type pos:start="61:13" pos:end="61:35"><specifier pos:start="61:13" pos:end="61:17">const</specifier> <name pos:start="61:19" pos:end="61:28">AVCodecTag</name> <modifier pos:start="61:30" pos:end="61:30">*</modifier><specifier pos:start="61:31" pos:end="61:35">const</specifier></type> <name pos:start="61:37" pos:end="61:42"><name pos:start="61:37" pos:end="61:40">tags</name><index pos:start="61:41" pos:end="61:42">[]</index></name> <init pos:start="61:44" pos:end="61:85">= <expr pos:start="61:46" pos:end="61:85"><block pos:start="61:46" pos:end="61:85">{ <expr pos:start="61:48" pos:end="61:77"><call pos:start="61:48" pos:end="61:77"><name pos:start="61:48" pos:end="61:75">avformat_get_riff_video_tags</name><argument_list pos:start="61:76" pos:end="61:77">()</argument_list></call></expr>, <expr pos:start="61:80" pos:end="61:83"><name pos:start="61:80" pos:end="61:83">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="63:1" pos:end="63:14">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:14"><name pos:start="63:5" pos:end="63:14">DSHOWDEBUG</name></expr></cpp:if>

            <expr_stmt pos:start="65:13" pos:end="68:0"><expr pos:start="65:13" pos:end="65:52"><call pos:start="65:13" pos:end="65:52"><name pos:start="65:13" pos:end="65:45">ff_print_VIDEO_STREAM_CONFIG_CAPS</name><argument_list pos:start="65:46" pos:end="65:52">(<argument pos:start="65:47" pos:end="65:51"><expr pos:start="65:47" pos:end="65:51"><name pos:start="65:47" pos:end="65:51">vcaps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

            <if_stmt pos:start="69:13" pos:end="89:13"><if pos:start="69:13" pos:end="77:13">if <condition pos:start="69:16" pos:end="69:66">(<expr pos:start="69:17" pos:end="69:65"><call pos:start="69:17" pos:end="69:65"><name pos:start="69:17" pos:end="69:27">IsEqualGUID</name><argument_list pos:start="69:28" pos:end="69:65">(<argument pos:start="69:29" pos:end="69:45"><expr pos:start="69:29" pos:end="69:45"><operator pos:start="69:29" pos:end="69:29">&amp;</operator><name pos:start="69:30" pos:end="69:45"><name pos:start="69:30" pos:end="69:33">type</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:45">formattype</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:64"><expr pos:start="69:48" pos:end="69:64"><operator pos:start="69:48" pos:end="69:48">&amp;</operator><name pos:start="69:49" pos:end="69:64">FORMAT_VideoInfo</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:68" pos:end="77:13">{<block_content pos:start="71:17" pos:end="75:36">

                <decl_stmt pos:start="71:17" pos:end="71:61"><decl pos:start="71:17" pos:end="71:60"><type pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:31">VIDEOINFOHEADER</name> <modifier pos:start="71:33" pos:end="71:33">*</modifier></type><name pos:start="71:34" pos:end="71:34">v</name> <init pos:start="71:36" pos:end="71:60">= <expr pos:start="71:38" pos:end="71:60"><operator pos:start="71:38" pos:end="71:38">(</operator><name pos:start="71:39" pos:end="71:42">void</name> <operator pos:start="71:44" pos:end="71:44">*</operator><operator pos:start="71:45" pos:end="71:45">)</operator> <name pos:start="71:47" pos:end="71:60"><name pos:start="71:47" pos:end="71:50">type</name><operator pos:start="71:51" pos:end="71:52">-&gt;</operator><name pos:start="71:53" pos:end="71:60">pbFormat</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:41"><expr pos:start="73:17" pos:end="73:40"><name pos:start="73:17" pos:end="73:18">fr</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <operator pos:start="73:22" pos:end="73:22">&amp;</operator><name pos:start="73:23" pos:end="73:40"><name pos:start="73:23" pos:end="73:23">v</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:40">AvgTimePerFrame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:36"><expr pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:19">bih</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:35"><name pos:start="75:24" pos:end="75:24">v</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:35">bmiHeader</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="77:15" pos:end="85:13">else if <condition pos:start="77:23" pos:end="77:74">(<expr pos:start="77:24" pos:end="77:73"><call pos:start="77:24" pos:end="77:73"><name pos:start="77:24" pos:end="77:34">IsEqualGUID</name><argument_list pos:start="77:35" pos:end="77:73">(<argument pos:start="77:36" pos:end="77:52"><expr pos:start="77:36" pos:end="77:52"><operator pos:start="77:36" pos:end="77:36">&amp;</operator><name pos:start="77:37" pos:end="77:52"><name pos:start="77:37" pos:end="77:40">type</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:52">formattype</name></name></expr></argument>, <argument pos:start="77:55" pos:end="77:72"><expr pos:start="77:55" pos:end="77:72"><operator pos:start="77:55" pos:end="77:55">&amp;</operator><name pos:start="77:56" pos:end="77:72">FORMAT_VideoInfo2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:76" pos:end="85:13">{<block_content pos:start="79:17" pos:end="83:36">

                <decl_stmt pos:start="79:17" pos:end="79:62"><decl pos:start="79:17" pos:end="79:61"><type pos:start="79:17" pos:end="79:34"><name pos:start="79:17" pos:end="79:32">VIDEOINFOHEADER2</name> <modifier pos:start="79:34" pos:end="79:34">*</modifier></type><name pos:start="79:35" pos:end="79:35">v</name> <init pos:start="79:37" pos:end="79:61">= <expr pos:start="79:39" pos:end="79:61"><operator pos:start="79:39" pos:end="79:39">(</operator><name pos:start="79:40" pos:end="79:43">void</name> <operator pos:start="79:45" pos:end="79:45">*</operator><operator pos:start="79:46" pos:end="79:46">)</operator> <name pos:start="79:48" pos:end="79:61"><name pos:start="79:48" pos:end="79:51">type</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:61">pbFormat</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:41"><expr pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:18">fr</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:40"><name pos:start="81:23" pos:end="81:23">v</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:40">AvgTimePerFrame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:36"><expr pos:start="83:17" pos:end="83:35"><name pos:start="83:17" pos:end="83:19">bih</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <operator pos:start="83:23" pos:end="83:23">&amp;</operator><name pos:start="83:24" pos:end="83:35"><name pos:start="83:24" pos:end="83:24">v</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:35">bmiHeader</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="85:15" pos:end="89:13">else <block pos:start="85:20" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:26">

                <goto pos:start="87:17" pos:end="87:26">goto <name pos:start="87:22" pos:end="87:25">next</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="91:13" pos:end="129:13"><if pos:start="91:13" pos:end="129:13">if <condition pos:start="91:16" pos:end="91:29">(<expr pos:start="91:17" pos:end="91:28"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:28">pformat_set</name></expr>)</condition> <block pos:start="91:31" pos:end="129:13">{<block_content pos:start="93:17" pos:end="127:25">

                <decl_stmt pos:start="93:17" pos:end="93:95"><decl pos:start="93:17" pos:end="93:94"><type pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:34"><name pos:start="93:17" pos:end="93:20">enum</name> <name pos:start="93:22" pos:end="93:34">AVPixelFormat</name></name></type> <name pos:start="93:36" pos:end="93:42">pix_fmt</name> <init pos:start="93:44" pos:end="93:94">= <expr pos:start="93:46" pos:end="93:94"><call pos:start="93:46" pos:end="93:94"><name pos:start="93:46" pos:end="93:57">dshow_pixfmt</name><argument_list pos:start="93:58" pos:end="93:94">(<argument pos:start="93:59" pos:end="93:76"><expr pos:start="93:59" pos:end="93:76"><name pos:start="93:59" pos:end="93:76"><name pos:start="93:59" pos:end="93:61">bih</name><operator pos:start="93:62" pos:end="93:63">-&gt;</operator><name pos:start="93:64" pos:end="93:76">biCompression</name></name></expr></argument>, <argument pos:start="93:79" pos:end="93:93"><expr pos:start="93:79" pos:end="93:93"><name pos:start="93:79" pos:end="93:93"><name pos:start="93:79" pos:end="93:81">bih</name><operator pos:start="93:82" pos:end="93:83">-&gt;</operator><name pos:start="93:84" pos:end="93:93">biBitCount</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="95:17" pos:end="115:17"><if pos:start="95:17" pos:end="111:17">if <condition pos:start="95:20" pos:end="95:47">(<expr pos:start="95:21" pos:end="95:46"><name pos:start="95:21" pos:end="95:27">pix_fmt</name> <operator pos:start="95:29" pos:end="95:30">==</operator> <name pos:start="95:32" pos:end="95:46">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="95:49" pos:end="111:17">{<block_content pos:start="97:21" pos:end="109:21">

                    <decl_stmt pos:start="97:21" pos:end="97:88"><decl pos:start="97:21" pos:end="97:87"><type pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:24">enum</name> <name pos:start="97:26" pos:end="97:34">AVCodecID</name></name></type> <name pos:start="97:36" pos:end="97:43">codec_id</name> <init pos:start="97:45" pos:end="97:87">= <expr pos:start="97:47" pos:end="97:87"><call pos:start="97:47" pos:end="97:87"><name pos:start="97:47" pos:end="97:61">av_codec_get_id</name><argument_list pos:start="97:62" pos:end="97:87">(<argument pos:start="97:63" pos:end="97:66"><expr pos:start="97:63" pos:end="97:66"><name pos:start="97:63" pos:end="97:66">tags</name></expr></argument>, <argument pos:start="97:69" pos:end="97:86"><expr pos:start="97:69" pos:end="97:86"><name pos:start="97:69" pos:end="97:86"><name pos:start="97:69" pos:end="97:71">bih</name><operator pos:start="97:72" pos:end="97:73">-&gt;</operator><name pos:start="97:74" pos:end="97:86">biCompression</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="99:21" pos:end="99:68"><decl pos:start="99:21" pos:end="99:67"><type pos:start="99:21" pos:end="99:29"><name pos:start="99:21" pos:end="99:27">AVCodec</name> <modifier pos:start="99:29" pos:end="99:29">*</modifier></type><name pos:start="99:30" pos:end="99:34">codec</name> <init pos:start="99:36" pos:end="99:67">= <expr pos:start="99:38" pos:end="99:67"><call pos:start="99:38" pos:end="99:67"><name pos:start="99:38" pos:end="99:57">avcodec_find_decoder</name><argument_list pos:start="99:58" pos:end="99:67">(<argument pos:start="99:59" pos:end="99:66"><expr pos:start="99:59" pos:end="99:66"><name pos:start="99:59" pos:end="99:66">codec_id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="101:21" pos:end="109:21"><if pos:start="101:21" pos:end="105:21">if <condition pos:start="101:24" pos:end="101:63">(<expr pos:start="101:25" pos:end="101:62"><name pos:start="101:25" pos:end="101:32">codec_id</name> <operator pos:start="101:34" pos:end="101:35">==</operator> <name pos:start="101:37" pos:end="101:52">AV_CODEC_ID_NONE</name> <operator pos:start="101:54" pos:end="101:55">||</operator> <operator pos:start="101:57" pos:end="101:57">!</operator><name pos:start="101:58" pos:end="101:62">codec</name></expr>)</condition> <block pos:start="101:65" pos:end="105:21">{<block_content pos:start="103:25" pos:end="103:112">

                        <expr_stmt pos:start="103:25" pos:end="103:112"><expr pos:start="103:25" pos:end="103:111"><call pos:start="103:25" pos:end="103:111"><name pos:start="103:25" pos:end="103:30">av_log</name><argument_list pos:start="103:31" pos:end="103:111">(<argument pos:start="103:32" pos:end="103:36"><expr pos:start="103:32" pos:end="103:36"><name pos:start="103:32" pos:end="103:36">avctx</name></expr></argument>, <argument pos:start="103:39" pos:end="103:49"><expr pos:start="103:39" pos:end="103:49"><name pos:start="103:39" pos:end="103:49">AV_LOG_INFO</name></expr></argument>, <argument pos:start="103:52" pos:end="103:84"><expr pos:start="103:52" pos:end="103:84"><literal type="string" pos:start="103:52" pos:end="103:84">"  unknown compression type 0x%X"</literal></expr></argument>, <argument pos:start="103:87" pos:end="103:110"><expr pos:start="103:87" pos:end="103:110"><operator pos:start="103:87" pos:end="103:87">(</operator><name pos:start="103:88" pos:end="103:90">int</name><operator pos:start="103:91" pos:end="103:91">)</operator> <name pos:start="103:93" pos:end="103:110"><name pos:start="103:93" pos:end="103:95">bih</name><operator pos:start="103:96" pos:end="103:97">-&gt;</operator><name pos:start="103:98" pos:end="103:110">biCompression</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="105:23" pos:end="109:21">else <block pos:start="105:28" pos:end="109:21">{<block_content pos:start="107:25" pos:end="107:79">

                        <expr_stmt pos:start="107:25" pos:end="107:79"><expr pos:start="107:25" pos:end="107:78"><call pos:start="107:25" pos:end="107:78"><name pos:start="107:25" pos:end="107:30">av_log</name><argument_list pos:start="107:31" pos:end="107:78">(<argument pos:start="107:32" pos:end="107:36"><expr pos:start="107:32" pos:end="107:36"><name pos:start="107:32" pos:end="107:36">avctx</name></expr></argument>, <argument pos:start="107:39" pos:end="107:49"><expr pos:start="107:39" pos:end="107:49"><name pos:start="107:39" pos:end="107:49">AV_LOG_INFO</name></expr></argument>, <argument pos:start="107:52" pos:end="107:64"><expr pos:start="107:52" pos:end="107:64"><literal type="string" pos:start="107:52" pos:end="107:64">"  vcodec=%s"</literal></expr></argument>, <argument pos:start="107:67" pos:end="107:77"><expr pos:start="107:67" pos:end="107:77"><name pos:start="107:67" pos:end="107:77"><name pos:start="107:67" pos:end="107:71">codec</name><operator pos:start="107:72" pos:end="107:73">-&gt;</operator><name pos:start="107:74" pos:end="107:77">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="111:19" pos:end="115:17">else <block pos:start="111:24" pos:end="115:17">{<block_content pos:start="113:21" pos:end="113:98">

                    <expr_stmt pos:start="113:21" pos:end="113:98"><expr pos:start="113:21" pos:end="113:97"><call pos:start="113:21" pos:end="113:97"><name pos:start="113:21" pos:end="113:26">av_log</name><argument_list pos:start="113:27" pos:end="113:97">(<argument pos:start="113:28" pos:end="113:32"><expr pos:start="113:28" pos:end="113:32"><name pos:start="113:28" pos:end="113:32">avctx</name></expr></argument>, <argument pos:start="113:35" pos:end="113:45"><expr pos:start="113:35" pos:end="113:45"><name pos:start="113:35" pos:end="113:45">AV_LOG_INFO</name></expr></argument>, <argument pos:start="113:48" pos:end="113:66"><expr pos:start="113:48" pos:end="113:66"><literal type="string" pos:start="113:48" pos:end="113:66">"  pixel_format=%s"</literal></expr></argument>, <argument pos:start="113:69" pos:end="113:96"><expr pos:start="113:69" pos:end="113:96"><call pos:start="113:69" pos:end="113:96"><name pos:start="113:69" pos:end="113:87">av_get_pix_fmt_name</name><argument_list pos:start="113:88" pos:end="113:96">(<argument pos:start="113:89" pos:end="113:95"><expr pos:start="113:89" pos:end="113:95"><name pos:start="113:89" pos:end="113:95">pix_fmt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="117:17" pos:end="125:54"><expr pos:start="117:17" pos:end="125:53"><call pos:start="117:17" pos:end="125:53"><name pos:start="117:17" pos:end="117:22">av_log</name><argument_list pos:start="117:23" pos:end="125:53">(<argument pos:start="117:24" pos:end="117:28"><expr pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:28">avctx</name></expr></argument>, <argument pos:start="117:31" pos:end="117:41"><expr pos:start="117:31" pos:end="117:41"><name pos:start="117:31" pos:end="117:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="117:44" pos:end="117:90"><expr pos:start="117:44" pos:end="117:90"><literal type="string" pos:start="117:44" pos:end="117:90">"  min s=%ldx%ld fps=%g max s=%ldx%ld fps=%g\n"</literal></expr></argument>,

                       <argument pos:start="119:24" pos:end="119:46"><expr pos:start="119:24" pos:end="119:46"><name pos:start="119:24" pos:end="119:46"><name pos:start="119:24" pos:end="119:28">vcaps</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:43">MinOutputSize</name><operator pos:start="119:44" pos:end="119:44">.</operator><name pos:start="119:45" pos:end="119:46">cx</name></name></expr></argument>, <argument pos:start="119:49" pos:end="119:71"><expr pos:start="119:49" pos:end="119:71"><name pos:start="119:49" pos:end="119:71"><name pos:start="119:49" pos:end="119:53">vcaps</name><operator pos:start="119:54" pos:end="119:55">-&gt;</operator><name pos:start="119:56" pos:end="119:68">MinOutputSize</name><operator pos:start="119:69" pos:end="119:69">.</operator><name pos:start="119:70" pos:end="119:71">cy</name></name></expr></argument>,

                       <argument pos:start="121:24" pos:end="121:52"><expr pos:start="121:24" pos:end="121:52"><literal type="number" pos:start="121:24" pos:end="121:26">1e7</literal> <operator pos:start="121:28" pos:end="121:28">/</operator> <name pos:start="121:30" pos:end="121:52"><name pos:start="121:30" pos:end="121:34">vcaps</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:52">MaxFrameInterval</name></name></expr></argument>,

                       <argument pos:start="123:24" pos:end="123:46"><expr pos:start="123:24" pos:end="123:46"><name pos:start="123:24" pos:end="123:46"><name pos:start="123:24" pos:end="123:28">vcaps</name><operator pos:start="123:29" pos:end="123:30">-&gt;</operator><name pos:start="123:31" pos:end="123:43">MaxOutputSize</name><operator pos:start="123:44" pos:end="123:44">.</operator><name pos:start="123:45" pos:end="123:46">cx</name></name></expr></argument>, <argument pos:start="123:49" pos:end="123:71"><expr pos:start="123:49" pos:end="123:71"><name pos:start="123:49" pos:end="123:71"><name pos:start="123:49" pos:end="123:53">vcaps</name><operator pos:start="123:54" pos:end="123:55">-&gt;</operator><name pos:start="123:56" pos:end="123:68">MaxOutputSize</name><operator pos:start="123:69" pos:end="123:69">.</operator><name pos:start="123:70" pos:end="123:71">cy</name></name></expr></argument>,

                       <argument pos:start="125:24" pos:end="125:52"><expr pos:start="125:24" pos:end="125:52"><literal type="number" pos:start="125:24" pos:end="125:26">1e7</literal> <operator pos:start="125:28" pos:end="125:28">/</operator> <name pos:start="125:30" pos:end="125:52"><name pos:start="125:30" pos:end="125:34">vcaps</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:52">MinFrameInterval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="127:17" pos:end="127:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="131:13" pos:end="137:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="131:60">(<expr pos:start="131:17" pos:end="131:59"><name pos:start="131:17" pos:end="131:35"><name pos:start="131:17" pos:end="131:19">ctx</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:35">video_codec_id</name></name> <operator pos:start="131:37" pos:end="131:38">!=</operator> <name pos:start="131:40" pos:end="131:59">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="131:62" pos:end="137:13">{<block_content pos:start="133:17" pos:end="135:30">

                <if_stmt pos:start="133:17" pos:end="135:30"><if pos:start="133:17" pos:end="135:30">if <condition pos:start="133:20" pos:end="133:85">(<expr pos:start="133:21" pos:end="133:84"><name pos:start="133:21" pos:end="133:39"><name pos:start="133:21" pos:end="133:23">ctx</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:39">video_codec_id</name></name> <operator pos:start="133:41" pos:end="133:42">!=</operator> <call pos:start="133:44" pos:end="133:84"><name pos:start="133:44" pos:end="133:58">av_codec_get_id</name><argument_list pos:start="133:59" pos:end="133:84">(<argument pos:start="133:60" pos:end="133:63"><expr pos:start="133:60" pos:end="133:63"><name pos:start="133:60" pos:end="133:63">tags</name></expr></argument>, <argument pos:start="133:66" pos:end="133:83"><expr pos:start="133:66" pos:end="133:83"><name pos:start="133:66" pos:end="133:83"><name pos:start="133:66" pos:end="133:68">bih</name><operator pos:start="133:69" pos:end="133:70">-&gt;</operator><name pos:start="133:71" pos:end="133:83">biCompression</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="135:21" pos:end="135:30"><block_content pos:start="135:21" pos:end="135:30">

                    <goto pos:start="135:21" pos:end="135:30">goto <name pos:start="135:26" pos:end="135:29">next</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="139:13" pos:end="145:13"><if pos:start="139:13" pos:end="145:13">if <condition pos:start="139:16" pos:end="141:87">(<expr pos:start="139:17" pos:end="141:86"><name pos:start="139:17" pos:end="139:33"><name pos:start="139:17" pos:end="139:19">ctx</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:33">pixel_format</name></name> <operator pos:start="139:35" pos:end="139:36">!=</operator> <name pos:start="139:38" pos:end="139:52">AV_PIX_FMT_NONE</name> <operator pos:start="139:54" pos:end="139:55">&amp;&amp;</operator>

                <name pos:start="141:17" pos:end="141:33"><name pos:start="141:17" pos:end="141:19">ctx</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:33">pixel_format</name></name> <operator pos:start="141:35" pos:end="141:36">!=</operator> <call pos:start="141:38" pos:end="141:86"><name pos:start="141:38" pos:end="141:49">dshow_pixfmt</name><argument_list pos:start="141:50" pos:end="141:86">(<argument pos:start="141:51" pos:end="141:68"><expr pos:start="141:51" pos:end="141:68"><name pos:start="141:51" pos:end="141:68"><name pos:start="141:51" pos:end="141:53">bih</name><operator pos:start="141:54" pos:end="141:55">-&gt;</operator><name pos:start="141:56" pos:end="141:68">biCompression</name></name></expr></argument>, <argument pos:start="141:71" pos:end="141:85"><expr pos:start="141:71" pos:end="141:85"><name pos:start="141:71" pos:end="141:85"><name pos:start="141:71" pos:end="141:73">bih</name><operator pos:start="141:74" pos:end="141:75">-&gt;</operator><name pos:start="141:76" pos:end="141:85">biBitCount</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:89" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:26">

                <goto pos:start="143:17" pos:end="143:26">goto <name pos:start="143:22" pos:end="143:25">next</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="147:13" pos:end="161:13"><if pos:start="147:13" pos:end="161:13">if <condition pos:start="147:16" pos:end="147:31">(<expr pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:19">ctx</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:30">framerate</name></name></expr>)</condition> <block pos:start="147:33" pos:end="161:13">{<block_content pos:start="149:17" pos:end="159:32">

                <decl_stmt pos:start="149:17" pos:end="151:76"><decl pos:start="149:17" pos:end="151:75"><type pos:start="149:17" pos:end="149:23"><name pos:start="149:17" pos:end="149:23">int64_t</name></type> <name pos:start="149:25" pos:end="149:33">framerate</name> <init pos:start="149:35" pos:end="151:75">= <expr pos:start="149:37" pos:end="151:75"><operator pos:start="149:37" pos:end="149:37">(</operator><operator pos:start="149:38" pos:end="149:38">(</operator><name pos:start="149:39" pos:end="149:45">int64_t</name><operator pos:start="149:46" pos:end="149:46">)</operator> <name pos:start="149:48" pos:end="149:75"><name pos:start="149:48" pos:end="149:50">ctx</name><operator pos:start="149:51" pos:end="149:52">-&gt;</operator><name pos:start="149:53" pos:end="149:71">requested_framerate</name><operator pos:start="149:72" pos:end="149:72">.</operator><name pos:start="149:73" pos:end="149:75">den</name></name><operator pos:start="149:76" pos:end="149:76">*</operator><literal type="number" pos:start="149:77" pos:end="149:84">10000000</literal><operator pos:start="149:85" pos:end="149:85">)</operator>

                                            <operator pos:start="151:45" pos:end="151:45">/</operator>  <name pos:start="151:48" pos:end="151:75"><name pos:start="151:48" pos:end="151:50">ctx</name><operator pos:start="151:51" pos:end="151:52">-&gt;</operator><name pos:start="151:53" pos:end="151:71">requested_framerate</name><operator pos:start="151:72" pos:end="151:72">.</operator><name pos:start="151:73" pos:end="151:75">num</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="153:17" pos:end="157:30"><if pos:start="153:17" pos:end="157:30">if <condition pos:start="153:20" pos:end="155:56">(<expr pos:start="153:21" pos:end="155:55"><name pos:start="153:21" pos:end="153:29">framerate</name> <operator pos:start="153:31" pos:end="153:31">&gt;</operator> <name pos:start="153:33" pos:end="153:55"><name pos:start="153:33" pos:end="153:37">vcaps</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:55">MaxFrameInterval</name></name> <operator pos:start="153:57" pos:end="153:58">||</operator>

                    <name pos:start="155:21" pos:end="155:29">framerate</name> <operator pos:start="155:31" pos:end="155:31">&lt;</operator> <name pos:start="155:33" pos:end="155:55"><name pos:start="155:33" pos:end="155:37">vcaps</name><operator pos:start="155:38" pos:end="155:39">-&gt;</operator><name pos:start="155:40" pos:end="155:55">MinFrameInterval</name></name></expr>)</condition><block type="pseudo" pos:start="157:21" pos:end="157:30"><block_content pos:start="157:21" pos:end="157:30">

                    <goto pos:start="157:21" pos:end="157:30">goto <name pos:start="157:26" pos:end="157:29">next</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:32"><expr pos:start="159:17" pos:end="159:31"><operator pos:start="159:17" pos:end="159:17">*</operator><name pos:start="159:18" pos:end="159:19">fr</name> <operator pos:start="159:21" pos:end="159:21">=</operator> <name pos:start="159:23" pos:end="159:31">framerate</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="163:13" pos:end="179:13"><if pos:start="163:13" pos:end="179:13">if <condition pos:start="163:16" pos:end="163:62">(<expr pos:start="163:17" pos:end="163:61"><name pos:start="163:17" pos:end="163:36"><name pos:start="163:17" pos:end="163:19">ctx</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:36">requested_width</name></name> <operator pos:start="163:38" pos:end="163:39">&amp;&amp;</operator> <name pos:start="163:41" pos:end="163:61"><name pos:start="163:41" pos:end="163:43">ctx</name><operator pos:start="163:44" pos:end="163:45">-&gt;</operator><name pos:start="163:46" pos:end="163:61">requested_height</name></name></expr>)</condition> <block pos:start="163:64" pos:end="179:13">{<block_content pos:start="165:17" pos:end="177:54">

                <if_stmt pos:start="165:17" pos:end="173:30"><if pos:start="165:17" pos:end="173:30">if <condition pos:start="165:20" pos:end="171:68">(<expr pos:start="165:21" pos:end="171:67"><name pos:start="165:21" pos:end="165:40"><name pos:start="165:21" pos:end="165:23">ctx</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:40">requested_width</name></name>  <operator pos:start="165:43" pos:end="165:43">&gt;</operator> <name pos:start="165:45" pos:end="165:67"><name pos:start="165:45" pos:end="165:49">vcaps</name><operator pos:start="165:50" pos:end="165:51">-&gt;</operator><name pos:start="165:52" pos:end="165:64">MaxOutputSize</name><operator pos:start="165:65" pos:end="165:65">.</operator><name pos:start="165:66" pos:end="165:67">cx</name></name> <operator pos:start="165:69" pos:end="165:70">||</operator>

                    <name pos:start="167:21" pos:end="167:40"><name pos:start="167:21" pos:end="167:23">ctx</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:40">requested_width</name></name>  <operator pos:start="167:43" pos:end="167:43">&lt;</operator> <name pos:start="167:45" pos:end="167:67"><name pos:start="167:45" pos:end="167:49">vcaps</name><operator pos:start="167:50" pos:end="167:51">-&gt;</operator><name pos:start="167:52" pos:end="167:64">MinOutputSize</name><operator pos:start="167:65" pos:end="167:65">.</operator><name pos:start="167:66" pos:end="167:67">cx</name></name> <operator pos:start="167:69" pos:end="167:70">||</operator>

                    <name pos:start="169:21" pos:end="169:41"><name pos:start="169:21" pos:end="169:23">ctx</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:41">requested_height</name></name> <operator pos:start="169:43" pos:end="169:43">&gt;</operator> <name pos:start="169:45" pos:end="169:67"><name pos:start="169:45" pos:end="169:49">vcaps</name><operator pos:start="169:50" pos:end="169:51">-&gt;</operator><name pos:start="169:52" pos:end="169:64">MaxOutputSize</name><operator pos:start="169:65" pos:end="169:65">.</operator><name pos:start="169:66" pos:end="169:67">cy</name></name> <operator pos:start="169:69" pos:end="169:70">||</operator>

                    <name pos:start="171:21" pos:end="171:41"><name pos:start="171:21" pos:end="171:23">ctx</name><operator pos:start="171:24" pos:end="171:25">-&gt;</operator><name pos:start="171:26" pos:end="171:41">requested_height</name></name> <operator pos:start="171:43" pos:end="171:43">&lt;</operator> <name pos:start="171:45" pos:end="171:67"><name pos:start="171:45" pos:end="171:49">vcaps</name><operator pos:start="171:50" pos:end="171:51">-&gt;</operator><name pos:start="171:52" pos:end="171:64">MinOutputSize</name><operator pos:start="171:65" pos:end="171:65">.</operator><name pos:start="171:66" pos:end="171:67">cy</name></name></expr>)</condition><block type="pseudo" pos:start="173:21" pos:end="173:30"><block_content pos:start="173:21" pos:end="173:30">

                    <goto pos:start="173:21" pos:end="173:30">goto <name pos:start="173:26" pos:end="173:29">next</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:53"><expr pos:start="175:17" pos:end="175:52"><name pos:start="175:17" pos:end="175:28"><name pos:start="175:17" pos:end="175:19">bih</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:28">biWidth</name></name>  <operator pos:start="175:31" pos:end="175:31">=</operator> <name pos:start="175:33" pos:end="175:52"><name pos:start="175:33" pos:end="175:35">ctx</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:52">requested_width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:54"><expr pos:start="177:17" pos:end="177:53"><name pos:start="177:17" pos:end="177:29"><name pos:start="177:17" pos:end="177:19">bih</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:29">biHeight</name></name> <operator pos:start="177:31" pos:end="177:31">=</operator> <name pos:start="177:33" pos:end="177:53"><name pos:start="177:33" pos:end="177:35">ctx</name><operator pos:start="177:36" pos:end="177:37">-&gt;</operator><name pos:start="177:38" pos:end="177:53">requested_height</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="181:11" pos:end="251:9">else <block pos:start="181:16" pos:end="251:9">{<block_content pos:start="183:13" pos:end="249:13">

            <decl_stmt pos:start="183:13" pos:end="183:51"><decl pos:start="183:13" pos:end="183:50"><type pos:start="183:13" pos:end="183:38"><name pos:start="183:13" pos:end="183:36">AUDIO_STREAM_CONFIG_CAPS</name> <modifier pos:start="183:38" pos:end="183:38">*</modifier></type><name pos:start="183:39" pos:end="183:43">acaps</name> <init pos:start="183:45" pos:end="183:50">= <expr pos:start="183:47" pos:end="183:50"><name pos:start="183:47" pos:end="183:50">caps</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="185:13" pos:end="188:0"><decl pos:start="185:13" pos:end="185:28"><type pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:24">WAVEFORMATEX</name> <modifier pos:start="185:26" pos:end="185:26">*</modifier></type><name pos:start="185:27" pos:end="185:28">fx</name></decl>;</decl_stmt>

<cpp:if pos:start="187:1" pos:end="187:14">#<cpp:directive pos:start="187:2" pos:end="187:3">if</cpp:directive> <expr pos:start="187:5" pos:end="187:14"><name pos:start="187:5" pos:end="187:14">DSHOWDEBUG</name></expr></cpp:if>

            <expr_stmt pos:start="189:13" pos:end="192:0"><expr pos:start="189:13" pos:end="189:52"><call pos:start="189:13" pos:end="189:52"><name pos:start="189:13" pos:end="189:45">ff_print_AUDIO_STREAM_CONFIG_CAPS</name><argument_list pos:start="189:46" pos:end="189:52">(<argument pos:start="189:47" pos:end="189:51"><expr pos:start="189:47" pos:end="189:51"><name pos:start="189:47" pos:end="189:51">acaps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>

            <if_stmt pos:start="193:13" pos:end="201:13"><if pos:start="193:13" pos:end="197:13">if <condition pos:start="193:16" pos:end="193:69">(<expr pos:start="193:17" pos:end="193:68"><call pos:start="193:17" pos:end="193:68"><name pos:start="193:17" pos:end="193:27">IsEqualGUID</name><argument_list pos:start="193:28" pos:end="193:68">(<argument pos:start="193:29" pos:end="193:45"><expr pos:start="193:29" pos:end="193:45"><operator pos:start="193:29" pos:end="193:29">&amp;</operator><name pos:start="193:30" pos:end="193:45"><name pos:start="193:30" pos:end="193:33">type</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:45">formattype</name></name></expr></argument>, <argument pos:start="193:48" pos:end="193:67"><expr pos:start="193:48" pos:end="193:67"><operator pos:start="193:48" pos:end="193:48">&amp;</operator><name pos:start="193:49" pos:end="193:67">FORMAT_WaveFormatEx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="193:71" pos:end="197:13">{<block_content pos:start="195:17" pos:end="195:45">

                <expr_stmt pos:start="195:17" pos:end="195:45"><expr pos:start="195:17" pos:end="195:44"><name pos:start="195:17" pos:end="195:18">fx</name> <operator pos:start="195:20" pos:end="195:20">=</operator> <operator pos:start="195:22" pos:end="195:22">(</operator><name pos:start="195:23" pos:end="195:26">void</name> <operator pos:start="195:28" pos:end="195:28">*</operator><operator pos:start="195:29" pos:end="195:29">)</operator> <name pos:start="195:31" pos:end="195:44"><name pos:start="195:31" pos:end="195:34">type</name><operator pos:start="195:35" pos:end="195:36">-&gt;</operator><name pos:start="195:37" pos:end="195:44">pbFormat</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="197:15" pos:end="201:13">else <block pos:start="197:20" pos:end="201:13">{<block_content pos:start="199:17" pos:end="199:26">

                <goto pos:start="199:17" pos:end="199:26">goto <name pos:start="199:22" pos:end="199:25">next</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="203:13" pos:end="213:13"><if pos:start="203:13" pos:end="213:13">if <condition pos:start="203:16" pos:end="203:29">(<expr pos:start="203:17" pos:end="203:28"><operator pos:start="203:17" pos:end="203:17">!</operator><name pos:start="203:18" pos:end="203:28">pformat_set</name></expr>)</condition> <block pos:start="203:31" pos:end="213:13">{<block_content pos:start="205:17" pos:end="211:25">

                <expr_stmt pos:start="205:17" pos:end="209:107"><expr pos:start="205:17" pos:end="209:106"><call pos:start="205:17" pos:end="209:106"><name pos:start="205:17" pos:end="205:22">av_log</name><argument_list pos:start="205:23" pos:end="209:106">(<argument pos:start="205:24" pos:end="205:28"><expr pos:start="205:24" pos:end="205:28"><name pos:start="205:24" pos:end="205:28">avctx</name></expr></argument>, <argument pos:start="205:31" pos:end="205:41"><expr pos:start="205:31" pos:end="205:41"><name pos:start="205:31" pos:end="205:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="205:44" pos:end="205:108"><expr pos:start="205:44" pos:end="205:108"><literal type="string" pos:start="205:44" pos:end="205:108">"  min ch=%lu bits=%lu rate=%6lu max ch=%lu bits=%lu rate=%6lu\n"</literal></expr></argument>,

                       <argument pos:start="207:24" pos:end="207:45"><expr pos:start="207:24" pos:end="207:45"><name pos:start="207:24" pos:end="207:45"><name pos:start="207:24" pos:end="207:28">acaps</name><operator pos:start="207:29" pos:end="207:30">-&gt;</operator><name pos:start="207:31" pos:end="207:45">MinimumChannels</name></name></expr></argument>, <argument pos:start="207:48" pos:end="207:74"><expr pos:start="207:48" pos:end="207:74"><name pos:start="207:48" pos:end="207:74"><name pos:start="207:48" pos:end="207:52">acaps</name><operator pos:start="207:53" pos:end="207:54">-&gt;</operator><name pos:start="207:55" pos:end="207:74">MinimumBitsPerSample</name></name></expr></argument>, <argument pos:start="207:77" pos:end="207:105"><expr pos:start="207:77" pos:end="207:105"><name pos:start="207:77" pos:end="207:105"><name pos:start="207:77" pos:end="207:81">acaps</name><operator pos:start="207:82" pos:end="207:83">-&gt;</operator><name pos:start="207:84" pos:end="207:105">MinimumSampleFrequency</name></name></expr></argument>,

                       <argument pos:start="209:24" pos:end="209:45"><expr pos:start="209:24" pos:end="209:45"><name pos:start="209:24" pos:end="209:45"><name pos:start="209:24" pos:end="209:28">acaps</name><operator pos:start="209:29" pos:end="209:30">-&gt;</operator><name pos:start="209:31" pos:end="209:45">MaximumChannels</name></name></expr></argument>, <argument pos:start="209:48" pos:end="209:74"><expr pos:start="209:48" pos:end="209:74"><name pos:start="209:48" pos:end="209:74"><name pos:start="209:48" pos:end="209:52">acaps</name><operator pos:start="209:53" pos:end="209:54">-&gt;</operator><name pos:start="209:55" pos:end="209:74">MaximumBitsPerSample</name></name></expr></argument>, <argument pos:start="209:77" pos:end="209:105"><expr pos:start="209:77" pos:end="209:105"><name pos:start="209:77" pos:end="209:105"><name pos:start="209:77" pos:end="209:81">acaps</name><operator pos:start="209:82" pos:end="209:83">-&gt;</operator><name pos:start="209:84" pos:end="209:105">MaximumSampleFrequency</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="211:17" pos:end="211:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="215:13" pos:end="225:13"><if pos:start="215:13" pos:end="225:13">if <condition pos:start="215:16" pos:end="215:33">(<expr pos:start="215:17" pos:end="215:32"><name pos:start="215:17" pos:end="215:32"><name pos:start="215:17" pos:end="215:19">ctx</name><operator pos:start="215:20" pos:end="215:21">-&gt;</operator><name pos:start="215:22" pos:end="215:32">sample_rate</name></name></expr>)</condition> <block pos:start="215:35" pos:end="225:13">{<block_content pos:start="217:17" pos:end="223:54">

                <if_stmt pos:start="217:17" pos:end="221:30"><if pos:start="217:17" pos:end="221:30">if <condition pos:start="217:20" pos:end="219:69">(<expr pos:start="217:21" pos:end="219:68"><name pos:start="217:21" pos:end="217:36"><name pos:start="217:21" pos:end="217:23">ctx</name><operator pos:start="217:24" pos:end="217:25">-&gt;</operator><name pos:start="217:26" pos:end="217:36">sample_rate</name></name> <operator pos:start="217:38" pos:end="217:38">&gt;</operator> <name pos:start="217:40" pos:end="217:68"><name pos:start="217:40" pos:end="217:44">acaps</name><operator pos:start="217:45" pos:end="217:46">-&gt;</operator><name pos:start="217:47" pos:end="217:68">MaximumSampleFrequency</name></name> <operator pos:start="217:70" pos:end="217:71">||</operator>

                    <name pos:start="219:21" pos:end="219:36"><name pos:start="219:21" pos:end="219:23">ctx</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:36">sample_rate</name></name> <operator pos:start="219:38" pos:end="219:38">&lt;</operator> <name pos:start="219:40" pos:end="219:68"><name pos:start="219:40" pos:end="219:44">acaps</name><operator pos:start="219:45" pos:end="219:46">-&gt;</operator><name pos:start="219:47" pos:end="219:68">MinimumSampleFrequency</name></name></expr>)</condition><block type="pseudo" pos:start="221:21" pos:end="221:30"><block_content pos:start="221:21" pos:end="221:30">

                    <goto pos:start="221:21" pos:end="221:30">goto <name pos:start="221:26" pos:end="221:29">next</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:54"><expr pos:start="223:17" pos:end="223:53"><name pos:start="223:17" pos:end="223:34"><name pos:start="223:17" pos:end="223:18">fx</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:34">nSamplesPerSec</name></name> <operator pos:start="223:36" pos:end="223:36">=</operator> <name pos:start="223:38" pos:end="223:53"><name pos:start="223:38" pos:end="223:40">ctx</name><operator pos:start="223:41" pos:end="223:42">-&gt;</operator><name pos:start="223:43" pos:end="223:53">sample_rate</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="227:13" pos:end="237:13"><if pos:start="227:13" pos:end="237:13">if <condition pos:start="227:16" pos:end="227:33">(<expr pos:start="227:17" pos:end="227:32"><name pos:start="227:17" pos:end="227:32"><name pos:start="227:17" pos:end="227:19">ctx</name><operator pos:start="227:20" pos:end="227:21">-&gt;</operator><name pos:start="227:22" pos:end="227:32">sample_size</name></name></expr>)</condition> <block pos:start="227:35" pos:end="237:13">{<block_content pos:start="229:17" pos:end="235:54">

                <if_stmt pos:start="229:17" pos:end="233:30"><if pos:start="229:17" pos:end="233:30">if <condition pos:start="229:20" pos:end="231:67">(<expr pos:start="229:21" pos:end="231:66"><name pos:start="229:21" pos:end="229:36"><name pos:start="229:21" pos:end="229:23">ctx</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:36">sample_size</name></name> <operator pos:start="229:38" pos:end="229:38">&gt;</operator> <name pos:start="229:40" pos:end="229:66"><name pos:start="229:40" pos:end="229:44">acaps</name><operator pos:start="229:45" pos:end="229:46">-&gt;</operator><name pos:start="229:47" pos:end="229:66">MaximumBitsPerSample</name></name> <operator pos:start="229:68" pos:end="229:69">||</operator>

                    <name pos:start="231:21" pos:end="231:36"><name pos:start="231:21" pos:end="231:23">ctx</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:36">sample_size</name></name> <operator pos:start="231:38" pos:end="231:38">&lt;</operator> <name pos:start="231:40" pos:end="231:66"><name pos:start="231:40" pos:end="231:44">acaps</name><operator pos:start="231:45" pos:end="231:46">-&gt;</operator><name pos:start="231:47" pos:end="231:66">MinimumBitsPerSample</name></name></expr>)</condition><block type="pseudo" pos:start="233:21" pos:end="233:30"><block_content pos:start="233:21" pos:end="233:30">

                    <goto pos:start="233:21" pos:end="233:30">goto <name pos:start="233:26" pos:end="233:29">next</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:54"><expr pos:start="235:17" pos:end="235:53"><name pos:start="235:17" pos:end="235:34"><name pos:start="235:17" pos:end="235:18">fx</name><operator pos:start="235:19" pos:end="235:20">-&gt;</operator><name pos:start="235:21" pos:end="235:34">wBitsPerSample</name></name> <operator pos:start="235:36" pos:end="235:36">=</operator> <name pos:start="235:38" pos:end="235:53"><name pos:start="235:38" pos:end="235:40">ctx</name><operator pos:start="235:41" pos:end="235:42">-&gt;</operator><name pos:start="235:43" pos:end="235:53">sample_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="239:13" pos:end="249:13"><if pos:start="239:13" pos:end="249:13">if <condition pos:start="239:16" pos:end="239:30">(<expr pos:start="239:17" pos:end="239:29"><name pos:start="239:17" pos:end="239:29"><name pos:start="239:17" pos:end="239:19">ctx</name><operator pos:start="239:20" pos:end="239:21">-&gt;</operator><name pos:start="239:22" pos:end="239:29">channels</name></name></expr>)</condition> <block pos:start="239:32" pos:end="249:13">{<block_content pos:start="241:17" pos:end="247:46">

                <if_stmt pos:start="241:17" pos:end="245:30"><if pos:start="241:17" pos:end="245:30">if <condition pos:start="241:20" pos:end="243:59">(<expr pos:start="241:21" pos:end="243:58"><name pos:start="241:21" pos:end="241:33"><name pos:start="241:21" pos:end="241:23">ctx</name><operator pos:start="241:24" pos:end="241:25">-&gt;</operator><name pos:start="241:26" pos:end="241:33">channels</name></name> <operator pos:start="241:35" pos:end="241:35">&gt;</operator> <name pos:start="241:37" pos:end="241:58"><name pos:start="241:37" pos:end="241:41">acaps</name><operator pos:start="241:42" pos:end="241:43">-&gt;</operator><name pos:start="241:44" pos:end="241:58">MaximumChannels</name></name> <operator pos:start="241:60" pos:end="241:61">||</operator>

                    <name pos:start="243:21" pos:end="243:33"><name pos:start="243:21" pos:end="243:23">ctx</name><operator pos:start="243:24" pos:end="243:25">-&gt;</operator><name pos:start="243:26" pos:end="243:33">channels</name></name> <operator pos:start="243:35" pos:end="243:35">&lt;</operator> <name pos:start="243:37" pos:end="243:58"><name pos:start="243:37" pos:end="243:41">acaps</name><operator pos:start="243:42" pos:end="243:43">-&gt;</operator><name pos:start="243:44" pos:end="243:58">MinimumChannels</name></name></expr>)</condition><block type="pseudo" pos:start="245:21" pos:end="245:30"><block_content pos:start="245:21" pos:end="245:30">

                    <goto pos:start="245:21" pos:end="245:30">goto <name pos:start="245:26" pos:end="245:29">next</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:46"><expr pos:start="247:17" pos:end="247:45"><name pos:start="247:17" pos:end="247:29"><name pos:start="247:17" pos:end="247:18">fx</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:29">nChannels</name></name> <operator pos:start="247:31" pos:end="247:31">=</operator> <name pos:start="247:33" pos:end="247:45"><name pos:start="247:33" pos:end="247:35">ctx</name><operator pos:start="247:36" pos:end="247:37">-&gt;</operator><name pos:start="247:38" pos:end="247:45">channels</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="253:9" pos:end="255:22"><if pos:start="253:9" pos:end="255:22">if <condition pos:start="253:12" pos:end="253:60">(<expr pos:start="253:13" pos:end="253:59"><call pos:start="253:13" pos:end="253:51"><name pos:start="253:13" pos:end="253:37">IAMStreamConfig_SetFormat</name><argument_list pos:start="253:38" pos:end="253:51">(<argument pos:start="253:39" pos:end="253:44"><expr pos:start="253:39" pos:end="253:44"><name pos:start="253:39" pos:end="253:44">config</name></expr></argument>, <argument pos:start="253:47" pos:end="253:50"><expr pos:start="253:47" pos:end="253:50"><name pos:start="253:47" pos:end="253:50">type</name></expr></argument>)</argument_list></call> <operator pos:start="253:53" pos:end="253:54">!=</operator> <name pos:start="253:56" pos:end="253:59">S_OK</name></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:22"><block_content pos:start="255:13" pos:end="255:22">

            <goto pos:start="255:13" pos:end="255:22">goto <name pos:start="255:18" pos:end="255:21">next</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:23"><expr pos:start="257:9" pos:end="257:22"><name pos:start="257:9" pos:end="257:18">format_set</name> <operator pos:start="257:20" pos:end="257:20">=</operator> <literal type="number" pos:start="257:22" pos:end="257:22">1</literal></expr>;</expr_stmt>

<label pos:start="259:1" pos:end="259:5"><name pos:start="259:1" pos:end="259:4">next</name>:</label>

        <if_stmt pos:start="261:9" pos:end="263:42"><if pos:start="261:9" pos:end="263:42">if <condition pos:start="261:12" pos:end="261:27">(<expr pos:start="261:13" pos:end="261:26"><name pos:start="261:13" pos:end="261:26"><name pos:start="261:13" pos:end="261:16">type</name><operator pos:start="261:17" pos:end="261:18">-&gt;</operator><name pos:start="261:19" pos:end="261:26">pbFormat</name></name></expr>)</condition><block type="pseudo" pos:start="263:13" pos:end="263:42"><block_content pos:start="263:13" pos:end="263:42">

            <expr_stmt pos:start="263:13" pos:end="263:42"><expr pos:start="263:13" pos:end="263:41"><call pos:start="263:13" pos:end="263:41"><name pos:start="263:13" pos:end="263:25">CoTaskMemFree</name><argument_list pos:start="263:26" pos:end="263:41">(<argument pos:start="263:27" pos:end="263:40"><expr pos:start="263:27" pos:end="263:40"><name pos:start="263:27" pos:end="263:40"><name pos:start="263:27" pos:end="263:30">type</name><operator pos:start="263:31" pos:end="263:32">-&gt;</operator><name pos:start="263:33" pos:end="263:40">pbFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:28"><expr pos:start="265:9" pos:end="265:27"><call pos:start="265:9" pos:end="265:27"><name pos:start="265:9" pos:end="265:21">CoTaskMemFree</name><argument_list pos:start="265:22" pos:end="265:27">(<argument pos:start="265:23" pos:end="265:26"><expr pos:start="265:23" pos:end="265:26"><name pos:start="265:23" pos:end="265:26">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<label pos:start="269:1" pos:end="269:4"><name pos:start="269:1" pos:end="269:3">end</name>:</label>

    <expr_stmt pos:start="271:5" pos:end="271:36"><expr pos:start="271:5" pos:end="271:35"><call pos:start="271:5" pos:end="271:35"><name pos:start="271:5" pos:end="271:27">IAMStreamConfig_Release</name><argument_list pos:start="271:28" pos:end="271:35">(<argument pos:start="271:29" pos:end="271:34"><expr pos:start="271:29" pos:end="271:34"><name pos:start="271:29" pos:end="271:34">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="273:5" pos:end="275:22"><if pos:start="273:5" pos:end="275:22">if <condition pos:start="273:8" pos:end="273:13">(<expr pos:start="273:9" pos:end="273:12"><name pos:start="273:9" pos:end="273:12">caps</name></expr>)</condition><block type="pseudo" pos:start="275:9" pos:end="275:22"><block_content pos:start="275:9" pos:end="275:22">

        <expr_stmt pos:start="275:9" pos:end="275:22"><expr pos:start="275:9" pos:end="275:21"><call pos:start="275:9" pos:end="275:21"><name pos:start="275:9" pos:end="275:15">av_free</name><argument_list pos:start="275:16" pos:end="275:21">(<argument pos:start="275:17" pos:end="275:20"><expr pos:start="275:17" pos:end="275:20"><name pos:start="275:17" pos:end="275:20">caps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="277:5" pos:end="279:34"><if pos:start="277:5" pos:end="279:34">if <condition pos:start="277:8" pos:end="277:20">(<expr pos:start="277:9" pos:end="277:19"><name pos:start="277:9" pos:end="277:19">pformat_set</name></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:34"><block_content pos:start="279:9" pos:end="279:34">

        <expr_stmt pos:start="279:9" pos:end="279:34"><expr pos:start="279:9" pos:end="279:33"><operator pos:start="279:9" pos:end="279:9">*</operator><name pos:start="279:10" pos:end="279:20">pformat_set</name> <operator pos:start="279:22" pos:end="279:22">=</operator> <name pos:start="279:24" pos:end="279:33">format_set</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block>
</unit>
