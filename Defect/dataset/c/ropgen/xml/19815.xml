<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19815.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">i8257_realize</name><parameter_list pos:start="1:26" pos:end="1:57">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dev</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:49">Error</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier><modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:46">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ISADevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">isa</name> <init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><call pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:31">ISA_DEVICE</name><argument_list pos:start="5:32" pos:end="5:36">(<argument pos:start="5:33" pos:end="5:35"><expr pos:start="5:33" pos:end="5:35"><name pos:start="5:33" pos:end="5:35">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">I8257State</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">d</name> <init pos:start="7:19" pos:end="7:30">= <expr pos:start="7:21" pos:end="7:30"><call pos:start="7:21" pos:end="7:30"><name pos:start="7:21" pos:end="7:25">I8257</name><argument_list pos:start="7:26" pos:end="7:30">(<argument pos:start="7:27" pos:end="7:29"><expr pos:start="7:27" pos:end="7:29"><name pos:start="7:27" pos:end="7:29">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:54"><expr pos:start="13:5" pos:end="15:53"><call pos:start="13:5" pos:end="15:53"><name pos:start="13:5" pos:end="13:25">memory_region_init_io</name><argument_list pos:start="13:26" pos:end="15:53">(<argument pos:start="13:27" pos:end="13:40"><expr pos:start="13:27" pos:end="13:40"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:40"><name pos:start="13:28" pos:end="13:28">d</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:40">channel_io</name></name></expr></argument>, <argument pos:start="13:43" pos:end="13:46"><expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">NULL</name></expr></argument>, <argument pos:start="13:49" pos:end="13:63"><expr pos:start="13:49" pos:end="13:63"><operator pos:start="13:49" pos:end="13:49">&amp;</operator><name pos:start="13:50" pos:end="13:63">channel_io_ops</name></expr></argument>, <argument pos:start="13:66" pos:end="13:66"><expr pos:start="13:66" pos:end="13:66"><name pos:start="13:66" pos:end="13:66">d</name></expr></argument>,

                          <argument pos:start="15:27" pos:end="15:36"><expr pos:start="15:27" pos:end="15:36"><literal type="string" pos:start="15:27" pos:end="15:36">"dma-chan"</literal></expr></argument>, <argument pos:start="15:39" pos:end="15:52"><expr pos:start="15:39" pos:end="15:52"><literal type="number" pos:start="15:39" pos:end="15:39">8</literal> <operator pos:start="15:41" pos:end="15:42">&lt;&lt;</operator> <name pos:start="15:44" pos:end="15:52"><name pos:start="15:44" pos:end="15:44">d</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:52">dshift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:57"><expr pos:start="17:5" pos:end="19:56"><call pos:start="17:5" pos:end="19:56"><name pos:start="17:5" pos:end="17:31">memory_region_add_subregion</name><argument_list pos:start="17:32" pos:end="19:56">(<argument pos:start="17:33" pos:end="17:57"><expr pos:start="17:33" pos:end="17:57"><call pos:start="17:33" pos:end="17:57"><name pos:start="17:33" pos:end="17:52">isa_address_space_io</name><argument_list pos:start="17:53" pos:end="17:57">(<argument pos:start="17:54" pos:end="17:56"><expr pos:start="17:54" pos:end="17:56"><name pos:start="17:54" pos:end="17:56">isa</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="19:33" pos:end="19:39"><expr pos:start="19:33" pos:end="19:39"><name pos:start="19:33" pos:end="19:39"><name pos:start="19:33" pos:end="19:33">d</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:39">base</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:55"><expr pos:start="19:42" pos:end="19:55"><operator pos:start="19:42" pos:end="19:42">&amp;</operator><name pos:start="19:43" pos:end="19:55"><name pos:start="19:43" pos:end="19:43">d</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:55">channel_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:41"><expr pos:start="23:5" pos:end="25:40"><call pos:start="23:5" pos:end="25:40"><name pos:start="23:5" pos:end="23:28">isa_register_portio_list</name><argument_list pos:start="23:29" pos:end="25:40">(<argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">isa</name></expr></argument>, <argument pos:start="23:35" pos:end="23:46"><expr pos:start="23:35" pos:end="23:46"><name pos:start="23:35" pos:end="23:46"><name pos:start="23:35" pos:end="23:35">d</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:46">page_base</name></name></expr></argument>, <argument pos:start="23:49" pos:end="23:64"><expr pos:start="23:49" pos:end="23:64"><name pos:start="23:49" pos:end="23:64">page_portio_list</name></expr></argument>, <argument pos:start="23:67" pos:end="23:67"><expr pos:start="23:67" pos:end="23:67"><name pos:start="23:67" pos:end="23:67">d</name></expr></argument>,

                             <argument pos:start="25:30" pos:end="25:39"><expr pos:start="25:30" pos:end="25:39"><literal type="string" pos:start="25:30" pos:end="25:39">"dma-page"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:27">(<expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:9">d</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:21">pageh_base</name></name> <operator pos:start="27:23" pos:end="27:24">&gt;=</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>)</condition> <block pos:start="27:29" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:46">

        <expr_stmt pos:start="29:9" pos:end="31:46"><expr pos:start="29:9" pos:end="31:45"><call pos:start="29:9" pos:end="31:45"><name pos:start="29:9" pos:end="29:32">isa_register_portio_list</name><argument_list pos:start="29:33" pos:end="31:45">(<argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:36">isa</name></expr></argument>, <argument pos:start="29:39" pos:end="29:51"><expr pos:start="29:39" pos:end="29:51"><name pos:start="29:39" pos:end="29:51"><name pos:start="29:39" pos:end="29:39">d</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:51">pageh_base</name></name></expr></argument>, <argument pos:start="29:54" pos:end="29:70"><expr pos:start="29:54" pos:end="29:70"><name pos:start="29:54" pos:end="29:70">pageh_portio_list</name></expr></argument>, <argument pos:start="29:73" pos:end="29:73"><expr pos:start="29:73" pos:end="29:73"><name pos:start="29:73" pos:end="29:73">d</name></expr></argument>,

                                 <argument pos:start="31:34" pos:end="31:44"><expr pos:start="31:34" pos:end="31:44"><literal type="string" pos:start="31:34" pos:end="31:44">"dma-pageh"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:54"><expr pos:start="37:5" pos:end="39:53"><call pos:start="37:5" pos:end="39:53"><name pos:start="37:5" pos:end="37:25">memory_region_init_io</name><argument_list pos:start="37:26" pos:end="39:53">(<argument pos:start="37:27" pos:end="37:37"><expr pos:start="37:27" pos:end="37:37"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:37"><name pos:start="37:28" pos:end="37:28">d</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:37">cont_io</name></name></expr></argument>, <argument pos:start="37:40" pos:end="37:50"><expr pos:start="37:40" pos:end="37:50"><call pos:start="37:40" pos:end="37:50"><name pos:start="37:40" pos:end="37:45">OBJECT</name><argument_list pos:start="37:46" pos:end="37:50">(<argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">isa</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:53" pos:end="37:64"><expr pos:start="37:53" pos:end="37:64"><operator pos:start="37:53" pos:end="37:53">&amp;</operator><name pos:start="37:54" pos:end="37:64">cont_io_ops</name></expr></argument>, <argument pos:start="37:67" pos:end="37:67"><expr pos:start="37:67" pos:end="37:67"><name pos:start="37:67" pos:end="37:67">d</name></expr></argument>,

                          <argument pos:start="39:27" pos:end="39:36"><expr pos:start="39:27" pos:end="39:36"><literal type="string" pos:start="39:27" pos:end="39:36">"dma-cont"</literal></expr></argument>, <argument pos:start="39:39" pos:end="39:52"><expr pos:start="39:39" pos:end="39:52"><literal type="number" pos:start="39:39" pos:end="39:39">8</literal> <operator pos:start="39:41" pos:end="39:42">&lt;&lt;</operator> <name pos:start="39:44" pos:end="39:52"><name pos:start="39:44" pos:end="39:44">d</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:52">dshift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:73"><expr pos:start="41:5" pos:end="43:72"><call pos:start="41:5" pos:end="43:72"><name pos:start="41:5" pos:end="41:31">memory_region_add_subregion</name><argument_list pos:start="41:32" pos:end="43:72">(<argument pos:start="41:33" pos:end="41:57"><expr pos:start="41:33" pos:end="41:57"><call pos:start="41:33" pos:end="41:57"><name pos:start="41:33" pos:end="41:52">isa_address_space_io</name><argument_list pos:start="41:53" pos:end="41:57">(<argument pos:start="41:54" pos:end="41:56"><expr pos:start="41:54" pos:end="41:56"><name pos:start="41:54" pos:end="41:56">isa</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="43:33" pos:end="43:58"><expr pos:start="43:33" pos:end="43:58"><name pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:33">d</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:39">base</name></name> <operator pos:start="43:41" pos:end="43:41">+</operator> <operator pos:start="43:43" pos:end="43:43">(</operator><literal type="number" pos:start="43:44" pos:end="43:44">8</literal> <operator pos:start="43:46" pos:end="43:47">&lt;&lt;</operator> <name pos:start="43:49" pos:end="43:57"><name pos:start="43:49" pos:end="43:49">d</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:57">dshift</name></name><operator pos:start="43:58" pos:end="43:58">)</operator></expr></argument>, <argument pos:start="43:61" pos:end="43:71"><expr pos:start="43:61" pos:end="43:71"><operator pos:start="43:61" pos:end="43:61">&amp;</operator><name pos:start="43:62" pos:end="43:71"><name pos:start="43:62" pos:end="43:62">d</name><operator pos:start="43:63" pos:end="43:64">-&gt;</operator><name pos:start="43:65" pos:end="43:71">cont_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="51:5">for <control pos:start="47:9" pos:end="47:45">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:40"><expr pos:start="47:17" pos:end="47:39"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <call pos:start="47:21" pos:end="47:39"><name pos:start="47:21" pos:end="47:30">ARRAY_SIZE</name><argument_list pos:start="47:31" pos:end="47:39">(<argument pos:start="47:32" pos:end="47:38"><expr pos:start="47:32" pos:end="47:38"><name pos:start="47:32" pos:end="47:38"><name pos:start="47:32" pos:end="47:32">d</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:38">regs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><operator pos:start="47:42" pos:end="47:43">++</operator><name pos:start="47:44" pos:end="47:44">i</name></expr></incr>)</control> <block pos:start="47:47" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:58">

        <expr_stmt pos:start="49:9" pos:end="49:58"><expr pos:start="49:9" pos:end="49:57"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:9">d</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:15">regs</name><index pos:start="49:16" pos:end="49:18">[<expr pos:start="49:17" pos:end="49:17"><name pos:start="49:17" pos:end="49:17">i</name></expr>]</index></name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:35">transfer_handler</name> <operator pos:start="49:37" pos:end="49:37">=</operator> <name pos:start="49:39" pos:end="49:57">i8257_phony_handler</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="55:5" pos:end="55:46"><expr pos:start="55:5" pos:end="55:45"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:5">d</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:13">dma_bh</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <call pos:start="55:17" pos:end="55:45"><name pos:start="55:17" pos:end="55:27">qemu_bh_new</name><argument_list pos:start="55:28" pos:end="55:45">(<argument pos:start="55:29" pos:end="55:41"><expr pos:start="55:29" pos:end="55:41"><name pos:start="55:29" pos:end="55:41">i8257_dma_run</name></expr></argument>, <argument pos:start="55:44" pos:end="55:44"><expr pos:start="55:44" pos:end="55:44"><name pos:start="55:44" pos:end="55:44">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
