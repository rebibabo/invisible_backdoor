<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25207.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">acpi_pcihp_init</name><parameter_list pos:start="1:21" pos:end="3:74">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:35">AcpiPciHpState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:46">PCIBus</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">root_bus</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:51"><decl pos:start="3:22" pos:end="3:51"><type pos:start="3:22" pos:end="3:51"><name pos:start="3:22" pos:end="3:33">MemoryRegion</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:51">address_space_io</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:73"><decl pos:start="3:54" pos:end="3:73"><type pos:start="3:54" pos:end="3:73"><name pos:start="3:54" pos:end="3:57">bool</name></type> <name pos:start="3:59" pos:end="3:73">bridges_enabled</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:75">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:20">io_size</name> <init pos:start="7:22" pos:end="7:38">= <expr pos:start="7:24" pos:end="7:38"><name pos:start="7:24" pos:end="7:38">ACPI_PCIHP_SIZE</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:11">root</name></name><operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:21">root_bus</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:18">legacy_piix</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <operator pos:start="13:22" pos:end="13:22">!</operator><name pos:start="13:23" pos:end="13:37">bridges_enabled</name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:22">legacy_piix</name></name></expr>)</condition> <block pos:start="17:25" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:55">

        <decl_stmt pos:start="19:9" pos:end="19:56"><decl pos:start="19:9" pos:end="19:55"><type pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:16">unsigned</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:26">bus_bsel</name> <init pos:start="19:28" pos:end="19:55">= <expr pos:start="19:30" pos:end="19:55"><call pos:start="19:30" pos:end="19:55"><name pos:start="19:30" pos:end="19:37">g_malloc</name><argument_list pos:start="19:38" pos:end="19:55">(<argument pos:start="19:39" pos:end="19:54"><expr pos:start="19:39" pos:end="19:54"><sizeof pos:start="19:39" pos:end="19:44">sizeof <name/></sizeof>*<name pos:start="19:47" pos:end="19:54">bus_bsel</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:15">io_size</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:40">ACPI_PCIHP_LEGACY_SIZE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:17">bus_bsel</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:43">ACPI_PCIHP_BSEL_DEFAULT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:55"><expr pos:start="29:9" pos:end="31:54"><call pos:start="29:9" pos:end="31:54"><name pos:start="29:9" pos:end="29:38">object_property_add_uint32_ptr</name><argument_list pos:start="29:39" pos:end="31:54">(<argument pos:start="29:40" pos:end="29:55"><expr pos:start="29:40" pos:end="29:55"><call pos:start="29:40" pos:end="29:55"><name pos:start="29:40" pos:end="29:45">OBJECT</name><argument_list pos:start="29:46" pos:end="29:55">(<argument pos:start="29:47" pos:end="29:54"><expr pos:start="29:47" pos:end="29:54"><name pos:start="29:47" pos:end="29:54">root_bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:58" pos:end="29:77"><expr pos:start="29:58" pos:end="29:77"><name pos:start="29:58" pos:end="29:77">ACPI_PCIHP_PROP_BSEL</name></expr></argument>,

                                       <argument pos:start="31:40" pos:end="31:47"><expr pos:start="31:40" pos:end="31:47"><name pos:start="31:40" pos:end="31:47">bus_bsel</name></expr></argument>, <argument pos:start="31:50" pos:end="31:53"><expr pos:start="31:50" pos:end="31:53"><name pos:start="31:50" pos:end="31:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:55"><expr pos:start="37:5" pos:end="39:54"><call pos:start="37:5" pos:end="39:54"><name pos:start="37:5" pos:end="37:25">memory_region_init_io</name><argument_list pos:start="37:26" pos:end="39:54">(<argument pos:start="37:27" pos:end="37:32"><expr pos:start="37:27" pos:end="37:32"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:32"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:32">io</name></name></expr></argument>, <argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><name pos:start="37:35" pos:end="37:38">NULL</name></expr></argument>, <argument pos:start="37:41" pos:end="37:58"><expr pos:start="37:41" pos:end="37:58"><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:58">acpi_pcihp_io_ops</name></expr></argument>, <argument pos:start="37:61" pos:end="37:61"><expr pos:start="37:61" pos:end="37:61"><name pos:start="37:61" pos:end="37:61">s</name></expr></argument>,

                          <argument pos:start="39:27" pos:end="39:44"><expr pos:start="39:27" pos:end="39:44"><literal type="string" pos:start="39:27" pos:end="39:44">"acpi-pci-hotplug"</literal></expr></argument>, <argument pos:start="39:47" pos:end="39:53"><expr pos:start="39:47" pos:end="39:53"><name pos:start="39:47" pos:end="39:53">io_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:75"><expr pos:start="41:5" pos:end="41:74"><call pos:start="41:5" pos:end="41:74"><name pos:start="41:5" pos:end="41:31">memory_region_add_subregion</name><argument_list pos:start="41:32" pos:end="41:74">(<argument pos:start="41:33" pos:end="41:48"><expr pos:start="41:33" pos:end="41:48"><name pos:start="41:33" pos:end="41:48">address_space_io</name></expr></argument>, <argument pos:start="41:51" pos:end="41:65"><expr pos:start="41:51" pos:end="41:65"><name pos:start="41:51" pos:end="41:65">ACPI_PCIHP_ADDR</name></expr></argument>, <argument pos:start="41:68" pos:end="41:73"><expr pos:start="41:68" pos:end="41:73"><operator pos:start="41:68" pos:end="41:68">&amp;</operator><name pos:start="41:69" pos:end="41:73"><name pos:start="41:69" pos:end="41:69">s</name><operator pos:start="41:70" pos:end="41:71">-&gt;</operator><name pos:start="41:72" pos:end="41:73">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
