<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12991.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">rtsp_cmd_setup</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">HTTPContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">c</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">url</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:37">RTSPHeader</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:40">h</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="273:1">{<block_content pos:start="7:5" pos:end="271:31">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">FFStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:20">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">stream_index</name></decl>, <decl pos:start="9:23" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:26">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:18">[<expr pos:start="11:14" pos:end="11:17"><literal type="number" pos:start="11:14" pos:end="11:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:20"><name pos:start="13:10" pos:end="13:14">path1</name><index pos:start="13:15" pos:end="13:20">[<expr pos:start="13:16" pos:end="13:19"><literal type="number" pos:start="13:16" pos:end="13:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:20">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">HTTPContext</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:22">rtp_c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:22">RTSPTransportField</name> <modifier pos:start="19:24" pos:end="19:24">*</modifier></type><name pos:start="19:25" pos:end="19:26">th</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:33"><decl pos:start="21:5" pos:end="21:32"><type pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:10">struct</name> <name pos:start="21:12" pos:end="21:22">sockaddr_in</name></name></type> <name pos:start="21:24" pos:end="21:32">dest_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:31"><type pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:25">RTSPActionServerSetup</name></type> <name pos:start="23:27" pos:end="23:31">setup</name></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:33">/* find which url is asked */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:74"><expr pos:start="29:5" pos:end="29:73"><call pos:start="29:5" pos:end="29:73"><name pos:start="29:5" pos:end="29:13">url_split</name><argument_list pos:start="29:14" pos:end="29:73">(<argument pos:start="29:15" pos:end="29:18"><expr pos:start="29:15" pos:end="29:18"><name pos:start="29:15" pos:end="29:18">NULL</name></expr></argument>, <argument pos:start="29:21" pos:end="29:21"><expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr></argument>, <argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">NULL</name></expr></argument>, <argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">NULL</name></expr></argument>, <argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">0</literal></expr></argument>, <argument pos:start="29:42" pos:end="29:45"><expr pos:start="29:42" pos:end="29:45"><name pos:start="29:42" pos:end="29:45">NULL</name></expr></argument>, <argument pos:start="29:48" pos:end="29:52"><expr pos:start="29:48" pos:end="29:52"><name pos:start="29:48" pos:end="29:52">path1</name></expr></argument>, <argument pos:start="29:55" pos:end="29:67"><expr pos:start="29:55" pos:end="29:67"><sizeof pos:start="29:55" pos:end="29:67">sizeof<argument_list pos:start="29:61" pos:end="29:67">(<argument pos:start="29:62" pos:end="29:66"><expr pos:start="29:62" pos:end="29:66"><name pos:start="29:62" pos:end="29:66">path1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:70" pos:end="29:72"><expr pos:start="29:70" pos:end="29:72"><name pos:start="29:70" pos:end="29:72">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:8">path</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:16">path1</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:15"><if pos:start="33:5" pos:end="35:15">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:13">path</name> <operator pos:start="33:15" pos:end="33:16">==</operator> <literal type="char" pos:start="33:18" pos:end="33:20">'/'</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:15"><block_content pos:start="35:9" pos:end="35:15">

        <expr_stmt pos:start="35:9" pos:end="35:15"><expr pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:12">path</name><operator pos:start="35:13" pos:end="35:14">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:31">/* now check each stream */</comment>

    <for pos:start="41:5" pos:end="81:5">for<control pos:start="41:8" pos:end="41:69">(<init pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:14">stream</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:29">first_stream</name></expr>;</init> <condition pos:start="41:32" pos:end="41:46"><expr pos:start="41:32" pos:end="41:45"><name pos:start="41:32" pos:end="41:37">stream</name> <operator pos:start="41:39" pos:end="41:40">!=</operator> <name pos:start="41:42" pos:end="41:45">NULL</name></expr>;</condition> <incr pos:start="41:48" pos:end="41:68"><expr pos:start="41:48" pos:end="41:68"><name pos:start="41:48" pos:end="41:53">stream</name> <operator pos:start="41:55" pos:end="41:55">=</operator> <name pos:start="41:57" pos:end="41:68"><name pos:start="41:57" pos:end="41:62">stream</name><operator pos:start="41:63" pos:end="41:64">-&gt;</operator><name pos:start="41:65" pos:end="41:68">next</name></name></expr></incr>)</control> <block pos:start="41:71" pos:end="81:5">{<block_content pos:start="43:9" pos:end="79:9">

        <if_stmt pos:start="43:9" pos:end="79:9"><if pos:start="43:9" pos:end="79:9">if <condition pos:start="43:12" pos:end="43:66">(<expr pos:start="43:13" pos:end="43:65"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:28"><name pos:start="43:14" pos:end="43:19">stream</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:28">is_feed</name></name> <operator pos:start="43:30" pos:end="43:31">&amp;&amp;</operator> <operator pos:start="43:33" pos:end="43:33">!</operator><call pos:start="43:34" pos:end="43:65"><name pos:start="43:34" pos:end="43:39">strcmp</name><argument_list pos:start="43:40" pos:end="43:65">(<argument pos:start="43:41" pos:end="43:57"><expr pos:start="43:41" pos:end="43:57"><name pos:start="43:41" pos:end="43:57"><name pos:start="43:41" pos:end="43:46">stream</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:51">fmt</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:57">name</name></name></expr></argument>, <argument pos:start="43:60" pos:end="43:64"><expr pos:start="43:60" pos:end="43:64"><literal type="string" pos:start="43:60" pos:end="43:64">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:68" pos:end="79:9">{<block_content pos:start="47:13" pos:end="77:13">

            <comment type="block" pos:start="45:13" pos:end="45:66">/* accept aggregate filenames only if single stream */</comment>

            <if_stmt pos:start="47:13" pos:end="61:13"><if pos:start="47:13" pos:end="61:13">if <condition pos:start="47:16" pos:end="47:48">(<expr pos:start="47:17" pos:end="47:47"><operator pos:start="47:17" pos:end="47:17">!</operator><call pos:start="47:18" pos:end="47:47"><name pos:start="47:18" pos:end="47:23">strcmp</name><argument_list pos:start="47:24" pos:end="47:47">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">path</name></expr></argument>, <argument pos:start="47:31" pos:end="47:46"><expr pos:start="47:31" pos:end="47:46"><name pos:start="47:31" pos:end="47:46"><name pos:start="47:31" pos:end="47:36">stream</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:46">filename</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:50" pos:end="61:13">{<block_content pos:start="49:17" pos:end="59:27">

                <if_stmt pos:start="49:17" pos:end="55:17"><if pos:start="49:17" pos:end="55:17">if <condition pos:start="49:20" pos:end="49:44">(<expr pos:start="49:21" pos:end="49:43"><name pos:start="49:21" pos:end="49:38"><name pos:start="49:21" pos:end="49:26">stream</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:38">nb_streams</name></name> <operator pos:start="49:40" pos:end="49:41">!=</operator> <literal type="number" pos:start="49:43" pos:end="49:43">1</literal></expr>)</condition> <block pos:start="49:46" pos:end="55:17">{<block_content pos:start="51:21" pos:end="53:27">

                    <expr_stmt pos:start="51:21" pos:end="51:63"><expr pos:start="51:21" pos:end="51:62"><call pos:start="51:21" pos:end="51:62"><name pos:start="51:21" pos:end="51:36">rtsp_reply_error</name><argument_list pos:start="51:37" pos:end="51:62">(<argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><name pos:start="51:38" pos:end="51:38">c</name></expr></argument>, <argument pos:start="51:41" pos:end="51:61"><expr pos:start="51:41" pos:end="51:61"><name pos:start="51:41" pos:end="51:61">RTSP_STATUS_AGGREGATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="53:21" pos:end="53:27">return;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:33"><expr pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:28">stream_index</name> <operator pos:start="57:30" pos:end="57:30">=</operator> <literal type="number" pos:start="57:32" pos:end="57:32">0</literal></expr>;</expr_stmt>

                <goto pos:start="59:17" pos:end="59:27">goto <name pos:start="59:22" pos:end="59:26">found</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <for pos:start="65:13" pos:end="77:13">for<control pos:start="65:16" pos:end="67:31">(<init pos:start="65:17" pos:end="65:33"><expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:28">stream_index</name> <operator pos:start="65:30" pos:end="65:30">=</operator> <literal type="number" pos:start="65:32" pos:end="65:32">0</literal></expr>;</init> <condition pos:start="65:35" pos:end="65:68"><expr pos:start="65:35" pos:end="65:67"><name pos:start="65:35" pos:end="65:46">stream_index</name> <operator pos:start="65:48" pos:end="65:48">&lt;</operator> <name pos:start="65:50" pos:end="65:67"><name pos:start="65:50" pos:end="65:55">stream</name><operator pos:start="65:56" pos:end="65:57">-&gt;</operator><name pos:start="65:58" pos:end="65:67">nb_streams</name></name></expr>;</condition>

                <incr pos:start="67:17" pos:end="67:30"><expr pos:start="67:17" pos:end="67:30"><name pos:start="67:17" pos:end="67:28">stream_index</name><operator pos:start="67:29" pos:end="67:30">++</operator></expr></incr>)</control> <block pos:start="67:33" pos:end="77:13">{<block_content pos:start="69:17" pos:end="75:31">

                <expr_stmt pos:start="69:17" pos:end="71:57"><expr pos:start="69:17" pos:end="71:56"><call pos:start="69:17" pos:end="71:56"><name pos:start="69:17" pos:end="69:24">snprintf</name><argument_list pos:start="69:25" pos:end="71:56">(<argument pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:28">buf</name></expr></argument>, <argument pos:start="69:31" pos:end="69:41"><expr pos:start="69:31" pos:end="69:41"><sizeof pos:start="69:31" pos:end="69:41">sizeof<argument_list pos:start="69:37" pos:end="69:41">(<argument pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="69:44" pos:end="69:59"><expr pos:start="69:44" pos:end="69:59"><literal type="string" pos:start="69:44" pos:end="69:59">"%s/streamid=%d"</literal></expr></argument>,

                         <argument pos:start="71:26" pos:end="71:41"><expr pos:start="71:26" pos:end="71:41"><name pos:start="71:26" pos:end="71:41"><name pos:start="71:26" pos:end="71:31">stream</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:41">filename</name></name></expr></argument>, <argument pos:start="71:44" pos:end="71:55"><expr pos:start="71:44" pos:end="71:55"><name pos:start="71:44" pos:end="71:55">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="73:17" pos:end="75:31"><if pos:start="73:17" pos:end="75:31">if <condition pos:start="73:20" pos:end="73:39">(<expr pos:start="73:21" pos:end="73:38"><operator pos:start="73:21" pos:end="73:21">!</operator><call pos:start="73:22" pos:end="73:38"><name pos:start="73:22" pos:end="73:27">strcmp</name><argument_list pos:start="73:28" pos:end="73:38">(<argument pos:start="73:29" pos:end="73:32"><expr pos:start="73:29" pos:end="73:32"><name pos:start="73:29" pos:end="73:32">path</name></expr></argument>, <argument pos:start="73:35" pos:end="73:37"><expr pos:start="73:35" pos:end="73:37"><name pos:start="73:35" pos:end="73:37">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:31"><block_content pos:start="75:21" pos:end="75:31">

                    <goto pos:start="75:21" pos:end="75:31">goto <name pos:start="75:26" pos:end="75:30">found</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="83:5" pos:end="83:25">/* no stream found */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:45"><expr pos:start="85:5" pos:end="85:44"><call pos:start="85:5" pos:end="85:44"><name pos:start="85:5" pos:end="85:20">rtsp_reply_error</name><argument_list pos:start="85:21" pos:end="85:44">(<argument pos:start="85:22" pos:end="85:22"><expr pos:start="85:22" pos:end="85:22"><name pos:start="85:22" pos:end="85:22">c</name></expr></argument>, <argument pos:start="85:25" pos:end="85:43"><expr pos:start="85:25" pos:end="85:43"><name pos:start="85:25" pos:end="85:43">RTSP_STATUS_SERVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:47" pos:end="85:70">/* XXX: right error ? */</comment>

    <return pos:start="87:5" pos:end="87:11">return;</return>

 <label pos:start="89:2" pos:end="89:7"><name pos:start="89:2" pos:end="89:6">found</name>:</label>



    <comment type="block" pos:start="93:5" pos:end="93:39">/* generate session id if needed */</comment>

    <if_stmt pos:start="95:5" pos:end="99:69"><if pos:start="95:5" pos:end="99:69">if <condition pos:start="95:8" pos:end="95:33">(<expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:9">h</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:21">session_id</name><index pos:start="95:22" pos:end="95:24">[<expr pos:start="95:23" pos:end="95:23"><literal type="number" pos:start="95:23" pos:end="95:23">0</literal></expr>]</index></name> <operator pos:start="95:26" pos:end="95:27">==</operator> <literal type="char" pos:start="95:29" pos:end="95:32">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="99:69"><block_content pos:start="97:9" pos:end="99:69">

        <expr_stmt pos:start="97:9" pos:end="99:69"><expr pos:start="97:9" pos:end="99:68"><call pos:start="97:9" pos:end="99:68"><name pos:start="97:9" pos:end="97:16">snprintf</name><argument_list pos:start="97:17" pos:end="99:68">(<argument pos:start="97:18" pos:end="97:30"><expr pos:start="97:18" pos:end="97:30"><name pos:start="97:18" pos:end="97:30"><name pos:start="97:18" pos:end="97:18">h</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:30">session_id</name></name></expr></argument>, <argument pos:start="97:33" pos:end="97:53"><expr pos:start="97:33" pos:end="97:53"><sizeof pos:start="97:33" pos:end="97:53">sizeof<argument_list pos:start="97:39" pos:end="97:53">(<argument pos:start="97:40" pos:end="97:52"><expr pos:start="97:40" pos:end="97:52"><name pos:start="97:40" pos:end="97:52"><name pos:start="97:40" pos:end="97:40">h</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:52">session_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="97:56" pos:end="97:65"><expr pos:start="97:56" pos:end="97:65"><literal type="string" pos:start="97:56" pos:end="97:65">"%08x%08x"</literal></expr></argument>,

                 <argument pos:start="99:18" pos:end="99:41"><expr pos:start="99:18" pos:end="99:41"><call pos:start="99:18" pos:end="99:41"><name pos:start="99:18" pos:end="99:26">av_random</name><argument_list pos:start="99:27" pos:end="99:41">(<argument pos:start="99:28" pos:end="99:40"><expr pos:start="99:28" pos:end="99:40"><operator pos:start="99:28" pos:end="99:28">&amp;</operator><name pos:start="99:29" pos:end="99:40">random_state</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:44" pos:end="99:67"><expr pos:start="99:44" pos:end="99:67"><call pos:start="99:44" pos:end="99:67"><name pos:start="99:44" pos:end="99:52">av_random</name><argument_list pos:start="99:53" pos:end="99:67">(<argument pos:start="99:54" pos:end="99:66"><expr pos:start="99:54" pos:end="99:66"><operator pos:start="99:54" pos:end="99:54">&amp;</operator><name pos:start="99:55" pos:end="99:66">random_state</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:55">/* find rtp session, and create it if none found */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:44"><expr pos:start="105:5" pos:end="105:43"><name pos:start="105:5" pos:end="105:9">rtp_c</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <call pos:start="105:13" pos:end="105:43"><name pos:start="105:13" pos:end="105:28">find_rtp_session</name><argument_list pos:start="105:29" pos:end="105:43">(<argument pos:start="105:30" pos:end="105:42"><expr pos:start="105:30" pos:end="105:42"><name pos:start="105:30" pos:end="105:42"><name pos:start="105:30" pos:end="105:30">h</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:42">session_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="153:5"><if pos:start="107:5" pos:end="153:5">if <condition pos:start="107:8" pos:end="107:15">(<expr pos:start="107:9" pos:end="107:14"><operator pos:start="107:9" pos:end="107:9">!</operator><name pos:start="107:10" pos:end="107:14">rtp_c</name></expr>)</condition> <block pos:start="107:17" pos:end="153:5">{<block_content pos:start="111:9" pos:end="151:9">

        <comment type="block" pos:start="109:9" pos:end="109:31">/* always prefer UDP */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:54"><expr pos:start="111:9" pos:end="111:53"><name pos:start="111:9" pos:end="111:10">th</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <call pos:start="111:14" pos:end="111:53"><name pos:start="111:14" pos:end="111:27">find_transport</name><argument_list pos:start="111:28" pos:end="111:53">(<argument pos:start="111:29" pos:end="111:29"><expr pos:start="111:29" pos:end="111:29"><name pos:start="111:29" pos:end="111:29">h</name></expr></argument>, <argument pos:start="111:32" pos:end="111:52"><expr pos:start="111:32" pos:end="111:52"><name pos:start="111:32" pos:end="111:52">RTSP_PROTOCOL_RTP_UDP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="125:9"><if pos:start="113:9" pos:end="125:9">if <condition pos:start="113:12" pos:end="113:16">(<expr pos:start="113:13" pos:end="113:15"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:15">th</name></expr>)</condition> <block pos:start="113:18" pos:end="125:9">{<block_content pos:start="115:13" pos:end="123:13">

            <expr_stmt pos:start="115:13" pos:end="115:58"><expr pos:start="115:13" pos:end="115:57"><name pos:start="115:13" pos:end="115:14">th</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <call pos:start="115:18" pos:end="115:57"><name pos:start="115:18" pos:end="115:31">find_transport</name><argument_list pos:start="115:32" pos:end="115:57">(<argument pos:start="115:33" pos:end="115:33"><expr pos:start="115:33" pos:end="115:33"><name pos:start="115:33" pos:end="115:33">h</name></expr></argument>, <argument pos:start="115:36" pos:end="115:56"><expr pos:start="115:36" pos:end="115:56"><name pos:start="115:36" pos:end="115:56">RTSP_PROTOCOL_RTP_TCP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="123:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:20">(<expr pos:start="117:17" pos:end="117:19"><operator pos:start="117:17" pos:end="117:17">!</operator><name pos:start="117:18" pos:end="117:19">th</name></expr>)</condition> <block pos:start="117:22" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:23">

                <expr_stmt pos:start="119:17" pos:end="119:59"><expr pos:start="119:17" pos:end="119:58"><call pos:start="119:17" pos:end="119:58"><name pos:start="119:17" pos:end="119:32">rtsp_reply_error</name><argument_list pos:start="119:33" pos:end="119:58">(<argument pos:start="119:34" pos:end="119:34"><expr pos:start="119:34" pos:end="119:34"><name pos:start="119:34" pos:end="119:34">c</name></expr></argument>, <argument pos:start="119:37" pos:end="119:57"><expr pos:start="119:37" pos:end="119:57"><name pos:start="119:37" pos:end="119:57">RTSP_STATUS_TRANSPORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="121:17" pos:end="121:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="131:49"><expr pos:start="129:9" pos:end="131:48"><name pos:start="129:9" pos:end="129:13">rtp_c</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <call pos:start="129:17" pos:end="131:48"><name pos:start="129:17" pos:end="129:34">rtp_new_connection</name><argument_list pos:start="129:35" pos:end="131:48">(<argument pos:start="129:36" pos:end="129:48"><expr pos:start="129:36" pos:end="129:48"><operator pos:start="129:36" pos:end="129:36">&amp;</operator><name pos:start="129:37" pos:end="129:48"><name pos:start="129:37" pos:end="129:37">c</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:48">from_addr</name></name></expr></argument>, <argument pos:start="129:51" pos:end="129:56"><expr pos:start="129:51" pos:end="129:56"><name pos:start="129:51" pos:end="129:56">stream</name></expr></argument>, <argument pos:start="129:59" pos:end="129:71"><expr pos:start="129:59" pos:end="129:71"><name pos:start="129:59" pos:end="129:71"><name pos:start="129:59" pos:end="129:59">h</name><operator pos:start="129:60" pos:end="129:61">-&gt;</operator><name pos:start="129:62" pos:end="129:71">session_id</name></name></expr></argument>,

                                   <argument pos:start="131:36" pos:end="131:47"><expr pos:start="131:36" pos:end="131:47"><name pos:start="131:36" pos:end="131:47"><name pos:start="131:36" pos:end="131:37">th</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:47">protocol</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="139:9"><if pos:start="133:9" pos:end="139:9">if <condition pos:start="133:12" pos:end="133:19">(<expr pos:start="133:13" pos:end="133:18"><operator pos:start="133:13" pos:end="133:13">!</operator><name pos:start="133:14" pos:end="133:18">rtp_c</name></expr>)</condition> <block pos:start="133:21" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:19">

            <expr_stmt pos:start="135:13" pos:end="135:55"><expr pos:start="135:13" pos:end="135:54"><call pos:start="135:13" pos:end="135:54"><name pos:start="135:13" pos:end="135:28">rtsp_reply_error</name><argument_list pos:start="135:29" pos:end="135:54">(<argument pos:start="135:30" pos:end="135:30"><expr pos:start="135:30" pos:end="135:30"><name pos:start="135:30" pos:end="135:30">c</name></expr></argument>, <argument pos:start="135:33" pos:end="135:53"><expr pos:start="135:33" pos:end="135:53"><name pos:start="135:33" pos:end="135:53">RTSP_STATUS_BANDWIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="137:13" pos:end="137:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="143:9" pos:end="143:31">/* open input stream */</comment>

        <if_stmt pos:start="145:9" pos:end="151:9"><if pos:start="145:9" pos:end="151:9">if <condition pos:start="145:12" pos:end="145:45">(<expr pos:start="145:13" pos:end="145:44"><call pos:start="145:13" pos:end="145:40"><name pos:start="145:13" pos:end="145:29">open_input_stream</name><argument_list pos:start="145:30" pos:end="145:40">(<argument pos:start="145:31" pos:end="145:35"><expr pos:start="145:31" pos:end="145:35"><name pos:start="145:31" pos:end="145:35">rtp_c</name></expr></argument>, <argument pos:start="145:38" pos:end="145:39"><expr pos:start="145:38" pos:end="145:39"><literal type="string" pos:start="145:38" pos:end="145:39">""</literal></expr></argument>)</argument_list></call> <operator pos:start="145:42" pos:end="145:42">&lt;</operator> <literal type="number" pos:start="145:44" pos:end="145:44">0</literal></expr>)</condition> <block pos:start="145:47" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:19">

            <expr_stmt pos:start="147:13" pos:end="147:54"><expr pos:start="147:13" pos:end="147:53"><call pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:28">rtsp_reply_error</name><argument_list pos:start="147:29" pos:end="147:53">(<argument pos:start="147:30" pos:end="147:30"><expr pos:start="147:30" pos:end="147:30"><name pos:start="147:30" pos:end="147:30">c</name></expr></argument>, <argument pos:start="147:33" pos:end="147:52"><expr pos:start="147:33" pos:end="147:52"><name pos:start="147:33" pos:end="147:52">RTSP_STATUS_INTERNAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="149:13" pos:end="149:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="157:5" pos:end="159:38">/* test if stream is OK (test needed because several SETUP needs

       to be done for a given file) */</comment>

    <if_stmt pos:start="161:5" pos:end="167:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:32">(<expr pos:start="161:9" pos:end="161:31"><name pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:13">rtp_c</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:21">stream</name></name> <operator pos:start="161:23" pos:end="161:24">!=</operator> <name pos:start="161:26" pos:end="161:31">stream</name></expr>)</condition> <block pos:start="161:34" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:15">

        <expr_stmt pos:start="163:9" pos:end="163:49"><expr pos:start="163:9" pos:end="163:48"><call pos:start="163:9" pos:end="163:48"><name pos:start="163:9" pos:end="163:24">rtsp_reply_error</name><argument_list pos:start="163:25" pos:end="163:48">(<argument pos:start="163:26" pos:end="163:26"><expr pos:start="163:26" pos:end="163:26"><name pos:start="163:26" pos:end="163:26">c</name></expr></argument>, <argument pos:start="163:29" pos:end="163:47"><expr pos:start="163:29" pos:end="163:47"><name pos:start="163:29" pos:end="163:47">RTSP_STATUS_SERVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="165:9" pos:end="165:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="171:5" pos:end="171:42">/* test if stream is already set up */</comment>

    <if_stmt pos:start="173:5" pos:end="179:5"><if pos:start="173:5" pos:end="179:5">if <condition pos:start="173:8" pos:end="173:37">(<expr pos:start="173:9" pos:end="173:36"><name pos:start="173:9" pos:end="173:36"><name pos:start="173:9" pos:end="173:13">rtp_c</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:22">rtp_ctx</name><index pos:start="173:23" pos:end="173:36">[<expr pos:start="173:24" pos:end="173:35"><name pos:start="173:24" pos:end="173:35">stream_index</name></expr>]</index></name></expr>)</condition> <block pos:start="173:39" pos:end="179:5">{<block_content pos:start="175:9" pos:end="177:15">

        <expr_stmt pos:start="175:9" pos:end="175:47"><expr pos:start="175:9" pos:end="175:46"><call pos:start="175:9" pos:end="175:46"><name pos:start="175:9" pos:end="175:24">rtsp_reply_error</name><argument_list pos:start="175:25" pos:end="175:46">(<argument pos:start="175:26" pos:end="175:26"><expr pos:start="175:26" pos:end="175:26"><name pos:start="175:26" pos:end="175:26">c</name></expr></argument>, <argument pos:start="175:29" pos:end="175:45"><expr pos:start="175:29" pos:end="175:45"><name pos:start="175:29" pos:end="175:45">RTSP_STATUS_STATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="177:9" pos:end="177:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="183:5" pos:end="183:25">/* check transport */</comment>

    <expr_stmt pos:start="185:5" pos:end="185:48"><expr pos:start="185:5" pos:end="185:47"><name pos:start="185:5" pos:end="185:6">th</name> <operator pos:start="185:8" pos:end="185:8">=</operator> <call pos:start="185:10" pos:end="185:47"><name pos:start="185:10" pos:end="185:23">find_transport</name><argument_list pos:start="185:24" pos:end="185:47">(<argument pos:start="185:25" pos:end="185:25"><expr pos:start="185:25" pos:end="185:25"><name pos:start="185:25" pos:end="185:25">h</name></expr></argument>, <argument pos:start="185:28" pos:end="185:46"><expr pos:start="185:28" pos:end="185:46"><name pos:start="185:28" pos:end="185:46"><name pos:start="185:28" pos:end="185:32">rtp_c</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:46">rtp_protocol</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="195:5"><if pos:start="187:5" pos:end="195:5">if <condition pos:start="187:8" pos:end="189:42">(<expr pos:start="187:9" pos:end="189:41"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:11">th</name> <operator pos:start="187:13" pos:end="187:14">||</operator> <operator pos:start="187:16" pos:end="187:16">(</operator><name pos:start="187:17" pos:end="187:28"><name pos:start="187:17" pos:end="187:18">th</name><operator pos:start="187:19" pos:end="187:20">-&gt;</operator><name pos:start="187:21" pos:end="187:28">protocol</name></name> <operator pos:start="187:30" pos:end="187:31">==</operator> <name pos:start="187:33" pos:end="187:53">RTSP_PROTOCOL_RTP_UDP</name> <operator pos:start="187:55" pos:end="187:56">&amp;&amp;</operator>

                <name pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:18">th</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:35">client_port_min</name></name> <operator pos:start="189:37" pos:end="189:38">&lt;=</operator> <literal type="number" pos:start="189:40" pos:end="189:40">0</literal><operator pos:start="189:41" pos:end="189:41">)</operator></expr>)</condition> <block pos:start="189:44" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:15">

        <expr_stmt pos:start="191:9" pos:end="191:51"><expr pos:start="191:9" pos:end="191:50"><call pos:start="191:9" pos:end="191:50"><name pos:start="191:9" pos:end="191:24">rtsp_reply_error</name><argument_list pos:start="191:25" pos:end="191:50">(<argument pos:start="191:26" pos:end="191:26"><expr pos:start="191:26" pos:end="191:26"><name pos:start="191:26" pos:end="191:26">c</name></expr></argument>, <argument pos:start="191:29" pos:end="191:49"><expr pos:start="191:29" pos:end="191:49"><name pos:start="191:29" pos:end="191:49">RTSP_STATUS_TRANSPORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="193:9" pos:end="193:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="199:5" pos:end="199:31">/* setup default options */</comment>

    <expr_stmt pos:start="201:5" pos:end="201:37"><expr pos:start="201:5" pos:end="201:36"><name pos:start="201:5" pos:end="201:29"><name pos:start="201:5" pos:end="201:9">setup</name><operator pos:start="201:10" pos:end="201:10">.</operator><name pos:start="201:11" pos:end="201:26">transport_option</name><index pos:start="201:27" pos:end="201:29">[<expr pos:start="201:28" pos:end="201:28"><literal type="number" pos:start="201:28" pos:end="201:28">0</literal></expr>]</index></name> <operator pos:start="201:31" pos:end="201:31">=</operator> <literal type="char" pos:start="201:33" pos:end="201:36">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:33"><expr pos:start="203:5" pos:end="203:32"><name pos:start="203:5" pos:end="203:13">dest_addr</name> <operator pos:start="203:15" pos:end="203:15">=</operator> <name pos:start="203:17" pos:end="203:32"><name pos:start="203:17" pos:end="203:21">rtp_c</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:32">from_addr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:52"><expr pos:start="205:5" pos:end="205:51"><name pos:start="205:5" pos:end="205:22"><name pos:start="205:5" pos:end="205:13">dest_addr</name><operator pos:start="205:14" pos:end="205:14">.</operator><name pos:start="205:15" pos:end="205:22">sin_port</name></name> <operator pos:start="205:24" pos:end="205:24">=</operator> <call pos:start="205:26" pos:end="205:51"><name pos:start="205:26" pos:end="205:30">htons</name><argument_list pos:start="205:31" pos:end="205:51">(<argument pos:start="205:32" pos:end="205:50"><expr pos:start="205:32" pos:end="205:50"><name pos:start="205:32" pos:end="205:50"><name pos:start="205:32" pos:end="205:33">th</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:50">client_port_min</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="209:5" pos:end="209:22">/* setup stream */</comment>

    <if_stmt pos:start="211:5" pos:end="217:5"><if pos:start="211:5" pos:end="217:5">if <condition pos:start="211:8" pos:end="211:66">(<expr pos:start="211:9" pos:end="211:65"><call pos:start="211:9" pos:end="211:61"><name pos:start="211:9" pos:end="211:25">rtp_new_av_stream</name><argument_list pos:start="211:26" pos:end="211:61">(<argument pos:start="211:27" pos:end="211:31"><expr pos:start="211:27" pos:end="211:31"><name pos:start="211:27" pos:end="211:31">rtp_c</name></expr></argument>, <argument pos:start="211:34" pos:end="211:45"><expr pos:start="211:34" pos:end="211:45"><name pos:start="211:34" pos:end="211:45">stream_index</name></expr></argument>, <argument pos:start="211:48" pos:end="211:57"><expr pos:start="211:48" pos:end="211:57"><operator pos:start="211:48" pos:end="211:48">&amp;</operator><name pos:start="211:49" pos:end="211:57">dest_addr</name></expr></argument>, <argument pos:start="211:60" pos:end="211:60"><expr pos:start="211:60" pos:end="211:60"><name pos:start="211:60" pos:end="211:60">c</name></expr></argument>)</argument_list></call> <operator pos:start="211:63" pos:end="211:63">&lt;</operator> <literal type="number" pos:start="211:65" pos:end="211:65">0</literal></expr>)</condition> <block pos:start="211:68" pos:end="217:5">{<block_content pos:start="213:9" pos:end="215:15">

        <expr_stmt pos:start="213:9" pos:end="213:51"><expr pos:start="213:9" pos:end="213:50"><call pos:start="213:9" pos:end="213:50"><name pos:start="213:9" pos:end="213:24">rtsp_reply_error</name><argument_list pos:start="213:25" pos:end="213:50">(<argument pos:start="213:26" pos:end="213:26"><expr pos:start="213:26" pos:end="213:26"><name pos:start="213:26" pos:end="213:26">c</name></expr></argument>, <argument pos:start="213:29" pos:end="213:49"><expr pos:start="213:29" pos:end="213:49"><name pos:start="213:29" pos:end="213:49">RTSP_STATUS_TRANSPORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="215:9" pos:end="215:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="221:5" pos:end="221:72">/* now everything is OK, so we can send the connection parameters */</comment>

    <expr_stmt pos:start="223:5" pos:end="223:41"><expr pos:start="223:5" pos:end="223:40"><call pos:start="223:5" pos:end="223:40"><name pos:start="223:5" pos:end="223:21">rtsp_reply_header</name><argument_list pos:start="223:22" pos:end="223:40">(<argument pos:start="223:23" pos:end="223:23"><expr pos:start="223:23" pos:end="223:23"><name pos:start="223:23" pos:end="223:23">c</name></expr></argument>, <argument pos:start="223:26" pos:end="223:39"><expr pos:start="223:26" pos:end="223:39"><name pos:start="223:26" pos:end="223:39">RTSP_STATUS_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="225:5" pos:end="225:20">/* session ID */</comment>

    <expr_stmt pos:start="227:5" pos:end="227:61"><expr pos:start="227:5" pos:end="227:60"><call pos:start="227:5" pos:end="227:60"><name pos:start="227:5" pos:end="227:15">url_fprintf</name><argument_list pos:start="227:16" pos:end="227:60">(<argument pos:start="227:17" pos:end="227:21"><expr pos:start="227:17" pos:end="227:21"><name pos:start="227:17" pos:end="227:21"><name pos:start="227:17" pos:end="227:17">c</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:21">pb</name></name></expr></argument>, <argument pos:start="227:24" pos:end="227:40"><expr pos:start="227:24" pos:end="227:40"><literal type="string" pos:start="227:24" pos:end="227:40">"Session: %s\r\n"</literal></expr></argument>, <argument pos:start="227:43" pos:end="227:59"><expr pos:start="227:43" pos:end="227:59"><name pos:start="227:43" pos:end="227:59"><name pos:start="227:43" pos:end="227:47">rtp_c</name><operator pos:start="227:48" pos:end="227:49">-&gt;</operator><name pos:start="227:50" pos:end="227:59">session_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="231:5" pos:end="259:5">switch<condition pos:start="231:11" pos:end="231:31">(<expr pos:start="231:12" pos:end="231:30"><name pos:start="231:12" pos:end="231:30"><name pos:start="231:12" pos:end="231:16">rtp_c</name><operator pos:start="231:17" pos:end="231:18">-&gt;</operator><name pos:start="231:19" pos:end="231:30">rtp_protocol</name></name></expr>)</condition> <block pos:start="231:33" pos:end="259:5">{<block_content pos:start="233:5" pos:end="257:14">

    <case pos:start="233:5" pos:end="233:31">case <expr pos:start="233:10" pos:end="233:30"><name pos:start="233:10" pos:end="233:30">RTSP_PROTOCOL_RTP_UDP</name></expr>:</case>

        <expr_stmt pos:start="235:9" pos:end="235:68"><expr pos:start="235:9" pos:end="235:67"><name pos:start="235:9" pos:end="235:12">port</name> <operator pos:start="235:14" pos:end="235:14">=</operator> <call pos:start="235:16" pos:end="235:67"><name pos:start="235:16" pos:end="235:33">rtp_get_local_port</name><argument_list pos:start="235:34" pos:end="235:67">(<argument pos:start="235:35" pos:end="235:66"><expr pos:start="235:35" pos:end="235:66"><name pos:start="235:35" pos:end="235:66"><name pos:start="235:35" pos:end="235:39">rtp_c</name><operator pos:start="235:40" pos:end="235:41">-&gt;</operator><name pos:start="235:42" pos:end="235:52">rtp_handles</name><index pos:start="235:53" pos:end="235:66">[<expr pos:start="235:54" pos:end="235:65"><name pos:start="235:54" pos:end="235:65">stream_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="243:36"><expr pos:start="237:9" pos:end="243:35"><call pos:start="237:9" pos:end="243:35"><name pos:start="237:9" pos:end="237:19">url_fprintf</name><argument_list pos:start="237:20" pos:end="243:35">(<argument pos:start="237:21" pos:end="237:25"><expr pos:start="237:21" pos:end="237:25"><name pos:start="237:21" pos:end="237:25"><name pos:start="237:21" pos:end="237:21">c</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:25">pb</name></name></expr></argument>, <argument pos:start="237:28" pos:end="239:57"><expr pos:start="237:28" pos:end="239:57"><literal type="string" pos:start="237:28" pos:end="237:60">"Transport: RTP/AVP/UDP;unicast;"</literal>

                    <literal type="string" pos:start="239:21" pos:end="239:57">"client_port=%d-%d;server_port=%d-%d"</literal></expr></argument>,

                    <argument pos:start="241:21" pos:end="241:39"><expr pos:start="241:21" pos:end="241:39"><name pos:start="241:21" pos:end="241:39"><name pos:start="241:21" pos:end="241:22">th</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:39">client_port_min</name></name></expr></argument>, <argument pos:start="241:42" pos:end="241:64"><expr pos:start="241:42" pos:end="241:64"><name pos:start="241:42" pos:end="241:60"><name pos:start="241:42" pos:end="241:43">th</name><operator pos:start="241:44" pos:end="241:45">-&gt;</operator><name pos:start="241:46" pos:end="241:60">client_port_min</name></name> <operator pos:start="241:62" pos:end="241:62">+</operator> <literal type="number" pos:start="241:64" pos:end="241:64">1</literal></expr></argument>,

                    <argument pos:start="243:21" pos:end="243:24"><expr pos:start="243:21" pos:end="243:24"><name pos:start="243:21" pos:end="243:24">port</name></expr></argument>, <argument pos:start="243:27" pos:end="243:34"><expr pos:start="243:27" pos:end="243:34"><name pos:start="243:27" pos:end="243:30">port</name> <operator pos:start="243:32" pos:end="243:32">+</operator> <literal type="number" pos:start="243:34" pos:end="243:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="245:9" pos:end="245:14">break;</break>

    <case pos:start="247:5" pos:end="247:31">case <expr pos:start="247:10" pos:end="247:30"><name pos:start="247:10" pos:end="247:30">RTSP_PROTOCOL_RTP_TCP</name></expr>:</case>

        <expr_stmt pos:start="249:9" pos:end="251:60"><expr pos:start="249:9" pos:end="251:59"><call pos:start="249:9" pos:end="251:59"><name pos:start="249:9" pos:end="249:19">url_fprintf</name><argument_list pos:start="249:20" pos:end="251:59">(<argument pos:start="249:21" pos:end="249:25"><expr pos:start="249:21" pos:end="249:25"><name pos:start="249:21" pos:end="249:25"><name pos:start="249:21" pos:end="249:21">c</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:25">pb</name></name></expr></argument>, <argument pos:start="249:28" pos:end="249:69"><expr pos:start="249:28" pos:end="249:69"><literal type="string" pos:start="249:28" pos:end="249:69">"Transport: RTP/AVP/TCP;interleaved=%d-%d"</literal></expr></argument>,

                    <argument pos:start="251:21" pos:end="251:36"><expr pos:start="251:21" pos:end="251:36"><name pos:start="251:21" pos:end="251:32">stream_index</name> <operator pos:start="251:34" pos:end="251:34">*</operator> <literal type="number" pos:start="251:36" pos:end="251:36">2</literal></expr></argument>, <argument pos:start="251:39" pos:end="251:58"><expr pos:start="251:39" pos:end="251:58"><name pos:start="251:39" pos:end="251:50">stream_index</name> <operator pos:start="251:52" pos:end="251:52">*</operator> <literal type="number" pos:start="251:54" pos:end="251:56">2</literal> <operator pos:start="251:56" pos:end="251:56">+</operator> <literal type="number" pos:start="251:58" pos:end="251:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="253:9" pos:end="253:14">break;</break>

    <default pos:start="255:5" pos:end="255:12">default:</default>

        <break pos:start="257:9" pos:end="257:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="261:5" pos:end="263:58"><if pos:start="261:5" pos:end="263:58">if <condition pos:start="261:8" pos:end="261:42">(<expr pos:start="261:9" pos:end="261:41"><name pos:start="261:9" pos:end="261:33"><name pos:start="261:9" pos:end="261:13">setup</name><operator pos:start="261:14" pos:end="261:14">.</operator><name pos:start="261:15" pos:end="261:30">transport_option</name><index pos:start="261:31" pos:end="261:33">[<expr pos:start="261:32" pos:end="261:32"><literal type="number" pos:start="261:32" pos:end="261:32">0</literal></expr>]</index></name> <operator pos:start="261:35" pos:end="261:36">!=</operator> <literal type="char" pos:start="261:38" pos:end="261:41">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="263:9" pos:end="263:58"><block_content pos:start="263:9" pos:end="263:58">

        <expr_stmt pos:start="263:9" pos:end="263:58"><expr pos:start="263:9" pos:end="263:57"><call pos:start="263:9" pos:end="263:57"><name pos:start="263:9" pos:end="263:19">url_fprintf</name><argument_list pos:start="263:20" pos:end="263:57">(<argument pos:start="263:21" pos:end="263:25"><expr pos:start="263:21" pos:end="263:25"><name pos:start="263:21" pos:end="263:25"><name pos:start="263:21" pos:end="263:21">c</name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:25">pb</name></name></expr></argument>, <argument pos:start="263:28" pos:end="263:32"><expr pos:start="263:28" pos:end="263:32"><literal type="string" pos:start="263:28" pos:end="263:32">";%s"</literal></expr></argument>, <argument pos:start="263:35" pos:end="263:56"><expr pos:start="263:35" pos:end="263:56"><name pos:start="263:35" pos:end="263:56"><name pos:start="263:35" pos:end="263:39">setup</name><operator pos:start="263:40" pos:end="263:40">.</operator><name pos:start="263:41" pos:end="263:56">transport_option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:31"><expr pos:start="265:5" pos:end="265:30"><call pos:start="265:5" pos:end="265:30"><name pos:start="265:5" pos:end="265:15">url_fprintf</name><argument_list pos:start="265:16" pos:end="265:30">(<argument pos:start="265:17" pos:end="265:21"><expr pos:start="265:17" pos:end="265:21"><name pos:start="265:17" pos:end="265:21"><name pos:start="265:17" pos:end="265:17">c</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:21">pb</name></name></expr></argument>, <argument pos:start="265:24" pos:end="265:29"><expr pos:start="265:24" pos:end="265:29"><literal type="string" pos:start="265:24" pos:end="265:29">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="271:5" pos:end="271:31"><expr pos:start="271:5" pos:end="271:30"><call pos:start="271:5" pos:end="271:30"><name pos:start="271:5" pos:end="271:15">url_fprintf</name><argument_list pos:start="271:16" pos:end="271:30">(<argument pos:start="271:17" pos:end="271:21"><expr pos:start="271:17" pos:end="271:21"><name pos:start="271:17" pos:end="271:21"><name pos:start="271:17" pos:end="271:17">c</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:21">pb</name></name></expr></argument>, <argument pos:start="271:24" pos:end="271:29"><expr pos:start="271:24" pos:end="271:29"><literal type="string" pos:start="271:24" pos:end="271:29">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
