<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10512.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:28">mdct_init</name><parameter_list pos:start="1:29" pos:end="3:39">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><name pos:start="1:53" pos:end="1:66">AC3MDCTContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">mdct</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:38"><decl pos:start="3:30" pos:end="3:38"><type pos:start="3:30" pos:end="3:38"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:38">nbits</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:27">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">n</name></decl>, <decl pos:start="7:15" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:16">n4</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:21">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:5">n</name>  <operator pos:start="11:8" pos:end="11:8">=</operator> <literal type="number" pos:start="11:10" pos:end="11:10">1</literal> <operator pos:start="11:12" pos:end="11:13">&lt;&lt;</operator> <name pos:start="11:15" pos:end="11:19">nbits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:6">n4</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:10">n</name> <operator pos:start="13:12" pos:end="13:13">&gt;&gt;</operator> <literal type="number" pos:start="13:15" pos:end="13:15">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:8">mdct</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:15">nbits</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:23">nbits</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:42"><name pos:start="21:11" pos:end="21:18">fft_init</name><argument_list pos:start="21:19" pos:end="21:42">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:24">avctx</name></expr></argument>, <argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">mdct</name></expr></argument>, <argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:37">nbits</name> <operator pos:start="21:39" pos:end="21:39">-</operator> <literal type="number" pos:start="21:41" pos:end="21:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:19"><if pos:start="23:5" pos:end="25:19">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">ret</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:19"><block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:8">mdct</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:16">window</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:32">ff_ac3_window</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:91"><expr pos:start="33:5" pos:end="33:90"><call pos:start="33:5" pos:end="33:90"><name pos:start="33:5" pos:end="33:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="33:21" pos:end="33:90">(<argument pos:start="33:22" pos:end="33:26"><expr pos:start="33:22" pos:end="33:26"><name pos:start="33:22" pos:end="33:26">avctx</name></expr></argument>, <argument pos:start="33:29" pos:end="33:39"><expr pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:32">mdct</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:39">xcos1</name></name></expr></argument>,    <argument pos:start="33:45" pos:end="33:69"><expr pos:start="33:45" pos:end="33:69"><name pos:start="33:45" pos:end="33:46">n4</name> <operator pos:start="33:48" pos:end="33:48">*</operator> <sizeof pos:start="33:50" pos:end="33:69">sizeof<argument_list pos:start="33:56" pos:end="33:69">(<argument pos:start="33:57" pos:end="33:68"><expr pos:start="33:57" pos:end="33:68"><operator pos:start="33:57" pos:end="33:57">*</operator><name pos:start="33:58" pos:end="33:68"><name pos:start="33:58" pos:end="33:61">mdct</name><operator pos:start="33:62" pos:end="33:63">-&gt;</operator><name pos:start="33:64" pos:end="33:68">xcos1</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,    <argument pos:start="33:75" pos:end="33:89"><expr pos:start="33:75" pos:end="33:89"><name pos:start="33:75" pos:end="33:89">mdct_alloc_fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:91"><expr pos:start="35:5" pos:end="35:90"><call pos:start="35:5" pos:end="35:90"><name pos:start="35:5" pos:end="35:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="35:21" pos:end="35:90">(<argument pos:start="35:22" pos:end="35:26"><expr pos:start="35:22" pos:end="35:26"><name pos:start="35:22" pos:end="35:26">avctx</name></expr></argument>, <argument pos:start="35:29" pos:end="35:39"><expr pos:start="35:29" pos:end="35:39"><name pos:start="35:29" pos:end="35:39"><name pos:start="35:29" pos:end="35:32">mdct</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:39">xsin1</name></name></expr></argument>,    <argument pos:start="35:45" pos:end="35:69"><expr pos:start="35:45" pos:end="35:69"><name pos:start="35:45" pos:end="35:46">n4</name> <operator pos:start="35:48" pos:end="35:48">*</operator> <sizeof pos:start="35:50" pos:end="35:69">sizeof<argument_list pos:start="35:56" pos:end="35:69">(<argument pos:start="35:57" pos:end="35:68"><expr pos:start="35:57" pos:end="35:68"><operator pos:start="35:57" pos:end="35:57">*</operator><name pos:start="35:58" pos:end="35:68"><name pos:start="35:58" pos:end="35:61">mdct</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:68">xsin1</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,    <argument pos:start="35:75" pos:end="35:89"><expr pos:start="35:75" pos:end="35:89"><name pos:start="35:75" pos:end="35:89">mdct_alloc_fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:91"><expr pos:start="37:5" pos:end="37:90"><call pos:start="37:5" pos:end="37:90"><name pos:start="37:5" pos:end="37:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="37:21" pos:end="37:90">(<argument pos:start="37:22" pos:end="37:26"><expr pos:start="37:22" pos:end="37:26"><name pos:start="37:22" pos:end="37:26">avctx</name></expr></argument>, <argument pos:start="37:29" pos:end="37:41"><expr pos:start="37:29" pos:end="37:41"><name pos:start="37:29" pos:end="37:41"><name pos:start="37:29" pos:end="37:32">mdct</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:41">rot_tmp</name></name></expr></argument>,  <argument pos:start="37:45" pos:end="37:71"><expr pos:start="37:45" pos:end="37:71"><name pos:start="37:45" pos:end="37:45">n</name>  <operator pos:start="37:48" pos:end="37:48">*</operator> <sizeof pos:start="37:50" pos:end="37:71">sizeof<argument_list pos:start="37:56" pos:end="37:71">(<argument pos:start="37:57" pos:end="37:70"><expr pos:start="37:57" pos:end="37:70"><operator pos:start="37:57" pos:end="37:57">*</operator><name pos:start="37:58" pos:end="37:70"><name pos:start="37:58" pos:end="37:61">mdct</name><operator pos:start="37:62" pos:end="37:63">-&gt;</operator><name pos:start="37:64" pos:end="37:70">rot_tmp</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,  <argument pos:start="37:75" pos:end="37:89"><expr pos:start="37:75" pos:end="37:89"><name pos:start="37:75" pos:end="37:89">mdct_alloc_fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:91"><expr pos:start="39:5" pos:end="39:90"><call pos:start="39:5" pos:end="39:90"><name pos:start="39:5" pos:end="39:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="39:21" pos:end="39:90">(<argument pos:start="39:22" pos:end="39:26"><expr pos:start="39:22" pos:end="39:26"><name pos:start="39:22" pos:end="39:26">avctx</name></expr></argument>, <argument pos:start="39:29" pos:end="39:42"><expr pos:start="39:29" pos:end="39:42"><name pos:start="39:29" pos:end="39:42"><name pos:start="39:29" pos:end="39:32">mdct</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:42">cplx_tmp</name></name></expr></argument>, <argument pos:start="39:45" pos:end="39:72"><expr pos:start="39:45" pos:end="39:72"><name pos:start="39:45" pos:end="39:46">n4</name> <operator pos:start="39:48" pos:end="39:48">*</operator> <sizeof pos:start="39:50" pos:end="39:72">sizeof<argument_list pos:start="39:56" pos:end="39:72">(<argument pos:start="39:57" pos:end="39:71"><expr pos:start="39:57" pos:end="39:71"><operator pos:start="39:57" pos:end="39:57">*</operator><name pos:start="39:58" pos:end="39:71"><name pos:start="39:58" pos:end="39:61">mdct</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:71">cplx_tmp</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:75" pos:end="39:89"><expr pos:start="39:75" pos:end="39:89"><name pos:start="39:75" pos:end="39:89">mdct_alloc_fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="51:5">for <control pos:start="43:9" pos:end="43:28">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:23"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:22">n4</name></expr>;</condition> <incr pos:start="43:25" pos:end="43:27"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:25">i</name><operator pos:start="43:26" pos:end="43:27">++</operator></expr></incr>)</control> <block pos:start="43:30" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:44">

        <decl_stmt pos:start="45:9" pos:end="45:55"><decl pos:start="45:9" pos:end="45:54"><type pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:13">float</name></type> <name pos:start="45:15" pos:end="45:19">alpha</name> <init pos:start="45:21" pos:end="45:54">= <expr pos:start="45:23" pos:end="45:54"><literal type="number" pos:start="45:23" pos:end="45:25">2.0</literal> <operator pos:start="45:27" pos:end="45:27">*</operator> <name pos:start="45:29" pos:end="45:32">M_PI</name> <operator pos:start="45:34" pos:end="45:34">*</operator> <operator pos:start="45:36" pos:end="45:36">(</operator><name pos:start="45:37" pos:end="45:37">i</name> <operator pos:start="45:39" pos:end="45:39">+</operator> <literal type="number" pos:start="45:41" pos:end="45:43">1.0</literal> <operator pos:start="45:45" pos:end="45:45">/</operator> <literal type="number" pos:start="45:47" pos:end="45:49">8.0</literal><operator pos:start="45:50" pos:end="45:50">)</operator> <operator pos:start="45:52" pos:end="45:52">/</operator> <name pos:start="45:54" pos:end="45:54">n</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:12">mdct</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:19">xcos1</name><index pos:start="47:20" pos:end="47:22">[<expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">i</name></expr>]</index></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:43"><name pos:start="47:26" pos:end="47:30">FIX15</name><argument_list pos:start="47:31" pos:end="47:43">(<argument pos:start="47:32" pos:end="47:42"><expr pos:start="47:32" pos:end="47:42"><operator pos:start="47:32" pos:end="47:32">-</operator><call pos:start="47:33" pos:end="47:42"><name pos:start="47:33" pos:end="47:35">cos</name><argument_list pos:start="47:36" pos:end="47:42">(<argument pos:start="47:37" pos:end="47:41"><expr pos:start="47:37" pos:end="47:41"><name pos:start="47:37" pos:end="47:41">alpha</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:44"><expr pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:12">mdct</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:19">xsin1</name><index pos:start="49:20" pos:end="49:22">[<expr pos:start="49:21" pos:end="49:21"><name pos:start="49:21" pos:end="49:21">i</name></expr>]</index></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:43"><name pos:start="49:26" pos:end="49:30">FIX15</name><argument_list pos:start="49:31" pos:end="49:43">(<argument pos:start="49:32" pos:end="49:42"><expr pos:start="49:32" pos:end="49:42"><operator pos:start="49:32" pos:end="49:32">-</operator><call pos:start="49:33" pos:end="49:42"><name pos:start="49:33" pos:end="49:35">sin</name><argument_list pos:start="49:36" pos:end="49:42">(<argument pos:start="49:37" pos:end="49:41"><expr pos:start="49:37" pos:end="49:41"><name pos:start="49:37" pos:end="49:41">alpha</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

<label pos:start="57:1" pos:end="57:16"><name pos:start="57:1" pos:end="57:15">mdct_alloc_fail</name>:</label>

    <expr_stmt pos:start="59:5" pos:end="59:19"><expr pos:start="59:5" pos:end="59:18"><call pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:12">mdct_end</name><argument_list pos:start="59:13" pos:end="59:18">(<argument pos:start="59:14" pos:end="59:17"><expr pos:start="59:14" pos:end="59:17"><name pos:start="59:14" pos:end="59:17">mdct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:27">return <expr pos:start="61:12" pos:end="61:26"><call pos:start="61:12" pos:end="61:26"><name pos:start="61:12" pos:end="61:18">AVERROR</name><argument_list pos:start="61:19" pos:end="61:26">(<argument pos:start="61:20" pos:end="61:25"><expr pos:start="61:20" pos:end="61:25"><name pos:start="61:20" pos:end="61:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
