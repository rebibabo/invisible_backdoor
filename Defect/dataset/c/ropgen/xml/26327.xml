<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26327.c" pos:tabs="8"><function pos:start="1:1" pos:end="114:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">AVFormatContext</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:38">ff_rtp_chain_mux_open</name><parameter_list pos:start="1:39" pos:end="3:75">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><name pos:start="1:40" pos:end="1:54">AVFormatContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:67">AVStream</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">st</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:57"><decl pos:start="3:40" pos:end="3:57"><type pos:start="3:40" pos:end="3:57"><name pos:start="3:40" pos:end="3:49">URLContext</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:57">handle</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:74"><decl pos:start="3:60" pos:end="3:74"><type pos:start="3:60" pos:end="3:74"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:74">packet_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="114:1">{<block_content pos:start="7:5" pos:end="112:18">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:27">rtpctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:68"><decl pos:start="11:5" pos:end="11:67"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVOutputFormat</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:30">rtp_format</name> <init pos:start="11:32" pos:end="11:67">= <expr pos:start="11:34" pos:end="11:67"><call pos:start="11:34" pos:end="11:67"><name pos:start="11:34" pos:end="11:48">av_guess_format</name><argument_list pos:start="11:49" pos:end="11:67">(<argument pos:start="11:50" pos:end="11:54"><expr pos:start="11:50" pos:end="11:54"><literal type="string" pos:start="11:50" pos:end="11:54">"rtp"</literal></expr></argument>, <argument pos:start="11:57" pos:end="11:60"><expr pos:start="11:57" pos:end="11:60"><name pos:start="11:57" pos:end="11:60">NULL</name></expr></argument>, <argument pos:start="11:63" pos:end="11:66"><expr pos:start="11:63" pos:end="11:66"><name pos:start="11:63" pos:end="11:66">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:20"><if pos:start="15:5" pos:end="17:20">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19">rtp_format</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:20"><block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:60">/* Allocate an AVFormatContext for each output stream */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:10">rtpctx</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:37"><name pos:start="23:14" pos:end="23:35">avformat_alloc_context</name><argument_list pos:start="23:36" pos:end="23:37">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:20"><if pos:start="25:5" pos:end="27:20">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:15">rtpctx</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:20"><block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:10">rtpctx</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:19">oformat</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:32">rtp_format</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:34">(<expr pos:start="33:9" pos:end="33:33"><operator pos:start="33:9" pos:end="33:9">!</operator><call pos:start="33:10" pos:end="33:33"><name pos:start="33:10" pos:end="33:22">av_new_stream</name><argument_list pos:start="33:23" pos:end="33:33">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:29">rtpctx</name></expr></argument>, <argument pos:start="33:32" pos:end="33:32"><expr pos:start="33:32" pos:end="33:32"><literal type="number" pos:start="33:32" pos:end="33:32">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:36" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:20">

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><call pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:15">av_free</name><argument_list pos:start="35:16" pos:end="35:23">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">rtpctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:20">return <expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="41:5" pos:end="41:63">/* Copy the max delay setting; the rtp muxer reads this. */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:10">rtpctx</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:21">max_delay</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:36">max_delay</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="45:5" pos:end="45:39">/* Copy other stream parameters. */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:70"><expr pos:start="47:5" pos:end="47:69"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:10">rtpctx</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:19">streams</name><index pos:start="47:20" pos:end="47:22">[<expr pos:start="47:21" pos:end="47:21"><literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>]</index></name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:43">sample_aspect_ratio</name> <operator pos:start="47:45" pos:end="47:45">=</operator> <name pos:start="47:47" pos:end="47:69"><name pos:start="47:47" pos:end="47:48">st</name><operator pos:start="47:49" pos:end="47:50">-&gt;</operator><name pos:start="47:51" pos:end="47:69">sample_aspect_ratio</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:42">/* Set the synchronized start time. */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:57"><expr pos:start="53:5" pos:end="53:56"><name pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:10">rtpctx</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:31">start_time_realtime</name></name> <operator pos:start="53:33" pos:end="53:33">=</operator> <name pos:start="53:35" pos:end="53:56"><name pos:start="53:35" pos:end="53:35">s</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:56">start_time_realtime</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="61:27">/* Remove the local codec, link to the original codec

     * context instead, to give the rtp muxer access to

     * codec parameters. */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><call pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:11">av_free</name><argument_list pos:start="63:12" pos:end="63:38">(<argument pos:start="63:13" pos:end="63:37"><expr pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:18">rtpctx</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:27">streams</name><index pos:start="63:28" pos:end="63:30">[<expr pos:start="63:29" pos:end="63:29"><literal type="number" pos:start="63:29" pos:end="63:29">0</literal></expr>]</index></name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:37">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:10">rtpctx</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:19">streams</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>]</index></name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:29">codec</name> <operator pos:start="65:31" pos:end="65:31">=</operator> <name pos:start="65:33" pos:end="65:41"><name pos:start="65:33" pos:end="65:34">st</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:41">codec</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="75:58"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:15">(<expr pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:14">handle</name></expr>)</condition> <block pos:start="69:17" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:40">

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><call pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:18">url_fdopen</name><argument_list pos:start="71:19" pos:end="71:39">(<argument pos:start="71:20" pos:end="71:30"><expr pos:start="71:20" pos:end="71:30"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:30"><name pos:start="71:21" pos:end="71:26">rtpctx</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:30">pb</name></name></expr></argument>, <argument pos:start="71:33" pos:end="71:38"><expr pos:start="71:33" pos:end="71:38"><name pos:start="71:33" pos:end="71:38">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="75:58">else<block type="pseudo" pos:start="75:9" pos:end="75:58"><block_content pos:start="75:9" pos:end="75:58">

        <expr_stmt pos:start="75:9" pos:end="75:58"><expr pos:start="75:9" pos:end="75:57"><call pos:start="75:9" pos:end="75:57"><name pos:start="75:9" pos:end="75:31">url_open_dyn_packet_buf</name><argument_list pos:start="75:32" pos:end="75:57">(<argument pos:start="75:33" pos:end="75:43"><expr pos:start="75:33" pos:end="75:43"><operator pos:start="75:33" pos:end="75:33">&amp;</operator><name pos:start="75:34" pos:end="75:43"><name pos:start="75:34" pos:end="75:39">rtpctx</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:43">pb</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:56"><expr pos:start="75:46" pos:end="75:56"><name pos:start="75:46" pos:end="75:56">packet_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:7">ret</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:33"><name pos:start="77:11" pos:end="77:25">av_write_header</name><argument_list pos:start="77:26" pos:end="77:33">(<argument pos:start="77:27" pos:end="77:32"><expr pos:start="77:27" pos:end="77:32"><name pos:start="77:27" pos:end="77:32">rtpctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="104:5"><if pos:start="81:5" pos:end="104:5">if <condition pos:start="81:8" pos:end="81:12">(<expr pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">ret</name></expr>)</condition> <block pos:start="81:14" pos:end="104:5">{<block_content pos:start="83:9" pos:end="102:20">

        <if_stmt pos:start="83:9" pos:end="95:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:19">(<expr pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:18">handle</name></expr>)</condition> <block pos:start="83:21" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:35">

            <expr_stmt pos:start="85:13" pos:end="85:35"><expr pos:start="85:13" pos:end="85:34"><call pos:start="85:13" pos:end="85:34"><name pos:start="85:13" pos:end="85:22">url_fclose</name><argument_list pos:start="85:23" pos:end="85:34">(<argument pos:start="85:24" pos:end="85:33"><expr pos:start="85:24" pos:end="85:33"><name pos:start="85:24" pos:end="85:33"><name pos:start="85:24" pos:end="85:29">rtpctx</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="95:9">else <block pos:start="87:16" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:25">

            <decl_stmt pos:start="89:13" pos:end="89:25"><decl pos:start="89:13" pos:end="89:24"><type pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:19">uint8_t</name> <modifier pos:start="89:21" pos:end="89:21">*</modifier></type><name pos:start="89:22" pos:end="89:24">ptr</name></decl>;</decl_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:48"><expr pos:start="91:13" pos:end="91:47"><call pos:start="91:13" pos:end="91:47"><name pos:start="91:13" pos:end="91:29">url_close_dyn_buf</name><argument_list pos:start="91:30" pos:end="91:47">(<argument pos:start="91:31" pos:end="91:40"><expr pos:start="91:31" pos:end="91:40"><name pos:start="91:31" pos:end="91:40"><name pos:start="91:31" pos:end="91:36">rtpctx</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:40">pb</name></name></expr></argument>, <argument pos:start="91:43" pos:end="91:46"><expr pos:start="91:43" pos:end="91:46"><operator pos:start="91:43" pos:end="91:43">&amp;</operator><name pos:start="91:44" pos:end="91:46">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:25"><expr pos:start="93:13" pos:end="93:24"><call pos:start="93:13" pos:end="93:24"><name pos:start="93:13" pos:end="93:19">av_free</name><argument_list pos:start="93:20" pos:end="93:24">(<argument pos:start="93:21" pos:end="93:23"><expr pos:start="93:21" pos:end="93:23"><name pos:start="93:21" pos:end="93:23">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>


        <expr_stmt pos:start="98:9" pos:end="98:36"><expr pos:start="98:9" pos:end="98:35"><call pos:start="98:9" pos:end="98:35"><name pos:start="98:9" pos:end="98:15">av_free</name><argument_list pos:start="98:16" pos:end="98:35">(<argument pos:start="98:17" pos:end="98:34"><expr pos:start="98:17" pos:end="98:34"><name pos:start="98:17" pos:end="98:34"><name pos:start="98:17" pos:end="98:22">rtpctx</name><operator pos:start="98:23" pos:end="98:24">-&gt;</operator><name pos:start="98:25" pos:end="98:31">streams</name><index pos:start="98:32" pos:end="98:34">[<expr pos:start="98:33" pos:end="98:33"><literal type="number" pos:start="98:33" pos:end="98:33">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="100:9" pos:end="100:24"><expr pos:start="100:9" pos:end="100:23"><call pos:start="100:9" pos:end="100:23"><name pos:start="100:9" pos:end="100:15">av_free</name><argument_list pos:start="100:16" pos:end="100:23">(<argument pos:start="100:17" pos:end="100:22"><expr pos:start="100:17" pos:end="100:22"><name pos:start="100:17" pos:end="100:22">rtpctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="102:9" pos:end="102:20">return <expr pos:start="102:16" pos:end="102:19"><name pos:start="102:16" pos:end="102:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="108:5" pos:end="108:70">/* Copy the RTP AVStream timebase back to the original AVStream */</comment>

    <expr_stmt pos:start="110:5" pos:end="110:50"><expr pos:start="110:5" pos:end="110:49"><name pos:start="110:5" pos:end="110:17"><name pos:start="110:5" pos:end="110:6">st</name><operator pos:start="110:7" pos:end="110:8">-&gt;</operator><name pos:start="110:9" pos:end="110:17">time_base</name></name> <operator pos:start="110:19" pos:end="110:19">=</operator> <name pos:start="110:21" pos:end="110:38"><name pos:start="110:21" pos:end="110:26">rtpctx</name><operator pos:start="110:27" pos:end="110:28">-&gt;</operator><name pos:start="110:29" pos:end="110:35">streams</name><index pos:start="110:36" pos:end="110:38">[<expr pos:start="110:37" pos:end="110:37"><literal type="number" pos:start="110:37" pos:end="110:37">0</literal></expr>]</index></name><operator pos:start="110:39" pos:end="110:40">-&gt;</operator><name pos:start="110:41" pos:end="110:49">time_base</name></expr>;</expr_stmt>

    <return pos:start="112:5" pos:end="112:18">return <expr pos:start="112:12" pos:end="112:17"><name pos:start="112:12" pos:end="112:17">rtpctx</name></expr>;</return>

</block_content>}</block></function></unit>
