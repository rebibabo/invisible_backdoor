<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23858.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">scsi_command_complete</name><parameter_list pos:start="1:34" pos:end="1:56">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:55"><decl pos:start="1:49" pos:end="1:55"><type pos:start="1:49" pos:end="1:55"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:55">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">SCSIGenericReq</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">r</name> <init pos:start="7:23" pos:end="7:48">= <expr pos:start="7:25" pos:end="7:48"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">SCSIGenericReq</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator><name pos:start="7:43" pos:end="7:48">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">r</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:10">req</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:16">aiocb</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:23">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:9">r</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">req</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:26">io_canceled</name></name></expr>)</condition> <block pos:start="13:29" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:18">

        <goto pos:start="15:9" pos:end="15:18">goto <name pos:start="15:14" pos:end="15:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:57">(<expr pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:9">r</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">io_header</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:34">driver_status</name></name> <operator pos:start="19:36" pos:end="19:36">&amp;</operator> <name pos:start="19:38" pos:end="19:56">SG_ERR_DRIVER_SENSE</name></expr>)</condition> <block pos:start="19:59" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:50">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:9">r</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:14">req</name><operator pos:start="21:15" pos:end="21:15">.</operator><name pos:start="21:16" pos:end="21:24">sense_len</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:49"><name pos:start="21:28" pos:end="21:28">r</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:39">io_header</name><operator pos:start="21:40" pos:end="21:40">.</operator><name pos:start="21:41" pos:end="21:49">sb_len_wr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="89:5"><if pos:start="27:5" pos:end="55:5">if <condition pos:start="27:8" pos:end="27:17">(<expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:14">!=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>)</condition> <block pos:start="27:19" pos:end="55:5">{<block_content pos:start="29:9" pos:end="53:9">

        <switch pos:start="29:9" pos:end="53:9">switch <condition pos:start="29:16" pos:end="29:20">(<expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">ret</name></expr>)</condition> <block pos:start="29:22" pos:end="53:9">{<block_content pos:start="31:9" pos:end="51:18">

        <case pos:start="31:9" pos:end="31:19">case <expr pos:start="31:14" pos:end="31:18"><operator pos:start="31:14" pos:end="31:14">-</operator><name pos:start="31:15" pos:end="31:18">EDOM</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:18">status</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:34">TASK_SET_FULL</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:21">case <expr pos:start="37:14" pos:end="37:20"><operator pos:start="37:14" pos:end="37:14">-</operator><name pos:start="37:15" pos:end="37:20">ENOMEM</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:37"><expr pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:18">status</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:36">CHECK_CONDITION</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:70"><expr pos:start="41:13" pos:end="41:69"><call pos:start="41:13" pos:end="41:69"><name pos:start="41:13" pos:end="41:32">scsi_req_build_sense</name><argument_list pos:start="41:33" pos:end="41:69">(<argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:40"><name pos:start="41:35" pos:end="41:35">r</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:40">req</name></name></expr></argument>, <argument pos:start="41:43" pos:end="41:68"><expr pos:start="41:43" pos:end="41:68"><call pos:start="41:43" pos:end="41:68"><name pos:start="41:43" pos:end="41:52">SENSE_CODE</name><argument_list pos:start="41:53" pos:end="41:68">(<argument pos:start="41:54" pos:end="41:67"><expr pos:start="41:54" pos:end="41:67"><name pos:start="41:54" pos:end="41:67">TARGET_FAILURE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <default pos:start="45:9" pos:end="45:16">default:</default>

            <expr_stmt pos:start="47:13" pos:end="47:37"><expr pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:18">status</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:36">CHECK_CONDITION</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:64"><expr pos:start="49:13" pos:end="49:63"><call pos:start="49:13" pos:end="49:63"><name pos:start="49:13" pos:end="49:32">scsi_req_build_sense</name><argument_list pos:start="49:33" pos:end="49:63">(<argument pos:start="49:34" pos:end="49:40"><expr pos:start="49:34" pos:end="49:40"><operator pos:start="49:34" pos:end="49:34">&amp;</operator><name pos:start="49:35" pos:end="49:40"><name pos:start="49:35" pos:end="49:35">r</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:40">req</name></name></expr></argument>, <argument pos:start="49:43" pos:end="49:62"><expr pos:start="49:43" pos:end="49:62"><call pos:start="49:43" pos:end="49:62"><name pos:start="49:43" pos:end="49:52">SENSE_CODE</name><argument_list pos:start="49:53" pos:end="49:62">(<argument pos:start="49:54" pos:end="49:61"><expr pos:start="49:54" pos:end="49:61"><name pos:start="49:54" pos:end="49:61">IO_ERROR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="89:5">else <block pos:start="55:12" pos:end="89:5">{<block_content pos:start="57:9" pos:end="87:9">

        <if_stmt pos:start="57:9" pos:end="87:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="63:65">(<expr pos:start="57:13" pos:end="63:64"><name pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:13">r</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:24">io_header</name><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:36">host_status</name></name> <operator pos:start="57:38" pos:end="57:39">==</operator> <name pos:start="57:41" pos:end="57:61">SG_ERR_DID_NO_CONNECT</name> <operator pos:start="57:63" pos:end="57:64">||</operator>

            <name pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:13">r</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:24">io_header</name><operator pos:start="59:25" pos:end="59:25">.</operator><name pos:start="59:26" pos:end="59:36">host_status</name></name> <operator pos:start="59:38" pos:end="59:39">==</operator> <name pos:start="59:41" pos:end="59:59">SG_ERR_DID_BUS_BUSY</name> <operator pos:start="59:61" pos:end="59:62">||</operator>

            <name pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:13">r</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:24">io_header</name><operator pos:start="61:25" pos:end="61:25">.</operator><name pos:start="61:26" pos:end="61:36">host_status</name></name> <operator pos:start="61:38" pos:end="61:39">==</operator> <name pos:start="61:41" pos:end="61:59">SG_ERR_DID_TIME_OUT</name> <operator pos:start="61:61" pos:end="61:62">||</operator>

            <operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:39"><name pos:start="63:14" pos:end="63:14">r</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:25">io_header</name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:39">driver_status</name></name> <operator pos:start="63:41" pos:end="63:41">&amp;</operator> <name pos:start="63:43" pos:end="63:63">SG_ERR_DRIVER_TIMEOUT</name><operator pos:start="63:64" pos:end="63:64">)</operator></expr>)</condition> <block pos:start="63:67" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:37">

            <expr_stmt pos:start="65:13" pos:end="65:26"><expr pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:18">status</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:25">BUSY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:16">BADF</name><argument_list pos:start="67:17" pos:end="67:36">(<argument pos:start="67:18" pos:end="67:35"><expr pos:start="67:18" pos:end="67:35"><literal type="string" pos:start="67:18" pos:end="67:35">"Driver Timeout\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="69:11" pos:end="75:9">else if <condition pos:start="69:19" pos:end="69:44">(<expr pos:start="69:20" pos:end="69:43"><name pos:start="69:20" pos:end="69:43"><name pos:start="69:20" pos:end="69:20">r</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:31">io_header</name><operator pos:start="69:32" pos:end="69:32">.</operator><name pos:start="69:33" pos:end="69:43">host_status</name></name></expr>)</condition> <block pos:start="69:46" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:70">

            <expr_stmt pos:start="71:13" pos:end="71:37"><expr pos:start="71:13" pos:end="71:36"><name pos:start="71:13" pos:end="71:18">status</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:36">CHECK_CONDITION</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:70"><expr pos:start="73:13" pos:end="73:69"><call pos:start="73:13" pos:end="73:69"><name pos:start="73:13" pos:end="73:32">scsi_req_build_sense</name><argument_list pos:start="73:33" pos:end="73:69">(<argument pos:start="73:34" pos:end="73:40"><expr pos:start="73:34" pos:end="73:40"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:40"><name pos:start="73:35" pos:end="73:35">r</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:40">req</name></name></expr></argument>, <argument pos:start="73:43" pos:end="73:68"><expr pos:start="73:43" pos:end="73:68"><call pos:start="73:43" pos:end="73:68"><name pos:start="73:43" pos:end="73:52">SENSE_CODE</name><argument_list pos:start="73:53" pos:end="73:68">(<argument pos:start="73:54" pos:end="73:67"><expr pos:start="73:54" pos:end="73:67"><name pos:start="73:54" pos:end="73:67">I_T_NEXUS_LOSS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="75:11" pos:end="79:9">else if <condition pos:start="75:19" pos:end="75:39">(<expr pos:start="75:20" pos:end="75:38"><name pos:start="75:20" pos:end="75:38"><name pos:start="75:20" pos:end="75:20">r</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:31">io_header</name><operator pos:start="75:32" pos:end="75:32">.</operator><name pos:start="75:33" pos:end="75:38">status</name></name></expr>)</condition> <block pos:start="75:41" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:41">

            <expr_stmt pos:start="77:13" pos:end="77:41"><expr pos:start="77:13" pos:end="77:40"><name pos:start="77:13" pos:end="77:18">status</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:40"><name pos:start="77:22" pos:end="77:22">r</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:33">io_header</name><operator pos:start="77:34" pos:end="77:34">.</operator><name pos:start="77:35" pos:end="77:40">status</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="79:11" pos:end="83:9">else if <condition pos:start="79:19" pos:end="79:68">(<expr pos:start="79:20" pos:end="79:67"><name pos:start="79:20" pos:end="79:45"><name pos:start="79:20" pos:end="79:20">r</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:31">io_header</name><operator pos:start="79:32" pos:end="79:32">.</operator><name pos:start="79:33" pos:end="79:45">driver_status</name></name> <operator pos:start="79:47" pos:end="79:47">&amp;</operator> <name pos:start="79:49" pos:end="79:67">SG_ERR_DRIVER_SENSE</name></expr>)</condition> <block pos:start="79:70" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:37">

            <expr_stmt pos:start="81:13" pos:end="81:37"><expr pos:start="81:13" pos:end="81:36"><name pos:start="81:13" pos:end="81:18">status</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:36">CHECK_CONDITION</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="87:9">else <block pos:start="83:16" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:26">

            <expr_stmt pos:start="85:13" pos:end="85:26"><expr pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:18">status</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:25">GOOD</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:35"><expr pos:start="91:5" pos:end="93:34"><call pos:start="91:5" pos:end="93:34"><name pos:start="91:5" pos:end="91:11">DPRINTF</name><argument_list pos:start="91:12" pos:end="93:34">(<argument pos:start="91:13" pos:end="91:56"><expr pos:start="91:13" pos:end="91:56"><literal type="string" pos:start="91:13" pos:end="91:56">"Command complete 0x%p tag=0x%x status=%d\n"</literal></expr></argument>,

            <argument pos:start="93:13" pos:end="93:13"><expr pos:start="93:13" pos:end="93:13"><name pos:start="93:13" pos:end="93:13">r</name></expr></argument>, <argument pos:start="93:16" pos:end="93:25"><expr pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:16">r</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:21">req</name><operator pos:start="93:22" pos:end="93:22">.</operator><name pos:start="93:23" pos:end="93:25">tag</name></name></expr></argument>, <argument pos:start="93:28" pos:end="93:33"><expr pos:start="93:28" pos:end="93:33"><name pos:start="93:28" pos:end="93:33">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:39"><expr pos:start="97:5" pos:end="97:38"><call pos:start="97:5" pos:end="97:38"><name pos:start="97:5" pos:end="97:21">scsi_req_complete</name><argument_list pos:start="97:22" pos:end="97:38">(<argument pos:start="97:23" pos:end="97:29"><expr pos:start="97:23" pos:end="97:29"><operator pos:start="97:23" pos:end="97:23">&amp;</operator><name pos:start="97:24" pos:end="97:29"><name pos:start="97:24" pos:end="97:24">r</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:29">req</name></name></expr></argument>, <argument pos:start="97:32" pos:end="97:37"><expr pos:start="97:32" pos:end="97:37"><name pos:start="97:32" pos:end="97:37">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="99:1" pos:end="99:5"><name pos:start="99:1" pos:end="99:4">done</name>:</label>

    <if_stmt pos:start="101:5" pos:end="105:5"><if pos:start="101:5" pos:end="105:5">if <condition pos:start="101:8" pos:end="101:28">(<expr pos:start="101:9" pos:end="101:27"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:27"><name pos:start="101:10" pos:end="101:10">r</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:15">req</name><operator pos:start="101:16" pos:end="101:16">.</operator><name pos:start="101:17" pos:end="101:27">io_canceled</name></name></expr>)</condition> <block pos:start="101:30" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:32">

        <expr_stmt pos:start="103:9" pos:end="103:32"><expr pos:start="103:9" pos:end="103:31"><call pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:22">scsi_req_unref</name><argument_list pos:start="103:23" pos:end="103:31">(<argument pos:start="103:24" pos:end="103:30"><expr pos:start="103:24" pos:end="103:30"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:30"><name pos:start="103:25" pos:end="103:25">r</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:30">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
