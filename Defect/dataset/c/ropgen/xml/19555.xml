<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19555.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">blk_mig_save_dirty_block</name><parameter_list pos:start="1:36" pos:end="1:62">(<parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:44">QEMUFile</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">f</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:61">is_async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:15">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BlkMigDevState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">bmds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">1</literal></expr></init></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:61"><name pos:start="11:5" pos:end="11:20">QSIMPLEQ_FOREACH</name><argument_list pos:start="11:21" pos:end="11:61">(<argument pos:start="11:22" pos:end="11:25">bmds</argument>, <argument pos:start="11:28" pos:end="11:53">&amp;block_mig_state.bmds_list</argument>, <argument pos:start="11:56" pos:end="11:60">entry</argument>)</argument_list></macro> <block pos:start="11:63" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:9">

        <expr_stmt pos:start="13:9" pos:end="13:55"><expr pos:start="13:9" pos:end="13:54"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:54"><name pos:start="13:15" pos:end="13:35">mig_save_device_dirty</name><argument_list pos:start="13:36" pos:end="13:54">(<argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><name pos:start="13:37" pos:end="13:37">f</name></expr></argument>, <argument pos:start="13:40" pos:end="13:43"><expr pos:start="13:40" pos:end="13:43"><name pos:start="13:40" pos:end="13:43">bmds</name></expr></argument>, <argument pos:start="13:46" pos:end="13:53"><expr pos:start="13:46" pos:end="13:53"><name pos:start="13:46" pos:end="13:53">is_async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:21">(<expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:18">&lt;=</operator> <literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>)</condition> <block pos:start="15:23" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:18">

            <break pos:start="17:13" pos:end="17:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="25:5" pos:end="25:15">return <expr pos:start="25:12" pos:end="25:14"><name pos:start="25:12" pos:end="25:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
