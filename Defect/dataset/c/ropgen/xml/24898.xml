<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24898.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type>  <name pos:start="1:14" pos:end="1:28">ahci_port_write</name><parameter_list pos:start="1:29" pos:end="1:78">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:38">AHCIState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:51"><decl pos:start="1:44" pos:end="1:51"><type pos:start="1:44" pos:end="1:51"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:51">port</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:73">uint32_t</name></type> <name pos:start="1:75" pos:end="1:77">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:5">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">AHCIPortRegs</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">pr</name> <init pos:start="5:22" pos:end="5:46">= <expr pos:start="5:24" pos:end="5:46"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">dev</name><index pos:start="5:31" pos:end="5:36">[<expr pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">port</name></expr>]</index></name><operator pos:start="5:37" pos:end="5:37">.</operator><name pos:start="5:38" pos:end="5:46">port_regs</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:59"><expr pos:start="9:5" pos:end="9:58"><call pos:start="9:5" pos:end="9:58"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="9:58">(<argument pos:start="9:13" pos:end="9:16"><expr pos:start="9:13" pos:end="9:16"><name pos:start="9:13" pos:end="9:16">port</name></expr></argument>, <argument pos:start="9:19" pos:end="9:44"><expr pos:start="9:19" pos:end="9:44"><literal type="string" pos:start="9:19" pos:end="9:44">"offset: 0x%x val: 0x%x\n"</literal></expr></argument>, <argument pos:start="9:47" pos:end="9:52"><expr pos:start="9:47" pos:end="9:52"><name pos:start="9:47" pos:end="9:52">offset</name></expr></argument>, <argument pos:start="9:55" pos:end="9:57"><expr pos:start="9:55" pos:end="9:57"><name pos:start="9:55" pos:end="9:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="11:5" pos:end="179:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="179:5">{<block_content pos:start="13:9" pos:end="177:18">

        <case pos:start="13:9" pos:end="13:27">case <expr pos:start="13:14" pos:end="13:26"><name pos:start="13:14" pos:end="13:26">PORT_LST_ADDR</name></expr>:</case>

            <expr_stmt pos:start="15:13" pos:end="15:31"><expr pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:14">pr</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:24">lst_addr</name></name> <operator pos:start="15:26" pos:end="15:26">=</operator> <name pos:start="15:28" pos:end="15:30">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="19:77"><expr pos:start="17:13" pos:end="19:76"><call pos:start="17:13" pos:end="19:76"><name pos:start="17:13" pos:end="17:20">map_page</name><argument_list pos:start="17:21" pos:end="19:76">(<argument pos:start="17:22" pos:end="17:26"><expr pos:start="17:22" pos:end="17:26"><name pos:start="17:22" pos:end="17:26"><name pos:start="17:22" pos:end="17:22">s</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:26">as</name></name></expr></argument>, <argument pos:start="17:29" pos:end="17:45"><expr pos:start="17:29" pos:end="17:45"><operator pos:start="17:29" pos:end="17:29">&amp;</operator><name pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:35">dev</name><index pos:start="17:36" pos:end="17:41">[<expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">port</name></expr>]</index></name><operator pos:start="17:42" pos:end="17:42">.</operator><name pos:start="17:43" pos:end="17:45">lst</name></expr></argument>,

                     <argument pos:start="19:22" pos:end="19:69"><expr pos:start="19:22" pos:end="19:69"><operator pos:start="19:22" pos:end="19:22">(</operator><operator pos:start="19:23" pos:end="19:23">(</operator><name pos:start="19:24" pos:end="19:31">uint64_t</name><operator pos:start="19:32" pos:end="19:32">)</operator><name pos:start="19:33" pos:end="19:47"><name pos:start="19:33" pos:end="19:34">pr</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:47">lst_addr_hi</name></name> <operator pos:start="19:49" pos:end="19:50">&lt;&lt;</operator> <literal type="number" pos:start="19:52" pos:end="19:53">32</literal><operator pos:start="19:54" pos:end="19:54">)</operator> <operator pos:start="19:56" pos:end="19:56">|</operator> <name pos:start="19:58" pos:end="19:69"><name pos:start="19:58" pos:end="19:59">pr</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:69">lst_addr</name></name></expr></argument>, <argument pos:start="19:72" pos:end="19:75"><expr pos:start="19:72" pos:end="19:75"><literal type="number" pos:start="19:72" pos:end="19:75">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:40"><expr pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:18">dev</name><index pos:start="21:19" pos:end="21:24">[<expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">port</name></expr>]</index></name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:32">cur_cmd</name> <operator pos:start="21:34" pos:end="21:34">=</operator> <name pos:start="21:36" pos:end="21:39">NULL</name></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>

        <case pos:start="25:9" pos:end="25:30">case <expr pos:start="25:14" pos:end="25:29"><name pos:start="25:14" pos:end="25:29">PORT_LST_ADDR_HI</name></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:34"><expr pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:14">pr</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:27">lst_addr_hi</name></name> <operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:33">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="31:77"><expr pos:start="29:13" pos:end="31:76"><call pos:start="29:13" pos:end="31:76"><name pos:start="29:13" pos:end="29:20">map_page</name><argument_list pos:start="29:21" pos:end="31:76">(<argument pos:start="29:22" pos:end="29:26"><expr pos:start="29:22" pos:end="29:26"><name pos:start="29:22" pos:end="29:26"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:26">as</name></name></expr></argument>, <argument pos:start="29:29" pos:end="29:45"><expr pos:start="29:29" pos:end="29:45"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:41"><name pos:start="29:30" pos:end="29:30">s</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:35">dev</name><index pos:start="29:36" pos:end="29:41">[<expr pos:start="29:37" pos:end="29:40"><name pos:start="29:37" pos:end="29:40">port</name></expr>]</index></name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:45">lst</name></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:69"><expr pos:start="31:22" pos:end="31:69"><operator pos:start="31:22" pos:end="31:22">(</operator><operator pos:start="31:23" pos:end="31:23">(</operator><name pos:start="31:24" pos:end="31:31">uint64_t</name><operator pos:start="31:32" pos:end="31:32">)</operator><name pos:start="31:33" pos:end="31:47"><name pos:start="31:33" pos:end="31:34">pr</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:47">lst_addr_hi</name></name> <operator pos:start="31:49" pos:end="31:50">&lt;&lt;</operator> <literal type="number" pos:start="31:52" pos:end="31:53">32</literal><operator pos:start="31:54" pos:end="31:54">)</operator> <operator pos:start="31:56" pos:end="31:56">|</operator> <name pos:start="31:58" pos:end="31:69"><name pos:start="31:58" pos:end="31:59">pr</name><operator pos:start="31:60" pos:end="31:61">-&gt;</operator><name pos:start="31:62" pos:end="31:69">lst_addr</name></name></expr></argument>, <argument pos:start="31:72" pos:end="31:75"><expr pos:start="31:72" pos:end="31:75"><literal type="number" pos:start="31:72" pos:end="31:75">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:40"><expr pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:18">dev</name><index pos:start="33:19" pos:end="33:24">[<expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">port</name></expr>]</index></name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:32">cur_cmd</name> <operator pos:start="33:34" pos:end="33:34">=</operator> <name pos:start="33:36" pos:end="33:39">NULL</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:27">case <expr pos:start="37:14" pos:end="37:26"><name pos:start="37:14" pos:end="37:26">PORT_FIS_ADDR</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:31"><expr pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:14">pr</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:24">fis_addr</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:30">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="43:76"><expr pos:start="41:13" pos:end="43:75"><call pos:start="41:13" pos:end="43:75"><name pos:start="41:13" pos:end="41:20">map_page</name><argument_list pos:start="41:21" pos:end="43:75">(<argument pos:start="41:22" pos:end="41:26"><expr pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:26">as</name></name></expr></argument>, <argument pos:start="41:29" pos:end="41:49"><expr pos:start="41:29" pos:end="41:49"><operator pos:start="41:29" pos:end="41:29">&amp;</operator><name pos:start="41:30" pos:end="41:41"><name pos:start="41:30" pos:end="41:30">s</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:35">dev</name><index pos:start="41:36" pos:end="41:41">[<expr pos:start="41:37" pos:end="41:40"><name pos:start="41:37" pos:end="41:40">port</name></expr>]</index></name><operator pos:start="41:42" pos:end="41:42">.</operator><name pos:start="41:43" pos:end="41:49">res_fis</name></expr></argument>,

                     <argument pos:start="43:22" pos:end="43:69"><expr pos:start="43:22" pos:end="43:69"><operator pos:start="43:22" pos:end="43:22">(</operator><operator pos:start="43:23" pos:end="43:23">(</operator><name pos:start="43:24" pos:end="43:31">uint64_t</name><operator pos:start="43:32" pos:end="43:32">)</operator><name pos:start="43:33" pos:end="43:47"><name pos:start="43:33" pos:end="43:34">pr</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:47">fis_addr_hi</name></name> <operator pos:start="43:49" pos:end="43:50">&lt;&lt;</operator> <literal type="number" pos:start="43:52" pos:end="43:53">32</literal><operator pos:start="43:54" pos:end="43:54">)</operator> <operator pos:start="43:56" pos:end="43:56">|</operator> <name pos:start="43:58" pos:end="43:69"><name pos:start="43:58" pos:end="43:59">pr</name><operator pos:start="43:60" pos:end="43:61">-&gt;</operator><name pos:start="43:62" pos:end="43:69">fis_addr</name></name></expr></argument>, <argument pos:start="43:72" pos:end="43:74"><expr pos:start="43:72" pos:end="43:74"><literal type="number" pos:start="43:72" pos:end="43:74">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:30">case <expr pos:start="47:14" pos:end="47:29"><name pos:start="47:14" pos:end="47:29">PORT_FIS_ADDR_HI</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:34"><expr pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:14">pr</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:27">fis_addr_hi</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:33">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="53:76"><expr pos:start="51:13" pos:end="53:75"><call pos:start="51:13" pos:end="53:75"><name pos:start="51:13" pos:end="51:20">map_page</name><argument_list pos:start="51:21" pos:end="53:75">(<argument pos:start="51:22" pos:end="51:26"><expr pos:start="51:22" pos:end="51:26"><name pos:start="51:22" pos:end="51:26"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:26">as</name></name></expr></argument>, <argument pos:start="51:29" pos:end="51:49"><expr pos:start="51:29" pos:end="51:49"><operator pos:start="51:29" pos:end="51:29">&amp;</operator><name pos:start="51:30" pos:end="51:41"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:35">dev</name><index pos:start="51:36" pos:end="51:41">[<expr pos:start="51:37" pos:end="51:40"><name pos:start="51:37" pos:end="51:40">port</name></expr>]</index></name><operator pos:start="51:42" pos:end="51:42">.</operator><name pos:start="51:43" pos:end="51:49">res_fis</name></expr></argument>,

                     <argument pos:start="53:22" pos:end="53:69"><expr pos:start="53:22" pos:end="53:69"><operator pos:start="53:22" pos:end="53:22">(</operator><operator pos:start="53:23" pos:end="53:23">(</operator><name pos:start="53:24" pos:end="53:31">uint64_t</name><operator pos:start="53:32" pos:end="53:32">)</operator><name pos:start="53:33" pos:end="53:47"><name pos:start="53:33" pos:end="53:34">pr</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:47">fis_addr_hi</name></name> <operator pos:start="53:49" pos:end="53:50">&lt;&lt;</operator> <literal type="number" pos:start="53:52" pos:end="53:53">32</literal><operator pos:start="53:54" pos:end="53:54">)</operator> <operator pos:start="53:56" pos:end="53:56">|</operator> <name pos:start="53:58" pos:end="53:69"><name pos:start="53:58" pos:end="53:59">pr</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:69">fis_addr</name></name></expr></argument>, <argument pos:start="53:72" pos:end="53:74"><expr pos:start="53:72" pos:end="53:74"><literal type="number" pos:start="53:72" pos:end="53:74">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:27">case <expr pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:26">PORT_IRQ_STAT</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:14">pr</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:24">irq_stat</name></name> <operator pos:start="59:26" pos:end="59:27">&amp;=</operator> <operator pos:start="59:29" pos:end="59:29">~</operator><name pos:start="59:30" pos:end="59:32">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><call pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:26">ahci_check_irq</name><argument_list pos:start="61:27" pos:end="61:29">(<argument pos:start="61:28" pos:end="61:28"><expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:27">case <expr pos:start="65:14" pos:end="65:26"><name pos:start="65:14" pos:end="65:26">PORT_IRQ_MASK</name></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:44"><expr pos:start="67:13" pos:end="67:43"><name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:14">pr</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:24">irq_mask</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:30">val</name> <operator pos:start="67:32" pos:end="67:32">&amp;</operator> <literal type="number" pos:start="67:34" pos:end="67:43">0xfdc000ff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:30"><expr pos:start="69:13" pos:end="69:29"><call pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:26">ahci_check_irq</name><argument_list pos:start="69:27" pos:end="69:29">(<argument pos:start="69:28" pos:end="69:28"><expr pos:start="69:28" pos:end="69:28"><name pos:start="69:28" pos:end="69:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:22">case <expr pos:start="73:14" pos:end="73:21"><name pos:start="73:14" pos:end="73:21">PORT_CMD</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:66"><expr pos:start="75:13" pos:end="75:65"><name pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:14">pr</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:19">cmd</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:25">val</name> <operator pos:start="75:27" pos:end="75:27">&amp;</operator> <operator pos:start="75:29" pos:end="75:29">~</operator><operator pos:start="75:30" pos:end="75:30">(</operator><name pos:start="75:31" pos:end="75:46">PORT_CMD_LIST_ON</name> <operator pos:start="75:48" pos:end="75:48">|</operator> <name pos:start="75:50" pos:end="75:64">PORT_CMD_FIS_ON</name><operator pos:start="75:65" pos:end="75:65">)</operator></expr>;</expr_stmt>



            <if_stmt pos:start="79:13" pos:end="83:13"><if pos:start="79:13" pos:end="83:13">if <condition pos:start="79:16" pos:end="79:41">(<expr pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:18">pr</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:23">cmd</name></name> <operator pos:start="79:25" pos:end="79:25">&amp;</operator> <name pos:start="79:27" pos:end="79:40">PORT_CMD_START</name></expr>)</condition> <block pos:start="79:43" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:44">

                <expr_stmt pos:start="81:17" pos:end="81:44"><expr pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:18">pr</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:23">cmd</name></name> <operator pos:start="81:25" pos:end="81:26">|=</operator> <name pos:start="81:28" pos:end="81:43">PORT_CMD_LIST_ON</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="87:13" pos:end="91:13"><if pos:start="87:13" pos:end="91:13">if <condition pos:start="87:16" pos:end="87:42">(<expr pos:start="87:17" pos:end="87:41"><name pos:start="87:17" pos:end="87:23"><name pos:start="87:17" pos:end="87:18">pr</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:23">cmd</name></name> <operator pos:start="87:25" pos:end="87:25">&amp;</operator> <name pos:start="87:27" pos:end="87:41">PORT_CMD_FIS_RX</name></expr>)</condition> <block pos:start="87:44" pos:end="91:13">{<block_content pos:start="89:17" pos:end="89:43">

                <expr_stmt pos:start="89:17" pos:end="89:43"><expr pos:start="89:17" pos:end="89:42"><name pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:18">pr</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:23">cmd</name></name> <operator pos:start="89:25" pos:end="89:26">|=</operator> <name pos:start="89:28" pos:end="89:42">PORT_CMD_FIS_ON</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="95:13" pos:end="101:43">/* XXX usually the FIS would be pending on the bus here and

                   issuing deferred until the OS enables FIS receival.

                   Instead, we only submit it once - which works in most

                   cases, but is a hack. */</comment>

            <if_stmt pos:start="103:13" pos:end="111:13"><if pos:start="103:13" pos:end="111:13">if <condition pos:start="103:16" pos:end="105:44">(<expr pos:start="103:17" pos:end="105:43"><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:24"><name pos:start="103:18" pos:end="103:19">pr</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:24">cmd</name></name> <operator pos:start="103:26" pos:end="103:26">&amp;</operator> <name pos:start="103:28" pos:end="103:42">PORT_CMD_FIS_ON</name><operator pos:start="103:43" pos:end="103:43">)</operator> <operator pos:start="103:45" pos:end="103:46">&amp;&amp;</operator>

                <operator pos:start="105:17" pos:end="105:17">!</operator><name pos:start="105:18" pos:end="105:29"><name pos:start="105:18" pos:end="105:18">s</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:23">dev</name><index pos:start="105:24" pos:end="105:29">[<expr pos:start="105:25" pos:end="105:28"><name pos:start="105:25" pos:end="105:28">port</name></expr>]</index></name><operator pos:start="105:30" pos:end="105:30">.</operator><name pos:start="105:31" pos:end="105:43">init_d2h_sent</name></expr>)</condition> <block pos:start="105:46" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:50">

                <expr_stmt pos:start="107:17" pos:end="107:45"><expr pos:start="107:17" pos:end="107:44"><call pos:start="107:17" pos:end="107:44"><name pos:start="107:17" pos:end="107:29">ahci_init_d2h</name><argument_list pos:start="107:30" pos:end="107:44">(<argument pos:start="107:31" pos:end="107:43"><expr pos:start="107:31" pos:end="107:43"><operator pos:start="107:31" pos:end="107:31">&amp;</operator><name pos:start="107:32" pos:end="107:43"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:37">dev</name><index pos:start="107:38" pos:end="107:43">[<expr pos:start="107:39" pos:end="107:42"><name pos:start="107:39" pos:end="107:42">port</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:50"><expr pos:start="109:17" pos:end="109:49"><name pos:start="109:17" pos:end="109:28"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:22">dev</name><index pos:start="109:23" pos:end="109:28">[<expr pos:start="109:24" pos:end="109:27"><name pos:start="109:24" pos:end="109:27">port</name></expr>]</index></name><operator pos:start="109:29" pos:end="109:29">.</operator><name pos:start="109:30" pos:end="109:42">init_d2h_sent</name> <operator pos:start="109:44" pos:end="109:44">=</operator> <name pos:start="109:46" pos:end="109:49">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:31"><expr pos:start="115:13" pos:end="115:30"><call pos:start="115:13" pos:end="115:30"><name pos:start="115:13" pos:end="115:21">check_cmd</name><argument_list pos:start="115:22" pos:end="115:30">(<argument pos:start="115:23" pos:end="115:23"><expr pos:start="115:23" pos:end="115:23"><name pos:start="115:23" pos:end="115:23">s</name></expr></argument>, <argument pos:start="115:26" pos:end="115:29"><expr pos:start="115:26" pos:end="115:29"><name pos:start="115:26" pos:end="115:29">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:25">case <expr pos:start="119:14" pos:end="119:24"><name pos:start="119:14" pos:end="119:24">PORT_TFDATA</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:63"><expr pos:start="121:13" pos:end="121:62"><name pos:start="121:13" pos:end="121:24"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:18">dev</name><index pos:start="121:19" pos:end="121:24">[<expr pos:start="121:20" pos:end="121:23"><name pos:start="121:20" pos:end="121:23">port</name></expr>]</index></name><operator pos:start="121:25" pos:end="121:25">.</operator><name pos:start="121:26" pos:end="121:36"><name pos:start="121:26" pos:end="121:29">port</name><operator pos:start="121:30" pos:end="121:30">.</operator><name pos:start="121:31" pos:end="121:33">ifs</name><index pos:start="121:34" pos:end="121:36">[<expr pos:start="121:35" pos:end="121:35"><literal type="number" pos:start="121:35" pos:end="121:35">0</literal></expr>]</index></name><operator pos:start="121:37" pos:end="121:37">.</operator><name pos:start="121:38" pos:end="121:42">error</name> <operator pos:start="121:44" pos:end="121:44">=</operator> <operator pos:start="121:46" pos:end="121:46">(</operator><name pos:start="121:47" pos:end="121:49">val</name> <operator pos:start="121:51" pos:end="121:52">&gt;&gt;</operator> <literal type="number" pos:start="121:54" pos:end="121:54">8</literal><operator pos:start="121:55" pos:end="121:55">)</operator> <operator pos:start="121:57" pos:end="121:57">&amp;</operator> <literal type="number" pos:start="121:59" pos:end="121:62">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:57"><expr pos:start="123:13" pos:end="123:56"><name pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:18">dev</name><index pos:start="123:19" pos:end="123:24">[<expr pos:start="123:20" pos:end="123:23"><name pos:start="123:20" pos:end="123:23">port</name></expr>]</index></name><operator pos:start="123:25" pos:end="123:25">.</operator><name pos:start="123:26" pos:end="123:36"><name pos:start="123:26" pos:end="123:29">port</name><operator pos:start="123:30" pos:end="123:30">.</operator><name pos:start="123:31" pos:end="123:33">ifs</name><index pos:start="123:34" pos:end="123:36">[<expr pos:start="123:35" pos:end="123:35"><literal type="number" pos:start="123:35" pos:end="123:35">0</literal></expr>]</index></name><operator pos:start="123:37" pos:end="123:37">.</operator><name pos:start="123:38" pos:end="123:43">status</name> <operator pos:start="123:45" pos:end="123:45">=</operator> <name pos:start="123:47" pos:end="123:49">val</name> <operator pos:start="123:51" pos:end="123:51">&amp;</operator> <literal type="number" pos:start="123:53" pos:end="123:56">0xff</literal></expr>;</expr_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        <case pos:start="127:9" pos:end="127:22">case <expr pos:start="127:14" pos:end="127:21"><name pos:start="127:14" pos:end="127:21">PORT_SIG</name></expr>:</case>

            <expr_stmt pos:start="129:13" pos:end="129:26"><expr pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:14">pr</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:19">sig</name></name> <operator pos:start="129:21" pos:end="129:21">=</operator> <name pos:start="129:23" pos:end="129:25">val</name></expr>;</expr_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        <case pos:start="133:9" pos:end="133:27">case <expr pos:start="133:14" pos:end="133:26"><name pos:start="133:14" pos:end="133:26">PORT_SCR_STAT</name></expr>:</case>

            <expr_stmt pos:start="135:13" pos:end="135:31"><expr pos:start="135:13" pos:end="135:30"><name pos:start="135:13" pos:end="135:24"><name pos:start="135:13" pos:end="135:14">pr</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:24">scr_stat</name></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:30">val</name></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:26">case <expr pos:start="139:14" pos:end="139:25"><name pos:start="139:14" pos:end="139:25">PORT_SCR_CTL</name></expr>:</case>

            <if_stmt pos:start="141:13" pos:end="147:13"><if pos:start="141:13" pos:end="147:13">if <condition pos:start="141:16" pos:end="143:49">(<expr pos:start="141:17" pos:end="143:48"><operator pos:start="141:17" pos:end="141:17">(</operator><operator pos:start="141:18" pos:end="141:18">(</operator><name pos:start="141:19" pos:end="141:29"><name pos:start="141:19" pos:end="141:20">pr</name><operator pos:start="141:21" pos:end="141:22">-&gt;</operator><name pos:start="141:23" pos:end="141:29">scr_ctl</name></name> <operator pos:start="141:31" pos:end="141:31">&amp;</operator> <name pos:start="141:33" pos:end="141:49">AHCI_SCR_SCTL_DET</name><operator pos:start="141:50" pos:end="141:50">)</operator> <operator pos:start="141:52" pos:end="141:53">==</operator> <literal type="number" pos:start="141:55" pos:end="141:55">1</literal><operator pos:start="141:56" pos:end="141:56">)</operator> <operator pos:start="141:58" pos:end="141:59">&amp;&amp;</operator>

                <operator pos:start="143:17" pos:end="143:17">(</operator><operator pos:start="143:18" pos:end="143:18">(</operator><name pos:start="143:19" pos:end="143:21">val</name> <operator pos:start="143:23" pos:end="143:23">&amp;</operator> <name pos:start="143:25" pos:end="143:41">AHCI_SCR_SCTL_DET</name><operator pos:start="143:42" pos:end="143:42">)</operator> <operator pos:start="143:44" pos:end="143:45">==</operator> <literal type="number" pos:start="143:47" pos:end="143:47">0</literal><operator pos:start="143:48" pos:end="143:48">)</operator></expr>)</condition> <block pos:start="143:51" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:41">

                <expr_stmt pos:start="145:17" pos:end="145:41"><expr pos:start="145:17" pos:end="145:40"><call pos:start="145:17" pos:end="145:40"><name pos:start="145:17" pos:end="145:31">ahci_reset_port</name><argument_list pos:start="145:32" pos:end="145:40">(<argument pos:start="145:33" pos:end="145:33"><expr pos:start="145:33" pos:end="145:33"><name pos:start="145:33" pos:end="145:33">s</name></expr></argument>, <argument pos:start="145:36" pos:end="145:39"><expr pos:start="145:36" pos:end="145:39"><name pos:start="145:36" pos:end="145:39">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:30"><expr pos:start="149:13" pos:end="149:29"><name pos:start="149:13" pos:end="149:23"><name pos:start="149:13" pos:end="149:14">pr</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:23">scr_ctl</name></name> <operator pos:start="149:25" pos:end="149:25">=</operator> <name pos:start="149:27" pos:end="149:29">val</name></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <case pos:start="153:9" pos:end="153:26">case <expr pos:start="153:14" pos:end="153:25"><name pos:start="153:14" pos:end="153:25">PORT_SCR_ERR</name></expr>:</case>

            <expr_stmt pos:start="155:13" pos:end="155:32"><expr pos:start="155:13" pos:end="155:31"><name pos:start="155:13" pos:end="155:23"><name pos:start="155:13" pos:end="155:14">pr</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:23">scr_err</name></name> <operator pos:start="155:25" pos:end="155:26">&amp;=</operator> <operator pos:start="155:28" pos:end="155:28">~</operator><name pos:start="155:29" pos:end="155:31">val</name></expr>;</expr_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        <case pos:start="159:9" pos:end="159:26">case <expr pos:start="159:14" pos:end="159:25"><name pos:start="159:14" pos:end="159:25">PORT_SCR_ACT</name></expr>:</case>

            <comment type="block" pos:start="161:13" pos:end="161:21">/* RW1 */</comment>

            <expr_stmt pos:start="163:13" pos:end="163:31"><expr pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:23"><name pos:start="163:13" pos:end="163:14">pr</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:23">scr_act</name></name> <operator pos:start="163:25" pos:end="163:26">|=</operator> <name pos:start="163:28" pos:end="163:30">val</name></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:28">case <expr pos:start="167:14" pos:end="167:27"><name pos:start="167:14" pos:end="167:27">PORT_CMD_ISSUE</name></expr>:</case>

            <expr_stmt pos:start="169:13" pos:end="169:33"><expr pos:start="169:13" pos:end="169:32"><name pos:start="169:13" pos:end="169:25"><name pos:start="169:13" pos:end="169:14">pr</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:25">cmd_issue</name></name> <operator pos:start="169:27" pos:end="169:28">|=</operator> <name pos:start="169:30" pos:end="169:32">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:31"><expr pos:start="171:13" pos:end="171:30"><call pos:start="171:13" pos:end="171:30"><name pos:start="171:13" pos:end="171:21">check_cmd</name><argument_list pos:start="171:22" pos:end="171:30">(<argument pos:start="171:23" pos:end="171:23"><expr pos:start="171:23" pos:end="171:23"><name pos:start="171:23" pos:end="171:23">s</name></expr></argument>, <argument pos:start="171:26" pos:end="171:29"><expr pos:start="171:26" pos:end="171:29"><name pos:start="171:26" pos:end="171:29">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <default pos:start="175:9" pos:end="175:16">default:</default>

            <break pos:start="177:13" pos:end="177:18">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
