<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15579.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">ff_h264_set_parameter_from_sps</name><parameter_list pos:start="1:35" pos:end="1:50">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:46">H264Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <if_stmt pos:start="5:5" pos:end="21:5"><if pos:start="5:5" pos:end="21:5">if <condition pos:start="5:8" pos:end="9:37">(<expr pos:start="5:9" pos:end="9:36"><name pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:9">h</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:16">flags</name></name> <operator pos:start="5:18" pos:end="5:18">&amp;</operator> <name pos:start="5:20" pos:end="5:39">CODEC_FLAG_LOW_DELAY</name> <operator pos:start="5:41" pos:end="5:42">||</operator>

        <operator pos:start="7:9" pos:end="7:9">(</operator><name pos:start="7:10" pos:end="7:42"><name pos:start="7:10" pos:end="7:10">h</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:15">sps</name><operator pos:start="7:16" pos:end="7:16">.</operator><name pos:start="7:17" pos:end="7:42">bitstream_restriction_flag</name></name> <operator pos:start="7:44" pos:end="7:45">&amp;&amp;</operator>

         <operator pos:start="9:10" pos:end="9:10">!</operator><name pos:start="9:11" pos:end="9:35"><name pos:start="9:11" pos:end="9:11">h</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:16">sps</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:35">num_reorder_frames</name></name><operator pos:start="9:36" pos:end="9:36">)</operator></expr>)</condition> <block pos:start="9:39" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:29">

        <if_stmt pos:start="11:9" pos:end="19:29"><if pos:start="11:9" pos:end="15:69">if <condition pos:start="11:12" pos:end="11:60">(<expr pos:start="11:13" pos:end="11:59"><name pos:start="11:13" pos:end="11:34"><name pos:start="11:13" pos:end="11:13">h</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:20">avctx</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:34">has_b_frames</name></name> <operator pos:start="11:36" pos:end="11:36">&gt;</operator> <literal type="number" pos:start="11:38" pos:end="11:38">1</literal> <operator pos:start="11:40" pos:end="11:41">||</operator> <name pos:start="11:43" pos:end="11:59"><name pos:start="11:43" pos:end="11:43">h</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:56">delayed_pic</name><index pos:start="11:57" pos:end="11:59">[<expr pos:start="11:58" pos:end="11:58"><literal type="number" pos:start="11:58" pos:end="11:58">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="15:69"><block_content pos:start="13:13" pos:end="15:69">

            <expr_stmt pos:start="13:13" pos:end="15:69"><expr pos:start="13:13" pos:end="15:68"><call pos:start="13:13" pos:end="15:68"><name pos:start="13:13" pos:end="13:18">av_log</name><argument_list pos:start="13:19" pos:end="15:68">(<argument pos:start="13:20" pos:end="13:27"><expr pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:20">h</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:27">avctx</name></name></expr></argument>, <argument pos:start="13:30" pos:end="13:43"><expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="13:46" pos:end="15:67"><expr pos:start="13:46" pos:end="15:67"><literal type="string" pos:start="13:46" pos:end="13:68">"Delayed frames seen. "</literal>

                   <literal type="string" pos:start="15:20" pos:end="15:67">"Reenabling low delay requires a codec flush.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="17:9" pos:end="19:29">else<block type="pseudo" pos:start="19:13" pos:end="19:29"><block_content pos:start="19:13" pos:end="19:29">

            <expr_stmt pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:13">h</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:24">low_delay</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:47"><if pos:start="25:5" pos:end="27:47">if <condition pos:start="25:8" pos:end="25:35">(<expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:9">h</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">avctx</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:30">has_b_frames</name></name> <operator pos:start="25:32" pos:end="25:32">&lt;</operator> <literal type="number" pos:start="25:34" pos:end="25:34">2</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:47"><block_content pos:start="27:9" pos:end="27:47">

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:9">h</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:16">avctx</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:30">has_b_frames</name></name> <operator pos:start="27:32" pos:end="27:32">=</operator> <operator pos:start="27:34" pos:end="27:34">!</operator><name pos:start="27:35" pos:end="27:46"><name pos:start="27:35" pos:end="27:35">h</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:46">low_delay</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="87:5"><if pos:start="31:5" pos:end="87:5">if <condition pos:start="31:8" pos:end="33:66">(<expr pos:start="31:9" pos:end="33:65"><name pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:9">h</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">avctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:37">bits_per_raw_sample</name></name> <operator pos:start="31:39" pos:end="31:40">!=</operator> <name pos:start="31:42" pos:end="31:62"><name pos:start="31:42" pos:end="31:42">h</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:47">sps</name><operator pos:start="31:48" pos:end="31:48">.</operator><name pos:start="31:49" pos:end="31:62">bit_depth_luma</name></name> <operator pos:start="31:64" pos:end="31:65">||</operator>

        <name pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:9">h</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:32">cur_chroma_format_idc</name></name>      <operator pos:start="33:39" pos:end="33:40">!=</operator> <name pos:start="33:42" pos:end="33:65"><name pos:start="33:42" pos:end="33:42">h</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:47">sps</name><operator pos:start="33:48" pos:end="33:48">.</operator><name pos:start="33:49" pos:end="33:65">chroma_format_idc</name></name></expr>)</condition> <block pos:start="33:68" pos:end="87:5">{<block_content pos:start="35:9" pos:end="85:9">

        <if_stmt pos:start="35:9" pos:end="47:9"><if pos:start="35:9" pos:end="47:9">if <condition pos:start="35:12" pos:end="39:73">(<expr pos:start="35:13" pos:end="39:72"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:13">h</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:20">avctx</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:27">codec</name></name> <operator pos:start="35:29" pos:end="35:30">&amp;&amp;</operator>

            <name pos:start="37:13" pos:end="37:41"><name pos:start="37:13" pos:end="37:13">h</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">avctx</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">codec</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:41">capabilities</name></name> <operator pos:start="37:43" pos:end="37:43">&amp;</operator> <name pos:start="37:45" pos:end="37:67">CODEC_CAP_HWACCEL_VDPAU</name> <operator pos:start="37:69" pos:end="37:70">&amp;&amp;</operator>

            <operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:34"><name pos:start="39:14" pos:end="39:14">h</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:19">sps</name><operator pos:start="39:20" pos:end="39:20">.</operator><name pos:start="39:21" pos:end="39:34">bit_depth_luma</name></name> <operator pos:start="39:36" pos:end="39:37">!=</operator> <literal type="number" pos:start="39:39" pos:end="39:39">8</literal> <operator pos:start="39:41" pos:end="39:42">||</operator> <name pos:start="39:44" pos:end="39:67"><name pos:start="39:44" pos:end="39:44">h</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:49">sps</name><operator pos:start="39:50" pos:end="39:50">.</operator><name pos:start="39:51" pos:end="39:67">chroma_format_idc</name></name> <operator pos:start="39:69" pos:end="39:69">&gt;</operator> <literal type="number" pos:start="39:71" pos:end="39:71">1</literal><operator pos:start="39:72" pos:end="39:72">)</operator></expr>)</condition> <block pos:start="39:75" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:39">

            <expr_stmt pos:start="41:13" pos:end="43:74"><expr pos:start="41:13" pos:end="43:73"><call pos:start="41:13" pos:end="43:73"><name pos:start="41:13" pos:end="41:18">av_log</name><argument_list pos:start="41:19" pos:end="43:73">(<argument pos:start="41:20" pos:end="41:27"><expr pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:20">h</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">avctx</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:41"><expr pos:start="41:30" pos:end="41:41"><name pos:start="41:30" pos:end="41:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="43:20" pos:end="43:72"><expr pos:start="43:20" pos:end="43:72"><literal type="string" pos:start="43:20" pos:end="43:72">"VDPAU decoding does not support video colorspace.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:39">return <expr pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="85:9"><if pos:start="49:9" pos:end="77:9">if <condition pos:start="49:12" pos:end="51:71">(<expr pos:start="49:13" pos:end="51:70"><name pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:13">h</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:18">sps</name><operator pos:start="49:19" pos:end="49:19">.</operator><name pos:start="49:20" pos:end="49:33">bit_depth_luma</name></name> <operator pos:start="49:35" pos:end="49:36">&gt;=</operator> <literal type="number" pos:start="49:38" pos:end="49:38">8</literal> <operator pos:start="49:40" pos:end="49:41">&amp;&amp;</operator> <name pos:start="49:43" pos:end="49:63"><name pos:start="49:43" pos:end="49:43">h</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:48">sps</name><operator pos:start="49:49" pos:end="49:49">.</operator><name pos:start="49:50" pos:end="49:63">bit_depth_luma</name></name> <operator pos:start="49:65" pos:end="49:66">&lt;=</operator> <literal type="number" pos:start="49:68" pos:end="49:69">14</literal> <operator pos:start="49:71" pos:end="49:72">&amp;&amp;</operator>

            <name pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:13">h</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:18">sps</name><operator pos:start="51:19" pos:end="51:19">.</operator><name pos:start="51:20" pos:end="51:33">bit_depth_luma</name></name> <operator pos:start="51:35" pos:end="51:36">!=</operator> <literal type="number" pos:start="51:38" pos:end="51:39">11</literal> <operator pos:start="51:41" pos:end="51:42">&amp;&amp;</operator> <name pos:start="51:44" pos:end="51:64"><name pos:start="51:44" pos:end="51:44">h</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:49">sps</name><operator pos:start="51:50" pos:end="51:50">.</operator><name pos:start="51:51" pos:end="51:64">bit_depth_luma</name></name> <operator pos:start="51:66" pos:end="51:67">!=</operator> <literal type="number" pos:start="51:69" pos:end="51:70">13</literal></expr>)</condition> <block pos:start="51:73" pos:end="77:9">{<block_content pos:start="53:13" pos:end="75:62">

            <expr_stmt pos:start="53:13" pos:end="53:66"><expr pos:start="53:13" pos:end="53:65"><name pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:13">h</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">avctx</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:41">bits_per_raw_sample</name></name> <operator pos:start="53:43" pos:end="53:43">=</operator> <name pos:start="53:45" pos:end="53:65"><name pos:start="53:45" pos:end="53:45">h</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:50">sps</name><operator pos:start="53:51" pos:end="53:51">.</operator><name pos:start="53:52" pos:end="53:65">bit_depth_luma</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:69"><expr pos:start="55:13" pos:end="55:68"><name pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:13">h</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:36">cur_chroma_format_idc</name></name>      <operator pos:start="55:43" pos:end="55:43">=</operator> <name pos:start="55:45" pos:end="55:68"><name pos:start="55:45" pos:end="55:45">h</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:50">sps</name><operator pos:start="55:51" pos:end="55:51">.</operator><name pos:start="55:52" pos:end="55:68">chroma_format_idc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:70"><expr pos:start="57:13" pos:end="57:69"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:13">h</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:26">pixel_shift</name></name>                <operator pos:start="57:43" pos:end="57:43">=</operator> <name pos:start="57:45" pos:end="57:65"><name pos:start="57:45" pos:end="57:45">h</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:50">sps</name><operator pos:start="57:51" pos:end="57:51">.</operator><name pos:start="57:52" pos:end="57:65">bit_depth_luma</name></name> <operator pos:start="57:67" pos:end="57:67">&gt;</operator> <literal type="number" pos:start="57:69" pos:end="57:69">8</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="61:13" pos:end="63:54"><expr pos:start="61:13" pos:end="63:53"><call pos:start="61:13" pos:end="63:53"><name pos:start="61:13" pos:end="61:27">ff_h264dsp_init</name><argument_list pos:start="61:28" pos:end="63:53">(<argument pos:start="61:29" pos:end="61:39"><expr pos:start="61:29" pos:end="61:39"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:39"><name pos:start="61:30" pos:end="61:30">h</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:39">h264dsp</name></name></expr></argument>, <argument pos:start="61:42" pos:end="61:62"><expr pos:start="61:42" pos:end="61:62"><name pos:start="61:42" pos:end="61:62"><name pos:start="61:42" pos:end="61:42">h</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:47">sps</name><operator pos:start="61:48" pos:end="61:48">.</operator><name pos:start="61:49" pos:end="61:62">bit_depth_luma</name></name></expr></argument>,

                            <argument pos:start="63:29" pos:end="63:52"><expr pos:start="63:29" pos:end="63:52"><name pos:start="63:29" pos:end="63:52"><name pos:start="63:29" pos:end="63:29">h</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:34">sps</name><operator pos:start="63:35" pos:end="63:35">.</operator><name pos:start="63:36" pos:end="63:52">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:72"><expr pos:start="65:13" pos:end="65:71"><call pos:start="65:13" pos:end="65:71"><name pos:start="65:13" pos:end="65:30">ff_h264chroma_init</name><argument_list pos:start="65:31" pos:end="65:71">(<argument pos:start="65:32" pos:end="65:45"><expr pos:start="65:32" pos:end="65:45"><operator pos:start="65:32" pos:end="65:32">&amp;</operator><name pos:start="65:33" pos:end="65:45"><name pos:start="65:33" pos:end="65:33">h</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:45">h264chroma</name></name></expr></argument>, <argument pos:start="65:48" pos:end="65:70"><expr pos:start="65:48" pos:end="65:70"><name pos:start="65:48" pos:end="65:70"><name pos:start="65:48" pos:end="65:48">h</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:53">sps</name><operator pos:start="65:54" pos:end="65:54">.</operator><name pos:start="65:55" pos:end="65:70">bit_depth_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:66"><expr pos:start="67:13" pos:end="67:65"><call pos:start="67:13" pos:end="67:65"><name pos:start="67:13" pos:end="67:28">ff_h264qpel_init</name><argument_list pos:start="67:29" pos:end="67:65">(<argument pos:start="67:30" pos:end="67:41"><expr pos:start="67:30" pos:end="67:41"><operator pos:start="67:30" pos:end="67:30">&amp;</operator><name pos:start="67:31" pos:end="67:41"><name pos:start="67:31" pos:end="67:31">h</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:41">h264qpel</name></name></expr></argument>, <argument pos:start="67:44" pos:end="67:64"><expr pos:start="67:44" pos:end="67:64"><name pos:start="67:44" pos:end="67:64"><name pos:start="67:44" pos:end="67:44">h</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:49">sps</name><operator pos:start="67:50" pos:end="67:50">.</operator><name pos:start="67:51" pos:end="67:64">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="71:56"><expr pos:start="69:13" pos:end="71:55"><call pos:start="69:13" pos:end="71:55"><name pos:start="69:13" pos:end="69:29">ff_h264_pred_init</name><argument_list pos:start="69:30" pos:end="71:55">(<argument pos:start="69:31" pos:end="69:37"><expr pos:start="69:31" pos:end="69:37"><operator pos:start="69:31" pos:end="69:31">&amp;</operator><name pos:start="69:32" pos:end="69:37"><name pos:start="69:32" pos:end="69:32">h</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:37">hpc</name></name></expr></argument>, <argument pos:start="69:40" pos:end="69:57"><expr pos:start="69:40" pos:end="69:57"><name pos:start="69:40" pos:end="69:57"><name pos:start="69:40" pos:end="69:40">h</name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:47">avctx</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:57">codec_id</name></name></expr></argument>, <argument pos:start="69:60" pos:end="69:80"><expr pos:start="69:60" pos:end="69:80"><name pos:start="69:60" pos:end="69:80"><name pos:start="69:60" pos:end="69:60">h</name><operator pos:start="69:61" pos:end="69:62">-&gt;</operator><name pos:start="69:63" pos:end="69:65">sps</name><operator pos:start="69:66" pos:end="69:66">.</operator><name pos:start="69:67" pos:end="69:80">bit_depth_luma</name></name></expr></argument>,

                              <argument pos:start="71:31" pos:end="71:54"><expr pos:start="71:31" pos:end="71:54"><name pos:start="71:31" pos:end="71:54"><name pos:start="71:31" pos:end="71:31">h</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:36">sps</name><operator pos:start="71:37" pos:end="71:37">.</operator><name pos:start="71:38" pos:end="71:54">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="75:13" pos:end="75:62"><expr pos:start="75:13" pos:end="75:61"><call pos:start="75:13" pos:end="75:61"><name pos:start="75:13" pos:end="75:28">ff_videodsp_init</name><argument_list pos:start="75:29" pos:end="75:61">(<argument pos:start="75:30" pos:end="75:37"><expr pos:start="75:30" pos:end="75:37"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:37"><name pos:start="75:31" pos:end="75:31">h</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:37">vdsp</name></name></expr></argument>, <argument pos:start="75:40" pos:end="75:60"><expr pos:start="75:40" pos:end="75:60"><name pos:start="75:40" pos:end="75:60"><name pos:start="75:40" pos:end="75:40">h</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:45">sps</name><operator pos:start="75:46" pos:end="75:46">.</operator><name pos:start="75:47" pos:end="75:60">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="85:9">else <block pos:start="77:16" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:39">

            <expr_stmt pos:start="79:13" pos:end="81:42"><expr pos:start="79:13" pos:end="81:41"><call pos:start="79:13" pos:end="81:41"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="81:41">(<argument pos:start="79:20" pos:end="79:27"><expr pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:20">h</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:27">avctx</name></name></expr></argument>, <argument pos:start="79:30" pos:end="79:41"><expr pos:start="79:30" pos:end="79:41"><name pos:start="79:30" pos:end="79:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:44" pos:end="79:71"><expr pos:start="79:44" pos:end="79:71"><literal type="string" pos:start="79:44" pos:end="79:71">"Unsupported bit depth %d\n"</literal></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:40"><expr pos:start="81:20" pos:end="81:40"><name pos:start="81:20" pos:end="81:40"><name pos:start="81:20" pos:end="81:20">h</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:25">sps</name><operator pos:start="81:26" pos:end="81:26">.</operator><name pos:start="81:27" pos:end="81:40">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:39">return <expr pos:start="83:20" pos:end="83:38"><name pos:start="83:20" pos:end="83:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
