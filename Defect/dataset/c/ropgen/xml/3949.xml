<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3949.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">draw_glyphs</name><parameter_list pos:start="1:23" pos:end="3:113">(<parameter pos:start="1:24" pos:end="1:45"><decl pos:start="1:24" pos:end="1:45"><type pos:start="1:24" pos:end="1:45"><name pos:start="1:24" pos:end="1:38">DrawTextContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">dtext</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><name pos:start="1:48" pos:end="1:64">AVFilterBufferRef</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:72">picref</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:32"><decl pos:start="3:24" pos:end="3:32"><type pos:start="3:24" pos:end="3:32"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:32">width</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:44"><decl pos:start="3:35" pos:end="3:44"><type pos:start="3:35" pos:end="3:44"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:44">height</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:71"><decl pos:start="3:47" pos:end="3:71"><type pos:start="3:47" pos:end="3:68"><specifier pos:start="3:47" pos:end="3:51">const</specifier> <name pos:start="3:53" pos:end="3:59">uint8_t</name></type> <name pos:start="3:61" pos:end="3:71"><name pos:start="3:61" pos:end="3:68">rgbcolor</name><index pos:start="3:69" pos:end="3:71">[<expr pos:start="3:70" pos:end="3:70"><literal type="number" pos:start="3:70" pos:end="3:70">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:74" pos:end="3:98"><decl pos:start="3:74" pos:end="3:98"><type pos:start="3:74" pos:end="3:95"><specifier pos:start="3:74" pos:end="3:78">const</specifier> <name pos:start="3:80" pos:end="3:86">uint8_t</name></type> <name pos:start="3:88" pos:end="3:98"><name pos:start="3:88" pos:end="3:95">yuvcolor</name><index pos:start="3:96" pos:end="3:98">[<expr pos:start="3:97" pos:end="3:97"><literal type="number" pos:start="3:97" pos:end="3:97">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:101" pos:end="3:105"><decl pos:start="3:101" pos:end="3:105"><type pos:start="3:101" pos:end="3:105"><name pos:start="3:101" pos:end="3:103">int</name></type> <name pos:start="3:105" pos:end="3:105">x</name></decl></parameter>, <parameter pos:start="3:108" pos:end="3:112"><decl pos:start="3:108" pos:end="3:112"><type pos:start="3:108" pos:end="3:112"><name pos:start="3:108" pos:end="3:110">int</name></type> <name pos:start="3:112" pos:end="3:112">y</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:13">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">text</name> <init pos:start="7:16" pos:end="7:28">= <expr pos:start="7:18" pos:end="7:28"><name pos:start="7:18" pos:end="7:28"><name pos:start="7:18" pos:end="7:22">dtext</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:28">text</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">code</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Glyph</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:16">glyph</name> <init pos:start="15:18" pos:end="15:23">= <expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">NULL</name></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="67:5">for <control pos:start="19:9" pos:end="19:34">(<init pos:start="19:10" pos:end="19:25"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr><operator pos:start="19:15" pos:end="19:15">,</operator> <expr pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:17">p</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:24">text</name></expr>;</init> <condition pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:28"><operator pos:start="19:27" pos:end="19:27">*</operator><name pos:start="19:28" pos:end="19:28">p</name></expr>;</condition> <incr pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:31">i</name><operator pos:start="19:32" pos:end="19:33">++</operator></expr></incr>)</control> <block pos:start="19:36" pos:end="67:5">{<block_content pos:start="21:9" pos:end="65:9">

        <decl_stmt pos:start="21:9" pos:end="21:28"><decl pos:start="21:9" pos:end="21:27"><type pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:13">Glyph</name></type> <name pos:start="21:15" pos:end="21:19">dummy</name> <init pos:start="21:21" pos:end="21:27">= <expr pos:start="21:23" pos:end="21:27"><block pos:start="21:23" pos:end="21:27">{ <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <macro pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:16">GET_UTF8</name><argument_list pos:start="23:17" pos:end="23:39">(<argument pos:start="23:18" pos:end="23:21">code</argument>, <argument pos:start="23:24" pos:end="23:27">*p++</argument>, <argument pos:start="23:30" pos:end="23:38">continue;</argument>)</argument_list></macro><empty_stmt pos:start="23:40" pos:end="23:40">;</empty_stmt>



        <comment type="block" pos:start="27:9" pos:end="27:54">/* skip new line chars, just go to new line */</comment>

        <if_stmt pos:start="29:9" pos:end="31:21"><if pos:start="29:9" pos:end="31:21">if <condition pos:start="29:12" pos:end="29:57">(<expr pos:start="29:13" pos:end="29:56"><name pos:start="29:13" pos:end="29:16">code</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <literal type="char" pos:start="29:21" pos:end="29:24">'\n'</literal> <operator pos:start="29:26" pos:end="29:27">||</operator> <name pos:start="29:29" pos:end="29:32">code</name> <operator pos:start="29:34" pos:end="29:35">==</operator> <literal type="char" pos:start="29:37" pos:end="29:40">'\r'</literal> <operator pos:start="29:42" pos:end="29:43">||</operator> <name pos:start="29:45" pos:end="29:48">code</name> <operator pos:start="29:50" pos:end="29:51">==</operator> <literal type="char" pos:start="29:53" pos:end="29:56">'\t'</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:21"><block_content pos:start="31:13" pos:end="31:21">

            <continue pos:start="31:13" pos:end="31:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:13">dummy</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:18">code</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:25">code</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:77"><expr pos:start="37:9" pos:end="37:76"><name pos:start="37:9" pos:end="37:13">glyph</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:76"><name pos:start="37:17" pos:end="37:28">av_tree_find</name><argument_list pos:start="37:29" pos:end="37:76">(<argument pos:start="37:30" pos:end="37:42"><expr pos:start="37:30" pos:end="37:42"><name pos:start="37:30" pos:end="37:42"><name pos:start="37:30" pos:end="37:34">dtext</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:42">glyphs</name></name></expr></argument>, <argument pos:start="37:45" pos:end="37:50"><expr pos:start="37:45" pos:end="37:50"><operator pos:start="37:45" pos:end="37:45">&amp;</operator><name pos:start="37:46" pos:end="37:50">dummy</name></expr></argument>, <argument pos:start="37:53" pos:end="37:69"><expr pos:start="37:53" pos:end="37:69"><operator pos:start="37:53" pos:end="37:53">(</operator><name pos:start="37:54" pos:end="37:57">void</name> <operator pos:start="37:59" pos:end="37:59">*</operator><operator pos:start="37:60" pos:end="37:60">)</operator><name pos:start="37:61" pos:end="37:69">glyph_cmp</name></expr></argument>, <argument pos:start="37:72" pos:end="37:75"><expr pos:start="37:72" pos:end="37:75"><name pos:start="37:72" pos:end="37:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="45:35"><if pos:start="41:9" pos:end="45:35">if <condition pos:start="41:12" pos:end="43:59">(<expr pos:start="41:13" pos:end="43:58"><name pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:17">glyph</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">bitmap</name><operator pos:start="41:26" pos:end="41:26">.</operator><name pos:start="41:27" pos:end="41:36">pixel_mode</name></name> <operator pos:start="41:38" pos:end="41:39">!=</operator> <name pos:start="41:41" pos:end="41:58">FT_PIXEL_MODE_MONO</name> <operator pos:start="41:60" pos:end="41:61">&amp;&amp;</operator>

            <name pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:17">glyph</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:25">bitmap</name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:36">pixel_mode</name></name> <operator pos:start="43:38" pos:end="43:39">!=</operator> <name pos:start="43:41" pos:end="43:58">FT_PIXEL_MODE_GRAY</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:35"><block_content pos:start="45:13" pos:end="45:35">

            <return pos:start="45:13" pos:end="45:35">return <expr pos:start="45:20" pos:end="45:34"><call pos:start="45:20" pos:end="45:34"><name pos:start="45:20" pos:end="45:26">AVERROR</name><argument_list pos:start="45:27" pos:end="45:34">(<argument pos:start="45:28" pos:end="45:33"><expr pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="65:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:33">(<expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:17">dtext</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:32">is_packed_rgb</name></name></expr>)</condition> <block pos:start="49:35" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:76">

            <expr_stmt pos:start="51:13" pos:end="55:76"><expr pos:start="51:13" pos:end="55:75"><call pos:start="51:13" pos:end="55:75"><name pos:start="51:13" pos:end="51:26">draw_glyph_rgb</name><argument_list pos:start="51:27" pos:end="55:75">(<argument pos:start="51:28" pos:end="51:33"><expr pos:start="51:28" pos:end="51:33"><name pos:start="51:28" pos:end="51:33">picref</name></expr></argument>, <argument pos:start="51:36" pos:end="51:49"><expr pos:start="51:36" pos:end="51:49"><operator pos:start="51:36" pos:end="51:36">&amp;</operator><name pos:start="51:37" pos:end="51:49"><name pos:start="51:37" pos:end="51:41">glyph</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:49">bitmap</name></name></expr></argument>,

                           <argument pos:start="53:28" pos:end="53:50"><expr pos:start="53:28" pos:end="53:50"><name pos:start="53:28" pos:end="53:46"><name pos:start="53:28" pos:end="53:32">dtext</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:43">positions</name><index pos:start="53:44" pos:end="53:46">[<expr pos:start="53:45" pos:end="53:45"><name pos:start="53:45" pos:end="53:45">i</name></expr>]</index></name><operator pos:start="53:47" pos:end="53:47">.</operator><name pos:start="53:48" pos:end="53:48">x</name><operator pos:start="53:49" pos:end="53:49">+</operator><name pos:start="53:50" pos:end="53:50">x</name></expr></argument>, <argument pos:start="53:53" pos:end="53:75"><expr pos:start="53:53" pos:end="53:75"><name pos:start="53:53" pos:end="53:71"><name pos:start="53:53" pos:end="53:57">dtext</name><operator pos:start="53:58" pos:end="53:59">-&gt;</operator><name pos:start="53:60" pos:end="53:68">positions</name><index pos:start="53:69" pos:end="53:71">[<expr pos:start="53:70" pos:end="53:70"><name pos:start="53:70" pos:end="53:70">i</name></expr>]</index></name><operator pos:start="53:72" pos:end="53:72">.</operator><name pos:start="53:73" pos:end="53:73">y</name><operator pos:start="53:74" pos:end="53:74">+</operator><name pos:start="53:75" pos:end="53:75">y</name></expr></argument>, <argument pos:start="53:78" pos:end="53:82"><expr pos:start="53:78" pos:end="53:82"><name pos:start="53:78" pos:end="53:82">width</name></expr></argument>, <argument pos:start="53:85" pos:end="53:90"><expr pos:start="53:85" pos:end="53:90"><name pos:start="53:85" pos:end="53:90">height</name></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:47"><expr pos:start="55:28" pos:end="55:47"><name pos:start="55:28" pos:end="55:47"><name pos:start="55:28" pos:end="55:32">dtext</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:44">pixel_step</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:50" pos:end="55:57"><expr pos:start="55:50" pos:end="55:57"><name pos:start="55:50" pos:end="55:57">rgbcolor</name></expr></argument>, <argument pos:start="55:60" pos:end="55:74"><expr pos:start="55:60" pos:end="55:74"><name pos:start="55:60" pos:end="55:74"><name pos:start="55:60" pos:end="55:64">dtext</name><operator pos:start="55:65" pos:end="55:66">-&gt;</operator><name pos:start="55:67" pos:end="55:74">rgba_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="65:9">else <block pos:start="57:16" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:63">

            <expr_stmt pos:start="59:13" pos:end="63:63"><expr pos:start="59:13" pos:end="63:62"><call pos:start="59:13" pos:end="63:62"><name pos:start="59:13" pos:end="59:26">draw_glyph_yuv</name><argument_list pos:start="59:27" pos:end="63:62">(<argument pos:start="59:28" pos:end="59:33"><expr pos:start="59:28" pos:end="59:33"><name pos:start="59:28" pos:end="59:33">picref</name></expr></argument>, <argument pos:start="59:36" pos:end="59:49"><expr pos:start="59:36" pos:end="59:49"><operator pos:start="59:36" pos:end="59:36">&amp;</operator><name pos:start="59:37" pos:end="59:49"><name pos:start="59:37" pos:end="59:41">glyph</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:49">bitmap</name></name></expr></argument>,

                           <argument pos:start="61:28" pos:end="61:50"><expr pos:start="61:28" pos:end="61:50"><name pos:start="61:28" pos:end="61:46"><name pos:start="61:28" pos:end="61:32">dtext</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:43">positions</name><index pos:start="61:44" pos:end="61:46">[<expr pos:start="61:45" pos:end="61:45"><name pos:start="61:45" pos:end="61:45">i</name></expr>]</index></name><operator pos:start="61:47" pos:end="61:47">.</operator><name pos:start="61:48" pos:end="61:48">x</name><operator pos:start="61:49" pos:end="61:49">+</operator><name pos:start="61:50" pos:end="61:50">x</name></expr></argument>, <argument pos:start="61:53" pos:end="61:75"><expr pos:start="61:53" pos:end="61:75"><name pos:start="61:53" pos:end="61:71"><name pos:start="61:53" pos:end="61:57">dtext</name><operator pos:start="61:58" pos:end="61:59">-&gt;</operator><name pos:start="61:60" pos:end="61:68">positions</name><index pos:start="61:69" pos:end="61:71">[<expr pos:start="61:70" pos:end="61:70"><name pos:start="61:70" pos:end="61:70">i</name></expr>]</index></name><operator pos:start="61:72" pos:end="61:72">.</operator><name pos:start="61:73" pos:end="61:73">y</name><operator pos:start="61:74" pos:end="61:74">+</operator><name pos:start="61:75" pos:end="61:75">y</name></expr></argument>, <argument pos:start="61:78" pos:end="61:82"><expr pos:start="61:78" pos:end="61:82"><name pos:start="61:78" pos:end="61:82">width</name></expr></argument>, <argument pos:start="61:85" pos:end="61:90"><expr pos:start="61:85" pos:end="61:90"><name pos:start="61:85" pos:end="61:90">height</name></expr></argument>,

                           <argument pos:start="63:28" pos:end="63:35"><expr pos:start="63:28" pos:end="63:35"><name pos:start="63:28" pos:end="63:35">yuvcolor</name></expr></argument>, <argument pos:start="63:38" pos:end="63:48"><expr pos:start="63:38" pos:end="63:48"><name pos:start="63:38" pos:end="63:48"><name pos:start="63:38" pos:end="63:42">dtext</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:48">hsub</name></name></expr></argument>, <argument pos:start="63:51" pos:end="63:61"><expr pos:start="63:51" pos:end="63:61"><name pos:start="63:51" pos:end="63:61"><name pos:start="63:51" pos:end="63:55">dtext</name><operator pos:start="63:56" pos:end="63:57">-&gt;</operator><name pos:start="63:58" pos:end="63:61">vsub</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
