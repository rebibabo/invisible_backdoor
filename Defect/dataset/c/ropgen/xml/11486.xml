<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11486.c" pos:tabs="8"><function pos:start="1:1" pos:end="94:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:34">v9fs_link</name><parameter_list pos:start="1:35" pos:end="1:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:41"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="94:1">{<block_content pos:start="5:5" pos:end="92:27">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">V9fsPDU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">pdu</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:16">dfid</name></decl>, <decl pos:start="7:19" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:19" pos:end="7:24">oldfid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">V9fsFidState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:23">dfidp</name></decl>, <decl pos:start="9:26" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:18"><modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:33">oldfidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">V9fsString</name></type> <name pos:start="11:16" pos:end="11:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:17">offset</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">err</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:20">v9fs_string_init</name><argument_list pos:start="19:21" pos:end="19:27">(<argument pos:start="19:22" pos:end="19:26"><expr pos:start="19:22" pos:end="19:26"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:67"><expr pos:start="21:5" pos:end="21:66"><name pos:start="21:5" pos:end="21:7">err</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:66"><name pos:start="21:11" pos:end="21:23">pdu_unmarshal</name><argument_list pos:start="21:24" pos:end="21:66">(<argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">pdu</name></expr></argument>, <argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><name pos:start="21:30" pos:end="21:35">offset</name></expr></argument>, <argument pos:start="21:38" pos:end="21:42"><expr pos:start="21:38" pos:end="21:42"><literal type="string" pos:start="21:38" pos:end="21:42">"dds"</literal></expr></argument>, <argument pos:start="21:45" pos:end="21:49"><expr pos:start="21:45" pos:end="21:49"><operator pos:start="21:45" pos:end="21:45">&amp;</operator><name pos:start="21:46" pos:end="21:49">dfid</name></expr></argument>, <argument pos:start="21:52" pos:end="21:58"><expr pos:start="21:52" pos:end="21:58"><operator pos:start="21:52" pos:end="21:52">&amp;</operator><name pos:start="21:53" pos:end="21:58">oldfid</name></expr></argument>, <argument pos:start="21:61" pos:end="21:65"><expr pos:start="21:61" pos:end="21:65"><operator pos:start="21:61" pos:end="21:61">&amp;</operator><name pos:start="21:62" pos:end="21:65">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">err</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:23">

        <goto pos:start="25:9" pos:end="25:23">goto <name pos:start="25:14" pos:end="25:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:64"><expr pos:start="29:5" pos:end="29:63"><call pos:start="29:5" pos:end="29:63"><name pos:start="29:5" pos:end="29:19">trace_v9fs_link</name><argument_list pos:start="29:20" pos:end="29:63">(<argument pos:start="29:21" pos:end="29:28"><expr pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:23">pdu</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:28">tag</name></name></expr></argument>, <argument pos:start="29:31" pos:end="29:37"><expr pos:start="29:31" pos:end="29:37"><name pos:start="29:31" pos:end="29:37"><name pos:start="29:31" pos:end="29:33">pdu</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:37">id</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><name pos:start="29:40" pos:end="29:43">dfid</name></expr></argument>, <argument pos:start="29:46" pos:end="29:51"><expr pos:start="29:46" pos:end="29:51"><name pos:start="29:46" pos:end="29:51">oldfid</name></expr></argument>, <argument pos:start="29:54" pos:end="29:62"><expr pos:start="29:54" pos:end="29:62"><name pos:start="29:54" pos:end="29:62"><name pos:start="29:54" pos:end="29:57">name</name><operator pos:start="29:58" pos:end="29:58">.</operator><name pos:start="29:59" pos:end="29:62">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:35">(<expr pos:start="33:9" pos:end="33:34"><call pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:23">name_is_illegal</name><argument_list pos:start="33:24" pos:end="33:34">(<argument pos:start="33:25" pos:end="33:33"><expr pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:28">name</name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:33">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:37" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:23">

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:11">err</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <operator pos:start="35:15" pos:end="35:15">-</operator><name pos:start="35:16" pos:end="35:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:23">goto <name pos:start="37:14" pos:end="37:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:60">(<expr pos:start="43:9" pos:end="43:59"><operator pos:start="43:9" pos:end="43:9">!</operator><call pos:start="43:10" pos:end="43:31"><name pos:start="43:10" pos:end="43:15">strcmp</name><argument_list pos:start="43:16" pos:end="43:31">(<argument pos:start="43:17" pos:end="43:19"><expr pos:start="43:17" pos:end="43:19"><literal type="string" pos:start="43:17" pos:end="43:19">"."</literal></expr></argument>, <argument pos:start="43:22" pos:end="43:30"><expr pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:25">name</name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:30">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:33" pos:end="43:34">||</operator> <operator pos:start="43:36" pos:end="43:36">!</operator><call pos:start="43:37" pos:end="43:59"><name pos:start="43:37" pos:end="43:42">strcmp</name><argument_list pos:start="43:43" pos:end="43:59">(<argument pos:start="43:44" pos:end="43:47"><expr pos:start="43:44" pos:end="43:47"><literal type="string" pos:start="43:44" pos:end="43:47">".."</literal></expr></argument>, <argument pos:start="43:50" pos:end="43:58"><expr pos:start="43:50" pos:end="43:58"><name pos:start="43:50" pos:end="43:58"><name pos:start="43:50" pos:end="43:53">name</name><operator pos:start="43:54" pos:end="43:54">.</operator><name pos:start="43:55" pos:end="43:58">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:62" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:23">

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">err</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">-</operator><name pos:start="45:16" pos:end="45:21">EEXIST</name></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:23">goto <name pos:start="47:14" pos:end="47:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:9">dfidp</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <call pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:19">get_fid</name><argument_list pos:start="53:20" pos:end="53:30">(<argument pos:start="53:21" pos:end="53:23"><expr pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">pdu</name></expr></argument>, <argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><name pos:start="53:26" pos:end="53:29">dfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:22">(<expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:13">dfidp</name> <operator pos:start="55:15" pos:end="55:16">==</operator> <name pos:start="55:18" pos:end="55:21">NULL</name></expr>)</condition> <block pos:start="55:24" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:23">

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">err</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">-</operator><name pos:start="57:16" pos:end="57:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:23">goto <name pos:start="59:14" pos:end="59:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:11">oldfidp</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:34"><name pos:start="65:15" pos:end="65:21">get_fid</name><argument_list pos:start="65:22" pos:end="65:34">(<argument pos:start="65:23" pos:end="65:25"><expr pos:start="65:23" pos:end="65:25"><name pos:start="65:23" pos:end="65:25">pdu</name></expr></argument>, <argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">oldfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:24">(<expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:15">oldfidp</name> <operator pos:start="67:17" pos:end="67:18">==</operator> <name pos:start="67:20" pos:end="67:23">NULL</name></expr>)</condition> <block pos:start="67:26" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:17">

        <expr_stmt pos:start="69:9" pos:end="69:22"><expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:11">err</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <operator pos:start="69:15" pos:end="69:15">-</operator><name pos:start="69:16" pos:end="69:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:17">goto <name pos:start="71:14" pos:end="71:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:51"><expr pos:start="75:5" pos:end="75:50"><name pos:start="75:5" pos:end="75:7">err</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="75:50"><name pos:start="75:11" pos:end="75:22">v9fs_co_link</name><argument_list pos:start="75:23" pos:end="75:50">(<argument pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">pdu</name></expr></argument>, <argument pos:start="75:29" pos:end="75:35"><expr pos:start="75:29" pos:end="75:35"><name pos:start="75:29" pos:end="75:35">oldfidp</name></expr></argument>, <argument pos:start="75:38" pos:end="75:42"><expr pos:start="75:38" pos:end="75:42"><name pos:start="75:38" pos:end="75:42">dfidp</name></expr></argument>, <argument pos:start="75:45" pos:end="75:49"><expr pos:start="75:45" pos:end="75:49"><operator pos:start="75:45" pos:end="75:45">&amp;</operator><name pos:start="75:46" pos:end="75:49">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:13">(<expr pos:start="77:9" pos:end="77:12"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:12">err</name></expr>)</condition> <block pos:start="77:15" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:21">

        <expr_stmt pos:start="79:9" pos:end="79:21"><expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:11">err</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:20">offset</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>


<label pos:start="84:1" pos:end="84:4"><name pos:start="84:1" pos:end="84:3">out</name>:</label>

    <expr_stmt pos:start="86:5" pos:end="86:24"><expr pos:start="86:5" pos:end="86:23"><call pos:start="86:5" pos:end="86:23"><name pos:start="86:5" pos:end="86:11">put_fid</name><argument_list pos:start="86:12" pos:end="86:23">(<argument pos:start="86:13" pos:end="86:15"><expr pos:start="86:13" pos:end="86:15"><name pos:start="86:13" pos:end="86:15">pdu</name></expr></argument>, <argument pos:start="86:18" pos:end="86:22"><expr pos:start="86:18" pos:end="86:22"><name pos:start="86:18" pos:end="86:22">dfidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="88:1" pos:end="88:10"><name pos:start="88:1" pos:end="88:9">out_nofid</name>:</label>

    <expr_stmt pos:start="90:5" pos:end="90:28"><expr pos:start="90:5" pos:end="90:27"><call pos:start="90:5" pos:end="90:27"><name pos:start="90:5" pos:end="90:20">v9fs_string_free</name><argument_list pos:start="90:21" pos:end="90:27">(<argument pos:start="90:22" pos:end="90:26"><expr pos:start="90:22" pos:end="90:26"><operator pos:start="90:22" pos:end="90:22">&amp;</operator><name pos:start="90:23" pos:end="90:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:27"><expr pos:start="92:5" pos:end="92:26"><call pos:start="92:5" pos:end="92:26"><name pos:start="92:5" pos:end="92:16">pdu_complete</name><argument_list pos:start="92:17" pos:end="92:26">(<argument pos:start="92:18" pos:end="92:20"><expr pos:start="92:18" pos:end="92:20"><name pos:start="92:18" pos:end="92:20">pdu</name></expr></argument>, <argument pos:start="92:23" pos:end="92:25"><expr pos:start="92:23" pos:end="92:25"><name pos:start="92:23" pos:end="92:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
