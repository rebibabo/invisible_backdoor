<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22539.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">qemu_paio_submit</name><parameter_list pos:start="1:28" pos:end="1:64">(<parameter pos:start="1:29" pos:end="1:53"><decl pos:start="1:29" pos:end="1:53"><type pos:start="1:29" pos:end="1:53"><name pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:34">struct</name> <name pos:start="1:36" pos:end="1:46">qemu_paiocb</name></name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">aiocb</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:63"><decl pos:start="1:56" pos:end="1:63"><type pos:start="1:56" pos:end="1:63"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:63">type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:13">

    <expr_stmt pos:start="5:5" pos:end="5:27"><expr pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:9">aiocb</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:19">aio_type</name></name> <operator pos:start="5:21" pos:end="5:21">=</operator> <name pos:start="5:23" pos:end="5:26">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:30"><expr pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:9">aiocb</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:14">ret</name></name> <operator pos:start="7:16" pos:end="7:16">=</operator> <operator pos:start="7:18" pos:end="7:18">-</operator><name pos:start="7:19" pos:end="7:29">EINPROGRESS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:9">aiocb</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:17">active</name></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><call pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:14">mutex_lock</name><argument_list pos:start="11:15" pos:end="11:21">(<argument pos:start="11:16" pos:end="11:20"><expr pos:start="11:16" pos:end="11:20"><operator pos:start="11:16" pos:end="11:16">&amp;</operator><name pos:start="11:17" pos:end="11:20">lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:23"><if pos:start="13:5" pos:end="15:23">if <condition pos:start="13:8" pos:end="13:55">(<expr pos:start="13:9" pos:end="13:54"><name pos:start="13:9" pos:end="13:20">idle_threads</name> <operator pos:start="13:22" pos:end="13:23">==</operator> <literal type="number" pos:start="13:25" pos:end="13:25">0</literal> <operator pos:start="13:27" pos:end="13:28">&amp;&amp;</operator> <name pos:start="13:30" pos:end="13:40">cur_threads</name> <operator pos:start="13:42" pos:end="13:42">&lt;</operator> <name pos:start="13:44" pos:end="13:54">max_threads</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:23"><block_content pos:start="15:9" pos:end="15:23">

        <expr_stmt pos:start="15:9" pos:end="15:23"><expr pos:start="15:9" pos:end="15:22"><call pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:20">spawn_thread</name><argument_list pos:start="15:21" pos:end="15:22">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><call pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:21">TAILQ_INSERT_TAIL</name><argument_list pos:start="17:22" pos:end="17:49">(<argument pos:start="17:23" pos:end="17:35"><expr pos:start="17:23" pos:end="17:35"><operator pos:start="17:23" pos:end="17:23">&amp;</operator><name pos:start="17:24" pos:end="17:35">request_list</name></expr></argument>, <argument pos:start="17:38" pos:end="17:42"><expr pos:start="17:38" pos:end="17:42"><name pos:start="17:38" pos:end="17:42">aiocb</name></expr></argument>, <argument pos:start="17:45" pos:end="17:48"><expr pos:start="17:45" pos:end="17:48"><name pos:start="17:45" pos:end="17:48">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><call pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:16">mutex_unlock</name><argument_list pos:start="19:17" pos:end="19:23">(<argument pos:start="19:18" pos:end="19:22"><expr pos:start="19:18" pos:end="19:22"><operator pos:start="19:18" pos:end="19:18">&amp;</operator><name pos:start="19:19" pos:end="19:22">lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><call pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:15">cond_signal</name><argument_list pos:start="21:16" pos:end="21:22">(<argument pos:start="21:17" pos:end="21:21"><expr pos:start="21:17" pos:end="21:21"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:21">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
