<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4908.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">VncInfo2List</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:35">qmp_query_vnc_servers</name><parameter_list pos:start="1:36" pos:end="1:49">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:44"><name pos:start="1:37" pos:end="1:41">Error</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier><modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:16">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VncInfo2List</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">item</name></decl>, <decl pos:start="5:25" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:18"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:29">prev</name> <init pos:start="5:31" pos:end="5:36">= <expr pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">VncInfo2</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">VncDisplay</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:18">vd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">DeviceState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">dev</name></decl>;</decl_stmt>



    <macro pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:18">QTAILQ_FOREACH</name><argument_list pos:start="15:19" pos:end="15:43">(<argument pos:start="15:20" pos:end="15:21">vd</argument>, <argument pos:start="15:24" pos:end="15:36">&amp;vnc_displays</argument>, <argument pos:start="15:39" pos:end="15:42">next</argument>)</argument_list></macro> <block pos:start="15:45" pos:end="63:5">{<block_content pos:start="17:9" pos:end="61:20">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:12">info</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:21">g_new0</name><argument_list pos:start="17:22" pos:end="17:34">(<argument pos:start="17:23" pos:end="17:30"><expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:30">VncInfo2</name></expr></argument>, <argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:12">info</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:16">id</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:35"><name pos:start="19:20" pos:end="19:27">g_strdup</name><argument_list pos:start="19:28" pos:end="19:35">(<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:30">vd</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:34">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:12">info</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:21">clients</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="21:49"><name pos:start="21:25" pos:end="21:45">qmp_query_client_list</name><argument_list pos:start="21:46" pos:end="21:49">(<argument pos:start="21:47" pos:end="21:48"><expr pos:start="21:47" pos:end="21:48"><name pos:start="21:47" pos:end="21:48">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><call pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:22">qmp_query_auth</name><argument_list pos:start="23:23" pos:end="23:32">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">vd</name></expr></argument>, <argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:24">(<expr pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:14">vd</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:19">dcl</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:23">con</name></name></expr>)</condition> <block pos:start="25:26" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:46">

            <expr_stmt pos:start="27:13" pos:end="29:67"><expr pos:start="27:13" pos:end="29:66"><name pos:start="27:13" pos:end="27:15">dev</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="29:66"><name pos:start="27:19" pos:end="27:24">DEVICE</name><argument_list pos:start="27:25" pos:end="29:66">(<argument pos:start="27:26" pos:end="29:65"><expr pos:start="27:26" pos:end="29:65"><call pos:start="27:26" pos:end="29:65"><name pos:start="27:26" pos:end="27:49">object_property_get_link</name><argument_list pos:start="27:50" pos:end="29:65">(<argument pos:start="27:51" pos:end="27:69"><expr pos:start="27:51" pos:end="27:69"><call pos:start="27:51" pos:end="27:69"><name pos:start="27:51" pos:end="27:56">OBJECT</name><argument_list pos:start="27:57" pos:end="27:69">(<argument pos:start="27:58" pos:end="27:68"><expr pos:start="27:58" pos:end="27:68"><name pos:start="27:58" pos:end="27:68"><name pos:start="27:58" pos:end="27:59">vd</name><operator pos:start="27:60" pos:end="27:61">-&gt;</operator><name pos:start="27:62" pos:end="27:64">dcl</name><operator pos:start="27:65" pos:end="27:65">.</operator><name pos:start="27:66" pos:end="27:68">con</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                                  <argument pos:start="29:51" pos:end="29:58"><expr pos:start="29:51" pos:end="29:58"><literal type="string" pos:start="29:51" pos:end="29:58">"device"</literal></expr></argument>, <argument pos:start="29:61" pos:end="29:64"><expr pos:start="29:61" pos:end="29:64"><name pos:start="29:61" pos:end="29:64">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:16">info</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:29">has_display</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <name pos:start="31:33" pos:end="31:36">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:46"><expr pos:start="33:13" pos:end="33:45"><name pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:16">info</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:25">display</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <call pos:start="33:29" pos:end="33:45"><name pos:start="33:29" pos:end="33:36">g_strdup</name><argument_list pos:start="33:37" pos:end="33:45">(<argument pos:start="33:38" pos:end="33:44"><expr pos:start="33:38" pos:end="33:44"><name pos:start="33:38" pos:end="33:44"><name pos:start="33:38" pos:end="33:40">dev</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:44">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:30">(<expr pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:14">vd</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:21">lsock</name></name> <operator pos:start="37:23" pos:end="37:24">!=</operator> <name pos:start="37:26" pos:end="37:29">NULL</name></expr>)</condition> <block pos:start="37:32" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:48">

            <expr_stmt pos:start="39:13" pos:end="41:48"><expr pos:start="39:13" pos:end="41:47"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:16">info</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:24">server</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="41:47"><name pos:start="39:28" pos:end="39:49">qmp_query_server_entry</name><argument_list pos:start="39:50" pos:end="41:47">(

                <argument pos:start="41:17" pos:end="41:25"><expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:18">vd</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:25">lsock</name></name></expr></argument>, <argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">false</name></expr></argument>, <argument pos:start="41:35" pos:end="41:46"><expr pos:start="41:35" pos:end="41:46"><name pos:start="41:35" pos:end="41:46"><name pos:start="41:35" pos:end="41:38">info</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:46">server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:33">(<expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:14">vd</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:24">lwebsock</name></name> <operator pos:start="45:26" pos:end="45:27">!=</operator> <name pos:start="45:29" pos:end="45:32">NULL</name></expr>)</condition> <block pos:start="45:35" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:50">

            <expr_stmt pos:start="47:13" pos:end="49:50"><expr pos:start="47:13" pos:end="49:49"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:16">info</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:24">server</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <call pos:start="47:28" pos:end="49:49"><name pos:start="47:28" pos:end="47:49">qmp_query_server_entry</name><argument_list pos:start="47:50" pos:end="49:49">(

                <argument pos:start="49:17" pos:end="49:28"><expr pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:28"><name pos:start="49:17" pos:end="49:18">vd</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:28">lwebsock</name></name></expr></argument>, <argument pos:start="49:31" pos:end="49:34"><expr pos:start="49:31" pos:end="49:34"><name pos:start="49:31" pos:end="49:34">true</name></expr></argument>, <argument pos:start="49:37" pos:end="49:48"><expr pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:40">info</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:48">server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:12">item</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="55:38"><name pos:start="55:16" pos:end="55:21">g_new0</name><argument_list pos:start="55:22" pos:end="55:38">(<argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">VncInfo2List</name></expr></argument>, <argument pos:start="55:37" pos:end="55:37"><expr pos:start="55:37" pos:end="55:37"><literal type="number" pos:start="55:37" pos:end="55:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:12">item</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:19">value</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:26">info</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:12">item</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:18">next</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:25">prev</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:12">prev</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:19">item</name></expr>;</expr_stmt>

    </block_content>}</block>

    <return pos:start="65:5" pos:end="65:16">return <expr pos:start="65:12" pos:end="65:15"><name pos:start="65:12" pos:end="65:15">prev</name></expr>;</return>

</block_content>}</block></function>
</unit>
