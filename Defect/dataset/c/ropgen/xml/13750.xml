<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13750.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:12">target_ulong</name></type> <name pos:start="1:14" pos:end="1:28">spapr_hypercall</name><parameter_list pos:start="1:29" pos:end="3:48">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><name pos:start="1:48" pos:end="1:59">target_ulong</name></type> <name pos:start="1:61" pos:end="1:66">opcode</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:41">target_ulong</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:47">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:22">

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:15">(<expr pos:start="7:9" pos:end="7:14"><name pos:start="7:9" pos:end="7:14">msr_pr</name></expr>)</condition> <block pos:start="7:17" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:27">

        <expr_stmt pos:start="9:9" pos:end="9:57"><expr pos:start="9:9" pos:end="9:56"><call pos:start="9:9" pos:end="9:56"><name pos:start="9:9" pos:end="9:21">hcall_dprintf</name><argument_list pos:start="9:22" pos:end="9:56">(<argument pos:start="9:23" pos:end="9:55"><expr pos:start="9:23" pos:end="9:55"><literal type="string" pos:start="9:23" pos:end="9:55">"Hypercall made with MSR[PR]=1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="11:9" pos:end="11:27">return <expr pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:26">H_PRIVILEGE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="45:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="19:33">(<expr pos:start="17:9" pos:end="19:32"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:15">opcode</name> <operator pos:start="17:17" pos:end="17:18">&lt;=</operator> <name pos:start="17:20" pos:end="17:35">MAX_HCALL_OPCODE</name><operator pos:start="17:36" pos:end="17:36">)</operator>

        <operator pos:start="19:9" pos:end="19:10">&amp;&amp;</operator> <operator pos:start="19:12" pos:end="19:12">(</operator><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:19">opcode</name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <literal type="number" pos:start="19:23" pos:end="19:25">0x3</literal><operator pos:start="19:26" pos:end="19:26">)</operator> <operator pos:start="19:28" pos:end="19:29">==</operator> <literal type="number" pos:start="19:31" pos:end="19:31">0</literal><operator pos:start="19:32" pos:end="19:32">)</operator></expr>)</condition> <block pos:start="19:35" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <decl_stmt pos:start="21:9" pos:end="21:61"><decl pos:start="21:9" pos:end="21:60"><type pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22">spapr_hcall_fn</name></type> <name pos:start="21:24" pos:end="21:25">fn</name> <init pos:start="21:27" pos:end="21:60">= <expr pos:start="21:29" pos:end="21:60"><name pos:start="21:29" pos:end="21:60"><name pos:start="21:29" pos:end="21:48">papr_hypercall_table</name><index pos:start="21:49" pos:end="21:60">[<expr pos:start="21:50" pos:end="21:59"><name pos:start="21:50" pos:end="21:55">opcode</name> <operator pos:start="21:57" pos:end="21:57">/</operator> <literal type="number" pos:start="21:59" pos:end="21:59">4</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:15">(<expr pos:start="25:13" pos:end="25:14"><name pos:start="25:13" pos:end="25:14">fn</name></expr>)</condition> <block pos:start="25:17" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:48">

            <return pos:start="27:13" pos:end="27:48">return <expr pos:start="27:20" pos:end="27:47"><call pos:start="27:20" pos:end="27:47"><name pos:start="27:20" pos:end="27:21">fn</name><argument_list pos:start="27:22" pos:end="27:47">(<argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">env</name></expr></argument>, <argument pos:start="27:28" pos:end="27:32"><expr pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:32">spapr</name></expr></argument>, <argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><name pos:start="27:35" pos:end="27:40">opcode</name></expr></argument>, <argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">args</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="45:5">else if <condition pos:start="31:15" pos:end="33:44">(<expr pos:start="31:16" pos:end="33:43"><operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:22">opcode</name> <operator pos:start="31:24" pos:end="31:25">&gt;=</operator> <name pos:start="31:27" pos:end="31:43">KVMPPC_HCALL_BASE</name><operator pos:start="31:44" pos:end="31:44">)</operator> <operator pos:start="31:46" pos:end="31:47">&amp;&amp;</operator>

               <operator pos:start="33:16" pos:end="33:16">(</operator><name pos:start="33:17" pos:end="33:22">opcode</name> <operator pos:start="33:24" pos:end="33:25">&lt;=</operator> <name pos:start="33:27" pos:end="33:42">KVMPPC_HCALL_MAX</name><operator pos:start="33:43" pos:end="33:43">)</operator></expr>)</condition> <block pos:start="33:46" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:9">

        <decl_stmt pos:start="35:9" pos:end="35:79"><decl pos:start="35:9" pos:end="35:78"><type pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:22">spapr_hcall_fn</name></type> <name pos:start="35:24" pos:end="35:25">fn</name> <init pos:start="35:27" pos:end="35:78">= <expr pos:start="35:29" pos:end="35:78"><name pos:start="35:29" pos:end="35:78"><name pos:start="35:29" pos:end="35:50">kvmppc_hypercall_table</name><index pos:start="35:51" pos:end="35:78">[<expr pos:start="35:52" pos:end="35:77"><name pos:start="35:52" pos:end="35:57">opcode</name> <operator pos:start="35:59" pos:end="35:59">-</operator> <name pos:start="35:61" pos:end="35:77">KVMPPC_HCALL_BASE</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:15">(<expr pos:start="39:13" pos:end="39:14"><name pos:start="39:13" pos:end="39:14">fn</name></expr>)</condition> <block pos:start="39:17" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:48">

            <return pos:start="41:13" pos:end="41:48">return <expr pos:start="41:20" pos:end="41:47"><call pos:start="41:20" pos:end="41:47"><name pos:start="41:20" pos:end="41:21">fn</name><argument_list pos:start="41:22" pos:end="41:47">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">env</name></expr></argument>, <argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">spapr</name></expr></argument>, <argument pos:start="41:35" pos:end="41:40"><expr pos:start="41:35" pos:end="41:40"><name pos:start="41:35" pos:end="41:40">opcode</name></expr></argument>, <argument pos:start="41:43" pos:end="41:46"><expr pos:start="41:43" pos:end="41:46"><name pos:start="41:43" pos:end="41:46">args</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:71"><expr pos:start="49:5" pos:end="49:70"><call pos:start="49:5" pos:end="49:70"><name pos:start="49:5" pos:end="49:17">hcall_dprintf</name><argument_list pos:start="49:18" pos:end="49:70">(<argument pos:start="49:19" pos:end="49:61"><expr pos:start="49:19" pos:end="49:61"><literal type="string" pos:start="49:19" pos:end="49:42">"Unimplemented hcall 0x"</literal> <name pos:start="49:44" pos:end="49:56">TARGET_FMT_lx</name> <literal type="string" pos:start="49:58" pos:end="49:61">"\n"</literal></expr></argument>, <argument pos:start="49:64" pos:end="49:69"><expr pos:start="49:64" pos:end="49:69"><name pos:start="49:64" pos:end="49:69">opcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:22">return <expr pos:start="51:12" pos:end="51:21"><name pos:start="51:12" pos:end="51:21">H_FUNCTION</name></expr>;</return>

</block_content>}</block></function>
</unit>
