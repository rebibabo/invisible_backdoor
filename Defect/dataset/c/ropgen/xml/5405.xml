<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5405.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:37">nfs_co_writev</name><parameter_list pos:start="1:38" pos:end="5:58">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:58"><name pos:start="3:41" pos:end="3:47">int64_t</name></type> <name pos:start="3:49" pos:end="3:58">sector_num</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:74"><decl pos:start="3:61" pos:end="3:74"><type pos:start="3:61" pos:end="3:74"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:74">nb_sectors</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:57"><decl pos:start="5:41" pos:end="5:57"><type pos:start="5:41" pos:end="5:57"><name pos:start="5:41" pos:end="5:52">QEMUIOVector</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:57">iov</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="67:1">{<block_content pos:start="9:5" pos:end="65:13">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">NFSClient</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:21">client</name> <init pos:start="9:23" pos:end="9:34">= <expr pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:26">bs</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">NFSRPC</name></type> <name pos:start="11:12" pos:end="11:15">task</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">buf</name> <init pos:start="13:15" pos:end="13:20">= <expr pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:20">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:20">nfs_co_init_task</name><argument_list pos:start="17:21" pos:end="17:35">(<argument pos:start="17:22" pos:end="17:27"><expr pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:27">client</name></expr></argument>, <argument pos:start="17:30" pos:end="17:34"><expr pos:start="17:30" pos:end="17:34"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><name pos:start="17:31" pos:end="17:34">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:7">buf</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:49"><name pos:start="21:11" pos:end="21:18">g_malloc</name><argument_list pos:start="21:19" pos:end="21:49">(<argument pos:start="21:20" pos:end="21:48"><expr pos:start="21:20" pos:end="21:48"><name pos:start="21:20" pos:end="21:29">nb_sectors</name> <operator pos:start="21:31" pos:end="21:31">*</operator> <name pos:start="21:33" pos:end="21:48">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:66"><expr pos:start="23:5" pos:end="23:65"><call pos:start="23:5" pos:end="23:65"><name pos:start="23:5" pos:end="23:21">qemu_iovec_to_buf</name><argument_list pos:start="23:22" pos:end="23:65">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">iov</name></expr></argument>, <argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr></argument>, <argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">buf</name></expr></argument>, <argument pos:start="23:36" pos:end="23:64"><expr pos:start="23:36" pos:end="23:64"><name pos:start="23:36" pos:end="23:45">nb_sectors</name> <operator pos:start="23:47" pos:end="23:47">*</operator> <name pos:start="23:49" pos:end="23:64">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="33:61">(<expr pos:start="27:9" pos:end="33:60"><call pos:start="27:9" pos:end="33:55"><name pos:start="27:9" pos:end="27:24">nfs_pwrite_async</name><argument_list pos:start="27:25" pos:end="33:55">(<argument pos:start="27:26" pos:end="27:40"><expr pos:start="27:26" pos:end="27:40"><name pos:start="27:26" pos:end="27:40"><name pos:start="27:26" pos:end="27:31">client</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:40">context</name></name></expr></argument>, <argument pos:start="27:43" pos:end="27:52"><expr pos:start="27:43" pos:end="27:52"><name pos:start="27:43" pos:end="27:52"><name pos:start="27:43" pos:end="27:48">client</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:52">fh</name></name></expr></argument>,

                         <argument pos:start="29:26" pos:end="29:54"><expr pos:start="29:26" pos:end="29:54"><name pos:start="29:26" pos:end="29:35">sector_num</name> <operator pos:start="29:37" pos:end="29:37">*</operator> <name pos:start="29:39" pos:end="29:54">BDRV_SECTOR_SIZE</name></expr></argument>,

                         <argument pos:start="31:26" pos:end="31:54"><expr pos:start="31:26" pos:end="31:54"><name pos:start="31:26" pos:end="31:35">nb_sectors</name> <operator pos:start="31:37" pos:end="31:37">*</operator> <name pos:start="31:39" pos:end="31:54">BDRV_SECTOR_SIZE</name></expr></argument>,

                         <argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">buf</name></expr></argument>, <argument pos:start="33:31" pos:end="33:47"><expr pos:start="33:31" pos:end="33:47"><name pos:start="33:31" pos:end="33:47">nfs_co_generic_cb</name></expr></argument>, <argument pos:start="33:50" pos:end="33:54"><expr pos:start="33:50" pos:end="33:54"><operator pos:start="33:50" pos:end="33:50">&amp;</operator><name pos:start="33:51" pos:end="33:54">task</name></expr></argument>)</argument_list></call> <operator pos:start="33:57" pos:end="33:58">!=</operator> <literal type="number" pos:start="33:60" pos:end="33:60">0</literal></expr>)</condition> <block pos:start="33:63" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:23">

        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><call pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:14">g_free</name><argument_list pos:start="35:15" pos:end="35:19">(<argument pos:start="35:16" pos:end="35:18"><expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:23">return <expr pos:start="37:16" pos:end="37:22"><operator pos:start="37:16" pos:end="37:16">-</operator><name pos:start="37:17" pos:end="37:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="43:5" pos:end="49:5">while <condition pos:start="43:11" pos:end="43:26">(<expr pos:start="43:12" pos:end="43:25"><operator pos:start="43:12" pos:end="43:12">!</operator><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:16">task</name><operator pos:start="43:17" pos:end="43:17">.</operator><name pos:start="43:18" pos:end="43:25">complete</name></name></expr>)</condition> <block pos:start="43:28" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:31">

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><call pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:22">nfs_set_events</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><call pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:28">qemu_coroutine_yield</name><argument_list pos:start="47:29" pos:end="47:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="53:5" pos:end="53:16"><expr pos:start="53:5" pos:end="53:15"><call pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:10">g_free</name><argument_list pos:start="53:11" pos:end="53:15">(<argument pos:start="53:12" pos:end="53:14"><expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:50">(<expr pos:start="57:9" pos:end="57:49"><name pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:12">task</name><operator pos:start="57:13" pos:end="57:13">.</operator><name pos:start="57:14" pos:end="57:16">ret</name></name> <operator pos:start="57:18" pos:end="57:19">!=</operator> <name pos:start="57:21" pos:end="57:30">nb_sectors</name> <operator pos:start="57:32" pos:end="57:32">*</operator> <name pos:start="57:34" pos:end="57:49">BDRV_SECTOR_SIZE</name></expr>)</condition> <block pos:start="57:52" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:46">

        <return pos:start="59:9" pos:end="59:46">return <expr pos:start="59:16" pos:end="59:45"><ternary pos:start="59:16" pos:end="59:45"><condition pos:start="59:16" pos:end="59:29"><expr pos:start="59:16" pos:end="59:27"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:19">task</name><operator pos:start="59:20" pos:end="59:20">.</operator><name pos:start="59:21" pos:end="59:23">ret</name></name> <operator pos:start="59:25" pos:end="59:25">&lt;</operator> <literal type="number" pos:start="59:27" pos:end="59:27">0</literal></expr> ?</condition><then pos:start="59:31" pos:end="59:38"> <expr pos:start="59:31" pos:end="59:38"><name pos:start="59:31" pos:end="59:38"><name pos:start="59:31" pos:end="59:34">task</name><operator pos:start="59:35" pos:end="59:35">.</operator><name pos:start="59:36" pos:end="59:38">ret</name></name></expr> </then><else pos:start="59:40" pos:end="59:45">: <expr pos:start="59:42" pos:end="59:45"><operator pos:start="59:42" pos:end="59:42">-</operator><name pos:start="59:43" pos:end="59:45">EIO</name></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
