<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11698.c" pos:tabs="8"><function pos:start="1:1" pos:end="365:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:42">dv_decode_video_segment</name><parameter_list pos:start="1:43" pos:end="5:70">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:57">DVVideoContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:66"><decl pos:start="3:44" pos:end="3:66"><type pos:start="3:44" pos:end="3:66"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:56">uint8_t</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:66">buf_ptr1</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:69"><decl pos:start="5:44" pos:end="5:69"><type pos:start="5:44" pos:end="5:69"><specifier pos:start="5:44" pos:end="5:48">const</specifier> <name pos:start="5:50" pos:end="5:57">uint16_t</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type><name pos:start="5:60" pos:end="5:69">mb_pos_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="365:1">{<block_content pos:start="9:5" pos:end="363:5">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">quant</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:17">dc</name></decl>, <decl pos:start="9:20" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:27">dct_mode</name></decl>, <decl pos:start="9:30" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:35">class1</name></decl>, <decl pos:start="9:38" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">mb_index</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:22">mb_x</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:28">mb_y</name></decl>, <decl pos:start="11:31" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:31">v</name></decl>, <decl pos:start="11:34" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:34" pos:end="11:43">last_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">y_stride</name></decl>, <decl pos:start="13:19" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:19">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">DCTELEM</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:18">block</name></decl>, <decl pos:start="15:21" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:27">block1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">c_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:18">y_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:17">uint8_t</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:26">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:17">PutBitContext</name></type> <name pos:start="23:19" pos:end="23:20">pb</name></decl>, <decl pos:start="23:23" pos:end="23:27"><type ref="prev" pos:start="23:5" pos:end="23:17"/><name pos:start="23:23" pos:end="23:27">vs_pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:17">GetBitContext</name></type> <name pos:start="25:19" pos:end="25:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:49"><decl pos:start="27:5" pos:end="27:37"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:13">BlockInfo</name></type> <name pos:start="27:15" pos:end="27:37"><name pos:start="27:15" pos:end="27:21">mb_data</name><index pos:start="27:22" pos:end="27:37">[<expr pos:start="27:23" pos:end="27:36"><literal type="number" pos:start="27:23" pos:end="27:23">5</literal> <operator pos:start="27:25" pos:end="27:25">*</operator> <name pos:start="27:27" pos:end="27:36">DV_MAX_BPM</name></expr>]</index></name></decl>, <decl pos:start="27:40" pos:end="27:42"><type ref="prev" pos:start="27:5" pos:end="27:13"><modifier pos:start="27:40" pos:end="27:40">*</modifier></type><name pos:start="27:41" pos:end="27:42">mb</name></decl>, <decl pos:start="27:45" pos:end="27:48"><type ref="prev" pos:start="27:5" pos:end="27:13"><modifier pos:start="27:45" pos:end="27:45">*</modifier></type><name pos:start="27:46" pos:end="27:48">mb1</name></decl>;</decl_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><call pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:22">DECLARE_ALIGNED_16</name><argument_list pos:start="29:23" pos:end="29:57">(<argument pos:start="29:24" pos:end="29:30"><expr pos:start="29:24" pos:end="29:30"><name pos:start="29:24" pos:end="29:30">DCTELEM</name></expr></argument>, <argument pos:start="29:33" pos:end="29:56"><expr pos:start="29:33" pos:end="29:56"><name pos:start="29:33" pos:end="29:56"><name pos:start="29:33" pos:end="29:38">sblock</name><index pos:start="29:39" pos:end="29:52">[<expr pos:start="29:40" pos:end="29:51"><literal type="number" pos:start="29:40" pos:end="29:40">5</literal><operator pos:start="29:41" pos:end="29:41">*</operator><name pos:start="29:42" pos:end="29:51">DV_MAX_BPM</name></expr>]</index><index pos:start="29:53" pos:end="29:56">[<expr pos:start="29:54" pos:end="29:55"><literal type="number" pos:start="29:54" pos:end="29:55">64</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><call pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:21">DECLARE_ALIGNED_8</name><argument_list pos:start="31:22" pos:end="31:53">(<argument pos:start="31:23" pos:end="31:29"><expr pos:start="31:23" pos:end="31:29"><name pos:start="31:23" pos:end="31:29">uint8_t</name></expr></argument>, <argument pos:start="31:32" pos:end="31:52"><expr pos:start="31:32" pos:end="31:52"><name pos:start="31:32" pos:end="31:52"><name pos:start="31:32" pos:end="31:44">mb_bit_buffer</name><index pos:start="31:45" pos:end="31:52">[<expr pos:start="31:46" pos:end="31:51"><literal type="number" pos:start="31:46" pos:end="31:49">80</literal> <operator pos:start="31:49" pos:end="31:49">+</operator> <literal type="number" pos:start="31:51" pos:end="31:51">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:56" pos:end="31:77">/* allow some slack */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><call pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:21">DECLARE_ALIGNED_8</name><argument_list pos:start="33:22" pos:end="33:57">(<argument pos:start="33:23" pos:end="33:29"><expr pos:start="33:23" pos:end="33:29"><name pos:start="33:23" pos:end="33:29">uint8_t</name></expr></argument>, <argument pos:start="33:32" pos:end="33:56"><expr pos:start="33:32" pos:end="33:56"><name pos:start="33:32" pos:end="33:56"><name pos:start="33:32" pos:end="33:44">vs_bit_buffer</name><index pos:start="33:45" pos:end="33:56">[<expr pos:start="33:46" pos:end="33:55"><literal type="number" pos:start="33:46" pos:end="33:46">5</literal> <operator pos:start="33:48" pos:end="33:48">*</operator> <literal type="number" pos:start="33:50" pos:end="33:53">80</literal> <operator pos:start="33:53" pos:end="33:53">+</operator> <literal type="number" pos:start="33:55" pos:end="33:55">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:60" pos:end="33:81">/* allow some slack */</comment>

    <decl_stmt pos:start="35:5" pos:end="35:49"><decl pos:start="35:5" pos:end="35:48"><type pos:start="35:5" pos:end="35:13"><specifier pos:start="35:5" pos:end="35:9">const</specifier> <name pos:start="35:11" pos:end="35:13">int</name></type> <name pos:start="35:15" pos:end="35:28">log2_blocksize</name><init pos:start="35:29" pos:end="35:48">= <expr pos:start="35:31" pos:end="35:48"><literal type="number" pos:start="35:31" pos:end="35:32">3</literal><operator pos:start="35:32" pos:end="35:32">-</operator><name pos:start="35:33" pos:end="35:48"><name pos:start="35:33" pos:end="35:33">s</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:40">avctx</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:48">lowres</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:25"><decl pos:start="37:5" pos:end="37:24"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:21">is_field_mode</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">5</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><call pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:10">assert</name><argument_list pos:start="41:11" pos:end="41:39">(<argument pos:start="41:12" pos:end="41:38"><expr pos:start="41:12" pos:end="41:38"><operator pos:start="41:12" pos:end="41:12">(</operator><operator pos:start="41:13" pos:end="41:13">(</operator><operator pos:start="41:14" pos:end="41:14">(</operator><name pos:start="41:15" pos:end="41:17">int</name><operator pos:start="41:18" pos:end="41:18">)</operator><name pos:start="41:19" pos:end="41:31">mb_bit_buffer</name><operator pos:start="41:32" pos:end="41:32">)</operator><operator pos:start="41:33" pos:end="41:33">&amp;</operator><literal type="number" pos:start="41:34" pos:end="41:34">7</literal><operator pos:start="41:35" pos:end="41:35">)</operator><operator pos:start="41:36" pos:end="41:37">==</operator><literal type="number" pos:start="41:38" pos:end="41:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><call pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:10">assert</name><argument_list pos:start="43:11" pos:end="43:39">(<argument pos:start="43:12" pos:end="43:38"><expr pos:start="43:12" pos:end="43:38"><operator pos:start="43:12" pos:end="43:12">(</operator><operator pos:start="43:13" pos:end="43:13">(</operator><operator pos:start="43:14" pos:end="43:14">(</operator><name pos:start="43:15" pos:end="43:17">int</name><operator pos:start="43:18" pos:end="43:18">)</operator><name pos:start="43:19" pos:end="43:31">vs_bit_buffer</name><operator pos:start="43:32" pos:end="43:32">)</operator><operator pos:start="43:33" pos:end="43:33">&amp;</operator><literal type="number" pos:start="43:34" pos:end="43:34">7</literal><operator pos:start="43:35" pos:end="43:35">)</operator><operator pos:start="43:36" pos:end="43:37">==</operator><literal type="number" pos:start="43:38" pos:end="43:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><call pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:10">memset</name><argument_list pos:start="47:11" pos:end="47:37">(<argument pos:start="47:12" pos:end="47:17"><expr pos:start="47:12" pos:end="47:17"><name pos:start="47:12" pos:end="47:17">sblock</name></expr></argument>, <argument pos:start="47:20" pos:end="47:20"><expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr></argument>, <argument pos:start="47:23" pos:end="47:36"><expr pos:start="47:23" pos:end="47:36"><sizeof pos:start="47:23" pos:end="47:36">sizeof<argument_list pos:start="47:29" pos:end="47:36">(<argument pos:start="47:30" pos:end="47:35"><expr pos:start="47:30" pos:end="47:35"><name pos:start="47:30" pos:end="47:35">sblock</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:56">/* pass 1 : read DC and AC coefficients in blocks */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:11">buf_ptr</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:22">buf_ptr1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:10">block1</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <operator pos:start="55:14" pos:end="55:14">&amp;</operator><name pos:start="55:15" pos:end="55:26"><name pos:start="55:15" pos:end="55:20">sblock</name><index pos:start="55:21" pos:end="55:23">[<expr pos:start="55:22" pos:end="55:22"><literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>]</index><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:7">mb1</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <name pos:start="57:11" pos:end="57:17">mb_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><call pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:17">init_put_bits</name><argument_list pos:start="59:18" pos:end="59:48">(<argument pos:start="59:19" pos:end="59:24"><expr pos:start="59:19" pos:end="59:24"><operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:24">vs_pb</name></expr></argument>, <argument pos:start="59:27" pos:end="59:39"><expr pos:start="59:27" pos:end="59:39"><name pos:start="59:27" pos:end="59:39">vs_bit_buffer</name></expr></argument>, <argument pos:start="59:42" pos:end="59:47"><expr pos:start="59:42" pos:end="59:47"><literal type="number" pos:start="59:42" pos:end="59:42">5</literal> <operator pos:start="59:44" pos:end="59:44">*</operator> <literal type="number" pos:start="59:46" pos:end="59:47">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="208:0">for<control pos:start="61:8" pos:end="61:95">(<init pos:start="61:9" pos:end="61:21"><expr pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:16">mb_index</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</init> <condition pos:start="61:23" pos:end="61:35"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:30">mb_index</name> <operator pos:start="61:32" pos:end="61:32">&lt;</operator> <literal type="number" pos:start="61:34" pos:end="61:34">5</literal></expr>;</condition> <incr pos:start="61:37" pos:end="61:94"><expr pos:start="61:37" pos:end="61:46"><name pos:start="61:37" pos:end="61:44">mb_index</name><operator pos:start="61:45" pos:end="61:46">++</operator></expr><operator pos:start="61:47" pos:end="61:47">,</operator> <expr pos:start="61:49" pos:end="61:66"><name pos:start="61:49" pos:end="61:51">mb1</name> <operator pos:start="61:53" pos:end="61:54">+=</operator> <name pos:start="61:56" pos:end="61:66"><name pos:start="61:56" pos:end="61:56">s</name><operator pos:start="61:57" pos:end="61:58">-&gt;</operator><name pos:start="61:59" pos:end="61:61">sys</name><operator pos:start="61:62" pos:end="61:63">-&gt;</operator><name pos:start="61:64" pos:end="61:66">bpm</name></name></expr><operator pos:start="61:67" pos:end="61:67">,</operator> <expr pos:start="61:69" pos:end="61:94"><name pos:start="61:69" pos:end="61:74">block1</name> <operator pos:start="61:76" pos:end="61:77">+=</operator> <name pos:start="61:79" pos:end="61:89"><name pos:start="61:79" pos:end="61:79">s</name><operator pos:start="61:80" pos:end="61:81">-&gt;</operator><name pos:start="61:82" pos:end="61:84">sys</name><operator pos:start="61:85" pos:end="61:86">-&gt;</operator><name pos:start="61:87" pos:end="61:89">bpm</name></name> <operator pos:start="61:91" pos:end="61:91">*</operator> <literal type="number" pos:start="61:93" pos:end="61:94">64</literal></expr></incr>)</control> <block pos:start="61:97" pos:end="208:0">{<block_content pos:start="65:9" pos:end="199:34">

        <comment type="block" pos:start="63:9" pos:end="63:25">/* skip header */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:13">quant</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:23">buf_ptr</name><index pos:start="65:24" pos:end="65:26">[<expr pos:start="65:25" pos:end="65:25"><literal type="number" pos:start="65:25" pos:end="65:25">3</literal></expr>]</index></name> <operator pos:start="65:28" pos:end="65:28">&amp;</operator> <literal type="number" pos:start="65:30" pos:end="65:33">0x0f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:15">buf_ptr</name> <operator pos:start="67:17" pos:end="67:18">+=</operator> <literal type="number" pos:start="67:20" pos:end="67:20">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><call pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:21">init_put_bits</name><argument_list pos:start="69:22" pos:end="69:45">(<argument pos:start="69:23" pos:end="69:25"><expr pos:start="69:23" pos:end="69:25"><operator pos:start="69:23" pos:end="69:23">&amp;</operator><name pos:start="69:24" pos:end="69:25">pb</name></expr></argument>, <argument pos:start="69:28" pos:end="69:40"><expr pos:start="69:28" pos:end="69:40"><name pos:start="69:28" pos:end="69:40">mb_bit_buffer</name></expr></argument>, <argument pos:start="69:43" pos:end="69:44"><expr pos:start="69:43" pos:end="69:44"><literal type="number" pos:start="69:43" pos:end="69:44">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:17"><expr pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:10">mb</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:16">mb1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:23"><expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:13">block</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:22">block1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:36"><expr pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:21">is_field_mode</name><index pos:start="75:22" pos:end="75:31">[<expr pos:start="75:23" pos:end="75:30"><name pos:start="75:23" pos:end="75:30">mb_index</name></expr>]</index></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <literal type="number" pos:start="75:35" pos:end="75:35">0</literal></expr>;</expr_stmt>

        <for pos:start="77:9" pos:end="164:0">for<control pos:start="77:12" pos:end="77:39">(<init pos:start="77:13" pos:end="77:18"><expr pos:start="77:13" pos:end="77:17"><name pos:start="77:13" pos:end="77:13">j</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>;</init><condition pos:start="77:19" pos:end="77:34"><expr pos:start="77:19" pos:end="77:33"><name pos:start="77:19" pos:end="77:19">j</name> <operator pos:start="77:21" pos:end="77:21">&lt;</operator> <name pos:start="77:23" pos:end="77:33"><name pos:start="77:23" pos:end="77:23">s</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:28">sys</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:33">bpm</name></name></expr>;</condition> <incr pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:36">j</name><operator pos:start="77:37" pos:end="77:38">++</operator></expr></incr>)</control> <block pos:start="77:41" pos:end="164:0">{<block_content pos:start="79:13" pos:end="155:17">

            <expr_stmt pos:start="79:13" pos:end="79:48"><expr pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:22">last_index</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:47"><name pos:start="79:26" pos:end="79:26">s</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:31">sys</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:44">block_sizes</name><index pos:start="79:45" pos:end="79:47">[<expr pos:start="79:46" pos:end="79:46"><name pos:start="79:46" pos:end="79:46">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:52"><expr pos:start="81:13" pos:end="81:51"><call pos:start="81:13" pos:end="81:51"><name pos:start="81:13" pos:end="81:25">init_get_bits</name><argument_list pos:start="81:26" pos:end="81:51">(<argument pos:start="81:27" pos:end="81:29"><expr pos:start="81:27" pos:end="81:29"><operator pos:start="81:27" pos:end="81:27">&amp;</operator><name pos:start="81:28" pos:end="81:29">gb</name></expr></argument>, <argument pos:start="81:32" pos:end="81:38"><expr pos:start="81:32" pos:end="81:38"><name pos:start="81:32" pos:end="81:38">buf_ptr</name></expr></argument>, <argument pos:start="81:41" pos:end="81:50"><expr pos:start="81:41" pos:end="81:50"><name pos:start="81:41" pos:end="81:50">last_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="85:13" pos:end="85:28">/* get the dc */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:35"><expr pos:start="87:13" pos:end="87:34"><name pos:start="87:13" pos:end="87:14">dc</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <call pos:start="87:18" pos:end="87:34"><name pos:start="87:18" pos:end="87:26">get_sbits</name><argument_list pos:start="87:27" pos:end="87:34">(<argument pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><operator pos:start="87:28" pos:end="87:28">&amp;</operator><name pos:start="87:29" pos:end="87:30">gb</name></expr></argument>, <argument pos:start="87:33" pos:end="87:33"><expr pos:start="87:33" pos:end="87:33"><literal type="number" pos:start="87:33" pos:end="87:33">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:38"><expr pos:start="89:13" pos:end="89:37"><name pos:start="89:13" pos:end="89:20">dct_mode</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <call pos:start="89:24" pos:end="89:37"><name pos:start="89:24" pos:end="89:32">get_bits1</name><argument_list pos:start="89:33" pos:end="89:37">(<argument pos:start="89:34" pos:end="89:36"><expr pos:start="89:34" pos:end="89:36"><operator pos:start="89:34" pos:end="89:34">&amp;</operator><name pos:start="89:35" pos:end="89:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:38"><expr pos:start="91:13" pos:end="91:37"><name pos:start="91:13" pos:end="91:18">class1</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <call pos:start="91:22" pos:end="91:37"><name pos:start="91:22" pos:end="91:29">get_bits</name><argument_list pos:start="91:30" pos:end="91:37">(<argument pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><operator pos:start="91:31" pos:end="91:31">&amp;</operator><name pos:start="91:32" pos:end="91:33">gb</name></expr></argument>, <argument pos:start="91:36" pos:end="91:36"><expr pos:start="91:36" pos:end="91:36"><literal type="number" pos:start="91:36" pos:end="91:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="113:13"><if pos:start="93:13" pos:end="103:13">if <condition pos:start="93:16" pos:end="93:41">(<expr pos:start="93:17" pos:end="93:40"><call pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:32">DV_PROFILE_IS_HD</name><argument_list pos:start="93:33" pos:end="93:40">(<argument pos:start="93:34" pos:end="93:39"><expr pos:start="93:34" pos:end="93:39"><name pos:start="93:34" pos:end="93:39"><name pos:start="93:34" pos:end="93:34">s</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:39">sys</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:43" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:58">

                <expr_stmt pos:start="95:17" pos:end="95:46"><expr pos:start="95:17" pos:end="95:45"><name pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:18">mb</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:28">idct_put</name></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <name pos:start="95:32" pos:end="95:45"><name pos:start="95:32" pos:end="95:32">s</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:42">idct_put</name><index pos:start="95:43" pos:end="95:45">[<expr pos:start="95:44" pos:end="95:44"><literal type="number" pos:start="95:44" pos:end="95:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:49"><expr pos:start="97:17" pos:end="97:48"><name pos:start="97:17" pos:end="97:30"><name pos:start="97:17" pos:end="97:18">mb</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:30">scan_table</name></name> <operator pos:start="97:32" pos:end="97:32">=</operator> <name pos:start="97:34" pos:end="97:48"><name pos:start="97:34" pos:end="97:34">s</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:45">dv_zigzag</name><index pos:start="97:46" pos:end="97:48">[<expr pos:start="97:47" pos:end="97:47"><literal type="number" pos:start="97:47" pos:end="97:47">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:109"><expr pos:start="99:17" pos:end="99:108"><name pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:18">mb</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:32">factor_table</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:108"><name pos:start="99:36" pos:end="99:36">s</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:55">dv100_idct_factor</name><index pos:start="99:56" pos:end="99:93">[<expr pos:start="99:57" pos:end="99:92"><operator pos:start="99:57" pos:end="99:57">(</operator><operator pos:start="99:58" pos:end="99:58">(</operator><name pos:start="99:59" pos:end="99:72"><name pos:start="99:59" pos:end="99:59">s</name><operator pos:start="99:60" pos:end="99:61">-&gt;</operator><name pos:start="99:62" pos:end="99:64">sys</name><operator pos:start="99:65" pos:end="99:66">-&gt;</operator><name pos:start="99:67" pos:end="99:72">height</name></name> <operator pos:start="99:74" pos:end="99:75">==</operator> <literal type="number" pos:start="99:77" pos:end="99:79">720</literal><operator pos:start="99:80" pos:end="99:80">)</operator><operator pos:start="99:81" pos:end="99:82">&lt;&lt;</operator><literal type="number" pos:start="99:83" pos:end="99:83">1</literal><operator pos:start="99:84" pos:end="99:84">)</operator><operator pos:start="99:85" pos:end="99:85">&amp;</operator><operator pos:start="99:86" pos:end="99:86">(</operator><name pos:start="99:87" pos:end="99:87">j</name> <operator pos:start="99:89" pos:end="99:89">&lt;</operator> <literal type="number" pos:start="99:91" pos:end="99:91">4</literal><operator pos:start="99:92" pos:end="99:92">)</operator></expr>]</index><index pos:start="99:94" pos:end="99:101">[<expr pos:start="99:95" pos:end="99:100"><name pos:start="99:95" pos:end="99:100">class1</name></expr>]</index><index pos:start="99:102" pos:end="99:108">[<expr pos:start="99:103" pos:end="99:107"><name pos:start="99:103" pos:end="99:107">quant</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:58"><expr pos:start="101:17" pos:end="101:57"><name pos:start="101:17" pos:end="101:39"><name pos:start="101:17" pos:end="101:29">is_field_mode</name><index pos:start="101:30" pos:end="101:39">[<expr pos:start="101:31" pos:end="101:38"><name pos:start="101:31" pos:end="101:38">mb_index</name></expr>]</index></name> <operator pos:start="101:41" pos:end="101:42">|=</operator> <operator pos:start="101:44" pos:end="101:44">!</operator><name pos:start="101:45" pos:end="101:45">j</name> <operator pos:start="101:47" pos:end="101:48">&amp;&amp;</operator> <name pos:start="101:50" pos:end="101:57">dct_mode</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="103:15" pos:end="113:13">else <block pos:start="103:20" pos:end="113:13">{<block_content pos:start="105:17" pos:end="111:54">

                <expr_stmt pos:start="105:17" pos:end="105:74"><expr pos:start="105:17" pos:end="105:73"><name pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:18">mb</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:28">idct_put</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <name pos:start="105:32" pos:end="105:73"><name pos:start="105:32" pos:end="105:32">s</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:42">idct_put</name><index pos:start="105:43" pos:end="105:73">[<expr pos:start="105:44" pos:end="105:72"><name pos:start="105:44" pos:end="105:51">dct_mode</name> <operator pos:start="105:53" pos:end="105:54">&amp;&amp;</operator> <name pos:start="105:56" pos:end="105:69">log2_blocksize</name><operator pos:start="105:70" pos:end="105:71">==</operator><literal type="number" pos:start="105:72" pos:end="105:72">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:56"><expr pos:start="107:17" pos:end="107:55"><name pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:18">mb</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:30">scan_table</name></name> <operator pos:start="107:32" pos:end="107:32">=</operator> <name pos:start="107:34" pos:end="107:55"><name pos:start="107:34" pos:end="107:34">s</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:45">dv_zigzag</name><index pos:start="107:46" pos:end="107:55">[<expr pos:start="107:47" pos:end="107:54"><name pos:start="107:47" pos:end="107:54">dct_mode</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="111:54"><expr pos:start="109:17" pos:end="111:53"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:18">mb</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:32">factor_table</name></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <name pos:start="109:36" pos:end="111:53"><name pos:start="109:36" pos:end="109:36">s</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:52">dv_idct_factor</name><index pos:start="109:53" pos:end="109:65">[<expr pos:start="109:54" pos:end="109:64"><name pos:start="109:54" pos:end="109:59">class1</name> <operator pos:start="109:61" pos:end="109:62">==</operator> <literal type="number" pos:start="109:64" pos:end="109:64">3</literal></expr>]</index><index pos:start="109:66" pos:end="109:75">[<expr pos:start="109:67" pos:end="109:74"><name pos:start="109:67" pos:end="109:74">dct_mode</name></expr>]</index>

                    <index pos:start="111:21" pos:end="111:53">[<expr pos:start="111:22" pos:end="111:52"><name pos:start="111:22" pos:end="111:26">quant</name> <operator pos:start="111:28" pos:end="111:28">+</operator> <name pos:start="111:30" pos:end="111:52"><name pos:start="111:30" pos:end="111:44">dv_quant_offset</name><index pos:start="111:45" pos:end="111:52">[<expr pos:start="111:46" pos:end="111:51"><name pos:start="111:46" pos:end="111:51">class1</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:25"><expr pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:14">dc</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:19">dc</name> <operator pos:start="115:21" pos:end="115:22">&lt;&lt;</operator> <literal type="number" pos:start="115:24" pos:end="115:24">2</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="117:13" pos:end="119:31">/* convert to unsigned because 128 is not added in the

               standard IDCT */</comment>

            <expr_stmt pos:start="121:13" pos:end="121:23"><expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:14">dc</name> <operator pos:start="121:16" pos:end="121:17">+=</operator> <literal type="number" pos:start="121:19" pos:end="121:22">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:26"><expr pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:17">block</name><index pos:start="123:18" pos:end="123:20">[<expr pos:start="123:19" pos:end="123:19"><literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>]</index></name> <operator pos:start="123:22" pos:end="123:22">=</operator> <name pos:start="123:24" pos:end="123:25">dc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:39"><expr pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:19">buf_ptr</name> <operator pos:start="125:21" pos:end="125:22">+=</operator> <name pos:start="125:24" pos:end="125:33">last_index</name> <operator pos:start="125:35" pos:end="125:36">&gt;&gt;</operator> <literal type="number" pos:start="125:38" pos:end="125:38">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:24"><expr pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:14">mb</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:19">pos</name></name> <operator pos:start="127:21" pos:end="127:21">=</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="134:0"><expr pos:start="129:13" pos:end="129:37"><name pos:start="129:13" pos:end="129:33"><name pos:start="129:13" pos:end="129:14">mb</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:33">partial_bit_count</name></name> <operator pos:start="129:35" pos:end="129:35">=</operator> <literal type="number" pos:start="129:37" pos:end="129:37">0</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="133:1" pos:end="133:16">#<cpp:directive pos:start="133:2" pos:end="133:6">ifdef</cpp:directive> <name pos:start="133:8" pos:end="133:16">VLC_DEBUG</name></cpp:ifdef>

            <expr_stmt pos:start="135:13" pos:end="138:0"><expr pos:start="135:13" pos:end="135:52"><call pos:start="135:13" pos:end="135:52"><name pos:start="135:13" pos:end="135:18">printf</name><argument_list pos:start="135:19" pos:end="135:52">(<argument pos:start="135:20" pos:end="135:38"><expr pos:start="135:20" pos:end="135:38"><literal type="string" pos:start="135:20" pos:end="135:38">"MB block: %d, %d "</literal></expr></argument>, <argument pos:start="135:41" pos:end="135:48"><expr pos:start="135:41" pos:end="135:48"><name pos:start="135:41" pos:end="135:48">mb_index</name></expr></argument>, <argument pos:start="135:51" pos:end="135:51"><expr pos:start="135:51" pos:end="135:51"><name pos:start="135:51" pos:end="135:51">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="139:13" pos:end="139:41"><expr pos:start="139:13" pos:end="139:40"><call pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:24">dv_decode_ac</name><argument_list pos:start="139:25" pos:end="139:40">(<argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><operator pos:start="139:26" pos:end="139:26">&amp;</operator><name pos:start="139:27" pos:end="139:28">gb</name></expr></argument>, <argument pos:start="139:31" pos:end="139:32"><expr pos:start="139:31" pos:end="139:32"><name pos:start="139:31" pos:end="139:32">mb</name></expr></argument>, <argument pos:start="139:35" pos:end="139:39"><expr pos:start="139:35" pos:end="139:39"><name pos:start="139:35" pos:end="139:39">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="143:13" pos:end="145:35">/* write the remaining bits  in a new buffer only if the

               block is finished */</comment>

            <if_stmt pos:start="147:13" pos:end="149:35"><if pos:start="147:13" pos:end="149:35">if <condition pos:start="147:16" pos:end="147:30">(<expr pos:start="147:17" pos:end="147:29"><name pos:start="147:17" pos:end="147:23"><name pos:start="147:17" pos:end="147:18">mb</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:23">pos</name></name> <operator pos:start="147:25" pos:end="147:26">&gt;=</operator> <literal type="number" pos:start="147:28" pos:end="147:29">64</literal></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:35"><block_content pos:start="149:17" pos:end="149:35">

                <expr_stmt pos:start="149:17" pos:end="149:35"><expr pos:start="149:17" pos:end="149:34"><call pos:start="149:17" pos:end="149:34"><name pos:start="149:17" pos:end="149:24">bit_copy</name><argument_list pos:start="149:25" pos:end="149:34">(<argument pos:start="149:26" pos:end="149:28"><expr pos:start="149:26" pos:end="149:28"><operator pos:start="149:26" pos:end="149:26">&amp;</operator><name pos:start="149:27" pos:end="149:28">pb</name></expr></argument>, <argument pos:start="149:31" pos:end="149:33"><expr pos:start="149:31" pos:end="149:33"><operator pos:start="149:31" pos:end="149:31">&amp;</operator><name pos:start="149:32" pos:end="149:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="153:13" pos:end="153:24"><expr pos:start="153:13" pos:end="153:23"><name pos:start="153:13" pos:end="153:17">block</name> <operator pos:start="153:19" pos:end="153:20">+=</operator> <literal type="number" pos:start="153:22" pos:end="153:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:17"><expr pos:start="155:13" pos:end="155:16"><name pos:start="155:13" pos:end="155:14">mb</name><operator pos:start="155:15" pos:end="155:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="161:9" pos:end="161:46">/* pass 2 : we can do it just after */</comment>

<cpp:ifdef pos:start="163:1" pos:end="163:16">#<cpp:directive pos:start="163:2" pos:end="163:6">ifdef</cpp:directive> <name pos:start="163:8" pos:end="163:16">VLC_DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="165:9" pos:end="168:0"><expr pos:start="165:9" pos:end="165:75"><call pos:start="165:9" pos:end="165:75"><name pos:start="165:9" pos:end="165:14">printf</name><argument_list pos:start="165:15" pos:end="165:75">(<argument pos:start="165:16" pos:end="165:43"><expr pos:start="165:16" pos:end="165:43"><literal type="string" pos:start="165:16" pos:end="165:43">"***pass 2 size=%d MB#=%d\n"</literal></expr></argument>, <argument pos:start="165:46" pos:end="165:64"><expr pos:start="165:46" pos:end="165:64"><call pos:start="165:46" pos:end="165:64"><name pos:start="165:46" pos:end="165:59">put_bits_count</name><argument_list pos:start="165:60" pos:end="165:64">(<argument pos:start="165:61" pos:end="165:63"><expr pos:start="165:61" pos:end="165:63"><operator pos:start="165:61" pos:end="165:61">&amp;</operator><name pos:start="165:62" pos:end="165:63">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:67" pos:end="165:74"><expr pos:start="165:67" pos:end="165:74"><name pos:start="165:67" pos:end="165:74">mb_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="167:1" pos:end="167:6">#<cpp:directive pos:start="167:2" pos:end="167:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="169:9" pos:end="169:23"><expr pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:13">block</name> <operator pos:start="169:15" pos:end="169:15">=</operator> <name pos:start="169:17" pos:end="169:22">block1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:17"><expr pos:start="171:9" pos:end="171:16"><name pos:start="171:9" pos:end="171:10">mb</name> <operator pos:start="171:12" pos:end="171:12">=</operator> <name pos:start="171:14" pos:end="171:16">mb1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:63"><expr pos:start="173:9" pos:end="173:62"><call pos:start="173:9" pos:end="173:62"><name pos:start="173:9" pos:end="173:21">init_get_bits</name><argument_list pos:start="173:22" pos:end="173:62">(<argument pos:start="173:23" pos:end="173:25"><expr pos:start="173:23" pos:end="173:25"><operator pos:start="173:23" pos:end="173:23">&amp;</operator><name pos:start="173:24" pos:end="173:25">gb</name></expr></argument>, <argument pos:start="173:28" pos:end="173:40"><expr pos:start="173:28" pos:end="173:40"><name pos:start="173:28" pos:end="173:40">mb_bit_buffer</name></expr></argument>, <argument pos:start="173:43" pos:end="173:61"><expr pos:start="173:43" pos:end="173:61"><call pos:start="173:43" pos:end="173:61"><name pos:start="173:43" pos:end="173:56">put_bits_count</name><argument_list pos:start="173:57" pos:end="173:61">(<argument pos:start="173:58" pos:end="173:60"><expr pos:start="173:58" pos:end="173:60"><operator pos:start="173:58" pos:end="173:58">&amp;</operator><name pos:start="173:59" pos:end="173:60">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:28"><expr pos:start="175:9" pos:end="175:27"><call pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:22">flush_put_bits</name><argument_list pos:start="175:23" pos:end="175:27">(<argument pos:start="175:24" pos:end="175:26"><expr pos:start="175:24" pos:end="175:26"><operator pos:start="175:24" pos:end="175:24">&amp;</operator><name pos:start="175:25" pos:end="175:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="177:9" pos:end="191:9">for<control pos:start="177:12" pos:end="177:58">(<init pos:start="177:13" pos:end="177:18"><expr pos:start="177:13" pos:end="177:17"><name pos:start="177:13" pos:end="177:13">j</name> <operator pos:start="177:15" pos:end="177:15">=</operator> <literal type="number" pos:start="177:17" pos:end="177:17">0</literal></expr>;</init><condition pos:start="177:19" pos:end="177:34"><expr pos:start="177:19" pos:end="177:33"><name pos:start="177:19" pos:end="177:19">j</name> <operator pos:start="177:21" pos:end="177:21">&lt;</operator> <name pos:start="177:23" pos:end="177:33"><name pos:start="177:23" pos:end="177:23">s</name><operator pos:start="177:24" pos:end="177:25">-&gt;</operator><name pos:start="177:26" pos:end="177:28">sys</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:33">bpm</name></name></expr>;</condition> <incr pos:start="177:36" pos:end="177:57"><expr pos:start="177:36" pos:end="177:38"><name pos:start="177:36" pos:end="177:36">j</name><operator pos:start="177:37" pos:end="177:38">++</operator></expr><operator pos:start="177:39" pos:end="177:39">,</operator> <expr pos:start="177:41" pos:end="177:51"><name pos:start="177:41" pos:end="177:45">block</name> <operator pos:start="177:47" pos:end="177:48">+=</operator> <literal type="number" pos:start="177:50" pos:end="177:51">64</literal></expr><operator pos:start="177:52" pos:end="177:52">,</operator> <expr pos:start="177:54" pos:end="177:57"><name pos:start="177:54" pos:end="177:55">mb</name><operator pos:start="177:56" pos:end="177:57">++</operator></expr></incr>)</control> <block pos:start="177:60" pos:end="191:9">{<block_content pos:start="179:13" pos:end="189:13">

            <if_stmt pos:start="179:13" pos:end="189:13"><if pos:start="179:13" pos:end="189:13">if <condition pos:start="179:16" pos:end="179:55">(<expr pos:start="179:17" pos:end="179:54"><name pos:start="179:17" pos:end="179:23"><name pos:start="179:17" pos:end="179:18">mb</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:23">pos</name></name> <operator pos:start="179:25" pos:end="179:25">&lt;</operator> <literal type="number" pos:start="179:27" pos:end="179:28">64</literal> <operator pos:start="179:30" pos:end="179:31">&amp;&amp;</operator> <call pos:start="179:33" pos:end="179:50"><name pos:start="179:33" pos:end="179:45">get_bits_left</name><argument_list pos:start="179:46" pos:end="179:50">(<argument pos:start="179:47" pos:end="179:49"><expr pos:start="179:47" pos:end="179:49"><operator pos:start="179:47" pos:end="179:47">&amp;</operator><name pos:start="179:48" pos:end="179:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="179:52" pos:end="179:52">&gt;</operator> <literal type="number" pos:start="179:54" pos:end="179:54">0</literal></expr>)</condition> <block pos:start="179:57" pos:end="189:13">{<block_content pos:start="181:17" pos:end="187:26">

                <expr_stmt pos:start="181:17" pos:end="181:45"><expr pos:start="181:17" pos:end="181:44"><call pos:start="181:17" pos:end="181:44"><name pos:start="181:17" pos:end="181:28">dv_decode_ac</name><argument_list pos:start="181:29" pos:end="181:44">(<argument pos:start="181:30" pos:end="181:32"><expr pos:start="181:30" pos:end="181:32"><operator pos:start="181:30" pos:end="181:30">&amp;</operator><name pos:start="181:31" pos:end="181:32">gb</name></expr></argument>, <argument pos:start="181:35" pos:end="181:36"><expr pos:start="181:35" pos:end="181:36"><name pos:start="181:35" pos:end="181:36">mb</name></expr></argument>, <argument pos:start="181:39" pos:end="181:43"><expr pos:start="181:39" pos:end="181:43"><name pos:start="181:39" pos:end="181:43">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="183:17" pos:end="183:74">/* if still not finished, no need to parse other blocks */</comment>

                <if_stmt pos:start="185:17" pos:end="187:26"><if pos:start="185:17" pos:end="187:26">if <condition pos:start="185:20" pos:end="185:33">(<expr pos:start="185:21" pos:end="185:32"><name pos:start="185:21" pos:end="185:27"><name pos:start="185:21" pos:end="185:22">mb</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:27">pos</name></name> <operator pos:start="185:29" pos:end="185:29">&lt;</operator> <literal type="number" pos:start="185:31" pos:end="185:32">64</literal></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:26"><block_content pos:start="187:21" pos:end="187:26">

                    <break pos:start="187:21" pos:end="187:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="193:9" pos:end="195:37">/* all blocks are finished, so the extra bytes can be used at

           the video segment level */</comment>

        <if_stmt pos:start="197:9" pos:end="199:34"><if pos:start="197:9" pos:end="199:34">if <condition pos:start="197:12" pos:end="197:29">(<expr pos:start="197:13" pos:end="197:28"><name pos:start="197:13" pos:end="197:13">j</name> <operator pos:start="197:15" pos:end="197:16">&gt;=</operator> <name pos:start="197:18" pos:end="197:28"><name pos:start="197:18" pos:end="197:18">s</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:23">sys</name><operator pos:start="197:24" pos:end="197:25">-&gt;</operator><name pos:start="197:26" pos:end="197:28">bpm</name></name></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:34"><block_content pos:start="199:13" pos:end="199:34">

            <expr_stmt pos:start="199:13" pos:end="199:34"><expr pos:start="199:13" pos:end="199:33"><call pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:20">bit_copy</name><argument_list pos:start="199:21" pos:end="199:33">(<argument pos:start="199:22" pos:end="199:27"><expr pos:start="199:22" pos:end="199:27"><operator pos:start="199:22" pos:end="199:22">&amp;</operator><name pos:start="199:23" pos:end="199:27">vs_pb</name></expr></argument>, <argument pos:start="199:30" pos:end="199:32"><expr pos:start="199:30" pos:end="199:32"><operator pos:start="199:30" pos:end="199:30">&amp;</operator><name pos:start="199:31" pos:end="199:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="205:5" pos:end="205:54">/* we need a pass other the whole video segment */</comment>

<cpp:ifdef pos:start="207:1" pos:end="207:16">#<cpp:directive pos:start="207:2" pos:end="207:6">ifdef</cpp:directive> <name pos:start="207:8" pos:end="207:16">VLC_DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="209:5" pos:end="212:0"><expr pos:start="209:5" pos:end="209:57"><call pos:start="209:5" pos:end="209:57"><name pos:start="209:5" pos:end="209:10">printf</name><argument_list pos:start="209:11" pos:end="209:57">(<argument pos:start="209:12" pos:end="209:32"><expr pos:start="209:12" pos:end="209:32"><literal type="string" pos:start="209:12" pos:end="209:32">"***pass 3 size=%d\n"</literal></expr></argument>, <argument pos:start="209:35" pos:end="209:56"><expr pos:start="209:35" pos:end="209:56"><call pos:start="209:35" pos:end="209:56"><name pos:start="209:35" pos:end="209:48">put_bits_count</name><argument_list pos:start="209:49" pos:end="209:56">(<argument pos:start="209:50" pos:end="209:55"><expr pos:start="209:50" pos:end="209:55"><operator pos:start="209:50" pos:end="209:50">&amp;</operator><name pos:start="209:51" pos:end="209:55">vs_pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="211:1" pos:end="211:6">#<cpp:directive pos:start="211:2" pos:end="211:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="213:5" pos:end="213:26"><expr pos:start="213:5" pos:end="213:25"><name pos:start="213:5" pos:end="213:9">block</name> <operator pos:start="213:11" pos:end="213:11">=</operator> <operator pos:start="213:13" pos:end="213:13">&amp;</operator><name pos:start="213:14" pos:end="213:25"><name pos:start="213:14" pos:end="213:19">sblock</name><index pos:start="213:20" pos:end="213:22">[<expr pos:start="213:21" pos:end="213:21"><literal type="number" pos:start="213:21" pos:end="213:21">0</literal></expr>]</index><index pos:start="213:23" pos:end="213:25">[<expr pos:start="213:24" pos:end="213:24"><literal type="number" pos:start="213:24" pos:end="213:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:17"><expr pos:start="215:5" pos:end="215:16"><name pos:start="215:5" pos:end="215:6">mb</name> <operator pos:start="215:8" pos:end="215:8">=</operator> <name pos:start="215:10" pos:end="215:16">mb_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:62"><expr pos:start="217:5" pos:end="217:61"><call pos:start="217:5" pos:end="217:61"><name pos:start="217:5" pos:end="217:17">init_get_bits</name><argument_list pos:start="217:18" pos:end="217:61">(<argument pos:start="217:19" pos:end="217:21"><expr pos:start="217:19" pos:end="217:21"><operator pos:start="217:19" pos:end="217:19">&amp;</operator><name pos:start="217:20" pos:end="217:21">gb</name></expr></argument>, <argument pos:start="217:24" pos:end="217:36"><expr pos:start="217:24" pos:end="217:36"><name pos:start="217:24" pos:end="217:36">vs_bit_buffer</name></expr></argument>, <argument pos:start="217:39" pos:end="217:60"><expr pos:start="217:39" pos:end="217:60"><call pos:start="217:39" pos:end="217:60"><name pos:start="217:39" pos:end="217:52">put_bits_count</name><argument_list pos:start="217:53" pos:end="217:60">(<argument pos:start="217:54" pos:end="217:59"><expr pos:start="217:54" pos:end="217:59"><operator pos:start="217:54" pos:end="217:54">&amp;</operator><name pos:start="217:55" pos:end="217:59">vs_pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:27"><expr pos:start="219:5" pos:end="219:26"><call pos:start="219:5" pos:end="219:26"><name pos:start="219:5" pos:end="219:18">flush_put_bits</name><argument_list pos:start="219:19" pos:end="219:26">(<argument pos:start="219:20" pos:end="219:25"><expr pos:start="219:20" pos:end="219:25"><operator pos:start="219:20" pos:end="219:20">&amp;</operator><name pos:start="219:21" pos:end="219:25">vs_pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="221:5" pos:end="247:5">for<control pos:start="221:8" pos:end="221:47">(<init pos:start="221:9" pos:end="221:21"><expr pos:start="221:9" pos:end="221:20"><name pos:start="221:9" pos:end="221:16">mb_index</name> <operator pos:start="221:18" pos:end="221:18">=</operator> <literal type="number" pos:start="221:20" pos:end="221:20">0</literal></expr>;</init> <condition pos:start="221:23" pos:end="221:35"><expr pos:start="221:23" pos:end="221:34"><name pos:start="221:23" pos:end="221:30">mb_index</name> <operator pos:start="221:32" pos:end="221:32">&lt;</operator> <literal type="number" pos:start="221:34" pos:end="221:34">5</literal></expr>;</condition> <incr pos:start="221:37" pos:end="221:46"><expr pos:start="221:37" pos:end="221:46"><name pos:start="221:37" pos:end="221:44">mb_index</name><operator pos:start="221:45" pos:end="221:46">++</operator></expr></incr>)</control> <block pos:start="221:49" pos:end="247:5">{<block_content pos:start="223:9" pos:end="245:9">

        <for pos:start="223:9" pos:end="245:9">for<control pos:start="223:12" pos:end="223:39">(<init pos:start="223:13" pos:end="223:18"><expr pos:start="223:13" pos:end="223:17"><name pos:start="223:13" pos:end="223:13">j</name> <operator pos:start="223:15" pos:end="223:15">=</operator> <literal type="number" pos:start="223:17" pos:end="223:17">0</literal></expr>;</init><condition pos:start="223:19" pos:end="223:34"><expr pos:start="223:19" pos:end="223:33"><name pos:start="223:19" pos:end="223:19">j</name> <operator pos:start="223:21" pos:end="223:21">&lt;</operator> <name pos:start="223:23" pos:end="223:33"><name pos:start="223:23" pos:end="223:23">s</name><operator pos:start="223:24" pos:end="223:25">-&gt;</operator><name pos:start="223:26" pos:end="223:28">sys</name><operator pos:start="223:29" pos:end="223:30">-&gt;</operator><name pos:start="223:31" pos:end="223:33">bpm</name></name></expr>;</condition> <incr pos:start="223:36" pos:end="223:38"><expr pos:start="223:36" pos:end="223:38"><name pos:start="223:36" pos:end="223:36">j</name><operator pos:start="223:37" pos:end="223:38">++</operator></expr></incr>)</control> <block pos:start="223:41" pos:end="245:9">{<block_content pos:start="225:13" pos:end="243:17">

            <if_stmt pos:start="225:13" pos:end="235:13"><if pos:start="225:13" pos:end="235:13">if <condition pos:start="225:16" pos:end="225:29">(<expr pos:start="225:17" pos:end="225:28"><name pos:start="225:17" pos:end="225:23"><name pos:start="225:17" pos:end="225:18">mb</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:23">pos</name></name> <operator pos:start="225:25" pos:end="225:25">&lt;</operator> <literal type="number" pos:start="225:27" pos:end="225:28">64</literal></expr>)</condition> <block pos:start="225:31" pos:end="235:13">{<block_content pos:start="229:17" pos:end="233:45">

<cpp:ifdef pos:start="227:1" pos:end="227:16">#<cpp:directive pos:start="227:2" pos:end="227:6">ifdef</cpp:directive> <name pos:start="227:8" pos:end="227:16">VLC_DEBUG</name></cpp:ifdef>

                <expr_stmt pos:start="229:17" pos:end="232:0"><expr pos:start="229:17" pos:end="229:52"><call pos:start="229:17" pos:end="229:52"><name pos:start="229:17" pos:end="229:22">printf</name><argument_list pos:start="229:23" pos:end="229:52">(<argument pos:start="229:24" pos:end="229:38"><expr pos:start="229:24" pos:end="229:38"><literal type="string" pos:start="229:24" pos:end="229:38">"start %d:%d\n"</literal></expr></argument>, <argument pos:start="229:41" pos:end="229:48"><expr pos:start="229:41" pos:end="229:48"><name pos:start="229:41" pos:end="229:48">mb_index</name></expr></argument>, <argument pos:start="229:51" pos:end="229:51"><expr pos:start="229:51" pos:end="229:51"><name pos:start="229:51" pos:end="229:51">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="231:1" pos:end="231:6">#<cpp:directive pos:start="231:2" pos:end="231:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="233:17" pos:end="233:45"><expr pos:start="233:17" pos:end="233:44"><call pos:start="233:17" pos:end="233:44"><name pos:start="233:17" pos:end="233:28">dv_decode_ac</name><argument_list pos:start="233:29" pos:end="233:44">(<argument pos:start="233:30" pos:end="233:32"><expr pos:start="233:30" pos:end="233:32"><operator pos:start="233:30" pos:end="233:30">&amp;</operator><name pos:start="233:31" pos:end="233:32">gb</name></expr></argument>, <argument pos:start="233:35" pos:end="233:36"><expr pos:start="233:35" pos:end="233:36"><name pos:start="233:35" pos:end="233:36">mb</name></expr></argument>, <argument pos:start="233:39" pos:end="233:43"><expr pos:start="233:39" pos:end="233:43"><name pos:start="233:39" pos:end="233:43">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="237:13" pos:end="239:88"><if pos:start="237:13" pos:end="239:88">if <condition pos:start="237:16" pos:end="237:47">(<expr pos:start="237:17" pos:end="237:46"><name pos:start="237:17" pos:end="237:23"><name pos:start="237:17" pos:end="237:18">mb</name><operator pos:start="237:19" pos:end="237:20">-&gt;</operator><name pos:start="237:21" pos:end="237:23">pos</name></name> <operator pos:start="237:25" pos:end="237:26">&gt;=</operator> <literal type="number" pos:start="237:28" pos:end="237:29">64</literal> <operator pos:start="237:31" pos:end="237:32">&amp;&amp;</operator> <name pos:start="237:34" pos:end="237:40"><name pos:start="237:34" pos:end="237:35">mb</name><operator pos:start="237:36" pos:end="237:37">-&gt;</operator><name pos:start="237:38" pos:end="237:40">pos</name></name> <operator pos:start="237:42" pos:end="237:42">&lt;</operator> <literal type="number" pos:start="237:44" pos:end="237:46">127</literal></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="239:88"><block_content pos:start="239:17" pos:end="239:88">

                <expr_stmt pos:start="239:17" pos:end="239:88"><expr pos:start="239:17" pos:end="239:87"><call pos:start="239:17" pos:end="239:87"><name pos:start="239:17" pos:end="239:22">av_log</name><argument_list pos:start="239:23" pos:end="239:87">(<argument pos:start="239:24" pos:end="239:27"><expr pos:start="239:24" pos:end="239:27"><name pos:start="239:24" pos:end="239:27">NULL</name></expr></argument>, <argument pos:start="239:30" pos:end="239:41"><expr pos:start="239:30" pos:end="239:41"><name pos:start="239:30" pos:end="239:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="239:44" pos:end="239:77"><expr pos:start="239:44" pos:end="239:77"><literal type="string" pos:start="239:44" pos:end="239:77">"AC EOB marker is absent pos=%d\n"</literal></expr></argument>, <argument pos:start="239:80" pos:end="239:86"><expr pos:start="239:80" pos:end="239:86"><name pos:start="239:80" pos:end="239:86"><name pos:start="239:80" pos:end="239:81">mb</name><operator pos:start="239:82" pos:end="239:83">-&gt;</operator><name pos:start="239:84" pos:end="239:86">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:24"><expr pos:start="241:13" pos:end="241:23"><name pos:start="241:13" pos:end="241:17">block</name> <operator pos:start="241:19" pos:end="241:20">+=</operator> <literal type="number" pos:start="241:22" pos:end="241:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:17"><expr pos:start="243:13" pos:end="243:16"><name pos:start="243:13" pos:end="243:14">mb</name><operator pos:start="243:15" pos:end="243:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="251:5" pos:end="251:39">/* compute idct and place blocks */</comment>

    <expr_stmt pos:start="253:5" pos:end="253:26"><expr pos:start="253:5" pos:end="253:25"><name pos:start="253:5" pos:end="253:9">block</name> <operator pos:start="253:11" pos:end="253:11">=</operator> <operator pos:start="253:13" pos:end="253:13">&amp;</operator><name pos:start="253:14" pos:end="253:25"><name pos:start="253:14" pos:end="253:19">sblock</name><index pos:start="253:20" pos:end="253:22">[<expr pos:start="253:21" pos:end="253:21"><literal type="number" pos:start="253:21" pos:end="253:21">0</literal></expr>]</index><index pos:start="253:23" pos:end="253:25">[<expr pos:start="253:24" pos:end="253:24"><literal type="number" pos:start="253:24" pos:end="253:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:17"><expr pos:start="255:5" pos:end="255:16"><name pos:start="255:5" pos:end="255:6">mb</name> <operator pos:start="255:8" pos:end="255:8">=</operator> <name pos:start="255:10" pos:end="255:16">mb_data</name></expr>;</expr_stmt>

    <for pos:start="257:5" pos:end="363:5">for<control pos:start="257:8" pos:end="257:47">(<init pos:start="257:9" pos:end="257:21"><expr pos:start="257:9" pos:end="257:20"><name pos:start="257:9" pos:end="257:16">mb_index</name> <operator pos:start="257:18" pos:end="257:18">=</operator> <literal type="number" pos:start="257:20" pos:end="257:20">0</literal></expr>;</init> <condition pos:start="257:23" pos:end="257:35"><expr pos:start="257:23" pos:end="257:34"><name pos:start="257:23" pos:end="257:30">mb_index</name> <operator pos:start="257:32" pos:end="257:32">&lt;</operator> <literal type="number" pos:start="257:34" pos:end="257:34">5</literal></expr>;</condition> <incr pos:start="257:37" pos:end="257:46"><expr pos:start="257:37" pos:end="257:46"><name pos:start="257:37" pos:end="257:44">mb_index</name><operator pos:start="257:45" pos:end="257:46">++</operator></expr></incr>)</control> <block pos:start="257:49" pos:end="363:5">{<block_content pos:start="259:9" pos:end="361:9">

        <expr_stmt pos:start="259:9" pos:end="259:26"><expr pos:start="259:9" pos:end="259:25"><name pos:start="259:9" pos:end="259:9">v</name> <operator pos:start="259:11" pos:end="259:11">=</operator> <operator pos:start="259:13" pos:end="259:13">*</operator><name pos:start="259:14" pos:end="259:23">mb_pos_ptr</name><operator pos:start="259:24" pos:end="259:25">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:24"><expr pos:start="261:9" pos:end="261:23"><name pos:start="261:9" pos:end="261:12">mb_x</name> <operator pos:start="261:14" pos:end="261:14">=</operator> <name pos:start="261:16" pos:end="261:16">v</name> <operator pos:start="261:18" pos:end="261:18">&amp;</operator> <literal type="number" pos:start="261:20" pos:end="261:23">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:22"><expr pos:start="263:9" pos:end="263:21"><name pos:start="263:9" pos:end="263:12">mb_y</name> <operator pos:start="263:14" pos:end="263:14">=</operator> <name pos:start="263:16" pos:end="263:16">v</name> <operator pos:start="263:18" pos:end="263:19">&gt;&gt;</operator> <literal type="number" pos:start="263:21" pos:end="263:21">8</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="265:9" pos:end="265:101">/* We work with 720p frames split in half. The odd half-frame (chan==2,3) is displaced :-( */</comment>

        <if_stmt pos:start="267:9" pos:end="271:9"><if pos:start="267:9" pos:end="271:9">if <condition pos:start="267:12" pos:end="267:55">(<expr pos:start="267:13" pos:end="267:54"><name pos:start="267:13" pos:end="267:26"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:18">sys</name><operator pos:start="267:19" pos:end="267:20">-&gt;</operator><name pos:start="267:21" pos:end="267:26">height</name></name> <operator pos:start="267:28" pos:end="267:29">==</operator> <literal type="number" pos:start="267:31" pos:end="267:33">720</literal> <operator pos:start="267:35" pos:end="267:36">&amp;&amp;</operator> <operator pos:start="267:38" pos:end="267:38">!</operator><operator pos:start="267:39" pos:end="267:39">(</operator><name pos:start="267:40" pos:end="267:48"><name pos:start="267:40" pos:end="267:40">s</name><operator pos:start="267:41" pos:end="267:42">-&gt;</operator><name pos:start="267:43" pos:end="267:45">buf</name><index pos:start="267:46" pos:end="267:48">[<expr pos:start="267:47" pos:end="267:47"><literal type="number" pos:start="267:47" pos:end="267:47">1</literal></expr>]</index></name><operator pos:start="267:49" pos:end="267:49">&amp;</operator><literal type="number" pos:start="267:50" pos:end="267:53">0x0C</literal><operator pos:start="267:54" pos:end="267:54">)</operator></expr>)</condition> <block pos:start="267:57" pos:end="271:9">{<block_content pos:start="269:16" pos:end="269:40">

               <expr_stmt pos:start="269:16" pos:end="269:40"><expr pos:start="269:16" pos:end="269:39"><name pos:start="269:16" pos:end="269:19">mb_y</name> <operator pos:start="269:21" pos:end="269:22">-=</operator> <ternary pos:start="269:24" pos:end="269:39"><condition pos:start="269:24" pos:end="269:33"><expr pos:start="269:24" pos:end="269:32"><operator pos:start="269:24" pos:end="269:24">(</operator><name pos:start="269:25" pos:end="269:28">mb_y</name><operator pos:start="269:29" pos:end="269:29">&gt;</operator><literal type="number" pos:start="269:30" pos:end="269:31">17</literal><operator pos:start="269:32" pos:end="269:32">)</operator></expr>?</condition><then pos:start="269:34" pos:end="269:35"><expr pos:start="269:34" pos:end="269:35"><literal type="number" pos:start="269:34" pos:end="269:35">18</literal></expr></then><else pos:start="269:36" pos:end="269:39">:<expr pos:start="269:37" pos:end="269:39"><operator pos:start="269:37" pos:end="269:37">-</operator><literal type="number" pos:start="269:38" pos:end="269:39">72</literal></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="269:42" pos:end="269:97">/* shifting the Y coordinate down by 72/2 macroblocks */</comment>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="275:9" pos:end="275:37">/* idct_put'ting luminance */</comment>

        <if_stmt pos:start="277:9" pos:end="289:9"><if pos:start="277:9" pos:end="285:9">if <condition pos:start="277:12" pos:end="281:51">(<expr pos:start="277:13" pos:end="281:50"><operator pos:start="277:13" pos:end="277:13">(</operator><name pos:start="277:14" pos:end="277:28"><name pos:start="277:14" pos:end="277:14">s</name><operator pos:start="277:15" pos:end="277:16">-&gt;</operator><name pos:start="277:17" pos:end="277:19">sys</name><operator pos:start="277:20" pos:end="277:21">-&gt;</operator><name pos:start="277:22" pos:end="277:28">pix_fmt</name></name> <operator pos:start="277:30" pos:end="277:31">==</operator> <name pos:start="277:33" pos:end="277:47">PIX_FMT_YUV420P</name><operator pos:start="277:48" pos:end="277:48">)</operator> <operator pos:start="277:50" pos:end="277:51">||</operator>

            <operator pos:start="279:13" pos:end="279:13">(</operator><name pos:start="279:14" pos:end="279:28"><name pos:start="279:14" pos:end="279:14">s</name><operator pos:start="279:15" pos:end="279:16">-&gt;</operator><name pos:start="279:17" pos:end="279:19">sys</name><operator pos:start="279:20" pos:end="279:21">-&gt;</operator><name pos:start="279:22" pos:end="279:28">pix_fmt</name></name> <operator pos:start="279:30" pos:end="279:31">==</operator> <name pos:start="279:33" pos:end="279:47">PIX_FMT_YUV411P</name> <operator pos:start="279:49" pos:end="279:50">&amp;&amp;</operator> <name pos:start="279:52" pos:end="279:55">mb_x</name> <operator pos:start="279:57" pos:end="279:58">&gt;=</operator> <operator pos:start="279:60" pos:end="279:60">(</operator><literal type="number" pos:start="279:61" pos:end="279:63">704</literal> <operator pos:start="279:65" pos:end="279:65">/</operator> <literal type="number" pos:start="279:67" pos:end="279:67">8</literal><operator pos:start="279:68" pos:end="279:68">)</operator><operator pos:start="279:69" pos:end="279:69">)</operator> <operator pos:start="279:71" pos:end="279:72">||</operator>

            <operator pos:start="281:13" pos:end="281:13">(</operator><name pos:start="281:14" pos:end="281:27"><name pos:start="281:14" pos:end="281:14">s</name><operator pos:start="281:15" pos:end="281:16">-&gt;</operator><name pos:start="281:17" pos:end="281:19">sys</name><operator pos:start="281:20" pos:end="281:21">-&gt;</operator><name pos:start="281:22" pos:end="281:27">height</name></name> <operator pos:start="281:29" pos:end="281:30">&gt;=</operator> <literal type="number" pos:start="281:32" pos:end="281:34">720</literal> <operator pos:start="281:36" pos:end="281:37">&amp;&amp;</operator> <name pos:start="281:39" pos:end="281:42">mb_y</name> <operator pos:start="281:44" pos:end="281:45">!=</operator> <literal type="number" pos:start="281:47" pos:end="281:49">134</literal><operator pos:start="281:50" pos:end="281:50">)</operator></expr>)</condition> <block pos:start="281:53" pos:end="285:9">{<block_content pos:start="283:13" pos:end="283:115">

            <expr_stmt pos:start="283:13" pos:end="283:115"><expr pos:start="283:13" pos:end="283:114"><name pos:start="283:13" pos:end="283:20">y_stride</name> <operator pos:start="283:22" pos:end="283:22">=</operator> <operator pos:start="283:24" pos:end="283:24">(</operator><name pos:start="283:25" pos:end="283:46"><name pos:start="283:25" pos:end="283:25">s</name><operator pos:start="283:26" pos:end="283:27">-&gt;</operator><name pos:start="283:28" pos:end="283:34">picture</name><operator pos:start="283:35" pos:end="283:35">.</operator><name pos:start="283:36" pos:end="283:43">linesize</name><index pos:start="283:44" pos:end="283:46">[<expr pos:start="283:45" pos:end="283:45"><literal type="number" pos:start="283:45" pos:end="283:45">0</literal></expr>]</index></name><operator pos:start="283:47" pos:end="283:48">&lt;&lt;</operator><operator pos:start="283:49" pos:end="283:49">(</operator><operator pos:start="283:50" pos:end="283:50">(</operator><operator pos:start="283:51" pos:end="283:51">!</operator><name pos:start="283:52" pos:end="283:74"><name pos:start="283:52" pos:end="283:64">is_field_mode</name><index pos:start="283:65" pos:end="283:74">[<expr pos:start="283:66" pos:end="283:73"><name pos:start="283:66" pos:end="283:73">mb_index</name></expr>]</index></name><operator pos:start="283:75" pos:end="283:75">)</operator><operator pos:start="283:76" pos:end="283:76">*</operator><name pos:start="283:77" pos:end="283:90">log2_blocksize</name><operator pos:start="283:91" pos:end="283:91">)</operator><operator pos:start="283:92" pos:end="283:92">)</operator> <operator pos:start="283:94" pos:end="283:94">-</operator> <operator pos:start="283:96" pos:end="283:96">(</operator><literal type="number" pos:start="283:97" pos:end="283:97">2</literal><operator pos:start="283:98" pos:end="283:99">&lt;&lt;</operator><name pos:start="283:100" pos:end="283:113">log2_blocksize</name><operator pos:start="283:114" pos:end="283:114">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="285:11" pos:end="289:9">else <block pos:start="285:16" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:25">

            <expr_stmt pos:start="287:13" pos:end="287:25"><expr pos:start="287:13" pos:end="287:24"><name pos:start="287:13" pos:end="287:20">y_stride</name> <operator pos:start="287:22" pos:end="287:22">=</operator> <literal type="number" pos:start="287:24" pos:end="287:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:94"><expr pos:start="291:9" pos:end="291:93"><name pos:start="291:9" pos:end="291:13">y_ptr</name> <operator pos:start="291:15" pos:end="291:15">=</operator> <name pos:start="291:17" pos:end="291:34"><name pos:start="291:17" pos:end="291:17">s</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:26">picture</name><operator pos:start="291:27" pos:end="291:27">.</operator><name pos:start="291:28" pos:end="291:31">data</name><index pos:start="291:32" pos:end="291:34">[<expr pos:start="291:33" pos:end="291:33"><literal type="number" pos:start="291:33" pos:end="291:33">0</literal></expr>]</index></name> <operator pos:start="291:36" pos:end="291:36">+</operator> <operator pos:start="291:38" pos:end="291:38">(</operator><operator pos:start="291:39" pos:end="291:39">(</operator><name pos:start="291:40" pos:end="291:43">mb_y</name> <operator pos:start="291:45" pos:end="291:45">*</operator> <name pos:start="291:47" pos:end="291:68"><name pos:start="291:47" pos:end="291:47">s</name><operator pos:start="291:48" pos:end="291:49">-&gt;</operator><name pos:start="291:50" pos:end="291:56">picture</name><operator pos:start="291:57" pos:end="291:57">.</operator><name pos:start="291:58" pos:end="291:65">linesize</name><index pos:start="291:66" pos:end="291:68">[<expr pos:start="291:67" pos:end="291:67"><literal type="number" pos:start="291:67" pos:end="291:67">0</literal></expr>]</index></name> <operator pos:start="291:70" pos:end="291:70">+</operator> <name pos:start="291:72" pos:end="291:75">mb_x</name><operator pos:start="291:76" pos:end="291:76">)</operator><operator pos:start="291:77" pos:end="291:78">&lt;&lt;</operator><name pos:start="291:79" pos:end="291:92">log2_blocksize</name><operator pos:start="291:93" pos:end="291:93">)</operator></expr>;</expr_stmt>

        <for pos:start="293:9" pos:end="305:9">for<control pos:start="293:12" pos:end="293:49">(<init pos:start="293:13" pos:end="293:18"><expr pos:start="293:13" pos:end="293:17"><name pos:start="293:13" pos:end="293:13">j</name> <operator pos:start="293:15" pos:end="293:15">=</operator> <literal type="number" pos:start="293:17" pos:end="293:17">0</literal></expr>;</init> <condition pos:start="293:20" pos:end="293:25"><expr pos:start="293:20" pos:end="293:24"><name pos:start="293:20" pos:end="293:20">j</name> <operator pos:start="293:22" pos:end="293:22">&lt;</operator> <literal type="number" pos:start="293:24" pos:end="293:24">2</literal></expr>;</condition> <incr pos:start="293:27" pos:end="293:48"><expr pos:start="293:27" pos:end="293:29"><name pos:start="293:27" pos:end="293:27">j</name><operator pos:start="293:28" pos:end="293:29">++</operator></expr><operator pos:start="293:30" pos:end="293:30">,</operator> <expr pos:start="293:32" pos:end="293:48"><name pos:start="293:32" pos:end="293:36">y_ptr</name> <operator pos:start="293:38" pos:end="293:39">+=</operator> <name pos:start="293:41" pos:end="293:48">y_stride</name></expr></incr>)</control> <block pos:start="293:51" pos:end="305:9">{<block_content pos:start="295:13" pos:end="303:97">

            <for pos:start="295:13" pos:end="303:97">for <control pos:start="295:17" pos:end="295:80">(<init pos:start="295:18" pos:end="295:21"><expr pos:start="295:18" pos:end="295:20"><name pos:start="295:18" pos:end="295:18">i</name><operator pos:start="295:19" pos:end="295:19">=</operator><literal type="number" pos:start="295:20" pos:end="295:20">0</literal></expr>;</init> <condition pos:start="295:23" pos:end="295:26"><expr pos:start="295:23" pos:end="295:25"><name pos:start="295:23" pos:end="295:23">i</name><operator pos:start="295:24" pos:end="295:24">&lt;</operator><literal type="number" pos:start="295:25" pos:end="295:25">2</literal></expr>;</condition> <incr pos:start="295:28" pos:end="295:79"><expr pos:start="295:28" pos:end="295:30"><name pos:start="295:28" pos:end="295:28">i</name><operator pos:start="295:29" pos:end="295:30">++</operator></expr><operator pos:start="295:31" pos:end="295:31">,</operator> <expr pos:start="295:33" pos:end="295:43"><name pos:start="295:33" pos:end="295:37">block</name> <operator pos:start="295:39" pos:end="295:40">+=</operator> <literal type="number" pos:start="295:42" pos:end="295:43">64</literal></expr><operator pos:start="295:44" pos:end="295:44">,</operator> <expr pos:start="295:46" pos:end="295:49"><name pos:start="295:46" pos:end="295:47">mb</name><operator pos:start="295:48" pos:end="295:49">++</operator></expr><operator pos:start="295:50" pos:end="295:50">,</operator> <expr pos:start="295:52" pos:end="295:79"><name pos:start="295:52" pos:end="295:56">y_ptr</name> <operator pos:start="295:58" pos:end="295:59">+=</operator> <operator pos:start="295:61" pos:end="295:61">(</operator><literal type="number" pos:start="295:62" pos:end="295:62">1</literal><operator pos:start="295:63" pos:end="295:64">&lt;&lt;</operator><name pos:start="295:65" pos:end="295:78">log2_blocksize</name><operator pos:start="295:79" pos:end="295:79">)</operator></expr></incr>)</control><block type="pseudo" pos:start="297:18" pos:end="303:97"><block_content pos:start="297:18" pos:end="303:97">

                 <if_stmt pos:start="297:18" pos:end="303:97"><if pos:start="297:18" pos:end="299:50">if <condition pos:start="297:21" pos:end="297:85">(<expr pos:start="297:22" pos:end="297:84"><name pos:start="297:22" pos:end="297:36"><name pos:start="297:22" pos:end="297:22">s</name><operator pos:start="297:23" pos:end="297:24">-&gt;</operator><name pos:start="297:25" pos:end="297:27">sys</name><operator pos:start="297:28" pos:end="297:29">-&gt;</operator><name pos:start="297:30" pos:end="297:36">pix_fmt</name></name> <operator pos:start="297:38" pos:end="297:39">==</operator> <name pos:start="297:41" pos:end="297:55">PIX_FMT_YUV422P</name> <operator pos:start="297:57" pos:end="297:58">&amp;&amp;</operator> <name pos:start="297:60" pos:end="297:72"><name pos:start="297:60" pos:end="297:60">s</name><operator pos:start="297:61" pos:end="297:62">-&gt;</operator><name pos:start="297:63" pos:end="297:65">sys</name><operator pos:start="297:66" pos:end="297:67">-&gt;</operator><name pos:start="297:68" pos:end="297:72">width</name></name> <operator pos:start="297:74" pos:end="297:75">==</operator> <literal type="number" pos:start="297:77" pos:end="297:79">720</literal> <operator pos:start="297:81" pos:end="297:82">&amp;&amp;</operator> <name pos:start="297:84" pos:end="297:84">i</name></expr>)</condition><block type="pseudo" pos:start="299:22" pos:end="299:50"><block_content pos:start="299:22" pos:end="299:50">

                     <expr_stmt pos:start="299:22" pos:end="299:50"><expr pos:start="299:22" pos:end="299:49"><name pos:start="299:22" pos:end="299:26">y_ptr</name> <operator pos:start="299:28" pos:end="299:29">-=</operator> <operator pos:start="299:31" pos:end="299:31">(</operator><literal type="number" pos:start="299:32" pos:end="299:32">1</literal><operator pos:start="299:33" pos:end="299:34">&lt;&lt;</operator><name pos:start="299:35" pos:end="299:48">log2_blocksize</name><operator pos:start="299:49" pos:end="299:49">)</operator></expr>;</expr_stmt></block_content></block></if>

                 <else pos:start="301:18" pos:end="303:97">else<block type="pseudo" pos:start="303:22" pos:end="303:97"><block_content pos:start="303:22" pos:end="303:97">

                     <expr_stmt pos:start="303:22" pos:end="303:97"><expr pos:start="303:22" pos:end="303:96"><call pos:start="303:22" pos:end="303:96"><name pos:start="303:22" pos:end="303:33"><name pos:start="303:22" pos:end="303:23">mb</name><operator pos:start="303:24" pos:end="303:25">-&gt;</operator><name pos:start="303:26" pos:end="303:33">idct_put</name></name><argument_list pos:start="303:34" pos:end="303:96">(<argument pos:start="303:35" pos:end="303:39"><expr pos:start="303:35" pos:end="303:39"><name pos:start="303:35" pos:end="303:39">y_ptr</name></expr></argument>, <argument pos:start="303:42" pos:end="303:88"><expr pos:start="303:42" pos:end="303:88"><name pos:start="303:42" pos:end="303:63"><name pos:start="303:42" pos:end="303:42">s</name><operator pos:start="303:43" pos:end="303:44">-&gt;</operator><name pos:start="303:45" pos:end="303:51">picture</name><operator pos:start="303:52" pos:end="303:52">.</operator><name pos:start="303:53" pos:end="303:60">linesize</name><index pos:start="303:61" pos:end="303:63">[<expr pos:start="303:62" pos:end="303:62"><literal type="number" pos:start="303:62" pos:end="303:62">0</literal></expr>]</index></name><operator pos:start="303:64" pos:end="303:65">&lt;&lt;</operator><name pos:start="303:66" pos:end="303:88"><name pos:start="303:66" pos:end="303:78">is_field_mode</name><index pos:start="303:79" pos:end="303:88">[<expr pos:start="303:80" pos:end="303:87"><name pos:start="303:80" pos:end="303:87">mb_index</name></expr>]</index></name></expr></argument>, <argument pos:start="303:91" pos:end="303:95"><expr pos:start="303:91" pos:end="303:95"><name pos:start="303:91" pos:end="303:95">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></for>

        </block_content>}</block></for>



        <comment type="block" pos:start="309:9" pos:end="309:39">/* idct_put'ting chrominance */</comment>

        <expr_stmt pos:start="311:9" pos:end="313:90"><expr pos:start="311:9" pos:end="313:89"><name pos:start="311:9" pos:end="311:16">c_offset</name> <operator pos:start="311:18" pos:end="311:18">=</operator> <operator pos:start="311:20" pos:end="311:20">(</operator><operator pos:start="311:21" pos:end="311:21">(</operator><operator pos:start="311:22" pos:end="311:22">(</operator><name pos:start="311:23" pos:end="311:26">mb_y</name><operator pos:start="311:27" pos:end="311:28">&gt;&gt;</operator><operator pos:start="311:29" pos:end="311:29">(</operator><name pos:start="311:30" pos:end="311:44"><name pos:start="311:30" pos:end="311:30">s</name><operator pos:start="311:31" pos:end="311:32">-&gt;</operator><name pos:start="311:33" pos:end="311:35">sys</name><operator pos:start="311:36" pos:end="311:37">-&gt;</operator><name pos:start="311:38" pos:end="311:44">pix_fmt</name></name> <operator pos:start="311:46" pos:end="311:47">==</operator> <name pos:start="311:49" pos:end="311:63">PIX_FMT_YUV420P</name><operator pos:start="311:64" pos:end="311:64">)</operator><operator pos:start="311:65" pos:end="311:65">)</operator> <operator pos:start="311:67" pos:end="311:67">*</operator> <name pos:start="311:69" pos:end="311:90"><name pos:start="311:69" pos:end="311:69">s</name><operator pos:start="311:70" pos:end="311:71">-&gt;</operator><name pos:start="311:72" pos:end="311:78">picture</name><operator pos:start="311:79" pos:end="311:79">.</operator><name pos:start="311:80" pos:end="311:87">linesize</name><index pos:start="311:88" pos:end="311:90">[<expr pos:start="311:89" pos:end="311:89"><literal type="number" pos:start="311:89" pos:end="311:89">1</literal></expr>]</index></name> <operator pos:start="311:92" pos:end="311:92">+</operator>

                     <operator pos:start="313:22" pos:end="313:22">(</operator><name pos:start="313:23" pos:end="313:26">mb_x</name><operator pos:start="313:27" pos:end="313:28">&gt;&gt;</operator><operator pos:start="313:29" pos:end="313:29">(</operator><ternary pos:start="313:30" pos:end="313:69"><condition pos:start="313:30" pos:end="313:66"><expr pos:start="313:30" pos:end="313:65"><operator pos:start="313:30" pos:end="313:30">(</operator><name pos:start="313:31" pos:end="313:45"><name pos:start="313:31" pos:end="313:31">s</name><operator pos:start="313:32" pos:end="313:33">-&gt;</operator><name pos:start="313:34" pos:end="313:36">sys</name><operator pos:start="313:37" pos:end="313:38">-&gt;</operator><name pos:start="313:39" pos:end="313:45">pix_fmt</name></name> <operator pos:start="313:47" pos:end="313:48">==</operator> <name pos:start="313:50" pos:end="313:64">PIX_FMT_YUV411P</name><operator pos:start="313:65" pos:end="313:65">)</operator></expr>?</condition><then pos:start="313:67" pos:end="313:67"><expr pos:start="313:67" pos:end="313:67"><literal type="number" pos:start="313:67" pos:end="313:67">2</literal></expr></then><else pos:start="313:68" pos:end="313:69">:<expr pos:start="313:69" pos:end="313:69"><literal type="number" pos:start="313:69" pos:end="313:69">1</literal></expr></else></ternary><operator pos:start="313:70" pos:end="313:70">)</operator><operator pos:start="313:71" pos:end="313:71">)</operator><operator pos:start="313:72" pos:end="313:72">)</operator><operator pos:start="313:73" pos:end="313:74">&lt;&lt;</operator><name pos:start="313:75" pos:end="313:88">log2_blocksize</name><operator pos:start="313:89" pos:end="313:89">)</operator></expr>;</expr_stmt>

        <for pos:start="315:9" pos:end="361:9">for<control pos:start="315:12" pos:end="315:24">(<init pos:start="315:13" pos:end="315:16"><expr pos:start="315:13" pos:end="315:15"><name pos:start="315:13" pos:end="315:13">j</name><operator pos:start="315:14" pos:end="315:14">=</operator><literal type="number" pos:start="315:15" pos:end="315:15">2</literal></expr>;</init> <condition pos:start="315:18" pos:end="315:19"><expr pos:start="315:18" pos:end="315:18"><name pos:start="315:18" pos:end="315:18">j</name></expr>;</condition> <incr pos:start="315:21" pos:end="315:23"><expr pos:start="315:21" pos:end="315:23"><name pos:start="315:21" pos:end="315:21">j</name><operator pos:start="315:22" pos:end="315:23">--</operator></expr></incr>)</control> <block pos:start="315:26" pos:end="361:9">{<block_content pos:start="317:13" pos:end="359:13">

            <decl_stmt pos:start="317:13" pos:end="317:59"><decl pos:start="317:13" pos:end="317:58"><type pos:start="317:13" pos:end="317:21"><name pos:start="317:13" pos:end="317:19">uint8_t</name> <modifier pos:start="317:21" pos:end="317:21">*</modifier></type><name pos:start="317:22" pos:end="317:26">c_ptr</name> <init pos:start="317:28" pos:end="317:58">= <expr pos:start="317:30" pos:end="317:58"><name pos:start="317:30" pos:end="317:47"><name pos:start="317:30" pos:end="317:30">s</name><operator pos:start="317:31" pos:end="317:32">-&gt;</operator><name pos:start="317:33" pos:end="317:39">picture</name><operator pos:start="317:40" pos:end="317:40">.</operator><name pos:start="317:41" pos:end="317:44">data</name><index pos:start="317:45" pos:end="317:47">[<expr pos:start="317:46" pos:end="317:46"><name pos:start="317:46" pos:end="317:46">j</name></expr>]</index></name> <operator pos:start="317:49" pos:end="317:49">+</operator> <name pos:start="317:51" pos:end="317:58">c_offset</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="319:13" pos:end="359:13"><if pos:start="319:13" pos:end="349:13">if <condition pos:start="319:16" pos:end="319:72">(<expr pos:start="319:17" pos:end="319:71"><name pos:start="319:17" pos:end="319:31"><name pos:start="319:17" pos:end="319:17">s</name><operator pos:start="319:18" pos:end="319:19">-&gt;</operator><name pos:start="319:20" pos:end="319:22">sys</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:31">pix_fmt</name></name> <operator pos:start="319:33" pos:end="319:34">==</operator> <name pos:start="319:36" pos:end="319:50">PIX_FMT_YUV411P</name> <operator pos:start="319:52" pos:end="319:53">&amp;&amp;</operator> <name pos:start="319:55" pos:end="319:58">mb_x</name> <operator pos:start="319:60" pos:end="319:61">&gt;=</operator> <operator pos:start="319:63" pos:end="319:63">(</operator><literal type="number" pos:start="319:64" pos:end="319:66">704</literal> <operator pos:start="319:68" pos:end="319:68">/</operator> <literal type="number" pos:start="319:70" pos:end="319:70">8</literal><operator pos:start="319:71" pos:end="319:71">)</operator></expr>)</condition> <block pos:start="319:74" pos:end="349:13">{<block_content pos:start="321:19" pos:end="347:36">

                  <decl_stmt pos:start="321:19" pos:end="321:48"><decl pos:start="321:19" pos:end="321:47"><type pos:start="321:19" pos:end="321:26"><name pos:start="321:19" pos:end="321:26">uint64_t</name></type> <name pos:start="321:28" pos:end="321:47"><name pos:start="321:28" pos:end="321:41">aligned_pixels</name><index pos:start="321:42" pos:end="321:47">[<expr pos:start="321:43" pos:end="321:46"><literal type="number" pos:start="321:43" pos:end="321:44">64</literal><operator pos:start="321:45" pos:end="321:45">/</operator><literal type="number" pos:start="321:46" pos:end="321:46">8</literal></expr>]</index></name></decl>;</decl_stmt>

                  <decl_stmt pos:start="323:19" pos:end="323:61"><decl pos:start="323:19" pos:end="323:60"><type pos:start="323:19" pos:end="323:27"><name pos:start="323:19" pos:end="323:25">uint8_t</name> <modifier pos:start="323:27" pos:end="323:27">*</modifier></type><name pos:start="323:28" pos:end="323:33">pixels</name> <init pos:start="323:35" pos:end="323:60">= <expr pos:start="323:37" pos:end="323:60"><operator pos:start="323:37" pos:end="323:37">(</operator><name pos:start="323:38" pos:end="323:44">uint8_t</name><operator pos:start="323:45" pos:end="323:45">*</operator><operator pos:start="323:46" pos:end="323:46">)</operator><name pos:start="323:47" pos:end="323:60">aligned_pixels</name></expr></init></decl>;</decl_stmt>

                  <decl_stmt pos:start="325:19" pos:end="325:41"><decl pos:start="325:19" pos:end="325:33"><type pos:start="325:19" pos:end="325:27"><name pos:start="325:19" pos:end="325:25">uint8_t</name> <modifier pos:start="325:27" pos:end="325:27">*</modifier></type><name pos:start="325:28" pos:end="325:33">c_ptr1</name></decl>, <decl pos:start="325:36" pos:end="325:40"><type ref="prev" pos:start="325:19" pos:end="325:27"><modifier pos:start="325:36" pos:end="325:36">*</modifier></type><name pos:start="325:37" pos:end="325:40">ptr1</name></decl>;</decl_stmt>

                  <decl_stmt pos:start="327:19" pos:end="327:27"><decl pos:start="327:19" pos:end="327:23"><type pos:start="327:19" pos:end="327:21"><name pos:start="327:19" pos:end="327:21">int</name></type> <name pos:start="327:23" pos:end="327:23">x</name></decl>, <decl pos:start="327:26" pos:end="327:26"><type ref="prev" pos:start="327:19" pos:end="327:21"/><name pos:start="327:26" pos:end="327:26">y</name></decl>;</decl_stmt>

                  <expr_stmt pos:start="329:19" pos:end="329:49"><expr pos:start="329:19" pos:end="329:48"><call pos:start="329:19" pos:end="329:48"><name pos:start="329:19" pos:end="329:30"><name pos:start="329:19" pos:end="329:20">mb</name><operator pos:start="329:21" pos:end="329:22">-&gt;</operator><name pos:start="329:23" pos:end="329:30">idct_put</name></name><argument_list pos:start="329:31" pos:end="329:48">(<argument pos:start="329:32" pos:end="329:37"><expr pos:start="329:32" pos:end="329:37"><name pos:start="329:32" pos:end="329:37">pixels</name></expr></argument>, <argument pos:start="329:40" pos:end="329:40"><expr pos:start="329:40" pos:end="329:40"><literal type="number" pos:start="329:40" pos:end="329:40">8</literal></expr></argument>, <argument pos:start="329:43" pos:end="329:47"><expr pos:start="329:43" pos:end="329:47"><name pos:start="329:43" pos:end="329:47">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  <for pos:start="331:19" pos:end="345:19">for<control pos:start="331:22" pos:end="331:104">(<init pos:start="331:23" pos:end="331:28"><expr pos:start="331:23" pos:end="331:27"><name pos:start="331:23" pos:end="331:23">y</name> <operator pos:start="331:25" pos:end="331:25">=</operator> <literal type="number" pos:start="331:27" pos:end="331:27">0</literal></expr>;</init> <condition pos:start="331:30" pos:end="331:53"><expr pos:start="331:30" pos:end="331:52"><name pos:start="331:30" pos:end="331:30">y</name> <operator pos:start="331:32" pos:end="331:32">&lt;</operator> <operator pos:start="331:34" pos:end="331:34">(</operator><literal type="number" pos:start="331:35" pos:end="331:35">1</literal><operator pos:start="331:36" pos:end="331:37">&lt;&lt;</operator><name pos:start="331:38" pos:end="331:51">log2_blocksize</name><operator pos:start="331:52" pos:end="331:52">)</operator></expr>;</condition> <incr pos:start="331:55" pos:end="331:103"><expr pos:start="331:55" pos:end="331:57"><name pos:start="331:55" pos:end="331:55">y</name><operator pos:start="331:56" pos:end="331:57">++</operator></expr><operator pos:start="331:58" pos:end="331:58">,</operator> <expr pos:start="331:60" pos:end="331:90"><name pos:start="331:60" pos:end="331:64">c_ptr</name> <operator pos:start="331:66" pos:end="331:67">+=</operator> <name pos:start="331:69" pos:end="331:90"><name pos:start="331:69" pos:end="331:69">s</name><operator pos:start="331:70" pos:end="331:71">-&gt;</operator><name pos:start="331:72" pos:end="331:78">picture</name><operator pos:start="331:79" pos:end="331:79">.</operator><name pos:start="331:80" pos:end="331:87">linesize</name><index pos:start="331:88" pos:end="331:90">[<expr pos:start="331:89" pos:end="331:89"><name pos:start="331:89" pos:end="331:89">j</name></expr>]</index></name></expr><operator pos:start="331:91" pos:end="331:91">,</operator> <expr pos:start="331:93" pos:end="331:103"><name pos:start="331:93" pos:end="331:98">pixels</name> <operator pos:start="331:100" pos:end="331:101">+=</operator> <literal type="number" pos:start="331:103" pos:end="331:103">8</literal></expr></incr>)</control> <block pos:start="331:106" pos:end="345:19">{<block_content pos:start="333:23" pos:end="343:23">

                      <expr_stmt pos:start="333:23" pos:end="333:61"><expr pos:start="333:23" pos:end="333:60"><name pos:start="333:23" pos:end="333:26">ptr1</name><operator pos:start="333:27" pos:end="333:27">=</operator> <name pos:start="333:29" pos:end="333:34">pixels</name> <operator pos:start="333:36" pos:end="333:36">+</operator> <operator pos:start="333:38" pos:end="333:38">(</operator><literal type="number" pos:start="333:39" pos:end="333:39">1</literal><operator pos:start="333:40" pos:end="333:41">&lt;&lt;</operator><operator pos:start="333:42" pos:end="333:42">(</operator><name pos:start="333:43" pos:end="333:56">log2_blocksize</name><operator pos:start="333:57" pos:end="333:57">-</operator><literal type="number" pos:start="333:58" pos:end="333:58">1</literal><operator pos:start="333:59" pos:end="333:59">)</operator><operator pos:start="333:60" pos:end="333:60">)</operator></expr>;</expr_stmt>

                      <expr_stmt pos:start="335:23" pos:end="335:80"><expr pos:start="335:23" pos:end="335:79"><name pos:start="335:23" pos:end="335:28">c_ptr1</name> <operator pos:start="335:30" pos:end="335:30">=</operator> <name pos:start="335:32" pos:end="335:36">c_ptr</name> <operator pos:start="335:38" pos:end="335:38">+</operator> <operator pos:start="335:40" pos:end="335:40">(</operator><name pos:start="335:41" pos:end="335:62"><name pos:start="335:41" pos:end="335:41">s</name><operator pos:start="335:42" pos:end="335:43">-&gt;</operator><name pos:start="335:44" pos:end="335:50">picture</name><operator pos:start="335:51" pos:end="335:51">.</operator><name pos:start="335:52" pos:end="335:59">linesize</name><index pos:start="335:60" pos:end="335:62">[<expr pos:start="335:61" pos:end="335:61"><name pos:start="335:61" pos:end="335:61">j</name></expr>]</index></name><operator pos:start="335:63" pos:end="335:64">&lt;&lt;</operator><name pos:start="335:65" pos:end="335:78">log2_blocksize</name><operator pos:start="335:79" pos:end="335:79">)</operator></expr>;</expr_stmt>

                      <for pos:start="337:23" pos:end="343:23">for<control pos:start="337:26" pos:end="337:64">(<init pos:start="337:27" pos:end="337:30"><expr pos:start="337:27" pos:end="337:29"><name pos:start="337:27" pos:end="337:27">x</name><operator pos:start="337:28" pos:end="337:28">=</operator><literal type="number" pos:start="337:29" pos:end="337:29">0</literal></expr>;</init> <condition pos:start="337:32" pos:end="337:59"><expr pos:start="337:32" pos:end="337:58"><name pos:start="337:32" pos:end="337:32">x</name> <operator pos:start="337:34" pos:end="337:34">&lt;</operator> <operator pos:start="337:36" pos:end="337:36">(</operator><literal type="number" pos:start="337:37" pos:end="337:37">1</literal><operator pos:start="337:38" pos:end="337:39">&lt;&lt;</operator><operator pos:start="337:40" pos:end="337:40">(</operator><name pos:start="337:41" pos:end="337:54">log2_blocksize</name><operator pos:start="337:55" pos:end="337:55">-</operator><literal type="number" pos:start="337:56" pos:end="337:56">1</literal><operator pos:start="337:57" pos:end="337:57">)</operator><operator pos:start="337:58" pos:end="337:58">)</operator></expr>;</condition> <incr pos:start="337:61" pos:end="337:63"><expr pos:start="337:61" pos:end="337:63"><name pos:start="337:61" pos:end="337:61">x</name><operator pos:start="337:62" pos:end="337:63">++</operator></expr></incr>)</control> <block pos:start="337:66" pos:end="343:23">{<block_content pos:start="339:27" pos:end="341:45">

                          <expr_stmt pos:start="339:27" pos:end="339:46"><expr pos:start="339:27" pos:end="339:45"><name pos:start="339:27" pos:end="339:34"><name pos:start="339:27" pos:end="339:31">c_ptr</name><index pos:start="339:32" pos:end="339:34">[<expr pos:start="339:33" pos:end="339:33"><name pos:start="339:33" pos:end="339:33">x</name></expr>]</index></name><operator pos:start="339:35" pos:end="339:35">=</operator> <name pos:start="339:37" pos:end="339:45"><name pos:start="339:37" pos:end="339:42">pixels</name><index pos:start="339:43" pos:end="339:45">[<expr pos:start="339:44" pos:end="339:44"><name pos:start="339:44" pos:end="339:44">x</name></expr>]</index></name></expr>;</expr_stmt>

                          <expr_stmt pos:start="341:27" pos:end="341:45"><expr pos:start="341:27" pos:end="341:44"><name pos:start="341:27" pos:end="341:35"><name pos:start="341:27" pos:end="341:32">c_ptr1</name><index pos:start="341:33" pos:end="341:35">[<expr pos:start="341:34" pos:end="341:34"><name pos:start="341:34" pos:end="341:34">x</name></expr>]</index></name><operator pos:start="341:36" pos:end="341:36">=</operator> <name pos:start="341:38" pos:end="341:44"><name pos:start="341:38" pos:end="341:41">ptr1</name><index pos:start="341:42" pos:end="341:44">[<expr pos:start="341:43" pos:end="341:43"><name pos:start="341:43" pos:end="341:43">x</name></expr>]</index></name></expr>;</expr_stmt>

                      </block_content>}</block></for>

                  </block_content>}</block></for>

                  <expr_stmt pos:start="347:19" pos:end="347:30"><expr pos:start="347:19" pos:end="347:29"><name pos:start="347:19" pos:end="347:23">block</name> <operator pos:start="347:25" pos:end="347:26">+=</operator> <literal type="number" pos:start="347:28" pos:end="347:29">64</literal></expr>;</expr_stmt> <expr_stmt pos:start="347:32" pos:end="347:36"><expr pos:start="347:32" pos:end="347:35"><name pos:start="347:32" pos:end="347:33">mb</name><operator pos:start="347:34" pos:end="347:35">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="349:15" pos:end="359:13">else <block pos:start="349:20" pos:end="359:13">{<block_content pos:start="351:19" pos:end="357:99">

                  <expr_stmt pos:start="351:19" pos:end="353:113"><expr pos:start="351:19" pos:end="353:112"><name pos:start="351:19" pos:end="351:26">y_stride</name> <operator pos:start="351:28" pos:end="351:28">=</operator> <ternary pos:start="351:30" pos:end="353:112"><condition pos:start="351:30" pos:end="351:44"><expr pos:start="351:30" pos:end="351:42"><operator pos:start="351:30" pos:end="351:30">(</operator><name pos:start="351:31" pos:end="351:34">mb_y</name> <operator pos:start="351:36" pos:end="351:37">==</operator> <literal type="number" pos:start="351:39" pos:end="351:41">134</literal><operator pos:start="351:42" pos:end="351:42">)</operator></expr> ?</condition><then pos:start="351:46" pos:end="351:64"> <expr pos:start="351:46" pos:end="351:64"><operator pos:start="351:46" pos:end="351:46">(</operator><literal type="number" pos:start="351:47" pos:end="351:47">1</literal><operator pos:start="351:48" pos:end="351:49">&lt;&lt;</operator><name pos:start="351:50" pos:end="351:63">log2_blocksize</name><operator pos:start="351:64" pos:end="351:64">)</operator></expr> </then><else pos:start="351:66" pos:end="353:112">:

                                             <expr pos:start="353:46" pos:end="353:112"><name pos:start="353:46" pos:end="353:67"><name pos:start="353:46" pos:end="353:46">s</name><operator pos:start="353:47" pos:end="353:48">-&gt;</operator><name pos:start="353:49" pos:end="353:55">picture</name><operator pos:start="353:56" pos:end="353:56">.</operator><name pos:start="353:57" pos:end="353:64">linesize</name><index pos:start="353:65" pos:end="353:67">[<expr pos:start="353:66" pos:end="353:66"><name pos:start="353:66" pos:end="353:66">j</name></expr>]</index></name><operator pos:start="353:68" pos:end="353:69">&lt;&lt;</operator><operator pos:start="353:70" pos:end="353:70">(</operator><operator pos:start="353:71" pos:end="353:71">(</operator><operator pos:start="353:72" pos:end="353:72">!</operator><name pos:start="353:73" pos:end="353:95"><name pos:start="353:73" pos:end="353:85">is_field_mode</name><index pos:start="353:86" pos:end="353:95">[<expr pos:start="353:87" pos:end="353:94"><name pos:start="353:87" pos:end="353:94">mb_index</name></expr>]</index></name><operator pos:start="353:96" pos:end="353:96">)</operator><operator pos:start="353:97" pos:end="353:97">*</operator><name pos:start="353:98" pos:end="353:111">log2_blocksize</name><operator pos:start="353:112" pos:end="353:112">)</operator></expr></else></ternary></expr>;</expr_stmt>

                  <for pos:start="355:19" pos:end="357:99">for <control pos:start="355:23" pos:end="355:95">(<init pos:start="355:24" pos:end="355:27"><expr pos:start="355:24" pos:end="355:26"><name pos:start="355:24" pos:end="355:24">i</name><operator pos:start="355:25" pos:end="355:25">=</operator><literal type="number" pos:start="355:26" pos:end="355:26">0</literal></expr>;</init> <condition pos:start="355:29" pos:end="355:52"><expr pos:start="355:29" pos:end="355:51"><name pos:start="355:29" pos:end="355:29">i</name><operator pos:start="355:30" pos:end="355:30">&lt;</operator><operator pos:start="355:31" pos:end="355:31">(</operator><literal type="number" pos:start="355:32" pos:end="355:32">1</literal><operator pos:start="355:33" pos:end="355:34">&lt;&lt;</operator><operator pos:start="355:35" pos:end="355:35">(</operator><name pos:start="355:36" pos:end="355:46"><name pos:start="355:36" pos:end="355:36">s</name><operator pos:start="355:37" pos:end="355:38">-&gt;</operator><name pos:start="355:39" pos:end="355:41">sys</name><operator pos:start="355:42" pos:end="355:43">-&gt;</operator><name pos:start="355:44" pos:end="355:46">bpm</name></name><operator pos:start="355:47" pos:end="355:48">==</operator><literal type="number" pos:start="355:49" pos:end="355:49">8</literal><operator pos:start="355:50" pos:end="355:50">)</operator><operator pos:start="355:51" pos:end="355:51">)</operator></expr>;</condition> <incr pos:start="355:54" pos:end="355:94"><expr pos:start="355:54" pos:end="355:56"><name pos:start="355:54" pos:end="355:54">i</name><operator pos:start="355:55" pos:end="355:56">++</operator></expr><operator pos:start="355:57" pos:end="355:57">,</operator> <expr pos:start="355:59" pos:end="355:69"><name pos:start="355:59" pos:end="355:63">block</name> <operator pos:start="355:65" pos:end="355:66">+=</operator> <literal type="number" pos:start="355:68" pos:end="355:69">64</literal></expr><operator pos:start="355:70" pos:end="355:70">,</operator> <expr pos:start="355:72" pos:end="355:75"><name pos:start="355:72" pos:end="355:73">mb</name><operator pos:start="355:74" pos:end="355:75">++</operator></expr><operator pos:start="355:76" pos:end="355:76">,</operator> <expr pos:start="355:78" pos:end="355:94"><name pos:start="355:78" pos:end="355:82">c_ptr</name> <operator pos:start="355:84" pos:end="355:85">+=</operator> <name pos:start="355:87" pos:end="355:94">y_stride</name></expr></incr>)</control><block type="pseudo" pos:start="357:24" pos:end="357:99"><block_content pos:start="357:24" pos:end="357:99">

                       <expr_stmt pos:start="357:24" pos:end="357:99"><expr pos:start="357:24" pos:end="357:98"><call pos:start="357:24" pos:end="357:98"><name pos:start="357:24" pos:end="357:35"><name pos:start="357:24" pos:end="357:25">mb</name><operator pos:start="357:26" pos:end="357:27">-&gt;</operator><name pos:start="357:28" pos:end="357:35">idct_put</name></name><argument_list pos:start="357:36" pos:end="357:98">(<argument pos:start="357:37" pos:end="357:41"><expr pos:start="357:37" pos:end="357:41"><name pos:start="357:37" pos:end="357:41">c_ptr</name></expr></argument>, <argument pos:start="357:44" pos:end="357:90"><expr pos:start="357:44" pos:end="357:90"><name pos:start="357:44" pos:end="357:65"><name pos:start="357:44" pos:end="357:44">s</name><operator pos:start="357:45" pos:end="357:46">-&gt;</operator><name pos:start="357:47" pos:end="357:53">picture</name><operator pos:start="357:54" pos:end="357:54">.</operator><name pos:start="357:55" pos:end="357:62">linesize</name><index pos:start="357:63" pos:end="357:65">[<expr pos:start="357:64" pos:end="357:64"><name pos:start="357:64" pos:end="357:64">j</name></expr>]</index></name><operator pos:start="357:66" pos:end="357:67">&lt;&lt;</operator><name pos:start="357:68" pos:end="357:90"><name pos:start="357:68" pos:end="357:80">is_field_mode</name><index pos:start="357:81" pos:end="357:90">[<expr pos:start="357:82" pos:end="357:89"><name pos:start="357:82" pos:end="357:89">mb_index</name></expr>]</index></name></expr></argument>, <argument pos:start="357:93" pos:end="357:97"><expr pos:start="357:93" pos:end="357:97"><name pos:start="357:93" pos:end="357:97">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
