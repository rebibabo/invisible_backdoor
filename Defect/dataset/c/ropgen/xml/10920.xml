<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10920.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">qemu_chr_add_handlers</name><parameter_list pos:start="1:27" pos:end="9:40">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">CharDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:56"><decl pos:start="3:28" pos:end="3:56"><type pos:start="3:28" pos:end="3:56"><name pos:start="3:28" pos:end="3:43">IOCanReadHandler</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:56">fd_can_read</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:49"><decl pos:start="5:28" pos:end="5:49"><type pos:start="5:28" pos:end="5:49"><name pos:start="5:28" pos:end="5:40">IOReadHandler</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:49">fd_read</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:51"><decl pos:start="7:28" pos:end="7:51"><type pos:start="7:28" pos:end="7:51"><name pos:start="7:28" pos:end="7:41">IOEventHandler</name> <modifier pos:start="7:43" pos:end="7:43">*</modifier></type><name pos:start="7:44" pos:end="7:51">fd_event</name></decl></parameter>,

                           <parameter pos:start="9:28" pos:end="9:39"><decl pos:start="9:28" pos:end="9:39"><type pos:start="9:28" pos:end="9:39"><name pos:start="9:28" pos:end="9:31">void</name> <modifier pos:start="9:33" pos:end="9:33">*</modifier></type><name pos:start="9:34" pos:end="9:39">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="45:1">{<block_content pos:start="13:5" pos:end="43:5">

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:15">opaque</name></expr>)</condition> <block pos:start="13:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:31">

        <comment type="block" pos:start="15:9" pos:end="15:40">/* chr driver being released. */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><operator pos:start="17:9" pos:end="17:10">++</operator><name pos:start="17:11" pos:end="17:30"><name pos:start="17:11" pos:end="17:11">s</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:30">avail_connections</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">chr_can_read</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:33">fd_can_read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:15">chr_read</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:25">fd_read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">chr_event</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:27">fd_event</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:21">handler_opaque</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:30">opaque</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:38"><if pos:start="29:5" pos:end="31:38">if <condition pos:start="29:8" pos:end="29:35">(<expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:34">chr_update_read_handler</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:38"><block_content pos:start="31:9" pos:end="31:38">

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><call pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:34">chr_update_read_handler</name></name><argument_list pos:start="31:35" pos:end="31:37">(<argument pos:start="31:36" pos:end="31:36"><expr pos:start="31:36" pos:end="31:36"><name pos:start="31:36" pos:end="31:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="37:33">/* We're connecting to an already opened device, so let's make sure we

       also get the open event */</comment>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:18">(<expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">opened</name></name></expr>)</condition> <block pos:start="39:20" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:33">

        <expr_stmt pos:start="41:9" pos:end="41:33"><expr pos:start="41:9" pos:end="41:32"><call pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:29">qemu_chr_generic_open</name><argument_list pos:start="41:30" pos:end="41:32">(<argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
