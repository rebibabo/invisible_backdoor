<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7144.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">local_mkdir</name><parameter_list pos:start="1:23" pos:end="3:55">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:32">FsContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">fs_ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:50">V9fsPath</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:60">dir_path</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:39"><decl pos:start="3:24" pos:end="3:39"><type pos:start="3:24" pos:end="3:39"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:33">char</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">name</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:47">FsCred</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:54">credp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="121:1">{<block_content pos:start="7:5" pos:end="119:15">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:16">= <expr pos:start="9:15" pos:end="9:16"><operator pos:start="9:15" pos:end="9:15">-</operator><literal type="number" pos:start="9:16" pos:end="9:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">serrno</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">V9fsString</name></type> <name pos:start="13:16" pos:end="13:23">fullname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:16">buffer</name> <init pos:start="15:18" pos:end="15:23">= <expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:20">v9fs_string_init</name><argument_list pos:start="19:21" pos:end="19:31">(<argument pos:start="19:22" pos:end="19:30"><expr pos:start="19:22" pos:end="19:30"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:30">fullname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><call pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:23">v9fs_string_sprintf</name><argument_list pos:start="21:24" pos:end="21:65">(<argument pos:start="21:25" pos:end="21:33"><expr pos:start="21:25" pos:end="21:33"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:33">fullname</name></expr></argument>, <argument pos:start="21:36" pos:end="21:42"><expr pos:start="21:36" pos:end="21:42"><literal type="string" pos:start="21:36" pos:end="21:42">"%s/%s"</literal></expr></argument>, <argument pos:start="21:45" pos:end="21:58"><expr pos:start="21:45" pos:end="21:58"><name pos:start="21:45" pos:end="21:58"><name pos:start="21:45" pos:end="21:52">dir_path</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:58">data</name></name></expr></argument>, <argument pos:start="21:61" pos:end="21:64"><expr pos:start="21:61" pos:end="21:64"><name pos:start="21:61" pos:end="21:64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:8">path</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:19">fullname</name><operator pos:start="23:20" pos:end="23:20">.</operator><name pos:start="23:21" pos:end="23:24">data</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:38">/* Determine the security model */</comment>

    <if_stmt pos:start="29:5" pos:end="101:5"><if pos:start="29:5" pos:end="53:5">if <condition pos:start="29:8" pos:end="29:46">(<expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:14">fs_ctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:28">export_flags</name></name> <operator pos:start="29:30" pos:end="29:30">&amp;</operator> <name pos:start="29:32" pos:end="29:45">V9FS_SM_MAPPED</name></expr>)</condition> <block pos:start="29:48" pos:end="53:5">{<block_content pos:start="31:9" pos:end="51:9">

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:14">buffer</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:36"><name pos:start="31:18" pos:end="31:22">rpath</name><argument_list pos:start="31:23" pos:end="31:36">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">fs_ctx</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:51"><name pos:start="33:15" pos:end="33:19">mkdir</name><argument_list pos:start="33:20" pos:end="33:51">(<argument pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:26">buffer</name></expr></argument>, <argument pos:start="33:29" pos:end="33:50"><expr pos:start="33:29" pos:end="33:50"><name pos:start="33:29" pos:end="33:50">SM_LOCAL_DIR_MODE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:15">err</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>)</condition> <block pos:start="35:24" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:21">

            <goto pos:start="37:13" pos:end="37:21">goto <name pos:start="37:18" pos:end="37:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:48"><expr pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:13">credp</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">fc_mode</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:39"><name pos:start="41:26" pos:end="41:30">credp</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:39">fc_mode</name></name><operator pos:start="41:40" pos:end="41:40">|</operator><name pos:start="41:41" pos:end="41:47">S_IFDIR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:44"><name pos:start="43:15" pos:end="43:29">local_set_xattr</name><argument_list pos:start="43:30" pos:end="43:44">(<argument pos:start="43:31" pos:end="43:36"><expr pos:start="43:31" pos:end="43:36"><name pos:start="43:31" pos:end="43:36">buffer</name></expr></argument>, <argument pos:start="43:39" pos:end="43:43"><expr pos:start="43:39" pos:end="43:43"><name pos:start="43:39" pos:end="43:43">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:15">err</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <operator pos:start="45:20" pos:end="45:20">-</operator><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>)</condition> <block pos:start="45:24" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:25">

            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:18">serrno</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:25">goto <name pos:start="49:18" pos:end="49:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="77:5">else if <condition pos:start="53:15" pos:end="53:58">(<expr pos:start="53:16" pos:end="53:57"><name pos:start="53:16" pos:end="53:35"><name pos:start="53:16" pos:end="53:21">fs_ctx</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:35">export_flags</name></name> <operator pos:start="53:37" pos:end="53:37">&amp;</operator> <name pos:start="53:39" pos:end="53:57">V9FS_SM_MAPPED_FILE</name></expr>)</condition> <block pos:start="53:60" pos:end="77:5">{<block_content pos:start="55:9" pos:end="75:9">

        <expr_stmt pos:start="55:9" pos:end="55:37"><expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:14">buffer</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:36"><name pos:start="55:18" pos:end="55:22">rpath</name><argument_list pos:start="55:23" pos:end="55:36">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">fs_ctx</name></expr></argument>, <argument pos:start="55:32" pos:end="55:35"><expr pos:start="55:32" pos:end="55:35"><name pos:start="55:32" pos:end="55:35">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:52"><expr pos:start="57:9" pos:end="57:51"><name pos:start="57:9" pos:end="57:11">err</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:51"><name pos:start="57:15" pos:end="57:19">mkdir</name><argument_list pos:start="57:20" pos:end="57:51">(<argument pos:start="57:21" pos:end="57:26"><expr pos:start="57:21" pos:end="57:26"><name pos:start="57:21" pos:end="57:26">buffer</name></expr></argument>, <argument pos:start="57:29" pos:end="57:50"><expr pos:start="57:29" pos:end="57:50"><name pos:start="57:29" pos:end="57:50">SM_LOCAL_DIR_MODE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:15">err</name> <operator pos:start="59:17" pos:end="59:18">==</operator> <operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>)</condition> <block pos:start="59:24" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:21">

            <goto pos:start="61:13" pos:end="61:21">goto <name pos:start="61:18" pos:end="61:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:48"><expr pos:start="65:9" pos:end="65:47"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:13">credp</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:22">fc_mode</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:39"><name pos:start="65:26" pos:end="65:30">credp</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:39">fc_mode</name></name><operator pos:start="65:40" pos:end="65:40">|</operator><name pos:start="65:41" pos:end="65:47">S_IFDIR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:62"><expr pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:11">err</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:61"><name pos:start="67:15" pos:end="67:40">local_set_mapped_file_attr</name><argument_list pos:start="67:41" pos:end="67:61">(<argument pos:start="67:42" pos:end="67:47"><expr pos:start="67:42" pos:end="67:47"><name pos:start="67:42" pos:end="67:47">fs_ctx</name></expr></argument>, <argument pos:start="67:50" pos:end="67:53"><expr pos:start="67:50" pos:end="67:53"><name pos:start="67:50" pos:end="67:53">path</name></expr></argument>, <argument pos:start="67:56" pos:end="67:60"><expr pos:start="67:56" pos:end="67:60"><name pos:start="67:56" pos:end="67:60">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:22">(<expr pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:15">err</name> <operator pos:start="69:17" pos:end="69:18">==</operator> <operator pos:start="69:20" pos:end="69:20">-</operator><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>)</condition> <block pos:start="69:24" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:25">

            <expr_stmt pos:start="71:13" pos:end="71:27"><expr pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:18">serrno</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="73:13" pos:end="73:25">goto <name pos:start="73:18" pos:end="73:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="101:5">else if <condition pos:start="77:15" pos:end="79:53">(<expr pos:start="77:16" pos:end="79:52"><operator pos:start="77:16" pos:end="77:16">(</operator><name pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:22">fs_ctx</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:36">export_flags</name></name> <operator pos:start="77:38" pos:end="77:38">&amp;</operator> <name pos:start="77:40" pos:end="77:58">V9FS_SM_PASSTHROUGH</name><operator pos:start="77:59" pos:end="77:59">)</operator> <operator pos:start="77:61" pos:end="77:62">||</operator>

               <operator pos:start="79:16" pos:end="79:16">(</operator><name pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:22">fs_ctx</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:36">export_flags</name></name> <operator pos:start="79:38" pos:end="79:38">&amp;</operator> <name pos:start="79:40" pos:end="79:51">V9FS_SM_NONE</name><operator pos:start="79:52" pos:end="79:52">)</operator></expr>)</condition> <block pos:start="79:55" pos:end="101:5">{<block_content pos:start="81:9" pos:end="99:9">

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:14">buffer</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <call pos:start="81:18" pos:end="81:36"><name pos:start="81:18" pos:end="81:22">rpath</name><argument_list pos:start="81:23" pos:end="81:36">(<argument pos:start="81:24" pos:end="81:29"><expr pos:start="81:24" pos:end="81:29"><name pos:start="81:24" pos:end="81:29">fs_ctx</name></expr></argument>, <argument pos:start="81:32" pos:end="81:35"><expr pos:start="81:32" pos:end="81:35"><name pos:start="81:32" pos:end="81:35">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:44"><expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:11">err</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:43"><name pos:start="83:15" pos:end="83:19">mkdir</name><argument_list pos:start="83:20" pos:end="83:43">(<argument pos:start="83:21" pos:end="83:26"><expr pos:start="83:21" pos:end="83:26"><name pos:start="83:21" pos:end="83:26">buffer</name></expr></argument>, <argument pos:start="83:29" pos:end="83:42"><expr pos:start="83:29" pos:end="83:42"><name pos:start="83:29" pos:end="83:42"><name pos:start="83:29" pos:end="83:33">credp</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:42">fc_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:15">err</name> <operator pos:start="85:17" pos:end="85:18">==</operator> <operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>)</condition> <block pos:start="85:24" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:21">

            <goto pos:start="87:13" pos:end="87:21">goto <name pos:start="87:18" pos:end="87:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:65"><expr pos:start="91:9" pos:end="91:64"><name pos:start="91:9" pos:end="91:11">err</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:64"><name pos:start="91:15" pos:end="91:43">local_post_create_passthrough</name><argument_list pos:start="91:44" pos:end="91:64">(<argument pos:start="91:45" pos:end="91:50"><expr pos:start="91:45" pos:end="91:50"><name pos:start="91:45" pos:end="91:50">fs_ctx</name></expr></argument>, <argument pos:start="91:53" pos:end="91:56"><expr pos:start="91:53" pos:end="91:56"><name pos:start="91:53" pos:end="91:56">path</name></expr></argument>, <argument pos:start="91:59" pos:end="91:63"><expr pos:start="91:59" pos:end="91:63"><name pos:start="91:59" pos:end="91:63">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:22">(<expr pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:15">err</name> <operator pos:start="93:17" pos:end="93:18">==</operator> <operator pos:start="93:20" pos:end="93:20">-</operator><literal type="number" pos:start="93:21" pos:end="93:21">1</literal></expr>)</condition> <block pos:start="93:24" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:25">

            <expr_stmt pos:start="95:13" pos:end="95:27"><expr pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:18">serrno</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="97:13" pos:end="97:25">goto <name pos:start="97:18" pos:end="97:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <goto pos:start="103:5" pos:end="103:13">goto <name pos:start="103:10" pos:end="103:12">out</name>;</goto>



<label pos:start="107:1" pos:end="107:8"><name pos:start="107:1" pos:end="107:7">err_end</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:19"><expr pos:start="109:5" pos:end="109:18"><call pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:10">remove</name><argument_list pos:start="109:11" pos:end="109:18">(<argument pos:start="109:12" pos:end="109:17"><expr pos:start="109:12" pos:end="109:17"><name pos:start="109:12" pos:end="109:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:19"><expr pos:start="111:5" pos:end="111:18"><name pos:start="111:5" pos:end="111:9">errno</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <name pos:start="111:13" pos:end="111:18">serrno</name></expr>;</expr_stmt>

<label pos:start="113:1" pos:end="113:4"><name pos:start="113:1" pos:end="113:3">out</name>:</label>

    <expr_stmt pos:start="115:5" pos:end="115:19"><expr pos:start="115:5" pos:end="115:18"><call pos:start="115:5" pos:end="115:18"><name pos:start="115:5" pos:end="115:10">g_free</name><argument_list pos:start="115:11" pos:end="115:18">(<argument pos:start="115:12" pos:end="115:17"><expr pos:start="115:12" pos:end="115:17"><name pos:start="115:12" pos:end="115:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:32"><expr pos:start="117:5" pos:end="117:31"><call pos:start="117:5" pos:end="117:31"><name pos:start="117:5" pos:end="117:20">v9fs_string_free</name><argument_list pos:start="117:21" pos:end="117:31">(<argument pos:start="117:22" pos:end="117:30"><expr pos:start="117:22" pos:end="117:30"><operator pos:start="117:22" pos:end="117:22">&amp;</operator><name pos:start="117:23" pos:end="117:30">fullname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:15">return <expr pos:start="119:12" pos:end="119:14"><name pos:start="119:12" pos:end="119:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
