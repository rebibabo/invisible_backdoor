<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12705.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">nam_writew</name> <parameter_list pos:start="1:24" pos:end="1:66">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">uint32_t</name></type> <name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:65">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PCIAC97LinkState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">d</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AC97LinkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:31">= <expr pos:start="7:24" pos:end="7:31"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:25">d</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">ac97</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">index</name> <init pos:start="9:20" pos:end="9:38">= <expr pos:start="9:22" pos:end="9:38"><name pos:start="9:22" pos:end="9:25">addr</name> <operator pos:start="9:27" pos:end="9:27">-</operator> <name pos:start="9:29" pos:end="9:38"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:35">base</name><index pos:start="9:36" pos:end="9:38">[<expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:10">cas</name></name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="179:5">switch <condition pos:start="13:12" pos:end="13:18">(<expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:17">index</name></expr>)</condition> <block pos:start="13:20" pos:end="179:5">{<block_content pos:start="15:5" pos:end="177:14">

    <case pos:start="15:5" pos:end="15:20">case <expr pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:19">AC97_Reset</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><call pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:19">mixer_reset</name> <argument_list pos:start="17:21" pos:end="17:23">(<argument pos:start="17:22" pos:end="17:22"><expr pos:start="17:22" pos:end="17:22"><name pos:start="17:22" pos:end="17:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:34">case <expr pos:start="21:10" pos:end="21:33"><name pos:start="21:10" pos:end="21:33">AC97_Powerdown_Ctrl_Stat</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">val</name> <operator pos:start="23:13" pos:end="23:14">&amp;=</operator> <operator pos:start="23:16" pos:end="23:16">~</operator><literal type="number" pos:start="23:17" pos:end="23:19">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:11">val</name> <operator pos:start="25:13" pos:end="25:14">|=</operator> <call pos:start="25:16" pos:end="25:36"><name pos:start="25:16" pos:end="25:25">mixer_load</name> <argument_list pos:start="25:27" pos:end="25:36">(<argument pos:start="25:28" pos:end="25:28"><expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">s</name></expr></argument>, <argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:35">index</name></expr></argument>)</argument_list></call> <operator pos:start="25:38" pos:end="25:38">&amp;</operator> <literal type="number" pos:start="25:40" pos:end="25:42">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:19">mixer_store</name> <argument_list pos:start="27:21" pos:end="27:35">(<argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">s</name></expr></argument>, <argument pos:start="27:25" pos:end="27:29"><expr pos:start="27:25" pos:end="27:29"><name pos:start="27:25" pos:end="27:29">index</name></expr></argument>, <argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="32:0">break;</break>

<cpp:ifdef pos:start="31:1" pos:end="31:16">#<cpp:directive pos:start="31:2" pos:end="31:6">ifdef</cpp:directive> <name pos:start="31:8" pos:end="31:16">USE_MIXER</name></cpp:ifdef>

    <case pos:start="33:5" pos:end="33:33">case <expr pos:start="33:10" pos:end="33:32"><name pos:start="33:10" pos:end="33:32">AC97_Master_Volume_Mute</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:53"><expr pos:start="35:9" pos:end="35:52"><call pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:18">set_volume</name> <argument_list pos:start="35:20" pos:end="35:52">(<argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">s</name></expr></argument>, <argument pos:start="35:24" pos:end="35:28"><expr pos:start="35:24" pos:end="35:28"><name pos:start="35:24" pos:end="35:28">index</name></expr></argument>, <argument pos:start="35:31" pos:end="35:46"><expr pos:start="35:31" pos:end="35:46"><name pos:start="35:31" pos:end="35:46">AUD_MIXER_VOLUME</name></expr></argument>, <argument pos:start="35:49" pos:end="35:51"><expr pos:start="35:49" pos:end="35:51"><name pos:start="35:49" pos:end="35:51">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:34">case <expr pos:start="39:10" pos:end="39:33"><name pos:start="39:10" pos:end="39:33">AC97_PCM_Out_Volume_Mute</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:50"><expr pos:start="41:9" pos:end="41:49"><call pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:18">set_volume</name> <argument_list pos:start="41:20" pos:end="41:49">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">s</name></expr></argument>, <argument pos:start="41:24" pos:end="41:28"><expr pos:start="41:24" pos:end="41:28"><name pos:start="41:24" pos:end="41:28">index</name></expr></argument>, <argument pos:start="41:31" pos:end="41:43"><expr pos:start="41:31" pos:end="41:43"><name pos:start="41:31" pos:end="41:43">AUD_MIXER_PCM</name></expr></argument>, <argument pos:start="41:46" pos:end="41:48"><expr pos:start="41:46" pos:end="41:48"><name pos:start="41:46" pos:end="41:48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:34">case <expr pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:33">AC97_Line_In_Volume_Mute</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:54"><expr pos:start="47:9" pos:end="47:53"><call pos:start="47:9" pos:end="47:53"><name pos:start="47:9" pos:end="47:18">set_volume</name> <argument_list pos:start="47:20" pos:end="47:53">(<argument pos:start="47:21" pos:end="47:21"><expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">s</name></expr></argument>, <argument pos:start="47:24" pos:end="47:28"><expr pos:start="47:24" pos:end="47:28"><name pos:start="47:24" pos:end="47:28">index</name></expr></argument>, <argument pos:start="47:31" pos:end="47:47"><expr pos:start="47:31" pos:end="47:47"><name pos:start="47:31" pos:end="47:47">AUD_MIXER_LINE_IN</name></expr></argument>, <argument pos:start="47:50" pos:end="47:52"><expr pos:start="47:50" pos:end="47:52"><name pos:start="47:50" pos:end="47:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:28">case <expr pos:start="51:10" pos:end="51:27"><name pos:start="51:10" pos:end="51:27">AC97_Record_Select</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><call pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:21">record_select</name> <argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><name pos:start="53:24" pos:end="53:24">s</name></expr></argument>, <argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="58:0">break;</break>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

    <case pos:start="59:5" pos:end="59:25">case <expr pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:24">AC97_Vendor_ID1</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:25">case <expr pos:start="61:10" pos:end="61:24"><name pos:start="61:10" pos:end="61:24">AC97_Vendor_ID2</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:59"><expr pos:start="63:9" pos:end="63:58"><call pos:start="63:9" pos:end="63:58"><name pos:start="63:9" pos:end="63:13">dolog</name> <argument_list pos:start="63:15" pos:end="63:58">(<argument pos:start="63:16" pos:end="63:52"><expr pos:start="63:16" pos:end="63:52"><literal type="string" pos:start="63:16" pos:end="63:52">"Attempt to write vendor ID to %#x\n"</literal></expr></argument>, <argument pos:start="63:55" pos:end="63:57"><expr pos:start="63:55" pos:end="63:57"><name pos:start="63:55" pos:end="63:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:32">case <expr pos:start="67:10" pos:end="67:31"><name pos:start="67:10" pos:end="67:31">AC97_Extended_Audio_ID</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:67"><expr pos:start="69:9" pos:end="69:66"><call pos:start="69:9" pos:end="69:66"><name pos:start="69:9" pos:end="69:13">dolog</name> <argument_list pos:start="69:15" pos:end="69:66">(<argument pos:start="69:16" pos:end="69:60"><expr pos:start="69:16" pos:end="69:60"><literal type="string" pos:start="69:16" pos:end="69:60">"Attempt to write extended audio ID to %#x\n"</literal></expr></argument>, <argument pos:start="69:63" pos:end="69:65"><expr pos:start="69:63" pos:end="69:65"><name pos:start="69:63" pos:end="69:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:39">case <expr pos:start="73:10" pos:end="73:38"><name pos:start="73:10" pos:end="73:38">AC97_Extended_Audio_Ctrl_Stat</name></expr>:</case>

        <if_stmt pos:start="75:9" pos:end="85:9"><if pos:start="75:9" pos:end="85:9">if <condition pos:start="75:12" pos:end="75:30">(<expr pos:start="75:13" pos:end="75:29"><operator pos:start="75:13" pos:end="75:13">!</operator><operator pos:start="75:14" pos:end="75:14">(</operator><name pos:start="75:15" pos:end="75:17">val</name> <operator pos:start="75:19" pos:end="75:19">&amp;</operator> <name pos:start="75:21" pos:end="75:28">EACS_VRA</name><operator pos:start="75:29" pos:end="75:29">)</operator></expr>)</condition> <block pos:start="75:32" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:44">

            <expr_stmt pos:start="77:13" pos:end="77:61"><expr pos:start="77:13" pos:end="77:60"><call pos:start="77:13" pos:end="77:60"><name pos:start="77:13" pos:end="77:23">mixer_store</name> <argument_list pos:start="77:25" pos:end="77:60">(<argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">s</name></expr></argument>, <argument pos:start="77:29" pos:end="77:51"><expr pos:start="77:29" pos:end="77:51"><name pos:start="77:29" pos:end="77:51">AC97_PCM_Front_DAC_Rate</name></expr></argument>, <argument pos:start="77:54" pos:end="77:59"><expr pos:start="77:54" pos:end="77:59"><literal type="number" pos:start="77:54" pos:end="77:59">0xbb80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:61"><expr pos:start="79:13" pos:end="79:60"><call pos:start="79:13" pos:end="79:60"><name pos:start="79:13" pos:end="79:23">mixer_store</name> <argument_list pos:start="79:25" pos:end="79:60">(<argument pos:start="79:26" pos:end="79:26"><expr pos:start="79:26" pos:end="79:26"><name pos:start="79:26" pos:end="79:26">s</name></expr></argument>, <argument pos:start="79:29" pos:end="79:48"><expr pos:start="79:29" pos:end="79:48"><name pos:start="79:29" pos:end="79:48">AC97_PCM_LR_ADC_Rate</name></expr></argument>,    <argument pos:start="79:54" pos:end="79:59"><expr pos:start="79:54" pos:end="79:59"><literal type="number" pos:start="79:54" pos:end="79:59">0xbb80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:44"><expr pos:start="81:13" pos:end="81:43"><call pos:start="81:13" pos:end="81:43"><name pos:start="81:13" pos:end="81:22">open_voice</name> <argument_list pos:start="81:24" pos:end="81:43">(<argument pos:start="81:25" pos:end="81:25"><expr pos:start="81:25" pos:end="81:25"><name pos:start="81:25" pos:end="81:25">s</name></expr></argument>, <argument pos:start="81:28" pos:end="81:35"><expr pos:start="81:28" pos:end="81:35"><name pos:start="81:28" pos:end="81:35">PI_INDEX</name></expr></argument>, <argument pos:start="81:38" pos:end="81:42"><expr pos:start="81:38" pos:end="81:42"><literal type="number" pos:start="81:38" pos:end="81:42">48000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:44"><expr pos:start="83:13" pos:end="83:43"><call pos:start="83:13" pos:end="83:43"><name pos:start="83:13" pos:end="83:22">open_voice</name> <argument_list pos:start="83:24" pos:end="83:43">(<argument pos:start="83:25" pos:end="83:25"><expr pos:start="83:25" pos:end="83:25"><name pos:start="83:25" pos:end="83:25">s</name></expr></argument>, <argument pos:start="83:28" pos:end="83:35"><expr pos:start="83:28" pos:end="83:35"><name pos:start="83:28" pos:end="83:35">PO_INDEX</name></expr></argument>, <argument pos:start="83:38" pos:end="83:42"><expr pos:start="83:38" pos:end="83:42"><literal type="number" pos:start="83:38" pos:end="83:42">48000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:30">(<expr pos:start="87:13" pos:end="87:29"><operator pos:start="87:13" pos:end="87:13">!</operator><operator pos:start="87:14" pos:end="87:14">(</operator><name pos:start="87:15" pos:end="87:17">val</name> <operator pos:start="87:19" pos:end="87:19">&amp;</operator> <name pos:start="87:21" pos:end="87:28">EACS_VRM</name><operator pos:start="87:29" pos:end="87:29">)</operator></expr>)</condition> <block pos:start="87:32" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:44">

            <expr_stmt pos:start="89:13" pos:end="89:55"><expr pos:start="89:13" pos:end="89:54"><call pos:start="89:13" pos:end="89:54"><name pos:start="89:13" pos:end="89:23">mixer_store</name> <argument_list pos:start="89:25" pos:end="89:54">(<argument pos:start="89:26" pos:end="89:26"><expr pos:start="89:26" pos:end="89:26"><name pos:start="89:26" pos:end="89:26">s</name></expr></argument>, <argument pos:start="89:29" pos:end="89:45"><expr pos:start="89:29" pos:end="89:45"><name pos:start="89:29" pos:end="89:45">AC97_MIC_ADC_Rate</name></expr></argument>, <argument pos:start="89:48" pos:end="89:53"><expr pos:start="89:48" pos:end="89:53"><literal type="number" pos:start="89:48" pos:end="89:53">0xbb80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:44"><expr pos:start="91:13" pos:end="91:43"><call pos:start="91:13" pos:end="91:43"><name pos:start="91:13" pos:end="91:22">open_voice</name> <argument_list pos:start="91:24" pos:end="91:43">(<argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><name pos:start="91:25" pos:end="91:25">s</name></expr></argument>, <argument pos:start="91:28" pos:end="91:35"><expr pos:start="91:28" pos:end="91:35"><name pos:start="91:28" pos:end="91:35">MC_INDEX</name></expr></argument>, <argument pos:start="91:38" pos:end="91:42"><expr pos:start="91:38" pos:end="91:42"><literal type="number" pos:start="91:38" pos:end="91:42">48000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:63"><expr pos:start="95:9" pos:end="95:62"><call pos:start="95:9" pos:end="95:62"><name pos:start="95:9" pos:end="95:13">dolog</name> <argument_list pos:start="95:15" pos:end="95:62">(<argument pos:start="95:16" pos:end="95:56"><expr pos:start="95:16" pos:end="95:56"><literal type="string" pos:start="95:16" pos:end="95:56">"Setting extended audio control to %#x\n"</literal></expr></argument>, <argument pos:start="95:59" pos:end="95:61"><expr pos:start="95:59" pos:end="95:61"><name pos:start="95:59" pos:end="95:61">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:60"><expr pos:start="97:9" pos:end="97:59"><call pos:start="97:9" pos:end="97:59"><name pos:start="97:9" pos:end="97:19">mixer_store</name> <argument_list pos:start="97:21" pos:end="97:59">(<argument pos:start="97:22" pos:end="97:22"><expr pos:start="97:22" pos:end="97:22"><name pos:start="97:22" pos:end="97:22">s</name></expr></argument>, <argument pos:start="97:25" pos:end="97:53"><expr pos:start="97:25" pos:end="97:53"><name pos:start="97:25" pos:end="97:53">AC97_Extended_Audio_Ctrl_Stat</name></expr></argument>, <argument pos:start="97:56" pos:end="97:58"><expr pos:start="97:56" pos:end="97:58"><name pos:start="97:56" pos:end="97:58">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:33">case <expr pos:start="101:10" pos:end="101:32"><name pos:start="101:10" pos:end="101:32">AC97_PCM_Front_DAC_Rate</name></expr>:</case>

        <if_stmt pos:start="103:9" pos:end="121:9"><if pos:start="103:9" pos:end="111:9">if <condition pos:start="103:12" pos:end="103:69">(<expr pos:start="103:13" pos:end="103:68"><call pos:start="103:13" pos:end="103:57"><name pos:start="103:13" pos:end="103:22">mixer_load</name> <argument_list pos:start="103:24" pos:end="103:57">(<argument pos:start="103:25" pos:end="103:25"><expr pos:start="103:25" pos:end="103:25"><name pos:start="103:25" pos:end="103:25">s</name></expr></argument>, <argument pos:start="103:28" pos:end="103:56"><expr pos:start="103:28" pos:end="103:56"><name pos:start="103:28" pos:end="103:56">AC97_Extended_Audio_Ctrl_Stat</name></expr></argument>)</argument_list></call> <operator pos:start="103:59" pos:end="103:59">&amp;</operator> <name pos:start="103:61" pos:end="103:68">EACS_VRA</name></expr>)</condition> <block pos:start="103:71" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:42">

            <expr_stmt pos:start="105:13" pos:end="105:40"><expr pos:start="105:13" pos:end="105:39"><call pos:start="105:13" pos:end="105:39"><name pos:start="105:13" pos:end="105:23">mixer_store</name> <argument_list pos:start="105:25" pos:end="105:39">(<argument pos:start="105:26" pos:end="105:26"><expr pos:start="105:26" pos:end="105:26"><name pos:start="105:26" pos:end="105:26">s</name></expr></argument>, <argument pos:start="105:29" pos:end="105:33"><expr pos:start="105:29" pos:end="105:33"><name pos:start="105:29" pos:end="105:33">index</name></expr></argument>, <argument pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><name pos:start="105:36" pos:end="105:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:54"><expr pos:start="107:13" pos:end="107:53"><call pos:start="107:13" pos:end="107:53"><name pos:start="107:13" pos:end="107:17">dolog</name> <argument_list pos:start="107:19" pos:end="107:53">(<argument pos:start="107:20" pos:end="107:47"><expr pos:start="107:20" pos:end="107:47"><literal type="string" pos:start="107:20" pos:end="107:47">"Set front DAC rate to %d\n"</literal></expr></argument>, <argument pos:start="107:50" pos:end="107:52"><expr pos:start="107:50" pos:end="107:52"><name pos:start="107:50" pos:end="107:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:42"><expr pos:start="109:13" pos:end="109:41"><call pos:start="109:13" pos:end="109:41"><name pos:start="109:13" pos:end="109:22">open_voice</name> <argument_list pos:start="109:24" pos:end="109:41">(<argument pos:start="109:25" pos:end="109:25"><expr pos:start="109:25" pos:end="109:25"><name pos:start="109:25" pos:end="109:25">s</name></expr></argument>, <argument pos:start="109:28" pos:end="109:35"><expr pos:start="109:28" pos:end="109:35"><name pos:start="109:28" pos:end="109:35">PO_INDEX</name></expr></argument>, <argument pos:start="109:38" pos:end="109:40"><expr pos:start="109:38" pos:end="109:40"><name pos:start="109:38" pos:end="109:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="113:9" pos:end="121:9">else <block pos:start="113:14" pos:end="121:9">{<block_content pos:start="115:13" pos:end="119:24">

            <expr_stmt pos:start="115:13" pos:end="119:24"><expr pos:start="115:13" pos:end="119:23"><call pos:start="115:13" pos:end="119:23"><name pos:start="115:13" pos:end="115:17">dolog</name> <argument_list pos:start="115:19" pos:end="119:23">(<argument pos:start="115:20" pos:end="117:41"><expr pos:start="115:20" pos:end="117:41"><literal type="string" pos:start="115:20" pos:end="115:58">"Attempt to set front DAC rate to %d, "</literal>

                   <literal type="string" pos:start="117:20" pos:end="117:41">"but VRA is not set\n"</literal></expr></argument>,

                   <argument pos:start="119:20" pos:end="119:22"><expr pos:start="119:20" pos:end="119:22"><name pos:start="119:20" pos:end="119:22">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:27">case <expr pos:start="125:10" pos:end="125:26"><name pos:start="125:10" pos:end="125:26">AC97_MIC_ADC_Rate</name></expr>:</case>

        <if_stmt pos:start="127:9" pos:end="145:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="127:69">(<expr pos:start="127:13" pos:end="127:68"><call pos:start="127:13" pos:end="127:57"><name pos:start="127:13" pos:end="127:22">mixer_load</name> <argument_list pos:start="127:24" pos:end="127:57">(<argument pos:start="127:25" pos:end="127:25"><expr pos:start="127:25" pos:end="127:25"><name pos:start="127:25" pos:end="127:25">s</name></expr></argument>, <argument pos:start="127:28" pos:end="127:56"><expr pos:start="127:28" pos:end="127:56"><name pos:start="127:28" pos:end="127:56">AC97_Extended_Audio_Ctrl_Stat</name></expr></argument>)</argument_list></call> <operator pos:start="127:59" pos:end="127:59">&amp;</operator> <name pos:start="127:61" pos:end="127:68">EACS_VRM</name></expr>)</condition> <block pos:start="127:71" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:42">

            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><call pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:23">mixer_store</name> <argument_list pos:start="129:25" pos:end="129:39">(<argument pos:start="129:26" pos:end="129:26"><expr pos:start="129:26" pos:end="129:26"><name pos:start="129:26" pos:end="129:26">s</name></expr></argument>, <argument pos:start="129:29" pos:end="129:33"><expr pos:start="129:29" pos:end="129:33"><name pos:start="129:29" pos:end="129:33">index</name></expr></argument>, <argument pos:start="129:36" pos:end="129:38"><expr pos:start="129:36" pos:end="129:38"><name pos:start="129:36" pos:end="129:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:52"><expr pos:start="131:13" pos:end="131:51"><call pos:start="131:13" pos:end="131:51"><name pos:start="131:13" pos:end="131:17">dolog</name> <argument_list pos:start="131:19" pos:end="131:51">(<argument pos:start="131:20" pos:end="131:45"><expr pos:start="131:20" pos:end="131:45"><literal type="string" pos:start="131:20" pos:end="131:45">"Set MIC ADC rate to %d\n"</literal></expr></argument>, <argument pos:start="131:48" pos:end="131:50"><expr pos:start="131:48" pos:end="131:50"><name pos:start="131:48" pos:end="131:50">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:42"><expr pos:start="133:13" pos:end="133:41"><call pos:start="133:13" pos:end="133:41"><name pos:start="133:13" pos:end="133:22">open_voice</name> <argument_list pos:start="133:24" pos:end="133:41">(<argument pos:start="133:25" pos:end="133:25"><expr pos:start="133:25" pos:end="133:25"><name pos:start="133:25" pos:end="133:25">s</name></expr></argument>, <argument pos:start="133:28" pos:end="133:35"><expr pos:start="133:28" pos:end="133:35"><name pos:start="133:28" pos:end="133:35">MC_INDEX</name></expr></argument>, <argument pos:start="133:38" pos:end="133:40"><expr pos:start="133:38" pos:end="133:40"><name pos:start="133:38" pos:end="133:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="137:9" pos:end="145:9">else <block pos:start="137:14" pos:end="145:9">{<block_content pos:start="139:13" pos:end="143:24">

            <expr_stmt pos:start="139:13" pos:end="143:24"><expr pos:start="139:13" pos:end="143:23"><call pos:start="139:13" pos:end="143:23"><name pos:start="139:13" pos:end="139:17">dolog</name> <argument_list pos:start="139:19" pos:end="143:23">(<argument pos:start="139:20" pos:end="141:41"><expr pos:start="139:20" pos:end="141:41"><literal type="string" pos:start="139:20" pos:end="139:56">"Attempt to set MIC ADC rate to %d, "</literal>

                   <literal type="string" pos:start="141:20" pos:end="141:41">"but VRM is not set\n"</literal></expr></argument>,

                   <argument pos:start="143:20" pos:end="143:22"><expr pos:start="143:20" pos:end="143:22"><name pos:start="143:20" pos:end="143:22">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:30">case <expr pos:start="149:10" pos:end="149:29"><name pos:start="149:10" pos:end="149:29">AC97_PCM_LR_ADC_Rate</name></expr>:</case>

        <if_stmt pos:start="151:9" pos:end="167:9"><if pos:start="151:9" pos:end="159:9">if <condition pos:start="151:12" pos:end="151:69">(<expr pos:start="151:13" pos:end="151:68"><call pos:start="151:13" pos:end="151:57"><name pos:start="151:13" pos:end="151:22">mixer_load</name> <argument_list pos:start="151:24" pos:end="151:57">(<argument pos:start="151:25" pos:end="151:25"><expr pos:start="151:25" pos:end="151:25"><name pos:start="151:25" pos:end="151:25">s</name></expr></argument>, <argument pos:start="151:28" pos:end="151:56"><expr pos:start="151:28" pos:end="151:56"><name pos:start="151:28" pos:end="151:56">AC97_Extended_Audio_Ctrl_Stat</name></expr></argument>)</argument_list></call> <operator pos:start="151:59" pos:end="151:59">&amp;</operator> <name pos:start="151:61" pos:end="151:68">EACS_VRA</name></expr>)</condition> <block pos:start="151:71" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:42">

            <expr_stmt pos:start="153:13" pos:end="153:40"><expr pos:start="153:13" pos:end="153:39"><call pos:start="153:13" pos:end="153:39"><name pos:start="153:13" pos:end="153:23">mixer_store</name> <argument_list pos:start="153:25" pos:end="153:39">(<argument pos:start="153:26" pos:end="153:26"><expr pos:start="153:26" pos:end="153:26"><name pos:start="153:26" pos:end="153:26">s</name></expr></argument>, <argument pos:start="153:29" pos:end="153:33"><expr pos:start="153:29" pos:end="153:33"><name pos:start="153:29" pos:end="153:33">index</name></expr></argument>, <argument pos:start="153:36" pos:end="153:38"><expr pos:start="153:36" pos:end="153:38"><name pos:start="153:36" pos:end="153:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:57"><expr pos:start="155:13" pos:end="155:56"><call pos:start="155:13" pos:end="155:56"><name pos:start="155:13" pos:end="155:17">dolog</name> <argument_list pos:start="155:19" pos:end="155:56">(<argument pos:start="155:20" pos:end="155:50"><expr pos:start="155:20" pos:end="155:50"><literal type="string" pos:start="155:20" pos:end="155:50">"Set front LR ADC rate to %d\n"</literal></expr></argument>, <argument pos:start="155:53" pos:end="155:55"><expr pos:start="155:53" pos:end="155:55"><name pos:start="155:53" pos:end="155:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:42"><expr pos:start="157:13" pos:end="157:41"><call pos:start="157:13" pos:end="157:41"><name pos:start="157:13" pos:end="157:22">open_voice</name> <argument_list pos:start="157:24" pos:end="157:41">(<argument pos:start="157:25" pos:end="157:25"><expr pos:start="157:25" pos:end="157:25"><name pos:start="157:25" pos:end="157:25">s</name></expr></argument>, <argument pos:start="157:28" pos:end="157:35"><expr pos:start="157:28" pos:end="157:35"><name pos:start="157:28" pos:end="157:35">PI_INDEX</name></expr></argument>, <argument pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><name pos:start="157:38" pos:end="157:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="161:9" pos:end="167:9">else <block pos:start="161:14" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:25">

            <expr_stmt pos:start="163:13" pos:end="165:25"><expr pos:start="163:13" pos:end="165:24"><call pos:start="163:13" pos:end="165:24"><name pos:start="163:13" pos:end="163:17">dolog</name> <argument_list pos:start="163:19" pos:end="165:24">(<argument pos:start="163:20" pos:end="163:75"><expr pos:start="163:20" pos:end="163:75"><literal type="string" pos:start="163:20" pos:end="163:75">"Attempt to set LR ADC rate to %d, but VRA is not set\n"</literal></expr></argument>,

                    <argument pos:start="165:21" pos:end="165:23"><expr pos:start="165:21" pos:end="165:23"><name pos:start="165:21" pos:end="165:23">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <default pos:start="171:5" pos:end="171:12">default:</default>

        <expr_stmt pos:start="173:9" pos:end="173:55"><expr pos:start="173:9" pos:end="173:54"><call pos:start="173:9" pos:end="173:54"><name pos:start="173:9" pos:end="173:13">dolog</name> <argument_list pos:start="173:15" pos:end="173:54">(<argument pos:start="173:16" pos:end="173:42"><expr pos:start="173:16" pos:end="173:42"><literal type="string" pos:start="173:16" pos:end="173:42">"U nam writew %#x &lt;- %#x\n"</literal></expr></argument>, <argument pos:start="173:45" pos:end="173:48"><expr pos:start="173:45" pos:end="173:48"><name pos:start="173:45" pos:end="173:48">addr</name></expr></argument>, <argument pos:start="173:51" pos:end="173:53"><expr pos:start="173:51" pos:end="173:53"><name pos:start="173:51" pos:end="173:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:36"><expr pos:start="175:9" pos:end="175:35"><call pos:start="175:9" pos:end="175:35"><name pos:start="175:9" pos:end="175:19">mixer_store</name> <argument_list pos:start="175:21" pos:end="175:35">(<argument pos:start="175:22" pos:end="175:22"><expr pos:start="175:22" pos:end="175:22"><name pos:start="175:22" pos:end="175:22">s</name></expr></argument>, <argument pos:start="175:25" pos:end="175:29"><expr pos:start="175:25" pos:end="175:29"><name pos:start="175:25" pos:end="175:29">index</name></expr></argument>, <argument pos:start="175:32" pos:end="175:34"><expr pos:start="175:32" pos:end="175:34"><name pos:start="175:32" pos:end="175:34">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
