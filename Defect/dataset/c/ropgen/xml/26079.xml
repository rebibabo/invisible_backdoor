<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26079.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">decode_ics_info</name><parameter_list pos:start="1:27" pos:end="3:45">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:37">AACContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">ac</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:71"><decl pos:start="1:44" pos:end="1:71"><type pos:start="1:44" pos:end="1:71"><name pos:start="1:44" pos:end="1:66">IndividualChannelStream</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">ics</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:44"><decl pos:start="3:28" pos:end="3:44"><type pos:start="3:28" pos:end="3:44"><name pos:start="3:28" pos:end="3:40">GetBitContext</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:44">gb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="195:1">{<block_content pos:start="7:5" pos:end="193:13">

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:33"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:26">MPEG4AudioConfig</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier><specifier pos:start="7:29" pos:end="7:33">const</specifier></type> <name pos:start="7:35" pos:end="7:38">m4ac</name> <init pos:start="7:40" pos:end="7:56">= <expr pos:start="7:42" pos:end="7:56"><operator pos:start="7:42" pos:end="7:42">&amp;</operator><name pos:start="7:43" pos:end="7:51"><name pos:start="7:43" pos:end="7:44">ac</name><operator pos:start="7:45" pos:end="7:46">-&gt;</operator><name pos:start="7:47" pos:end="7:48">oc</name><index pos:start="7:49" pos:end="7:51">[<expr pos:start="7:50" pos:end="7:50"><literal type="number" pos:start="7:50" pos:end="7:50">1</literal></expr>]</index></name><operator pos:start="7:52" pos:end="7:52">.</operator><name pos:start="7:53" pos:end="7:56">m4ac</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:17">aot</name> <init pos:start="9:19" pos:end="9:37">= <expr pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:24">m4ac</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:37">object_type</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:28">sampling_index</name> <init pos:start="11:30" pos:end="11:51">= <expr pos:start="11:32" pos:end="11:51"><name pos:start="11:32" pos:end="11:51"><name pos:start="11:32" pos:end="11:35">m4ac</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:51">sampling_index</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="47:5"><if pos:start="13:5" pos:end="47:5">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:11">aot</name> <operator pos:start="13:13" pos:end="13:14">!=</operator> <name pos:start="13:16" pos:end="13:29">AOT_ER_AAC_ELD</name></expr>)</condition> <block pos:start="13:32" pos:end="47:5">{<block_content pos:start="15:9" pos:end="45:48">

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:26">(<expr pos:start="15:13" pos:end="15:25"><call pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:21">get_bits1</name><argument_list pos:start="15:22" pos:end="15:25">(<argument pos:start="15:23" pos:end="15:24"><expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:28" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:39">

            <expr_stmt pos:start="17:13" pos:end="17:67"><expr pos:start="17:13" pos:end="17:66"><call pos:start="17:13" pos:end="17:66"><name pos:start="17:13" pos:end="17:18">av_log</name><argument_list pos:start="17:19" pos:end="17:66">(<argument pos:start="17:20" pos:end="17:28"><expr pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:21">ac</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:28">avctx</name></name></expr></argument>, <argument pos:start="17:31" pos:end="17:42"><expr pos:start="17:31" pos:end="17:42"><name pos:start="17:31" pos:end="17:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:45" pos:end="17:65"><expr pos:start="17:45" pos:end="17:65"><literal type="string" pos:start="17:45" pos:end="17:65">"Reserved bit set.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="19:13" pos:end="19:39">return <expr pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:11">ics</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:28">window_sequence</name><index pos:start="23:29" pos:end="23:31">[<expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">1</literal></expr>]</index></name> <operator pos:start="23:33" pos:end="23:33">=</operator> <name pos:start="23:35" pos:end="23:57"><name pos:start="23:35" pos:end="23:37">ics</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:54">window_sequence</name><index pos:start="23:55" pos:end="23:57">[<expr pos:start="23:56" pos:end="23:56"><literal type="number" pos:start="23:56" pos:end="23:56">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:50"><expr pos:start="25:9" pos:end="25:49"><name pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:11">ics</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:28">window_sequence</name><index pos:start="25:29" pos:end="25:31">[<expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">0</literal></expr>]</index></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <call pos:start="25:35" pos:end="25:49"><name pos:start="25:35" pos:end="25:42">get_bits</name><argument_list pos:start="25:43" pos:end="25:49">(<argument pos:start="25:44" pos:end="25:45"><expr pos:start="25:44" pos:end="25:45"><name pos:start="25:44" pos:end="25:45">gb</name></expr></argument>, <argument pos:start="25:48" pos:end="25:48"><expr pos:start="25:48" pos:end="25:48"><literal type="number" pos:start="25:48" pos:end="25:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="41:9"><if pos:start="27:9" pos:end="41:9">if <condition pos:start="27:12" pos:end="29:58">(<expr pos:start="27:13" pos:end="29:57"><name pos:start="27:13" pos:end="27:15">aot</name> <operator pos:start="27:17" pos:end="27:18">==</operator> <name pos:start="27:20" pos:end="27:32">AOT_ER_AAC_LD</name> <operator pos:start="27:34" pos:end="27:35">&amp;&amp;</operator>

            <name pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:15">ics</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:32">window_sequence</name><index pos:start="29:33" pos:end="29:35">[<expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">0</literal></expr>]</index></name> <operator pos:start="29:37" pos:end="29:38">!=</operator> <name pos:start="29:40" pos:end="29:57">ONLY_LONG_SEQUENCE</name></expr>)</condition> <block pos:start="29:60" pos:end="41:9">{<block_content pos:start="31:13" pos:end="39:39">

            <expr_stmt pos:start="31:13" pos:end="35:75"><expr pos:start="31:13" pos:end="35:74"><call pos:start="31:13" pos:end="35:74"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="35:74">(<argument pos:start="31:20" pos:end="31:28"><expr pos:start="31:20" pos:end="31:28"><name pos:start="31:20" pos:end="31:28"><name pos:start="31:20" pos:end="31:21">ac</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">avctx</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:42">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="33:20" pos:end="35:48"><expr pos:start="33:20" pos:end="35:48"><literal type="string" pos:start="33:20" pos:end="33:71">"AAC LD is only defined for ONLY_LONG_SEQUENCE but "</literal>

                   <literal type="string" pos:start="35:20" pos:end="35:48">"window sequence %d found.\n"</literal></expr></argument>, <argument pos:start="35:51" pos:end="35:73"><expr pos:start="35:51" pos:end="35:73"><name pos:start="35:51" pos:end="35:73"><name pos:start="35:51" pos:end="35:53">ics</name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:70">window_sequence</name><index pos:start="35:71" pos:end="35:73">[<expr pos:start="35:72" pos:end="35:72"><literal type="number" pos:start="35:72" pos:end="35:72">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:57"><expr pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:15">ics</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:32">window_sequence</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr>]</index></name> <operator pos:start="37:37" pos:end="37:37">=</operator> <name pos:start="37:39" pos:end="37:56">ONLY_LONG_SEQUENCE</name></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:39">return <expr pos:start="39:20" pos:end="39:38"><name pos:start="39:20" pos:end="39:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:11">ics</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:26">use_kb_window</name><index pos:start="43:27" pos:end="43:29">[<expr pos:start="43:28" pos:end="43:28"><literal type="number" pos:start="43:28" pos:end="43:28">1</literal></expr>]</index></name>   <operator pos:start="43:33" pos:end="43:33">=</operator> <name pos:start="43:35" pos:end="43:55"><name pos:start="43:35" pos:end="43:37">ics</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:52">use_kb_window</name><index pos:start="43:53" pos:end="43:55">[<expr pos:start="43:54" pos:end="43:54"><literal type="number" pos:start="43:54" pos:end="43:54">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:11">ics</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:26">use_kb_window</name><index pos:start="45:27" pos:end="45:29">[<expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">0</literal></expr>]</index></name>   <operator pos:start="45:33" pos:end="45:33">=</operator> <call pos:start="45:35" pos:end="45:47"><name pos:start="45:35" pos:end="45:43">get_bits1</name><argument_list pos:start="45:44" pos:end="45:47">(<argument pos:start="45:45" pos:end="45:46"><expr pos:start="45:45" pos:end="45:46"><name pos:start="45:45" pos:end="45:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:32"><expr pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:7">ics</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:26">num_window_groups</name></name>  <operator pos:start="49:29" pos:end="49:29">=</operator> <literal type="number" pos:start="49:31" pos:end="49:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:7">ics</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:18">group_len</name><index pos:start="51:19" pos:end="51:21">[<expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>]</index></name>       <operator pos:start="51:29" pos:end="51:29">=</operator> <literal type="number" pos:start="51:31" pos:end="51:31">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="173:5"><if pos:start="53:5" pos:end="85:5">if <condition pos:start="53:8" pos:end="53:56">(<expr pos:start="53:9" pos:end="53:55"><name pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:11">ics</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:28">window_sequence</name><index pos:start="53:29" pos:end="53:31">[<expr pos:start="53:30" pos:end="53:30"><literal type="number" pos:start="53:30" pos:end="53:30">0</literal></expr>]</index></name> <operator pos:start="53:33" pos:end="53:34">==</operator> <name pos:start="53:36" pos:end="53:55">EIGHT_SHORT_SEQUENCE</name></expr>)</condition> <block pos:start="53:58" pos:end="85:5">{<block_content pos:start="55:9" pos:end="83:35">

        <decl_stmt pos:start="55:9" pos:end="55:14"><decl pos:start="55:9" pos:end="55:13"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:11">ics</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:20">max_sfb</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:31">get_bits</name><argument_list pos:start="57:32" pos:end="57:38">(<argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">gb</name></expr></argument>, <argument pos:start="57:37" pos:end="57:37"><expr pos:start="57:37" pos:end="57:37"><literal type="number" pos:start="57:37" pos:end="57:37">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="73:9">for <control pos:start="59:13" pos:end="59:31">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:25"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <literal type="number" pos:start="59:25" pos:end="59:25">7</literal></expr>;</condition> <incr pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><name pos:start="59:28" pos:end="59:28">i</name><operator pos:start="59:29" pos:end="59:30">++</operator></expr></incr>)</control> <block pos:start="59:33" pos:end="73:9">{<block_content pos:start="61:13" pos:end="71:13">

            <if_stmt pos:start="61:13" pos:end="71:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:30">(<expr pos:start="61:17" pos:end="61:29"><call pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:25">get_bits1</name><argument_list pos:start="61:26" pos:end="61:29">(<argument pos:start="61:27" pos:end="61:28"><expr pos:start="61:27" pos:end="61:28"><name pos:start="61:27" pos:end="61:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:32" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:61">

                <expr_stmt pos:start="63:17" pos:end="63:61"><expr pos:start="63:17" pos:end="63:60"><name pos:start="63:17" pos:end="63:58"><name pos:start="63:17" pos:end="63:19">ics</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:30">group_len</name><index pos:start="63:31" pos:end="63:58">[<expr pos:start="63:32" pos:end="63:57"><name pos:start="63:32" pos:end="63:53"><name pos:start="63:32" pos:end="63:34">ics</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:53">num_window_groups</name></name> <operator pos:start="63:55" pos:end="63:55">-</operator> <literal type="number" pos:start="63:57" pos:end="63:57">1</literal></expr>]</index></name><operator pos:start="63:59" pos:end="63:60">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="65:15" pos:end="71:13">else <block pos:start="65:20" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:63">

                <expr_stmt pos:start="67:17" pos:end="67:41"><expr pos:start="67:17" pos:end="67:40"><name pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:19">ics</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:38">num_window_groups</name></name><operator pos:start="67:39" pos:end="67:40">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:63"><expr pos:start="69:17" pos:end="69:62"><name pos:start="69:17" pos:end="69:58"><name pos:start="69:17" pos:end="69:19">ics</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:30">group_len</name><index pos:start="69:31" pos:end="69:58">[<expr pos:start="69:32" pos:end="69:57"><name pos:start="69:32" pos:end="69:53"><name pos:start="69:32" pos:end="69:34">ics</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:53">num_window_groups</name></name> <operator pos:start="69:55" pos:end="69:55">-</operator> <literal type="number" pos:start="69:57" pos:end="69:57">1</literal></expr>]</index></name> <operator pos:start="69:60" pos:end="69:60">=</operator> <literal type="number" pos:start="69:62" pos:end="69:62">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:11">ics</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:24">num_windows</name></name>       <operator pos:start="75:32" pos:end="75:32">=</operator> <literal type="number" pos:start="75:34" pos:end="75:34">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:70"><expr pos:start="77:9" pos:end="77:69"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:11">ics</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:23">swb_offset</name></name>        <operator pos:start="77:32" pos:end="77:32">=</operator>    <name pos:start="77:37" pos:end="77:69"><name pos:start="77:37" pos:end="77:53">ff_swb_offset_128</name><index pos:start="77:54" pos:end="77:69">[<expr pos:start="77:55" pos:end="77:68"><name pos:start="77:55" pos:end="77:68">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:70"><expr pos:start="79:9" pos:end="79:69"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:11">ics</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:20">num_swb</name></name>           <operator pos:start="79:32" pos:end="79:32">=</operator>   <name pos:start="79:36" pos:end="79:69"><name pos:start="79:36" pos:end="79:53">ff_aac_num_swb_128</name><index pos:start="79:54" pos:end="79:69">[<expr pos:start="79:55" pos:end="79:68"><name pos:start="79:55" pos:end="79:68">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:70"><expr pos:start="81:9" pos:end="81:69"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:11">ics</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:26">tns_max_bands</name></name>     <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:69"><name pos:start="81:34" pos:end="81:53">ff_tns_max_bands_128</name><index pos:start="81:54" pos:end="81:69">[<expr pos:start="81:55" pos:end="81:68"><name pos:start="81:55" pos:end="81:68">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:35"><expr pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:11">ics</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:30">predictor_present</name></name> <operator pos:start="83:32" pos:end="83:32">=</operator> <literal type="number" pos:start="83:34" pos:end="83:34">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="173:5">else <block pos:start="85:12" pos:end="173:5">{<block_content pos:start="87:9" pos:end="171:9">

        <expr_stmt pos:start="87:9" pos:end="87:49"><expr pos:start="87:9" pos:end="87:48"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:11">ics</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:20">max_sfb</name></name>           <operator pos:start="87:32" pos:end="87:32">=</operator> <call pos:start="87:34" pos:end="87:48"><name pos:start="87:34" pos:end="87:41">get_bits</name><argument_list pos:start="87:42" pos:end="87:48">(<argument pos:start="87:43" pos:end="87:44"><expr pos:start="87:43" pos:end="87:44"><name pos:start="87:43" pos:end="87:44">gb</name></expr></argument>, <argument pos:start="87:47" pos:end="87:47"><expr pos:start="87:47" pos:end="87:47"><literal type="number" pos:start="87:47" pos:end="87:47">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:35"><expr pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:11">ics</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:24">num_windows</name></name>       <operator pos:start="89:32" pos:end="89:32">=</operator> <literal type="number" pos:start="89:34" pos:end="89:34">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="123:9"><if pos:start="91:9" pos:end="115:9">if <condition pos:start="91:12" pos:end="91:58">(<expr pos:start="91:13" pos:end="91:57"><name pos:start="91:13" pos:end="91:15">aot</name> <operator pos:start="91:17" pos:end="91:18">==</operator> <name pos:start="91:20" pos:end="91:32">AOT_ER_AAC_LD</name> <operator pos:start="91:34" pos:end="91:35">||</operator> <name pos:start="91:37" pos:end="91:39">aot</name> <operator pos:start="91:41" pos:end="91:42">==</operator> <name pos:start="91:44" pos:end="91:57">AOT_ER_AAC_ELD</name></expr>)</condition> <block pos:start="91:60" pos:end="115:9">{<block_content pos:start="93:13" pos:end="113:35">

            <if_stmt pos:start="93:13" pos:end="109:13"><if pos:start="93:13" pos:end="101:13">if <condition pos:start="93:16" pos:end="93:41">(<expr pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:20">m4ac</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:40">frame_length_short</name></name></expr>)</condition> <block pos:start="93:43" pos:end="101:13">{<block_content pos:start="95:17" pos:end="99:75">

                <expr_stmt pos:start="95:17" pos:end="95:75"><expr pos:start="95:17" pos:end="95:74"><name pos:start="95:17" pos:end="95:31"><name pos:start="95:17" pos:end="95:19">ics</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:31">swb_offset</name></name>    <operator pos:start="95:36" pos:end="95:36">=</operator>     <name pos:start="95:42" pos:end="95:74"><name pos:start="95:42" pos:end="95:58">ff_swb_offset_480</name><index pos:start="95:59" pos:end="95:74">[<expr pos:start="95:60" pos:end="95:73"><name pos:start="95:60" pos:end="95:73">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:75"><expr pos:start="97:17" pos:end="97:74"><name pos:start="97:17" pos:end="97:28"><name pos:start="97:17" pos:end="97:19">ics</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:28">num_swb</name></name>       <operator pos:start="97:36" pos:end="97:36">=</operator>    <name pos:start="97:41" pos:end="97:74"><name pos:start="97:41" pos:end="97:58">ff_aac_num_swb_480</name><index pos:start="97:59" pos:end="97:74">[<expr pos:start="97:60" pos:end="97:73"><name pos:start="97:60" pos:end="97:73">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:75"><expr pos:start="99:17" pos:end="99:74"><name pos:start="99:17" pos:end="99:34"><name pos:start="99:17" pos:end="99:19">ics</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:34">tns_max_bands</name></name> <operator pos:start="99:36" pos:end="99:36">=</operator>  <name pos:start="99:39" pos:end="99:74"><name pos:start="99:39" pos:end="99:58">ff_tns_max_bands_480</name><index pos:start="99:59" pos:end="99:74">[<expr pos:start="99:60" pos:end="99:73"><name pos:start="99:60" pos:end="99:73">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="101:15" pos:end="109:13">else <block pos:start="101:20" pos:end="109:13">{<block_content pos:start="103:17" pos:end="107:75">

                <expr_stmt pos:start="103:17" pos:end="103:75"><expr pos:start="103:17" pos:end="103:74"><name pos:start="103:17" pos:end="103:31"><name pos:start="103:17" pos:end="103:19">ics</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:31">swb_offset</name></name>    <operator pos:start="103:36" pos:end="103:36">=</operator>     <name pos:start="103:42" pos:end="103:74"><name pos:start="103:42" pos:end="103:58">ff_swb_offset_512</name><index pos:start="103:59" pos:end="103:74">[<expr pos:start="103:60" pos:end="103:73"><name pos:start="103:60" pos:end="103:73">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:75"><expr pos:start="105:17" pos:end="105:74"><name pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:19">ics</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:28">num_swb</name></name>       <operator pos:start="105:36" pos:end="105:36">=</operator>    <name pos:start="105:41" pos:end="105:74"><name pos:start="105:41" pos:end="105:58">ff_aac_num_swb_512</name><index pos:start="105:59" pos:end="105:74">[<expr pos:start="105:60" pos:end="105:73"><name pos:start="105:60" pos:end="105:73">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:75"><expr pos:start="107:17" pos:end="107:74"><name pos:start="107:17" pos:end="107:34"><name pos:start="107:17" pos:end="107:19">ics</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:34">tns_max_bands</name></name> <operator pos:start="107:36" pos:end="107:36">=</operator>  <name pos:start="107:39" pos:end="107:74"><name pos:start="107:39" pos:end="107:58">ff_tns_max_bands_512</name><index pos:start="107:59" pos:end="107:74">[<expr pos:start="107:60" pos:end="107:73"><name pos:start="107:60" pos:end="107:73">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="111:13" pos:end="113:35"><if pos:start="111:13" pos:end="113:35">if <condition pos:start="111:16" pos:end="111:50">(<expr pos:start="111:17" pos:end="111:49"><operator pos:start="111:17" pos:end="111:17">!</operator><name pos:start="111:18" pos:end="111:29"><name pos:start="111:18" pos:end="111:20">ics</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:29">num_swb</name></name> <operator pos:start="111:31" pos:end="111:32">||</operator> <operator pos:start="111:34" pos:end="111:34">!</operator><name pos:start="111:35" pos:end="111:49"><name pos:start="111:35" pos:end="111:37">ics</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:49">swb_offset</name></name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:35"><block_content pos:start="113:17" pos:end="113:35">

                <return pos:start="113:17" pos:end="113:35">return <expr pos:start="113:24" pos:end="113:34"><name pos:start="113:24" pos:end="113:34">AVERROR_BUG</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="123:9">else <block pos:start="115:16" pos:end="123:9">{<block_content pos:start="117:13" pos:end="121:71">

            <expr_stmt pos:start="117:13" pos:end="117:71"><expr pos:start="117:13" pos:end="117:70"><name pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:15">ics</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:27">swb_offset</name></name>    <operator pos:start="117:32" pos:end="117:32">=</operator>    <name pos:start="117:37" pos:end="117:70"><name pos:start="117:37" pos:end="117:54">ff_swb_offset_1024</name><index pos:start="117:55" pos:end="117:70">[<expr pos:start="117:56" pos:end="117:69"><name pos:start="117:56" pos:end="117:69">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:71"><expr pos:start="119:13" pos:end="119:70"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:15">ics</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:24">num_swb</name></name>       <operator pos:start="119:32" pos:end="119:32">=</operator>   <name pos:start="119:36" pos:end="119:70"><name pos:start="119:36" pos:end="119:54">ff_aac_num_swb_1024</name><index pos:start="119:55" pos:end="119:70">[<expr pos:start="119:56" pos:end="119:69"><name pos:start="119:56" pos:end="119:69">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:71"><expr pos:start="121:13" pos:end="121:70"><name pos:start="121:13" pos:end="121:30"><name pos:start="121:13" pos:end="121:15">ics</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:30">tns_max_bands</name></name> <operator pos:start="121:32" pos:end="121:32">=</operator> <name pos:start="121:34" pos:end="121:70"><name pos:start="121:34" pos:end="121:54">ff_tns_max_bands_1024</name><index pos:start="121:55" pos:end="121:70">[<expr pos:start="121:56" pos:end="121:69"><name pos:start="121:56" pos:end="121:69">sampling_index</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="125:9" pos:end="131:9"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="125:34">(<expr pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:15">aot</name> <operator pos:start="125:17" pos:end="125:18">!=</operator> <name pos:start="125:20" pos:end="125:33">AOT_ER_AAC_ELD</name></expr>)</condition> <block pos:start="125:36" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:43">

            <expr_stmt pos:start="127:13" pos:end="127:55"><expr pos:start="127:13" pos:end="127:54"><name pos:start="127:13" pos:end="127:34"><name pos:start="127:13" pos:end="127:15">ics</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:34">predictor_present</name></name>     <operator pos:start="127:40" pos:end="127:40">=</operator> <call pos:start="127:42" pos:end="127:54"><name pos:start="127:42" pos:end="127:50">get_bits1</name><argument_list pos:start="127:51" pos:end="127:54">(<argument pos:start="127:52" pos:end="127:53"><expr pos:start="127:52" pos:end="127:53"><name pos:start="127:52" pos:end="127:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:43"><expr pos:start="129:13" pos:end="129:42"><name pos:start="129:13" pos:end="129:38"><name pos:start="129:13" pos:end="129:15">ics</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:38">predictor_reset_group</name></name> <operator pos:start="129:40" pos:end="129:40">=</operator> <literal type="number" pos:start="129:42" pos:end="129:42">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="133:9" pos:end="171:9"><if pos:start="133:9" pos:end="171:9">if <condition pos:start="133:12" pos:end="133:35">(<expr pos:start="133:13" pos:end="133:34"><name pos:start="133:13" pos:end="133:34"><name pos:start="133:13" pos:end="133:15">ics</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:34">predictor_present</name></name></expr>)</condition> <block pos:start="133:37" pos:end="171:9">{<block_content pos:start="135:13" pos:end="169:13">

            <if_stmt pos:start="135:13" pos:end="169:13"><if pos:start="135:13" pos:end="143:13">if <condition pos:start="135:16" pos:end="135:36">(<expr pos:start="135:17" pos:end="135:35"><name pos:start="135:17" pos:end="135:19">aot</name> <operator pos:start="135:21" pos:end="135:22">==</operator> <name pos:start="135:24" pos:end="135:35">AOT_AAC_MAIN</name></expr>)</condition> <block pos:start="135:38" pos:end="143:13">{<block_content pos:start="137:17" pos:end="141:17">

                <if_stmt pos:start="137:17" pos:end="141:17"><if pos:start="137:17" pos:end="141:17">if <condition pos:start="137:20" pos:end="137:51">(<expr pos:start="137:21" pos:end="137:50"><call pos:start="137:21" pos:end="137:50"><name pos:start="137:21" pos:end="137:37">decode_prediction</name><argument_list pos:start="137:38" pos:end="137:50">(<argument pos:start="137:39" pos:end="137:40"><expr pos:start="137:39" pos:end="137:40"><name pos:start="137:39" pos:end="137:40">ac</name></expr></argument>, <argument pos:start="137:43" pos:end="137:45"><expr pos:start="137:43" pos:end="137:45"><name pos:start="137:43" pos:end="137:45">ics</name></expr></argument>, <argument pos:start="137:48" pos:end="137:49"><expr pos:start="137:48" pos:end="137:49"><name pos:start="137:48" pos:end="137:49">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:53" pos:end="141:17">{<block_content pos:start="139:21" pos:end="139:47">

                    <return pos:start="139:21" pos:end="139:47">return <expr pos:start="139:28" pos:end="139:46"><name pos:start="139:28" pos:end="139:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="143:15" pos:end="153:13">else if <condition pos:start="143:23" pos:end="145:44">(<expr pos:start="143:24" pos:end="145:43"><name pos:start="143:24" pos:end="143:26">aot</name> <operator pos:start="143:28" pos:end="143:29">==</operator> <name pos:start="143:31" pos:end="143:40">AOT_AAC_LC</name> <operator pos:start="143:42" pos:end="143:43">||</operator>

                       <name pos:start="145:24" pos:end="145:26">aot</name> <operator pos:start="145:28" pos:end="145:29">==</operator> <name pos:start="145:31" pos:end="145:43">AOT_ER_AAC_LC</name></expr>)</condition> <block pos:start="145:46" pos:end="153:13">{<block_content pos:start="147:17" pos:end="151:43">

                <expr_stmt pos:start="147:17" pos:end="149:65"><expr pos:start="147:17" pos:end="149:64"><call pos:start="147:17" pos:end="149:64"><name pos:start="147:17" pos:end="147:22">av_log</name><argument_list pos:start="147:23" pos:end="149:64">(<argument pos:start="147:24" pos:end="147:32"><expr pos:start="147:24" pos:end="147:32"><name pos:start="147:24" pos:end="147:32"><name pos:start="147:24" pos:end="147:25">ac</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:32">avctx</name></name></expr></argument>, <argument pos:start="147:35" pos:end="147:46"><expr pos:start="147:35" pos:end="147:46"><name pos:start="147:35" pos:end="147:46">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="149:24" pos:end="149:63"><expr pos:start="149:24" pos:end="149:63"><literal type="string" pos:start="149:24" pos:end="149:63">"Prediction is not allowed in AAC-LC.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="151:17" pos:end="151:43">return <expr pos:start="151:24" pos:end="151:42"><name pos:start="151:24" pos:end="151:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="153:15" pos:end="169:13">else <block pos:start="153:20" pos:end="169:13">{<block_content pos:start="155:17" pos:end="167:60">

                <if_stmt pos:start="155:17" pos:end="163:17"><if pos:start="155:17" pos:end="163:17">if <condition pos:start="155:20" pos:end="155:41">(<expr pos:start="155:21" pos:end="155:40"><name pos:start="155:21" pos:end="155:23">aot</name> <operator pos:start="155:25" pos:end="155:26">==</operator> <name pos:start="155:28" pos:end="155:40">AOT_ER_AAC_LD</name></expr>)</condition> <block pos:start="155:43" pos:end="163:17">{<block_content pos:start="157:21" pos:end="161:48">

                    <expr_stmt pos:start="157:21" pos:end="159:70"><expr pos:start="157:21" pos:end="159:69"><call pos:start="157:21" pos:end="159:69"><name pos:start="157:21" pos:end="157:26">av_log</name><argument_list pos:start="157:27" pos:end="159:69">(<argument pos:start="157:28" pos:end="157:36"><expr pos:start="157:28" pos:end="157:36"><name pos:start="157:28" pos:end="157:36"><name pos:start="157:28" pos:end="157:29">ac</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:36">avctx</name></name></expr></argument>, <argument pos:start="157:39" pos:end="157:50"><expr pos:start="157:39" pos:end="157:50"><name pos:start="157:39" pos:end="157:50">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="159:28" pos:end="159:68"><expr pos:start="159:28" pos:end="159:68"><literal type="string" pos:start="159:28" pos:end="159:68">"LTP in ER AAC LD not yet implemented.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="161:21" pos:end="161:48">return <expr pos:start="161:28" pos:end="161:47"><name pos:start="161:28" pos:end="161:47">AVERROR_PATCHWELCOME</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="165:17" pos:end="167:60"><if pos:start="165:17" pos:end="167:60">if <condition pos:start="165:20" pos:end="165:57">(<expr pos:start="165:21" pos:end="165:56"><operator pos:start="165:21" pos:end="165:21">(</operator><name pos:start="165:22" pos:end="165:37"><name pos:start="165:22" pos:end="165:24">ics</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:29">ltp</name><operator pos:start="165:30" pos:end="165:30">.</operator><name pos:start="165:31" pos:end="165:37">present</name></name> <operator pos:start="165:39" pos:end="165:39">=</operator> <call pos:start="165:41" pos:end="165:55"><name pos:start="165:41" pos:end="165:48">get_bits</name><argument_list pos:start="165:49" pos:end="165:55">(<argument pos:start="165:50" pos:end="165:51"><expr pos:start="165:50" pos:end="165:51"><name pos:start="165:50" pos:end="165:51">gb</name></expr></argument>, <argument pos:start="165:54" pos:end="165:54"><expr pos:start="165:54" pos:end="165:54"><literal type="number" pos:start="165:54" pos:end="165:54">1</literal></expr></argument>)</argument_list></call><operator pos:start="165:56" pos:end="165:56">)</operator></expr>)</condition><block type="pseudo" pos:start="167:21" pos:end="167:60"><block_content pos:start="167:21" pos:end="167:60">

                    <expr_stmt pos:start="167:21" pos:end="167:60"><expr pos:start="167:21" pos:end="167:59"><call pos:start="167:21" pos:end="167:59"><name pos:start="167:21" pos:end="167:30">decode_ltp</name><argument_list pos:start="167:31" pos:end="167:59">(<argument pos:start="167:32" pos:end="167:40"><expr pos:start="167:32" pos:end="167:40"><operator pos:start="167:32" pos:end="167:32">&amp;</operator><name pos:start="167:33" pos:end="167:40"><name pos:start="167:33" pos:end="167:35">ics</name><operator pos:start="167:36" pos:end="167:37">-&gt;</operator><name pos:start="167:38" pos:end="167:40">ltp</name></name></expr></argument>, <argument pos:start="167:43" pos:end="167:44"><expr pos:start="167:43" pos:end="167:44"><name pos:start="167:43" pos:end="167:44">gb</name></expr></argument>, <argument pos:start="167:47" pos:end="167:58"><expr pos:start="167:47" pos:end="167:58"><name pos:start="167:47" pos:end="167:58"><name pos:start="167:47" pos:end="167:49">ics</name><operator pos:start="167:50" pos:end="167:51">-&gt;</operator><name pos:start="167:52" pos:end="167:58">max_sfb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="177:5" pos:end="189:5"><if pos:start="177:5" pos:end="189:5">if <condition pos:start="177:8" pos:end="177:36">(<expr pos:start="177:9" pos:end="177:35"><name pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:11">ics</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:20">max_sfb</name></name> <operator pos:start="177:22" pos:end="177:22">&gt;</operator> <name pos:start="177:24" pos:end="177:35"><name pos:start="177:24" pos:end="177:26">ics</name><operator pos:start="177:27" pos:end="177:28">-&gt;</operator><name pos:start="177:29" pos:end="177:35">num_swb</name></name></expr>)</condition> <block pos:start="177:38" pos:end="189:5">{<block_content pos:start="179:9" pos:end="187:35">

        <expr_stmt pos:start="179:9" pos:end="185:43"><expr pos:start="179:9" pos:end="185:42"><call pos:start="179:9" pos:end="185:42"><name pos:start="179:9" pos:end="179:14">av_log</name><argument_list pos:start="179:15" pos:end="185:42">(<argument pos:start="179:16" pos:end="179:24"><expr pos:start="179:16" pos:end="179:24"><name pos:start="179:16" pos:end="179:24"><name pos:start="179:16" pos:end="179:17">ac</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:24">avctx</name></name></expr></argument>, <argument pos:start="179:27" pos:end="179:38"><expr pos:start="179:27" pos:end="179:38"><name pos:start="179:27" pos:end="179:38">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="181:16" pos:end="183:38"><expr pos:start="181:16" pos:end="183:38"><literal type="string" pos:start="181:16" pos:end="181:59">"Number of scalefactor bands in group (%d) "</literal>

               <literal type="string" pos:start="183:16" pos:end="183:38">"exceeds limit (%d).\n"</literal></expr></argument>,

               <argument pos:start="185:16" pos:end="185:27"><expr pos:start="185:16" pos:end="185:27"><name pos:start="185:16" pos:end="185:27"><name pos:start="185:16" pos:end="185:18">ics</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:27">max_sfb</name></name></expr></argument>, <argument pos:start="185:30" pos:end="185:41"><expr pos:start="185:30" pos:end="185:41"><name pos:start="185:30" pos:end="185:41"><name pos:start="185:30" pos:end="185:32">ics</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:41">num_swb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="187:9" pos:end="187:35">return <expr pos:start="187:16" pos:end="187:34"><name pos:start="187:16" pos:end="187:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="193:5" pos:end="193:13">return <expr pos:start="193:12" pos:end="193:12"><literal type="number" pos:start="193:12" pos:end="193:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
