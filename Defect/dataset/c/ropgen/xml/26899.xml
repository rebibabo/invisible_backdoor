<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26899.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">init_filter_param</name><parameter_list pos:start="1:29" pos:end="1:103">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:44">AVFilterContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:62">FilterParam</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">fp</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:91"><decl pos:start="1:69" pos:end="1:91"><type pos:start="1:69" pos:end="1:91"><specifier pos:start="1:69" pos:end="1:73">const</specifier> <name pos:start="1:75" pos:end="1:78">char</name> <modifier pos:start="1:80" pos:end="1:80">*</modifier></type><name pos:start="1:81" pos:end="1:91">effect_type</name></decl></parameter>, <parameter pos:start="1:94" pos:end="1:102"><decl pos:start="1:94" pos:end="1:102"><type pos:start="1:94" pos:end="1:102"><name pos:start="1:94" pos:end="1:96">int</name></type> <name pos:start="1:98" pos:end="1:102">width</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">z</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:88"><decl pos:start="7:5" pos:end="7:87"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">effect</name> <init pos:start="7:24" pos:end="7:87">= <expr pos:start="7:26" pos:end="7:87"><ternary pos:start="7:26" pos:end="7:87"><condition pos:start="7:26" pos:end="7:42"><expr pos:start="7:26" pos:end="7:40"><name pos:start="7:26" pos:end="7:35"><name pos:start="7:26" pos:end="7:27">fp</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:35">amount</name></name> <operator pos:start="7:37" pos:end="7:38">==</operator> <literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr> ?</condition><then pos:start="7:44" pos:end="7:49"> <expr pos:start="7:44" pos:end="7:49"><literal type="string" pos:start="7:44" pos:end="7:49">"none"</literal></expr> </then><else pos:start="7:51" pos:end="7:87">: <expr pos:start="7:53" pos:end="7:87"><ternary pos:start="7:53" pos:end="7:87"><condition pos:start="7:53" pos:end="7:68"><expr pos:start="7:53" pos:end="7:66"><name pos:start="7:53" pos:end="7:62"><name pos:start="7:53" pos:end="7:54">fp</name><operator pos:start="7:55" pos:end="7:56">-&gt;</operator><name pos:start="7:57" pos:end="7:62">amount</name></name> <operator pos:start="7:64" pos:end="7:64">&lt;</operator> <literal type="number" pos:start="7:66" pos:end="7:66">0</literal></expr> ?</condition><then pos:start="7:70" pos:end="7:75"> <expr pos:start="7:70" pos:end="7:75"><literal type="string" pos:start="7:70" pos:end="7:75">"blur"</literal></expr> </then><else pos:start="7:77" pos:end="7:87">: <expr pos:start="7:79" pos:end="7:87"><literal type="string" pos:start="7:79" pos:end="7:87">"sharpen"</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if  <condition pos:start="11:9" pos:end="11:42">(<expr pos:start="11:10" pos:end="11:41"><operator pos:start="11:10" pos:end="11:10">!</operator><operator pos:start="11:11" pos:end="11:11">(</operator><name pos:start="11:12" pos:end="11:22"><name pos:start="11:12" pos:end="11:13">fp</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:22">msize_x</name></name> <operator pos:start="11:24" pos:end="11:24">&amp;</operator> <name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:27">fp</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:36">msize_y</name></name> <operator pos:start="11:38" pos:end="11:38">&amp;</operator> <literal type="number" pos:start="11:40" pos:end="11:40">1</literal><operator pos:start="11:41" pos:end="11:41">)</operator></expr>)</condition> <block pos:start="11:44" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:31">

        <expr_stmt pos:start="13:9" pos:end="17:54"><expr pos:start="13:9" pos:end="17:53"><call pos:start="13:9" pos:end="17:53"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="17:53">(<argument pos:start="13:16" pos:end="13:18"><expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ctx</name></expr></argument>, <argument pos:start="13:21" pos:end="13:32"><expr pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="15:16" pos:end="15:61"><expr pos:start="15:16" pos:end="15:61"><literal type="string" pos:start="15:16" pos:end="15:61">"Invalid even size for %s matrix size %dx%d\n"</literal></expr></argument>,

               <argument pos:start="17:16" pos:end="17:26"><expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:26">effect_type</name></expr></argument>, <argument pos:start="17:29" pos:end="17:39"><expr pos:start="17:29" pos:end="17:39"><name pos:start="17:29" pos:end="17:39"><name pos:start="17:29" pos:end="17:30">fp</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:39">msize_x</name></name></expr></argument>, <argument pos:start="17:42" pos:end="17:52"><expr pos:start="17:42" pos:end="17:52"><name pos:start="17:42" pos:end="17:52"><name pos:start="17:42" pos:end="17:43">fp</name><operator pos:start="17:44" pos:end="17:45">-&gt;</operator><name pos:start="17:46" pos:end="17:52">msize_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:80"><expr pos:start="25:5" pos:end="27:79"><call pos:start="25:5" pos:end="27:79"><name pos:start="25:5" pos:end="25:10">av_log</name><argument_list pos:start="25:11" pos:end="27:79">(<argument pos:start="25:12" pos:end="25:14"><expr pos:start="25:12" pos:end="25:14"><name pos:start="25:12" pos:end="25:14">ctx</name></expr></argument>, <argument pos:start="25:17" pos:end="25:30"><expr pos:start="25:17" pos:end="25:30"><name pos:start="25:17" pos:end="25:30">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="25:33" pos:end="25:88"><expr pos:start="25:33" pos:end="25:88"><literal type="string" pos:start="25:33" pos:end="25:88">"effect:%s type:%s msize_x:%d msize_y:%d amount:%0.2f\n"</literal></expr></argument>,

           <argument pos:start="27:12" pos:end="27:17"><expr pos:start="27:12" pos:end="27:17"><name pos:start="27:12" pos:end="27:17">effect</name></expr></argument>, <argument pos:start="27:20" pos:end="27:30"><expr pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:30">effect_type</name></expr></argument>, <argument pos:start="27:33" pos:end="27:43"><expr pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:34">fp</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:43">msize_x</name></name></expr></argument>, <argument pos:start="27:46" pos:end="27:56"><expr pos:start="27:46" pos:end="27:56"><name pos:start="27:46" pos:end="27:56"><name pos:start="27:46" pos:end="27:47">fp</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:56">msize_y</name></name></expr></argument>, <argument pos:start="27:59" pos:end="27:78"><expr pos:start="27:59" pos:end="27:78"><name pos:start="27:59" pos:end="27:68"><name pos:start="27:59" pos:end="27:60">fp</name><operator pos:start="27:61" pos:end="27:62">-&gt;</operator><name pos:start="27:63" pos:end="27:68">amount</name></name> <operator pos:start="27:70" pos:end="27:70">/</operator> <literal type="number" pos:start="27:72" pos:end="27:78">65535.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="33:80">for <control pos:start="31:9" pos:end="31:41">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">z</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:17">z</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:21">2</literal> <operator pos:start="31:23" pos:end="31:23">*</operator> <name pos:start="31:25" pos:end="31:35"><name pos:start="31:25" pos:end="31:26">fp</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:35">steps_y</name></name></expr>;</condition> <incr pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:38">z</name><operator pos:start="31:39" pos:end="31:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="33:80"><block_content pos:start="33:9" pos:end="33:80">

        <expr_stmt pos:start="33:9" pos:end="33:80"><expr pos:start="33:9" pos:end="33:79"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:10">fp</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:14">sc</name><index pos:start="33:15" pos:end="33:17">[<expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">z</name></expr>]</index></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:79"><name pos:start="33:21" pos:end="33:29">av_malloc</name><argument_list pos:start="33:30" pos:end="33:79">(<argument pos:start="33:31" pos:end="33:78"><expr pos:start="33:31" pos:end="33:78"><sizeof pos:start="33:31" pos:end="33:50">sizeof<argument_list pos:start="33:37" pos:end="33:50">(<argument pos:start="33:38" pos:end="33:49"><expr pos:start="33:38" pos:end="33:49"><operator pos:start="33:38" pos:end="33:38">*</operator><operator pos:start="33:39" pos:end="33:39">(</operator><name pos:start="33:40" pos:end="33:48"><name pos:start="33:40" pos:end="33:41">fp</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:45">sc</name><index pos:start="33:46" pos:end="33:48">[<expr pos:start="33:47" pos:end="33:47"><name pos:start="33:47" pos:end="33:47">z</name></expr>]</index></name><operator pos:start="33:49" pos:end="33:49">)</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="33:52" pos:end="33:52">*</operator> <operator pos:start="33:54" pos:end="33:54">(</operator><name pos:start="33:55" pos:end="33:59">width</name> <operator pos:start="33:61" pos:end="33:61">+</operator> <literal type="number" pos:start="33:63" pos:end="33:63">2</literal> <operator pos:start="33:65" pos:end="33:65">*</operator> <name pos:start="33:67" pos:end="33:77"><name pos:start="33:67" pos:end="33:68">fp</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:77">steps_x</name></name><operator pos:start="33:78" pos:end="33:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
