<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7532.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">hevc_find_frame_end</name><parameter_list pos:start="1:31" pos:end="3:44">(<parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:54"><name pos:start="1:32" pos:end="1:51">AVCodecParserContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:43">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:25">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">HEVCParserContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">ctx</name> <init pos:start="7:28" pos:end="7:41">= <expr pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:16">ParseContext</name>       <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:26">pc</name> <init pos:start="9:28" pos:end="9:37">= <expr pos:start="9:30" pos:end="9:37"><operator pos:start="9:30" pos:end="9:30">&amp;</operator><name pos:start="9:31" pos:end="9:37"><name pos:start="9:31" pos:end="9:33">ctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:37">pc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="71:5">for <control pos:start="15:9" pos:end="15:34">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:29"><expr pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:28">buf_size</name></expr>;</condition> <incr pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:31">i</name><operator pos:start="15:32" pos:end="15:33">++</operator></expr></incr>)</control> <block pos:start="15:36" pos:end="71:5">{<block_content pos:start="17:9" pos:end="69:9">

        <decl_stmt pos:start="17:9" pos:end="17:16"><decl pos:start="17:9" pos:end="17:15"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:15">nut</name></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:10">pc</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:19">state64</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <operator pos:start="21:23" pos:end="21:23">(</operator><name pos:start="21:24" pos:end="21:34"><name pos:start="21:24" pos:end="21:25">pc</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:34">state64</name></name> <operator pos:start="21:36" pos:end="21:37">&lt;&lt;</operator> <literal type="number" pos:start="21:39" pos:end="21:39">8</literal><operator pos:start="21:40" pos:end="21:40">)</operator> <operator pos:start="21:42" pos:end="21:42">|</operator> <name pos:start="21:44" pos:end="21:49"><name pos:start="21:44" pos:end="21:46">buf</name><index pos:start="21:47" pos:end="21:49">[<expr pos:start="21:48" pos:end="21:48"><name pos:start="21:48" pos:end="21:48">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="25:9" pos:end="27:21"><if pos:start="25:9" pos:end="27:21">if <condition pos:start="25:12" pos:end="25:62">(<expr pos:start="25:13" pos:end="25:61"><operator pos:start="25:13" pos:end="25:13">(</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:25"><name pos:start="25:15" pos:end="25:16">pc</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:25">state64</name></name> <operator pos:start="25:27" pos:end="25:28">&gt;&gt;</operator> <literal type="number" pos:start="25:30" pos:end="25:30">3</literal> <operator pos:start="25:32" pos:end="25:32">*</operator> <literal type="number" pos:start="25:34" pos:end="25:34">8</literal><operator pos:start="25:35" pos:end="25:35">)</operator> <operator pos:start="25:37" pos:end="25:37">&amp;</operator> <literal type="number" pos:start="25:39" pos:end="25:46">0xFFFFFF</literal><operator pos:start="25:47" pos:end="25:47">)</operator> <operator pos:start="25:49" pos:end="25:50">!=</operator> <name pos:start="25:52" pos:end="25:61">START_CODE</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <continue pos:start="27:13" pos:end="27:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:48"><expr pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:11">nut</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <operator pos:start="31:15" pos:end="31:15">(</operator><name pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:17">pc</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:26">state64</name></name> <operator pos:start="31:28" pos:end="31:29">&gt;&gt;</operator> <literal type="number" pos:start="31:31" pos:end="31:31">2</literal> <operator pos:start="31:33" pos:end="31:33">*</operator> <literal type="number" pos:start="31:35" pos:end="31:37">8</literal> <operator pos:start="31:37" pos:end="31:37">+</operator> <literal type="number" pos:start="31:39" pos:end="31:39">1</literal><operator pos:start="31:40" pos:end="31:40">)</operator> <operator pos:start="31:42" pos:end="31:42">&amp;</operator> <literal type="number" pos:start="31:44" pos:end="31:47">0x3F</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="33:9" pos:end="33:35">// Beginning of access unit</comment>

        <if_stmt pos:start="35:9" pos:end="69:9"><if pos:start="35:9" pos:end="47:9">if <condition pos:start="35:12" pos:end="37:65">(<expr pos:start="35:13" pos:end="37:64"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:16">nut</name> <operator pos:start="35:18" pos:end="35:19">&gt;=</operator> <name pos:start="35:21" pos:end="35:32">HEVC_NAL_VPS</name> <operator pos:start="35:34" pos:end="35:35">&amp;&amp;</operator> <name pos:start="35:37" pos:end="35:39">nut</name> <operator pos:start="35:41" pos:end="35:42">&lt;=</operator> <name pos:start="35:44" pos:end="35:55">HEVC_NAL_AUD</name><operator pos:start="35:56" pos:end="35:56">)</operator> <operator pos:start="35:58" pos:end="35:59">||</operator> <name pos:start="35:61" pos:end="35:63">nut</name> <operator pos:start="35:65" pos:end="35:66">==</operator> <name pos:start="35:68" pos:end="35:86">HEVC_NAL_SEI_PREFIX</name> <operator pos:start="35:88" pos:end="35:89">||</operator>

            <operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:16">nut</name> <operator pos:start="37:18" pos:end="37:19">&gt;=</operator> <literal type="number" pos:start="37:21" pos:end="37:22">41</literal> <operator pos:start="37:24" pos:end="37:25">&amp;&amp;</operator> <name pos:start="37:27" pos:end="37:29">nut</name> <operator pos:start="37:31" pos:end="37:32">&lt;=</operator> <literal type="number" pos:start="37:34" pos:end="37:35">44</literal><operator pos:start="37:36" pos:end="37:36">)</operator> <operator pos:start="37:38" pos:end="37:39">||</operator> <operator pos:start="37:41" pos:end="37:41">(</operator><name pos:start="37:42" pos:end="37:44">nut</name> <operator pos:start="37:46" pos:end="37:47">&gt;=</operator> <literal type="number" pos:start="37:49" pos:end="37:50">48</literal> <operator pos:start="37:52" pos:end="37:53">&amp;&amp;</operator> <name pos:start="37:55" pos:end="37:57">nut</name> <operator pos:start="37:59" pos:end="37:60">&lt;=</operator> <literal type="number" pos:start="37:62" pos:end="37:63">55</literal><operator pos:start="37:64" pos:end="37:64">)</operator></expr>)</condition> <block pos:start="37:67" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:13">

            <if_stmt pos:start="39:13" pos:end="45:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:38">(<expr pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:18">pc</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:37">frame_start_found</name></name></expr>)</condition> <block pos:start="39:40" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:29">

                <expr_stmt pos:start="41:17" pos:end="41:42"><expr pos:start="41:17" pos:end="41:41"><name pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:18">pc</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:37">frame_start_found</name></name> <operator pos:start="41:39" pos:end="41:39">=</operator> <literal type="number" pos:start="41:41" pos:end="41:41">0</literal></expr>;</expr_stmt>

                <return pos:start="43:17" pos:end="43:29">return <expr pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:24">i</name> <operator pos:start="43:26" pos:end="43:26">-</operator> <literal type="number" pos:start="43:28" pos:end="43:28">5</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="69:9">else if <condition pos:start="47:19" pos:end="49:73">(<expr pos:start="47:20" pos:end="49:72"><name pos:start="47:20" pos:end="47:22">nut</name> <operator pos:start="47:24" pos:end="47:25">&lt;=</operator> <name pos:start="47:27" pos:end="47:41">HEVC_NAL_RASL_R</name> <operator pos:start="47:43" pos:end="47:44">||</operator>

                   <operator pos:start="49:20" pos:end="49:20">(</operator><name pos:start="49:21" pos:end="49:23">nut</name> <operator pos:start="49:25" pos:end="49:26">&gt;=</operator> <name pos:start="49:28" pos:end="49:44">HEVC_NAL_BLA_W_LP</name> <operator pos:start="49:46" pos:end="49:47">&amp;&amp;</operator> <name pos:start="49:49" pos:end="49:51">nut</name> <operator pos:start="49:53" pos:end="49:54">&lt;=</operator> <name pos:start="49:56" pos:end="49:71">HEVC_NAL_CRA_NUT</name><operator pos:start="49:72" pos:end="49:72">)</operator></expr>)</condition> <block pos:start="49:75" pos:end="69:9">{<block_content pos:start="51:13" pos:end="67:13">

            <decl_stmt pos:start="51:13" pos:end="51:62"><decl pos:start="51:13" pos:end="51:61"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:47">first_slice_segment_in_pic_flag</name> <init pos:start="51:49" pos:end="51:61">= <expr pos:start="51:51" pos:end="51:61"><name pos:start="51:51" pos:end="51:56"><name pos:start="51:51" pos:end="51:53">buf</name><index pos:start="51:54" pos:end="51:56">[<expr pos:start="51:55" pos:end="51:55"><name pos:start="51:55" pos:end="51:55">i</name></expr>]</index></name> <operator pos:start="51:58" pos:end="51:59">&gt;&gt;</operator> <literal type="number" pos:start="51:61" pos:end="51:61">7</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="53:13" pos:end="67:13"><if pos:start="53:13" pos:end="67:13">if <condition pos:start="53:16" pos:end="53:48">(<expr pos:start="53:17" pos:end="53:47"><name pos:start="53:17" pos:end="53:47">first_slice_segment_in_pic_flag</name></expr>)</condition> <block pos:start="53:50" pos:end="67:13">{<block_content pos:start="55:17" pos:end="65:17">

                <if_stmt pos:start="55:17" pos:end="65:17"><if pos:start="55:17" pos:end="59:17">if <condition pos:start="55:20" pos:end="55:43">(<expr pos:start="55:21" pos:end="55:42"><operator pos:start="55:21" pos:end="55:21">!</operator><name pos:start="55:22" pos:end="55:42"><name pos:start="55:22" pos:end="55:23">pc</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:42">frame_start_found</name></name></expr>)</condition> <block pos:start="55:45" pos:end="59:17">{<block_content pos:start="57:21" pos:end="57:46">

                    <expr_stmt pos:start="57:21" pos:end="57:46"><expr pos:start="57:21" pos:end="57:45"><name pos:start="57:21" pos:end="57:41"><name pos:start="57:21" pos:end="57:22">pc</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:41">frame_start_found</name></name> <operator pos:start="57:43" pos:end="57:43">=</operator> <literal type="number" pos:start="57:45" pos:end="57:45">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="59:19" pos:end="65:17">else <block pos:start="59:24" pos:end="65:17">{<block_content pos:start="61:21" pos:end="63:33"> <comment type="line" pos:start="59:26" pos:end="59:59">// First slice of next frame found</comment>

                    <expr_stmt pos:start="61:21" pos:end="61:46"><expr pos:start="61:21" pos:end="61:45"><name pos:start="61:21" pos:end="61:41"><name pos:start="61:21" pos:end="61:22">pc</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:41">frame_start_found</name></name> <operator pos:start="61:43" pos:end="61:43">=</operator> <literal type="number" pos:start="61:45" pos:end="61:45">0</literal></expr>;</expr_stmt>

                    <return pos:start="63:21" pos:end="63:33">return <expr pos:start="63:28" pos:end="63:32"><name pos:start="63:28" pos:end="63:28">i</name> <operator pos:start="63:30" pos:end="63:30">-</operator> <literal type="number" pos:start="63:32" pos:end="63:32">5</literal></expr>;</return>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="75:5" pos:end="75:25">return <expr pos:start="75:12" pos:end="75:24"><name pos:start="75:12" pos:end="75:24">END_NOT_FOUND</name></expr>;</return>

</block_content>}</block></function>
</unit>
