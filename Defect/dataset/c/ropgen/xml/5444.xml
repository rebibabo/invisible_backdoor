<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5444.c" pos:tabs="8"><function pos:start="1:1" pos:end="313:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:52">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

			<parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">data_size</name></decl></parameter>,

			<parameter pos:start="5:25" pos:end="5:37"><decl pos:start="5:25" pos:end="5:37"><type pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:31">uint8_t</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type> <name pos:start="5:35" pos:end="5:37">buf</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:51"><decl pos:start="5:40" pos:end="5:51"><type pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:51">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="313:1">{<block_content pos:start="9:5" pos:end="311:25">

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MPADecodeContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">s</name> <init pos:start="9:25" pos:end="9:42">= <expr pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:31">avctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>, <decl pos:start="15:14" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:21">out_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">OUT_INT</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:24">out_samples</name> <init pos:start="17:26" pos:end="17:31">= <expr pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:31">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:11">buf_ptr</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:17">buf</name></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="309:5">while <condition pos:start="23:11" pos:end="23:24">(<expr pos:start="23:12" pos:end="23:23"><name pos:start="23:12" pos:end="23:19">buf_size</name> <operator pos:start="23:21" pos:end="23:21">&gt;</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>)</condition> <block pos:start="23:26" pos:end="309:5">{<block_content pos:start="25:9" pos:end="307:9">

	<expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:11">len</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:26">inbuf_ptr</name></name> <operator pos:start="25:28" pos:end="25:28">-</operator> <name pos:start="25:30" pos:end="25:37"><name pos:start="25:30" pos:end="25:30">s</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:37">inbuf</name></name></expr>;</expr_stmt>

	<if_stmt pos:start="27:9" pos:end="277:9"><if pos:start="27:9" pos:end="151:9">if <condition pos:start="27:12" pos:end="27:31">(<expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">frame_size</name></name> <operator pos:start="27:27" pos:end="27:28">==</operator> <literal type="number" pos:start="27:30" pos:end="27:30">0</literal></expr>)</condition> <block pos:start="27:33" pos:end="151:9">{<block_content pos:start="33:13" pos:end="149:13">

            <comment type="block" pos:start="29:13" pos:end="31:58">/* special case for next header for first frame in free

               format case (XXX: find a simpler method) */</comment>

            <if_stmt pos:start="33:13" pos:end="49:13"><if pos:start="33:13" pos:end="49:13">if <condition pos:start="33:16" pos:end="33:48">(<expr pos:start="33:17" pos:end="33:47"><name pos:start="33:17" pos:end="33:42"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:42">free_format_next_header</name></name> <operator pos:start="33:44" pos:end="33:45">!=</operator> <literal type="number" pos:start="33:47" pos:end="33:47">0</literal></expr>)</condition> <block pos:start="33:50" pos:end="49:13">{<block_content pos:start="35:17" pos:end="47:32">

                <expr_stmt pos:start="35:17" pos:end="35:63"><expr pos:start="35:17" pos:end="35:62"><name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">inbuf</name><index pos:start="35:25" pos:end="35:27">[<expr pos:start="35:26" pos:end="35:26"><literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>]</index></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:56"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:56">free_format_next_header</name></name> <operator pos:start="35:58" pos:end="35:59">&gt;&gt;</operator> <literal type="number" pos:start="35:61" pos:end="35:62">24</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:63"><expr pos:start="37:17" pos:end="37:62"><name pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:24">inbuf</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>]</index></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:56"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:56">free_format_next_header</name></name> <operator pos:start="37:58" pos:end="37:59">&gt;&gt;</operator> <literal type="number" pos:start="37:61" pos:end="37:62">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:62"><expr pos:start="39:17" pos:end="39:61"><name pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:24">inbuf</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">2</literal></expr>]</index></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:56"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:56">free_format_next_header</name></name> <operator pos:start="39:58" pos:end="39:59">&gt;&gt;</operator> <literal type="number" pos:start="39:61" pos:end="39:61">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:57"><expr pos:start="41:17" pos:end="41:56"><name pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">inbuf</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">3</literal></expr>]</index></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:56"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:56">free_format_next_header</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:44"><expr pos:start="43:17" pos:end="43:43"><name pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:28">inbuf_ptr</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:39">inbuf</name></name> <operator pos:start="43:41" pos:end="43:41">+</operator> <literal type="number" pos:start="43:43" pos:end="43:43">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:47"><expr pos:start="45:17" pos:end="45:46"><name pos:start="45:17" pos:end="45:42"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:42">free_format_next_header</name></name> <operator pos:start="45:44" pos:end="45:44">=</operator> <literal type="number" pos:start="45:46" pos:end="45:46">0</literal></expr>;</expr_stmt>

                <goto pos:start="47:17" pos:end="47:32">goto <name pos:start="47:22" pos:end="47:31">got_header</name>;</goto>

            </block_content>}</block></if></if_stmt>

	    <comment type="block" pos:start="51:13" pos:end="53:35">/* no header seen : find one. We need at least HEADER_SIZE

               bytes to parse it */</comment>

	    <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:15">len</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:29">HEADER_SIZE</name> <operator pos:start="55:31" pos:end="55:31">-</operator> <name pos:start="55:33" pos:end="55:35">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="57:13" pos:end="59:31"><if pos:start="57:13" pos:end="59:31">if <condition pos:start="57:16" pos:end="57:31">(<expr pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:19">len</name> <operator pos:start="57:21" pos:end="57:21">&gt;</operator> <name pos:start="57:23" pos:end="57:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:31"><block_content pos:start="59:17" pos:end="59:31">

		<expr_stmt pos:start="59:17" pos:end="59:31"><expr pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:19">len</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <if_stmt pos:start="61:13" pos:end="71:13"><if pos:start="61:13" pos:end="71:13">if <condition pos:start="61:16" pos:end="61:24">(<expr pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:19">len</name> <operator pos:start="61:21" pos:end="61:21">&gt;</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>)</condition> <block pos:start="61:26" pos:end="71:13">{<block_content pos:start="63:17" pos:end="69:36">

		<expr_stmt pos:start="63:17" pos:end="63:51"><expr pos:start="63:17" pos:end="63:50"><call pos:start="63:17" pos:end="63:50"><name pos:start="63:17" pos:end="63:22">memcpy</name><argument_list pos:start="63:23" pos:end="63:50">(<argument pos:start="63:24" pos:end="63:35"><expr pos:start="63:24" pos:end="63:35"><name pos:start="63:24" pos:end="63:35"><name pos:start="63:24" pos:end="63:24">s</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:35">inbuf_ptr</name></name></expr></argument>, <argument pos:start="63:38" pos:end="63:44"><expr pos:start="63:38" pos:end="63:44"><name pos:start="63:38" pos:end="63:44">buf_ptr</name></expr></argument>, <argument pos:start="63:47" pos:end="63:49"><expr pos:start="63:47" pos:end="63:49"><name pos:start="63:47" pos:end="63:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="65:17" pos:end="65:31"><expr pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:23">buf_ptr</name> <operator pos:start="65:25" pos:end="65:26">+=</operator> <name pos:start="65:28" pos:end="65:30">len</name></expr>;</expr_stmt>

		<expr_stmt pos:start="67:17" pos:end="67:32"><expr pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:24">buf_size</name> <operator pos:start="67:26" pos:end="67:27">-=</operator> <name pos:start="67:29" pos:end="67:31">len</name></expr>;</expr_stmt>

		<expr_stmt pos:start="69:17" pos:end="69:36"><expr pos:start="69:17" pos:end="69:35"><name pos:start="69:17" pos:end="69:28"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:28">inbuf_ptr</name></name> <operator pos:start="69:30" pos:end="69:31">+=</operator> <name pos:start="69:33" pos:end="69:35">len</name></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

	    <if_stmt pos:start="73:13" pos:end="149:13"><if pos:start="73:13" pos:end="149:13">if <condition pos:start="73:16" pos:end="73:57">(<expr pos:start="73:17" pos:end="73:56"><operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:29"><name pos:start="73:18" pos:end="73:18">s</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:29">inbuf_ptr</name></name> <operator pos:start="73:31" pos:end="73:31">-</operator> <name pos:start="73:33" pos:end="73:40"><name pos:start="73:33" pos:end="73:33">s</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:40">inbuf</name></name><operator pos:start="73:41" pos:end="73:41">)</operator> <operator pos:start="73:43" pos:end="73:44">&gt;=</operator> <name pos:start="73:46" pos:end="73:56">HEADER_SIZE</name></expr>)</condition> <block pos:start="73:59" pos:end="149:13">{<block_content pos:start="75:13" pos:end="147:17">

            <label pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:22">got_header</name>:</label>

		<expr_stmt pos:start="77:17" pos:end="79:53"><expr pos:start="77:17" pos:end="79:52"><name pos:start="77:17" pos:end="77:22">header</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <operator pos:start="77:26" pos:end="77:26">(</operator><name pos:start="77:27" pos:end="77:37"><name pos:start="77:27" pos:end="77:27">s</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:34">inbuf</name><index pos:start="77:35" pos:end="77:37">[<expr pos:start="77:36" pos:end="77:36"><literal type="number" pos:start="77:36" pos:end="77:36">0</literal></expr>]</index></name> <operator pos:start="77:39" pos:end="77:40">&lt;&lt;</operator> <literal type="number" pos:start="77:42" pos:end="77:43">24</literal><operator pos:start="77:44" pos:end="77:44">)</operator> <operator pos:start="77:46" pos:end="77:46">|</operator> <operator pos:start="77:48" pos:end="77:48">(</operator><name pos:start="77:49" pos:end="77:59"><name pos:start="77:49" pos:end="77:49">s</name><operator pos:start="77:50" pos:end="77:51">-&gt;</operator><name pos:start="77:52" pos:end="77:56">inbuf</name><index pos:start="77:57" pos:end="77:59">[<expr pos:start="77:58" pos:end="77:58"><literal type="number" pos:start="77:58" pos:end="77:58">1</literal></expr>]</index></name> <operator pos:start="77:61" pos:end="77:62">&lt;&lt;</operator> <literal type="number" pos:start="77:64" pos:end="77:65">16</literal><operator pos:start="77:66" pos:end="77:66">)</operator> <operator pos:start="77:68" pos:end="77:68">|</operator>

		    <operator pos:start="79:21" pos:end="79:21">(</operator><name pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:22">s</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:29">inbuf</name><index pos:start="79:30" pos:end="79:32">[<expr pos:start="79:31" pos:end="79:31"><literal type="number" pos:start="79:31" pos:end="79:31">2</literal></expr>]</index></name> <operator pos:start="79:34" pos:end="79:35">&lt;&lt;</operator> <literal type="number" pos:start="79:37" pos:end="79:37">8</literal><operator pos:start="79:38" pos:end="79:38">)</operator> <operator pos:start="79:40" pos:end="79:40">|</operator> <name pos:start="79:42" pos:end="79:52"><name pos:start="79:42" pos:end="79:42">s</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:49">inbuf</name><index pos:start="79:50" pos:end="79:52">[<expr pos:start="79:51" pos:end="79:51"><literal type="number" pos:start="79:51" pos:end="79:51">3</literal></expr>]</index></name></expr>;</expr_stmt>



		<if_stmt pos:start="83:17" pos:end="147:17"><if pos:start="83:17" pos:end="99:17">if <condition pos:start="83:20" pos:end="83:52">(<expr pos:start="83:21" pos:end="83:51"><call pos:start="83:21" pos:end="83:47"><name pos:start="83:21" pos:end="83:39">ff_mpa_check_header</name><argument_list pos:start="83:40" pos:end="83:47">(<argument pos:start="83:41" pos:end="83:46"><expr pos:start="83:41" pos:end="83:46"><name pos:start="83:41" pos:end="83:46">header</name></expr></argument>)</argument_list></call> <operator pos:start="83:49" pos:end="83:49">&lt;</operator> <literal type="number" pos:start="83:51" pos:end="83:51">0</literal></expr>)</condition> <block pos:start="83:54" pos:end="99:17">{<block_content pos:start="87:21" pos:end="97:50">

		    <comment type="block" pos:start="85:21" pos:end="85:85">/* no sync found : move by one byte (inefficient, but simple!) */</comment>

		    <expr_stmt pos:start="87:21" pos:end="87:81"><expr pos:start="87:21" pos:end="87:80"><call pos:start="87:21" pos:end="87:80"><name pos:start="87:21" pos:end="87:27">memmove</name><argument_list pos:start="87:28" pos:end="87:80">(<argument pos:start="87:29" pos:end="87:36"><expr pos:start="87:29" pos:end="87:36"><name pos:start="87:29" pos:end="87:36"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:36">inbuf</name></name></expr></argument>, <argument pos:start="87:39" pos:end="87:50"><expr pos:start="87:39" pos:end="87:50"><name pos:start="87:39" pos:end="87:46"><name pos:start="87:39" pos:end="87:39">s</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:46">inbuf</name></name> <operator pos:start="87:48" pos:end="87:48">+</operator> <literal type="number" pos:start="87:50" pos:end="87:50">1</literal></expr></argument>, <argument pos:start="87:53" pos:end="87:79"><expr pos:start="87:53" pos:end="87:79"><name pos:start="87:53" pos:end="87:64"><name pos:start="87:53" pos:end="87:53">s</name><operator pos:start="87:54" pos:end="87:55">-&gt;</operator><name pos:start="87:56" pos:end="87:64">inbuf_ptr</name></name> <operator pos:start="87:66" pos:end="87:66">-</operator> <name pos:start="87:68" pos:end="87:75"><name pos:start="87:68" pos:end="87:68">s</name><operator pos:start="87:69" pos:end="87:70">-&gt;</operator><name pos:start="87:71" pos:end="87:75">inbuf</name></name> <operator pos:start="87:77" pos:end="87:77">-</operator> <literal type="number" pos:start="87:79" pos:end="87:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="89:21" pos:end="89:35"><expr pos:start="89:21" pos:end="89:34"><name pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:32">inbuf_ptr</name></name><operator pos:start="89:33" pos:end="89:34">--</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:49"><expr pos:start="91:21" pos:end="91:48"><call pos:start="91:21" pos:end="91:48"><name pos:start="91:21" pos:end="91:27">dprintf</name><argument_list pos:start="91:28" pos:end="91:48">(<argument pos:start="91:29" pos:end="91:39"><expr pos:start="91:29" pos:end="91:39"><literal type="string" pos:start="91:29" pos:end="91:39">"skip %x\n"</literal></expr></argument>, <argument pos:start="91:42" pos:end="91:47"><expr pos:start="91:42" pos:end="91:47"><name pos:start="91:42" pos:end="91:47">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="93:21" pos:end="95:46">/* reset free format frame size to give a chance

                       to get a new bitrate */</comment>

                    <expr_stmt pos:start="97:21" pos:end="97:50"><expr pos:start="97:21" pos:end="97:49"><name pos:start="97:21" pos:end="97:45"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:45">free_format_frame_size</name></name> <operator pos:start="97:47" pos:end="97:47">=</operator> <literal type="number" pos:start="97:49" pos:end="97:49">0</literal></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="99:19" pos:end="147:17">else <block pos:start="99:24" pos:end="147:17">{<block_content pos:start="101:21" pos:end="145:21">

		    <if_stmt pos:start="101:21" pos:end="107:21"><if pos:start="101:21" pos:end="107:21">if <condition pos:start="101:24" pos:end="101:54">(<expr pos:start="101:25" pos:end="101:53"><call pos:start="101:25" pos:end="101:48"><name pos:start="101:25" pos:end="101:37">decode_header</name><argument_list pos:start="101:38" pos:end="101:48">(<argument pos:start="101:39" pos:end="101:39"><expr pos:start="101:39" pos:end="101:39"><name pos:start="101:39" pos:end="101:39">s</name></expr></argument>, <argument pos:start="101:42" pos:end="101:47"><expr pos:start="101:42" pos:end="101:47"><name pos:start="101:42" pos:end="101:47">header</name></expr></argument>)</argument_list></call> <operator pos:start="101:50" pos:end="101:51">==</operator> <literal type="number" pos:start="101:53" pos:end="101:53">1</literal></expr>)</condition> <block pos:start="101:56" pos:end="107:21">{<block_content pos:start="105:25" pos:end="105:43">

                        <comment type="block" pos:start="103:25" pos:end="103:72">/* free format: prepare to compute frame size */</comment>

			<expr_stmt pos:start="105:25" pos:end="105:43"><expr pos:start="105:25" pos:end="105:42"><name pos:start="105:25" pos:end="105:37"><name pos:start="105:25" pos:end="105:25">s</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:37">frame_size</name></name> <operator pos:start="105:39" pos:end="105:39">=</operator> <operator pos:start="105:41" pos:end="105:41">-</operator><literal type="number" pos:start="105:42" pos:end="105:42">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="109:21" pos:end="109:43">/* update codec info */</comment>

                    <expr_stmt pos:start="111:21" pos:end="111:56"><expr pos:start="111:21" pos:end="111:55"><name pos:start="111:21" pos:end="111:38"><name pos:start="111:21" pos:end="111:25">avctx</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:38">sample_rate</name></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <name pos:start="111:42" pos:end="111:55"><name pos:start="111:42" pos:end="111:42">s</name><operator pos:start="111:43" pos:end="111:44">-&gt;</operator><name pos:start="111:45" pos:end="111:55">sample_rate</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:53"><expr pos:start="113:21" pos:end="113:52"><name pos:start="113:21" pos:end="113:35"><name pos:start="113:21" pos:end="113:25">avctx</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:35">channels</name></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <name pos:start="113:39" pos:end="113:52"><name pos:start="113:39" pos:end="113:39">s</name><operator pos:start="113:40" pos:end="113:41">-&gt;</operator><name pos:start="113:42" pos:end="113:52">nb_channels</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:50"><expr pos:start="115:21" pos:end="115:49"><name pos:start="115:21" pos:end="115:35"><name pos:start="115:21" pos:end="115:25">avctx</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:35">bit_rate</name></name> <operator pos:start="115:37" pos:end="115:37">=</operator> <name pos:start="115:39" pos:end="115:49"><name pos:start="115:39" pos:end="115:39">s</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:49">bit_rate</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:45"><expr pos:start="117:21" pos:end="117:44"><name pos:start="117:21" pos:end="117:33"><name pos:start="117:21" pos:end="117:25">avctx</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:33">sub_id</name></name> <operator pos:start="117:35" pos:end="117:35">=</operator> <name pos:start="117:37" pos:end="117:44"><name pos:start="117:37" pos:end="117:37">s</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:44">layer</name></name></expr>;</expr_stmt>

                    <switch pos:start="119:21" pos:end="145:21">switch<condition pos:start="119:27" pos:end="119:36">(<expr pos:start="119:28" pos:end="119:35"><name pos:start="119:28" pos:end="119:35"><name pos:start="119:28" pos:end="119:28">s</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:35">layer</name></name></expr>)</condition> <block pos:start="119:38" pos:end="145:21">{<block_content pos:start="121:21" pos:end="143:30">

                    <case pos:start="121:21" pos:end="121:27">case <expr pos:start="121:26" pos:end="121:26"><literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>:</case>

                        <expr_stmt pos:start="123:25" pos:end="123:48"><expr pos:start="123:25" pos:end="123:47"><name pos:start="123:25" pos:end="123:41"><name pos:start="123:25" pos:end="123:29">avctx</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:41">frame_size</name></name> <operator pos:start="123:43" pos:end="123:43">=</operator> <literal type="number" pos:start="123:45" pos:end="123:47">384</literal></expr>;</expr_stmt>

                        <break pos:start="125:25" pos:end="125:30">break;</break>

                    <case pos:start="127:21" pos:end="127:27">case <expr pos:start="127:26" pos:end="127:26"><literal type="number" pos:start="127:26" pos:end="127:26">2</literal></expr>:</case>

                        <expr_stmt pos:start="129:25" pos:end="129:49"><expr pos:start="129:25" pos:end="129:48"><name pos:start="129:25" pos:end="129:41"><name pos:start="129:25" pos:end="129:29">avctx</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:41">frame_size</name></name> <operator pos:start="129:43" pos:end="129:43">=</operator> <literal type="number" pos:start="129:45" pos:end="129:48">1152</literal></expr>;</expr_stmt>

                        <break pos:start="131:25" pos:end="131:30">break;</break>

                    <case pos:start="133:21" pos:end="133:27">case <expr pos:start="133:26" pos:end="133:26"><literal type="number" pos:start="133:26" pos:end="133:26">3</literal></expr>:</case>

                        <if_stmt pos:start="135:25" pos:end="141:53"><if pos:start="135:25" pos:end="137:52">if <condition pos:start="135:28" pos:end="135:35">(<expr pos:start="135:29" pos:end="135:34"><name pos:start="135:29" pos:end="135:34"><name pos:start="135:29" pos:end="135:29">s</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:34">lsf</name></name></expr>)</condition><block type="pseudo" pos:start="137:29" pos:end="137:52"><block_content pos:start="137:29" pos:end="137:52">

                            <expr_stmt pos:start="137:29" pos:end="137:52"><expr pos:start="137:29" pos:end="137:51"><name pos:start="137:29" pos:end="137:45"><name pos:start="137:29" pos:end="137:33">avctx</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:45">frame_size</name></name> <operator pos:start="137:47" pos:end="137:47">=</operator> <literal type="number" pos:start="137:49" pos:end="137:51">576</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="139:25" pos:end="141:53">else<block type="pseudo" pos:start="141:29" pos:end="141:53"><block_content pos:start="141:29" pos:end="141:53">

                            <expr_stmt pos:start="141:29" pos:end="141:53"><expr pos:start="141:29" pos:end="141:52"><name pos:start="141:29" pos:end="141:45"><name pos:start="141:29" pos:end="141:33">avctx</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:45">frame_size</name></name> <operator pos:start="141:47" pos:end="141:47">=</operator> <literal type="number" pos:start="141:49" pos:end="141:52">1152</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="143:25" pos:end="143:30">break;</break>

                    </block_content>}</block></switch>

		</block_content>}</block></else></if_stmt>

	    </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="151:11" pos:end="257:9">else if <condition pos:start="151:19" pos:end="151:39">(<expr pos:start="151:20" pos:end="151:38"><name pos:start="151:20" pos:end="151:32"><name pos:start="151:20" pos:end="151:20">s</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:32">frame_size</name></name> <operator pos:start="151:34" pos:end="151:35">==</operator> <operator pos:start="151:37" pos:end="151:37">-</operator><literal type="number" pos:start="151:38" pos:end="151:38">1</literal></expr>)</condition> <block pos:start="151:41" pos:end="257:9">{<block_content pos:start="155:13" pos:end="255:13">

            <comment type="block" pos:start="153:13" pos:end="153:68">/* free format : find next sync to compute frame size */</comment>

	    <expr_stmt pos:start="155:13" pos:end="155:49"><expr pos:start="155:13" pos:end="155:48"><name pos:start="155:13" pos:end="155:15">len</name> <operator pos:start="155:17" pos:end="155:17">=</operator> <name pos:start="155:19" pos:end="155:42">MPA_MAX_CODED_FRAME_SIZE</name> <operator pos:start="155:44" pos:end="155:44">-</operator> <name pos:start="155:46" pos:end="155:48">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="157:13" pos:end="159:31"><if pos:start="157:13" pos:end="159:31">if <condition pos:start="157:16" pos:end="157:31">(<expr pos:start="157:17" pos:end="157:30"><name pos:start="157:17" pos:end="157:19">len</name> <operator pos:start="157:21" pos:end="157:21">&gt;</operator> <name pos:start="157:23" pos:end="157:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:31"><block_content pos:start="159:17" pos:end="159:31">

		<expr_stmt pos:start="159:17" pos:end="159:31"><expr pos:start="159:17" pos:end="159:30"><name pos:start="159:17" pos:end="159:19">len</name> <operator pos:start="159:21" pos:end="159:21">=</operator> <name pos:start="159:23" pos:end="159:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="161:13" pos:end="255:13"><if pos:start="161:13" pos:end="171:13">if <condition pos:start="161:16" pos:end="161:25">(<expr pos:start="161:17" pos:end="161:24"><name pos:start="161:17" pos:end="161:19">len</name> <operator pos:start="161:21" pos:end="161:22">==</operator> <literal type="number" pos:start="161:24" pos:end="161:24">0</literal></expr>)</condition> <block pos:start="161:27" pos:end="171:13">{<block_content pos:start="165:17" pos:end="169:31">

		<comment type="block" pos:start="163:17" pos:end="163:44">/* frame too long: resync */</comment>

                <expr_stmt pos:start="165:17" pos:end="165:34"><expr pos:start="165:17" pos:end="165:33"><name pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:17">s</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:29">frame_size</name></name> <operator pos:start="165:31" pos:end="165:31">=</operator> <literal type="number" pos:start="165:33" pos:end="165:33">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="167:17" pos:end="167:77"><expr pos:start="167:17" pos:end="167:76"><call pos:start="167:17" pos:end="167:76"><name pos:start="167:17" pos:end="167:23">memmove</name><argument_list pos:start="167:24" pos:end="167:76">(<argument pos:start="167:25" pos:end="167:32"><expr pos:start="167:25" pos:end="167:32"><name pos:start="167:25" pos:end="167:32"><name pos:start="167:25" pos:end="167:25">s</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:32">inbuf</name></name></expr></argument>, <argument pos:start="167:35" pos:end="167:46"><expr pos:start="167:35" pos:end="167:46"><name pos:start="167:35" pos:end="167:42"><name pos:start="167:35" pos:end="167:35">s</name><operator pos:start="167:36" pos:end="167:37">-&gt;</operator><name pos:start="167:38" pos:end="167:42">inbuf</name></name> <operator pos:start="167:44" pos:end="167:44">+</operator> <literal type="number" pos:start="167:46" pos:end="167:46">1</literal></expr></argument>, <argument pos:start="167:49" pos:end="167:75"><expr pos:start="167:49" pos:end="167:75"><name pos:start="167:49" pos:end="167:60"><name pos:start="167:49" pos:end="167:49">s</name><operator pos:start="167:50" pos:end="167:51">-&gt;</operator><name pos:start="167:52" pos:end="167:60">inbuf_ptr</name></name> <operator pos:start="167:62" pos:end="167:62">-</operator> <name pos:start="167:64" pos:end="167:71"><name pos:start="167:64" pos:end="167:64">s</name><operator pos:start="167:65" pos:end="167:66">-&gt;</operator><name pos:start="167:67" pos:end="167:71">inbuf</name></name> <operator pos:start="167:73" pos:end="167:73">-</operator> <literal type="number" pos:start="167:75" pos:end="167:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="169:17" pos:end="169:31"><expr pos:start="169:17" pos:end="169:30"><name pos:start="169:17" pos:end="169:28"><name pos:start="169:17" pos:end="169:17">s</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:28">inbuf_ptr</name></name><operator pos:start="169:29" pos:end="169:30">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="171:15" pos:end="255:13">else <block pos:start="171:20" pos:end="255:13">{<block_content pos:start="173:17" pos:end="253:32">

                <decl_stmt pos:start="173:17" pos:end="173:34"><decl pos:start="173:17" pos:end="173:26"><type pos:start="173:17" pos:end="173:25"><name pos:start="173:17" pos:end="173:23">uint8_t</name> <modifier pos:start="173:25" pos:end="173:25">*</modifier></type><name pos:start="173:26" pos:end="173:26">p</name></decl>, <decl pos:start="173:29" pos:end="173:33"><type ref="prev" pos:start="173:17" pos:end="173:25"><modifier pos:start="173:29" pos:end="173:29">*</modifier></type><name pos:start="173:30" pos:end="173:33">pend</name></decl>;</decl_stmt>

                <decl_stmt pos:start="175:17" pos:end="175:33"><decl pos:start="175:17" pos:end="175:32"><type pos:start="175:17" pos:end="175:24"><name pos:start="175:17" pos:end="175:24">uint32_t</name></type> <name pos:start="175:26" pos:end="175:32">header1</name></decl>;</decl_stmt>

                <decl_stmt pos:start="177:17" pos:end="177:28"><decl pos:start="177:17" pos:end="177:27"><type pos:start="177:17" pos:end="177:19"><name pos:start="177:17" pos:end="177:19">int</name></type> <name pos:start="177:21" pos:end="177:27">padding</name></decl>;</decl_stmt>



                <expr_stmt pos:start="181:17" pos:end="181:51"><expr pos:start="181:17" pos:end="181:50"><call pos:start="181:17" pos:end="181:50"><name pos:start="181:17" pos:end="181:22">memcpy</name><argument_list pos:start="181:23" pos:end="181:50">(<argument pos:start="181:24" pos:end="181:35"><expr pos:start="181:24" pos:end="181:35"><name pos:start="181:24" pos:end="181:35"><name pos:start="181:24" pos:end="181:24">s</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:35">inbuf_ptr</name></name></expr></argument>, <argument pos:start="181:38" pos:end="181:44"><expr pos:start="181:38" pos:end="181:44"><name pos:start="181:38" pos:end="181:44">buf_ptr</name></expr></argument>, <argument pos:start="181:47" pos:end="181:49"><expr pos:start="181:47" pos:end="181:49"><name pos:start="181:47" pos:end="181:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="183:17" pos:end="183:38">/* check for header */</comment>

                <expr_stmt pos:start="185:17" pos:end="185:37"><expr pos:start="185:17" pos:end="185:36"><name pos:start="185:17" pos:end="185:17">p</name> <operator pos:start="185:19" pos:end="185:19">=</operator> <name pos:start="185:21" pos:end="185:32"><name pos:start="185:21" pos:end="185:21">s</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:32">inbuf_ptr</name></name> <operator pos:start="185:34" pos:end="185:34">-</operator> <literal type="number" pos:start="185:36" pos:end="185:36">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:46"><expr pos:start="187:17" pos:end="187:45"><name pos:start="187:17" pos:end="187:20">pend</name> <operator pos:start="187:22" pos:end="187:22">=</operator> <name pos:start="187:24" pos:end="187:35"><name pos:start="187:24" pos:end="187:24">s</name><operator pos:start="187:25" pos:end="187:26">-&gt;</operator><name pos:start="187:27" pos:end="187:35">inbuf_ptr</name></name> <operator pos:start="187:37" pos:end="187:37">+</operator> <name pos:start="187:39" pos:end="187:41">len</name> <operator pos:start="187:43" pos:end="187:43">-</operator> <literal type="number" pos:start="187:45" pos:end="187:45">4</literal></expr>;</expr_stmt>

                <while pos:start="189:17" pos:end="245:17">while <condition pos:start="189:23" pos:end="189:33">(<expr pos:start="189:24" pos:end="189:32"><name pos:start="189:24" pos:end="189:24">p</name> <operator pos:start="189:26" pos:end="189:27">&lt;=</operator> <name pos:start="189:29" pos:end="189:32">pend</name></expr>)</condition> <block pos:start="189:35" pos:end="245:17">{<block_content pos:start="191:21" pos:end="243:24">

                    <expr_stmt pos:start="191:21" pos:end="193:43"><expr pos:start="191:21" pos:end="193:42"><name pos:start="191:21" pos:end="191:26">header</name> <operator pos:start="191:28" pos:end="191:28">=</operator> <operator pos:start="191:30" pos:end="191:30">(</operator><name pos:start="191:31" pos:end="191:34"><name pos:start="191:31" pos:end="191:31">p</name><index pos:start="191:32" pos:end="191:34">[<expr pos:start="191:33" pos:end="191:33"><literal type="number" pos:start="191:33" pos:end="191:33">0</literal></expr>]</index></name> <operator pos:start="191:36" pos:end="191:37">&lt;&lt;</operator> <literal type="number" pos:start="191:39" pos:end="191:40">24</literal><operator pos:start="191:41" pos:end="191:41">)</operator> <operator pos:start="191:43" pos:end="191:43">|</operator> <operator pos:start="191:45" pos:end="191:45">(</operator><name pos:start="191:46" pos:end="191:49"><name pos:start="191:46" pos:end="191:46">p</name><index pos:start="191:47" pos:end="191:49">[<expr pos:start="191:48" pos:end="191:48"><literal type="number" pos:start="191:48" pos:end="191:48">1</literal></expr>]</index></name> <operator pos:start="191:51" pos:end="191:52">&lt;&lt;</operator> <literal type="number" pos:start="191:54" pos:end="191:55">16</literal><operator pos:start="191:56" pos:end="191:56">)</operator> <operator pos:start="191:58" pos:end="191:58">|</operator>

                        <operator pos:start="193:25" pos:end="193:25">(</operator><name pos:start="193:26" pos:end="193:29"><name pos:start="193:26" pos:end="193:26">p</name><index pos:start="193:27" pos:end="193:29">[<expr pos:start="193:28" pos:end="193:28"><literal type="number" pos:start="193:28" pos:end="193:28">2</literal></expr>]</index></name> <operator pos:start="193:31" pos:end="193:32">&lt;&lt;</operator> <literal type="number" pos:start="193:34" pos:end="193:34">8</literal><operator pos:start="193:35" pos:end="193:35">)</operator> <operator pos:start="193:37" pos:end="193:37">|</operator> <name pos:start="193:39" pos:end="193:42"><name pos:start="193:39" pos:end="193:39">p</name><index pos:start="193:40" pos:end="193:42">[<expr pos:start="193:41" pos:end="193:41"><literal type="number" pos:start="193:41" pos:end="193:41">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="197:57"><expr pos:start="195:21" pos:end="197:56"><name pos:start="195:21" pos:end="195:27">header1</name> <operator pos:start="195:29" pos:end="195:29">=</operator> <operator pos:start="195:31" pos:end="195:31">(</operator><name pos:start="195:32" pos:end="195:42"><name pos:start="195:32" pos:end="195:32">s</name><operator pos:start="195:33" pos:end="195:34">-&gt;</operator><name pos:start="195:35" pos:end="195:39">inbuf</name><index pos:start="195:40" pos:end="195:42">[<expr pos:start="195:41" pos:end="195:41"><literal type="number" pos:start="195:41" pos:end="195:41">0</literal></expr>]</index></name> <operator pos:start="195:44" pos:end="195:45">&lt;&lt;</operator> <literal type="number" pos:start="195:47" pos:end="195:48">24</literal><operator pos:start="195:49" pos:end="195:49">)</operator> <operator pos:start="195:51" pos:end="195:51">|</operator> <operator pos:start="195:53" pos:end="195:53">(</operator><name pos:start="195:54" pos:end="195:64"><name pos:start="195:54" pos:end="195:54">s</name><operator pos:start="195:55" pos:end="195:56">-&gt;</operator><name pos:start="195:57" pos:end="195:61">inbuf</name><index pos:start="195:62" pos:end="195:64">[<expr pos:start="195:63" pos:end="195:63"><literal type="number" pos:start="195:63" pos:end="195:63">1</literal></expr>]</index></name> <operator pos:start="195:66" pos:end="195:67">&lt;&lt;</operator> <literal type="number" pos:start="195:69" pos:end="195:70">16</literal><operator pos:start="195:71" pos:end="195:71">)</operator> <operator pos:start="195:73" pos:end="195:73">|</operator>

                        <operator pos:start="197:25" pos:end="197:25">(</operator><name pos:start="197:26" pos:end="197:36"><name pos:start="197:26" pos:end="197:26">s</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:33">inbuf</name><index pos:start="197:34" pos:end="197:36">[<expr pos:start="197:35" pos:end="197:35"><literal type="number" pos:start="197:35" pos:end="197:35">2</literal></expr>]</index></name> <operator pos:start="197:38" pos:end="197:39">&lt;&lt;</operator> <literal type="number" pos:start="197:41" pos:end="197:41">8</literal><operator pos:start="197:42" pos:end="197:42">)</operator> <operator pos:start="197:44" pos:end="197:44">|</operator> <name pos:start="197:46" pos:end="197:56"><name pos:start="197:46" pos:end="197:46">s</name><operator pos:start="197:47" pos:end="197:48">-&gt;</operator><name pos:start="197:49" pos:end="197:53">inbuf</name><index pos:start="197:54" pos:end="197:56">[<expr pos:start="197:55" pos:end="197:55"><literal type="number" pos:start="197:55" pos:end="197:55">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="199:21" pos:end="201:38">/* check with high probability that we have a

                       valid header */</comment>

                    <if_stmt pos:start="203:21" pos:end="241:21"><if pos:start="203:21" pos:end="241:21">if <condition pos:start="203:24" pos:end="205:53">(<expr pos:start="203:25" pos:end="205:52"><operator pos:start="203:25" pos:end="203:25">(</operator><name pos:start="203:26" pos:end="203:31">header</name> <operator pos:start="203:33" pos:end="203:33">&amp;</operator> <name pos:start="203:35" pos:end="203:50">SAME_HEADER_MASK</name><operator pos:start="203:51" pos:end="203:51">)</operator> <operator pos:start="203:53" pos:end="203:54">==</operator>

                        <operator pos:start="205:25" pos:end="205:25">(</operator><name pos:start="205:26" pos:end="205:32">header1</name> <operator pos:start="205:34" pos:end="205:34">&amp;</operator> <name pos:start="205:36" pos:end="205:51">SAME_HEADER_MASK</name><operator pos:start="205:52" pos:end="205:52">)</operator></expr>)</condition> <block pos:start="205:55" pos:end="241:21">{<block_content pos:start="209:25" pos:end="239:39">

                        <comment type="block" pos:start="207:25" pos:end="207:59">/* header found: update pointers */</comment>

                        <expr_stmt pos:start="209:25" pos:end="209:53"><expr pos:start="209:25" pos:end="209:52"><name pos:start="209:25" pos:end="209:27">len</name> <operator pos:start="209:29" pos:end="209:29">=</operator> <operator pos:start="209:31" pos:end="209:31">(</operator><name pos:start="209:32" pos:end="209:32">p</name> <operator pos:start="209:34" pos:end="209:34">+</operator> <literal type="number" pos:start="209:36" pos:end="209:36">4</literal><operator pos:start="209:37" pos:end="209:37">)</operator> <operator pos:start="209:39" pos:end="209:39">-</operator> <name pos:start="209:41" pos:end="209:52"><name pos:start="209:41" pos:end="209:41">s</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:52">inbuf_ptr</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="211:25" pos:end="211:39"><expr pos:start="211:25" pos:end="211:38"><name pos:start="211:25" pos:end="211:31">buf_ptr</name> <operator pos:start="211:33" pos:end="211:34">+=</operator> <name pos:start="211:36" pos:end="211:38">len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="213:25" pos:end="213:40"><expr pos:start="213:25" pos:end="213:39"><name pos:start="213:25" pos:end="213:32">buf_size</name> <operator pos:start="213:34" pos:end="213:35">-=</operator> <name pos:start="213:37" pos:end="213:39">len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="215:25" pos:end="215:41"><expr pos:start="215:25" pos:end="215:40"><name pos:start="215:25" pos:end="215:36"><name pos:start="215:25" pos:end="215:25">s</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:36">inbuf_ptr</name></name> <operator pos:start="215:38" pos:end="215:38">=</operator> <name pos:start="215:40" pos:end="215:40">p</name></expr>;</expr_stmt>

                        <comment type="block" pos:start="217:25" pos:end="217:48">/* compute frame size */</comment>

                        <expr_stmt pos:start="219:25" pos:end="219:60"><expr pos:start="219:25" pos:end="219:59"><name pos:start="219:25" pos:end="219:50"><name pos:start="219:25" pos:end="219:25">s</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:50">free_format_next_header</name></name> <operator pos:start="219:52" pos:end="219:52">=</operator> <name pos:start="219:54" pos:end="219:59">header</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="221:25" pos:end="221:76"><expr pos:start="221:25" pos:end="221:75"><name pos:start="221:25" pos:end="221:49"><name pos:start="221:25" pos:end="221:25">s</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:49">free_format_frame_size</name></name> <operator pos:start="221:51" pos:end="221:51">=</operator> <name pos:start="221:53" pos:end="221:64"><name pos:start="221:53" pos:end="221:53">s</name><operator pos:start="221:54" pos:end="221:55">-&gt;</operator><name pos:start="221:56" pos:end="221:64">inbuf_ptr</name></name> <operator pos:start="221:66" pos:end="221:66">-</operator> <name pos:start="221:68" pos:end="221:75"><name pos:start="221:68" pos:end="221:68">s</name><operator pos:start="221:69" pos:end="221:70">-&gt;</operator><name pos:start="221:71" pos:end="221:75">inbuf</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="223:25" pos:end="223:53"><expr pos:start="223:25" pos:end="223:52"><name pos:start="223:25" pos:end="223:31">padding</name> <operator pos:start="223:33" pos:end="223:33">=</operator> <operator pos:start="223:35" pos:end="223:35">(</operator><name pos:start="223:36" pos:end="223:42">header1</name> <operator pos:start="223:44" pos:end="223:45">&gt;&gt;</operator> <literal type="number" pos:start="223:47" pos:end="223:47">9</literal><operator pos:start="223:48" pos:end="223:48">)</operator> <operator pos:start="223:50" pos:end="223:50">&amp;</operator> <literal type="number" pos:start="223:52" pos:end="223:52">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="225:25" pos:end="231:65"><if pos:start="225:25" pos:end="227:69">if <condition pos:start="225:28" pos:end="225:42">(<expr pos:start="225:29" pos:end="225:41"><name pos:start="225:29" pos:end="225:36"><name pos:start="225:29" pos:end="225:29">s</name><operator pos:start="225:30" pos:end="225:31">-&gt;</operator><name pos:start="225:32" pos:end="225:36">layer</name></name> <operator pos:start="225:38" pos:end="225:39">==</operator> <literal type="number" pos:start="225:41" pos:end="225:41">1</literal></expr>)</condition><block type="pseudo" pos:start="227:29" pos:end="227:69"><block_content pos:start="227:29" pos:end="227:69">

                            <expr_stmt pos:start="227:29" pos:end="227:69"><expr pos:start="227:29" pos:end="227:68"><name pos:start="227:29" pos:end="227:53"><name pos:start="227:29" pos:end="227:29">s</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:53">free_format_frame_size</name></name> <operator pos:start="227:55" pos:end="227:56">-=</operator> <name pos:start="227:58" pos:end="227:64">padding</name> <operator pos:start="227:66" pos:end="227:66">*</operator> <literal type="number" pos:start="227:68" pos:end="227:68">4</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="229:25" pos:end="231:65">else<block type="pseudo" pos:start="231:29" pos:end="231:65"><block_content pos:start="231:29" pos:end="231:65">

                            <expr_stmt pos:start="231:29" pos:end="231:65"><expr pos:start="231:29" pos:end="231:64"><name pos:start="231:29" pos:end="231:53"><name pos:start="231:29" pos:end="231:29">s</name><operator pos:start="231:30" pos:end="231:31">-&gt;</operator><name pos:start="231:32" pos:end="231:53">free_format_frame_size</name></name> <operator pos:start="231:55" pos:end="231:56">-=</operator> <name pos:start="231:58" pos:end="231:64">padding</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="233:25" pos:end="235:68"><expr pos:start="233:25" pos:end="235:67"><call pos:start="233:25" pos:end="235:67"><name pos:start="233:25" pos:end="233:31">dprintf</name><argument_list pos:start="233:32" pos:end="235:67">(<argument pos:start="233:33" pos:end="233:65"><expr pos:start="233:33" pos:end="233:65"><literal type="string" pos:start="233:33" pos:end="233:65">"free frame size=%d padding=%d\n"</literal></expr></argument>, 

                                <argument pos:start="235:33" pos:end="235:57"><expr pos:start="235:33" pos:end="235:57"><name pos:start="235:33" pos:end="235:57"><name pos:start="235:33" pos:end="235:33">s</name><operator pos:start="235:34" pos:end="235:35">-&gt;</operator><name pos:start="235:36" pos:end="235:57">free_format_frame_size</name></name></expr></argument>, <argument pos:start="235:60" pos:end="235:66"><expr pos:start="235:60" pos:end="235:66"><name pos:start="235:60" pos:end="235:66">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="237:25" pos:end="237:50"><expr pos:start="237:25" pos:end="237:49"><call pos:start="237:25" pos:end="237:49"><name pos:start="237:25" pos:end="237:37">decode_header</name><argument_list pos:start="237:38" pos:end="237:49">(<argument pos:start="237:39" pos:end="237:39"><expr pos:start="237:39" pos:end="237:39"><name pos:start="237:39" pos:end="237:39">s</name></expr></argument>, <argument pos:start="237:42" pos:end="237:48"><expr pos:start="237:42" pos:end="237:48"><name pos:start="237:42" pos:end="237:48">header1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="239:25" pos:end="239:39">goto <name pos:start="239:30" pos:end="239:38">next_data</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="243:21" pos:end="243:24"><expr pos:start="243:21" pos:end="243:23"><name pos:start="243:21" pos:end="243:21">p</name><operator pos:start="243:22" pos:end="243:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></while>

                <comment type="block" pos:start="247:17" pos:end="247:57">/* not found: simply increase pointers */</comment>

                <expr_stmt pos:start="249:17" pos:end="249:31"><expr pos:start="249:17" pos:end="249:30"><name pos:start="249:17" pos:end="249:23">buf_ptr</name> <operator pos:start="249:25" pos:end="249:26">+=</operator> <name pos:start="249:28" pos:end="249:30">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:36"><expr pos:start="251:17" pos:end="251:35"><name pos:start="251:17" pos:end="251:28"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:28">inbuf_ptr</name></name> <operator pos:start="251:30" pos:end="251:31">+=</operator> <name pos:start="251:33" pos:end="251:35">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:32"><expr pos:start="253:17" pos:end="253:31"><name pos:start="253:17" pos:end="253:24">buf_size</name> <operator pos:start="253:26" pos:end="253:27">-=</operator> <name pos:start="253:29" pos:end="253:31">len</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="257:11" pos:end="277:9">else if <condition pos:start="257:19" pos:end="257:39">(<expr pos:start="257:20" pos:end="257:38"><name pos:start="257:20" pos:end="257:22">len</name> <operator pos:start="257:24" pos:end="257:24">&lt;</operator> <name pos:start="257:26" pos:end="257:38"><name pos:start="257:26" pos:end="257:26">s</name><operator pos:start="257:27" pos:end="257:28">-&gt;</operator><name pos:start="257:29" pos:end="257:38">frame_size</name></name></expr>)</condition> <block pos:start="257:41" pos:end="277:9">{<block_content pos:start="259:13" pos:end="275:28">

            <if_stmt pos:start="259:13" pos:end="261:57"><if pos:start="259:13" pos:end="261:57">if <condition pos:start="259:16" pos:end="259:57">(<expr pos:start="259:17" pos:end="259:56"><name pos:start="259:17" pos:end="259:29"><name pos:start="259:17" pos:end="259:17">s</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:29">frame_size</name></name> <operator pos:start="259:31" pos:end="259:31">&gt;</operator> <name pos:start="259:33" pos:end="259:56">MPA_MAX_CODED_FRAME_SIZE</name></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="261:57"><block_content pos:start="261:17" pos:end="261:57">

                <expr_stmt pos:start="261:17" pos:end="261:57"><expr pos:start="261:17" pos:end="261:56"><name pos:start="261:17" pos:end="261:29"><name pos:start="261:17" pos:end="261:17">s</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:29">frame_size</name></name> <operator pos:start="261:31" pos:end="261:31">=</operator> <name pos:start="261:33" pos:end="261:56">MPA_MAX_CODED_FRAME_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="263:13" pos:end="263:38"><expr pos:start="263:13" pos:end="263:37"><name pos:start="263:13" pos:end="263:15">len</name> <operator pos:start="263:17" pos:end="263:17">=</operator> <name pos:start="263:19" pos:end="263:31"><name pos:start="263:19" pos:end="263:19">s</name><operator pos:start="263:20" pos:end="263:21">-&gt;</operator><name pos:start="263:22" pos:end="263:31">frame_size</name></name> <operator pos:start="263:33" pos:end="263:33">-</operator> <name pos:start="263:35" pos:end="263:37">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="265:13" pos:end="267:31"><if pos:start="265:13" pos:end="267:31">if <condition pos:start="265:16" pos:end="265:31">(<expr pos:start="265:17" pos:end="265:30"><name pos:start="265:17" pos:end="265:19">len</name> <operator pos:start="265:21" pos:end="265:21">&gt;</operator> <name pos:start="265:23" pos:end="265:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="267:17" pos:end="267:31"><block_content pos:start="267:17" pos:end="267:31">

		<expr_stmt pos:start="267:17" pos:end="267:31"><expr pos:start="267:17" pos:end="267:30"><name pos:start="267:17" pos:end="267:19">len</name> <operator pos:start="267:21" pos:end="267:21">=</operator> <name pos:start="267:23" pos:end="267:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="269:13" pos:end="269:47"><expr pos:start="269:13" pos:end="269:46"><call pos:start="269:13" pos:end="269:46"><name pos:start="269:13" pos:end="269:18">memcpy</name><argument_list pos:start="269:19" pos:end="269:46">(<argument pos:start="269:20" pos:end="269:31"><expr pos:start="269:20" pos:end="269:31"><name pos:start="269:20" pos:end="269:31"><name pos:start="269:20" pos:end="269:20">s</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:31">inbuf_ptr</name></name></expr></argument>, <argument pos:start="269:34" pos:end="269:40"><expr pos:start="269:34" pos:end="269:40"><name pos:start="269:34" pos:end="269:40">buf_ptr</name></expr></argument>, <argument pos:start="269:43" pos:end="269:45"><expr pos:start="269:43" pos:end="269:45"><name pos:start="269:43" pos:end="269:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="271:13" pos:end="271:27"><expr pos:start="271:13" pos:end="271:26"><name pos:start="271:13" pos:end="271:19">buf_ptr</name> <operator pos:start="271:21" pos:end="271:22">+=</operator> <name pos:start="271:24" pos:end="271:26">len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="273:13" pos:end="273:32"><expr pos:start="273:13" pos:end="273:31"><name pos:start="273:13" pos:end="273:24"><name pos:start="273:13" pos:end="273:13">s</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:24">inbuf_ptr</name></name> <operator pos:start="273:26" pos:end="273:27">+=</operator> <name pos:start="273:29" pos:end="273:31">len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="275:13" pos:end="275:28"><expr pos:start="275:13" pos:end="275:27"><name pos:start="275:13" pos:end="275:20">buf_size</name> <operator pos:start="275:22" pos:end="275:23">-=</operator> <name pos:start="275:25" pos:end="275:27">len</name></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    <label pos:start="279:5" pos:end="279:14"><name pos:start="279:5" pos:end="279:13">next_data</name>:</label>

        <if_stmt pos:start="281:9" pos:end="307:9"><if pos:start="281:9" pos:end="307:9">if <condition pos:start="281:12" pos:end="283:55">(<expr pos:start="281:13" pos:end="283:54"><name pos:start="281:13" pos:end="281:25"><name pos:start="281:13" pos:end="281:13">s</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:25">frame_size</name></name> <operator pos:start="281:27" pos:end="281:27">&gt;</operator> <literal type="number" pos:start="281:29" pos:end="281:29">0</literal> <operator pos:start="281:31" pos:end="281:32">&amp;&amp;</operator> 

            <operator pos:start="283:13" pos:end="283:13">(</operator><name pos:start="283:14" pos:end="283:25"><name pos:start="283:14" pos:end="283:14">s</name><operator pos:start="283:15" pos:end="283:16">-&gt;</operator><name pos:start="283:17" pos:end="283:25">inbuf_ptr</name></name> <operator pos:start="283:27" pos:end="283:27">-</operator> <name pos:start="283:29" pos:end="283:36"><name pos:start="283:29" pos:end="283:29">s</name><operator pos:start="283:30" pos:end="283:31">-&gt;</operator><name pos:start="283:32" pos:end="283:36">inbuf</name></name><operator pos:start="283:37" pos:end="283:37">)</operator> <operator pos:start="283:39" pos:end="283:40">&gt;=</operator> <name pos:start="283:42" pos:end="283:54"><name pos:start="283:42" pos:end="283:42">s</name><operator pos:start="283:43" pos:end="283:44">-&gt;</operator><name pos:start="283:45" pos:end="283:54">frame_size</name></name></expr>)</condition> <block pos:start="283:57" pos:end="307:9">{<block_content pos:start="285:13" pos:end="305:18">

            <if_stmt pos:start="285:13" pos:end="297:13"><if pos:start="285:13" pos:end="293:13">if <condition pos:start="285:16" pos:end="285:34">(<expr pos:start="285:17" pos:end="285:33"><name pos:start="285:17" pos:end="285:33"><name pos:start="285:17" pos:end="285:21">avctx</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:33">parse_only</name></name></expr>)</condition> <block pos:start="285:36" pos:end="293:13">{<block_content pos:start="289:17" pos:end="291:51">

                <comment type="block" pos:start="287:17" pos:end="287:50">/* simply return the frame data */</comment>

                <expr_stmt pos:start="289:17" pos:end="289:45"><expr pos:start="289:17" pos:end="289:44"><operator pos:start="289:17" pos:end="289:17">*</operator><operator pos:start="289:18" pos:end="289:18">(</operator><name pos:start="289:19" pos:end="289:25">uint8_t</name> <operator pos:start="289:27" pos:end="289:27">*</operator><operator pos:start="289:28" pos:end="289:28">*</operator><operator pos:start="289:29" pos:end="289:29">)</operator><name pos:start="289:30" pos:end="289:33">data</name> <operator pos:start="289:35" pos:end="289:35">=</operator> <name pos:start="289:37" pos:end="289:44"><name pos:start="289:37" pos:end="289:37">s</name><operator pos:start="289:38" pos:end="289:39">-&gt;</operator><name pos:start="289:40" pos:end="289:44">inbuf</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:51"><expr pos:start="291:17" pos:end="291:50"><name pos:start="291:17" pos:end="291:24">out_size</name> <operator pos:start="291:26" pos:end="291:26">=</operator> <name pos:start="291:28" pos:end="291:39"><name pos:start="291:28" pos:end="291:28">s</name><operator pos:start="291:29" pos:end="291:30">-&gt;</operator><name pos:start="291:31" pos:end="291:39">inbuf_ptr</name></name> <operator pos:start="291:41" pos:end="291:41">-</operator> <name pos:start="291:43" pos:end="291:50"><name pos:start="291:43" pos:end="291:43">s</name><operator pos:start="291:44" pos:end="291:45">-&gt;</operator><name pos:start="291:46" pos:end="291:50">inbuf</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="293:15" pos:end="297:13">else <block pos:start="293:20" pos:end="297:13">{<block_content pos:start="295:17" pos:end="295:59">

                <expr_stmt pos:start="295:17" pos:end="295:59"><expr pos:start="295:17" pos:end="295:58"><name pos:start="295:17" pos:end="295:24">out_size</name> <operator pos:start="295:26" pos:end="295:26">=</operator> <call pos:start="295:28" pos:end="295:58"><name pos:start="295:28" pos:end="295:42">mp_decode_frame</name><argument_list pos:start="295:43" pos:end="295:58">(<argument pos:start="295:44" pos:end="295:44"><expr pos:start="295:44" pos:end="295:44"><name pos:start="295:44" pos:end="295:44">s</name></expr></argument>, <argument pos:start="295:47" pos:end="295:57"><expr pos:start="295:47" pos:end="295:57"><name pos:start="295:47" pos:end="295:57">out_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

	    <expr_stmt pos:start="299:13" pos:end="299:36"><expr pos:start="299:13" pos:end="299:35"><name pos:start="299:13" pos:end="299:24"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:24">inbuf_ptr</name></name> <operator pos:start="299:26" pos:end="299:26">=</operator> <name pos:start="299:28" pos:end="299:35"><name pos:start="299:28" pos:end="299:28">s</name><operator pos:start="299:29" pos:end="299:30">-&gt;</operator><name pos:start="299:31" pos:end="299:35">inbuf</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="301:13" pos:end="301:30"><expr pos:start="301:13" pos:end="301:29"><name pos:start="301:13" pos:end="301:25"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:25">frame_size</name></name> <operator pos:start="301:27" pos:end="301:27">=</operator> <literal type="number" pos:start="301:29" pos:end="301:29">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="303:13" pos:end="303:34"><expr pos:start="303:13" pos:end="303:33"><operator pos:start="303:13" pos:end="303:13">*</operator><name pos:start="303:14" pos:end="303:22">data_size</name> <operator pos:start="303:24" pos:end="303:24">=</operator> <name pos:start="303:26" pos:end="303:33">out_size</name></expr>;</expr_stmt>

	    <break pos:start="305:13" pos:end="305:18">break;</break>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="311:5" pos:end="311:25">return <expr pos:start="311:12" pos:end="311:24"><name pos:start="311:12" pos:end="311:18">buf_ptr</name> <operator pos:start="311:20" pos:end="311:20">-</operator> <name pos:start="311:22" pos:end="311:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
