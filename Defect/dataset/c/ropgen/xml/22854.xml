<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22854.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:6">PCIBus</name> <modifier pos:start="1:8" pos:end="1:8">*</modifier></type><name pos:start="1:9" pos:end="1:24">ppce500_pci_init</name><parameter_list pos:start="1:25" pos:end="1:76">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:33">qemu_irq</name></type> <name pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:42">pci_irqs</name><index pos:start="1:43" pos:end="1:45">[<expr pos:start="1:44" pos:end="1:44"><literal type="number" pos:start="1:44" pos:end="1:44">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:75"><decl pos:start="1:48" pos:end="1:75"><type pos:start="1:48" pos:end="1:75"><name pos:start="1:48" pos:end="1:65">target_phys_addr_t</name></type> <name pos:start="1:67" pos:end="1:75">registers</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:16">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">PPCE500PCIState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:31">controller</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:14"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:14">int</name></type> <name pos:start="11:16" pos:end="11:29">ppce500_pci_id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:14">controller</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:54"><name pos:start="15:18" pos:end="15:29">qemu_mallocz</name><argument_list pos:start="15:30" pos:end="15:54">(<argument pos:start="15:31" pos:end="15:53"><expr pos:start="15:31" pos:end="15:53"><sizeof pos:start="15:31" pos:end="15:53">sizeof<argument_list pos:start="15:37" pos:end="15:53">(<argument pos:start="15:38" pos:end="15:52"><expr pos:start="15:38" pos:end="15:52"><name pos:start="15:38" pos:end="15:52">PPCE500PCIState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="25:68"><expr pos:start="19:5" pos:end="25:67"><name pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:14">controller</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:25">pci_state</name><operator pos:start="19:26" pos:end="19:26">.</operator><name pos:start="19:27" pos:end="19:29">bus</name></name> <operator pos:start="19:31" pos:end="19:31">=</operator> <call pos:start="19:33" pos:end="25:67"><name pos:start="19:33" pos:end="19:48">pci_register_bus</name><argument_list pos:start="19:49" pos:end="25:67">(<argument pos:start="19:50" pos:end="19:53"><expr pos:start="19:50" pos:end="19:53"><name pos:start="19:50" pos:end="19:53">NULL</name></expr></argument>, <argument pos:start="19:56" pos:end="19:60"><expr pos:start="19:56" pos:end="19:60"><literal type="string" pos:start="19:56" pos:end="19:60">"pci"</literal></expr></argument>,

                                                 <argument pos:start="21:50" pos:end="21:68"><expr pos:start="21:50" pos:end="21:68"><name pos:start="21:50" pos:end="21:68">mpc85xx_pci_set_irq</name></expr></argument>,

                                                 <argument pos:start="23:50" pos:end="23:68"><expr pos:start="23:50" pos:end="23:68"><name pos:start="23:50" pos:end="23:68">mpc85xx_pci_map_irq</name></expr></argument>,

                                                 <argument pos:start="25:50" pos:end="25:57"><expr pos:start="25:50" pos:end="25:57"><name pos:start="25:50" pos:end="25:57">pci_irqs</name></expr></argument>, <argument pos:start="25:60" pos:end="25:63"><expr pos:start="25:60" pos:end="25:63"><literal type="number" pos:start="25:60" pos:end="25:63">0x88</literal></expr></argument>, <argument pos:start="25:66" pos:end="25:66"><expr pos:start="25:66" pos:end="25:66"><literal type="number" pos:start="25:66" pos:end="25:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="31:43"><expr pos:start="27:5" pos:end="31:42"><name pos:start="27:5" pos:end="27:5">d</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="31:42"><name pos:start="27:9" pos:end="27:27">pci_register_device</name><argument_list pos:start="27:28" pos:end="31:42">(<argument pos:start="27:29" pos:end="27:53"><expr pos:start="27:29" pos:end="27:53"><name pos:start="27:29" pos:end="27:53"><name pos:start="27:29" pos:end="27:38">controller</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:49">pci_state</name><operator pos:start="27:50" pos:end="27:50">.</operator><name pos:start="27:51" pos:end="27:53">bus</name></name></expr></argument>,

                            <argument pos:start="29:29" pos:end="29:41"><expr pos:start="29:29" pos:end="29:41"><literal type="string" pos:start="29:29" pos:end="29:41">"host bridge"</literal></expr></argument>, <argument pos:start="29:44" pos:end="29:60"><expr pos:start="29:44" pos:end="29:60"><sizeof pos:start="29:44" pos:end="29:60">sizeof<argument_list pos:start="29:50" pos:end="29:60">(<argument pos:start="29:51" pos:end="29:59"><expr pos:start="29:51" pos:end="29:59"><name pos:start="29:51" pos:end="29:59">PCIDevice</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                            <argument pos:start="31:29" pos:end="31:29"><expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">NULL</name></expr></argument>, <argument pos:start="31:38" pos:end="31:41"><expr pos:start="31:38" pos:end="31:41"><name pos:start="31:38" pos:end="31:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:65"><expr pos:start="35:5" pos:end="35:64"><call pos:start="35:5" pos:end="35:64"><name pos:start="35:5" pos:end="35:28">pci_config_set_vendor_id</name><argument_list pos:start="35:29" pos:end="35:64">(<argument pos:start="35:30" pos:end="35:38"><expr pos:start="35:30" pos:end="35:38"><name pos:start="35:30" pos:end="35:38"><name pos:start="35:30" pos:end="35:30">d</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:38">config</name></name></expr></argument>, <argument pos:start="35:41" pos:end="35:63"><expr pos:start="35:41" pos:end="35:63"><name pos:start="35:41" pos:end="35:63">PCI_VENDOR_ID_FREESCALE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:64"><expr pos:start="37:5" pos:end="37:63"><call pos:start="37:5" pos:end="37:63"><name pos:start="37:5" pos:end="37:28">pci_config_set_device_id</name><argument_list pos:start="37:29" pos:end="37:63">(<argument pos:start="37:30" pos:end="37:38"><expr pos:start="37:30" pos:end="37:38"><name pos:start="37:30" pos:end="37:38"><name pos:start="37:30" pos:end="37:30">d</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:38">config</name></name></expr></argument>, <argument pos:start="37:41" pos:end="37:62"><expr pos:start="37:41" pos:end="37:62"><name pos:start="37:41" pos:end="37:62">PCI_DEVICE_ID_MPC8533E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:65"><expr pos:start="39:5" pos:end="39:64"><call pos:start="39:5" pos:end="39:64"><name pos:start="39:5" pos:end="39:24">pci_config_set_class</name><argument_list pos:start="39:25" pos:end="39:64">(<argument pos:start="39:26" pos:end="39:34"><expr pos:start="39:26" pos:end="39:34"><name pos:start="39:26" pos:end="39:34"><name pos:start="39:26" pos:end="39:26">d</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:34">config</name></name></expr></argument>, <argument pos:start="39:37" pos:end="39:63"><expr pos:start="39:37" pos:end="39:63"><name pos:start="39:37" pos:end="39:63">PCI_CLASS_PROCESSOR_POWERPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:14">controller</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:23">pci_dev</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <name pos:start="43:27" pos:end="43:27">d</name></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:17">/* CFGADDR */</comment>

    <expr_stmt pos:start="49:5" pos:end="51:70"><expr pos:start="49:5" pos:end="51:69"><name pos:start="49:5" pos:end="49:9">index</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="51:69"><name pos:start="49:13" pos:end="49:34">cpu_register_io_memory</name><argument_list pos:start="49:35" pos:end="51:69">(<argument pos:start="49:36" pos:end="49:55"><expr pos:start="49:36" pos:end="49:55"><name pos:start="49:36" pos:end="49:55">pcie500_cfgaddr_read</name></expr></argument>,

                                   <argument pos:start="51:36" pos:end="51:56"><expr pos:start="51:36" pos:end="51:56"><name pos:start="51:36" pos:end="51:56">pcie500_cfgaddr_write</name></expr></argument>, <argument pos:start="51:59" pos:end="51:68"><expr pos:start="51:59" pos:end="51:68"><name pos:start="51:59" pos:end="51:68">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:18">(<expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:13">index</name> <operator pos:start="53:15" pos:end="53:15">&lt;</operator> <literal type="number" pos:start="53:17" pos:end="53:17">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18">

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">free</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:72"><expr pos:start="57:5" pos:end="57:71"><call pos:start="57:5" pos:end="57:71"><name pos:start="57:5" pos:end="57:32">cpu_register_physical_memory</name><argument_list pos:start="57:33" pos:end="57:71">(<argument pos:start="57:34" pos:end="57:60"><expr pos:start="57:34" pos:end="57:60"><name pos:start="57:34" pos:end="57:42">registers</name> <operator pos:start="57:44" pos:end="57:44">+</operator> <name pos:start="57:46" pos:end="57:60">PCIE500_CFGADDR</name></expr></argument>, <argument pos:start="57:63" pos:end="57:63"><expr pos:start="57:63" pos:end="57:63"><literal type="number" pos:start="57:63" pos:end="57:63">4</literal></expr></argument>, <argument pos:start="57:66" pos:end="57:70"><expr pos:start="57:66" pos:end="57:70"><name pos:start="57:66" pos:end="57:70">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:17">/* CFGDATA */</comment>

    <expr_stmt pos:start="63:5" pos:end="67:59"><expr pos:start="63:5" pos:end="67:58"><name pos:start="63:5" pos:end="63:9">index</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="67:58"><name pos:start="63:13" pos:end="63:34">cpu_register_io_memory</name><argument_list pos:start="63:35" pos:end="67:58">(<argument pos:start="63:36" pos:end="63:55"><expr pos:start="63:36" pos:end="63:55"><name pos:start="63:36" pos:end="63:55">pcie500_cfgdata_read</name></expr></argument>,

                                   <argument pos:start="65:36" pos:end="65:56"><expr pos:start="65:36" pos:end="65:56"><name pos:start="65:36" pos:end="65:56">pcie500_cfgdata_write</name></expr></argument>,

                                   <argument pos:start="67:36" pos:end="67:57"><expr pos:start="67:36" pos:end="67:57"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:57"><name pos:start="67:37" pos:end="67:46">controller</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:57">pci_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:18"><if pos:start="69:5" pos:end="71:18">if <condition pos:start="69:8" pos:end="69:18">(<expr pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:13">index</name> <operator pos:start="69:15" pos:end="69:15">&lt;</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:18"><block_content pos:start="71:9" pos:end="71:18">

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">free</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:72"><expr pos:start="73:5" pos:end="73:71"><call pos:start="73:5" pos:end="73:71"><name pos:start="73:5" pos:end="73:32">cpu_register_physical_memory</name><argument_list pos:start="73:33" pos:end="73:71">(<argument pos:start="73:34" pos:end="73:60"><expr pos:start="73:34" pos:end="73:60"><name pos:start="73:34" pos:end="73:42">registers</name> <operator pos:start="73:44" pos:end="73:44">+</operator> <name pos:start="73:46" pos:end="73:60">PCIE500_CFGDATA</name></expr></argument>, <argument pos:start="73:63" pos:end="73:63"><expr pos:start="73:63" pos:end="73:63"><literal type="number" pos:start="73:63" pos:end="73:63">4</literal></expr></argument>, <argument pos:start="73:66" pos:end="73:70"><expr pos:start="73:66" pos:end="73:70"><name pos:start="73:66" pos:end="73:70">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="79:67"><expr pos:start="77:5" pos:end="79:66"><name pos:start="77:5" pos:end="77:9">index</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <call pos:start="77:13" pos:end="79:66"><name pos:start="77:13" pos:end="77:34">cpu_register_io_memory</name><argument_list pos:start="77:35" pos:end="79:66">(<argument pos:start="77:36" pos:end="77:52"><expr pos:start="77:36" pos:end="77:52"><name pos:start="77:36" pos:end="77:52">e500_pci_reg_read</name></expr></argument>,

                                   <argument pos:start="79:36" pos:end="79:53"><expr pos:start="79:36" pos:end="79:53"><name pos:start="79:36" pos:end="79:53">e500_pci_reg_write</name></expr></argument>, <argument pos:start="79:56" pos:end="79:65"><expr pos:start="79:56" pos:end="79:65"><name pos:start="79:56" pos:end="79:65">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="83:18"><if pos:start="81:5" pos:end="83:18">if <condition pos:start="81:8" pos:end="81:18">(<expr pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:13">index</name> <operator pos:start="81:15" pos:end="81:15">&lt;</operator> <literal type="number" pos:start="81:17" pos:end="81:17">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:18"><block_content pos:start="83:9" pos:end="83:18">

        <goto pos:start="83:9" pos:end="83:18">goto <name pos:start="83:14" pos:end="83:17">free</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="87:60"><expr pos:start="85:5" pos:end="87:59"><call pos:start="85:5" pos:end="87:59"><name pos:start="85:5" pos:end="85:32">cpu_register_physical_memory</name><argument_list pos:start="85:33" pos:end="87:59">(<argument pos:start="85:34" pos:end="85:61"><expr pos:start="85:34" pos:end="85:61"><name pos:start="85:34" pos:end="85:42">registers</name> <operator pos:start="85:44" pos:end="85:44">+</operator> <name pos:start="85:46" pos:end="85:61">PCIE500_REG_BASE</name></expr></argument>,

                                   <argument pos:start="87:36" pos:end="87:51"><expr pos:start="87:36" pos:end="87:51"><name pos:start="87:36" pos:end="87:51">PCIE500_REG_SIZE</name></expr></argument>, <argument pos:start="87:54" pos:end="87:58"><expr pos:start="87:54" pos:end="87:58"><name pos:start="87:54" pos:end="87:58">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:40">/* XXX load/save code not tested. */</comment>

    <expr_stmt pos:start="93:5" pos:end="95:68"><expr pos:start="93:5" pos:end="95:67"><call pos:start="93:5" pos:end="95:67"><name pos:start="93:5" pos:end="93:19">register_savevm</name><argument_list pos:start="93:20" pos:end="95:67">(<argument pos:start="93:21" pos:end="93:33"><expr pos:start="93:21" pos:end="93:33"><literal type="string" pos:start="93:21" pos:end="93:33">"ppce500_pci"</literal></expr></argument>, <argument pos:start="93:36" pos:end="93:51"><expr pos:start="93:36" pos:end="93:51"><name pos:start="93:36" pos:end="93:49">ppce500_pci_id</name><operator pos:start="93:50" pos:end="93:51">++</operator></expr></argument>, <argument pos:start="93:54" pos:end="93:54"><expr pos:start="93:54" pos:end="93:54"><literal type="number" pos:start="93:54" pos:end="93:54">1</literal></expr></argument>,

                    <argument pos:start="95:21" pos:end="95:36"><expr pos:start="95:21" pos:end="95:36"><name pos:start="95:21" pos:end="95:36">ppce500_pci_save</name></expr></argument>, <argument pos:start="95:39" pos:end="95:54"><expr pos:start="95:39" pos:end="95:54"><name pos:start="95:39" pos:end="95:54">ppce500_pci_load</name></expr></argument>, <argument pos:start="95:57" pos:end="95:66"><expr pos:start="95:57" pos:end="95:66"><name pos:start="95:57" pos:end="95:66">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="99:5" pos:end="99:37">return <expr pos:start="99:12" pos:end="99:36"><name pos:start="99:12" pos:end="99:36"><name pos:start="99:12" pos:end="99:21">controller</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:32">pci_state</name><operator pos:start="99:33" pos:end="99:33">.</operator><name pos:start="99:34" pos:end="99:36">bus</name></name></expr>;</return>



<label pos:start="103:1" pos:end="103:5"><name pos:start="103:1" pos:end="103:4">free</name>:</label>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><call pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:10">printf</name><argument_list pos:start="105:11" pos:end="105:34">(<argument pos:start="105:12" pos:end="105:23"><expr pos:start="105:12" pos:end="105:23"><literal type="string" pos:start="105:12" pos:end="105:23">"%s error\n"</literal></expr></argument>, <argument pos:start="105:26" pos:end="105:33"><expr pos:start="105:26" pos:end="105:33"><name pos:start="105:26" pos:end="105:33">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:26"><expr pos:start="107:5" pos:end="107:25"><call pos:start="107:5" pos:end="107:25"><name pos:start="107:5" pos:end="107:13">qemu_free</name><argument_list pos:start="107:14" pos:end="107:25">(<argument pos:start="107:15" pos:end="107:24"><expr pos:start="107:15" pos:end="107:24"><name pos:start="107:15" pos:end="107:24">controller</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:16">return <expr pos:start="109:12" pos:end="109:15"><name pos:start="109:12" pos:end="109:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
