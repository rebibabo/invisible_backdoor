<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5561.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">v9fs_write</name><parameter_list pos:start="1:23" pos:end="1:36">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:29"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:30">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:15">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:16">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:15">len</name> <init pos:start="13:17" pos:end="13:19">= <expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:17">total</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:17">offset</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">V9fsFidState</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">V9fsPDU</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">pdu</name> <init pos:start="21:18" pos:end="21:25">= <expr pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:13">V9fsState</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:16">s</name> <init pos:start="23:18" pos:end="23:25">= <expr pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:22">pdu</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:25">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:16">QEMUIOVector</name></type> <name pos:start="25:18" pos:end="25:26">qiov_full</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:21"><type pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:16">QEMUIOVector</name></type> <name pos:start="27:18" pos:end="27:21">qiov</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:68"><expr pos:start="31:5" pos:end="31:67"><name pos:start="31:5" pos:end="31:10">offset</name> <operator pos:start="31:12" pos:end="31:13">+=</operator> <call pos:start="31:15" pos:end="31:67"><name pos:start="31:15" pos:end="31:27">pdu_unmarshal</name><argument_list pos:start="31:28" pos:end="31:67">(<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">pdu</name></expr></argument>, <argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:39">offset</name></expr></argument>, <argument pos:start="31:42" pos:end="31:46"><expr pos:start="31:42" pos:end="31:46"><literal type="string" pos:start="31:42" pos:end="31:46">"dqd"</literal></expr></argument>, <argument pos:start="31:49" pos:end="31:52"><expr pos:start="31:49" pos:end="31:52"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:52">fid</name></expr></argument>, <argument pos:start="31:55" pos:end="31:58"><expr pos:start="31:55" pos:end="31:58"><operator pos:start="31:55" pos:end="31:55">&amp;</operator><name pos:start="31:56" pos:end="31:58">off</name></expr></argument>, <argument pos:start="31:61" pos:end="31:66"><expr pos:start="31:61" pos:end="31:66"><operator pos:start="31:61" pos:end="31:61">&amp;</operator><name pos:start="31:62" pos:end="31:66">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:66"><expr pos:start="33:5" pos:end="33:65"><call pos:start="33:5" pos:end="33:65"><name pos:start="33:5" pos:end="33:27">v9fs_init_qiov_from_pdu</name><argument_list pos:start="33:28" pos:end="33:65">(<argument pos:start="33:29" pos:end="33:38"><expr pos:start="33:29" pos:end="33:38"><operator pos:start="33:29" pos:end="33:29">&amp;</operator><name pos:start="33:30" pos:end="33:38">qiov_full</name></expr></argument>, <argument pos:start="33:41" pos:end="33:43"><expr pos:start="33:41" pos:end="33:43"><name pos:start="33:41" pos:end="33:43">pdu</name></expr></argument>, <argument pos:start="33:46" pos:end="33:51"><expr pos:start="33:46" pos:end="33:51"><name pos:start="33:46" pos:end="33:51">offset</name></expr></argument>, <argument pos:start="33:54" pos:end="33:58"><expr pos:start="33:54" pos:end="33:58"><name pos:start="33:54" pos:end="33:58">count</name></expr></argument>, <argument pos:start="33:61" pos:end="33:64"><expr pos:start="33:61" pos:end="33:64"><name pos:start="33:61" pos:end="33:64">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:73"><expr pos:start="35:5" pos:end="35:72"><call pos:start="35:5" pos:end="35:72"><name pos:start="35:5" pos:end="35:20">trace_v9fs_write</name><argument_list pos:start="35:21" pos:end="35:72">(<argument pos:start="35:22" pos:end="35:29"><expr pos:start="35:22" pos:end="35:29"><name pos:start="35:22" pos:end="35:29"><name pos:start="35:22" pos:end="35:24">pdu</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:29">tag</name></name></expr></argument>, <argument pos:start="35:32" pos:end="35:38"><expr pos:start="35:32" pos:end="35:38"><name pos:start="35:32" pos:end="35:38"><name pos:start="35:32" pos:end="35:34">pdu</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:38">id</name></name></expr></argument>, <argument pos:start="35:41" pos:end="35:43"><expr pos:start="35:41" pos:end="35:43"><name pos:start="35:41" pos:end="35:43">fid</name></expr></argument>, <argument pos:start="35:46" pos:end="35:48"><expr pos:start="35:46" pos:end="35:48"><name pos:start="35:46" pos:end="35:48">off</name></expr></argument>, <argument pos:start="35:51" pos:end="35:55"><expr pos:start="35:51" pos:end="35:55"><name pos:start="35:51" pos:end="35:55">count</name></expr></argument>, <argument pos:start="35:58" pos:end="35:71"><expr pos:start="35:58" pos:end="35:71"><name pos:start="35:58" pos:end="35:71"><name pos:start="35:58" pos:end="35:66">qiov_full</name><operator pos:start="35:67" pos:end="35:67">.</operator><name pos:start="35:68" pos:end="35:71">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:8">fidp</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:28"><name pos:start="39:12" pos:end="39:18">get_fid</name><argument_list pos:start="39:19" pos:end="39:28">(<argument pos:start="39:20" pos:end="39:22"><expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">pdu</name></expr></argument>, <argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:12">fidp</name> <operator pos:start="41:14" pos:end="41:15">==</operator> <name pos:start="41:17" pos:end="41:20">NULL</name></expr>)</condition> <block pos:start="41:23" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:23">

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">-</operator><name pos:start="43:16" pos:end="43:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:23">goto <name pos:start="45:14" pos:end="45:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="79:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:38">(<expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:12">fidp</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:22">fid_type</name></name> <operator pos:start="49:24" pos:end="49:25">==</operator> <name pos:start="49:27" pos:end="49:37">P9_FID_FILE</name></expr>)</condition> <block pos:start="49:40" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:9">

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:30">(<expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:16">fidp</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:20">fs</name><operator pos:start="51:21" pos:end="51:21">.</operator><name pos:start="51:22" pos:end="51:23">fd</name></name> <operator pos:start="51:25" pos:end="51:26">==</operator> <operator pos:start="51:28" pos:end="51:28">-</operator><literal type="number" pos:start="51:29" pos:end="51:29">1</literal></expr>)</condition> <block pos:start="51:32" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:21">

            <expr_stmt pos:start="53:13" pos:end="53:26"><expr pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:15">err</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <operator pos:start="53:19" pos:end="53:19">-</operator><name pos:start="53:20" pos:end="53:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="55:13" pos:end="55:21">goto <name pos:start="55:18" pos:end="55:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="73:5">else if <condition pos:start="59:15" pos:end="59:46">(<expr pos:start="59:16" pos:end="59:45"><name pos:start="59:16" pos:end="59:29"><name pos:start="59:16" pos:end="59:19">fidp</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:29">fid_type</name></name> <operator pos:start="59:31" pos:end="59:32">==</operator> <name pos:start="59:34" pos:end="59:45">P9_FID_XATTR</name></expr>)</condition> <block pos:start="59:48" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:17">

        <comment type="block" pos:start="61:9" pos:end="65:11">/*

         * setxattr operation

         */</comment>

        <expr_stmt pos:start="67:9" pos:end="69:62"><expr pos:start="67:9" pos:end="69:61"><name pos:start="67:9" pos:end="67:11">err</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="69:61"><name pos:start="67:15" pos:end="67:30">v9fs_xattr_write</name><argument_list pos:start="67:31" pos:end="69:61">(<argument pos:start="67:32" pos:end="67:32"><expr pos:start="67:32" pos:end="67:32"><name pos:start="67:32" pos:end="67:32">s</name></expr></argument>, <argument pos:start="67:35" pos:end="67:37"><expr pos:start="67:35" pos:end="67:37"><name pos:start="67:35" pos:end="67:37">pdu</name></expr></argument>, <argument pos:start="67:40" pos:end="67:43"><expr pos:start="67:40" pos:end="67:43"><name pos:start="67:40" pos:end="67:43">fidp</name></expr></argument>, <argument pos:start="67:46" pos:end="67:48"><expr pos:start="67:46" pos:end="67:48"><name pos:start="67:46" pos:end="67:48">off</name></expr></argument>, <argument pos:start="67:51" pos:end="67:55"><expr pos:start="67:51" pos:end="67:55"><name pos:start="67:51" pos:end="67:55">count</name></expr></argument>,

                               <argument pos:start="69:32" pos:end="69:44"><expr pos:start="69:32" pos:end="69:44"><name pos:start="69:32" pos:end="69:44"><name pos:start="69:32" pos:end="69:40">qiov_full</name><operator pos:start="69:41" pos:end="69:41">.</operator><name pos:start="69:42" pos:end="69:44">iov</name></name></expr></argument>, <argument pos:start="69:47" pos:end="69:60"><expr pos:start="69:47" pos:end="69:60"><name pos:start="69:47" pos:end="69:60"><name pos:start="69:47" pos:end="69:55">qiov_full</name><operator pos:start="69:56" pos:end="69:56">.</operator><name pos:start="69:57" pos:end="69:60">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:17">goto <name pos:start="71:14" pos:end="71:16">out</name>;</goto>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="79:5">else <block pos:start="73:12" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:17">

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:11">err</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">-</operator><name pos:start="75:16" pos:end="75:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:17">goto <name pos:start="77:14" pos:end="77:16">out</name>;</goto>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:43"><expr pos:start="81:5" pos:end="81:42"><call pos:start="81:5" pos:end="81:42"><name pos:start="81:5" pos:end="81:19">qemu_iovec_init</name><argument_list pos:start="81:20" pos:end="81:42">(<argument pos:start="81:21" pos:end="81:25"><expr pos:start="81:21" pos:end="81:25"><operator pos:start="81:21" pos:end="81:21">&amp;</operator><name pos:start="81:22" pos:end="81:25">qiov</name></expr></argument>, <argument pos:start="81:28" pos:end="81:41"><expr pos:start="81:28" pos:end="81:41"><name pos:start="81:28" pos:end="81:41"><name pos:start="81:28" pos:end="81:36">qiov_full</name><operator pos:start="81:37" pos:end="81:37">.</operator><name pos:start="81:38" pos:end="81:41">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <do pos:start="83:5" pos:end="121:39">do <block pos:start="83:8" pos:end="121:5">{<block_content pos:start="85:9" pos:end="119:9">

        <expr_stmt pos:start="85:9" pos:end="85:32"><expr pos:start="85:9" pos:end="85:31"><call pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:24">qemu_iovec_reset</name><argument_list pos:start="85:25" pos:end="85:31">(<argument pos:start="85:26" pos:end="85:30"><expr pos:start="85:26" pos:end="85:30"><operator pos:start="85:26" pos:end="85:26">&amp;</operator><name pos:start="85:27" pos:end="85:30">qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:74"><expr pos:start="87:9" pos:end="87:73"><call pos:start="87:9" pos:end="87:73"><name pos:start="87:9" pos:end="87:23">qemu_iovec_copy</name><argument_list pos:start="87:24" pos:end="87:73">(<argument pos:start="87:25" pos:end="87:29"><expr pos:start="87:25" pos:end="87:29"><operator pos:start="87:25" pos:end="87:25">&amp;</operator><name pos:start="87:26" pos:end="87:29">qiov</name></expr></argument>, <argument pos:start="87:32" pos:end="87:41"><expr pos:start="87:32" pos:end="87:41"><operator pos:start="87:32" pos:end="87:32">&amp;</operator><name pos:start="87:33" pos:end="87:41">qiov_full</name></expr></argument>, <argument pos:start="87:44" pos:end="87:48"><expr pos:start="87:44" pos:end="87:48"><name pos:start="87:44" pos:end="87:48">total</name></expr></argument>, <argument pos:start="87:51" pos:end="87:72"><expr pos:start="87:51" pos:end="87:72"><name pos:start="87:51" pos:end="87:64"><name pos:start="87:51" pos:end="87:59">qiov_full</name><operator pos:start="87:60" pos:end="87:60">.</operator><name pos:start="87:61" pos:end="87:64">size</name></name> <operator pos:start="87:66" pos:end="87:66">-</operator> <name pos:start="87:68" pos:end="87:72">total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:14">(<expr pos:start="89:13" pos:end="89:13"><literal type="number" pos:start="89:13" pos:end="89:13">0</literal></expr>)</condition> <block pos:start="89:16" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:42">

            <expr_stmt pos:start="91:13" pos:end="91:42"><expr pos:start="91:13" pos:end="91:41"><call pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:20">print_sg</name><argument_list pos:start="91:21" pos:end="91:41">(<argument pos:start="91:22" pos:end="91:29"><expr pos:start="91:22" pos:end="91:29"><name pos:start="91:22" pos:end="91:29"><name pos:start="91:22" pos:end="91:25">qiov</name><operator pos:start="91:26" pos:end="91:26">.</operator><name pos:start="91:27" pos:end="91:29">iov</name></name></expr></argument>, <argument pos:start="91:32" pos:end="91:40"><expr pos:start="91:32" pos:end="91:40"><name pos:start="91:32" pos:end="91:40"><name pos:start="91:32" pos:end="91:35">qiov</name><operator pos:start="91:36" pos:end="91:36">.</operator><name pos:start="91:37" pos:end="91:40">niov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="95:9" pos:end="95:35">/* Loop in case of EINTR */</comment>

        <do pos:start="97:9" pos:end="109:51">do <block pos:start="97:12" pos:end="109:9">{<block_content pos:start="99:13" pos:end="107:13">

            <expr_stmt pos:start="99:13" pos:end="99:71"><expr pos:start="99:13" pos:end="99:70"><name pos:start="99:13" pos:end="99:15">len</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:70"><name pos:start="99:19" pos:end="99:33">v9fs_co_pwritev</name><argument_list pos:start="99:34" pos:end="99:70">(<argument pos:start="99:35" pos:end="99:37"><expr pos:start="99:35" pos:end="99:37"><name pos:start="99:35" pos:end="99:37">pdu</name></expr></argument>, <argument pos:start="99:40" pos:end="99:43"><expr pos:start="99:40" pos:end="99:43"><name pos:start="99:40" pos:end="99:43">fidp</name></expr></argument>, <argument pos:start="99:46" pos:end="99:53"><expr pos:start="99:46" pos:end="99:53"><name pos:start="99:46" pos:end="99:53"><name pos:start="99:46" pos:end="99:49">qiov</name><operator pos:start="99:50" pos:end="99:50">.</operator><name pos:start="99:51" pos:end="99:53">iov</name></name></expr></argument>, <argument pos:start="99:56" pos:end="99:64"><expr pos:start="99:56" pos:end="99:64"><name pos:start="99:56" pos:end="99:64"><name pos:start="99:56" pos:end="99:59">qiov</name><operator pos:start="99:60" pos:end="99:60">.</operator><name pos:start="99:61" pos:end="99:64">niov</name></name></expr></argument>, <argument pos:start="99:67" pos:end="99:69"><expr pos:start="99:67" pos:end="99:69"><name pos:start="99:67" pos:end="99:69">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="107:13"><if pos:start="101:13" pos:end="107:13">if <condition pos:start="101:16" pos:end="101:25">(<expr pos:start="101:17" pos:end="101:24"><name pos:start="101:17" pos:end="101:19">len</name> <operator pos:start="101:21" pos:end="101:22">&gt;=</operator> <literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>)</condition> <block pos:start="101:27" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:29">

                <expr_stmt pos:start="103:17" pos:end="103:29"><expr pos:start="103:17" pos:end="103:28"><name pos:start="103:17" pos:end="103:19">off</name>   <operator pos:start="103:23" pos:end="103:24">+=</operator> <name pos:start="103:26" pos:end="103:28">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:29"><expr pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:21">total</name> <operator pos:start="105:23" pos:end="105:24">+=</operator> <name pos:start="105:26" pos:end="105:28">len</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block> while <condition pos:start="109:17" pos:end="109:50">(<expr pos:start="109:18" pos:end="109:49"><name pos:start="109:18" pos:end="109:20">len</name> <operator pos:start="109:22" pos:end="109:23">==</operator> <operator pos:start="109:25" pos:end="109:25">-</operator><name pos:start="109:26" pos:end="109:30">EINTR</name> <operator pos:start="109:32" pos:end="109:33">&amp;&amp;</operator> <operator pos:start="109:35" pos:end="109:35">!</operator><name pos:start="109:36" pos:end="109:49"><name pos:start="109:36" pos:end="109:38">pdu</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:49">cancelled</name></name></expr>)</condition>;</do>

        <if_stmt pos:start="111:9" pos:end="119:9"><if pos:start="111:9" pos:end="119:9">if <condition pos:start="111:12" pos:end="111:20">(<expr pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:15">len</name> <operator pos:start="111:17" pos:end="111:17">&lt;</operator> <literal type="number" pos:start="111:19" pos:end="111:19">0</literal></expr>)</condition> <block pos:start="111:22" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:26">

            <comment type="block" pos:start="113:13" pos:end="113:43">/* IO error return the error */</comment>

            <expr_stmt pos:start="115:13" pos:end="115:22"><expr pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:15">err</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:21">len</name></expr>;</expr_stmt>

            <goto pos:start="117:13" pos:end="117:26">goto <name pos:start="117:18" pos:end="117:25">out_qiov</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="121:13" pos:end="121:38">(<expr pos:start="121:14" pos:end="121:37"><name pos:start="121:14" pos:end="121:35"><name pos:start="121:14" pos:end="121:18">total</name> <argument_list type="generic" pos:start="121:20" pos:end="121:35">&lt; <argument pos:start="121:22" pos:end="121:33"><expr pos:start="121:22" pos:end="121:33"><name pos:start="121:22" pos:end="121:26">count</name> <operator pos:start="121:28" pos:end="121:29">&amp;&amp;</operator> <name pos:start="121:31" pos:end="121:33">len</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="121:37" pos:end="121:37">0</literal></expr>)</condition>;</do>



    <expr_stmt pos:start="125:5" pos:end="125:15"><expr pos:start="125:5" pos:end="125:14"><name pos:start="125:5" pos:end="125:10">offset</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <literal type="number" pos:start="125:14" pos:end="125:14">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:51"><expr pos:start="127:5" pos:end="127:50"><name pos:start="127:5" pos:end="127:10">offset</name> <operator pos:start="127:12" pos:end="127:13">+=</operator> <call pos:start="127:15" pos:end="127:50"><name pos:start="127:15" pos:end="127:25">pdu_marshal</name><argument_list pos:start="127:26" pos:end="127:50">(<argument pos:start="127:27" pos:end="127:29"><expr pos:start="127:27" pos:end="127:29"><name pos:start="127:27" pos:end="127:29">pdu</name></expr></argument>, <argument pos:start="127:32" pos:end="127:37"><expr pos:start="127:32" pos:end="127:37"><name pos:start="127:32" pos:end="127:37">offset</name></expr></argument>, <argument pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><literal type="string" pos:start="127:40" pos:end="127:42">"d"</literal></expr></argument>, <argument pos:start="127:45" pos:end="127:49"><expr pos:start="127:45" pos:end="127:49"><name pos:start="127:45" pos:end="127:49">total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:17"><expr pos:start="129:5" pos:end="129:16"><name pos:start="129:5" pos:end="129:7">err</name> <operator pos:start="129:9" pos:end="129:9">=</operator> <name pos:start="129:11" pos:end="129:16">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:59"><expr pos:start="131:5" pos:end="131:58"><call pos:start="131:5" pos:end="131:58"><name pos:start="131:5" pos:end="131:27">trace_v9fs_write_return</name><argument_list pos:start="131:28" pos:end="131:58">(<argument pos:start="131:29" pos:end="131:36"><expr pos:start="131:29" pos:end="131:36"><name pos:start="131:29" pos:end="131:36"><name pos:start="131:29" pos:end="131:31">pdu</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:36">tag</name></name></expr></argument>, <argument pos:start="131:39" pos:end="131:45"><expr pos:start="131:39" pos:end="131:45"><name pos:start="131:39" pos:end="131:45"><name pos:start="131:39" pos:end="131:41">pdu</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:45">id</name></name></expr></argument>, <argument pos:start="131:48" pos:end="131:52"><expr pos:start="131:48" pos:end="131:52"><name pos:start="131:48" pos:end="131:52">total</name></expr></argument>, <argument pos:start="131:55" pos:end="131:57"><expr pos:start="131:55" pos:end="131:57"><name pos:start="131:55" pos:end="131:57">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="133:1" pos:end="133:9"><name pos:start="133:1" pos:end="133:8">out_qiov</name>:</label>

    <expr_stmt pos:start="135:5" pos:end="135:30"><expr pos:start="135:5" pos:end="135:29"><call pos:start="135:5" pos:end="135:29"><name pos:start="135:5" pos:end="135:22">qemu_iovec_destroy</name><argument_list pos:start="135:23" pos:end="135:29">(<argument pos:start="135:24" pos:end="135:28"><expr pos:start="135:24" pos:end="135:28"><operator pos:start="135:24" pos:end="135:24">&amp;</operator><name pos:start="135:25" pos:end="135:28">qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="137:1" pos:end="137:4"><name pos:start="137:1" pos:end="137:3">out</name>:</label>

    <expr_stmt pos:start="139:5" pos:end="139:23"><expr pos:start="139:5" pos:end="139:22"><call pos:start="139:5" pos:end="139:22"><name pos:start="139:5" pos:end="139:11">put_fid</name><argument_list pos:start="139:12" pos:end="139:22">(<argument pos:start="139:13" pos:end="139:15"><expr pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:15">pdu</name></expr></argument>, <argument pos:start="139:18" pos:end="139:21"><expr pos:start="139:18" pos:end="139:21"><name pos:start="139:18" pos:end="139:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="141:1" pos:end="141:10"><name pos:start="141:1" pos:end="141:9">out_nofid</name>:</label>

    <expr_stmt pos:start="143:5" pos:end="143:35"><expr pos:start="143:5" pos:end="143:34"><call pos:start="143:5" pos:end="143:34"><name pos:start="143:5" pos:end="143:22">qemu_iovec_destroy</name><argument_list pos:start="143:23" pos:end="143:34">(<argument pos:start="143:24" pos:end="143:33"><expr pos:start="143:24" pos:end="143:33"><operator pos:start="143:24" pos:end="143:24">&amp;</operator><name pos:start="143:25" pos:end="143:33">qiov_full</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:30"><expr pos:start="145:5" pos:end="145:29"><call pos:start="145:5" pos:end="145:29"><name pos:start="145:5" pos:end="145:16">complete_pdu</name><argument_list pos:start="145:17" pos:end="145:29">(<argument pos:start="145:18" pos:end="145:18"><expr pos:start="145:18" pos:end="145:18"><name pos:start="145:18" pos:end="145:18">s</name></expr></argument>, <argument pos:start="145:21" pos:end="145:23"><expr pos:start="145:21" pos:end="145:23"><name pos:start="145:21" pos:end="145:23">pdu</name></expr></argument>, <argument pos:start="145:26" pos:end="145:28"><expr pos:start="145:26" pos:end="145:28"><name pos:start="145:26" pos:end="145:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
