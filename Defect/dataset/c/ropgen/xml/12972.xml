<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12972.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">virtio_init_pci</name><parameter_list pos:start="1:28" pos:end="5:61">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">VirtIOPCIProxy</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">proxy</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><name pos:start="1:52" pos:end="1:63">VirtIODevice</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">vdev</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">uint16_t</name></type> <name pos:start="3:38" pos:end="3:43">vendor</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">uint16_t</name></type> <name pos:start="3:55" pos:end="3:60">device</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:47"><decl pos:start="5:29" pos:end="5:47"><type pos:start="5:29" pos:end="5:47"><name pos:start="5:29" pos:end="5:36">uint16_t</name></type> <name pos:start="5:38" pos:end="5:47">class_code</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:60"><decl pos:start="5:50" pos:end="5:60"><type pos:start="5:50" pos:end="5:60"><name pos:start="5:50" pos:end="5:56">uint8_t</name></type> <name pos:start="5:58" pos:end="5:60">pif</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="95:1">{<block_content pos:start="9:5" pos:end="93:58">

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">config</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:9">proxy</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">vdev</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:22">vdev</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:10">config</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:34"><name pos:start="19:14" pos:end="19:18">proxy</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:27">pci_dev</name><operator pos:start="19:28" pos:end="19:28">.</operator><name pos:start="19:29" pos:end="19:34">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><call pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:28">pci_config_set_vendor_id</name><argument_list pos:start="21:29" pos:end="21:44">(<argument pos:start="21:30" pos:end="21:35"><expr pos:start="21:30" pos:end="21:35"><name pos:start="21:30" pos:end="21:35">config</name></expr></argument>, <argument pos:start="21:38" pos:end="21:43"><expr pos:start="21:38" pos:end="21:43"><name pos:start="21:38" pos:end="21:43">vendor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><call pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:28">pci_config_set_device_id</name><argument_list pos:start="23:29" pos:end="23:44">(<argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><name pos:start="23:30" pos:end="23:35">config</name></expr></argument>, <argument pos:start="23:38" pos:end="23:43"><expr pos:start="23:38" pos:end="23:43"><name pos:start="23:38" pos:end="23:43">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:10">config</name><index pos:start="27:11" pos:end="27:16">[<expr pos:start="27:12" pos:end="27:15"><literal type="number" pos:start="27:12" pos:end="27:15">0x08</literal></expr>]</index></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:41">VIRTIO_PCI_ABI_VERSION</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:10">config</name><index pos:start="31:11" pos:end="31:16">[<expr pos:start="31:12" pos:end="31:15"><literal type="number" pos:start="31:12" pos:end="31:15">0x09</literal></expr>]</index></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:22">pif</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><call pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:24">pci_config_set_class</name><argument_list pos:start="33:25" pos:end="33:44">(<argument pos:start="33:26" pos:end="33:31"><expr pos:start="33:26" pos:end="33:31"><name pos:start="33:26" pos:end="33:31">config</name></expr></argument>, <argument pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:43">class_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:10">config</name><index pos:start="35:11" pos:end="35:27">[<expr pos:start="35:12" pos:end="35:26"><name pos:start="35:12" pos:end="35:26">PCI_HEADER_TYPE</name></expr>]</index></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:52">PCI_HEADER_TYPE_NORMAL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:10">config</name><index pos:start="39:11" pos:end="39:16">[<expr pos:start="39:12" pos:end="39:15"><literal type="number" pos:start="39:12" pos:end="39:15">0x2c</literal></expr>]</index></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:25">vendor</name> <operator pos:start="39:27" pos:end="39:27">&amp;</operator> <literal type="number" pos:start="39:29" pos:end="39:32">0xFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:10">config</name><index pos:start="41:11" pos:end="41:16">[<expr pos:start="41:12" pos:end="41:15"><literal type="number" pos:start="41:12" pos:end="41:15">0x2d</literal></expr>]</index></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:26">vendor</name> <operator pos:start="41:28" pos:end="41:29">&gt;&gt;</operator> <literal type="number" pos:start="41:31" pos:end="41:31">8</literal><operator pos:start="41:32" pos:end="41:32">)</operator> <operator pos:start="41:34" pos:end="41:34">&amp;</operator> <literal type="number" pos:start="41:36" pos:end="41:39">0xFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:10">config</name><index pos:start="43:11" pos:end="43:16">[<expr pos:start="43:12" pos:end="43:15"><literal type="number" pos:start="43:12" pos:end="43:15">0x2e</literal></expr>]</index></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:34"><name pos:start="43:20" pos:end="43:23">vdev</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:34">device_id</name></name> <operator pos:start="43:36" pos:end="43:36">&amp;</operator> <literal type="number" pos:start="43:38" pos:end="43:41">0xFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:10">config</name><index pos:start="45:11" pos:end="45:16">[<expr pos:start="45:12" pos:end="45:15"><literal type="number" pos:start="45:12" pos:end="45:15">0x2f</literal></expr>]</index></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:35"><name pos:start="45:21" pos:end="45:24">vdev</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:35">device_id</name></name> <operator pos:start="45:37" pos:end="45:38">&gt;&gt;</operator> <literal type="number" pos:start="45:40" pos:end="45:40">8</literal><operator pos:start="45:41" pos:end="45:41">)</operator> <operator pos:start="45:43" pos:end="45:43">&amp;</operator> <literal type="number" pos:start="45:45" pos:end="45:48">0xFF</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:10">config</name><index pos:start="49:11" pos:end="49:16">[<expr pos:start="49:12" pos:end="49:15"><literal type="number" pos:start="49:12" pos:end="49:15">0x3d</literal></expr>]</index></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="67:27"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="55:55">(<expr pos:start="53:9" pos:end="55:54"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:12">vdev</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:22">nvectors</name></name> <operator pos:start="53:24" pos:end="53:25">&amp;&amp;</operator> <operator pos:start="53:27" pos:end="53:27">!</operator><call pos:start="53:28" pos:end="55:54"><name pos:start="53:28" pos:end="53:36">msix_init</name><argument_list pos:start="53:37" pos:end="55:54">(<argument pos:start="53:38" pos:end="53:52"><expr pos:start="53:38" pos:end="53:52"><operator pos:start="53:38" pos:end="53:38">&amp;</operator><name pos:start="53:39" pos:end="53:52"><name pos:start="53:39" pos:end="53:43">proxy</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:52">pci_dev</name></name></expr></argument>, <argument pos:start="53:55" pos:end="53:68"><expr pos:start="53:55" pos:end="53:68"><name pos:start="53:55" pos:end="53:68"><name pos:start="53:55" pos:end="53:58">vdev</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:68">nvectors</name></name></expr></argument>, <argument pos:start="53:71" pos:end="53:71"><expr pos:start="53:71" pos:end="53:71"><literal type="number" pos:start="53:71" pos:end="53:71">1</literal></expr></argument>, <argument pos:start="53:74" pos:end="53:74"><expr pos:start="53:74" pos:end="53:74"><literal type="number" pos:start="53:74" pos:end="53:74">0</literal></expr></argument>,

                                     <argument pos:start="55:38" pos:end="55:53"><expr pos:start="55:38" pos:end="55:53"><name pos:start="55:38" pos:end="55:53">TARGET_PAGE_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:57" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:40">

        <expr_stmt pos:start="57:9" pos:end="63:40"><expr pos:start="57:9" pos:end="63:39"><call pos:start="57:9" pos:end="63:39"><name pos:start="57:9" pos:end="57:24">pci_register_bar</name><argument_list pos:start="57:25" pos:end="63:39">(<argument pos:start="57:26" pos:end="57:40"><expr pos:start="57:26" pos:end="57:40"><operator pos:start="57:26" pos:end="57:26">&amp;</operator><name pos:start="57:27" pos:end="57:40"><name pos:start="57:27" pos:end="57:31">proxy</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:40">pci_dev</name></name></expr></argument>, <argument pos:start="57:43" pos:end="57:43"><expr pos:start="57:43" pos:end="57:43"><literal type="number" pos:start="57:43" pos:end="57:43">1</literal></expr></argument>,

                         <argument pos:start="59:26" pos:end="59:55"><expr pos:start="59:26" pos:end="59:55"><call pos:start="59:26" pos:end="59:55"><name pos:start="59:26" pos:end="59:38">msix_bar_size</name><argument_list pos:start="59:39" pos:end="59:55">(<argument pos:start="59:40" pos:end="59:54"><expr pos:start="59:40" pos:end="59:54"><operator pos:start="59:40" pos:end="59:40">&amp;</operator><name pos:start="59:41" pos:end="59:54"><name pos:start="59:41" pos:end="59:45">proxy</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:54">pci_dev</name></name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="61:26" pos:end="61:46"><expr pos:start="61:26" pos:end="61:46"><name pos:start="61:26" pos:end="61:46">PCI_ADDRESS_SPACE_MEM</name></expr></argument>,

                         <argument pos:start="63:26" pos:end="63:38"><expr pos:start="63:26" pos:end="63:38"><name pos:start="63:26" pos:end="63:38">msix_mmio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="67:27">else<block type="pseudo" pos:start="67:9" pos:end="67:27"><block_content pos:start="67:9" pos:end="67:27">

        <expr_stmt pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:12">vdev</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:22">nvectors</name></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:54"><expr pos:start="71:5" pos:end="71:53"><name pos:start="71:5" pos:end="71:31"><name pos:start="71:5" pos:end="71:9">proxy</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:18">pci_dev</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:31">config_write</name></name> <operator pos:start="71:33" pos:end="71:33">=</operator> <name pos:start="71:35" pos:end="71:53">virtio_write_config</name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:70"><expr pos:start="75:5" pos:end="75:69"><name pos:start="75:5" pos:end="75:8">size</name> <operator pos:start="75:10" pos:end="75:10">=</operator> <call pos:start="75:12" pos:end="75:50"><name pos:start="75:12" pos:end="75:33">VIRTIO_PCI_REGION_SIZE</name><argument_list pos:start="75:34" pos:end="75:50">(<argument pos:start="75:35" pos:end="75:49"><expr pos:start="75:35" pos:end="75:49"><operator pos:start="75:35" pos:end="75:35">&amp;</operator><name pos:start="75:36" pos:end="75:49"><name pos:start="75:36" pos:end="75:40">proxy</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:49">pci_dev</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:52" pos:end="75:52">+</operator> <name pos:start="75:54" pos:end="75:69"><name pos:start="75:54" pos:end="75:57">vdev</name><operator pos:start="75:58" pos:end="75:59">-&gt;</operator><name pos:start="75:60" pos:end="75:69">config_len</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:35"><if pos:start="77:5" pos:end="79:35">if <condition pos:start="77:8" pos:end="77:24">(<expr pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:12">size</name> <operator pos:start="77:14" pos:end="77:14">&amp;</operator> <operator pos:start="77:16" pos:end="77:16">(</operator><name pos:start="77:17" pos:end="77:20">size</name><operator pos:start="77:21" pos:end="77:21">-</operator><literal type="number" pos:start="77:22" pos:end="77:22">1</literal><operator pos:start="77:23" pos:end="77:23">)</operator></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:35"><block_content pos:start="79:9" pos:end="79:35">

        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:12">size</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <literal type="number" pos:start="79:16" pos:end="79:16">1</literal> <operator pos:start="79:18" pos:end="79:19">&lt;&lt;</operator> <call pos:start="79:21" pos:end="79:34"><name pos:start="79:21" pos:end="79:28">qemu_fls</name><argument_list pos:start="79:29" pos:end="79:34">(<argument pos:start="79:30" pos:end="79:33"><expr pos:start="79:30" pos:end="79:33"><name pos:start="79:30" pos:end="79:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="85:39"><expr pos:start="83:5" pos:end="85:38"><call pos:start="83:5" pos:end="85:38"><name pos:start="83:5" pos:end="83:20">pci_register_bar</name><argument_list pos:start="83:21" pos:end="85:38">(<argument pos:start="83:22" pos:end="83:36"><expr pos:start="83:22" pos:end="83:36"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:36"><name pos:start="83:23" pos:end="83:27">proxy</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:36">pci_dev</name></name></expr></argument>, <argument pos:start="83:39" pos:end="83:39"><expr pos:start="83:39" pos:end="83:39"><literal type="number" pos:start="83:39" pos:end="83:39">0</literal></expr></argument>, <argument pos:start="83:42" pos:end="83:45"><expr pos:start="83:42" pos:end="83:45"><name pos:start="83:42" pos:end="83:45">size</name></expr></argument>, <argument pos:start="83:48" pos:end="83:67"><expr pos:start="83:48" pos:end="83:67"><name pos:start="83:48" pos:end="83:67">PCI_ADDRESS_SPACE_IO</name></expr></argument>,

                           <argument pos:start="85:28" pos:end="85:37"><expr pos:start="85:28" pos:end="85:37"><name pos:start="85:28" pos:end="85:37">virtio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:49"><expr pos:start="89:5" pos:end="89:48"><call pos:start="89:5" pos:end="89:48"><name pos:start="89:5" pos:end="89:23">qemu_register_reset</name><argument_list pos:start="89:24" pos:end="89:48">(<argument pos:start="89:25" pos:end="89:40"><expr pos:start="89:25" pos:end="89:40"><name pos:start="89:25" pos:end="89:40">virtio_pci_reset</name></expr></argument>, <argument pos:start="89:43" pos:end="89:47"><expr pos:start="89:43" pos:end="89:47"><name pos:start="89:43" pos:end="89:47">proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:58"><expr pos:start="93:5" pos:end="93:57"><call pos:start="93:5" pos:end="93:57"><name pos:start="93:5" pos:end="93:22">virtio_bind_device</name><argument_list pos:start="93:23" pos:end="93:57">(<argument pos:start="93:24" pos:end="93:27"><expr pos:start="93:24" pos:end="93:27"><name pos:start="93:24" pos:end="93:27">vdev</name></expr></argument>, <argument pos:start="93:30" pos:end="93:49"><expr pos:start="93:30" pos:end="93:49"><operator pos:start="93:30" pos:end="93:30">&amp;</operator><name pos:start="93:31" pos:end="93:49">virtio_pci_bindings</name></expr></argument>, <argument pos:start="93:52" pos:end="93:56"><expr pos:start="93:52" pos:end="93:56"><name pos:start="93:52" pos:end="93:56">proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
