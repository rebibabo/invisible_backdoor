<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15199.c" pos:tabs="8"><function pos:start="1:1" pos:end="108:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">read_frame_data</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:40">ALSDecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><name pos:start="1:48" pos:end="1:55">unsigned</name> <name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:68">ra_frame</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="108:13">{<block_content pos:start="3:5" pos:end="108:13">
    <decl_stmt pos:start="3:5" pos:end="3:43"><decl pos:start="3:5" pos:end="3:42"><type pos:start="3:5" pos:end="3:23"><name pos:start="3:5" pos:end="3:21">ALSSpecificConfig</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:28">sconf</name> <init pos:start="3:30" pos:end="3:42">= <expr pos:start="3:32" pos:end="3:42"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:42"><name pos:start="3:33" pos:end="3:35">ctx</name><operator pos:start="3:36" pos:end="3:37">-&gt;</operator><name pos:start="3:38" pos:end="3:42">sconf</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:42"><decl pos:start="4:5" pos:end="4:41"><type pos:start="4:5" pos:end="4:20"><name pos:start="4:5" pos:end="4:18">AVCodecContext</name> <modifier pos:start="4:20" pos:end="4:20">*</modifier></type><name pos:start="4:21" pos:end="4:25">avctx</name>    <init pos:start="4:30" pos:end="4:41">= <expr pos:start="4:32" pos:end="4:41"><name pos:start="4:32" pos:end="4:41"><name pos:start="4:32" pos:end="4:34">ctx</name><operator pos:start="4:35" pos:end="4:36">-&gt;</operator><name pos:start="4:37" pos:end="4:41">avctx</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:32">= <expr pos:start="5:25" pos:end="5:32"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:28">ctx</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:32">gb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:32"><decl pos:start="6:5" pos:end="6:31"><type pos:start="6:5" pos:end="6:16"><name pos:start="6:5" pos:end="6:12">unsigned</name> <name pos:start="6:14" pos:end="6:16">int</name></type> <name pos:start="6:18" pos:end="6:31"><name pos:start="6:18" pos:end="6:27">div_blocks</name><index pos:start="6:28" pos:end="6:31">[<expr pos:start="6:29" pos:end="6:30"><literal type="number" pos:start="6:29" pos:end="6:30">32</literal></expr>]</index></name></decl>;</decl_stmt>                <comment type="line" format="doxygen" pos:start="6:49" pos:end="6:65">///&lt; block sizes.</comment>
    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">c</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:30"><decl pos:start="8:5" pos:end="8:29"><type pos:start="8:5" pos:end="8:16"><name pos:start="8:5" pos:end="8:12">unsigned</name> <name pos:start="8:14" pos:end="8:16">int</name></type> <name pos:start="8:18" pos:end="8:29"><name pos:start="8:18" pos:end="8:26">js_blocks</name><index pos:start="8:27" pos:end="8:29">[<expr pos:start="8:28" pos:end="8:28"><literal type="number" pos:start="8:28" pos:end="8:28">2</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">bs_info</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:12"><decl pos:start="10:5" pos:end="10:11"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:11">ret</name></decl>;</decl_stmt>
    <comment type="line" pos:start="11:5" pos:end="11:59">// skip the size of the ra unit if present in the frame</comment>
    <if_stmt pos:start="12:5" pos:end="13:31"><if pos:start="12:5" pos:end="13:31">if <condition pos:start="12:8" pos:end="12:53">(<expr pos:start="12:9" pos:end="12:52"><name pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:13">sconf</name><operator pos:start="12:14" pos:end="12:15">-&gt;</operator><name pos:start="12:16" pos:end="12:22">ra_flag</name></name> <operator pos:start="12:24" pos:end="12:25">==</operator> <name pos:start="12:27" pos:end="12:40">RA_FLAG_FRAMES</name> <operator pos:start="12:42" pos:end="12:43">&amp;&amp;</operator> <name pos:start="12:45" pos:end="12:52">ra_frame</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:31"><block_content pos:start="13:9" pos:end="13:31">
        <expr_stmt pos:start="13:9" pos:end="13:31"><expr pos:start="13:9" pos:end="13:30"><call pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:22">skip_bits_long</name><argument_list pos:start="13:23" pos:end="13:30">(<argument pos:start="13:24" pos:end="13:25"><expr pos:start="13:24" pos:end="13:25"><name pos:start="13:24" pos:end="13:25">gb</name></expr></argument>, <argument pos:start="13:28" pos:end="13:29"><expr pos:start="13:28" pos:end="13:29"><literal type="number" pos:start="13:28" pos:end="13:29">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="14:5" pos:end="108:13"><if pos:start="14:5" pos:end="108:13">if <condition pos:start="14:8" pos:end="14:48">(<expr pos:start="14:9" pos:end="14:47"><name pos:start="14:9" pos:end="14:24"><name pos:start="14:9" pos:end="14:13">sconf</name><operator pos:start="14:14" pos:end="14:15">-&gt;</operator><name pos:start="14:16" pos:end="14:24">mc_coding</name></name> <operator pos:start="14:26" pos:end="14:27">&amp;&amp;</operator> <name pos:start="14:29" pos:end="14:47"><name pos:start="14:29" pos:end="14:33">sconf</name><operator pos:start="14:34" pos:end="14:35">-&gt;</operator><name pos:start="14:36" pos:end="14:47">joint_stereo</name></name></expr>)</condition> <block pos:start="14:50" pos:end="108:13">{<block_content pos:start="15:9" pos:end="108:13">
        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">ctx</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:22">js_switch</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <call pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:34">get_bits1</name><argument_list pos:start="15:35" pos:end="15:38">(<argument pos:start="15:36" pos:end="15:37"><expr pos:start="15:36" pos:end="15:37"><name pos:start="15:36" pos:end="15:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:27"><expr pos:start="16:9" pos:end="16:26"><call pos:start="16:9" pos:end="16:26"><name pos:start="16:9" pos:end="16:22">align_get_bits</name><argument_list pos:start="16:23" pos:end="16:26">(<argument pos:start="16:24" pos:end="16:25"><expr pos:start="16:24" pos:end="16:25"><name pos:start="16:24" pos:end="16:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="108:13"><if pos:start="17:5" pos:end="108:13">if <condition pos:start="17:8" pos:end="17:44">(<expr pos:start="17:9" pos:end="17:43"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:14">sconf</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:25">mc_coding</name></name> <operator pos:start="17:27" pos:end="17:28">||</operator> <name pos:start="17:30" pos:end="17:43"><name pos:start="17:30" pos:end="17:32">ctx</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:43">js_switch</name></name></expr>)</condition> <block pos:start="17:46" pos:end="108:13">{<block_content pos:start="18:9" pos:end="108:13">
        <decl_stmt pos:start="18:9" pos:end="18:50"><decl pos:start="18:9" pos:end="18:49"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:26">independent_bs</name> <init pos:start="18:28" pos:end="18:49">= <expr pos:start="18:30" pos:end="18:49"><operator pos:start="18:30" pos:end="18:30">!</operator><name pos:start="18:31" pos:end="18:49"><name pos:start="18:31" pos:end="18:35">sconf</name><operator pos:start="18:36" pos:end="18:37">-&gt;</operator><name pos:start="18:38" pos:end="18:49">joint_stereo</name></name></expr></init></decl>;</decl_stmt>
        <for pos:start="19:9" pos:end="108:13">for <control pos:start="19:13" pos:end="19:45">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">c</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:40"><expr pos:start="19:21" pos:end="19:39"><name pos:start="19:21" pos:end="19:21">c</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:39"><name pos:start="19:25" pos:end="19:29">avctx</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:39">channels</name></name></expr>;</condition> <incr pos:start="19:42" pos:end="19:44"><expr pos:start="19:42" pos:end="19:44"><name pos:start="19:42" pos:end="19:42">c</name><operator pos:start="19:43" pos:end="19:44">++</operator></expr></incr>)</control> <block pos:start="19:47" pos:end="108:13">{<block_content pos:start="20:13" pos:end="108:13">
            <expr_stmt pos:start="20:13" pos:end="20:29"><expr pos:start="20:13" pos:end="20:28"><name pos:start="20:13" pos:end="20:24"><name pos:start="20:13" pos:end="20:21">js_blocks</name><index pos:start="20:22" pos:end="20:24">[<expr pos:start="20:23" pos:end="20:23"><literal type="number" pos:start="20:23" pos:end="20:23">0</literal></expr>]</index></name> <operator pos:start="20:26" pos:end="20:26">=</operator> <literal type="number" pos:start="20:28" pos:end="20:28">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:29"><expr pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:21">js_blocks</name><index pos:start="21:22" pos:end="21:24">[<expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">1</literal></expr>]</index></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="22:13" pos:end="22:55"><expr pos:start="22:13" pos:end="22:54"><call pos:start="22:13" pos:end="22:54"><name pos:start="22:13" pos:end="22:27">get_block_sizes</name><argument_list pos:start="22:28" pos:end="22:54">(<argument pos:start="22:29" pos:end="22:31"><expr pos:start="22:29" pos:end="22:31"><name pos:start="22:29" pos:end="22:31">ctx</name></expr></argument>, <argument pos:start="22:34" pos:end="22:43"><expr pos:start="22:34" pos:end="22:43"><name pos:start="22:34" pos:end="22:43">div_blocks</name></expr></argument>, <argument pos:start="22:46" pos:end="22:53"><expr pos:start="22:46" pos:end="22:53"><operator pos:start="22:46" pos:end="22:46">&amp;</operator><name pos:start="22:47" pos:end="22:53">bs_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:start="23:13" pos:end="23:79">// if joint_stereo and block_switching is set, independent decoding</comment>
            <comment type="line" pos:start="24:13" pos:end="24:55">// is signaled via the first bit of bs_info</comment>
            <if_stmt pos:start="25:13" pos:end="27:39"><if pos:start="25:13" pos:end="27:39">if <condition pos:start="25:16" pos:end="25:62">(<expr pos:start="25:17" pos:end="25:61"><name pos:start="25:17" pos:end="25:35"><name pos:start="25:17" pos:end="25:21">sconf</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:35">joint_stereo</name></name> <operator pos:start="25:37" pos:end="25:38">&amp;&amp;</operator> <name pos:start="25:40" pos:end="25:61"><name pos:start="25:40" pos:end="25:44">sconf</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:61">block_switching</name></name></expr>)</condition><block type="pseudo" pos:start="26:17" pos:end="27:39"><block_content pos:start="26:17" pos:end="27:39">
                <if_stmt pos:start="26:17" pos:end="27:39"><if pos:start="26:17" pos:end="27:39">if <condition pos:start="26:20" pos:end="26:34">(<expr pos:start="26:21" pos:end="26:33"><name pos:start="26:21" pos:end="26:27">bs_info</name> <operator pos:start="26:29" pos:end="26:30">&gt;&gt;</operator> <literal type="number" pos:start="26:32" pos:end="26:33">31</literal></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:39"><block_content pos:start="27:21" pos:end="27:39">
                    <expr_stmt pos:start="27:21" pos:end="27:39"><expr pos:start="27:21" pos:end="27:38"><name pos:start="27:21" pos:end="27:34">independent_bs</name> <operator pos:start="27:36" pos:end="27:36">=</operator> <literal type="number" pos:start="27:38" pos:end="27:38">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
            <comment type="line" pos:start="28:13" pos:end="28:78">// if this is the last channel, it has to be decoded independently</comment>
            <if_stmt pos:start="29:13" pos:end="30:35"><if pos:start="29:13" pos:end="30:35">if <condition pos:start="29:16" pos:end="29:41">(<expr pos:start="29:17" pos:end="29:40"><name pos:start="29:17" pos:end="29:17">c</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <name pos:start="29:22" pos:end="29:36"><name pos:start="29:22" pos:end="29:26">avctx</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:36">channels</name></name> <operator pos:start="29:38" pos:end="29:38">-</operator> <literal type="number" pos:start="29:40" pos:end="29:40">1</literal></expr>)</condition><block type="pseudo" pos:start="30:17" pos:end="30:35"><block_content pos:start="30:17" pos:end="30:35">
                <expr_stmt pos:start="30:17" pos:end="30:35"><expr pos:start="30:17" pos:end="30:34"><name pos:start="30:17" pos:end="30:30">independent_bs</name> <operator pos:start="30:32" pos:end="30:32">=</operator> <literal type="number" pos:start="30:34" pos:end="30:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="31:13" pos:end="46:5"><if pos:start="31:13" pos:end="37:13">if <condition pos:start="31:16" pos:end="31:31">(<expr pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:30">independent_bs</name></expr>)</condition> <block pos:start="31:33" pos:end="37:13">{<block_content pos:start="32:17" pos:end="36:33">
                <expr_stmt pos:start="32:17" pos:end="33:63"><expr pos:start="32:17" pos:end="33:62"><name pos:start="32:17" pos:end="32:19">ret</name> <operator pos:start="32:21" pos:end="32:21">=</operator> <call pos:start="32:23" pos:end="33:62"><name pos:start="32:23" pos:end="32:39">decode_blocks_ind</name><argument_list pos:start="32:40" pos:end="33:62">(<argument pos:start="32:41" pos:end="32:43"><expr pos:start="32:41" pos:end="32:43"><name pos:start="32:41" pos:end="32:43">ctx</name></expr></argument>, <argument pos:start="32:46" pos:end="32:53"><expr pos:start="32:46" pos:end="32:53"><name pos:start="32:46" pos:end="32:53">ra_frame</name></expr></argument>, <argument pos:start="32:56" pos:end="32:56"><expr pos:start="32:56" pos:end="32:56"><name pos:start="32:56" pos:end="32:56">c</name></expr></argument>,
                                        <argument pos:start="33:41" pos:end="33:50"><expr pos:start="33:41" pos:end="33:50"><name pos:start="33:41" pos:end="33:50">div_blocks</name></expr></argument>, <argument pos:start="33:53" pos:end="33:61"><expr pos:start="33:53" pos:end="33:61"><name pos:start="33:53" pos:end="33:61">js_blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="34:17" pos:end="35:31"><if pos:start="34:17" pos:end="35:31">if <condition pos:start="34:20" pos:end="34:28">(<expr pos:start="34:21" pos:end="34:27"><name pos:start="34:21" pos:end="34:23">ret</name> <operator pos:start="34:25" pos:end="34:25">&lt;</operator> <literal type="number" pos:start="34:27" pos:end="34:27">0</literal></expr>)</condition><block type="pseudo" pos:start="35:21" pos:end="35:31"><block_content pos:start="35:21" pos:end="35:31">
                    <return pos:start="35:21" pos:end="35:31">return <expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
                <expr_stmt pos:start="36:17" pos:end="36:33"><expr pos:start="36:17" pos:end="36:32"><name pos:start="36:17" pos:end="36:30">independent_bs</name><operator pos:start="36:31" pos:end="36:32">--</operator></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="37:15" pos:end="46:5">else <block pos:start="37:20" pos:end="46:5">{<block_content pos:start="38:17" pos:end="45:69">
                <expr_stmt pos:start="38:17" pos:end="38:77"><expr pos:start="38:17" pos:end="38:76"><name pos:start="38:17" pos:end="38:19">ret</name> <operator pos:start="38:21" pos:end="38:21">=</operator> <call pos:start="38:23" pos:end="38:76"><name pos:start="38:23" pos:end="38:35">decode_blocks</name><argument_list pos:start="38:36" pos:end="38:76">(<argument pos:start="38:37" pos:end="38:39"><expr pos:start="38:37" pos:end="38:39"><name pos:start="38:37" pos:end="38:39">ctx</name></expr></argument>, <argument pos:start="38:42" pos:end="38:49"><expr pos:start="38:42" pos:end="38:49"><name pos:start="38:42" pos:end="38:49">ra_frame</name></expr></argument>, <argument pos:start="38:52" pos:end="38:52"><expr pos:start="38:52" pos:end="38:52"><name pos:start="38:52" pos:end="38:52">c</name></expr></argument>, <argument pos:start="38:55" pos:end="38:64"><expr pos:start="38:55" pos:end="38:64"><name pos:start="38:55" pos:end="38:64">div_blocks</name></expr></argument>, <argument pos:start="38:67" pos:end="38:75"><expr pos:start="38:67" pos:end="38:75"><name pos:start="38:67" pos:end="38:75">js_blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="39:17" pos:end="40:31"><if pos:start="39:17" pos:end="40:31">if <condition pos:start="39:20" pos:end="39:28">(<expr pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:23">ret</name> <operator pos:start="39:25" pos:end="39:25">&lt;</operator> <literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr>)</condition><block type="pseudo" pos:start="40:21" pos:end="40:31"><block_content pos:start="40:21" pos:end="40:31">
                    <return pos:start="40:21" pos:end="40:31">return <expr pos:start="40:28" pos:end="40:30"><name pos:start="40:28" pos:end="40:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
                <expr_stmt pos:start="41:17" pos:end="41:20"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:19">++</operator></expr>;</expr_stmt>
            <comment type="line" pos:start="42:13" pos:end="42:42">// store carryover raw samples</comment>
            <expr_stmt pos:start="43:13" pos:end="45:69"><expr pos:start="43:13" pos:end="45:68"><call pos:start="43:13" pos:end="45:68"><name pos:start="43:13" pos:end="43:19">memmove</name><argument_list pos:start="43:20" pos:end="45:68">(<argument pos:start="43:21" pos:end="43:58"><expr pos:start="43:21" pos:end="43:58"><name pos:start="43:21" pos:end="43:39"><name pos:start="43:21" pos:end="43:23">ctx</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:36">raw_samples</name><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">c</name></expr>]</index></name> <operator pos:start="43:41" pos:end="43:41">-</operator> <name pos:start="43:43" pos:end="43:58"><name pos:start="43:43" pos:end="43:47">sconf</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:58">max_order</name></name></expr></argument>,
                    <argument pos:start="44:21" pos:end="44:80"><expr pos:start="44:21" pos:end="44:80"><name pos:start="44:21" pos:end="44:39"><name pos:start="44:21" pos:end="44:23">ctx</name><operator pos:start="44:24" pos:end="44:25">-&gt;</operator><name pos:start="44:26" pos:end="44:36">raw_samples</name><index pos:start="44:37" pos:end="44:39">[<expr pos:start="44:38" pos:end="44:38"><name pos:start="44:38" pos:end="44:38">c</name></expr>]</index></name> <operator pos:start="44:41" pos:end="44:41">-</operator> <name pos:start="44:43" pos:end="44:58"><name pos:start="44:43" pos:end="44:47">sconf</name><operator pos:start="44:48" pos:end="44:49">-&gt;</operator><name pos:start="44:50" pos:end="44:58">max_order</name></name> <operator pos:start="44:60" pos:end="44:60">+</operator> <name pos:start="44:62" pos:end="44:80"><name pos:start="44:62" pos:end="44:66">sconf</name><operator pos:start="44:67" pos:end="44:68">-&gt;</operator><name pos:start="44:69" pos:end="44:80">frame_length</name></name></expr></argument>,
                    <argument pos:start="45:21" pos:end="45:67"><expr pos:start="45:21" pos:end="45:67"><sizeof pos:start="45:21" pos:end="45:48">sizeof<argument_list pos:start="45:27" pos:end="45:48">(<argument pos:start="45:28" pos:end="45:47"><expr pos:start="45:28" pos:end="45:47"><operator pos:start="45:28" pos:end="45:28">*</operator><name pos:start="45:29" pos:end="45:47"><name pos:start="45:29" pos:end="45:31">ctx</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:44">raw_samples</name><index pos:start="45:45" pos:end="45:47">[<expr pos:start="45:46" pos:end="45:46"><name pos:start="45:46" pos:end="45:46">c</name></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="45:50" pos:end="45:50">*</operator> <name pos:start="45:52" pos:end="45:67"><name pos:start="45:52" pos:end="45:56">sconf</name><operator pos:start="45:57" pos:end="45:58">-&gt;</operator><name pos:start="45:59" pos:end="45:67">max_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt> <if_stmt pos:start="46:7" pos:end="108:13"><else pos:start="46:7" pos:end="108:13">else <block pos:start="46:12" pos:end="108:13">{<block_content pos:start="47:9" pos:end="108:13"> <comment type="line" pos:start="46:14" pos:end="46:36">// multi-channel coding</comment>
        <decl_stmt pos:start="47:9" pos:end="47:34"><decl pos:start="47:9" pos:end="47:33"><type pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:20">ALSBlockData</name></type>   <name pos:start="47:24" pos:end="47:25">bd</name> <init pos:start="47:27" pos:end="47:33">= <expr pos:start="47:29" pos:end="47:33"><block pos:start="47:29" pos:end="47:33">{ <expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="48:9" pos:end="48:30"><decl pos:start="48:9" pos:end="48:24"><type pos:start="48:9" pos:end="48:11"><name pos:start="48:9" pos:end="48:11">int</name></type>            <name pos:start="48:24" pos:end="48:24">b</name></decl>, <decl pos:start="48:27" pos:end="48:29"><type ref="prev" pos:start="48:9" pos:end="48:11"/><name pos:start="48:27" pos:end="48:29">ret</name></decl>;</decl_stmt>
        <decl_stmt pos:start="49:9" pos:end="49:67"><decl pos:start="49:9" pos:end="49:66"><type pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:11">int</name>            <modifier pos:start="49:24" pos:end="49:24">*</modifier></type><name pos:start="49:25" pos:end="49:41">reverted_channels</name> <init pos:start="49:43" pos:end="49:66">= <expr pos:start="49:45" pos:end="49:66"><name pos:start="49:45" pos:end="49:66"><name pos:start="49:45" pos:end="49:47">ctx</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:66">reverted_channels</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="50:9" pos:end="50:46"><decl pos:start="50:9" pos:end="50:45"><type pos:start="50:9" pos:end="50:20"><name pos:start="50:9" pos:end="50:16">unsigned</name> <name pos:start="50:18" pos:end="50:20">int</name></type>   <name pos:start="50:24" pos:end="50:29">offset</name>             <init pos:start="50:43" pos:end="50:45">= <expr pos:start="50:45" pos:end="50:45"><literal type="number" pos:start="50:45" pos:end="50:45">0</literal></expr></init></decl>;</decl_stmt>
        <for pos:start="51:9" pos:end="108:13">for <control pos:start="51:13" pos:end="51:45">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">c</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:40"><expr pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:21">c</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <name pos:start="51:25" pos:end="51:39"><name pos:start="51:25" pos:end="51:29">avctx</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:39">channels</name></name></expr>;</condition> <incr pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:42">c</name><operator pos:start="51:43" pos:end="51:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="52:13" pos:end="108:13"><block_content pos:start="52:13" pos:end="108:13">
            <if_stmt pos:start="52:13" pos:end="108:13"><if pos:start="52:13" pos:end="108:13">if <condition pos:start="52:16" pos:end="52:58">(<expr pos:start="52:17" pos:end="52:57"><name pos:start="52:17" pos:end="52:33"><name pos:start="52:17" pos:end="52:19">ctx</name><operator pos:start="52:20" pos:end="52:21">-&gt;</operator><name pos:start="52:22" pos:end="52:30">chan_data</name><index pos:start="52:31" pos:end="52:33">[<expr pos:start="52:32" pos:end="52:32"><name pos:start="52:32" pos:end="52:32">c</name></expr>]</index></name> <operator pos:start="52:35" pos:end="52:35">&lt;</operator> <name pos:start="52:37" pos:end="52:57"><name pos:start="52:37" pos:end="52:39">ctx</name><operator pos:start="52:40" pos:end="52:41">-&gt;</operator><name pos:start="52:42" pos:end="52:57">chan_data_buffer</name></name></expr>)</condition> <block pos:start="52:60" pos:end="108:13">{<block_content pos:start="53:17" pos:end="108:13">
                <expr_stmt pos:start="53:17" pos:end="53:76"><expr pos:start="53:17" pos:end="53:75"><call pos:start="53:17" pos:end="53:75"><name pos:start="53:17" pos:end="53:22">av_log</name><argument_list pos:start="53:23" pos:end="53:75">(<argument pos:start="53:24" pos:end="53:33"><expr pos:start="53:24" pos:end="53:33"><name pos:start="53:24" pos:end="53:33"><name pos:start="53:24" pos:end="53:26">ctx</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:33">avctx</name></name></expr></argument>, <argument pos:start="53:36" pos:end="53:47"><expr pos:start="53:36" pos:end="53:47"><name pos:start="53:36" pos:end="53:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:50" pos:end="53:74"><expr pos:start="53:50" pos:end="53:74"><literal type="string" pos:start="53:50" pos:end="53:74">"Invalid channel data.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:83"><expr pos:start="54:9" pos:end="54:82"><call pos:start="54:9" pos:end="54:82"><name pos:start="54:9" pos:end="54:14">memset</name><argument_list pos:start="54:15" pos:end="54:82">(<argument pos:start="54:16" pos:end="54:32"><expr pos:start="54:16" pos:end="54:32"><name pos:start="54:16" pos:end="54:32">reverted_channels</name></expr></argument>, <argument pos:start="54:35" pos:end="54:35"><expr pos:start="54:35" pos:end="54:35"><literal type="number" pos:start="54:35" pos:end="54:35">0</literal></expr></argument>, <argument pos:start="54:38" pos:end="54:81"><expr pos:start="54:38" pos:end="54:81"><sizeof pos:start="54:38" pos:end="54:63">sizeof<argument_list pos:start="54:44" pos:end="54:63">(<argument pos:start="54:45" pos:end="54:62"><expr pos:start="54:45" pos:end="54:62"><operator pos:start="54:45" pos:end="54:45">*</operator><name pos:start="54:46" pos:end="54:62">reverted_channels</name></expr></argument>)</argument_list></sizeof> <operator pos:start="54:65" pos:end="54:65">*</operator> <name pos:start="54:67" pos:end="54:81"><name pos:start="54:67" pos:end="54:71">avctx</name><operator pos:start="54:72" pos:end="54:73">-&gt;</operator><name pos:start="54:74" pos:end="54:81">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:10">bd</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:19">ra_block</name></name>         <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:38">ra_frame</name></expr>;</expr_stmt>
        <expr_stmt pos:start="56:9" pos:end="56:52"><expr pos:start="56:9" pos:end="56:51"><name pos:start="56:9" pos:end="56:27"><name pos:start="56:9" pos:end="56:10">bd</name><operator pos:start="56:11" pos:end="56:11">.</operator><name pos:start="56:12" pos:end="56:27">prev_raw_samples</name></name> <operator pos:start="56:29" pos:end="56:29">=</operator> <name pos:start="56:31" pos:end="56:51"><name pos:start="56:31" pos:end="56:33">ctx</name><operator pos:start="56:34" pos:end="56:35">-&gt;</operator><name pos:start="56:36" pos:end="56:51">prev_raw_samples</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="57:9" pos:end="57:51"><expr pos:start="57:9" pos:end="57:50"><call pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:23">get_block_sizes</name><argument_list pos:start="57:24" pos:end="57:50">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">ctx</name></expr></argument>, <argument pos:start="57:30" pos:end="57:39"><expr pos:start="57:30" pos:end="57:39"><name pos:start="57:30" pos:end="57:39">div_blocks</name></expr></argument>, <argument pos:start="57:42" pos:end="57:49"><expr pos:start="57:42" pos:end="57:49"><operator pos:start="57:42" pos:end="57:42">&amp;</operator><name pos:start="57:43" pos:end="57:49">bs_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="58:9" pos:end="108:13">for <control pos:start="58:13" pos:end="58:45">(<init pos:start="58:14" pos:end="58:19"><expr pos:start="58:14" pos:end="58:18"><name pos:start="58:14" pos:end="58:14">b</name> <operator pos:start="58:16" pos:end="58:16">=</operator> <literal type="number" pos:start="58:18" pos:end="58:18">0</literal></expr>;</init> <condition pos:start="58:21" pos:end="58:40"><expr pos:start="58:21" pos:end="58:39"><name pos:start="58:21" pos:end="58:21">b</name> <operator pos:start="58:23" pos:end="58:23">&lt;</operator> <name pos:start="58:25" pos:end="58:39"><name pos:start="58:25" pos:end="58:27">ctx</name><operator pos:start="58:28" pos:end="58:29">-&gt;</operator><name pos:start="58:30" pos:end="58:39">num_blocks</name></name></expr>;</condition> <incr pos:start="58:42" pos:end="58:44"><expr pos:start="58:42" pos:end="58:44"><name pos:start="58:42" pos:end="58:42">b</name><operator pos:start="58:43" pos:end="58:44">++</operator></expr></incr>)</control> <block pos:start="58:47" pos:end="108:13">{<block_content pos:start="59:13" pos:end="108:13">
            <expr_stmt pos:start="59:13" pos:end="59:44"><expr pos:start="59:13" pos:end="59:43"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:14">bd</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:27">block_length</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:43"><name pos:start="59:31" pos:end="59:40">div_blocks</name><index pos:start="59:41" pos:end="59:43">[<expr pos:start="59:42" pos:end="59:42"><name pos:start="59:42" pos:end="59:42">b</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="60:13" pos:end="108:13"><if pos:start="60:13" pos:end="108:13">if <condition pos:start="60:16" pos:end="60:37">(<expr pos:start="60:17" pos:end="60:36"><name pos:start="60:17" pos:end="60:31"><name pos:start="60:17" pos:end="60:18">bd</name><operator pos:start="60:19" pos:end="60:19">.</operator><name pos:start="60:20" pos:end="60:31">block_length</name></name> <operator pos:start="60:33" pos:end="60:34">&lt;=</operator> <literal type="number" pos:start="60:36" pos:end="60:36">0</literal></expr>)</condition> <block pos:start="60:39" pos:end="108:13">{<block_content pos:start="61:17" pos:end="108:13">
                <expr_stmt pos:start="61:17" pos:end="63:40"><expr pos:start="61:17" pos:end="63:39"><call pos:start="61:17" pos:end="63:39"><name pos:start="61:17" pos:end="61:22">av_log</name><argument_list pos:start="61:23" pos:end="63:39">(<argument pos:start="61:24" pos:end="61:33"><expr pos:start="61:24" pos:end="61:33"><name pos:start="61:24" pos:end="61:33"><name pos:start="61:24" pos:end="61:26">ctx</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:33">avctx</name></name></expr></argument>, <argument pos:start="61:36" pos:end="61:49"><expr pos:start="61:36" pos:end="61:49"><name pos:start="61:36" pos:end="61:49">AV_LOG_WARNING</name></expr></argument>,
                       <argument pos:start="62:24" pos:end="62:67"><expr pos:start="62:24" pos:end="62:67"><literal type="string" pos:start="62:24" pos:end="62:67">"Invalid block length %u in channel data!\n"</literal></expr></argument>,
                       <argument pos:start="63:24" pos:end="63:38"><expr pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:25">bd</name><operator pos:start="63:26" pos:end="63:26">.</operator><name pos:start="63:27" pos:end="63:38">block_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <continue pos:start="64:17" pos:end="64:25">continue;</continue>
            <for pos:start="65:13" pos:end="108:13">for <control pos:start="65:17" pos:end="65:49">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">c</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:44"><expr pos:start="65:25" pos:end="65:43"><name pos:start="65:25" pos:end="65:25">c</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <name pos:start="65:29" pos:end="65:43"><name pos:start="65:29" pos:end="65:33">avctx</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:43">channels</name></name></expr>;</condition> <incr pos:start="65:46" pos:end="65:48"><expr pos:start="65:46" pos:end="65:48"><name pos:start="65:46" pos:end="65:46">c</name><operator pos:start="65:47" pos:end="65:48">++</operator></expr></incr>)</control> <block pos:start="65:51" pos:end="108:13">{<block_content pos:start="66:17" pos:end="108:13">
                <expr_stmt pos:start="66:17" pos:end="66:54"><expr pos:start="66:17" pos:end="66:53"><name pos:start="66:17" pos:end="66:30"><name pos:start="66:17" pos:end="66:18">bd</name><operator pos:start="66:19" pos:end="66:19">.</operator><name pos:start="66:20" pos:end="66:30">const_block</name></name> <operator pos:start="66:32" pos:end="66:32">=</operator> <name pos:start="66:34" pos:end="66:49"><name pos:start="66:34" pos:end="66:36">ctx</name><operator pos:start="66:37" pos:end="66:38">-&gt;</operator><name pos:start="66:39" pos:end="66:49">const_block</name></name> <operator pos:start="66:51" pos:end="66:51">+</operator> <name pos:start="66:53" pos:end="66:53">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="67:17" pos:end="67:53"><expr pos:start="67:17" pos:end="67:52"><name pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:18">bd</name><operator pos:start="67:19" pos:end="67:19">.</operator><name pos:start="67:20" pos:end="67:29">shift_lsbs</name></name>  <operator pos:start="67:32" pos:end="67:32">=</operator> <name pos:start="67:34" pos:end="67:48"><name pos:start="67:34" pos:end="67:36">ctx</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:48">shift_lsbs</name></name> <operator pos:start="67:50" pos:end="67:50">+</operator> <name pos:start="67:52" pos:end="67:52">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="68:17" pos:end="68:52"><expr pos:start="68:17" pos:end="68:51"><name pos:start="68:17" pos:end="68:28"><name pos:start="68:17" pos:end="68:18">bd</name><operator pos:start="68:19" pos:end="68:19">.</operator><name pos:start="68:20" pos:end="68:28">opt_order</name></name>   <operator pos:start="68:32" pos:end="68:32">=</operator> <name pos:start="68:34" pos:end="68:47"><name pos:start="68:34" pos:end="68:36">ctx</name><operator pos:start="68:37" pos:end="68:38">-&gt;</operator><name pos:start="68:39" pos:end="68:47">opt_order</name></name> <operator pos:start="68:49" pos:end="68:49">+</operator> <name pos:start="68:51" pos:end="68:51">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="69:17" pos:end="69:68"><expr pos:start="69:17" pos:end="69:67"><name pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:18">bd</name><operator pos:start="69:19" pos:end="69:19">.</operator><name pos:start="69:20" pos:end="69:37">store_prev_samples</name></name> <operator pos:start="69:39" pos:end="69:39">=</operator> <name pos:start="69:41" pos:end="69:63"><name pos:start="69:41" pos:end="69:43">ctx</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:63">store_prev_samples</name></name> <operator pos:start="69:65" pos:end="69:65">+</operator> <name pos:start="69:67" pos:end="69:67">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="70:17" pos:end="70:50"><expr pos:start="70:17" pos:end="70:49"><name pos:start="70:17" pos:end="70:26"><name pos:start="70:17" pos:end="70:18">bd</name><operator pos:start="70:19" pos:end="70:19">.</operator><name pos:start="70:20" pos:end="70:26">use_ltp</name></name>     <operator pos:start="70:32" pos:end="70:32">=</operator> <name pos:start="70:34" pos:end="70:45"><name pos:start="70:34" pos:end="70:36">ctx</name><operator pos:start="70:37" pos:end="70:38">-&gt;</operator><name pos:start="70:39" pos:end="70:45">use_ltp</name></name> <operator pos:start="70:47" pos:end="70:47">+</operator> <name pos:start="70:49" pos:end="70:49">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="71:17" pos:end="71:50"><expr pos:start="71:17" pos:end="71:49"><name pos:start="71:17" pos:end="71:26"><name pos:start="71:17" pos:end="71:18">bd</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:26">ltp_lag</name></name>     <operator pos:start="71:32" pos:end="71:32">=</operator> <name pos:start="71:34" pos:end="71:45"><name pos:start="71:34" pos:end="71:36">ctx</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:45">ltp_lag</name></name> <operator pos:start="71:47" pos:end="71:47">+</operator> <name pos:start="71:49" pos:end="71:49">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="72:17" pos:end="72:50"><expr pos:start="72:17" pos:end="72:49"><name pos:start="72:17" pos:end="72:27"><name pos:start="72:17" pos:end="72:18">bd</name><operator pos:start="72:19" pos:end="72:19">.</operator><name pos:start="72:20" pos:end="72:27">ltp_gain</name></name>    <operator pos:start="72:32" pos:end="72:32">=</operator> <name pos:start="72:34" pos:end="72:49"><name pos:start="72:34" pos:end="72:36">ctx</name><operator pos:start="72:37" pos:end="72:38">-&gt;</operator><name pos:start="72:39" pos:end="72:46">ltp_gain</name><index pos:start="72:47" pos:end="72:49">[<expr pos:start="72:48" pos:end="72:48"><name pos:start="72:48" pos:end="72:48">c</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="73:17" pos:end="73:49"><expr pos:start="73:17" pos:end="73:48"><name pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:18">bd</name><operator pos:start="73:19" pos:end="73:19">.</operator><name pos:start="73:20" pos:end="73:26">lpc_cof</name></name>     <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:48"><name pos:start="73:34" pos:end="73:36">ctx</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:45">lpc_cof</name><index pos:start="73:46" pos:end="73:48">[<expr pos:start="73:47" pos:end="73:47"><name pos:start="73:47" pos:end="73:47">c</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="74:17" pos:end="74:51"><expr pos:start="74:17" pos:end="74:50"><name pos:start="74:17" pos:end="74:28"><name pos:start="74:17" pos:end="74:18">bd</name><operator pos:start="74:19" pos:end="74:19">.</operator><name pos:start="74:20" pos:end="74:28">quant_cof</name></name>   <operator pos:start="74:32" pos:end="74:32">=</operator> <name pos:start="74:34" pos:end="74:50"><name pos:start="74:34" pos:end="74:36">ctx</name><operator pos:start="74:37" pos:end="74:38">-&gt;</operator><name pos:start="74:39" pos:end="74:47">quant_cof</name><index pos:start="74:48" pos:end="74:50">[<expr pos:start="74:49" pos:end="74:49"><name pos:start="74:49" pos:end="74:49">c</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="75:17" pos:end="75:62"><expr pos:start="75:17" pos:end="75:61"><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:18">bd</name><operator pos:start="75:19" pos:end="75:19">.</operator><name pos:start="75:20" pos:end="75:30">raw_samples</name></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:52"><name pos:start="75:34" pos:end="75:36">ctx</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:49">raw_samples</name><index pos:start="75:50" pos:end="75:52">[<expr pos:start="75:51" pos:end="75:51"><name pos:start="75:51" pos:end="75:51">c</name></expr>]</index></name> <operator pos:start="75:54" pos:end="75:54">+</operator> <name pos:start="75:56" pos:end="75:61">offset</name></expr>;</expr_stmt>
                <expr_stmt pos:start="76:17" pos:end="76:38"><expr pos:start="76:17" pos:end="76:37"><name pos:start="76:17" pos:end="76:28"><name pos:start="76:17" pos:end="76:18">bd</name><operator pos:start="76:19" pos:end="76:19">.</operator><name pos:start="76:20" pos:end="76:28">raw_other</name></name>   <operator pos:start="76:32" pos:end="76:32">=</operator> <name pos:start="76:34" pos:end="76:37">NULL</name></expr>;</expr_stmt>
                <if_stmt pos:start="77:17" pos:end="78:31"><if pos:start="77:17" pos:end="78:31">if <condition pos:start="77:20" pos:end="77:53">(<expr pos:start="77:21" pos:end="77:52"><operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:24">ret</name> <operator pos:start="77:26" pos:end="77:26">=</operator> <call pos:start="77:28" pos:end="77:47"><name pos:start="77:28" pos:end="77:37">read_block</name><argument_list pos:start="77:38" pos:end="77:47">(<argument pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><name pos:start="77:39" pos:end="77:41">ctx</name></expr></argument>, <argument pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><operator pos:start="77:44" pos:end="77:44">&amp;</operator><name pos:start="77:45" pos:end="77:46">bd</name></expr></argument>)</argument_list></call><operator pos:start="77:48" pos:end="77:48">)</operator> <operator pos:start="77:50" pos:end="77:50">&lt;</operator> <literal type="number" pos:start="77:52" pos:end="77:52">0</literal></expr>)</condition><block type="pseudo" pos:start="78:21" pos:end="78:31"><block_content pos:start="78:21" pos:end="78:31">
                    <return pos:start="78:21" pos:end="78:31">return <expr pos:start="78:28" pos:end="78:30"><name pos:start="78:28" pos:end="78:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
                <if_stmt pos:start="79:17" pos:end="80:31"><if pos:start="79:17" pos:end="80:31">if <condition pos:start="79:20" pos:end="79:77">(<expr pos:start="79:21" pos:end="79:76"><operator pos:start="79:21" pos:end="79:21">(</operator><name pos:start="79:22" pos:end="79:24">ret</name> <operator pos:start="79:26" pos:end="79:26">=</operator> <call pos:start="79:28" pos:end="79:71"><name pos:start="79:28" pos:end="79:44">read_channel_data</name><argument_list pos:start="79:45" pos:end="79:71">(<argument pos:start="79:46" pos:end="79:48"><expr pos:start="79:46" pos:end="79:48"><name pos:start="79:46" pos:end="79:48">ctx</name></expr></argument>, <argument pos:start="79:51" pos:end="79:67"><expr pos:start="79:51" pos:end="79:67"><name pos:start="79:51" pos:end="79:67"><name pos:start="79:51" pos:end="79:53">ctx</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:64">chan_data</name><index pos:start="79:65" pos:end="79:67">[<expr pos:start="79:66" pos:end="79:66"><name pos:start="79:66" pos:end="79:66">c</name></expr>]</index></name></expr></argument>, <argument pos:start="79:70" pos:end="79:70"><expr pos:start="79:70" pos:end="79:70"><name pos:start="79:70" pos:end="79:70">c</name></expr></argument>)</argument_list></call><operator pos:start="79:72" pos:end="79:72">)</operator> <operator pos:start="79:74" pos:end="79:74">&lt;</operator> <literal type="number" pos:start="79:76" pos:end="79:76">0</literal></expr>)</condition><block type="pseudo" pos:start="80:21" pos:end="80:31"><block_content pos:start="80:21" pos:end="80:31">
                    <return pos:start="80:21" pos:end="80:31">return <expr pos:start="80:28" pos:end="80:30"><name pos:start="80:28" pos:end="80:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
            <for pos:start="81:13" pos:end="108:13">for <control pos:start="81:17" pos:end="81:49">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">c</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:44"><expr pos:start="81:25" pos:end="81:43"><name pos:start="81:25" pos:end="81:25">c</name> <operator pos:start="81:27" pos:end="81:27">&lt;</operator> <name pos:start="81:29" pos:end="81:43"><name pos:start="81:29" pos:end="81:33">avctx</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:43">channels</name></name></expr>;</condition> <incr pos:start="81:46" pos:end="81:48"><expr pos:start="81:46" pos:end="81:48"><name pos:start="81:46" pos:end="81:46">c</name><operator pos:start="81:47" pos:end="81:48">++</operator></expr></incr>)</control> <block pos:start="81:51" pos:end="108:13">{<block_content pos:start="82:17" pos:end="108:13">
                <expr_stmt pos:start="82:17" pos:end="83:79"><expr pos:start="82:17" pos:end="83:78"><name pos:start="82:17" pos:end="82:19">ret</name> <operator pos:start="82:21" pos:end="82:21">=</operator> <call pos:start="82:23" pos:end="83:78"><name pos:start="82:23" pos:end="82:48">revert_channel_correlation</name><argument_list pos:start="82:49" pos:end="83:78">(<argument pos:start="82:50" pos:end="82:52"><expr pos:start="82:50" pos:end="82:52"><name pos:start="82:50" pos:end="82:52">ctx</name></expr></argument>, <argument pos:start="82:55" pos:end="82:57"><expr pos:start="82:55" pos:end="82:57"><operator pos:start="82:55" pos:end="82:55">&amp;</operator><name pos:start="82:56" pos:end="82:57">bd</name></expr></argument>, <argument pos:start="82:60" pos:end="82:73"><expr pos:start="82:60" pos:end="82:73"><name pos:start="82:60" pos:end="82:73"><name pos:start="82:60" pos:end="82:62">ctx</name><operator pos:start="82:63" pos:end="82:64">-&gt;</operator><name pos:start="82:65" pos:end="82:73">chan_data</name></name></expr></argument>,
                                                 <argument pos:start="83:50" pos:end="83:66"><expr pos:start="83:50" pos:end="83:66"><name pos:start="83:50" pos:end="83:66">reverted_channels</name></expr></argument>, <argument pos:start="83:69" pos:end="83:74"><expr pos:start="83:69" pos:end="83:74"><name pos:start="83:69" pos:end="83:74">offset</name></expr></argument>, <argument pos:start="83:77" pos:end="83:77"><expr pos:start="83:77" pos:end="83:77"><name pos:start="83:77" pos:end="83:77">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="84:17" pos:end="85:31"><if pos:start="84:17" pos:end="85:31">if <condition pos:start="84:20" pos:end="84:28">(<expr pos:start="84:21" pos:end="84:27"><name pos:start="84:21" pos:end="84:23">ret</name> <operator pos:start="84:25" pos:end="84:25">&lt;</operator> <literal type="number" pos:start="84:27" pos:end="84:27">0</literal></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:31"><block_content pos:start="85:21" pos:end="85:31">
                    <return pos:start="85:21" pos:end="85:31">return <expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
            <for pos:start="86:13" pos:end="108:13">for <control pos:start="86:17" pos:end="86:49">(<init pos:start="86:18" pos:end="86:23"><expr pos:start="86:18" pos:end="86:22"><name pos:start="86:18" pos:end="86:18">c</name> <operator pos:start="86:20" pos:end="86:20">=</operator> <literal type="number" pos:start="86:22" pos:end="86:22">0</literal></expr>;</init> <condition pos:start="86:25" pos:end="86:44"><expr pos:start="86:25" pos:end="86:43"><name pos:start="86:25" pos:end="86:25">c</name> <operator pos:start="86:27" pos:end="86:27">&lt;</operator> <name pos:start="86:29" pos:end="86:43"><name pos:start="86:29" pos:end="86:33">avctx</name><operator pos:start="86:34" pos:end="86:35">-&gt;</operator><name pos:start="86:36" pos:end="86:43">channels</name></name></expr>;</condition> <incr pos:start="86:46" pos:end="86:48"><expr pos:start="86:46" pos:end="86:48"><name pos:start="86:46" pos:end="86:46">c</name><operator pos:start="86:47" pos:end="86:48">++</operator></expr></incr>)</control> <block pos:start="86:51" pos:end="108:13">{<block_content pos:start="87:17" pos:end="108:13">
                <expr_stmt pos:start="87:17" pos:end="87:54"><expr pos:start="87:17" pos:end="87:53"><name pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:18">bd</name><operator pos:start="87:19" pos:end="87:19">.</operator><name pos:start="87:20" pos:end="87:30">const_block</name></name> <operator pos:start="87:32" pos:end="87:32">=</operator> <name pos:start="87:34" pos:end="87:49"><name pos:start="87:34" pos:end="87:36">ctx</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:49">const_block</name></name> <operator pos:start="87:51" pos:end="87:51">+</operator> <name pos:start="87:53" pos:end="87:53">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="88:17" pos:end="88:53"><expr pos:start="88:17" pos:end="88:52"><name pos:start="88:17" pos:end="88:29"><name pos:start="88:17" pos:end="88:18">bd</name><operator pos:start="88:19" pos:end="88:19">.</operator><name pos:start="88:20" pos:end="88:29">shift_lsbs</name></name>  <operator pos:start="88:32" pos:end="88:32">=</operator> <name pos:start="88:34" pos:end="88:48"><name pos:start="88:34" pos:end="88:36">ctx</name><operator pos:start="88:37" pos:end="88:38">-&gt;</operator><name pos:start="88:39" pos:end="88:48">shift_lsbs</name></name> <operator pos:start="88:50" pos:end="88:50">+</operator> <name pos:start="88:52" pos:end="88:52">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="89:17" pos:end="89:52"><expr pos:start="89:17" pos:end="89:51"><name pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:18">bd</name><operator pos:start="89:19" pos:end="89:19">.</operator><name pos:start="89:20" pos:end="89:28">opt_order</name></name>   <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:47"><name pos:start="89:34" pos:end="89:36">ctx</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:47">opt_order</name></name> <operator pos:start="89:49" pos:end="89:49">+</operator> <name pos:start="89:51" pos:end="89:51">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="90:17" pos:end="90:68"><expr pos:start="90:17" pos:end="90:67"><name pos:start="90:17" pos:end="90:37"><name pos:start="90:17" pos:end="90:18">bd</name><operator pos:start="90:19" pos:end="90:19">.</operator><name pos:start="90:20" pos:end="90:37">store_prev_samples</name></name> <operator pos:start="90:39" pos:end="90:39">=</operator> <name pos:start="90:41" pos:end="90:63"><name pos:start="90:41" pos:end="90:43">ctx</name><operator pos:start="90:44" pos:end="90:45">-&gt;</operator><name pos:start="90:46" pos:end="90:63">store_prev_samples</name></name> <operator pos:start="90:65" pos:end="90:65">+</operator> <name pos:start="90:67" pos:end="90:67">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="91:17" pos:end="91:50"><expr pos:start="91:17" pos:end="91:49"><name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:18">bd</name><operator pos:start="91:19" pos:end="91:19">.</operator><name pos:start="91:20" pos:end="91:26">use_ltp</name></name>     <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:45"><name pos:start="91:34" pos:end="91:36">ctx</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:45">use_ltp</name></name> <operator pos:start="91:47" pos:end="91:47">+</operator> <name pos:start="91:49" pos:end="91:49">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="92:17" pos:end="92:50"><expr pos:start="92:17" pos:end="92:49"><name pos:start="92:17" pos:end="92:26"><name pos:start="92:17" pos:end="92:18">bd</name><operator pos:start="92:19" pos:end="92:19">.</operator><name pos:start="92:20" pos:end="92:26">ltp_lag</name></name>     <operator pos:start="92:32" pos:end="92:32">=</operator> <name pos:start="92:34" pos:end="92:45"><name pos:start="92:34" pos:end="92:36">ctx</name><operator pos:start="92:37" pos:end="92:38">-&gt;</operator><name pos:start="92:39" pos:end="92:45">ltp_lag</name></name> <operator pos:start="92:47" pos:end="92:47">+</operator> <name pos:start="92:49" pos:end="92:49">c</name></expr>;</expr_stmt>
                <expr_stmt pos:start="93:17" pos:end="93:50"><expr pos:start="93:17" pos:end="93:49"><name pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:18">bd</name><operator pos:start="93:19" pos:end="93:19">.</operator><name pos:start="93:20" pos:end="93:27">ltp_gain</name></name>    <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:49"><name pos:start="93:34" pos:end="93:36">ctx</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:46">ltp_gain</name><index pos:start="93:47" pos:end="93:49">[<expr pos:start="93:48" pos:end="93:48"><name pos:start="93:48" pos:end="93:48">c</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="94:17" pos:end="94:49"><expr pos:start="94:17" pos:end="94:48"><name pos:start="94:17" pos:end="94:26"><name pos:start="94:17" pos:end="94:18">bd</name><operator pos:start="94:19" pos:end="94:19">.</operator><name pos:start="94:20" pos:end="94:26">lpc_cof</name></name>     <operator pos:start="94:32" pos:end="94:32">=</operator> <name pos:start="94:34" pos:end="94:48"><name pos:start="94:34" pos:end="94:36">ctx</name><operator pos:start="94:37" pos:end="94:38">-&gt;</operator><name pos:start="94:39" pos:end="94:45">lpc_cof</name><index pos:start="94:46" pos:end="94:48">[<expr pos:start="94:47" pos:end="94:47"><name pos:start="94:47" pos:end="94:47">c</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="95:17" pos:end="95:51"><expr pos:start="95:17" pos:end="95:50"><name pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:18">bd</name><operator pos:start="95:19" pos:end="95:19">.</operator><name pos:start="95:20" pos:end="95:28">quant_cof</name></name>   <operator pos:start="95:32" pos:end="95:32">=</operator> <name pos:start="95:34" pos:end="95:50"><name pos:start="95:34" pos:end="95:36">ctx</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:47">quant_cof</name><index pos:start="95:48" pos:end="95:50">[<expr pos:start="95:49" pos:end="95:49"><name pos:start="95:49" pos:end="95:49">c</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="96:17" pos:end="96:62"><expr pos:start="96:17" pos:end="96:61"><name pos:start="96:17" pos:end="96:30"><name pos:start="96:17" pos:end="96:18">bd</name><operator pos:start="96:19" pos:end="96:19">.</operator><name pos:start="96:20" pos:end="96:30">raw_samples</name></name> <operator pos:start="96:32" pos:end="96:32">=</operator> <name pos:start="96:34" pos:end="96:52"><name pos:start="96:34" pos:end="96:36">ctx</name><operator pos:start="96:37" pos:end="96:38">-&gt;</operator><name pos:start="96:39" pos:end="96:49">raw_samples</name><index pos:start="96:50" pos:end="96:52">[<expr pos:start="96:51" pos:end="96:51"><name pos:start="96:51" pos:end="96:51">c</name></expr>]</index></name> <operator pos:start="96:54" pos:end="96:54">+</operator> <name pos:start="96:56" pos:end="96:61">offset</name></expr>;</expr_stmt>
                <if_stmt pos:start="97:17" pos:end="98:31"><if pos:start="97:17" pos:end="98:31">if <condition pos:start="97:20" pos:end="97:55">(<expr pos:start="97:21" pos:end="97:54"><operator pos:start="97:21" pos:end="97:21">(</operator><name pos:start="97:22" pos:end="97:24">ret</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <call pos:start="97:28" pos:end="97:49"><name pos:start="97:28" pos:end="97:39">decode_block</name><argument_list pos:start="97:40" pos:end="97:49">(<argument pos:start="97:41" pos:end="97:43"><expr pos:start="97:41" pos:end="97:43"><name pos:start="97:41" pos:end="97:43">ctx</name></expr></argument>, <argument pos:start="97:46" pos:end="97:48"><expr pos:start="97:46" pos:end="97:48"><operator pos:start="97:46" pos:end="97:46">&amp;</operator><name pos:start="97:47" pos:end="97:48">bd</name></expr></argument>)</argument_list></call><operator pos:start="97:50" pos:end="97:50">)</operator> <operator pos:start="97:52" pos:end="97:52">&lt;</operator> <literal type="number" pos:start="97:54" pos:end="97:54">0</literal></expr>)</condition><block type="pseudo" pos:start="98:21" pos:end="98:31"><block_content pos:start="98:21" pos:end="98:31">
                    <return pos:start="98:21" pos:end="98:31">return <expr pos:start="98:28" pos:end="98:30"><name pos:start="98:28" pos:end="98:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="99:13" pos:end="99:87"><expr pos:start="99:13" pos:end="99:86"><call pos:start="99:13" pos:end="99:86"><name pos:start="99:13" pos:end="99:18">memset</name><argument_list pos:start="99:19" pos:end="99:86">(<argument pos:start="99:20" pos:end="99:36"><expr pos:start="99:20" pos:end="99:36"><name pos:start="99:20" pos:end="99:36">reverted_channels</name></expr></argument>, <argument pos:start="99:39" pos:end="99:39"><expr pos:start="99:39" pos:end="99:39"><literal type="number" pos:start="99:39" pos:end="99:39">0</literal></expr></argument>, <argument pos:start="99:42" pos:end="99:85"><expr pos:start="99:42" pos:end="99:85"><name pos:start="99:42" pos:end="99:56"><name pos:start="99:42" pos:end="99:46">avctx</name><operator pos:start="99:47" pos:end="99:48">-&gt;</operator><name pos:start="99:49" pos:end="99:56">channels</name></name> <operator pos:start="99:58" pos:end="99:58">*</operator> <sizeof pos:start="99:60" pos:end="99:85">sizeof<argument_list pos:start="99:66" pos:end="99:85">(<argument pos:start="99:67" pos:end="99:84"><expr pos:start="99:67" pos:end="99:84"><operator pos:start="99:67" pos:end="99:67">*</operator><name pos:start="99:68" pos:end="99:84">reverted_channels</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="100:13" pos:end="100:41"><expr pos:start="100:13" pos:end="100:40"><name pos:start="100:13" pos:end="100:18">offset</name>      <operator pos:start="100:25" pos:end="100:26">+=</operator> <name pos:start="100:28" pos:end="100:40"><name pos:start="100:28" pos:end="100:37">div_blocks</name><index pos:start="100:38" pos:end="100:40">[<expr pos:start="100:39" pos:end="100:39"><name pos:start="100:39" pos:end="100:39">b</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="101:13" pos:end="101:29"><expr pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:14">bd</name><operator pos:start="101:15" pos:end="101:15">.</operator><name pos:start="101:16" pos:end="101:23">ra_block</name></name>  <operator pos:start="101:26" pos:end="101:26">=</operator> <literal type="number" pos:start="101:28" pos:end="101:28">0</literal></expr>;</expr_stmt>
        <comment type="line" pos:start="102:9" pos:end="102:38">// store carryover raw samples</comment>
        <for pos:start="103:9" pos:end="106:69">for <control pos:start="103:13" pos:end="103:45">(<init pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:18"><name pos:start="103:14" pos:end="103:14">c</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>;</init> <condition pos:start="103:21" pos:end="103:40"><expr pos:start="103:21" pos:end="103:39"><name pos:start="103:21" pos:end="103:21">c</name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <name pos:start="103:25" pos:end="103:39"><name pos:start="103:25" pos:end="103:29">avctx</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:39">channels</name></name></expr>;</condition> <incr pos:start="103:42" pos:end="103:44"><expr pos:start="103:42" pos:end="103:44"><name pos:start="103:42" pos:end="103:42">c</name><operator pos:start="103:43" pos:end="103:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="104:13" pos:end="106:69"><block_content pos:start="104:13" pos:end="106:69">
            <expr_stmt pos:start="104:13" pos:end="106:69"><expr pos:start="104:13" pos:end="106:68"><call pos:start="104:13" pos:end="106:68"><name pos:start="104:13" pos:end="104:19">memmove</name><argument_list pos:start="104:20" pos:end="106:68">(<argument pos:start="104:21" pos:end="104:58"><expr pos:start="104:21" pos:end="104:58"><name pos:start="104:21" pos:end="104:39"><name pos:start="104:21" pos:end="104:23">ctx</name><operator pos:start="104:24" pos:end="104:25">-&gt;</operator><name pos:start="104:26" pos:end="104:36">raw_samples</name><index pos:start="104:37" pos:end="104:39">[<expr pos:start="104:38" pos:end="104:38"><name pos:start="104:38" pos:end="104:38">c</name></expr>]</index></name> <operator pos:start="104:41" pos:end="104:41">-</operator> <name pos:start="104:43" pos:end="104:58"><name pos:start="104:43" pos:end="104:47">sconf</name><operator pos:start="104:48" pos:end="104:49">-&gt;</operator><name pos:start="104:50" pos:end="104:58">max_order</name></name></expr></argument>,
                    <argument pos:start="105:21" pos:end="105:80"><expr pos:start="105:21" pos:end="105:80"><name pos:start="105:21" pos:end="105:39"><name pos:start="105:21" pos:end="105:23">ctx</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:36">raw_samples</name><index pos:start="105:37" pos:end="105:39">[<expr pos:start="105:38" pos:end="105:38"><name pos:start="105:38" pos:end="105:38">c</name></expr>]</index></name> <operator pos:start="105:41" pos:end="105:41">-</operator> <name pos:start="105:43" pos:end="105:58"><name pos:start="105:43" pos:end="105:47">sconf</name><operator pos:start="105:48" pos:end="105:49">-&gt;</operator><name pos:start="105:50" pos:end="105:58">max_order</name></name> <operator pos:start="105:60" pos:end="105:60">+</operator> <name pos:start="105:62" pos:end="105:80"><name pos:start="105:62" pos:end="105:66">sconf</name><operator pos:start="105:67" pos:end="105:68">-&gt;</operator><name pos:start="105:69" pos:end="105:80">frame_length</name></name></expr></argument>,
                    <argument pos:start="106:21" pos:end="106:67"><expr pos:start="106:21" pos:end="106:67"><sizeof pos:start="106:21" pos:end="106:48">sizeof<argument_list pos:start="106:27" pos:end="106:48">(<argument pos:start="106:28" pos:end="106:47"><expr pos:start="106:28" pos:end="106:47"><operator pos:start="106:28" pos:end="106:28">*</operator><name pos:start="106:29" pos:end="106:47"><name pos:start="106:29" pos:end="106:31">ctx</name><operator pos:start="106:32" pos:end="106:33">-&gt;</operator><name pos:start="106:34" pos:end="106:44">raw_samples</name><index pos:start="106:45" pos:end="106:47">[<expr pos:start="106:46" pos:end="106:46"><name pos:start="106:46" pos:end="106:46">c</name></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="106:50" pos:end="106:50">*</operator> <name pos:start="106:52" pos:end="106:67"><name pos:start="106:52" pos:end="106:56">sconf</name><operator pos:start="106:57" pos:end="106:58">-&gt;</operator><name pos:start="106:59" pos:end="106:67">max_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <comment type="line" pos:start="107:5" pos:end="107:33">// TODO: read_diff_float_data</comment>
    <return pos:start="108:5" pos:end="108:13">return <expr pos:start="108:12" pos:end="108:12"><literal type="number" pos:start="108:12" pos:end="108:12">0</literal></expr>;</return></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
