<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20873.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">av_grow_packet</name><parameter_list pos:start="1:19" pos:end="1:46">(<parameter pos:start="1:20" pos:end="1:32"><decl pos:start="1:20" pos:end="1:32"><type pos:start="1:20" pos:end="1:32"><name pos:start="1:20" pos:end="1:27">AVPacket</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">pkt</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:37">int</name></type> <name pos:start="1:39" pos:end="1:45">grow_by</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">new_size</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:78"><expr pos:start="7:5" pos:end="7:77"><call pos:start="7:5" pos:end="7:77"><name pos:start="7:5" pos:end="7:14">av_assert0</name><argument_list pos:start="7:15" pos:end="7:77">(<argument pos:start="7:16" pos:end="7:76"><expr pos:start="7:16" pos:end="7:76"><operator pos:start="7:16" pos:end="7:16">(</operator><name pos:start="7:17" pos:end="7:24">unsigned</name><operator pos:start="7:25" pos:end="7:25">)</operator><name pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:28">pkt</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:34">size</name></name> <operator pos:start="7:36" pos:end="7:37">&lt;=</operator> <name pos:start="7:39" pos:end="7:45">INT_MAX</name> <operator pos:start="7:47" pos:end="7:47">-</operator> <name pos:start="7:49" pos:end="7:76">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="13:18"><if pos:start="9:5" pos:end="13:18">if <condition pos:start="9:8" pos:end="11:61">(<expr pos:start="9:9" pos:end="11:60"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:17">unsigned</name><operator pos:start="9:18" pos:end="9:18">)</operator><name pos:start="9:19" pos:end="9:25">grow_by</name> <operator pos:start="9:27" pos:end="9:27">&gt;</operator>

        <name pos:start="11:9" pos:end="11:15">INT_MAX</name> <operator pos:start="11:17" pos:end="11:17">-</operator> <operator pos:start="11:19" pos:end="11:19">(</operator><name pos:start="11:20" pos:end="11:28"><name pos:start="11:20" pos:end="11:22">pkt</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:28">size</name></name> <operator pos:start="11:30" pos:end="11:30">+</operator> <name pos:start="11:32" pos:end="11:59">AV_INPUT_BUFFER_PADDING_SIZE</name><operator pos:start="11:60" pos:end="11:60">)</operator></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:18"><block_content pos:start="13:9" pos:end="13:18">

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:66"><expr pos:start="17:5" pos:end="17:65"><name pos:start="17:5" pos:end="17:12">new_size</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:24"><name pos:start="17:16" pos:end="17:18">pkt</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:24">size</name></name> <operator pos:start="17:26" pos:end="17:26">+</operator> <name pos:start="17:28" pos:end="17:34">grow_by</name> <operator pos:start="17:36" pos:end="17:36">+</operator> <name pos:start="17:38" pos:end="17:65">AV_INPUT_BUFFER_PADDING_SIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="71:5"><if pos:start="19:5" pos:end="59:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:11">pkt</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">buf</name></name></expr>)</condition> <block pos:start="19:19" pos:end="59:5">{<block_content pos:start="21:9" pos:end="57:9">

        <decl_stmt pos:start="21:9" pos:end="21:27"><decl pos:start="21:9" pos:end="21:26"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">size_t</name></type> <name pos:start="21:16" pos:end="21:26">data_offset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:38"><decl pos:start="23:9" pos:end="23:37"><type pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:15">uint8_t</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:25">old_data</name> <init pos:start="23:27" pos:end="23:37">= <expr pos:start="23:29" pos:end="23:37"><name pos:start="23:29" pos:end="23:37"><name pos:start="23:29" pos:end="23:31">pkt</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:37">data</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:30">(<expr pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:15">pkt</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">data</name></name> <operator pos:start="25:23" pos:end="25:24">==</operator> <name pos:start="25:26" pos:end="25:29">NULL</name></expr>)</condition> <block pos:start="25:32" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:39">

            <expr_stmt pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:23">data_offset</name> <operator pos:start="27:25" pos:end="27:25">=</operator> <literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:15">pkt</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:21">data</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:38"><name pos:start="29:25" pos:end="29:27">pkt</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:32">buf</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:38">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="39:9">else <block pos:start="31:16" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:26">

            <expr_stmt pos:start="33:13" pos:end="33:53"><expr pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:23">data_offset</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:35"><name pos:start="33:27" pos:end="33:29">pkt</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:35">data</name></name> <operator pos:start="33:37" pos:end="33:37">-</operator> <name pos:start="33:39" pos:end="33:52"><name pos:start="33:39" pos:end="33:41">pkt</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:46">buf</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:52">data</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="37:26"><if pos:start="35:13" pos:end="37:26">if <condition pos:start="35:16" pos:end="35:49">(<expr pos:start="35:17" pos:end="35:48"><name pos:start="35:17" pos:end="35:27">data_offset</name> <operator pos:start="35:29" pos:end="35:29">&gt;</operator> <name pos:start="35:31" pos:end="35:37">INT_MAX</name> <operator pos:start="35:39" pos:end="35:39">-</operator> <name pos:start="35:41" pos:end="35:48">new_size</name></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:26"><block_content pos:start="37:17" pos:end="37:26">

                <return pos:start="37:17" pos:end="37:26">return <expr pos:start="37:24" pos:end="37:25"><operator pos:start="37:24" pos:end="37:24">-</operator><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="43:9" pos:end="57:9"><if pos:start="43:9" pos:end="57:9">if <condition pos:start="43:12" pos:end="43:52">(<expr pos:start="43:13" pos:end="43:51"><name pos:start="43:13" pos:end="43:20">new_size</name> <operator pos:start="43:22" pos:end="43:22">+</operator> <name pos:start="43:24" pos:end="43:34">data_offset</name> <operator pos:start="43:36" pos:end="43:36">&gt;</operator> <name pos:start="43:38" pos:end="43:51"><name pos:start="43:38" pos:end="43:40">pkt</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:45">buf</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:51">size</name></name></expr>)</condition> <block pos:start="43:54" pos:end="57:9">{<block_content pos:start="45:13" pos:end="55:53">

            <decl_stmt pos:start="45:13" pos:end="45:75"><decl pos:start="45:13" pos:end="45:74"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:19">ret</name> <init pos:start="45:21" pos:end="45:74">= <expr pos:start="45:23" pos:end="45:74"><call pos:start="45:23" pos:end="45:74"><name pos:start="45:23" pos:end="45:39">av_buffer_realloc</name><argument_list pos:start="45:40" pos:end="45:74">(<argument pos:start="45:41" pos:end="45:49"><expr pos:start="45:41" pos:end="45:49"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:49"><name pos:start="45:42" pos:end="45:44">pkt</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:49">buf</name></name></expr></argument>, <argument pos:start="45:52" pos:end="45:73"><expr pos:start="45:52" pos:end="45:73"><name pos:start="45:52" pos:end="45:59">new_size</name> <operator pos:start="45:61" pos:end="45:61">+</operator> <name pos:start="45:63" pos:end="45:73">data_offset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:24">(<expr pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:19">ret</name> <operator pos:start="47:21" pos:end="47:21">&lt;</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>)</condition> <block pos:start="47:26" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:27">

                <expr_stmt pos:start="49:17" pos:end="49:37"><expr pos:start="49:17" pos:end="49:36"><name pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:19">pkt</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:25">data</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:36">old_data</name></expr>;</expr_stmt>

                <return pos:start="51:17" pos:end="51:27">return <expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:53"><expr pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:15">pkt</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">data</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:38"><name pos:start="55:25" pos:end="55:27">pkt</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:32">buf</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:38">data</name></name> <operator pos:start="55:40" pos:end="55:40">+</operator> <name pos:start="55:42" pos:end="55:52">data_offset</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="71:5">else <block pos:start="59:12" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:35">

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">pkt</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:16">buf</name></name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:44"><name pos:start="61:20" pos:end="61:34">av_buffer_alloc</name><argument_list pos:start="61:35" pos:end="61:44">(<argument pos:start="61:36" pos:end="61:43"><expr pos:start="61:36" pos:end="61:43"><name pos:start="61:36" pos:end="61:43">new_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:35"><if pos:start="63:9" pos:end="65:35">if <condition pos:start="63:12" pos:end="63:22">(<expr pos:start="63:13" pos:end="63:21"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:21"><name pos:start="63:14" pos:end="63:16">pkt</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:21">buf</name></name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:35"><block_content pos:start="65:13" pos:end="65:35">

            <return pos:start="65:13" pos:end="65:35">return <expr pos:start="65:20" pos:end="65:34"><call pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:26">AVERROR</name><argument_list pos:start="65:27" pos:end="65:34">(<argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:53"><expr pos:start="67:9" pos:end="67:52"><call pos:start="67:9" pos:end="67:52"><name pos:start="67:9" pos:end="67:14">memcpy</name><argument_list pos:start="67:15" pos:end="67:52">(<argument pos:start="67:16" pos:end="67:29"><expr pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:18">pkt</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:23">buf</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:29">data</name></name></expr></argument>, <argument pos:start="67:32" pos:end="67:40"><expr pos:start="67:32" pos:end="67:40"><name pos:start="67:32" pos:end="67:40"><name pos:start="67:32" pos:end="67:34">pkt</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:40">data</name></name></expr></argument>, <argument pos:start="67:43" pos:end="67:51"><expr pos:start="67:43" pos:end="67:51"><name pos:start="67:43" pos:end="67:51"><name pos:start="67:43" pos:end="67:45">pkt</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:51">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:35"><expr pos:start="69:9" pos:end="69:34"><name pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:11">pkt</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:17">data</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:23">pkt</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:28">buf</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:34">data</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:25"><expr pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:13"><name pos:start="73:5" pos:end="73:7">pkt</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:13">size</name></name> <operator pos:start="73:15" pos:end="73:16">+=</operator> <name pos:start="73:18" pos:end="73:24">grow_by</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:67"><expr pos:start="75:5" pos:end="75:66"><call pos:start="75:5" pos:end="75:66"><name pos:start="75:5" pos:end="75:10">memset</name><argument_list pos:start="75:11" pos:end="75:66">(<argument pos:start="75:12" pos:end="75:32"><expr pos:start="75:12" pos:end="75:32"><name pos:start="75:12" pos:end="75:20"><name pos:start="75:12" pos:end="75:14">pkt</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:20">data</name></name> <operator pos:start="75:22" pos:end="75:22">+</operator> <name pos:start="75:24" pos:end="75:32"><name pos:start="75:24" pos:end="75:26">pkt</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:32">size</name></name></expr></argument>, <argument pos:start="75:35" pos:end="75:35"><expr pos:start="75:35" pos:end="75:35"><literal type="number" pos:start="75:35" pos:end="75:35">0</literal></expr></argument>, <argument pos:start="75:38" pos:end="75:65"><expr pos:start="75:38" pos:end="75:65"><name pos:start="75:38" pos:end="75:65">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
