<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27306.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">pool_release_buffer</name><parameter_list pos:start="1:32" pos:end="1:60">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:31">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">BufferPoolEntry</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">buf</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVBufferPool</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">pool</name> <init pos:start="7:24" pos:end="7:34">= <expr pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:28">buf</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:34">pool</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:44"><if pos:start="11:5" pos:end="13:44">if<condition pos:start="11:7" pos:end="11:31">(<expr pos:start="11:8" pos:end="11:30"><name pos:start="11:8" pos:end="11:30">CONFIG_MEMORY_POISONING</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:44"><block_content pos:start="13:9" pos:end="13:44">

        <expr_stmt pos:start="13:9" pos:end="13:44"><expr pos:start="13:9" pos:end="13:43"><call pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:14">memset</name><argument_list pos:start="13:15" pos:end="13:43">(<argument pos:start="13:16" pos:end="13:24"><expr pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:24"><name pos:start="13:16" pos:end="13:18">buf</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:24">data</name></name></expr></argument>, <argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><literal type="number" pos:start="13:27" pos:end="13:30">0x2a</literal></expr></argument>, <argument pos:start="13:33" pos:end="13:42"><expr pos:start="13:33" pos:end="13:42"><name pos:start="13:33" pos:end="13:42"><name pos:start="13:33" pos:end="13:36">pool</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:42">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:15">add_to_pool</name><argument_list pos:start="17:16" pos:end="17:20">(<argument pos:start="17:17" pos:end="17:19"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:62">(<expr pos:start="19:9" pos:end="19:61"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:61"><name pos:start="19:10" pos:end="19:40">avpriv_atomic_int_add_and_fetch</name><argument_list pos:start="19:41" pos:end="19:61">(<argument pos:start="19:42" pos:end="19:56"><expr pos:start="19:42" pos:end="19:56"><operator pos:start="19:42" pos:end="19:42">&amp;</operator><name pos:start="19:43" pos:end="19:56"><name pos:start="19:43" pos:end="19:46">pool</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:56">refcount</name></name></expr></argument>, <argument pos:start="19:59" pos:end="19:60"><expr pos:start="19:59" pos:end="19:60"><operator pos:start="19:59" pos:end="19:59">-</operator><literal type="number" pos:start="19:60" pos:end="19:60">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><call pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:24">buffer_pool_free</name><argument_list pos:start="21:25" pos:end="21:30">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
