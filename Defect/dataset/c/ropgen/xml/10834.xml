<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10834.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tcp_read_packet</name><parameter_list pos:start="1:27" pos:end="3:54">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><name pos:start="1:48" pos:end="1:57">RTSPStream</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">prtsp_st</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:39"><decl pos:start="3:28" pos:end="3:39"><type pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="105:1">{<block_content pos:start="7:5" pos:end="103:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">id</name></decl>, <decl pos:start="9:13" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:15">len</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:23">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="16:0"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">RTSPStream</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">rtsp_st</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="15:1" pos:end="15:20">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:20">DEBUG_RTP_TCP</name></cpp:ifdef>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:11">dprintf</name><argument_list pos:start="17:12" pos:end="17:36">(<argument pos:start="17:13" pos:end="17:13"><expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">s</name></expr></argument>, <argument pos:start="17:16" pos:end="17:35"><expr pos:start="17:16" pos:end="17:35"><literal type="string" pos:start="17:16" pos:end="17:35">"tcp_read_packet:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

 <label pos:start="21:2" pos:end="21:6"><name pos:start="21:2" pos:end="21:5">redo</name>:</label>

    <for pos:start="23:5" pos:end="45:5">for<control pos:start="23:8" pos:end="23:11">(<init pos:start="23:9" pos:end="23:9">;</init><condition pos:start="23:10" pos:end="23:10">;</condition><incr/>)</control> <block pos:start="23:13" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:21">

        <decl_stmt pos:start="25:9" pos:end="25:32"><decl pos:start="25:9" pos:end="25:31"><type pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:25">RTSPMessageHeader</name></type> <name pos:start="25:27" pos:end="25:31">reply</name></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:49"><name pos:start="29:15" pos:end="29:29">rtsp_read_reply</name><argument_list pos:start="29:30" pos:end="29:49">(<argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">s</name></expr></argument>, <argument pos:start="29:34" pos:end="29:39"><expr pos:start="29:34" pos:end="29:39"><operator pos:start="29:34" pos:end="29:34">&amp;</operator><name pos:start="29:35" pos:end="29:39">reply</name></expr></argument>, <argument pos:start="29:42" pos:end="29:45"><expr pos:start="29:42" pos:end="29:45"><name pos:start="29:42" pos:end="29:45">NULL</name></expr></argument>, <argument pos:start="29:48" pos:end="29:48"><expr pos:start="29:48" pos:end="29:48"><literal type="number" pos:start="29:48" pos:end="29:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:22"><if pos:start="31:9" pos:end="33:22">if <condition pos:start="31:12" pos:end="31:22">(<expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:18">==</operator> <operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:22"><block_content pos:start="33:13" pos:end="33:22">

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="37:18"><if pos:start="35:9" pos:end="37:18">if <condition pos:start="35:12" pos:end="35:21">(<expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <literal type="number" pos:start="35:20" pos:end="35:20">1</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:18"><block_content pos:start="37:13" pos:end="37:18"> <comment type="block" pos:start="35:23" pos:end="35:40">/* received '$' */</comment>

            <break pos:start="37:13" pos:end="37:18">break;</break></block_content></block></if></if_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:32">/* XXX: parse message */</comment>

        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:44">(<expr pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:14">rt</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">state</name></name> <operator pos:start="41:23" pos:end="41:24">!=</operator> <name pos:start="41:26" pos:end="41:43">RTSP_STATE_PLAYING</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="47:5" pos:end="47:49"><expr pos:start="47:5" pos:end="47:48"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:48"><name pos:start="47:11" pos:end="47:27">url_read_complete</name><argument_list pos:start="47:28" pos:end="47:48">(<argument pos:start="47:29" pos:end="47:39"><expr pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:30">rt</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:39">rtsp_hd</name></name></expr></argument>, <argument pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><name pos:start="47:42" pos:end="47:44">buf</name></expr></argument>, <argument pos:start="47:47" pos:end="47:47"><expr pos:start="47:47" pos:end="47:47"><literal type="number" pos:start="47:47" pos:end="47:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if <condition pos:start="49:8" pos:end="49:17">(<expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:14">!=</operator> <literal type="number" pos:start="49:16" pos:end="49:16">3</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:16"><expr pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:6">id</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <name pos:start="53:10" pos:end="53:15"><name pos:start="53:10" pos:end="53:12">buf</name><index pos:start="53:13" pos:end="53:15">[<expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="58:0"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:7">len</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:26"><name pos:start="55:11" pos:end="55:17">AV_RB16</name><argument_list pos:start="55:18" pos:end="55:26">(<argument pos:start="55:19" pos:end="55:25"><expr pos:start="55:19" pos:end="55:25"><name pos:start="55:19" pos:end="55:21">buf</name> <operator pos:start="55:23" pos:end="55:23">+</operator> <literal type="number" pos:start="55:25" pos:end="55:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="57:1" pos:end="57:20">#<cpp:directive pos:start="57:2" pos:end="57:6">ifdef</cpp:directive> <name pos:start="57:8" pos:end="57:20">DEBUG_RTP_TCP</name></cpp:ifdef>

    <expr_stmt pos:start="59:5" pos:end="62:0"><expr pos:start="59:5" pos:end="59:41"><call pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:11">dprintf</name><argument_list pos:start="59:12" pos:end="59:41">(<argument pos:start="59:13" pos:end="59:13"><expr pos:start="59:13" pos:end="59:13"><name pos:start="59:13" pos:end="59:13">s</name></expr></argument>, <argument pos:start="59:16" pos:end="59:31"><expr pos:start="59:16" pos:end="59:31"><literal type="string" pos:start="59:16" pos:end="59:31">"id=%d len=%d\n"</literal></expr></argument>, <argument pos:start="59:34" pos:end="59:35"><expr pos:start="59:34" pos:end="59:35"><name pos:start="59:34" pos:end="59:35">id</name></expr></argument>, <argument pos:start="59:38" pos:end="59:40"><expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="63:5" pos:end="65:18"><if pos:start="63:5" pos:end="65:18">if <condition pos:start="63:8" pos:end="63:35">(<expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:11">len</name> <operator pos:start="63:13" pos:end="63:13">&gt;</operator> <name pos:start="63:15" pos:end="63:22">buf_size</name> <operator pos:start="63:24" pos:end="63:25">||</operator> <name pos:start="63:27" pos:end="63:29">len</name> <operator pos:start="63:31" pos:end="63:31">&lt;</operator> <literal type="number" pos:start="63:33" pos:end="63:34">12</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:18"><block_content pos:start="65:9" pos:end="65:18">

        <goto pos:start="65:9" pos:end="65:18">goto <name pos:start="65:14" pos:end="65:17">redo</name>;</goto></block_content></block></if></if_stmt>

    <comment type="block" pos:start="67:5" pos:end="67:22">/* get the data */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:51"><expr pos:start="69:5" pos:end="69:50"><name pos:start="69:5" pos:end="69:7">ret</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="69:50"><name pos:start="69:11" pos:end="69:27">url_read_complete</name><argument_list pos:start="69:28" pos:end="69:50">(<argument pos:start="69:29" pos:end="69:39"><expr pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:30">rt</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:39">rtsp_hd</name></name></expr></argument>, <argument pos:start="69:42" pos:end="69:44"><expr pos:start="69:42" pos:end="69:44"><name pos:start="69:42" pos:end="69:44">buf</name></expr></argument>, <argument pos:start="69:47" pos:end="69:49"><expr pos:start="69:47" pos:end="69:49"><name pos:start="69:47" pos:end="69:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:18"><if pos:start="71:5" pos:end="73:18">if <condition pos:start="71:8" pos:end="71:19">(<expr pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:14">!=</operator> <name pos:start="71:16" pos:end="71:18">len</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="79:18"><if pos:start="75:5" pos:end="79:18">if <condition pos:start="75:8" pos:end="77:71">(<expr pos:start="75:9" pos:end="77:70"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:10">rt</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:21">transport</name></name> <operator pos:start="75:23" pos:end="75:24">==</operator> <name pos:start="75:26" pos:end="75:43">RTSP_TRANSPORT_RDT</name> <operator pos:start="75:45" pos:end="75:46">&amp;&amp;</operator>

        <call pos:start="77:9" pos:end="77:66"><name pos:start="77:9" pos:end="77:27">ff_rdt_parse_header</name><argument_list pos:start="77:28" pos:end="77:66">(<argument pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:31">buf</name></expr></argument>, <argument pos:start="77:34" pos:end="77:36"><expr pos:start="77:34" pos:end="77:36"><name pos:start="77:34" pos:end="77:36">len</name></expr></argument>, <argument pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><operator pos:start="77:39" pos:end="77:39">&amp;</operator><name pos:start="77:40" pos:end="77:41">id</name></expr></argument>, <argument pos:start="77:44" pos:end="77:47"><expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:47">NULL</name></expr></argument>, <argument pos:start="77:50" pos:end="77:53"><expr pos:start="77:50" pos:end="77:53"><name pos:start="77:50" pos:end="77:53">NULL</name></expr></argument>, <argument pos:start="77:56" pos:end="77:59"><expr pos:start="77:56" pos:end="77:59"><name pos:start="77:56" pos:end="77:59">NULL</name></expr></argument>, <argument pos:start="77:62" pos:end="77:65"><expr pos:start="77:62" pos:end="77:65"><name pos:start="77:62" pos:end="77:65">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="77:68" pos:end="77:68">&lt;</operator> <literal type="number" pos:start="77:70" pos:end="77:70">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:18"><block_content pos:start="79:9" pos:end="79:18">

        <return pos:start="79:9" pos:end="79:18">return <expr pos:start="79:16" pos:end="79:17"><operator pos:start="79:16" pos:end="79:16">-</operator><literal type="number" pos:start="79:17" pos:end="79:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:34">/* find the matching stream */</comment>

    <for pos:start="85:5" pos:end="95:5">for<control pos:start="85:8" pos:end="85:44">(<init pos:start="85:9" pos:end="85:14"><expr pos:start="85:9" pos:end="85:13"><name pos:start="85:9" pos:end="85:9">i</name> <operator pos:start="85:11" pos:end="85:11">=</operator> <literal type="number" pos:start="85:13" pos:end="85:13">0</literal></expr>;</init> <condition pos:start="85:16" pos:end="85:39"><expr pos:start="85:16" pos:end="85:38"><name pos:start="85:16" pos:end="85:16">i</name> <operator pos:start="85:18" pos:end="85:18">&lt;</operator> <name pos:start="85:20" pos:end="85:38"><name pos:start="85:20" pos:end="85:21">rt</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:38">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="85:41" pos:end="85:43"><expr pos:start="85:41" pos:end="85:43"><name pos:start="85:41" pos:end="85:41">i</name><operator pos:start="85:42" pos:end="85:43">++</operator></expr></incr>)</control> <block pos:start="85:46" pos:end="95:5">{<block_content pos:start="87:9" pos:end="93:23">

        <expr_stmt pos:start="87:9" pos:end="87:38"><expr pos:start="87:9" pos:end="87:37"><name pos:start="87:9" pos:end="87:15">rtsp_st</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:37"><name pos:start="87:19" pos:end="87:20">rt</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:34">rtsp_streams</name><index pos:start="87:35" pos:end="87:37">[<expr pos:start="87:36" pos:end="87:36"><name pos:start="87:36" pos:end="87:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="93:23"><if pos:start="89:9" pos:end="93:23">if <condition pos:start="89:12" pos:end="91:43">(<expr pos:start="89:13" pos:end="91:42"><name pos:start="89:13" pos:end="89:14">id</name> <operator pos:start="89:16" pos:end="89:17">&gt;=</operator> <name pos:start="89:19" pos:end="89:42"><name pos:start="89:19" pos:end="89:25">rtsp_st</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:42">interleaved_min</name></name> <operator pos:start="89:44" pos:end="89:45">&amp;&amp;</operator>

            <name pos:start="91:13" pos:end="91:14">id</name> <operator pos:start="91:16" pos:end="91:17">&lt;=</operator> <name pos:start="91:19" pos:end="91:42"><name pos:start="91:19" pos:end="91:25">rtsp_st</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:42">interleaved_max</name></name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:23"><block_content pos:start="93:13" pos:end="93:23">

            <goto pos:start="93:13" pos:end="93:23">goto <name pos:start="93:18" pos:end="93:22">found</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <goto pos:start="97:5" pos:end="97:14">goto <name pos:start="97:10" pos:end="97:13">redo</name>;</goto>

 <label pos:start="99:2" pos:end="99:7"><name pos:start="99:2" pos:end="99:6">found</name>:</label>

    <expr_stmt pos:start="101:5" pos:end="101:24"><expr pos:start="101:5" pos:end="101:23"><operator pos:start="101:5" pos:end="101:5">*</operator><name pos:start="101:6" pos:end="101:13">prtsp_st</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <name pos:start="101:17" pos:end="101:23">rtsp_st</name></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:15">return <expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">len</name></expr>;</return>

</block_content>}</block></function>
</unit>
