<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17853.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">ra144_encode_init</name><parameter_list pos:start="1:37" pos:end="1:60">(<parameter pos:start="1:38" pos:end="1:59"><decl pos:start="1:38" pos:end="1:59"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type> <name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:15">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">RA144Context</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">ractx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:29">(<expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:13">avctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:23">channels</name></name> <operator pos:start="11:25" pos:end="11:26">!=</operator> <literal type="number" pos:start="11:28" pos:end="11:28">1</literal></expr>)</condition> <block pos:start="11:31" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:18">

        <expr_stmt pos:start="13:9" pos:end="15:32"><expr pos:start="13:9" pos:end="15:31"><call pos:start="13:9" pos:end="15:31"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="15:31">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:34"><expr pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:37" pos:end="13:70"><expr pos:start="13:37" pos:end="13:70"><literal type="string" pos:start="13:37" pos:end="13:70">"invalid number of channels: %d\n"</literal></expr></argument>,

               <argument pos:start="15:16" pos:end="15:30"><expr pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:20">avctx</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:30">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:9">avctx</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:21">frame_size</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <name pos:start="21:25" pos:end="21:31">NBLOCKS</name> <operator pos:start="21:33" pos:end="21:33">*</operator> <name pos:start="21:35" pos:end="21:43">BLOCKSIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:9">avctx</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">delay</name></name>      <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:41"><name pos:start="23:25" pos:end="23:29">avctx</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:41">frame_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:9">avctx</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">bit_rate</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <literal type="number" pos:start="25:23" pos:end="25:26">8000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:9">ractx</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:17">avctx</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:28">priv_data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:9">ractx</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:19">lpc_coef</name><index pos:start="29:20" pos:end="29:22">[<expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>]</index></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:45"><name pos:start="29:26" pos:end="29:30">ractx</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:42">lpc_tables</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:9">ractx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:19">lpc_coef</name><index pos:start="31:20" pos:end="31:22">[<expr pos:start="31:21" pos:end="31:21"><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>]</index></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:45"><name pos:start="31:26" pos:end="31:30">ractx</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:42">lpc_tables</name><index pos:start="31:43" pos:end="31:45">[<expr pos:start="31:44" pos:end="31:44"><literal type="number" pos:start="31:44" pos:end="31:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:9">ractx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">avctx</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:24">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:44"><expr pos:start="35:5" pos:end="37:43"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="37:43"><name pos:start="35:11" pos:end="35:21">ff_lpc_init</name><argument_list pos:start="35:22" pos:end="37:43">(<argument pos:start="35:23" pos:end="35:37"><expr pos:start="35:23" pos:end="35:37"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:37"><name pos:start="35:24" pos:end="35:28">ractx</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:37">lpc_ctx</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:56"><expr pos:start="35:40" pos:end="35:56"><name pos:start="35:40" pos:end="35:56"><name pos:start="35:40" pos:end="35:44">avctx</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:56">frame_size</name></name></expr></argument>, <argument pos:start="35:59" pos:end="35:67"><expr pos:start="35:59" pos:end="35:67"><name pos:start="35:59" pos:end="35:67">LPC_ORDER</name></expr></argument>,

                      <argument pos:start="37:23" pos:end="37:42"><expr pos:start="37:23" pos:end="37:42"><name pos:start="37:23" pos:end="37:42">FF_LPC_TYPE_LEVINSON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:19"><if pos:start="39:5" pos:end="41:19">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">

        <goto pos:start="41:9" pos:end="41:19">goto <name pos:start="41:14" pos:end="41:18">error</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><call pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:20">ff_af_queue_init</name><argument_list pos:start="45:21" pos:end="45:40">(<argument pos:start="45:22" pos:end="45:26"><expr pos:start="45:22" pos:end="45:26"><name pos:start="45:22" pos:end="45:26">avctx</name></expr></argument>, <argument pos:start="45:29" pos:end="45:39"><expr pos:start="45:29" pos:end="45:39"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:39"><name pos:start="45:30" pos:end="45:34">ractx</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:39">afq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

<label pos:start="51:1" pos:end="51:6"><name pos:start="51:1" pos:end="51:5">error</name>:</label>

    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><call pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:22">ra144_encode_close</name><argument_list pos:start="53:23" pos:end="53:29">(<argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
