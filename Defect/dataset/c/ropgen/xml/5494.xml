<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5494.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">net_handle_fd_param</name><parameter_list pos:start="1:24" pos:end="1:56">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">Monitor</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">mon</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">param</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <if_stmt pos:start="5:5" pos:end="29:5"><if pos:start="5:5" pos:end="25:5">if <condition pos:start="5:8" pos:end="5:32">(<expr pos:start="5:9" pos:end="5:31"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:31"><name pos:start="5:10" pos:end="5:21">qemu_isdigit</name><argument_list pos:start="5:22" pos:end="5:31">(<argument pos:start="5:23" pos:end="5:30"><expr pos:start="5:23" pos:end="5:30"><name pos:start="5:23" pos:end="5:30"><name pos:start="5:23" pos:end="5:27">param</name><index pos:start="5:28" pos:end="5:30">[<expr pos:start="5:29" pos:end="5:29"><literal type="number" pos:start="5:29" pos:end="5:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:34" pos:end="25:5">{<block_content pos:start="7:9" pos:end="23:18">

        <decl_stmt pos:start="7:9" pos:end="7:15"><decl pos:start="7:9" pos:end="7:14"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:14">fd</name></decl>;</decl_stmt>



        <expr_stmt pos:start="11:9" pos:end="11:40"><expr pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:10">fd</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <call pos:start="11:14" pos:end="11:39"><name pos:start="11:14" pos:end="11:27">monitor_get_fd</name><argument_list pos:start="11:28" pos:end="11:39">(<argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:31">mon</name></expr></argument>, <argument pos:start="11:34" pos:end="11:38"><expr pos:start="11:34" pos:end="11:38"><name pos:start="11:34" pos:end="11:38">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="19:9"><if pos:start="13:9" pos:end="19:9">if <condition pos:start="13:12" pos:end="13:21">(<expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:14">fd</name> <operator pos:start="13:16" pos:end="13:17">==</operator> <operator pos:start="13:19" pos:end="13:19">-</operator><literal type="number" pos:start="13:20" pos:end="13:20">1</literal></expr>)</condition> <block pos:start="13:23" pos:end="19:9">{<block_content pos:start="15:13" pos:end="17:22">

            <expr_stmt pos:start="15:13" pos:end="15:69"><expr pos:start="15:13" pos:end="15:68"><call pos:start="15:13" pos:end="15:68"><name pos:start="15:13" pos:end="15:24">error_report</name><argument_list pos:start="15:25" pos:end="15:68">(<argument pos:start="15:26" pos:end="15:60"><expr pos:start="15:26" pos:end="15:60"><literal type="string" pos:start="15:26" pos:end="15:60">"No file descriptor named %s found"</literal></expr></argument>, <argument pos:start="15:63" pos:end="15:67"><expr pos:start="15:63" pos:end="15:67"><name pos:start="15:63" pos:end="15:67">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="17:13" pos:end="17:22">return <expr pos:start="17:20" pos:end="17:21"><operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">fd</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:38">

        <return pos:start="27:9" pos:end="27:38">return <expr pos:start="27:16" pos:end="27:37"><call pos:start="27:16" pos:end="27:37"><name pos:start="27:16" pos:end="27:21">strtol</name><argument_list pos:start="27:22" pos:end="27:37">(<argument pos:start="27:23" pos:end="27:27"><expr pos:start="27:23" pos:end="27:27"><name pos:start="27:23" pos:end="27:27">param</name></expr></argument>, <argument pos:start="27:30" pos:end="27:33"><expr pos:start="27:30" pos:end="27:33"><name pos:start="27:30" pos:end="27:33">NULL</name></expr></argument>, <argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><literal type="number" pos:start="27:36" pos:end="27:36">0</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
