<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21344.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">usbredir_bulk_packet</name><parameter_list pos:start="1:33" pos:end="5:32">(<parameter pos:start="1:34" pos:end="1:43"><decl pos:start="1:34" pos:end="1:43"><type pos:start="1:34" pos:end="1:43"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">priv</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:56">id</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:52"><decl pos:start="3:5" pos:end="3:52"><type pos:start="3:5" pos:end="3:52"><name pos:start="3:5" pos:end="3:39"><name pos:start="3:5" pos:end="3:10">struct</name> <name pos:start="3:12" pos:end="3:39">usb_redir_bulk_packet_header</name></name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:52">bulk_packet</name></decl></parameter>,

    <parameter pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">data</name></decl></parameter>, <parameter pos:start="5:20" pos:end="5:31"><decl pos:start="5:20" pos:end="5:31"><type pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:22">int</name></type> <name pos:start="5:24" pos:end="5:31">data_len</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="83:1">{<block_content pos:start="9:5" pos:end="81:15">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">USBRedirDevice</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">dev</name> <init pos:start="9:25" pos:end="9:30">= <expr pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:30">priv</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:14">ep</name> <init pos:start="11:16" pos:end="11:38">= <expr pos:start="11:18" pos:end="11:38"><name pos:start="11:18" pos:end="11:38"><name pos:start="11:18" pos:end="11:28">bulk_packet</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:38">endpoint</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">len</name> <init pos:start="13:13" pos:end="13:33">= <expr pos:start="13:15" pos:end="13:33"><name pos:start="13:15" pos:end="13:33"><name pos:start="13:15" pos:end="13:25">bulk_packet</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:33">length</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AsyncURB</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:18">aurb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:25"><expr pos:start="19:5" pos:end="21:24"><call pos:start="19:5" pos:end="21:24"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="21:24">(<argument pos:start="19:13" pos:end="19:54"><expr pos:start="19:13" pos:end="19:54"><literal type="string" pos:start="19:13" pos:end="19:54">"bulk-in status %d ep %02X len %d id %u\n"</literal></expr></argument>, <argument pos:start="19:57" pos:end="19:75"><expr pos:start="19:57" pos:end="19:75"><name pos:start="19:57" pos:end="19:75"><name pos:start="19:57" pos:end="19:67">bulk_packet</name><operator pos:start="19:68" pos:end="19:69">-&gt;</operator><name pos:start="19:70" pos:end="19:75">status</name></name></expr></argument>,

            <argument pos:start="21:13" pos:end="21:14"><expr pos:start="21:13" pos:end="21:14"><name pos:start="21:13" pos:end="21:14">ep</name></expr></argument>, <argument pos:start="21:17" pos:end="21:19"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">len</name></expr></argument>, <argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:8">aurb</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:30"><name pos:start="25:12" pos:end="25:21">async_find</name><argument_list pos:start="25:22" pos:end="25:30">(<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">dev</name></expr></argument>, <argument pos:start="25:28" pos:end="25:29"><expr pos:start="25:28" pos:end="25:29"><name pos:start="25:28" pos:end="25:29">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:14">(<expr pos:start="27:9" pos:end="27:13"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:13">aurb</name></expr>)</condition> <block pos:start="27:16" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:19"><expr pos:start="29:9" pos:end="29:18"><call pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:12">free</name><argument_list pos:start="29:13" pos:end="29:18">(<argument pos:start="29:14" pos:end="29:17"><expr pos:start="29:14" pos:end="29:17"><name pos:start="29:14" pos:end="29:17">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="39:66">(<expr pos:start="37:9" pos:end="39:65"><name pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:12">aurb</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:25">bulk_packet</name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:34">endpoint</name></name> <operator pos:start="37:36" pos:end="37:37">!=</operator> <name pos:start="37:39" pos:end="37:59"><name pos:start="37:39" pos:end="37:49">bulk_packet</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:59">endpoint</name></name> <operator pos:start="37:61" pos:end="37:62">||</operator>

            <name pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:16">aurb</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:29">bulk_packet</name><operator pos:start="39:30" pos:end="39:30">.</operator><name pos:start="39:31" pos:end="39:39">stream_id</name></name> <operator pos:start="39:41" pos:end="39:42">!=</operator> <name pos:start="39:44" pos:end="39:65"><name pos:start="39:44" pos:end="39:54">bulk_packet</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:65">stream_id</name></name></expr>)</condition> <block pos:start="39:68" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:26">

        <expr_stmt pos:start="41:9" pos:end="41:68"><expr pos:start="41:9" pos:end="41:67"><call pos:start="41:9" pos:end="41:67"><name pos:start="41:9" pos:end="41:13">ERROR</name><argument_list pos:start="41:14" pos:end="41:67">(<argument pos:start="41:15" pos:end="41:66"><expr pos:start="41:15" pos:end="41:66"><literal type="string" pos:start="41:15" pos:end="41:66">"return bulk packet mismatch, please report this!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:11">len</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:25">USB_RET_NAK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="77:5"><if pos:start="49:5" pos:end="77:5">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:12">aurb</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:20">packet</name></name></expr>)</condition> <block pos:start="49:23" pos:end="77:5">{<block_content pos:start="51:9" pos:end="75:53">

        <expr_stmt pos:start="51:9" pos:end="51:68"><expr pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:11">len</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:67"><name pos:start="51:15" pos:end="51:36">usbredir_handle_status</name><argument_list pos:start="51:37" pos:end="51:67">(<argument pos:start="51:38" pos:end="51:40"><expr pos:start="51:38" pos:end="51:40"><name pos:start="51:38" pos:end="51:40">dev</name></expr></argument>, <argument pos:start="51:43" pos:end="51:61"><expr pos:start="51:43" pos:end="51:61"><name pos:start="51:43" pos:end="51:61"><name pos:start="51:43" pos:end="51:53">bulk_packet</name><operator pos:start="51:54" pos:end="51:55">-&gt;</operator><name pos:start="51:56" pos:end="51:61">status</name></name></expr></argument>, <argument pos:start="51:64" pos:end="51:66"><expr pos:start="51:64" pos:end="51:66"><name pos:start="51:64" pos:end="51:66">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="71:9"><if pos:start="53:9" pos:end="71:9">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">len</name> <operator pos:start="53:17" pos:end="53:17">&gt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition> <block pos:start="53:22" pos:end="71:9">{<block_content pos:start="55:13" pos:end="69:13">

            <expr_stmt pos:start="55:13" pos:end="55:68"><expr pos:start="55:13" pos:end="55:67"><call pos:start="55:13" pos:end="55:67"><name pos:start="55:13" pos:end="55:29">usbredir_log_data</name><argument_list pos:start="55:30" pos:end="55:67">(<argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:33">dev</name></expr></argument>, <argument pos:start="55:36" pos:end="55:50"><expr pos:start="55:36" pos:end="55:50"><literal type="string" pos:start="55:36" pos:end="55:50">"bulk data in:"</literal></expr></argument>, <argument pos:start="55:53" pos:end="55:56"><expr pos:start="55:53" pos:end="55:56"><name pos:start="55:53" pos:end="55:56">data</name></expr></argument>, <argument pos:start="55:59" pos:end="55:66"><expr pos:start="55:59" pos:end="55:66"><name pos:start="55:59" pos:end="55:66">data_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="69:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:51">(<expr pos:start="57:17" pos:end="57:50"><name pos:start="57:17" pos:end="57:24">data_len</name> <operator pos:start="57:26" pos:end="57:27">&lt;=</operator> <name pos:start="57:29" pos:end="57:50"><name pos:start="57:29" pos:end="57:32">aurb</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:40">packet</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:45">iov</name><operator pos:start="57:46" pos:end="57:46">.</operator><name pos:start="57:47" pos:end="57:50">size</name></name></expr>)</condition> <block pos:start="57:53" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:62">

                <expr_stmt pos:start="59:17" pos:end="59:62"><expr pos:start="59:17" pos:end="59:61"><call pos:start="59:17" pos:end="59:61"><name pos:start="59:17" pos:end="59:31">usb_packet_copy</name><argument_list pos:start="59:32" pos:end="59:61">(<argument pos:start="59:33" pos:end="59:44"><expr pos:start="59:33" pos:end="59:44"><name pos:start="59:33" pos:end="59:44"><name pos:start="59:33" pos:end="59:36">aurb</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:44">packet</name></name></expr></argument>, <argument pos:start="59:47" pos:end="59:50"><expr pos:start="59:47" pos:end="59:50"><name pos:start="59:47" pos:end="59:50">data</name></expr></argument>, <argument pos:start="59:53" pos:end="59:60"><expr pos:start="59:53" pos:end="59:60"><name pos:start="59:53" pos:end="59:60">data_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="61:15" pos:end="69:13">else <block pos:start="61:20" pos:end="69:13">{<block_content pos:start="63:17" pos:end="67:36">

                <expr_stmt pos:start="63:17" pos:end="65:46"><expr pos:start="63:17" pos:end="65:45"><call pos:start="63:17" pos:end="65:45"><name pos:start="63:17" pos:end="63:21">ERROR</name><argument_list pos:start="63:22" pos:end="65:45">(<argument pos:start="63:23" pos:end="63:58"><expr pos:start="63:23" pos:end="63:58"><literal type="string" pos:start="63:23" pos:end="63:58">"bulk buffer too small (%d &gt; %zd)\n"</literal></expr></argument>, <argument pos:start="63:61" pos:end="63:68"><expr pos:start="63:61" pos:end="63:68"><name pos:start="63:61" pos:end="63:68">data_len</name></expr></argument>,

                      <argument pos:start="65:23" pos:end="65:44"><expr pos:start="65:23" pos:end="65:44"><name pos:start="65:23" pos:end="65:44"><name pos:start="65:23" pos:end="65:26">aurb</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:34">packet</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:39">iov</name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:44">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:36"><expr pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:19">len</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:35">USB_RET_STALL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:12">aurb</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:20">packet</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:28">result</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:34">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:53"><expr pos:start="75:9" pos:end="75:52"><call pos:start="75:9" pos:end="75:52"><name pos:start="75:9" pos:end="75:27">usb_packet_complete</name><argument_list pos:start="75:28" pos:end="75:52">(<argument pos:start="75:29" pos:end="75:37"><expr pos:start="75:29" pos:end="75:37"><operator pos:start="75:29" pos:end="75:29">&amp;</operator><name pos:start="75:30" pos:end="75:37"><name pos:start="75:30" pos:end="75:32">dev</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:37">dev</name></name></expr></argument>, <argument pos:start="75:40" pos:end="75:51"><expr pos:start="75:40" pos:end="75:51"><name pos:start="75:40" pos:end="75:51"><name pos:start="75:40" pos:end="75:43">aurb</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:51">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:26"><expr pos:start="79:5" pos:end="79:25"><call pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:14">async_free</name><argument_list pos:start="79:15" pos:end="79:25">(<argument pos:start="79:16" pos:end="79:18"><expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">dev</name></expr></argument>, <argument pos:start="79:21" pos:end="79:24"><expr pos:start="79:21" pos:end="79:24"><name pos:start="79:21" pos:end="79:24">aurb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:15"><expr pos:start="81:5" pos:end="81:14"><call pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:8">free</name><argument_list pos:start="81:9" pos:end="81:14">(<argument pos:start="81:10" pos:end="81:13"><expr pos:start="81:10" pos:end="81:13"><name pos:start="81:10" pos:end="81:13">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
