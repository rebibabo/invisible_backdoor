<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14471.c" pos:tabs="8"><function pos:start="1:1" pos:end="58:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">hmp_drive_add_node</name><parameter_list pos:start="1:24" pos:end="1:57">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">Monitor</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">mon</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">optstr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="58:1">{<block_content pos:start="5:5" pos:end="56:24">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QDict</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:16">qdict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:68"><expr pos:start="13:5" pos:end="13:67"><name pos:start="13:5" pos:end="13:8">opts</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:67"><name pos:start="13:12" pos:end="13:34">qemu_opts_parse_noisily</name><argument_list pos:start="13:35" pos:end="13:67">(<argument pos:start="13:36" pos:end="13:51"><expr pos:start="13:36" pos:end="13:51"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:51">qemu_drive_opts</name></expr></argument>, <argument pos:start="13:54" pos:end="13:59"><expr pos:start="13:54" pos:end="13:59"><name pos:start="13:54" pos:end="13:59">optstr</name></expr></argument>, <argument pos:start="13:62" pos:end="13:66"><expr pos:start="13:62" pos:end="13:66"><name pos:start="13:62" pos:end="13:66">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:13">opts</name></expr>)</condition> <block pos:start="15:16" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:9">qdict</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:42"><name pos:start="23:13" pos:end="23:30">qemu_opts_to_qdict</name><argument_list pos:start="23:31" pos:end="23:42">(<argument pos:start="23:32" pos:end="23:35"><expr pos:start="23:32" pos:end="23:35"><name pos:start="23:32" pos:end="23:35">opts</name></expr></argument>, <argument pos:start="23:38" pos:end="23:41"><expr pos:start="23:38" pos:end="23:41"><name pos:start="23:38" pos:end="23:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="34:5"><if pos:start="27:5" pos:end="34:5">if <condition pos:start="27:8" pos:end="27:47">(<expr pos:start="27:9" pos:end="27:46"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:46"><name pos:start="27:10" pos:end="27:26">qdict_get_try_str</name><argument_list pos:start="27:27" pos:end="27:46">(<argument pos:start="27:28" pos:end="27:32"><expr pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:32">qdict</name></expr></argument>, <argument pos:start="27:35" pos:end="27:45"><expr pos:start="27:35" pos:end="27:45"><literal type="string" pos:start="27:35" pos:end="27:45">"node-name"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:49" pos:end="34:5">{<block_content pos:start="30:9" pos:end="32:17">


        <expr_stmt pos:start="30:9" pos:end="30:58"><expr pos:start="30:9" pos:end="30:57"><call pos:start="30:9" pos:end="30:57"><name pos:start="30:9" pos:end="30:20">error_report</name><argument_list pos:start="30:21" pos:end="30:57">(<argument pos:start="30:22" pos:end="30:56"><expr pos:start="30:22" pos:end="30:56"><literal type="string" pos:start="30:22" pos:end="30:56">"'node-name' needs to be specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="32:9" pos:end="32:17">goto <name pos:start="32:14" pos:end="32:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <decl_stmt pos:start="38:5" pos:end="38:60"><decl pos:start="38:5" pos:end="38:59"><type pos:start="38:5" pos:end="38:22"><name pos:start="38:5" pos:end="38:20">BlockDriverState</name> <modifier pos:start="38:22" pos:end="38:22">*</modifier></type><name pos:start="38:23" pos:end="38:24">bs</name> <init pos:start="38:26" pos:end="38:59">= <expr pos:start="38:28" pos:end="38:59"><call pos:start="38:28" pos:end="38:59"><name pos:start="38:28" pos:end="38:40">bds_tree_init</name><argument_list pos:start="38:41" pos:end="38:59">(<argument pos:start="38:42" pos:end="38:46"><expr pos:start="38:42" pos:end="38:46"><name pos:start="38:42" pos:end="38:46">qdict</name></expr></argument>, <argument pos:start="38:49" pos:end="38:58"><expr pos:start="38:49" pos:end="38:58"><operator pos:start="38:49" pos:end="38:49">&amp;</operator><name pos:start="38:50" pos:end="38:58">local_err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="40:5" pos:end="46:5"><if pos:start="40:5" pos:end="46:5">if <condition pos:start="40:8" pos:end="40:12">(<expr pos:start="40:9" pos:end="40:11"><operator pos:start="40:9" pos:end="40:9">!</operator><name pos:start="40:10" pos:end="40:11">bs</name></expr>)</condition> <block pos:start="40:14" pos:end="46:5">{<block_content pos:start="42:9" pos:end="44:17">

        <expr_stmt pos:start="42:9" pos:end="42:36"><expr pos:start="42:9" pos:end="42:35"><call pos:start="42:9" pos:end="42:35"><name pos:start="42:9" pos:end="42:24">error_report_err</name><argument_list pos:start="42:25" pos:end="42:35">(<argument pos:start="42:26" pos:end="42:34"><expr pos:start="42:26" pos:end="42:34"><name pos:start="42:26" pos:end="42:34">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="44:9" pos:end="44:17">goto <name pos:start="44:14" pos:end="44:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="50:5" pos:end="50:63"><expr pos:start="50:5" pos:end="50:62"><call pos:start="50:5" pos:end="50:62"><name pos:start="50:5" pos:end="50:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="50:23" pos:end="50:62">(<argument pos:start="50:24" pos:end="50:43"><expr pos:start="50:24" pos:end="50:43"><operator pos:start="50:24" pos:end="50:24">&amp;</operator><name pos:start="50:25" pos:end="50:43">monitor_bdrv_states</name></expr></argument>, <argument pos:start="50:46" pos:end="50:47"><expr pos:start="50:46" pos:end="50:47"><name pos:start="50:46" pos:end="50:47">bs</name></expr></argument>, <argument pos:start="50:50" pos:end="50:61"><expr pos:start="50:50" pos:end="50:61"><name pos:start="50:50" pos:end="50:61">monitor_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="54:1" pos:end="54:4"><name pos:start="54:1" pos:end="54:3">out</name>:</label>

    <expr_stmt pos:start="56:5" pos:end="56:24"><expr pos:start="56:5" pos:end="56:23"><call pos:start="56:5" pos:end="56:23"><name pos:start="56:5" pos:end="56:17">qemu_opts_del</name><argument_list pos:start="56:18" pos:end="56:23">(<argument pos:start="56:19" pos:end="56:22"><expr pos:start="56:19" pos:end="56:22"><name pos:start="56:19" pos:end="56:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
