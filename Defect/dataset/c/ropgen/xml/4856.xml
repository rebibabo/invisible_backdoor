<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4856.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">mips_cpu_gdb_write_register</name><parameter_list pos:start="1:32" pos:end="1:70">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:40">CPUState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">cs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:62">mem_buf</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:69"><decl pos:start="1:65" pos:end="1:69"><type pos:start="1:65" pos:end="1:69"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:69">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:32">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">MIPSCPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:31">= <expr pos:start="5:20" pos:end="5:31"><call pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:27">MIPS_CPU</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">CPUMIPSState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">env</name> <init pos:start="7:23" pos:end="7:33">= <expr pos:start="7:25" pos:end="7:33"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:33"><name pos:start="7:26" pos:end="7:28">cpu</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:33">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:20">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">tmp</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:26"><name pos:start="13:11" pos:end="13:17">ldtul_p</name><argument_list pos:start="13:18" pos:end="13:26">(<argument pos:start="13:19" pos:end="13:25"><expr pos:start="13:19" pos:end="13:25"><name pos:start="13:19" pos:end="13:25">mem_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">n</name> <operator pos:start="17:11" pos:end="17:11">&lt;</operator> <literal type="number" pos:start="17:13" pos:end="17:14">32</literal></expr>)</condition> <block pos:start="17:17" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:36">

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">active_tc</name><operator pos:start="19:23" pos:end="19:23">.</operator><name pos:start="19:24" pos:end="19:26">gpr</name><index pos:start="19:27" pos:end="19:29">[<expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">n</name></expr>]</index></name> <operator pos:start="19:31" pos:end="19:31">=</operator> <name pos:start="19:33" pos:end="19:35">tmp</name></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:36">return <expr pos:start="21:16" pos:end="21:35"><sizeof pos:start="21:16" pos:end="21:35">sizeof<argument_list pos:start="21:22" pos:end="21:35">(<argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="65:5"><if pos:start="25:5" pos:end="65:5">if <condition pos:start="25:8" pos:end="27:33">(<expr pos:start="25:9" pos:end="27:32"><name pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:24">CP0_Config1</name></name> <operator pos:start="25:26" pos:end="25:26">&amp;</operator> <operator pos:start="25:28" pos:end="25:28">(</operator><literal type="number" pos:start="25:29" pos:end="25:29">1</literal> <operator pos:start="25:31" pos:end="25:32">&lt;&lt;</operator> <name pos:start="25:34" pos:end="25:41">CP0C1_FP</name><operator pos:start="25:42" pos:end="25:42">)</operator>

            <operator pos:start="27:13" pos:end="27:14">&amp;&amp;</operator> <name pos:start="27:16" pos:end="27:16">n</name> <operator pos:start="27:18" pos:end="27:19">&gt;=</operator> <literal type="number" pos:start="27:21" pos:end="27:22">38</literal> <operator pos:start="27:24" pos:end="27:25">&amp;&amp;</operator> <name pos:start="27:27" pos:end="27:27">n</name> <operator pos:start="27:29" pos:end="27:29">&lt;</operator> <literal type="number" pos:start="27:31" pos:end="27:32">73</literal></expr>)</condition> <block pos:start="27:35" pos:end="65:5">{<block_content pos:start="29:9" pos:end="63:36">

        <if_stmt pos:start="29:9" pos:end="41:9"><if pos:start="29:9" pos:end="41:9">if <condition pos:start="29:12" pos:end="29:19">(<expr pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:13">n</name> <operator pos:start="29:15" pos:end="29:15">&lt;</operator> <literal type="number" pos:start="29:17" pos:end="29:18">70</literal></expr>)</condition> <block pos:start="29:21" pos:end="41:9">{<block_content pos:start="31:13" pos:end="39:13">

            <if_stmt pos:start="31:13" pos:end="39:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:50">(<expr pos:start="31:17" pos:end="31:49"><name pos:start="31:17" pos:end="31:31"><name pos:start="31:17" pos:end="31:19">env</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:31">CP0_Status</name></name> <operator pos:start="31:33" pos:end="31:33">&amp;</operator> <operator pos:start="31:35" pos:end="31:35">(</operator><literal type="number" pos:start="31:36" pos:end="31:36">1</literal> <operator pos:start="31:38" pos:end="31:39">&lt;&lt;</operator> <name pos:start="31:41" pos:end="31:48">CP0St_FR</name><operator pos:start="31:49" pos:end="31:49">)</operator></expr>)</condition> <block pos:start="31:52" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:52">

                <expr_stmt pos:start="33:17" pos:end="33:52"><expr pos:start="33:17" pos:end="33:51"><name pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:19">env</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:31">active_fpu</name><operator pos:start="33:32" pos:end="33:32">.</operator><name pos:start="33:33" pos:end="33:35">fpr</name><index pos:start="33:36" pos:end="33:43">[<expr pos:start="33:37" pos:end="33:42"><name pos:start="33:37" pos:end="33:37">n</name> <operator pos:start="33:39" pos:end="33:39">-</operator> <literal type="number" pos:start="33:41" pos:end="33:42">38</literal></expr>]</index></name><operator pos:start="33:44" pos:end="33:44">.</operator><name pos:start="33:45" pos:end="33:45">d</name> <operator pos:start="33:47" pos:end="33:47">=</operator> <name pos:start="33:49" pos:end="33:51">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="35:15" pos:end="39:13">else <block pos:start="35:20" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:67">

                <expr_stmt pos:start="37:17" pos:end="37:67"><expr pos:start="37:17" pos:end="37:66"><name pos:start="37:17" pos:end="37:43"><name pos:start="37:17" pos:end="37:19">env</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:31">active_fpu</name><operator pos:start="37:32" pos:end="37:32">.</operator><name pos:start="37:33" pos:end="37:35">fpr</name><index pos:start="37:36" pos:end="37:43">[<expr pos:start="37:37" pos:end="37:42"><name pos:start="37:37" pos:end="37:37">n</name> <operator pos:start="37:39" pos:end="37:39">-</operator> <literal type="number" pos:start="37:41" pos:end="37:42">38</literal></expr>]</index></name><operator pos:start="37:44" pos:end="37:44">.</operator><name pos:start="37:45" pos:end="37:60"><name pos:start="37:45" pos:end="37:45">w</name><index pos:start="37:46" pos:end="37:60">[<expr pos:start="37:47" pos:end="37:59"><name pos:start="37:47" pos:end="37:59">FP_ENDIAN_IDX</name></expr>]</index></name> <operator pos:start="37:62" pos:end="37:62">=</operator> <name pos:start="37:64" pos:end="37:66">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="43:9" pos:end="61:9">switch <condition pos:start="43:16" pos:end="43:18">(<expr pos:start="43:17" pos:end="43:17"><name pos:start="43:17" pos:end="43:17">n</name></expr>)</condition> <block pos:start="43:20" pos:end="61:9">{<block_content pos:start="45:9" pos:end="59:18">

        <case pos:start="45:9" pos:end="45:16">case <expr pos:start="45:14" pos:end="45:15"><literal type="number" pos:start="45:14" pos:end="45:15">70</literal></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:53"><expr pos:start="47:13" pos:end="47:52"><name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:15">env</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:27">active_fpu</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:33">fcr31</name></name> <operator pos:start="47:35" pos:end="47:35">=</operator> <name pos:start="47:37" pos:end="47:39">tmp</name> <operator pos:start="47:41" pos:end="47:41">&amp;</operator> <literal type="number" pos:start="47:43" pos:end="47:52">0xFF83FFFF</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:35">/* set rounding mode */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:34"><expr pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:33">RESTORE_ROUNDING_MODE</name></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:16">case <expr pos:start="55:14" pos:end="55:15"><literal type="number" pos:start="55:14" pos:end="55:15">71</literal></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:39"><expr pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:15">env</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:27">active_fpu</name><operator pos:start="57:28" pos:end="57:28">.</operator><name pos:start="57:29" pos:end="57:32">fcr0</name></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:38">tmp</name></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        </block_content>}</block></switch>

        <return pos:start="63:9" pos:end="63:36">return <expr pos:start="63:16" pos:end="63:35"><sizeof pos:start="63:16" pos:end="63:35">sizeof<argument_list pos:start="63:22" pos:end="63:35">(<argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="67:5" pos:end="131:5">switch <condition pos:start="67:12" pos:end="67:14">(<expr pos:start="67:13" pos:end="67:13"><name pos:start="67:13" pos:end="67:13">n</name></expr>)</condition> <block pos:start="67:16" pos:end="131:5">{<block_content pos:start="69:5" pos:end="129:14">

    <case pos:start="69:5" pos:end="69:12">case <expr pos:start="69:10" pos:end="69:11"><literal type="number" pos:start="69:10" pos:end="69:11">32</literal></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:11">env</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:23">CP0_Status</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:29">tmp</name></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:12">case <expr pos:start="75:10" pos:end="75:11"><literal type="number" pos:start="75:10" pos:end="75:11">33</literal></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:11">env</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:22">active_tc</name><operator pos:start="77:23" pos:end="77:23">.</operator><name pos:start="77:24" pos:end="77:25">LO</name><index pos:start="77:26" pos:end="77:28">[<expr pos:start="77:27" pos:end="77:27"><literal type="number" pos:start="77:27" pos:end="77:27">0</literal></expr>]</index></name> <operator pos:start="77:30" pos:end="77:30">=</operator> <name pos:start="77:32" pos:end="77:34">tmp</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:12">case <expr pos:start="81:10" pos:end="81:11"><literal type="number" pos:start="81:10" pos:end="81:11">34</literal></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:35"><expr pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:11">env</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:22">active_tc</name><operator pos:start="83:23" pos:end="83:23">.</operator><name pos:start="83:24" pos:end="83:25">HI</name><index pos:start="83:26" pos:end="83:28">[<expr pos:start="83:27" pos:end="83:27"><literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>]</index></name> <operator pos:start="83:30" pos:end="83:30">=</operator> <name pos:start="83:32" pos:end="83:34">tmp</name></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:12">case <expr pos:start="87:10" pos:end="87:11"><literal type="number" pos:start="87:10" pos:end="87:11">35</literal></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:11">env</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:25">CP0_BadVAddr</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:31">tmp</name></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:12">case <expr pos:start="93:10" pos:end="93:11"><literal type="number" pos:start="93:10" pos:end="93:11">36</literal></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:11">env</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:22">CP0_Cause</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:28">tmp</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:12">case <expr pos:start="99:10" pos:end="99:11"><literal type="number" pos:start="99:10" pos:end="99:11">37</literal></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:51"><expr pos:start="101:9" pos:end="101:50"><name pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:11">env</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:22">active_tc</name><operator pos:start="101:23" pos:end="101:23">.</operator><name pos:start="101:24" pos:end="101:25">PC</name></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <name pos:start="101:29" pos:end="101:31">tmp</name> <operator pos:start="101:33" pos:end="101:33">&amp;</operator> <operator pos:start="101:35" pos:end="101:35">~</operator><operator pos:start="101:36" pos:end="101:36">(</operator><name pos:start="101:37" pos:end="101:48">target_ulong</name><operator pos:start="101:49" pos:end="101:49">)</operator><literal type="number" pos:start="101:50" pos:end="101:50">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="111:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:20">(<expr pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:15">tmp</name> <operator pos:start="103:17" pos:end="103:17">&amp;</operator> <literal type="number" pos:start="103:19" pos:end="103:19">1</literal></expr>)</condition> <block pos:start="103:22" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:42">

            <expr_stmt pos:start="105:13" pos:end="105:42"><expr pos:start="105:13" pos:end="105:41"><name pos:start="105:13" pos:end="105:23"><name pos:start="105:13" pos:end="105:15">env</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:23">hflags</name></name> <operator pos:start="105:25" pos:end="105:26">|=</operator> <name pos:start="105:28" pos:end="105:41">MIPS_HFLAG_M16</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="111:9">else <block pos:start="107:16" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:45">

            <expr_stmt pos:start="109:13" pos:end="109:45"><expr pos:start="109:13" pos:end="109:44"><name pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:15">env</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:23">hflags</name></name> <operator pos:start="109:25" pos:end="109:26">&amp;=</operator> <operator pos:start="109:28" pos:end="109:28">~</operator><operator pos:start="109:29" pos:end="109:29">(</operator><name pos:start="109:30" pos:end="109:43">MIPS_HFLAG_M16</name><operator pos:start="109:44" pos:end="109:44">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:12">case <expr pos:start="115:10" pos:end="115:11"><literal type="number" pos:start="115:10" pos:end="115:11">72</literal></expr>:</case> <comment type="block" pos:start="115:14" pos:end="115:30">/* fp, ignored */</comment>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <default pos:start="119:5" pos:end="119:12">default:</default>

        <if_stmt pos:start="121:9" pos:end="125:9"><if pos:start="121:9" pos:end="125:9">if <condition pos:start="121:12" pos:end="121:19">(<expr pos:start="121:13" pos:end="121:18"><name pos:start="121:13" pos:end="121:13">n</name> <operator pos:start="121:15" pos:end="121:15">&gt;</operator> <literal type="number" pos:start="121:17" pos:end="121:18">89</literal></expr>)</condition> <block pos:start="121:21" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:21">

            <return pos:start="123:13" pos:end="123:21">return <expr pos:start="123:20" pos:end="123:20"><literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="127:9" pos:end="127:60">/* Other registers are readonly.  Ignore writes.  */</comment>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="135:5" pos:end="135:32">return <expr pos:start="135:12" pos:end="135:31"><sizeof pos:start="135:12" pos:end="135:31">sizeof<argument_list pos:start="135:18" pos:end="135:31">(<argument pos:start="135:19" pos:end="135:30"><expr pos:start="135:19" pos:end="135:30"><name pos:start="135:19" pos:end="135:30">target_ulong</name></expr></argument>)</argument_list></sizeof></expr>;</return>

</block_content>}</block></function>
</unit>
