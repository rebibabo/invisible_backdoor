<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/182.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">ppc_fixup_cpu</name><parameter_list pos:start="1:25" pos:end="1:41">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:35">PowerPCCPU</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUPPCState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">cpu</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">env</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="23:15">/* TCG doesn't (yet) emulate some groups of instructions that

     * are implemented on some otherwise supported CPUs (e.g. VSX

     * and decimal floating point instructions on POWER7).  We

     * remove unsupported instruction groups from the cpu state's

     * instruction masks and hope the guest can cope.  For at

     * least the pseries machine, the unavailability of these

     * instructions can be advertised to the guest via the device

     * tree. */</comment>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="27:49">(<expr pos:start="25:9" pos:end="27:48"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:12">env</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:25">insns_flags</name></name> <operator pos:start="25:27" pos:end="25:27">&amp;</operator> <operator pos:start="25:29" pos:end="25:29">~</operator><name pos:start="25:30" pos:end="25:42">PPC_TCG_INSNS</name><operator pos:start="25:43" pos:end="25:43">)</operator>

        <operator pos:start="27:9" pos:end="27:10">||</operator> <operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:15">env</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:29">insns_flags2</name></name> <operator pos:start="27:31" pos:end="27:31">&amp;</operator> <operator pos:start="27:33" pos:end="27:33">~</operator><name pos:start="27:34" pos:end="27:47">PPC_TCG_INSNS2</name><operator pos:start="27:48" pos:end="27:48">)</operator></expr>)</condition> <block pos:start="27:51" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:53">

        <expr_stmt pos:start="29:9" pos:end="35:53"><expr pos:start="29:9" pos:end="35:52"><call pos:start="29:9" pos:end="35:52"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="35:52">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>, <argument pos:start="29:25" pos:end="31:66"><expr pos:start="29:25" pos:end="31:66"><literal type="string" pos:start="29:25" pos:end="29:77">"Warning: Disabling some instructions which are not "</literal>

                <literal type="string" pos:start="31:17" pos:end="31:38">"emulated by TCG (0x%"</literal> <name pos:start="31:40" pos:end="31:45">PRIx64</name> <literal type="string" pos:start="31:47" pos:end="31:53">", 0x%"</literal> <name pos:start="31:55" pos:end="31:60">PRIx64</name> <literal type="string" pos:start="31:62" pos:end="31:66">")\n"</literal></expr></argument>,

                <argument pos:start="33:17" pos:end="33:49"><expr pos:start="33:17" pos:end="33:49"><name pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:19">env</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:32">insns_flags</name></name> <operator pos:start="33:34" pos:end="33:34">&amp;</operator> <operator pos:start="33:36" pos:end="33:36">~</operator><name pos:start="33:37" pos:end="33:49">PPC_TCG_INSNS</name></expr></argument>,

                <argument pos:start="35:17" pos:end="35:51"><expr pos:start="35:17" pos:end="35:51"><name pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:19">env</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:33">insns_flags2</name></name> <operator pos:start="35:35" pos:end="35:35">&amp;</operator> <operator pos:start="35:37" pos:end="35:37">~</operator><name pos:start="35:38" pos:end="35:51">PPC_TCG_INSNS2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:7">env</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:20">insns_flags</name></name> <operator pos:start="39:22" pos:end="39:23">&amp;=</operator> <name pos:start="39:25" pos:end="39:37">PPC_TCG_INSNS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:7">env</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:21">insns_flags2</name></name> <operator pos:start="41:23" pos:end="41:24">&amp;=</operator> <name pos:start="41:26" pos:end="41:39">PPC_TCG_INSNS2</name></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
