<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23582.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">usb_packet_unmap</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:31">USBPacket</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">is_write</name> <init pos:start="5:18" pos:end="5:43">= <expr pos:start="5:20" pos:end="5:43"><operator pos:start="5:20" pos:end="5:20">(</operator><name pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:21">p</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:26">pid</name></name> <operator pos:start="5:28" pos:end="5:29">==</operator> <name pos:start="5:31" pos:end="5:42">USB_TOKEN_IN</name><operator pos:start="5:43" pos:end="5:43">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="19:5">for <control pos:start="11:9" pos:end="11:37">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:32"><expr pos:start="11:17" pos:end="11:31"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:31"><name pos:start="11:21" pos:end="11:21">p</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:26">iov</name><operator pos:start="11:27" pos:end="11:27">.</operator><name pos:start="11:28" pos:end="11:31">niov</name></name></expr>;</condition> <incr pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:34">i</name><operator pos:start="11:35" pos:end="11:36">++</operator></expr></incr>)</control> <block pos:start="11:39" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:57">

        <expr_stmt pos:start="13:9" pos:end="17:57"><expr pos:start="13:9" pos:end="17:56"><call pos:start="13:9" pos:end="17:56"><name pos:start="13:9" pos:end="13:33">cpu_physical_memory_unmap</name><argument_list pos:start="13:34" pos:end="17:56">(<argument pos:start="13:35" pos:end="13:56"><expr pos:start="13:35" pos:end="13:56"><name pos:start="13:35" pos:end="13:47"><name pos:start="13:35" pos:end="13:35">p</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:40">iov</name><operator pos:start="13:41" pos:end="13:41">.</operator><name pos:start="13:42" pos:end="13:44">iov</name><index pos:start="13:45" pos:end="13:47">[<expr pos:start="13:46" pos:end="13:46"><name pos:start="13:46" pos:end="13:46">i</name></expr>]</index></name><operator pos:start="13:48" pos:end="13:48">.</operator><name pos:start="13:49" pos:end="13:56">iov_base</name></expr></argument>,

                                  <argument pos:start="15:35" pos:end="15:55"><expr pos:start="15:35" pos:end="15:55"><name pos:start="15:35" pos:end="15:47"><name pos:start="15:35" pos:end="15:35">p</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:40">iov</name><operator pos:start="15:41" pos:end="15:41">.</operator><name pos:start="15:42" pos:end="15:44">iov</name><index pos:start="15:45" pos:end="15:47">[<expr pos:start="15:46" pos:end="15:46"><name pos:start="15:46" pos:end="15:46">i</name></expr>]</index></name><operator pos:start="15:48" pos:end="15:48">.</operator><name pos:start="15:49" pos:end="15:55">iov_len</name></expr></argument>, <argument pos:start="15:58" pos:end="15:65"><expr pos:start="15:58" pos:end="15:65"><name pos:start="15:58" pos:end="15:65">is_write</name></expr></argument>,

                                  <argument pos:start="17:35" pos:end="17:55"><expr pos:start="17:35" pos:end="17:55"><name pos:start="17:35" pos:end="17:47"><name pos:start="17:35" pos:end="17:35">p</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:40">iov</name><operator pos:start="17:41" pos:end="17:41">.</operator><name pos:start="17:42" pos:end="17:44">iov</name><index pos:start="17:45" pos:end="17:47">[<expr pos:start="17:46" pos:end="17:46"><name pos:start="17:46" pos:end="17:46">i</name></expr>]</index></name><operator pos:start="17:48" pos:end="17:48">.</operator><name pos:start="17:49" pos:end="17:55">iov_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
