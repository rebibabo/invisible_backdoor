<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22846.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">spitz_gpio_setup</name><parameter_list pos:start="1:29" pos:end="1:57">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">PXA2xxState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">cpu</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">slots</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:72">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">qemu_irq</name></type> <name pos:start="5:14" pos:end="5:22">lcd_hsync</name></decl>;</decl_stmt>

    <comment type="block" pos:start="7:5" pos:end="17:7">/*

     * Bad hack: We toggle the LCD hsync GPIO on every GPIO status

     * read to satisfy broken guests that poll-wait for hsync.

     * Simulating a real hsync event would be less practical and

     * wouldn't guarantee that a guest ever exits the loop.

     */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:15">spitz_hsync</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:71"><expr pos:start="21:5" pos:end="21:70"><name pos:start="21:5" pos:end="21:13">lcd_hsync</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:67"><name pos:start="21:17" pos:end="21:34">qemu_allocate_irqs</name><argument_list pos:start="21:35" pos:end="21:67">(<argument pos:start="21:36" pos:end="21:58"><expr pos:start="21:36" pos:end="21:58"><name pos:start="21:36" pos:end="21:58">spitz_lcd_hsync_handler</name></expr></argument>, <argument pos:start="21:61" pos:end="21:63"><expr pos:start="21:61" pos:end="21:63"><name pos:start="21:61" pos:end="21:63">cpu</name></expr></argument>, <argument pos:start="21:66" pos:end="21:66"><expr pos:start="21:66" pos:end="21:66"><literal type="number" pos:start="21:66" pos:end="21:66">1</literal></expr></argument>)</argument_list></call><index pos:start="21:68" pos:end="21:70">[<expr pos:start="21:69" pos:end="21:69"><literal type="number" pos:start="21:69" pos:end="21:69">0</literal></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><call pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:29">pxa2xx_gpio_read_notifier</name><argument_list pos:start="23:30" pos:end="23:51">(<argument pos:start="23:31" pos:end="23:39"><expr pos:start="23:31" pos:end="23:39"><name pos:start="23:31" pos:end="23:39"><name pos:start="23:31" pos:end="23:33">cpu</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:39">gpio</name></name></expr></argument>, <argument pos:start="23:42" pos:end="23:50"><expr pos:start="23:42" pos:end="23:50"><name pos:start="23:42" pos:end="23:50">lcd_hsync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><call pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:29">pxa2xx_lcd_vsync_notifier</name><argument_list pos:start="25:30" pos:end="25:50">(<argument pos:start="25:31" pos:end="25:38"><expr pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:33">cpu</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:38">lcd</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:49"><expr pos:start="25:41" pos:end="25:49"><name pos:start="25:41" pos:end="25:49">lcd_hsync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:21">/* MMC/SD host */</comment>

    <expr_stmt pos:start="31:5" pos:end="35:71"><expr pos:start="31:5" pos:end="35:70"><call pos:start="31:5" pos:end="35:70"><name pos:start="31:5" pos:end="31:24">pxa2xx_mmci_handlers</name><argument_list pos:start="31:25" pos:end="35:70">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:28">cpu</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:33">mmc</name></name></expr></argument>,

                    <argument pos:start="33:21" pos:end="33:65"><expr pos:start="33:21" pos:end="33:65"><call pos:start="33:21" pos:end="33:65"><name pos:start="33:21" pos:end="33:36">qdev_get_gpio_in</name><argument_list pos:start="33:37" pos:end="33:65">(<argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:40">cpu</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:46">gpio</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:64"><expr pos:start="33:49" pos:end="33:64"><name pos:start="33:49" pos:end="33:64">SPITZ_GPIO_SD_WP</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="35:21" pos:end="35:69"><expr pos:start="35:21" pos:end="35:69"><call pos:start="35:21" pos:end="35:69"><name pos:start="35:21" pos:end="35:36">qdev_get_gpio_in</name><argument_list pos:start="35:37" pos:end="35:69">(<argument pos:start="35:38" pos:end="35:46"><expr pos:start="35:38" pos:end="35:46"><name pos:start="35:38" pos:end="35:46"><name pos:start="35:38" pos:end="35:40">cpu</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:46">gpio</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:68"><expr pos:start="35:49" pos:end="35:68"><name pos:start="35:49" pos:end="35:68">SPITZ_GPIO_SD_DETECT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:36">/* Battery lock always closed */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:70"><expr pos:start="41:5" pos:end="41:69"><call pos:start="41:5" pos:end="41:69"><name pos:start="41:5" pos:end="41:18">qemu_irq_raise</name><argument_list pos:start="41:19" pos:end="41:69">(<argument pos:start="41:20" pos:end="41:68"><expr pos:start="41:20" pos:end="41:68"><call pos:start="41:20" pos:end="41:68"><name pos:start="41:20" pos:end="41:35">qdev_get_gpio_in</name><argument_list pos:start="41:36" pos:end="41:68">(<argument pos:start="41:37" pos:end="41:45"><expr pos:start="41:37" pos:end="41:45"><name pos:start="41:37" pos:end="41:45"><name pos:start="41:37" pos:end="41:39">cpu</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:45">gpio</name></name></expr></argument>, <argument pos:start="41:48" pos:end="41:67"><expr pos:start="41:48" pos:end="41:67"><name pos:start="41:48" pos:end="41:67">SPITZ_GPIO_BAT_COVER</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:22">/* Handle reset */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:70"><expr pos:start="47:5" pos:end="47:69"><call pos:start="47:5" pos:end="47:69"><name pos:start="47:5" pos:end="47:25">qdev_connect_gpio_out</name><argument_list pos:start="47:26" pos:end="47:69">(<argument pos:start="47:27" pos:end="47:35"><expr pos:start="47:27" pos:end="47:35"><name pos:start="47:27" pos:end="47:35"><name pos:start="47:27" pos:end="47:29">cpu</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:35">gpio</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:56"><expr pos:start="47:38" pos:end="47:56"><name pos:start="47:38" pos:end="47:56">SPITZ_GPIO_ON_RESET</name></expr></argument>, <argument pos:start="47:59" pos:end="47:68"><expr pos:start="47:59" pos:end="47:68"><name pos:start="47:59" pos:end="47:68"><name pos:start="47:59" pos:end="47:61">cpu</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:68">reset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:52">/* PCMCIA signals: card's IRQ and Card-Detect */</comment>

    <if_stmt pos:start="53:5" pos:end="59:72"><if pos:start="53:5" pos:end="59:72">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:13">slots</name> <operator pos:start="53:15" pos:end="53:16">&gt;=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="59:72"><block_content pos:start="55:9" pos:end="59:72">

        <expr_stmt pos:start="55:9" pos:end="59:72"><expr pos:start="55:9" pos:end="59:71"><call pos:start="55:9" pos:end="59:71"><name pos:start="55:9" pos:end="55:32">pxa2xx_pcmcia_set_irq_cb</name><argument_list pos:start="55:33" pos:end="59:71">(<argument pos:start="55:34" pos:end="55:47"><expr pos:start="55:34" pos:end="55:47"><name pos:start="55:34" pos:end="55:47"><name pos:start="55:34" pos:end="55:36">cpu</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:44">pcmcia</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">0</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="57:25" pos:end="57:71"><expr pos:start="57:25" pos:end="57:71"><call pos:start="57:25" pos:end="57:71"><name pos:start="57:25" pos:end="57:40">qdev_get_gpio_in</name><argument_list pos:start="57:41" pos:end="57:71">(<argument pos:start="57:42" pos:end="57:50"><expr pos:start="57:42" pos:end="57:50"><name pos:start="57:42" pos:end="57:50"><name pos:start="57:42" pos:end="57:44">cpu</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:50">gpio</name></name></expr></argument>, <argument pos:start="57:53" pos:end="57:70"><expr pos:start="57:53" pos:end="57:70"><name pos:start="57:53" pos:end="57:70">SPITZ_GPIO_CF1_IRQ</name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="59:25" pos:end="59:70"><expr pos:start="59:25" pos:end="59:70"><call pos:start="59:25" pos:end="59:70"><name pos:start="59:25" pos:end="59:40">qdev_get_gpio_in</name><argument_list pos:start="59:41" pos:end="59:70">(<argument pos:start="59:42" pos:end="59:50"><expr pos:start="59:42" pos:end="59:50"><name pos:start="59:42" pos:end="59:50"><name pos:start="59:42" pos:end="59:44">cpu</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:50">gpio</name></name></expr></argument>, <argument pos:start="59:53" pos:end="59:69"><expr pos:start="59:53" pos:end="59:69"><name pos:start="59:53" pos:end="59:69">SPITZ_GPIO_CF1_CD</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:72"><if pos:start="61:5" pos:end="67:72">if <condition pos:start="61:8" pos:end="61:19">(<expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:13">slots</name> <operator pos:start="61:15" pos:end="61:16">&gt;=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">2</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="67:72"><block_content pos:start="63:9" pos:end="67:72">

        <expr_stmt pos:start="63:9" pos:end="67:72"><expr pos:start="63:9" pos:end="67:71"><call pos:start="63:9" pos:end="67:71"><name pos:start="63:9" pos:end="63:32">pxa2xx_pcmcia_set_irq_cb</name><argument_list pos:start="63:33" pos:end="67:71">(<argument pos:start="63:34" pos:end="63:47"><expr pos:start="63:34" pos:end="63:47"><name pos:start="63:34" pos:end="63:47"><name pos:start="63:34" pos:end="63:36">cpu</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:44">pcmcia</name><index pos:start="63:45" pos:end="63:47">[<expr pos:start="63:46" pos:end="63:46"><literal type="number" pos:start="63:46" pos:end="63:46">1</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="65:25" pos:end="65:71"><expr pos:start="65:25" pos:end="65:71"><call pos:start="65:25" pos:end="65:71"><name pos:start="65:25" pos:end="65:40">qdev_get_gpio_in</name><argument_list pos:start="65:41" pos:end="65:71">(<argument pos:start="65:42" pos:end="65:50"><expr pos:start="65:42" pos:end="65:50"><name pos:start="65:42" pos:end="65:50"><name pos:start="65:42" pos:end="65:44">cpu</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:50">gpio</name></name></expr></argument>, <argument pos:start="65:53" pos:end="65:70"><expr pos:start="65:53" pos:end="65:70"><name pos:start="65:53" pos:end="65:70">SPITZ_GPIO_CF2_IRQ</name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="67:25" pos:end="67:70"><expr pos:start="67:25" pos:end="67:70"><call pos:start="67:25" pos:end="67:70"><name pos:start="67:25" pos:end="67:40">qdev_get_gpio_in</name><argument_list pos:start="67:41" pos:end="67:70">(<argument pos:start="67:42" pos:end="67:50"><expr pos:start="67:42" pos:end="67:50"><name pos:start="67:42" pos:end="67:50"><name pos:start="67:42" pos:end="67:44">cpu</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:50">gpio</name></name></expr></argument>, <argument pos:start="67:53" pos:end="67:69"><expr pos:start="67:53" pos:end="67:69"><name pos:start="67:53" pos:end="67:69">SPITZ_GPIO_CF2_CD</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
