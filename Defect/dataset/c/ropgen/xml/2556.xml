<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2556.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">ffmpeg_cleanup</name><parameter_list pos:start="1:27" pos:end="1:35">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:30"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="221:1">{<block_content pos:start="5:5" pos:end="219:16">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:20">do_benchmark</name></expr>)</condition> <block pos:start="9:23" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:47">

        <decl_stmt pos:start="11:9" pos:end="11:40"><decl pos:start="11:9" pos:end="11:39"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:18">maxrss</name> <init pos:start="11:20" pos:end="11:39">= <expr pos:start="11:22" pos:end="11:39"><call pos:start="11:22" pos:end="11:32"><name pos:start="11:22" pos:end="11:30">getmaxrss</name><argument_list pos:start="11:31" pos:end="11:32">()</argument_list></call> <operator pos:start="11:34" pos:end="11:34">/</operator> <literal type="number" pos:start="11:36" pos:end="11:39">1024</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:47"><expr pos:start="13:9" pos:end="13:46"><call pos:start="13:9" pos:end="13:46"><name pos:start="13:9" pos:end="13:14">printf</name><argument_list pos:start="13:15" pos:end="13:46">(<argument pos:start="13:16" pos:end="13:37"><expr pos:start="13:16" pos:end="13:37"><literal type="string" pos:start="13:16" pos:end="13:37">"bench: maxrss=%ikB\n"</literal></expr></argument>, <argument pos:start="13:40" pos:end="13:45"><expr pos:start="13:40" pos:end="13:45"><name pos:start="13:40" pos:end="13:45">maxrss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="19:5" pos:end="51:5">for <control pos:start="19:9" pos:end="19:41">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:36"><expr pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:35">nb_filtergraphs</name></expr>;</condition> <incr pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><name pos:start="19:38" pos:end="19:38">i</name><operator pos:start="19:39" pos:end="19:40">++</operator></expr></incr>)</control> <block pos:start="19:43" pos:end="51:5">{<block_content pos:start="21:9" pos:end="49:35">

        <decl_stmt pos:start="21:9" pos:end="21:42"><decl pos:start="21:9" pos:end="21:41"><type pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:19">FilterGraph</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:23">fg</name> <init pos:start="21:25" pos:end="21:41">= <expr pos:start="21:27" pos:end="21:41"><name pos:start="21:27" pos:end="21:41"><name pos:start="21:27" pos:end="21:38">filtergraphs</name><index pos:start="21:39" pos:end="21:41">[<expr pos:start="21:40" pos:end="21:40"><name pos:start="21:40" pos:end="21:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:27">avfilter_graph_free</name><argument_list pos:start="23:28" pos:end="23:39">(<argument pos:start="23:29" pos:end="23:38"><expr pos:start="23:29" pos:end="23:38"><operator pos:start="23:29" pos:end="23:29">&amp;</operator><name pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:31">fg</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:38">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="25:9" pos:end="31:9">for <control pos:start="25:13" pos:end="25:43">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">j</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:38"><expr pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:21">j</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:26">fg</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:37">nb_inputs</name></name></expr>;</condition> <incr pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:40">j</name><operator pos:start="25:41" pos:end="25:42">++</operator></expr></incr>)</control> <block pos:start="25:45" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:37">

            <expr_stmt pos:start="27:13" pos:end="27:43"><expr pos:start="27:13" pos:end="27:42"><call pos:start="27:13" pos:end="27:42"><name pos:start="27:13" pos:end="27:20">av_freep</name><argument_list pos:start="27:21" pos:end="27:42">(<argument pos:start="27:22" pos:end="27:41"><expr pos:start="27:22" pos:end="27:41"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:35"><name pos:start="27:23" pos:end="27:24">fg</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:32">inputs</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">j</name></expr>]</index></name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:41">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:37"><expr pos:start="29:13" pos:end="29:36"><call pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:20">av_freep</name><argument_list pos:start="29:21" pos:end="29:36">(<argument pos:start="29:22" pos:end="29:35"><expr pos:start="29:22" pos:end="29:35"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:35"><name pos:start="29:23" pos:end="29:24">fg</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:32">inputs</name><index pos:start="29:33" pos:end="29:35">[<expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><call pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:16">av_freep</name><argument_list pos:start="33:17" pos:end="33:29">(<argument pos:start="33:18" pos:end="33:28"><expr pos:start="33:18" pos:end="33:28"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:28"><name pos:start="33:19" pos:end="33:20">fg</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:28">inputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="35:9" pos:end="41:9">for <control pos:start="35:13" pos:end="35:44">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">j</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:39"><expr pos:start="35:21" pos:end="35:38"><name pos:start="35:21" pos:end="35:21">j</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:38"><name pos:start="35:25" pos:end="35:26">fg</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:38">nb_outputs</name></name></expr>;</condition> <incr pos:start="35:41" pos:end="35:43"><expr pos:start="35:41" pos:end="35:43"><name pos:start="35:41" pos:end="35:41">j</name><operator pos:start="35:42" pos:end="35:43">++</operator></expr></incr>)</control> <block pos:start="35:46" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:38">

            <expr_stmt pos:start="37:13" pos:end="37:44"><expr pos:start="37:13" pos:end="37:43"><call pos:start="37:13" pos:end="37:43"><name pos:start="37:13" pos:end="37:20">av_freep</name><argument_list pos:start="37:21" pos:end="37:43">(<argument pos:start="37:22" pos:end="37:42"><expr pos:start="37:22" pos:end="37:42"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:36"><name pos:start="37:23" pos:end="37:24">fg</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:33">outputs</name><index pos:start="37:34" pos:end="37:36">[<expr pos:start="37:35" pos:end="37:35"><name pos:start="37:35" pos:end="37:35">j</name></expr>]</index></name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:42">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:38"><expr pos:start="39:13" pos:end="39:37"><call pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:20">av_freep</name><argument_list pos:start="39:21" pos:end="39:37">(<argument pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:36"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:24">fg</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:33">outputs</name><index pos:start="39:34" pos:end="39:36">[<expr pos:start="39:35" pos:end="39:35"><name pos:start="39:35" pos:end="39:35">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><call pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:16">av_freep</name><argument_list pos:start="43:17" pos:end="43:30">(<argument pos:start="43:18" pos:end="43:29"><expr pos:start="43:18" pos:end="43:29"><operator pos:start="43:18" pos:end="43:18">&amp;</operator><name pos:start="43:19" pos:end="43:29"><name pos:start="43:19" pos:end="43:20">fg</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:29">outputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><call pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:16">av_freep</name><argument_list pos:start="45:17" pos:end="45:33">(<argument pos:start="45:18" pos:end="45:32"><expr pos:start="45:18" pos:end="45:32"><operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:32"><name pos:start="45:19" pos:end="45:20">fg</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:32">graph_desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:35"><expr pos:start="49:9" pos:end="49:34"><call pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:16">av_freep</name><argument_list pos:start="49:17" pos:end="49:34">(<argument pos:start="49:18" pos:end="49:33"><expr pos:start="49:18" pos:end="49:33"><operator pos:start="49:18" pos:end="49:18">&amp;</operator><name pos:start="49:19" pos:end="49:33"><name pos:start="49:19" pos:end="49:30">filtergraphs</name><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><name pos:start="49:32" pos:end="49:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><call pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:12">av_freep</name><argument_list pos:start="53:13" pos:end="53:27">(<argument pos:start="53:14" pos:end="53:26"><expr pos:start="53:14" pos:end="53:26"><operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:26">filtergraphs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><call pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:12">av_freep</name><argument_list pos:start="57:13" pos:end="57:27">(<argument pos:start="57:14" pos:end="57:26"><expr pos:start="57:14" pos:end="57:26"><operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:26">subtitle_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:21">/* close files */</comment>

    <for pos:start="63:5" pos:end="81:5">for <control pos:start="63:9" pos:end="63:41">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:36"><expr pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <name pos:start="63:21" pos:end="63:35">nb_output_files</name></expr>;</condition> <incr pos:start="63:38" pos:end="63:40"><expr pos:start="63:38" pos:end="63:40"><name pos:start="63:38" pos:end="63:38">i</name><operator pos:start="63:39" pos:end="63:40">++</operator></expr></incr>)</control> <block pos:start="63:43" pos:end="81:5">{<block_content pos:start="65:9" pos:end="79:35">

        <decl_stmt pos:start="65:9" pos:end="65:41"><decl pos:start="65:9" pos:end="65:40"><type pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:18">OutputFile</name> <modifier pos:start="65:20" pos:end="65:20">*</modifier></type><name pos:start="65:21" pos:end="65:22">of</name> <init pos:start="65:24" pos:end="65:40">= <expr pos:start="65:26" pos:end="65:40"><name pos:start="65:26" pos:end="65:40"><name pos:start="65:26" pos:end="65:37">output_files</name><index pos:start="65:38" pos:end="65:40">[<expr pos:start="65:39" pos:end="65:39"><name pos:start="65:39" pos:end="65:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:37"><decl pos:start="67:9" pos:end="67:36"><type pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:23">AVFormatContext</name> <modifier pos:start="67:25" pos:end="67:25">*</modifier></type><name pos:start="67:26" pos:end="67:26">s</name> <init pos:start="67:28" pos:end="67:36">= <expr pos:start="67:30" pos:end="67:36"><name pos:start="67:30" pos:end="67:36"><name pos:start="67:30" pos:end="67:31">of</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:36">ctx</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="69:9" pos:end="71:32"><if pos:start="69:9" pos:end="71:32">if <condition pos:start="69:12" pos:end="69:76">(<expr pos:start="69:13" pos:end="69:75"><name pos:start="69:13" pos:end="69:13">s</name> <operator pos:start="69:15" pos:end="69:16">&amp;&amp;</operator> <name pos:start="69:18" pos:end="69:27"><name pos:start="69:18" pos:end="69:18">s</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:27">oformat</name></name> <operator pos:start="69:29" pos:end="69:30">&amp;&amp;</operator> <operator pos:start="69:32" pos:end="69:32">!</operator><operator pos:start="69:33" pos:end="69:33">(</operator><name pos:start="69:34" pos:end="69:50"><name pos:start="69:34" pos:end="69:34">s</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:43">oformat</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:50">flags</name></name> <operator pos:start="69:52" pos:end="69:52">&amp;</operator> <name pos:start="69:54" pos:end="69:65">AVFMT_NOFILE</name><operator pos:start="69:66" pos:end="69:66">)</operator> <operator pos:start="69:68" pos:end="69:69">&amp;&amp;</operator> <name pos:start="69:71" pos:end="69:75"><name pos:start="69:71" pos:end="69:71">s</name><operator pos:start="69:72" pos:end="69:73">-&gt;</operator><name pos:start="69:74" pos:end="69:75">pb</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:32"><block_content pos:start="71:13" pos:end="71:32">

            <expr_stmt pos:start="71:13" pos:end="71:32"><expr pos:start="71:13" pos:end="71:31"><call pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:23">avio_closep</name><argument_list pos:start="71:24" pos:end="71:31">(<argument pos:start="71:25" pos:end="71:30"><expr pos:start="71:25" pos:end="71:30"><operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:30"><name pos:start="71:26" pos:end="71:26">s</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><call pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:29">avformat_free_context</name><argument_list pos:start="73:30" pos:end="73:32">(<argument pos:start="73:31" pos:end="73:31"><expr pos:start="73:31" pos:end="73:31"><name pos:start="73:31" pos:end="73:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><call pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:20">av_dict_free</name><argument_list pos:start="75:21" pos:end="75:31">(<argument pos:start="75:22" pos:end="75:30"><expr pos:start="75:22" pos:end="75:30"><operator pos:start="75:22" pos:end="75:22">&amp;</operator><name pos:start="75:23" pos:end="75:30"><name pos:start="75:23" pos:end="75:24">of</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:30">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><call pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:16">av_freep</name><argument_list pos:start="79:17" pos:end="79:34">(<argument pos:start="79:18" pos:end="79:33"><expr pos:start="79:18" pos:end="79:33"><operator pos:start="79:18" pos:end="79:18">&amp;</operator><name pos:start="79:19" pos:end="79:33"><name pos:start="79:19" pos:end="79:30">output_files</name><index pos:start="79:31" pos:end="79:33">[<expr pos:start="79:32" pos:end="79:32"><name pos:start="79:32" pos:end="79:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="83:5" pos:end="136:0">for <control pos:start="83:9" pos:end="83:43">(<init pos:start="83:10" pos:end="83:15"><expr pos:start="83:10" pos:end="83:14"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</init> <condition pos:start="83:17" pos:end="83:38"><expr pos:start="83:17" pos:end="83:37"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <name pos:start="83:21" pos:end="83:37">nb_output_streams</name></expr>;</condition> <incr pos:start="83:40" pos:end="83:42"><expr pos:start="83:40" pos:end="83:42"><name pos:start="83:40" pos:end="83:40">i</name><operator pos:start="83:41" pos:end="83:42">++</operator></expr></incr>)</control> <block pos:start="83:45" pos:end="136:0">{<block_content pos:start="85:9" pos:end="131:37">

        <decl_stmt pos:start="85:9" pos:end="85:46"><decl pos:start="85:9" pos:end="85:45"><type pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:20">OutputStream</name> <modifier pos:start="85:22" pos:end="85:22">*</modifier></type><name pos:start="85:23" pos:end="85:25">ost</name> <init pos:start="85:27" pos:end="85:45">= <expr pos:start="85:29" pos:end="85:45"><name pos:start="85:29" pos:end="85:45"><name pos:start="85:29" pos:end="85:42">output_streams</name><index pos:start="85:43" pos:end="85:45">[<expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="87:9" pos:end="87:64"><decl pos:start="87:9" pos:end="87:63"><type pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:32">AVBitStreamFilterContext</name> <modifier pos:start="87:34" pos:end="87:34">*</modifier></type><name pos:start="87:35" pos:end="87:38">bsfc</name> <init pos:start="87:40" pos:end="87:63">= <expr pos:start="87:42" pos:end="87:63"><name pos:start="87:42" pos:end="87:63"><name pos:start="87:42" pos:end="87:44">ost</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:63">bitstream_filters</name></name></expr></init></decl>;</decl_stmt>

        <while pos:start="89:9" pos:end="97:9">while <condition pos:start="89:15" pos:end="89:20">(<expr pos:start="89:16" pos:end="89:19"><name pos:start="89:16" pos:end="89:19">bsfc</name></expr>)</condition> <block pos:start="89:22" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:24">

            <decl_stmt pos:start="91:13" pos:end="91:56"><decl pos:start="91:13" pos:end="91:55"><type pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:36">AVBitStreamFilterContext</name> <modifier pos:start="91:38" pos:end="91:38">*</modifier></type><name pos:start="91:39" pos:end="91:42">next</name> <init pos:start="91:44" pos:end="91:55">= <expr pos:start="91:46" pos:end="91:55"><name pos:start="91:46" pos:end="91:55"><name pos:start="91:46" pos:end="91:49">bsfc</name><operator pos:start="91:50" pos:end="91:51">-&gt;</operator><name pos:start="91:52" pos:end="91:55">next</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:44"><expr pos:start="93:13" pos:end="93:43"><call pos:start="93:13" pos:end="93:43"><name pos:start="93:13" pos:end="93:37">av_bitstream_filter_close</name><argument_list pos:start="93:38" pos:end="93:43">(<argument pos:start="93:39" pos:end="93:42"><expr pos:start="93:39" pos:end="93:42"><name pos:start="93:39" pos:end="93:42">bsfc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:24"><expr pos:start="95:13" pos:end="95:23"><name pos:start="95:13" pos:end="95:16">bsfc</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:23">next</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="99:9" pos:end="99:38"><expr pos:start="99:9" pos:end="99:37"><name pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:11">ost</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:30">bitstream_filters</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <name pos:start="99:34" pos:end="99:37">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:44"><expr pos:start="101:9" pos:end="101:43"><call pos:start="101:9" pos:end="101:43"><name pos:start="101:9" pos:end="101:21">av_frame_free</name><argument_list pos:start="101:22" pos:end="101:43">(<argument pos:start="101:23" pos:end="101:42"><expr pos:start="101:23" pos:end="101:42"><operator pos:start="101:23" pos:end="101:23">&amp;</operator><name pos:start="101:24" pos:end="101:42"><name pos:start="101:24" pos:end="101:26">ost</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:42">filtered_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:40"><expr pos:start="103:9" pos:end="103:39"><call pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:21">av_frame_free</name><argument_list pos:start="103:22" pos:end="103:39">(<argument pos:start="103:23" pos:end="103:38"><expr pos:start="103:23" pos:end="103:38"><operator pos:start="103:23" pos:end="103:23">&amp;</operator><name pos:start="103:24" pos:end="103:38"><name pos:start="103:24" pos:end="103:26">ost</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:38">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:37"><expr pos:start="107:9" pos:end="107:36"><call pos:start="107:9" pos:end="107:36"><name pos:start="107:9" pos:end="107:23">av_parser_close</name><argument_list pos:start="107:24" pos:end="107:36">(<argument pos:start="107:25" pos:end="107:35"><expr pos:start="107:25" pos:end="107:35"><name pos:start="107:25" pos:end="107:35"><name pos:start="107:25" pos:end="107:27">ost</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:35">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:41"><expr pos:start="111:9" pos:end="111:40"><call pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:16">av_freep</name><argument_list pos:start="111:17" pos:end="111:40">(<argument pos:start="111:18" pos:end="111:39"><expr pos:start="111:18" pos:end="111:39"><operator pos:start="111:18" pos:end="111:18">&amp;</operator><name pos:start="111:19" pos:end="111:39"><name pos:start="111:19" pos:end="111:21">ost</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:39">forced_keyframes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:50"><expr pos:start="113:9" pos:end="113:49"><call pos:start="113:9" pos:end="113:49"><name pos:start="113:9" pos:end="113:20">av_expr_free</name><argument_list pos:start="113:21" pos:end="113:49">(<argument pos:start="113:22" pos:end="113:48"><expr pos:start="113:22" pos:end="113:48"><name pos:start="113:22" pos:end="113:48"><name pos:start="113:22" pos:end="113:24">ost</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:48">forced_keyframes_pexpr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:33"><expr pos:start="115:9" pos:end="115:32"><call pos:start="115:9" pos:end="115:32"><name pos:start="115:9" pos:end="115:16">av_freep</name><argument_list pos:start="115:17" pos:end="115:32">(<argument pos:start="115:18" pos:end="115:31"><expr pos:start="115:18" pos:end="115:31"><operator pos:start="115:18" pos:end="115:18">&amp;</operator><name pos:start="115:19" pos:end="115:31"><name pos:start="115:19" pos:end="115:21">ost</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:31">avfilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><call pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:16">av_freep</name><argument_list pos:start="117:17" pos:end="117:38">(<argument pos:start="117:18" pos:end="117:37"><expr pos:start="117:18" pos:end="117:37"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:37"><name pos:start="117:19" pos:end="117:21">ost</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:37">logfile_prefix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:43"><expr pos:start="121:9" pos:end="121:42"><call pos:start="121:9" pos:end="121:42"><name pos:start="121:9" pos:end="121:16">av_freep</name><argument_list pos:start="121:17" pos:end="121:42">(<argument pos:start="121:18" pos:end="121:41"><expr pos:start="121:18" pos:end="121:41"><operator pos:start="121:18" pos:end="121:18">&amp;</operator><name pos:start="121:19" pos:end="121:41"><name pos:start="121:19" pos:end="121:21">ost</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:41">audio_channels_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:34"><name pos:start="123:9" pos:end="123:11">ost</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:34">audio_channels_mapped</name></name> <operator pos:start="123:36" pos:end="123:36">=</operator> <literal type="number" pos:start="123:38" pos:end="123:38">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:44"><expr pos:start="127:9" pos:end="127:43"><call pos:start="127:9" pos:end="127:43"><name pos:start="127:9" pos:end="127:28">avcodec_free_context</name><argument_list pos:start="127:29" pos:end="127:43">(<argument pos:start="127:30" pos:end="127:42"><expr pos:start="127:30" pos:end="127:42"><operator pos:start="127:30" pos:end="127:30">&amp;</operator><name pos:start="127:31" pos:end="127:42"><name pos:start="127:31" pos:end="127:33">ost</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:42">enc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:37"><expr pos:start="131:9" pos:end="131:36"><call pos:start="131:9" pos:end="131:36"><name pos:start="131:9" pos:end="131:16">av_freep</name><argument_list pos:start="131:17" pos:end="131:36">(<argument pos:start="131:18" pos:end="131:35"><expr pos:start="131:18" pos:end="131:35"><operator pos:start="131:18" pos:end="131:18">&amp;</operator><name pos:start="131:19" pos:end="131:35"><name pos:start="131:19" pos:end="131:32">output_streams</name><index pos:start="131:33" pos:end="131:35">[<expr pos:start="131:34" pos:end="131:34"><name pos:start="131:34" pos:end="131:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:if pos:start="135:1" pos:end="135:17">#<cpp:directive pos:start="135:2" pos:end="135:3">if</cpp:directive> <expr pos:start="135:5" pos:end="135:17"><name pos:start="135:5" pos:end="135:17">HAVE_PTHREADS</name></expr></cpp:if>

    <expr_stmt pos:start="137:5" pos:end="140:0"><expr pos:start="137:5" pos:end="137:24"><call pos:start="137:5" pos:end="137:24"><name pos:start="137:5" pos:end="137:22">free_input_threads</name><argument_list pos:start="137:23" pos:end="137:24">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="139:1" pos:end="139:6">#<cpp:directive pos:start="139:2" pos:end="139:6">endif</cpp:directive></cpp:endif>

    <for pos:start="141:5" pos:end="147:5">for <control pos:start="141:9" pos:end="141:40">(<init pos:start="141:10" pos:end="141:15"><expr pos:start="141:10" pos:end="141:14"><name pos:start="141:10" pos:end="141:10">i</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>;</init> <condition pos:start="141:17" pos:end="141:35"><expr pos:start="141:17" pos:end="141:34"><name pos:start="141:17" pos:end="141:17">i</name> <operator pos:start="141:19" pos:end="141:19">&lt;</operator> <name pos:start="141:21" pos:end="141:34">nb_input_files</name></expr>;</condition> <incr pos:start="141:37" pos:end="141:39"><expr pos:start="141:37" pos:end="141:39"><name pos:start="141:37" pos:end="141:37">i</name><operator pos:start="141:38" pos:end="141:39">++</operator></expr></incr>)</control> <block pos:start="141:42" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:34">

        <expr_stmt pos:start="143:9" pos:end="143:51"><expr pos:start="143:9" pos:end="143:50"><call pos:start="143:9" pos:end="143:50"><name pos:start="143:9" pos:end="143:28">avformat_close_input</name><argument_list pos:start="143:29" pos:end="143:50">(<argument pos:start="143:30" pos:end="143:49"><expr pos:start="143:30" pos:end="143:49"><operator pos:start="143:30" pos:end="143:30">&amp;</operator><name pos:start="143:31" pos:end="143:44"><name pos:start="143:31" pos:end="143:41">input_files</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><name pos:start="143:43" pos:end="143:43">i</name></expr>]</index></name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:49">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:34"><expr pos:start="145:9" pos:end="145:33"><call pos:start="145:9" pos:end="145:33"><name pos:start="145:9" pos:end="145:16">av_freep</name><argument_list pos:start="145:17" pos:end="145:33">(<argument pos:start="145:18" pos:end="145:32"><expr pos:start="145:18" pos:end="145:32"><operator pos:start="145:18" pos:end="145:18">&amp;</operator><name pos:start="145:19" pos:end="145:32"><name pos:start="145:19" pos:end="145:29">input_files</name><index pos:start="145:30" pos:end="145:32">[<expr pos:start="145:31" pos:end="145:31"><name pos:start="145:31" pos:end="145:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="149:5" pos:end="177:5">for <control pos:start="149:9" pos:end="149:42">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">i</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:37"><expr pos:start="149:17" pos:end="149:36"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <name pos:start="149:21" pos:end="149:36">nb_input_streams</name></expr>;</condition> <incr pos:start="149:39" pos:end="149:41"><expr pos:start="149:39" pos:end="149:41"><name pos:start="149:39" pos:end="149:39">i</name><operator pos:start="149:40" pos:end="149:41">++</operator></expr></incr>)</control> <block pos:start="149:44" pos:end="177:5">{<block_content pos:start="151:9" pos:end="175:36">

        <decl_stmt pos:start="151:9" pos:end="151:44"><decl pos:start="151:9" pos:end="151:43"><type pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:19">InputStream</name> <modifier pos:start="151:21" pos:end="151:21">*</modifier></type><name pos:start="151:22" pos:end="151:24">ist</name> <init pos:start="151:26" pos:end="151:43">= <expr pos:start="151:28" pos:end="151:43"><name pos:start="151:28" pos:end="151:43"><name pos:start="151:28" pos:end="151:40">input_streams</name><index pos:start="151:41" pos:end="151:43">[<expr pos:start="151:42" pos:end="151:42"><name pos:start="151:42" pos:end="151:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:43"><expr pos:start="155:9" pos:end="155:42"><call pos:start="155:9" pos:end="155:42"><name pos:start="155:9" pos:end="155:21">av_frame_free</name><argument_list pos:start="155:22" pos:end="155:42">(<argument pos:start="155:23" pos:end="155:41"><expr pos:start="155:23" pos:end="155:41"><operator pos:start="155:23" pos:end="155:23">&amp;</operator><name pos:start="155:24" pos:end="155:41"><name pos:start="155:24" pos:end="155:26">ist</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:41">decoded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:42"><expr pos:start="157:9" pos:end="157:41"><call pos:start="157:9" pos:end="157:41"><name pos:start="157:9" pos:end="157:21">av_frame_free</name><argument_list pos:start="157:22" pos:end="157:41">(<argument pos:start="157:23" pos:end="157:40"><expr pos:start="157:23" pos:end="157:40"><operator pos:start="157:23" pos:end="157:23">&amp;</operator><name pos:start="157:24" pos:end="157:40"><name pos:start="157:24" pos:end="157:26">ist</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:40">filter_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:41"><expr pos:start="159:9" pos:end="159:40"><call pos:start="159:9" pos:end="159:40"><name pos:start="159:9" pos:end="159:20">av_dict_free</name><argument_list pos:start="159:21" pos:end="159:40">(<argument pos:start="159:22" pos:end="159:39"><expr pos:start="159:22" pos:end="159:39"><operator pos:start="159:22" pos:end="159:22">&amp;</operator><name pos:start="159:23" pos:end="159:39"><name pos:start="159:23" pos:end="159:25">ist</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:39">decoder_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:49"><expr pos:start="161:9" pos:end="161:48"><call pos:start="161:9" pos:end="161:48"><name pos:start="161:9" pos:end="161:23">avsubtitle_free</name><argument_list pos:start="161:24" pos:end="161:48">(<argument pos:start="161:25" pos:end="161:47"><expr pos:start="161:25" pos:end="161:47"><operator pos:start="161:25" pos:end="161:25">&amp;</operator><name pos:start="161:26" pos:end="161:47"><name pos:start="161:26" pos:end="161:28">ist</name><operator pos:start="161:29" pos:end="161:30">-&gt;</operator><name pos:start="161:31" pos:end="161:38">prev_sub</name><operator pos:start="161:39" pos:end="161:39">.</operator><name pos:start="161:40" pos:end="161:47">subtitle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:45"><expr pos:start="163:9" pos:end="163:44"><call pos:start="163:9" pos:end="163:44"><name pos:start="163:9" pos:end="163:21">av_frame_free</name><argument_list pos:start="163:22" pos:end="163:44">(<argument pos:start="163:23" pos:end="163:43"><expr pos:start="163:23" pos:end="163:43"><operator pos:start="163:23" pos:end="163:23">&amp;</operator><name pos:start="163:24" pos:end="163:43"><name pos:start="163:24" pos:end="163:26">ist</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:37">sub2video</name><operator pos:start="163:38" pos:end="163:38">.</operator><name pos:start="163:39" pos:end="163:43">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:32"><expr pos:start="165:9" pos:end="165:31"><call pos:start="165:9" pos:end="165:31"><name pos:start="165:9" pos:end="165:16">av_freep</name><argument_list pos:start="165:17" pos:end="165:31">(<argument pos:start="165:18" pos:end="165:30"><expr pos:start="165:18" pos:end="165:30"><operator pos:start="165:18" pos:end="165:18">&amp;</operator><name pos:start="165:19" pos:end="165:30"><name pos:start="165:19" pos:end="165:21">ist</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:30">filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:39"><expr pos:start="167:9" pos:end="167:38"><call pos:start="167:9" pos:end="167:38"><name pos:start="167:9" pos:end="167:16">av_freep</name><argument_list pos:start="167:17" pos:end="167:38">(<argument pos:start="167:18" pos:end="167:37"><expr pos:start="167:18" pos:end="167:37"><operator pos:start="167:18" pos:end="167:18">&amp;</operator><name pos:start="167:19" pos:end="167:37"><name pos:start="167:19" pos:end="167:21">ist</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:37">hwaccel_device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:44"><expr pos:start="171:9" pos:end="171:43"><call pos:start="171:9" pos:end="171:43"><name pos:start="171:9" pos:end="171:28">avcodec_free_context</name><argument_list pos:start="171:29" pos:end="171:43">(<argument pos:start="171:30" pos:end="171:42"><expr pos:start="171:30" pos:end="171:42"><operator pos:start="171:30" pos:end="171:30">&amp;</operator><name pos:start="171:31" pos:end="171:42"><name pos:start="171:31" pos:end="171:33">ist</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:42">dec_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:36"><expr pos:start="175:9" pos:end="175:35"><call pos:start="175:9" pos:end="175:35"><name pos:start="175:9" pos:end="175:16">av_freep</name><argument_list pos:start="175:17" pos:end="175:35">(<argument pos:start="175:18" pos:end="175:34"><expr pos:start="175:18" pos:end="175:34"><operator pos:start="175:18" pos:end="175:18">&amp;</operator><name pos:start="175:19" pos:end="175:34"><name pos:start="175:19" pos:end="175:31">input_streams</name><index pos:start="175:32" pos:end="175:34">[<expr pos:start="175:33" pos:end="175:33"><name pos:start="175:33" pos:end="175:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="181:5" pos:end="183:28"><if pos:start="181:5" pos:end="183:28">if <condition pos:start="181:8" pos:end="181:20">(<expr pos:start="181:9" pos:end="181:19"><name pos:start="181:9" pos:end="181:19">vstats_file</name></expr>)</condition><block type="pseudo" pos:start="183:9" pos:end="183:28"><block_content pos:start="183:9" pos:end="183:28">

        <expr_stmt pos:start="183:9" pos:end="183:28"><expr pos:start="183:9" pos:end="183:27"><call pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:14">fclose</name><argument_list pos:start="183:15" pos:end="183:27">(<argument pos:start="183:16" pos:end="183:26"><expr pos:start="183:16" pos:end="183:26"><name pos:start="183:16" pos:end="183:26">vstats_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:31"><expr pos:start="185:5" pos:end="185:30"><call pos:start="185:5" pos:end="185:30"><name pos:start="185:5" pos:end="185:12">av_freep</name><argument_list pos:start="185:13" pos:end="185:30">(<argument pos:start="185:14" pos:end="185:29"><expr pos:start="185:14" pos:end="185:29"><operator pos:start="185:14" pos:end="185:14">&amp;</operator><name pos:start="185:15" pos:end="185:29">vstats_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:29"><expr pos:start="189:5" pos:end="189:28"><call pos:start="189:5" pos:end="189:28"><name pos:start="189:5" pos:end="189:12">av_freep</name><argument_list pos:start="189:13" pos:end="189:28">(<argument pos:start="189:14" pos:end="189:27"><expr pos:start="189:14" pos:end="189:27"><operator pos:start="189:14" pos:end="189:14">&amp;</operator><name pos:start="189:15" pos:end="189:27">input_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:27"><expr pos:start="191:5" pos:end="191:26"><call pos:start="191:5" pos:end="191:26"><name pos:start="191:5" pos:end="191:12">av_freep</name><argument_list pos:start="191:13" pos:end="191:26">(<argument pos:start="191:14" pos:end="191:25"><expr pos:start="191:14" pos:end="191:25"><operator pos:start="191:14" pos:end="191:14">&amp;</operator><name pos:start="191:15" pos:end="191:25">input_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:30"><expr pos:start="193:5" pos:end="193:29"><call pos:start="193:5" pos:end="193:29"><name pos:start="193:5" pos:end="193:12">av_freep</name><argument_list pos:start="193:13" pos:end="193:29">(<argument pos:start="193:14" pos:end="193:28"><expr pos:start="193:14" pos:end="193:28"><operator pos:start="193:14" pos:end="193:14">&amp;</operator><name pos:start="193:15" pos:end="193:28">output_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:28"><expr pos:start="195:5" pos:end="195:27"><call pos:start="195:5" pos:end="195:27"><name pos:start="195:5" pos:end="195:12">av_freep</name><argument_list pos:start="195:13" pos:end="195:27">(<argument pos:start="195:14" pos:end="195:26"><expr pos:start="195:14" pos:end="195:26"><operator pos:start="195:14" pos:end="195:14">&amp;</operator><name pos:start="195:15" pos:end="195:26">output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:18"><expr pos:start="199:5" pos:end="199:17"><call pos:start="199:5" pos:end="199:17"><name pos:start="199:5" pos:end="199:15">uninit_opts</name><argument_list pos:start="199:16" pos:end="199:17">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:30"><expr pos:start="203:5" pos:end="203:29"><call pos:start="203:5" pos:end="203:29"><name pos:start="203:5" pos:end="203:27">avformat_network_deinit</name><argument_list pos:start="203:28" pos:end="203:29">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="207:5" pos:end="217:5"><if pos:start="207:5" pos:end="213:5">if <condition pos:start="207:8" pos:end="207:25">(<expr pos:start="207:9" pos:end="207:24"><name pos:start="207:9" pos:end="207:24">received_sigterm</name></expr>)</condition> <block pos:start="207:27" pos:end="213:5">{<block_content pos:start="209:9" pos:end="211:39">

        <expr_stmt pos:start="209:9" pos:end="211:39"><expr pos:start="209:9" pos:end="211:38"><call pos:start="209:9" pos:end="211:38"><name pos:start="209:9" pos:end="209:14">av_log</name><argument_list pos:start="209:15" pos:end="211:38">(<argument pos:start="209:16" pos:end="209:19"><expr pos:start="209:16" pos:end="209:19"><name pos:start="209:16" pos:end="209:19">NULL</name></expr></argument>, <argument pos:start="209:22" pos:end="209:32"><expr pos:start="209:22" pos:end="209:32"><name pos:start="209:22" pos:end="209:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="209:35" pos:end="209:70"><expr pos:start="209:35" pos:end="209:70"><literal type="string" pos:start="209:35" pos:end="209:70">"Received signal %d: terminating.\n"</literal></expr></argument>,

               <argument pos:start="211:16" pos:end="211:37"><expr pos:start="211:16" pos:end="211:37"><operator pos:start="211:16" pos:end="211:16">(</operator><name pos:start="211:17" pos:end="211:19">int</name><operator pos:start="211:20" pos:end="211:20">)</operator> <name pos:start="211:22" pos:end="211:37">received_sigterm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="213:7" pos:end="217:5">else if <condition pos:start="213:15" pos:end="213:42">(<expr pos:start="213:16" pos:end="213:41"><name pos:start="213:16" pos:end="213:18">ret</name> <operator pos:start="213:20" pos:end="213:21">&amp;&amp;</operator> <name pos:start="213:23" pos:end="213:41">transcode_init_done</name></expr>)</condition> <block pos:start="213:44" pos:end="217:5">{<block_content pos:start="215:9" pos:end="215:58">

        <expr_stmt pos:start="215:9" pos:end="215:58"><expr pos:start="215:9" pos:end="215:57"><call pos:start="215:9" pos:end="215:57"><name pos:start="215:9" pos:end="215:14">av_log</name><argument_list pos:start="215:15" pos:end="215:57">(<argument pos:start="215:16" pos:end="215:19"><expr pos:start="215:16" pos:end="215:19"><name pos:start="215:16" pos:end="215:19">NULL</name></expr></argument>, <argument pos:start="215:22" pos:end="215:32"><expr pos:start="215:22" pos:end="215:32"><name pos:start="215:22" pos:end="215:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="215:35" pos:end="215:56"><expr pos:start="215:35" pos:end="215:56"><literal type="string" pos:start="215:35" pos:end="215:56">"Conversion failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:16"><expr pos:start="219:5" pos:end="219:15"><call pos:start="219:5" pos:end="219:15"><name pos:start="219:5" pos:end="219:13">term_exit</name><argument_list pos:start="219:14" pos:end="219:15">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
