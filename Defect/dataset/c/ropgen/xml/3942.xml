<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3942.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">mirror_do_zero_or_discard</name><parameter_list pos:start="1:38" pos:end="7:54">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:52">MirrorBlockJob</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:56"><decl pos:start="3:39" pos:end="3:56"><type pos:start="3:39" pos:end="3:56"><name pos:start="3:39" pos:end="3:45">int64_t</name></type> <name pos:start="3:47" pos:end="3:56">sector_num</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:52"><decl pos:start="5:39" pos:end="5:52"><type pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:52">nb_sectors</name></decl></parameter>,

                                      <parameter pos:start="7:39" pos:end="7:53"><decl pos:start="7:39" pos:end="7:53"><type pos:start="7:39" pos:end="7:53"><name pos:start="7:39" pos:end="7:42">bool</name></type> <name pos:start="7:44" pos:end="7:53">is_discard</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="53:1">{<block_content pos:start="11:5" pos:end="51:5">

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">MirrorOp</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">op</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="17:57">/* Allocate a MirrorOp that is used as an AIO callback. The qiov is zeroed

     * so the freeing in mirror_iteration_done is nop. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:6">op</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:28"><name pos:start="19:10" pos:end="19:15">g_new0</name><argument_list pos:start="19:16" pos:end="19:28">(<argument pos:start="19:17" pos:end="19:24"><expr pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:24">MirrorOp</name></expr></argument>, <argument pos:start="19:27" pos:end="19:27"><expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:14"><expr pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:6">op</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:9">s</name></name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:13">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:6">op</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:18">sector_num</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:31">sector_num</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:6">op</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:18">nb_sectors</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:31">nb_sectors</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:16">in_flight</name></name><operator pos:start="29:17" pos:end="29:18">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:24">sectors_in_flight</name></name> <operator pos:start="31:26" pos:end="31:27">+=</operator> <name pos:start="31:29" pos:end="31:38">nb_sectors</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="51:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:18">is_discard</name></expr>)</condition> <block pos:start="33:21" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:52">

        <expr_stmt pos:start="35:9" pos:end="39:52"><expr pos:start="35:9" pos:end="39:51"><call pos:start="35:9" pos:end="39:51"><name pos:start="35:9" pos:end="35:24">blk_aio_pdiscard</name><argument_list pos:start="35:25" pos:end="39:51">(<argument pos:start="35:26" pos:end="35:34"><expr pos:start="35:26" pos:end="35:34"><name pos:start="35:26" pos:end="35:34"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:34">target</name></name></expr></argument>, <argument pos:start="35:37" pos:end="35:66"><expr pos:start="35:37" pos:end="35:66"><name pos:start="35:37" pos:end="35:46">sector_num</name> <operator pos:start="35:48" pos:end="35:49">&lt;&lt;</operator> <name pos:start="35:51" pos:end="35:66">BDRV_SECTOR_BITS</name></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:59"><expr pos:start="37:26" pos:end="37:59"><name pos:start="37:26" pos:end="37:39"><name pos:start="37:26" pos:end="37:27">op</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:39">nb_sectors</name></name> <operator pos:start="37:41" pos:end="37:42">&lt;&lt;</operator> <name pos:start="37:44" pos:end="37:59">BDRV_SECTOR_BITS</name></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:46"><expr pos:start="39:26" pos:end="39:46"><name pos:start="39:26" pos:end="39:46">mirror_write_complete</name></expr></argument>, <argument pos:start="39:49" pos:end="39:50"><expr pos:start="39:49" pos:end="39:50"><name pos:start="39:49" pos:end="39:50">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="51:5">else <block pos:start="41:12" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:57">

        <expr_stmt pos:start="43:9" pos:end="49:57"><expr pos:start="43:9" pos:end="49:56"><call pos:start="43:9" pos:end="49:56"><name pos:start="43:9" pos:end="43:29">blk_aio_pwrite_zeroes</name><argument_list pos:start="43:30" pos:end="49:56">(<argument pos:start="43:31" pos:end="43:39"><expr pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:39">target</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:70"><expr pos:start="43:42" pos:end="43:70"><name pos:start="43:42" pos:end="43:51">sector_num</name> <operator pos:start="43:53" pos:end="43:53">*</operator> <name pos:start="43:55" pos:end="43:70">BDRV_SECTOR_SIZE</name></expr></argument>,

                              <argument pos:start="45:31" pos:end="45:63"><expr pos:start="45:31" pos:end="45:63"><name pos:start="45:31" pos:end="45:44"><name pos:start="45:31" pos:end="45:32">op</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:44">nb_sectors</name></name> <operator pos:start="45:46" pos:end="45:46">*</operator> <name pos:start="45:48" pos:end="45:63">BDRV_SECTOR_SIZE</name></expr></argument>,

                              <argument pos:start="47:31" pos:end="47:63"><expr pos:start="47:31" pos:end="47:63"><ternary pos:start="47:31" pos:end="47:63"><condition pos:start="47:31" pos:end="47:40"><expr pos:start="47:31" pos:end="47:38"><name pos:start="47:31" pos:end="47:38"><name pos:start="47:31" pos:end="47:31">s</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:38">unmap</name></name></expr> ?</condition><then pos:start="47:42" pos:end="47:59"> <expr pos:start="47:42" pos:end="47:59"><name pos:start="47:42" pos:end="47:59">BDRV_REQ_MAY_UNMAP</name></expr> </then><else pos:start="47:61" pos:end="47:63">: <expr pos:start="47:63" pos:end="47:63"><literal type="number" pos:start="47:63" pos:end="47:63">0</literal></expr></else></ternary></expr></argument>,

                              <argument pos:start="49:31" pos:end="49:51"><expr pos:start="49:31" pos:end="49:51"><name pos:start="49:31" pos:end="49:51">mirror_write_complete</name></expr></argument>, <argument pos:start="49:54" pos:end="49:55"><expr pos:start="49:54" pos:end="49:55"><name pos:start="49:54" pos:end="49:55">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
