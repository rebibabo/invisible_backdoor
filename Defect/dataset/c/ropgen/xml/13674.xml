<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13674.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">mxf_write_multi_descriptor</name><parameter_list pos:start="1:39" pos:end="1:58">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:54">AVFormatContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:45">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">ul</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><call pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:26">mxf_write_metadata_key</name><argument_list pos:start="15:27" pos:end="15:40">(<argument pos:start="15:28" pos:end="15:29"><expr pos:start="15:28" pos:end="15:29"><name pos:start="15:28" pos:end="15:29">pb</name></expr></argument>, <argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><literal type="number" pos:start="15:32" pos:end="15:39">0x014400</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><call pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:13">PRINT_KEY</name><argument_list pos:start="17:14" pos:end="17:61">(<argument pos:start="17:15" pos:end="17:15"><expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">s</name></expr></argument>, <argument pos:start="17:18" pos:end="17:42"><expr pos:start="17:18" pos:end="17:42"><literal type="string" pos:start="17:18" pos:end="17:42">"multiple descriptor key"</literal></expr></argument>, <argument pos:start="17:45" pos:end="17:60"><expr pos:start="17:45" pos:end="17:60"><name pos:start="17:45" pos:end="17:55"><name pos:start="17:45" pos:end="17:46">pb</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:55">buf_ptr</name></name> <operator pos:start="17:57" pos:end="17:57">-</operator> <literal type="number" pos:start="17:59" pos:end="17:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><call pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:25">klv_encode_ber_length</name><argument_list pos:start="19:26" pos:end="19:54">(<argument pos:start="19:27" pos:end="19:28"><expr pos:start="19:27" pos:end="19:28"><name pos:start="19:27" pos:end="19:28">pb</name></expr></argument>, <argument pos:start="19:31" pos:end="19:53"><expr pos:start="19:31" pos:end="19:53"><literal type="number" pos:start="19:31" pos:end="19:34">64</literal> <operator pos:start="19:34" pos:end="19:34">+</operator> <literal type="number" pos:start="19:36" pos:end="19:37">16</literal> <operator pos:start="19:39" pos:end="19:39">*</operator> <name pos:start="19:41" pos:end="19:53"><name pos:start="19:41" pos:end="19:41">s</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:53">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><call pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:23">mxf_write_local_tag</name><argument_list pos:start="23:24" pos:end="23:39">(<argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><name pos:start="23:25" pos:end="23:26">pb</name></expr></argument>, <argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><literal type="number" pos:start="23:29" pos:end="23:30">16</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><literal type="number" pos:start="23:33" pos:end="23:38">0x3C0A</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><call pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:18">mxf_write_uuid</name><argument_list pos:start="25:19" pos:end="25:45">(<argument pos:start="25:20" pos:end="25:21"><expr pos:start="25:20" pos:end="25:21"><name pos:start="25:20" pos:end="25:21">pb</name></expr></argument>, <argument pos:start="25:24" pos:end="25:41"><expr pos:start="25:24" pos:end="25:41"><name pos:start="25:24" pos:end="25:41">MultipleDescriptor</name></expr></argument>, <argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><literal type="number" pos:start="25:44" pos:end="25:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><call pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:13">PRINT_KEY</name><argument_list pos:start="27:14" pos:end="27:52">(<argument pos:start="27:15" pos:end="27:15"><expr pos:start="27:15" pos:end="27:15"><name pos:start="27:15" pos:end="27:15">s</name></expr></argument>, <argument pos:start="27:18" pos:end="27:33"><expr pos:start="27:18" pos:end="27:33"><literal type="string" pos:start="27:18" pos:end="27:33">"multi_desc uid"</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:51"><expr pos:start="27:36" pos:end="27:51"><name pos:start="27:36" pos:end="27:46"><name pos:start="27:36" pos:end="27:37">pb</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:46">buf_ptr</name></name> <operator pos:start="27:48" pos:end="27:48">-</operator> <literal type="number" pos:start="27:50" pos:end="27:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="31:5" pos:end="31:24">// write sample rate</comment>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:23">mxf_write_local_tag</name><argument_list pos:start="33:24" pos:end="33:38">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">pb</name></expr></argument>, <argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">8</literal></expr></argument>, <argument pos:start="33:32" pos:end="33:37"><expr pos:start="33:32" pos:end="33:37"><literal type="number" pos:start="33:32" pos:end="33:37">0x3001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><call pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:13">avio_wb32</name><argument_list pos:start="35:14" pos:end="35:37">(<argument pos:start="35:15" pos:end="35:16"><expr pos:start="35:15" pos:end="35:16"><name pos:start="35:15" pos:end="35:16">pb</name></expr></argument>, <argument pos:start="35:19" pos:end="35:36"><expr pos:start="35:19" pos:end="35:36"><name pos:start="35:19" pos:end="35:36"><name pos:start="35:19" pos:end="35:21">mxf</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:32">time_base</name><operator pos:start="35:33" pos:end="35:33">.</operator><name pos:start="35:34" pos:end="35:36">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><call pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:13">avio_wb32</name><argument_list pos:start="37:14" pos:end="37:37">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>, <argument pos:start="37:19" pos:end="37:36"><expr pos:start="37:19" pos:end="37:36"><name pos:start="37:19" pos:end="37:36"><name pos:start="37:19" pos:end="37:21">mxf</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:32">time_base</name><operator pos:start="37:33" pos:end="37:33">.</operator><name pos:start="37:34" pos:end="37:36">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="41:5" pos:end="41:33">// write essence container ul</comment>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><call pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:23">mxf_write_local_tag</name><argument_list pos:start="43:24" pos:end="43:39">(<argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">pb</name></expr></argument>, <argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><literal type="number" pos:start="43:29" pos:end="43:30">16</literal></expr></argument>, <argument pos:start="43:33" pos:end="43:38"><expr pos:start="43:33" pos:end="43:38"><literal type="number" pos:start="43:33" pos:end="43:38">0x3004</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="47:30">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:11">mxf</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:36">essence_container_count</name></name> <operator pos:start="45:38" pos:end="45:38">&gt;</operator> <literal type="number" pos:start="45:40" pos:end="45:40">1</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:30"><block_content pos:start="47:9" pos:end="47:30">

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:10">ul</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:29">multiple_desc_ul</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="49:5" pos:end="55:5">else <block pos:start="49:10" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:63">

        <decl_stmt pos:start="51:9" pos:end="51:56"><decl pos:start="51:9" pos:end="51:55"><type pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:24">MXFStreamContext</name> <modifier pos:start="51:26" pos:end="51:26">*</modifier></type><name pos:start="51:27" pos:end="51:28">sc</name> <init pos:start="51:30" pos:end="51:55">= <expr pos:start="51:32" pos:end="51:55"><name pos:start="51:32" pos:end="51:44"><name pos:start="51:32" pos:end="51:32">s</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:41">streams</name><index pos:start="51:42" pos:end="51:44">[<expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr>]</index></name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:55">priv_data</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:63"><expr pos:start="53:9" pos:end="53:62"><name pos:start="53:9" pos:end="53:10">ul</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:49"><name pos:start="53:14" pos:end="53:38">mxf_essence_container_uls</name><index pos:start="53:39" pos:end="53:49">[<expr pos:start="53:40" pos:end="53:48"><name pos:start="53:40" pos:end="53:48"><name pos:start="53:40" pos:end="53:41">sc</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:48">index</name></name></expr>]</index></name><operator pos:start="53:50" pos:end="53:50">.</operator><name pos:start="53:51" pos:end="53:62">container_ul</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><call pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:14">avio_write</name><argument_list pos:start="57:15" pos:end="57:26">(<argument pos:start="57:16" pos:end="57:17"><expr pos:start="57:16" pos:end="57:17"><name pos:start="57:16" pos:end="57:17">pb</name></expr></argument>, <argument pos:start="57:20" pos:end="57:21"><expr pos:start="57:20" pos:end="57:21"><name pos:start="57:20" pos:end="57:21">ul</name></expr></argument>, <argument pos:start="57:24" pos:end="57:25"><expr pos:start="57:24" pos:end="57:25"><literal type="number" pos:start="57:24" pos:end="57:25">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="61:5" pos:end="61:32">// write sub descriptor refs</comment>

    <expr_stmt pos:start="63:5" pos:end="63:60"><expr pos:start="63:5" pos:end="63:59"><call pos:start="63:5" pos:end="63:59"><name pos:start="63:5" pos:end="63:23">mxf_write_local_tag</name><argument_list pos:start="63:24" pos:end="63:59">(<argument pos:start="63:25" pos:end="63:26"><expr pos:start="63:25" pos:end="63:26"><name pos:start="63:25" pos:end="63:26">pb</name></expr></argument>, <argument pos:start="63:29" pos:end="63:50"><expr pos:start="63:29" pos:end="63:50"><name pos:start="63:29" pos:end="63:41"><name pos:start="63:29" pos:end="63:29">s</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:41">nb_streams</name></name> <operator pos:start="63:43" pos:end="63:43">*</operator> <literal type="number" pos:start="63:45" pos:end="63:48">16</literal> <operator pos:start="63:48" pos:end="63:48">+</operator> <literal type="number" pos:start="63:50" pos:end="63:50">8</literal></expr></argument>, <argument pos:start="63:53" pos:end="63:58"><expr pos:start="63:53" pos:end="63:58"><literal type="number" pos:start="63:53" pos:end="63:58">0x3F01</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:44"><expr pos:start="65:5" pos:end="65:43"><call pos:start="65:5" pos:end="65:43"><name pos:start="65:5" pos:end="65:24">mxf_write_refs_count</name><argument_list pos:start="65:25" pos:end="65:43">(<argument pos:start="65:26" pos:end="65:27"><expr pos:start="65:26" pos:end="65:27"><name pos:start="65:26" pos:end="65:27">pb</name></expr></argument>, <argument pos:start="65:30" pos:end="65:42"><expr pos:start="65:30" pos:end="65:42"><name pos:start="65:30" pos:end="65:42"><name pos:start="65:30" pos:end="65:30">s</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:42">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="69:45">for <control pos:start="67:9" pos:end="67:39">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:34"><expr pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:33"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:33">nb_streams</name></name></expr>;</condition> <incr pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><name pos:start="67:36" pos:end="67:36">i</name><operator pos:start="67:37" pos:end="67:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:9" pos:end="69:45"><block_content pos:start="69:9" pos:end="69:45">

        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><call pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:22">mxf_write_uuid</name><argument_list pos:start="69:23" pos:end="69:44">(<argument pos:start="69:24" pos:end="69:25"><expr pos:start="69:24" pos:end="69:25"><name pos:start="69:24" pos:end="69:25">pb</name></expr></argument>, <argument pos:start="69:28" pos:end="69:40"><expr pos:start="69:28" pos:end="69:40"><name pos:start="69:28" pos:end="69:40">SubDescriptor</name></expr></argument>, <argument pos:start="69:43" pos:end="69:43"><expr pos:start="69:43" pos:end="69:43"><name pos:start="69:43" pos:end="69:43">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>
</unit>
