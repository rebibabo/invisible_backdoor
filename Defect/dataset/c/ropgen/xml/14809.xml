<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14809.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:36"><name pos:start="1:1" pos:end="1:10">build_madt</name><argument_list pos:start="1:11" pos:end="3:36">(<argument pos:start="1:12" pos:end="1:29">GArray *table_data</argument>, <argument pos:start="1:32" pos:end="1:45">GArray *linker</argument>, <argument pos:start="1:48" pos:end="1:72">VirtGuestInfo *guest_info</argument>,

           <argument pos:start="3:12" pos:end="3:35">VirtAcpiCpuInfo *cpuinfo</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:50">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">madt_start</name> <init pos:start="7:20" pos:end="7:36">= <expr pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:31">table_data</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:36">len</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:23"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:21">MemMapEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:29">memmap</name> <init pos:start="9:31" pos:end="9:50">= <expr pos:start="9:33" pos:end="9:50"><name pos:start="9:33" pos:end="9:50"><name pos:start="9:33" pos:end="9:42">guest_info</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:50">memmap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:21">irqmap</name> <init pos:start="11:23" pos:end="11:42">= <expr pos:start="11:25" pos:end="11:42"><name pos:start="11:25" pos:end="11:42"><name pos:start="11:25" pos:end="11:34">guest_info</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:42">irqmap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:25">AcpiMultipleApicTable</name> <modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:31">madt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:30">AcpiMadtGenericDistributor</name> <modifier pos:start="15:32" pos:end="15:32">*</modifier></type><name pos:start="15:33" pos:end="15:36">gicd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:27">AcpiMadtGenericMsiFrame</name> <modifier pos:start="17:29" pos:end="17:29">*</modifier></type><name pos:start="17:30" pos:end="17:36">gic_msi</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:8">madt</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:51"><name pos:start="23:12" pos:end="23:25">acpi_data_push</name><argument_list pos:start="23:26" pos:end="23:51">(<argument pos:start="23:27" pos:end="23:36"><expr pos:start="23:27" pos:end="23:36"><name pos:start="23:27" pos:end="23:36">table_data</name></expr></argument>, <argument pos:start="23:39" pos:end="23:50"><expr pos:start="23:39" pos:end="23:50"><sizeof pos:start="23:39" pos:end="23:44">sizeof <name/></sizeof>*<name pos:start="23:47" pos:end="23:50">madt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="51:5">for <control pos:start="27:9" pos:end="27:46">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:41"><expr pos:start="27:17" pos:end="27:40"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:40"><name pos:start="27:21" pos:end="27:30">guest_info</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:40">smp_cpus</name></name></expr>;</condition> <incr pos:start="27:43" pos:end="27:45"><expr pos:start="27:43" pos:end="27:45"><name pos:start="27:43" pos:end="27:43">i</name><operator pos:start="27:44" pos:end="27:45">++</operator></expr></incr>)</control> <block pos:start="27:48" pos:end="51:5">{<block_content pos:start="29:9" pos:end="49:9">

        <decl_stmt pos:start="29:9" pos:end="31:67"><decl pos:start="29:9" pos:end="31:66"><type pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:32">AcpiMadtGenericInterrupt</name> <modifier pos:start="29:34" pos:end="29:34">*</modifier></type><name pos:start="29:35" pos:end="29:38">gicc</name> <init pos:start="29:40" pos:end="31:66">= <expr pos:start="29:42" pos:end="31:66"><call pos:start="29:42" pos:end="31:66"><name pos:start="29:42" pos:end="29:55">acpi_data_push</name><argument_list pos:start="29:56" pos:end="31:66">(<argument pos:start="29:57" pos:end="29:66"><expr pos:start="29:57" pos:end="29:66"><name pos:start="29:57" pos:end="29:66">table_data</name></expr></argument>,

                                                     <argument pos:start="31:54" pos:end="31:65"><expr pos:start="31:54" pos:end="31:65"><sizeof pos:start="31:54" pos:end="31:59">sizeof <name/></sizeof>*<name pos:start="31:62" pos:end="31:65">gicc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:12">gicc</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:18">type</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:48">ACPI_APIC_GENERIC_INTERRUPT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:12">gicc</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:20">length</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <sizeof pos:start="35:24" pos:end="35:36">sizeof<argument_list pos:start="35:30" pos:end="35:36">(<argument pos:start="35:31" pos:end="35:35"><expr pos:start="35:31" pos:end="35:35"><operator pos:start="35:31" pos:end="35:31">*</operator><name pos:start="35:32" pos:end="35:35">gicc</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:55"><expr pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:12">gicc</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:26">base_address</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:49"><name pos:start="37:30" pos:end="37:35">memmap</name><index pos:start="37:36" pos:end="37:49">[<expr pos:start="37:37" pos:end="37:48"><name pos:start="37:37" pos:end="37:48">VIRT_GIC_CPU</name></expr>]</index></name><operator pos:start="37:50" pos:end="37:50">.</operator><name pos:start="37:51" pos:end="37:54">base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:12">gicc</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:34">cpu_interface_number</name></name> <operator pos:start="39:36" pos:end="39:36">=</operator> <name pos:start="39:38" pos:end="39:38">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:12">gicc</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:23">arm_mpidr</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:27">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:12">gicc</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:17">uid</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:21">i</name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:45">(<expr pos:start="45:13" pos:end="45:44"><call pos:start="45:13" pos:end="45:44"><name pos:start="45:13" pos:end="45:20">test_bit</name><argument_list pos:start="45:21" pos:end="45:44">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">i</name></expr></argument>, <argument pos:start="45:25" pos:end="45:43"><expr pos:start="45:25" pos:end="45:43"><name pos:start="45:25" pos:end="45:43"><name pos:start="45:25" pos:end="45:31">cpuinfo</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:43">found_cpus</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:47" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:57">

            <expr_stmt pos:start="47:13" pos:end="47:57"><expr pos:start="47:13" pos:end="47:56"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:16">gicc</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">flags</name></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <call pos:start="47:27" pos:end="47:56"><name pos:start="47:27" pos:end="47:37">cpu_to_le32</name><argument_list pos:start="47:38" pos:end="47:56">(<argument pos:start="47:39" pos:end="47:55"><expr pos:start="47:39" pos:end="47:55"><name pos:start="47:39" pos:end="47:55">ACPI_GICC_ENABLED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:8">gicd</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:51"><name pos:start="55:12" pos:end="55:25">acpi_data_push</name><argument_list pos:start="55:26" pos:end="55:51">(<argument pos:start="55:27" pos:end="55:36"><expr pos:start="55:27" pos:end="55:36"><name pos:start="55:27" pos:end="55:36">table_data</name></expr></argument>, <argument pos:start="55:39" pos:end="55:50"><expr pos:start="55:39" pos:end="55:50"><sizeof pos:start="55:39" pos:end="55:44">sizeof <name/></sizeof>*<name pos:start="55:47" pos:end="55:50">gicd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:47"><expr pos:start="57:5" pos:end="57:46"><name pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:8">gicd</name><operator pos:start="57:9" pos:end="57:10">-&gt;</operator><name pos:start="57:11" pos:end="57:14">type</name></name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:46">ACPI_APIC_GENERIC_DISTRIBUTOR</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:33"><expr pos:start="59:5" pos:end="59:32"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:8">gicd</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:16">length</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <sizeof pos:start="59:20" pos:end="59:32">sizeof<argument_list pos:start="59:26" pos:end="59:32">(<argument pos:start="59:27" pos:end="59:31"><expr pos:start="59:27" pos:end="59:31"><operator pos:start="59:27" pos:end="59:27">*</operator><name pos:start="59:28" pos:end="59:31">gicd</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:52"><expr pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:8">gicd</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:22">base_address</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:46"><name pos:start="61:26" pos:end="61:31">memmap</name><index pos:start="61:32" pos:end="61:46">[<expr pos:start="61:33" pos:end="61:45"><name pos:start="61:33" pos:end="61:45">VIRT_GIC_DIST</name></expr>]</index></name><operator pos:start="61:47" pos:end="61:47">.</operator><name pos:start="61:48" pos:end="61:51">base</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:58"><expr pos:start="65:5" pos:end="65:57"><name pos:start="65:5" pos:end="65:11">gic_msi</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:57"><name pos:start="65:15" pos:end="65:28">acpi_data_push</name><argument_list pos:start="65:29" pos:end="65:57">(<argument pos:start="65:30" pos:end="65:39"><expr pos:start="65:30" pos:end="65:39"><name pos:start="65:30" pos:end="65:39">table_data</name></expr></argument>, <argument pos:start="65:42" pos:end="65:56"><expr pos:start="65:42" pos:end="65:56"><sizeof pos:start="65:42" pos:end="65:47">sizeof <name/></sizeof>*<name pos:start="65:50" pos:end="65:56">gic_msi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:48"><expr pos:start="67:5" pos:end="67:47"><name pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:11">gic_msi</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:17">type</name></name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:47">ACPI_APIC_GENERIC_MSI_FRAME</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:11">gic_msi</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:19">length</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <sizeof pos:start="69:23" pos:end="69:38">sizeof<argument_list pos:start="69:29" pos:end="69:38">(<argument pos:start="69:30" pos:end="69:37"><expr pos:start="69:30" pos:end="69:37"><operator pos:start="69:30" pos:end="69:30">*</operator><name pos:start="69:31" pos:end="69:37">gic_msi</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:11">gic_msi</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:29">gic_msi_frame_id</name></name> <operator pos:start="71:31" pos:end="71:31">=</operator> <literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:67"><expr pos:start="73:5" pos:end="73:66"><name pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:11">gic_msi</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:25">base_address</name></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <call pos:start="73:29" pos:end="73:66"><name pos:start="73:29" pos:end="73:39">cpu_to_le64</name><argument_list pos:start="73:40" pos:end="73:66">(<argument pos:start="73:41" pos:end="73:65"><expr pos:start="73:41" pos:end="73:65"><name pos:start="73:41" pos:end="73:60"><name pos:start="73:41" pos:end="73:46">memmap</name><index pos:start="73:47" pos:end="73:60">[<expr pos:start="73:48" pos:end="73:59"><name pos:start="73:48" pos:end="73:59">VIRT_GIC_V2M</name></expr>]</index></name><operator pos:start="73:61" pos:end="73:61">.</operator><name pos:start="73:62" pos:end="73:65">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:36"><expr pos:start="75:5" pos:end="75:35"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:11">gic_msi</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:18">flags</name></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <call pos:start="75:22" pos:end="75:35"><name pos:start="75:22" pos:end="75:32">cpu_to_le32</name><argument_list pos:start="75:33" pos:end="75:35">(<argument pos:start="75:34" pos:end="75:34"><expr pos:start="75:34" pos:end="75:34"><literal type="number" pos:start="75:34" pos:end="75:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:54"><expr pos:start="77:5" pos:end="77:53"><name pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:11">gic_msi</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:22">spi_count</name></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <call pos:start="77:26" pos:end="77:53"><name pos:start="77:26" pos:end="77:36">cpu_to_le16</name><argument_list pos:start="77:37" pos:end="77:53">(<argument pos:start="77:38" pos:end="77:52"><expr pos:start="77:38" pos:end="77:52"><name pos:start="77:38" pos:end="77:52">NUM_GICV2M_SPIS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:73"><expr pos:start="79:5" pos:end="79:72"><name pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:11">gic_msi</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:21">spi_base</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <call pos:start="79:25" pos:end="79:72"><name pos:start="79:25" pos:end="79:35">cpu_to_le16</name><argument_list pos:start="79:36" pos:end="79:72">(<argument pos:start="79:37" pos:end="79:71"><expr pos:start="79:37" pos:end="79:71"><name pos:start="79:37" pos:end="79:56"><name pos:start="79:37" pos:end="79:42">irqmap</name><index pos:start="79:43" pos:end="79:56">[<expr pos:start="79:44" pos:end="79:55"><name pos:start="79:44" pos:end="79:55">VIRT_GIC_V2M</name></expr>]</index></name> <operator pos:start="79:58" pos:end="79:58">+</operator> <name pos:start="79:60" pos:end="79:71">ARM_SPI_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="87:50"><expr pos:start="83:5" pos:end="87:49"><call pos:start="83:5" pos:end="87:49"><name pos:start="83:5" pos:end="83:16">build_header</name><argument_list pos:start="83:17" pos:end="87:49">(<argument pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:23"><name pos:start="83:18" pos:end="83:23">linker</name></expr></argument>, <argument pos:start="83:26" pos:end="83:35"><expr pos:start="83:26" pos:end="83:35"><name pos:start="83:26" pos:end="83:35">table_data</name></expr></argument>,

                 <argument pos:start="85:18" pos:end="85:56"><expr pos:start="85:18" pos:end="85:56"><operator pos:start="85:18" pos:end="85:18">(</operator><name pos:start="85:19" pos:end="85:22">void</name> <operator pos:start="85:24" pos:end="85:24">*</operator><operator pos:start="85:25" pos:end="85:25">)</operator><operator pos:start="85:26" pos:end="85:26">(</operator><name pos:start="85:27" pos:end="85:42"><name pos:start="85:27" pos:end="85:36">table_data</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:42">data</name></name> <operator pos:start="85:44" pos:end="85:44">+</operator> <name pos:start="85:46" pos:end="85:55">madt_start</name><operator pos:start="85:56" pos:end="85:56">)</operator></expr></argument>, <argument pos:start="85:59" pos:end="85:64"><expr pos:start="85:59" pos:end="85:64"><literal type="string" pos:start="85:59" pos:end="85:64">"APIC"</literal></expr></argument>,

                 <argument pos:start="87:18" pos:end="87:45"><expr pos:start="87:18" pos:end="87:45"><name pos:start="87:18" pos:end="87:32"><name pos:start="87:18" pos:end="87:27">table_data</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:32">len</name></name> <operator pos:start="87:34" pos:end="87:34">-</operator> <name pos:start="87:36" pos:end="87:45">madt_start</name></expr></argument>, <argument pos:start="87:48" pos:end="87:48"><expr pos:start="87:48" pos:end="87:48"><literal type="number" pos:start="87:48" pos:end="87:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
