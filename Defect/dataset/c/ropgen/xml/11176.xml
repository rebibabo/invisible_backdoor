<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11176.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">find_real_tpr_addr</name><parameter_list pos:start="1:30" pos:end="1:65">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:43">VAPICROMState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:59">CPUX86State</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:14">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22">target_phys_addr_t</name></type> <name pos:start="5:24" pos:end="5:28">paddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">addr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:33">(<expr pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:16">state</name></name> <operator pos:start="11:18" pos:end="11:19">==</operator> <name pos:start="11:21" pos:end="11:32">VAPIC_ACTIVE</name></expr>)</condition> <block pos:start="11:35" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="17:5" pos:end="25:7">/*

     * If there is no prior TPR access instruction we could analyze (which is

     * the case after resume from hibernation), we need to scan the possible

     * virtual address space for the APIC mapping.

     */</comment>

    <for pos:start="27:5" pos:end="43:5">for <control pos:start="27:9" pos:end="27:73">(<init pos:start="27:10" pos:end="27:27"><expr pos:start="27:10" pos:end="27:26"><name pos:start="27:10" pos:end="27:13">addr</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <literal type="number" pos:start="27:17" pos:end="27:26">0xfffff000</literal></expr>;</init> <condition pos:start="27:29" pos:end="27:47"><expr pos:start="27:29" pos:end="27:46"><name pos:start="27:29" pos:end="27:32">addr</name> <operator pos:start="27:34" pos:end="27:35">&gt;=</operator> <literal type="number" pos:start="27:37" pos:end="27:46">0x80000000</literal></expr>;</condition> <incr pos:start="27:49" pos:end="27:72"><expr pos:start="27:49" pos:end="27:72"><name pos:start="27:49" pos:end="27:52">addr</name> <operator pos:start="27:54" pos:end="27:55">-=</operator> <name pos:start="27:57" pos:end="27:72">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="27:75" pos:end="43:5">{<block_content pos:start="29:9" pos:end="41:17">

        <expr_stmt pos:start="29:9" pos:end="29:51"><expr pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:13">paddr</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:50"><name pos:start="29:17" pos:end="29:39">cpu_get_phys_page_debug</name><argument_list pos:start="29:40" pos:end="29:50">(<argument pos:start="29:41" pos:end="29:43"><expr pos:start="29:41" pos:end="29:43"><name pos:start="29:41" pos:end="29:43">env</name></expr></argument>, <argument pos:start="29:46" pos:end="29:49"><expr pos:start="29:46" pos:end="29:49"><name pos:start="29:46" pos:end="29:49">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:42">(<expr pos:start="31:13" pos:end="31:41"><name pos:start="31:13" pos:end="31:17">paddr</name> <operator pos:start="31:19" pos:end="31:20">!=</operator> <name pos:start="31:22" pos:end="31:41">APIC_DEFAULT_ADDRESS</name></expr>)</condition> <block pos:start="31:44" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <continue pos:start="33:13" pos:end="33:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:24">real_tpr_addr</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:31">addr</name> <operator pos:start="37:33" pos:end="37:33">+</operator> <literal type="number" pos:start="37:35" pos:end="37:38">0x80</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><call pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:30">update_guest_rom_state</name><argument_list pos:start="39:31" pos:end="39:33">(<argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></for>

    <return pos:start="45:5" pos:end="45:14">return <expr pos:start="45:12" pos:end="45:13"><operator pos:start="45:12" pos:end="45:12">-</operator><literal type="number" pos:start="45:13" pos:end="45:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
