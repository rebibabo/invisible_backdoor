<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13601.c" pos:tabs="8"><function pos:start="1:1" pos:end="391:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">decode_dvd_subtitles</name><parameter_list pos:start="1:32" pos:end="3:65">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:45">DVDSubContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:74"><decl pos:start="1:53" pos:end="1:74"><type pos:start="1:53" pos:end="1:74"><name pos:start="1:53" pos:end="1:62">AVSubtitle</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:74">sub_header</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">buf</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="391:1">{<block_content pos:start="7:5" pos:end="389:14">

    <decl_stmt pos:start="7:5" pos:end="7:74"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">cmd_pos</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">pos</name></decl>, <decl pos:start="7:23" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:25">cmd</name></decl>, <decl pos:start="7:28" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:29">x1</name></decl>, <decl pos:start="7:32" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:33">y1</name></decl>, <decl pos:start="7:36" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:37">x2</name></decl>, <decl pos:start="7:40" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:41">y2</name></decl>, <decl pos:start="7:44" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:50">offset1</name></decl>, <decl pos:start="7:53" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:59">offset2</name></decl>, <decl pos:start="7:62" pos:end="7:73"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:62" pos:end="7:73">next_cmd_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">big_offsets</name></decl>, <decl pos:start="9:22" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:32">offset_size</name></decl>, <decl pos:start="9:35" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:35" pos:end="9:41">is_8bit</name> <init pos:start="9:43" pos:end="9:45">= <expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:30">yuv_palette</name> <init pos:start="11:32" pos:end="11:34">= <expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:20">colormap</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">4</literal></expr>]</index></name> <init pos:start="13:25" pos:end="13:31">= <expr pos:start="13:27" pos:end="13:31"><block pos:start="13:27" pos:end="13:31">{ <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr> }</block></expr></init></decl>, <decl pos:start="13:34" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:34" pos:end="13:43"><name pos:start="13:34" pos:end="13:38">alpha</name><index pos:start="13:39" pos:end="13:43">[<expr pos:start="13:40" pos:end="13:42"><literal type="number" pos:start="13:40" pos:end="13:42">256</literal></expr>]</index></name> <init pos:start="13:45" pos:end="13:51">= <expr pos:start="13:47" pos:end="13:51"><block pos:start="13:47" pos:end="13:51">{ <expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">date</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">is_menu</name> <init pos:start="19:17" pos:end="19:19">= <expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:21">10</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><call pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:46">(<argument pos:start="27:12" pos:end="27:21"><expr pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:21">sub_header</name></expr></argument>, <argument pos:start="27:24" pos:end="27:24"><expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr></argument>, <argument pos:start="27:27" pos:end="27:45"><expr pos:start="27:27" pos:end="27:45"><sizeof pos:start="27:27" pos:end="27:45">sizeof<argument_list pos:start="27:33" pos:end="27:45">(<argument pos:start="27:34" pos:end="27:44"><expr pos:start="27:34" pos:end="27:44"><operator pos:start="27:34" pos:end="27:34">*</operator><name pos:start="27:35" pos:end="27:44">sub_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:26">(<expr pos:start="31:9" pos:end="31:25"><call pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:15">AV_RB16</name><argument_list pos:start="31:16" pos:end="31:20">(<argument pos:start="31:17" pos:end="31:19"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:19">buf</name></expr></argument>)</argument_list></call> <operator pos:start="31:22" pos:end="31:23">==</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>)</condition> <block pos:start="31:28" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:20">   <comment type="block" pos:start="31:32" pos:end="31:70">/* HD subpicture with 4-byte offsets */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:19">big_offsets</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <literal type="number" pos:start="33:23" pos:end="33:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:19">offset_size</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:15">cmd_pos</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">6</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="47:5">else <block pos:start="39:12" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:20">

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:19">big_offsets</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:19">offset_size</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:15">cmd_pos</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <literal type="number" pos:start="45:19" pos:end="45:19">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:11">cmd_pos</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:40"><name pos:start="51:15" pos:end="51:25">READ_OFFSET</name><argument_list pos:start="51:26" pos:end="51:40">(<argument pos:start="51:27" pos:end="51:39"><expr pos:start="51:27" pos:end="51:39"><name pos:start="51:27" pos:end="51:29">buf</name> <operator pos:start="51:31" pos:end="51:31">+</operator> <name pos:start="51:33" pos:end="51:39">cmd_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="55:5" pos:end="363:5">while <condition pos:start="55:11" pos:end="55:63">(<expr pos:start="55:12" pos:end="55:62"><name pos:start="55:12" pos:end="55:18">cmd_pos</name> <operator pos:start="55:20" pos:end="55:20">&gt;</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal> <operator pos:start="55:24" pos:end="55:25">&amp;&amp;</operator> <name pos:start="55:27" pos:end="55:33">cmd_pos</name> <operator pos:start="55:35" pos:end="55:35">&lt;</operator> <name pos:start="55:37" pos:end="55:44">buf_size</name> <operator pos:start="55:46" pos:end="55:46">-</operator> <literal type="number" pos:start="55:48" pos:end="55:50">2</literal> <operator pos:start="55:50" pos:end="55:50">-</operator> <name pos:start="55:52" pos:end="55:62">offset_size</name></expr>)</condition> <block pos:start="55:65" pos:end="363:5">{<block_content pos:start="57:9" pos:end="361:31">

        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:12">date</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:37"><name pos:start="57:16" pos:end="57:22">AV_RB16</name><argument_list pos:start="57:23" pos:end="57:37">(<argument pos:start="57:24" pos:end="57:36"><expr pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:26">buf</name> <operator pos:start="57:28" pos:end="57:28">+</operator> <name pos:start="57:30" pos:end="57:36">cmd_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:54"><expr pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:20">next_cmd_pos</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <call pos:start="59:24" pos:end="59:53"><name pos:start="59:24" pos:end="59:34">READ_OFFSET</name><argument_list pos:start="59:35" pos:end="59:53">(<argument pos:start="59:36" pos:end="59:52"><expr pos:start="59:36" pos:end="59:52"><name pos:start="59:36" pos:end="59:38">buf</name> <operator pos:start="59:40" pos:end="59:40">+</operator> <name pos:start="59:42" pos:end="59:48">cmd_pos</name> <operator pos:start="59:50" pos:end="59:50">+</operator> <literal type="number" pos:start="59:52" pos:end="59:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="63:45"><expr pos:start="61:9" pos:end="63:44"><call pos:start="61:9" pos:end="63:44"><name pos:start="61:9" pos:end="61:15">av_dlog</name><argument_list pos:start="61:16" pos:end="63:44">(<argument pos:start="61:17" pos:end="61:20"><expr pos:start="61:17" pos:end="61:20"><name pos:start="61:17" pos:end="61:20">NULL</name></expr></argument>, <argument pos:start="61:23" pos:end="61:60"><expr pos:start="61:23" pos:end="61:60"><literal type="string" pos:start="61:23" pos:end="61:60">"cmd_pos=0x%04x next=0x%04x date=%d\n"</literal></expr></argument>,

                <argument pos:start="63:17" pos:end="63:23"><expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:23">cmd_pos</name></expr></argument>, <argument pos:start="63:26" pos:end="63:37"><expr pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:37">next_cmd_pos</name></expr></argument>, <argument pos:start="63:40" pos:end="63:43"><expr pos:start="63:40" pos:end="63:43"><name pos:start="63:40" pos:end="63:43">date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:11">pos</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:21">cmd_pos</name> <operator pos:start="65:23" pos:end="65:23">+</operator> <literal type="number" pos:start="65:25" pos:end="65:27">2</literal> <operator pos:start="65:27" pos:end="65:27">+</operator> <name pos:start="65:29" pos:end="65:39">offset_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:15">offset1</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <operator pos:start="67:19" pos:end="67:19">-</operator><literal type="number" pos:start="67:20" pos:end="67:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:21"><expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:15">offset2</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <operator pos:start="69:19" pos:end="69:19">-</operator><literal type="number" pos:start="69:20" pos:end="69:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:10">x1</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:15">y1</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:20">x2</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:25">y2</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <literal type="number" pos:start="71:29" pos:end="71:29">0</literal></expr>;</expr_stmt>

        <while pos:start="73:9" pos:end="251:9">while <condition pos:start="73:15" pos:end="73:30">(<expr pos:start="73:16" pos:end="73:29"><name pos:start="73:16" pos:end="73:18">pos</name> <operator pos:start="73:20" pos:end="73:20">&lt;</operator> <name pos:start="73:22" pos:end="73:29">buf_size</name></expr>)</condition> <block pos:start="73:32" pos:end="251:9">{<block_content pos:start="75:13" pos:end="249:13">

            <expr_stmt pos:start="75:13" pos:end="75:29"><expr pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:15">cmd</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:28"><name pos:start="75:19" pos:end="75:21">buf</name><index pos:start="75:22" pos:end="75:28">[<expr pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:25">pos</name><operator pos:start="75:26" pos:end="75:27">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:45"><expr pos:start="77:13" pos:end="77:44"><call pos:start="77:13" pos:end="77:44"><name pos:start="77:13" pos:end="77:19">av_dlog</name><argument_list pos:start="77:20" pos:end="77:44">(<argument pos:start="77:21" pos:end="77:24"><expr pos:start="77:21" pos:end="77:24"><name pos:start="77:21" pos:end="77:24">NULL</name></expr></argument>, <argument pos:start="77:27" pos:end="77:38"><expr pos:start="77:27" pos:end="77:38"><literal type="string" pos:start="77:27" pos:end="77:38">"cmd=%02x\n"</literal></expr></argument>, <argument pos:start="77:41" pos:end="77:43"><expr pos:start="77:41" pos:end="77:43"><name pos:start="77:41" pos:end="77:43">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="79:13" pos:end="249:13">switch<condition pos:start="79:19" pos:end="79:23">(<expr pos:start="79:20" pos:end="79:22"><name pos:start="79:20" pos:end="79:22">cmd</name></expr>)</condition> <block pos:start="79:25" pos:end="249:13">{<block_content pos:start="81:13" pos:end="247:29">

            <case pos:start="81:13" pos:end="81:22">case <expr pos:start="81:18" pos:end="81:21"><literal type="number" pos:start="81:18" pos:end="81:21">0x00</literal></expr>:</case>

                <comment type="block" pos:start="83:17" pos:end="83:37">/* menu subpicture */</comment>

                <expr_stmt pos:start="85:17" pos:end="85:28"><expr pos:start="85:17" pos:end="85:27"><name pos:start="85:17" pos:end="85:23">is_menu</name> <operator pos:start="85:25" pos:end="85:25">=</operator> <literal type="number" pos:start="85:27" pos:end="85:27">1</literal></expr>;</expr_stmt>

                <break pos:start="87:17" pos:end="87:22">break;</break>

            <case pos:start="89:13" pos:end="89:22">case <expr pos:start="89:18" pos:end="89:21"><literal type="number" pos:start="89:18" pos:end="89:21">0x01</literal></expr>:</case>

                <comment type="block" pos:start="91:17" pos:end="91:36">/* set start date */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:67"><expr pos:start="93:17" pos:end="93:66"><name pos:start="93:17" pos:end="93:46"><name pos:start="93:17" pos:end="93:26">sub_header</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:46">start_display_time</name></name> <operator pos:start="93:48" pos:end="93:48">=</operator> <operator pos:start="93:50" pos:end="93:50">(</operator><name pos:start="93:51" pos:end="93:54">date</name> <operator pos:start="93:56" pos:end="93:57">&lt;&lt;</operator> <literal type="number" pos:start="93:59" pos:end="93:60">10</literal><operator pos:start="93:61" pos:end="93:61">)</operator> <operator pos:start="93:63" pos:end="93:63">/</operator> <literal type="number" pos:start="93:65" pos:end="93:66">90</literal></expr>;</expr_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            <case pos:start="97:13" pos:end="97:22">case <expr pos:start="97:18" pos:end="97:21"><literal type="number" pos:start="97:18" pos:end="97:21">0x02</literal></expr>:</case>

                <comment type="block" pos:start="99:17" pos:end="99:34">/* set end date */</comment>

                <expr_stmt pos:start="101:17" pos:end="101:65"><expr pos:start="101:17" pos:end="101:64"><name pos:start="101:17" pos:end="101:44"><name pos:start="101:17" pos:end="101:26">sub_header</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:44">end_display_time</name></name> <operator pos:start="101:46" pos:end="101:46">=</operator> <operator pos:start="101:48" pos:end="101:48">(</operator><name pos:start="101:49" pos:end="101:52">date</name> <operator pos:start="101:54" pos:end="101:55">&lt;&lt;</operator> <literal type="number" pos:start="101:57" pos:end="101:58">10</literal><operator pos:start="101:59" pos:end="101:59">)</operator> <operator pos:start="101:61" pos:end="101:61">/</operator> <literal type="number" pos:start="101:63" pos:end="101:64">90</literal></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            <case pos:start="105:13" pos:end="105:22">case <expr pos:start="105:18" pos:end="105:21"><literal type="number" pos:start="105:18" pos:end="105:21">0x03</literal></expr>:</case>

                <comment type="block" pos:start="107:17" pos:end="107:34">/* set colormap */</comment>

                <if_stmt pos:start="109:17" pos:end="111:30"><if pos:start="109:17" pos:end="111:30">if <condition pos:start="109:20" pos:end="109:41">(<expr pos:start="109:21" pos:end="109:40"><operator pos:start="109:21" pos:end="109:21">(</operator><name pos:start="109:22" pos:end="109:29">buf_size</name> <operator pos:start="109:31" pos:end="109:31">-</operator> <name pos:start="109:33" pos:end="109:35">pos</name><operator pos:start="109:36" pos:end="109:36">)</operator> <operator pos:start="109:38" pos:end="109:38">&lt;</operator> <literal type="number" pos:start="109:40" pos:end="109:40">2</literal></expr>)</condition><block type="pseudo" pos:start="111:21" pos:end="111:30"><block_content pos:start="111:21" pos:end="111:30">

                    <goto pos:start="111:21" pos:end="111:30">goto <name pos:start="111:26" pos:end="111:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:44"><expr pos:start="113:17" pos:end="113:43"><name pos:start="113:17" pos:end="113:27"><name pos:start="113:17" pos:end="113:24">colormap</name><index pos:start="113:25" pos:end="113:27">[<expr pos:start="113:26" pos:end="113:26"><literal type="number" pos:start="113:26" pos:end="113:26">3</literal></expr>]</index></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <name pos:start="113:31" pos:end="113:38"><name pos:start="113:31" pos:end="113:33">buf</name><index pos:start="113:34" pos:end="113:38">[<expr pos:start="113:35" pos:end="113:37"><name pos:start="113:35" pos:end="113:37">pos</name></expr>]</index></name> <operator pos:start="113:40" pos:end="113:41">&gt;&gt;</operator> <literal type="number" pos:start="113:43" pos:end="113:43">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:46"><expr pos:start="115:17" pos:end="115:45"><name pos:start="115:17" pos:end="115:27"><name pos:start="115:17" pos:end="115:24">colormap</name><index pos:start="115:25" pos:end="115:27">[<expr pos:start="115:26" pos:end="115:26"><literal type="number" pos:start="115:26" pos:end="115:26">2</literal></expr>]</index></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <name pos:start="115:31" pos:end="115:38"><name pos:start="115:31" pos:end="115:33">buf</name><index pos:start="115:34" pos:end="115:38">[<expr pos:start="115:35" pos:end="115:37"><name pos:start="115:35" pos:end="115:37">pos</name></expr>]</index></name> <operator pos:start="115:40" pos:end="115:40">&amp;</operator> <literal type="number" pos:start="115:42" pos:end="115:45">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:48"><expr pos:start="117:17" pos:end="117:47"><name pos:start="117:17" pos:end="117:27"><name pos:start="117:17" pos:end="117:24">colormap</name><index pos:start="117:25" pos:end="117:27">[<expr pos:start="117:26" pos:end="117:26"><literal type="number" pos:start="117:26" pos:end="117:26">1</literal></expr>]</index></name> <operator pos:start="117:29" pos:end="117:29">=</operator> <name pos:start="117:31" pos:end="117:42"><name pos:start="117:31" pos:end="117:33">buf</name><index pos:start="117:34" pos:end="117:42">[<expr pos:start="117:35" pos:end="117:41"><name pos:start="117:35" pos:end="117:37">pos</name> <operator pos:start="117:39" pos:end="117:39">+</operator> <literal type="number" pos:start="117:41" pos:end="117:41">1</literal></expr>]</index></name> <operator pos:start="117:44" pos:end="117:45">&gt;&gt;</operator> <literal type="number" pos:start="117:47" pos:end="117:47">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:50"><expr pos:start="119:17" pos:end="119:49"><name pos:start="119:17" pos:end="119:27"><name pos:start="119:17" pos:end="119:24">colormap</name><index pos:start="119:25" pos:end="119:27">[<expr pos:start="119:26" pos:end="119:26"><literal type="number" pos:start="119:26" pos:end="119:26">0</literal></expr>]</index></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <name pos:start="119:31" pos:end="119:42"><name pos:start="119:31" pos:end="119:33">buf</name><index pos:start="119:34" pos:end="119:42">[<expr pos:start="119:35" pos:end="119:41"><name pos:start="119:35" pos:end="119:37">pos</name> <operator pos:start="119:39" pos:end="119:39">+</operator> <literal type="number" pos:start="119:41" pos:end="119:41">1</literal></expr>]</index></name> <operator pos:start="119:44" pos:end="119:44">&amp;</operator> <literal type="number" pos:start="119:46" pos:end="119:49">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:25"><expr pos:start="121:17" pos:end="121:24"><name pos:start="121:17" pos:end="121:19">pos</name> <operator pos:start="121:21" pos:end="121:22">+=</operator> <literal type="number" pos:start="121:24" pos:end="121:24">2</literal></expr>;</expr_stmt>

                <break pos:start="123:17" pos:end="123:22">break;</break>

            <case pos:start="125:13" pos:end="125:22">case <expr pos:start="125:18" pos:end="125:21"><literal type="number" pos:start="125:18" pos:end="125:21">0x04</literal></expr>:</case>

                <comment type="block" pos:start="127:17" pos:end="127:31">/* set alpha */</comment>

                <if_stmt pos:start="129:17" pos:end="131:30"><if pos:start="129:17" pos:end="131:30">if <condition pos:start="129:20" pos:end="129:41">(<expr pos:start="129:21" pos:end="129:40"><operator pos:start="129:21" pos:end="129:21">(</operator><name pos:start="129:22" pos:end="129:29">buf_size</name> <operator pos:start="129:31" pos:end="129:31">-</operator> <name pos:start="129:33" pos:end="129:35">pos</name><operator pos:start="129:36" pos:end="129:36">)</operator> <operator pos:start="129:38" pos:end="129:38">&lt;</operator> <literal type="number" pos:start="129:40" pos:end="129:40">2</literal></expr>)</condition><block type="pseudo" pos:start="131:21" pos:end="131:30"><block_content pos:start="131:21" pos:end="131:30">

                    <goto pos:start="131:21" pos:end="131:30">goto <name pos:start="131:26" pos:end="131:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:41"><expr pos:start="133:17" pos:end="133:40"><name pos:start="133:17" pos:end="133:24"><name pos:start="133:17" pos:end="133:21">alpha</name><index pos:start="133:22" pos:end="133:24">[<expr pos:start="133:23" pos:end="133:23"><literal type="number" pos:start="133:23" pos:end="133:23">3</literal></expr>]</index></name> <operator pos:start="133:26" pos:end="133:26">=</operator> <name pos:start="133:28" pos:end="133:35"><name pos:start="133:28" pos:end="133:30">buf</name><index pos:start="133:31" pos:end="133:35">[<expr pos:start="133:32" pos:end="133:34"><name pos:start="133:32" pos:end="133:34">pos</name></expr>]</index></name> <operator pos:start="133:37" pos:end="133:38">&gt;&gt;</operator> <literal type="number" pos:start="133:40" pos:end="133:40">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:43"><expr pos:start="135:17" pos:end="135:42"><name pos:start="135:17" pos:end="135:24"><name pos:start="135:17" pos:end="135:21">alpha</name><index pos:start="135:22" pos:end="135:24">[<expr pos:start="135:23" pos:end="135:23"><literal type="number" pos:start="135:23" pos:end="135:23">2</literal></expr>]</index></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:35"><name pos:start="135:28" pos:end="135:30">buf</name><index pos:start="135:31" pos:end="135:35">[<expr pos:start="135:32" pos:end="135:34"><name pos:start="135:32" pos:end="135:34">pos</name></expr>]</index></name> <operator pos:start="135:37" pos:end="135:37">&amp;</operator> <literal type="number" pos:start="135:39" pos:end="135:42">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:45"><expr pos:start="137:17" pos:end="137:44"><name pos:start="137:17" pos:end="137:24"><name pos:start="137:17" pos:end="137:21">alpha</name><index pos:start="137:22" pos:end="137:24">[<expr pos:start="137:23" pos:end="137:23"><literal type="number" pos:start="137:23" pos:end="137:23">1</literal></expr>]</index></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <name pos:start="137:28" pos:end="137:39"><name pos:start="137:28" pos:end="137:30">buf</name><index pos:start="137:31" pos:end="137:39">[<expr pos:start="137:32" pos:end="137:38"><name pos:start="137:32" pos:end="137:34">pos</name> <operator pos:start="137:36" pos:end="137:36">+</operator> <literal type="number" pos:start="137:38" pos:end="137:38">1</literal></expr>]</index></name> <operator pos:start="137:41" pos:end="137:42">&gt;&gt;</operator> <literal type="number" pos:start="137:44" pos:end="137:44">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:47"><expr pos:start="139:17" pos:end="139:46"><name pos:start="139:17" pos:end="139:24"><name pos:start="139:17" pos:end="139:21">alpha</name><index pos:start="139:22" pos:end="139:24">[<expr pos:start="139:23" pos:end="139:23"><literal type="number" pos:start="139:23" pos:end="139:23">0</literal></expr>]</index></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <name pos:start="139:28" pos:end="139:39"><name pos:start="139:28" pos:end="139:30">buf</name><index pos:start="139:31" pos:end="139:39">[<expr pos:start="139:32" pos:end="139:38"><name pos:start="139:32" pos:end="139:34">pos</name> <operator pos:start="139:36" pos:end="139:36">+</operator> <literal type="number" pos:start="139:38" pos:end="139:38">1</literal></expr>]</index></name> <operator pos:start="139:41" pos:end="139:41">&amp;</operator> <literal type="number" pos:start="139:43" pos:end="139:46">0x0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:25"><expr pos:start="141:17" pos:end="141:24"><name pos:start="141:17" pos:end="141:19">pos</name> <operator pos:start="141:21" pos:end="141:22">+=</operator> <literal type="number" pos:start="141:24" pos:end="141:24">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:83"><expr pos:start="143:13" pos:end="143:82"><call pos:start="143:13" pos:end="143:82"><name pos:start="143:13" pos:end="143:19">av_dlog</name><argument_list pos:start="143:20" pos:end="143:82">(<argument pos:start="143:21" pos:end="143:24"><expr pos:start="143:21" pos:end="143:24"><name pos:start="143:21" pos:end="143:24">NULL</name></expr></argument>, <argument pos:start="143:27" pos:end="143:44"><expr pos:start="143:27" pos:end="143:44"><literal type="string" pos:start="143:27" pos:end="143:44">"alpha=%x%x%x%x\n"</literal></expr></argument>, <argument pos:start="143:47" pos:end="143:54"><expr pos:start="143:47" pos:end="143:54"><name pos:start="143:47" pos:end="143:54"><name pos:start="143:47" pos:end="143:51">alpha</name><index pos:start="143:52" pos:end="143:54">[<expr pos:start="143:53" pos:end="143:53"><literal type="number" pos:start="143:53" pos:end="143:53">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="143:56" pos:end="143:63"><expr pos:start="143:56" pos:end="143:63"><name pos:start="143:56" pos:end="143:63"><name pos:start="143:56" pos:end="143:60">alpha</name><index pos:start="143:61" pos:end="143:63">[<expr pos:start="143:62" pos:end="143:62"><literal type="number" pos:start="143:62" pos:end="143:62">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="143:65" pos:end="143:72"><expr pos:start="143:65" pos:end="143:72"><name pos:start="143:65" pos:end="143:72"><name pos:start="143:65" pos:end="143:69">alpha</name><index pos:start="143:70" pos:end="143:72">[<expr pos:start="143:71" pos:end="143:71"><literal type="number" pos:start="143:71" pos:end="143:71">2</literal></expr>]</index></name></expr></argument>,<argument pos:start="143:74" pos:end="143:81"><expr pos:start="143:74" pos:end="143:81"><name pos:start="143:74" pos:end="143:81"><name pos:start="143:74" pos:end="143:78">alpha</name><index pos:start="143:79" pos:end="143:81">[<expr pos:start="143:80" pos:end="143:80"><literal type="number" pos:start="143:80" pos:end="143:80">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="145:17" pos:end="145:22">break;</break>

            <case pos:start="147:13" pos:end="147:22">case <expr pos:start="147:18" pos:end="147:21"><literal type="number" pos:start="147:18" pos:end="147:21">0x05</literal></expr>:</case>

            <case pos:start="149:13" pos:end="149:22">case <expr pos:start="149:18" pos:end="149:21"><literal type="number" pos:start="149:18" pos:end="149:21">0x85</literal></expr>:</case>

                <if_stmt pos:start="151:17" pos:end="153:30"><if pos:start="151:17" pos:end="153:30">if <condition pos:start="151:20" pos:end="151:41">(<expr pos:start="151:21" pos:end="151:40"><operator pos:start="151:21" pos:end="151:21">(</operator><name pos:start="151:22" pos:end="151:29">buf_size</name> <operator pos:start="151:31" pos:end="151:31">-</operator> <name pos:start="151:33" pos:end="151:35">pos</name><operator pos:start="151:36" pos:end="151:36">)</operator> <operator pos:start="151:38" pos:end="151:38">&lt;</operator> <literal type="number" pos:start="151:40" pos:end="151:40">6</literal></expr>)</condition><block type="pseudo" pos:start="153:21" pos:end="153:30"><block_content pos:start="153:21" pos:end="153:30">

                    <goto pos:start="153:21" pos:end="153:30">goto <name pos:start="153:26" pos:end="153:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:59"><expr pos:start="155:17" pos:end="155:58"><name pos:start="155:17" pos:end="155:18">x1</name> <operator pos:start="155:20" pos:end="155:20">=</operator> <operator pos:start="155:22" pos:end="155:22">(</operator><name pos:start="155:23" pos:end="155:30"><name pos:start="155:23" pos:end="155:25">buf</name><index pos:start="155:26" pos:end="155:30">[<expr pos:start="155:27" pos:end="155:29"><name pos:start="155:27" pos:end="155:29">pos</name></expr>]</index></name> <operator pos:start="155:32" pos:end="155:33">&lt;&lt;</operator> <literal type="number" pos:start="155:35" pos:end="155:35">4</literal><operator pos:start="155:36" pos:end="155:36">)</operator> <operator pos:start="155:38" pos:end="155:38">|</operator> <operator pos:start="155:40" pos:end="155:40">(</operator><name pos:start="155:41" pos:end="155:52"><name pos:start="155:41" pos:end="155:43">buf</name><index pos:start="155:44" pos:end="155:52">[<expr pos:start="155:45" pos:end="155:51"><name pos:start="155:45" pos:end="155:47">pos</name> <operator pos:start="155:49" pos:end="155:49">+</operator> <literal type="number" pos:start="155:51" pos:end="155:51">1</literal></expr>]</index></name> <operator pos:start="155:54" pos:end="155:55">&gt;&gt;</operator> <literal type="number" pos:start="155:57" pos:end="155:57">4</literal><operator pos:start="155:58" pos:end="155:58">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:65"><expr pos:start="157:17" pos:end="157:64"><name pos:start="157:17" pos:end="157:18">x2</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <operator pos:start="157:22" pos:end="157:22">(</operator><operator pos:start="157:23" pos:end="157:23">(</operator><name pos:start="157:24" pos:end="157:35"><name pos:start="157:24" pos:end="157:26">buf</name><index pos:start="157:27" pos:end="157:35">[<expr pos:start="157:28" pos:end="157:34"><name pos:start="157:28" pos:end="157:30">pos</name> <operator pos:start="157:32" pos:end="157:32">+</operator> <literal type="number" pos:start="157:34" pos:end="157:34">1</literal></expr>]</index></name> <operator pos:start="157:37" pos:end="157:37">&amp;</operator> <literal type="number" pos:start="157:39" pos:end="157:42">0x0f</literal><operator pos:start="157:43" pos:end="157:43">)</operator> <operator pos:start="157:45" pos:end="157:46">&lt;&lt;</operator> <literal type="number" pos:start="157:48" pos:end="157:48">8</literal><operator pos:start="157:49" pos:end="157:49">)</operator> <operator pos:start="157:51" pos:end="157:51">|</operator> <name pos:start="157:53" pos:end="157:64"><name pos:start="157:53" pos:end="157:55">buf</name><index pos:start="157:56" pos:end="157:64">[<expr pos:start="157:57" pos:end="157:63"><name pos:start="157:57" pos:end="157:59">pos</name> <operator pos:start="157:61" pos:end="157:61">+</operator> <literal type="number" pos:start="157:63" pos:end="157:63">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:63"><expr pos:start="159:17" pos:end="159:62"><name pos:start="159:17" pos:end="159:18">y1</name> <operator pos:start="159:20" pos:end="159:20">=</operator> <operator pos:start="159:22" pos:end="159:22">(</operator><name pos:start="159:23" pos:end="159:34"><name pos:start="159:23" pos:end="159:25">buf</name><index pos:start="159:26" pos:end="159:34">[<expr pos:start="159:27" pos:end="159:33"><name pos:start="159:27" pos:end="159:29">pos</name> <operator pos:start="159:31" pos:end="159:31">+</operator> <literal type="number" pos:start="159:33" pos:end="159:33">3</literal></expr>]</index></name> <operator pos:start="159:36" pos:end="159:37">&lt;&lt;</operator> <literal type="number" pos:start="159:39" pos:end="159:39">4</literal><operator pos:start="159:40" pos:end="159:40">)</operator> <operator pos:start="159:42" pos:end="159:42">|</operator> <operator pos:start="159:44" pos:end="159:44">(</operator><name pos:start="159:45" pos:end="159:56"><name pos:start="159:45" pos:end="159:47">buf</name><index pos:start="159:48" pos:end="159:56">[<expr pos:start="159:49" pos:end="159:55"><name pos:start="159:49" pos:end="159:51">pos</name> <operator pos:start="159:53" pos:end="159:53">+</operator> <literal type="number" pos:start="159:55" pos:end="159:55">4</literal></expr>]</index></name> <operator pos:start="159:58" pos:end="159:59">&gt;&gt;</operator> <literal type="number" pos:start="159:61" pos:end="159:61">4</literal><operator pos:start="159:62" pos:end="159:62">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:65"><expr pos:start="161:17" pos:end="161:64"><name pos:start="161:17" pos:end="161:18">y2</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <operator pos:start="161:22" pos:end="161:22">(</operator><operator pos:start="161:23" pos:end="161:23">(</operator><name pos:start="161:24" pos:end="161:35"><name pos:start="161:24" pos:end="161:26">buf</name><index pos:start="161:27" pos:end="161:35">[<expr pos:start="161:28" pos:end="161:34"><name pos:start="161:28" pos:end="161:30">pos</name> <operator pos:start="161:32" pos:end="161:32">+</operator> <literal type="number" pos:start="161:34" pos:end="161:34">4</literal></expr>]</index></name> <operator pos:start="161:37" pos:end="161:37">&amp;</operator> <literal type="number" pos:start="161:39" pos:end="161:42">0x0f</literal><operator pos:start="161:43" pos:end="161:43">)</operator> <operator pos:start="161:45" pos:end="161:46">&lt;&lt;</operator> <literal type="number" pos:start="161:48" pos:end="161:48">8</literal><operator pos:start="161:49" pos:end="161:49">)</operator> <operator pos:start="161:51" pos:end="161:51">|</operator> <name pos:start="161:53" pos:end="161:64"><name pos:start="161:53" pos:end="161:55">buf</name><index pos:start="161:56" pos:end="161:64">[<expr pos:start="161:57" pos:end="161:63"><name pos:start="161:57" pos:end="161:59">pos</name> <operator pos:start="161:61" pos:end="161:61">+</operator> <literal type="number" pos:start="161:63" pos:end="161:63">5</literal></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="163:17" pos:end="165:32"><if pos:start="163:17" pos:end="165:32">if <condition pos:start="163:20" pos:end="163:31">(<expr pos:start="163:21" pos:end="163:30"><name pos:start="163:21" pos:end="163:23">cmd</name> <operator pos:start="163:25" pos:end="163:25">&amp;</operator> <literal type="number" pos:start="163:27" pos:end="163:30">0x80</literal></expr>)</condition><block type="pseudo" pos:start="165:21" pos:end="165:32"><block_content pos:start="165:21" pos:end="165:32">

                    <expr_stmt pos:start="165:21" pos:end="165:32"><expr pos:start="165:21" pos:end="165:31"><name pos:start="165:21" pos:end="165:27">is_8bit</name> <operator pos:start="165:29" pos:end="165:29">=</operator> <literal type="number" pos:start="165:31" pos:end="165:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:75"><expr pos:start="167:17" pos:end="167:74"><call pos:start="167:17" pos:end="167:74"><name pos:start="167:17" pos:end="167:23">av_dlog</name><argument_list pos:start="167:24" pos:end="167:74">(<argument pos:start="167:25" pos:end="167:28"><expr pos:start="167:25" pos:end="167:28"><name pos:start="167:25" pos:end="167:28">NULL</name></expr></argument>, <argument pos:start="167:31" pos:end="167:57"><expr pos:start="167:31" pos:end="167:57"><literal type="string" pos:start="167:31" pos:end="167:57">"x1=%d x2=%d y1=%d y2=%d\n"</literal></expr></argument>, <argument pos:start="167:60" pos:end="167:61"><expr pos:start="167:60" pos:end="167:61"><name pos:start="167:60" pos:end="167:61">x1</name></expr></argument>, <argument pos:start="167:64" pos:end="167:65"><expr pos:start="167:64" pos:end="167:65"><name pos:start="167:64" pos:end="167:65">x2</name></expr></argument>, <argument pos:start="167:68" pos:end="167:69"><expr pos:start="167:68" pos:end="167:69"><name pos:start="167:68" pos:end="167:69">y1</name></expr></argument>, <argument pos:start="167:72" pos:end="167:73"><expr pos:start="167:72" pos:end="167:73"><name pos:start="167:72" pos:end="167:73">y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:25"><expr pos:start="169:17" pos:end="169:24"><name pos:start="169:17" pos:end="169:19">pos</name> <operator pos:start="169:21" pos:end="169:22">+=</operator> <literal type="number" pos:start="169:24" pos:end="169:24">6</literal></expr>;</expr_stmt>

                <break pos:start="171:17" pos:end="171:22">break;</break>

            <case pos:start="173:13" pos:end="173:22">case <expr pos:start="173:18" pos:end="173:21"><literal type="number" pos:start="173:18" pos:end="173:21">0x06</literal></expr>:</case>

                <if_stmt pos:start="175:17" pos:end="177:30"><if pos:start="175:17" pos:end="177:30">if <condition pos:start="175:20" pos:end="175:41">(<expr pos:start="175:21" pos:end="175:40"><operator pos:start="175:21" pos:end="175:21">(</operator><name pos:start="175:22" pos:end="175:29">buf_size</name> <operator pos:start="175:31" pos:end="175:31">-</operator> <name pos:start="175:33" pos:end="175:35">pos</name><operator pos:start="175:36" pos:end="175:36">)</operator> <operator pos:start="175:38" pos:end="175:38">&lt;</operator> <literal type="number" pos:start="175:40" pos:end="175:40">4</literal></expr>)</condition><block type="pseudo" pos:start="177:21" pos:end="177:30"><block_content pos:start="177:21" pos:end="177:30">

                    <goto pos:start="177:21" pos:end="177:30">goto <name pos:start="177:26" pos:end="177:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:45"><expr pos:start="179:17" pos:end="179:44"><name pos:start="179:17" pos:end="179:23">offset1</name> <operator pos:start="179:25" pos:end="179:25">=</operator> <call pos:start="179:27" pos:end="179:44"><name pos:start="179:27" pos:end="179:33">AV_RB16</name><argument_list pos:start="179:34" pos:end="179:44">(<argument pos:start="179:35" pos:end="179:43"><expr pos:start="179:35" pos:end="179:43"><name pos:start="179:35" pos:end="179:37">buf</name> <operator pos:start="179:39" pos:end="179:39">+</operator> <name pos:start="179:41" pos:end="179:43">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:49"><expr pos:start="181:17" pos:end="181:48"><name pos:start="181:17" pos:end="181:23">offset2</name> <operator pos:start="181:25" pos:end="181:25">=</operator> <call pos:start="181:27" pos:end="181:48"><name pos:start="181:27" pos:end="181:33">AV_RB16</name><argument_list pos:start="181:34" pos:end="181:48">(<argument pos:start="181:35" pos:end="181:47"><expr pos:start="181:35" pos:end="181:47"><name pos:start="181:35" pos:end="181:37">buf</name> <operator pos:start="181:39" pos:end="181:39">+</operator> <name pos:start="181:41" pos:end="181:43">pos</name> <operator pos:start="181:45" pos:end="181:45">+</operator> <literal type="number" pos:start="181:47" pos:end="181:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:83"><expr pos:start="183:17" pos:end="183:82"><call pos:start="183:17" pos:end="183:82"><name pos:start="183:17" pos:end="183:23">av_dlog</name><argument_list pos:start="183:24" pos:end="183:82">(<argument pos:start="183:25" pos:end="183:28"><expr pos:start="183:25" pos:end="183:28"><name pos:start="183:25" pos:end="183:28">NULL</name></expr></argument>, <argument pos:start="183:31" pos:end="183:63"><expr pos:start="183:31" pos:end="183:63"><literal type="string" pos:start="183:31" pos:end="183:63">"offset1=0x%04x offset2=0x%04x\n"</literal></expr></argument>, <argument pos:start="183:66" pos:end="183:72"><expr pos:start="183:66" pos:end="183:72"><name pos:start="183:66" pos:end="183:72">offset1</name></expr></argument>, <argument pos:start="183:75" pos:end="183:81"><expr pos:start="183:75" pos:end="183:81"><name pos:start="183:75" pos:end="183:81">offset2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:25"><expr pos:start="185:17" pos:end="185:24"><name pos:start="185:17" pos:end="185:19">pos</name> <operator pos:start="185:21" pos:end="185:22">+=</operator> <literal type="number" pos:start="185:24" pos:end="185:24">4</literal></expr>;</expr_stmt>

                <break pos:start="187:17" pos:end="187:22">break;</break>

            <case pos:start="189:13" pos:end="189:22">case <expr pos:start="189:18" pos:end="189:21"><literal type="number" pos:start="189:18" pos:end="189:21">0x86</literal></expr>:</case>

                <if_stmt pos:start="191:17" pos:end="193:30"><if pos:start="191:17" pos:end="193:30">if <condition pos:start="191:20" pos:end="191:41">(<expr pos:start="191:21" pos:end="191:40"><operator pos:start="191:21" pos:end="191:21">(</operator><name pos:start="191:22" pos:end="191:29">buf_size</name> <operator pos:start="191:31" pos:end="191:31">-</operator> <name pos:start="191:33" pos:end="191:35">pos</name><operator pos:start="191:36" pos:end="191:36">)</operator> <operator pos:start="191:38" pos:end="191:38">&lt;</operator> <literal type="number" pos:start="191:40" pos:end="191:40">8</literal></expr>)</condition><block type="pseudo" pos:start="193:21" pos:end="193:30"><block_content pos:start="193:21" pos:end="193:30">

                    <goto pos:start="193:21" pos:end="193:30">goto <name pos:start="193:26" pos:end="193:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:45"><expr pos:start="195:17" pos:end="195:44"><name pos:start="195:17" pos:end="195:23">offset1</name> <operator pos:start="195:25" pos:end="195:25">=</operator> <call pos:start="195:27" pos:end="195:44"><name pos:start="195:27" pos:end="195:33">AV_RB32</name><argument_list pos:start="195:34" pos:end="195:44">(<argument pos:start="195:35" pos:end="195:43"><expr pos:start="195:35" pos:end="195:43"><name pos:start="195:35" pos:end="195:37">buf</name> <operator pos:start="195:39" pos:end="195:39">+</operator> <name pos:start="195:41" pos:end="195:43">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:49"><expr pos:start="197:17" pos:end="197:48"><name pos:start="197:17" pos:end="197:23">offset2</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:48"><name pos:start="197:27" pos:end="197:33">AV_RB32</name><argument_list pos:start="197:34" pos:end="197:48">(<argument pos:start="197:35" pos:end="197:47"><expr pos:start="197:35" pos:end="197:47"><name pos:start="197:35" pos:end="197:37">buf</name> <operator pos:start="197:39" pos:end="197:39">+</operator> <name pos:start="197:41" pos:end="197:43">pos</name> <operator pos:start="197:45" pos:end="197:45">+</operator> <literal type="number" pos:start="197:47" pos:end="197:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:83"><expr pos:start="199:17" pos:end="199:82"><call pos:start="199:17" pos:end="199:82"><name pos:start="199:17" pos:end="199:23">av_dlog</name><argument_list pos:start="199:24" pos:end="199:82">(<argument pos:start="199:25" pos:end="199:28"><expr pos:start="199:25" pos:end="199:28"><name pos:start="199:25" pos:end="199:28">NULL</name></expr></argument>, <argument pos:start="199:31" pos:end="199:63"><expr pos:start="199:31" pos:end="199:63"><literal type="string" pos:start="199:31" pos:end="199:63">"offset1=0x%04x offset2=0x%04x\n"</literal></expr></argument>, <argument pos:start="199:66" pos:end="199:72"><expr pos:start="199:66" pos:end="199:72"><name pos:start="199:66" pos:end="199:72">offset1</name></expr></argument>, <argument pos:start="199:75" pos:end="199:81"><expr pos:start="199:75" pos:end="199:81"><name pos:start="199:75" pos:end="199:81">offset2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:25"><expr pos:start="201:17" pos:end="201:24"><name pos:start="201:17" pos:end="201:19">pos</name> <operator pos:start="201:21" pos:end="201:22">+=</operator> <literal type="number" pos:start="201:24" pos:end="201:24">8</literal></expr>;</expr_stmt>

                <break pos:start="203:17" pos:end="203:22">break;</break>



            <case pos:start="207:13" pos:end="207:22">case <expr pos:start="207:18" pos:end="207:21"><literal type="number" pos:start="207:18" pos:end="207:21">0x83</literal></expr>:</case>

                <comment type="block" pos:start="209:17" pos:end="209:36">/* HD set palette */</comment>

                <if_stmt pos:start="211:17" pos:end="213:30"><if pos:start="211:17" pos:end="213:30">if <condition pos:start="211:20" pos:end="211:43">(<expr pos:start="211:21" pos:end="211:42"><operator pos:start="211:21" pos:end="211:21">(</operator><name pos:start="211:22" pos:end="211:29">buf_size</name> <operator pos:start="211:31" pos:end="211:31">-</operator> <name pos:start="211:33" pos:end="211:35">pos</name><operator pos:start="211:36" pos:end="211:36">)</operator> <operator pos:start="211:38" pos:end="211:38">&lt;</operator> <literal type="number" pos:start="211:40" pos:end="211:42">768</literal></expr>)</condition><block type="pseudo" pos:start="213:21" pos:end="213:30"><block_content pos:start="213:21" pos:end="213:30">

                    <goto pos:start="213:21" pos:end="213:30">goto <name pos:start="213:26" pos:end="213:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:40"><expr pos:start="215:17" pos:end="215:39"><name pos:start="215:17" pos:end="215:27">yuv_palette</name> <operator pos:start="215:29" pos:end="215:29">=</operator> <name pos:start="215:31" pos:end="215:33">buf</name> <operator pos:start="215:35" pos:end="215:35">+</operator> <name pos:start="215:37" pos:end="215:39">pos</name></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:27"><expr pos:start="217:17" pos:end="217:26"><name pos:start="217:17" pos:end="217:19">pos</name> <operator pos:start="217:21" pos:end="217:22">+=</operator> <literal type="number" pos:start="217:24" pos:end="217:26">768</literal></expr>;</expr_stmt>

                <break pos:start="219:17" pos:end="219:22">break;</break>

            <case pos:start="221:13" pos:end="221:22">case <expr pos:start="221:18" pos:end="221:21"><literal type="number" pos:start="221:18" pos:end="221:21">0x84</literal></expr>:</case>

                <comment type="block" pos:start="223:17" pos:end="223:45">/* HD set contrast (alpha) */</comment>

                <if_stmt pos:start="225:17" pos:end="227:30"><if pos:start="225:17" pos:end="227:30">if <condition pos:start="225:20" pos:end="225:43">(<expr pos:start="225:21" pos:end="225:42"><operator pos:start="225:21" pos:end="225:21">(</operator><name pos:start="225:22" pos:end="225:29">buf_size</name> <operator pos:start="225:31" pos:end="225:31">-</operator> <name pos:start="225:33" pos:end="225:35">pos</name><operator pos:start="225:36" pos:end="225:36">)</operator> <operator pos:start="225:38" pos:end="225:38">&lt;</operator> <literal type="number" pos:start="225:40" pos:end="225:42">256</literal></expr>)</condition><block type="pseudo" pos:start="227:21" pos:end="227:30"><block_content pos:start="227:21" pos:end="227:30">

                    <goto pos:start="227:21" pos:end="227:30">goto <name pos:start="227:26" pos:end="227:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <for pos:start="229:17" pos:end="231:49">for <control pos:start="229:21" pos:end="229:41">(<init pos:start="229:22" pos:end="229:27"><expr pos:start="229:22" pos:end="229:26"><name pos:start="229:22" pos:end="229:22">i</name> <operator pos:start="229:24" pos:end="229:24">=</operator> <literal type="number" pos:start="229:26" pos:end="229:26">0</literal></expr>;</init> <condition pos:start="229:29" pos:end="229:36"><expr pos:start="229:29" pos:end="229:35"><name pos:start="229:29" pos:end="229:29">i</name> <operator pos:start="229:31" pos:end="229:31">&lt;</operator> <literal type="number" pos:start="229:33" pos:end="229:35">256</literal></expr>;</condition> <incr pos:start="229:38" pos:end="229:40"><expr pos:start="229:38" pos:end="229:40"><name pos:start="229:38" pos:end="229:38">i</name><operator pos:start="229:39" pos:end="229:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="231:21" pos:end="231:49"><block_content pos:start="231:21" pos:end="231:49">

                    <expr_stmt pos:start="231:21" pos:end="231:49"><expr pos:start="231:21" pos:end="231:48"><name pos:start="231:21" pos:end="231:28"><name pos:start="231:21" pos:end="231:25">alpha</name><index pos:start="231:26" pos:end="231:28">[<expr pos:start="231:27" pos:end="231:27"><name pos:start="231:27" pos:end="231:27">i</name></expr>]</index></name> <operator pos:start="231:30" pos:end="231:30">=</operator> <literal type="number" pos:start="231:32" pos:end="231:37">0xFF</literal> <operator pos:start="231:37" pos:end="231:37">-</operator> <name pos:start="231:39" pos:end="231:48"><name pos:start="231:39" pos:end="231:41">buf</name><index pos:start="231:42" pos:end="231:48">[<expr pos:start="231:43" pos:end="231:47"><name pos:start="231:43" pos:end="231:45">pos</name><operator pos:start="231:46" pos:end="231:46">+</operator><name pos:start="231:47" pos:end="231:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="233:17" pos:end="233:27"><expr pos:start="233:17" pos:end="233:26"><name pos:start="233:17" pos:end="233:19">pos</name> <operator pos:start="233:21" pos:end="233:22">+=</operator> <literal type="number" pos:start="233:24" pos:end="233:26">256</literal></expr>;</expr_stmt>

                <break pos:start="235:17" pos:end="235:22">break;</break>



            <case pos:start="239:13" pos:end="239:22">case <expr pos:start="239:18" pos:end="239:21"><literal type="number" pos:start="239:18" pos:end="239:21">0xff</literal></expr>:</case>

                <goto pos:start="241:17" pos:end="241:29">goto <name pos:start="241:22" pos:end="241:28">the_end</name>;</goto>

            <default pos:start="243:13" pos:end="243:20">default:</default>

                <expr_stmt pos:start="245:17" pos:end="245:77"><expr pos:start="245:17" pos:end="245:76"><call pos:start="245:17" pos:end="245:76"><name pos:start="245:17" pos:end="245:23">av_dlog</name><argument_list pos:start="245:24" pos:end="245:76">(<argument pos:start="245:25" pos:end="245:28"><expr pos:start="245:25" pos:end="245:28"><name pos:start="245:25" pos:end="245:28">NULL</name></expr></argument>, <argument pos:start="245:31" pos:end="245:70"><expr pos:start="245:31" pos:end="245:70"><literal type="string" pos:start="245:31" pos:end="245:70">"unrecognised subpicture command 0x%x\n"</literal></expr></argument>, <argument pos:start="245:73" pos:end="245:75"><expr pos:start="245:73" pos:end="245:75"><name pos:start="245:73" pos:end="245:75">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="247:17" pos:end="247:29">goto <name pos:start="247:22" pos:end="247:28">the_end</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></while>

    <label pos:start="253:5" pos:end="253:12"><name pos:start="253:5" pos:end="253:11">the_end</name>:</label>

        <if_stmt pos:start="255:9" pos:end="355:9"><if pos:start="255:9" pos:end="355:9">if <condition pos:start="255:12" pos:end="255:25">(<expr pos:start="255:13" pos:end="255:24"><name pos:start="255:13" pos:end="255:19">offset1</name> <operator pos:start="255:21" pos:end="255:22">&gt;=</operator> <literal type="number" pos:start="255:24" pos:end="255:24">0</literal></expr>)</condition> <block pos:start="255:27" pos:end="355:9">{<block_content pos:start="257:13" pos:end="353:13">

            <decl_stmt pos:start="257:13" pos:end="257:21"><decl pos:start="257:13" pos:end="257:17"><type pos:start="257:13" pos:end="257:15"><name pos:start="257:13" pos:end="257:15">int</name></type> <name pos:start="257:17" pos:end="257:17">w</name></decl>, <decl pos:start="257:20" pos:end="257:20"><type ref="prev" pos:start="257:13" pos:end="257:15"/><name pos:start="257:20" pos:end="257:20">h</name></decl>;</decl_stmt>

            <decl_stmt pos:start="259:13" pos:end="259:28"><decl pos:start="259:13" pos:end="259:27"><type pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:19">uint8_t</name> <modifier pos:start="259:21" pos:end="259:21">*</modifier></type><name pos:start="259:22" pos:end="259:27">bitmap</name></decl>;</decl_stmt>



            <comment type="block" pos:start="263:13" pos:end="263:35">/* decode the bitmap */</comment>

            <expr_stmt pos:start="265:13" pos:end="265:28"><expr pos:start="265:13" pos:end="265:27"><name pos:start="265:13" pos:end="265:13">w</name> <operator pos:start="265:15" pos:end="265:15">=</operator> <name pos:start="265:17" pos:end="265:18">x2</name> <operator pos:start="265:20" pos:end="265:20">-</operator> <name pos:start="265:22" pos:end="265:23">x1</name> <operator pos:start="265:25" pos:end="265:25">+</operator> <literal type="number" pos:start="265:27" pos:end="265:27">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="267:13" pos:end="269:22"><if pos:start="267:13" pos:end="269:22">if <condition pos:start="267:16" pos:end="267:22">(<expr pos:start="267:17" pos:end="267:21"><name pos:start="267:17" pos:end="267:17">w</name> <operator pos:start="267:19" pos:end="267:19">&lt;</operator> <literal type="number" pos:start="267:21" pos:end="267:21">0</literal></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:22"><block_content pos:start="269:17" pos:end="269:22">

                <expr_stmt pos:start="269:17" pos:end="269:22"><expr pos:start="269:17" pos:end="269:21"><name pos:start="269:17" pos:end="269:17">w</name> <operator pos:start="269:19" pos:end="269:19">=</operator> <literal type="number" pos:start="269:21" pos:end="269:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:24"><expr pos:start="271:13" pos:end="271:23"><name pos:start="271:13" pos:end="271:13">h</name> <operator pos:start="271:15" pos:end="271:15">=</operator> <name pos:start="271:17" pos:end="271:18">y2</name> <operator pos:start="271:20" pos:end="271:20">-</operator> <name pos:start="271:22" pos:end="271:23">y1</name></expr>;</expr_stmt>

            <if_stmt pos:start="273:13" pos:end="275:22"><if pos:start="273:13" pos:end="275:22">if <condition pos:start="273:16" pos:end="273:22">(<expr pos:start="273:17" pos:end="273:21"><name pos:start="273:17" pos:end="273:17">h</name> <operator pos:start="273:19" pos:end="273:19">&lt;</operator> <literal type="number" pos:start="273:21" pos:end="273:21">0</literal></expr>)</condition><block type="pseudo" pos:start="275:17" pos:end="275:22"><block_content pos:start="275:17" pos:end="275:22">

                <expr_stmt pos:start="275:17" pos:end="275:22"><expr pos:start="275:17" pos:end="275:21"><name pos:start="275:17" pos:end="275:17">h</name> <operator pos:start="275:19" pos:end="275:19">=</operator> <literal type="number" pos:start="275:21" pos:end="275:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="277:13" pos:end="353:13"><if pos:start="277:13" pos:end="353:13">if <condition pos:start="277:16" pos:end="277:31">(<expr pos:start="277:17" pos:end="277:30"><name pos:start="277:17" pos:end="277:17">w</name> <operator pos:start="277:19" pos:end="277:19">&gt;</operator> <literal type="number" pos:start="277:21" pos:end="277:21">0</literal> <operator pos:start="277:23" pos:end="277:24">&amp;&amp;</operator> <name pos:start="277:26" pos:end="277:26">h</name> <operator pos:start="277:28" pos:end="277:28">&gt;</operator> <literal type="number" pos:start="277:30" pos:end="277:30">0</literal></expr>)</condition> <block pos:start="277:33" pos:end="353:13">{<block_content pos:start="279:17" pos:end="351:59">

                <if_stmt pos:start="279:17" pos:end="295:17"><if pos:start="279:17" pos:end="295:17">if <condition pos:start="279:20" pos:end="279:46">(<expr pos:start="279:21" pos:end="279:45"><name pos:start="279:21" pos:end="279:37"><name pos:start="279:21" pos:end="279:30">sub_header</name><operator pos:start="279:31" pos:end="279:32">-&gt;</operator><name pos:start="279:33" pos:end="279:37">rects</name></name> <operator pos:start="279:39" pos:end="279:40">!=</operator> <name pos:start="279:42" pos:end="279:45">NULL</name></expr>)</condition> <block pos:start="279:48" pos:end="295:17">{<block_content pos:start="281:21" pos:end="293:46">

                    <for pos:start="281:21" pos:end="289:21">for <control pos:start="281:25" pos:end="281:63">(<init pos:start="281:26" pos:end="281:31"><expr pos:start="281:26" pos:end="281:30"><name pos:start="281:26" pos:end="281:26">i</name> <operator pos:start="281:28" pos:end="281:28">=</operator> <literal type="number" pos:start="281:30" pos:end="281:30">0</literal></expr>;</init> <condition pos:start="281:33" pos:end="281:58"><expr pos:start="281:33" pos:end="281:57"><name pos:start="281:33" pos:end="281:33">i</name> <operator pos:start="281:35" pos:end="281:35">&lt;</operator> <name pos:start="281:37" pos:end="281:57"><name pos:start="281:37" pos:end="281:46">sub_header</name><operator pos:start="281:47" pos:end="281:48">-&gt;</operator><name pos:start="281:49" pos:end="281:57">num_rects</name></name></expr>;</condition> <incr pos:start="281:60" pos:end="281:62"><expr pos:start="281:60" pos:end="281:62"><name pos:start="281:60" pos:end="281:60">i</name><operator pos:start="281:61" pos:end="281:62">++</operator></expr></incr>)</control> <block pos:start="281:65" pos:end="289:21">{<block_content pos:start="283:25" pos:end="287:56">

                        <expr_stmt pos:start="283:25" pos:end="283:70"><expr pos:start="283:25" pos:end="283:69"><call pos:start="283:25" pos:end="283:69"><name pos:start="283:25" pos:end="283:32">av_freep</name><argument_list pos:start="283:33" pos:end="283:69">(<argument pos:start="283:34" pos:end="283:68"><expr pos:start="283:34" pos:end="283:68"><operator pos:start="283:34" pos:end="283:34">&amp;</operator><name pos:start="283:35" pos:end="283:54"><name pos:start="283:35" pos:end="283:44">sub_header</name><operator pos:start="283:45" pos:end="283:46">-&gt;</operator><name pos:start="283:47" pos:end="283:51">rects</name><index pos:start="283:52" pos:end="283:54">[<expr pos:start="283:53" pos:end="283:53"><name pos:start="283:53" pos:end="283:53">i</name></expr>]</index></name><operator pos:start="283:55" pos:end="283:56">-&gt;</operator><name pos:start="283:57" pos:end="283:68"><name pos:start="283:57" pos:end="283:60">pict</name><operator pos:start="283:61" pos:end="283:61">.</operator><name pos:start="283:62" pos:end="283:65">data</name><index pos:start="283:66" pos:end="283:68">[<expr pos:start="283:67" pos:end="283:67"><literal type="number" pos:start="283:67" pos:end="283:67">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="285:25" pos:end="285:70"><expr pos:start="285:25" pos:end="285:69"><call pos:start="285:25" pos:end="285:69"><name pos:start="285:25" pos:end="285:32">av_freep</name><argument_list pos:start="285:33" pos:end="285:69">(<argument pos:start="285:34" pos:end="285:68"><expr pos:start="285:34" pos:end="285:68"><operator pos:start="285:34" pos:end="285:34">&amp;</operator><name pos:start="285:35" pos:end="285:54"><name pos:start="285:35" pos:end="285:44">sub_header</name><operator pos:start="285:45" pos:end="285:46">-&gt;</operator><name pos:start="285:47" pos:end="285:51">rects</name><index pos:start="285:52" pos:end="285:54">[<expr pos:start="285:53" pos:end="285:53"><name pos:start="285:53" pos:end="285:53">i</name></expr>]</index></name><operator pos:start="285:55" pos:end="285:56">-&gt;</operator><name pos:start="285:57" pos:end="285:68"><name pos:start="285:57" pos:end="285:60">pict</name><operator pos:start="285:61" pos:end="285:61">.</operator><name pos:start="285:62" pos:end="285:65">data</name><index pos:start="285:66" pos:end="285:68">[<expr pos:start="285:67" pos:end="285:67"><literal type="number" pos:start="285:67" pos:end="285:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="287:25" pos:end="287:56"><expr pos:start="287:25" pos:end="287:55"><call pos:start="287:25" pos:end="287:55"><name pos:start="287:25" pos:end="287:32">av_freep</name><argument_list pos:start="287:33" pos:end="287:55">(<argument pos:start="287:34" pos:end="287:54"><expr pos:start="287:34" pos:end="287:54"><operator pos:start="287:34" pos:end="287:34">&amp;</operator><name pos:start="287:35" pos:end="287:54"><name pos:start="287:35" pos:end="287:44">sub_header</name><operator pos:start="287:45" pos:end="287:46">-&gt;</operator><name pos:start="287:47" pos:end="287:51">rects</name><index pos:start="287:52" pos:end="287:54">[<expr pos:start="287:53" pos:end="287:53"><name pos:start="287:53" pos:end="287:53">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="291:21" pos:end="291:49"><expr pos:start="291:21" pos:end="291:48"><call pos:start="291:21" pos:end="291:48"><name pos:start="291:21" pos:end="291:28">av_freep</name><argument_list pos:start="291:29" pos:end="291:48">(<argument pos:start="291:30" pos:end="291:47"><expr pos:start="291:30" pos:end="291:47"><operator pos:start="291:30" pos:end="291:30">&amp;</operator><name pos:start="291:31" pos:end="291:47"><name pos:start="291:31" pos:end="291:40">sub_header</name><operator pos:start="291:41" pos:end="291:42">-&gt;</operator><name pos:start="291:43" pos:end="291:47">rects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="293:21" pos:end="293:46"><expr pos:start="293:21" pos:end="293:45"><name pos:start="293:21" pos:end="293:41"><name pos:start="293:21" pos:end="293:30">sub_header</name><operator pos:start="293:31" pos:end="293:32">-&gt;</operator><name pos:start="293:33" pos:end="293:41">num_rects</name></name> <operator pos:start="293:43" pos:end="293:43">=</operator> <literal type="number" pos:start="293:45" pos:end="293:45">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="299:17" pos:end="299:42"><expr pos:start="299:17" pos:end="299:41"><name pos:start="299:17" pos:end="299:22">bitmap</name> <operator pos:start="299:24" pos:end="299:24">=</operator> <call pos:start="299:26" pos:end="299:41"><name pos:start="299:26" pos:end="299:34">av_malloc</name><argument_list pos:start="299:35" pos:end="299:41">(<argument pos:start="299:36" pos:end="299:40"><expr pos:start="299:36" pos:end="299:40"><name pos:start="299:36" pos:end="299:36">w</name> <operator pos:start="299:38" pos:end="299:38">*</operator> <name pos:start="299:40" pos:end="299:40">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:75"><expr pos:start="301:17" pos:end="301:74"><name pos:start="301:17" pos:end="301:33"><name pos:start="301:17" pos:end="301:26">sub_header</name><operator pos:start="301:27" pos:end="301:28">-&gt;</operator><name pos:start="301:29" pos:end="301:33">rects</name></name> <operator pos:start="301:35" pos:end="301:35">=</operator> <call pos:start="301:37" pos:end="301:74"><name pos:start="301:37" pos:end="301:46">av_mallocz</name><argument_list pos:start="301:47" pos:end="301:74">(<argument pos:start="301:48" pos:end="301:73"><expr pos:start="301:48" pos:end="301:73"><sizeof pos:start="301:48" pos:end="301:73">sizeof<argument_list pos:start="301:54" pos:end="301:73">(<argument pos:start="301:55" pos:end="301:72"><expr pos:start="301:55" pos:end="301:72"><operator pos:start="301:55" pos:end="301:55">*</operator><name pos:start="301:56" pos:end="301:72"><name pos:start="301:56" pos:end="301:65">sub_header</name><operator pos:start="301:66" pos:end="301:67">-&gt;</operator><name pos:start="301:68" pos:end="301:72">rects</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:74"><expr pos:start="303:17" pos:end="303:73"><name pos:start="303:17" pos:end="303:36"><name pos:start="303:17" pos:end="303:26">sub_header</name><operator pos:start="303:27" pos:end="303:28">-&gt;</operator><name pos:start="303:29" pos:end="303:33">rects</name><index pos:start="303:34" pos:end="303:36">[<expr pos:start="303:35" pos:end="303:35"><literal type="number" pos:start="303:35" pos:end="303:35">0</literal></expr>]</index></name> <operator pos:start="303:38" pos:end="303:38">=</operator> <call pos:start="303:40" pos:end="303:73"><name pos:start="303:40" pos:end="303:49">av_mallocz</name><argument_list pos:start="303:50" pos:end="303:73">(<argument pos:start="303:51" pos:end="303:72"><expr pos:start="303:51" pos:end="303:72"><sizeof pos:start="303:51" pos:end="303:72">sizeof<argument_list pos:start="303:57" pos:end="303:72">(<argument pos:start="303:58" pos:end="303:71"><expr pos:start="303:58" pos:end="303:71"><name pos:start="303:58" pos:end="303:71">AVSubtitleRect</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:42"><expr pos:start="305:17" pos:end="305:41"><name pos:start="305:17" pos:end="305:37"><name pos:start="305:17" pos:end="305:26">sub_header</name><operator pos:start="305:27" pos:end="305:28">-&gt;</operator><name pos:start="305:29" pos:end="305:37">num_rects</name></name> <operator pos:start="305:39" pos:end="305:39">=</operator> <literal type="number" pos:start="305:41" pos:end="305:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:60"><expr pos:start="307:17" pos:end="307:59"><name pos:start="307:17" pos:end="307:36"><name pos:start="307:17" pos:end="307:26">sub_header</name><operator pos:start="307:27" pos:end="307:28">-&gt;</operator><name pos:start="307:29" pos:end="307:33">rects</name><index pos:start="307:34" pos:end="307:36">[<expr pos:start="307:35" pos:end="307:35"><literal type="number" pos:start="307:35" pos:end="307:35">0</literal></expr>]</index></name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:50"><name pos:start="307:39" pos:end="307:42">pict</name><operator pos:start="307:43" pos:end="307:43">.</operator><name pos:start="307:44" pos:end="307:47">data</name><index pos:start="307:48" pos:end="307:50">[<expr pos:start="307:49" pos:end="307:49"><literal type="number" pos:start="307:49" pos:end="307:49">0</literal></expr>]</index></name> <operator pos:start="307:52" pos:end="307:52">=</operator> <name pos:start="307:54" pos:end="307:59">bitmap</name></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="311:60"><expr pos:start="309:17" pos:end="311:59"><call pos:start="309:17" pos:end="311:59"><name pos:start="309:17" pos:end="309:26">decode_rle</name><argument_list pos:start="309:27" pos:end="311:59">(<argument pos:start="309:28" pos:end="309:33"><expr pos:start="309:28" pos:end="309:33"><name pos:start="309:28" pos:end="309:33">bitmap</name></expr></argument>, <argument pos:start="309:36" pos:end="309:40"><expr pos:start="309:36" pos:end="309:40"><name pos:start="309:36" pos:end="309:36">w</name> <operator pos:start="309:38" pos:end="309:38">*</operator> <literal type="number" pos:start="309:40" pos:end="309:40">2</literal></expr></argument>, <argument pos:start="309:43" pos:end="309:43"><expr pos:start="309:43" pos:end="309:43"><name pos:start="309:43" pos:end="309:43">w</name></expr></argument>, <argument pos:start="309:46" pos:end="309:56"><expr pos:start="309:46" pos:end="309:56"><operator pos:start="309:46" pos:end="309:46">(</operator><name pos:start="309:47" pos:end="309:47">h</name> <operator pos:start="309:49" pos:end="309:49">+</operator> <literal type="number" pos:start="309:51" pos:end="309:51">1</literal><operator pos:start="309:52" pos:end="309:52">)</operator> <operator pos:start="309:54" pos:end="309:54">/</operator> <literal type="number" pos:start="309:56" pos:end="309:56">2</literal></expr></argument>,

                           <argument pos:start="311:28" pos:end="311:30"><expr pos:start="311:28" pos:end="311:30"><name pos:start="311:28" pos:end="311:30">buf</name></expr></argument>, <argument pos:start="311:33" pos:end="311:39"><expr pos:start="311:33" pos:end="311:39"><name pos:start="311:33" pos:end="311:39">offset1</name></expr></argument>, <argument pos:start="311:42" pos:end="311:49"><expr pos:start="311:42" pos:end="311:49"><name pos:start="311:42" pos:end="311:49">buf_size</name></expr></argument>, <argument pos:start="311:52" pos:end="311:58"><expr pos:start="311:52" pos:end="311:58"><name pos:start="311:52" pos:end="311:58">is_8bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="315:60"><expr pos:start="313:17" pos:end="315:59"><call pos:start="313:17" pos:end="315:59"><name pos:start="313:17" pos:end="313:26">decode_rle</name><argument_list pos:start="313:27" pos:end="315:59">(<argument pos:start="313:28" pos:end="313:37"><expr pos:start="313:28" pos:end="313:37"><name pos:start="313:28" pos:end="313:33">bitmap</name> <operator pos:start="313:35" pos:end="313:35">+</operator> <name pos:start="313:37" pos:end="313:37">w</name></expr></argument>, <argument pos:start="313:40" pos:end="313:44"><expr pos:start="313:40" pos:end="313:44"><name pos:start="313:40" pos:end="313:40">w</name> <operator pos:start="313:42" pos:end="313:42">*</operator> <literal type="number" pos:start="313:44" pos:end="313:44">2</literal></expr></argument>, <argument pos:start="313:47" pos:end="313:47"><expr pos:start="313:47" pos:end="313:47"><name pos:start="313:47" pos:end="313:47">w</name></expr></argument>, <argument pos:start="313:50" pos:end="313:54"><expr pos:start="313:50" pos:end="313:54"><name pos:start="313:50" pos:end="313:50">h</name> <operator pos:start="313:52" pos:end="313:52">/</operator> <literal type="number" pos:start="313:54" pos:end="313:54">2</literal></expr></argument>,

                           <argument pos:start="315:28" pos:end="315:30"><expr pos:start="315:28" pos:end="315:30"><name pos:start="315:28" pos:end="315:30">buf</name></expr></argument>, <argument pos:start="315:33" pos:end="315:39"><expr pos:start="315:33" pos:end="315:39"><name pos:start="315:33" pos:end="315:39">offset2</name></expr></argument>, <argument pos:start="315:42" pos:end="315:49"><expr pos:start="315:42" pos:end="315:49"><name pos:start="315:42" pos:end="315:49">buf_size</name></expr></argument>, <argument pos:start="315:52" pos:end="315:58"><expr pos:start="315:52" pos:end="315:58"><name pos:start="315:52" pos:end="315:58">is_8bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:80"><expr pos:start="317:17" pos:end="317:79"><name pos:start="317:17" pos:end="317:36"><name pos:start="317:17" pos:end="317:26">sub_header</name><operator pos:start="317:27" pos:end="317:28">-&gt;</operator><name pos:start="317:29" pos:end="317:33">rects</name><index pos:start="317:34" pos:end="317:36">[<expr pos:start="317:35" pos:end="317:35"><literal type="number" pos:start="317:35" pos:end="317:35">0</literal></expr>]</index></name><operator pos:start="317:37" pos:end="317:38">-&gt;</operator><name pos:start="317:39" pos:end="317:50"><name pos:start="317:39" pos:end="317:42">pict</name><operator pos:start="317:43" pos:end="317:43">.</operator><name pos:start="317:44" pos:end="317:47">data</name><index pos:start="317:48" pos:end="317:50">[<expr pos:start="317:49" pos:end="317:49"><literal type="number" pos:start="317:49" pos:end="317:49">1</literal></expr>]</index></name> <operator pos:start="317:52" pos:end="317:52">=</operator> <call pos:start="317:54" pos:end="317:79"><name pos:start="317:54" pos:end="317:63">av_mallocz</name><argument_list pos:start="317:64" pos:end="317:79">(<argument pos:start="317:65" pos:end="317:78"><expr pos:start="317:65" pos:end="317:78"><name pos:start="317:65" pos:end="317:78">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="319:17" pos:end="339:17"><if pos:start="319:17" pos:end="329:17">if <condition pos:start="319:20" pos:end="319:28">(<expr pos:start="319:21" pos:end="319:27"><name pos:start="319:21" pos:end="319:27">is_8bit</name></expr>)</condition> <block pos:start="319:30" pos:end="329:17">{<block_content pos:start="321:21" pos:end="327:106">

                    <if_stmt pos:start="321:21" pos:end="323:34"><if pos:start="321:21" pos:end="323:34">if <condition pos:start="321:24" pos:end="321:41">(<expr pos:start="321:25" pos:end="321:40"><name pos:start="321:25" pos:end="321:35">yuv_palette</name> <operator pos:start="321:37" pos:end="321:38">==</operator> <literal type="number" pos:start="321:40" pos:end="321:40">0</literal></expr>)</condition><block type="pseudo" pos:start="323:25" pos:end="323:34"><block_content pos:start="323:25" pos:end="323:34">

                        <goto pos:start="323:25" pos:end="323:34">goto <name pos:start="323:30" pos:end="323:33">fail</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="325:21" pos:end="325:58"><expr pos:start="325:21" pos:end="325:57"><name pos:start="325:21" pos:end="325:40"><name pos:start="325:21" pos:end="325:30">sub_header</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:37">rects</name><index pos:start="325:38" pos:end="325:40">[<expr pos:start="325:39" pos:end="325:39"><literal type="number" pos:start="325:39" pos:end="325:39">0</literal></expr>]</index></name><operator pos:start="325:41" pos:end="325:42">-&gt;</operator><name pos:start="325:43" pos:end="325:51">nb_colors</name> <operator pos:start="325:53" pos:end="325:53">=</operator> <literal type="number" pos:start="325:55" pos:end="325:57">256</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="327:21" pos:end="327:106"><expr pos:start="327:21" pos:end="327:105"><call pos:start="327:21" pos:end="327:105"><name pos:start="327:21" pos:end="327:33">yuv_a_to_rgba</name><argument_list pos:start="327:34" pos:end="327:105">(<argument pos:start="327:35" pos:end="327:45"><expr pos:start="327:35" pos:end="327:45"><name pos:start="327:35" pos:end="327:45">yuv_palette</name></expr></argument>, <argument pos:start="327:48" pos:end="327:52"><expr pos:start="327:48" pos:end="327:52"><name pos:start="327:48" pos:end="327:52">alpha</name></expr></argument>, <argument pos:start="327:55" pos:end="327:99"><expr pos:start="327:55" pos:end="327:99"><operator pos:start="327:55" pos:end="327:55">(</operator><name pos:start="327:56" pos:end="327:63">uint32_t</name><operator pos:start="327:64" pos:end="327:64">*</operator><operator pos:start="327:65" pos:end="327:65">)</operator><name pos:start="327:66" pos:end="327:85"><name pos:start="327:66" pos:end="327:75">sub_header</name><operator pos:start="327:76" pos:end="327:77">-&gt;</operator><name pos:start="327:78" pos:end="327:82">rects</name><index pos:start="327:83" pos:end="327:85">[<expr pos:start="327:84" pos:end="327:84"><literal type="number" pos:start="327:84" pos:end="327:84">0</literal></expr>]</index></name><operator pos:start="327:86" pos:end="327:87">-&gt;</operator><name pos:start="327:88" pos:end="327:99"><name pos:start="327:88" pos:end="327:91">pict</name><operator pos:start="327:92" pos:end="327:92">.</operator><name pos:start="327:93" pos:end="327:96">data</name><index pos:start="327:97" pos:end="327:99">[<expr pos:start="327:98" pos:end="327:98"><literal type="number" pos:start="327:98" pos:end="327:98">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="327:102" pos:end="327:104"><expr pos:start="327:102" pos:end="327:104"><literal type="number" pos:start="327:102" pos:end="327:104">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="329:19" pos:end="339:17">else <block pos:start="329:24" pos:end="339:17">{<block_content pos:start="331:21" pos:end="337:61">

                    <expr_stmt pos:start="331:21" pos:end="331:56"><expr pos:start="331:21" pos:end="331:55"><name pos:start="331:21" pos:end="331:40"><name pos:start="331:21" pos:end="331:30">sub_header</name><operator pos:start="331:31" pos:end="331:32">-&gt;</operator><name pos:start="331:33" pos:end="331:37">rects</name><index pos:start="331:38" pos:end="331:40">[<expr pos:start="331:39" pos:end="331:39"><literal type="number" pos:start="331:39" pos:end="331:39">0</literal></expr>]</index></name><operator pos:start="331:41" pos:end="331:42">-&gt;</operator><name pos:start="331:43" pos:end="331:51">nb_colors</name> <operator pos:start="331:53" pos:end="331:53">=</operator> <literal type="number" pos:start="331:55" pos:end="331:55">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="333:21" pos:end="337:61"><expr pos:start="333:21" pos:end="337:60"><call pos:start="333:21" pos:end="337:60"><name pos:start="333:21" pos:end="333:33">guess_palette</name><argument_list pos:start="333:34" pos:end="337:60">(<argument pos:start="333:35" pos:end="333:37"><expr pos:start="333:35" pos:end="333:37"><name pos:start="333:35" pos:end="333:37">ctx</name></expr></argument>,

                                  <argument pos:start="335:35" pos:end="335:79"><expr pos:start="335:35" pos:end="335:79"><operator pos:start="335:35" pos:end="335:35">(</operator><name pos:start="335:36" pos:end="335:43">uint32_t</name><operator pos:start="335:44" pos:end="335:44">*</operator><operator pos:start="335:45" pos:end="335:45">)</operator><name pos:start="335:46" pos:end="335:65"><name pos:start="335:46" pos:end="335:55">sub_header</name><operator pos:start="335:56" pos:end="335:57">-&gt;</operator><name pos:start="335:58" pos:end="335:62">rects</name><index pos:start="335:63" pos:end="335:65">[<expr pos:start="335:64" pos:end="335:64"><literal type="number" pos:start="335:64" pos:end="335:64">0</literal></expr>]</index></name><operator pos:start="335:66" pos:end="335:67">-&gt;</operator><name pos:start="335:68" pos:end="335:79"><name pos:start="335:68" pos:end="335:71">pict</name><operator pos:start="335:72" pos:end="335:72">.</operator><name pos:start="335:73" pos:end="335:76">data</name><index pos:start="335:77" pos:end="335:79">[<expr pos:start="335:78" pos:end="335:78"><literal type="number" pos:start="335:78" pos:end="335:78">1</literal></expr>]</index></name></expr></argument>,

                                  <argument pos:start="337:35" pos:end="337:42"><expr pos:start="337:35" pos:end="337:42"><name pos:start="337:35" pos:end="337:42">colormap</name></expr></argument>, <argument pos:start="337:45" pos:end="337:49"><expr pos:start="337:45" pos:end="337:49"><name pos:start="337:45" pos:end="337:49">alpha</name></expr></argument>, <argument pos:start="337:52" pos:end="337:59"><expr pos:start="337:52" pos:end="337:59"><literal type="number" pos:start="337:52" pos:end="337:59">0xffff00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:45"><expr pos:start="341:17" pos:end="341:44"><name pos:start="341:17" pos:end="341:36"><name pos:start="341:17" pos:end="341:26">sub_header</name><operator pos:start="341:27" pos:end="341:28">-&gt;</operator><name pos:start="341:29" pos:end="341:33">rects</name><index pos:start="341:34" pos:end="341:36">[<expr pos:start="341:35" pos:end="341:35"><literal type="number" pos:start="341:35" pos:end="341:35">0</literal></expr>]</index></name><operator pos:start="341:37" pos:end="341:38">-&gt;</operator><name pos:start="341:39" pos:end="341:39">x</name> <operator pos:start="341:41" pos:end="341:41">=</operator> <name pos:start="341:43" pos:end="341:44">x1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="343:17" pos:end="343:45"><expr pos:start="343:17" pos:end="343:44"><name pos:start="343:17" pos:end="343:36"><name pos:start="343:17" pos:end="343:26">sub_header</name><operator pos:start="343:27" pos:end="343:28">-&gt;</operator><name pos:start="343:29" pos:end="343:33">rects</name><index pos:start="343:34" pos:end="343:36">[<expr pos:start="343:35" pos:end="343:35"><literal type="number" pos:start="343:35" pos:end="343:35">0</literal></expr>]</index></name><operator pos:start="343:37" pos:end="343:38">-&gt;</operator><name pos:start="343:39" pos:end="343:39">y</name> <operator pos:start="343:41" pos:end="343:41">=</operator> <name pos:start="343:43" pos:end="343:44">y1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:44"><expr pos:start="345:17" pos:end="345:43"><name pos:start="345:17" pos:end="345:36"><name pos:start="345:17" pos:end="345:26">sub_header</name><operator pos:start="345:27" pos:end="345:28">-&gt;</operator><name pos:start="345:29" pos:end="345:33">rects</name><index pos:start="345:34" pos:end="345:36">[<expr pos:start="345:35" pos:end="345:35"><literal type="number" pos:start="345:35" pos:end="345:35">0</literal></expr>]</index></name><operator pos:start="345:37" pos:end="345:38">-&gt;</operator><name pos:start="345:39" pos:end="345:39">w</name> <operator pos:start="345:41" pos:end="345:41">=</operator> <name pos:start="345:43" pos:end="345:43">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:44"><expr pos:start="347:17" pos:end="347:43"><name pos:start="347:17" pos:end="347:36"><name pos:start="347:17" pos:end="347:26">sub_header</name><operator pos:start="347:27" pos:end="347:28">-&gt;</operator><name pos:start="347:29" pos:end="347:33">rects</name><index pos:start="347:34" pos:end="347:36">[<expr pos:start="347:35" pos:end="347:35"><literal type="number" pos:start="347:35" pos:end="347:35">0</literal></expr>]</index></name><operator pos:start="347:37" pos:end="347:38">-&gt;</operator><name pos:start="347:39" pos:end="347:39">h</name> <operator pos:start="347:41" pos:end="347:41">=</operator> <name pos:start="347:43" pos:end="347:43">h</name></expr>;</expr_stmt>

                <expr_stmt pos:start="349:17" pos:end="349:61"><expr pos:start="349:17" pos:end="349:60"><name pos:start="349:17" pos:end="349:36"><name pos:start="349:17" pos:end="349:26">sub_header</name><operator pos:start="349:27" pos:end="349:28">-&gt;</operator><name pos:start="349:29" pos:end="349:33">rects</name><index pos:start="349:34" pos:end="349:36">[<expr pos:start="349:35" pos:end="349:35"><literal type="number" pos:start="349:35" pos:end="349:35">0</literal></expr>]</index></name><operator pos:start="349:37" pos:end="349:38">-&gt;</operator><name pos:start="349:39" pos:end="349:42">type</name> <operator pos:start="349:44" pos:end="349:44">=</operator> <name pos:start="349:46" pos:end="349:60">SUBTITLE_BITMAP</name></expr>;</expr_stmt>

                <expr_stmt pos:start="351:17" pos:end="351:59"><expr pos:start="351:17" pos:end="351:58"><name pos:start="351:17" pos:end="351:36"><name pos:start="351:17" pos:end="351:26">sub_header</name><operator pos:start="351:27" pos:end="351:28">-&gt;</operator><name pos:start="351:29" pos:end="351:33">rects</name><index pos:start="351:34" pos:end="351:36">[<expr pos:start="351:35" pos:end="351:35"><literal type="number" pos:start="351:35" pos:end="351:35">0</literal></expr>]</index></name><operator pos:start="351:37" pos:end="351:38">-&gt;</operator><name pos:start="351:39" pos:end="351:54"><name pos:start="351:39" pos:end="351:42">pict</name><operator pos:start="351:43" pos:end="351:43">.</operator><name pos:start="351:44" pos:end="351:51">linesize</name><index pos:start="351:52" pos:end="351:54">[<expr pos:start="351:53" pos:end="351:53"><literal type="number" pos:start="351:53" pos:end="351:53">0</literal></expr>]</index></name> <operator pos:start="351:56" pos:end="351:56">=</operator> <name pos:start="351:58" pos:end="351:58">w</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="357:9" pos:end="359:18"><if pos:start="357:9" pos:end="359:18">if <condition pos:start="357:12" pos:end="357:36">(<expr pos:start="357:13" pos:end="357:35"><name pos:start="357:13" pos:end="357:24">next_cmd_pos</name> <operator pos:start="357:26" pos:end="357:27">==</operator> <name pos:start="357:29" pos:end="357:35">cmd_pos</name></expr>)</condition><block type="pseudo" pos:start="359:13" pos:end="359:18"><block_content pos:start="359:13" pos:end="359:18">

            <break pos:start="359:13" pos:end="359:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:31"><expr pos:start="361:9" pos:end="361:30"><name pos:start="361:9" pos:end="361:15">cmd_pos</name> <operator pos:start="361:17" pos:end="361:17">=</operator> <name pos:start="361:19" pos:end="361:30">next_cmd_pos</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="365:5" pos:end="367:23"><if pos:start="365:5" pos:end="367:23">if <condition pos:start="365:8" pos:end="365:34">(<expr pos:start="365:9" pos:end="365:33"><name pos:start="365:9" pos:end="365:29"><name pos:start="365:9" pos:end="365:18">sub_header</name><operator pos:start="365:19" pos:end="365:20">-&gt;</operator><name pos:start="365:21" pos:end="365:29">num_rects</name></name> <operator pos:start="365:31" pos:end="365:31">&gt;</operator> <literal type="number" pos:start="365:33" pos:end="365:33">0</literal></expr>)</condition><block type="pseudo" pos:start="367:9" pos:end="367:23"><block_content pos:start="367:9" pos:end="367:23">

        <return pos:start="367:9" pos:end="367:23">return <expr pos:start="367:16" pos:end="367:22"><name pos:start="367:16" pos:end="367:22">is_menu</name></expr>;</return></block_content></block></if></if_stmt>

 <label pos:start="369:2" pos:end="369:6"><name pos:start="369:2" pos:end="369:5">fail</name>:</label>

    <if_stmt pos:start="371:5" pos:end="387:5"><if pos:start="371:5" pos:end="387:5">if <condition pos:start="371:8" pos:end="371:34">(<expr pos:start="371:9" pos:end="371:33"><name pos:start="371:9" pos:end="371:25"><name pos:start="371:9" pos:end="371:18">sub_header</name><operator pos:start="371:19" pos:end="371:20">-&gt;</operator><name pos:start="371:21" pos:end="371:25">rects</name></name> <operator pos:start="371:27" pos:end="371:28">!=</operator> <name pos:start="371:30" pos:end="371:33">NULL</name></expr>)</condition> <block pos:start="371:36" pos:end="387:5">{<block_content pos:start="373:9" pos:end="385:34">

        <for pos:start="373:9" pos:end="381:9">for <control pos:start="373:13" pos:end="373:51">(<init pos:start="373:14" pos:end="373:19"><expr pos:start="373:14" pos:end="373:18"><name pos:start="373:14" pos:end="373:14">i</name> <operator pos:start="373:16" pos:end="373:16">=</operator> <literal type="number" pos:start="373:18" pos:end="373:18">0</literal></expr>;</init> <condition pos:start="373:21" pos:end="373:46"><expr pos:start="373:21" pos:end="373:45"><name pos:start="373:21" pos:end="373:21">i</name> <operator pos:start="373:23" pos:end="373:23">&lt;</operator> <name pos:start="373:25" pos:end="373:45"><name pos:start="373:25" pos:end="373:34">sub_header</name><operator pos:start="373:35" pos:end="373:36">-&gt;</operator><name pos:start="373:37" pos:end="373:45">num_rects</name></name></expr>;</condition> <incr pos:start="373:48" pos:end="373:50"><expr pos:start="373:48" pos:end="373:50"><name pos:start="373:48" pos:end="373:48">i</name><operator pos:start="373:49" pos:end="373:50">++</operator></expr></incr>)</control> <block pos:start="373:53" pos:end="381:9">{<block_content pos:start="375:13" pos:end="379:44">

            <expr_stmt pos:start="375:13" pos:end="375:58"><expr pos:start="375:13" pos:end="375:57"><call pos:start="375:13" pos:end="375:57"><name pos:start="375:13" pos:end="375:20">av_freep</name><argument_list pos:start="375:21" pos:end="375:57">(<argument pos:start="375:22" pos:end="375:56"><expr pos:start="375:22" pos:end="375:56"><operator pos:start="375:22" pos:end="375:22">&amp;</operator><name pos:start="375:23" pos:end="375:42"><name pos:start="375:23" pos:end="375:32">sub_header</name><operator pos:start="375:33" pos:end="375:34">-&gt;</operator><name pos:start="375:35" pos:end="375:39">rects</name><index pos:start="375:40" pos:end="375:42">[<expr pos:start="375:41" pos:end="375:41"><name pos:start="375:41" pos:end="375:41">i</name></expr>]</index></name><operator pos:start="375:43" pos:end="375:44">-&gt;</operator><name pos:start="375:45" pos:end="375:56"><name pos:start="375:45" pos:end="375:48">pict</name><operator pos:start="375:49" pos:end="375:49">.</operator><name pos:start="375:50" pos:end="375:53">data</name><index pos:start="375:54" pos:end="375:56">[<expr pos:start="375:55" pos:end="375:55"><literal type="number" pos:start="375:55" pos:end="375:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:58"><expr pos:start="377:13" pos:end="377:57"><call pos:start="377:13" pos:end="377:57"><name pos:start="377:13" pos:end="377:20">av_freep</name><argument_list pos:start="377:21" pos:end="377:57">(<argument pos:start="377:22" pos:end="377:56"><expr pos:start="377:22" pos:end="377:56"><operator pos:start="377:22" pos:end="377:22">&amp;</operator><name pos:start="377:23" pos:end="377:42"><name pos:start="377:23" pos:end="377:32">sub_header</name><operator pos:start="377:33" pos:end="377:34">-&gt;</operator><name pos:start="377:35" pos:end="377:39">rects</name><index pos:start="377:40" pos:end="377:42">[<expr pos:start="377:41" pos:end="377:41"><name pos:start="377:41" pos:end="377:41">i</name></expr>]</index></name><operator pos:start="377:43" pos:end="377:44">-&gt;</operator><name pos:start="377:45" pos:end="377:56"><name pos:start="377:45" pos:end="377:48">pict</name><operator pos:start="377:49" pos:end="377:49">.</operator><name pos:start="377:50" pos:end="377:53">data</name><index pos:start="377:54" pos:end="377:56">[<expr pos:start="377:55" pos:end="377:55"><literal type="number" pos:start="377:55" pos:end="377:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:44"><expr pos:start="379:13" pos:end="379:43"><call pos:start="379:13" pos:end="379:43"><name pos:start="379:13" pos:end="379:20">av_freep</name><argument_list pos:start="379:21" pos:end="379:43">(<argument pos:start="379:22" pos:end="379:42"><expr pos:start="379:22" pos:end="379:42"><operator pos:start="379:22" pos:end="379:22">&amp;</operator><name pos:start="379:23" pos:end="379:42"><name pos:start="379:23" pos:end="379:32">sub_header</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:39">rects</name><index pos:start="379:40" pos:end="379:42">[<expr pos:start="379:41" pos:end="379:41"><name pos:start="379:41" pos:end="379:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="383:9" pos:end="383:37"><expr pos:start="383:9" pos:end="383:36"><call pos:start="383:9" pos:end="383:36"><name pos:start="383:9" pos:end="383:16">av_freep</name><argument_list pos:start="383:17" pos:end="383:36">(<argument pos:start="383:18" pos:end="383:35"><expr pos:start="383:18" pos:end="383:35"><operator pos:start="383:18" pos:end="383:18">&amp;</operator><name pos:start="383:19" pos:end="383:35"><name pos:start="383:19" pos:end="383:28">sub_header</name><operator pos:start="383:29" pos:end="383:30">-&gt;</operator><name pos:start="383:31" pos:end="383:35">rects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:34"><expr pos:start="385:9" pos:end="385:33"><name pos:start="385:9" pos:end="385:29"><name pos:start="385:9" pos:end="385:18">sub_header</name><operator pos:start="385:19" pos:end="385:20">-&gt;</operator><name pos:start="385:21" pos:end="385:29">num_rects</name></name> <operator pos:start="385:31" pos:end="385:31">=</operator> <literal type="number" pos:start="385:33" pos:end="385:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="389:5" pos:end="389:14">return <expr pos:start="389:12" pos:end="389:13"><operator pos:start="389:12" pos:end="389:12">-</operator><literal type="number" pos:start="389:13" pos:end="389:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
