<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3155.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:37"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">pc_dimm_memory_plug</name><parameter_list pos:start="1:25" pos:end="3:38">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">DeviceState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">dev</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:67"><decl pos:start="1:44" pos:end="1:67"><type pos:start="1:44" pos:end="1:67"><name pos:start="1:44" pos:end="1:61">MemoryHotplugState</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">hpms</name></decl></parameter>,
                         <parameter pos:start="2:26" pos:end="2:41"><decl pos:start="2:26" pos:end="2:41"><type pos:start="2:26" pos:end="2:41"><name pos:start="2:26" pos:end="2:37">MemoryRegion</name> <modifier pos:start="2:39" pos:end="2:39">*</modifier></type><name pos:start="2:40" pos:end="2:41">mr</name></decl></parameter>, <parameter pos:start="2:44" pos:end="2:57"><decl pos:start="2:44" pos:end="2:57"><type pos:start="2:44" pos:end="2:57"><name pos:start="2:44" pos:end="2:51">uint64_t</name></type> <name pos:start="2:53" pos:end="2:57">align</name></decl></parameter>, <parameter pos:start="2:60" pos:end="2:67"><decl pos:start="2:60" pos:end="2:67"><type pos:start="2:60" pos:end="2:67"><name pos:start="2:60" pos:end="2:63">bool</name></type> <name pos:start="2:65" pos:end="2:67">gap</name></decl></parameter>,
                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:30">Error</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier><modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:37">errp</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="43:37">{<block_content pos:start="5:5" pos:end="43:37">
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">slot</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:56"><decl pos:start="6:5" pos:end="6:55"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:16">MachineState</name> <modifier pos:start="6:18" pos:end="6:18">*</modifier></type><name pos:start="6:19" pos:end="6:25">machine</name> <init pos:start="6:27" pos:end="6:55">= <expr pos:start="6:29" pos:end="6:55"><call pos:start="6:29" pos:end="6:55"><name pos:start="6:29" pos:end="6:35">MACHINE</name><argument_list pos:start="6:36" pos:end="6:55">(<argument pos:start="6:37" pos:end="6:54"><expr pos:start="6:37" pos:end="6:54"><call pos:start="6:37" pos:end="6:54"><name pos:start="6:37" pos:end="6:52">qdev_get_machine</name><argument_list pos:start="6:53" pos:end="6:54">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">PCDIMMDevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">dimm</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><call pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:32">PC_DIMM</name><argument_list pos:start="7:33" pos:end="7:37">(<argument pos:start="7:34" pos:end="7:36"><expr pos:start="7:34" pos:end="7:36"><name pos:start="7:34" pos:end="7:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:28"><decl pos:start="8:5" pos:end="8:27"><type pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:9">Error</name> <modifier pos:start="8:11" pos:end="8:11">*</modifier></type><name pos:start="8:12" pos:end="8:20">local_err</name> <init pos:start="8:22" pos:end="8:27">= <expr pos:start="8:24" pos:end="8:27"><name pos:start="8:24" pos:end="8:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:36">existing_dimms_capacity</name> <init pos:start="9:38" pos:end="9:40">= <expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:18"><decl pos:start="10:5" pos:end="10:17"><type pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:12">uint64_t</name></type> <name pos:start="10:14" pos:end="10:17">addr</name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:80"><expr pos:start="11:5" pos:end="11:79"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:79"><name pos:start="11:12" pos:end="11:34">object_property_get_int</name><argument_list pos:start="11:35" pos:end="11:79">(<argument pos:start="11:36" pos:end="11:47"><expr pos:start="11:36" pos:end="11:47"><call pos:start="11:36" pos:end="11:47"><name pos:start="11:36" pos:end="11:41">OBJECT</name><argument_list pos:start="11:42" pos:end="11:47">(<argument pos:start="11:43" pos:end="11:46"><expr pos:start="11:43" pos:end="11:46"><name pos:start="11:43" pos:end="11:46">dimm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="11:50" pos:end="11:66"><expr pos:start="11:50" pos:end="11:66"><name pos:start="11:50" pos:end="11:66">PC_DIMM_ADDR_PROP</name></expr></argument>, <argument pos:start="11:69" pos:end="11:78"><expr pos:start="11:69" pos:end="11:78"><operator pos:start="11:69" pos:end="11:69">&amp;</operator><name pos:start="11:70" pos:end="11:78">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="43:37"><if pos:start="12:5" pos:end="43:37">if <condition pos:start="12:8" pos:end="12:18">(<expr pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:17">local_err</name></expr>)</condition> <block pos:start="12:20" pos:end="43:37">{<block_content pos:start="13:5" pos:end="43:37">
    <expr_stmt pos:start="13:5" pos:end="16:69"><expr pos:start="13:5" pos:end="16:68"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="16:68"><name pos:start="13:12" pos:end="13:32">pc_dimm_get_free_addr</name><argument_list pos:start="13:33" pos:end="16:68">(<argument pos:start="13:34" pos:end="13:43"><expr pos:start="13:34" pos:end="13:43"><name pos:start="13:34" pos:end="13:43"><name pos:start="13:34" pos:end="13:37">hpms</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:43">base</name></name></expr></argument>,
                                 <argument pos:start="14:34" pos:end="14:62"><expr pos:start="14:34" pos:end="14:62"><call pos:start="14:34" pos:end="14:62"><name pos:start="14:34" pos:end="14:51">memory_region_size</name><argument_list pos:start="14:52" pos:end="14:62">(<argument pos:start="14:53" pos:end="14:61"><expr pos:start="14:53" pos:end="14:61"><operator pos:start="14:53" pos:end="14:53">&amp;</operator><name pos:start="14:54" pos:end="14:61"><name pos:start="14:54" pos:end="14:57">hpms</name><operator pos:start="14:58" pos:end="14:59">-&gt;</operator><name pos:start="14:60" pos:end="14:61">mr</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                 <argument pos:start="15:34" pos:end="15:53"><expr pos:start="15:34" pos:end="15:53"><ternary pos:start="15:34" pos:end="15:53"><condition pos:start="15:34" pos:end="15:40"><expr pos:start="15:34" pos:end="15:38"><operator pos:start="15:34" pos:end="15:34">!</operator><name pos:start="15:35" pos:end="15:38">addr</name></expr> ?</condition><then pos:start="15:42" pos:end="15:45"> <expr pos:start="15:42" pos:end="15:45"><name pos:start="15:42" pos:end="15:45">NULL</name></expr> </then><else pos:start="15:47" pos:end="15:53">: <expr pos:start="15:49" pos:end="15:53"><operator pos:start="15:49" pos:end="15:49">&amp;</operator><name pos:start="15:50" pos:end="15:53">addr</name></expr></else></ternary></expr></argument>, <argument pos:start="15:56" pos:end="15:60"><expr pos:start="15:56" pos:end="15:60"><name pos:start="15:56" pos:end="15:60">align</name></expr></argument>, <argument pos:start="15:63" pos:end="15:65"><expr pos:start="15:63" pos:end="15:65"><name pos:start="15:63" pos:end="15:65">gap</name></expr></argument>,
                                 <argument pos:start="16:34" pos:end="16:55"><expr pos:start="16:34" pos:end="16:55"><call pos:start="16:34" pos:end="16:55"><name pos:start="16:34" pos:end="16:51">memory_region_size</name><argument_list pos:start="16:52" pos:end="16:55">(<argument pos:start="16:53" pos:end="16:54"><expr pos:start="16:53" pos:end="16:54"><name pos:start="16:53" pos:end="16:54">mr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="16:58" pos:end="16:67"><expr pos:start="16:58" pos:end="16:67"><operator pos:start="16:58" pos:end="16:58">&amp;</operator><name pos:start="16:59" pos:end="16:67">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="43:37"><if pos:start="17:5" pos:end="43:37">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:17">local_err</name></expr>)</condition> <block pos:start="17:20" pos:end="43:37">{<block_content pos:start="18:5" pos:end="43:37">
    <expr_stmt pos:start="18:5" pos:end="18:69"><expr pos:start="18:5" pos:end="18:68"><name pos:start="18:5" pos:end="18:27">existing_dimms_capacity</name> <operator pos:start="18:29" pos:end="18:29">=</operator> <call pos:start="18:31" pos:end="18:68"><name pos:start="18:31" pos:end="18:56">pc_existing_dimms_capacity</name><argument_list pos:start="18:57" pos:end="18:68">(<argument pos:start="18:58" pos:end="18:67"><expr pos:start="18:58" pos:end="18:67"><operator pos:start="18:58" pos:end="18:58">&amp;</operator><name pos:start="18:59" pos:end="18:67">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="19:5" pos:end="43:37"><if pos:start="19:5" pos:end="43:37">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:17">local_err</name></expr>)</condition> <block pos:start="19:20" pos:end="43:37">{<block_content pos:start="20:5" pos:end="43:37">
    <if_stmt pos:start="20:5" pos:end="43:37"><if pos:start="20:5" pos:end="43:37">if <condition pos:start="20:8" pos:end="21:49">(<expr pos:start="20:9" pos:end="21:48"><name pos:start="20:9" pos:end="20:31">existing_dimms_capacity</name> <operator pos:start="20:33" pos:end="20:33">+</operator> <call pos:start="20:35" pos:end="20:56"><name pos:start="20:35" pos:end="20:52">memory_region_size</name><argument_list pos:start="20:53" pos:end="20:56">(<argument pos:start="20:54" pos:end="20:55"><expr pos:start="20:54" pos:end="20:55"><name pos:start="20:54" pos:end="20:55">mr</name></expr></argument>)</argument_list></call> <operator pos:start="20:58" pos:end="20:58">&gt;</operator>
        <name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:15">machine</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:28">maxram_size</name></name> <operator pos:start="21:30" pos:end="21:30">-</operator> <name pos:start="21:32" pos:end="21:48"><name pos:start="21:32" pos:end="21:38">machine</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:48">ram_size</name></name></expr>)</condition> <block pos:start="21:51" pos:end="43:37">{<block_content pos:start="22:9" pos:end="43:37">
        <expr_stmt pos:start="22:9" pos:end="25:61"><expr pos:start="22:9" pos:end="25:60"><call pos:start="22:9" pos:end="25:60"><name pos:start="22:9" pos:end="22:18">error_setg</name><argument_list pos:start="22:19" pos:end="25:60">(<argument pos:start="22:20" pos:end="22:29"><expr pos:start="22:20" pos:end="22:29"><operator pos:start="22:20" pos:end="22:20">&amp;</operator><name pos:start="22:21" pos:end="22:29">local_err</name></expr></argument>, <argument pos:start="22:32" pos:end="23:67"><expr pos:start="22:32" pos:end="23:67"><literal type="string" pos:start="22:32" pos:end="22:64">"not enough space, currently 0x%"</literal> <name pos:start="22:66" pos:end="22:71">PRIx64</name>
                   <literal type="string" pos:start="23:20" pos:end="23:54">" in use of total hot pluggable 0x"</literal> <name pos:start="23:56" pos:end="23:67">RAM_ADDR_FMT</name></expr></argument>,
                   <argument pos:start="24:20" pos:end="24:42"><expr pos:start="24:20" pos:end="24:42"><name pos:start="24:20" pos:end="24:42">existing_dimms_capacity</name></expr></argument>,
                   <argument pos:start="25:20" pos:end="25:59"><expr pos:start="25:20" pos:end="25:59"><name pos:start="25:20" pos:end="25:39"><name pos:start="25:20" pos:end="25:26">machine</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:39">maxram_size</name></name> <operator pos:start="25:41" pos:end="25:41">-</operator> <name pos:start="25:43" pos:end="25:59"><name pos:start="25:43" pos:end="25:49">machine</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:59">ram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:78"><expr pos:start="26:5" pos:end="26:77"><call pos:start="26:5" pos:end="26:77"><name pos:start="26:5" pos:end="26:27">object_property_set_int</name><argument_list pos:start="26:28" pos:end="26:77">(<argument pos:start="26:29" pos:end="26:39"><expr pos:start="26:29" pos:end="26:39"><call pos:start="26:29" pos:end="26:39"><name pos:start="26:29" pos:end="26:34">OBJECT</name><argument_list pos:start="26:35" pos:end="26:39">(<argument pos:start="26:36" pos:end="26:38"><expr pos:start="26:36" pos:end="26:38"><name pos:start="26:36" pos:end="26:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="26:42" pos:end="26:45"><expr pos:start="26:42" pos:end="26:45"><name pos:start="26:42" pos:end="26:45">addr</name></expr></argument>, <argument pos:start="26:48" pos:end="26:64"><expr pos:start="26:48" pos:end="26:64"><name pos:start="26:48" pos:end="26:64">PC_DIMM_ADDR_PROP</name></expr></argument>, <argument pos:start="26:67" pos:end="26:76"><expr pos:start="26:67" pos:end="26:76"><operator pos:start="26:67" pos:end="26:67">&amp;</operator><name pos:start="26:68" pos:end="26:76">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="43:37"><if pos:start="27:5" pos:end="43:37">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:17">local_err</name></expr>)</condition> <block pos:start="27:20" pos:end="43:37">{<block_content pos:start="28:5" pos:end="43:37">
    <expr_stmt pos:start="28:5" pos:end="28:45"><expr pos:start="28:5" pos:end="28:44"><call pos:start="28:5" pos:end="28:44"><name pos:start="28:5" pos:end="28:38">trace_mhp_pc_dimm_assigned_address</name><argument_list pos:start="28:39" pos:end="28:44">(<argument pos:start="28:40" pos:end="28:43"><expr pos:start="28:40" pos:end="28:43"><name pos:start="28:40" pos:end="28:43">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:79"><expr pos:start="29:5" pos:end="29:78"><name pos:start="29:5" pos:end="29:8">slot</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:78"><name pos:start="29:12" pos:end="29:34">object_property_get_int</name><argument_list pos:start="29:35" pos:end="29:78">(<argument pos:start="29:36" pos:end="29:46"><expr pos:start="29:36" pos:end="29:46"><call pos:start="29:36" pos:end="29:46"><name pos:start="29:36" pos:end="29:41">OBJECT</name><argument_list pos:start="29:42" pos:end="29:46">(<argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:49" pos:end="29:65"><expr pos:start="29:49" pos:end="29:65"><name pos:start="29:49" pos:end="29:65">PC_DIMM_SLOT_PROP</name></expr></argument>, <argument pos:start="29:68" pos:end="29:77"><expr pos:start="29:68" pos:end="29:77"><operator pos:start="29:68" pos:end="29:68">&amp;</operator><name pos:start="29:69" pos:end="29:77">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="30:5" pos:end="43:37"><if pos:start="30:5" pos:end="43:37">if <condition pos:start="30:8" pos:end="30:18">(<expr pos:start="30:9" pos:end="30:17"><name pos:start="30:9" pos:end="30:17">local_err</name></expr>)</condition> <block pos:start="30:20" pos:end="43:37">{<block_content pos:start="31:5" pos:end="43:37">
    <expr_stmt pos:start="31:5" pos:end="32:65"><expr pos:start="31:5" pos:end="32:64"><name pos:start="31:5" pos:end="31:8">slot</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="32:64"><name pos:start="31:12" pos:end="31:32">pc_dimm_get_free_slot</name><argument_list pos:start="31:33" pos:end="32:64">(<argument pos:start="31:34" pos:end="31:79"><expr pos:start="31:34" pos:end="31:79"><ternary pos:start="31:34" pos:end="31:79"><condition pos:start="31:34" pos:end="31:66"><expr pos:start="31:34" pos:end="31:64"><name pos:start="31:34" pos:end="31:37">slot</name> <operator pos:start="31:39" pos:end="31:40">==</operator> <name pos:start="31:42" pos:end="31:64">PC_DIMM_UNASSIGNED_SLOT</name></expr> ?</condition><then pos:start="31:68" pos:end="31:71"> <expr pos:start="31:68" pos:end="31:71"><name pos:start="31:68" pos:end="31:71">NULL</name></expr> </then><else pos:start="31:73" pos:end="31:79">: <expr pos:start="31:75" pos:end="31:79"><operator pos:start="31:75" pos:end="31:75">&amp;</operator><name pos:start="31:76" pos:end="31:79">slot</name></expr></else></ternary></expr></argument>,
                                 <argument pos:start="32:34" pos:end="32:51"><expr pos:start="32:34" pos:end="32:51"><name pos:start="32:34" pos:end="32:51"><name pos:start="32:34" pos:end="32:40">machine</name><operator pos:start="32:41" pos:end="32:42">-&gt;</operator><name pos:start="32:43" pos:end="32:51">ram_slots</name></name></expr></argument>, <argument pos:start="32:54" pos:end="32:63"><expr pos:start="32:54" pos:end="32:63"><operator pos:start="32:54" pos:end="32:54">&amp;</operator><name pos:start="32:55" pos:end="32:63">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="33:5" pos:end="43:37"><if pos:start="33:5" pos:end="43:37">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">local_err</name></expr>)</condition> <block pos:start="33:20" pos:end="43:37">{<block_content pos:start="34:5" pos:end="43:37">
    <expr_stmt pos:start="34:5" pos:end="34:78"><expr pos:start="34:5" pos:end="34:77"><call pos:start="34:5" pos:end="34:77"><name pos:start="34:5" pos:end="34:27">object_property_set_int</name><argument_list pos:start="34:28" pos:end="34:77">(<argument pos:start="34:29" pos:end="34:39"><expr pos:start="34:29" pos:end="34:39"><call pos:start="34:29" pos:end="34:39"><name pos:start="34:29" pos:end="34:34">OBJECT</name><argument_list pos:start="34:35" pos:end="34:39">(<argument pos:start="34:36" pos:end="34:38"><expr pos:start="34:36" pos:end="34:38"><name pos:start="34:36" pos:end="34:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="34:42" pos:end="34:45"><expr pos:start="34:42" pos:end="34:45"><name pos:start="34:42" pos:end="34:45">slot</name></expr></argument>, <argument pos:start="34:48" pos:end="34:64"><expr pos:start="34:48" pos:end="34:64"><name pos:start="34:48" pos:end="34:64">PC_DIMM_SLOT_PROP</name></expr></argument>, <argument pos:start="34:67" pos:end="34:76"><expr pos:start="34:67" pos:end="34:76"><operator pos:start="34:67" pos:end="34:67">&amp;</operator><name pos:start="34:68" pos:end="34:76">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="35:5" pos:end="43:37"><if pos:start="35:5" pos:end="43:37">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:17">local_err</name></expr>)</condition> <block pos:start="35:20" pos:end="43:37">{<block_content pos:start="36:5" pos:end="43:37">
    <expr_stmt pos:start="36:5" pos:end="36:42"><expr pos:start="36:5" pos:end="36:41"><call pos:start="36:5" pos:end="36:41"><name pos:start="36:5" pos:end="36:35">trace_mhp_pc_dimm_assigned_slot</name><argument_list pos:start="36:36" pos:end="36:41">(<argument pos:start="36:37" pos:end="36:40"><expr pos:start="36:37" pos:end="36:40"><name pos:start="36:37" pos:end="36:40">slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="37:5" pos:end="43:37"><if pos:start="37:5" pos:end="43:37">if <condition pos:start="37:8" pos:end="37:53">(<expr pos:start="37:9" pos:end="37:52"><call pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:19">kvm_enabled</name><argument_list pos:start="37:20" pos:end="37:21">()</argument_list></call> <operator pos:start="37:23" pos:end="37:24">&amp;&amp;</operator> <operator pos:start="37:26" pos:end="37:26">!</operator><call pos:start="37:27" pos:end="37:52"><name pos:start="37:27" pos:end="37:43">kvm_has_free_slot</name><argument_list pos:start="37:44" pos:end="37:52">(<argument pos:start="37:45" pos:end="37:51"><expr pos:start="37:45" pos:end="37:51"><name pos:start="37:45" pos:end="37:51">machine</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:55" pos:end="43:37">{<block_content pos:start="38:9" pos:end="43:37">
        <expr_stmt pos:start="38:9" pos:end="38:75"><expr pos:start="38:9" pos:end="38:74"><call pos:start="38:9" pos:end="38:74"><name pos:start="38:9" pos:end="38:18">error_setg</name><argument_list pos:start="38:19" pos:end="38:74">(<argument pos:start="38:20" pos:end="38:29"><expr pos:start="38:20" pos:end="38:29"><operator pos:start="38:20" pos:end="38:20">&amp;</operator><name pos:start="38:21" pos:end="38:29">local_err</name></expr></argument>, <argument pos:start="38:32" pos:end="38:73"><expr pos:start="38:32" pos:end="38:73"><literal type="string" pos:start="38:32" pos:end="38:73">"hypervisor has no free memory slots left"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:66"><expr pos:start="39:5" pos:end="39:65"><call pos:start="39:5" pos:end="39:65"><name pos:start="39:5" pos:end="39:31">memory_region_add_subregion</name><argument_list pos:start="39:32" pos:end="39:65">(<argument pos:start="39:33" pos:end="39:41"><expr pos:start="39:33" pos:end="39:41"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:41"><name pos:start="39:34" pos:end="39:37">hpms</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:41">mr</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:60"><expr pos:start="39:44" pos:end="39:60"><name pos:start="39:44" pos:end="39:47">addr</name> <operator pos:start="39:49" pos:end="39:49">-</operator> <name pos:start="39:51" pos:end="39:60"><name pos:start="39:51" pos:end="39:54">hpms</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:60">base</name></name></expr></argument>, <argument pos:start="39:63" pos:end="39:64"><expr pos:start="39:63" pos:end="39:64"><name pos:start="39:63" pos:end="39:64">mr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:34"><expr pos:start="40:5" pos:end="40:33"><call pos:start="40:5" pos:end="40:33"><name pos:start="40:5" pos:end="40:24">vmstate_register_ram</name><argument_list pos:start="40:25" pos:end="40:33">(<argument pos:start="40:26" pos:end="40:27"><expr pos:start="40:26" pos:end="40:27"><name pos:start="40:26" pos:end="40:27">mr</name></expr></argument>, <argument pos:start="40:30" pos:end="40:32"><expr pos:start="40:30" pos:end="40:32"><name pos:start="40:30" pos:end="40:32">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:67"><expr pos:start="41:5" pos:end="41:66"><call pos:start="41:5" pos:end="41:66"><name pos:start="41:5" pos:end="41:24">numa_set_mem_node_id</name><argument_list pos:start="41:25" pos:end="41:66">(<argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><name pos:start="41:26" pos:end="41:29">addr</name></expr></argument>, <argument pos:start="41:32" pos:end="41:53"><expr pos:start="41:32" pos:end="41:53"><call pos:start="41:32" pos:end="41:53"><name pos:start="41:32" pos:end="41:49">memory_region_size</name><argument_list pos:start="41:50" pos:end="41:53">(<argument pos:start="41:51" pos:end="41:52"><expr pos:start="41:51" pos:end="41:52"><name pos:start="41:51" pos:end="41:52">mr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:56" pos:end="41:65"><expr pos:start="41:56" pos:end="41:65"><name pos:start="41:56" pos:end="41:65"><name pos:start="41:56" pos:end="41:59">dimm</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:65">node</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="42:1" pos:end="42:4"><name pos:start="42:1" pos:end="42:3">out</name>:</label>
    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><call pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:19">error_propagate</name><argument_list pos:start="43:20" pos:end="43:36">(<argument pos:start="43:21" pos:end="43:24"><expr pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:24">errp</name></expr></argument>, <argument pos:start="43:27" pos:end="43:35"><expr pos:start="43:27" pos:end="43:35"><name pos:start="43:27" pos:end="43:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
