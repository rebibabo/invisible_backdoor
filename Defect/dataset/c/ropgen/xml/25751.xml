<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25751.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">get_pointer</name><parameter_list pos:start="1:24" pos:end="5:55">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:30">Object</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">obj</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:47"><decl pos:start="1:38" pos:end="1:47"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:44">Visitor</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">v</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:57">Property</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">prop</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:55"><function_decl pos:start="3:25" pos:end="3:55"><type pos:start="3:25" pos:end="3:36"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type>(<modifier pos:start="3:38" pos:end="3:38">*</modifier><name pos:start="3:39" pos:end="3:43">print</name>)<parameter_list pos:start="3:45" pos:end="3:55">(<parameter pos:start="3:46" pos:end="3:54"><decl pos:start="3:46" pos:end="3:54"><type pos:start="3:46" pos:end="3:51"><name pos:start="3:46" pos:end="3:49">void</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">ptr</name></decl></parameter>)</parameter_list></function_decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:40"><decl pos:start="5:25" pos:end="5:40"><type pos:start="5:25" pos:end="5:40"><specifier pos:start="5:25" pos:end="5:29">const</specifier> <name pos:start="5:31" pos:end="5:34">char</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:40">name</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:47">Error</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier><modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="21:1">{<block_content pos:start="9:5" pos:end="19:38">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name> <init pos:start="9:22" pos:end="9:34">= <expr pos:start="9:24" pos:end="9:34"><call pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:29">DEVICE</name><argument_list pos:start="9:30" pos:end="9:34">(<argument pos:start="9:31" pos:end="9:33"><expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier><modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">ptr</name> <init pos:start="11:16" pos:end="11:45">= <expr pos:start="11:18" pos:end="11:45"><call pos:start="11:18" pos:end="11:45"><name pos:start="11:18" pos:end="11:34">qdev_get_prop_ptr</name><argument_list pos:start="11:35" pos:end="11:45">(<argument pos:start="11:36" pos:end="11:38"><expr pos:start="11:36" pos:end="11:38"><name pos:start="11:36" pos:end="11:38">dev</name></expr></argument>, <argument pos:start="11:41" pos:end="11:44"><expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">prop</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:11">p</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:5">p</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:13">char</name> <operator pos:start="17:15" pos:end="17:15">*</operator><operator pos:start="17:16" pos:end="17:16">)</operator> <operator pos:start="17:18" pos:end="17:18">(</operator><ternary pos:start="17:19" pos:end="17:41"><condition pos:start="17:19" pos:end="17:24"><expr pos:start="17:19" pos:end="17:22"><operator pos:start="17:19" pos:end="17:19">*</operator><name pos:start="17:20" pos:end="17:22">ptr</name></expr> ?</condition><then pos:start="17:26" pos:end="17:36"> <expr pos:start="17:26" pos:end="17:36"><call pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:30">print</name><argument_list pos:start="17:31" pos:end="17:36">(<argument pos:start="17:32" pos:end="17:35"><expr pos:start="17:32" pos:end="17:35"><operator pos:start="17:32" pos:end="17:32">*</operator><name pos:start="17:33" pos:end="17:35">ptr</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="17:38" pos:end="17:41">: <expr pos:start="17:40" pos:end="17:41"><literal type="string" pos:start="17:40" pos:end="17:41">""</literal></expr></else></ternary><operator pos:start="17:42" pos:end="17:42">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:18">visit_type_str</name><argument_list pos:start="19:19" pos:end="19:37">(<argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">v</name></expr></argument>, <argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:24">p</name></expr></argument>, <argument pos:start="19:27" pos:end="19:30"><expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">name</name></expr></argument>, <argument pos:start="19:33" pos:end="19:36"><expr pos:start="19:33" pos:end="19:36"><name pos:start="19:33" pos:end="19:36">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
