<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21966.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">ivshmem_setup_interrupts</name><parameter_list pos:start="1:36" pos:end="1:52">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:48">IVShmemState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:13">

    <comment type="block" pos:start="5:5" pos:end="5:62">/* allocate QEMU callback data for receiving interrupts */</comment>

    <expr_stmt pos:start="7:5" pos:end="7:63"><expr pos:start="7:5" pos:end="7:62"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:18">msi_vectors</name></name> <operator pos:start="7:20" pos:end="7:20">=</operator> <call pos:start="7:22" pos:end="7:62"><name pos:start="7:22" pos:end="7:30">g_malloc0</name><argument_list pos:start="7:31" pos:end="7:62">(<argument pos:start="7:32" pos:end="7:61"><expr pos:start="7:32" pos:end="7:61"><name pos:start="7:32" pos:end="7:41"><name pos:start="7:32" pos:end="7:32">s</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:41">vectors</name></name> <operator pos:start="7:43" pos:end="7:43">*</operator> <sizeof pos:start="7:45" pos:end="7:61">sizeof<argument_list pos:start="7:51" pos:end="7:61">(<argument pos:start="7:52" pos:end="7:60"><expr pos:start="7:52" pos:end="7:60"><name pos:start="7:52" pos:end="7:60">MSIVector</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:44">(<expr pos:start="11:9" pos:end="11:43"><call pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:27">ivshmem_has_feature</name><argument_list pos:start="11:28" pos:end="11:43">(<argument pos:start="11:29" pos:end="11:29"><expr pos:start="11:29" pos:end="11:29"><name pos:start="11:29" pos:end="11:29">s</name></expr></argument>, <argument pos:start="11:32" pos:end="11:42"><expr pos:start="11:32" pos:end="11:42"><name pos:start="11:32" pos:end="11:42">IVSHMEM_MSI</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:46" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:35">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:66">(<expr pos:start="13:13" pos:end="13:65"><call pos:start="13:13" pos:end="13:65"><name pos:start="13:13" pos:end="13:35">msix_init_exclusive_bar</name><argument_list pos:start="13:36" pos:end="13:65">(<argument pos:start="13:37" pos:end="13:49"><expr pos:start="13:37" pos:end="13:49"><call pos:start="13:37" pos:end="13:49"><name pos:start="13:37" pos:end="13:46">PCI_DEVICE</name><argument_list pos:start="13:47" pos:end="13:49">(<argument pos:start="13:48" pos:end="13:48"><expr pos:start="13:48" pos:end="13:48"><name pos:start="13:48" pos:end="13:48">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:52" pos:end="13:61"><expr pos:start="13:52" pos:end="13:61"><name pos:start="13:52" pos:end="13:61"><name pos:start="13:52" pos:end="13:52">s</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:61">vectors</name></name></expr></argument>, <argument pos:start="13:64" pos:end="13:64"><expr pos:start="13:64" pos:end="13:64"><literal type="number" pos:start="13:64" pos:end="13:64">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:68" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:22">

            <return pos:start="15:13" pos:end="15:22">return <expr pos:start="15:20" pos:end="15:21"><operator pos:start="15:20" pos:end="15:20">-</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:71"><expr pos:start="21:9" pos:end="21:70"><call pos:start="21:9" pos:end="21:70"><name pos:start="21:9" pos:end="21:23">IVSHMEM_DPRINTF</name><argument_list pos:start="21:24" pos:end="21:70">(<argument pos:start="21:25" pos:end="21:57"><expr pos:start="21:25" pos:end="21:57"><literal type="string" pos:start="21:25" pos:end="21:57">"msix initialized (%d vectors)\n"</literal></expr></argument>, <argument pos:start="21:60" pos:end="21:69"><expr pos:start="21:60" pos:end="21:69"><name pos:start="21:60" pos:end="21:69"><name pos:start="21:60" pos:end="21:60">s</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:69">vectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:31">ivshmem_msix_vector_use</name><argument_list pos:start="23:32" pos:end="23:34">(<argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><name pos:start="23:33" pos:end="23:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
