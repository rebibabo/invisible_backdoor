<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10782.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stss</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:69">MOV_atom_t</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name> <init pos:start="7:26" pos:end="7:60">= <expr pos:start="7:28" pos:end="7:60"><operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="7:44">MOVStreamContext</name> <operator pos:start="7:46" pos:end="7:46">*</operator><operator pos:start="7:47" pos:end="7:47">)</operator><name pos:start="7:48" pos:end="7:60"><name pos:start="7:48" pos:end="7:49">st</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:60">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">entries</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><call pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:14">print_atom</name><argument_list pos:start="13:15" pos:end="13:28">(<argument pos:start="13:16" pos:end="13:21"><expr pos:start="13:16" pos:end="13:21"><literal type="string" pos:start="13:16" pos:end="13:21">"stss"</literal></expr></argument>, <argument pos:start="13:24" pos:end="13:27"><expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">atom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><call pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">get_byte</name><argument_list pos:start="17:13" pos:end="17:16">(<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:19" pos:end="17:31">/* version */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><call pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">get_byte</name><argument_list pos:start="19:13" pos:end="19:16">(<argument pos:start="19:14" pos:end="19:15"><expr pos:start="19:14" pos:end="19:15"><name pos:start="19:14" pos:end="19:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="19:19" pos:end="19:31"><expr pos:start="19:19" pos:end="19:30"><call pos:start="19:19" pos:end="19:30"><name pos:start="19:19" pos:end="19:26">get_byte</name><argument_list pos:start="19:27" pos:end="19:30">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="19:33" pos:end="19:45"><expr pos:start="19:33" pos:end="19:44"><call pos:start="19:33" pos:end="19:44"><name pos:start="19:33" pos:end="19:40">get_byte</name><argument_list pos:start="19:41" pos:end="19:44">(<argument pos:start="19:42" pos:end="19:43"><expr pos:start="19:42" pos:end="19:43"><name pos:start="19:42" pos:end="19:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:47" pos:end="19:57">/* flags */</comment>



    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:11">entries</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:22">get_be32</name><argument_list pos:start="23:23" pos:end="23:26">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:6">sc</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:22">keyframe_count</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:32">entries</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="27:1" pos:end="27:12">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:76"><call pos:start="29:5" pos:end="29:76"><name pos:start="29:5" pos:end="29:10">av_log</name><argument_list pos:start="29:11" pos:end="29:76">(<argument pos:start="29:12" pos:end="29:15"><expr pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:15">NULL</name></expr></argument>, <argument pos:start="29:18" pos:end="29:29"><expr pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:29">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="29:32" pos:end="29:55"><expr pos:start="29:32" pos:end="29:55"><literal type="string" pos:start="29:32" pos:end="29:55">"keyframe_count = %ld\n"</literal></expr></argument>, <argument pos:start="29:58" pos:end="29:75"><expr pos:start="29:58" pos:end="29:75"><name pos:start="29:58" pos:end="29:75"><name pos:start="29:58" pos:end="29:59">sc</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:75">keyframe_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:6">sc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:17">keyframes</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:25">long</name><operator pos:start="33:26" pos:end="33:26">*</operator><operator pos:start="33:27" pos:end="33:27">)</operator> <call pos:start="33:29" pos:end="33:61"><name pos:start="33:29" pos:end="33:37">av_malloc</name><argument_list pos:start="33:38" pos:end="33:61">(<argument pos:start="33:39" pos:end="33:60"><expr pos:start="33:39" pos:end="33:60"><name pos:start="33:39" pos:end="33:45">entries</name> <operator pos:start="33:47" pos:end="33:47">*</operator> <sizeof pos:start="33:49" pos:end="33:60">sizeof<argument_list pos:start="33:55" pos:end="33:60">(<argument pos:start="33:56" pos:end="33:59"><expr pos:start="33:56" pos:end="33:59"><name pos:start="33:56" pos:end="33:59">long</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:11">sc</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:22">keyframes</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="39:5" pos:end="49:5">for<control pos:start="39:8" pos:end="39:28">(<init pos:start="39:9" pos:end="39:12"><expr pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:9">i</name><operator pos:start="39:10" pos:end="39:10">=</operator><literal type="number" pos:start="39:11" pos:end="39:11">0</literal></expr>;</init> <condition pos:start="39:14" pos:end="39:23"><expr pos:start="39:14" pos:end="39:22"><name pos:start="39:14" pos:end="39:14">i</name><operator pos:start="39:15" pos:end="39:15">&lt;</operator><name pos:start="39:16" pos:end="39:22">entries</name></expr>;</condition> <incr pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:25">i</name><operator pos:start="39:26" pos:end="39:27">++</operator></expr></incr>)</control> <block pos:start="39:30" pos:end="49:5">{<block_content pos:start="41:9" pos:end="48:0">

        <expr_stmt pos:start="41:9" pos:end="48:0"><expr pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:10">sc</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:21">keyframes</name><index pos:start="41:22" pos:end="41:24">[<expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">i</name></expr>]</index></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:39"><name pos:start="41:28" pos:end="41:35">get_be32</name><argument_list pos:start="41:36" pos:end="41:39">(<argument pos:start="41:37" pos:end="41:38"><expr pos:start="41:37" pos:end="41:38"><name pos:start="41:37" pos:end="41:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="43:1" pos:end="43:12">#<cpp:directive pos:start="43:2" pos:end="43:6">ifdef</cpp:directive> <name pos:start="43:8" pos:end="43:12">DEBUG</name></cpp:ifdef>

<comment type="block" pos:start="45:1" pos:end="45:79">/*        av_log(NULL, AV_LOG_DEBUG, "keyframes[]=%ld\n", sc-&gt;keyframes[i]); */</comment>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
