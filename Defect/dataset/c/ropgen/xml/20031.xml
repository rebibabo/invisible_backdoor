<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20031.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:36">gen_iwmmxt_address</name><parameter_list pos:start="1:37" pos:end="1:79">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:67"><decl pos:start="1:55" pos:end="1:67"><type pos:start="1:55" pos:end="1:67"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:67">insn</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:78"><decl pos:start="1:70" pos:end="1:78"><type pos:start="1:70" pos:end="1:78"><name pos:start="1:70" pos:end="1:73">TCGv</name></type> <name pos:start="1:75" pos:end="1:78">dest</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:12">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:6">rd</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:14">insn</name> <operator pos:start="13:16" pos:end="13:17">&gt;&gt;</operator> <literal type="number" pos:start="13:19" pos:end="13:20">16</literal><operator pos:start="13:21" pos:end="13:21">)</operator> <operator pos:start="13:23" pos:end="13:23">&amp;</operator> <literal type="number" pos:start="13:25" pos:end="13:27">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:7">tmp</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:25"><name pos:start="15:11" pos:end="15:18">load_reg</name><argument_list pos:start="15:19" pos:end="15:25">(<argument pos:start="15:20" pos:end="15:20"><expr pos:start="15:20" pos:end="15:20"><name pos:start="15:20" pos:end="15:20">s</name></expr></argument>, <argument pos:start="15:23" pos:end="15:24"><expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:10">offset</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:18">insn</name> <operator pos:start="19:20" pos:end="19:20">&amp;</operator> <literal type="number" pos:start="19:22" pos:end="19:25">0xff</literal><operator pos:start="19:26" pos:end="19:26">)</operator> <operator pos:start="19:28" pos:end="19:29">&lt;&lt;</operator> <operator pos:start="19:31" pos:end="19:31">(</operator><operator pos:start="19:32" pos:end="19:32">(</operator><name pos:start="19:33" pos:end="19:36">insn</name> <operator pos:start="19:38" pos:end="19:39">&gt;&gt;</operator> <literal type="number" pos:start="19:41" pos:end="19:41">7</literal><operator pos:start="19:42" pos:end="19:42">)</operator> <operator pos:start="19:44" pos:end="19:44">&amp;</operator> <literal type="number" pos:start="19:46" pos:end="19:46">2</literal><operator pos:start="19:47" pos:end="19:47">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="61:17"><if pos:start="21:5" pos:end="43:5">if <condition pos:start="21:8" pos:end="21:25">(<expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:12">insn</name> <operator pos:start="21:14" pos:end="21:14">&amp;</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal> <operator pos:start="21:19" pos:end="21:20">&lt;&lt;</operator> <literal type="number" pos:start="21:22" pos:end="21:23">24</literal><operator pos:start="21:24" pos:end="21:24">)</operator></expr>)</condition> <block pos:start="21:27" pos:end="43:5">{<block_content pos:start="25:9" pos:end="41:26">

        <comment type="block" pos:start="23:9" pos:end="23:25">/* Pre indexed */</comment>

        <if_stmt pos:start="25:9" pos:end="31:48"><if pos:start="25:9" pos:end="27:47">if <condition pos:start="25:12" pos:end="25:29">(<expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:16">insn</name> <operator pos:start="25:18" pos:end="25:18">&amp;</operator> <operator pos:start="25:20" pos:end="25:20">(</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal> <operator pos:start="25:23" pos:end="25:24">&lt;&lt;</operator> <literal type="number" pos:start="25:26" pos:end="25:27">23</literal><operator pos:start="25:28" pos:end="25:28">)</operator></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:47"><block_content pos:start="27:13" pos:end="27:47">

            <expr_stmt pos:start="27:13" pos:end="27:47"><expr pos:start="27:13" pos:end="27:46"><call pos:start="27:13" pos:end="27:46"><name pos:start="27:13" pos:end="27:28">tcg_gen_addi_i32</name><argument_list pos:start="27:29" pos:end="27:46">(<argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">tmp</name></expr></argument>, <argument pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:37">tmp</name></expr></argument>, <argument pos:start="27:40" pos:end="27:45"><expr pos:start="27:40" pos:end="27:45"><name pos:start="27:40" pos:end="27:45">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="29:9" pos:end="31:48">else<block type="pseudo" pos:start="31:13" pos:end="31:48"><block_content pos:start="31:13" pos:end="31:48">

            <expr_stmt pos:start="31:13" pos:end="31:48"><expr pos:start="31:13" pos:end="31:47"><call pos:start="31:13" pos:end="31:47"><name pos:start="31:13" pos:end="31:28">tcg_gen_addi_i32</name><argument_list pos:start="31:29" pos:end="31:47">(<argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">tmp</name></expr></argument>, <argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">tmp</name></expr></argument>, <argument pos:start="31:40" pos:end="31:46"><expr pos:start="31:40" pos:end="31:46"><operator pos:start="31:40" pos:end="31:40">-</operator><name pos:start="31:41" pos:end="31:46">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><call pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:23">tcg_gen_mov_i32</name><argument_list pos:start="33:24" pos:end="33:34">(<argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:28">dest</name></expr></argument>, <argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:26"><if pos:start="35:9" pos:end="37:34">if <condition pos:start="35:12" pos:end="35:29">(<expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:16">insn</name> <operator pos:start="35:18" pos:end="35:18">&amp;</operator> <operator pos:start="35:20" pos:end="35:20">(</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal> <operator pos:start="35:23" pos:end="35:24">&lt;&lt;</operator> <literal type="number" pos:start="35:26" pos:end="35:27">21</literal><operator pos:start="35:28" pos:end="35:28">)</operator></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:34"><block_content pos:start="37:13" pos:end="37:34">

            <expr_stmt pos:start="37:13" pos:end="37:34"><expr pos:start="37:13" pos:end="37:33"><call pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:21">store_reg</name><argument_list pos:start="37:22" pos:end="37:33">(<argument pos:start="37:23" pos:end="37:23"><expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">s</name></expr></argument>, <argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><name pos:start="37:26" pos:end="37:27">rd</name></expr></argument>, <argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><name pos:start="37:30" pos:end="37:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="39:9" pos:end="41:26">else<block type="pseudo" pos:start="41:13" pos:end="41:26"><block_content pos:start="41:13" pos:end="41:26">

            <expr_stmt pos:start="41:13" pos:end="41:26"><expr pos:start="41:13" pos:end="41:25"><call pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:20">dead_tmp</name><argument_list pos:start="41:21" pos:end="41:25">(<argument pos:start="41:22" pos:end="41:24"><expr pos:start="41:22" pos:end="41:24"><name pos:start="41:22" pos:end="41:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="59:5">else if <condition pos:start="43:15" pos:end="43:32">(<expr pos:start="43:16" pos:end="43:31"><name pos:start="43:16" pos:end="43:19">insn</name> <operator pos:start="43:21" pos:end="43:21">&amp;</operator> <operator pos:start="43:23" pos:end="43:23">(</operator><literal type="number" pos:start="43:24" pos:end="43:24">1</literal> <operator pos:start="43:26" pos:end="43:27">&lt;&lt;</operator> <literal type="number" pos:start="43:29" pos:end="43:30">21</literal><operator pos:start="43:31" pos:end="43:31">)</operator></expr>)</condition> <block pos:start="43:34" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:30">

        <comment type="block" pos:start="45:9" pos:end="45:26">/* Post indexed */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:35"><expr pos:start="47:9" pos:end="47:34"><call pos:start="47:9" pos:end="47:34"><name pos:start="47:9" pos:end="47:23">tcg_gen_mov_i32</name><argument_list pos:start="47:24" pos:end="47:34">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">dest</name></expr></argument>, <argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:48"><if pos:start="49:9" pos:end="51:47">if <condition pos:start="49:12" pos:end="49:29">(<expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:16">insn</name> <operator pos:start="49:18" pos:end="49:18">&amp;</operator> <operator pos:start="49:20" pos:end="49:20">(</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal> <operator pos:start="49:23" pos:end="49:24">&lt;&lt;</operator> <literal type="number" pos:start="49:26" pos:end="49:27">23</literal><operator pos:start="49:28" pos:end="49:28">)</operator></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:47"><block_content pos:start="51:13" pos:end="51:47">

            <expr_stmt pos:start="51:13" pos:end="51:47"><expr pos:start="51:13" pos:end="51:46"><call pos:start="51:13" pos:end="51:46"><name pos:start="51:13" pos:end="51:28">tcg_gen_addi_i32</name><argument_list pos:start="51:29" pos:end="51:46">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">tmp</name></expr></argument>, <argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><name pos:start="51:35" pos:end="51:37">tmp</name></expr></argument>, <argument pos:start="51:40" pos:end="51:45"><expr pos:start="51:40" pos:end="51:45"><name pos:start="51:40" pos:end="51:45">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="53:9" pos:end="55:48">else<block type="pseudo" pos:start="55:13" pos:end="55:48"><block_content pos:start="55:13" pos:end="55:48">

            <expr_stmt pos:start="55:13" pos:end="55:48"><expr pos:start="55:13" pos:end="55:47"><call pos:start="55:13" pos:end="55:47"><name pos:start="55:13" pos:end="55:28">tcg_gen_addi_i32</name><argument_list pos:start="55:29" pos:end="55:47">(<argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:32">tmp</name></expr></argument>, <argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><name pos:start="55:35" pos:end="55:37">tmp</name></expr></argument>, <argument pos:start="55:40" pos:end="55:46"><expr pos:start="55:40" pos:end="55:46"><operator pos:start="55:40" pos:end="55:40">-</operator><name pos:start="55:41" pos:end="55:46">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><call pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:17">store_reg</name><argument_list pos:start="57:18" pos:end="57:29">(<argument pos:start="57:19" pos:end="57:19"><expr pos:start="57:19" pos:end="57:19"><name pos:start="57:19" pos:end="57:19">s</name></expr></argument>, <argument pos:start="57:22" pos:end="57:23"><expr pos:start="57:22" pos:end="57:23"><name pos:start="57:22" pos:end="57:23">rd</name></expr></argument>, <argument pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="61:17">else if <condition pos:start="59:15" pos:end="59:35">(<expr pos:start="59:16" pos:end="59:34"><operator pos:start="59:16" pos:end="59:16">!</operator><operator pos:start="59:17" pos:end="59:17">(</operator><name pos:start="59:18" pos:end="59:21">insn</name> <operator pos:start="59:23" pos:end="59:23">&amp;</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><literal type="number" pos:start="59:26" pos:end="59:26">1</literal> <operator pos:start="59:28" pos:end="59:29">&lt;&lt;</operator> <literal type="number" pos:start="59:31" pos:end="59:32">23</literal><operator pos:start="59:33" pos:end="59:33">)</operator><operator pos:start="59:34" pos:end="59:34">)</operator></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:17"><block_content pos:start="61:9" pos:end="61:17">

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
