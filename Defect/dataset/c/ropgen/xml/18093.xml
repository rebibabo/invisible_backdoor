<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18093.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">finish_frame</name><parameter_list pos:start="1:24" pos:end="1:61">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:54">AVFrame</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">pict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:23">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">RV34DecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">r</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">r</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">got_picture</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>, <decl pos:start="9:26" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:28">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><call pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:19">ff_er_frame_end</name><argument_list pos:start="13:20" pos:end="13:27">(<argument pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:26"><operator pos:start="13:21" pos:end="13:21">&amp;</operator><name pos:start="13:22" pos:end="13:26"><name pos:start="13:22" pos:end="13:22">s</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:26">er</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><call pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:20">ff_mpv_frame_end</name><argument_list pos:start="15:21" pos:end="15:23">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">mb_num_left</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:75"><if pos:start="21:5" pos:end="23:75">if <condition pos:start="21:8" pos:end="21:73">(<expr pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:20">HAVE_THREADS</name> <operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator> <operator pos:start="21:25" pos:end="21:25">(</operator><name pos:start="21:26" pos:end="21:53"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:33">avctx</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:53">active_thread_type</name></name> <operator pos:start="21:55" pos:end="21:55">&amp;</operator> <name pos:start="21:57" pos:end="21:71">FF_THREAD_FRAME</name><operator pos:start="21:72" pos:end="21:72">)</operator></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:75"><block_content pos:start="23:9" pos:end="23:75">

        <expr_stmt pos:start="23:9" pos:end="23:75"><expr pos:start="23:9" pos:end="23:74"><call pos:start="23:9" pos:end="23:74"><name pos:start="23:9" pos:end="23:33">ff_thread_report_progress</name><argument_list pos:start="23:34" pos:end="23:74">(<argument pos:start="23:35" pos:end="23:61"><expr pos:start="23:35" pos:end="23:61"><operator pos:start="23:35" pos:end="23:35">&amp;</operator><name pos:start="23:36" pos:end="23:61"><name pos:start="23:36" pos:end="23:36">s</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:57">current_picture_ptr</name><operator pos:start="23:58" pos:end="23:59">-&gt;</operator><name pos:start="23:60" pos:end="23:61">tf</name></name></expr></argument>, <argument pos:start="23:64" pos:end="23:70"><expr pos:start="23:64" pos:end="23:70"><name pos:start="23:64" pos:end="23:70">INT_MAX</name></expr></argument>, <argument pos:start="23:73" pos:end="23:73"><expr pos:start="23:73" pos:end="23:73"><literal type="number" pos:start="23:73" pos:end="23:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="47:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:58">(<expr pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">pict_type</name></name> <operator pos:start="27:22" pos:end="27:23">==</operator> <name pos:start="27:25" pos:end="27:41">AV_PICTURE_TYPE_B</name> <operator pos:start="27:43" pos:end="27:44">||</operator> <name pos:start="27:46" pos:end="27:57"><name pos:start="27:46" pos:end="27:46">s</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:57">low_delay</name></name></expr>)</condition> <block pos:start="27:60" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:24">

        <if_stmt pos:start="29:9" pos:end="31:23"><if pos:start="29:9" pos:end="31:23">if <condition pos:start="29:12" pos:end="29:70">(<expr pos:start="29:13" pos:end="29:69"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:16">ret</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:64"><name pos:start="29:20" pos:end="29:31">av_frame_ref</name><argument_list pos:start="29:32" pos:end="29:64">(<argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">pict</name></expr></argument>, <argument pos:start="29:39" pos:end="29:63"><expr pos:start="29:39" pos:end="29:63"><name pos:start="29:39" pos:end="29:63"><name pos:start="29:39" pos:end="29:39">s</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:60">current_picture_ptr</name><operator pos:start="29:61" pos:end="29:62">-&gt;</operator><name pos:start="29:63" pos:end="29:63">f</name></name></expr></argument>)</argument_list></call><operator pos:start="29:65" pos:end="29:65">)</operator> <operator pos:start="29:67" pos:end="29:67">&lt;</operator> <literal type="number" pos:start="29:69" pos:end="29:69">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:23"><block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:27">ff_print_debug_info</name><argument_list pos:start="33:28" pos:end="33:54">(<argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><name pos:start="33:29" pos:end="33:29">s</name></expr></argument>, <argument pos:start="33:32" pos:end="33:53"><expr pos:start="33:32" pos:end="33:53"><name pos:start="33:32" pos:end="33:53"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:53">current_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:19">got_picture</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="47:5">else if <condition pos:start="37:15" pos:end="37:43">(<expr pos:start="37:16" pos:end="37:42"><name pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:34">last_picture_ptr</name></name> <operator pos:start="37:36" pos:end="37:37">!=</operator> <name pos:start="37:39" pos:end="37:42">NULL</name></expr>)</condition> <block pos:start="37:45" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:24">

        <if_stmt pos:start="39:9" pos:end="41:23"><if pos:start="39:9" pos:end="41:23">if <condition pos:start="39:12" pos:end="39:67">(<expr pos:start="39:13" pos:end="39:66"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:61"><name pos:start="39:20" pos:end="39:31">av_frame_ref</name><argument_list pos:start="39:32" pos:end="39:61">(<argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><name pos:start="39:33" pos:end="39:36">pict</name></expr></argument>, <argument pos:start="39:39" pos:end="39:60"><expr pos:start="39:39" pos:end="39:60"><name pos:start="39:39" pos:end="39:60"><name pos:start="39:39" pos:end="39:39">s</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:57">last_picture_ptr</name><operator pos:start="39:58" pos:end="39:59">-&gt;</operator><name pos:start="39:60" pos:end="39:60">f</name></name></expr></argument>)</argument_list></call><operator pos:start="39:62" pos:end="39:62">)</operator> <operator pos:start="39:64" pos:end="39:64">&lt;</operator> <literal type="number" pos:start="39:66" pos:end="39:66">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:52"><expr pos:start="43:9" pos:end="43:51"><call pos:start="43:9" pos:end="43:51"><name pos:start="43:9" pos:end="43:27">ff_print_debug_info</name><argument_list pos:start="43:28" pos:end="43:51">(<argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">s</name></expr></argument>, <argument pos:start="43:32" pos:end="43:50"><expr pos:start="43:32" pos:end="43:50"><name pos:start="43:32" pos:end="43:50"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:50">last_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:19">got_picture</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <literal type="number" pos:start="45:23" pos:end="45:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="51:5" pos:end="51:23">return <expr pos:start="51:12" pos:end="51:22"><name pos:start="51:12" pos:end="51:22">got_picture</name></expr>;</return>

</block_content>}</block></function>
</unit>
